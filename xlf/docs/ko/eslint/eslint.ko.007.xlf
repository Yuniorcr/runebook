<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="892290ac7a5821c2d16856260d019953f711502f" translate="yes" xml:space="preserve">
          <source>Variables defined in config files.</source>
          <target state="translated">구성 파일에 정의 된 변수</target>
        </trans-unit>
        <trans-unit id="e7b48dd3dfa48fd2be30f8be1c1607d958c45208" translate="yes" xml:space="preserve">
          <source>Variables in a loop condition often are modified in the loop. If not, it's possibly a mistake.</source>
          <target state="translated">루프 조건의 변수는 종종 루프에서 수정됩니다. 그렇지 않으면 실수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a17ee3a5cb7b17046c7c0ffba2f3dae33af728c" translate="yes" xml:space="preserve">
          <source>Variables must be initialized at declaration (default)</source>
          <target state="translated">선언시 변수를 초기화해야합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="c8ce71ce0391e3c1f3236dc47ecf35e3e114a29e" translate="yes" xml:space="preserve">
          <source>Variables must not be initialized at declaration</source>
          <target state="translated">선언시 변수를 초기화하면 안됩니다</target>
        </trans-unit>
        <trans-unit id="c6ff9a26e1b5b3339f7fd5e3a8a9767b43c9c97f" translate="yes" xml:space="preserve">
          <source>Variables must not be initialized at declaration, except in for loops, where it is allowed</source>
          <target state="translated">허용되는 경우 for 루프를 제외하고 선언시 변수를 초기화하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="bfd7f1b7ef4128d51344a9daf2228af23d80ba06" translate="yes" xml:space="preserve">
          <source>Variables should not be declared in the initialization section of a &lt;code&gt;for&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 문의 초기화 섹션에서 변수를 선언해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c001ee08698935333b13c201a69d90cdf48e3fd" translate="yes" xml:space="preserve">
          <source>Variables that act as constants (values that won't be changed) should be formatted using all uppercase letters with words separated by a single underscore.</source>
          <target state="translated">상수 역할을하는 변수 (변경되지 않는 값)는 단일 밑줄로 구분 된 단어와 함께 모든 대문자를 사용하여 형식을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e99b317be9905e39e1a207a58f6e60f75b0fe6f" translate="yes" xml:space="preserve">
          <source>Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.</source>
          <target state="translated">코드에서 선언되고 사용되지 않은 변수는 불완전한 리팩토링으로 인해 오류 일 가능성이 높습니다. 이러한 변수는 코드에서 공간을 차지하므로 독자가 혼동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c74715246fd4d194bd4188a3a75791e4b702dc5b" translate="yes" xml:space="preserve">
          <source>Variables that should be &lt;code&gt;undefined&lt;/code&gt; are simply left uninitialized. (All uninitialized variables automatically get the value of &lt;code&gt;undefined&lt;/code&gt; in JavaScript.)</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 변수 는 단순히 초기화되지 않은 상태로 유지됩니다. 초기화되지 않은 모든 변수 는 JavaScript에서 &lt;code&gt;undefined&lt;/code&gt; 값을 자동으로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c9e0a5d87acbaea46b5478bcb73fad51d8fd6826" translate="yes" xml:space="preserve">
          <source>Various whitespace characters can be inputted by programmers by mistake for example from copying or keyboard shortcuts. Pressing Alt + Space on macOS adds in a non breaking space character for example.</source>
          <target state="translated">프로그래머는 실수로 복사 또는 키보드 단축키와 같은 다양한 공백 문자를 입력 할 수 있습니다. 예를 들어 macOS에서 Alt + Space를 누르면 공백이 아닌 문자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="85447ed9d63f1204cb8d98c10d07fa44bffd575f" translate="yes" xml:space="preserve">
          <source>Verify calls of &lt;code&gt;super()&lt;/code&gt; in constructors (constructor-super)</source>
          <target state="translated">생성자에서 &lt;code&gt;super()&lt;/code&gt; 호출 확인 (constructor-super)</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="97d4ee0ebcffa2551648daf9af67c8a9b436fca2" translate="yes" xml:space="preserve">
          <source>Version control systems sometimes have special behavior for linebreaks. To make it easy for developers to contribute to your codebase from different platforms, you may want to configure your VCS to handle linebreaks appropriately.</source>
          <target state="translated">버전 관리 시스템은 때때로 줄 바꿈에 대해 특별한 동작을합니다. 개발자가 다양한 플랫폼에서 코드베이스에 쉽게 기여할 수 있도록 VCS를 구성하여 줄 바꿈을 적절하게 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f9cfd066fc0985106023b392c00252b116102c" translate="yes" xml:space="preserve">
          <source>Very long lines of code in any language can be difficult to read. In order to aid in readability and maintainability many coders have developed a convention to limit lines of code to X number of characters (traditionally 80 characters).</source>
          <target state="translated">모든 언어의 매우 긴 코드 줄은 읽기 어려울 수 있습니다. 가독성과 유지 관리 성을 돕기 위해 많은 코더는 코드 줄을 X 문자 수 (전통적으로 80 자)로 제한하는 규칙을 개발했습니다.</target>
        </trans-unit>
        <trans-unit id="584ebc802dcce40efe78e737e24b45e2d537c06c" translate="yes" xml:space="preserve">
          <source>Very short identifier names like &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;_t&lt;/code&gt; or very long ones like &lt;code&gt;hashGeneratorResultOutputContainerObject&lt;/code&gt; can make code harder to read and potentially less maintainable. To prevent this, one may enforce a minimum and/or maximum identifier length.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;_t&lt;/code&gt; 와 같은 매우 짧은 식별자 이름 또는 &lt;code&gt;hashGeneratorResultOutputContainerObject&lt;/code&gt; 와 같은 매우 긴 식별자 이름 은 코드를 읽기 어렵고 잠재적으로 유지 관리하기가 쉽지 않습니다. 이를 방지하기 위해, 최소 및 / 또는 최대 식별자 길이를 시행 할 수있다.</target>
        </trans-unit>
        <trans-unit id="14a6eae4840d70e1008eaa9e5de7d019a31c7b73" translate="yes" xml:space="preserve">
          <source>Vim:</source>
          <target state="translated">Vim:</target>
        </trans-unit>
        <trans-unit id="91ad776df06e55e887b661baf20d704d31aca239" translate="yes" xml:space="preserve">
          <source>Visual Studio Code: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint Extension&lt;/a&gt;</source>
          <target state="translated">Visual Studio 코드 : &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint 확장&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db74b0813fc54ab1954f585e68f426fa2dae2151" translate="yes" xml:space="preserve">
          <source>Want to make a change to an existing rule? This section explains the process and how we evaluate such proposals.</source>
          <target state="translated">기존 규칙을 변경 하시겠습니까? 이 섹션에서는 프로세스와 이러한 제안을 평가하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="aa01e84dc33f606dadcb9953b4367629a4af246e" translate="yes" xml:space="preserve">
          <source>Want to skip ahead and just start using ESLint? This section gives a high-level overview of installation, setup, and configuration options.</source>
          <target state="translated">앞서 건너 뛰고 ESLint를 사용하기 시작하고 싶습니까? 이 섹션에서는 설치, 설정 및 구성 옵션에 대한 고급 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f19b7cfb75065744f09c3f3dbd1dd8602fb5742" translate="yes" xml:space="preserve">
          <source>Warning: a promise was rejected with a non-error</source>
          <target state="translated">경고 : 약속은 오류가 아닌 것으로 거부되었습니다</target>
        </trans-unit>
        <trans-unit id="e8c03ef8e0919bf50f1a8491261b96a94272575b" translate="yes" xml:space="preserve">
          <source>Warns whenever &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; is used in the global scope such that it could contaminate concatenated files.</source>
          <target state="translated">연결된 파일을 오염시킬 수 있도록 전역 범위에서 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 이 사용될 때마다 경고 합니다.</target>
        </trans-unit>
        <trans-unit id="862cf79158d46c84f106f5399e9001e0931a8c82" translate="yes" xml:space="preserve">
          <source>We can embed expressions in template strings with using a pair of &lt;code&gt;${&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;${&lt;/code&gt; 과 &lt;code&gt;}&lt;/code&gt; 쌍을 사용하여 템플릿 문자열에 표현식을 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c5a902008a05777020d1e0667971fb4a844bf34" translate="yes" xml:space="preserve">
          <source>We cannot modify variables that are declared using &lt;code&gt;const&lt;/code&gt; keyword. It will raise a runtime error.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 키워드를 사용하여 선언 된 변수는 수정할 수 없습니다 . 런타임 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a15e550937b9a265d4784deb7bacb70d802adae3" translate="yes" xml:space="preserve">
          <source>We found some bugs in our scope analysis that needed to be addressed. Specifically, we were not properly accounting for global variables in all the ways they are defined.</source>
          <target state="translated">범위 분석에서 해결해야 할 몇 가지 버그가 발견되었습니다. 구체적으로, 우리는 정의 된 모든 방식으로 전역 변수를 제대로 설명하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="6bfb630517b3d4cb1d3083f6fd0e14a3770dd201" translate="yes" xml:space="preserve">
          <source>We get a lot of proposals for new rules in ESLint. This section explains how we determine which rules are accepted and what information you should provide to help us evaluate your proposal.</source>
          <target state="translated">ESLint에는 새로운 규칙에 대한 제안이 많이 있습니다. 이 섹션에서는 승인 된 규칙을 결정하는 방법과 제안을 평가하는 데 도움이되는 정보를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="32129814c6be2f4221beec5e8923016c3c8da569" translate="yes" xml:space="preserve">
          <source>We hope that by following these guidelines we will be able to continue improving and working to make ESLint the best tool it can be while causing as little disruption to our users as possible during the process.</source>
          <target state="translated">이 지침을 따르면 ESLint를 프로세스 중에 가능한 한 사용자에게 거의 지장을주지 않으면 서 ESLint를 최상의 도구로 만들기 위해 지속적으로 개선하고 노력할 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="bc68a58faf81b9993b43de6f1d7e5591db60891c" translate="yes" xml:space="preserve">
          <source>We may ask you to make changes, rebase, or squash your commits.</source>
          <target state="translated">커밋을 변경하거나 리베이스하거나 스쿼시하도록 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be531f0e502915f32cc4ed514f6cfe1d76954139" translate="yes" xml:space="preserve">
          <source>We need all of this information in order to determine whether or not the change is a good candidate for inclusion.</source>
          <target state="translated">변경이 포함에 적합한 지 여부를 결정하려면이 모든 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="13e23ea2d55941a7a936ff6af2c7bd00ea304737" translate="yes" xml:space="preserve">
          <source>We need all of this information in order to determine whether or not the rule is a good core rule candidate.</source>
          <target state="translated">규칙이 올바른 핵심 규칙 후보인지 여부를 판별하려면이 모든 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d52ee6fc1b0c59a8b592728b6b5dfb705e48d68a" translate="yes" xml:space="preserve">
          <source>We use labels to indicate the status of issues. The most complete documentation on the labels is found in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#when-an-issue-is-opened&quot;&gt;Maintainer Guide&lt;/a&gt;, but most contributors should find the information on this page sufficient. The most important questions that labels can help you, as a contributor, answer are:</source>
          <target state="translated">레이블을 사용하여 문제의 상태를 나타냅니다. 레이블에 대한 가장 완전한 문서는 &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#when-an-issue-is-opened&quot;&gt;유지 관리자 안내서&lt;/a&gt; 에서 찾을 수 있지만 대부분의 기여자는이 페이지의 정보로 충분합니다. 레이블이 기여자에게 도움이 될 수있는 가장 중요한 질문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76127d70180cb6a86e3b0d95edc18d737fb0c703" translate="yes" xml:space="preserve">
          <source>We use labels to indicate the status of issues. The most complete documentation on the labels is found in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#when-an-issue-is-opened&quot;&gt;Maintainer Guide&lt;/a&gt;, but most contributors should find the information on this page sufficient. The most important questions that labels can help you, as a contributor, answer are:</source>
          <target state="translated">라벨을 사용하여 문제의 상태를 나타냅니다. 레이블에 대한 가장 완전한 문서는 &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#when-an-issue-is-opened&quot;&gt;관리자 안내서&lt;/a&gt; 에 있지만 대부분의 기고자는이 페이지의 정보가 충분해야합니다. 기고자로서 답변 할 수있는 가장 중요한 질문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fd0b33554faf50e6fb5d78c7badaed2df6f5a2b2" translate="yes" xml:space="preserve">
          <source>We're always looking for contributions from the community. This section explains the requirements for pull requests and the process of contributing code.</source>
          <target state="translated">우리는 항상 지역 사회의 공헌을 찾고 있습니다. 이 섹션에서는 풀 요청에 대한 요구 사항 및 코드 제공 프로세스에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1de59a98d6b9c70fbf9f8b419711208bf9e9bf8d" translate="yes" xml:space="preserve">
          <source>Webpack: &lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;웹팩&lt;/a&gt; : eslint-loader</target>
        </trans-unit>
        <trans-unit id="5ed4e32e49be2270ae811eb311f973d2da9a9479" translate="yes" xml:space="preserve">
          <source>Webpack: &lt;a href=&quot;https://www.npmjs.com/package/eslint-webpack-plugin&quot;&gt;eslint-webpack-plugin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/eslint-webpack-plugin&quot;&gt;웹팩&lt;/a&gt; : eslint-webpack-plugin</target>
        </trans-unit>
        <trans-unit id="6ba525c7d4c75ba8b5f7dce088f61242a494e7bf" translate="yes" xml:space="preserve">
          <source>What actually happened.</source>
          <target state="translated">실제로 일어난 일.</target>
        </trans-unit>
        <trans-unit id="df224434e65934e06d2644009972ca3b020b97e8" translate="yes" xml:space="preserve">
          <source>What can selectors be used for?</source>
          <target state="translated">선택기는 무엇을 위해 사용될 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="48681659913bbea6a16673eed0fa9cebd2513f10" translate="yes" xml:space="preserve">
          <source>What is a selector?</source>
          <target state="translated">선택기 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="0465271c771ae7129e8e463a09cff2488f5861e4" translate="yes" xml:space="preserve">
          <source>What is the matter with script-targeted URLs?</source>
          <target state="translated">스크립트 대상 URL의 문제는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="775aca44e303c9a28765a76261e77703f8d71221" translate="yes" xml:space="preserve">
          <source>What is the priority of this issue? Because we have a lot of issues, we prioritize certain issues above others. The following is the list of priorities, from highest to lowest:</source>
          <target state="translated">이 문제의 우선 순위는 무엇입니까? 많은 문제가 있기 때문에 특정 문제를 다른 문제보다 우선합니다. 다음은 가장 높은 것부터 가장 낮은 것까지의 우선 순위 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a6034cda9e3bc4426f1a95f9aa43ca0e804ff990" translate="yes" xml:space="preserve">
          <source>What is this issue about? Labels describing the nature of issues include &lt;code&gt;bug&lt;/code&gt;, &lt;code&gt;enhancement&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;rule&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;cli&lt;/code&gt;, &lt;code&gt;infrastructure&lt;/code&gt;, &lt;code&gt;breaking&lt;/code&gt;, and &lt;code&gt;chore&lt;/code&gt;. These are documented in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#types-of-issues&quot;&gt;Maintainer Guide&lt;/a&gt;.</source>
          <target state="translated">이 문제는 무엇입니까? 문제의 특성을 설명하는 레이블에는 &lt;code&gt;bug&lt;/code&gt; , &lt;code&gt;enhancement&lt;/code&gt; , &lt;code&gt;feature&lt;/code&gt; , &lt;code&gt;question&lt;/code&gt; , &lt;code&gt;rule&lt;/code&gt; , &lt;code&gt;documentation&lt;/code&gt; , &lt;code&gt;core&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;cli&lt;/code&gt; , &lt;code&gt;infrastructure&lt;/code&gt; , &lt;code&gt;breaking&lt;/code&gt; 및 &lt;code&gt;chore&lt;/code&gt; 됩니다. 이것들은 &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#types-of-issues&quot;&gt;관리자 안내서에&lt;/a&gt; 문서화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="61f99ec705c943f1f33d040995e8f627884b7cf0" translate="yes" xml:space="preserve">
          <source>What is this issue about? Labels describing the nature of issues include &lt;code&gt;bug&lt;/code&gt;, &lt;code&gt;enhancement&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;rule&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;cli&lt;/code&gt;, &lt;code&gt;infrastructure&lt;/code&gt;, &lt;code&gt;breaking&lt;/code&gt;, and &lt;code&gt;chore&lt;/code&gt;. These are documented in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#types-of-issues&quot;&gt;Maintainer Guide&lt;/a&gt;.</source>
          <target state="translated">이 문제는 무엇입니까? 문제의 성격을 설명하는 레이블에는 &lt;code&gt;bug&lt;/code&gt; , &lt;code&gt;enhancement&lt;/code&gt; , &lt;code&gt;feature&lt;/code&gt; , &lt;code&gt;question&lt;/code&gt; , &lt;code&gt;rule&lt;/code&gt; , &lt;code&gt;documentation&lt;/code&gt; , &lt;code&gt;core&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;cli&lt;/code&gt; , &lt;code&gt;infrastructure&lt;/code&gt; , &lt;code&gt;breaking&lt;/code&gt; 및 &lt;code&gt;chore&lt;/code&gt; 됩니다. 이들은 &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#types-of-issues&quot;&gt;관리자 안내서에 설명되어&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa2641da62c4ca7255239f5379f36bbc6fa2b626" translate="yes" xml:space="preserve">
          <source>What syntax can selectors have?</source>
          <target state="translated">선택기에는 어떤 구문이있을 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="1537187228a7d0b7ed7c46e70ca704aef31c32b2" translate="yes" xml:space="preserve">
          <source>What you did.</source>
          <target state="translated">당신이 한.</target>
        </trans-unit>
        <trans-unit id="cb3d4d3c0898e5969ef92d5a6fdc5f3dff29f7fc" translate="yes" xml:space="preserve">
          <source>What you would like to happen.</source>
          <target state="translated">당신이하고 싶은 일.</target>
        </trans-unit>
        <trans-unit id="ec81f2d3245914f53c71d54b78924b60e8b83eb2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;allowAsStatement&lt;/code&gt; is set to true, the rule will not error on cases that the void operator is used as a statement, i.e. when it's not used in an expression position, like in a variable assignment or a function return.</source>
          <target state="translated">&lt;code&gt;allowAsStatement&lt;/code&gt; 가 true로 설정 되면 void 연산자가 문으로 사용되는 경우, 즉 변수 할당이나 함수 반환과 같이 표현식 위치에서 사용되지 않는 경우 규칙이 오류를 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f6d2f2ba994f4fcaeb610687ed73d9211b99fa6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, this rule ignores classes.</source>
          <target state="translated">때 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 이 설정되어 &lt;code&gt;false&lt;/code&gt; 이 규칙은 클래스를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="4136f0fba4d3da85f249511892895b2f4758a9c9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; (default):</source>
          <target state="translated">때 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 이 설정되어 &lt;code&gt;true&lt;/code&gt; (기본값) :</target>
        </trans-unit>
        <trans-unit id="ccb746b4270f3fbe6b3dc6cea0e17fb49e243ff5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow unnecessary computed keys inside of class methods, getters and setters.</source>
          <target state="translated">&lt;code&gt;enforceForClassMembers&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 규칙은 클래스 메소드, getter 및 setter 내에서 불필요한 계산 키를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8e281894a6a86cc5aed5d6044cfed2f796dc660" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow/enforce spaces inside of computed keys of class methods, getters and setters.</source>
          <target state="translated">&lt;code&gt;enforceForClassMembers&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 규칙은 클래스 메소드, getter 및 setter의 계산 된 키 내부에 공백을 허용하지 않거나 적용합니다.</target>
        </trans-unit>
        <trans-unit id="68a1046091137dc0b64b7621009bdfae020aa50f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">때 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 이 설정되어 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="46f10156c1c0c83d5de119c4bfb392f72cf07913" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; the rule checks the sorting of import declaration statements only for those that appear on consecutive lines.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; 규칙 검사에만 연속 선에 나타나는 사람들을 위해 수입 신고 문의 정렬.</target>
        </trans-unit>
        <trans-unit id="40b208892363d77f54120b64383b5efd376dd4db" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; the rule ignores the case-sensitivity of the imports local name.</source>
          <target state="translated">때 &lt;code&gt;true&lt;/code&gt; 규칙은 수입 로컬 이름의 대소 문자 구분을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="2cf47cb024ed61b3595a6bac6d753c88a516200e" translate="yes" xml:space="preserve">
          <source>When ESLint is run, it looks in the current working directory to find an &lt;code&gt;.eslintignore&lt;/code&gt; file before determining which files to lint. If this file is found, then those preferences are applied when traversing directories. Only one &lt;code&gt;.eslintignore&lt;/code&gt; file can be used at a time, so &lt;code&gt;.eslintignore&lt;/code&gt; files other than the one in the current working directory will not be used.</source>
          <target state="translated">ESLint가 실행되면 현재 작업 디렉토리 에서 보풀 할 파일을 결정하기 전에 &lt;code&gt;.eslintignore&lt;/code&gt; 파일 을 찾습니다 . 이 파일을 찾으면 디렉토리를 통과 할 때 해당 환경 설정이 적용됩니다. 한 번에 하나의 &lt;code&gt;.eslintignore&lt;/code&gt; 파일 만 사용할 수 있으므로 현재 작업 디렉토리에있는 파일 이외의 &lt;code&gt;.eslintignore&lt;/code&gt; 파일은 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="20c60a58611ef4be8a577170cdc4a73e06a4d3c9" translate="yes" xml:space="preserve">
          <source>When ESLint v5 encounters a plugin name in a config starting with &lt;code&gt;@&lt;/code&gt;, the plugin will be resolved as a &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped npm package&lt;/a&gt;. For example, if a config contains &lt;code&gt;&quot;plugins&quot;: [&quot;@foo&quot;]&lt;/code&gt;, ESLint v5 will attempt to load a package called &lt;code&gt;@foo/eslint-plugin&lt;/code&gt;. (On the other hand, ESLint v4 would attempt to load a package called &lt;code&gt;eslint-plugin-@foo&lt;/code&gt;.) This is a breaking change because users might have been relying on ESLint finding a package at &lt;code&gt;node_modules/eslint-plugin-@foo&lt;/code&gt;. However, we think it is unlikely that many users were relying on this behavior, because packages published to npm cannot contain an &lt;code&gt;@&lt;/code&gt; character in the middle.</source>
          <target state="translated">ESLint v5가 &lt;code&gt;@&lt;/code&gt; 로 시작하는 구성에서 플러그인 이름을 발견하면 플러그인 은 &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;범위&lt;/a&gt; 가 지정된 npm 패키지 로 해석됩니다 . 예를 들어, 구성에 &lt;code&gt;&quot;plugins&quot;: [&quot;@foo&quot;]&lt;/code&gt; 경우 ESLint v5는 &lt;code&gt;@foo/eslint-plugin&lt;/code&gt; 이라는 패키지를로드하려고 시도합니다 . (반면, ESLint v4는 &lt;code&gt;eslint-plugin-@foo&lt;/code&gt; 라는 패키지를로드하려고 시도합니다 .) 이는 사용자가 &lt;code&gt;node_modules/eslint-plugin-@foo&lt;/code&gt; 에서 패키지를 찾는 ESLint에 의존했기 때문에 주요 변경 사항 입니다. 그러나 npm에 게시 된 패키지 는 중간에 &lt;code&gt;@&lt;/code&gt; 문자를 포함 할 수 없으므로 많은 사용자가이 동작에 의존하지 않았을 것으로 생각합니다 .</target>
        </trans-unit>
        <trans-unit id="dcf004efe477be5ae8d2e40ee02553789c8aae8c" translate="yes" xml:space="preserve">
          <source>When Not To Use It</source>
          <target state="translated">사용하지 않을 때</target>
        </trans-unit>
        <trans-unit id="203bf27409f5059980a9d42a50302c0e413f564e" translate="yes" xml:space="preserve">
          <source>When Object.assign is called using an object literal as the first argument, this rule requires using the object spread syntax instead. This rule also warns on cases where an &lt;code&gt;Object.assign&lt;/code&gt; call is made using a single argument that is an object literal, in this case, the &lt;code&gt;Object.assign&lt;/code&gt; call is not needed.</source>
          <target state="translated">첫 번째 인수로 객체 리터럴을 사용하여 Object.assign을 호출하면이 규칙에 대신 객체 스프레드 구문을 사용해야합니다. 이 규칙은 또한 객체 리터럴 인 단일 인수를 사용하여 &lt;code&gt;Object.assign&lt;/code&gt; 호출이 수행 되는 경우에도 경고합니다. 이 경우 &lt;code&gt;Object.assign&lt;/code&gt; 호출이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9415933a71300f2c36380de3c9e37825354a76b1" translate="yes" xml:space="preserve">
          <source>When a directive occurs at the beginning of a function body, strict mode applies only to that function, including all contained functions:</source>
          <target state="translated">지시문이 함수 본문의 시작 부분에서 발생하면 엄격 모드는 포함 된 모든 함수를 포함하여 해당 함수에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b945b44625e4e412ba636475a99a55bd8a52dc3" translate="yes" xml:space="preserve">
          <source>When a directive occurs in global scope, strict mode applies to the entire script:</source>
          <target state="translated">지시문이 전역 범위에서 발생하면 엄격 모드는 전체 스크립트에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="a30d8cb41b0fa860deedfaa169603263cea9c978" translate="yes" xml:space="preserve">
          <source>When a project does not have a configuration file present and ESLint loads configuration from &lt;code&gt;~/.eslintrc.*&lt;/code&gt;.</source>
          <target state="translated">프로젝트에 구성 파일이없고 ESLint가 &lt;code&gt;~/.eslintrc.*&lt;/code&gt; 에서 구성을로드하는 경우 .</target>
        </trans-unit>
        <trans-unit id="46284c49ccd0c149c8f6e69222aceadcf75b2df0" translate="yes" xml:space="preserve">
          <source>When a project has a configuration file and ESLint ignored a &lt;code&gt;~/.eslintrc.*&lt;/code&gt; configuration file. This occurs when the &lt;code&gt;$HOME&lt;/code&gt; directory is an ancestor directory of the project and the project's configuration files doesn't contain &lt;code&gt;root:true&lt;/code&gt;.</source>
          <target state="translated">프로젝트에 구성 파일이 있고 ESLint가 &lt;code&gt;~/.eslintrc.*&lt;/code&gt; 구성 파일을 무시하는 경우. 이는 &lt;code&gt;$HOME&lt;/code&gt; 디렉토리가 프로젝트의 상위 디렉토리이고 프로젝트의 구성 파일에 &lt;code&gt;root:true&lt;/code&gt; 가 포함되지 않은 경우 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="a7f8c7885496fcc670036ffbd015d93514a470ea" translate="yes" xml:space="preserve">
          <source>When a project may use non-strict-mode code side by side with strict-mode code and the files are not concatenated, the decision to use global strict mode can be made on an individual basis, rendering this rule unnecessary.</source>
          <target state="translated">프로젝트가 엄격 모드 코드와 함께 엄격하지 않은 모드 코드를 함께 사용할 수 있고 파일이 연결되지 않은 경우 전역 엄격 모드를 사용하기로 결정하면이 규칙을 불필요하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d6a34d5119355a848730521094d00727d56e9fe" translate="yes" xml:space="preserve">
          <source>When a regular expression is known in advance, it is considered a best practice to avoid the string literal notation on top of the regular expression notation, and use regular expression literals instead of the constructor function.</source>
          <target state="translated">정규 표현식을 미리 알고있는 경우 정규 표현식 표기법에서 문자열 리터럴 표기법을 피하고 생성자 함수 대신 정규 표현식 리터럴을 사용하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="32e97b30949ce30d41853730be6d215853600032" translate="yes" xml:space="preserve">
          <source>When a regular expression is used in certain situations, it can end up looking like a division operator. For example:</source>
          <target state="translated">특정 상황에서 정규식을 사용하면 나누기 연산자처럼 보일 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e7de0f6154b5bffb994130a27056acf849724645" translate="yes" xml:space="preserve">
          <source>When a statement is too long to fit on a single line, line breaks are generally inserted next to the operators separating expressions. The first style coming to mind would be to place the operator at the end of the line, following the English punctuation rules.</source>
          <target state="translated">명령문이 단일 행에 맞추기에는 너무 긴 경우 일반적으로 표현식을 분리하는 연산자 옆에 줄 바꿈이 삽입됩니다. 가장 먼저 떠오르는 스타일은 영어 문장 부호 규칙에 따라 연산자를 줄 끝에 배치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="93fb5fcb22010c57c3b649a0a8088840131fb0ad" translate="yes" xml:space="preserve">
          <source>When a value for &lt;code&gt;generators&lt;/code&gt; is not provided the behavior for generator functions falls back to the base option.</source>
          <target state="translated">&lt;code&gt;generators&lt;/code&gt; 의 값 이 제공되지 않으면 제너레이터 기능의 동작이 기본 옵션으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="ba329c57c39515909a5b2d824e3d5ce52ed9f493" translate="yes" xml:space="preserve">
          <source>When an object is created with the &lt;code&gt;new&lt;/code&gt; operator, &lt;code&gt;__proto__&lt;/code&gt; is set to the original &quot;prototype&quot; property of the object's constructor function. &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; is the preferred method of getting the object's prototype. To change an object's prototype, use &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 연산자를 사용하여 객체를 &lt;code&gt;__proto__&lt;/code&gt; 가 객체 생성자 함수의 원래 &quot;prototype&quot;속성으로 설정됩니다. &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; 는 객체의 프로토 타입을 얻는 데 선호되는 방법입니다. 객체의 프로토 타입을 변경하려면 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0bba3e468f3e8751ba8be23bf966776db6059a6" translate="yes" xml:space="preserve">
          <source>When an object literal is passed to a function, the opening brace should be on the same line as if the value is a variable. All other formatting rules from above still apply.</source>
          <target state="translated">객체 리터럴이 함수에 전달 될 때 여는 중괄호는 값이 변수 인 것과 같은 줄에 있어야합니다. 위의 다른 모든 형식 규칙이 계속 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="e3b642b0ab807b653ce30cde6cabc5b5d00ea7af" translate="yes" xml:space="preserve">
          <source>When assigning a value to a variable, use parentheses around a right-side expression that contains a comparison.</source>
          <target state="translated">변수에 값을 지정할 때는 비교가 포함 된 오른쪽 표현식 주위에 괄호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a152c3fe98d6af849e4f2641cb3aa3e4d5c168d4" translate="yes" xml:space="preserve">
          <source>When calling a function, developers may insert optional whitespace between the function's name and the parentheses that invoke it. The following pairs of function calls are equivalent:</source>
          <target state="translated">함수를 호출 할 때 개발자는 함수 이름과 함수를 호출하는 괄호 사이에 선택적 공백을 삽입 할 수 있습니다. 다음 함수 호출 쌍은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="abe6033e5821a616ecbd384ea21e99fdaefa9553" translate="yes" xml:space="preserve">
          <source>When comparing two selectors, the selector that contains more class selectors, attribute selectors, and pseudo-class selectors (excluding &lt;code&gt;:not()&lt;/code&gt;) has higher specificity.</source>
          <target state="translated">두 선택기를 비교할 때 더 많은 클래스 선택기, 속성 선택기 및 의사 클래스 선택기가 포함 된 선택기 ( &lt;code&gt;:not()&lt;/code&gt; 제외 )가 더 높은 특이성을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="563a2a9cd7c563ab5d8ae53b0347fa95ec09e16a" translate="yes" xml:space="preserve">
          <source>When creating a config, users sometimes make typos or misunderstand how the config is supposed to be structured. Previously, ESLint did not validate the properties of a config file, so a typo in a config could be very tedious to debug. Starting in 4.0.0, ESLint will raise an error if a property in a config file is unrecognized or has the wrong type.</source>
          <target state="translated">구성을 만들 때 사용자는 구성을 어떻게 구성해야하는지 오타하거나 오해하기도합니다. 이전에는 ESLint가 구성 파일의 속성을 확인하지 않았으므로 구성의 오타가 디버깅하는 데 매우 지루할 수 있습니다. 4.0.0부터는 구성 파일의 속성이 인식되지 않거나 잘못된 유형 인 경우 ESLint에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ea29648e037edef7cafa09376284dc4afc1ee408" translate="yes" xml:space="preserve">
          <source>When declaring multiple imports, a sorted list of import declarations make it easier for developers to read the code and find necessary imports later. This rule is purely a matter of style.</source>
          <target state="translated">여러 가져 오기를 선언 할 때 정렬 된 가져 오기 선언 목록을 사용하면 개발자가 코드를 읽고 나중에 필요한 가져 오기를 쉽게 찾을 수 있습니다. 이 규칙은 순전히 스타일의 문제입니다.</target>
        </trans-unit>
        <trans-unit id="01f73904c501ed9b42d55242c8ae09f4b585afda" translate="yes" xml:space="preserve">
          <source>When declaring multiple properties, some developers prefer to sort property names alphabetically to be able to find necessary property easier at the later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">여러 속성을 선언 할 때 일부 개발자는 나중에 필요한 속성을 쉽게 찾을 수 있도록 속성 이름을 사전 순으로 정렬하는 것을 선호합니다. 다른 사람들은 그것이 복잡성을 더하고 유지해야하는 부담이된다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="8c9ac822b8cc57027669f91308f76ff1f841fe4a" translate="yes" xml:space="preserve">
          <source>When declaring multiple properties, some developers prefer to sort property names alphabetically to more easily find and/or diff necessary properties at a later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">여러 속성을 선언 할 때 일부 개발자는 나중에 필요한 속성을 더 쉽게 찾거나 비교하기 위해 속성 이름을 알파벳순으로 정렬하는 것을 선호합니다. 다른 사람들은 그것이 복잡성을 추가하고 유지 관리에 부담이된다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="dbb2dab6a276d490636b69d0d44fa2ec1e3a9d07" translate="yes" xml:space="preserve">
          <source>When declaring multiple variables within the same block, some developers prefer to sort variable names alphabetically to be able to find necessary variable easier at the later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">동일한 블록 내에서 여러 변수를 선언 할 때 일부 개발자는 나중에 필요한 변수를 쉽게 찾을 수 있도록 변수 이름을 사전 순으로 정렬하는 것을 선호합니다. 다른 사람들은 그것이 복잡성을 더하고 유지해야하는 부담이된다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="509fcabb27dd7cfdfd2baa30eff71f1794f79697" translate="yes" xml:space="preserve">
          <source>When developing in the ESLint core repository, the &lt;code&gt;npm run perf&lt;/code&gt; command gives a high-level overview of ESLint running time with all core rules enabled.</source>
          <target state="translated">ESLint 코어 저장소에서 개발할 때 &lt;code&gt;npm run perf&lt;/code&gt; 명령은 모든 코어 규칙이 활성화 된 ESLint 실행 시간에 대한 고급 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9869fdd0a7363425715523b58b04c8e8afd5398f" translate="yes" xml:space="preserve">
          <source>When developing with a lot of people all having different editors, VCS applications and operating systems it may occur that different line endings are written by either of the mentioned (might especially happen when using the windows and mac versions of SourceTree together).</source>
          <target state="translated">모두 다른 편집자, VCS 응용 프로그램 및 운영 체제를 가진 많은 사람들과 함께 개발할 때 언급 된 것 중 하나에 의해 다른 줄 끝이 작성 될 수 있습니다 (특히 Windows 및 Mac 버전의 SourceTree를 함께 사용할 때 발생할 수 있음).</target>
        </trans-unit>
        <trans-unit id="24528f592879fc6dbe5e5bdfc58507e869312f54" translate="yes" xml:space="preserve">
          <source>When formatting a function, whitespace is allowed between the function name or &lt;code&gt;function&lt;/code&gt; keyword and the opening paren. Named functions also require a space between the &lt;code&gt;function&lt;/code&gt; keyword and the function name, but anonymous functions require no whitespace. For example:</source>
          <target state="translated">함수를 형식화 할 때 함수 이름 또는 &lt;code&gt;function&lt;/code&gt; 키워드와 여는 부분 사이에 공백이 허용 됩니다. 명명 된 함수에는 &lt;code&gt;function&lt;/code&gt; 키워드와 함수 이름 사이에 공백이 필요하지만 익명 함수에는 공백이 필요하지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51a7c81608a2fb4ade673c3238c1ff45f26efbdd" translate="yes" xml:space="preserve">
          <source>When it comes to naming variables, style guides generally fall into one of two camps: camelcase (&lt;code&gt;variableName&lt;/code&gt;) and underscores (&lt;code&gt;variable_name&lt;/code&gt;). This rule focuses on using the camelcase approach. If your style guide calls for camelCasing your variable names, then this rule is for you!</source>
          <target state="translated">이름 지정 변수와 관련하여 스타일 안내서는 일반적으로 두 개의 캠프 중 하나 인 camelcase ( &lt;code&gt;variableName&lt;/code&gt; ) 및 밑줄 ( &lt;code&gt;variable_name&lt;/code&gt; )에 속합니다 . 이 규칙은 낙타 접근 방식에 중점을 둡니다. 스타일 가이드가 camelCasing 변수 이름을 요구하는 경우이 규칙이 적합합니다!</target>
        </trans-unit>
        <trans-unit id="da97dfc5cde15902d5f22cd88a96b7bbda7598f6" translate="yes" xml:space="preserve">
          <source>When linting files, ESLint will exit with one of the following exit codes:</source>
          <target state="translated">파일을 린트 할 때 ESLint는 다음 종료 코드 중 하나로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="ffc50d3c200d0e69215126757fd5407d7f1e935d" translate="yes" xml:space="preserve">
          <source>When on a separate line, a single-line comment should be at the same indentation level as the code it describes and be preceded by a single line. Never use multiple single-line comments on consecutive lines, use a multi-line comment instead.</source>
          <target state="translated">별도의 줄에있을 때 한 줄 주석은 설명하는 코드와 동일한 들여 쓰기 수준이어야하며 앞에 한 줄이 와야합니다. 연속 줄에 여러 줄 주석을 사용하지 말고 대신 여러 줄 주석을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0119aba772e3768887d5d3d6f3e7c08c6156ce21" translate="yes" xml:space="preserve">
          <source>When parentheses are used, there should be no whitespace immediately after the opening paren or immediately before the closing paren.</source>
          <target state="translated">괄호를 사용하는 경우 여는 괄호 바로 뒤에 또는 닫는 괄호 바로 앞에 공백이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="e92b56b46fd3333c3c86b73a448970aa9cd1f7a3" translate="yes" xml:space="preserve">
          <source>When parsing JSX code like &lt;code&gt;&amp;lt;a&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt;, the default parser will now give the &lt;code&gt;foo&lt;/code&gt; AST node the &lt;code&gt;JSXText&lt;/code&gt; type, rather than the &lt;code&gt;Literal&lt;/code&gt; type. This makes the AST compliant with a recent update to the JSX spec.</source>
          <target state="translated">&lt;code&gt;&amp;lt;a&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt; 와 같은 JSX 코드를 구문 분석 할 때 기본 구문 분석기는 이제 &lt;code&gt;Literal&lt;/code&gt; 유형이 아닌 &lt;code&gt;foo&lt;/code&gt; AST 노드에 &lt;code&gt;JSXText&lt;/code&gt; 유형을 제공 합니다. 이로 인해 AST는 최신 JSX 사양 업데이트를 준수합니다.</target>
        </trans-unit>
        <trans-unit id="7dee6841b50edc415bfe1c5c8466161d44e6e78e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt; this option prohibits the use of function expressions as callbacks or function arguments entirely, without exception.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 로 설정하면 이 옵션은 예외없이 함수 표현식을 콜백 또는 함수 인수로 사용하는 것을 금지합니다.</target>
        </trans-unit>
        <trans-unit id="3ba26a5a5d49bc636e6880dc523e7efaa7e3f9ff" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, which it is by default, The defaultAssignment option allows expressions of the form &lt;code&gt;x ? x : expr&lt;/code&gt; (where &lt;code&gt;x&lt;/code&gt; is any identifier and &lt;code&gt;expr&lt;/code&gt; is any expression).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정되면 ( 기본적으로) defaultAssignment 옵션은 &lt;code&gt;x ? x : expr&lt;/code&gt; 형식의 표현식을 허용합니다 . x : expr (여기서 &lt;code&gt;x&lt;/code&gt; 는 식별자이고 &lt;code&gt;expr&lt;/code&gt; 은 모든 표현식입니다).</target>
        </trans-unit>
        <trans-unit id="58c76c479951b060bb7467a1b0d3e833c0d8d2c6" translate="yes" xml:space="preserve">
          <source>When specified, the given format is output into the provided file name.</source>
          <target state="translated">지정된 경우 지정된 형식이 제공된 파일 이름으로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="9058d12891b7bc2d4e9327a4983a9feee1877886" translate="yes" xml:space="preserve">
          <source>When specified, the given format is output to the console. If you'd like to save that output into a file, you can do so on the command line like so:</source>
          <target state="translated">지정된 경우 지정된 형식이 콘솔로 출력됩니다. 출력을 파일로 저장하려면 다음과 같이 명령 행에서 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47889d2dbb1cf22065935476a0f8d0aa8e29fe7e" translate="yes" xml:space="preserve">
          <source>When the code is not in &lt;code&gt;strict&lt;/code&gt; mode, an assignment to an undeclared variable creates a new global variable. This will happen even is the code is in a function.</source>
          <target state="translated">코드가 &lt;code&gt;strict&lt;/code&gt; 모드 가 아닌 경우 선언되지 않은 변수에 할당하면 새 전역 변수가 만들어집니다. 이것은 코드가 함수에 있더라도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ba5826aadfa968a7067425694dbe879c9c132684" translate="yes" xml:space="preserve">
          <source>When there is a function</source>
          <target state="translated">기능이있는 경우</target>
        </trans-unit>
        <trans-unit id="6adbe1473af6389caf7437ed913a23dbb72e9491" translate="yes" xml:space="preserve">
          <source>When this rule is enabled, each &lt;code&gt;var&lt;/code&gt; statement must satisfy the following conditions:</source>
          <target state="translated">이 규칙이 활성화되면 각 &lt;code&gt;var&lt;/code&gt; 문은 다음 조건을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="4af1a048904ebbc268d7e5d2a030b1271e1ca108" translate="yes" xml:space="preserve">
          <source>When updating the code, it's usually better to add additional commits to your branch rather than amending the original commit, because reviewers can easily tell which changes were made in response to a particular review. When we merge pull requests, we will squash all the commits from your branch into a single commit on the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">코드를 업데이트 할 때는 일반적으로 원래 커밋을 수정하지 않고 분기에 추가 커밋을 추가하는 것이 좋습니다. 검토자가 특정 검토에 대한 변경 내용을 쉽게 알 수 있기 때문입니다. 풀 요청을 병합하면 브랜치의 모든 커밋을 &lt;code&gt;master&lt;/code&gt; 브랜치 의 단일 커밋으로 스쿼시합니다 .</target>
        </trans-unit>
        <trans-unit id="b872c16657ae9bf9c92c81eca4cedcf1ce4e3b38" translate="yes" xml:space="preserve">
          <source>When used globally, as in this example, the strict mode pragma applies to all code within a single file. This can be dangerous if you concatenate scripts together before serving them to a browser. For instance, if you have a file running in strict mode and you concatenate that file with jQuery, the strict mode now also applies to jQuery and may cause errors.</source>
          <target state="translated">이 예에서와 같이 전역으로 사용될 때 엄격 모드 pragma는 단일 파일 내의 모든 코드에 적용됩니다. 스크립트를 브라우저에 제공하기 전에 함께 연결하면 위험 할 수 있습니다. 예를 들어, 엄격 모드로 실행중인 파일이 있고 해당 파일을 jQuery와 연결하는 경우 이제 엄격 모드가 jQuery에도 적용되며 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aefeb6a510b4f06da8ab827396ab03e61b9a2b4f" translate="yes" xml:space="preserve">
          <source>When used with IIFE (immediately-invoked function expression), &lt;code&gt;void&lt;/code&gt; can be used to force the function keyword to be treated as an expression instead of a declaration:</source>
          <target state="translated">IIFE (즉시 호출 된 함수 표현식)와 함께 사용되는 경우 &lt;code&gt;void&lt;/code&gt; 를 사용하여 함수 키워드를 선언 대신 표현식으로 처리하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae07cc7a2c00ed114816981d903072e8072c3972" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped modules&lt;/a&gt; it is not possible to omit the &lt;code&gt;eslint-config&lt;/code&gt; namespace. Doing so would result in resolution errors as explained above. Assuming the package name is &lt;code&gt;@scope/eslint-config&lt;/code&gt;, the additional config can be accessed as:</source>
          <target state="translated">&lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;범위가 지정된 모듈을&lt;/a&gt; 사용 하는 경우 &lt;code&gt;eslint-config&lt;/code&gt; 네임 스페이스 를 생략 할 수 없습니다 . 그렇게하면 위에서 설명한대로 해결 오류가 발생합니다. 패키지 이름이 &lt;code&gt;@scope/eslint-config&lt;/code&gt; 이면 다음과 같이 추가 구성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26dd94e9925d7320e1851527a2ac78a589c822f5" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;end&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">&lt;code&gt;&quot;end&quot;&lt;/code&gt; 사용하면 이 게재 위치가 시행됩니다.</target>
        </trans-unit>
        <trans-unit id="09ca3b175b033e6afa312c6e6f12311d2e033185" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;middle&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;&quot;middle&quot;&lt;/code&gt; 이 배치가 적용됩니다 :</target>
        </trans-unit>
        <trans-unit id="6c5237044c68d3a775c858f741758773f712859a" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;start&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">&lt;code&gt;&quot;start&quot;&lt;/code&gt; 사용하면 이 배치가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="98295039ae3403c3effaa8e60d4f8b88e51b9a68" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;--init&lt;/code&gt;, your configuration file will automatically include the following line:</source>
          <target state="translated">&lt;code&gt;--init&lt;/code&gt; 를 사용하면 구성 파일에 다음 줄이 자동으로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e12966d5c8e8533c8ea0391ab9f9bf76fed4d63c" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files for configuration, you can take advantage of configuration cascading. For instance, suppose you have the following structure:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;.eslintrc.*&lt;/code&gt; 및 &lt;code&gt;package.json&lt;/code&gt; 의 구성 파일을, 당신은 구성 계단식 활용할 수 있습니다. 예를 들어, 다음 구조를 가지고 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="67eb92d73cc035fb0e740eeb9ee35d54c21b60c8" translate="yes" xml:space="preserve">
          <source>When using ESLint v4, both of the following scenarios resulted in an exit code of 1 when running ESLint on the command line:</source>
          <target state="translated">ESLint v4를 사용할 때 다음 두 시나리오 모두 명령 행에서 ESLint를 실행할 때 종료 코드 1이 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="f1aa627c5d01df9707c9033e04463db737c25a39" translate="yes" xml:space="preserve">
          <source>When using ESLint's Node.js API, the &lt;a href=&quot;../developer-guide/nodejs-api#linter-1&quot;&gt;&lt;code&gt;linter&lt;/code&gt;&lt;/a&gt; property is now non-enumerable. Note that the &lt;code&gt;linter&lt;/code&gt; property was deprecated in ESLint v4 in favor of the &lt;a href=&quot;../developer-guide/nodejs-api#linter&quot;&gt;&lt;code&gt;Linter&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">ESLint의 Node.js API를 사용할 때 &lt;a href=&quot;../developer-guide/nodejs-api#linter-1&quot;&gt; &lt;code&gt;linter&lt;/code&gt; &lt;/a&gt; 속성을 열거 할 수 없습니다. 있습니다 &lt;code&gt;linter&lt;/code&gt; 속성이 ESLint 사용되지 않습니다는 찬성 V4 &lt;a href=&quot;../developer-guide/nodejs-api#linter&quot;&gt; &lt;code&gt;Linter&lt;/code&gt; &lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="3877034397bdd6655a65bb98713badfab70c61ee" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;for-in&lt;/code&gt; statement, double-check whether or not you need to use &lt;code&gt;hasOwnProperty()&lt;/code&gt; to filter out object members.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;for-in&lt;/code&gt; 문을 사용할 필요가 있는지 여부를 다시 확인 &lt;code&gt;hasOwnProperty()&lt;/code&gt; 객체의 멤버를 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a472295684a43521cf709823b83a0dfc83f4c6ed" translate="yes" xml:space="preserve">
          <source>When using a config file that is located outside of the current project (with the &lt;code&gt;--config&lt;/code&gt; flag), if the config uses plugins which are installed locally to itself, &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; should be set to the directory containing the config file.</source>
          <target state="translated">현재 프로젝트 외부에있는 구성 파일 ( &lt;code&gt;--config&lt;/code&gt; 플래그 사용)을 사용하는 경우 구성에 자체적으로 설치된 플러그인을 구성에 사용하는 경우 &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; 를 포함하는 디렉토리로 설정해야합니다. 구성 파일.</target>
        </trans-unit>
        <trans-unit id="9fe44a79a84622c0b965f560717893c125cae83f" translate="yes" xml:space="preserve">
          <source>When using any of the &lt;code&gt;multi*&lt;/code&gt; options, you can add an option to enforce all bodies of a &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; chain to be with or without braces.</source>
          <target state="translated">&lt;code&gt;multi*&lt;/code&gt; 옵션 중 하나를 사용 하는 &lt;code&gt;if&lt;/code&gt; 의 모든 본문 , &lt;code&gt;else if&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 체인이 중괄호의 유무에 관계없이 적용되도록 옵션을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e1ce6d13212b9475ddace9afb3a4ec7570c6a3f8" translate="yes" xml:space="preserve">
          <source>When using destructuring, it's possible to create a pattern that has no effect. This happens when empty curly braces are used to the right of an embedded object destructuring pattern, such as:</source>
          <target state="translated">디스트 럭처링을 사용하면 효과가없는 패턴을 만들 수 있습니다. 이것은 다음과 같이 포함 된 객체 파괴 패턴의 오른쪽에 빈 중괄호가 사용될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db5460863d756d57789fab16c7a69040d5d2e79f" translate="yes" xml:space="preserve">
          <source>When using options, make sure that your rule has some logic defaults in case the options are not provided.</source>
          <target state="translated">옵션을 사용할 때 옵션이 제공되지 않는 경우 규칙에 일부 논리 기본값이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1342a76757aef0e4e5631b4d0669dc7aeec279ca" translate="yes" xml:space="preserve">
          <source>When using options, make sure that your rule has some logical defaults in case the options are not provided.</source>
          <target state="translated">옵션을 사용할 때 옵션이 제공되지 않는 경우 규칙에 일부 논리 기본값이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="065a7400897a87490ae67a06072ac7d5967d0b59" translate="yes" xml:space="preserve">
          <source>When using rules, environments or configs defined by plugins, they must be referenced following the convention:</source>
          <target state="translated">플러그인으로 정의 된 규칙, 환경 또는 구성을 사용하는 경우 규칙에 따라 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="77682b7f7a1abb91eab097d1eb59bc1ac216c0eb" translate="yes" xml:space="preserve">
          <source>When using tagged template literals, it's possible to insert whitespace between the tag function and the template literal. Since this whitespace is optional, the following lines are equivalent:</source>
          <target state="translated">태그가 지정된 템플릿 리터럴을 사용하는 경우 태그 함수와 템플릿 리터럴 사이에 공백을 삽입 할 수 있습니다. 이 공백은 선택 사항이므로 다음 줄은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="572505491b13551fec178b2c6eb532fad10fec71" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option, whitespace is required between spread operators and their expressions.</source>
          <target state="translated">&lt;code&gt;&quot;always&quot;&lt;/code&gt; 옵션을 사용하는 경우 스프레드 연산자와 표현식 사이에 공백이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="88068f5e037d31b9f83bb310b2f96f7c77755ae1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;parseInt()&lt;/code&gt; function it is common to omit the second argument, the radix, and let the function try to determine from the first argument what type of number it is. By default, &lt;code&gt;parseInt()&lt;/code&gt; will autodetect decimal and hexadecimal (via &lt;code&gt;0x&lt;/code&gt; prefix). Prior to ECMAScript 5, &lt;code&gt;parseInt()&lt;/code&gt; also autodetected octal literals, which caused problems because many developers assumed a leading &lt;code&gt;0&lt;/code&gt; would be ignored.</source>
          <target state="translated">&lt;code&gt;parseInt()&lt;/code&gt; 함수를 사용할 때 일반적으로 두 번째 인수 인 기수를 생략하고 함수가 첫 번째 인수에서 숫자 유형을 판별하려고 시도하는 것이 일반적입니다. 기본적으로 &lt;code&gt;parseInt()&lt;/code&gt; 는 10 진수와 16 진수 ( &lt;code&gt;0x&lt;/code&gt; 접두사 를 통해 ) 를 자동 감지 합니다. ECMAScript 5 이전에는 &lt;code&gt;parseInt()&lt;/code&gt; 도 8 진 리터럴을 자동 감지하여 많은 개발자가 선행 &lt;code&gt;0&lt;/code&gt; 을 무시 한다고 가정했기 때문에 문제를 일으켰습니다 .</target>
        </trans-unit>
        <trans-unit id="88284b0351505f62a836f42de5b2788b48eda806" translate="yes" xml:space="preserve">
          <source>When using the constructor function with string literals, don't forget that the string escaping rules still apply. If you want to put a backslash in the pattern, you need to escape it in the string literal. Thus, the following are equivalent:</source>
          <target state="translated">문자열 리터럴과 함께 생성자 함수를 사용할 때 문자열 이스케이프 규칙이 여전히 적용된다는 것을 잊지 마십시오. 패턴에 백 슬래시를 넣으려면 문자열 리터럴에서 이스케이프해야합니다. 따라서 다음은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1e14cbc834c9a5f17fbdfbd32b0519c83d4daeea" translate="yes" xml:space="preserve">
          <source>When using the default &lt;code&gt;&quot;never&quot;&lt;/code&gt; option, whitespace is not allowed between spread operators and their expressions.</source>
          <target state="translated">기본 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 옵션을 사용하는 경우 스프레드 연산자와 해당 표현식 사이에 공백이 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8eb0941e44731d1406d202c3c09b679dece569a9" translate="yes" xml:space="preserve">
          <source>When using the default parser, rest operators now have type &lt;code&gt;RestElement&lt;/code&gt;</source>
          <target state="translated">기본 파서를 사용할 때 나머지 연산자는 이제 &lt;code&gt;RestElement&lt;/code&gt; 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ac630bdfb56b2d802f81e1826acde944bb747613" translate="yes" xml:space="preserve">
          <source>When using the default parser, spread operators now have type &lt;code&gt;SpreadElement&lt;/code&gt;</source>
          <target state="translated">기본 파서를 사용할 때 스프레드 연산자의 유형은 &lt;code&gt;SpreadElement&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8616f7cf1f10c7305732004515b3e0c7f1b326cf" translate="yes" xml:space="preserve">
          <source>When using the default parser, text nodes in JSX elements now have type &lt;code&gt;JSXText&lt;/code&gt;</source>
          <target state="translated">기본 파서를 사용할 때 JSX 요소의 텍스트 노드는 이제 &lt;code&gt;JSXText&lt;/code&gt; 유형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3135ee8033e77839591488d21955ec0799490dc6" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;end&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">표현식 구문을 사용할 때 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 가 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8de601ce9b9f12866178ba6345b9ba4e726ea473" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;middle&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">표현식 구문을 사용할 때 &lt;code&gt;&quot;middle&quot;&lt;/code&gt; 이 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8bd53727d730e4c05e40c010c8d70d943c9ea8ca" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;start&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">표현식 구문을 사용하는 경우 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 가 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6d978f57faa0037e5473a90f3c71723c7f1acc3" translate="yes" xml:space="preserve">
          <source>When using the expression syntax this is valid for both &lt;code&gt;&quot;start&quot;&lt;/code&gt; and &lt;code&gt;&quot;end&quot;&lt;/code&gt;:</source>
          <target state="translated">표현식 구문을 사용하는 경우 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 모두에 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="4ed32cf1f256eefd3785dd5a68ca7828859df24e" translate="yes" xml:space="preserve">
          <source>When using the object form, you can also specify an array of gitignore-style patterns:</source>
          <target state="translated">객체 형식을 사용할 때 gitignore 스타일 패턴의 배열을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e017154842854f21c9d1f0307bc811b5980a759b" translate="yes" xml:space="preserve">
          <source>When working with browser scripts, developers often forget that variable and function declarations at the top-level scope become global variables on the &lt;code&gt;window&lt;/code&gt; object. As opposed to modules which have their own scope. Globals should be explicitly assigned to &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt; if that is the intent. Otherwise variables intended to be local to the script should be wrapped in an IIFE.</source>
          <target state="translated">브라우저 스크립트로 작업 할 때 개발자는 최상위 수준의 변수 및 함수 선언이 &lt;code&gt;window&lt;/code&gt; 개체의 전역 변수가된다는 사실을 종종 잊어 버립니다 . 자체 범위를 가진 모듈과 달리. 전역 명시 적으로 할당해야합니다 &lt;code&gt;window&lt;/code&gt; 또는 &lt;code&gt;self&lt;/code&gt; 그 의도 경우. 그렇지 않으면 스크립트에 국한되는 변수는 IIFE로 싸야합니다.</target>
        </trans-unit>
        <trans-unit id="2ae3d6ae3c17238e69473bcfd258c180c90d185f" translate="yes" xml:space="preserve">
          <source>When writing &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt; statements, the body can be a single statement instead of a block. It can be useful to enforce a consistent location for these single statements.</source>
          <target state="translated">쓸 때 &lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;do-while&lt;/code&gt; , 그리고 &lt;code&gt;for&lt;/code&gt; 문, 신체가 대신 블록의 하나의 문이 될 수 있습니다. 이러한 단일 진술에 대해 일관된 위치를 유지하는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fea634132274ace881ee0bca736c790f2b99034e" translate="yes" xml:space="preserve">
          <source>When writing a custom ESLint rule, you can listen for nodes that match a particular selector as the AST is traversed.</source>
          <target state="translated">사용자 정의 ESLint 규칙을 작성할 때 AST를 통과 할 때 특정 선택기와 일치하는 노드를 청취 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e1b6bb0b8e229c1579ec042f43f7fccc4c8e52" translate="yes" xml:space="preserve">
          <source>When writing asynchronous code, it is possible to create subtle race condition bugs. Consider the following example:</source>
          <target state="translated">비동기 코드를 작성할 때 미묘한 경쟁 조건 버그를 만들 수 있습니다. 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="9ab956d19f6a7d33bcea781c394aac7716e7d396" translate="yes" xml:space="preserve">
          <source>When you are indifferent as to how your variables are initialized.</source>
          <target state="translated">변수 초기화 방법에 대해 무관심한 경우.</target>
        </trans-unit>
        <trans-unit id="39cec6a53e81419ae94518ee1daf7421c15031c9" translate="yes" xml:space="preserve">
          <source>When you first get the source code, you need to run &lt;code&gt;npm install&lt;/code&gt; once initially to set ESLint for development. Once you've done that, you can run the tests via:</source>
          <target state="translated">소스 코드를 처음 얻을 때 개발을 위해 ESLint를 설정 &lt;code&gt;npm install&lt;/code&gt; 을 처음 한 번 실행해야합니다 . 일단 완료하면 다음을 통해 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fb96c9e3ee803081c2dbdc5072343cd0694c05e" translate="yes" xml:space="preserve">
          <source>When you pass directories to ESLint, files and directories are silently ignored. If you pass a specific file to ESLint, then you will see a warning indicating that the file was skipped. For example, suppose you have an &lt;code&gt;.eslintignore&lt;/code&gt; file that looks like this:</source>
          <target state="translated">디렉토리를 ESLint에 전달하면 파일 및 디렉토리는 자동으로 무시됩니다. 특정 파일을 ESLint에 전달하면 파일을 건너 뛰었다는 경고가 표시됩니다. 예를 들어, 다음과 같은 &lt;code&gt;.eslintignore&lt;/code&gt; 파일이 있다고 가정 하십시오.</target>
        </trans-unit>
        <trans-unit id="a40e7db8e660398609c617f2002410fe5311511d" translate="yes" xml:space="preserve">
          <source>Whereas others don't leave any empty newlines at all.</source>
          <target state="translated">다른 사람들은 빈 줄 바꿈을 전혀 남기지 않습니다.</target>
        </trans-unit>
        <trans-unit id="87fefcfc6db6a927999c919eb6932d1b0ddd6e8d" translate="yes" xml:space="preserve">
          <source>Whether or not you choose to allow dangling underscores in identifiers is purely a convention and has no effect on performance, readability, or complexity. It's purely a preference.</source>
          <target state="translated">식별자에 댕글 링 밑줄을 허용할지 여부는 전적으로 관례이며 성능, 가독성 또는 복잡성에는 영향을 미치지 않습니다. 순전히 선호 사항입니다.</target>
        </trans-unit>
        <trans-unit id="f6534f63646dd23727947c2cf6e7bcc6f3e758c3" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;require()&lt;/code&gt; may be called anywhere in code, some style guides prescribe that it should be called only in the top level of a module to make it easier to identify dependencies. For instance, it's arguably harder to identify dependencies when they are deeply nested inside of functions and other statements:</source>
          <target state="translated">동안 &lt;code&gt;require()&lt;/code&gt; 어디서나 코드에서 호출 할 수 있습니다, 어떤 스타일 가이드가 쉽게 종속성을 식별 할 수 있도록 만 모듈의 최상위에서 호출해야한다는 규정. 예를 들어, 의존성이 함수와 다른 문장 안에 깊숙이 중첩되어있을 때 의존성을 식별하는 것이 더 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="29813e5d8bf1cb7355c7898a63fa4f03da45d7d8" translate="yes" xml:space="preserve">
          <source>While ESLint has some built-in formatters available to format the linting results, it's also possible to create and distribute your own custom formatters. You can include custom formatters in your project directly or create an npm package to distribute them separately.</source>
          <target state="translated">ESLint에는 린트 결과를 형식화하는 데 사용할 수있는 일부 내장 포맷터가 있지만 사용자 정의 포맷터를 작성하고 배포 할 수도 있습니다. 프로젝트에 직접 사용자 정의 포맷터를 포함 시키거나 npm 패키지를 만들어 별도로 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8311aac5b23a97503926ab51c441e3cee02f86ac" translate="yes" xml:space="preserve">
          <source>While ESLint is designed to be run on the command line, it's possible to use ESLint programmatically through the Node.js API. The purpose of the Node.js API is to allow plugin and tool authors to use the ESLint functionality directly, without going through the command line interface.</source>
          <target state="translated">ESLint는 명령 줄에서 실행되도록 설계되었지만 Node.js API를 통해 프로그래밍 방식으로 ESLint를 사용할 수 있습니다. Node.js API의 목적은 플러그인 및 도구 작성자가 명령 행 인터페이스를 거치지 않고 ESLint 기능을 직접 사용할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fd197d2828aa60783949613ca0213c33e76566f6" translate="yes" xml:space="preserve">
          <source>While comments are not technically part of the AST, ESLint provides a few ways for rules to access them:</source>
          <target state="translated">주석은 기술적으로 AST의 일부가 아니지만 ESLint는 규칙에 주석에 액세스 할 수있는 몇 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="37c4f55e4cdec2c52b9d1730070d74540af4ff31" translate="yes" xml:space="preserve">
          <source>While convenient in some cases, labels tend to be used only rarely and are frowned upon by some as a remedial form of flow control that is more error prone and harder to understand.</source>
          <target state="translated">경우에 따라 편리하지만 레이블은 거의 사용되지 않는 경향이 있으며 일부에서는 오류가 발생하기 쉽고 이해하기 어려운 흐름 제어의 개선 된 형태로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="63cb520d8087bbdcbf754409ab27930737530ab8" translate="yes" xml:space="preserve">
          <source>While custom formatter do not receive arguments in addition to the results object, it is possible to pass additional data into formatters.</source>
          <target state="translated">사용자 정의 포맷터는 결과 오브젝트 외에 인수를받지 않지만 추가 데이터를 포맷터로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0369fa756d04f135ed12a2b1afcb5955ad419079" translate="yes" xml:space="preserve">
          <source>While examples such as &lt;code&gt;window&lt;/code&gt; are obvious, there are often hundreds of built-in global objects provided by JavaScript environments. It can be hard to know if you're assigning to a global variable or not.</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; 와 같은 예제 는 명백 하지만 JavaScript 환경에서 제공하는 수백 개의 내장 전역 객체가 종종 있습니다. 전역 변수에 할당하고 있는지 알기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c46f9484120e3dc21893826ed7750184420479e" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between brackets:</source>
          <target state="translated">서식 환경 설정은 매우 개인적이지만 여러 스타일 가이드는 대괄호 사이에 공백이 필요하거나 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ead041c0e54e18e0aedd3c11f6e9467485197c87" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between computed properties in the following situations:</source>
          <target state="translated">서식 환경 설정은 매우 개인적이지만 다음과 같은 상황에서는 여러 스타일 안내서에서 계산 된 속성 사이에 공백이 필요하거나 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="95f4505cf507f8d42dd7d42c5558ca7478a729d0" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between curly braces in the following situations:</source>
          <target state="translated">서식 환경 설정은 매우 개인적이지만 다음과 같은 상황에서는 여러 스타일 안내서에서 중괄호 사이에 공백이 필요하거나 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f05e62b6f2060865e9ec4b62cc00cdb590d96030" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require spaces around operators, such as:</source>
          <target state="translated">서식 환경 설정은 매우 개인적이지만 많은 스타일 가이드에는 다음과 같이 연산자 주위에 공백이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d055d4afaa69216abb5964c95be2721bea469f97" translate="yes" xml:space="preserve">
          <source>While it is allowed to define the pair for a getter or a setter anywhere in an object or class definition, it's considered a best practice to group accessor functions for the same property.</source>
          <target state="translated">객체 또는 클래스 정의의 어느 곳에서나 getter 또는 setter의 쌍을 정의 할 수 있지만 동일한 속성에 대한 접근 자 함수를 그룹화하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9d88f9eac375bda3a235e91d455dae4d347e664d" translate="yes" xml:space="preserve">
          <source>While it's possible to have whitespace between the name of a function and the parentheses that execute it, such patterns tend to look more like errors.</source>
          <target state="translated">함수 이름과 함수를 실행하는 괄호 사이에 공백이있을 수 있지만 이러한 패턴은 오류와 비슷해 보입니다.</target>
        </trans-unit>
        <trans-unit id="e7c4b87b0aeb5522a09379b8987d2ad80de6211b" translate="yes" xml:space="preserve">
          <source>While no style is considered better than the other, most developers agree that having a consistent style throughout a project is important for its long-term maintainability.</source>
          <target state="translated">다른 스타일보다 더 좋은 스타일은 없지만 대부분의 개발자는 프로젝트 전체에서 일관된 스타일을 유지하는 것이 장기적인 유지 관리에 중요하다는 데 동의합니다.</target>
        </trans-unit>
        <trans-unit id="c9bd1ba118ab46e26a22fd543291c93549359df6" translate="yes" xml:space="preserve">
          <source>While returning a value from a setter does not produce an error, the returned value is being ignored. Therefore, returning a value from a setter is either unnecessary or a possible error, since the returned value cannot be used.</source>
          <target state="translated">setter에서 값을 반환해도 오류가 발생하지 않지만 반환 된 값은 무시됩니다. 따라서 반환 값을 사용할 수 없으므로 setter에서 값을 반환하는 것은 불필요하거나 오류 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24b0cbc319260120c825ff5810ce1e3e83466613" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;items&lt;/code&gt; array in this example has a &lt;code&gt;length&lt;/code&gt; of 2, there are actually no values in &lt;code&gt;items[0]&lt;/code&gt; or &lt;code&gt;items[1]&lt;/code&gt;. The fact that the array literal is valid with only commas inside, coupled with the &lt;code&gt;length&lt;/code&gt; being set and actual item values not being set, make sparse arrays confusing for many developers. Consider the following:</source>
          <target state="translated">그동안 &lt;code&gt;items&lt;/code&gt; 이 예에서 어레이는 보유 &lt;code&gt;length&lt;/code&gt; 2를 실제로 값 적용 &lt;code&gt;items[0]&lt;/code&gt; 또는 &lt;code&gt;items[1]&lt;/code&gt; . 배열 리터럴이 내부에 쉼표로만 유효하고 &lt;code&gt;length&lt;/code&gt; 가 설정되고 실제 항목 값이 설정되어 있지 않다는 사실은 많은 개발자에게 희소 배열을 혼란스럽게 만듭니다. 다음을 고려하세요:</target>
        </trans-unit>
        <trans-unit id="f234db536011aa575688b43d86c313f74c7f0a44" translate="yes" xml:space="preserve">
          <source>While there are no performance differences between the two approaches, the byte savings and conciseness of the object literal form is what has made it the de facto way of creating new objects.</source>
          <target state="translated">두 접근 방식간에 성능 차이는 없지만 객체 리터럴 형식의 바이트 절약 및 간결성은 새로운 객체를 생성하는 사실상의 방법입니다.</target>
        </trans-unit>
        <trans-unit id="abc8de1d6373af77c99606ce310c2bfa6eb601d3" translate="yes" xml:space="preserve">
          <source>While this is valid JavaScript syntax, it is hard to determine what the author intended.</source>
          <target state="translated">이것은 유효한 JavaScript 구문이지만 작성자가 의도 한 것을 결정하기는 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="2959ec3d09a773efa13db9717c2200b428f7a939" translate="yes" xml:space="preserve">
          <source>Whitespace between a function name and its parameter list is optional.</source>
          <target state="translated">함수 이름과 매개 변수 목록 사이의 공백은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="3a7ac655f9d858d70a71d43d5e425ebf504053ad" translate="yes" xml:space="preserve">
          <source>Why not use &lt;code&gt;max-statements&lt;/code&gt; or other complexity measurement rules instead?</source>
          <target state="translated">&lt;code&gt;max-statements&lt;/code&gt; 또는 다른 복잡성 측정 규칙을 대신 사용하지 않는 이유는 무엇 입니까?</target>
        </trans-unit>
        <trans-unit id="c0db24e617409556a049b18d97243e71aeff0fa5" translate="yes" xml:space="preserve">
          <source>Why would you want to restrict a module?</source>
          <target state="translated">왜 모듈을 제한하고 싶습니까?</target>
        </trans-unit>
        <trans-unit id="a53bafb0392a4642abd5c673a31dd5985aabb07e" translate="yes" xml:space="preserve">
          <source>Why would you want to restrict imports?</source>
          <target state="translated">왜 수입을 제한하고 싶습니까?</target>
        </trans-unit>
        <trans-unit id="d1ee831b819c0a1c73da610e4524b70bce25e441" translate="yes" xml:space="preserve">
          <source>Will produce the following output:</source>
          <target state="translated">다음과 같은 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="47722f302f719e5a3cdc78148624357a483a6720" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;enforceForClassMembers&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; (default), the rule also disallows/enforces spaces inside of computed keys of class methods, getters and setters.</source>
          <target state="translated">함께 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 설정 &lt;code&gt;true&lt;/code&gt; (기본), 또한 룰 클래스 방법 게터와 세터의 계산 키 내부 것을 허용하지 / 스페이스 시행한다.</target>
        </trans-unit>
        <trans-unit id="3761ecd349f048bb5b8ad00362e8f092a85620b4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;natural&lt;/code&gt; as false, the ordering would be 1 10 3 6 8</source>
          <target state="translated">함께 &lt;code&gt;natural&lt;/code&gt; 거짓, 순서가 될 것 1 10 3 6 8</target>
        </trans-unit>
        <trans-unit id="c01232fd7f3f7dfd38909a754e7cc306c6933563" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;natural&lt;/code&gt; as true, the ordering would be 1 3 6 8 10</source>
          <target state="translated">으로 &lt;code&gt;natural&lt;/code&gt; 참으로, 순서는 것 1 3 6 8 10</target>
        </trans-unit>
        <trans-unit id="d785c50edfc0dbd60d2a64feee379ed34c218574" translate="yes" xml:space="preserve">
          <source>With ES6, it's possible to create functions called &lt;a href=&quot;#further-reading&quot;&gt;tagged template literals&lt;/a&gt; where the function parameters consist of a template literal's strings and expressions.</source>
          <target state="translated">ES6을 사용 하면 함수 매개 변수가 템플리트 리터럴의 문자열 및 표현식으로 구성된 &lt;a href=&quot;#further-reading&quot;&gt;태그가 지정된 템플리트 리터럴&lt;/a&gt; 이라는 함수를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9694d5882ad512e79d20ad557b3c3e2d29bd728" translate="yes" xml:space="preserve">
          <source>With ESLint v3.0.0, we are dropping support for Node.js versions prior to 4. Node.js 0.10 and 0.12 are in &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;maintenance mode&lt;/a&gt; and Node.js 4 is the current LTS version. If you are using an older version of Node.js, we recommend upgrading to at least Node.js 4 as soon as possible. If you are unable to upgrade to Node.js 4 or higher, then we recommend continuing to use ESLint v2.x until you are ready to upgrade Node.js.</source>
          <target state="translated">ESLint v3.0.0에서는 4 이전의 Node.js 버전에 대한 지원을 중단하고 있습니다. Node.js 0.10 및 0.12는 &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;유지 보수 모드에&lt;/a&gt; 있으며 Node.js 4는 현재 LTS 버전입니다. 이전 버전의 Node.js를 사용중인 경우 가능한 빨리 Node.js 4 이상으로 업그레이드하는 것이 좋습니다. Node.js 4 이상으로 업그레이드 할 수없는 경우 Node.js를 업그레이드 할 준비가 될 때까지 ESLint v2.x를 계속 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f738eadf308e98ed8b558385152e0810dbbb0149" translate="yes" xml:space="preserve">
          <source>With JavaScript ES6, a new syntax was added for creating variables from an array index or object property, called &lt;a href=&quot;#further-reading&quot;&gt;destructuring&lt;/a&gt;. This rule enforces usage of destructuring instead of accessing a property through a member expression.</source>
          <target state="translated">JavaScript ES6에서는 &lt;a href=&quot;#further-reading&quot;&gt;destructuring&lt;/a&gt; 이라는 배열 인덱스 또는 객체 속성에서 변수를 만들기위한 새로운 구문이 추가되었습니다 . 이 규칙은 멤버 식을 통해 속성에 액세스하는 대신 파괴 사용을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="57127019f1509597574f983a2678ce6e71f7790d" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt; rule, you can restrict the usage of particular syntax in your code. For example, you can use the following configuration to disallow using &lt;code&gt;if&lt;/code&gt; statements that do not have block statements as their body:</source>
          <target state="translated">으로 &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;노 제한 - 구문&lt;/a&gt; 규칙, 당신은 당신의 코드에서 특정 구문의 사용을 제한 할 수 있습니다. 예를 들어, 다음 구성을 사용하여 블록 문이없는 &lt;code&gt;if&lt;/code&gt; 문을 본문으로 사용하지 못하게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2dbe434ed943c250d0b627de73aaf46b0b6237c" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;no-console&lt;/code&gt; rule in the above example, ESLint will report an error. For the above example, you can disable the rule:</source>
          <target state="translated">으로 &lt;code&gt;no-console&lt;/code&gt; 위의 예에서 규칙 ESLint 오류를보고합니다. 위의 예에서 규칙을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d65fde606f7cac945cb670aeed1ad1a40f85888" translate="yes" xml:space="preserve">
          <source>With the landing of ECMAScript 2018, named capture groups can be used in regular expressions, which can improve their readability.</source>
          <target state="translated">ECMAScript 2018이 시작되면 명명 된 캡처 그룹을 정규식에 사용하여 가독성을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14abd5610a4a8c353b6349e67b281b4db7600a4e" translate="yes" xml:space="preserve">
          <source>With this change, any unknown values in a &lt;code&gt;globals&lt;/code&gt; object result in a config validation error.</source>
          <target state="translated">이 변경으로 인해 &lt;code&gt;globals&lt;/code&gt; 개체의 알 수없는 값 으로 인해 구성 유효성 검사 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0e926cbdcb99b945229437e398eca4b6e42eaa74" translate="yes" xml:space="preserve">
          <source>With this option set to &lt;code&gt;true&lt;/code&gt; the rule is additionally enforced for:</source>
          <target state="translated">이 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 다음에 대해 규칙이 추가로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="17aabfa01f2eae30feb19a835e50357a72c8a84c" translate="yes" xml:space="preserve">
          <source>With this option set to &lt;code&gt;true&lt;/code&gt; the rule is enforced for:</source>
          <target state="translated">이 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 다음에 대해 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="78d9433fdc1bf9be47875f8ba4596d9dc301fe59" translate="yes" xml:space="preserve">
          <source>With this syntax, it is possible to rename a reference to the same name. This is a completely redundant operation, as this is the same as not renaming at all. For example, this:</source>
          <target state="translated">이 구문을 사용하면 참조 이름을 같은 이름으로 바꿀 수 있습니다. 이름을 바꾸지 않는 것과 동일하기 때문에 이것은 완전히 중복 된 작업입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="02ca31a1f795ee4542c1b86397f7a5ff221b1d4b" translate="yes" xml:space="preserve">
          <source>With your code ready to go, this is a good time to double-check your submission to make sure it follows our conventions. Here are the things to check:</source>
          <target state="translated">코드를 작성할 준비가 되었으면 제출 한 내용을 다시 확인하여 규칙을 준수하는지 확인하십시오. 확인할 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="601b82919f56b023a6ac2f0d9e03ca91fb600482" translate="yes" xml:space="preserve">
          <source>Wondering if ESLint will work with your favorite editor or build system? This section has a list of all known integrations (submitted by their authors).</source>
          <target state="translated">ESLint가 선호하는 편집기 또는 빌드 시스템에서 작동하는지 궁금하십니까? 이 섹션에는 알려진 모든 통합 (작성자가 제출 한) 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="4d00e4b5ed7c06a07c082643961ab01179f8644a" translate="yes" xml:space="preserve">
          <source>Working on Issues</source>
          <target state="translated">문제에 대한 작업</target>
        </trans-unit>
        <trans-unit id="65a7fa564bad135bfd859a96e086258daeb6948b" translate="yes" xml:space="preserve">
          <source>Working with Code</source>
          <target state="translated">코드 작업</target>
        </trans-unit>
        <trans-unit id="6f9e3c993bff866f61140b68ae99ae2d931b77df" translate="yes" xml:space="preserve">
          <source>Working with Custom Formatters</source>
          <target state="translated">사용자 정의 포맷터 작업</target>
        </trans-unit>
        <trans-unit id="c03452259ea76fd47e1b6d08c558c054e72b6a09" translate="yes" xml:space="preserve">
          <source>Working with Custom Parsers</source>
          <target state="translated">사용자 정의 파서 작업</target>
        </trans-unit>
        <trans-unit id="df5a94f92bfe3900361a91260e60682f362b48ec" translate="yes" xml:space="preserve">
          <source>Working with Objects</source>
          <target state="translated">객체 작업</target>
        </trans-unit>
        <trans-unit id="f3e4a2517f0ec5774bec9b993d5ea963c9b5fee4" translate="yes" xml:space="preserve">
          <source>Working with Plugins</source>
          <target state="translated">플러그인 작업</target>
        </trans-unit>
        <trans-unit id="745cafc814f736540ab9a9ec69a843464c06b06e" translate="yes" xml:space="preserve">
          <source>Working with Rules</source>
          <target state="translated">규칙 작업</target>
        </trans-unit>
        <trans-unit id="30016dd60046581a591a23d81fed6873d23d1121" translate="yes" xml:space="preserve">
          <source>Wrapper objects</source>
          <target state="translated">래퍼 객체</target>
        </trans-unit>
        <trans-unit id="eef4ac1d5e4171148db0ef1d88a811525a9a8cad" translate="yes" xml:space="preserve">
          <source>Write Several Tests</source>
          <target state="translated">여러 테스트 작성</target>
        </trans-unit>
        <trans-unit id="6a8289d738e0fb6fd95be1b3b78774e9da362118" translate="yes" xml:space="preserve">
          <source>Writing functions within loops tends to result in errors due to the way the function creates a closure around the loop. For example:</source>
          <target state="translated">루프 내에서 함수를 작성하면 함수가 루프 주위에 클로저를 만드는 방식으로 인해 오류가 발생하는 경향이 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="87add0c0035681380218188cbec89bf48229ce52" translate="yes" xml:space="preserve">
          <source>Yoda Conditions</source>
          <target state="translated">요다 조건</target>
        </trans-unit>
        <trans-unit id="4e2d480ae9994b683891b7b7854e1846f4452f37" translate="yes" xml:space="preserve">
          <source>Yoda Notation and Safe Switching</source>
          <target state="translated">요다 표기법 및 안전 스위칭</target>
        </trans-unit>
        <trans-unit id="c9a3b96ff6b13bf38caffa2bb77f3cdbfb82748d" translate="yes" xml:space="preserve">
          <source>Yoda conditions are so named because the literal value of the condition comes first while the variable comes second. For example, the following is a Yoda condition:</source>
          <target state="translated">조건의 리터럴 값이 먼저오고 변수가 두 번째로 오기 때문에 요다 조건은 그렇게 명명됩니다. 예를 들어 다음은 요다 조건입니다.</target>
        </trans-unit>
        <trans-unit id="5bb497f23923badcba527c315a5b086f90879370" translate="yes" xml:space="preserve">
          <source>You can achieve the same result by removing the label and using &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; without a label. Probably those labels would confuse developers because they expect labels to jump to further.</source>
          <target state="translated">레이블을 제거하고 레이블 없이 &lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 을 사용하여 동일한 결과를 얻을 수 있습니다 . 아마도 이러한 레이블은 레이블이 더 나아갈 것으로 기대하기 때문에 개발자를 혼란스럽게 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="25ee73f4f7b7aec2f114aa219eb0d14faae2dfc4" translate="yes" xml:space="preserve">
          <source>You can add exceptions like so:</source>
          <target state="translated">다음과 같이 예외를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05559d8f54ee057db7a170c36968d244829fe84f" translate="yes" xml:space="preserve">
          <source>You can also create plugins that would tell ESLint how to process files other than JavaScript. In order to create a processor, the object that is exported from your module has to conform to the following interface:</source>
          <target state="translated">ESLint에 JavaScript 이외의 파일을 처리하는 방법을 알려주는 플러그인을 작성할 수도 있습니다. 프로세서를 만들려면 모듈에서 내 보낸 객체가 다음 인터페이스를 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="e85547bac3e889dbf55401869266f36d3fdd3a32" translate="yes" xml:space="preserve">
          <source>You can also define separate exceptions and markers for block and line comments. The &lt;code&gt;&quot;block&quot;&lt;/code&gt; object can have an additional key &lt;code&gt;&quot;balanced&quot;&lt;/code&gt;, a boolean that specifies if inline block comments should have balanced spacing. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">블록 및 라인 주석에 대해 별도의 예외 및 마커를 정의 할 수도 있습니다. &lt;code&gt;&quot;block&quot;&lt;/code&gt; 개체가 추가 키있을 수 있습니다 &lt;code&gt;&quot;balanced&quot;&lt;/code&gt; , 인라인 블록 주석 균형 간격을해야 지정하면하는 부울. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0a0426d4eedbe98dbbce56f948aa26ba40b6773e" translate="yes" xml:space="preserve">
          <source>You can also disable or enable specific rules for an entire file:</source>
          <target state="translated">전체 파일에 대해 특정 규칙을 비활성화하거나 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cad74a6b04617064996162fcbf25c1cd2f358b0" translate="yes" xml:space="preserve">
          <source>You can also disable or enable warnings for specific rules:</source>
          <target state="translated">특정 규칙에 대한 경고를 비활성화하거나 활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="63e369c28798d179460dccac0ab10ec17ec08dd9" translate="yes" xml:space="preserve">
          <source>You can also disable this rule if you are using the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option for the &lt;a href=&quot;arrow-body-style&quot;&gt;&lt;code&gt;arrow-body-style&lt;/code&gt;&lt;/a&gt;, since this will disable the use of implicit returns in arrow functions.</source>
          <target state="translated">&lt;a href=&quot;arrow-body-style&quot;&gt; &lt;code&gt;arrow-body-style&lt;/code&gt; 에&lt;/a&gt; &lt;code&gt;&quot;always&quot;&lt;/code&gt; 옵션을 사용하는 경우 화살표 함수에서 암시 적 리턴을 사용할 수 없으므로이 규칙을 비활성화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="66057b1048ae4888b48ffe12dc10028ff6625e53" translate="yes" xml:space="preserve">
          <source>You can also get an instance of the &lt;code&gt;SourceCode&lt;/code&gt; object used inside of &lt;code&gt;linter&lt;/code&gt; by using the &lt;code&gt;getSourceCode()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;getSourceCode()&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;linter&lt;/code&gt; 내부에서 사용되는 &lt;code&gt;SourceCode&lt;/code&gt; 객체 의 인스턴스를 가져올 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96caeb8b360405c15efae7c26778a678270acc60" translate="yes" xml:space="preserve">
          <source>You can also omit the &lt;code&gt;eslint-config-&lt;/code&gt; and it will be automatically assumed by ESLint:</source>
          <target state="translated">&lt;code&gt;eslint-config-&lt;/code&gt; 를 생략 해도 ESLint에서 자동으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="5f8d5e9a37f7691cb68bd5528c2532e0a9c51cbe" translate="yes" xml:space="preserve">
          <source>You can also omit the &lt;code&gt;eslint-config&lt;/code&gt; and it will be automatically assumed by ESLint:</source>
          <target state="translated">&lt;code&gt;eslint-config&lt;/code&gt; 를 생략 해도 ESLint에서 자동으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b4735ac5a5e7b458de09eb07b6cdfa3376d84be8" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;fix: true&lt;/code&gt; when instantiating the &lt;code&gt;CLIEngine&lt;/code&gt; in order to have it figure out what fixes can be applied.</source>
          <target state="translated">&lt;code&gt;fix: true&lt;/code&gt; 을 전달할 수도 있습니다 . &lt;code&gt;CLIEngine&lt;/code&gt; 을 인스턴스화 할 때 적용 할 수있는 수정 사항을 파악하기 위해 true 입니다.</target>
        </trans-unit>
        <trans-unit id="3caccb62f48d43c846e4712d2c890079f03ab952" translate="yes" xml:space="preserve">
          <source>You can also pass options to the rule (if it accepts them). These arguments are equivalent to how people can configure rules in their &lt;code&gt;.eslintrc&lt;/code&gt; file. For example:</source>
          <target state="translated">옵션을 규칙에 전달할 수도 있습니다 (허용되는 경우). 이 인수는 사람들이 &lt;code&gt;.eslintrc&lt;/code&gt; 파일 에서 규칙을 구성 할 수있는 방법과 동일 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3b0fc4857f60066843c69b877d56edc2a4b10a7" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;a href=&quot;../developer-guide/selectors&quot;&gt;AST selectors&lt;/a&gt; to restrict, allowing much more precise control over syntax patterns.</source>
          <target state="translated">&lt;a href=&quot;../developer-guide/selectors&quot;&gt;AST 선택기&lt;/a&gt; 를 제한하여 구문 패턴을 훨씬 정확하게 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f7d3bf4d4850f84343c033961a07313b88fd9e2" translate="yes" xml:space="preserve">
          <source>You can also test your shareable config on your computer before publishing by linking your module globally. Type:</source>
          <target state="translated">모듈을 전체적으로 연결하여 게시하기 전에 컴퓨터에서 공유 가능한 구성을 테스트 할 수도 있습니다. 유형:</target>
        </trans-unit>
        <trans-unit id="9d2e9d075474530e945feab9e83c42a988c32062" translate="yes" xml:space="preserve">
          <source>You can also use a custom formatter from the command line by specifying a path to the custom formatter file.</source>
          <target state="translated">사용자 정의 포맷터 파일의 경로를 지정하여 명령 행에서 사용자 정의 포맷터를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbb077a84452356d24143083766c48897b00276b" translate="yes" xml:space="preserve">
          <source>You can also use a separate option for each type of function. Each of the following options can be set to &lt;code&gt;&quot;always&quot;&lt;/code&gt;, &lt;code&gt;&quot;never&quot;&lt;/code&gt;, or &lt;code&gt;&quot;ignore&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">각 기능 유형에 대해 별도의 옵션을 사용할 수도 있습니다. 다음 옵션 각각은 &lt;code&gt;&quot;always&quot;&lt;/code&gt; , &lt;code&gt;&quot;never&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;ignore&quot;&lt;/code&gt; 로 설정할 수 있습니다 . 기본값은 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dfcfa0a36bcea86d98c6565269b246d20e0c02a0" translate="yes" xml:space="preserve">
          <source>You can also use an object option to configure this rule for each type of syntax. Each of the following options can be set to &lt;code&gt;&quot;never&quot;&lt;/code&gt;, &lt;code&gt;&quot;always&quot;&lt;/code&gt;, &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt;, &lt;code&gt;&quot;only-multiline&quot;&lt;/code&gt;, or &lt;code&gt;&quot;ignore&quot;&lt;/code&gt;. The default for each option is &lt;code&gt;&quot;never&quot;&lt;/code&gt; unless otherwise specified.</source>
          <target state="translated">객체 옵션을 사용하여 각 구문 유형에 대해이 규칙을 구성 할 수도 있습니다. 다음 옵션 각각은 &lt;code&gt;&quot;never&quot;&lt;/code&gt; , &lt;code&gt;&quot;always&quot;&lt;/code&gt; , &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; , &lt;code&gt;&quot;only-multiline&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;ignore&quot;&lt;/code&gt; 로 설정할 수 있습니다 . 별도로 지정하지 않는 한 각 옵션의 기본값은 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00180c44650979a8c22f493369d4d2da2df1f46c" translate="yes" xml:space="preserve">
          <source>You can also use placeholders in the message and provide &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">메시지에 자리 표시자를 사용하고 &lt;code&gt;data&lt;/code&gt; 제공 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07f6d61661c3bae2bb89a0721dc25436c9bf11b6" translate="yes" xml:space="preserve">
          <source>You can also use placeholders in the suggestion message. This works the same way as placeholders for the overall error (see &lt;a href=&quot;#using-message-placeholders&quot;&gt;using message placeholders&lt;/a&gt;).</source>
          <target state="translated">제안 메시지에 자리 표시자를 사용할 수도 있습니다. 이것은 전체 오류에 대한 자리 표시 자와 동일한 방식으로 작동합니다 ( &lt;a href=&quot;#using-message-placeholders&quot;&gt;메시지 자리 표시 자 사용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ca605e61057943ccd5955606dcd19f50dde745ad" translate="yes" xml:space="preserve">
          <source>You can also use your &lt;code&gt;.gitignore&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.gitignore&lt;/code&gt; 파일을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec18895f72a632bff750af059096051c7cbbb46f" translate="yes" xml:space="preserve">
          <source>You can avoid the extra microtask by not awaiting the return value, with the trade off of the function no longer being a part of the stack trace if an error is thrown asynchronously from the Promise being returned. This can make debugging more difficult.</source>
          <target state="translated">반환 값을 기다리지 않음으로써 추가 마이크로 태스크를 피할 수 있으며, 반환되는 Promise에서 비동기 적으로 오류가 발생하는 경우 함수의 절충이 더 이상 스택 추적의 일부가되지 않습니다. 이로 인해 디버깅이 더 어려워 질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea7c0da956d7ace90e4f070c16cc82b3ced8c773" translate="yes" xml:space="preserve">
          <source>You can bundle configurations inside a plugin by specifying them under the &lt;code&gt;configs&lt;/code&gt; key. This can be useful when you want to provide not just code style, but also some custom rules to support it. Multiple configurations are supported per plugin. Note that it is not possible to specify a default configuration for a given plugin and that users must specify in their configuration file when they want to use one.</source>
          <target state="translated">&lt;code&gt;configs&lt;/code&gt; 키 에서 구성 을 지정하여 플러그인 내부에 구성을 번들 할 수 있습니다 . 이는 코드 스타일뿐만 아니라이를 지원하는 일부 사용자 지정 규칙을 제공하려는 경우에 유용 할 수 있습니다. 플러그인 당 여러 구성이 지원됩니다. 지정된 플러그인에 대한 기본 구성을 지정할 수 없으며 사용자가 구성 파일을 사용하려면 구성 파일에서 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="408d1e4c59ead333aa0e90a633c7cf6ab20ad2a3" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;verify()&lt;/code&gt; like this:</source>
          <target state="translated">다음 과 같이 &lt;code&gt;verify()&lt;/code&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b414e60e62c83576ea85df58a75b414de4118fa" translate="yes" xml:space="preserve">
          <source>You can configure the rule as follows:</source>
          <target state="translated">다음과 같이 규칙을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18a6a1e13449438deafc1f1f8cde716e1e37be44" translate="yes" xml:space="preserve">
          <source>You can enable these to be recognized as valid by setting the ECMAScript version to 6 in your &lt;a href=&quot;../user-guide/configuring&quot;&gt;ESLint configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../user-guide/configuring&quot;&gt;ESLint 구성&lt;/a&gt; 에서 ECMAScript 버전을 6으로 설정하여 이것을 유효한 것으로 인식 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72aad09087aa74acfb57b320084e2006a3465324" translate="yes" xml:space="preserve">
          <source>You can find a curated list of other popular integrations for ESLint in the &lt;a href=&quot;https://github.com/dustinspecker/awesome-eslint&quot;&gt;awesome-eslint&lt;/a&gt; GitHub repository.</source>
          <target state="translated">가장 &lt;a href=&quot;https://github.com/dustinspecker/awesome-eslint&quot;&gt;멋진&lt;/a&gt; GitHub 리포지토리 에서 ESLint에 널리 사용되는 다른 통합 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="128a17e7087d8af10d63295faa62f42a110c524d" translate="yes" xml:space="preserve">
          <source>You can find an ESLint parser project &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">ESLint 파서 프로젝트는 &lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot;&gt;여기에서&lt;/a&gt; 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0fad5513072db99ca70ae9120e4f7cc680583bc" translate="yes" xml:space="preserve">
          <source>You can get a reference to the &lt;code&gt;CLIEngine&lt;/code&gt; by doing the following:</source>
          <target state="translated">다음을 수행하여 &lt;code&gt;CLIEngine&lt;/code&gt; 에 대한 참조를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a518ae0ab65de37988407b5cfdcab7978b5b018a" translate="yes" xml:space="preserve">
          <source>You can get the equivalent behavior using this:</source>
          <target state="translated">다음을 사용하여 동등한 동작을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25dd9e809cd682cff1a45b78dc393e334b8526b6" translate="yes" xml:space="preserve">
          <source>You can have both rules and processors in a single plugin. You can also have multiple processors in one plugin. To support multiple extensions, add each one to the &lt;code&gt;processors&lt;/code&gt; element and point them to the same object.</source>
          <target state="translated">단일 플러그인에 규칙과 프로세서를 둘 다 가질 수 있습니다. 하나의 플러그인에 여러 프로세서를 가질 수도 있습니다. 여러 확장을 지원하려면 각 확장을 &lt;code&gt;processors&lt;/code&gt; 요소에 추가 하고 동일한 객체를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="3087edac471b3d5f8c40edc6d268bfad6c719717" translate="yes" xml:space="preserve">
          <source>You can immediately invoke function expressions, but not function declarations. A common technique to create an immediately-invoked function expression (IIFE) is to wrap a function declaration in parentheses. The opening parentheses causes the contained function to be parsed as an expression, rather than a declaration.</source>
          <target state="translated">함수 표현식을 즉시 호출 할 수 있지만 함수 선언은 호출 할 수 없습니다. IIFE (즉시 호출 함수 식)를 만드는 일반적인 기술은 함수 선언을 괄호로 묶는 것입니다. 여는 괄호로 인해 포함 된 함수가 선언이 아닌 표현식으로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="9f3710ed0dc294fabe45a9230f72b331a70b348e" translate="yes" xml:space="preserve">
          <source>You can include multiple entries in the &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; 배열 에 여러 항목을 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee4f68234e6782bfe1c2177877e83c99c98f1f86" translate="yes" xml:space="preserve">
          <source>You can install ESLint using npm or yarn:</source>
          <target state="translated">npm 또는 yarn을 사용하여 ESLint를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="400cefc46404dba2c122576520dc9f4dffbc3998" translate="yes" xml:space="preserve">
          <source>You can override settings from the shareable config by adding them directly into your &lt;code&gt;.eslintrc&lt;/code&gt; file.</source>
          <target state="translated">공유 가능한 구성의 설정을 &lt;code&gt;.eslintrc&lt;/code&gt; 파일에 직접 추가하여 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1834766c7b7a5dcbd68859d50ddf1bda2811056" translate="yes" xml:space="preserve">
          <source>You can pass filesystem-style or glob patterns to ESLint and have it function properly. In order to achieve this, ESLint must resolve non-glob patterns into glob patterns before determining which files to execute on. The &lt;code&gt;resolveFileGlobPatterns()&lt;/code&gt; methods uses the current settings from &lt;code&gt;CLIEngine&lt;/code&gt; to resolve non-glob patterns into glob patterns. Pass an array of patterns that might be passed to the ESLint CLI and it will return an array of glob patterns that mean the same thing. Here's an example:</source>
          <target state="translated">파일 시스템 스타일 또는 glob 패턴을 ESLint에 전달하여 올바르게 작동시킬 수 있습니다. 이를 위해 ESLint는 실행할 파일을 결정하기 전에 비 글로브 패턴을 글로브 패턴으로 해석해야합니다. &lt;code&gt;resolveFileGlobPatterns()&lt;/code&gt; 메소드에서 현재 설정 사용 &lt;code&gt;CLIEngine&lt;/code&gt; 글로브 패턴으로 해결이 아닌 글로브 패턴에 있습니다. ESLint CLI에 전달 될 수있는 패턴 배열을 전달하면 동일한 것을 의미하는 glob 패턴 배열을 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4905fdb9e87e9acb50e45f34d282a23c555e6a58" translate="yes" xml:space="preserve">
          <source>You can safely disable this rule if you do not care about enforcing consistent spacing between spread operators and their expressions.</source>
          <target state="translated">스프레드 연산자와 표현식 사이에 일정한 간격을 유지하는 데 신경 쓰지 않으면이 규칙을 안전하게 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73277d06b6ef13537e20c60df84883a999f6bbd8" translate="yes" xml:space="preserve">
          <source>You can safely disable this rule if you do not care about redundantly renaming import, export, and destructuring assignments.</source>
          <target state="translated">할당의 가져 오기, 내보내기 및 구조를 중복 변경하지 않아도되는 경우이 규칙을 안전하게 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a60662574d47b5098f2ada55e6698ddf42cfc637" translate="yes" xml:space="preserve">
          <source>You can safely disable this rule if you do not have any strict conventions about whether or not directive prologues should have blank newlines before or after them.</source>
          <target state="translated">지시 프롤로그에 빈 줄 바꾸기가 있어야하는지 여부에 대한 엄격한 규칙이없는 경우이 규칙을 안전하게 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88af5ad155c22cbf7e07de392c29e5dad5964df5" translate="yes" xml:space="preserve">
          <source>You can safely disable this rule if you do not have any strict conventions about whether the operands of a ternary expression should be separated by newlines.</source>
          <target state="translated">삼항 표현식의 피연산자를 개행으로 구분해야하는지에 대한 엄격한 규칙이없는 경우이 규칙을 안전하게 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45180d1576e97232b2878b7e48300aa6419f4b8d" translate="yes" xml:space="preserve">
          <source>You can safely disable this rule if you do not have any strict conventions about whitespace before &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 문 앞에 공백에 대한 엄격한 규칙이없는 경우이 규칙을 안전하게 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfce14f8c899bcdd1e24f2f0b6601c19c38ed3b4" translate="yes" xml:space="preserve">
          <source>You can set the option in configuration like this:</source>
          <target state="translated">다음과 같이 구성에서 옵션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14d70a05f0792c4a1ae4eaccddd4a37dbcf08531" translate="yes" xml:space="preserve">
          <source>You can set the style in configuration like this:</source>
          <target state="translated">다음과 같이 구성에서 스타일을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3a95ecc1d2ecda1203dd4ccc205cb90ab915cb0" translate="yes" xml:space="preserve">
          <source>You can specify a formatter using the &lt;code&gt;--format&lt;/code&gt; or &lt;code&gt;-f&lt;/code&gt; flag on the command line. For example, &lt;code&gt;--format codeframe&lt;/code&gt; uses the &lt;code&gt;codeframe&lt;/code&gt; formatter.</source>
          <target state="translated">명령 행 에서 &lt;code&gt;--format&lt;/code&gt; 또는 &lt;code&gt;-f&lt;/code&gt; 플래그를 사용하여 포맷터를 지정할 수 있습니다 . 예를 들어 &lt;code&gt;--format codeframe&lt;/code&gt; 은 &lt;code&gt;codeframe&lt;/code&gt; formatter를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="8c1f98ff8ebca28044ac67f7746aada07ad69565" translate="yes" xml:space="preserve">
          <source>You can specify different options for object literals, destructuring assignments, and named imports and exports:</source>
          <target state="translated">객체 리터럴, 할당 제거 및 명명 된 가져 오기 및 내보내기에 대해 다른 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7acef2ac1d2ee21d2e9b97981ca6660fa931bd0" translate="yes" xml:space="preserve">
          <source>You can specify one or more fix type on the command line. Here are some examples:</source>
          <target state="translated">명령 행에서 하나 이상의 수정 유형을 지정할 수 있습니다. 여기 몇 가지 예가 있어요.</target>
        </trans-unit>
        <trans-unit id="3a9edaa19664a37976636e42b3bbc49a10dcc6a3" translate="yes" xml:space="preserve">
          <source>You can specify up to 5 different elements in the &lt;code&gt;&quot;ignore&quot;&lt;/code&gt; array:</source>
          <target state="translated">&lt;code&gt;&quot;ignore&quot;&lt;/code&gt; 배열 에 최대 5 개의 다른 요소를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8a66e3fbef03fc85ec06fb6eb87efdfac3ef227" translate="yes" xml:space="preserve">
          <source>You can tell ESLint to ignore specific files and directories by &lt;code&gt;ignorePatterns&lt;/code&gt; in your config files. Each value of &lt;code&gt;ignorePatterns&lt;/code&gt; is the same pattern as each line of &lt;code&gt;.eslintignore&lt;/code&gt; in the next section.</source>
          <target state="translated">구성 파일에서 &lt;code&gt;ignorePatterns&lt;/code&gt; 를 사용하여 ESLint에 특정 파일 및 디렉토리를 무시하도록 지시 할 수 있습니다 . &lt;code&gt;ignorePatterns&lt;/code&gt; 의 각 값은 다음 섹션에서 &lt;code&gt;.eslintignore&lt;/code&gt; 의 각 줄과 동일한 패턴 입니다.</target>
        </trans-unit>
        <trans-unit id="69eb6bace36d44d59da15e050f9d46b501ef2cde" translate="yes" xml:space="preserve">
          <source>You can tell ESLint to ignore specific files and directories by creating an &lt;code&gt;.eslintignore&lt;/code&gt; file in your project's root directory. The &lt;code&gt;.eslintignore&lt;/code&gt; file is a plain text file where each line is a glob pattern indicating which paths should be omitted from linting. For example, the following will omit all JavaScript files:</source>
          <target state="translated">프로젝트의 루트 디렉토리에 &lt;code&gt;.eslintignore&lt;/code&gt; 파일 을 작성하여 특정 파일 및 디렉토리를 무시하도록 ESLint에 지시 할 수 있습니다 . &lt;code&gt;.eslintignore&lt;/code&gt; 의 파일은 각각의 라인은 경로를 linting 생략되어야 하는지를 나타내는 글롭 패턴 인 일반 텍스트 파일이다. 예를 들어, 다음은 모든 JavaScript 파일을 생략합니다.</target>
        </trans-unit>
        <trans-unit id="07a5b92964320f755eb8b343a5549ac125d601ec" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are confident that you will not accidentally introduce code like this.</source>
          <target state="translated">실수로 이와 같은 코드를 도입하지 않을 것으로 확신하는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1dabd948f8fc4368d9a096a0496588f5e9d7ac5" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are happy for identifiers to be named freely.</source>
          <target state="translated">식별자의 이름을 자유롭게 지정하려면이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ead51fe7eca0624058e9dd30d153690a5cfe5ef3" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with dangling commas.</source>
          <target state="translated">매달려있는 쉼표에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="021a3d44e41aea17de61c2b2f39f3400f8007e26" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of computed properties.</source>
          <target state="translated">계산 된 속성의 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1be2a0d6f7c962401db849d346008a44316bd07" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of newlines before or after dots in member expressions.</source>
          <target state="translated">멤버 표현식에서 점 앞뒤에 줄 바꿈이 일관성이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e83bc519032a6c2561f0d69d78c81eb51dab4ba4" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of padding within blocks.</source>
          <target state="translated">블록 내 패딩 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0fee24285a9d479b0faa988ca701accb7f9e6f9" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing around infix operators.</source>
          <target state="translated">중위 연산자 주위의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46686a370899f52511887376b8a8af6f183f14d9" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing before blocks.</source>
          <target state="translated">블록 앞 간격의 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cf5555ae8efd9cae7ca24601209d126bebf1c8d" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing before function parenthesis.</source>
          <target state="translated">함수 괄호 앞의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c7ff0cc042575d1c3fe4a38fc882b384a792d7f" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing before or after semicolons.</source>
          <target state="translated">세미콜론 전후 간격의 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ef79e010842921d6c0299b016b7b8187a59caa1" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing between array brackets.</source>
          <target state="translated">배열 괄호 사이의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae458600c4bf1541d70861fbf0c0093b0bffdb19" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing between brackets.</source>
          <target state="translated">대괄호 사이의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b40ead7591a9d50bce86580342b6880495cb3d7d" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing between curly braces.</source>
          <target state="translated">중괄호 사이의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="399911252d973444bfdd825e343ccf5b7f4fb13b" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the consistency of spacing between parentheses.</source>
          <target state="translated">괄호 사이의 간격 일관성에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90db7f006b14b682efb99423e5e1f4b015b39c4a" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the number of lines in your files.</source>
          <target state="translated">파일의 줄 수에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61f7943a7b36f0c9848cc344cf7beb7998fde107" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the number of lines in your functions.</source>
          <target state="translated">함수의 줄 수에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a80d6d17e9e0b7342253388cfca93c129e901873" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the number of statements on each line.</source>
          <target state="translated">각 줄의 문장 수에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cb2dfaaf52dcf5ab2a3865e1f1b53ee031efdc6" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with the simultaneous presence of setters and getters on objects.</source>
          <target state="translated">객체에 세터와 게터가 동시에 존재하는 것에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c05ae4dd2004cda1d398dfd43981731a1d09efdc" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you are not concerned with unnecessary complexity in conditional expressions.</source>
          <target state="translated">조건식의 불필요한 복잡성이 걱정되지 않으면이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a5d1a3bb03bf51654964fa78f02406e791740a3" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you do not want to restrict the use of certain identifiers.</source>
          <target state="translated">특정 식별자의 사용을 제한하지 않으려면이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e320636ccf27498a9b0e15597d84be4b5b8aa7fa" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you don&amp;rsquo;t use JSX or if you aren&amp;rsquo;t concerned with a consistent usage of quotes within JSX attributes.</source>
          <target state="translated">JSX를 사용하지 않거나 JSX 속성 내에서 일관된 따옴표 사용에 관심이없는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="540472f7a9a56c6d9f25b9bbcb2abb0d340d1318" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you don't want to check RegExp character class syntax for multiple code point characters.</source>
          <target state="translated">여러 코드 포인트 문자에 대해 RegExp 문자 클래스 구문을 확인하지 않으려는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e526062590775afa54b322407fb8936f5dd5cb2e" translate="yes" xml:space="preserve">
          <source>You can turn this rule off if you want to decide, case-by-case, whether to place property specifications on separate lines.</source>
          <target state="translated">속성 사양을 별도의 줄에 배치할지 여부를 사례별로 결정하려는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4795aed3116d450fce0dc286a41a09ef1d5f6de7" translate="yes" xml:space="preserve">
          <source>You can use another configuration that forces brace-less &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt; if their body contains only one single-line statement. And forces braces in all other cases.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; , &lt;code&gt;else if&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , &lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , 또는 본문에 한 줄만 포함 된 경우 &lt;code&gt;do&lt;/code&gt; 하는 강제로 다른 구성을 사용할 수 있습니다 . 그리고 다른 모든 경우에는 중괄호를 강제합니다.</target>
        </trans-unit>
        <trans-unit id="0146f67de208ee83bb0e815d8eef8352a361a32b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;await&lt;/code&gt; operator inside of them.</source>
          <target state="translated">그 안에 &lt;code&gt;await&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf284ce3fc55bebb6f1aa6cfcfc6c24c2bf52e0" translate="yes" xml:space="preserve">
          <source>You can use this option if you want to prevent &lt;code&gt;typeof&lt;/code&gt; check on a variable which has not been declared.</source>
          <target state="translated">당신이 못하게하려는 경우이 옵션을 사용할 수 있습니다 &lt;code&gt;typeof&lt;/code&gt; 선언되지 않은 변수에 대한 확인.</target>
        </trans-unit>
        <trans-unit id="06188ee2bfe6d51c262fcb1ba3685af654f7ebbb" translate="yes" xml:space="preserve">
          <source>You cannot write &lt;code&gt;ignorePatterns&lt;/code&gt; property under &lt;code&gt;overrides&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;overrides&lt;/code&gt; 속성 아래에서 &lt;code&gt;ignorePatterns&lt;/code&gt; 속성을 쓸 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="093a1b6237db2060f03c41f895c893ee618b7668" translate="yes" xml:space="preserve">
          <source>You have some familiarity with Node.js, since ESLint runs on it.</source>
          <target state="translated">ESLint가 실행되므로 Node.js에 익숙합니다.</target>
        </trans-unit>
        <trans-unit id="80b9f29a995b6eb8ea91dfae43ee0a03ed99afbc" translate="yes" xml:space="preserve">
          <source>You know JavaScript, since ESLint is written in JavaScript.</source>
          <target state="translated">ESLint는 JavaScript로 작성되므로 JavaScript를 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="652daac85134f276e18c101e62292a46d35fc8b2" translate="yes" xml:space="preserve">
          <source>You may also specify a custom message for any paths you want to restrict as follows:</source>
          <target state="translated">다음과 같이 제한하려는 경로에 대한 사용자 정의 메시지를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfae34672f58cf174038fc89acc4f2786020643d" translate="yes" xml:space="preserve">
          <source>You may want to disable this rule when working with polyfills that try to patch older versions of JavaScript with the latest spec, such as those that might &lt;code&gt;Function.prototype.bind&lt;/code&gt; or &lt;code&gt;Array.prototype.forEach&lt;/code&gt; in a future-friendly way.</source>
          <target state="translated">미래의 친화적 인 방식으로 &lt;code&gt;Function.prototype.bind&lt;/code&gt; 또는 &lt;code&gt;Array.prototype.forEach&lt;/code&gt; 와 같은 최신 사양으로 이전 버전의 JavaScript를 패치하려고 시도하는 폴리 필로 작업 할 때이 규칙을 사용하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ba039299af66f99c5cc429e70125b8732d098e1" translate="yes" xml:space="preserve">
          <source>You may want to turn this rule off if you will be using the &lt;code&gt;typeof&lt;/code&gt; operator on host objects.</source>
          <target state="translated">호스트 객체 에서 &lt;code&gt;typeof&lt;/code&gt; 연산자를 사용하려는 경우이 규칙을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d203ff88af08286d8cd15ae37ea009db758bab" translate="yes" xml:space="preserve">
          <source>You may want to turn this rule off if your code only touches objects with hardcoded keys, and you will never use an object that shadows an &lt;code&gt;Object.prototype&lt;/code&gt; method or which does not inherit from &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">코드가 하드 코드 된 키가있는 객체에만 닿는 경우이 규칙을 해제 할 수 있으며 &lt;code&gt;Object.prototype&lt;/code&gt; 메서드를 숨기 거나 &lt;code&gt;Object.prototype&lt;/code&gt; 에서 상속되지 않은 객체는 절대 사용 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4669f66f3521a01d86f8e31089066032740f6fa2" translate="yes" xml:space="preserve">
          <source>You might enable all core rules as a shortcut to explore rules and options while you decide on the configuration for a project, especially if you rarely override options or disable rules. The default options for rules are not endorsements by ESLint (for example, the default option for the &lt;code&gt;quotes&lt;/code&gt; rule does not mean double quotes are better than single quotes).</source>
          <target state="translated">특히 옵션을 무시하거나 규칙을 거의 사용하지 않는 경우 프로젝트의 구성을 결정하는 동안 규칙 및 옵션을 탐색하는 바로 가기로 모든 핵심 규칙을 사용하도록 설정할 수 있습니다. 규칙의 기본 옵션은 ESLint의 보증이 아닙니다 (예 : &lt;code&gt;quotes&lt;/code&gt; 규칙 의 기본 옵션 은 큰 따옴표가 작은 따옴표보다 낫다는 의미는 아닙니다).</target>
        </trans-unit>
        <trans-unit id="984241dec3622d0778147047b3477fa1a80f7e56" translate="yes" xml:space="preserve">
          <source>You might find that there are merge conflicts when you attempt to rebase. Please &lt;a href=&quot;https://help.github.com/articles/resolving-merge-conflicts-after-a-git-rebase/&quot;&gt;resolve the conflicts&lt;/a&gt; and then do a forced push to your branch:</source>
          <target state="translated">리베이스하려고 할 때 병합 충돌이 있음을 알 수 있습니다. 제발 &lt;a href=&quot;https://help.github.com/articles/resolving-merge-conflicts-after-a-git-rebase/&quot;&gt;충돌을 해결&lt;/a&gt; 한 다음 지점에 강제로 밀어 넣기를 수행합니다</target>
        </trans-unit>
        <trans-unit id="05ec3e7a8155497c8ad786de4a91268cfe7e70bf" translate="yes" xml:space="preserve">
          <source>You might want to turn this rule off if you need to support legacy browsers which implement the &lt;code&gt;__proto__&lt;/code&gt; property but not &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; or &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; 또는 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 가 아닌 &lt;code&gt;__proto__&lt;/code&gt; 속성 을 구현하는 레거시 브라우저를 지원해야하는 경우이 규칙을 해제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41fc90cad0a71474be447e87ea4f5e2b7e8a9997" translate="yes" xml:space="preserve">
          <source>You must be connected to the Internet for this step to work. You'll see a lot of utilities being downloaded.</source>
          <target state="translated">이 단계가 작동하려면 인터넷에 연결되어 있어야합니다. 많은 유틸리티가 다운로드되는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9534af2849af88e43ed713b6727a35ec550aff58" translate="yes" xml:space="preserve">
          <source>You should declare your dependency on ESLint in &lt;code&gt;package.json&lt;/code&gt; using the &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;peerDependencies&lt;/a&gt; field. The recommended way to declare a dependency for future proof compatibility is with the &quot;&amp;gt;=&quot; range syntax, using the lowest required ESLint version. For example:</source>
          <target state="translated">&lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;peerDependencies&lt;/a&gt; 필드를 사용하여 &lt;code&gt;package.json&lt;/code&gt; 에서 ESLint에 대한 종속성을 선언해야 합니다. 향후 증명 호환성을 위해 종속성을 선언하는 권장 방법은 가장 낮은 필수 ESLint 버전을 사용하는 &quot;&amp;gt; =&quot;범위 구문을 사용하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51cb4594f2086cdab814a1c9924b44c659ac4a30" translate="yes" xml:space="preserve">
          <source>You should do all of your development for the issue in this branch.</source>
          <target state="translated">이 지점의 문제에 대한 모든 개발을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="28392df2557372b68ec7a977a5ef1e0831ad8895" translate="yes" xml:space="preserve">
          <source>You should start to see profiles for each run show up on the left side. If not, reload the page in the browser. Once all three profiles have completed, they will be available for inspection.</source>
          <target state="translated">각 런에 대한 프로파일이 왼쪽에 표시되기 시작해야합니다. 그렇지 않으면 브라우저에서 페이지를 다시로드하십시오. 세 개의 프로파일이 모두 완료되면 검사 할 수있게됩니다.</target>
        </trans-unit>
        <trans-unit id="6e2c420407829f55d27de2e76e23415230940bc2" translate="yes" xml:space="preserve">
          <source>You should then set up a configuration file, and the easiest way to do that is to use the &lt;code&gt;--init&lt;/code&gt; flag:</source>
          <target state="translated">그런 다음 구성 파일을 설정해야하며이를 수행하는 가장 쉬운 방법은 &lt;code&gt;--init&lt;/code&gt; 플래그 를 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="236183c3c8f4123b70a42d215a4e2d52aacc1e08" translate="yes" xml:space="preserve">
          <source>You should then set up a configuration file:</source>
          <target state="translated">그런 다음 구성 파일을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="640e3495295985ec29e96039f4eb1fd96e8e956a" translate="yes" xml:space="preserve">
          <source>You should use ECMAScript 6 iterators and generators instead.</source>
          <target state="translated">대신 ECMAScript 6 반복자와 생성기를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="876adab9c57c28cfde5d73f7e924b6df72e25bf9" translate="yes" xml:space="preserve">
          <source>You should use a &lt;code&gt;SourceCode&lt;/code&gt; object whenever you need to get more information about the code being linted.</source>
          <target state="translated">보풀이있는 코드에 대한 자세한 정보가 필요할 때마다 &lt;code&gt;SourceCode&lt;/code&gt; 객체를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4b67bebf6e83b9fc66b88ddf16726e4b0f92b58f" translate="yes" xml:space="preserve">
          <source>You should use one variable declaration for each variable you want to define.</source>
          <target state="translated">정의하려는 각 변수마다 하나의 변수 선언을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c44b71cc380e7464a953d3c6638501798e65849b" translate="yes" xml:space="preserve">
          <source>You understand unit tests and why they're important.</source>
          <target state="translated">단위 테스트와 왜 중요한지 이해합니다.</target>
        </trans-unit>
        <trans-unit id="f6fd99da694f8007d38abe30c71a8123ccc8a7ac" translate="yes" xml:space="preserve">
          <source>You want to use a non-identifier character in your property name, such as having a property with a space like &lt;code&gt;&quot;one two&quot;&lt;/code&gt;.</source>
          <target state="translated">속성 이름에 공백이없는 &lt;code&gt;&quot;one two&quot;&lt;/code&gt; 와 같이 식별자가 아닌 문자를 사용하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="47471750817e30e32a10965f489650441c6575f2" translate="yes" xml:space="preserve">
          <source>You would run ESLint with this custom formatter and an environment variable set like this:</source>
          <target state="translated">이 사용자 정의 포맷터와 다음과 같이 환경 변수 세트를 사용하여 ESLint를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="bacf85697992c297cc92ca5f6fdb99541bd5a3fd" translate="yes" xml:space="preserve">
          <source>You would see this warning:</source>
          <target state="translated">다음 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f4ad0fd583bd41cba03bd42f58f00e34a132498c" translate="yes" xml:space="preserve">
          <source>You'll be guided through a series of questions that will help you setup a basic configuration file to get you started.</source>
          <target state="translated">시작하기 위해 기본 구성 파일을 설정하는 데 도움이되는 일련의 질문을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="9e61ed45590a5941ca638fc88271a7996f36df5a" translate="yes" xml:space="preserve">
          <source>You'll see this warning:</source>
          <target state="translated">이 경고가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="ebf3fe8d9984f4669b4afb378d1d84dc239cf4f9" translate="yes" xml:space="preserve">
          <source>You're comfortable with command-line programs.</source>
          <target state="translated">명령 줄 프로그램에 익숙합니다.</target>
        </trans-unit>
        <trans-unit id="2f27029694e3d0a33c85b86f37c53f1f3fc4b2f4" translate="yes" xml:space="preserve">
          <source>You're finally ready to start working with rules. You may want to fix an existing rule or create a new one. This section explains how to do all of that.</source>
          <target state="translated">이제 규칙 작업을 시작할 준비가되었습니다. 기존 규칙을 수정하거나 새로 만들 수 있습니다. 이 섹션에서는 모든 작업을 수행하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b1370565ce49671150ada1e444ee84d0daa4c0d8" translate="yes" xml:space="preserve">
          <source>You've developed library-specific rules for ESLint and you want to share it with the community. You can publish an ESLint plugin on npm.</source>
          <target state="translated">ESLint에 대한 라이브러리 별 규칙을 개발했으며이를 커뮤니티와 공유하려고합니다. npm에 ESLint 플러그인을 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a5ae1ed78e5958cd0969e6ef21bfb2d980116f1" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; configuration file will also include the line:</source>
          <target state="translated">귀하의 &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; 구성 파일에는 줄을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="548972322e94bfb37e9b54b22fc8a86d696aec1f" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.eslintrc&lt;/code&gt; configuration file will also include the line:</source>
          <target state="translated">귀하의 &lt;code&gt;.eslintrc&lt;/code&gt; 의 구성 파일에는 줄을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="1d5d3e3b727a925611fde953c5cbcebdd85c46e1" translate="yes" xml:space="preserve">
          <source>Your browser should automatically open to the page in question. When that happens:</source>
          <target state="translated">브라우저가 해당 페이지를 자동으로 열어야합니다. 그럴 때 :</target>
        </trans-unit>
        <trans-unit id="ac122a235c4680c4dec5f8f339eaf95ba42f4ed4" translate="yes" xml:space="preserve">
          <source>Your take on the correct solution to problem.</source>
          <target state="translated">문제에 대한 올바른 해결책을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="ae9e6b60887f5d03432cb8ece2fe287bb9d89878" translate="yes" xml:space="preserve">
          <source>Zero Width Space</source>
          <target state="translated">제로 폭 공간</target>
        </trans-unit>
        <trans-unit id="f8beee34fe974e91aa606edae9e1b0b73946c619" translate="yes" xml:space="preserve">
          <source>a code path through the function returns a Boolean value &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">함수를 통한 코드 경로는 부울 값 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="8f3f5fe1eb7d80d5ade57b76fbbdc5e5cca40190" translate="yes" xml:space="preserve">
          <source>a string that specifies a configuration (either a path to a config file, the name of a shareable config, &lt;code&gt;eslint:recommended&lt;/code&gt;, or &lt;code&gt;eslint:all&lt;/code&gt;)</source>
          <target state="translated">구성을 지정하는 문자열 (구성 파일의 경로, 공유 가능한 구성의 이름, &lt;code&gt;eslint:recommended&lt;/code&gt; 또는 &lt;code&gt;eslint:all&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="55ad57398381af0c1ec59999ac96027d9b403554" translate="yes" xml:space="preserve">
          <source>accessor-pairs</source>
          <target state="translated">accessor-pairs</target>
        </trans-unit>
        <trans-unit id="e19caa9af9e68f5536563bcfa0e9f3f6849956ce" translate="yes" xml:space="preserve">
          <source>acquire(node, inner = false)</source>
          <target state="translated">획득 (노드, 내부 = 거짓)</target>
        </trans-unit>
        <trans-unit id="8aebea2d1f92e7cbb607f24786a59f502fbf3a2c" translate="yes" xml:space="preserve">
          <source>acquireAll(node)</source>
          <target state="translated">acquireAll(node)</target>
        </trans-unit>
        <trans-unit id="ceb1d2ad3a424f26e1e0174573173f02c909091c" translate="yes" xml:space="preserve">
          <source>addPlugin()</source>
          <target state="translated">addPlugin()</target>
        </trans-unit>
        <trans-unit id="f89e845bf8b2239b42b45149c012ac05e3c8d301" translate="yes" xml:space="preserve">
          <source>adjacent null elements</source>
          <target state="translated">인접한 널 요소</target>
        </trans-unit>
        <trans-unit id="bd836477cc221860a8a1dbf91ca18f434dbbaf0e" translate="yes" xml:space="preserve">
          <source>adjacent sibling: &lt;code&gt;VariableDeclaration ~ VariableDeclaration&lt;/code&gt;</source>
          <target state="translated">인접 형제 : &lt;code&gt;VariableDeclaration ~ VariableDeclaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="74a2f555de8192333b3fd2f6100996564e61e11e" translate="yes" xml:space="preserve">
          <source>afterBlockComment</source>
          <target state="translated">afterBlockComment</target>
        </trans-unit>
        <trans-unit id="c2423b09d679166df792f4ad59e399a6d7406b8f" translate="yes" xml:space="preserve">
          <source>afterColon</source>
          <target state="translated">afterColon</target>
        </trans-unit>
        <trans-unit id="7e0ee419ff22094eb9f3df7fd1683969a1f66046" translate="yes" xml:space="preserve">
          <source>afterLineComment</source>
          <target state="translated">afterLineComment</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="4f67eb35f5745326d445bd9cd9afbfe8209622f3" translate="yes" xml:space="preserve">
          <source>align and multiLine</source>
          <target state="translated">정렬 및 여러 줄</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="43ad9521e976c32c511f9b332bd6f36b2a6ce966" translate="yes" xml:space="preserve">
          <source>all require declarations must be of the same type (grouping)</source>
          <target state="translated">모든 필수 선언은 동일한 유형이어야합니다 (그룹화).</target>
        </trans-unit>
        <trans-unit id="d0ae2001b5c0fb431a06c0bafd745201d5954e6b" translate="yes" xml:space="preserve">
          <source>allman</source>
          <target state="translated">allman</target>
        </trans-unit>
        <trans-unit id="6452e7c5a42f97b00af1a210afc7d4de315e57ec" translate="yes" xml:space="preserve">
          <source>allow</source>
          <target state="translated">allow</target>
        </trans-unit>
        <trans-unit id="3ca69f290e7656729c4d1a5240869a336d7b65a1" translate="yes" xml:space="preserve">
          <source>allow-null</source>
          <target state="translated">allow-null</target>
        </trans-unit>
        <trans-unit id="5ea023488b91691cc2e48a681964a431938bef53" translate="yes" xml:space="preserve">
          <source>allow: arrowFunctions</source>
          <target state="translated">허용 : arrow 기능</target>
        </trans-unit>
        <trans-unit id="ba515057764b02ca4ab2737cc3b64cb1f378b2ca" translate="yes" xml:space="preserve">
          <source>allow: asyncFunctions</source>
          <target state="translated">허용 : asyncFunctions</target>
        </trans-unit>
        <trans-unit id="debe55933e2d8e1cfe4d25e445665011793f7c62" translate="yes" xml:space="preserve">
          <source>allow: asyncMethods</source>
          <target state="translated">허용 : asyncMethods</target>
        </trans-unit>
        <trans-unit id="52089bdf973f46fe17a3c28eb9f5ce96b3fe03ae" translate="yes" xml:space="preserve">
          <source>allow: constructors</source>
          <target state="translated">허용 : 생성자</target>
        </trans-unit>
        <trans-unit id="51e2b3e9cfb059d1171f1562fc8b35c43829dc9a" translate="yes" xml:space="preserve">
          <source>allow: functions</source>
          <target state="translated">허용 : 기능</target>
        </trans-unit>
        <trans-unit id="539242111915c8849f6b4f6f34c4a0051f9cbad5" translate="yes" xml:space="preserve">
          <source>allow: generatorFunctions</source>
          <target state="translated">허용 : generatorFunctions</target>
        </trans-unit>
        <trans-unit id="b49d6b9ce553f43ce01eb887ba09b8fc58e3b4c4" translate="yes" xml:space="preserve">
          <source>allow: generatorMethods</source>
          <target state="translated">허용 : generatorMethods</target>
        </trans-unit>
        <trans-unit id="05f83ce529f2972c160f4efff2e5eab71f4f327e" translate="yes" xml:space="preserve">
          <source>allow: getters</source>
          <target state="translated">허용 : 게터</target>
        </trans-unit>
        <trans-unit id="735b49264fe8edee6a7ac6b4d2e0c6014f8b5714" translate="yes" xml:space="preserve">
          <source>allow: methods</source>
          <target state="translated">허용 : 메소드</target>
        </trans-unit>
        <trans-unit id="688458cac85ecd5422ec02c30dccaf5177293534" translate="yes" xml:space="preserve">
          <source>allow: setters</source>
          <target state="translated">허용 : 세터</target>
        </trans-unit>
        <trans-unit id="39271317c9d8a679c7ce32b876e5718c248ff589" translate="yes" xml:space="preserve">
          <source>allowAfterSuper</source>
          <target state="translated">allowAfterSuper</target>
        </trans-unit>
        <trans-unit id="3c49fcb702ededa8738dd5f1cc2fdb5616797dab" translate="yes" xml:space="preserve">
          <source>allowAfterThis</source>
          <target state="translated">allowAfterThis</target>
        </trans-unit>
        <trans-unit id="83f18e864b60ea84a5554ceeb0ff6112e8b208aa" translate="yes" xml:space="preserve">
          <source>allowAfterThisConstructor</source>
          <target state="translated">allowAfterThisConstructor</target>
        </trans-unit>
        <trans-unit id="7949da6aba42bb23d6f3924d3614aa0500885950" translate="yes" xml:space="preserve">
          <source>allowArrayEnd</source>
          <target state="translated">allowArrayEnd</target>
        </trans-unit>
        <trans-unit id="08767bec82295aa348a346b65c675b4acfd3f480" translate="yes" xml:space="preserve">
          <source>allowArrayStart</source>
          <target state="translated">allowArrayStart</target>
        </trans-unit>
        <trans-unit id="c82ecb423ec3af960799f43a3eeee3cfd3007412" translate="yes" xml:space="preserve">
          <source>allowArrowFunctions</source>
          <target state="translated">allowArrowFunctions</target>
        </trans-unit>
        <trans-unit id="2e3f1d84277ef1536cece1b98b6f42e97cdb8628" translate="yes" xml:space="preserve">
          <source>allowAsStatement</source>
          <target state="translated">allowAsStatement</target>
        </trans-unit>
        <trans-unit id="a95a7a057d0f55f84f86437322b8ae1227d825f4" translate="yes" xml:space="preserve">
          <source>allowBlockEnd</source>
          <target state="translated">allowBlockEnd</target>
        </trans-unit>
        <trans-unit id="2fff3b8e9b8392b64928faddf9097efaaa66b2c8" translate="yes" xml:space="preserve">
          <source>allowBlockStart</source>
          <target state="translated">allowBlockStart</target>
        </trans-unit>
        <trans-unit id="0139e5bdec80a23b197143e62c8a5a7c68947d12" translate="yes" xml:space="preserve">
          <source>allowCall</source>
          <target state="translated">allowCall</target>
        </trans-unit>
        <trans-unit id="a5ea685be48103093b0bc08055d0e89bf6eb43b5" translate="yes" xml:space="preserve">
          <source>allowClassEnd</source>
          <target state="translated">allowClassEnd</target>
        </trans-unit>
        <trans-unit id="c5c59a6fcfd50de637c625e9c2f0e5094176e026" translate="yes" xml:space="preserve">
          <source>allowClassStart</source>
          <target state="translated">allowClassStart</target>
        </trans-unit>
        <trans-unit id="00a8ce82bf7f8f30e8abb95849627f4d4584297a" translate="yes" xml:space="preserve">
          <source>allowConstructorFlags</source>
          <target state="translated">allowConstructorFlags</target>
        </trans-unit>
        <trans-unit id="8132dd882ad5a32e5b9d2cc316910c844c0bc2f9" translate="yes" xml:space="preserve">
          <source>allowEmptyCatch</source>
          <target state="translated">allowEmptyCatch</target>
        </trans-unit>
        <trans-unit id="6eebcbe067072c375be817bc967b5495d4530850" translate="yes" xml:space="preserve">
          <source>allowForLoopAfterthoughts</source>
          <target state="translated">allowForLoopAfterthoughts</target>
        </trans-unit>
        <trans-unit id="cd4b4bde87166e76a0b8910920f8996910493632" translate="yes" xml:space="preserve">
          <source>allowFunctionParams</source>
          <target state="translated">allowFunctionParams</target>
        </trans-unit>
        <trans-unit id="fd10e8a68cdf072ea079a2b4241c9b3dd0748440" translate="yes" xml:space="preserve">
          <source>allowImplicit</source>
          <target state="translated">allowImplicit</target>
        </trans-unit>
        <trans-unit id="80b381a0a946ecf9e3ac6306409ac47689910cd5" translate="yes" xml:space="preserve">
          <source>allowIndentationTabs</source>
          <target state="translated">allowIndentationTabs</target>
        </trans-unit>
        <trans-unit id="d3f8a695710fdde390c6fe98b93c43fab26f2a82" translate="yes" xml:space="preserve">
          <source>allowKeywords</source>
          <target state="translated">allowKeywords</target>
        </trans-unit>
        <trans-unit id="09df55ecc46c60e0793a9895288d66e77b7f4699" translate="yes" xml:space="preserve">
          <source>allowLoop</source>
          <target state="translated">allowLoop</target>
        </trans-unit>
        <trans-unit id="b189567871edfe578613086f3c7011f75d7df980" translate="yes" xml:space="preserve">
          <source>allowNamedFunctions</source>
          <target state="translated">allowNamedFunctions</target>
        </trans-unit>
        <trans-unit id="f41dd5dba171785d998dd6404469b75119472821" translate="yes" xml:space="preserve">
          <source>allowNewlines</source>
          <target state="translated">allowNewlines</target>
        </trans-unit>
        <trans-unit id="440819b6c466f6a1972235069bed7bbb77d3c1f0" translate="yes" xml:space="preserve">
          <source>allowObjectEnd</source>
          <target state="translated">allowObjectEnd</target>
        </trans-unit>
        <trans-unit id="bf37c85b8433ef4eb42e95fd066380556b91ce1f" translate="yes" xml:space="preserve">
          <source>allowObjectStart</source>
          <target state="translated">allowObjectStart</target>
        </trans-unit>
        <trans-unit id="51eaa1574ed4ff038a09098fcefe75080cf39614" translate="yes" xml:space="preserve">
          <source>allowPattern</source>
          <target state="translated">allowPattern</target>
        </trans-unit>
        <trans-unit id="60860477af03a274894237bf2e6a4484e6f2639d" translate="yes" xml:space="preserve">
          <source>allowSamePrecedence</source>
          <target state="translated">allowSamePrecedence</target>
        </trans-unit>
        <trans-unit id="77fdecc9c001467f0f22002a7aa6a4312d733c23" translate="yes" xml:space="preserve">
          <source>allowShortCircuit</source>
          <target state="translated">allowShortCircuit</target>
        </trans-unit>
        <trans-unit id="78f26a39d292a340d8b11eb83c86b896631acbeb" translate="yes" xml:space="preserve">
          <source>allowShortCircuit and allowTernary</source>
          <target state="translated">allowShortCircuit 및 allowTernary</target>
        </trans-unit>
        <trans-unit id="ad2d04974dcbe7b6669773efb79c0c01c54c2ff2" translate="yes" xml:space="preserve">
          <source>allowSwitch</source>
          <target state="translated">allowSwitch</target>
        </trans-unit>
        <trans-unit id="829926aa9acd2aafd36696fa256128c51c7087a1" translate="yes" xml:space="preserve">
          <source>allowTaggedTemplates</source>
          <target state="translated">allowTaggedTemplates</target>
        </trans-unit>
        <trans-unit id="534e1e8ecd2f3d5aba71b781bea041db71c139ea" translate="yes" xml:space="preserve">
          <source>allowTemplateLiterals</source>
          <target state="translated">allowTemplateLiterals</target>
        </trans-unit>
        <trans-unit id="b39cc68db2274964dd17803a8af74bc21223f219" translate="yes" xml:space="preserve">
          <source>allowTernary</source>
          <target state="translated">allowTernary</target>
        </trans-unit>
        <trans-unit id="6c7edf96f4b9535b15e501f4311720fc25d141ba" translate="yes" xml:space="preserve">
          <source>allowUnboundThis</source>
          <target state="translated">allowUnboundThis</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="6ba5d9b6bc209ef040bc0da18619f34bfccecb4d" translate="yes" xml:space="preserve">
          <source>always + allowSingleLineBlocks</source>
          <target state="translated">항상 + allowSingleLineBlocks</target>
        </trans-unit>
        <trans-unit id="f1ca906def0ef66f2de9d0027de7024b3ddd247f" translate="yes" xml:space="preserve">
          <source>always-multiline</source>
          <target state="translated">always-multiline</target>
        </trans-unit>
        <trans-unit id="c92723fcdb10d811bc3ea4bd3386d71f225f576c" translate="yes" xml:space="preserve">
          <source>an array of strings: each additional configuration extends the preceding configurations</source>
          <target state="translated">문자열 배열 : 각 추가 구성은 이전 구성을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="6540a339ec4199127bcda7f2ea195f4fd7df7797" translate="yes" xml:space="preserve">
          <source>an initial null element, to avoid conflicts with the &lt;a href=&quot;array-bracket-spacing&quot;&gt;&lt;code&gt;array-bracket-spacing&lt;/code&gt;&lt;/a&gt; rule</source>
          <target state="translated">&lt;a href=&quot;array-bracket-spacing&quot;&gt; &lt;code&gt;array-bracket-spacing&lt;/code&gt; &lt;/a&gt; 규칙 과의 충돌을 피하기위한 초기 널 요소</target>
        </trans-unit>
        <trans-unit id="b93aba6b867449e9b476254a4f31ce706b82a6bb" translate="yes" xml:space="preserve">
          <source>another code path does not return a value explicitly, therefore returns &lt;code&gt;undefined&lt;/code&gt; implicitly</source>
          <target state="translated">다른 코드 경로는 명시 적으로 값을 반환하지 않으므로 암시 적으로 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="09a7553104ea363ce5028cb76da58082a1edbd33" translate="yes" xml:space="preserve">
          <source>applyDefaultIgnorePatterns</source>
          <target state="translated">applyDefaultIgnorePatterns</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="1e59286f2bc11b24377b32330326472980a646a0" translate="yes" xml:space="preserve">
          <source>args: after-used</source>
          <target state="translated">인수 : 사용 후</target>
        </trans-unit>
        <trans-unit id="c1ac002dc3efeae80f1585ca083c89e1866bd8ac" translate="yes" xml:space="preserve">
          <source>args: all</source>
          <target state="translated">인수 : 모두</target>
        </trans-unit>
        <trans-unit id="0a14819862ce0f759ff9f4bb0b878fe61b53f896" translate="yes" xml:space="preserve">
          <source>args: none</source>
          <target state="translated">인수 : 없음</target>
        </trans-unit>
        <trans-unit id="53018a39bf1b388581a7617eb00ea39a1d70a9e5" translate="yes" xml:space="preserve">
          <source>argsIgnorePattern</source>
          <target state="translated">argsIgnorePattern</target>
        </trans-unit>
        <trans-unit id="60c1711fecbc0a515495b6aea9e713e6c9344678" translate="yes" xml:space="preserve">
          <source>array-bracket-newline</source>
          <target state="translated">array-bracket-newline</target>
        </trans-unit>
        <trans-unit id="6d9067df84915639765b60529e8ce494c247121e" translate="yes" xml:space="preserve">
          <source>array-bracket-spacing</source>
          <target state="translated">array-bracket-spacing</target>
        </trans-unit>
        <trans-unit id="24f80a8b77d682a4f386e8bfa62211038c97d927" translate="yes" xml:space="preserve">
          <source>array-callback-return</source>
          <target state="translated">array-callback-return</target>
        </trans-unit>
        <trans-unit id="80165b516f30050832e1e300ff26e01c0ea6013d" translate="yes" xml:space="preserve">
          <source>array-element-newline</source>
          <target state="translated">array-element-newline</target>
        </trans-unit>
        <trans-unit id="afe64e4f46964c362f7e064e18b9c2923112192f" translate="yes" xml:space="preserve">
          <source>arraysInArrays</source>
          <target state="translated">arraysInArrays</target>
        </trans-unit>
        <trans-unit id="cf49d4680de1fd64238232f3732ace8f77441d02" translate="yes" xml:space="preserve">
          <source>arraysInObjects</source>
          <target state="translated">arraysInObjects</target>
        </trans-unit>
        <trans-unit id="3281769c911f79dfa60fb53d1fffac7f3792e9bd" translate="yes" xml:space="preserve">
          <source>arrow function arguments to avoid conflicts with the &lt;a href=&quot;arrow-parens&quot;&gt;arrow-parens&lt;/a&gt; rule</source>
          <target state="translated">와 피할 충돌이 함수 인수 화살표 &lt;a href=&quot;arrow-parens&quot;&gt;화살표 괄호의&lt;/a&gt; 규칙</target>
        </trans-unit>
        <trans-unit id="b38bc9777a5a1f29a7c4b54eb3dab9b14f99cb11" translate="yes" xml:space="preserve">
          <source>arrow-body-style</source>
          <target state="translated">arrow-body-style</target>
        </trans-unit>
        <trans-unit id="b1b465dd389e1a217997265b0ee59e1c1e098ffc" translate="yes" xml:space="preserve">
          <source>arrow-parens</source>
          <target state="translated">arrow-parens</target>
        </trans-unit>
        <trans-unit id="f740d1aee1fd2b8f907ec2cbcc3f411aad3e92a6" translate="yes" xml:space="preserve">
          <source>arrow-spacing</source>
          <target state="translated">arrow-spacing</target>
        </trans-unit>
        <trans-unit id="4ce58f96295f51997b09a7029c957ffbe384f821" translate="yes" xml:space="preserve">
          <source>as-needed</source>
          <target state="translated">as-needed</target>
        </trans-unit>
        <trans-unit id="418a3e57b15792ec014b470a1e09c4b87c1516f5" translate="yes" xml:space="preserve">
          <source>attribute conditions: &lt;code&gt;[attr!=&quot;foo&quot;]&lt;/code&gt;, &lt;code&gt;[attr&amp;gt;2]&lt;/code&gt;, &lt;code&gt;[attr&amp;lt;3]&lt;/code&gt;, &lt;code&gt;[attr&amp;gt;=2]&lt;/code&gt;, or &lt;code&gt;[attr&amp;lt;=3]&lt;/code&gt;</source>
          <target state="translated">속성 조건 : &lt;code&gt;[attr!=&quot;foo&quot;]&lt;/code&gt; , &lt;code&gt;[attr&amp;gt;2]&lt;/code&gt; , &lt;code&gt;[attr&amp;lt;3]&lt;/code&gt; , &lt;code&gt;[attr&amp;gt;=2]&lt;/code&gt; 또는 &lt;code&gt;[attr&amp;lt;=3]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e6776b93f94030e16bde1c32e24ea5a461073f7" translate="yes" xml:space="preserve">
          <source>attribute existence: &lt;code&gt;[attr]&lt;/code&gt;</source>
          <target state="translated">속성 존재 : &lt;code&gt;[attr]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="387c3c31ea6969db20b74f51173832b97b7b04b6" translate="yes" xml:space="preserve">
          <source>attribute regex: &lt;code&gt;[attr=/foo.*/]&lt;/code&gt;</source>
          <target state="translated">정규식 속성 : &lt;code&gt;[attr=/foo.*/]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9f807c01a8c4783c3e25b66f91648401d75fb42" translate="yes" xml:space="preserve">
          <source>attribute value: &lt;code&gt;[attr=&quot;foo&quot;]&lt;/code&gt; or &lt;code&gt;[attr=123]&lt;/code&gt;</source>
          <target state="translated">속성 값 : &lt;code&gt;[attr=&quot;foo&quot;]&lt;/code&gt; 또는 &lt;code&gt;[attr=123]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21c1aef797148c460f0e9d672acd8aea7a56cd9" translate="yes" xml:space="preserve">
          <source>avoidEscape</source>
          <target state="translated">avoidEscape</target>
        </trans-unit>
        <trans-unit id="7509930d058130604f3243eff8e57a63497eff72" translate="yes" xml:space="preserve">
          <source>backticks</source>
          <target state="translated">backticks</target>
        </trans-unit>
        <trans-unit id="405d0c8b05e15f806c831836d5377dd1b42f46a5" translate="yes" xml:space="preserve">
          <source>because 1 character of the specification of &lt;code&gt;a&lt;/code&gt; (i.e. the trailing &lt;code&gt;]&lt;/code&gt; of its value) is on the same line as the specification of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">명세서의 한 특성 때문에 (즉 후단 &lt;code&gt;]&lt;/code&gt; 의 값)은 명세서와 동일한 라인에 &lt;code&gt;b&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="e090eeb6a8cfee4dd4992e368cc2fb2adc8c3ef9" translate="yes" xml:space="preserve">
          <source>before &amp;amp; after</source>
          <target state="translated">전 후</target>
        </trans-unit>
        <trans-unit id="b659a68bc4bada7d20ad0f9d22adf555ca8e8752" translate="yes" xml:space="preserve">
          <source>beforeBlockComment</source>
          <target state="translated">beforeBlockComment</target>
        </trans-unit>
        <trans-unit id="fac6b7ed7ee02055a5265cd2ac08220e3faf9b00" translate="yes" xml:space="preserve">
          <source>beforeColon</source>
          <target state="translated">beforeColon</target>
        </trans-unit>
        <trans-unit id="6c2889673e3495222b15a3546c3f7ad011138a77" translate="yes" xml:space="preserve">
          <source>beforeLineComment</source>
          <target state="translated">beforeLineComment</target>
        </trans-unit>
        <trans-unit id="a7883500bb591d600e93c796b38ec08a00e2db97" translate="yes" xml:space="preserve">
          <source>beforeStatementContinuationChars</source>
          <target state="translated">beforeStatementContinuationChars</target>
        </trans-unit>
        <trans-unit id="0214b4b355d11ca8f2ce45a968c264651bdfbf83" translate="yes" xml:space="preserve">
          <source>block</source>
          <target state="translated">block</target>
        </trans-unit>
        <trans-unit id="18ba6beca51477739ab67d421ff8d4c6c2a853b8" translate="yes" xml:space="preserve">
          <source>block-scoped-var</source>
          <target state="translated">block-scoped-var</target>
        </trans-unit>
        <trans-unit id="ee193a5cd6247617e8b5bd8e743ae1c9ff0711b6" translate="yes" xml:space="preserve">
          <source>block-spacing</source>
          <target state="translated">block-spacing</target>
        </trans-unit>
        <trans-unit id="f7d5b2b95861daea9933ef0a243f733bbc79235e" translate="yes" xml:space="preserve">
          <source>blocks</source>
          <target state="translated">blocks</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="fc39b18f287d8bbfaceae020f4a4eb32ac5c1e70" translate="yes" xml:space="preserve">
          <source>both</source>
          <target state="translated">both</target>
        </trans-unit>
        <trans-unit id="6780003a316a8f3eeb09da5e14260fb4828484e6" translate="yes" xml:space="preserve">
          <source>bound lexically regardless of where or when they are invoked.</source>
          <target state="translated">언제 어디서 호출되는지에 상관없이 어휘 적으로 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="90f4ec3c48bff2faeeb61bcd3635002d7d61dad3" translate="yes" xml:space="preserve">
          <source>brace-style</source>
          <target state="translated">brace-style</target>
        </trans-unit>
        <trans-unit id="ef98362b8a6b0c8cd804b0d227aa1ffeaba89786" translate="yes" xml:space="preserve">
          <source>browser</source>
          <target state="translated">browser</target>
        </trans-unit>
        <trans-unit id="7f1988e40bdfe34d9dae05b7233ee913bfc3f0c5" translate="yes" xml:space="preserve">
          <source>builtinGlobals</source>
          <target state="translated">builtinGlobals</target>
        </trans-unit>
        <trans-unit id="c608cc4d253b402a3e6cb71e92b9fae61689bcb2" translate="yes" xml:space="preserve">
          <source>calculateConfigForFile()</source>
          <target state="translated">calculateConfigForFile()</target>
        </trans-unit>
        <trans-unit id="b30b80162a303c56baf5a9e22cc348a6d0b4fb53" translate="yes" xml:space="preserve">
          <source>callback-return</source>
          <target state="translated">callback-return</target>
        </trans-unit>
        <trans-unit id="966537cc0c6f3eda2c5b03c7e88530d30068bb1e" translate="yes" xml:space="preserve">
          <source>camelcase</source>
          <target state="translated">camelcase</target>
        </trans-unit>
        <trans-unit id="2a1cef73489c1e5260bc31fe48497febdf22f358" translate="yes" xml:space="preserve">
          <source>capIsConstructor</source>
          <target state="translated">capIsConstructor</target>
        </trans-unit>
        <trans-unit id="5f79fd52b25108307a59b3a87eab0fa4a7d9e311" translate="yes" xml:space="preserve">
          <source>capIsNew</source>
          <target state="translated">capIsNew</target>
        </trans-unit>
        <trans-unit id="99f9c5f9bafbaa34fab6324bcb0fa3788b8c95a0" translate="yes" xml:space="preserve">
          <source>capIsNewExceptionPattern</source>
          <target state="translated">capIsNewExceptionPattern</target>
        </trans-unit>
        <trans-unit id="fbb93787cf59ac164bb0a0fc0045f83bc78d8127" translate="yes" xml:space="preserve">
          <source>capIsNewExceptions</source>
          <target state="translated">capIsNewExceptions</target>
        </trans-unit>
        <trans-unit id="e5d24abdd5c4c36846523bd3de38ab4d77ab5d12" translate="yes" xml:space="preserve">
          <source>capitalized-comments</source>
          <target state="translated">capitalized-comments</target>
        </trans-unit>
        <trans-unit id="6a075cf66214714c9a10a6c56fd924a07ea4191d" translate="yes" xml:space="preserve">
          <source>caughtErrors</source>
          <target state="translated">caughtErrors</target>
        </trans-unit>
        <trans-unit id="e9e6f2ac87d34063db398e291b4c8d8416a49429" translate="yes" xml:space="preserve">
          <source>caughtErrors: all</source>
          <target state="translated">caughtErrors : 모두</target>
        </trans-unit>
        <trans-unit id="30a4af32f43e0a2de6334ef951c4f4b986cf1a68" translate="yes" xml:space="preserve">
          <source>caughtErrors: none</source>
          <target state="translated">caughtErrors : 없음</target>
        </trans-unit>
        <trans-unit id="c5df8e348ff97c49a4149a8fed906c1d76cb43fc" translate="yes" xml:space="preserve">
          <source>caughtErrorsIgnorePattern</source>
          <target state="translated">caughtErrorsIgnorePattern</target>
        </trans-unit>
        <trans-unit id="55e2e0ac12a1c1796e41cb988f6b87f8fc7804ea" translate="yes" xml:space="preserve">
          <source>change an inherited rule's severity without changing its options:</source>
          <target state="translated">옵션을 변경하지 않고 상속 된 규칙의 심각도를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="233245d0e38414cf12c1035d6e44bc4afed5d5eb" translate="yes" xml:space="preserve">
          <source>checkForEach</source>
          <target state="translated">checkForEach</target>
        </trans-unit>
        <trans-unit id="54f71544ab6036d54f2cd78525e1cd4f4ff259d2" translate="yes" xml:space="preserve">
          <source>checkLoops</source>
          <target state="translated">checkLoops</target>
        </trans-unit>
        <trans-unit id="0806f3cbb7ba72a868e4d81efeeac5abe405b40c" translate="yes" xml:space="preserve">
          <source>checkstyle</source>
          <target state="translated">checkstyle</target>
        </trans-unit>
        <trans-unit id="1c9260f66277c32d6dfb0dfe7703984b587212df" translate="yes" xml:space="preserve">
          <source>child: &lt;code&gt;UnaryExpression &amp;gt; Literal&lt;/code&gt;</source>
          <target state="translated">자식 : &lt;code&gt;UnaryExpression &amp;gt; Literal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4236412df05a83ec6045dd74a99b88ba8d4fd521" translate="yes" xml:space="preserve">
          <source>childScopes</source>
          <target state="translated">childScopes</target>
        </trans-unit>
        <trans-unit id="0412d15223aca9b8a1519022f0c955a8c5563c3d" translate="yes" xml:space="preserve">
          <source>class of AST node: &lt;code&gt;:statement&lt;/code&gt;, &lt;code&gt;:expression&lt;/code&gt;, &lt;code&gt;:declaration&lt;/code&gt;, &lt;code&gt;:function&lt;/code&gt;, or &lt;code&gt;:pattern&lt;/code&gt;</source>
          <target state="translated">AST 노드 클래스 : &lt;code&gt;:statement&lt;/code&gt; , &lt;code&gt;:expression&lt;/code&gt; , &lt;code&gt;:declaration&lt;/code&gt; , &lt;code&gt;:function&lt;/code&gt; 또는 &lt;code&gt;:pattern&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7eb69a5ba84f54b0338c828eb0178e81adc4c98" translate="yes" xml:space="preserve">
          <source>class-methods-use-this</source>
          <target state="translated">class-methods-use-this</target>
        </trans-unit>
        <trans-unit id="1adaa84dc07a16d34ede5b9a70713ff832a0f853" translate="yes" xml:space="preserve">
          <source>classes</source>
          <target state="translated">classes</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="e5a6db172a1571adadfedf3da85299d4d469cec1" translate="yes" xml:space="preserve">
          <source>codeframe</source>
          <target state="translated">codeframe</target>
        </trans-unit>
        <trans-unit id="6bddafe7f42d8d82e4723a9d5e20adde4a186205" translate="yes" xml:space="preserve">
          <source>comma preceded and followed by linebreak (lone comma)</source>
          <target state="translated">쉼표 앞뒤에 줄 바꿈 (고독 쉼표)</target>
        </trans-unit>
        <trans-unit id="887e2b42d5d83ce2903c8d29696f7a9babea39c1" translate="yes" xml:space="preserve">
          <source>comma-dangle</source>
          <target state="translated">comma-dangle</target>
        </trans-unit>
        <trans-unit id="63c7aebe56a0ae7f922ac1f2cc020c855593f049" translate="yes" xml:space="preserve">
          <source>comma-spacing</source>
          <target state="translated">comma-spacing</target>
        </trans-unit>
        <trans-unit id="f27bb0cea63377d026e33a9124e1baef8f01e69b" translate="yes" xml:space="preserve">
          <source>comma-style</source>
          <target state="translated">comma-style</target>
        </trans-unit>
        <trans-unit id="576caf6c5e15e2af06afa846cf8ab0661704718c" translate="yes" xml:space="preserve">
          <source>commentPattern</source>
          <target state="translated">commentPattern</target>
        </trans-unit>
        <trans-unit id="5b17a6c606a82dafd93db84a19945afe2d559ed4" translate="yes" xml:space="preserve">
          <source>comments</source>
          <target state="translated">comments</target>
        </trans-unit>
        <trans-unit id="4f44e2cffa8f7b516c9e499285c951d788431a28" translate="yes" xml:space="preserve">
          <source>compact</source>
          <target state="translated">compact</target>
        </trans-unit>
        <trans-unit id="8d08946e603eb0277964f9dffb00266975512736" translate="yes" xml:space="preserve">
          <source>complexity</source>
          <target state="translated">complexity</target>
        </trans-unit>
        <trans-unit id="a1a7aca5c916fa8627ce78b047bee90c3e80e3f3" translate="yes" xml:space="preserve">
          <source>computed-property-spacing</source>
          <target state="translated">computed-property-spacing</target>
        </trans-unit>
        <trans-unit id="f6ac9cd542333dbd500b9698e13050b3ae3f9360" translate="yes" xml:space="preserve">
          <source>conditionalAssign</source>
          <target state="translated">conditionalAssign</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="da4f063c733c2c650fdd295748735efc2e7ecc9b" translate="yes" xml:space="preserve">
          <source>consecutive</source>
          <target state="translated">consecutive</target>
        </trans-unit>
        <trans-unit id="20dfe8aaafc2c433eba2ded2b5e48dfc0249d733" translate="yes" xml:space="preserve">
          <source>considerPropertyDescriptor</source>
          <target state="translated">considerPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="8c305a07c6f8fa806cbf0aa9caa35c680fb0c4c7" translate="yes" xml:space="preserve">
          <source>consistent</source>
          <target state="translated">consistent</target>
        </trans-unit>
        <trans-unit id="de3f5fcc7dfbfb856983e0753f73f33e03fc66d1" translate="yes" xml:space="preserve">
          <source>consistent-as-needed</source>
          <target state="translated">consistent-as-needed</target>
        </trans-unit>
        <trans-unit id="99f3848c11080a8766d5dbe5a70bcfd5423f07e0" translate="yes" xml:space="preserve">
          <source>consistent-return</source>
          <target state="translated">consistent-return</target>
        </trans-unit>
        <trans-unit id="968a3bdc75d301e4c4384711b502cf88b29ad11d" translate="yes" xml:space="preserve">
          <source>consistent-this</source>
          <target state="translated">consistent-this</target>
        </trans-unit>
        <trans-unit id="a5cb5262d854a45e4891ceed1de0d0dce3abd1e6" translate="yes" xml:space="preserve">
          <source>constructor()</source>
          <target state="translated">constructor()</target>
        </trans-unit>
        <trans-unit id="2aa6d9f7ceeab6c27898a2ba26d7c4873b6802ec" translate="yes" xml:space="preserve">
          <source>constructor-super</source>
          <target state="translated">constructor-super</target>
        </trans-unit>
        <trans-unit id="b5dffe86c79e54353383ca3d9ab02dd82fc98957" translate="yes" xml:space="preserve">
          <source>context.getScope()</source>
          <target state="translated">context.getScope()</target>
        </trans-unit>
        <trans-unit id="a67bc5696e1cc9dac61092fa5fe35e92a80aa3ce" translate="yes" xml:space="preserve">
          <source>context.getSourceCode()</source>
          <target state="translated">context.getSourceCode()</target>
        </trans-unit>
        <trans-unit id="0e3179ab0aee364d346dab3c37c001c9814ee2b5" translate="yes" xml:space="preserve">
          <source>context.options</source>
          <target state="translated">context.options</target>
        </trans-unit>
        <trans-unit id="aba7d4de01c39fac57a0fc7a8e8bb43484deffe8" translate="yes" xml:space="preserve">
          <source>context.report()</source>
          <target state="translated">context.report()</target>
        </trans-unit>
        <trans-unit id="e122d28c768ab44ceafe00d71adedc80a535cdf1" translate="yes" xml:space="preserve">
          <source>curly</source>
          <target state="translated">curly</target>
        </trans-unit>
        <trans-unit id="a635d9a0594962e13edc7f188af0487f2d5a5f25" translate="yes" xml:space="preserve">
          <source>declaration</source>
          <target state="translated">declaration</target>
        </trans-unit>
        <trans-unit id="82e56d0dd502765f050df597885cb70547b8f887" translate="yes" xml:space="preserve">
          <source>default-case</source>
          <target state="translated">default-case</target>
        </trans-unit>
        <trans-unit id="67fa028b7dca133c91c47280e42cef126186d14f" translate="yes" xml:space="preserve">
          <source>default-case-last</source>
          <target state="translated">default-case-last</target>
        </trans-unit>
        <trans-unit id="1edf11011067f775b0a8b38b7257c7c03257152c" translate="yes" xml:space="preserve">
          <source>default-param-last</source>
          <target state="translated">default-param-last</target>
        </trans-unit>
        <trans-unit id="4097e63e6e1ebb894be3963fc2c243d766709785" translate="yes" xml:space="preserve">
          <source>defaultAssignment</source>
          <target state="translated">defaultAssignment</target>
        </trans-unit>
        <trans-unit id="8bf762a3363ce46cca0dac563354dd3f912de334" translate="yes" xml:space="preserve">
          <source>defineParser()</source>
          <target state="translated">defineParser()</target>
        </trans-unit>
        <trans-unit id="023e37930499a19bcb387a50f7768b198807afc6" translate="yes" xml:space="preserve">
          <source>defineRule()</source>
          <target state="translated">defineRule()</target>
        </trans-unit>
        <trans-unit id="983697eb973c76c2018139fad1e9b4e8dc076f9e" translate="yes" xml:space="preserve">
          <source>defineRules()</source>
          <target state="translated">defineRules()</target>
        </trans-unit>
        <trans-unit id="a59f3f3aaa01aee64fb80e525db04fc06a9ec00a" translate="yes" xml:space="preserve">
          <source>defs</source>
          <target state="translated">defs</target>
        </trans-unit>
        <trans-unit id="deb80331306dc3bc1cd0f2369ad72d699fe1e995" translate="yes" xml:space="preserve">
          <source>desc</source>
          <target state="translated">desc</target>
        </trans-unit>
        <trans-unit id="c7d9168ebd2fb8f70862926edece92d5266305a1" translate="yes" xml:space="preserve">
          <source>descendant: &lt;code&gt;FunctionExpression ReturnStatement&lt;/code&gt;</source>
          <target state="translated">자손 : &lt;code&gt;FunctionExpression ReturnStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ac586ef45b0d57b84c02b13138e9fe037c8c8fb" translate="yes" xml:space="preserve">
          <source>designated alias names for &lt;code&gt;this&lt;/code&gt; (default &lt;code&gt;&quot;that&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 대한 지정된 별명 (기본 &lt;code&gt;&quot;that&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9a5693e54ebd7683088be59203ea23d4e8270124" translate="yes" xml:space="preserve">
          <source>destructuring</source>
          <target state="translated">destructuring</target>
        </trans-unit>
        <trans-unit id="7bd5d00880828aafa546d00daf5f9a4734c150e1" translate="yes" xml:space="preserve">
          <source>details here</source>
          <target state="translated">자세한 내용은 여기</target>
        </trans-unit>
        <trans-unit id="e7edbdbc896544209c8f370569ac79c612ca00ab" translate="yes" xml:space="preserve">
          <source>detectObjects</source>
          <target state="translated">detectObjects</target>
        </trans-unit>
        <trans-unit id="b0bcf701202c6a63aecac726d0f72d15b967bf68" translate="yes" xml:space="preserve">
          <source>directCallToEvalScope</source>
          <target state="translated">directCallToEvalScope</target>
        </trans-unit>
        <trans-unit id="0d16bce021877433787e556eccdd3660acebbe8d" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;Array&lt;/code&gt; constructors (no-array-constructor)</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 생성자를 허용하지 않음 ( 배열 생성자 없음)</target>
        </trans-unit>
        <trans-unit id="3d5cb905c580c4b5eabb581c3c1b59d3bbe2282d" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;Object&lt;/code&gt; constructors (no-new-object)</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자 금지 (새로운 객체가 아님)</target>
        </trans-unit>
        <trans-unit id="42a4a7a330c591caaf652d9c30f5a520c3a350c8" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;continue&lt;/code&gt; statements (no-continue)</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; 문을 허용하지 않음 (계속)</target>
        </trans-unit>
        <trans-unit id="8a523f09e93f224e9169cc2f86d33136ccda7058" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;if&lt;/code&gt; statements as the only statement in &lt;code&gt;else&lt;/code&gt; blocks (no-lonely-if)</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 문에서 &lt;code&gt;if&lt;/code&gt; 문을 유일한 문으로 허용하지 않음 (금독의 경우)</target>
        </trans-unit>
        <trans-unit id="75be7fd831e421b3c85d2955a0bc513e110d59b2" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;parseInt()&lt;/code&gt; and &lt;code&gt;Number.parseInt()&lt;/code&gt; in favor of binary, octal, and hexadecimal literals (prefer-numeric-literals)</source>
          <target state="translated">이진, 8 진 및 16 진 리터럴 (숫자 리터럴 선호 &lt;code&gt;Number.parseInt()&lt;/code&gt; 을 위해 &lt;code&gt;parseInt()&lt;/code&gt; 및 Number.parseInt () 를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b14b18823992f5f2c0d44a5cbb86582ce69e0c7" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;require&lt;/code&gt; calls to be mixed with regular variable declarations (no-mixed-requires)</source>
          <target state="translated">허용 &lt;code&gt;require&lt;/code&gt; 통화를 일반 변수 선언과 혼합 할 (더 혼합은-필요하지 않습니다)</target>
        </trans-unit>
        <trans-unit id="7a4880d17a5cefba81d5b11930886d1d343c0f70" translate="yes" xml:space="preserve">
          <source>disallow &lt;code&gt;with&lt;/code&gt; statements (no-with)</source>
          <target state="translated">사용 해제 &lt;code&gt;with&lt;/code&gt; 문 (노 포함)</target>
        </trans-unit>
        <trans-unit id="9558eb12b6497566b1b403733d65067e8b73ab39" translate="yes" xml:space="preserve">
          <source>disallow `Array` constructors</source>
          <target state="translated">`배열`생성자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="ff04e78830512f2a12127576258f1955856b4508" translate="yes" xml:space="preserve">
          <source>disallow `Object` constructors</source>
          <target state="translated">`Object` 생성자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="4b5322d73552f0760d7e09b04d1648fb12524230" translate="yes" xml:space="preserve">
          <source>disallow `\8` and `\9` escape sequences in string literals</source>
          <target state="translated">문자열 리터럴에서`\ 8` 및`\ 9` 이스케이프 시퀀스 금지</target>
        </trans-unit>
        <trans-unit id="3de143509df0bd27f17e106f43e0304c4510c442" translate="yes" xml:space="preserve">
          <source>disallow `await` inside of loops</source>
          <target state="translated">루프 내에서 '대기'를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="9a2fa0f7efcf91bcf647601fa47a361b9c412182" translate="yes" xml:space="preserve">
          <source>disallow `continue` statements</source>
          <target state="translated">`continue` 진술을 금지</target>
        </trans-unit>
        <trans-unit id="07b4a4dabba080d4ff063f797fdf39bd07608e3e" translate="yes" xml:space="preserve">
          <source>disallow `else` blocks after `return` statements in `if` statements</source>
          <target state="translated">`if` 문에서`return` 문 다음에`else` 블록을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="12ca2368b7629e14b7c2f37fecd15d14e5816d21" translate="yes" xml:space="preserve">
          <source>disallow `if` statements as the only statement in `else` blocks</source>
          <target state="translated">`if` 문을`else` 블록의 유일한 문으로 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8a7c34c8a03f94373023fb7f376390c1e0d4915c" translate="yes" xml:space="preserve">
          <source>disallow `javascript:` urls</source>
          <target state="translated">`javascript :`URL을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8ad66ea5a0199ac2cbb9b40ea9de964dc335e370" translate="yes" xml:space="preserve">
          <source>disallow `new` operators outside of assignments or comparisons</source>
          <target state="translated">과제 나 비교 밖에서`new` 연산자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="7d1d88ac1b2d8d3f2da955c81635c7da17ca0014" translate="yes" xml:space="preserve">
          <source>disallow `new` operators with calls to `require`</source>
          <target state="translated">`new` 연산자가`require`에 대한 호출을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="9ec7d64fc5e97179891e37537575f958c99ecfa8" translate="yes" xml:space="preserve">
          <source>disallow `new` operators with the `Function` object</source>
          <target state="translated">`Function` 객체로`new` 연산자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="108d1784561e45b48bd68eb34d4e9c28c56abbc0" translate="yes" xml:space="preserve">
          <source>disallow `new` operators with the `String`, `Number`, and `Boolean` objects</source>
          <target state="translated">`String`,`Number` 및`Boolean` 객체로`new` 연산자를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eaa5d250a29252aeea380ec642d48ddbfebc4653" translate="yes" xml:space="preserve">
          <source>disallow `new` operators with the `Symbol` object</source>
          <target state="translated">`Symbol` 객체로`new` 연산자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="a3f2560a447abf7c21526fa2759db35979f2dad2" translate="yes" xml:space="preserve">
          <source>disallow `null` comparisons without type-checking operators</source>
          <target state="translated">타입 검사 연산자없이 널 (null) 비교를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="5afa1710be4e74694b527030d79597fa750bce93" translate="yes" xml:space="preserve">
          <source>disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals</source>
          <target state="translated">2 진, 8 진 및 16 진 리터럴을 선호하는`parseInt ()`및`Number.parseInt ()`허용 안함</target>
        </trans-unit>
        <trans-unit id="ccf36ec884a67134d1943fbd9f4484502135f6f9" translate="yes" xml:space="preserve">
          <source>disallow `require` calls to be mixed with regular variable declarations</source>
          <target state="translated">`require` 호출이 일반 변수 선언과 혼합되는 것을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e885d8264fe23a317944281a288548cc6336e6b8" translate="yes" xml:space="preserve">
          <source>disallow `this` keywords outside of classes or class-like objects</source>
          <target state="translated">클래스 나 클래스와 유사한 객체 외부에서`this` 키워드를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="3b4202215b79a89a34a26a25c95d366fcecef1ee" translate="yes" xml:space="preserve">
          <source>disallow `this`/`super` before calling `super()` in constructors</source>
          <target state="translated">생성자에서`super ()`를 호출하기 전에`this` /`super`를 허용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6bd7200e4ef6ae3e032c7a0f2ab7b7b35fbc2269" translate="yes" xml:space="preserve">
          <source>disallow `void` operators</source>
          <target state="translated">`void` 연산자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8073d837792bdccc825320f2adf1fe72cc0233d7" translate="yes" xml:space="preserve">
          <source>disallow `with` statements</source>
          <target state="translated">`with` 진술을 금지하다</target>
        </trans-unit>
        <trans-unit id="2fd1fdb03b0df2701f91857884e9177d2c57e5b7" translate="yes" xml:space="preserve">
          <source>disallow all tabs</source>
          <target state="translated">모든 탭을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8c0cf6289663934c3307c998aa133f01e028fa0e" translate="yes" xml:space="preserve">
          <source>disallow all tabs (no-tabs)</source>
          <target state="translated">모든 탭 허용 (탭 없음)</target>
        </trans-unit>
        <trans-unit id="6e1f56e8759442eaa9265c63f80816ab387ba7c6" translate="yes" xml:space="preserve">
          <source>disallow arrow functions where they could be confused with comparisons</source>
          <target state="translated">비교와 혼동 될 수있는 화살표 기능을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b96710d97cf2a5be787dd7799df41130b78a3e77" translate="yes" xml:space="preserve">
          <source>disallow assigning to imported bindings</source>
          <target state="translated">가져온 바인딩에 할당 금지</target>
        </trans-unit>
        <trans-unit id="d5ad4605e1987f7ba9ea1dd7cf6a726260a4cb16" translate="yes" xml:space="preserve">
          <source>disallow assigning to imported bindings (no-import-assign)</source>
          <target state="translated">가져온 바인딩에 할당 금지 (가져 오기 불가 할당)</target>
        </trans-unit>
        <trans-unit id="61b564963f82b7d95a29494982c5c389edf374db" translate="yes" xml:space="preserve">
          <source>disallow assignment operators in `return` statements</source>
          <target state="translated">`return` 문장에서 할당 연산자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b99694ead734cc2e326f573be68e27338ee24076" translate="yes" xml:space="preserve">
          <source>disallow assignment operators in conditional expressions</source>
          <target state="translated">조건식에서 대입 연산자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="2082f3bbc7e780842e99f58e0b66c62ac65f2a9e" translate="yes" xml:space="preserve">
          <source>disallow assignment operators in conditional statements (no-cond-assign)</source>
          <target state="translated">조건문에서 할당 연산자를 허용하지 않음 (무조건 할당)</target>
        </trans-unit>
        <trans-unit id="6a8801ac3f3a9610060fc283b78456743bdce635" translate="yes" xml:space="preserve">
          <source>disallow assignments that can lead to race conditions due to usage of `await` or `yield`</source>
          <target state="translated">`await` 또는`yield` 사용으로 인해 경쟁 조건으로 이어질 수있는 할당을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8d2f4fe84fdf63541ef4df8eacb1ac7e5a453c82" translate="yes" xml:space="preserve">
          <source>disallow assignments to native objects or read-only global variables</source>
          <target state="translated">기본 객체 또는 읽기 전용 전역 변수에 대한 할당을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="287d156a309a594a4a7a16e15c0883ca62aa8605" translate="yes" xml:space="preserve">
          <source>disallow assignments where both sides are exactly the same</source>
          <target state="translated">양쪽이 정확히 같은 할당을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="ead5f07c3c32eb666e3a1077dfd3c515012167c2" translate="yes" xml:space="preserve">
          <source>disallow async functions which have no `await` expression</source>
          <target state="translated">`await` 표현식이없는 비동기 함수를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8ff15126bb0272e9113ed155b8f2081cbde3e85c" translate="yes" xml:space="preserve">
          <source>disallow bitwise operators</source>
          <target state="translated">비트 연산자 금지</target>
        </trans-unit>
        <trans-unit id="6ff55908d2d2203b69b06a0c52584e7f1d9c60b5" translate="yes" xml:space="preserve">
          <source>disallow bitwise operators (no-bitwise)</source>
          <target state="translated">비트 연산자 허용 (비트 비트가 아님)</target>
        </trans-unit>
        <trans-unit id="8889c0584c52814c7d448e61d53eaf3c7614ab80" translate="yes" xml:space="preserve">
          <source>disallow calling global object properties as functions</source>
          <target state="translated">전역 객체 속성을 함수로 호출 할 수 없음</target>
        </trans-unit>
        <trans-unit id="ceec53c01177af174624e5ccc13ba35922d949d3" translate="yes" xml:space="preserve">
          <source>disallow calling global object properties as functions (no-obj-calls)</source>
          <target state="translated">전역 객체 속성을 함수 (no-obj-calls)로 호출 할 수 없음</target>
        </trans-unit>
        <trans-unit id="82872d0364e24fc85143280355cffe00bb4d775d" translate="yes" xml:space="preserve">
          <source>disallow calling some `Object.prototype` methods directly on objects</source>
          <target state="translated">객체에서 일부 'Object.prototype'메서드를 직접 호출하지 마십시오</target>
        </trans-unit>
        <trans-unit id="6b9977d6d7ce82c44944d9170e8e156341fb0ebd" translate="yes" xml:space="preserve">
          <source>disallow certain object properties (no-restricted-properties)</source>
          <target state="translated">특정 객체 속성을 허용하지 않음 (무제한 속성)</target>
        </trans-unit>
        <trans-unit id="e2fee193360183772f3eb451aefb0a7e125372a0" translate="yes" xml:space="preserve">
          <source>disallow certain properties on certain objects</source>
          <target state="translated">특정 객체의 특정 속성을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="cf84fe9500d51c6c0f8d86df71d88cd85bec2466" translate="yes" xml:space="preserve">
          <source>disallow characters which are made with multiple code points in character class syntax</source>
          <target state="translated">문자 클래스 구문에서 여러 코드 포인트로 작성된 문자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="c03cf4dd4da82a793edc2b03fc8e9a63512a1b1b" translate="yes" xml:space="preserve">
          <source>disallow comma operators</source>
          <target state="translated">쉼표 연산자 허용 안함</target>
        </trans-unit>
        <trans-unit id="a97e31616648ae253f74f2d52574e88ea8eb19f4" translate="yes" xml:space="preserve">
          <source>disallow comparing against -0</source>
          <target state="translated">-0과 비교할 수 없음</target>
        </trans-unit>
        <trans-unit id="ba5f7571e8d4128cd77f3387858a4b4a760cd659" translate="yes" xml:space="preserve">
          <source>disallow comparing against -0 (no-compare-neg-zero)</source>
          <target state="translated">-0에 대한 비교를 허용하지 않음 (제로 없음 비교)</target>
        </trans-unit>
        <trans-unit id="30733513dc0c547094ecaaf4cedca314a039d0e7" translate="yes" xml:space="preserve">
          <source>disallow comparisons where both sides are exactly the same</source>
          <target state="translated">양쪽이 정확히 동일한 비교를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="574d4b4383bfa43facee1db9cf2de3699b898b71" translate="yes" xml:space="preserve">
          <source>disallow confusing multiline expressions</source>
          <target state="translated">혼란스러운 여러 줄 표현 금지</target>
        </trans-unit>
        <trans-unit id="0e4aaf1b0493f70a0b8ded536a234d063d3dc589" translate="yes" xml:space="preserve">
          <source>disallow confusing multiline expressions (no-unexpected-multiline)</source>
          <target state="translated">혼동되는 여러 줄 표현 금지 (예기치 않은 여러 줄)</target>
        </trans-unit>
        <trans-unit id="9209d6589c4f9c19c0df3d31abd9d4566974e45a" translate="yes" xml:space="preserve">
          <source>disallow constant expressions in conditions</source>
          <target state="translated">조건에서 상수 식을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="3420aa25a828f56eb072ed909f31990dae78d0e4" translate="yes" xml:space="preserve">
          <source>disallow constant expressions in conditions (no-constant-condition)</source>
          <target state="translated">조건에서 상수 표현식을 허용하지 않음 (일정하지 않은 조건)</target>
        </trans-unit>
        <trans-unit id="4b830eed8367e8526c6187118a16fd818fbac425" translate="yes" xml:space="preserve">
          <source>disallow control characters in regular expressions</source>
          <target state="translated">정규식에서 제어 문자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="eaba2fc23e5acf772ff59d9c706a4e5c306a1033" translate="yes" xml:space="preserve">
          <source>disallow control characters in regular expressions (no-control-regex)</source>
          <target state="translated">정규식에서 제어 문자를 허용하지 않음 (no-control-regex)</target>
        </trans-unit>
        <trans-unit id="ecc03ed6d4d54fe3e8cb63f84844e9ae555bd76b" translate="yes" xml:space="preserve">
          <source>disallow control flow statements in &lt;code&gt;finally&lt;/code&gt; blocks (no-unsafe-finally)</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 블록 에서 제어 흐름 설명을 허용하지 않음 (최종 안전하지 않음)</target>
        </trans-unit>
        <trans-unit id="16e31c1a7dfa8673583a16041df826ac5931464a" translate="yes" xml:space="preserve">
          <source>disallow control flow statements in `finally` blocks</source>
          <target state="translated">'최종'블록에서 제어 흐름 설명을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="8232667a93e41d561426d6975805d027608a23bc" translate="yes" xml:space="preserve">
          <source>disallow dangling underscores in identifiers</source>
          <target state="translated">식별자에 매달린 밑줄을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="e9f33ad24531c2cdbe05bbafaaf2460ddd10ac4b" translate="yes" xml:space="preserve">
          <source>disallow dangling underscores in identifiers (no-underscore-dangle)</source>
          <target state="translated">식별자에 댕글 링 밑줄을 허용하지 않습니다 (밑줄 없음)</target>
        </trans-unit>
        <trans-unit id="e16679c384435701f105f5b15576786141b61a83" translate="yes" xml:space="preserve">
          <source>disallow declarations in the global scope</source>
          <target state="translated">글로벌 범위에서 선언을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="2eff4b22395e12811d7a3c8f816ab5a8418c8660" translate="yes" xml:space="preserve">
          <source>disallow deleting variables</source>
          <target state="translated">변수 삭제 금지</target>
        </trans-unit>
        <trans-unit id="4f01114153b7b01df6e211858a41c3479e7b9fe5" translate="yes" xml:space="preserve">
          <source>disallow deleting variables (no-delete-var)</source>
          <target state="translated">변수 삭제 금지 (no-delete-var)</target>
        </trans-unit>
        <trans-unit id="93a7df659a0d7605764f4cde5734047792f8029e" translate="yes" xml:space="preserve">
          <source>disallow division operators explicitly at the beginning of regular expressions</source>
          <target state="translated">정규 표현식의 시작 부분에서 나누기 연산자를 명시 적으로 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="5c66c8e072740063932c2eb7798617a8872052aa" translate="yes" xml:space="preserve">
          <source>disallow duplicate arguments in &lt;code&gt;function&lt;/code&gt; definitions (no-dupe-args)</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 정의 에서 중복 인수를 허용하지 않음 (무속 인수)</target>
        </trans-unit>
        <trans-unit id="5e806fbddb39cb8d7670416219d93806d53c81b4" translate="yes" xml:space="preserve">
          <source>disallow duplicate arguments in `function` definitions</source>
          <target state="translated">함수 정의에서 중복 인수를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="690a6b8dc5799010c42aa4d2c2f8e99d9eff70af" translate="yes" xml:space="preserve">
          <source>disallow duplicate case labels</source>
          <target state="translated">중복 사례 라벨을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="e42ab70c2221d2cdd3fc22d58477ca831caf916a" translate="yes" xml:space="preserve">
          <source>disallow duplicate class members</source>
          <target state="translated">중복 반원을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="ca762de1adae5bc68149daac151054d7858c93cb" translate="yes" xml:space="preserve">
          <source>disallow duplicate conditions in if-else-if chains</source>
          <target state="translated">if-else-if 체인에서 중복 조건을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="219f0c48ed1614f01da35d3038de8f5fbf2b7c93" translate="yes" xml:space="preserve">
          <source>disallow duplicate keys in object literals</source>
          <target state="translated">객체 리터럴에서 중복 키를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="75d6ed04c33041fc7c8463c6cc3602002882413b" translate="yes" xml:space="preserve">
          <source>disallow duplicate keys in object literals (no-dupe-keys)</source>
          <target state="translated">객체 리터럴에서 중복 키를 허용하지 않음 (무삭제 키)</target>
        </trans-unit>
        <trans-unit id="2b3400c890720145e748b4902a0bbfcfab1b059e" translate="yes" xml:space="preserve">
          <source>disallow duplicate module imports</source>
          <target state="translated">중복 모듈 가져 오기 금지</target>
        </trans-unit>
        <trans-unit id="28913afc1b68890ffb301f5aa275df4746bceea1" translate="yes" xml:space="preserve">
          <source>disallow empty block statements</source>
          <target state="translated">빈 블록 문을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="4091aecf7b64cb171b075fc835525fd865714baa" translate="yes" xml:space="preserve">
          <source>disallow empty block statements (no-empty)</source>
          <target state="translated">빈 블록 문을 허용하지 않음 (빈 없음)</target>
        </trans-unit>
        <trans-unit id="cb67c054d7ab45a9207557a17ed0e5ac7c350a36" translate="yes" xml:space="preserve">
          <source>disallow empty character classes in regular expressions</source>
          <target state="translated">정규식에서 빈 문자 클래스를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="20ba66bb46272ec268147e2cc5b6469e52c60015" translate="yes" xml:space="preserve">
          <source>disallow empty character classes in regular expressions (no-empty-character-class)</source>
          <target state="translated">정규 표현식에서 빈 문자 클래스를 허용하지 않음 (빈 문자 클래스 없음)</target>
        </trans-unit>
        <trans-unit id="89d6b323b6088302864f80ac3956a0ce76832790" translate="yes" xml:space="preserve">
          <source>disallow empty destructuring patterns</source>
          <target state="translated">빈 파괴 패턴을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8cbbd0b561e65194329f13a785dae8dc2dab2c52" translate="yes" xml:space="preserve">
          <source>disallow empty functions</source>
          <target state="translated">빈 함수를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="5ed582c433efb165578aec4b468f844dcdd29eca" translate="yes" xml:space="preserve">
          <source>disallow extending native types</source>
          <target state="translated">네이티브 타입 확장 금지</target>
        </trans-unit>
        <trans-unit id="32b4aba63bbf0f24646f0b61197fb3f520c0cac9" translate="yes" xml:space="preserve">
          <source>disallow fallthrough of `case` statements</source>
          <target state="translated">`case` 진술의 실패를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="e3bae968ac12b3b053bd3f064ce95b9d309c6d98" translate="yes" xml:space="preserve">
          <source>disallow function declarations that contain unsafe references inside loop statements</source>
          <target state="translated">루프 문 안에 안전하지 않은 참조가 포함 된 함수 선언을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="466b659ee2c1fecd9dee11925aadb5f86e586e49" translate="yes" xml:space="preserve">
          <source>disallow identifiers from shadowing restricted names</source>
          <target state="translated">섀도 잉 제한 이름에서 식별자를 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="adf1086dbc669831cf78a74d89a6299e1c36fc61" translate="yes" xml:space="preserve">
          <source>disallow initializing variables to `undefined`</source>
          <target state="translated">변수를 '정의되지 않은'것으로 초기화하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3604ea36862a82aa7d0c61e14babb24ae8bee2a7" translate="yes" xml:space="preserve">
          <source>disallow inline comments after code</source>
          <target state="translated">코드 다음에 인라인 주석을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e84e2bed64ca4fef2906dcfee32135fe0b39d9eb" translate="yes" xml:space="preserve">
          <source>disallow inline comments after code (no-inline-comments)</source>
          <target state="translated">코드 다음에 인라인 주석을 허용하지 않습니다 (인라인 주석 없음)</target>
        </trans-unit>
        <trans-unit id="f0d0385f6b5ca3fef35a68d264140e9795b24830" translate="yes" xml:space="preserve">
          <source>disallow invalid regular expression strings in &lt;code&gt;RegExp&lt;/code&gt; constructors (no-invalid-regexp)</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; 생성자 에서 유효하지 않은 정규식 문자열을 허용하지 않습니다 (잘못된 정규식 없음).</target>
        </trans-unit>
        <trans-unit id="775fd8332aa7e0b443288e3cdbc68fe40f69670d" translate="yes" xml:space="preserve">
          <source>disallow invalid regular expression strings in `RegExp` constructors</source>
          <target state="translated">`RegExp` 생성자에서 유효하지 않은 정규 표현식 문자열을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8ccb93d2de662290fdfac24b330941836f075ec2" translate="yes" xml:space="preserve">
          <source>disallow irregular whitespace</source>
          <target state="translated">불규칙한 공백을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8ab8f461a87ba8e82330063b569944e8285ec5fc" translate="yes" xml:space="preserve">
          <source>disallow irregular whitespace (no-irregular-whitespace)</source>
          <target state="translated">불규칙한 공백을 허용하지 않음 (비정규 공백 없음)</target>
        </trans-unit>
        <trans-unit id="d209d72d3603f59ed0dbb334b4b9d38d6d0d4338" translate="yes" xml:space="preserve">
          <source>disallow labeled statements</source>
          <target state="translated">분류 된 진술을 금지하다</target>
        </trans-unit>
        <trans-unit id="6efb38566d51e138d0f7de31bdff563f6476b264" translate="yes" xml:space="preserve">
          <source>disallow labels that share a name with a variable</source>
          <target state="translated">변수와 이름을 공유하는 레이블을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8cc3063e789b4ae4323f21ee4c06b5e209333248" translate="yes" xml:space="preserve">
          <source>disallow leading or trailing decimal points in numeric literals</source>
          <target state="translated">숫자 리터럴에서 선행 또는 후행 소수점을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="5ae82e5dc5854cbc8afc736b4083d34052d9202f" translate="yes" xml:space="preserve">
          <source>disallow lexical declarations in case clauses</source>
          <target state="translated">case 절에서 어휘 선언을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="d45c795a97121bd97ddca72b1348767debd2d045" translate="yes" xml:space="preserve">
          <source>disallow literal numbers that lose precision</source>
          <target state="translated">정밀도를 잃는 리터럴 숫자 금지</target>
        </trans-unit>
        <trans-unit id="1732086cb2f538b6d3425a0ded7c92cf3557b5ac" translate="yes" xml:space="preserve">
          <source>disallow loops with a body that allows only one iteration</source>
          <target state="translated">하나의 반복 만 허용하는 본문이있는 루프 금지</target>
        </trans-unit>
        <trans-unit id="9e4a7ae6e3c7e923595ec7fa9d1a208082f57403" translate="yes" xml:space="preserve">
          <source>disallow magic numbers</source>
          <target state="translated">매직 넘버 금지</target>
        </trans-unit>
        <trans-unit id="7e314549c46e10da996f435519bf910b4f674c76" translate="yes" xml:space="preserve">
          <source>disallow mixed binary operators</source>
          <target state="translated">혼합 이진 연산자 허용 안 함</target>
        </trans-unit>
        <trans-unit id="5a3467ec8aae4ed7ab209e3c694c9430cd8cf53d" translate="yes" xml:space="preserve">
          <source>disallow mixed spaces and tabs for indentation</source>
          <target state="translated">들여 쓰기를 위해 혼합 공간과 탭을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8eaf2e757e1386d4c8c2b074bbe44ef1ed5c5ed1" translate="yes" xml:space="preserve">
          <source>disallow mixed spaces and tabs for indentation (no-mixed-spaces-and-tabs)</source>
          <target state="translated">들여 쓰기를위한 혼합 공간 및 탭 허용 안 함 (혼합 공간 및 탭 없음)</target>
        </trans-unit>
        <trans-unit id="da09b47d60494d09fb435c885a83cc18498c35cd" translate="yes" xml:space="preserve">
          <source>disallow multiline strings</source>
          <target state="translated">여러 줄 문자열을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b56a8a2ea140e0b1c8fd0f1d6ede19e41f548fa4" translate="yes" xml:space="preserve">
          <source>disallow multiple empty lines</source>
          <target state="translated">여러 개의 빈 줄을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="1a5775903ab6449f50f95b5f309d7fc8adeb80df" translate="yes" xml:space="preserve">
          <source>disallow multiple empty lines (no-multiple-empty-lines)</source>
          <target state="translated">여러 개의 빈 줄을 허용하지 않음 (여러 줄 없음)</target>
        </trans-unit>
        <trans-unit id="04327f63801e2ea4150e67d7d9124cda802cc648" translate="yes" xml:space="preserve">
          <source>disallow multiple spaces</source>
          <target state="translated">여러 공간을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="c5321620103c064352cb668b60344a7ca2569c56" translate="yes" xml:space="preserve">
          <source>disallow multiple spaces in regular expression literals (no-regex-spaces)</source>
          <target state="translated">정규 표현식 리터럴에서 여러 공백을 허용하지 않음 (정규 공간 없음)</target>
        </trans-unit>
        <trans-unit id="b491daf98f24fdc32e4f28a516bfb2e12c4f332d" translate="yes" xml:space="preserve">
          <source>disallow multiple spaces in regular expressions</source>
          <target state="translated">정규 표현식에서 여러 공백을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="53b3d1b112bb6dc10235a8957f46817ffa20dd9d" translate="yes" xml:space="preserve">
          <source>disallow negated conditions</source>
          <target state="translated">부정 조건을 금지하다</target>
        </trans-unit>
        <trans-unit id="add2e408c16cebba58978e6cb337fa9a037755b5" translate="yes" xml:space="preserve">
          <source>disallow negated conditions (no-negated-condition)</source>
          <target state="translated">부정 된 조건을 허용하지 않음 (무조건)</target>
        </trans-unit>
        <trans-unit id="857a3ff0283db8c3a2cc0986ebd061354b49eb74" translate="yes" xml:space="preserve">
          <source>disallow negating the left operand in &lt;code&gt;in&lt;/code&gt; expressions (no-negated-in-lhs)</source>
          <target state="translated">상기 좌측 피연산자 부정 거부 &lt;code&gt;in&lt;/code&gt; 식 (없는 부정 인-LHS)</target>
        </trans-unit>
        <trans-unit id="cd6f2c73c5b0607b5f8884f86071f34ab0f79f00" translate="yes" xml:space="preserve">
          <source>disallow negating the left operand of relational operators</source>
          <target state="translated">관계 연산자의 왼쪽 피연산자를 부정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e3f3fd9f50d47329afdeb6bd8611dffb012eb3f2" translate="yes" xml:space="preserve">
          <source>disallow negating the left operand of relational operators (no-unsafe-negation)</source>
          <target state="translated">관계 연산자의 왼쪽 피연산자를 부정하는 것을 허용하지 않습니다 (안전하지 않은 부정)</target>
        </trans-unit>
        <trans-unit id="50fbcfd346408a09e5932a28f6253d9e2cffc4a2" translate="yes" xml:space="preserve">
          <source>disallow nested ternary expressions</source>
          <target state="translated">중첩 된 삼항 표현식 허용 안함</target>
        </trans-unit>
        <trans-unit id="7688f494f1601e81da7b1ad0940a95c665ca7f4d" translate="yes" xml:space="preserve">
          <source>disallow nested ternary expressions (no-nested-ternary)</source>
          <target state="translated">중첩 된 삼항 식을 허용하지 않음 (중첩되지 않은 삼항)</target>
        </trans-unit>
        <trans-unit id="22f38f16b6e99381592b13aea4ff2502189b0411" translate="yes" xml:space="preserve">
          <source>disallow octal escape sequences in string literals</source>
          <target state="translated">문자열 리터럴에서 8 진 이스케이프 시퀀스 허용 안함</target>
        </trans-unit>
        <trans-unit id="5f52fa7ffd46960ea28c696f04767736bf3183c1" translate="yes" xml:space="preserve">
          <source>disallow octal escape sequences in string literals (no-octal-escape)</source>
          <target state="translated">문자열 리터럴에서 8 진 이스케이프 시퀀스 허용 안 함 (8 진 이스케이프 없음)</target>
        </trans-unit>
        <trans-unit id="89292a45db2d6adcbc78450b9a40b6f83a546201" translate="yes" xml:space="preserve">
          <source>disallow octal literals</source>
          <target state="translated">8 진 리터럴 금지</target>
        </trans-unit>
        <trans-unit id="7bb549b8568c8cea3e5f8e61710b882bd85c7cf0" translate="yes" xml:space="preserve">
          <source>disallow octal literals (no-octal)</source>
          <target state="translated">8 진 리터럴 허용 (8 진법 제외)</target>
        </trans-unit>
        <trans-unit id="e1cc8e7d9f74c100253c3c69a525471a65fcdc28" translate="yes" xml:space="preserve">
          <source>disallow or enforce spaces inside of blocks after opening block and before closing block</source>
          <target state="translated">블록을 연 후와 블록을 닫기 전에 블록 내부에 공간을 허용하거나 금지</target>
        </trans-unit>
        <trans-unit id="9783e944432a78648167246e2aa5a2b50532a06e" translate="yes" xml:space="preserve">
          <source>disallow reassigning &lt;code&gt;function&lt;/code&gt; declarations (no-func-assign)</source>
          <target state="translated">재 할당 &lt;code&gt;function&lt;/code&gt; 선언 금지 (no-func-assign)</target>
        </trans-unit>
        <trans-unit id="8b3b9b79fa695ff416bf8527e503ba09842e01a6" translate="yes" xml:space="preserve">
          <source>disallow reassigning `const` variables</source>
          <target state="translated">`const` 변수 재 할당 금지</target>
        </trans-unit>
        <trans-unit id="05741b6f5f1bce6940330cafc1b1dbcb16cab89d" translate="yes" xml:space="preserve">
          <source>disallow reassigning `function` declarations</source>
          <target state="translated">'함수'선언 재 할당 금지</target>
        </trans-unit>
        <trans-unit id="5599e0b7d1d10156bb9176b9a6ba2d1b14268902" translate="yes" xml:space="preserve">
          <source>disallow reassigning `function` parameters</source>
          <target state="translated">`function` 매개 변수 재 할당 금지</target>
        </trans-unit>
        <trans-unit id="aefde5744c17afec97ae2071ba450a77f4867517" translate="yes" xml:space="preserve">
          <source>disallow reassigning class members</source>
          <target state="translated">반원을 재 할당하는 것을 금지하다</target>
        </trans-unit>
        <trans-unit id="f2ce57a3022d0645c12b5b3548f2782d31c53222" translate="yes" xml:space="preserve">
          <source>disallow reassigning exceptions in &lt;code&gt;catch&lt;/code&gt; clauses (no-ex-assign)</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 절 에서 예외 재 할당 허용 안 함 (예 : no-ex-assign)</target>
        </trans-unit>
        <trans-unit id="e3d68251c50ef66896a0e69305117c817c652f9f" translate="yes" xml:space="preserve">
          <source>disallow reassigning exceptions in `catch` clauses</source>
          <target state="translated">`catch` 절에서 예외 재 할당 허용 안함</target>
        </trans-unit>
        <trans-unit id="d81288e485355a435db52480390274998b7f839a" translate="yes" xml:space="preserve">
          <source>disallow redundant return statements</source>
          <target state="translated">중복 리턴 문을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f27231a921b4ff7411c3aa317804854d96473d90" translate="yes" xml:space="preserve">
          <source>disallow renaming import, export, and destructured assignments to the same name</source>
          <target state="translated">가져 오기, 내보내기 및 구조화 된 할당 이름을 같은 이름으로 변경하지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="11eaaf3d03c2036212df623ebc22953d7b2296f9" translate="yes" xml:space="preserve">
          <source>disallow returning value from constructor</source>
          <target state="translated">생성자로부터 값을 반환하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e5eee410a13644df2a73e2294357dc163984bc07" translate="yes" xml:space="preserve">
          <source>disallow returning values from Promise executor functions</source>
          <target state="translated">Promise 실행기 함수에서 값 반환을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="66a80ebdaa846d184587ee27b0810ad2ac12d5c9" translate="yes" xml:space="preserve">
          <source>disallow returning values from setters</source>
          <target state="translated">setter에서 값을 반환하지 않도록 설정</target>
        </trans-unit>
        <trans-unit id="33f67f81c2f96182f35fbee7eb17479767953f70" translate="yes" xml:space="preserve">
          <source>disallow shorthand type conversions</source>
          <target state="translated">속 기형 변환 금지</target>
        </trans-unit>
        <trans-unit id="43e5e10916b61f69ba8614c0273d3588bb9a3db7" translate="yes" xml:space="preserve">
          <source>disallow spacing between function identifiers and their applications (no-spaced-func)</source>
          <target state="translated">함수 식별자와 해당 응용 프로그램 사이의 간격을 허용하지 않습니다 (간격이없는 기능).</target>
        </trans-unit>
        <trans-unit id="325d3e661d6e6ce5bc28b70c62a07b6b1a734c33" translate="yes" xml:space="preserve">
          <source>disallow sparse arrays</source>
          <target state="translated">희소 배열을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="32cf15ca69a34f1b0dd6f7ced8dcbe319ba724d5" translate="yes" xml:space="preserve">
          <source>disallow sparse arrays (no-sparse-arrays)</source>
          <target state="translated">희소 배열 허용 (희소 배열 없음)</target>
        </trans-unit>
        <trans-unit id="d58bad6bfd372fd427f7d25180b5385df5d1722d" translate="yes" xml:space="preserve">
          <source>disallow specified global variables</source>
          <target state="translated">지정된 전역 변수를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="6abcf14405cc8a0fb25fb1a8309819e95fb3c98e" translate="yes" xml:space="preserve">
          <source>disallow specified identifiers</source>
          <target state="translated">지정된 식별자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="0ddc6901a6677f6c84b19d86339748fcb6df8e8b" translate="yes" xml:space="preserve">
          <source>disallow specified identifiers (id-blacklist)</source>
          <target state="translated">지정된 식별자를 허용하지 않습니다 (ID- 블랙리스트)</target>
        </trans-unit>
        <trans-unit id="735733e7de0a2dc9cbe0bbfee366f6c6476c3a0f" translate="yes" xml:space="preserve">
          <source>disallow specified identifiers (id-denylist)</source>
          <target state="translated">지정된 식별자 (id-denylist)를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d47c8f4bae2e5114969ef5093d9700eb53a063db" translate="yes" xml:space="preserve">
          <source>disallow specified modules when loaded by `import`</source>
          <target state="translated">'import'로로드 할 때 지정된 모듈을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="fb088d35bda92e7b0b1b222f9e1836e90ea7adf2" translate="yes" xml:space="preserve">
          <source>disallow specified modules when loaded by `require`</source>
          <target state="translated">`require`에 의해로드 될 때 지정된 모듈을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="9d34d11a66c150d2b75bd65fdb61a3611492b7d8" translate="yes" xml:space="preserve">
          <source>disallow specified names in exports</source>
          <target state="translated">내보내기에서 지정된 이름을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="a1b6725445542d92d8d15cf62f79214ac192bebd" translate="yes" xml:space="preserve">
          <source>disallow specified syntax</source>
          <target state="translated">지정된 구문을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f91d910afb6594177cd6fdcc25ef681d61891b3e" translate="yes" xml:space="preserve">
          <source>disallow specified syntax (no-restricted-syntax)</source>
          <target state="translated">지정된 구문을 허용하지 않습니다 (제한없는 구문).</target>
        </trans-unit>
        <trans-unit id="e55473d7957381dc8b48ad8a265c1e7b90848046" translate="yes" xml:space="preserve">
          <source>disallow specified warning terms in comments</source>
          <target state="translated">주석에서 지정된 경고 용어를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e25113cf1796020bdb03bb551b1042d49d31901a" translate="yes" xml:space="preserve">
          <source>disallow string concatenation with `__dirname` and `__filename`</source>
          <target state="translated">`__dirname` 및`__filename`으로 문자열 연결을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3493b46af1295001c220baef19e3302eb3056d0f" translate="yes" xml:space="preserve">
          <source>disallow synchronous methods</source>
          <target state="translated">동기식 메소드 금지</target>
        </trans-unit>
        <trans-unit id="a4e43b9da7226604bb6d3e26319f9562e85d3aa0" translate="yes" xml:space="preserve">
          <source>disallow template literal placeholder syntax in regular strings</source>
          <target state="translated">일반 문자열에서 템플릿 리터럴 자리 표시 자 구문을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="33d0819a02a3c7991f0d3193b467e7393974dacc" translate="yes" xml:space="preserve">
          <source>disallow ternary operators</source>
          <target state="translated">삼항 연산자 허용 안 함</target>
        </trans-unit>
        <trans-unit id="b3495ad42c64c98ca8171e3d4ad55b0a48050d80" translate="yes" xml:space="preserve">
          <source>disallow ternary operators (no-ternary)</source>
          <target state="translated">삼항 연산자를 허용하지 않음 (비 삼항)</target>
        </trans-unit>
        <trans-unit id="1fab7a673def5a520f4b775c211951eb741b13a7" translate="yes" xml:space="preserve">
          <source>disallow ternary operators when simpler alternatives exist</source>
          <target state="translated">더 간단한 대안이 존재할 때 삼항 연산자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="60c4e163625c8bf9105b80cfcacbd91f64777d4c" translate="yes" xml:space="preserve">
          <source>disallow ternary operators when simpler alternatives exist (no-unneeded-ternary)</source>
          <target state="translated">더 간단한 대안이 존재할 때 삼항 연산자 허용 안 함 (필수 삼항)</target>
        </trans-unit>
        <trans-unit id="ef4016346f58df0a1bf4319bd0e2678a180bb367" translate="yes" xml:space="preserve">
          <source>disallow the unary operators &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; (no-plusplus)</source>
          <target state="translated">단항 연산자 &lt;code&gt;++&lt;/code&gt; 및 &lt;code&gt;--&lt;/code&gt; ( + plusplus)를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d42d357730dc35d743da631c68e739e4aad60e3" translate="yes" xml:space="preserve">
          <source>disallow the unary operators `++` and `--`</source>
          <target state="translated">단항 연산자`++`와`--`를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="ce09a18497e1c7ac5766f9ba0cfa05d8a63b1124" translate="yes" xml:space="preserve">
          <source>disallow the use of &lt;code&gt;console&lt;/code&gt; (no-console)</source>
          <target state="translated">&lt;code&gt;console&lt;/code&gt; 사용 금지 ( 콘솔 없음)</target>
        </trans-unit>
        <trans-unit id="dd5a5d0b2877682f5e42d1386862520662009403" translate="yes" xml:space="preserve">
          <source>disallow the use of &lt;code&gt;debugger&lt;/code&gt; (no-debugger)</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; 사용 금지 ( 디버거 없음)</target>
        </trans-unit>
        <trans-unit id="6eb49005905577ecc07ebf24f8227d8c5c00bc6f" translate="yes" xml:space="preserve">
          <source>disallow the use of `Math.pow` in favor of the `**` operator</source>
          <target state="translated">`**`연산자를 선호하는`Math.pow`의 사용을 금지하십시오</target>
        </trans-unit>
        <trans-unit id="7bfe9c82efc6c6593d896093226fe759b43de6da" translate="yes" xml:space="preserve">
          <source>disallow the use of `alert`, `confirm`, and `prompt`</source>
          <target state="translated">'경고', '확인'및 '프롬프트'의 사용을 금지</target>
        </trans-unit>
        <trans-unit id="ca8a79d66c24c50be3aa83e1710dd52b702d04a3" translate="yes" xml:space="preserve">
          <source>disallow the use of `arguments.caller` or `arguments.callee`</source>
          <target state="translated">`arguments.caller` 또는`arguments.callee`의 사용을 금지하십시오</target>
        </trans-unit>
        <trans-unit id="f0f2629194df647d9a99b0b45aa3f953673d8c09" translate="yes" xml:space="preserve">
          <source>disallow the use of `console`</source>
          <target state="translated">`console`의 사용을 금지</target>
        </trans-unit>
        <trans-unit id="69441b19f1e429d09f7780cb9d8e70aaebd85999" translate="yes" xml:space="preserve">
          <source>disallow the use of `debugger`</source>
          <target state="translated">`디버거 '사용 금지</target>
        </trans-unit>
        <trans-unit id="35266f3527a258ff3e537f2d79a00f17a0e403de" translate="yes" xml:space="preserve">
          <source>disallow the use of `eval()`</source>
          <target state="translated">`eval ()`의 사용을 금지</target>
        </trans-unit>
        <trans-unit id="f8f8c3535e85089652dbdb5dd2573d8be2cd45ca" translate="yes" xml:space="preserve">
          <source>disallow the use of `eval()`-like methods</source>
          <target state="translated">`eval ()`과 같은 메소드 사용 금지</target>
        </trans-unit>
        <trans-unit id="3b2381bb6ac75123d452e967ad26977341c99044" translate="yes" xml:space="preserve">
          <source>disallow the use of `process.env`</source>
          <target state="translated">`process.env`의 사용을 금지</target>
        </trans-unit>
        <trans-unit id="5346ae7eada84cd28e7b0e18533680fd3105fa6c" translate="yes" xml:space="preserve">
          <source>disallow the use of `process.exit()`</source>
          <target state="translated">`process.exit ()`사용 금지</target>
        </trans-unit>
        <trans-unit id="f72061ffc704b3ddc53e6b24eb9c8cce50b7f6ed" translate="yes" xml:space="preserve">
          <source>disallow the use of `undefined` as an identifier</source>
          <target state="translated">'정의되지 않은'을 식별자로 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f94ff21762f28ad5950487b63974ff1d24c14e24" translate="yes" xml:space="preserve">
          <source>disallow the use of the `__iterator__` property</source>
          <target state="translated">`__iterator__` 속성 사용을 금지</target>
        </trans-unit>
        <trans-unit id="8a2ea89aa3cb90c1971218904f5ea739e4168259" translate="yes" xml:space="preserve">
          <source>disallow the use of the `__proto__` property</source>
          <target state="translated">`__proto__` 속성 사용을 금지</target>
        </trans-unit>
        <trans-unit id="bf668ab19e5ef6b9763f85b66b09b8c6f8cf24df" translate="yes" xml:space="preserve">
          <source>disallow the use of undeclared variables unless mentioned in `/*global */` comments</source>
          <target state="translated">`/ * global * /`주석에 언급되지 않은 경우 선언되지 않은 변수의 사용을 금지하십시오</target>
        </trans-unit>
        <trans-unit id="93353fe25658e9ad49a93e57e00f7266254c4138" translate="yes" xml:space="preserve">
          <source>disallow the use of variables before they are defined</source>
          <target state="translated">변수를 정의하기 전에 변수 사용을 금지</target>
        </trans-unit>
        <trans-unit id="d827b95f812ecba01bab5ae2e51a469640a05b91" translate="yes" xml:space="preserve">
          <source>disallow throwing literals as exceptions</source>
          <target state="translated">리터럴을 예외로 던질 수 없음</target>
        </trans-unit>
        <trans-unit id="ad2c1a76426a09516894a1d2a5a9e8114d6d9265" translate="yes" xml:space="preserve">
          <source>disallow trailing whitespace at the end of lines</source>
          <target state="translated">줄 끝에서 후행 공백을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="8d47993e41deb8cac3a54b49aee56aec93f5e3b5" translate="yes" xml:space="preserve">
          <source>disallow trailing whitespace at the end of lines (no-trailing-spaces)</source>
          <target state="translated">줄 끝에서 후행 공백을 허용하지 않음 (후행 공백 없음)</target>
        </trans-unit>
        <trans-unit id="299413335985e17bbbaff8c854330a1e21039f4f" translate="yes" xml:space="preserve">
          <source>disallow unmodified loop conditions</source>
          <target state="translated">수정되지 않은 루프 조건을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="f3b053e1ee8b121269cbe24dc0792b57969ca7c8" translate="yes" xml:space="preserve">
          <source>disallow unnecessary `catch` clauses</source>
          <target state="translated">불필요한`catch` 절을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="512c557f34e5c90bf37a32cc64c25fa7ef170d12" translate="yes" xml:space="preserve">
          <source>disallow unnecessary `return await`</source>
          <target state="translated">불필요한 '반환 대기'금지</target>
        </trans-unit>
        <trans-unit id="b0108a168d2d1d3c7588f69dbceb9710d99b3b1c" translate="yes" xml:space="preserve">
          <source>disallow unnecessary boolean casts</source>
          <target state="translated">불필요한 부울 캐스트를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="eedfa415aae890c36fdbb06221b416fcf735ff2b" translate="yes" xml:space="preserve">
          <source>disallow unnecessary boolean casts (no-extra-boolean-cast)</source>
          <target state="translated">불필요한 부울 캐스트 금지 (추가 부울 캐스트)</target>
        </trans-unit>
        <trans-unit id="940b8c8daf014d7e2ad54af900d71b9aaa9c5e21" translate="yes" xml:space="preserve">
          <source>disallow unnecessary calls to `.bind()`</source>
          <target state="translated">`.bind ()`에 대한 불필요한 호출을 금지</target>
        </trans-unit>
        <trans-unit id="9cfefb6a7ed42881421240ef25c9b0e02a0b4277" translate="yes" xml:space="preserve">
          <source>disallow unnecessary calls to `.call()` and `.apply()`</source>
          <target state="translated">`.call ()`및`.apply ()`에 대한 불필요한 호출을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9df4eac13566f633a4795e7731644bc2ca31c900" translate="yes" xml:space="preserve">
          <source>disallow unnecessary computed property keys in objects and classes</source>
          <target state="translated">객체와 클래스에서 불필요한 계산 된 속성 키를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="6f4b78f7924a0aad4a5285abe0c0ceba93a6067f" translate="yes" xml:space="preserve">
          <source>disallow unnecessary concatenation of literals or template literals</source>
          <target state="translated">리터럴 또는 템플릿 리터럴의 불필요한 연결을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="519e5e80ed64e34a15ef13486b23f5b0059e3672" translate="yes" xml:space="preserve">
          <source>disallow unnecessary constructors</source>
          <target state="translated">불필요한 생성자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e522e1b6fe48d5807e6c30b5d60489460df33eb5" translate="yes" xml:space="preserve">
          <source>disallow unnecessary escape characters</source>
          <target state="translated">불필요한 이스케이프 문자를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="fe64d517c2a318ebb114c80cdb7c101840f2db44" translate="yes" xml:space="preserve">
          <source>disallow unnecessary labels</source>
          <target state="translated">불필요한 라벨을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="a7b742705dc47a062df89b7f0fe4ada655eaa1d3" translate="yes" xml:space="preserve">
          <source>disallow unnecessary nested blocks</source>
          <target state="translated">불필요한 중첩 블록을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="1ab23cc7f3e3723ff5c076dac5096e2c773fdb1a" translate="yes" xml:space="preserve">
          <source>disallow unnecessary parentheses</source>
          <target state="translated">불필요한 괄호를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="e3a86f131418d2d139ea6f5e378baf9744065fcb" translate="yes" xml:space="preserve">
          <source>disallow unnecessary parentheses (no-extra-parens)</source>
          <target state="translated">불필요한 괄호를 사용하지 마십시오 (외부 괄호 없음)</target>
        </trans-unit>
        <trans-unit id="22ce855aa3245b66225a95d7f3d14cac1821571f" translate="yes" xml:space="preserve">
          <source>disallow unnecessary semicolons</source>
          <target state="translated">불필요한 세미콜론을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="c667b513b31b2c8583a2379146217b2d23f69fbc" translate="yes" xml:space="preserve">
          <source>disallow unnecessary semicolons (no-extra-semi)</source>
          <target state="translated">불필요한 세미콜론을 허용하지 않습니다 (추가 세미 세미)</target>
        </trans-unit>
        <trans-unit id="b0afd6737091c53f0799a582715f8fd660adea35" translate="yes" xml:space="preserve">
          <source>disallow unreachable code after &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt; statements (no-unreachable)</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; 및 &lt;code&gt;break&lt;/code&gt; 문 후 도달 할 수없는 코드를 허용하지 않습니다 (연결 불가 )</target>
        </trans-unit>
        <trans-unit id="f3b9757cd6f638db39c5860fe0da08f0294907e0" translate="yes" xml:space="preserve">
          <source>disallow unreachable code after `return`, `throw`, `continue`, and `break` statements</source>
          <target state="translated">`return`,`throw`,`continue` 및`break` 문 다음에 도달 할 수없는 코드를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="028de07332d3d0a7ba3d755b5b3dcd673396b03f" translate="yes" xml:space="preserve">
          <source>disallow unused expressions</source>
          <target state="translated">사용하지 않는 표현을 금지</target>
        </trans-unit>
        <trans-unit id="e7592dc480567e57a9d2289d9c73bf6d8165d910" translate="yes" xml:space="preserve">
          <source>disallow unused labels</source>
          <target state="translated">사용하지 않는 라벨 허용 안함</target>
        </trans-unit>
        <trans-unit id="d7194e2666a9fd53ab44fb9b21d3b5905eabaea7" translate="yes" xml:space="preserve">
          <source>disallow unused variables</source>
          <target state="translated">사용하지 않는 변수를 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="cc1a2b29de74aa4c5d9bdc8387f6825d84a43cdf" translate="yes" xml:space="preserve">
          <source>disallow use of chained assignment expressions</source>
          <target state="translated">체인 할당 식 사용 금지</target>
        </trans-unit>
        <trans-unit id="0ae3e6a60ec00e222999b8eea0ac37479d4fe1fb" translate="yes" xml:space="preserve">
          <source>disallow use of optional chaining in contexts where the &lt;code&gt;undefined&lt;/code&gt; value is not allowed (no-unsafe-optional-chaining)</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 값이 허용되지 않는 컨텍스트에서 선택적 체인 사용을 허용하지 않습니다 (안전하지 않은 선택적 체인 없음).</target>
        </trans-unit>
        <trans-unit id="e466b986447fe90f9234c5cdd97b9eb6f3164c4c" translate="yes" xml:space="preserve">
          <source>disallow use of optional chaining in contexts where the `undefined` value is not allowed</source>
          <target state="translated">'undefined'값이 허용되지 않는 컨텍스트에서 선택적 연결 사용을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eae397ce46527786414834459aa6d96a323c6292" translate="yes" xml:space="preserve">
          <source>disallow use of the Buffer() constructor (no-buffer-constructor)</source>
          <target state="translated">Buffer () 생성자 사용 금지 (버퍼 생성자 없음)</target>
        </trans-unit>
        <trans-unit id="c02454e3e866d973817299e039f3cdc63869c16b" translate="yes" xml:space="preserve">
          <source>disallow use of the `Buffer()` constructor</source>
          <target state="translated">`Buffer ()`생성자 사용 금지</target>
        </trans-unit>
        <trans-unit id="815c03803119cdc9809958037b58daa978f0a316" translate="yes" xml:space="preserve">
          <source>disallow use of the `RegExp` constructor in favor of regular expression literals</source>
          <target state="translated">정규 표현식 리터럴에 유리하게`RegExp` 생성자를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="43b4d39d334ccfd44837d41a6bba7862a12a38b4" translate="yes" xml:space="preserve">
          <source>disallow useless backreferences in regular expressions</source>
          <target state="translated">정규식에서 쓸모없는 역 참조를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8819ad8436647aa678c0f7554eb080cd3e9360a" translate="yes" xml:space="preserve">
          <source>disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.</source>
          <target state="translated">객체 리터럴과 함께 Object.assign을 첫 번째 인수로 사용하지 말고 대신 객체 스프레드 사용을 선호하십시오.</target>
        </trans-unit>
        <trans-unit id="d29f8ee91a17eda525f838db464121516eeb24d6" translate="yes" xml:space="preserve">
          <source>disallow using an async function as a Promise executor</source>
          <target state="translated">Promise executor로 비동기 함수 사용 금지</target>
        </trans-unit>
        <trans-unit id="ca8aadbc5a5c8265bcd4b65bbd2f9f0ec4691017" translate="yes" xml:space="preserve">
          <source>disallow using an async function as a Promise executor (no-async-promise-executor)</source>
          <target state="translated">Promise executor (비동기 -promise-executor)로 비동기 기능 사용 금지</target>
        </trans-unit>
        <trans-unit id="b9b1f6b974f6ea4929d7e0907f102990100bc335" translate="yes" xml:space="preserve">
          <source>disallow variable declarations from shadowing variables declared in the outer scope</source>
          <target state="translated">외부 범위에서 선언 된 섀도 잉 변수에서 변수 선언을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="3b4ffb3b2bb15bae8fa27fa1008af03b4c4323bf" translate="yes" xml:space="preserve">
          <source>disallow variable declarations from shadowing variables declared in the outer scope (no-shadow)</source>
          <target state="translated">외부 범위에서 선언 된 섀도 잉 변수에서 변수 선언을 허용하지 않음 (그림자 없음)</target>
        </trans-unit>
        <trans-unit id="1f5b39fd1d68ee82e275a0980ec30a9069f45eb3" translate="yes" xml:space="preserve">
          <source>disallow variable or &lt;code&gt;function&lt;/code&gt; declarations in nested blocks (no-inner-declarations)</source>
          <target state="translated">중첩 된 블록에서 변수 또는 &lt;code&gt;function&lt;/code&gt; 선언을 허용하지 않음 (내부 선언 없음)</target>
        </trans-unit>
        <trans-unit id="61c079564c16b1beac361da0071dbea33abb665d" translate="yes" xml:space="preserve">
          <source>disallow variable or `function` declarations in nested blocks</source>
          <target state="translated">중첩 된 블록에서 변수 또는 함수 선언을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="d5f8c9d640e11ff65bdcdb94af0051e353d946b5" translate="yes" xml:space="preserve">
          <source>disallow variable redeclaration</source>
          <target state="translated">변수 재 선언 금지</target>
        </trans-unit>
        <trans-unit id="379d469b55a5730efa2aa7b44bdba6cf327ed010" translate="yes" xml:space="preserve">
          <source>disallow variable redeclaration (no-redeclare)</source>
          <target state="translated">변수 재 선언 금지 (재 선언 안 함)</target>
        </trans-unit>
        <trans-unit id="233bdb6a90319779e07497a43b22c497ed2580ca" translate="yes" xml:space="preserve">
          <source>disallow whitespace before properties</source>
          <target state="translated">속성 앞에 공백을 허용하지 않음</target>
        </trans-unit>
        <trans-unit id="049bdfd030dd9c2c5d5422953ba6608938280bc4" translate="yes" xml:space="preserve">
          <source>disallow whitespace before properties (no-whitespace-before-property)</source>
          <target state="translated">속성 앞에 공백을 허용하지 않음 (속성 없음)</target>
        </trans-unit>
        <trans-unit id="400751ae09f5767d5a364c01f7f37a8cac5c9edc" translate="yes" xml:space="preserve">
          <source>disallowArithmeticOperators</source>
          <target state="translated">disallowArithmeticOperators</target>
        </trans-unit>
        <trans-unit id="3ccf4cb1c5d1959c26926b6a3d7bde2604644660" translate="yes" xml:space="preserve">
          <source>disallowPaddingNewLinesAfterBlocks</source>
          <target state="translated">disallowPaddingNewLinesAfterBlocks</target>
        </trans-unit>
        <trans-unit id="db7c3a75d84b06ba09c0c6581e9fd1662f5ae5b5" translate="yes" xml:space="preserve">
          <source>do Statement</source>
          <target state="translated">진술</target>
        </trans-unit>
        <trans-unit id="66f90f467710e5061ba98396f194d317fe0f7450" translate="yes" xml:space="preserve">
          <source>dot-location</source>
          <target state="translated">dot-location</target>
        </trans-unit>
        <trans-unit id="b327023717d0323e74b303f87899b9b8b0896ca2" translate="yes" xml:space="preserve">
          <source>dot-notation</source>
          <target state="translated">dot-notation</target>
        </trans-unit>
        <trans-unit id="bdb36bb22deb169275b3094ba9005a29eeddd195" translate="yes" xml:space="preserve">
          <source>double</source>
          <target state="translated">double</target>
        </trans-unit>
        <trans-unit id="5452220584f9d82eacc9d4b64b556c642aa95fe3" translate="yes" xml:space="preserve">
          <source>dynamic</source>
          <target state="translated">dynamic</target>
        </trans-unit>
        <trans-unit id="f7a65ee761031b1b6b1c52ecaa178d0cdde15040" translate="yes" xml:space="preserve">
          <source>earlier default (removed)</source>
          <target state="translated">초기 기본값 (제거)</target>
        </trans-unit>
        <trans-unit id="440ef1439a05471122c9ff0f9521d84e46235670" translate="yes" xml:space="preserve">
          <source>either none or all variable declarations must be require declarations (default)</source>
          <target state="translated">없음 또는 모든 변수 선언은 선언을 요구해야합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="294c9e47002a93f6fd14b0557093922f9e961530" translate="yes" xml:space="preserve">
          <source>enable additional rules</source>
          <target state="translated">추가 규칙 활성화</target>
        </trans-unit>
        <trans-unit id="6b1f2d23a8505010f4ccb7c41c002a6e1e3cf675" translate="yes" xml:space="preserve">
          <source>enforce &quot;for&quot; loop update clause moving the counter in the right direction.</source>
          <target state="translated">카운터를 올바른 방향으로 이동시키는 &quot;for&quot;루프 업데이트 절을 시행하십시오.</target>
        </trans-unit>
        <trans-unit id="aaf583d4d4ed562804545fe28928fc9e869ac7b9" translate="yes" xml:space="preserve">
          <source>enforce `return` statements in callbacks of array methods</source>
          <target state="translated">배열 메소드의 콜백에서`return` 문을 시행</target>
        </trans-unit>
        <trans-unit id="fd8e78b8cf77ed3ca5739023a2bbf2dcb5afe3da" translate="yes" xml:space="preserve">
          <source>enforce `return` statements in getters</source>
          <target state="translated">게터에 '반환'진술을 시행</target>
        </trans-unit>
        <trans-unit id="62e86780eb143c5f433d75e8a2495ea17af34f9b" translate="yes" xml:space="preserve">
          <source>enforce a maximum cyclomatic complexity allowed in a program</source>
          <target state="translated">프로그램에서 허용되는 최대 순환 복잡성을 시행</target>
        </trans-unit>
        <trans-unit id="cd8352e92407b1a3a51ed0f058f25ecf5e9d54d7" translate="yes" xml:space="preserve">
          <source>enforce a maximum depth that blocks can be nested</source>
          <target state="translated">블록이 중첩 될 수있는 최대 깊이를 시행</target>
        </trans-unit>
        <trans-unit id="58ad61a8680127e40cad8c274a73888971db6432" translate="yes" xml:space="preserve">
          <source>enforce a maximum depth that blocks can be nested (max-depth)</source>
          <target state="translated">블록이 중첩 될 수있는 최대 깊이를 시행합니다 (최대 깊이)</target>
        </trans-unit>
        <trans-unit id="6afb4d24e0dfecb171f66c4ce13773bb5cbcc274" translate="yes" xml:space="preserve">
          <source>enforce a maximum depth that callbacks can be nested</source>
          <target state="translated">콜백이 중첩 될 수있는 최대 깊이를 시행</target>
        </trans-unit>
        <trans-unit id="c9c602da3c1bb87094cc3c985d7d802ec1d3fcca" translate="yes" xml:space="preserve">
          <source>enforce a maximum depth that callbacks can be nested (max-nested-callbacks)</source>
          <target state="translated">콜백이 중첩 될 수있는 최대 깊이를 시행합니다 (최대 중첩 콜백)</target>
        </trans-unit>
        <trans-unit id="e97a37d76a7ec22624b885318914d35e8acb2117" translate="yes" xml:space="preserve">
          <source>enforce a maximum file length (max-lines)</source>
          <target state="translated">최대 파일 길이 (최대 라인) 시행</target>
        </trans-unit>
        <trans-unit id="b61f884f1312c96246f2e2fbfbe9e98517c9ca1e" translate="yes" xml:space="preserve">
          <source>enforce a maximum function length (max-lines-per-function)</source>
          <target state="translated">최대 기능 길이 시행 (기능 당 최대 라인 수)</target>
        </trans-unit>
        <trans-unit id="3dc03d449f759a9db412e4d323a546b3f5609869" translate="yes" xml:space="preserve">
          <source>enforce a maximum line length</source>
          <target state="translated">최대 줄 길이를 적용</target>
        </trans-unit>
        <trans-unit id="56d9fc660d3e95e70e143632ac465aa5144b9639" translate="yes" xml:space="preserve">
          <source>enforce a maximum line length (max-len)</source>
          <target state="translated">최대 줄 길이를 적용합니다 (max-len)</target>
        </trans-unit>
        <trans-unit id="05ab296bdf06fa7cceb3f388c0e78a9d0c65da5f" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of classes per file</source>
          <target state="translated">파일 당 최대 클래스 수를 시행</target>
        </trans-unit>
        <trans-unit id="8a7cb66a41869f71310c1e87f16fe6d80c5e0483" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of classes per file (max-classes-per-file)</source>
          <target state="translated">파일 당 최대 클래스 수 (max-classes-per-file) 시행</target>
        </trans-unit>
        <trans-unit id="800f5eefe8fa94001d7323797c0520188fcf149b" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of line of code in a function</source>
          <target state="translated">함수에서 최대 코드 줄을 시행</target>
        </trans-unit>
        <trans-unit id="985e704451e54dedb9713006221f78613da236ac" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of lines per file</source>
          <target state="translated">파일 당 최대 줄 수를 시행</target>
        </trans-unit>
        <trans-unit id="475f7c9763315943527e3c883a7b98bde1dc2c60" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of parameters in function definitions</source>
          <target state="translated">함수 정의에서 최대 개수의 매개 변수를 시행</target>
        </trans-unit>
        <trans-unit id="74d7bcd9acadb9b6eec9cff58d5ba850bcf842ac" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of parameters in function definitions (max-params)</source>
          <target state="translated">함수 정의에서 최대 개수의 매개 변수를 시행합니다 (max-params)</target>
        </trans-unit>
        <trans-unit id="82020675210b26ce8aab655f62c2ece2c38b0e69" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of statements allowed in function blocks</source>
          <target state="translated">기능 블록에 허용되는 최대 개수의 명령문을 시행</target>
        </trans-unit>
        <trans-unit id="c568a06d3439c30946bbf7718ae7e0d752b21191" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of statements allowed in function blocks (max-statements)</source>
          <target state="translated">기능 블록 (max-statements)에 허용되는 최대 개수의 명령문을 시행</target>
        </trans-unit>
        <trans-unit id="f97a9bc52df0c3264905a136c0d30fd89e2765ad" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of statements allowed per line</source>
          <target state="translated">한 줄에 허용되는 최대 문장 수를 시행</target>
        </trans-unit>
        <trans-unit id="bc53457516c2cf552256bf0199e1078baa22cf4b" translate="yes" xml:space="preserve">
          <source>enforce a maximum number of statements allowed per line (max-statements-per-line)</source>
          <target state="translated">라인 당 허용되는 최대 명령문 수를 실행합니다 (라인 당 최대 명령문 수)</target>
        </trans-unit>
        <trans-unit id="39c79906f578b6a7353380a377abddb9c109f996" translate="yes" xml:space="preserve">
          <source>enforce a particular style for multiline comments</source>
          <target state="translated">여러 줄 주석에 특정 스타일을 적용</target>
        </trans-unit>
        <trans-unit id="50edc8e95aed39f258d630488c3f58313556cafa" translate="yes" xml:space="preserve">
          <source>enforce a particular style for multiline comments (multiline-comment-style)</source>
          <target state="translated">여러 줄 주석에 특정 스타일 적용 (여러 줄 주석 스타일)</target>
        </trans-unit>
        <trans-unit id="edd8b00da741077c4b5ee9a5fe413e5dc190151f" translate="yes" xml:space="preserve">
          <source>enforce camelcase naming convention</source>
          <target state="translated">낙타 이름 명명 규칙 시행</target>
        </trans-unit>
        <trans-unit id="de8f38a1ef86e3721b6c85031648a0ad9cc4ff54" translate="yes" xml:space="preserve">
          <source>enforce comparing &lt;code&gt;typeof&lt;/code&gt; expressions against valid strings (valid-typeof)</source>
          <target state="translated">유효한 문자열에 대한 &lt;code&gt;typeof&lt;/code&gt; 표현식 비교 (valid-typeof)</target>
        </trans-unit>
        <trans-unit id="191d91a0cda252d8d90c8864b0dff9a12301e6c3" translate="yes" xml:space="preserve">
          <source>enforce comparing `typeof` expressions against valid strings</source>
          <target state="translated">`typeof` 표현식과 유효한 문자열 비교</target>
        </trans-unit>
        <trans-unit id="8001c4593a6ec27e27338fd29f26e96492b0ffb7" translate="yes" xml:space="preserve">
          <source>enforce consistent brace style for all control statements</source>
          <target state="translated">모든 제어문에 일관된 괄호 스타일을 적용</target>
        </trans-unit>
        <trans-unit id="3643e85059f5b5701022fef1f90332c9ccf7df75" translate="yes" xml:space="preserve">
          <source>enforce consistent brace style for blocks</source>
          <target state="translated">블록에 일관된 버팀대 스타일 적용</target>
        </trans-unit>
        <trans-unit id="7bc1addef1fed0c1b01e0c82efc7b7fc18f573ee" translate="yes" xml:space="preserve">
          <source>enforce consistent comma style</source>
          <target state="translated">일관된 쉼표 스타일을 시행</target>
        </trans-unit>
        <trans-unit id="f0364a9b12dfc70a07dcb00329340c641a3190f2" translate="yes" xml:space="preserve">
          <source>enforce consistent indentation</source>
          <target state="translated">일관된 들여 쓰기 시행</target>
        </trans-unit>
        <trans-unit id="f65424689dcef911434647b8f6a9ee80663d110b" translate="yes" xml:space="preserve">
          <source>enforce consistent indentation (indent)</source>
          <target state="translated">일관된 들여 쓰기 시행 (들여 쓰기)</target>
        </trans-unit>
        <trans-unit id="46595f92a16244b4a30e550b5c14d45cb04cd390" translate="yes" xml:space="preserve">
          <source>enforce consistent indentation (indent-legacy)</source>
          <target state="translated">일관된 들여 쓰기 시행 (들여 쓰기 레거시)</target>
        </trans-unit>
        <trans-unit id="d0bdb9da0979d040b157441cb56506b57d12e90a" translate="yes" xml:space="preserve">
          <source>enforce consistent line breaks inside braces</source>
          <target state="translated">괄호 안에 일관된 줄 바꿈을 시행</target>
        </trans-unit>
        <trans-unit id="2c38b21e4e01fe562cb7fd58e522ed5b06299274" translate="yes" xml:space="preserve">
          <source>enforce consistent line breaks inside braces (object-curly-newline)</source>
          <target state="translated">괄호 안에 일관된 줄 바꿈 적용 (객체-줄 바꿈)</target>
        </trans-unit>
        <trans-unit id="c113e51c2e6a4339df67e1369e84e6430f79f711" translate="yes" xml:space="preserve">
          <source>enforce consistent line breaks inside function parentheses</source>
          <target state="translated">함수 괄호 안에 일관된 줄 바꿈 적용</target>
        </trans-unit>
        <trans-unit id="ad7ee61b322f52e013c962a032965e93460b1a40" translate="yes" xml:space="preserve">
          <source>enforce consistent line breaks inside function parentheses (function-paren-newline)</source>
          <target state="translated">함수 괄호 안에 일관된 줄 바꿈 적용 (function-paren-newline)</target>
        </trans-unit>
        <trans-unit id="d87871c85040770dd286d13acd9d29c6a7264162" translate="yes" xml:space="preserve">
          <source>enforce consistent linebreak style</source>
          <target state="translated">일관된 줄 바꿈 스타일 시행</target>
        </trans-unit>
        <trans-unit id="4de9a65a000ae1aec57c9bbbb4f955d1036c1f04" translate="yes" xml:space="preserve">
          <source>enforce consistent linebreak style (linebreak-style)</source>
          <target state="translated">일관된 줄 바꿈 스타일 시행 (줄 바꿈 스타일)</target>
        </trans-unit>
        <trans-unit id="ad63f23e986b70c0717bd267194826ee393a74e3" translate="yes" xml:space="preserve">
          <source>enforce consistent linebreak style for operators</source>
          <target state="translated">운영자에게 일관된 줄 바꿈 스타일 시행</target>
        </trans-unit>
        <trans-unit id="4d725f9b56465e7cd7713fa304307ec9f6a48067" translate="yes" xml:space="preserve">
          <source>enforce consistent linebreak style for operators (operator-linebreak)</source>
          <target state="translated">운영자를 위해 일관된 줄 바꿈 스타일을 적용합니다 (오퍼레이터 줄 바꿈)</target>
        </trans-unit>
        <trans-unit id="02270dd7d7fdac5dfc5df30088eec9b470f29668" translate="yes" xml:space="preserve">
          <source>enforce consistent naming when capturing the current execution context</source>
          <target state="translated">현재 실행 컨텍스트를 캡처 할 때 일관된 이름 지정을 시행</target>
        </trans-unit>
        <trans-unit id="c578ff37f441a8c29e32f053918e6bc2b964b931" translate="yes" xml:space="preserve">
          <source>enforce consistent newlines before and after dots</source>
          <target state="translated">점 전후에 일관된 줄 바꿈을 시행</target>
        </trans-unit>
        <trans-unit id="5335ea65898c1b96bb9ccc51ab5400aa7f6fe66d" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing after the `//` or `/*` in a comment</source>
          <target state="translated">주석에서`//`또는`/ *`다음에 일정한 간격을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="8ca3d0451d2d44b671a451cd886041a5a2e327a9" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing around `*` operators in generator functions</source>
          <target state="translated">발전기 기능에서 * 연산자 주위에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="5d748ab65dd409c36612c37dadbf416476fd4bc6" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before `function` definition opening parenthesis</source>
          <target state="translated">함수 정의 열기 괄호 앞에 일정한 간격을 두십시오</target>
        </trans-unit>
        <trans-unit id="95558d79eac1352df8f1f0d258f3039166d119be" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before and after commas</source>
          <target state="translated">쉼표 전후에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="0146dea222469fc364ab6acb767af0bfba3f89a3" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before and after keywords</source>
          <target state="translated">키워드 전후 간격을 일정하게 유지</target>
        </trans-unit>
        <trans-unit id="3a406de443f2714f1c861b6b7d07514c4afb8627" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before and after keywords (keyword-spacing)</source>
          <target state="translated">키워드 전후 간격을 일정하게 유지 (키워드 간격)</target>
        </trans-unit>
        <trans-unit id="ea7bfb9bb5242a38665cd1bdc8c4f7021257a02d" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before and after semicolons</source>
          <target state="translated">세미콜론 전후에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="4c082c7fd449358af49c614961fa8bb64fa44b24" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before and after the arrow in arrow functions</source>
          <target state="translated">화살표 기능에서 화살표 전후에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="f46e7af8eefe7ff94ec138a02a8c95998a3b3d2c" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before blocks</source>
          <target state="translated">블록 전에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="1c016987dee44ae4ae65d1f793a9260bbca1895d" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing before or after unary operators</source>
          <target state="translated">단항 연산자 전후에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="d484b91fe2825283677b7b3d542f75c35c5b2b40" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing between keys and values in object literal properties</source>
          <target state="translated">객체 리터럴 속성에서 키와 값 사이에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="564ef5479e9b97f01248849207717236bf07e185" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing between keys and values in object literal properties (key-spacing)</source>
          <target state="translated">객체 리터럴 속성에서 키와 값 사이에 일정한 간격을 유지합니다 (키 간격).</target>
        </trans-unit>
        <trans-unit id="9d393adda933b4d3ca34df07e6aa0c2bfedd8091" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing inside array brackets</source>
          <target state="translated">배열 브래킷 내부에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="7bfd954b08f4fe7f72dbb52604dc5bce5ef6d6e5" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing inside braces</source>
          <target state="translated">중괄호 안에 일정한 간격을 두십시오</target>
        </trans-unit>
        <trans-unit id="d49f3bcbda76fe109d1d41f34f29e620127f3d22" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing inside braces (object-curly-spacing)</source>
          <target state="translated">중괄호 안에 일정한 간격을 유지합니다 (객체-간격)</target>
        </trans-unit>
        <trans-unit id="107fbeea34f833515b69c150553f462308f460a4" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing inside computed property brackets</source>
          <target state="translated">계산 된 속성 괄호 안에 일정한 간격을 유지</target>
        </trans-unit>
        <trans-unit id="e930ba1dde83096b6a8e7491353c02da9d7ed54d" translate="yes" xml:space="preserve">
          <source>enforce consistent spacing inside parentheses</source>
          <target state="translated">괄호 안에 일정한 간격을 두십시오</target>
        </trans-unit>
        <trans-unit id="f50f5fa99aad18aa2886238879b9652330b7da1f" translate="yes" xml:space="preserve">
          <source>enforce default clauses in switch statements to be last</source>
          <target state="translated">switch 문의 기본 절을 마지막으로 적용</target>
        </trans-unit>
        <trans-unit id="9218d921a431df6d941e149ceb4f8bd54dde2acc" translate="yes" xml:space="preserve">
          <source>enforce default parameters to be last</source>
          <target state="translated">기본 매개 변수를 마지막으로 적용</target>
        </trans-unit>
        <trans-unit id="dd6843b9b3803a75940825cda320d1cd9313e373" translate="yes" xml:space="preserve">
          <source>enforce default parameters to be last (default-param-last)</source>
          <target state="translated">기본 매개 변수를 마지막으로 시행 (default-param-last)</target>
        </trans-unit>
        <trans-unit id="64f528f799e8697cef0e556c1eefe7c591ff184e" translate="yes" xml:space="preserve">
          <source>enforce dot notation whenever possible</source>
          <target state="translated">가능할 때마다 점 표기법을 시행</target>
        </trans-unit>
        <trans-unit id="893b4874ac5417fab639d9081c9cb5c568d7bc6e" translate="yes" xml:space="preserve">
          <source>enforce getter and setter pairs in objects and classes</source>
          <target state="translated">객체와 클래스에 게터와 세터 쌍을 적용</target>
        </trans-unit>
        <trans-unit id="15d35b14dcbcd7840f91f9c3e60c3f6e3fd9ed24" translate="yes" xml:space="preserve">
          <source>enforce line breaks after each array element</source>
          <target state="translated">각 배열 요소 다음에 줄 바꿈 적용</target>
        </trans-unit>
        <trans-unit id="d1d152f7e4716d44074b38c2170006de4683e70e" translate="yes" xml:space="preserve">
          <source>enforce line breaks after opening and before closing array brackets (array-bracket-newline)</source>
          <target state="translated">어레이 브래킷 열기 및 닫기 전에 줄 바꿈 적용 (배열 브래킷 줄 바꾸기)</target>
        </trans-unit>
        <trans-unit id="58a6b4598df1b761beecd28f451e3f3840551b92" translate="yes" xml:space="preserve">
          <source>enforce line breaks between arguments of a function call</source>
          <target state="translated">함수 호출의 인수 사이에 줄 바꿈 적용</target>
        </trans-unit>
        <trans-unit id="e7e39cb47660ebbf62c75efd1ebb53f746492bc7" translate="yes" xml:space="preserve">
          <source>enforce line breaks between arguments of a function call (function-call-argument-newline)</source>
          <target state="translated">함수 호출의 인수 사이에 줄 바꿈 적용 (function-call-argument-newline)</target>
        </trans-unit>
        <trans-unit id="cdd274985a57ad8290a495881c490171a7f62d29" translate="yes" xml:space="preserve">
          <source>enforce line breaks between array elements (array-element-newline)</source>
          <target state="translated">배열 요소 사이에 줄 바꿈 적용 (배열 요소-개행)</target>
        </trans-unit>
        <trans-unit id="93e92ca3d295e9824c2c172d015a187d811b6897" translate="yes" xml:space="preserve">
          <source>enforce linebreaks after opening and before closing array brackets</source>
          <target state="translated">배열 괄호를 열고 닫기 전에 줄 바꿈을 시행</target>
        </trans-unit>
        <trans-unit id="de74e2f76dd1e8d0a50a07413a020d255ad74f8f" translate="yes" xml:space="preserve">
          <source>enforce location of semicolons</source>
          <target state="translated">세미콜론의 위치를 ​​강요하다</target>
        </trans-unit>
        <trans-unit id="81de17ec51df6da6724984ff07c35748c3a3388a" translate="yes" xml:space="preserve">
          <source>enforce minimum and maximum identifier lengths</source>
          <target state="translated">최소 및 최대 식별자 길이 적용</target>
        </trans-unit>
        <trans-unit id="9529c7a91241cd6f00960c25e364968aaa682317" translate="yes" xml:space="preserve">
          <source>enforce minimum and maximum identifier lengths (id-length)</source>
          <target state="translated">최소 및 최대 식별자 길이 (ID- 길이) 시행</target>
        </trans-unit>
        <trans-unit id="618ebbce9b64c08ff522801b76e0f30b0416a04c" translate="yes" xml:space="preserve">
          <source>enforce newlines between operands of ternary expressions</source>
          <target state="translated">삼항 표현식의 피연산자 사이에 줄 바꿈을 시행</target>
        </trans-unit>
        <trans-unit id="aba1fbb880de3871d57902f63105ca48466fa170" translate="yes" xml:space="preserve">
          <source>enforce or disallow capitalization of the first letter of a comment</source>
          <target state="translated">주석의 첫 글자를 대문자로하거나 금지</target>
        </trans-unit>
        <trans-unit id="b6467eedf06482e2642c085594acd55a7604dd6c" translate="yes" xml:space="preserve">
          <source>enforce or disallow capitalization of the first letter of a comment (capitalized-comments)</source>
          <target state="translated">의견의 첫 글자 (대문자)를 대문자로하거나 금지합니다.</target>
        </trans-unit>
        <trans-unit id="17014897c13fd5cfc1ee91dd17175d18657f495b" translate="yes" xml:space="preserve">
          <source>enforce or disallow parentheses when invoking a constructor with no arguments</source>
          <target state="translated">인수없이 생성자를 호출 할 때 괄호를 시행하거나 금지</target>
        </trans-unit>
        <trans-unit id="21de2a2c2e07e6536bd4ee2d5859a5403d4c701d" translate="yes" xml:space="preserve">
          <source>enforce placing object properties on separate lines</source>
          <target state="translated">별도의 줄에 객체 속성 배치</target>
        </trans-unit>
        <trans-unit id="e70e9454f438e6afaa334bd45b23c95e443759b3" translate="yes" xml:space="preserve">
          <source>enforce placing object properties on separate lines (object-property-newline)</source>
          <target state="translated">별도의 줄에 객체 속성 배치 (object-property-newline)</target>
        </trans-unit>
        <trans-unit id="5a031ee41f6d46accf1da51ddaa5863ec4b8578b" translate="yes" xml:space="preserve">
          <source>enforce position of line comments</source>
          <target state="translated">라인 코멘트의 위치를 ​​강제</target>
        </trans-unit>
        <trans-unit id="b7212cbe063e35542c972734ba5fa13d1554a9ea" translate="yes" xml:space="preserve">
          <source>enforce position of line comments (line-comment-position)</source>
          <target state="translated">라인 주석의 위치를 ​​강제합니다 (line-comment-position)</target>
        </trans-unit>
        <trans-unit id="07625dc9f17389967a998a30207cf99a636d9aea" translate="yes" xml:space="preserve">
          <source>enforce sorted import declarations within modules</source>
          <target state="translated">모듈 내에서 정렬 된 가져 오기 선언 시행</target>
        </trans-unit>
        <trans-unit id="443043ebc2cd5cd3b8f50afe9f296993d13705ae" translate="yes" xml:space="preserve">
          <source>enforce spacing around colons of switch statements</source>
          <target state="translated">switch 문의 콜론 주위에 간격을 두십시오</target>
        </trans-unit>
        <trans-unit id="e5b3278a14e5d8b10b957e1dd0a3ac0526139070" translate="yes" xml:space="preserve">
          <source>enforce spacing between rest and spread operators and their expressions</source>
          <target state="translated">휴식과 스프레드 연산자와 표현 사이에 간격을 두십시오</target>
        </trans-unit>
        <trans-unit id="bf60a1d5d213d39ad92a4a272d984831bdde2fa4" translate="yes" xml:space="preserve">
          <source>enforce that class methods utilize `this`</source>
          <target state="translated">클래스 메소드가`this`를 사용하도록 강제</target>
        </trans-unit>
        <trans-unit id="5b0953bbbffb68a7b102b0522ab92dec9d53519f" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either &lt;code&gt;function&lt;/code&gt; declarations or expressions (func-style)</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 선언이나 표현식을 일관되게 사용하도록 함 ( 펑크 스타일)</target>
        </trans-unit>
        <trans-unit id="25432a1acf43ad1c54b5ddd54b2caa2d88bb96dd" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either `function` declarations or expressions</source>
          <target state="translated">'함수'선언이나 표현식을 일관되게 사용</target>
        </trans-unit>
        <trans-unit id="087fd7cbc4ec898a6d0cc3ec06fff7cc07a049da" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either backticks, double, or single quotes</source>
          <target state="translated">enforce the consistent use of either backticks, double, or single quotes</target>
        </trans-unit>
        <trans-unit id="e7b1c33bbd7b3305b5fab83b37aefae3e4662280" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either backticks, double, or single quotes (quotes)</source>
          <target state="translated">백틱, 큰 따옴표 또는 작은 따옴표 (따옴표)를 일관되게 사용합니다.</target>
        </trans-unit>
        <trans-unit id="df6982f39a3227685d658268a81160ef4e9e8221" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either double or single quotes in JSX attributes</source>
          <target state="translated">JSX 속성에서 큰 따옴표 나 작은 따옴표를 일관되게 사용</target>
        </trans-unit>
        <trans-unit id="3fc946b39d884dc4c1374e1d5c9baad2c58dfe3e" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of either double or single quotes in JSX attributes (jsx-quotes)</source>
          <target state="translated">JSX 속성 (jsx-quotes)에서 큰 따옴표 또는 작은 따옴표를 일관되게 사용</target>
        </trans-unit>
        <trans-unit id="5670c575fa6bfb47e506ab8a390bdbc7ab9387c8" translate="yes" xml:space="preserve">
          <source>enforce the consistent use of the radix argument when using `parseInt()`</source>
          <target state="translated">`parseInt ()`를 사용할 때 기수 인수를 일관되게 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="020da2ec7a0f490aec58f999cc05fc2f0143f841" translate="yes" xml:space="preserve">
          <source>enforce the location of arrow function bodies</source>
          <target state="translated">화살표 기능 몸체의 위치를 ​​강제</target>
        </trans-unit>
        <trans-unit id="27669a903e9429ac31605f2bc752f0919fce5183" translate="yes" xml:space="preserve">
          <source>enforce the location of single-line statements</source>
          <target state="translated">한 줄 명세서의 위치를 ​​강요하다</target>
        </trans-unit>
        <trans-unit id="1bc7d94dc05fea4259e85eceb5d879f4e926bceb" translate="yes" xml:space="preserve">
          <source>enforce the location of single-line statements (nonblock-statement-body-position)</source>
          <target state="translated">한 줄 문장의 위치를 ​​강제한다 (non-statement-body-position)</target>
        </trans-unit>
        <trans-unit id="19003d088ac5560b87bf716ab3961611391cb4d3" translate="yes" xml:space="preserve">
          <source>enforce the use of `u` flag on RegExp</source>
          <target state="translated">RegExp에서`u` 플래그를 사용하도록 강제</target>
        </trans-unit>
        <trans-unit id="37990f9e81abf8376cdce049f4e602c865297178" translate="yes" xml:space="preserve">
          <source>enforce the use of variables within the scope they are defined</source>
          <target state="translated">정의 된 범위 내에서 변수를 사용하도록 강제</target>
        </trans-unit>
        <trans-unit id="dfac3dd8833b636a08d6642589d924b0dd844e78" translate="yes" xml:space="preserve">
          <source>enforce using named capture group in regular expression</source>
          <target state="translated">정규식에서 명명 된 캡처 그룹을 사용하여 시행</target>
        </trans-unit>
        <trans-unit id="cab073142bb58fda80276ed7607a2d6f305ef9f0" translate="yes" xml:space="preserve">
          <source>enforce valid JSDoc comments (valid-jsdoc)</source>
          <target state="translated">유효한 JSDoc 주석 시행 (valid-jsdoc)</target>
        </trans-unit>
        <trans-unit id="897d7b63c7b568c05434f0f4c994c8dd079e1be5" translate="yes" xml:space="preserve">
          <source>enforce variables to be declared either together or separately in functions</source>
          <target state="translated">함수에서 변수를 함께 또는 개별적으로 선언하도록 강제</target>
        </trans-unit>
        <trans-unit id="b04c2d2e5b471a2aeea6b06278beb7388133c3cf" translate="yes" xml:space="preserve">
          <source>enforce variables to be declared either together or separately in functions (one-var)</source>
          <target state="translated">함수에서 변수를 함께 또는 개별적으로 선언하도록합니다 (1-var)</target>
        </trans-unit>
        <trans-unit id="e206df72198957c573d3ca3eaac2764a5f456532" translate="yes" xml:space="preserve">
          <source>enforceConst</source>
          <target state="translated">enforceConst</target>
        </trans-unit>
        <trans-unit id="fae1738ebd7d277dc295c078eb275e45d4da20c6" translate="yes" xml:space="preserve">
          <source>enforceForArrowConditionals</source>
          <target state="translated">enforceForArrowConditionals</target>
        </trans-unit>
        <trans-unit id="29aa9ec0f17739bbd476d900568a30225e5e9510" translate="yes" xml:space="preserve">
          <source>enforceForClassMembers</source>
          <target state="translated">enforceForClassMembers</target>
        </trans-unit>
        <trans-unit id="a8de14445ec154b1842f7feccb368cef3dda7b07" translate="yes" xml:space="preserve">
          <source>enforceForFunctionPrototypeMethods</source>
          <target state="translated">enforceForFunctionPrototypeMethods</target>
        </trans-unit>
        <trans-unit id="ef531a1ea6bd3044d97ab3c15ba66ddf271abf3f" translate="yes" xml:space="preserve">
          <source>enforceForIndexOf</source>
          <target state="translated">enforceForIndexOf</target>
        </trans-unit>
        <trans-unit id="9c66087534e983aae6998f31753a1125c1a213f2" translate="yes" xml:space="preserve">
          <source>enforceForLogicalOperands</source>
          <target state="translated">enforceForLogicalOperands</target>
        </trans-unit>
        <trans-unit id="814808e7287fa7eeb4d8b82567bce6bae437f982" translate="yes" xml:space="preserve">
          <source>enforceForNewInMemberExpressions</source>
          <target state="translated">enforceForNewInMemberExpressions</target>
        </trans-unit>
        <trans-unit id="966fb3b3a225683a2ea9db027ab5452f20512827" translate="yes" xml:space="preserve">
          <source>enforceForOrderingRelations</source>
          <target state="translated">enforceForOrderingRelations</target>
        </trans-unit>
        <trans-unit id="2192ba3ea9fbbc257622dd7e2b3206fafe667151" translate="yes" xml:space="preserve">
          <source>enforceForSequenceExpressions</source>
          <target state="translated">enforceForSequenceExpressions</target>
        </trans-unit>
        <trans-unit id="65a39d5f1bbd5fb82a21dd75a743f94f0e301c72" translate="yes" xml:space="preserve">
          <source>enforceForSwitchCase</source>
          <target state="translated">enforceForSwitchCase</target>
        </trans-unit>
        <trans-unit id="418b45414eb35cfc7f3f02a8bfeb6e48f0f66d0c" translate="yes" xml:space="preserve">
          <source>enforceInMethodNames</source>
          <target state="translated">enforceInMethodNames</target>
        </trans-unit>
        <trans-unit id="46c3ce2da95ea4c01d551e323334cd6010445057" translate="yes" xml:space="preserve">
          <source>eol-last</source>
          <target state="translated">eol-last</target>
        </trans-unit>
        <trans-unit id="b37d01fdbfb5c2d2c1b64f726a2e046c78639fe1" translate="yes" xml:space="preserve">
          <source>eqeqeq</source>
          <target state="translated">eqeqeq</target>
        </trans-unit>
        <trans-unit id="35007db3bf673478dc4959e49e4dda9d6d58c13e" translate="yes" xml:space="preserve">
          <source>eslint.tmbundle</source>
          <target state="translated">eslint.tmbundle</target>
        </trans-unit>
        <trans-unit id="8177d1c88629d3605de0e237e648345e5ca26512" translate="yes" xml:space="preserve">
          <source>except-parens</source>
          <target state="translated">except-parens</target>
        </trans-unit>
        <trans-unit id="41311c282b9896e68902e67e41413b4ec7862f18" translate="yes" xml:space="preserve">
          <source>exceptRange</source>
          <target state="translated">exceptRange</target>
        </trans-unit>
        <trans-unit id="337f15589cf62d006511c8a5d6364779464db858" translate="yes" xml:space="preserve">
          <source>exceptionPatterns</source>
          <target state="translated">exceptionPatterns</target>
        </trans-unit>
        <trans-unit id="be51ea0d2df953559db847ba84b885b258389873" translate="yes" xml:space="preserve">
          <source>exceptions</source>
          <target state="translated">exceptions</target>
        </trans-unit>
        <trans-unit id="0da12023c6e1a8a57bc8ef953546b28a2095e73a" translate="yes" xml:space="preserve">
          <source>executeOnFiles()</source>
          <target state="translated">executeOnFiles()</target>
        </trans-unit>
        <trans-unit id="a29c9a2b424311df63d45642f7436abf641b0090" translate="yes" xml:space="preserve">
          <source>executeOnText()</source>
          <target state="translated">executeOnText()</target>
        </trans-unit>
        <trans-unit id="78897dd7418e54b4e25eb7634dd8b063a7685a69" translate="yes" xml:space="preserve">
          <source>exported</source>
          <target state="translated">exported</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="a38a04fc8a8f10e317b7a924d3062e32be017c4f" translate="yes" xml:space="preserve">
          <source>field: &lt;code&gt;FunctionDeclaration &amp;gt; Identifier.id&lt;/code&gt;</source>
          <target state="translated">필드 : &lt;code&gt;FunctionDeclaration &amp;gt; Identifier.id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="112f3a99b283a4e1788dedd8e0e5d35375c33747" translate="yes" xml:space="preserve">
          <source>flag</source>
          <target state="translated">flag</target>
        </trans-unit>
        <trans-unit id="21236fcbf3696d88cdb4ab5663a7beeee2971026" translate="yes" xml:space="preserve">
          <source>flatTernaryExpressions</source>
          <target state="translated">flatTernaryExpressions</target>
        </trans-unit>
        <trans-unit id="6eb910622b1beca120a1e9d9386d9c0c7b275045" translate="yes" xml:space="preserve">
          <source>following sibling: &lt;code&gt;ArrayExpression &amp;gt; Literal + SpreadElement&lt;/code&gt;</source>
          <target state="translated">다음 형제 : &lt;code&gt;ArrayExpression &amp;gt; Literal + SpreadElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8eb2ba99b97786470f298e360ba6e566ed709c5" translate="yes" xml:space="preserve">
          <source>for Statement</source>
          <target state="translated">성명서</target>
        </trans-unit>
        <trans-unit id="c7983662d52f41ee986662ea800f24fb9c28c110" translate="yes" xml:space="preserve">
          <source>for-direction</source>
          <target state="translated">for-direction</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="d84e652bfe37d5d975903efdc7cbc28041abae10" translate="yes" xml:space="preserve">
          <source>func-call-spacing</source>
          <target state="translated">func-call-spacing</target>
        </trans-unit>
        <trans-unit id="fe0326c72eba407094c6206d99118c40a9b80c89" translate="yes" xml:space="preserve">
          <source>func-name-matching</source>
          <target state="translated">func-name-matching</target>
        </trans-unit>
        <trans-unit id="508048a03fabdf5eafdaaf3bdc3fb5f5dc31940f" translate="yes" xml:space="preserve">
          <source>func-names</source>
          <target state="translated">func-names</target>
        </trans-unit>
        <trans-unit id="dcd7e694d21939ba32ca4d72e300d28fbbc3d74b" translate="yes" xml:space="preserve">
          <source>func-style</source>
          <target state="translated">func-style</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="3119f632af9e35092646b6fcd52299fc9a01f889" translate="yes" xml:space="preserve">
          <source>function calls (so you can still use functions you do not have control over)</source>
          <target state="translated">함수 호출 (따라서 제어 할 수없는 함수를 계속 사용할 수 있음)</target>
        </trans-unit>
        <trans-unit id="0eb82aee9870ec159d440aa962cf25736466a437" translate="yes" xml:space="preserve">
          <source>function declarations</source>
          <target state="translated">함수 선언</target>
        </trans-unit>
        <trans-unit id="4dfc351685cf5128d899af62d43224326fb65734" translate="yes" xml:space="preserve">
          <source>function-call-argument-newline</source>
          <target state="translated">function-call-argument-newline</target>
        </trans-unit>
        <trans-unit id="5d0814f6071e43a88cb4be54e1b3dd0d5e228337" translate="yes" xml:space="preserve">
          <source>function-paren-newline</source>
          <target state="translated">function-paren-newline</target>
        </trans-unit>
        <trans-unit id="bd0aa66d51a524541b316dc992ce119ee2e36c3c" translate="yes" xml:space="preserve">
          <source>functionExpressionScope</source>
          <target state="translated">functionExpressionScope</target>
        </trans-unit>
        <trans-unit id="d11dd45ea1a652ee99b0eda8cbb89ea1397c3e23" translate="yes" xml:space="preserve">
          <source>functionPrototypeMethods</source>
          <target state="translated">functionPrototypeMethods</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="43728c855bc454147f53f8f9f28eb62b2a699030" translate="yes" xml:space="preserve">
          <source>generator-star</source>
          <target state="translated">generator-star</target>
        </trans-unit>
        <trans-unit id="718ca2466aba0b3495db78d37147fef74636b631" translate="yes" xml:space="preserve">
          <source>generator-star-spacing</source>
          <target state="translated">generator-star-spacing</target>
        </trans-unit>
        <trans-unit id="f6fe738319fbe245927185a9b895d9477cfd2742" translate="yes" xml:space="preserve">
          <source>generator-star: enforce consistent spacing around the asterisk in generator functions</source>
          <target state="translated">generator-star : 발전기 기능에서 별표 주위에 일정한 간격을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="c6f5e4cf08e4a200a344ac68363ae64972eb1740" translate="yes" xml:space="preserve">
          <source>generators</source>
          <target state="translated">generators</target>
        </trans-unit>
        <trans-unit id="e6c26645b52113f1be7ee0b874d41d4c4c0883d0" translate="yes" xml:space="preserve">
          <source>getBeforeSet</source>
          <target state="translated">getBeforeSet</target>
        </trans-unit>
        <trans-unit id="d002293d768e13a0657002d3885de8e2e49e62d1" translate="yes" xml:space="preserve">
          <source>getConfigForFile()</source>
          <target state="translated">getConfigForFile()</target>
        </trans-unit>
        <trans-unit id="118c7f771929341b8388bd2a356c3d9d5ffd9c12" translate="yes" xml:space="preserve">
          <source>getDeclaredVariables(node)</source>
          <target state="translated">getDeclaredVariables(node)</target>
        </trans-unit>
        <trans-unit id="8b2d0ba517ac7ff52d86d3c3058300dc792b9744" translate="yes" xml:space="preserve">
          <source>getErrorResults()</source>
          <target state="translated">getErrorResults()</target>
        </trans-unit>
        <trans-unit id="7041588b9568ab753e1182c4198e1390458de001" translate="yes" xml:space="preserve">
          <source>getFormatter()</source>
          <target state="translated">getFormatter()</target>
        </trans-unit>
        <trans-unit id="f555a0443c5f99a28933e8b22ed2127608d5be6f" translate="yes" xml:space="preserve">
          <source>getRules()</source>
          <target state="translated">getRules()</target>
        </trans-unit>
        <trans-unit id="e5f4bfc99bb042f4d14d5809e143d66063cd2b5f" translate="yes" xml:space="preserve">
          <source>getWithoutSet</source>
          <target state="translated">getWithoutSet</target>
        </trans-unit>
        <trans-unit id="ebc9b2b5f71987e8c469312ee4040627316630f6" translate="yes" xml:space="preserve">
          <source>getter-return</source>
          <target state="translated">getter-return</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="393b09d19c37919470432e2e3b12f93a152c9b64" translate="yes" xml:space="preserve">
          <source>global-require</source>
          <target state="translated">global-require</target>
        </trans-unit>
        <trans-unit id="00f7a88086972b622a818e6ba9cd95d1c2272310" translate="yes" xml:space="preserve">
          <source>global-strict</source>
          <target state="translated">global-strict</target>
        </trans-unit>
        <trans-unit id="5b023970ca84ba8cc906e006b2a696129b30bcfa" translate="yes" xml:space="preserve">
          <source>global-strict: require or disallow strict mode directives in the global scope</source>
          <target state="translated">전역 엄격 : 전역 범위에서 엄격 모드 지시문을 요구하거나 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="c10dfaf7116643845448225e3d7f106e2ea0e020" translate="yes" xml:space="preserve">
          <source>globalScope</source>
          <target state="translated">globalScope</target>
        </trans-unit>
        <trans-unit id="01fa1232ec8a8c982bebb24d101adc6313ac5539" translate="yes" xml:space="preserve">
          <source>grouped-accessor-pairs</source>
          <target state="translated">grouped-accessor-pairs</target>
        </trans-unit>
        <trans-unit id="4cb058f9a77e86a64034e60e8f4468119015ef93" translate="yes" xml:space="preserve">
          <source>grouping</source>
          <target state="translated">grouping</target>
        </trans-unit>
        <trans-unit id="0a894db7c792e10a79e380cb0453380548bbacb5" translate="yes" xml:space="preserve">
          <source>groups</source>
          <target state="translated">groups</target>
        </trans-unit>
        <trans-unit id="2c5819c4a33dc94bf109d9d10cbba33815bc518a" translate="yes" xml:space="preserve">
          <source>guard-for-in</source>
          <target state="translated">guard-for-in</target>
        </trans-unit>
        <trans-unit id="86b6e0793f779fe32176094bdde8d1f0c4fac0db" translate="yes" xml:space="preserve">
          <source>handle-callback-err</source>
          <target state="translated">handle-callback-err</target>
        </trans-unit>
        <trans-unit id="9773f7daffaf04b9a1cec2ea7e18a74ace7102b6" translate="yes" xml:space="preserve">
          <source>hoist</source>
          <target state="translated">hoist</target>
        </trans-unit>
        <trans-unit id="22e3d11eb69b5c1a5d668af45720cebded4bc443" translate="yes" xml:space="preserve">
          <source>hoist: all</source>
          <target state="translated">호이스트 : 모두</target>
        </trans-unit>
        <trans-unit id="3cafcd9a9d726a699e7cc8f8174119a3f40a6a3b" translate="yes" xml:space="preserve">
          <source>hoist: functions</source>
          <target state="translated">호이스트 : 기능</target>
        </trans-unit>
        <trans-unit id="f8afefb9518b48439386029de417759133ada27f" translate="yes" xml:space="preserve">
          <source>hoist: never</source>
          <target state="translated">호이스트 : 절대</target>
        </trans-unit>
        <trans-unit id="950a39b6c2934bb72f2def76c71e88e9c035385f" translate="yes" xml:space="preserve">
          <source>html</source>
          <target state="translated">html</target>
        </trans-unit>
        <trans-unit id="95b179cdb55cfc25cdeb4b24bfd3ced34edc8c9c" translate="yes" xml:space="preserve">
          <source>id-blacklist</source>
          <target state="translated">id-blacklist</target>
        </trans-unit>
        <trans-unit id="5491171003920f17065f35cc8356eea66d7090ef" translate="yes" xml:space="preserve">
          <source>id-denylist</source>
          <target state="translated">id-denylist</target>
        </trans-unit>
        <trans-unit id="78ee448e3d4bc0054298408df28ea775cf59ba44" translate="yes" xml:space="preserve">
          <source>id-length</source>
          <target state="translated">id-length</target>
        </trans-unit>
        <trans-unit id="aa84ac8cc756616379e0733da9f21d76bc2e205f" translate="yes" xml:space="preserve">
          <source>id-match</source>
          <target state="translated">id-match</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="55b00519c07d7934f0628c5b69fe1bd1a63f55ec" translate="yes" xml:space="preserve">
          <source>identifiers</source>
          <target state="translated">identifiers</target>
        </trans-unit>
        <trans-unit id="423fb26f0bcef3cf3d3d4b7969f54813c3c75e6a" translate="yes" xml:space="preserve">
          <source>if Statement</source>
          <target state="translated">if 문</target>
        </trans-unit>
        <trans-unit id="e4ee399bbf8a15171d444cdf237e97cd3a7d2a4b" translate="yes" xml:space="preserve">
          <source>if a key is a node type or a &lt;a href=&quot;selectors&quot;&gt;selector&lt;/a&gt; plus &lt;code&gt;:exit&lt;/code&gt;, ESLint calls that &lt;strong&gt;visitor&lt;/strong&gt; function while going &lt;strong&gt;up&lt;/strong&gt; the tree</source>
          <target state="translated">키가 노드 유형이나 경우 &lt;a href=&quot;selectors&quot;&gt;선택&lt;/a&gt; 플러스 &lt;code&gt;:exit&lt;/code&gt; , ESLint는 호출 &lt;strong&gt;방문자&lt;/strong&gt; 가는 동안 기능을 &lt;strong&gt;최대&lt;/strong&gt; 트리를</target>
        </trans-unit>
        <trans-unit id="559c9523eb8a7a9fd0f42f7302db45a4c3edd91f" translate="yes" xml:space="preserve">
          <source>if a key is a node type or a &lt;a href=&quot;selectors&quot;&gt;selector&lt;/a&gt;, ESLint calls that &lt;strong&gt;visitor&lt;/strong&gt; function while going &lt;strong&gt;down&lt;/strong&gt; the tree</source>
          <target state="translated">키가 노드 유형 또는 &lt;a href=&quot;selectors&quot;&gt;선택기 인&lt;/a&gt; 경우 ESLint 는 트리를 &lt;strong&gt;내려&lt;/strong&gt; 가면서 해당 &lt;strong&gt;방문자&lt;/strong&gt; 기능을 호출합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38d8728723b35cdc09bbf5e7b58a99cee7bcf49a" translate="yes" xml:space="preserve">
          <source>if a key is a node type plus &lt;code&gt;:exit&lt;/code&gt;, ESLint calls that &lt;strong&gt;visitor&lt;/strong&gt; function while going &lt;strong&gt;up&lt;/strong&gt; the tree</source>
          <target state="translated">키가 노드 유형 플러스 인 경우 &lt;code&gt;:exit&lt;/code&gt; , ESLint는 호출 &lt;strong&gt;방문자&lt;/strong&gt; 가는 동안 기능을 &lt;strong&gt;최대&lt;/strong&gt; 트리를</target>
        </trans-unit>
        <trans-unit id="3240c5f0cc01cc626ec6f6347538bf520b1bfca4" translate="yes" xml:space="preserve">
          <source>if a key is a node type, ESLint calls that &lt;strong&gt;visitor&lt;/strong&gt; function while going &lt;strong&gt;down&lt;/strong&gt; the tree</source>
          <target state="translated">키가 노드 유형 인 경우 ESLint 는 트리를 &lt;strong&gt;내려&lt;/strong&gt; 가면서 &lt;strong&gt;방문자&lt;/strong&gt; 기능을 호출합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1053513e1b2abede0480cfc950a980dbbeb9546" translate="yes" xml:space="preserve">
          <source>if a key is an event name, ESLint calls that &lt;strong&gt;handler&lt;/strong&gt; function for &lt;a href=&quot;code-path-analysis&quot;&gt;code path analysis&lt;/a&gt;</source>
          <target state="translated">키가 이벤트 이름 인 경우 ESLint는 &lt;a href=&quot;code-path-analysis&quot;&gt;코드 경로 분석을&lt;/a&gt; 위해 해당 &lt;strong&gt;핸들러&lt;/strong&gt; 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="8ccbde832c3e0f90c55b72c598844679fff2167d" translate="yes" xml:space="preserve">
          <source>ignore</source>
          <target state="translated">ignore</target>
        </trans-unit>
        <trans-unit id="fd0648d4f2aca55c8557192b8599077a9f67b195" translate="yes" xml:space="preserve">
          <source>ignoreArrayIndexes</source>
          <target state="translated">ignoreArrayIndexes</target>
        </trans-unit>
        <trans-unit id="6973f7a685a686d3fdfcde48c414b2c3ea609abf" translate="yes" xml:space="preserve">
          <source>ignoreCase</source>
          <target state="translated">ignoreCase</target>
        </trans-unit>
        <trans-unit id="9469fa646849d60288e1fecca0a183effe78e201" translate="yes" xml:space="preserve">
          <source>ignoreChainWithDepth</source>
          <target state="translated">ignoreChainWithDepth</target>
        </trans-unit>
        <trans-unit id="804f3129bbedcc67f89230e99c5fd4898d85fd71" translate="yes" xml:space="preserve">
          <source>ignoreComments</source>
          <target state="translated">ignoreComments</target>
        </trans-unit>
        <trans-unit id="c44f63db71cf67885b1310c317de5435f4474148" translate="yes" xml:space="preserve">
          <source>ignoreDefaultValues</source>
          <target state="translated">ignoreDefaultValues</target>
        </trans-unit>
        <trans-unit id="d69c4125b57611e2e5c4768a213327af416d5e89" translate="yes" xml:space="preserve">
          <source>ignoreDestructuring: false</source>
          <target state="translated">Destructuring : false</target>
        </trans-unit>
        <trans-unit id="e5cb0c276e25c3209fbf661c38534c5ecd025f7a" translate="yes" xml:space="preserve">
          <source>ignoreDestructuring: true</source>
          <target state="translated">디스트 럭처링 : true</target>
        </trans-unit>
        <trans-unit id="304cb349ad55d8d0081969d2bf82e5027d47a84a" translate="yes" xml:space="preserve">
          <source>ignoreEOLComments</source>
          <target state="translated">ignoreEOLComments</target>
        </trans-unit>
        <trans-unit id="ac6a2581d38f3c952f6727b012638f67189b158a" translate="yes" xml:space="preserve">
          <source>ignoreForLoopInit</source>
          <target state="translated">ignoreForLoopInit</target>
        </trans-unit>
        <trans-unit id="b363c59228e8e82b51ccf7b78e6f213039a91f74" translate="yes" xml:space="preserve">
          <source>ignoreGlobals: false</source>
          <target state="translated">ignoreGlobals : false</target>
        </trans-unit>
        <trans-unit id="97811f749bf57d222ccd11e3e536190ebd8bd262" translate="yes" xml:space="preserve">
          <source>ignoreGlobals: true</source>
          <target state="translated">ignoreGlobals : true</target>
        </trans-unit>
        <trans-unit id="bcf3ce8198a1d7fbce439023912e44f0697d3c50" translate="yes" xml:space="preserve">
          <source>ignoreImports: false</source>
          <target state="translated">ignoreImports : 거짓</target>
        </trans-unit>
        <trans-unit id="5fcee2629c318ef9c127571460e1db9c3a9237c9" translate="yes" xml:space="preserve">
          <source>ignoreImports: true</source>
          <target state="translated">ignoreImports : true</target>
        </trans-unit>
        <trans-unit id="f8fbc03b3db3a28156bf3c189194806ecdbf486f" translate="yes" xml:space="preserve">
          <source>ignoreJSX</source>
          <target state="translated">ignoreJSX</target>
        </trans-unit>
        <trans-unit id="6c146317b9c6f42fe972f20285c944a1c90a61fa" translate="yes" xml:space="preserve">
          <source>ignorePattern</source>
          <target state="translated">ignorePattern</target>
        </trans-unit>
        <trans-unit id="74d1a4983a378491eb99922ee945ebe8980c2417" translate="yes" xml:space="preserve">
          <source>ignoreReadBeforeAssign</source>
          <target state="translated">ignoreReadBeforeAssign</target>
        </trans-unit>
        <trans-unit id="566b9e8c39ace1e405d4459d3f19fa7afeba583e" translate="yes" xml:space="preserve">
          <source>ignoreRegExpLiterals</source>
          <target state="translated">ignoreRegExpLiterals</target>
        </trans-unit>
        <trans-unit id="f52e56da085a85311dc02a90d85502989f6d918b" translate="yes" xml:space="preserve">
          <source>ignoreRestSiblings</source>
          <target state="translated">ignoreRestSiblings</target>
        </trans-unit>
        <trans-unit id="7234b7eed701e3dd2677bdfccf328d71b50ae62d" translate="yes" xml:space="preserve">
          <source>ignoreStrings</source>
          <target state="translated">ignoreStrings</target>
        </trans-unit>
        <trans-unit id="3a2872fba999eb7b8cefbf3ee195d74c089b0ca7" translate="yes" xml:space="preserve">
          <source>ignoreTemplateLiterals</source>
          <target state="translated">ignoreTemplateLiterals</target>
        </trans-unit>
        <trans-unit id="149d733cb2914f6ed13f7e462b3e9cb89ebdb373" translate="yes" xml:space="preserve">
          <source>ignoreTopLevelFunctions</source>
          <target state="translated">ignoreTopLevelFunctions</target>
        </trans-unit>
        <trans-unit id="7a043affe1f17409682bfe5a2a8315f9a380f7cb" translate="yes" xml:space="preserve">
          <source>ignoreTrailingComments</source>
          <target state="translated">ignoreTrailingComments</target>
        </trans-unit>
        <trans-unit id="565e7dfce52397089cb725e90cd75dc8a31a7c8e" translate="yes" xml:space="preserve">
          <source>ignoreUrls</source>
          <target state="translated">ignoreUrls</target>
        </trans-unit>
        <trans-unit id="5c882bb765b50c5c28889221e5d7b474ecacae8e" translate="yes" xml:space="preserve">
          <source>ignoredNodes</source>
          <target state="translated">ignoredNodes</target>
        </trans-unit>
        <trans-unit id="ad94a462c6bf6c01a273b1e006869bb69bdb9c96" translate="yes" xml:space="preserve">
          <source>immediately-invoked function expressions (also known as IIFEs) such as &lt;code&gt;var x = (function () {})();&lt;/code&gt; and &lt;code&gt;((function foo() {return 1;})())&lt;/code&gt; to avoid conflicts with the &lt;a href=&quot;wrap-iife&quot;&gt;wrap-iife&lt;/a&gt; rule</source>
          <target state="translated">&lt;code&gt;var x = (function () {})();&lt;/code&gt; 과 같이 즉시 호출 된 함수 표현식 (IIFE라고도 함 ); 및 &lt;code&gt;((function foo() {return 1;})())&lt;/code&gt; 충돌 피하기 위해 &lt;a href=&quot;wrap-iife&quot;&gt;랩 인생의&lt;/a&gt; 규칙</target>
        </trans-unit>
        <trans-unit id="47f0df4b90dd34caa918a2f58713a52404d435cc" translate="yes" xml:space="preserve">
          <source>immediately-invoked function expressions (also known as IIFEs) such as &lt;code&gt;var x = (function () {})();&lt;/code&gt; and &lt;code&gt;var x = (function () {}());&lt;/code&gt; to avoid conflicts with the &lt;a href=&quot;wrap-iife&quot;&gt;wrap-iife&lt;/a&gt; rule</source>
          <target state="translated">&lt;code&gt;var x = (function () {})();&lt;/code&gt; 과 같이 즉시 호출되는 함수 표현식 (IIFE라고도 함 ) 및 &lt;code&gt;var x = (function () {}());&lt;/code&gt; &lt;a href=&quot;wrap-iife&quot;&gt;wrap-iife&lt;/a&gt; 규칙 과의 충돌을 피하기 위해</target>
        </trans-unit>
        <trans-unit id="481e8802d270fad7f17ad6f3ef285899a609b9dc" translate="yes" xml:space="preserve">
          <source>implicit-arrow-linebreak</source>
          <target state="translated">implicit-arrow-linebreak</target>
        </trans-unit>
        <trans-unit id="c11e762b7f6b5b6e6c9c444eb59ecee59a56c27e" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;docs/rules&lt;/code&gt; directory: a Markdown documentation file (for example, &lt;code&gt;no-extra-semi&lt;/code&gt;)</source>
          <target state="translated">에서 &lt;code&gt;docs/rules&lt;/code&gt; 디렉토리를하십시오 마크 다운 문서 파일을 (예를 들어, &lt;code&gt;no-extra-semi&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b81e230f0429bdc244b1944960eba538b2257b80" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;lib/rules&lt;/code&gt; directory: a source file (for example, &lt;code&gt;no-extra-semi.js&lt;/code&gt;)</source>
          <target state="translated">에 &lt;code&gt;lib/rules&lt;/code&gt; 디렉토리 : 소스 파일을 (예를 들어, &lt;code&gt;no-extra-semi.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="617ecef9763c1a21ab5bf893accd3204159848b1" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;tests/lib/rules&lt;/code&gt; directory: a test file (for example, &lt;code&gt;no-extra-semi.js&lt;/code&gt;)</source>
          <target state="translated">에서 &lt;code&gt;tests/lib/rules&lt;/code&gt; 디렉토리 : 테스트 파일 (예를 들어, &lt;code&gt;no-extra-semi.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="32cd435bbc06beecf5359cdb1d7bcdb0513318c7" translate="yes" xml:space="preserve">
          <source>includeCommonJSModuleExports</source>
          <target state="translated">includeCommonJSModuleExports</target>
        </trans-unit>
        <trans-unit id="7b03f818d34764ad0369c2ba45f0a22da6095df2" translate="yes" xml:space="preserve">
          <source>inconsistent order of parameter names in a comment compared to the function or method</source>
          <target state="translated">함수 또는 메소드와 비교하여 주석에서 매개 변수 이름의 순서가 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cc46d20365996efe5ff1d4a9e0d401d68f186ed" translate="yes" xml:space="preserve">
          <source>indent</source>
          <target state="translated">indent</target>
        </trans-unit>
        <trans-unit id="c55e61510ac8f4ac3d44749225b27809a3f0369b" translate="yes" xml:space="preserve">
          <source>indent-legacy</source>
          <target state="translated">indent-legacy</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="213514fd03f1037cfe66211b929b7d9590789191" translate="yes" xml:space="preserve">
          <source>init-declarations</source>
          <target state="translated">init-declarations</target>
        </trans-unit>
        <trans-unit id="5e82d81bdbc3817e992e5f7d4891f120e52eb266" translate="yes" xml:space="preserve">
          <source>initializations</source>
          <target state="translated">initializations</target>
        </trans-unit>
        <trans-unit id="893049beb94e42801c1127848c3798db4ef93250" translate="yes" xml:space="preserve">
          <source>initialized and uninitialized</source>
          <target state="translated">초기화 및 초기화되지 않은</target>
        </trans-unit>
        <trans-unit id="3b116c6e7cb6bc85a8dd74706aa2fac054ce55dc" translate="yes" xml:space="preserve">
          <source>insensitive</source>
          <target state="translated">insensitive</target>
        </trans-unit>
        <trans-unit id="fcc537881cd1d5bcddabf48fa8809c7471176de0" translate="yes" xml:space="preserve">
          <source>inside</source>
          <target state="translated">inside</target>
        </trans-unit>
        <trans-unit id="6496fc296b6fefaa518b14174fd8c160022f2a22" translate="yes" xml:space="preserve">
          <source>int32Hint</source>
          <target state="translated">int32Hint</target>
        </trans-unit>
        <trans-unit id="2b51d068b25b6440cbcc20cf74bd0bd4d569a5c2" translate="yes" xml:space="preserve">
          <source>is converted to</source>
          <target state="translated">로 변환</target>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="translated">에 해당</target>
        </trans-unit>
        <trans-unit id="6628b382993974f4a5cbca2c9b1c1c013ebe9b61" translate="yes" xml:space="preserve">
          <source>is the same as:</source>
          <target state="translated">와 같다:</target>
        </trans-unit>
        <trans-unit id="d02ad238cd1c3c369914d40f8c7e8409ebf65018" translate="yes" xml:space="preserve">
          <source>isArgumentsMaterialized()</source>
          <target state="translated">isArgumentsMaterialized()</target>
        </trans-unit>
        <trans-unit id="55ae55ff5f405d8c807e13442a2f25d99c3b1187" translate="yes" xml:space="preserve">
          <source>isImpliedStrict()</source>
          <target state="translated">isImpliedStrict()</target>
        </trans-unit>
        <trans-unit id="885a9eb92dec41e9b3dda62dde69be6e7d54ff05" translate="yes" xml:space="preserve">
          <source>isModule()</source>
          <target state="translated">isModule()</target>
        </trans-unit>
        <trans-unit id="392c86ecd6d203b2bf9087ac02c7426781958ef0" translate="yes" xml:space="preserve">
          <source>isPathIgnored()</source>
          <target state="translated">isPathIgnored()</target>
        </trans-unit>
        <trans-unit id="0b818dbc1b9aaa80f4f2ffac0f78c16373fafd13" translate="yes" xml:space="preserve">
          <source>isRead()</source>
          <target state="translated">isRead()</target>
        </trans-unit>
        <trans-unit id="8c97a590e434f85ac0d782adf31745c4b7af66a9" translate="yes" xml:space="preserve">
          <source>isReadOnly()</source>
          <target state="translated">isReadOnly()</target>
        </trans-unit>
        <trans-unit id="3e876fd1dbaa3f439577c63a9c3ed59f922632f8" translate="yes" xml:space="preserve">
          <source>isReadWrite()</source>
          <target state="translated">isReadWrite()</target>
        </trans-unit>
        <trans-unit id="a5402f9c9c31999c8057f07e7882f2cd815f5e87" translate="yes" xml:space="preserve">
          <source>isStatic()</source>
          <target state="translated">isStatic()</target>
        </trans-unit>
        <trans-unit id="17bccbb63d65ba7227cf3cacf3c00160ed4718c5" translate="yes" xml:space="preserve">
          <source>isStrict</source>
          <target state="translated">isStrict</target>
        </trans-unit>
        <trans-unit id="5a510b20a2810a84d467e514449c99619c39c360" translate="yes" xml:space="preserve">
          <source>isStrictModeSupported()</source>
          <target state="translated">isStrictModeSupported()</target>
        </trans-unit>
        <trans-unit id="a3336c967c4b5fbc7492e32978f106fd74e84dac" translate="yes" xml:space="preserve">
          <source>isThisMaterialized()</source>
          <target state="translated">isThisMaterialized()</target>
        </trans-unit>
        <trans-unit id="294f5f3dc61939373eaeeb40f1c231e46568fad1" translate="yes" xml:space="preserve">
          <source>isUsedName(name)</source>
          <target state="translated">isUsedName(name)</target>
        </trans-unit>
        <trans-unit id="4676448c1fd702f010058f8aac39824fa1ee76d3" translate="yes" xml:space="preserve">
          <source>isWrite()</source>
          <target state="translated">isWrite()</target>
        </trans-unit>
        <trans-unit id="9ecdc5d90a691b61ad1f10562117e33ae902f6ba" translate="yes" xml:space="preserve">
          <source>isWriteOnly()</source>
          <target state="translated">isWriteOnly()</target>
        </trans-unit>
        <trans-unit id="b7847d1b85f0637dbcbfc33a02f020c906402f6f" translate="yes" xml:space="preserve">
          <source>it does not execute a &lt;code&gt;return&lt;/code&gt; statement before it exits</source>
          <target state="translated">종료하기 전에 &lt;code&gt;return&lt;/code&gt; 문을 실행하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b551c66edbd12bd1704b8f26cb23e4a4880fa578" translate="yes" xml:space="preserve">
          <source>it executes &lt;code&gt;return undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;return undefined&lt;/code&gt; 을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2929265f0209a99852d2e640fcef216564125654" translate="yes" xml:space="preserve">
          <source>it executes &lt;code&gt;return void&lt;/code&gt; followed by an expression (for example, a function call)</source>
          <target state="translated">이 실행 &lt;code&gt;return void&lt;/code&gt; 식을 다음 (예를 들어, 함수 호출)</target>
        </trans-unit>
        <trans-unit id="ffb6b03a3af25c6e2f41399266435502027d9357" translate="yes" xml:space="preserve">
          <source>it executes &lt;code&gt;return&lt;/code&gt; followed by any other expression which evaluates to &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 것으로 평가되는 &lt;code&gt;return&lt;/code&gt; 뒤에 다른 표현식을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6174652a21eea6ff47da780b637355f29ff08a2b" translate="yes" xml:space="preserve">
          <source>it executes &lt;code&gt;return&lt;/code&gt; which does not specify a value explicitly</source>
          <target state="translated">명시 적으로 값을 지정하지 않은 &lt;code&gt;return&lt;/code&gt; 을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="bda4a0613e687ee812953a4afbc506b99f808746" translate="yes" xml:space="preserve">
          <source>javascript-eslint.tmbundle</source>
          <target state="translated">javascript-eslint.tmbundle</target>
        </trans-unit>
        <trans-unit id="3d4042384739fb58463d965551cdd01c7b863600" translate="yes" xml:space="preserve">
          <source>jslint-xml</source>
          <target state="translated">jslint-xml</target>
        </trans-unit>
        <trans-unit id="05d97e6e9834ccf063c552e404b9ecafc5e4d662" translate="yes" xml:space="preserve">
          <source>json</source>
          <target state="translated">json</target>
        </trans-unit>
        <trans-unit id="dbe82e241da6c22a3e2583413fd7f5fb837ed88d" translate="yes" xml:space="preserve">
          <source>json-with-metadata</source>
          <target state="translated">json-with-metadata</target>
        </trans-unit>
        <trans-unit id="41f61a4e4c8ef38d9beb38ded63e4a370ac3f02b" translate="yes" xml:space="preserve">
          <source>jsx-quotes</source>
          <target state="translated">jsx-quotes</target>
        </trans-unit>
        <trans-unit id="fdda4a4a842bd2bb90c6bd3c8076c777264fc204" translate="yes" xml:space="preserve">
          <source>junit</source>
          <target state="translated">junit</target>
        </trans-unit>
        <trans-unit id="5f2d8de3e09ac694151b817f482d94df5bdb3fcc" translate="yes" xml:space="preserve">
          <source>key-spacing</source>
          <target state="translated">key-spacing</target>
        </trans-unit>
        <trans-unit id="10178ab84400b719bb00f4f0fb0a23325615e6c5" translate="yes" xml:space="preserve">
          <source>keyword-spacing</source>
          <target state="translated">keyword-spacing</target>
        </trans-unit>
        <trans-unit id="88fc09e54b17679b0028556344b50c9fe169bdb5" translate="yes" xml:space="preserve">
          <source>keywords</source>
          <target state="translated">keywords</target>
        </trans-unit>
        <trans-unit id="0ef25ae00f40c8471ee44b720036abcc25e96cee" translate="yes" xml:space="preserve">
          <source>kind</source>
          <target state="translated">kind</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="a643384ef8c2906b9e734fb854101a5ae01a4324" translate="yes" xml:space="preserve">
          <source>less verbose, and easier to reason about.</source>
          <target state="translated">덜 장황하고 추론하기 쉽다.</target>
        </trans-unit>
        <trans-unit id="6b45ea1469955b010e210c17a0a9c1ea0a53524d" translate="yes" xml:space="preserve">
          <source>line-comment-position</source>
          <target state="translated">line-comment-position</target>
        </trans-unit>
        <trans-unit id="49f600f3629bb9c989f97b76ac07621240e87f38" translate="yes" xml:space="preserve">
          <source>linebreak-style</source>
          <target state="translated">linebreak-style</target>
        </trans-unit>
        <trans-unit id="a75406e6ca19638a2c377fd5edbb8d3d6464a396" translate="yes" xml:space="preserve">
          <source>lines-around-comment</source>
          <target state="translated">lines-around-comment</target>
        </trans-unit>
        <trans-unit id="f218aff519b8513b420839528263105cbe9ce5d7" translate="yes" xml:space="preserve">
          <source>lines-around-directive</source>
          <target state="translated">lines-around-directive</target>
        </trans-unit>
        <trans-unit id="541999cb1c25f2155592dd700588ec2e3444030b" translate="yes" xml:space="preserve">
          <source>lines-between-class-members</source>
          <target state="translated">lines-between-class-members</target>
        </trans-unit>
        <trans-unit id="2df59a2772e668b9587388e3470a77737a222807" translate="yes" xml:space="preserve">
          <source>lintFiles()</source>
          <target state="translated">lintFiles()</target>
        </trans-unit>
        <trans-unit id="749bf9aaa3c8552ddad41a64633e7ae583e0ff4e" translate="yes" xml:space="preserve">
          <source>lintText()</source>
          <target state="translated">lintText()</target>
        </trans-unit>
        <trans-unit id="4a5630c27ed0b1424fd23855b2abcbadc25999b2" translate="yes" xml:space="preserve">
          <source>linter</source>
          <target state="translated">linter</target>
        </trans-unit>
        <trans-unit id="dc67d11912a5909060b2bfe9093245df327db72c" translate="yes" xml:space="preserve">
          <source>linter (deprecated)</source>
          <target state="translated">린터 (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="f0dbfb418b94ff62815e06e70c0dd921c5c1ec30" translate="yes" xml:space="preserve">
          <source>linting error</source>
          <target state="translated">보푸라기 오류</target>
        </trans-unit>
        <trans-unit id="cdc21724c79577a634f56ad8c0b9ba4c891ff08a" translate="yes" xml:space="preserve">
          <source>linting warning</source>
          <target state="translated">보풀 경고</target>
        </trans-unit>
        <trans-unit id="58561c57a9dc3797180b99632bc3c91d70cc82c9" translate="yes" xml:space="preserve">
          <source>loadFormatter()</source>
          <target state="translated">loadFormatter()</target>
        </trans-unit>
        <trans-unit id="d36848505b4d55e274fb75ef5b95a7048e94adaf" translate="yes" xml:space="preserve">
          <source>markers</source>
          <target state="translated">markers</target>
        </trans-unit>
        <trans-unit id="023453d4cc6e0cbc66839d9e57a145e1b2b3acfb" translate="yes" xml:space="preserve">
          <source>matchDescription</source>
          <target state="translated">matchDescription</target>
        </trans-unit>
        <trans-unit id="f307f7361a34c7537e3d359b6902535559a1cfbe" translate="yes" xml:space="preserve">
          <source>matches-any: &lt;code&gt;:matches([attr] &amp;gt; :first-child, :last-child)&lt;/code&gt;</source>
          <target state="translated">모두 일치 &lt;code&gt;:matches([attr] &amp;gt; :first-child, :last-child)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="e2ab189671b1b54cbc2bf0f9ad4caf45b85a6b3c" translate="yes" xml:space="preserve">
          <source>max-classes-per-file</source>
          <target state="translated">max-classes-per-file</target>
        </trans-unit>
        <trans-unit id="47890dab58ad71c5c3edfddd92e0a6266c9b8eaa" translate="yes" xml:space="preserve">
          <source>max-depth</source>
          <target state="translated">max-depth</target>
        </trans-unit>
        <trans-unit id="02ea89287da9fb8397d4f918877fee488ef1155f" translate="yes" xml:space="preserve">
          <source>max-len</source>
          <target state="translated">max-len</target>
        </trans-unit>
        <trans-unit id="bde0a67097d7da802e20cfaaffd6808c9ed89bd2" translate="yes" xml:space="preserve">
          <source>max-lines</source>
          <target state="translated">max-lines</target>
        </trans-unit>
        <trans-unit id="c725d77dd477e72aad09772c9c3f1f843c32697e" translate="yes" xml:space="preserve">
          <source>max-lines-per-function</source>
          <target state="translated">max-lines-per-function</target>
        </trans-unit>
        <trans-unit id="9475593c12468c1c11216e5e6cc7b33749881ac0" translate="yes" xml:space="preserve">
          <source>max-nested-callbacks</source>
          <target state="translated">max-nested-callbacks</target>
        </trans-unit>
        <trans-unit id="467430f524acd7fb42c844f8a71b332fe9a6276d" translate="yes" xml:space="preserve">
          <source>max-params</source>
          <target state="translated">max-params</target>
        </trans-unit>
        <trans-unit id="1dfb4c5df85dd05786cb69111d4c59e04145e157" translate="yes" xml:space="preserve">
          <source>max-statements</source>
          <target state="translated">max-statements</target>
        </trans-unit>
        <trans-unit id="6fd3bc91978338523339b3221ea1f718ab4540bb" translate="yes" xml:space="preserve">
          <source>max-statements-per-line</source>
          <target state="translated">max-statements-per-line</target>
        </trans-unit>
        <trans-unit id="634ff28a2481970967693f730aae8ccee95fe5b8" translate="yes" xml:space="preserve">
          <source>maxBOF</source>
          <target state="translated">maxBOF</target>
        </trans-unit>
        <trans-unit id="ee3f3ce9044dba618ad0f9328abe79239e339c8e" translate="yes" xml:space="preserve">
          <source>maxEOF</source>
          <target state="translated">maxEOF</target>
        </trans-unit>
        <trans-unit id="ed2b9c4fe1fdb51f0eec2dacd6d2ad8d2e727ba3" translate="yes" xml:space="preserve">
          <source>migrating-to-1.0.0</source>
          <target state="translated">migrating-to-1.0.0</target>
        </trans-unit>
        <trans-unit id="8fab08f4386f86ebe1baaf10329dd77cdb187b80" translate="yes" xml:space="preserve">
          <source>migrating-to-2.0.0</source>
          <target state="translated">migrating-to-2.0.0</target>
        </trans-unit>
        <trans-unit id="aef122c22acb6583100fbcc825ec10ab64e46c8f" translate="yes" xml:space="preserve">
          <source>migrating-to-3.0.0</source>
          <target state="translated">migrating-to-3.0.0</target>
        </trans-unit>
        <trans-unit id="e0b49a2ff76ba35ca551a04b72b3cd6972de2d24" translate="yes" xml:space="preserve">
          <source>migrating-to-4.0.0</source>
          <target state="translated">migrating-to-4.0.0</target>
        </trans-unit>
        <trans-unit id="5085fdbbba9b408d385c22d4eb18a56e276848b8" translate="yes" xml:space="preserve">
          <source>migrating-to-5.0.0</source>
          <target state="translated">migrating-to-5.0.0</target>
        </trans-unit>
        <trans-unit id="9dc2ae3674e40584de354f15583ee5e30ede341f" translate="yes" xml:space="preserve">
          <source>migrating-to-6.0.0</source>
          <target state="translated">migrating-to-6.0.0</target>
        </trans-unit>
        <trans-unit id="4535d9bf0b5347fead0112699937f9535d82c702" translate="yes" xml:space="preserve">
          <source>migrating-to-7.0.0</source>
          <target state="translated">migrating-to-7.0.0</target>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="9d60cf89958327d6eebc1ebfc08640de521d5d7f" translate="yes" xml:space="preserve">
          <source>minItems</source>
          <target state="translated">minItems</target>
        </trans-unit>
        <trans-unit id="c994bc8668812b9bf6b64d80d42af05236b98cf7" translate="yes" xml:space="preserve">
          <source>minKeys</source>
          <target state="translated">minKeys</target>
        </trans-unit>
        <trans-unit id="ec7711f0d41dea98790c18da59f8bf1cd594463d" translate="yes" xml:space="preserve">
          <source>minProperties</source>
          <target state="translated">minProperties</target>
        </trans-unit>
        <trans-unit id="90dc8bb447f80207239cb8a2a15fb23bbf2758ba" translate="yes" xml:space="preserve">
          <source>missing parameter or return description</source>
          <target state="translated">누락 된 매개 변수 또는 리턴 설명</target>
        </trans-unit>
        <trans-unit id="759710570ca86f195b7a35df3daa5f315622159b" translate="yes" xml:space="preserve">
          <source>missing parameter or return type</source>
          <target state="translated">누락 된 매개 변수 또는 리턴 유형</target>
        </trans-unit>
        <trans-unit id="48e74838b355506529a3b0d8aa3e513bd3c319be" translate="yes" xml:space="preserve">
          <source>missing parameter tag: &lt;code&gt;@arg&lt;/code&gt;, &lt;code&gt;@argument&lt;/code&gt;, or &lt;code&gt;@param&lt;/code&gt;</source>
          <target state="translated">누락 된 매개 변수 태그 : &lt;code&gt;@arg&lt;/code&gt; , &lt;code&gt;@argument&lt;/code&gt; 또는 &lt;code&gt;@param&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b005e73877f2136c1ddda457015e3fd5daba9c5" translate="yes" xml:space="preserve">
          <source>missing return tag: &lt;code&gt;@return&lt;/code&gt; or &lt;code&gt;@returns&lt;/code&gt;</source>
          <target state="translated">반환 태그 누락 : &lt;code&gt;@return&lt;/code&gt; 또는 &lt;code&gt;@returns&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="fa119f8dd2bd5910063d13016a3ad5909aebf2d8" translate="yes" xml:space="preserve">
          <source>multi</source>
          <target state="translated">multi</target>
        </trans-unit>
        <trans-unit id="e87928c2b749fb51af49c261f382511d18a5cfa4" translate="yes" xml:space="preserve">
          <source>multi-line</source>
          <target state="translated">multi-line</target>
        </trans-unit>
        <trans-unit id="785d9e1744666eef96ceae4b8ae04f4baba14d09" translate="yes" xml:space="preserve">
          <source>multi-or-nest</source>
          <target state="translated">multi-or-nest</target>
        </trans-unit>
        <trans-unit id="ba1e0958255c66e319054e6729d41cb6372a0b65" translate="yes" xml:space="preserve">
          <source>multiline</source>
          <target state="translated">multiline</target>
        </trans-unit>
        <trans-unit id="fb1f9b8e4444c788106e737bcc0286cb65050499" translate="yes" xml:space="preserve">
          <source>multiline and minItems</source>
          <target state="translated">여러 줄 및 minItems</target>
        </trans-unit>
        <trans-unit id="3e6c3ac37fb0f9085470715f5b11cad41099f2e9" translate="yes" xml:space="preserve">
          <source>multiline-comment-style</source>
          <target state="translated">multiline-comment-style</target>
        </trans-unit>
        <trans-unit id="52ea161c07a4d03826ea127e932dbee67826bb36" translate="yes" xml:space="preserve">
          <source>multiline-ternary</source>
          <target state="translated">multiline-ternary</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="11e60b0eaadebaabde4750b9b2de5cd68607b396" translate="yes" xml:space="preserve">
          <source>natural</source>
          <target state="translated">natural</target>
        </trans-unit>
        <trans-unit id="bbb76798531f27bb26135e4a3245045735dbf8fb" translate="yes" xml:space="preserve">
          <source>negation: &lt;code&gt;:not(ForStatement)&lt;/code&gt;</source>
          <target state="translated">부정 : &lt;code&gt;:not(ForStatement)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1078caaa8ebb366b67b96006d6eecd7ee492a75" translate="yes" xml:space="preserve">
          <source>neither</source>
          <target state="translated">neither</target>
        </trans-unit>
        <trans-unit id="3401dd193fa5b07cb5315c4b36585daf0bd18154" translate="yes" xml:space="preserve">
          <source>nested attribute: &lt;code&gt;[attr.level2=&quot;foo&quot;]&lt;/code&gt;</source>
          <target state="translated">중첩 속성 : &lt;code&gt;[attr.level2=&quot;foo&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a39a9d369915beb0dc84a620f4f7d4fa6e1b1c4" translate="yes" xml:space="preserve">
          <source>nestedBinaryExpressions</source>
          <target state="translated">nestedBinaryExpressions</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
