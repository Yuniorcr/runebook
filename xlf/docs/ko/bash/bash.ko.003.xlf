<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="bash">
    <body>
      <group id="bash">
        <trans-unit id="2e73becb77cfb9c72b145f426db7dd8121fa1f98" translate="yes" xml:space="preserve">
          <source>Include support for &lt;code&gt;csh&lt;/code&gt;-like history substitution (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; 와 유사한 히스토리 대체에 대한 지원을 포함 하십시오 ( &lt;a href=&quot;history-interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="23c33e6a9c711a4ef6e0de93e9edd5dc0fcd18e2" translate="yes" xml:space="preserve">
          <source>Include support for &lt;code&gt;csh&lt;/code&gt;-like history substitution (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; 와 같은 히스토리 대체에 대한 지원을 포함 하십시오 ( &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1a959deafc0cf49bef4be02ece4c50c0529e9618" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;code&gt;csh&lt;/code&gt;-like directory stack and the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins (see &lt;a href=&quot;the-directory-stack&quot;&gt;The Directory Stack&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; 와 유사한 디렉토리 스택과 &lt;code&gt;pushd&lt;/code&gt; , &lt;code&gt;popd&lt;/code&gt; 및 &lt;code&gt;dirs&lt;/code&gt; 내장 기능에 대한 지원을 포함합니다 ( &lt;a href=&quot;the-directory-stack&quot;&gt;The Directory Stack&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fcd4d1d8d16796e7e10435ccfdf1234d31d66bad" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;code&gt;csh&lt;/code&gt;-like directory stack and the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins (see &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;The Directory Stack&lt;/a&gt;).</source>
          <target state="translated">A에 대한 지원을 포함 &lt;code&gt;csh&lt;/code&gt; 디렉토리 스택과 -like &lt;code&gt;pushd&lt;/code&gt; , &lt;code&gt;popd&lt;/code&gt; 를 , 그리고 &lt;code&gt;dirs&lt;/code&gt; 내장 명령을합니다 ( &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;디렉토리 스택&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9f25ad662dd1adaf3a068ecaddae7b5ecd206fa6" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;em&gt;restricted shell&lt;/em&gt;. If this is enabled, Bash, when called as &lt;code&gt;rbash&lt;/code&gt;, enters a restricted mode. See &lt;a href=&quot;the-restricted-shell&quot;&gt;The Restricted Shell&lt;/a&gt;, for a description of restricted mode.</source>
          <target state="translated">&lt;em&gt;제한된 셸에&lt;/em&gt; 대한 지원을 포함합니다 . 이것이 활성화되면 Bash는 &lt;code&gt;rbash&lt;/code&gt; 로 호출 될 때 제한 모드로 들어갑니다. 제한 모드에 대한 설명은 제한 &lt;a href=&quot;the-restricted-shell&quot;&gt;셸을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae8823eba1fe6af3fc8854f6dceeff5ba3a8f237" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;em&gt;restricted shell&lt;/em&gt;. If this is enabled, Bash, when called as &lt;code&gt;rbash&lt;/code&gt;, enters a restricted mode. See &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;, for a description of restricted mode.</source>
          <target state="translated">&lt;em&gt;제한된 쉘에&lt;/em&gt; 대한 지원을 포함합니다 . 이 기능을 사용하면 &lt;code&gt;rbash&lt;/code&gt; 로 호출 될 때 Bash 가 제한 모드로 들어갑니다. 제한 모드에 대한 설명은 제한 &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;쉘을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08137dd0a94c8fe61752fd5a565f5ca1868e59f0" translate="yes" xml:space="preserve">
          <source>Include support for case-modifying attributes in the &lt;code&gt;declare&lt;/code&gt; builtin and assignment statements. Variables with the &lt;var&gt;uppercase&lt;/var&gt; attribute, for example, will have their values converted to uppercase upon assignment.</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; 내장 및 대 입문 에 대소 문자 수정 속성에 대한 지원을 포함하십시오 . 예를 들어 &lt;var&gt;uppercase&lt;/var&gt; 속성을 가진 변수 는 할당시 값이 대문자로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="79652870d76d9dc4d92510ebd79937754f61ac34" translate="yes" xml:space="preserve">
          <source>Include support for case-modifying word expansions.</source>
          <target state="translated">대소 문자 수정 단어 확장에 대한 지원을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0844d2994ad6bf7d0cf108be814710c1b5fb3c4a" translate="yes" xml:space="preserve">
          <source>Include support for command-line editing and history with the Bash version of the Readline library (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;).</source>
          <target state="translated">Readline 라이브러리의 Bash 버전을 사용하여 명령 줄 편집 및 기록에 대한 지원을 포함합니다 ( &lt;a href=&quot;command-line-editing&quot;&gt;명령 줄 편집&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9652f104e6bcc36329b35fc55d0fe4f137df4fb4" translate="yes" xml:space="preserve">
          <source>Include support for command-line editing and history with the Bash version of the Readline library (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;).</source>
          <target state="translated">Bash 버전의 Readline 라이브러리를 사용하여 명령 행 편집 및 히스토리 지원을 포함하십시오 ( &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;명령 행 편집&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ec242cbb020f0efdf27e2b17d093e0fb64d4f2f6" translate="yes" xml:space="preserve">
          <source>Include support for coprocesses and the &lt;code&gt;coproc&lt;/code&gt; reserved word (see &lt;a href=&quot;pipelines&quot;&gt;Pipelines&lt;/a&gt;).</source>
          <target state="translated">코 프로세스 및 &lt;code&gt;coproc&lt;/code&gt; 예약어에 대한 지원을 포함합니다 ( &lt;a href=&quot;pipelines&quot;&gt;파이프 라인&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8ea7279bad2b6c05dc67100447cb96ae787fdd27" translate="yes" xml:space="preserve">
          <source>Include support for coprocesses and the &lt;code&gt;coproc&lt;/code&gt; reserved word (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;).</source>
          <target state="translated">코 프로세스 및 &lt;code&gt;coproc&lt;/code&gt; 예약어에 대한 지원을 포함합니다 ( &lt;a href=&quot;pipelines#Pipelines&quot;&gt;파이프 라인&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ce1057c164b1c9c64f899236af3180fa51a2e884" translate="yes" xml:space="preserve">
          <source>Include support for importing function definitions exported by another instance of the shell from the environment. This option is enabled by default.</source>
          <target state="translated">환경의 다른 쉘 인스턴스에서 내 보낸 함수 정의를 가져 오는 기능을 지원합니다. 이 옵션은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="99d5fc71d3d9ad53444e7309bea67a07e61b048e" translate="yes" xml:space="preserve">
          <source>Include support for matching &lt;small&gt;POSIX&lt;/small&gt; regular expressions using the &amp;lsquo;</source>
          <target state="translated">'를 사용하여 &lt;small&gt;POSIX&lt;/small&gt; 정규식 일치에 대한 지원 포함</target>
        </trans-unit>
        <trans-unit id="641e5dc7b36a62469895207b297534c0275a6d3e" translate="yes" xml:space="preserve">
          <source>Include support for one-dimensional array shell variables (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">1 차원 배열 셸 변수에 대한 지원을 포함합니다 ( &lt;a href=&quot;arrays&quot;&gt;배열&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="83ad9eb4e9a64b1f5ad0a6bec7a8781dec0bbfeb" translate="yes" xml:space="preserve">
          <source>Include support for one-dimensional array shell variables (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">1 차원 배열 쉘 변수에 대한 지원을 포함합니다 ( &lt;a href=&quot;arrays#Arrays&quot;&gt;배열&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d4cc15a66c079a608fa1eb69963b12186626544c" translate="yes" xml:space="preserve">
          <source>Include support for recognizing &lt;code&gt;time&lt;/code&gt; as a reserved word and for displaying timing statistics for the pipeline following &lt;code&gt;time&lt;/code&gt; (see &lt;a href=&quot;pipelines&quot;&gt;Pipelines&lt;/a&gt;). This allows pipelines as well as shell builtins and functions to be timed.</source>
          <target state="translated">인식에 대한 지원을 포함 &lt;code&gt;time&lt;/code&gt; 예약 된 단어로 파이프 라인 다음에 대한 타이밍 통계를 표시하는 &lt;code&gt;time&lt;/code&gt; (참조 &lt;a href=&quot;pipelines&quot;&gt;파이프 라인을&lt;/a&gt; ). 이를 통해 파이프 라인과 쉘 내장 및 함수의 시간을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ca4232fcf0d840864e3259aeea182e99a3c9dd5" translate="yes" xml:space="preserve">
          <source>Include support for recognizing &lt;code&gt;time&lt;/code&gt; as a reserved word and for displaying timing statistics for the pipeline following &lt;code&gt;time&lt;/code&gt; (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). This allows pipelines as well as shell builtins and functions to be timed.</source>
          <target state="translated">인식에 대한 지원을 포함 &lt;code&gt;time&lt;/code&gt; 예약 된 단어로 파이프 라인 다음에 대한 타이밍 통계를 표시하는 &lt;code&gt;time&lt;/code&gt; (참조 &lt;a href=&quot;pipelines#Pipelines&quot;&gt;파이프 라인을&lt;/a&gt; ). 이를 통해 파이프 라인과 셸 내장 및 기능의 시간을 정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="408a75de5f84225dbfa6a35029df58431d02d588" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;((&amp;hellip;))&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;((&amp;hellip;))&lt;/code&gt; 명령에 대한 지원을 포함합니다 ( &lt;a href=&quot;conditional-constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6b3e316cb2abba0ed34fdcb0f8ff1797d729c4e7" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;((&amp;hellip;))&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;((&amp;hellip;))&lt;/code&gt; 명령에 대한 지원을 포함합니다 ( &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="878efecf8f6a46f732db83641c3e23067940805d" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;[[&lt;/code&gt; conditional command. (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt; 조건부 명령에 대한 지원을 포함합니다 . ( &lt;a href=&quot;conditional-constructs&quot;&gt;조건부 구문&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="19fc1d7250d16771acb76de6ec69f38c9d8d60cb" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;[[&lt;/code&gt; conditional command. (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt; 조건부 명령에 대한 지원을 포함하십시오 . ( &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="cbbb932dea3809241151488728645cb7679c8c18" translate="yes" xml:space="preserve">
          <source>Include support for the alternate form of the &lt;code&gt;for&lt;/code&gt; command that behaves like the C language &lt;code&gt;for&lt;/code&gt; statement (see &lt;a href=&quot;looping-constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="translated">C 언어 &lt;code&gt;for&lt;/code&gt; 문 처럼 작동 하는 &lt;code&gt;for&lt;/code&gt; 명령 의 대체 형식에 대한 지원을 포함 합니다 ( &lt;a href=&quot;looping-constructs&quot;&gt;루핑&lt;/a&gt; 구문 참조 ).</target>
        </trans-unit>
        <trans-unit id="5c70178ab357435e6786f148594a0417a44372a7" translate="yes" xml:space="preserve">
          <source>Include support for the alternate form of the &lt;code&gt;for&lt;/code&gt; command that behaves like the C language &lt;code&gt;for&lt;/code&gt; statement (see &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="translated">C 언어 &lt;code&gt;for&lt;/code&gt; 문 처럼 동작 하는 대체 형식의 &lt;code&gt;for&lt;/code&gt; 명령 에 대한 지원을 포함 합니다 ( &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;루핑&lt;/a&gt; 구문 참조 ).</target>
        </trans-unit>
        <trans-unit id="ec69a59a3545823bf8466b4d739c9bc65470598e" translate="yes" xml:space="preserve">
          <source>Include support for the bash debugger (distributed separately).</source>
          <target state="translated">bash 디버거 (별도로 배포)에 대한 지원을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="d0d20cdf1a922028243351b3d2d10abbb092d685" translate="yes" xml:space="preserve">
          <source>Include support for the extended pattern matching features described above under &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;.</source>
          <target state="translated">아래에 상술 된 기능 확장 패턴 매칭 지원 포함 &lt;a href=&quot;pattern-matching&quot;&gt;패턴 매칭&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a38210d3d2cf777e266e4e73ccafcbddde65c070" translate="yes" xml:space="preserve">
          <source>Include support for the extended pattern matching features described above under &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;.</source>
          <target state="translated">아래에 상술 된 기능 확장 패턴 매칭 지원 포함 &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;패턴 매칭&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c899c013aa6d2eaa7501c3c0b552d400129120c" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;help&lt;/code&gt; builtin, which displays help on shell builtins and variables (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">쉘 내장 및 변수에 대한 도움말을 표시 하는 &lt;code&gt;help&lt;/code&gt; 내장을 포함합니다 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5617c0dcf0a06bdacc90381e950b7d3327be91e1" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;help&lt;/code&gt; builtin, which displays help on shell builtins and variables (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">쉘 내장 및 변수에 대한 도움말을 표시하는 내장 &lt;code&gt;help&lt;/code&gt; 포함 하십시오 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c7fcddb840a907ad3031325239d685c5234867b0" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">간단한 메뉴를 생성 할 수있는 복합 &lt;code&gt;select&lt;/code&gt; 명령을 포함 합니다 ( &lt;a href=&quot;conditional-constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d0c109a13625dc09e3f3d9f8ed668f83daf955ee" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">간단한 메뉴를 생성 할 수있는 복합 &lt;code&gt;select&lt;/code&gt; 명령을 포함시킵니다 ( &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="98ddfd2fcb3db286949b7e1b30f3bc46531b32ce" translate="yes" xml:space="preserve">
          <source>Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.</source>
          <target state="translated">저작권 표시 바로 뒤에이 부록의 내용에 따라이 라이센스 조건에 따라 수정 된 버전을 사용할 수있는 권한을 부여하는 라이센스 표시를 포함 시키십시오.</target>
        </trans-unit>
        <trans-unit id="bafc536987bae59572bd4d7cee3e20b1d578c491" translate="yes" xml:space="preserve">
          <source>Incremental searches begin before the user has finished typing the search string. As each character of the search string is typed, Readline displays the next entry from the history matching the string typed so far. An incremental search requires only as many characters as needed to find the desired history entry. To search backward in the history for a particular string, type</source>
          <target state="translated">사용자가 검색 문자열 입력을 마치기 전에 증분 ​​검색이 시작됩니다. 검색 문자열의 각 문자가 입력되면 Readline은 지금까지 입력 한 문자열과 일치하는 기록에서 다음 항목을 표시합니다. 증분 검색에는 원하는 기록 항목을 찾는 데 필요한만큼의 문자 만 필요합니다. 특정 문자열에 대한 기록에서 뒤로 검색하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="522533bd13a86a35c057d83bb8162f29b4eb6954" translate="yes" xml:space="preserve">
          <source>Incremental undo, separately remembered for each line.</source>
          <target state="translated">증분 실행 취소는 각 줄마다 별도로 기억됩니다.</target>
        </trans-unit>
        <trans-unit id="4b886372e2855e2cd32c2349c1096abd80921f3d" translate="yes" xml:space="preserve">
          <source>Incremented by one each time a new instance of Bash is started. This is intended to be a count of how deeply your Bash shells are nested.</source>
          <target state="translated">새로운 Bash 인스턴스가 시작될 때마다 하나씩 증가합니다. 이것은 Bash 쉘이 얼마나 깊이 중첩되어 있는지 계산하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3a41f2a411df07a0f72ac2e480854008ae6f6f92" translate="yes" xml:space="preserve">
          <source>Incremented by one within each subshell or subshell environment when the shell begins executing in that environment. The initial value is 0.</source>
          <target state="translated">쉘이 해당 환경에서 실행을 시작할 때 각 서브 쉘 또는 서브 쉘 환경 내에서 하나씩 증가합니다. 초기 값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="f9056948c90dd6979341d3019807dbcba52d3579" translate="yes" xml:space="preserve">
          <source>Incremented by one within each subshell or subshell environment when the shell begins executing in that environment. The initial value is 0. If &lt;code&gt;BASH_SUBSHELL&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">쉘이 해당 환경에서 실행을 시작할 때 각 서브 쉘 또는 서브 쉘 환경 내에서 하나씩 증가합니다. 초기 값은 0입니다. &lt;code&gt;BASH_SUBSHELL&lt;/code&gt; 이 설정되지 않으면 이후에 재설정 되더라도 특수 속성이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="7f755e41ce627af0222ceee4e0d6d2f3858e3aab" translate="yes" xml:space="preserve">
          <source>Index Entry</source>
          <target state="translated">색인 입력</target>
        </trans-unit>
        <trans-unit id="bcefb5437bfab999cc8a93b525748cd20b539fbf" translate="yes" xml:space="preserve">
          <source>Index of Bash builtin commands.</source>
          <target state="translated">Bash 내장 명령 색인.</target>
        </trans-unit>
        <trans-unit id="5ae4e49df3217a02eb6534a0c5c648f4dc6ff126" translate="yes" xml:space="preserve">
          <source>Index of Bash reserved words.</source>
          <target state="translated">배쉬 예약어의 색인.</target>
        </trans-unit>
        <trans-unit id="ac6bf955791a05020c5db624b5c43aa732584c74" translate="yes" xml:space="preserve">
          <source>Index of Shell Builtin Commands</source>
          <target state="translated">쉘 내장 명령 색인</target>
        </trans-unit>
        <trans-unit id="ae3342927761f2a2013ddf5aaffcec14ca115148" translate="yes" xml:space="preserve">
          <source>Index of Shell Reserved Words</source>
          <target state="translated">쉘 예약어 색인</target>
        </trans-unit>
        <trans-unit id="5c51c5d792dfa40ea6eaa2c3da75b322c50cd65b" translate="yes" xml:space="preserve">
          <source>Index of bindable Readline functions.</source>
          <target state="translated">바인딩 가능한 Readline 함수의 인덱스.</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="c0e978d2ed7d799d033b62d189462642aa4ec7fe" translate="yes" xml:space="preserve">
          <source>Individual builtins may be enabled or disabled using the &lt;code&gt;enable&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">개별 내장 기능은 &lt;code&gt;enable&lt;/code&gt; 내장 기능을 사용하여 활성화 또는 비활성화 할 수 있습니다 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d8bf034ca34b2e1090ab79dfdd6df9eb3649ecc1" translate="yes" xml:space="preserve">
          <source>Individual builtins may be enabled or disabled using the &lt;code&gt;enable&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">개별 내장 명령은 사용 활성화 또는 비활성화 할 수 &lt;code&gt;enable&lt;/code&gt; (참조 내장 &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;배쉬 내장 명령을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="36bf2bbc71654be3a9fb288228872771ba5913ce" translate="yes" xml:space="preserve">
          <source>Insert all completions of the text before point that would have been generated by &lt;code&gt;possible-completions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;possible-completions&lt;/code&gt; 으로 생성 된 점 앞에 텍스트의 모든 완성을 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="51c899f9c6a36af69f71f53579673d97f6c6a826" translate="yes" xml:space="preserve">
          <source>Insert last argument to the previous command (the last word of the previous history entry). With a numeric argument, behave exactly like &lt;code&gt;yank-nth-arg&lt;/code&gt;. Successive calls to &lt;code&gt;yank-last-arg&lt;/code&gt; move back through the history list, inserting the last word (or the word specified by the argument to the first call) of each line in turn. Any numeric argument supplied to these successive calls determines the direction to move through the history. A negative argument switches the direction through the history (back or forward). The history expansion facilities are used to extract the last argument, as if the &amp;lsquo;</source>
          <target state="translated">이전 명령 (이전 기록 항목의 마지막 단어)에 마지막 인수를 삽입하십시오. 숫자 인수를 사용하면 &lt;code&gt;yank-nth-arg&lt;/code&gt; 와 똑같이 동작합니다 . &lt;code&gt;yank-last-arg&lt;/code&gt; 에 대한 연속적인 호출 은 히스토리 목록을 다시 이동하여 각 라인의 마지막 단어 (또는 첫 번째 호출에 대한 인수로 지정된 단어)를 차례로 삽입합니다. 이러한 연속 호출에 제공된 숫자 인수는 히스토리를 통해 이동할 방향을 결정합니다. 부정 인수는 히스토리를 통해 방향을 전환합니다 (뒤로 또는 앞으로). 히스토리 확장 기능은 마치 '</target>
        </trans-unit>
        <trans-unit id="310399bcedf57d54d7471b78b856e75c1beb2c1d" translate="yes" xml:space="preserve">
          <source>Insert the character into the line at the cursor.</source>
          <target state="translated">커서의 줄에 문자를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="c39c979a9871b542978913310993b374023a2cf1" translate="yes" xml:space="preserve">
          <source>Insert the first argument to the previous command (usually the second word on the previous line) at point. With an argument &lt;var&gt;n&lt;/var&gt;, insert the &lt;var&gt;n&lt;/var&gt;th word from the previous command (the words in the previous command begin with word 0). A negative argument inserts the &lt;var&gt;n&lt;/var&gt;th word from the end of the previous command. Once the argument &lt;var&gt;n&lt;/var&gt; is computed, the argument is extracted as if the &amp;lsquo;</source>
          <target state="translated">첫 번째 인수를 이전 명령 (일반적으로 이전 줄의 두 번째 단어)에 삽입하십시오. 인수 &lt;var&gt;n&lt;/var&gt; 을 사용하여 이전 명령 의 &lt;var&gt;n&lt;/var&gt; 번째 단어를 삽입하십시오 (이전 명령의 단어는 단어 0으로 시작). 음의 인수 는 이전 명령의 끝에서 &lt;var&gt;n&lt;/var&gt; 번째 단어를 삽입합니다 . 인수 &lt;var&gt;n&lt;/var&gt; 이 계산되면 인수는 '</target>
        </trans-unit>
        <trans-unit id="d1125a01c8b91e5041b6a63ed1a1277bf925e2cb" translate="yes" xml:space="preserve">
          <source>Insert yourself.</source>
          <target state="translated">자신을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="9efc96d34a8c1a78d0022d104007d9a8a3ef3ef0" translate="yes" xml:space="preserve">
          <source>Installation Names</source>
          <target state="translated">설치 이름</target>
        </trans-unit>
        <trans-unit id="de9f8e2188b9605d3821e60f54247965098f9c5b" translate="yes" xml:space="preserve">
          <source>Installation instructions.</source>
          <target state="translated">설치 지침.</target>
        </trans-unit>
        <trans-unit id="3ceb87d7ed8aaab5dec98b38916e0c7dcfb07e0f" translate="yes" xml:space="preserve">
          <source>Installing Bash</source>
          <target state="translated">배쉬 설치</target>
        </trans-unit>
        <trans-unit id="92cf37d2965880560cc4942cc2a968a939274fe9" translate="yes" xml:space="preserve">
          <source>Integer constants follow the C language definition, without suffixes or character constants. Constants with a leading 0 are interpreted as octal numbers. A leading &amp;lsquo;</source>
          <target state="translated">정수 상수는 접미사 또는 문자 상수없이 C 언어 정의를 따릅니다. 앞에 0이있는 상수는 8 진수로 해석됩니다. 선두 '</target>
        </trans-unit>
        <trans-unit id="bb2b5d4dfd6d698c256f1a086e45a1de9b61d4da" translate="yes" xml:space="preserve">
          <source>Interactive Shell Behavior</source>
          <target state="translated">대화식 쉘 동작</target>
        </trans-unit>
        <trans-unit id="aba9ffd5b8a8c781a49eeeeded988fd69a2644bc" translate="yes" xml:space="preserve">
          <source>Interactive Shells</source>
          <target state="translated">대화식 쉘</target>
        </trans-unit>
        <trans-unit id="bbb655503a23243f99f55c003a31a282e3b9e5a4" translate="yes" xml:space="preserve">
          <source>Interactive shells are described in &lt;a href=&quot;interactive-shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="translated">대화 형 쉘이 설명되어 있습니다 &lt;a href=&quot;interactive-shells&quot;&gt;대화 형 쉘&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e6bffaf4f8a8e7d642ee16dbae8deacb40f522" translate="yes" xml:space="preserve">
          <source>Interactive shells are described in &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="translated">대화 형 쉘이 설명되어 있습니다 &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;대화 형 쉘&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="d44f3813a0a1ea25d6216259a03a52cefb25574a" translate="yes" xml:space="preserve">
          <source>Introduction and Notation</source>
          <target state="translated">소개와 표기법</target>
        </trans-unit>
        <trans-unit id="1310dcc8c1d7695ce4c6c152ec693ea6eacd943a" translate="yes" xml:space="preserve">
          <source>Introduction to Line Editing</source>
          <target state="translated">라인 편집 소개</target>
        </trans-unit>
        <trans-unit id="a78c74e831be415e85867a2b53146048ff76ed5b" translate="yes" xml:space="preserve">
          <source>Invoke an editor on the current command line, and execute the result as shell commands. Bash attempts to invoke &lt;code&gt;$VISUAL&lt;/code&gt;, &lt;code&gt;$EDITOR&lt;/code&gt;, and &lt;code&gt;emacs&lt;/code&gt; as the editor, in that order.</source>
          <target state="translated">현재 명령 행에서 편집기를 호출하고 결과를 쉘 명령으로 실행하십시오. Bash는 &lt;code&gt;$VISUAL&lt;/code&gt; , &lt;code&gt;$EDITOR&lt;/code&gt; 및 &lt;code&gt;emacs&lt;/code&gt; 를 순서대로 편집기 로 호출하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="7a808face373d931bb97a4af094b6366115ae0bb" translate="yes" xml:space="preserve">
          <source>Invoked as an interactive login shell, or with</source>
          <target state="translated">대화식 로그인 셸 또는</target>
        </trans-unit>
        <trans-unit id="1d6d3dcd12b83b916aac351644c87ba945a36914" translate="yes" xml:space="preserve">
          <source>Invoked as an interactive non-login shell</source>
          <target state="translated">대화 형 비 로그인 셸로 호출</target>
        </trans-unit>
        <trans-unit id="c840d1aebd1cc8867415b5f8d365d04381cc4eb3" translate="yes" xml:space="preserve">
          <source>Invoked by remote shell daemon</source>
          <target state="translated">원격 쉘 데몬에 의해 호출</target>
        </trans-unit>
        <trans-unit id="d80f0ae695c457d4a95bb4248f58561935f10edf" translate="yes" xml:space="preserve">
          <source>Invoked in &lt;small&gt;POSIX&lt;/small&gt; mode</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 모드 에서 호출</target>
        </trans-unit>
        <trans-unit id="2a29e8987c12c4681adfb70a9ff1ef8cdb64eb6d" translate="yes" xml:space="preserve">
          <source>Invoked non-interactively</source>
          <target state="translated">비 대화식으로 호출</target>
        </trans-unit>
        <trans-unit id="826936663d02f73cb6f3cbefcfc4702b02f52f77" translate="yes" xml:space="preserve">
          <source>Invoked with name &lt;code&gt;sh&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sh&lt;/code&gt; 라는 이름으로 호출</target>
        </trans-unit>
        <trans-unit id="41af4936f217a0404b7b3b602511db7f712e9292" translate="yes" xml:space="preserve">
          <source>Invoked with unequal effective and real &lt;small&gt;UID/GID&lt;/small&gt;s</source>
          <target state="translated">불평등 효과적이고 실제 호출 &lt;small&gt;UID / GID&lt;/small&gt; 의</target>
        </trans-unit>
        <trans-unit id="9c548b18bbf97d4b70a80c25b9237a5aebd9f45b" translate="yes" xml:space="preserve">
          <source>Invoking Bash</source>
          <target state="translated">배쉬 호출</target>
        </trans-unit>
        <trans-unit id="029b86474413e5f992d7a5f714852cbf01ca2dcd" translate="yes" xml:space="preserve">
          <source>Is this Shell Interactive?</source>
          <target state="translated">이 쉘은 대화 형입니까?</target>
        </trans-unit>
        <trans-unit id="b9285aeb8182cef9880c06325f2441654400c114" translate="yes" xml:space="preserve">
          <source>It is possible to have a variable and a function with the same name; &lt;code&gt;sh&lt;/code&gt; does not separate the two name spaces.</source>
          <target state="translated">동일한 이름의 변수와 함수를 가질 수 있습니다. &lt;code&gt;sh&lt;/code&gt; 는 두 개의 네임 스페이스를 분리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29d682ce4731cc5ebfe926cf429b60ff1fd158a6" translate="yes" xml:space="preserve">
          <source>It is possible to obtain the keys (indices) of an array as well as the values. ${!&lt;var&gt;name&lt;/var&gt;[@]} and ${!&lt;var&gt;name&lt;/var&gt;[*]} expand to the indices assigned in array variable &lt;var&gt;name&lt;/var&gt;. The treatment when in double quotes is similar to the expansion of the special parameters &amp;lsquo;</source>
          <target state="translated">배열의 키 (표시)와 값을 얻을 수 있습니다. $ {! &lt;var&gt;name&lt;/var&gt; [@]} 및 $ {! &lt;var&gt;name&lt;/var&gt; [*]}은 배열 변수 &lt;var&gt;name&lt;/var&gt; 에 지정된 인덱스로 확장됩니다 . 큰 따옴표로 묶었을 때의 처리는 특수 매개 변수의 확장과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="01730ad215a52da832cdc90865fedfa60910f52d" translate="yes" xml:space="preserve">
          <source>It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.</source>
          <target state="translated">대량의 사본을 재배포하기 전에 문서 작성자에게 문의하여 업데이트 된 버전의 문서를 제공 할 수있는 기회를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="45c9d11599074bb63e1dd7a5059ab11259e3a168" translate="yes" xml:space="preserve">
          <source>JPG</source>
          <target state="translated">JPG</target>
        </trans-unit>
        <trans-unit id="b7507ee66a0315e37375e7fa4fde2a28c84b2e48" translate="yes" xml:space="preserve">
          <source>Job Control</source>
          <target state="translated">작업 제어</target>
        </trans-unit>
        <trans-unit id="023b495c34810d0851bd734c215f872d44859da2" translate="yes" xml:space="preserve">
          <source>Job Control (see &lt;a href=&quot;job-control&quot;&gt;Job Control&lt;/a&gt;) is enabled by default. When job control is in effect, Bash ignores the keyboard-generated job control signals &lt;code&gt;SIGTTIN&lt;/code&gt;, &lt;code&gt;SIGTTOU&lt;/code&gt;, and &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">작업 제어 (참조 &lt;a href=&quot;job-control&quot;&gt;작업 제어를&lt;/a&gt; ) 기본적으로 활성화되어 있습니다. 작업 제어가 적용되면 Bash는 키보드 생성 작업 제어 신호 &lt;code&gt;SIGTTIN&lt;/code&gt; , &lt;code&gt;SIGTTOU&lt;/code&gt; 및 &lt;code&gt;SIGTSTP&lt;/code&gt; 를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="9ce00b107bece6e5d05a22c354ac0a7844522ee8" translate="yes" xml:space="preserve">
          <source>Job Control (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;) is enabled by default. When job control is in effect, Bash ignores the keyboard-generated job control signals &lt;code&gt;SIGTTIN&lt;/code&gt;, &lt;code&gt;SIGTTOU&lt;/code&gt;, and &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">작업 제어 (참조 &lt;a href=&quot;job-control#Job-Control&quot;&gt;작업 제어를&lt;/a&gt; ) 기본적으로 활성화되어 있습니다. 작업 제어가 적용되면 Bash는 키보드 생성 작업 제어 신호 &lt;code&gt;SIGTTIN&lt;/code&gt; , &lt;code&gt;SIGTTOU&lt;/code&gt; 및 &lt;code&gt;SIGTSTP&lt;/code&gt; 를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="9ff630d22dbf623cca727da91bc11bd64f6bf183" translate="yes" xml:space="preserve">
          <source>Job Control Basics</source>
          <target state="translated">작업 제어 기초</target>
        </trans-unit>
        <trans-unit id="9b5b8ec4af061fa149960775ceec6be8fca89cc6" translate="yes" xml:space="preserve">
          <source>Job Control Builtins</source>
          <target state="translated">작업 제어 내장</target>
        </trans-unit>
        <trans-unit id="84ce27a7ad8afd61171f2a624012ee6722fe2ad0" translate="yes" xml:space="preserve">
          <source>Job Control Variables</source>
          <target state="translated">작업 제어 변수</target>
        </trans-unit>
        <trans-unit id="41fda8bd82384fb9974d6e110627740725e5b1b2" translate="yes" xml:space="preserve">
          <source>Job control is enabled (see &lt;a href=&quot;job-control&quot;&gt;Job Control&lt;/a&gt;). All processes run in a separate process group. When a background job completes, the shell prints a line containing its exit status.</source>
          <target state="translated">작업 제어가 활성화됩니다 ( &lt;a href=&quot;job-control&quot;&gt;작업 제어&lt;/a&gt; 참조 ). 모든 프로세스는 별도의 프로세스 그룹에서 실행됩니다. 백그라운드 작업이 완료되면 쉘은 종료 상태를 포함하는 행을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="01f3733bdc0670b240a60dd6f87ff3d21daaf17d" translate="yes" xml:space="preserve">
          <source>Job control is enabled (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;). All processes run in a separate process group. When a background job completes, the shell prints a line containing its exit status.</source>
          <target state="translated">작업 제어가 사용 가능합니다 ( &lt;a href=&quot;job-control#Job-Control&quot;&gt;작업 제어&lt;/a&gt; 참조 ). 모든 프로세스는 별도의 프로세스 그룹에서 실행됩니다. 백그라운드 작업이 완료되면 쉘은 종료 상태를 포함하는 행을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="291cfa00911cbfa3478bd3c6a34fd2e75f150d32" translate="yes" xml:space="preserve">
          <source>Job control refers to the ability to selectively stop (suspend) the execution of processes and continue (resume) their execution at a later point. A user typically employs this facility via an interactive interface supplied jointly by the operating system kernel&amp;rsquo;s terminal driver and Bash.</source>
          <target state="translated">작업 제어는 프로세스 실행을 선택적으로 중지 (일시 중지)하고 나중에 실행을 계속 (다시 시작)하는 기능을 말합니다. 사용자는 일반적으로 운영 체제 커널의 터미널 드라이버와 Bash가 공동으로 제공하는 대화식 인터페이스를 통해이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3939a315e8eaf8d2814bae9f39fd2fee452f773c" translate="yes" xml:space="preserve">
          <source>Job names, if job control is active. May also be specified as</source>
          <target state="translated">작업 제어가 활성화 된 경우 작업 이름. 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="722c3f42b12510fdd11075d489a240fe079e232b" translate="yes" xml:space="preserve">
          <source>Job number &lt;code&gt;n&lt;/code&gt; may be referred to as &amp;lsquo;</source>
          <target state="translated">작업 번호 &lt;code&gt;n&lt;/code&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="97334835cf3bd4ff49ed61b961b56ec9717c5314" translate="yes" xml:space="preserve">
          <source>Jump to:</source>
          <target state="translated">다음으로 이동 :</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="4094ecbe8dc357339a9eda4dfd61ef3af94bcda9" translate="yes" xml:space="preserve">
          <source>Key Bindings</source>
          <target state="translated">키 바인딩</target>
        </trans-unit>
        <trans-unit id="cc4837611e356bedd08fd92c8bd27ef9a22790ca" translate="yes" xml:space="preserve">
          <source>Keyboard Macros</source>
          <target state="translated">키보드 매크로</target>
        </trans-unit>
        <trans-unit id="bb1b6518bbf36cc047b4c3269881f855522cc8b1" translate="yes" xml:space="preserve">
          <source>Kill all characters on the current line, no matter where point is. By default, this is unbound.</source>
          <target state="translated">지점이 어디에 있든 현재 줄의 모든 문자를 죽입니다. 기본적으로 이것은 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="648f13248b3847d61a1f89cd76b06aac2ae31d09" translate="yes" xml:space="preserve">
          <source>Kill backward from the cursor to the beginning of the current line.</source>
          <target state="translated">커서에서 현재 줄의 시작 부분으로 뒤로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="537a6200654e033c96cf3f24d06be28f42a115db" translate="yes" xml:space="preserve">
          <source>Kill backward from the cursor to the beginning of the current line. With a negative numeric argument, kill forward from the cursor to the end of the current line.</source>
          <target state="translated">커서에서 현재 줄의 시작 부분까지 뒤로 죽입니다. 음수 인수를 사용하면 커서에서 현재 행의 끝까지 앞으로 죽입니다.</target>
        </trans-unit>
        <trans-unit id="b30e4b6bbffe5f53777064b7b1f25e77be5aaaf2" translate="yes" xml:space="preserve">
          <source>Kill from point to the end of the current word, or if between words, to the end of the next word. Word boundaries are the same as &lt;code&gt;forward-word&lt;/code&gt;.</source>
          <target state="translated">현재 단어의 끝에서 끝까지, 또는 단어 사이에 있으면 다음 단어의 끝까지 죽입니다. 단어 경계는 &lt;code&gt;forward-word&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="ed456754c6eff11239c224ec6f708ace9d87ecee" translate="yes" xml:space="preserve">
          <source>Kill from point to the end of the current word, or if between words, to the end of the next word. Word boundaries are the same as &lt;code&gt;shell-forward-word&lt;/code&gt;.</source>
          <target state="translated">현재 단어의 끝에서 끝까지 또는 단어 사이에 있으면 다음 단어의 끝까지 죽입니다. 단어 경계는 &lt;code&gt;shell-forward-word&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="9ffbf8547e6beb6fd3a22032bae5f6a4eca48a29" translate="yes" xml:space="preserve">
          <source>Kill from the cursor the start of the current word, or, if between words, to the start of the previous word. Word boundaries are the same as those used by</source>
          <target state="translated">커서에서 현재 단어의 시작 또는 단어 사이에있는 경우 이전 단어의 시작으로 죽입니다. 단어 경계는</target>
        </trans-unit>
        <trans-unit id="fc1e73bdb9d198500a5293b86f2b2a3464cc8d11" translate="yes" xml:space="preserve">
          <source>Kill from the cursor to the end of the current word, or, if between words, to the end of the next word. Word boundaries are the same as those used by</source>
          <target state="translated">커서에서 현재 단어의 끝까지 또는 단어 사이에 있으면 다음 단어의 끝까지 죽입니다. 단어 경계는</target>
        </trans-unit>
        <trans-unit id="311a4cde3db454c3849e6ee13e45582356a552a1" translate="yes" xml:space="preserve">
          <source>Kill from the cursor to the previous whitespace. This is different than</source>
          <target state="translated">커서에서 이전 공백으로 죽입니다. 이것은 다른</target>
        </trans-unit>
        <trans-unit id="0ecb0ef048ba441b7755a53bd46945b1e20c2c91" translate="yes" xml:space="preserve">
          <source>Kill the text from point to the end of the line.</source>
          <target state="translated">줄의 끝에서 끝까지 텍스트를 죽입니다.</target>
        </trans-unit>
        <trans-unit id="033788fe4387e726e9c47a3c5c98a7bf0329571a" translate="yes" xml:space="preserve">
          <source>Kill the text from point to the end of the line. With a negative numeric argument, kill backward from the cursor to the beginning of the current line.</source>
          <target state="translated">한 지점에서 줄 끝까지 텍스트를 죽입니다. 음의 숫자 인수를 사용하면 커서에서 현재 줄의 시작 부분까지 뒤로 죽입니다.</target>
        </trans-unit>
        <trans-unit id="a6ffad75f2cec42a116c1a0e5d568a0039830396" translate="yes" xml:space="preserve">
          <source>Kill the text from the current cursor position to the end of the line.</source>
          <target state="translated">현재 커서 위치에서 줄 끝까지 텍스트를 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="04c841ce2d4253cd79155b6e3949e02bf6c53e61" translate="yes" xml:space="preserve">
          <source>Kill the text in the current region. By default, this command is unbound.</source>
          <target state="translated">현재 지역의 텍스트를 죽입니다. 기본적으로이 명령은 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f90603f79ddaf8e0226787803ee944e6f568c103" translate="yes" xml:space="preserve">
          <source>Kill the word behind point, using white space and the slash character as the word boundaries. The killed text is saved on the kill-ring.</source>
          <target state="translated">공백과 슬래시 문자를 단어 경계로 사용하여 단어 뒤의 단어를 제거하십시오. 살해 된 텍스트는 킬링에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="f5997899e032ace476cc7eef39bb34b06c94ae54" translate="yes" xml:space="preserve">
          <source>Kill the word behind point, using white space as a word boundary. The killed text is saved on the kill-ring.</source>
          <target state="translated">공백을 단어 경계로 사용하여 단어 뒤의 단어를 제거하십시오. 살해 된 텍스트는 킬링에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="1fea2d6f0be014cb4b6bedac3fd797f026257b42" translate="yes" xml:space="preserve">
          <source>Kill the word behind point. Word boundaries are the same as &lt;code&gt;backward-word&lt;/code&gt;.</source>
          <target state="translated">요점 뒤에있는 단어를 죽이십시오. 단어 경계는 &lt;code&gt;backward-word&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="84bdeb981aed42b434759620c7937dc2c98dcce5" translate="yes" xml:space="preserve">
          <source>Kill the word behind point. Word boundaries are the same as &lt;code&gt;shell-backward-word&lt;/code&gt;.</source>
          <target state="translated">요점 뒤에있는 단어를 죽이십시오. 단어 경계는 &lt;code&gt;shell-backward-word&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="377ef541daa0c559de537f46058454ce4547bbc1" translate="yes" xml:space="preserve">
          <source>Killing And Yanking</source>
          <target state="translated">죽이고 king 킹</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="e6e6ef4e9ff2ecd01c6ad84aff62c4f65a5fbef3" translate="yes" xml:space="preserve">
          <source>LANG</source>
          <target state="translated">LANG</target>
        </trans-unit>
        <trans-unit id="5e30f55f199c19ff025f03687ec4a6fb2479b26d" translate="yes" xml:space="preserve">
          <source>LC_ALL</source>
          <target state="translated">LC_ALL</target>
        </trans-unit>
        <trans-unit id="5e5d1059964c8ee92a88f0555d21b5678f8be79d" translate="yes" xml:space="preserve">
          <source>LC_COLLATE</source>
          <target state="translated">LC_COLLATE</target>
        </trans-unit>
        <trans-unit id="c2a9d7cc4f606b876ad7de9b8f4f4a1e28dcf12b" translate="yes" xml:space="preserve">
          <source>LC_CTYPE</source>
          <target state="translated">LC_CTYPE</target>
        </trans-unit>
        <trans-unit id="200bab83e3da485315fd8db2fd91df4231e04a6b" translate="yes" xml:space="preserve">
          <source>LC_MESSAGES</source>
          <target state="translated">LC_MESSAGES</target>
        </trans-unit>
        <trans-unit id="c922bf83e996b383077b42767c480fd9317d728f" translate="yes" xml:space="preserve">
          <source>LC_NUMERIC</source>
          <target state="translated">LC_NUMERIC</target>
        </trans-unit>
        <trans-unit id="823feb18075201a2009bf899a2b4bee49397d8df" translate="yes" xml:space="preserve">
          <source>LC_TIME</source>
          <target state="translated">LC_TIME</target>
        </trans-unit>
        <trans-unit id="bfce9d9d778f491183fdbb57d94b09b3f50b2846" translate="yes" xml:space="preserve">
          <source>LINENO</source>
          <target state="translated">LINENO</target>
        </trans-unit>
        <trans-unit id="0d7f037733ef398e4fa6caee3e4a76955c742eba" translate="yes" xml:space="preserve">
          <source>LINES</source>
          <target state="translated">LINES</target>
        </trans-unit>
        <trans-unit id="dbfdd62c22d142fb89ad0f50c9a45f31239755f2" translate="yes" xml:space="preserve">
          <source>Letting Readline Type For You</source>
          <target state="translated">당신을 위해 Readline 유형을 허용</target>
        </trans-unit>
        <trans-unit id="0d0db8c2b020268e4b2e48ddcbb42e59195d905a" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU Free Documentation License.</source>
          <target state="translated">GNU Free Documentation License에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="3c584b03c51b0bbeffeccc97a9b960239a36436e" translate="yes" xml:space="preserve">
          <source>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input.</source>
          <target state="translated">쉘 명령 및 연관된 명령에 바인드 된 모든 키 시퀀스를 입력으로 재사용 할 수있는 형식으로 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="3f529bec4d07453233e9cea0f36dbf54def12aa1" translate="yes" xml:space="preserve">
          <source>List current Readline function names and bindings.</source>
          <target state="translated">현재 Readline 함수 이름 및 바인딩을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="8b8e450b07a8a6d28388b4347569efa2489edbee" translate="yes" xml:space="preserve">
          <source>List current Readline variable names and values.</source>
          <target state="translated">현재 Readline 변수 이름과 값을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="81844ddfcde68c31fdf2fc102b2f0ca33a634238" translate="yes" xml:space="preserve">
          <source>List of variables that exist in Bash.</source>
          <target state="translated">Bash에 존재하는 변수 목록.</target>
        </trans-unit>
        <trans-unit id="a42204e2bb1eefc84bb3b1bf10ab724cfb44f943" translate="yes" xml:space="preserve">
          <source>List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.</source>
          <target state="translated">제목 페이지에 최소한 수정 된 버전의 수정 저작을 담당하는 한 명 이상의 개인 또는 실체를 문서의 5 명 이상의 주 저자 (모든 주 저자가 다음보다 적은 경우) 5)이 요구 사항에서 귀하를 해제하지 않는 한.</target>
        </trans-unit>
        <trans-unit id="de83ac9739dc3eb70e15b6c9285b4b7206938222" translate="yes" xml:space="preserve">
          <source>List only the process &lt;small&gt;ID&lt;/small&gt; of the job&amp;rsquo;s process group leader.</source>
          <target state="translated">작업 프로세스 그룹 리더의 프로세스 &lt;small&gt;ID&lt;/small&gt; 만 나열하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b2356b25df63e113adc66f527a48249cc9e7985" translate="yes" xml:space="preserve">
          <source>List process &lt;small&gt;ID&lt;/small&gt;s in addition to the normal information.</source>
          <target state="translated">일반 정보 외에 프로세스 &lt;small&gt;ID를&lt;/small&gt; 나열 하십시오.</target>
        </trans-unit>
        <trans-unit id="4791291906b728b3ff5195d2c300dad9c80cb52a" translate="yes" xml:space="preserve">
          <source>List the names of all Readline functions.</source>
          <target state="translated">모든 Readline 함수의 이름을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="0588e814f2d21cdbbba6703f05050bf44f4d26ec" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a command name.</source>
          <target state="translated">명령 이전에 텍스트를 완성하기 전에 완성 된 텍스트를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="4e7d8c02ded0a86831aa8dc760c443da3780f8b5" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a filename.</source>
          <target state="translated">포인트 앞의 가능한 텍스트를 파일 이름으로 취급하여 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="32c364e760f2dcc9773d5f67bc8c8b2c41b3e5de" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a hostname.</source>
          <target state="translated">텍스트를 호스트 이름으로 취급하여 포인트 앞에 텍스트의 가능한 완성을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="787c208564164447207cca1fc91e2359bc7e27df" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a shell variable.</source>
          <target state="translated">쉘 변수로 취급하여 텍스트 앞에 포인트의 가능한 완성을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="7748706420d46a17640eae54d47e278df748f65d" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a username.</source>
          <target state="translated">포인트 앞의 가능한 텍스트를 사용자 이름으로 취급하여 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="18cba9bae09e335253831c1faa4e5feece845846" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point. When displaying completions, Readline sets the number of columns used for display to the value of &lt;code&gt;completion-display-width&lt;/code&gt;, the value of the environment variable &lt;code&gt;COLUMNS&lt;/code&gt;, or the screen width, in that order.</source>
          <target state="translated">포인트 앞에 텍스트의 가능한 완성을 나열하십시오. 완료를 표시 할 때 Readline은 표시에 사용되는 열 수를 complete &lt;code&gt;completion-display-width&lt;/code&gt; 값, 환경 변수 &lt;code&gt;COLUMNS&lt;/code&gt; 값 또는 화면 너비 순서로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="a4a97c2b2e7d7b37d9f11ba3ccda555463bceba2" translate="yes" xml:space="preserve">
          <source>Lists of Commands</source>
          <target state="translated">명령 목록</target>
        </trans-unit>
        <trans-unit id="0f805ee8f4497b9fb410c9b238e44c7be9691044" translate="yes" xml:space="preserve">
          <source>Literal tildes that appear as the first character in elements of the &lt;code&gt;PATH&lt;/code&gt; variable are not expanded as described above under &lt;a href=&quot;tilde-expansion&quot;&gt;Tilde Expansion&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 변수의 요소에서 첫 번째 문자로 나타나는 리터럴 물결표 는 위에서 &lt;a href=&quot;tilde-expansion&quot;&gt;물결표 확장&lt;/a&gt; 에서 설명한대로 확장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0919ea0ff2c98d0bec36e30ca7274851b56675cb" translate="yes" xml:space="preserve">
          <source>Literal tildes that appear as the first character in elements of the &lt;code&gt;PATH&lt;/code&gt; variable are not expanded as described above under &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;.</source>
          <target state="translated">요소의 첫 번째 문자로 표시 리터럴 틸데 &lt;code&gt;PATH&lt;/code&gt; 에 따라 전술 한 바와 같이 변수는 확장되지 &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;틸드 확장&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8709e97731b1d3c30dd2bfc5464bbdfb32ec5150" translate="yes" xml:space="preserve">
          <source>Local variables &quot;shadow&quot; variables with the same name declared at previous scopes. For instance, a local variable declared in a function hides a global variable of the same name: references and assignments refer to the local variable, leaving the global variable unmodified. When the function returns, the global variable is once again visible.</source>
          <target state="translated">지역 변수는 이전 범위에서 선언 된 동일한 이름의 변수를 &quot;그림자&quot;로 표시합니다. 예를 들어, 함수에 선언 된 지역 변수는 동일한 이름의 전역 변수를 숨 깁니다. 참조 및 할당은 지역 변수를 참조하고 전역 변수는 수정하지 않습니다. 함수가 반환되면 전역 변수가 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0a0a3d9b1f0215dda9247d514ef33401ca13e150" translate="yes" xml:space="preserve">
          <source>Locale Translation</source>
          <target state="translated">로케일 번역</target>
        </trans-unit>
        <trans-unit id="1a59cf22a5c9bec8f8a98ec4cb5b2f0dbd04d8a1" translate="yes" xml:space="preserve">
          <source>Locale-Specific Translation</source>
          <target state="translated">로케일 별 번역</target>
        </trans-unit>
        <trans-unit id="a262a1284fca7a73f90fac6c73ecc09b7ab28766" translate="yes" xml:space="preserve">
          <source>Locate and remember (hash) commands as they are looked up for execution. This option is enabled by default.</source>
          <target state="translated">실행할 명령을 찾아서 기억 (해시)하십시오. 이 옵션은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e3682353b56a2921e33cef86a36a973e382a38" translate="yes" xml:space="preserve">
          <source>Look for the Bash source code in directory &lt;var&gt;dir&lt;/var&gt;. Usually &lt;code&gt;configure&lt;/code&gt; can determine that directory automatically.</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt; 디렉토리에서 Bash 소스 코드를 찾으십시오 . 일반적으로 &lt;code&gt;configure&lt;/code&gt; 는 해당 디렉토리를 자동으로 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c8606f02f484a20125d607e5631dda3a0ec841f" translate="yes" xml:space="preserve">
          <source>Looping Constructs</source>
          <target state="translated">루핑 구조</target>
        </trans-unit>
        <trans-unit id="887791bfe6656ace33a7a1ed37824f33be8c2ebf" translate="yes" xml:space="preserve">
          <source>Lowercase the current (or following) word. With a negative argument, lowercase the previous word, but do not move the cursor.</source>
          <target state="translated">현재 (또는 다음) 단어를 소문자로 사용하십시오. 음수 인수를 사용하면 이전 단어를 소문자로 바꾸지 만 커서를 움직이지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="f56099d279d3bbbe13433ab2b41f59ecda17c1b5" translate="yes" xml:space="preserve">
          <source>M--</source>
          <target state="translated">M--</target>
        </trans-unit>
        <trans-unit id="eb0aec4ec21a4101bd0ef2f34229c444b30b385e" translate="yes" xml:space="preserve">
          <source>M-- C-k</source>
          <target state="translated">M-- Ck</target>
        </trans-unit>
        <trans-unit id="e7bf8d901f8b8e35548ee2a63db64dd733f5d157" translate="yes" xml:space="preserve">
          <source>M-1 0 C-d</source>
          <target state="translated">M-1 0 CD</target>
        </trans-unit>
        <trans-unit id="7591f331f91ebb10d139ef84c05c78dc46889d88" translate="yes" xml:space="preserve">
          <source>M-C-k</source>
          <target state="translated">M-C-k</target>
        </trans-unit>
        <trans-unit id="e286729ebdb433a6094d1271b49c5a2c6f950ccc" translate="yes" xml:space="preserve">
          <source>M-DEL</source>
          <target state="translated">M-DEL</target>
        </trans-unit>
        <trans-unit id="dfec75d824ab931885b10c2deb8b602ddf385540" translate="yes" xml:space="preserve">
          <source>M-b</source>
          <target state="translated">M-b</target>
        </trans-unit>
        <trans-unit id="a213eb1de2d97fd8ab6c0c8486e553f7cdc3e521" translate="yes" xml:space="preserve">
          <source>M-d</source>
          <target state="translated">M-d</target>
        </trans-unit>
        <trans-unit id="add69bf7aa5e86e6ac1a17b8047a626986b67564" translate="yes" xml:space="preserve">
          <source>M-f</source>
          <target state="translated">M-f</target>
        </trans-unit>
        <trans-unit id="748e454f60558bf0c3ce84d737eb8fc02adbf9f8" translate="yes" xml:space="preserve">
          <source>M-k</source>
          <target state="translated">M-k</target>
        </trans-unit>
        <trans-unit id="7555a33395fef6db20d121fb58c3221aa124e48c" translate="yes" xml:space="preserve">
          <source>M-y</source>
          <target state="translated">M-y</target>
        </trans-unit>
        <trans-unit id="2b244c1d5a036154c667f4e8f2cbb11d28354647" translate="yes" xml:space="preserve">
          <source>MACHTYPE</source>
          <target state="translated">MACHTYPE</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="4ffbf590e83ed87f3d80a00d234078b4a4f9687c" translate="yes" xml:space="preserve">
          <source>MAILCHECK</source>
          <target state="translated">MAILCHECK</target>
        </trans-unit>
        <trans-unit id="104c0e0ec1abd728c0704330d49265585de58880" translate="yes" xml:space="preserve">
          <source>MAILPATH</source>
          <target state="translated">MAILPATH</target>
        </trans-unit>
        <trans-unit id="adfc4d4553286d737f63d291ea9f48fa98119854" translate="yes" xml:space="preserve">
          <source>MAPFILE</source>
          <target state="translated">MAPFILE</target>
        </trans-unit>
        <trans-unit id="10dfafbed59fc9d1d09c3566fd534d347478066d" translate="yes" xml:space="preserve">
          <source>MODIFICATIONS</source>
          <target state="translated">MODIFICATIONS</target>
        </trans-unit>
        <trans-unit id="330f70a96b57455e60ea79f3c77c8b9bbc80e7f2" translate="yes" xml:space="preserve">
          <source>Major Differences From The Bourne Shell</source>
          <target state="translated">Bourne Shell과의 주요 차이점</target>
        </trans-unit>
        <trans-unit id="9a13cb3801daadaaaad284f639ac522e78e3a2c1" translate="yes" xml:space="preserve">
          <source>Make &lt;var&gt;name&lt;/var&gt;s readonly. These names cannot then be assigned values by subsequent assignment statements or unset.</source>
          <target state="translated">만들기 &lt;var&gt;name&lt;/var&gt; 읽기 전용이야. 그런 다음이 이름에 후속 지정 명령문으로 값을 지정하거나 설정을 해제 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe99cb436660f857ad639d1b2c0a9cac131fb4d4" translate="yes" xml:space="preserve">
          <source>Make Bash &lt;small&gt;POSIX&lt;/small&gt;-conformant by default (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">기본적으로 Bash &lt;small&gt;POSIX를&lt;/small&gt; 준수합니다 ( &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fe79a4c96a8c61dd84b3d8f4de5922900deeb84f" translate="yes" xml:space="preserve">
          <source>Make Bash &lt;small&gt;POSIX&lt;/small&gt;-conformant by default (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">기본적으로 Bash &lt;small&gt;POSIX&lt;/small&gt; -conformant로 설정하십시오 ( &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6b144f0bbad3df69b9624985274f440eaf0aa843" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;echo&lt;/code&gt; builtin expand backslash-escaped characters by default, without requiring the</source>
          <target state="translated">만들기 기능 &lt;code&gt;echo&lt;/code&gt; 내장이 필요없이 기본적으로 백 슬래시 이스케이프 문자를 확장</target>
        </trans-unit>
        <trans-unit id="fe4e3a73d8bc8026f031a2e1cdd9aa3a956105bf" translate="yes" xml:space="preserve">
          <source>Make the shell a restricted shell (see &lt;a href=&quot;the-restricted-shell&quot;&gt;The Restricted Shell&lt;/a&gt;).</source>
          <target state="translated">셸을 제한된 셸로 만듭니다 ( &lt;a href=&quot;the-restricted-shell&quot;&gt;제한된 셸&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6fa29f841406e9273e65e66ce6799c3e9dd10f08" translate="yes" xml:space="preserve">
          <source>Make the shell a restricted shell (see &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;).</source>
          <target state="translated">쉘 제한된 쉘 (참조하십시오 &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;제한된 쉘&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef3baab5ee04d1e09d8422381233dab83b426a22" translate="yes" xml:space="preserve">
          <source>Make this shell act as if it had been directly invoked by login. When the shell is interactive, this is equivalent to starting a login shell with &amp;lsquo;</source>
          <target state="translated">이 쉘이 로그인에 의해 직접 호출 된 것처럼 작동하게하십시오. 쉘이 대화식 인 경우 '로 로그인 쉘을 시작하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c" translate="yes" xml:space="preserve">
          <source>Makefile</source>
          <target state="translated">Makefile</target>
        </trans-unit>
        <trans-unit id="05def473aba0558d1630fcc42989825be8af3535" translate="yes" xml:space="preserve">
          <source>Makefilefile</source>
          <target state="translated">Makefilefile</target>
        </trans-unit>
        <trans-unit id="9c56c02dacd4da9dbffdc1f5f297ac43b8810db6" translate="yes" xml:space="preserve">
          <source>Makes &lt;var&gt;dir&lt;/var&gt; be the top of the stack, making it the new current directory as if it had been supplied as an argument to the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">차종은 &lt;var&gt;dir&lt;/var&gt; 그것이 인수로 제공했던 것처럼 새로운 현재 디렉토리 만들기, 스택의 상단이 될 &lt;code&gt;cd&lt;/code&gt; 내장.</target>
        </trans-unit>
        <trans-unit id="b14d955de5a31afe35f83846b2704bd26c502ad0" translate="yes" xml:space="preserve">
          <source>Making Bash behave more closely to what the POSIX standard specifies.</source>
          <target state="translated">Bash가 POSIX 표준에서 지정한 것과 더 밀접하게 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="33a11ddeb40a5ea23b8ede803f8e1aa69d8e1704" translate="yes" xml:space="preserve">
          <source>Manual: Appendices</source>
          <target state="translated">매뉴얼 : 부록</target>
        </trans-unit>
        <trans-unit id="19cfb484b6178f6b9d15f8147a01c01331ec01b8" translate="yes" xml:space="preserve">
          <source>Manual: Indexes</source>
          <target state="translated">수동 : 색인</target>
        </trans-unit>
        <trans-unit id="f5c70dc1930929d3c5404a84596e92ae32dcc16d" translate="yes" xml:space="preserve">
          <source>Many more examples &amp;ndash; an extensive collection of completions for most of the common GNU, Unix, and Linux commands &amp;ndash; are available as part of the bash_completion project. This is installed by default on many GNU/Linux distributions. Originally written by Ian Macdonald, the project now lives at &lt;a href=&quot;https://github.com/scop/bash-completion/&quot;&gt;https://github.com/scop/bash-completion/&lt;/a&gt;. There are ports for other systems such as Solaris and Mac OS X.</source>
          <target state="translated">bash_completion 프로젝트의 일부로 일반적인 GNU, Unix 및 Linux 명령 대부분에 대한 광범위한 추가 모음 인 더 많은 예제를 사용할 수 있습니다. 이것은 많은 GNU / Linux 배포판에 기본적으로 설치됩니다. 원래 이안 맥도날드 (Ian Macdonald)가 작성한이 프로젝트는 이제 &lt;a href=&quot;https://github.com/scop/bash-completion/&quot;&gt;https://github.com/scop/bash-completion/에&lt;/a&gt; 있습니다. Solaris 및 Mac OS X와 ​​같은 다른 시스템 용 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="929820933cbf583ca61cd2cbd76a10ebbdad3ab7" translate="yes" xml:space="preserve">
          <source>Many of the builtins have been extended by &lt;small&gt;POSIX&lt;/small&gt; or Bash.</source>
          <target state="translated">대부분의 빌트인은 &lt;small&gt;POSIX&lt;/small&gt; 또는 Bash에 의해 확장되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3a76fa952b85656089b18b552030f74bffcd3a78" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; as readonly. The values of these names may not be changed by subsequent assignment. If the</source>
          <target state="translated">각 &lt;var&gt;name&lt;/var&gt; 을 읽기 전용으로 표시하십시오. 이 이름의 값은 후속 지정으로 변경되지 않을 수 있습니다. 만약</target>
        </trans-unit>
        <trans-unit id="5c65f494822786d72599a219e58b5ad8b9f74bd3" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; for export to subsequent commands via the environment.</source>
          <target state="translated">환경을 통해 후속 명령으로 내보낼 각 &lt;var&gt;name&lt;/var&gt; 을 표시 하십시오.</target>
        </trans-unit>
        <trans-unit id="dbc3f611fc43d45dcdc3e407212c20046c1b9585" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; to be passed to child processes in the environment. If the</source>
          <target state="translated">환경에서 하위 프로세스로 전달 될 각 &lt;var&gt;name&lt;/var&gt; 을 표시 하십시오. 만약</target>
        </trans-unit>
        <trans-unit id="47b2a5bb2c23f338ee6a62b187c1d3e2b1eb1b0e" translate="yes" xml:space="preserve">
          <source>Matches any one of the enclosed characters. A pair of characters separated by a hyphen denotes a &lt;var&gt;range expression&lt;/var&gt;; any character that falls between those two characters, inclusive, using the current locale&amp;rsquo;s collating sequence and character set, is matched. If the first character following the &amp;lsquo;</source>
          <target state="translated">동봉 된 문자 중 하나와 일치합니다. 하이픈으로 구분 된 문자 쌍은 &lt;var&gt;range expression&lt;/var&gt; 나타냅니다 . 현재 로케일의 조합 순서와 문자 세트를 사용하여 두 문자 사이에있는 문자가 일치합니다. 첫 문자가 '</target>
        </trans-unit>
        <trans-unit id="bb8a96214111f641ec065d807d183c827eb89b95" translate="yes" xml:space="preserve">
          <source>Matches any single character.</source>
          <target state="translated">단일 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="60598833231b6c5c16760ebcb6b5a9ce13a7da8b" translate="yes" xml:space="preserve">
          <source>Matches any string, including the null string. When the &lt;code&gt;globstar&lt;/code&gt; shell option is enabled, and &amp;lsquo;</source>
          <target state="translated">null 문자열을 포함하여 모든 문자열과 일치합니다. 때 &lt;code&gt;globstar&lt;/code&gt; 의 쉘 옵션을 사용하도록 설정하고 '</target>
        </trans-unit>
        <trans-unit id="580bc9960e476459e3ccd80437aa6badf17a078d" translate="yes" xml:space="preserve">
          <source>Matches anything except one of the given patterns.</source>
          <target state="translated">주어진 패턴 중 하나를 제외한 모든 항목과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="bbc361d5b4d32c141da2e7dda8d5139e01c8f063" translate="yes" xml:space="preserve">
          <source>Matches one of the given patterns.</source>
          <target state="translated">주어진 패턴 중 하나와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="507ef24c56912e7e6756bece3eb9f74e4cd3a4c1" translate="yes" xml:space="preserve">
          <source>Matches one or more occurrences of the given patterns.</source>
          <target state="translated">주어진 패턴 중 하나 이상이 일치합니다.</target>
        </trans-unit>
        <trans-unit id="dcd86c7bd75a865687eb9ebbdc1a8b2be66c3323" translate="yes" xml:space="preserve">
          <source>Matches zero or more occurrences of the given patterns.</source>
          <target state="translated">주어진 패턴이 0 번 이상 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3c265be742c89b975ed703f6c4d6f306c544e2e2" translate="yes" xml:space="preserve">
          <source>Matches zero or one occurrence of the given patterns.</source>
          <target state="translated">주어진 패턴이 0 번 또는 1 번 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ef742df294c22559e343cc21d8a45225c22f195c" translate="yes" xml:space="preserve">
          <source>Metafy the next character typed. This is for keyboards without a meta key. Typing &amp;lsquo;</source>
          <target state="translated">입력 한 다음 문자를 메타 화하십시오. 메타 키가없는 키보드를위한 것입니다. '을 입력</target>
        </trans-unit>
        <trans-unit id="0eb76460945245eee981e7f4e80d50ea11d83432" translate="yes" xml:space="preserve">
          <source>Miscellaneous Commands</source>
          <target state="translated">기타 명령</target>
        </trans-unit>
        <trans-unit id="7b775d8f987b6e8e0ceeb2569624f232e86e2599" translate="yes" xml:space="preserve">
          <source>Modern systems provide more secure ways to implement a restricted environment, such as &lt;code&gt;jails&lt;/code&gt;, &lt;code&gt;zones&lt;/code&gt;, or &lt;code&gt;containers&lt;/code&gt;.</source>
          <target state="translated">최신 시스템은 &lt;code&gt;jails&lt;/code&gt; , &lt;code&gt;zones&lt;/code&gt; 또는 &lt;code&gt;containers&lt;/code&gt; 와 같은 제한된 환경을 구현하는보다 안전한 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="14d16343acee667618ed3e2abddff9294d37ada9" translate="yes" xml:space="preserve">
          <source>Modify completion options for each &lt;var&gt;name&lt;/var&gt; according to the &lt;var&gt;option&lt;/var&gt;s, or for the currently-executing completion if no &lt;var&gt;name&lt;/var&gt;s are supplied. If no &lt;var&gt;option&lt;/var&gt;s are given, display the completion options for each &lt;var&gt;name&lt;/var&gt; or the current completion. The possible values of &lt;var&gt;option&lt;/var&gt; are those valid for the &lt;code&gt;complete&lt;/code&gt; builtin described above. The</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt; s 에 따라 각 &lt;var&gt;name&lt;/var&gt; 또는 완료 &lt;var&gt;name&lt;/var&gt; 이없는 경우 현재 실행중인 완료 에 대한 완료 옵션을 수정하십시오 . &lt;var&gt;option&lt;/var&gt; 이 없으면 각 &lt;var&gt;name&lt;/var&gt; 또는 현재 완료에 대한 완료 옵션을 표시하십시오 . 가능한 &lt;var&gt;option&lt;/var&gt; 값은 위에서 설명한 &lt;code&gt;complete&lt;/code&gt; 내장에 유효한 값입니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="04121c88ece5c186f18f267948470d8744f5e497" translate="yes" xml:space="preserve">
          <source>Modify shell optional behavior.</source>
          <target state="translated">쉘 선택적 동작을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="331756640fcecc796eafaad9e2ab28526a0aed94" translate="yes" xml:space="preserve">
          <source>Modifying Shell Behavior</source>
          <target state="translated">쉘 동작 수정</target>
        </trans-unit>
        <trans-unit id="fbf4fccd6de98d8a8fc56159af58c88a0799f1f0" translate="yes" xml:space="preserve">
          <source>Modifying the results of substitution.</source>
          <target state="translated">대체 결과 수정.</target>
        </trans-unit>
        <trans-unit id="f0b6d569baa669ab5166eda7946cffd9aa8c24fb" translate="yes" xml:space="preserve">
          <source>More complex shell commands are composed of simple commands arranged together in a variety of ways: in a pipeline in which the output of one command becomes the input of a second, in a loop or conditional construct, or in some other grouping.</source>
          <target state="translated">보다 복잡한 쉘 명령은 다양한 방식으로 함께 배열 된 간단한 명령으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b6b394ff29e1318ff24e3e979c82eceda3659f69" translate="yes" xml:space="preserve">
          <source>More features unique to Bash may be found in &lt;a href=&quot;bash-features&quot;&gt;Bash Features&lt;/a&gt;.</source>
          <target state="translated">Bash 고유의 더 많은 기능은 &lt;a href=&quot;bash-features&quot;&gt;Bash 기능&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6f7b0cba471a3fb5a86435ad9b95d4d3186ccdc" translate="yes" xml:space="preserve">
          <source>More features unique to Bash may be found in &lt;a href=&quot;bash-features#Bash-Features&quot;&gt;Bash Features&lt;/a&gt;.</source>
          <target state="translated">Bash 고유의 더 많은 기능은 &lt;a href=&quot;bash-features#Bash-Features&quot;&gt;Bash Features&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc5f2e099e3643dce228ebc5118d6bc9d530a456" translate="yes" xml:space="preserve">
          <source>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</source>
          <target state="translated">또한 저작권 소유자가 합리적인 수단으로 위반 사실을 통지하면 특정 저작권 소유자의 라이센스가 영구적으로 복원됩니다. 통지를받은 후 30 일 전에 위반 사항을 치료합니다.</target>
        </trans-unit>
        <trans-unit id="2d949bb6b18e78526fdb3309145863c0fff7acfb" translate="yes" xml:space="preserve">
          <source>Most versions of Unix make this a part of the operating system&amp;rsquo;s command execution mechanism. If the first line of a script begins with the two characters &amp;lsquo;</source>
          <target state="translated">대부분의 Unix 버전은 이것을 운영 체제의 명령 실행 메커니즘의 일부로 만듭니다. 스크립트의 첫 줄이 두 문자로 시작하면 '</target>
        </trans-unit>
        <trans-unit id="03a568ed0d0916cdf5158fedc938163865f34d79" translate="yes" xml:space="preserve">
          <source>Move &amp;lsquo;back&amp;rsquo; through the history list, fetching the previous command.</source>
          <target state="translated">이전 명령을 가져 와서 히스토리 목록을 통해 '뒤로'이동하십시오.</target>
        </trans-unit>
        <trans-unit id="802387d1306c70f90614ec5492974da0b34d6702" translate="yes" xml:space="preserve">
          <source>Move &amp;lsquo;forward&amp;rsquo; through the history list, fetching the next command.</source>
          <target state="translated">다음 명령을 가져 와서 내역 목록을 통해 '앞으로'이동하십시오.</target>
        </trans-unit>
        <trans-unit id="ea22070bff60174ad9198aadedea01b9e334bc86" translate="yes" xml:space="preserve">
          <source>Move back a character.</source>
          <target state="translated">캐릭터를 뒤로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="f03abbd943590e5b676ac24ffec0cb3457a839fb" translate="yes" xml:space="preserve">
          <source>Move back one character.</source>
          <target state="translated">한 문자 뒤로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="555b84b86186f36ece3db4f40fd957046b94b4f4" translate="yes" xml:space="preserve">
          <source>Move back to the start of the current or previous word. Words are composed of letters and digits.</source>
          <target state="translated">현재 또는 이전 단어의 시작으로 돌아갑니다. 단어는 문자와 숫자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="609e1270ca78a70ff45889670fd3fd78ff7848ad" translate="yes" xml:space="preserve">
          <source>Move back to the start of the current or previous word. Words are delimited by non-quoted shell metacharacters.</source>
          <target state="translated">현재 또는 이전 단어의 시작으로 돌아갑니다. 단어는 인용되지 않은 쉘 메타 문자로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="4b202f08f962725726cf136388f4e14e523a12a8" translate="yes" xml:space="preserve">
          <source>Move backward a word.</source>
          <target state="translated">한 단어 뒤로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="6be232605df98981975e07d50911ad5d613980f6" translate="yes" xml:space="preserve">
          <source>Move forward a character.</source>
          <target state="translated">캐릭터를 앞으로 이동시킵니다.</target>
        </trans-unit>
        <trans-unit id="d13a0267e092ec63b89b3880303a5185a25c3196" translate="yes" xml:space="preserve">
          <source>Move forward a word, where a word is composed of letters and digits.</source>
          <target state="translated">단어가 문자와 숫자로 구성된 단어를 앞으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9b8cd052c7c7c6b3baf215b9ba57515984535bce" translate="yes" xml:space="preserve">
          <source>Move forward one character.</source>
          <target state="translated">한 문자 앞으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="606acc9a1c4941929e33d5ba6380faad05f1999a" translate="yes" xml:space="preserve">
          <source>Move forward to the end of the next word. Words are composed of letters and digits.</source>
          <target state="translated">다음 단어의 끝으로 이동하십시오. 단어는 문자와 숫자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b89d7ec6d2bd93bddd819bc89f1f0d6a26143b09" translate="yes" xml:space="preserve">
          <source>Move forward to the end of the next word. Words are delimited by non-quoted shell metacharacters.</source>
          <target state="translated">다음 단어의 끝으로 이동하십시오. 단어는 인용되지 않은 쉘 메타 문자로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="02b23ca4886e6967ab15ea2dc46e9717e5be7448" translate="yes" xml:space="preserve">
          <source>Move to the end of the input history, i.e., the line currently being entered.</source>
          <target state="translated">입력 히스토리의 끝, 즉 현재 입력중인 행으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="2a6ce964c353d7fc77f5427c386721059f89e58e" translate="yes" xml:space="preserve">
          <source>Move to the end of the line.</source>
          <target state="translated">줄의 끝으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="b197771ca8ea11c5879847015686b2f25546c56c" translate="yes" xml:space="preserve">
          <source>Move to the first line in the history.</source>
          <target state="translated">히스토리의 첫 번째 줄로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="e8be6e00fb1b714d59f81a250036a76f44d397aa" translate="yes" xml:space="preserve">
          <source>Move to the start of the current line.</source>
          <target state="translated">현재 줄의 시작으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="4c0251a5384fa6d692664ca6c0665abebb12594c" translate="yes" xml:space="preserve">
          <source>Move to the start of the line.</source>
          <target state="translated">줄의 시작 부분으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="53d14d8e8ec047e7ce0acf9c1000fbfe93a8d444" translate="yes" xml:space="preserve">
          <source>Moving about the input line.</source>
          <target state="translated">입력 라인을 따라 이동합니다.</target>
        </trans-unit>
        <trans-unit id="14c0fe91993a2f846fb463f4f9af616666e24b26" translate="yes" xml:space="preserve">
          <source>Moving about the line.</source>
          <target state="translated">선을 따라 움직입니다.</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES</target>
        </trans-unit>
        <trans-unit id="884999f8c31d1e58342a8bbb16985f2346ae4228" translate="yes" xml:space="preserve">
          <source>Names of all shell variables. May also be specified as</source>
          <target state="translated">모든 쉘 변수의 이름 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="855dac7ef3e4b8def896fa4ab44b01a71f10d1b7" translate="yes" xml:space="preserve">
          <source>Names of disabled shell builtins.</source>
          <target state="translated">비활성화 된 쉘 내장의 이름</target>
        </trans-unit>
        <trans-unit id="2625ff45ce1ef5f0a4dc736a4f560f0b09467a01" translate="yes" xml:space="preserve">
          <source>Names of enabled shell builtins.</source>
          <target state="translated">활성화 된 쉘 내장의 이름.</target>
        </trans-unit>
        <trans-unit id="dd42d546f44ab55e4cace8a66a8665c92c311d05" translate="yes" xml:space="preserve">
          <source>Names of exported shell variables. May also be specified as</source>
          <target state="translated">내 보낸 쉘 변수의 이름 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="cf305f7f425a639788a5ceb75efe5eff28e05a46" translate="yes" xml:space="preserve">
          <source>Names of running jobs, if job control is active.</source>
          <target state="translated">작업 제어가 활성화 된 경우 실행중인 작업의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3d36dd11e7e18e31675c16c2b2bc011a6f22d9fc" translate="yes" xml:space="preserve">
          <source>Names of shell builtin commands. May also be specified as</source>
          <target state="translated">쉘 내장 명령의 이름. 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="f3e4ba5fcc703baf196cfbafd0cf45e47a01ccd4" translate="yes" xml:space="preserve">
          <source>Names of shell functions.</source>
          <target state="translated">쉘 함수의 이름</target>
        </trans-unit>
        <trans-unit id="3aaf14106fd44ec96ea787010350180d7786fa15" translate="yes" xml:space="preserve">
          <source>Names of stopped jobs, if job control is active.</source>
          <target state="translated">작업 제어가 활성화 된 경우 중지 된 작업의 이름.</target>
        </trans-unit>
        <trans-unit id="599beb2be4e642c95316c695b3cb8b79ac302110" translate="yes" xml:space="preserve">
          <source>Next, any command specified with the</source>
          <target state="translated">다음으로</target>
        </trans-unit>
        <trans-unit id="e7a2f42bd50eaa66febaa97d85e69b1e9650256b" translate="yes" xml:space="preserve">
          <source>Next, the string specified as the argument to the</source>
          <target state="translated">다음으로, 문자열은</target>
        </trans-unit>
        <trans-unit id="ef13a5a0b262b0ac5dca1d912e920c21ac0452e9" translate="yes" xml:space="preserve">
          <source>No parameter and variable expansion, command substitution, arithmetic expansion, or filename expansion is performed on &lt;var&gt;word&lt;/var&gt;. If any part of &lt;var&gt;word&lt;/var&gt; is quoted, the &lt;var&gt;delimiter&lt;/var&gt; is the result of quote removal on &lt;var&gt;word&lt;/var&gt;, and the lines in the here-document are not expanded. If &lt;var&gt;word&lt;/var&gt; is unquoted, all lines of the here-document are subjected to parameter expansion, command substitution, and arithmetic expansion, the character sequence &lt;code&gt;\newline&lt;/code&gt; is ignored, and &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 에서 매개 변수 및 변수 확장, 명령 대체, 산술 확장 또는 파일 이름 확장이 수행되지 않습니다 . &lt;var&gt;word&lt;/var&gt; 일부 가 따옴표로 묶이면 &lt;var&gt;delimiter&lt;/var&gt; 는 &lt;var&gt;word&lt;/var&gt; 에서 따옴표를 제거한 결과이며 여기 문서의 줄은 확장되지 않습니다. &lt;var&gt;word&lt;/var&gt; 를 인용 부호로 묶지 않으면 여기 문서의 모든 줄에 매개 변수 확장, 명령 대체 및 산술 확장이 적용되고 문자 시퀀스 &lt;code&gt;\newline&lt;/code&gt; 은 무시되고 '</target>
        </trans-unit>
        <trans-unit id="b11e4927fbb66107c5529cfa17ebc2f1d5088f44" translate="yes" xml:space="preserve">
          <source>Non-builtin commands started by Bash have signal handlers set to the values inherited by the shell from its parent. When job control is not in effect, asynchronous commands ignore &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; in addition to these inherited handlers. Commands run as a result of command substitution ignore the keyboard-generated job control signals &lt;code&gt;SIGTTIN&lt;/code&gt;, &lt;code&gt;SIGTTOU&lt;/code&gt;, and &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">Bash에 의해 시작된 내장되지 않은 명령에는 신호 핸들러가 상위에서 쉘에 의해 상속 된 값으로 설정되어 있습니다. 작업 제어가 유효하지 않으면 비동기 명령은 상속 된 핸들러 외에도 &lt;code&gt;SIGINT&lt;/code&gt; 및 &lt;code&gt;SIGQUIT&lt;/code&gt; 를 무시 합니다. 명령 대체의 결과로 실행되는 명령은 키보드 생성 작업 제어 신호 &lt;code&gt;SIGTTIN&lt;/code&gt; , &lt;code&gt;SIGTTOU&lt;/code&gt; 를 무시합니다. 및 &lt;code&gt;SIGTSTP&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c485ae1fdc8aaec172e2cfbb73ba1b1edd86f00d" translate="yes" xml:space="preserve">
          <source>Non-incremental searches read the entire search string before starting to search for matching history lines. The search string may be typed by the user or be part of the contents of the current line.</source>
          <target state="translated">비 증분 검색은 일치하는 히스토리 라인을 검색하기 전에 전체 검색 문자열을 읽습니다. 검색 문자열은 사용자가 입력하거나 현재 줄 내용의 일부일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c6ec55c5b4bfe5089bd9904bc736c7597d8e5c2" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if &lt;var&gt;filename&lt;/var&gt; in &lt;code&gt;.&lt;/code&gt;&lt;var&gt;filename&lt;/var&gt; is not found.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; 에 있으면 비 대화식 쉘이 종료됩니다 &lt;code&gt;.&lt;/code&gt; &lt;var&gt;filename&lt;/var&gt; 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7cabefe578a859ab8e65ca427392ad944a8360d2" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if a parameter expansion error occurs.</source>
          <target state="translated">매개 변수 확장 오류가 발생하면 비 대화식 쉘이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="d1d6b4f667281a0903111799342dc09dac1a5b7f" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if a syntax error in an arithmetic expansion results in an invalid expression.</source>
          <target state="translated">산술 확장에서 구문 오류로 인해 유효하지 않은 표현식이 발생하면 비 대화식 쉘이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="7f3b130b3679867796e7b2794d8d4d0a8d2adf7b" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if there is a syntax error in a script read with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins, or in a string processed by the &lt;code&gt;eval&lt;/code&gt; builtin.</source>
          <target state="translated">로 읽은 스크립트에 구문 오류가 있으면 비 대화식 쉘이 종료됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 내장, 또는 &lt;code&gt;eval&lt;/code&gt; 내장에 의해 처리 된 문자열 .</target>
        </trans-unit>
        <trans-unit id="7c27101824728b035245beb759417f36eeb9e65c" translate="yes" xml:space="preserve">
          <source>Notation used in this text.</source>
          <target state="translated">이 텍스트에 사용 된 표기법.</target>
        </trans-unit>
        <trans-unit id="e867b380c598d9e97d14aa2959425a607f995453" translate="yes" xml:space="preserve">
          <source>Note that for historical reasons, in the most common usage the curly braces that surround the body of the function must be separated from the body by &lt;code&gt;blank&lt;/code&gt;s or newlines. This is because the braces are reserved words and are only recognized as such when they are separated from the command list by whitespace or another shell metacharacter. Also, when using the braces, the &lt;var&gt;list&lt;/var&gt; must be terminated by a semicolon, a &amp;lsquo;</source>
          <target state="translated">역사적 이유로 가장 일반적인 사용법에서 함수 본문을 둘러싼 중괄호는 &lt;code&gt;blank&lt;/code&gt; 또는 줄 바꿈으로 본문과 분리해야합니다 . 중괄호는 예약어이며 공백 또는 다른 쉘 메타 문자로 명령 목록에서 분리 될 때만 인식되기 때문입니다. 또한 중괄호를 사용할 때 &lt;var&gt;list&lt;/var&gt; 은 세미콜론 ( '</target>
        </trans-unit>
        <trans-unit id="5d0eea6cc1840504408ea16ccadd02eec4fd32c0" translate="yes" xml:space="preserve">
          <source>Note that if no expansion occurs, no splitting is performed.</source>
          <target state="translated">확장이 발생하지 않으면 분할이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85099ec840523ed8d40cae98363cbd5b2fc921b8" translate="yes" xml:space="preserve">
          <source>Note that the order of redirections is significant. For example, the command</source>
          <target state="translated">리디렉션 순서가 중요합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="74848d504d1ec5c74a9815027d3618d6e3ab1fad" translate="yes" xml:space="preserve">
          <source>Note that when the mode is interpreted as an octal number, each number of the umask is subtracted from &lt;code&gt;7&lt;/code&gt;. Thus, a umask of &lt;code&gt;022&lt;/code&gt; results in permissions of &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="translated">모드가 8 진수로 해석 될 때 umask의 각 숫자는 &lt;code&gt;7&lt;/code&gt; 에서 빼집니다 . 따라서 &lt;code&gt;022&lt;/code&gt; 의 umask 는 &lt;code&gt;755&lt;/code&gt; 의 권한을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ac05f5cec4f5c8c50a92866154dc88ab43649c" translate="yes" xml:space="preserve">
          <source>Note that wherever a &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="e51443fffacab700dcc08997d3c849facc3f9f48" translate="yes" xml:space="preserve">
          <source>Notice how</source>
          <target state="translated">어떻게 통지</target>
        </trans-unit>
        <trans-unit id="997abb76eabee288731fc2937ad66abaea3fbea8" translate="yes" xml:space="preserve">
          <source>Numeric Arguments</source>
          <target state="translated">숫자 인수</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="5f3b987e1c3e6ec569bd126e904cef54fefe3c88" translate="yes" xml:space="preserve">
          <source>OLDPWD</source>
          <target state="translated">OLDPWD</target>
        </trans-unit>
        <trans-unit id="e0f5679bbe22565a79e204b53492d29f42dbd248" translate="yes" xml:space="preserve">
          <source>OPTARG</source>
          <target state="translated">OPTARG</target>
        </trans-unit>
        <trans-unit id="866d071acdc9c3f8972bdadac2552f784a86d267" translate="yes" xml:space="preserve">
          <source>OPTERR</source>
          <target state="translated">OPTERR</target>
        </trans-unit>
        <trans-unit id="6594723d07b6ee2e01bbe899b4f410b577b84e90" translate="yes" xml:space="preserve">
          <source>OPTIND</source>
          <target state="translated">OPTIND</target>
        </trans-unit>
        <trans-unit id="67fb5233053001445a2a79934c6ec463131f2ddc" translate="yes" xml:space="preserve">
          <source>OSTYPE</source>
          <target state="translated">OSTYPE</target>
        </trans-unit>
        <trans-unit id="0a38dbc78e366f12451b07667d8eb4386b2e3e9d" translate="yes" xml:space="preserve">
          <source>Of the two forms, the first is preferred. This is semantically equivalent to</source>
          <target state="translated">두 가지 형태 중 첫 번째 형태가 선호됩니다. 이것은 의미 상으로</target>
        </trans-unit>
        <trans-unit id="60cc2e1aa5c6781f9d89f9ab563e754633cc2620" translate="yes" xml:space="preserve">
          <source>Of these list operators, &amp;lsquo;</source>
          <target state="translated">이 목록 연산자 중 '</target>
        </trans-unit>
        <trans-unit id="d9f43fe082c76f430e5842d0449865dc57520a1d" translate="yes" xml:space="preserve">
          <source>Often during an interactive session you type in a long line of text, only to notice that the first word on the line is misspelled. The Readline library gives you a set of commands for manipulating the text as you type it in, allowing you to just fix your typo, and not forcing you to retype the majority of the line. Using these editing commands, you move the cursor to the place that needs correction, and delete or insert the text of the corrections. Then, when you are satisfied with the line, you simply press &lt;code&gt;RET&lt;/code&gt;. You do not have to be at the end of the line to press &lt;code&gt;RET&lt;/code&gt;; the entire line is accepted regardless of the location of the cursor within the line.</source>
          <target state="translated">종종 대화식 세션 중에 긴 줄의 텍스트를 입력하면 줄의 첫 번째 단어의 철자가 틀린 것을 알 수 있습니다. Readline 라이브러리는 텍스트를 입력 할 때 텍스트를 조작하는 명령 세트를 제공하므로 오타를 수정하고 대부분의 줄을 다시 입력하지 않아도됩니다. 이러한 편집 명령을 사용하여 수정이 필요한 위치로 커서를 이동하고 수정 텍스트를 삭제하거나 삽입합니다. 그런 다음 회선에 만족하면 &lt;code&gt;RET&lt;/code&gt; 을 누르기 만하면 됩니다. &lt;code&gt;RET&lt;/code&gt; 을 누르기 위해 행의 끝에있을 필요는 없습니다 . 라인 내에서 커서의 위치에 관계없이 전체 라인이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="e0049a66519cae71159800bb77a35007bc2d76d3" translate="yes" xml:space="preserve">
          <source>On</source>
          <target state="translated">On</target>
        </trans-unit>
        <trans-unit id="8ebccea227af14bbb1599e724e0522b214338baf" translate="yes" xml:space="preserve">
          <source>On systems that can support it, there is an additional expansion available: &lt;var&gt;process substitution&lt;/var&gt;. This is performed at the same time as tilde, parameter, variable, and arithmetic expansion and command substitution.</source>
          <target state="translated">이를 지원할 수있는 시스템에는 사용 가능한 추가 확장이 있습니다 : &lt;var&gt;process substitution&lt;/var&gt; . 이는 물결표, 매개 변수, 변수 및 산술 확장 및 명령 대체와 동시에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="07afde5708f0ba3067a7ec1085ed9cd58e1783d1" translate="yes" xml:space="preserve">
          <source>On systems that have the &lt;code&gt;env&lt;/code&gt; program, you can do it like this:</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 프로그램 이있는 시스템 에서는 다음과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5eb62ac292e5797fd17df43924a97d74fb272dc2" translate="yes" xml:space="preserve">
          <source>On systems that support it, the</source>
          <target state="translated">이를 지원하는 시스템에서</target>
        </trans-unit>
        <trans-unit id="a2226fea3a4b4f4acc98b0a8b6ecfcdfdd041175" translate="yes" xml:space="preserve">
          <source>Once a compspec has been found, it is used to generate the list of matching words. If a compspec is not found, the default Bash completion described above (see &lt;a href=&quot;commands-for-completion&quot;&gt;Commands For Completion&lt;/a&gt;) is performed.</source>
          <target state="translated">compspec을 찾으면 일치하는 단어 목록을 생성하는 데 사용됩니다. compspec을 찾을 수없는 경우 위에서 설명한 기본 Bash 완성 ( &lt;a href=&quot;commands-for-completion&quot;&gt;Commands For Completion&lt;/a&gt; 참조 )이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c8f6ec6d8abab1598eff4845cedd84ce7452f322" translate="yes" xml:space="preserve">
          <source>Once a compspec has been found, it is used to generate the list of matching words. If a compspec is not found, the default Bash completion described above (see &lt;a href=&quot;commands-for-completion#Commands-For-Completion&quot;&gt;Commands For Completion&lt;/a&gt;) is performed.</source>
          <target state="translated">compspec이 발견되면 일치하는 단어 목록을 생성하는 데 사용됩니다. compspec을 찾을 수 없으면 위에서 설명한 기본 Bash 완료 ( &lt;a href=&quot;commands-for-completion#Commands-For-Completion&quot;&gt;완료 명령&lt;/a&gt; 참조 )가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9b4cb352a1834cc4f714a3045fd1a423a629bf84" translate="yes" xml:space="preserve">
          <source>Once installed using &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;_comp_cd&lt;/code&gt; will be called every time we attempt word completion for a &lt;code&gt;cd&lt;/code&gt; command.</source>
          <target state="translated">사용하여 설치되면 &lt;code&gt;complete&lt;/code&gt; , &lt;code&gt;_comp_cd&lt;/code&gt; 은 우리가에 대한 단어 완성을 시도 할 때마다 호출되는 &lt;code&gt;cd&lt;/code&gt; 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b189e60668574dd5cd46ed1f2e9e4d2bf426c36a" translate="yes" xml:space="preserve">
          <source>Once you have determined that a bug actually exists, use the &lt;code&gt;bashbug&lt;/code&gt; command to submit a bug report. If you have a fix, you are encouraged to mail that as well! Suggestions and &amp;lsquo;philosophical&amp;rsquo; bug reports may be mailed to &lt;a href=&quot;mailto:bug-bash@gnu.org&quot;&gt;bug-bash@gnu.org&lt;/a&gt; or posted to the Usenet newsgroup &lt;code&gt;gnu.bash.bug&lt;/code&gt;.</source>
          <target state="translated">버그가 실제로 존재한다고 판단되면 &lt;code&gt;bashbug&lt;/code&gt; 명령을 사용하여 버그 보고서를 제출하십시오. 수정 사항이있는 경우 해당 메일도 발송하는 것이 좋습니다! 제안 및 '철학적'버그 보고서는 &lt;a href=&quot;mailto:bug-bash@gnu.org&quot;&gt;bug-bash@gnu.org&lt;/a&gt; 로 보내 거나 유즈넷 뉴스 그룹 &lt;code&gt;gnu.bash.bug&lt;/code&gt; 에 게시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7ee0466359400646ed4e6c00353d527121d3c64" translate="yes" xml:space="preserve">
          <source>Once you know the name of the command, simply place on a line in the init file the name of the key you wish to bind the command to, a colon, and then the name of the command. There can be no space between the key name and the colon &amp;ndash; that will be interpreted as part of the key name. The name of the key can be expressed in different ways, depending on what you find most comfortable.</source>
          <target state="translated">명령 이름을 알고 있으면 init 파일의 행에 명령을 바인딩하려는 키 이름, 콜론 및 명령 이름을 입력하십시오. 키 이름과 콜론 사이에는 공백이 없어야합니다. 키 이름의 일부로 해석됩니다. 키 이름은 가장 편한 것에 따라 다른 방식으로 표현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8609e6315434e29702d2030592ee086c67b1328a" translate="yes" xml:space="preserve">
          <source>One line is read from the standard input, or from the file descriptor &lt;var&gt;fd&lt;/var&gt; supplied as an argument to the</source>
          <target state="translated">한 줄은 표준 입력 또는 파일 설명자 &lt;var&gt;fd&lt;/var&gt; 에서 인수로 제공된</target>
        </trans-unit>
        <trans-unit id="a0fc3002038db7b30f73d2f19349f1de91d47bac" translate="yes" xml:space="preserve">
          <source>Only brace expansion, word splitting, and filename expansion can increase the number of words of the expansion; other expansions expand a single word to a single word. The only exceptions to this are the expansions of &lt;code&gt;&quot;$@&quot;&lt;/code&gt; and &lt;code&gt;$*&lt;/code&gt; (see &lt;a href=&quot;special-parameters&quot;&gt;Special Parameters&lt;/a&gt;), and &lt;code&gt;&quot;${&lt;var&gt;name&lt;/var&gt;[@]}&quot;&lt;/code&gt; and &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[*]}&lt;/code&gt; (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">중괄호 확장, 단어 분할 및 파일 이름 확장 만 확장 단어 수를 늘릴 수 있습니다. 다른 확장은 단일 단어를 단일 단어로 확장합니다. 이에 대한 유일한 예외는 &lt;code&gt;&quot;$@&quot;&lt;/code&gt; 및 &lt;code&gt;$*&lt;/code&gt; ( &lt;a href=&quot;special-parameters&quot;&gt;특수 매개 변수&lt;/a&gt; 참조 ) 및 &lt;code&gt;&quot;${&lt;var&gt;name&lt;/var&gt;[@]}&quot;&lt;/code&gt; 및 &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[*]}&lt;/code&gt; ( &lt;a href=&quot;arrays&quot;&gt;배열&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="efa6b1ad3f2ac7fe9f4ec4da46bbf66dd6d5c8ae" translate="yes" xml:space="preserve">
          <source>Only brace expansion, word splitting, and filename expansion can increase the number of words of the expansion; other expansions expand a single word to a single word. The only exceptions to this are the expansions of &lt;code&gt;&quot;$@&quot;&lt;/code&gt; and &lt;code&gt;$*&lt;/code&gt; (see &lt;a href=&quot;special-parameters#Special-Parameters&quot;&gt;Special Parameters&lt;/a&gt;), and &lt;code&gt;&quot;${&lt;var&gt;name&lt;/var&gt;[@]}&quot;&lt;/code&gt; and &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[*]}&lt;/code&gt; (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">중괄호 확장, 단어 분리 및 파일 이름 확장 만 확장의 단어 수를 늘릴 수 있습니다. 다른 확장은 단일 단어를 단일 단어로 확장합니다. 이에 대한 유일한 예외는 &lt;code&gt;&quot;$@&quot;&lt;/code&gt; 및 &lt;code&gt;$*&lt;/code&gt; ( &lt;a href=&quot;special-parameters#Special-Parameters&quot;&gt;특수 매개 변수&lt;/a&gt; 참조 ) 및 &lt;code&gt;&quot;${&lt;var&gt;name&lt;/var&gt;[@]}&quot;&lt;/code&gt; 및 &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[*]}&lt;/code&gt; ( &lt;a href=&quot;arrays#Arrays&quot;&gt;배열&lt;/a&gt; 참조 )의 확장입니다.</target>
        </trans-unit>
        <trans-unit id="b3f63ffbf309566a1b64f190313887ac80114620" translate="yes" xml:space="preserve">
          <source>Operation Controls</source>
          <target state="translated">조작 컨트롤</target>
        </trans-unit>
        <trans-unit id="a123ce747593062b420ea1afad3f992c718a91f0" translate="yes" xml:space="preserve">
          <source>Operators are evaluated in order of precedence. Sub-expressions in parentheses are evaluated first and may override the precedence rules above.</source>
          <target state="translated">연산자는 우선 순위대로 평가됩니다. 괄호 안의 하위 표현식이 먼저 평가되며 위의 우선 순위 규칙을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c49b1643c903074dd04faa3ee683900d824639b" translate="yes" xml:space="preserve">
          <source>Optional Features</source>
          <target state="translated">선택적 기능</target>
        </trans-unit>
        <trans-unit id="907284269746178d019f841dacc1aaf233b3a1ce" translate="yes" xml:space="preserve">
          <source>Optionally waits for the command to complete and collects its exit status (see &lt;a href=&quot;exit-status&quot;&gt;Exit Status&lt;/a&gt;).</source>
          <target state="translated">선택적 명령이 완료되기를 기다립니다와 종료 상태를 (참조 수집 &lt;a href=&quot;exit-status&quot;&gt;종료 상태&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e79fc4ed7d2f9247da49d7371869cb864168199f" translate="yes" xml:space="preserve">
          <source>Optionally waits for the command to complete and collects its exit status (see &lt;a href=&quot;exit-status#Exit-Status&quot;&gt;Exit Status&lt;/a&gt;).</source>
          <target state="translated">선택적 명령이 완료되기를 기다립니다와 종료 상태를 (참조 수집 &lt;a href=&quot;exit-status#Exit-Status&quot;&gt;종료 상태&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="653829574c84efd3074e50a0e8430336d832c8f9" translate="yes" xml:space="preserve">
          <source>Optionally, type &amp;lsquo;</source>
          <target state="translated">선택적으로 '</target>
        </trans-unit>
        <trans-unit id="d381474b1479ffb5678f11212c0bdc2bff5feea8" translate="yes" xml:space="preserve">
          <source>Options recognized by the configuration program.</source>
          <target state="translated">구성 프로그램이 인식하는 옵션.</target>
        </trans-unit>
        <trans-unit id="482607f33da36f20af8510afc8761bfa783d9b63" translate="yes" xml:space="preserve">
          <source>Options, if supplied, have the following meanings:</source>
          <target state="translated">옵션 (제공된 경우)의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6b75389e57a647a7a0fa71f758f4ae59a0d5037" translate="yes" xml:space="preserve">
          <source>Other miscellaneous commands.</source>
          <target state="translated">기타 기타 명령.</target>
        </trans-unit>
        <trans-unit id="2f414ad44e61646509b29eca330bb7f94be2be3f" translate="yes" xml:space="preserve">
          <source>Other options, if specified, have the following meanings. The arguments to the</source>
          <target state="translated">지정된 경우 다른 옵션의 의미는 다음과 같습니다. 에 대한 논쟁</target>
        </trans-unit>
        <trans-unit id="9ba0c424a990ead00e4ec8cb75b53f66dbc1b9a3" translate="yes" xml:space="preserve">
          <source>Otherwise, roughly speaking, the shell reads its input and divides the input into words and operators, employing the quoting rules to select which meanings to assign various words and characters.</source>
          <target state="translated">그렇지 않으면, 대략 말하면, 쉘은 입력을 읽고 입력을 단어와 연산자로 나누고 인용 규칙을 사용하여 다양한 단어와 문자를 지정할 의미를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="f5083607f8cf9f9a3292e875a3d3160e84830624" translate="yes" xml:space="preserve">
          <source>Otherwise, the expression is false.</source>
          <target state="translated">그렇지 않으면 표현식이 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="735bc0b3cdeff740416fb1e21ec082062d907d0e" translate="yes" xml:space="preserve">
          <source>Output the &lt;var&gt;arg&lt;/var&gt;s, separated by spaces, terminated with a newline. The return status is 0 unless a write error occurs. If</source>
          <target state="translated">공백으로 구분 된 &lt;var&gt;arg&lt;/var&gt; 를 개행으로 종료하여 출력합니다 . 쓰기 오류가 발생하지 않으면 반환 상태는 0입니다. 만약</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">PATH</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="a452a042a5ffb628150d1399bee5031bc363bf9b" translate="yes" xml:space="preserve">
          <source>PIPESTATUS</source>
          <target state="translated">PIPESTATUS</target>
        </trans-unit>
        <trans-unit id="70fe60b7dfe0837f2c69677bfef128c134937b16" translate="yes" xml:space="preserve">
          <source>PNG</source>
          <target state="translated">PNG</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="36210f79c9877df688092c80b4449beec4ae7a53" translate="yes" xml:space="preserve">
          <source>POSIX Mode</source>
          <target state="translated">POSIX 모드</target>
        </trans-unit>
        <trans-unit id="371053627eba54c7112f96ae4464d07b2996c532" translate="yes" xml:space="preserve">
          <source>POSIXLY_CORRECT</source>
          <target state="translated">POSIXLY_CORRECT</target>
        </trans-unit>
        <trans-unit id="a6d1ae1ad8bbb837ec990dd2b2769a565ea46a1c" translate="yes" xml:space="preserve">
          <source>PPID</source>
          <target state="translated">PPID</target>
        </trans-unit>
        <trans-unit id="7840941760ebcd9fee13ec0f1666aa06fbb11bc3" translate="yes" xml:space="preserve">
          <source>PREAMBLE</source>
          <target state="translated">PREAMBLE</target>
        </trans-unit>
        <trans-unit id="0dac8aebac689487e61a61dc096c7a01df49d173" translate="yes" xml:space="preserve">
          <source>PREFIX/etc/config.site</source>
          <target state="translated">PREFIX/etc/config.site</target>
        </trans-unit>
        <trans-unit id="6a5cbc94cd76ba5c8832807baa0fc0bf7c997a10" translate="yes" xml:space="preserve">
          <source>PREFIX/share/config.site</source>
          <target state="translated">PREFIX/share/config.site</target>
        </trans-unit>
        <trans-unit id="c060f15f882e3ee78283a9b7c4755cef8c92042f" translate="yes" xml:space="preserve">
          <source>PROMPT_COMMAND</source>
          <target state="translated">PROMPT_COMMAND</target>
        </trans-unit>
        <trans-unit id="65c586382479ed3aee1d5e593475b33a6f6512e0" translate="yes" xml:space="preserve">
          <source>PROMPT_DIRTRIM</source>
          <target state="translated">PROMPT_DIRTRIM</target>
        </trans-unit>
        <trans-unit id="75e84f27359b6e1532aff10e667de38b8caa7fee" translate="yes" xml:space="preserve">
          <source>PS0</source>
          <target state="translated">PS0</target>
        </trans-unit>
        <trans-unit id="bea1acbf4638d6493b1a6d117690fc3e80d92c39" translate="yes" xml:space="preserve">
          <source>PS1</source>
          <target state="translated">PS1</target>
        </trans-unit>
        <trans-unit id="6c36a3937cd34e1cc700738b4a3722e6fe8cc7da" translate="yes" xml:space="preserve">
          <source>PS2</source>
          <target state="translated">PS2</target>
        </trans-unit>
        <trans-unit id="6aad362c34affb10125b8ea2c2d3edba6c00211b" translate="yes" xml:space="preserve">
          <source>PS3</source>
          <target state="translated">PS3</target>
        </trans-unit>
        <trans-unit id="19bb016b89021c10df6bd858a1255a4cae9181cb" translate="yes" xml:space="preserve">
          <source>PS4</source>
          <target state="translated">PS4</target>
        </trans-unit>
        <trans-unit id="f73e110427648014568f7144031a6d48060eab0a" translate="yes" xml:space="preserve">
          <source>PWD</source>
          <target state="translated">PWD</target>
        </trans-unit>
        <trans-unit id="dc376c9466a33946c4f972b93a88c847031ecc56" translate="yes" xml:space="preserve">
          <source>Parallel provides a built-in mechanism to remove filename extensions, which lends itself to batch file transformations or renaming:</source>
          <target state="translated">Parallel은 파일 이름 확장자를 제거하는 기본 제공 메커니즘을 제공하여 배치 파일 변환 또는 이름 변경에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="aa44e825207d5e6e2c87337e60831915ff38c62b" translate="yes" xml:space="preserve">
          <source>Parameter and Variable Index</source>
          <target state="translated">파라미터 및 변수 인덱스</target>
        </trans-unit>
        <trans-unit id="8e75ecaff140a404767edc575500a97bc4cd7639" translate="yes" xml:space="preserve">
          <source>Parameters and Variables</source>
          <target state="translated">매개 변수 및 변수</target>
        </trans-unit>
        <trans-unit id="d4a5c6a2bfebc6eda40b7b2940c3ae930c10de54" translate="yes" xml:space="preserve">
          <source>Parameters denoted by special characters.</source>
          <target state="translated">특수 문자로 표시되는 매개 변수.</target>
        </trans-unit>
        <trans-unit id="49f3e028dba674f0dcf953f185515ad3c0ace436" translate="yes" xml:space="preserve">
          <source>Parser syntax errors will not cause the shell to exit.</source>
          <target state="translated">파서 구문 오류로 인해 쉘이 종료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1238af3817e0654c2955768c1d8dfba6406a24d9" translate="yes" xml:space="preserve">
          <source>Parses the tokens into simple and compound commands (see &lt;a href=&quot;shell-commands&quot;&gt;Shell Commands&lt;/a&gt;).</source>
          <target state="translated">토큰을 단순 및 복합 명령으로 구문 분석합니다 ( &lt;a href=&quot;shell-commands&quot;&gt;쉘 명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8b239d04549c0c2e0f5845a6f6492f34cc6230c2" translate="yes" xml:space="preserve">
          <source>Parses the tokens into simple and compound commands (see &lt;a href=&quot;shell-commands#Shell-Commands&quot;&gt;Shell Commands&lt;/a&gt;).</source>
          <target state="translated">토큰을 단순 및 복합 명령으로 구문 분석합니다 ( &lt;a href=&quot;shell-commands#Shell-Commands&quot;&gt;쉘 명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8651e2cb1a7196435daa44c9ec8860271a8cecf7" translate="yes" xml:space="preserve">
          <source>Parsing the value of &lt;code&gt;SHELLOPTS&lt;/code&gt; from the shell environment at startup.</source>
          <target state="translated">시작시 쉘 환경에서 &lt;code&gt;SHELLOPTS&lt;/code&gt; 값을 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="535ab3a1c5459ace2d0b0bcb8fc022e58a4100d9" translate="yes" xml:space="preserve">
          <source>Pattern Matching</source>
          <target state="translated">패턴 매칭</target>
        </trans-unit>
        <trans-unit id="57df60c245dc6b4df31453d05e0317feb3c3c4c2" translate="yes" xml:space="preserve">
          <source>Perform alias expansion on the current line (see &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">현재 행에 별칭 확장을 수행합니다 ( &lt;a href=&quot;aliases&quot;&gt;별칭&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="33441ab464d849ec078472439c7ed257ed7642d8" translate="yes" xml:space="preserve">
          <source>Perform alias expansion on the current line (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">현재 행에 별칭 확장을 수행합니다 ( &lt;a href=&quot;aliases#Aliases&quot;&gt;별칭&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7acc1d7a6009b9fbf53f3628042bf9b78cdab1ad" translate="yes" xml:space="preserve">
          <source>Perform directory name completion if the compspec generates no matches.</source>
          <target state="translated">compspec이 일치하는 항목을 생성하지 않으면 디렉토리 이름 완성을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="732db950712c365a37a31763b1f0298d693d2eda" translate="yes" xml:space="preserve">
          <source>Perform filename completion and insert the list of possible completions enclosed within braces so the list is available to the shell (see &lt;a href=&quot;brace-expansion&quot;&gt;Brace Expansion&lt;/a&gt;).</source>
          <target state="translated">파일 이름 완성을 수행하고 셸에서 목록을 사용할 수 있도록 중괄호로 묶인 가능한 완성 목록을 삽입합니다 ( &lt;a href=&quot;brace-expansion&quot;&gt;Brace Expansion&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d0ee075401ecbb7710373d6e9ae9f23c4921e03f" translate="yes" xml:space="preserve">
          <source>Perform filename completion and insert the list of possible completions enclosed within braces so the list is available to the shell (see &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;).</source>
          <target state="translated">파일 이름 완성을 수행하고 중괄호로 묶은 가능한 완성 목록을 삽입하여 목록을 쉘에서 사용할 수 있도록하십시오 ( &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;브레이스 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="92c44efdc4824b35de3ac1b5eff4d18f4827ecd6" translate="yes" xml:space="preserve">
          <source>Perform history and alias expansion on the current line.</source>
          <target state="translated">현재 행에서 히스토리 및 별명 확장을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="82cfac9f5668eab172ea7595634aa46b40c4e9f5" translate="yes" xml:space="preserve">
          <source>Perform history expansion on the current line and insert a space (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">현재 행에서 히스토리 확장을 수행하고 공백을 삽입하십시오 ( &lt;a href=&quot;history-interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ebd4dd29b0b99da43be7e88b436304dc9c718008" translate="yes" xml:space="preserve">
          <source>Perform history expansion on the current line and insert a space (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">현재 행에서 히스토리 확장을 수행하고 공백을 삽입하십시오 ( &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="87d6be2655fa082259da2ba5288a00d313ba515b" translate="yes" xml:space="preserve">
          <source>Perform history expansion on the current line.</source>
          <target state="translated">현재 행에서 히스토리 확장을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="92982c52c4e88da6d39ee367423900c1c347d781" translate="yes" xml:space="preserve">
          <source>Perform history substitution on the &lt;var&gt;arg&lt;/var&gt;s and display the result on the standard output, without storing the results in the history list.</source>
          <target state="translated">&lt;var&gt;arg&lt;/var&gt; 에서 히스토리 대체를 수행 하고 히스토리 목록에 결과를 저장하지 않고 표준 출력에 결과를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="d1bbb001cd048992a7ed9ef590e9403c1e499b2f" translate="yes" xml:space="preserve">
          <source>Perform the rest of the default Bash completions if the compspec generates no matches.</source>
          <target state="translated">compspec이 일치하는 항목을 생성하지 않으면 나머지 기본 Bash 완료를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="eecde23b59a01486182ed6efdd5c7f5843bef96f" translate="yes" xml:space="preserve">
          <source>Perform tilde expansion on the current word.</source>
          <target state="translated">현재 단어에 물결표 확장을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="4ff2b3f3126577a30e48e3942aa57a2bce00c39a" translate="yes" xml:space="preserve">
          <source>Performs any necessary redirections (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;) and removes the redirection operators and their operands from the argument list.</source>
          <target state="translated">수행이 필요한 리디렉션 (참고 &lt;a href=&quot;redirections&quot;&gt;리디렉션을&lt;/a&gt; ) 인수 목록에서 리디렉션 연산자와 피연산자를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="d545fbb92646613a09ad066fdf580ae09d740fdd" translate="yes" xml:space="preserve">
          <source>Performs any necessary redirections (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;) and removes the redirection operators and their operands from the argument list.</source>
          <target state="translated">수행이 필요한 리디렉션 (참고 &lt;a href=&quot;redirections#Redirections&quot;&gt;리디렉션을&lt;/a&gt; ) 인수 목록에서 리디렉션 연산자와 피연산자를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1eae0d72f29108c92353fd4f063253c388dcdc13" translate="yes" xml:space="preserve">
          <source>Performs the various shell expansions (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;), breaking the expanded tokens into lists of filenames (see &lt;a href=&quot;filename-expansion&quot;&gt;Filename Expansion&lt;/a&gt;) and commands and arguments.</source>
          <target state="translated">다양한 셸 확장 ( &lt;a href=&quot;shell-expansions&quot;&gt;셸 확장&lt;/a&gt; 참조)을 수행하여 확장 된 토큰을 파일 이름 목록 ( &lt;a href=&quot;filename-expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 )과 명령 및 인수 로 나눕니다 .</target>
        </trans-unit>
        <trans-unit id="19f85558b90ce509bef028a8bda95ab6ac9e329a" translate="yes" xml:space="preserve">
          <source>Performs the various shell expansions (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;), breaking the expanded tokens into lists of filenames (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;) and commands and arguments.</source>
          <target state="translated">수행하는 다양한 쉘 확장 (참조 &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;쉘 확장이&lt;/a&gt; ), 파일 이름 (참조 목록에 확장 된 토큰을 깨는 &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;파일 이름 확장을&lt;/a&gt; ) 및 명령 및 인수.</target>
        </trans-unit>
        <trans-unit id="c5df1e14fdba13b1a3f9690f736bcb2aac132e72" translate="yes" xml:space="preserve">
          <source>Pipelines</source>
          <target state="translated">Pipelines</target>
        </trans-unit>
        <trans-unit id="83bd454ad11177553299716427482ee2e807bf81" translate="yes" xml:space="preserve">
          <source>Placing a list of commands between curly braces causes the list to be executed in the current shell context. No subshell is created. The semicolon (or newline) following &lt;var&gt;list&lt;/var&gt; is required.</source>
          <target state="translated">중괄호 사이에 명령 목록을 배치하면 현재 쉘 컨텍스트에서 목록이 실행됩니다. 서브 쉘이 작성되지 않습니다. 세미콜론 (또는 줄 바꿈) 다음 &lt;var&gt;list&lt;/var&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c64080b6085bc3c29408c2016bf8b84d70f6f399" translate="yes" xml:space="preserve">
          <source>Placing a list of commands between parentheses causes a subshell environment to be created (see &lt;a href=&quot;command-execution-environment&quot;&gt;Command Execution Environment&lt;/a&gt;), and each of the commands in &lt;var&gt;list&lt;/var&gt; to be executed in that subshell. Since the &lt;var&gt;list&lt;/var&gt; is executed in a subshell, variable assignments do not remain in effect after the subshell completes.</source>
          <target state="translated">괄호 사이에 명령 목록을 배치하면 서브 쉘 환경이 생성되고 ( &lt;a href=&quot;command-execution-environment&quot;&gt;명령 실행 환경&lt;/a&gt; 참조 ) &lt;var&gt;list&lt;/var&gt; 각 명령 이 해당 서브 쉘에서 실행됩니다. &lt;var&gt;list&lt;/var&gt; 이 서브 쉘에서 실행 되기 때문에 변수 할당은 서브 쉘이 완료된 후에도 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="880c8d044e4fbccf8e2c6f06679d9a1927a1878b" translate="yes" xml:space="preserve">
          <source>Placing a list of commands between parentheses causes a subshell environment to be created (see &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;Command Execution Environment&lt;/a&gt;), and each of the commands in &lt;var&gt;list&lt;/var&gt; to be executed in that subshell. Since the &lt;var&gt;list&lt;/var&gt; is executed in a subshell, variable assignments do not remain in effect after the subshell completes.</source>
          <target state="translated">괄호 사이에 명령 목록을 배치하면 서브 쉘 환경이 작성되고 ( &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;명령 실행 환경&lt;/a&gt; 참조 ) &lt;var&gt;list&lt;/var&gt; 각 명령 이 해당 서브 쉘에서 실행됩니다. &lt;var&gt;list&lt;/var&gt; 이 서브 쉘에서 실행 되기 때문에 변수 지정은 서브 쉘이 완료된 후에도 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f1fd18067343152339e9143fee4118fd28d9b95" translate="yes" xml:space="preserve">
          <source>Please report all bugs you find in Bash. But first, you should make sure that it really is a bug, and that it appears in the latest version of Bash. The latest version of Bash is always available for FTP from &lt;a href=&quot;ftp://ftp.gnu.org/pub/gnu/bash/&quot;&gt;ftp://ftp.gnu.org/pub/gnu/bash/&lt;/a&gt;.</source>
          <target state="translated">Bash에서 찾은 모든 버그를보고하십시오. 그러나 먼저 버그인지 확인하고 최신 버전의 Bash에 버그가 있는지 확인해야합니다. Bash의 최신 버전은 항상 &lt;a href=&quot;ftp://ftp.gnu.org/pub/gnu/bash/&quot;&gt;ftp://ftp.gnu.org/pub/gnu/bash/&lt;/a&gt; 에서 FTP에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="511d735aa35cdf8e795b9937986ccbdbb6381baf" translate="yes" xml:space="preserve">
          <source>Please send all reports concerning this manual to &lt;a href=&quot;mailto:bug-bash@gnu.org&quot;&gt;bug-bash@gnu.org&lt;/a&gt;.</source>
          <target state="translated">이 매뉴얼에 관한 모든 보고서를 &lt;a href=&quot;mailto:bug-bash@gnu.org&quot;&gt;bug-bash@gnu.org로&lt;/a&gt; 보내주십시오 .</target>
        </trans-unit>
        <trans-unit id="0409ca1ed07e3ea1190ff159179e055a95170973" translate="yes" xml:space="preserve">
          <source>Positional Parameters</source>
          <target state="translated">위치 매개 변수</target>
        </trans-unit>
        <trans-unit id="b670406f48db3c38c8321037fdcfd4db2850ca9f" translate="yes" xml:space="preserve">
          <source>Possible completions go into the &lt;var&gt;COMPREPLY&lt;/var&gt; array variable, one completion per array element. The programmable completion system retrieves the completions from there when the function returns.</source>
          <target state="translated">가능한 완료는 &lt;var&gt;COMPREPLY&lt;/var&gt; 배열 변수로, 배열 요소 당 하나의 완료입니다. 프로그램 가능 완료 시스템은 함수가 리턴 될 때 완료를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="8320940a96a5a393d94b9b77bd893ee58704973c" translate="yes" xml:space="preserve">
          <source>Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.</source>
          <target state="translated">문서의 모든 고정 섹션을 텍스트와 제목으로 변경하지 마십시오. 섹션 번호 또는 이에 상응하는 섹션은 섹션 제목의 일부로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b04c7d12d9703e639a0203d9c985db37387cac15" translate="yes" xml:space="preserve">
          <source>Preserve all the copyright notices of the Document.</source>
          <target state="translated">문서의 모든 저작권 표시를 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="5051a88a1d0d3ba638df6ea419ccd1ae7f60d6b6" translate="yes" xml:space="preserve">
          <source>Preserve any Warranty Disclaimers.</source>
          <target state="translated">보증 면책 사항을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="34c134b6a9e8fed47c8697f7e99d46697aacfda5" translate="yes" xml:space="preserve">
          <source>Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document&amp;rsquo;s license notice.</source>
          <target state="translated">해당 라이센스 통지에서 문서의 라이센스 통지에 제공된 불변 섹션 및 필수 표지 텍스트의 전체 목록을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="4a9bef098dcea53925fd46969413eda7810fed69" translate="yes" xml:space="preserve">
          <source>Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the &amp;ldquo;History&amp;rdquo; section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.</source>
          <target state="translated">문서의 투명한 사본에 공개적으로 액세스 할 수 있도록 문서에 제공된 네트워크 위치 (있는 경우)와 이전 버전의 문서에 제공된 네트워크 위치를 유지하십시오. 이것들은&amp;ldquo;역사&amp;rdquo;섹션에 배치 될 수 있습니다. 문서 자체보다 최소 4 년 전에 출판 된 저작물에 대한 네트워크 위치를 생략하거나 해당 버전의 최초 발행인이 허가 한 경우에는 네트워크 위치를 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7230944595b16832a48eed067321909e9c8e1c41" translate="yes" xml:space="preserve">
          <source>Preserve the section Entitled &amp;ldquo;History&amp;rdquo;, Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled &amp;ldquo;History&amp;rdquo; in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.</source>
          <target state="translated">&quot;역사&quot;라는 제목의 섹션을 보존하고 제목을 보존 한 다음 제목 페이지에 제공된대로 수정 된 버전의 제목, 연도, 새 저자 및 게시자를 나타내는 항목을 추가하십시오. 문서에 &quot;역사&quot;라는 제목의 섹션이없는 경우 제목 페이지에 주어진대로 문서의 제목, 연도, 저자 및 발행자를 나타내는 섹션을 만든 다음 이전 문장에서 설명한대로 수정 된 버전을 설명하는 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3f89dd9d9837e075d78374d4ecf26b73966b821c" translate="yes" xml:space="preserve">
          <source>Prevent output redirection using &amp;lsquo;</source>
          <target state="translated">'를 사용하여 출력 리디렉션 방지</target>
        </trans-unit>
        <trans-unit id="f3da23b411641bd13de7a7c7d09b9ed8c5419c67" translate="yes" xml:space="preserve">
          <source>Primitives used in composing expressions for the &lt;code&gt;test&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 내장에 대한 표현식 작성에 사용되는 기본 요소.</target>
        </trans-unit>
        <trans-unit id="8f1e0197c2d110325ba2a6f7b55538971aa97161" translate="yes" xml:space="preserve">
          <source>Print a summary of the options to &lt;code&gt;configure&lt;/code&gt;, and exit.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 옵션 요약을 인쇄 하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="2bd67ec0e598053aa289b95ce99f4f6f6251ee3e" translate="yes" xml:space="preserve">
          <source>Print a trace of simple commands, &lt;code&gt;for&lt;/code&gt; commands, &lt;code&gt;case&lt;/code&gt; commands, &lt;code&gt;select&lt;/code&gt; commands, and arithmetic &lt;code&gt;for&lt;/code&gt; commands and their arguments or associated word lists after they are expanded and before they are executed. The value of the &lt;code&gt;PS4&lt;/code&gt; variable is expanded and the resultant value is printed before the command and its expanded arguments.</source>
          <target state="translated">, 간단한 명령의 추적을 인쇄하기 &lt;code&gt;for&lt;/code&gt; 명령 &lt;code&gt;case&lt;/code&gt; 명령, &lt;code&gt;select&lt;/code&gt; 명령 및 연산 &lt;code&gt;for&lt;/code&gt; 명령과 인수 또는 관련 단어 목록들이 확장 후 그들은이 실행되기 전에. &lt;code&gt;PS4&lt;/code&gt; 변수 의 값 이 확장되고 결과 값이 명령 및 확장 된 인수 앞에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="ad45eadb9ff5f2beddd8cd5428d107bf917519eb" translate="yes" xml:space="preserve">
          <source>Print all of the Readline key sequences bound to macros and the strings they output. If a numeric argument is supplied, the output is formatted in such a way that it can be made part of an &lt;var&gt;inputrc&lt;/var&gt; file. This command is unbound by default.</source>
          <target state="translated">매크로에 바인딩 된 모든 Readline 키 시퀀스와 이들이 출력하는 문자열을 인쇄하십시오. 숫자 인수가 제공되면 출력은 &lt;var&gt;inputrc&lt;/var&gt; 파일의 일부가 될 수 있도록 형식화 됩니다. 이 명령은 기본적으로 언 바운드입니다.</target>
        </trans-unit>
        <trans-unit id="b20400dac0d04d07bbe8ec2453627f6dd8a219a4" translate="yes" xml:space="preserve">
          <source>Print all of the functions and their key bindings to the Readline output stream. If a numeric argument is supplied, the output is formatted in such a way that it can be made part of an &lt;var&gt;inputrc&lt;/var&gt; file. This command is unbound by default.</source>
          <target state="translated">모든 기능과 해당 키 바인딩을 Readline 출력 스트림에 인쇄하십시오. 숫자 인수가 제공되면 출력은 &lt;var&gt;inputrc&lt;/var&gt; 파일의 일부가 될 수 있도록 형식화 됩니다. 이 명령은 기본적으로 언 바운드입니다.</target>
        </trans-unit>
        <trans-unit id="c63a0c5cbb1a50241f4d040a510c95dcd2d95e28" translate="yes" xml:space="preserve">
          <source>Print all of the settable variables and their values to the Readline output stream. If a numeric argument is supplied, the output is formatted in such a way that it can be made part of an &lt;var&gt;inputrc&lt;/var&gt; file. This command is unbound by default.</source>
          <target state="translated">설정 가능한 모든 변수 및 해당 값을 Readline 출력 스트림에 인쇄하십시오. 숫자 인수가 제공되면 출력은 &lt;var&gt;inputrc&lt;/var&gt; 파일의 일부가 될 수 있도록 형식화 됩니다. 이 명령은 기본적으로 언 바운드입니다.</target>
        </trans-unit>
        <trans-unit id="dc05f20b16adac2932d98cdb9236fa494b542ce0" translate="yes" xml:space="preserve">
          <source>Print out the user and system times used by the shell and its children. The return status is zero.</source>
          <target state="translated">쉘과 그 자식이 사용하는 사용자 및 시스템 시간을 인쇄하십시오. 반환 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="93a7cede8f62da0b88c4d9e5ccc03126e81aed81" translate="yes" xml:space="preserve">
          <source>Print shell input lines as they are read.</source>
          <target state="translated">쉘 입력 라인을 읽을 때 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="de6551f6f1c9f4922ea13535415e2434d52a56f0" translate="yes" xml:space="preserve">
          <source>Print the absolute pathname of the current working directory. If the</source>
          <target state="translated">현재 작업 디렉토리의 절대 경로 이름을 인쇄하십시오. 만약</target>
        </trans-unit>
        <trans-unit id="c5b8c7b9692e19cea248883b471cbe4a02b15c52" translate="yes" xml:space="preserve">
          <source>Print the last keboard macro defined in a format suitable for the &lt;var&gt;inputrc&lt;/var&gt; file.</source>
          <target state="translated">&lt;var&gt;inputrc&lt;/var&gt; 파일에 적합한 형식으로 정의 된 마지막 keboard 매크로를 인쇄 하십시오.</target>
        </trans-unit>
        <trans-unit id="f1ac9e83a0f06f24c4a46e0daf4f42f78012ac3b" translate="yes" xml:space="preserve">
          <source>Print the new command but do not execute it.</source>
          <target state="translated">새 명령을 인쇄하되 실행하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="d22f1122bdb02ccdf4ab890794c7a933be774dd7" translate="yes" xml:space="preserve">
          <source>Print the version of Autoconf used to generate the &lt;code&gt;configure&lt;/code&gt; script, and exit.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 스크립트 를 생성하는 데 사용 된 Autoconf 버전을 인쇄 하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="980800df05b44d2cf0c16777388d774fa898f7a7" translate="yes" xml:space="preserve">
          <source>Printing characters</source>
          <target state="translated">문자 인쇄</target>
        </trans-unit>
        <trans-unit id="f000b74b7957bff2ef870cdba3820ca491152372" translate="yes" xml:space="preserve">
          <source>Process Substitution</source>
          <target state="translated">프로세스 대체</target>
        </trans-unit>
        <trans-unit id="013dc2c5fbd740b5ac32750d97bea26d044c5ae2" translate="yes" xml:space="preserve">
          <source>Process substitution allows a process&amp;rsquo;s input or output to be referred to using a filename. It takes the form of</source>
          <target state="translated">프로세스 대체는 파일 이름을 사용하여 프로세스의 입력 또는 출력을 참조 할 수있게합니다. 그것은 형태를 취합니다</target>
        </trans-unit>
        <trans-unit id="a92173381a2ba794486d76e958eb41414380ba76" translate="yes" xml:space="preserve">
          <source>Process substitution is not available.</source>
          <target state="translated">프로세스 대체를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd421c0355cbf93d24d93d62eb09630ecdd30cf0" translate="yes" xml:space="preserve">
          <source>Produces a listing using full pathnames; the default listing format uses a tilde to denote the home directory.</source>
          <target state="translated">전체 경로 이름을 사용하여 리스팅을 생성합니다. 기본 리스팅 형식은 물결표를 사용하여 홈 디렉토리를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cec9ec98bfa65b1d744cec67c5e240db5ad829b3" translate="yes" xml:space="preserve">
          <source>Produces a possibly-quoted version of the value of &lt;var&gt;parameter&lt;/var&gt;, except that it prints the values of indexed and associative arrays as a sequence of quoted key-value pairs (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">따옴표 붙은 키-값 쌍의 시퀀스로 인덱스 및 연관 배열의 값을 인쇄한다는 점을 제외하고 &lt;var&gt;parameter&lt;/var&gt; 값의 따옴표가 붙은 버전을 생성합니다 ( &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="60641a34941124c5041d84772ebca73870f169c6" translate="yes" xml:space="preserve">
          <source>Programmable Completion</source>
          <target state="translated">프로그래밍 가능 완료</target>
        </trans-unit>
        <trans-unit id="e15950a5b29b4b75ebc762ca8ca7e07eabe9b20a" translate="yes" xml:space="preserve">
          <source>Programmable Completion Builtins</source>
          <target state="translated">프로그래밍 가능 완료 내장</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="c1c64ae43679154571b2a33870f841e34a17548c" translate="yes" xml:space="preserve">
          <source>Query about which keys invoke the named &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">쿼리는 대한 키는 이름 호출 &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f6d2eaf8d92d9910a1d8e4545fc4a145f3ff581d" translate="yes" xml:space="preserve">
          <source>Quick Substitution. Repeat the last command, replacing &lt;var&gt;string1&lt;/var&gt; with &lt;var&gt;string2&lt;/var&gt;. Equivalent to &lt;code&gt;!!:s/&lt;var&gt;string1&lt;/var&gt;/&lt;var&gt;string2&lt;/var&gt;/&lt;/code&gt;.</source>
          <target state="translated">빠른 대체. &lt;var&gt;string1&lt;/var&gt; 을 &lt;var&gt;string2&lt;/var&gt; 로 바꾸어 마지막 명령을 반복하십시오 . 에 해당 &lt;code&gt;!!:s/&lt;var&gt;string1&lt;/var&gt;/&lt;var&gt;string2&lt;/var&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e52343182f2c0665c53af49af07ebb324a79b4ed" translate="yes" xml:space="preserve">
          <source>Quick Substitution. Repeat the last command, replacing &lt;var&gt;string1&lt;/var&gt; with &lt;var&gt;string2&lt;/var&gt;. Equivalent to &lt;code&gt;!!:s^&lt;var&gt;string1&lt;/var&gt;^&lt;var&gt;string2&lt;/var&gt;^&lt;/code&gt;.</source>
          <target state="translated">빠른 교체. &lt;var&gt;string1&lt;/var&gt; 을 &lt;var&gt;string2&lt;/var&gt; 로 바꾸면서 마지막 명령을 반복합니다 . &lt;code&gt;!!:s^&lt;var&gt;string1&lt;/var&gt;^&lt;var&gt;string2&lt;/var&gt;^&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3400051fed470fd58342025a3abd443fba332085" translate="yes" xml:space="preserve">
          <source>Quick reference helps you find the variable you want.</source>
          <target state="translated">빠른 참조는 원하는 변수를 찾는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="de6ea4557b8a6432ecd91c9e6dca8f09d4cd4574" translate="yes" xml:space="preserve">
          <source>Quote Removal</source>
          <target state="translated">견적 제거</target>
        </trans-unit>
        <trans-unit id="82ee851defe1bbeb88b04238828fd723597cfccb" translate="yes" xml:space="preserve">
          <source>Quote the substituted words as with &amp;lsquo;</source>
          <target state="translated">'로 대체 단어를 인용</target>
        </trans-unit>
        <trans-unit id="e7e21b544b7be41554eedb4686a78c96755ea286" translate="yes" xml:space="preserve">
          <source>Quote the substituted words, escaping further substitutions.</source>
          <target state="translated">더 많은 치환을 피하면서 대체 단어를 인용하십시오.</target>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="translated">Quoting</target>
        </trans-unit>
        <trans-unit id="b614a6ab4c2f711b098f9953e8dbf8256069bb53" translate="yes" xml:space="preserve">
          <source>Quoting is used to remove the special meaning of certain characters or words to the shell. Quoting can be used to disable special treatment for special characters, to prevent reserved words from being recognized as such, and to prevent parameter expansion.</source>
          <target state="translated">인용은 특정 문자 나 단어가 쉘에 특수한 의미를 제거하는 데 사용됩니다. 인용은 특수 문자에 대한 특수 처리를 비활성화하고 예약어가 인식되지 않도록하고 매개 변수 확장을 방지하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="620db5d9320e96ee12d500dbe6be7488db8de087" translate="yes" xml:space="preserve">
          <source>RANDOM</source>
          <target state="translated">RANDOM</target>
        </trans-unit>
        <trans-unit id="5b7d4f90ab7579ba47fd72552bbd12a36e1b1a42" translate="yes" xml:space="preserve">
          <source>READLINE_LINE</source>
          <target state="translated">READLINE_LINE</target>
        </trans-unit>
        <trans-unit id="22f8b14a471441552448600c585ee10c81f084fe" translate="yes" xml:space="preserve">
          <source>READLINE_POINT</source>
          <target state="translated">READLINE_POINT</target>
        </trans-unit>
        <trans-unit id="dd58914034f8d43f811e6c4cbf40eecb5c44dd6b" translate="yes" xml:space="preserve">
          <source>RELICENSING</source>
          <target state="translated">RELICENSING</target>
        </trans-unit>
        <trans-unit id="96811522556566b6c0f58c8139f40c055be32a9e" translate="yes" xml:space="preserve">
          <source>REPLY</source>
          <target state="translated">REPLY</target>
        </trans-unit>
        <trans-unit id="e8e92a165d03aa131d9708cb7b1c7f471a2ab809" translate="yes" xml:space="preserve">
          <source>Re-execute the last keyboard macro defined, by making the characters in the macro appear as if typed at the keyboard.</source>
          <target state="translated">매크로의 문자를 키보드에서 입력 한 것처럼 보이게하여 정의 된 마지막 키보드 매크로를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="effb4933fa2e63251b68ec5d7c1e666532352f06" translate="yes" xml:space="preserve">
          <source>Read and execute commands from the &lt;var&gt;filename&lt;/var&gt; argument in the current shell context. If &lt;var&gt;filename&lt;/var&gt; does not contain a slash, the &lt;code&gt;PATH&lt;/code&gt; variable is used to find &lt;var&gt;filename&lt;/var&gt;. When Bash is not in &lt;small&gt;POSIX&lt;/small&gt; mode, the current directory is searched if &lt;var&gt;filename&lt;/var&gt; is not found in &lt;code&gt;$PATH&lt;/code&gt;. If any &lt;var&gt;arguments&lt;/var&gt; are supplied, they become the positional parameters when &lt;var&gt;filename&lt;/var&gt; is executed. Otherwise the positional parameters are unchanged. If the</source>
          <target state="translated">현재 쉘 컨텍스트 의 &lt;var&gt;filename&lt;/var&gt; 인수에서 명령을 읽고 실행하십시오 . 경우 &lt;var&gt;filename&lt;/var&gt; 슬래시를 포함하지 않는의 &lt;code&gt;PATH&lt;/code&gt; 의 변수를 찾는 데 사용되는 &lt;var&gt;filename&lt;/var&gt; . Bash가 &lt;small&gt;POSIX&lt;/small&gt; 모드 가 아닌 경우 &lt;code&gt;$PATH&lt;/code&gt; 에 &lt;var&gt;filename&lt;/var&gt; 이 없으면 현재 디렉토리가 검색됩니다 . 어떤 경우 &lt;var&gt;arguments&lt;/var&gt; 공급 될 때, 그들은 위치 매개 변수가 될 &lt;var&gt;filename&lt;/var&gt; 실행됩니다. 그렇지 않으면 위치 매개 변수가 변경되지 않습니다. 만약</target>
        </trans-unit>
        <trans-unit id="2eff02ab161dba3b794244a0b2a0bc9292837ec4" translate="yes" xml:space="preserve">
          <source>Read and execute commands from the first non-option argument &lt;var&gt;command_string&lt;/var&gt;, then exit. If there are arguments after the &lt;var&gt;command_string&lt;/var&gt;, the first argument is assigned to &lt;code&gt;$0&lt;/code&gt; and any remaining arguments are assigned to the positional parameters. The assignment to &lt;code&gt;$0&lt;/code&gt; sets the name of the shell, which is used in warning and error messages.</source>
          <target state="translated">첫 번째 비 옵션 인수 &lt;var&gt;command_string&lt;/var&gt; 에서 명령을 읽고 실행 한 다음 종료하십시오. &lt;var&gt;command_string&lt;/var&gt; 뒤에 인수가 있으면 첫 번째 인수는 &lt;code&gt;$0&lt;/code&gt; 지정되고 나머지 인수는 위치 매개 변수에 지정됩니다. &lt;code&gt;$0&lt;/code&gt; 할당하면 경고 및 오류 메시지에 사용되는 쉘 이름이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="064334f8adba9fdde25b49ab67f4bcb15b2119a9" translate="yes" xml:space="preserve">
          <source>Read commands but do not execute them. This may be used to check a script for syntax errors. This option is ignored by interactive shells.</source>
          <target state="translated">명령을 읽지 만 실행하지는 마십시오. 스크립트에서 구문 오류를 확인하는 데 사용될 수 있습니다. 이 옵션은 대화식 쉘에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9e73a2935bf6fb41cc58a84fc8cf51a963e7d201" translate="yes" xml:space="preserve">
          <source>Read enough characters to consume a multi-key sequence such as those defined for keys like Home and End. Such sequences begin with a Control Sequence Indicator (CSI), usually ESC-[. If this sequence is bound to &quot;\e[&quot;, keys producing such sequences will have no effect unless explicitly bound to a readline command, instead of inserting stray characters into the editing buffer. This is unbound by default, but usually bound to ESC-[.</source>
          <target state="translated">Home 및 End와 같은 키에 대해 정의 된 것과 같은 다중 키 시퀀스를 사용하기에 충분한 문자를 읽으십시오. 이러한 시퀀스는 제어 시퀀스 표시기 (CSI), 일반적으로 ESC- [로 시작합니다. 이 시퀀스가 ​​&quot;\ e [&quot;에 바인딩 된 경우 이러한 시퀀스를 생성하는 키는 편집 버퍼에 스트레이 문자를 삽입하는 대신 readline 명령에 명시 적으로 바인딩하지 않는 한 효과가 없습니다. 기본적으로 언 바운드이지만 일반적으로 ESC- [에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="d34d335e5bc252cd69cecf72f39700bbaeb2dc41" translate="yes" xml:space="preserve">
          <source>Read in the contents of the &lt;var&gt;inputrc&lt;/var&gt; file, and incorporate any bindings or variable assignments found there.</source>
          <target state="translated">&lt;var&gt;inputrc&lt;/var&gt; 파일 의 내용을 읽고 거기에있는 바인딩 또는 변수 지정을 통합하십시오.</target>
        </trans-unit>
        <trans-unit id="6081c7addda7dc2289b87dbc3e34e9c332c8561a" translate="yes" xml:space="preserve">
          <source>Read input from file descriptor &lt;var&gt;fd&lt;/var&gt;.</source>
          <target state="translated">파일 디스크립터 &lt;var&gt;fd&lt;/var&gt; 에서 입력을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="53dd130d1ca5c7f7d16fcfff718d3381664c95a2" translate="yes" xml:space="preserve">
          <source>Read key bindings from &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; 에서 키 바인딩을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="677d8e8943ea53986371b81b8f47e29921cf16bd" translate="yes" xml:space="preserve">
          <source>Read lines from file descriptor &lt;var&gt;fd&lt;/var&gt; instead of the standard input.</source>
          <target state="translated">표준 입력 대신 파일 디스크립터 &lt;var&gt;fd&lt;/var&gt; 에서 행을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="af2bcc27cab2e2e77b3992f61038ebbb6898f003" translate="yes" xml:space="preserve">
          <source>Read lines from the standard input into the indexed array variable &lt;var&gt;array&lt;/var&gt;, or from file descriptor &lt;var&gt;fd&lt;/var&gt; if the</source>
          <target state="translated">표준 입력에서 색인 배열 변수 &lt;var&gt;array&lt;/var&gt; 또는 파일 디스크립터 &lt;var&gt;fd&lt;/var&gt; 에서 행을 읽 습니다.</target>
        </trans-unit>
        <trans-unit id="e2c476854ed7896dda238661313fba6c31a993cf" translate="yes" xml:space="preserve">
          <source>Read the history file and append its contents to the history list.</source>
          <target state="translated">히스토리 파일을 읽고 그 내용을 히스토리 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8be812646ee55cd570a425856591b7b25856a9b0" translate="yes" xml:space="preserve">
          <source>Readline (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings, but uses Readline&amp;rsquo;s default filename completion.</source>
          <target state="translated">Readline ( &lt;a href=&quot;command-line-editing&quot;&gt;명령 줄 편집&lt;/a&gt; 참조 )은 해당 줄을 가져 오는 데 사용됩니다. Readline은 현재 (또는 라인 편집이 이전에 활성화되지 않은 경우 기본값) 편집 설정을 사용하지만 Readline의 기본 파일 이름 완성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9d317b15d206902ec4041c9f6a3ee7f48520ff99" translate="yes" xml:space="preserve">
          <source>Readline (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;) is used to read commands from the user&amp;rsquo;s terminal.</source>
          <target state="translated">Readline ( &lt;a href=&quot;command-line-editing&quot;&gt;명령 줄 편집&lt;/a&gt; 참조 )은 사용자의 터미널에서 명령을 읽는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8cac7cbc61675da18b7360c1c19859cf8f5a1347" translate="yes" xml:space="preserve">
          <source>Readline (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings, but uses Readline&amp;rsquo;s default filename completion.</source>
          <target state="translated">리드 &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;라인&lt;/a&gt; ( 명령 행 편집 참조 )은 행을 얻는 데 사용됩니다. Readline은 현재 (또는 라인 편집이 이전에 활성화되지 않은 경우 기본값) 편집 설정을 사용하지만 Readline의 기본 파일 이름 완성을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d9261d989954c7b7046d8d5da35a3d9f72189977" translate="yes" xml:space="preserve">
          <source>Readline (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) is used to read commands from the user&amp;rsquo;s terminal.</source>
          <target state="translated">리드 &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;라인&lt;/a&gt; ( 명령 행 편집 참조 )은 사용자 터미널에서 명령을 읽는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5256cf04581ccfb8e3e4bad7821c27f7a316efeb" translate="yes" xml:space="preserve">
          <source>Readline Arguments</source>
          <target state="translated">리드 라인 인수</target>
        </trans-unit>
        <trans-unit id="5a0701dc1691b7daac3ceb46b2c6261b38565130" translate="yes" xml:space="preserve">
          <source>Readline Bare Essentials</source>
          <target state="translated">Readline Bare Essentials</target>
        </trans-unit>
        <trans-unit id="aa539124a0b26985cf24459007eb176e1472b9ce" translate="yes" xml:space="preserve">
          <source>Readline Init File</source>
          <target state="translated">Readline Init 파일</target>
        </trans-unit>
        <trans-unit id="8eeafb8ffd3a28e649f315c515c556710224b974" translate="yes" xml:space="preserve">
          <source>Readline Init File Syntax</source>
          <target state="translated">Readline Init 파일 구문</target>
        </trans-unit>
        <trans-unit id="2b4635fa3d81a11b04ec5366f497bc2cbc272a80" translate="yes" xml:space="preserve">
          <source>Readline Interaction</source>
          <target state="translated">리드 라인 상호 작용</target>
        </trans-unit>
        <trans-unit id="f45f73f8a5a1231bda11292c25f939251f409e63" translate="yes" xml:space="preserve">
          <source>Readline Killing Commands</source>
          <target state="translated">readline killing 명령</target>
        </trans-unit>
        <trans-unit id="1e74a61d5c8b53ac10a08e8ad8f34d3d84624c96" translate="yes" xml:space="preserve">
          <source>Readline Movement Commands</source>
          <target state="translated">리드 라인 이동 명령</target>
        </trans-unit>
        <trans-unit id="8fb986ce2f2603aea51cd70ffa80dc262027988b" translate="yes" xml:space="preserve">
          <source>Readline implements a facility similar in spirit to the conditional compilation features of the C preprocessor which allows key bindings and variable settings to be performed as the result of tests. There are four parser directives used.</source>
          <target state="translated">Readline은 테스트 결과 키 바인딩 및 변수 설정을 수행 할 수있는 C 프리 프로세서의 조건부 컴파일 기능과 유사한 기능을 구현합니다. 사용되는 4 개의 파서 지시문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f8f4cccac0e614405fabf31cee41ea6dd6fb603" translate="yes" xml:space="preserve">
          <source>Readline key binding names (see &lt;a href=&quot;bindable-readline-commands&quot;&gt;Bindable Readline Commands&lt;/a&gt;).</source>
          <target state="translated">Readline 키 바인딩 이름 ( &lt;a href=&quot;bindable-readline-commands&quot;&gt;바인딩 가능한 Readline 명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e4ea0f277c4a16a18a17b56da2260a8684cbe982" translate="yes" xml:space="preserve">
          <source>Readline key binding names (see &lt;a href=&quot;bindable-readline-commands#Bindable-Readline-Commands&quot;&gt;Bindable Readline Commands&lt;/a&gt;).</source>
          <target state="translated">리드 라인 키 바인딩 이름 (바인드 가능한 &lt;a href=&quot;bindable-readline-commands#Bindable-Readline-Commands&quot;&gt;리드 라인 명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3b515ee973a05d1e4196d09089957f69579ccd3e" translate="yes" xml:space="preserve">
          <source>Readline provides commands for searching through the command history (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) for lines containing a specified string. There are two search modes: &lt;em&gt;incremental&lt;/em&gt; and &lt;em&gt;non-incremental&lt;/em&gt;.</source>
          <target state="translated">Readline은 지정된 문자열을 포함하는 행에 대한 명령 내역 ( &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash 내역 기능&lt;/a&gt; 참조)을 검색하는 명령을 제공합니다 . 두 가지 검색 모드가 있습니다 : &lt;em&gt;증분&lt;/em&gt; 및 &lt;em&gt;비 증분&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0bbd615dfe7e04b424bd2e094a3fc6fe1a8238ed" translate="yes" xml:space="preserve">
          <source>Readline provides commands for searching through the command history (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) for lines containing a specified string. There are two search modes: &lt;em&gt;incremental&lt;/em&gt; and &lt;em&gt;non-incremental&lt;/em&gt;.</source>
          <target state="translated">Readline은 지정된 문자열을 포함하는 행에 대한 명령 히스토리 ( &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt; 참조)를 검색하기위한 명령을 제공합니다 . &lt;em&gt;증분&lt;/em&gt; 및 &lt;em&gt;비 &lt;/em&gt;&lt;em&gt;증분의&lt;/em&gt; 두 가지 검색 모드 &lt;em&gt;가 있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="de240eae3d73af3cde958b9f23e7a378c2e5841b" translate="yes" xml:space="preserve">
          <source>Readline remembers the last incremental search string. If two</source>
          <target state="translated">Readline은 마지막 증분 검색 문자열을 기억합니다. 두 경우</target>
        </trans-unit>
        <trans-unit id="07f0bfef392ca730e68c1908956fddd731cb50a7" translate="yes" xml:space="preserve">
          <source>Readline vi Mode</source>
          <target state="translated">리드 라인 vi 모드</target>
        </trans-unit>
        <trans-unit id="3752072696d882155f26b4d67d9627d3bdf33693" translate="yes" xml:space="preserve">
          <source>Readline, how to use</source>
          <target state="translated">readline, 사용법</target>
        </trans-unit>
        <trans-unit id="a3eb7d8973bc9d10b314eab59c3eff8a591aeb66" translate="yes" xml:space="preserve">
          <source>Reads its input from a file (see &lt;a href=&quot;shell-scripts&quot;&gt;Shell Scripts&lt;/a&gt;), from a string supplied as an argument to the</source>
          <target state="translated">파일 ( &lt;a href=&quot;shell-scripts&quot;&gt;Shell Scripts&lt;/a&gt; 참조 )에서 인수로 제공된 문자열에서 입력을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="e0399196285befb6961f97dc8e05d687771fd0e2" translate="yes" xml:space="preserve">
          <source>Reads its input from a file (see &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt;), from a string supplied as an argument to the</source>
          <target state="translated">에 대한 인수로 제공된 문자열에서 파일 ( &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt; 참조)에서 입력을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="4f8751f53633e52277195e714b19451446ec5bc1" translate="yes" xml:space="preserve">
          <source>Redirecting output using the &amp;lsquo;</source>
          <target state="translated">'를 사용하여 출력 리디렉션</target>
        </trans-unit>
        <trans-unit id="4714516211847184828940ea5aa0b0281a73b459" translate="yes" xml:space="preserve">
          <source>Redirection errors encountered by shell builtins will not cause the shell to exit.</source>
          <target state="translated">쉘 내장에서 발생하는 리디렉션 오류로 인해 쉘이 종료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a97abc05a1f8c3a95d64f1aa933a6ea087152d90" translate="yes" xml:space="preserve">
          <source>Redirection of input causes the file whose name results from the expansion of &lt;var&gt;word&lt;/var&gt; to be opened for reading on file descriptor &lt;code&gt;n&lt;/code&gt;, or the standard input (file descriptor 0) if &lt;code&gt;n&lt;/code&gt; is not specified.</source>
          <target state="translated">입력 경로 재 지정은 &lt;var&gt;word&lt;/var&gt; 의 확장으로 인해 이름이 지정된 파일이 파일 디스크립터 &lt;code&gt;n&lt;/code&gt; 에서 읽기 위해 열리 거나, &lt;code&gt;n&lt;/code&gt; 이 지정되지 않은 경우 표준 입력 (파일 디스크립터 0) 으로 열립니다 .</target>
        </trans-unit>
        <trans-unit id="1888da0c57abce25aae902bc7690d5fcfd42f9e1" translate="yes" xml:space="preserve">
          <source>Redirection of output causes the file whose name results from the expansion of &lt;var&gt;word&lt;/var&gt; to be opened for writing on file descriptor &lt;var&gt;n&lt;/var&gt;, or the standard output (file descriptor 1) if &lt;var&gt;n&lt;/var&gt; is not specified. If the file does not exist it is created; if it does exist it is truncated to zero size.</source>
          <target state="translated">출력 경로 재 지정은 &lt;var&gt;word&lt;/var&gt; 의 확장으로 인해 이름이 지정된 파일이 파일 디스크립터 &lt;var&gt;n&lt;/var&gt; 에 쓰기 위해 열리 거나 &lt;var&gt;n&lt;/var&gt; 이 지정되지 않은 경우 표준 출력 (파일 디스크립터 1) 이됩니다. 파일이 존재하지 않으면 파일이 작성됩니다. 존재하는 경우 크기가 0으로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="70506ee7736a10f272144c7972d31203d933474f" translate="yes" xml:space="preserve">
          <source>Redirection of output in this fashion causes the file whose name results from the expansion of &lt;var&gt;word&lt;/var&gt; to be opened for appending on file descriptor &lt;var&gt;n&lt;/var&gt;, or the standard output (file descriptor 1) if &lt;var&gt;n&lt;/var&gt; is not specified. If the file does not exist it is created.</source>
          <target state="translated">이러한 방식으로 출력을 재 지정하면 파일 확장명 &lt;var&gt;n&lt;/var&gt; 에 추가 &lt;var&gt;word&lt;/var&gt; 위해 단어 확장으로 인해 이름이 지정된 파일이 열리 거나 &lt;var&gt;n&lt;/var&gt; 이 지정되지 않은 경우 표준 출력 (파일 설명자 1) 이 열립니다 . 파일이 존재하지 않으면 파일이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b2cd63f3529b2ec870e10b83e39ae7da2d214f2b" translate="yes" xml:space="preserve">
          <source>Redirection operators do not perform filename expansion on the word in the redirection unless the shell is interactive.</source>
          <target state="translated">쉘이 대화식이 아닌 경우 리디렉션 연산자는 리디렉션의 단어에 대한 파일 이름 확장을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28f5cd3fdb8f3c1b9abaeb65984763e80aa7f7da" translate="yes" xml:space="preserve">
          <source>Redirection operators do not perform word splitting on the word in the redirection.</source>
          <target state="translated">리디렉션 연산자는 리디렉션의 단어에 대해 단어 분할을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eeb9caefdf646c7a0ccceccdf48dd3a42d43224b" translate="yes" xml:space="preserve">
          <source>Redirections</source>
          <target state="translated">Redirections</target>
        </trans-unit>
        <trans-unit id="07766ab515ccf74ce6b0e1a76219c2618f59a6da" translate="yes" xml:space="preserve">
          <source>Redirections are performed as described above (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">리디렉션은 위에서 설명한대로 수행됩니다 ( &lt;a href=&quot;redirections&quot;&gt;리디렉션&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4aa44ee6aeb72be5ddb71e07f126819a3878fd98" translate="yes" xml:space="preserve">
          <source>Redirections are performed as described above (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">리디렉션은 위에서 설명한대로 수행됩니다 ( &lt;a href=&quot;redirections#Redirections&quot;&gt;리디렉션&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c18100e01c567db13f752a8411fbfcc9aeebe693" translate="yes" xml:space="preserve">
          <source>Redirections using file descriptors greater than 9 should be used with care, as they may conflict with file descriptors the shell uses internally.</source>
          <target state="translated">셸이 내부적으로 사용하는 파일 설명자와 충돌 할 수 있으므로 9보다 큰 파일 설명자를 사용하는 리디렉션은주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d16003ddb633decec2e4971aa00d7a9af5ba2448" translate="yes" xml:space="preserve">
          <source>Refer to command line &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">명령 행 &lt;var&gt;n&lt;/var&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7eb48619843d8706724f441e19a5095c0cc1b6a" translate="yes" xml:space="preserve">
          <source>Refer to the command &lt;var&gt;n&lt;/var&gt; lines back.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 줄 뒤로 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2aa3616c6da8583a1f02d0d9ba47b165a77f526d" translate="yes" xml:space="preserve">
          <source>Refer to the most recent command preceding the current position in the history list containing &lt;var&gt;string&lt;/var&gt;. The trailing &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 이 포함 된 히스토리 목록에서 현재 위치 앞에있는 가장 최근 명령을 참조하십시오 . 후행 '</target>
        </trans-unit>
        <trans-unit id="16208c720f2db06422fdf9c5951c63032cad11a1" translate="yes" xml:space="preserve">
          <source>Refer to the most recent command preceding the current position in the history list starting with &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 시작하는 히스토리 목록에서 현재 위치 앞에있는 가장 최근의 명령을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="046dacff2c15b17795af0e5d04466d7bf47e6cda" translate="yes" xml:space="preserve">
          <source>Refer to the previous command. This is a synonym for &amp;lsquo;</source>
          <target state="translated">이전 명령을 참조하십시오. 이것은 '의 동의어입니다</target>
        </trans-unit>
        <trans-unit id="0b1502e5f9fd5dcd73ddd5f922923085b3036407" translate="yes" xml:space="preserve">
          <source>Referencing an array variable without a subscript is equivalent to referencing with a subscript of 0. Any reference to a variable using a valid subscript is legal, and &lt;code&gt;bash&lt;/code&gt; will create an array if necessary.</source>
          <target state="translated">첨자없이 배열 변수를 참조하는 것은 첨자를 0으로 참조하는 것과 같습니다. 유효한 첨자를 사용하는 변수에 대한 참조는 합법적이며 &lt;code&gt;bash&lt;/code&gt; 는 필요한 경우 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5c932b92f7806ab6d803bf39c56e47e37a994413" translate="yes" xml:space="preserve">
          <source>Refresh the current line. By default, this is unbound.</source>
          <target state="translated">현재 줄을 새로 고칩니다. 기본적으로 이것은 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="860c204be46c57a29c194bbb65ffdad59c1c581d" translate="yes" xml:space="preserve">
          <source>Remove a trailing &lt;var&gt;delim&lt;/var&gt; (default newline) from each line read.</source>
          <target state="translated">읽은 각 줄에서 후행 &lt;var&gt;delim&lt;/var&gt; (기본 줄 바꿈)을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9478db503eeccf18f70a4a14b0996462ead0709" translate="yes" xml:space="preserve">
          <source>Remove a trailing pathname component, leaving only the head.</source>
          <target state="translated">머리 만 남기고 후행 경로 이름 구성 요소를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="fc955bb32973eef8359561e3d145c53e70c8c87b" translate="yes" xml:space="preserve">
          <source>Remove a trailing suffix of the form &amp;lsquo;</source>
          <target state="translated">'형식의 후행 접미사를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="1b70d0756c6980763db819cb7a052a3af2fadd8d" translate="yes" xml:space="preserve">
          <source>Remove all but the trailing suffix.</source>
          <target state="translated">후행 접미사를 제외한 모든 것을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="6da97f2000768b9dcaf83944cc4c3866a1548dfa" translate="yes" xml:space="preserve">
          <source>Remove all leading pathname components, leaving the tail.</source>
          <target state="translated">꼬리를 남기고 모든 선행 경로 이름 구성 요소를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ee72df8453df43c975dacbf691189f1b70579bb2" translate="yes" xml:space="preserve">
          <source>Remove any current binding for &lt;var&gt;keyseq&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;keyseq&lt;/var&gt; 에 대한 현재 바인딩을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="6cbf3b66c3e4d65dc70c82ec371087b8bb8e9f2f" translate="yes" xml:space="preserve">
          <source>Remove each &lt;var&gt;name&lt;/var&gt; from the list of aliases. If</source>
          <target state="translated">별명 목록에서 각 &lt;var&gt;name&lt;/var&gt; 을 제거하십시오 . 만약</target>
        </trans-unit>
        <trans-unit id="ee68761e723d44ae7a9fd53a286a1c2dce32369b" translate="yes" xml:space="preserve">
          <source>Remove each variable or function &lt;var&gt;name&lt;/var&gt;. If the</source>
          <target state="translated">각 변수 또는 함수 &lt;var&gt;name&lt;/var&gt; 제거하십시오 . 만약</target>
        </trans-unit>
        <trans-unit id="f0c8ed56a1ecd4f3ed5d202e9e22b0f8de3e53b0" translate="yes" xml:space="preserve">
          <source>Removes the &lt;var&gt;N&lt;/var&gt;th directory (counting from the left of the list printed by &lt;code&gt;dirs&lt;/code&gt;), starting with zero.</source>
          <target state="translated">0부터 시작 하여 &lt;var&gt;N&lt;/var&gt; 번째 디렉토리 ( &lt;code&gt;dirs&lt;/code&gt; 로 인쇄 된 목록의 왼쪽부터 계산)를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="7f50017f0d792110983ddddb0ef627fd6522f225" translate="yes" xml:space="preserve">
          <source>Removes the &lt;var&gt;N&lt;/var&gt;th directory (counting from the right of the list printed by &lt;code&gt;dirs&lt;/code&gt;), starting with zero.</source>
          <target state="translated">0부터 시작 하여 &lt;var&gt;N&lt;/var&gt; 번째 디렉토리 ( &lt;code&gt;dirs&lt;/code&gt; 로 인쇄 된 목록의 오른쪽부터 계산)를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="45d2c8acc1031935891dda3df6634f1f148128ed" translate="yes" xml:space="preserve">
          <source>Repeat the previous substitution.</source>
          <target state="translated">이전 대체를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="2c54bc0da768d4c877c77485784187863c28ad3c" translate="yes" xml:space="preserve">
          <source>Reporting Bugs</source>
          <target state="translated">버그보고</target>
        </trans-unit>
        <trans-unit id="483cb6b1daaf74d912f74ee51792fd3c177c2af4" translate="yes" xml:space="preserve">
          <source>Reserved Word Index</source>
          <target state="translated">예약어 색인</target>
        </trans-unit>
        <trans-unit id="7f80623ffda4637ef16987aa5f47e5c605a09b42" translate="yes" xml:space="preserve">
          <source>Reserved Words</source>
          <target state="translated">예약어</target>
        </trans-unit>
        <trans-unit id="f87a1cebc20c29e56cc868e0e0eb834f0c5e41d1" translate="yes" xml:space="preserve">
          <source>Reserved words appearing in a context where reserved words are recognized do not undergo alias expansion.</source>
          <target state="translated">예약어가 인식되는 컨텍스트에 나타나는 예약어는 별칭 확장을 거치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4115b00edc8af2b3025a7285db77faa63020b194" translate="yes" xml:space="preserve">
          <source>Restricts the values of &lt;var&gt;optname&lt;/var&gt; to be those defined for the</source>
          <target state="translated">&lt;var&gt;optname&lt;/var&gt; 의 값을 다음에 대해 정의 된 값으로 제한합니다 .</target>
        </trans-unit>
        <trans-unit id="ac46b11f6eb237f8c3706bbff228fe76426f1b07" translate="yes" xml:space="preserve">
          <source>Resume each suspended job &lt;var&gt;jobspec&lt;/var&gt; in the background, as if it had been started with &amp;lsquo;</source>
          <target state="translated">'으로 시작된 것처럼 백그라운드에서 일시 중지 된 작업 &lt;var&gt;jobspec&lt;/var&gt; 을 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="3046b872f8310fc13f53f5bf211b7a32c2b5f997" translate="yes" xml:space="preserve">
          <source>Resume the job &lt;var&gt;jobspec&lt;/var&gt; in the foreground and make it the current job. If &lt;var&gt;jobspec&lt;/var&gt; is not supplied, the current job is used. The return status is that of the command placed into the foreground, or non-zero if run when job control is disabled or, when run with job control enabled, &lt;var&gt;jobspec&lt;/var&gt; does not specify a valid job or &lt;var&gt;jobspec&lt;/var&gt; specifies a job that was started without job control.</source>
          <target state="translated">포 그라운드에서 작업 &lt;var&gt;jobspec&lt;/var&gt; 을 재개하고 현재 작업으로 만드십시오. 경우 &lt;var&gt;jobspec&lt;/var&gt; 가 제공되지 않으면 현재 작업이 사용됩니다. 반환 상태는 전경에 배치 명령, 또는 비 제로의 실행이 작업 제어를 사용할 경우 또는, 작업 제어 활성화 실행할 때, 경우이다 &lt;var&gt;jobspec&lt;/var&gt; 이 유효한 작업 또는 지정하지 않는 &lt;var&gt;jobspec&lt;/var&gt; 지정 작업없이 시작한 일을 제어.</target>
        </trans-unit>
        <trans-unit id="676adec87b4051fd49b759b211042980592fa78e" translate="yes" xml:space="preserve">
          <source>Resume the next iteration of an enclosing &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt;, or &lt;code&gt;select&lt;/code&gt; loop. If &lt;var&gt;n&lt;/var&gt; is supplied, the execution of the &lt;var&gt;n&lt;/var&gt;th enclosing loop is resumed. &lt;var&gt;n&lt;/var&gt; must be greater than or equal to 1. The return status is zero unless &lt;var&gt;n&lt;/var&gt; is not greater than or equal to 1.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; , &lt;code&gt;while&lt;/code&gt; , &lt;code&gt;until&lt;/code&gt; 또는 &lt;code&gt;select&lt;/code&gt; 루프 의 다음 반복을 재개하십시오 . 경우 &lt;var&gt;n&lt;/var&gt; 공급되면, 실행 &lt;var&gt;n&lt;/var&gt; 루프를 둘러싸 일이 재개된다. &lt;var&gt;n&lt;/var&gt; 은 1보다 크거나 같아야합니다. &lt;var&gt;n&lt;/var&gt; 이 1보다 크거나 같지 않으면 반환 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="019e88fdd9071c85e05b7fba425b23f4d7a6fa23" translate="yes" xml:space="preserve">
          <source>Return a status of 0 or 1 depending on the evaluation of the conditional expression &lt;var&gt;expression&lt;/var&gt;. Expressions are composed of the primaries described below in &lt;a href=&quot;bash-conditional-expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;. Word splitting and filename expansion are not performed on the words between the &lt;code&gt;[[&lt;/code&gt; and &lt;code&gt;]]&lt;/code&gt;; tilde expansion, parameter and variable expansion, arithmetic expansion, command substitution, process substitution, and quote removal are performed. Conditional operators such as &amp;lsquo;</source>
          <target state="translated">조건식 &lt;var&gt;expression&lt;/var&gt; 의 평가에 따라 0 또는 1의 상태를 반환합니다 . 표현식은 &lt;a href=&quot;bash-conditional-expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt; 에서 아래에 설명 된 기본으로 구성 됩니다. &lt;code&gt;[[&lt;/code&gt; 및 &lt;code&gt;]]&lt;/code&gt; 사이의 단어에는 단어 분할 및 파일 이름 확장이 수행되지 않습니다 . 물결표 확장, 매개 변수 및 변수 확장, 산술 확장, 명령 대체, 프로세스 대체 및 따옴표 제거가 수행됩니다. '와 같은 조건부 연산자</target>
        </trans-unit>
        <trans-unit id="3eef89ab48bc9bfe471b676f36b1e1244a457ab1" translate="yes" xml:space="preserve">
          <source>Return a status of 0 or 1 depending on the evaluation of the conditional expression &lt;var&gt;expression&lt;/var&gt;. Expressions are composed of the primaries described below in &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;. Word splitting and filename expansion are not performed on the words between the &lt;code&gt;[[&lt;/code&gt; and &lt;code&gt;]]&lt;/code&gt;; tilde expansion, parameter and variable expansion, arithmetic expansion, command substitution, process substitution, and quote removal are performed. Conditional operators such as &amp;lsquo;</source>
          <target state="translated">조건식 &lt;var&gt;expression&lt;/var&gt; 의 평가에 따라 0 또는 1의 상태를 리턴합니다 . 표현식은 아래 &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash 조건식에&lt;/a&gt; 설명 된 기본으로 구성 됩니다. &lt;code&gt;[[&lt;/code&gt; 와 &lt;code&gt;]]&lt;/code&gt; 사이의 단어에 대해서는 단어 분리 및 파일 이름 확장이 수행되지 않습니다 . 물결표 확장, 매개 변수 및 변수 확장, 산술 확장, 명령 대체, 프로세스 대체 및 따옴표 제거가 수행됩니다. '와 같은 조건부 연산자</target>
        </trans-unit>
        <trans-unit id="0aa88c2274c8dc26f3465f2bb4b15c16743bacc2" translate="yes" xml:space="preserve">
          <source>Returns the context of any active subroutine call (a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins).</source>
          <target state="translated">활성 서브 루틴 호출의 컨텍스트 (쉘 함수 또는 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 내장으로 실행 된 스크립트)를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="be51d39042db6bcb9d633e2e6f84cbf5123bada0" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;var&gt;expr&lt;/var&gt;. This may be used to override the normal precedence of operators.</source>
          <target state="translated">&lt;var&gt;expr&lt;/var&gt; 값을 반환합니다 . 이것은 연산자의 일반적인 우선 순위를 대체하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="810cbc33ccdb39eb9cc8a3cff984488980adbc63" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;var&gt;expression&lt;/var&gt;. This may be used to override the normal precedence of operators.</source>
          <target state="translated">&lt;var&gt;expression&lt;/var&gt; 값을 반환합니다 . 이것은 연산자의 일반적인 우선 순위를 대체하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="410dea9704c23780fcca673e74ac4a6dd4731199" translate="yes" xml:space="preserve">
          <source>Rotate the kill-ring, and yank the new top. You can only do this if the prior command is</source>
          <target state="translated">킬링을 돌리고 새로운 상단을 잡아 당깁니다. 이전 명령이 다음과 같은 경우에만이 작업을 수행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="58386e4dcc5ee51a6e6d3fbd5b21f1e20edcd769" translate="yes" xml:space="preserve">
          <source>Rotate the kill-ring, and yank the new top. You can only do this if the prior command is &lt;code&gt;yank&lt;/code&gt; or &lt;code&gt;yank-pop&lt;/code&gt;.</source>
          <target state="translated">킬링을 돌리고 새로운 상단을 잡아 당깁니다. 이전 명령이 &lt;code&gt;yank&lt;/code&gt; 또는 &lt;code&gt;yank-pop&lt;/code&gt; 인 경우에만이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9024935a09a4d4bd92973f39af6b051bf96e60bc" translate="yes" xml:space="preserve">
          <source>Run a shell builtin, passing it &lt;var&gt;args&lt;/var&gt;, and return its exit status. This is useful when defining a shell function with the same name as a shell builtin, retaining the functionality of the builtin within the function. The return status is non-zero if &lt;var&gt;shell-builtin&lt;/var&gt; is not a shell builtin command.</source>
          <target state="translated">쉘 내장을 실행하여 &lt;var&gt;args&lt;/var&gt; 를 전달 하고 종료 상태를 리턴하십시오. 이것은 쉘 내장과 동일한 이름으로 쉘 기능을 정의 할 때 유용하며, 함수 내에 내장 기능을 유지합니다. 경우 반환 상태가 제로가 아닌 &lt;var&gt;shell-builtin&lt;/var&gt; 명령 내장 쉘이 아니다.</target>
        </trans-unit>
        <trans-unit id="cca65886555cc0be1beb30a279c4d1f19a91313e" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;configure&lt;/code&gt; takes some time. While running, it prints messages telling which features it is checking for.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 를 실행하는 데 시간이 걸립니다. 실행하는 동안 검사중인 기능을 알려주는 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="5507775221e4c8b561f63d6cdbb40a52336b7272" translate="yes" xml:space="preserve">
          <source>Running commands in parallel.</source>
          <target state="translated">병렬로 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="21434a0bb117aa8f39475e4ca02569853a7e063f" translate="yes" xml:space="preserve">
          <source>Runs &lt;var&gt;command&lt;/var&gt; with &lt;var&gt;arguments&lt;/var&gt; ignoring any shell function named &lt;var&gt;command&lt;/var&gt;. Only shell builtin commands or commands found by searching the &lt;code&gt;PATH&lt;/code&gt; are executed. If there is a shell function named &lt;code&gt;ls&lt;/code&gt;, running &amp;lsquo;</source>
          <target state="translated">실행은 &lt;var&gt;command&lt;/var&gt; 과 &lt;var&gt;arguments&lt;/var&gt; 라는 이름의 쉘 기능을 무시하는 &lt;var&gt;command&lt;/var&gt; . 쉘 내장 명령 또는 &lt;code&gt;PATH&lt;/code&gt; 를 검색하여 찾은 명령 만 실행됩니다. &lt;code&gt;ls&lt;/code&gt; 라는 쉘 함수가 있다면 '</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="f7efc6bbd6fc125c57c562e2c265a7cfa980926f" translate="yes" xml:space="preserve">
          <source>SECONDS</source>
          <target state="translated">SECONDS</target>
        </trans-unit>
        <trans-unit id="4b9079dcb3b5d1ef1e40482f9c01179073a53f17" translate="yes" xml:space="preserve">
          <source>SGML</source>
          <target state="translated">SGML</target>
        </trans-unit>
        <trans-unit id="095292871a28c2f2c292750f8a6313adafce4a15" translate="yes" xml:space="preserve">
          <source>SHELL</source>
          <target state="translated">SHELL</target>
        </trans-unit>
        <trans-unit id="a2322b041f0e5a6bbd6c53fa107842efc6dd398c" translate="yes" xml:space="preserve">
          <source>SHELLOPTS</source>
          <target state="translated">SHELLOPTS</target>
        </trans-unit>
        <trans-unit id="3112a46f24dd14e88406cea5f9280571e0c7af48" translate="yes" xml:space="preserve">
          <source>SHLVL</source>
          <target state="translated">SHLVL</target>
        </trans-unit>
        <trans-unit id="a0d2ebea0767c4e8b2e83448e1dcf6419bde82a8" translate="yes" xml:space="preserve">
          <source>SIG</source>
          <target state="translated">SIG</target>
        </trans-unit>
        <trans-unit id="b3ab5acc6715019d9c52459321ac5f00d86ca1b8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-B&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-B&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fd9f421ed9570ba368f14078658dbedd6dfc555" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-C&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-C&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0232a89a4b3851f4e0b354c82f58a4d95943a2d1" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-E&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-E&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2049c4889e3333cef7e7109245f43f1a1d802877" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-H&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-H&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="757972fa08fdc139d28c1a51467d4de06f96c00d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-P&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-P&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dde9c7dd75e4ee090f37d665fd1fdca2661acf25" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-T&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b315111db2826cf2356ada0ba7961e18a19c815e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-a&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01e560b23cc59f45a4682fa6b151603bb3d367f4" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-b&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c37bed9a8ed5dab44b198cfc76e6ac656c62e77" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-e&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c58540557e76ce8260d1c51f33f659860f0f13" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-f&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26641d53e86431f10075c80818bd041945c4ec38" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-h&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e52b3a85a93d869920f19ea207a67316d34852b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-k&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738edda884bb4b94a224ad7b453757b45d605c9e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-m&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="761d3a02fbd3a29330aca112651cad7cf08002da" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-n&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aac532927e50a060e3662ee8a8977f49b71ae40" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-p&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="863d84f86032a577dce55f1bab093d93252c582f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-t&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7850441383deedb684ab489f5083ae2fd2df590" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-u&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e11ac3a74a137de9fde7b45ae0edfd2e826c598" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-v&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b477a6eadf53257d7fef0d736d8021f4c2176cf7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-x&lt;/code&gt;.</source>
          <target state="translated">동일 &lt;code&gt;-x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4548da94adeb1a7d6113196038156c166f3aae4" translate="yes" xml:space="preserve">
          <source>Sample Init File</source>
          <target state="translated">샘플 초기화 파일</target>
        </trans-unit>
        <trans-unit id="888c4957ecb057292736a385608f1df8e8b90bbb" translate="yes" xml:space="preserve">
          <source>Save the current directory on the top of the directory stack and then &lt;code&gt;cd&lt;/code&gt; to &lt;var&gt;dir&lt;/var&gt;. With no arguments, &lt;code&gt;pushd&lt;/code&gt; exchanges the top two directories and makes the new top the current directory.</source>
          <target state="translated">디렉토리 스택의 맨 위에 현재 디렉토리를 저장 한 다음 &lt;code&gt;cd&lt;/code&gt; 를 &lt;var&gt;dir&lt;/var&gt; 에 저장하십시오 . 인수없이 &lt;code&gt;pushd&lt;/code&gt; 는 최상위 두 디렉토리를 교환하고 새 최상위 디렉토리를 현재 디렉토리로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2966717ae5722f36e02c5c0e62baf8845b2f51e2" translate="yes" xml:space="preserve">
          <source>Saving and re-executing typed characters</source>
          <target state="translated">입력 한 문자 저장 및 재실행</target>
        </trans-unit>
        <trans-unit id="c3556c32b02a75d63ea3da2f5d625217db6941ba" translate="yes" xml:space="preserve">
          <source>Search backward starting at the current line and moving &amp;lsquo;up&amp;rsquo; through the history as necessary using a non-incremental search for a string supplied by the user. The search string may match anywhere in a history line.</source>
          <target state="translated">사용자가 제공 한 문자열에 대한 비 증분 검색을 사용하여 필요에 따라 현재 행에서 시작하여 히스토리를 통해 '위로'이동합니다. 검색 문자열은 히스토리 라인의 어느 곳에서나 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="117e75f683cb900c37e9ae76a96a2f8501b04e56" translate="yes" xml:space="preserve">
          <source>Search backward starting at the current line and moving &amp;lsquo;up&amp;rsquo; through the history as necessary. This is an incremental search.</source>
          <target state="translated">현재 행에서 시작하여 필요에 따라 히스토리를 통해 '위'로 이동하십시오. 이것은 증분 검색입니다.</target>
        </trans-unit>
        <trans-unit id="7d80881b2b5c9bd255f81321569d886f507339a9" translate="yes" xml:space="preserve">
          <source>Search backward starting at the current line and moving &amp;lsquo;up&amp;rsquo; through the history as necessary. This is an incremental search. This command sets the region to the matched text and activates the mark.</source>
          <target state="translated">현재 줄에서 시작하여 필요에 따라 기록을 '위로'이동하여 뒤로 검색합니다. 이것은 증분 검색입니다. 이 명령은 영역을 일치하는 텍스트로 설정하고 마크를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a9ce28fb2d502b0d327785c6f30402130753e8fa" translate="yes" xml:space="preserve">
          <source>Search backward through the history for the string of characters between the start of the current line and the point. The search string may match anywhere in a history line. This is a non-incremental search. By default, this command is unbound.</source>
          <target state="translated">현재 줄의 시작과 지점 사이의 문자열을 기록에서 뒤로 검색합니다. 검색 문자열은 히스토리 라인의 어느 곳에서나 일치 할 수 있습니다. 이것은 비 증분 검색입니다. 기본적으로이 명령은 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9ec9d621fe65e16d2bef7f0415702a3637234cae" translate="yes" xml:space="preserve">
          <source>Search backward through the history for the string of characters between the start of the current line and the point. The search string must match at the beginning of a history line. This is a non-incremental search. By default, this command is unbound.</source>
          <target state="translated">현재 줄의 시작과 지점 사이의 문자열을 기록에서 뒤로 검색합니다. 검색 문자열은 히스토리 라인의 시작 부분에서 일치해야합니다. 이것은 비 증분 검색입니다. 기본적으로이 명령은 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60ebb12ddc40ec59ceaf9ecb8d6717f9bec0816d" translate="yes" xml:space="preserve">
          <source>Search forward starting at the current line and moving &amp;lsquo;down&amp;rsquo; through the history as necessary using a non-incremental search for a string supplied by the user. The search string may match anywhere in a history line.</source>
          <target state="translated">현재 줄에서 시작하여 사용자가 제공 한 문자열에 대한 비 증분 검색을 사용하여 필요에 따라 히스토리를 통해 '아래로'이동합니다. 검색 문자열은 히스토리 라인의 어느 곳에서나 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f65d9472a1d1f7b69d8d9e5da57e1bda91bc29f" translate="yes" xml:space="preserve">
          <source>Search forward starting at the current line and moving &amp;lsquo;down&amp;rsquo; through the history as necessary. This is an incremental search.</source>
          <target state="translated">현재 라인에서 시작하여 필요에 따라 히스토리를 통해 '아래로'이동하십시오. 이것은 증분 검색입니다.</target>
        </trans-unit>
        <trans-unit id="097a676f26f09496446e9933d69d6137605accb0" translate="yes" xml:space="preserve">
          <source>Search forward starting at the current line and moving &amp;lsquo;down&amp;rsquo; through the history as necessary. This is an incremental search. This command sets the region to the matched text and activates the mark.</source>
          <target state="translated">현재 줄에서 시작하여 필요에 따라 기록에서 '아래로'이동하여 앞으로 검색합니다. 이것은 증분 검색입니다. 이 명령은 영역을 일치하는 텍스트로 설정하고 마크를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b441d650d985dfd99c3d02b61c908328eee98df2" translate="yes" xml:space="preserve">
          <source>Search forward through the history for the string of characters between the start of the current line and the point. The search string may match anywhere in a history line. This is a non-incremental search. By default, this command is unbound.</source>
          <target state="translated">현재 줄의 시작과 지점 사이의 문자열에 대한 히스토리를 탐색하십시오. 검색 문자열은 히스토리 라인의 어느 곳에서나 일치 할 수 있습니다. 이것은 비 증분 검색입니다. 기본적으로이 명령은 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1911c5b41c13e6230f95afe0d1b7280bbfa8cde" translate="yes" xml:space="preserve">
          <source>Search forward through the history for the string of characters between the start of the current line and the point. The search string must match at the beginning of a history line. This is a non-incremental search. By default, this command is unbound.</source>
          <target state="translated">현재 줄의 시작과 지점 사이의 문자열에 대한 히스토리를 탐색하십시오. 검색 문자열은 히스토리 라인의 시작 부분에서 일치해야합니다. 이것은 비 증분 검색입니다. 기본적으로이 명령은 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="31ddec33c025f4ab1e3daab9a943baf4160525a6" translate="yes" xml:space="preserve">
          <source>Searching for Commands in the History</source>
          <target state="translated">히스토리에서 명령 검색</target>
        </trans-unit>
        <trans-unit id="49384eb7f7095924fbccb6a68c9a90f7b31ef5d7" translate="yes" xml:space="preserve">
          <source>Searching through previous lines.</source>
          <target state="translated">이전 줄을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f2c6b564bd8119e16a3e573a6f9e7c6d1ac7820f" translate="yes" xml:space="preserve">
          <source>Section</source>
          <target state="translated">Section</target>
        </trans-unit>
        <trans-unit id="58a7df4139b1a03f670448d55388463ca9d75247" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;, for a full description of the &lt;code&gt;let&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 내장 에 대한 전체 설명은 &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87cfa83506f3b68a4318453594eb5887e1ca439c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;, for a full description of the &lt;code&gt;let&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 내장에 대한 자세한 설명은 &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb56fb38a76cd9f198ac51516098ed49c512bc2d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;compiling-for-multiple-architectures&quot;&gt;Compiling For Multiple Architectures&lt;/a&gt; for more information about building in a directory separate from the source.</source>
          <target state="translated">소스와 별개의 디렉토리에 빌드하는 방법에 대한 자세한 내용은 &lt;a href=&quot;compiling-for-multiple-architectures&quot;&gt;여러 아키텍처&lt;/a&gt; 용으로 컴파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7bc74822663d5560f560421a6f191d05df95ff3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;compiling-for-multiple-architectures#Compiling-For-Multiple-Architectures&quot;&gt;Compiling For Multiple Architectures&lt;/a&gt; for more information about building in a directory separate from the source.</source>
          <target state="translated">소스와 별도의 디렉토리에 빌드하는 방법에 대한 자세한 내용은 &lt;a href=&quot;compiling-for-multiple-architectures#Compiling-For-Multiple-Architectures&quot;&gt;다중 아키텍처 컴파일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3db775417cfef3809e7f598189be5b5ce4f05008" translate="yes" xml:space="preserve">
          <source>See the description of &lt;code&gt;shopt&lt;/code&gt; in &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;, for a description of the &lt;code&gt;nocaseglob&lt;/code&gt;, &lt;code&gt;nullglob&lt;/code&gt;, &lt;code&gt;failglob&lt;/code&gt;, and &lt;code&gt;dotglob&lt;/code&gt; options.</source>
          <target state="translated">의 설명을 참조하십시오 &lt;code&gt;shopt&lt;/code&gt; 내부 에서 &lt;a href=&quot;the-shopt-builtin&quot;&gt;shopt 내부 기본 제공된을&lt;/a&gt; 의 설명은, &lt;code&gt;nocaseglob&lt;/code&gt; , &lt;code&gt;nullglob&lt;/code&gt; , &lt;code&gt;failglob&lt;/code&gt; 및 &lt;code&gt;dotglob&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1b0306acf5ea03fde6185f177668bb4080eeed40" translate="yes" xml:space="preserve">
          <source>See the description of &lt;code&gt;shopt&lt;/code&gt; in &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;, for a description of the &lt;code&gt;nocaseglob&lt;/code&gt;, &lt;code&gt;nullglob&lt;/code&gt;, &lt;code&gt;failglob&lt;/code&gt;, and &lt;code&gt;dotglob&lt;/code&gt; options.</source>
          <target state="translated">의 설명을 참조하십시오 &lt;code&gt;shopt&lt;/code&gt; 내부 에서 &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;shopt 내부 기본 제공된을&lt;/a&gt; 의 설명은, &lt;code&gt;nocaseglob&lt;/code&gt; , &lt;code&gt;nullglob&lt;/code&gt; , &lt;code&gt;failglob&lt;/code&gt; 및 &lt;code&gt;dotglob&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6142ee968e835bf0e6a4b4bc0768ee08a0e5da77" translate="yes" xml:space="preserve">
          <source>See the file</source>
          <target state="translated">파일보기</target>
        </trans-unit>
        <trans-unit id="213feed9a5539378750d4ed404b169c593d3075b" translate="yes" xml:space="preserve">
          <source>Send a signal specified by &lt;var&gt;sigspec&lt;/var&gt; or &lt;var&gt;signum&lt;/var&gt; to the process named by job specification &lt;var&gt;jobspec&lt;/var&gt; or process &lt;small&gt;ID&lt;/small&gt;&lt;var&gt;pid&lt;/var&gt;. &lt;var&gt;sigspec&lt;/var&gt; is either a case-insensitive signal name such as &lt;code&gt;SIGINT&lt;/code&gt; (with or without the &lt;code&gt;SIG&lt;/code&gt; prefix) or a signal number; &lt;var&gt;signum&lt;/var&gt; is a signal number. If &lt;var&gt;sigspec&lt;/var&gt; and &lt;var&gt;signum&lt;/var&gt; are not present, &lt;code&gt;SIGTERM&lt;/code&gt; is used. The</source>
          <target state="translated">&lt;var&gt;sigspec&lt;/var&gt; 또는 &lt;var&gt;signum&lt;/var&gt; 으로 지정된 신호 를 작업 스펙 &lt;var&gt;jobspec&lt;/var&gt; 또는 프로세스 &lt;small&gt;ID &lt;/small&gt; &lt;var&gt;pid&lt;/var&gt; 로 이름 지정된 프로세스로 전송 &lt;small&gt;하십시오&lt;/small&gt; . &lt;var&gt;sigspec&lt;/var&gt; 은 &lt;code&gt;SIGINT&lt;/code&gt; ( &lt;code&gt;SIG&lt;/code&gt; 접두사 가 있거나없는 ) 또는 신호 번호 와 같이 대소 문자를 구분하지 않는 신호 이름입니다 . &lt;var&gt;signum&lt;/var&gt; 는 신호 번호입니다. 경우 &lt;var&gt;sigspec&lt;/var&gt; 및 &lt;var&gt;signum&lt;/var&gt; 존재하지 않는, &lt;code&gt;SIGTERM&lt;/code&gt; 이 사용됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="d7ebc2337356f977470f1293ce806fbc27c820bd" translate="yes" xml:space="preserve">
          <source>Service names. May also be specified as</source>
          <target state="translated">서비스 이름. 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="dc5ff33689f8251e8885390059940b90fb718bb1" translate="yes" xml:space="preserve">
          <source>Set the default value of the &lt;var&gt;extglob&lt;/var&gt; shell option described above under &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; to be enabled.</source>
          <target state="translated">&lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; 에서 위에서 설명한 &lt;var&gt;extglob&lt;/var&gt; 셸 옵션 의 기본값 을 활성화하도록 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2a4a6177f02a6837f4d19a306e1ef899aba4374e" translate="yes" xml:space="preserve">
          <source>Set the default value of the &lt;var&gt;extglob&lt;/var&gt; shell option described above under &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; to be enabled.</source>
          <target state="translated">&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 아래에 설명 된 &lt;var&gt;extglob&lt;/var&gt; 쉘 옵션 의 기본값 을 사용으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d1dd3d8fcd902f32ac7fb0f2cf9a47f79aec2bcf" translate="yes" xml:space="preserve">
          <source>Set the default value of the &lt;var&gt;globasciiranges&lt;/var&gt; shell option described above under &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; to be enabled. This controls the behavior of character ranges when used in pattern matching bracket expressions.</source>
          <target state="translated">&lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; 에서 위에서 설명한 &lt;var&gt;globasciiranges&lt;/var&gt; 셸 옵션 의 기본값 을 활성화하도록 설정합니다. 이는 패턴 일치 대괄호 표현식에서 사용될 때 문자 범위의 동작을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="5953a2a30aa9094635153f1d20167ff20f8f4849" translate="yes" xml:space="preserve">
          <source>Set the default value of the &lt;var&gt;globasciiranges&lt;/var&gt; shell option described above under &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; to be enabled. This controls the behavior of character ranges when used in pattern matching bracket expressions.</source>
          <target state="translated">&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 에서 위에서 설명한 &lt;var&gt;globasciiranges&lt;/var&gt; 쉘 옵션 의 기본값 을 사용으로 설정하십시오. 패턴 일치 괄호 표현식에서 사용될 때 문자 범위의 동작을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="65764090fe51055dc669a69959887bb482289cf7" translate="yes" xml:space="preserve">
          <source>Set the mark to the point. If a numeric argument is supplied, the mark is set to that position.</source>
          <target state="translated">마크를 포인트로 설정하십시오. 숫자 인수가 제공되면 마크가 해당 위치로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="10e74191c8c7903aff2770d9578ed971047a5e5e" translate="yes" xml:space="preserve">
          <source>Set the maximum number of history entries saved in the history list. If set to zero, any existing history entries are deleted and no new entries are saved. If set to a value less than zero, the number of history entries is not limited. By default, the number of history entries is not limited. If an attempt is made to set &lt;var&gt;history-size&lt;/var&gt; to a non-numeric value, the maximum number of history entries will be set to 500.</source>
          <target state="translated">히스토리 목록에 저장된 최대 히스토리 항목 수를 설정하십시오. 0으로 설정하면 기존 기록 항목이 삭제되고 새 항목이 저장되지 않습니다. 0보다 작은 값으로 설정하면 히스토리 항목 수는 제한되지 않습니다. 기본적으로 히스토리 항목 수는 제한되지 않습니다. &lt;var&gt;history-size&lt;/var&gt; 를 숫자가 아닌 값 으로 설정하려고 하면 최대 히스토리 항목 수가 500으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3e5975e0679cfa2d728932004cab0f48fefaa4f3" translate="yes" xml:space="preserve">
          <source>Set the number of exited child status values for the shell to remember. Bash will not allow this value to be decreased below a &lt;small&gt;POSIX&lt;/small&gt;-mandated minimum, and there is a maximum value (currently 8192) that this may not exceed. The minimum value is system-dependent.</source>
          <target state="translated">쉘이 기억할 종료 된 하위 상태 값 수를 설정하십시오. Bash는이 값을 &lt;small&gt;POSIX&lt;/small&gt; 필수 최소값 미만으로 줄일 수 없으며이를 초과 할 수없는 최대 값 (현재 8192)이 있습니다. 최소값은 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="360fc5e6fe6d2343da6d35c3bd114dd8d892db85" translate="yes" xml:space="preserve">
          <source>Set the option corresponding to &lt;var&gt;option-name&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;option-name&lt;/var&gt; 에 해당하는 옵션을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="624a9ff66d2843464d7c52bb5534a1e3c2a4c038" translate="yes" xml:space="preserve">
          <source>Set the shell process&amp;rsquo;s file creation mask to &lt;var&gt;mode&lt;/var&gt;. If &lt;var&gt;mode&lt;/var&gt; begins with a digit, it is interpreted as an octal number; if not, it is interpreted as a symbolic mode mask similar to that accepted by the &lt;code&gt;chmod&lt;/code&gt; command. If &lt;var&gt;mode&lt;/var&gt; is omitted, the current value of the mask is printed. If the</source>
          <target state="translated">쉘 프로세스의 파일 작성 마스크를 &lt;var&gt;mode&lt;/var&gt; 로 설정하십시오 . 경우 &lt;var&gt;mode&lt;/var&gt; 숫자로 시작, 그것은 8 진수로 해석됩니다; 그렇지 않은 경우 &lt;code&gt;chmod&lt;/code&gt; 명령에서 허용하는 것과 유사한 기호 모드 마스크로 해석됩니다 . 경우 &lt;var&gt;mode&lt;/var&gt; 생략되고, 상기 마스크의 현재 값이 출력된다. 만약</target>
        </trans-unit>
        <trans-unit id="3bb143a50004ce599167ea86df628e6282520c74" translate="yes" xml:space="preserve">
          <source>Set to an integer value corresponding to the type of completion attempted that caused a completion function to be called: &lt;var&gt;TAB&lt;/var&gt;, for normal completion, &amp;lsquo;</source>
          <target state="translated">완료 함수를 호출 한 완료 유형에 해당하는 정수 값으로 설정하십시오. &lt;var&gt;TAB&lt;/var&gt; , 정상 완료의 경우 '</target>
        </trans-unit>
        <trans-unit id="c93bfbd7235bc543f9714580197e9efae6cd8c8b" translate="yes" xml:space="preserve">
          <source>Sets Readline&amp;rsquo;s idea of the current keymap for key binding commands. Built-in &lt;code&gt;keymap&lt;/code&gt; names are &lt;code&gt;emacs&lt;/code&gt;, &lt;code&gt;emacs-standard&lt;/code&gt;, &lt;code&gt;emacs-meta&lt;/code&gt;, &lt;code&gt;emacs-ctlx&lt;/code&gt;, &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;vi-move&lt;/code&gt;, &lt;code&gt;vi-command&lt;/code&gt;, and &lt;code&gt;vi-insert&lt;/code&gt;. &lt;code&gt;vi&lt;/code&gt; is equivalent to &lt;code&gt;vi-command&lt;/code&gt; (&lt;code&gt;vi-move&lt;/code&gt; is also a synonym); &lt;code&gt;emacs&lt;/code&gt; is equivalent to &lt;code&gt;emacs-standard&lt;/code&gt;. Applications may add additional names. The default value is &lt;code&gt;emacs&lt;/code&gt;. The value of the &lt;code&gt;editing-mode&lt;/code&gt; variable also affects the default keymap.</source>
          <target state="translated">키 바인딩 명령에 대한 현재 키맵에 대한 Readline의 아이디어를 설정합니다. 내장 된 &lt;code&gt;keymap&lt;/code&gt; 이름은 &lt;code&gt;emacs&lt;/code&gt; , &lt;code&gt;emacs-standard&lt;/code&gt; , &lt;code&gt;emacs-meta&lt;/code&gt; , &lt;code&gt;emacs-ctlx&lt;/code&gt; , &lt;code&gt;vi&lt;/code&gt; , &lt;code&gt;vi-move&lt;/code&gt; , &lt;code&gt;vi-command&lt;/code&gt; 및 &lt;code&gt;vi-insert&lt;/code&gt; 입니다. &lt;code&gt;vi&lt;/code&gt; 는 &lt;code&gt;vi-command&lt;/code&gt; 과 같습니다 ( &lt;code&gt;vi-move&lt;/code&gt; 는 동의어입니다). &lt;code&gt;emacs&lt;/code&gt; 는 &lt;code&gt;emacs-standard&lt;/code&gt; 와 같습니다 . 응용 프로그램은 추가 이름을 추가 할 수 있습니다. 기본값은 &lt;code&gt;emacs&lt;/code&gt; 입니다. &lt;code&gt;editing-mode&lt;/code&gt; 변수 의 값은 기본 키맵에도 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="3a49ccc2576232caa2dd95f8bdd38a2ca972c0d1" translate="yes" xml:space="preserve">
          <source>Setting or unsetting the values of the &lt;code&gt;SHELL&lt;/code&gt;, &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt;, or &lt;code&gt;BASH_ENV&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; , &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; 또는 &lt;code&gt;BASH_ENV&lt;/code&gt; 변수 의 값을 설정 또는 설정 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="e3b65d7c3e46ead434002fe3b58aeec86663c091" translate="yes" xml:space="preserve">
          <source>Setting or unsetting the values of the &lt;code&gt;SHELL&lt;/code&gt;, &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;HISTFILE&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt;, or &lt;code&gt;BASH_ENV&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; , &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;HISTFILE&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; 또는 &lt;code&gt;BASH_ENV&lt;/code&gt; 변수 의 값을 설정하거나 설정 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="77f661950333a08ccfb3f50b2f949d19cd4d6394" translate="yes" xml:space="preserve">
          <source>Several builtin commands are described in other chapters: builtin commands which provide the Bash interface to the job control facilities (see &lt;a href=&quot;job-control-builtins&quot;&gt;Job Control Builtins&lt;/a&gt;), the directory stack (see &lt;a href=&quot;directory-stack-builtins&quot;&gt;Directory Stack Builtins&lt;/a&gt;), the command history (see &lt;a href=&quot;bash-history-builtins&quot;&gt;Bash History Builtins&lt;/a&gt;), and the programmable completion facilities (see &lt;a href=&quot;programmable-completion-builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;).</source>
          <target state="translated">여러 내장 명령은 다른 장에서 설명 : 작업 제어 설비 (참조로 배쉬 인터페이스를 제공하는 내장 명령 &lt;a href=&quot;job-control-builtins&quot;&gt;작업 제어 내장 명령을&lt;/a&gt; ), 디렉토리 스택 (참조 &lt;a href=&quot;directory-stack-builtins&quot;&gt;디렉토리 스택 내장 명령을&lt;/a&gt; ), 명령 기록 (참조 &lt;a href=&quot;bash-history-builtins&quot;&gt;배쉬 역사 내장 명령을&lt;/a&gt; ,)과을 프로그래밍 가능한 완료 기능 ( &lt;a href=&quot;programmable-completion-builtins&quot;&gt;프로그래밍 가능한 완료 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4feab33520e06128900166b2ea328a5a06d249a6" translate="yes" xml:space="preserve">
          <source>Several builtin commands are described in other chapters: builtin commands which provide the Bash interface to the job control facilities (see &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;Job Control Builtins&lt;/a&gt;), the directory stack (see &lt;a href=&quot;directory-stack-builtins#Directory-Stack-Builtins&quot;&gt;Directory Stack Builtins&lt;/a&gt;), the command history (see &lt;a href=&quot;bash-history-builtins#Bash-History-Builtins&quot;&gt;Bash History Builtins&lt;/a&gt;), and the programmable completion facilities (see &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;).</source>
          <target state="translated">몇 가지 기본 제공 명령이 다른 장에 설명되어 있습니다. Bash 인터페이스를 작업 제어 기능 ( &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;작업 제어 내장&lt;/a&gt; 참조)에 제공하는 내장 명령 , 디렉토리 스택 ( &lt;a href=&quot;directory-stack-builtins#Directory-Stack-Builtins&quot;&gt;디렉토리 스택 내장&lt;/a&gt; 참조 ), 명령 히스토리 ( &lt;a href=&quot;bash-history-builtins#Bash-History-Builtins&quot;&gt;Bash History Builtins&lt;/a&gt; 참조 ) 및 프로그래밍 가능한 완성 기능 ( &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="e6d3180a43adf88012ae0822bebd6ce1fe297729" translate="yes" xml:space="preserve">
          <source>Several shell options settable with the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) may be used to tailor the behavior of history expansion. If the &lt;code&gt;histverify&lt;/code&gt; shell option is enabled, and Readline is being used, history substitutions are not immediately passed to the shell parser. Instead, the expanded line is reloaded into the Readline editing buffer for further modification. If Readline is being used, and the &lt;code&gt;histreedit&lt;/code&gt; shell option is enabled, a failed history expansion will be reloaded into the Readline editing buffer for correction. The</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; 내장으로 설정할 수있는 몇 가지 쉘 옵션 ( &lt;a href=&quot;the-shopt-builtin&quot;&gt;Shopt 내장&lt;/a&gt; 참조 )을 사용하여 히스토리 확장의 동작을 조정할 수 있습니다. 는 IF &lt;code&gt;histverify&lt;/code&gt; 쉘 옵션이 활성화되고, Readline와를 사용하고, 역사 치환 즉시 쉘 파서에 전달되지 않습니다. 대신 확장 된 라인이 추가 수정을 위해 Readline 편집 버퍼로 다시로드됩니다. Readline이 사용 &lt;code&gt;histreedit&lt;/code&gt; 셸 옵션이 활성화 된 경우 실패한 내역 확장이 수정을 위해 Readline 편집 버퍼로 다시로드됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="7f10c9851eb8c4895108b5f89c564b7586ae422f" translate="yes" xml:space="preserve">
          <source>Several shell options settable with the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) may be used to tailor the behavior of history expansion. If the &lt;code&gt;histverify&lt;/code&gt; shell option is enabled, and Readline is being used, history substitutions are not immediately passed to the shell parser. Instead, the expanded line is reloaded into the Readline editing buffer for further modification. If Readline is being used, and the &lt;code&gt;histreedit&lt;/code&gt; shell option is enabled, a failed history expansion will be reloaded into the Readline editing buffer for correction. The</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; 내장 ( &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조)으로 설정 가능한 여러 쉘 옵션을 사용하여 히스토리 확장 동작을 조정할 수 있습니다. 는 IF &lt;code&gt;histverify&lt;/code&gt; 쉘 옵션이 활성화되고, Readline와를 사용하고, 역사 치환 즉시 쉘 파서에 전달되지 않습니다. 대신, 확장 된 라인은 추가 수정을 위해 Readline 편집 버퍼로 다시로드됩니다. Readline을 사용 &lt;code&gt;histreedit&lt;/code&gt; 쉘 옵션을 사용하면 실패한 히스토리 확장이 Readline 편집 버퍼에 다시로드되어 수정됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="e2d196d455c3fa9fd2a98bfab753b999179a09de" translate="yes" xml:space="preserve">
          <source>Sharing Defaults</source>
          <target state="translated">기본값 공유</target>
        </trans-unit>
        <trans-unit id="08ae113086eb582aa819b1629e571e4bac303741" translate="yes" xml:space="preserve">
          <source>Shell Arithmetic</source>
          <target state="translated">쉘 산술</target>
        </trans-unit>
        <trans-unit id="3224c1f995277e3c5557a97bdc2386d6237e62c4" translate="yes" xml:space="preserve">
          <source>Shell Builtin Commands</source>
          <target state="translated">쉘 내장 명령</target>
        </trans-unit>
        <trans-unit id="92d91c0e9c2e10b3624ca467a6cfec024511dd3e" translate="yes" xml:space="preserve">
          <source>Shell Commands</source>
          <target state="translated">쉘 명령</target>
        </trans-unit>
        <trans-unit id="1ce530cd62bb08bfd5537e97ff5f20ee8f04bd73" translate="yes" xml:space="preserve">
          <source>Shell Compatibility Mode</source>
          <target state="translated">셸 호환 모드</target>
        </trans-unit>
        <trans-unit id="dbe15e4425ec82a0d5b21173bc91dfd0998f4cbd" translate="yes" xml:space="preserve">
          <source>Shell Expansions</source>
          <target state="translated">쉘 확장</target>
        </trans-unit>
        <trans-unit id="6ee3b593f4af7c77fae3f3aa378ffe91031089fd" translate="yes" xml:space="preserve">
          <source>Shell Functions</source>
          <target state="translated">쉘 기능</target>
        </trans-unit>
        <trans-unit id="69452b908f6302de0fb97a5d52497b5b2c1174e8" translate="yes" xml:space="preserve">
          <source>Shell Operation</source>
          <target state="translated">쉘 조작</target>
        </trans-unit>
        <trans-unit id="04402536b9c3739d5f7e3de00b61d4f8d562e461" translate="yes" xml:space="preserve">
          <source>Shell Parameter Expansion</source>
          <target state="translated">쉘 파라미터 확장</target>
        </trans-unit>
        <trans-unit id="3d7a4b323b9101d60b9ab2b3abaf3e64499891d9" translate="yes" xml:space="preserve">
          <source>Shell Parameters</source>
          <target state="translated">쉘 매개 변수</target>
        </trans-unit>
        <trans-unit id="aa50f0db9287be939f20144d6840f9c4545e702e" translate="yes" xml:space="preserve">
          <source>Shell Scripts</source>
          <target state="translated">쉘 스크립트</target>
        </trans-unit>
        <trans-unit id="26b79140b03b1947a70c3de9ec506cf7e3c5b954" translate="yes" xml:space="preserve">
          <source>Shell Syntax</source>
          <target state="translated">쉘 구문</target>
        </trans-unit>
        <trans-unit id="93162630dd0aff4c4e1939514e8d48e6a8c32d57" translate="yes" xml:space="preserve">
          <source>Shell Variables</source>
          <target state="translated">쉘 변수</target>
        </trans-unit>
        <trans-unit id="3476c67124b4d34d36fc37118f2caf069faea78a" translate="yes" xml:space="preserve">
          <source>Shell commands for conditional execution.</source>
          <target state="translated">조건부 실행을위한 셸 명령</target>
        </trans-unit>
        <trans-unit id="5b04a421bc8120876e6ffda28fbbc5b6264ff922" translate="yes" xml:space="preserve">
          <source>Shell commands for control flow.</source>
          <target state="translated">제어 흐름을위한 셸 명령</target>
        </trans-unit>
        <trans-unit id="ae94644c817dfa4f668bdcc23cbcfe14256b26f2" translate="yes" xml:space="preserve">
          <source>Shell commands for iterative action.</source>
          <target state="translated">반복 조치를위한 쉘 명령.</target>
        </trans-unit>
        <trans-unit id="20426ce9c81cc681dd8f42b3df3e80340a6bbcd9" translate="yes" xml:space="preserve">
          <source>Shell functions are a way to group commands for later execution using a single name for the group. They are executed just like a &quot;regular&quot; command. When the name of a shell function is used as a simple command name, the list of commands associated with that function name is executed. Shell functions are executed in the current shell context; no new process is created to interpret them.</source>
          <target state="translated">셸 함수는 그룹의 단일 이름을 사용하여 나중에 실행하기 위해 명령을 그룹화하는 방법입니다. &quot;일반&quot;명령처럼 실행됩니다. 쉘 함수의 이름이 간단한 명령 이름으로 사용되면 해당 기능 이름과 관련된 명령 목록이 실행됩니다. 쉘 함수는 현재 쉘 컨텍스트에서 실행됩니다. 이를 해석하기 위해 새로운 프로세스가 작성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="223b2dfc9d14ad1df7c334e65fa42fbc43dc360f" translate="yes" xml:space="preserve">
          <source>Shell functions may be exported to children via the environment using &lt;code&gt;export -f&lt;/code&gt; (see &lt;a href=&quot;shell-functions&quot;&gt;Shell Functions&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;export -f&lt;/code&gt; 를 사용하여 환경을 통해 쉘 함수를 자식으로 내보낼 수 있습니다 ( &lt;a href=&quot;shell-functions&quot;&gt;쉘 함수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="27f0f8dc63fc5e0d5dfae93ddd52b0f79445f1fc" translate="yes" xml:space="preserve">
          <source>Shell functions may be exported to children via the environment using &lt;code&gt;export -f&lt;/code&gt; (see &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell Functions&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;export -f&lt;/code&gt; 를 사용하여 환경을 통해 셸 함수를 자식으로 내보낼 수 있습니다 ( &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell 함수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="51331646579eb7a4e3f770b01a46efcf62ac5d54" translate="yes" xml:space="preserve">
          <source>Shell option names as accepted by the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; 내장에서 허용하는 쉘 옵션 이름 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7f1a591344ef38c27c0c7dc56e92d5db90adbf72" translate="yes" xml:space="preserve">
          <source>Shell option names as accepted by the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; 내장에서 허용하는 쉘 옵션 이름 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0781bf8a9c56e345f59cfe1818bdacc0bf126a89" translate="yes" xml:space="preserve">
          <source>Shell reserved words. May also be specified as</source>
          <target state="translated">쉘 예약어. 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="1d7ee07fe38a4b232bddcfd2444ad9556dc0b6c5" translate="yes" xml:space="preserve">
          <source>Shell variables are allowed as operands; parameter expansion is performed before the expression is evaluated. Within an expression, shell variables may also be referenced by name without using the parameter expansion syntax. A shell variable that is null or unset evaluates to 0 when referenced by name without using the parameter expansion syntax. The value of a variable is evaluated as an arithmetic expression when it is referenced, or when a variable which has been given the &lt;var&gt;integer&lt;/var&gt; attribute using &amp;lsquo;</source>
          <target state="translated">쉘 변수는 피연산자로 허용됩니다. 표현식이 평가되기 전에 매개 변수 확장이 수행됩니다. 표현식 내에서 매개 변수 확장 구문을 사용하지 않고 쉘 변수를 이름으로 참조 할 수도 있습니다. 널 또는 설정되지 않은 쉘 변수는 매개 변수 확장 구문을 사용하지 않고 이름으로 참조 될 때 0으로 평가됩니다. 변수의 값이 참조 될 때 연산 식으로 평가 될 때 또는 특정 된 변수 &lt;var&gt;integer&lt;/var&gt; '속성을 이용하여</target>
        </trans-unit>
        <trans-unit id="8d4c0d2e6f6557fb9359dc74d3bd7455c33e50d6" translate="yes" xml:space="preserve">
          <source>Shells also provide a small set of built-in commands (&lt;em&gt;builtins&lt;/em&gt;) implementing functionality impossible or inconvenient to obtain via separate utilities. For example, &lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;exec&lt;/code&gt; cannot be implemented outside of the shell because they directly manipulate the shell itself. The &lt;code&gt;history&lt;/code&gt;, &lt;code&gt;getopts&lt;/code&gt;, &lt;code&gt;kill&lt;/code&gt;, or &lt;code&gt;pwd&lt;/code&gt; builtins, among others, could be implemented in separate utilities, but they are more convenient to use as builtin commands. All of the shell builtins are described in subsequent sections.</source>
          <target state="translated">쉘은 또한 별도의 유틸리티를 통해 얻을 수 없거나 불편한 기능을 구현 하는 작은 내장 명령 세트 ( &lt;em&gt;builtins&lt;/em&gt; )를 제공합니다. 예를 들어 &lt;code&gt;cd&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; , &lt;code&gt;continue&lt;/code&gt; 및 &lt;code&gt;exec&lt;/code&gt; 는 셸 자체를 직접 조작하기 때문에 셸 외부에서 구현할 수 없습니다. &lt;code&gt;history&lt;/code&gt; , &lt;code&gt;getopts&lt;/code&gt; 가 , &lt;code&gt;kill&lt;/code&gt; , 또는 &lt;code&gt;pwd&lt;/code&gt; 내장 매크로는, 다른 사람의 사이에서, 별도의 유틸리티에서 구현 될 수 있지만, 그들은 명령 내장으로 사용하는 것이 더 편리합니다. 모든 쉘 내장은 다음 섹션에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a433a104039438ebe5b989ec494978c370eccb94" translate="yes" xml:space="preserve">
          <source>Shells may be used interactively or non-interactively. In interactive mode, they accept input typed from the keyboard. When executing non-interactively, shells execute commands read from a file.</source>
          <target state="translated">쉘은 대화식 또는 비 대화식으로 사용될 수 있습니다. 대화식 모드에서는 키보드에서 입력 된 입력을 수락합니다. 비 대화식으로 실행할 때, 쉘은 파일에서 읽은 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9eb81eefcb76608f374cbcb2b07579d3e8b060c1" translate="yes" xml:space="preserve">
          <source>Shells offer features geared specifically for interactive use rather than to augment the programming language. These interactive features include job control, command line editing, command history and aliases. Each of these features is described in this manual.</source>
          <target state="translated">쉘은 프로그래밍 언어를 향상시키기보다는 대화식으로 사용하도록 특별히 설계된 기능을 제공합니다. 이러한 대화식 기능에는 작업 제어, 명령 줄 편집, 명령 기록 및 별칭이 포함됩니다. 이 기능들 각각은이 매뉴얼에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f896fafe6b01291f5878b4b487b78dec55078176" translate="yes" xml:space="preserve">
          <source>Shift the positional parameters to the left by &lt;var&gt;n&lt;/var&gt;. The positional parameters from &lt;var&gt;n&lt;/var&gt;+1 &amp;hellip; &lt;code&gt;$#&lt;/code&gt; are renamed to &lt;code&gt;$1&lt;/code&gt; &amp;hellip; &lt;code&gt;$#&lt;/code&gt;-&lt;var&gt;n&lt;/var&gt;. Parameters represented by the numbers &lt;code&gt;$#&lt;/code&gt; down to &lt;code&gt;$#&lt;/code&gt;-&lt;var&gt;n&lt;/var&gt;+1 are unset. &lt;var&gt;n&lt;/var&gt; must be a non-negative number less than or equal to &lt;code&gt;$#&lt;/code&gt;. If &lt;var&gt;n&lt;/var&gt; is zero or greater than &lt;code&gt;$#&lt;/code&gt;, the positional parameters are not changed. If &lt;var&gt;n&lt;/var&gt; is not supplied, it is assumed to be 1. The return status is zero unless &lt;var&gt;n&lt;/var&gt; is greater than &lt;code&gt;$#&lt;/code&gt; or less than zero, non-zero otherwise.</source>
          <target state="translated">위치 매개 변수를 &lt;var&gt;n&lt;/var&gt; 만큼 왼쪽으로 이동합니다 . 에서 위치 매개 변수 &lt;var&gt;n&lt;/var&gt; +1은 ... &lt;code&gt;$#&lt;/code&gt; 로 이름이 변경 &lt;code&gt;$1&lt;/code&gt; ... &lt;code&gt;$#&lt;/code&gt; - &lt;var&gt;n&lt;/var&gt; 은 . 숫자로 표현 매개 변수 &lt;code&gt;$#&lt;/code&gt; 아래로 &lt;code&gt;$#&lt;/code&gt; - &lt;var&gt;n&lt;/var&gt; 은 +1이 해제됩니다. &lt;var&gt;n&lt;/var&gt; 은 &lt;code&gt;$#&lt;/code&gt; 보다 작거나 같은 음수가 아닌 숫자 여야합니다 . 경우 &lt;var&gt;n&lt;/var&gt; 이 제로 또는보다 큰 &lt;code&gt;$#&lt;/code&gt; , 위치 매개 변수를 변경하지 않는다. 경우 &lt;var&gt;n&lt;/var&gt; 을 제공하지, 반환 상태가 않는 제로 1로 가정 &lt;var&gt;n&lt;/var&gt; 보다 큰 &lt;code&gt;$#&lt;/code&gt; 또는 0 미만, 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7ac8dead1aeafe4ea6bf7399a5dda03f74e006e5" translate="yes" xml:space="preserve">
          <source>Shift the positional parameters to the left by &lt;var&gt;n&lt;/var&gt;. The positional parameters from &lt;var&gt;n&lt;/var&gt;+1 &amp;hellip; &lt;code&gt;$#&lt;/code&gt; are renamed to &lt;code&gt;$1&lt;/code&gt; &amp;hellip; &lt;code&gt;$#&lt;/code&gt;-&lt;var&gt;n&lt;/var&gt;. Parameters represented by the numbers &lt;code&gt;$#&lt;/code&gt; to &lt;code&gt;$#&lt;/code&gt;-&lt;var&gt;n&lt;/var&gt;+1 are unset. &lt;var&gt;n&lt;/var&gt; must be a non-negative number less than or equal to &lt;code&gt;$#&lt;/code&gt;. If &lt;var&gt;n&lt;/var&gt; is zero or greater than &lt;code&gt;$#&lt;/code&gt;, the positional parameters are not changed. If &lt;var&gt;n&lt;/var&gt; is not supplied, it is assumed to be 1. The return status is zero unless &lt;var&gt;n&lt;/var&gt; is greater than &lt;code&gt;$#&lt;/code&gt; or less than zero, non-zero otherwise.</source>
          <target state="translated">위치 매개 변수를 왼쪽으로 &lt;var&gt;n&lt;/var&gt; 만큼 이동합니다 . 에서 위치 매개 변수 &lt;var&gt;n&lt;/var&gt; +1은 ... &lt;code&gt;$#&lt;/code&gt; 로 이름이 변경 &lt;code&gt;$1&lt;/code&gt; ... &lt;code&gt;$#&lt;/code&gt; - &lt;var&gt;n&lt;/var&gt; 은 . 숫자로 표현 매개 변수 &lt;code&gt;$#&lt;/code&gt; 에 &lt;code&gt;$#&lt;/code&gt; - &lt;var&gt;n&lt;/var&gt; 은 +1이 해제됩니다. &lt;var&gt;n&lt;/var&gt; 은 &lt;code&gt;$#&lt;/code&gt; 보다 작거나 같은 음수가 아닌 숫자 여야합니다 . 경우 &lt;var&gt;n&lt;/var&gt; 이 제로 또는보다 큰 &lt;code&gt;$#&lt;/code&gt; , 위치 매개 변수를 변경하지 않는다. 경우 &lt;var&gt;n&lt;/var&gt; 을 제공하지, 반환 상태가 않는 제로 1로 가정 &lt;var&gt;n&lt;/var&gt; 보다 큰 &lt;code&gt;$#&lt;/code&gt; 0보다 작거나 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c822bc3bd77ace807b4d33002b28e7e24a820c4c" translate="yes" xml:space="preserve">
          <source>Show version information for this instance of Bash on the standard output and exit successfully.</source>
          <target state="translated">이 Bash 인스턴스에 대한 버전 정보를 표준 출력에 표시하고 성공적으로 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="3b8326ef8c6a0e70f9e778423fc49c4cc27d863c" translate="yes" xml:space="preserve">
          <source>Signal names.</source>
          <target state="translated">신호 이름.</target>
        </trans-unit>
        <trans-unit id="f3efc39c953e54d1c56df25af3905e60709e6ca2" translate="yes" xml:space="preserve">
          <source>Signal the end of options, cause all remaining &lt;var&gt;arguments&lt;/var&gt; to be assigned to the positional parameters. The</source>
          <target state="translated">옵션의 끝을 알리면 나머지 모든 &lt;var&gt;arguments&lt;/var&gt; 가 위치 매개 변수에 지정됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="2fc184e8aaf7e52a21146d63435b11b1c0addca6" translate="yes" xml:space="preserve">
          <source>Signals ignored upon entry to the shell cannot be trapped or reset. Trapped signals that are not being ignored are reset to their original values in a subshell or subshell environment when one is created.</source>
          <target state="translated">쉘에 진입 할 때 무시 된 신호는 트랩하거나 재설정 할 수 없습니다. 무시되지 않은 트랩 된 신호는 생성 될 때 서브 쉘 또는 서브 쉘 환경에서 원래 값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3bf57e58b2ac73a2a1b3bd6d9abbcbb52433e971" translate="yes" xml:space="preserve">
          <source>Silent mode. If input is coming from a terminal, characters are not echoed.</source>
          <target state="translated">무음 모드. 터미널에서 입력이 오는 경우 문자가 에코되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="827cbc5ae32bef8bfd180b3a0a6e2b45bc72ccfe" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;BASH_ENV&lt;/code&gt;; used when the shell is invoked in &lt;small&gt;POSIX&lt;/small&gt; Mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;BASH_ENV&lt;/code&gt; 와 유사 ; &lt;small&gt;POSIX&lt;/small&gt; 모드 에서 쉘이 호출 될 때 사용됩니다 ( &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7b21cfb73a5a6159cb20592afcfddec78da0d021" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;complete&lt;/code&gt;, but replaces the word to be completed with a single match from the list of possible completions. Repeated execution of &lt;code&gt;menu-complete&lt;/code&gt; steps through the list of possible completions, inserting each match in turn. At the end of the list of completions, the bell is rung (subject to the setting of &lt;code&gt;bell-style&lt;/code&gt;) and the original text is restored. An argument of &lt;var&gt;n&lt;/var&gt; moves &lt;var&gt;n&lt;/var&gt; positions forward in the list of matches; a negative argument may be used to move backward through the list. This command is intended to be bound to &lt;code&gt;TAB&lt;/code&gt;, but is unbound by default.</source>
          <target state="translated">유사합니다 &lt;code&gt;complete&lt;/code&gt; ,하지만 가능한 완성 목록에서 하나의 경기를 완료 할 수있는 단어를 대체합니다. 가능한 완료 목록을 통해 &lt;code&gt;menu-complete&lt;/code&gt; 단계를 반복 실행하여 각 일치 항목을 차례로 삽입합니다. 완료 목록이 끝나면 벨이 울리고 ( &lt;code&gt;bell-style&lt;/code&gt; 설정에 따라) 원본 텍스트가 복원됩니다. &lt;var&gt;n&lt;/var&gt; 의 인수는 일치 목록에서 &lt;var&gt;n&lt;/var&gt; 개의 위치를 앞으로 이동 시킵니다. 음수 인수를 사용하여 목록을 뒤로 이동할 수 있습니다. 이 명령은 &lt;code&gt;TAB&lt;/code&gt; 에 바인드되지만 기본적으로 바인드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3000175f72eb6a81cd8830b24f1026a1d89430a8" translate="yes" xml:space="preserve">
          <source>Similarly, the redirection operator</source>
          <target state="translated">마찬가지로 리디렉션 연산자</target>
        </trans-unit>
        <trans-unit id="82afd67b5cde7618bc8aa8b2d1f2d648d44ad831" translate="yes" xml:space="preserve">
          <source>Simple Command Expansion</source>
          <target state="translated">간단한 명령 확장</target>
        </trans-unit>
        <trans-unit id="9191ec290d05a1dc1998165d8ee7fc38f7fa3794" translate="yes" xml:space="preserve">
          <source>Simple Commands</source>
          <target state="translated">간단한 명령</target>
        </trans-unit>
        <trans-unit id="fdbe4bd4da72242c0eb844278bdd33cc13aab96f" translate="yes" xml:space="preserve">
          <source>Simple spelling correction for directory arguments to the &lt;code&gt;cd&lt;/code&gt; builtin is enabled by default (see the description of the &lt;code&gt;cdspell&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin in &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; 내장에 대한 디렉토리 인수에 대한 간단한 철자 수정은 기본적으로 활성화되어 있습니다 ( &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; 의 &lt;code&gt;shopt&lt;/code&gt; 내장에 대한 &lt;code&gt;cdspell&lt;/code&gt; 옵션 설명 참조 ).</target>
        </trans-unit>
        <trans-unit id="f9e6f993a188b102cab4f8eaef586eb697aced4b" translate="yes" xml:space="preserve">
          <source>Simple spelling correction for directory arguments to the &lt;code&gt;cd&lt;/code&gt; builtin is enabled by default (see the description of the &lt;code&gt;cdspell&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin in &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;).</source>
          <target state="translated">받는 디렉토리 인수에 대한 간단한 맞춤법 교정 &lt;code&gt;cd&lt;/code&gt; 내장은 기본적으로 활성화되어 있습니다 (의 설명을 참조 &lt;code&gt;cdspell&lt;/code&gt; 를 받는 옵션 &lt;code&gt;shopt&lt;/code&gt; 내부에 있는 내장 &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;shopt 내부 기본 제공된을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="672df289de5efa46029d357bc59ba26f8c054eac" translate="yes" xml:space="preserve">
          <source>Simply naming a job can be used to bring it into the foreground: &amp;lsquo;</source>
          <target state="translated">간단히 작업 이름을 지정하여 포 그라운드로 가져올 수 있습니다. '</target>
        </trans-unit>
        <trans-unit id="70347df7e7ad67ef6a730c9cfd8ac885732b89de" translate="yes" xml:space="preserve">
          <source>Since Bash is a completely new implementation, it does not suffer from many of the limitations of the SVR4.2 shell. For instance:</source>
          <target state="translated">Bash는 완전히 새로운 구현이므로 SVR4.2 셸의 많은 제한이 없습니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="d5b5a1f4cdfaad0dc2b531593f9148d474721fa5" translate="yes" xml:space="preserve">
          <source>Since the coprocess is created as an asynchronous command, the &lt;code&gt;coproc&lt;/code&gt; command always returns success. The return status of a coprocess is the exit status of &lt;var&gt;command&lt;/var&gt;.</source>
          <target state="translated">coprocess는 비동기 명령으로 작성되므로 &lt;code&gt;coproc&lt;/code&gt; 명령은 항상 성공을 리턴합니다. 코 프로세스의 리턴 상태는 &lt;var&gt;command&lt;/var&gt; 의 종료 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="2b154d88740e8eb4c99d20b375f601490b0c626f" translate="yes" xml:space="preserve">
          <source>Since we&amp;rsquo;d like Bash and Readline to take care of some of the other details for us, we use several other options to tell Bash and Readline what to do. The</source>
          <target state="translated">우리는 Bash와 Readline이 우리를 위해 다른 세부 사항을 처리하기를 원하기 때문에 Bash와 Readline에게 무엇을해야하는지 알리기 위해 몇 가지 다른 옵션을 사용합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="4530f93a4bcf9d5873d117244d6fb7434ad7291d" translate="yes" xml:space="preserve">
          <source>Single Quotes</source>
          <target state="translated">작은 따옴표</target>
        </trans-unit>
        <trans-unit id="4f71fcec716bd20f7ae00979dd112873b9d2c16e" translate="yes" xml:space="preserve">
          <source>So, typically, your</source>
          <target state="translated">일반적으로</target>
        </trans-unit>
        <trans-unit id="cdd3761332b5cb397c5d157377cce62bdeeab667" translate="yes" xml:space="preserve">
          <source>Some Miscellaneous Commands</source>
          <target state="translated">기타 명령</target>
        </trans-unit>
        <trans-unit id="267255a4c12ab1f2e8f5254abfd3c1a6926bc3b9" translate="yes" xml:space="preserve">
          <source>Some definitions used in the rest of this manual.</source>
          <target state="translated">이 매뉴얼의 나머지 부분에서 사용 된 일부 정의.</target>
        </trans-unit>
        <trans-unit id="716642fefc8eff532c604a56df422b943cbe20a8" translate="yes" xml:space="preserve">
          <source>Some systems require unusual options for compilation or linking that the &lt;code&gt;configure&lt;/code&gt; script does not know about. You can give &lt;code&gt;configure&lt;/code&gt; initial values for variables by setting them in the environment. Using a Bourne-compatible shell, you can do that on the command line like this:</source>
          <target state="translated">일부 시스템에는 &lt;code&gt;configure&lt;/code&gt; 스크립트가 모르는 컴파일 또는 링크를위한 특별한 옵션이 필요합니다 . 환경에서 변수를 설정하여 변수의 초기 값을 &lt;code&gt;configure&lt;/code&gt; 할 수 있습니다 . Bourne 호환 쉘을 사용하면 다음과 같이 명령 행에서 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5610d9d90508da204eed446c5792bcb2dab655d" translate="yes" xml:space="preserve">
          <source>Some systems use the message catalog selected by the &lt;code&gt;LC_MESSAGES&lt;/code&gt; shell variable. Others create the name of the message catalog from the value of the &lt;code&gt;TEXTDOMAIN&lt;/code&gt; shell variable, possibly adding a suffix of &amp;lsquo;</source>
          <target state="translated">일부 시스템은 &lt;code&gt;LC_MESSAGES&lt;/code&gt; 쉘 변수로 선택된 메시지 카탈로그를 사용합니다 . 다른 사람들은 &lt;code&gt;TEXTDOMAIN&lt;/code&gt; 쉘 변수 의 값에서 메시지 카탈로그의 이름을 작성하며 , 접미사 '</target>
        </trans-unit>
        <trans-unit id="4cc19e38022491397d40ea19863a5ab7f9c89402" translate="yes" xml:space="preserve">
          <source>Sometimes you may mistype a character, and not notice the error until you have typed several other characters. In that case, you can type</source>
          <target state="translated">경우에 따라 문자를 잘못 입력하고 다른 문자를 여러 번 입력 할 때까지 오류가 표시되지 않을 수 있습니다. 이 경우 다음을 입력 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6d8dca75d136f56c64bea5f7cdbda0676f01bd06" translate="yes" xml:space="preserve">
          <source>Special Builtins</source>
          <target state="translated">특별 내장</target>
        </trans-unit>
        <trans-unit id="9b2524eba27fcc9c2fa282010d1fdf784e31bdd6" translate="yes" xml:space="preserve">
          <source>Special Parameters</source>
          <target state="translated">특수 매개 변수</target>
        </trans-unit>
        <trans-unit id="b4284bcd219d11a9324304d2338552970cf17fdf" translate="yes" xml:space="preserve">
          <source>Special builtins are found before shell functions during command lookup.</source>
          <target state="translated">명령 조회 중에 쉘 기능 앞에 특수 내장이 있습니다.</target>
        </trans-unit>
        <trans-unit id="23821f0285b46591429dc6a8cfaba4bb07cad8c4" translate="yes" xml:space="preserve">
          <source>Specifies the duration Readline will wait for a character when reading an ambiguous key sequence (one that can form a complete key sequence using the input read so far, or can take additional input to complete a longer key sequence). If no input is received within the timeout, Readline will use the shorter but complete key sequence. Readline uses this value to determine whether or not input is available on the current input source (&lt;code&gt;rl_instream&lt;/code&gt; by default). The value is specified in milliseconds, so a value of 1000 means that Readline will wait one second for additional input. If this variable is set to a value less than or equal to zero, or to a non-numeric value, Readline will wait until another key is pressed to decide which key sequence to complete. The default value is &lt;code&gt;500&lt;/code&gt;.</source>
          <target state="translated">모호한 키 시퀀스를 읽을 때 Readline이 문자를 기다리는 기간 (지금까지 입력 읽기를 사용하여 완전한 키 시퀀스를 형성하거나 더 긴 키 시퀀스를 완료하기 위해 추가 입력을받을 수있는 기간)을 지정합니다. 제한 시간 내에 입력이 없으면 Readline은 더 짧지 만 완전한 키 시퀀스를 사용합니다. Readline은이 값을 사용하여 현재 입력 소스에서 입력을 사용할 수 있는지 여부를 결정합니다 ( 기본적으로 &lt;code&gt;rl_instream&lt;/code&gt; ). 값은 밀리 초 단위로 지정되므로 값 1000은 Readline이 추가 입력을 1 초 동안 기다립니다. 이 변수가 0보다 작거나 같은 값 또는 숫자가 아닌 값으로 설정되면 Readline은 다른 키를 누를 때까지 기다렸다가 어떤 키 시퀀스를 완료할지 결정합니다. 기본값은 &lt;code&gt;500&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5222a18a9654c60789ddc0da9128a40060e89f2f" translate="yes" xml:space="preserve">
          <source>Specify how arguments to each &lt;var&gt;name&lt;/var&gt; should be completed. If the</source>
          <target state="translated">각 &lt;var&gt;name&lt;/var&gt; 대한 인수를 완료 하는 방법을 지정하십시오 . 만약</target>
        </trans-unit>
        <trans-unit id="c112a66ed12a55f4331917a809dd1767c302bf43" translate="yes" xml:space="preserve">
          <source>Specify the number of lines read between each call to &lt;var&gt;callback&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;callback&lt;/var&gt; 각 호출 사이에서 읽을 행 수를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3fa6d950b2d286308afe1a5c75d3e0f8691903d" translate="yes" xml:space="preserve">
          <source>Specifying Numeric Arguments</source>
          <target state="translated">숫자 인수 지정</target>
        </trans-unit>
        <trans-unit id="0c0999f4fe5537ea61c523c861300c027d97cd8c" translate="yes" xml:space="preserve">
          <source>Specifying a filename containing a slash as an argument to the</source>
          <target state="translated">슬래시를 포함하는 파일 이름을</target>
        </trans-unit>
        <trans-unit id="f0c26cd33355ad993229d0f3ea4e5d2347edeb06" translate="yes" xml:space="preserve">
          <source>Specifying a filename containing a slash as an argument to the &lt;code&gt;.&lt;/code&gt; builtin command.</source>
          <target state="translated">슬래시가 포함 된 파일 이름을에 대한 인수로 지정합니다 &lt;code&gt;.&lt;/code&gt; 내장 명령.</target>
        </trans-unit>
        <trans-unit id="51ceb8363fc03f61d2f80843d2326c21bbc37599" translate="yes" xml:space="preserve">
          <source>Specifying a filename containing a slash as an argument to the &lt;code&gt;history&lt;/code&gt; builtin command.</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; 내장 명령에 대한 인수로 슬래시를 포함하는 파일 이름 지정 .</target>
        </trans-unit>
        <trans-unit id="ca7980bd6666882557454c12c082d31e19357b8d" translate="yes" xml:space="preserve">
          <source>Specifying command names containing slashes.</source>
          <target state="translated">슬래시를 포함하는 명령 이름 지정</target>
        </trans-unit>
        <trans-unit id="b0614b1458f29370837997f3884f2f67eef6b3a2" translate="yes" xml:space="preserve">
          <source>Specifying numeric arguments, repeat counts.</source>
          <target state="translated">숫자 인수, 반복 횟수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4ee9cc1aa83bf2a8aaa7d549089eae697b9df2fe" translate="yes" xml:space="preserve">
          <source>Specifying the</source>
          <target state="translated">지정</target>
        </trans-unit>
        <trans-unit id="ccd867e0b6c84b172f4591340d20683e753516a5" translate="yes" xml:space="preserve">
          <source>Specifying the System Type</source>
          <target state="translated">시스템 유형 지정</target>
        </trans-unit>
        <trans-unit id="1ddd6c68b69ac72e74b7c6dd880d33038a2c0fd9" translate="yes" xml:space="preserve">
          <source>Specifying which words are of interest.</source>
          <target state="translated">관심있는 단어를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="4aeb0df67539cf0c420761a22a693cfaa12ff150" translate="yes" xml:space="preserve">
          <source>Start a history substitution, except when followed by a space, tab, the end of the line, &amp;lsquo;</source>
          <target state="translated">공백, 탭, 줄 끝, '을 제외한 기록 대체를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="567c88b266168afafca473cddd7cbcbcb2b323e9" translate="yes" xml:space="preserve">
          <source>Starting Bash with the</source>
          <target state="translated">와 Bash 시작</target>
        </trans-unit>
        <trans-unit id="fd4754d842f6f5f12edcb79c44e52b76707eb3d5" translate="yes" xml:space="preserve">
          <source>Startup files are read and executed as described in &lt;a href=&quot;bash-startup-files&quot;&gt;Bash Startup Files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;bash-startup-files&quot;&gt;Bash 시작 파일에&lt;/a&gt; 설명 된대로 시작 파일을 읽고 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="e0c034a3aae5a5676d844a90819757e63cb5a133" translate="yes" xml:space="preserve">
          <source>Startup files are read and executed as described in &lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bash Startup Files&lt;/a&gt;.</source>
          <target state="translated">시작 파일은 &lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bash 시작 파일에&lt;/a&gt; 설명 된대로 읽고 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="febcaae4d914201f022c687fa2f0ffb7282a9b2a" translate="yes" xml:space="preserve">
          <source>State on the Title page the name of the publisher of the Modified Version, as the publisher.</source>
          <target state="translated">제목 페이지에 수정 된 버전의 게시자 이름을 게시자로 명시하십시오.</target>
        </trans-unit>
        <trans-unit id="dd125f9995ef5b864e6f1a55c7cdd9d9fb571ec7" translate="yes" xml:space="preserve">
          <source>Stop saving the characters typed into the current keyboard macro and save the definition.</source>
          <target state="translated">현재 키보드 매크로에 입력 한 문자 저장을 중지하고 정의를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="3cbdce06be5b0cd21c7f995d5df1c2cade5fc4fb" translate="yes" xml:space="preserve">
          <source>Store the text displayed by the &lt;code&gt;help&lt;/code&gt; builtin as a single string for each help topic. This aids in translating the text to different languages. You may need to disable this if your compiler cannot handle very long string literals.</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 내장에 의해 표시되는 텍스트 를 각 도움말 주제에 대한 단일 문자열로 저장하십시오 . 텍스트를 다른 언어로 번역하는 데 도움이됩니다. 컴파일러가 매우 긴 문자열 리터럴을 처리 할 수없는 경우이를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="26c2392593f2a16bfab44fa86459133e28013fc5" translate="yes" xml:space="preserve">
          <source>Storing the regular expression in a shell variable is often a useful way to avoid problems with quoting characters that are special to the shell. It is sometimes difficult to specify a regular expression literally without using quotes, or to keep track of the quoting used by regular expressions while paying attention to the shell&amp;rsquo;s quote removal. Using a shell variable to store the pattern decreases these problems. For example, the following is equivalent to the above:</source>
          <target state="translated">쉘 변수에 정규식을 저장하는 것은 종종 쉘에 특수한 문자를 인용 할 때 문제를 피하는 유용한 방법입니다. 따옴표를 사용하지 않고 문자 그대로 정규식을 지정하거나 쉘의 따옴표 제거에주의하면서 정규식이 사용하는 인용 부호를 추적하기가 어려운 경우가 있습니다. 쉘 변수를 사용하여 패턴을 저장하면 이러한 문제가 줄어 듭니다. 예를 들어 다음은 위와 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b155d5700514743f0c7f7adc1a55dc38f1ba951" translate="yes" xml:space="preserve">
          <source>Subshells spawned to execute command substitutions inherit the value of the</source>
          <target state="translated">명령 대체를 실행하기 위해 생성 된 서브 쉘은</target>
        </trans-unit>
        <trans-unit id="71d46f3a0a1ff642a10ba92fc50490f031bb5881" translate="yes" xml:space="preserve">
          <source>Substitute &lt;var&gt;new&lt;/var&gt; for the first occurrence of &lt;var&gt;old&lt;/var&gt; in the event line. Any character may be used as the delimiter in place of &amp;lsquo;</source>
          <target state="translated">이벤트 줄에서 처음 나타나는 &lt;var&gt;old&lt;/var&gt; 항목을 &lt;var&gt;new&lt;/var&gt; 항목으로 대체 합니다. '대신 구분 기호로 모든 문자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44b23aa091715e507faf023e66179c120e087995" translate="yes" xml:space="preserve">
          <source>Substitute &lt;var&gt;new&lt;/var&gt; for the first occurrence of &lt;var&gt;old&lt;/var&gt; in the event line. Any delimiter may be used in place of &amp;lsquo;</source>
          <target state="translated">대체 &lt;var&gt;new&lt;/var&gt; 의 첫 번째 항목에 대한 &lt;var&gt;old&lt;/var&gt; 이벤트 라인이다. '대신에 모든 구분 기호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="386957cc04a842e19b9a0a5cfba54b5a1d529693" translate="yes" xml:space="preserve">
          <source>Substituting one command for another.</source>
          <target state="translated">한 명령을 다른 명령으로 대체.</target>
        </trans-unit>
        <trans-unit id="1a08ebe654dec2de8af5a599fe1989fd48d21d08" translate="yes" xml:space="preserve">
          <source>Substring expansion applied to an associative array produces undefined results.</source>
          <target state="translated">연관 배열에 적용된 부분 문자열 확장은 정의되지 않은 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="783ec98074efb7c0f66795cbe99c7270b135bc96" translate="yes" xml:space="preserve">
          <source>Substring indexing is zero-based unless the positional parameters are used, in which case the indexing starts at 1 by default. If &lt;var&gt;offset&lt;/var&gt; is 0, and the positional parameters are used, &lt;code&gt;$0&lt;/code&gt; is prefixed to the list.</source>
          <target state="translated">위치 매개 변수를 사용하지 않는 한 하위 문자열 인덱싱은 0부터 시작합니다.이 경우 인덱싱은 기본적으로 1부터 시작됩니다. 경우 &lt;var&gt;offset&lt;/var&gt; 0이며, 위치 매개 변수를 사용하는, &lt;code&gt;$0&lt;/code&gt; 목록 접두어.</target>
        </trans-unit>
        <trans-unit id="467037fc7b3205138457b59ccf0f9883df1d6797" translate="yes" xml:space="preserve">
          <source>Substring indexing is zero-based unless the positional parameters are used, in which case the indexing starts at 1 by default. If &lt;var&gt;offset&lt;/var&gt; is 0, and the positional parameters are used, &lt;code&gt;$@&lt;/code&gt; is prefixed to the list.</source>
          <target state="translated">위치 매개 변수를 사용하지 않으면 서브 스트링 인덱싱은 0부터 시작합니다.이 경우 인덱싱은 기본적으로 1에서 시작합니다. 경우 &lt;var&gt;offset&lt;/var&gt; 0이고, 위치 매개 변수가 사용되는, &lt;code&gt;$@&lt;/code&gt; 목록에 앞에 붙습니다.</target>
        </trans-unit>
        <trans-unit id="bf0fe992457159cf8f5e272dc0000e0e754ad9fd" translate="yes" xml:space="preserve">
          <source>Suppresses normal output; the return status indicates whether the &lt;var&gt;optname&lt;/var&gt; is set or unset. If multiple &lt;var&gt;optname&lt;/var&gt; arguments are given with</source>
          <target state="translated">정상 출력을 억제합니다. 반환 상태는 &lt;var&gt;optname&lt;/var&gt; 설정 여부를 나타냅니다 . 여러 개의 &lt;var&gt;optname&lt;/var&gt; 인수가 함께 제공된 경우</target>
        </trans-unit>
        <trans-unit id="a01a5b1fe63cc9365811d0495d3e40c1e73353ee" translate="yes" xml:space="preserve">
          <source>Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.</source>
          <target state="translated">스택에서 디렉토리를 제거 할 때 일반적인 디렉토리 변경을 억제하여 스택 만 조작합니다.</target>
        </trans-unit>
        <trans-unit id="4b17845f92bf55cf0cf988dc6770d9124a4f4f4c" translate="yes" xml:space="preserve">
          <source>Suppresses the normal change of directory when rotating or adding directories to the stack, so that only the stack is manipulated.</source>
          <target state="translated">디렉토리를 회전하거나 스택에 추가 할 때 디렉토리 만 정상적으로 변경되도록 디렉토리의 정상적인 변경을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="cc48ae9442f6fae353775185195b5b1399d37158" translate="yes" xml:space="preserve">
          <source>Suspend the execution of this shell until it receives a &lt;code&gt;SIGCONT&lt;/code&gt; signal. A login shell cannot be suspended; the</source>
          <target state="translated">&lt;code&gt;SIGCONT&lt;/code&gt; 신호를 받을 때까지이 쉘의 실행을 일시 중단하십시오 . 로그인 쉘은 일시 중단 될 수 없습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="fbb7520495f229a0ffbc71b6ad31860cc65abc60" translate="yes" xml:space="preserve">
          <source>Swap the point with the mark. The current cursor position is set to the saved position, and the old cursor position is saved as the mark.</source>
          <target state="translated">포인트를 마크로 바꿉니다. 현재 커서 위치가 저장된 위치로 설정되고 이전 커서 위치가 마크로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="d3f544332c62b864dd7b6240ba9664e2648c85ba" translate="yes" xml:space="preserve">
          <source>Syntax for the commands in the inputrc file.</source>
          <target state="translated">inputrc 파일의 명령 구문.</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="9f84fa056f6a083c24eaf10179bc22047265f97e" translate="yes" xml:space="preserve">
          <source>TERMINATION</source>
          <target state="translated">TERMINATION</target>
        </trans-unit>
        <trans-unit id="b625e195d14659ffdbf9516a11fd5fc5c38fdb2c" translate="yes" xml:space="preserve">
          <source>TEXTDOMAIN</source>
          <target state="translated">TEXTDOMAIN</target>
        </trans-unit>
        <trans-unit id="e102bf42156be04fddbb228e803de50aec023a0c" translate="yes" xml:space="preserve">
          <source>TEXTDOMAINDIR</source>
          <target state="translated">TEXTDOMAINDIR</target>
        </trans-unit>
        <trans-unit id="9a9289f579c5654a43dd69fbc8c87e5d4e8a1fe5" translate="yes" xml:space="preserve">
          <source>TIMEFORMAT</source>
          <target state="translated">TIMEFORMAT</target>
        </trans-unit>
        <trans-unit id="d096b6cc3ad5903a990ff4494c6c508dc2aa0679" translate="yes" xml:space="preserve">
          <source>TMOUT</source>
          <target state="translated">TMOUT</target>
        </trans-unit>
        <trans-unit id="2a1b39f0946b76260b6dc6900a6d38c34dd07846" translate="yes" xml:space="preserve">
          <source>TMPDIR</source>
          <target state="translated">TMPDIR</target>
        </trans-unit>
        <trans-unit id="aff96a9ee1ea524018a0228411aa61f76f5c6271" translate="yes" xml:space="preserve">
          <source>TRANSLATION</source>
          <target state="translated">TRANSLATION</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="81564e07e400e4e597011d16dfe88e3b2bf43edf" translate="yes" xml:space="preserve">
          <source>Table of builtins specific to Bash.</source>
          <target state="translated">배쉬 고유의 내장 테이블.</target>
        </trans-unit>
        <trans-unit id="471c1d8144fc9eaa397efa454b398a2d8db71f60" translate="yes" xml:space="preserve">
          <source>Tell Readline not to append a space (the default) to words completed at the end of the line.</source>
          <target state="translated">Readline에 줄 끝에 완료된 단어에 공백 (기본값)을 추가하지 말라고 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="cc2ce318d138529c8dc713b497f699dedc67e45b" translate="yes" xml:space="preserve">
          <source>Tell Readline not to quote the completed words if they are filenames (quoting filenames is the default).</source>
          <target state="translated">완료된 단어가 파일 이름 인 경우 Readline에 인용하도록 지시하십시오 (파일 이름을 인용하는 것이 기본값 임).</target>
        </trans-unit>
        <trans-unit id="69dda040673a42d26dadb05f865e2228a44f6cd7" translate="yes" xml:space="preserve">
          <source>Tell Readline not to sort the list of possible completions alphabetically.</source>
          <target state="translated">가능한 완성 목록을 알파벳순으로 정렬하지 않도록 Readline에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="4869f39f9060d203e4cbaa1a98e21e6d178c0158" translate="yes" xml:space="preserve">
          <source>Tell Readline that the compspec generates filenames, so it can perform any filename-specific processing (like adding a slash to directory names, quoting special characters, or suppressing trailing spaces). This option is intended to be used with shell functions specified with</source>
          <target state="translated">readspec에 compspec이 파일 이름을 생성하므로 디렉토리 이름에 슬래시 추가, 특수 문자 인용 또는 후행 공백 억제와 같은 파일 이름 별 처리를 수행 할 수 있습니다. 이 옵션은 다음과 같이 지정된 쉘 기능과 함께 사용됩니다</target>
        </trans-unit>
        <trans-unit id="ed3f7375b4bf296ac0f885cd8b3c24c61985590e" translate="yes" xml:space="preserve">
          <source>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.</source>
          <target state="translated">이 섹션에 따른 귀하의 권리가 종료 되어도이 라이센스에 따라 귀하로부터 사본 또는 권리를받은 당사자의 라이센스는 종료되지 않습니다. 귀하의 권리가 종료되어 영구적으로 복원되지 않은 경우, 동일한 자료의 일부 또는 전부의 사본을 수령한다고해서 사용할 권리가있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c89eeee04d008f3b37ba348ef52a9ad774ba5589" translate="yes" xml:space="preserve">
          <source>That means values like &amp;lsquo;</source>
          <target state="translated">이는 '</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="4516c3b891db10436bb57ba53c88d0bd41c24525" translate="yes" xml:space="preserve">
          <source>The %b, %q, and %T directives all use the field width and precision arguments from the format specification and write that many bytes from (or use that wide a field for) the expanded argument, which usually contains more characters than the original.</source>
          <target state="translated">% b, % q 및 % T 지시문은 모두 형식 사양의 필드 너비 및 정밀도 인수를 사용하고 일반적으로 원본보다 더 많은 문자를 포함하는 확장 된 인수에서 많은 바이트를 씁니다 (또는 필드 너비를 사용). .</target>
        </trans-unit>
        <trans-unit id="1d9c6994ab0b74e2cfb2452521c9ea5fec830157" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Cover Texts&amp;rdquo; are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.</source>
          <target state="translated">&quot;표지 텍스트&quot;는 문서가이 라이센스에 따라 릴리스되었다는 통지서에 앞 표지 텍스트 또는 뒤 표지 텍스트로 나열된 짧은 텍스트 구절입니다. 앞 표지 텍스트는 최대 5 단어 일 수 있으며 뒷 표지 텍스트는 최대 25 단어 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="789ab3cde0b22bbf74ff6949fbb28bfb30926e1b" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Invariant Sections&amp;rdquo; are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.</source>
          <target state="translated">&quot;불변 섹션&quot;은 문서가이 라이센스에 따라 릴리스되었다는 통지에 따라 제목이 불변 섹션의 제목으로 지정된 특정 보조 섹션입니다. 섹션이 위의 Secondary 정의에 맞지 않으면 불변으로 지정할 수 없습니다. 문서에는 불변 섹션이 없을 수 있습니다. 문서가 불변 섹션을 식별하지 않으면 아무것도 없습니다.</target>
        </trans-unit>
        <trans-unit id="b79523892138877b2ffe5a4fab07cfff7aeeb1cd" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Title Page&amp;rdquo; means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, &amp;ldquo;Title Page&amp;rdquo; means the text near the most prominent appearance of the work&amp;rsquo;s title, preceding the beginning of the body of the text.</source>
          <target state="translated">&quot;제목 페이지&quot;는 인쇄 된 책의 경우 제목 페이지 자체와이 라이센스가 제목 페이지에 나타나기 위해 필요한 자료를 읽을 수있는 다음 페이지를 의미합니다. 제목 페이지가없는 형식의 작품의 경우, &quot;제목 페이지&quot;는 텍스트 본문이 시작되기 전에 작품 제목의 가장 두드러진 모양에 가까운 텍스트를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6d149b60373c6d3ba54f2d3a637bcfc7248c9681" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;publisher&amp;rdquo; means any person or entity that distributes copies of the Document to the public.</source>
          <target state="translated">&quot;출판인&quot;은 문서의 사본을 대중에게 배포하는 개인 또는 단체를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0ed4c9f9933dd9e4b8da3ca824145866c18f6a63" translate="yes" xml:space="preserve">
          <source>The &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="4de0441bfd48a4cf12f0ca776a4736d630f4be3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; quoting syntax, which expands ANSI-C backslash-escaped characters in the text between the single quotes, is supported (see &lt;a href=&quot;ansi_002dc-quoting&quot;&gt;ANSI-C Quoting&lt;/a&gt;).</source>
          <target state="translated">작은 따옴표 사이의 텍스트에서 ANSI-C 백 슬래시 이스케이프 문자를 확장 하는 &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; 인용 구문이 지원됩니다 ( &lt;a href=&quot;ansi_002dc-quoting&quot;&gt;ANSI-C 인용&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c2151d1d870a888c352ddb39e67b95151e100a7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; quoting syntax, which expands ANSI-C backslash-escaped characters in the text between the single quotes, is supported (see &lt;a href=&quot;ansi_002dc-quoting#ANSI_002dC-Quoting&quot;&gt;ANSI-C Quoting&lt;/a&gt;).</source>
          <target state="translated">작은 따옴표 사이의 텍스트에서 ANSI-C 백 슬래시 이스케이프 문자를 확장 하는 &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; 따옴표 구문이 지원됩니다 ( &lt;a href=&quot;ansi_002dc-quoting#ANSI_002dC-Quoting&quot;&gt;ANSI-C Quoting&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="318b7357e94166d63b447fdc8e5ff79e62ef635d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$if&lt;/code&gt; construct allows bindings to be made based on the editing mode, the terminal being used, or the application using Readline. The text of the test, after any comparison operator, extends to the end of the line; unless otherwise noted, no characters are required to isolate it.</source>
          <target state="translated">&lt;code&gt;$if&lt;/code&gt; 구조체가 바인딩이 편집 모드에 기초 할 수 있도록, 단말 존재 사용 또는 애플리케이션의 Readline을 사용. 비교 연산자 후에 테스트 텍스트는 줄 끝까지 확장됩니다. 별도의 언급이없는 한 문자를 분리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="81222032b8591add75e57b7abb203d434ebf5f2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; operators do not evaluate &lt;var&gt;expression2&lt;/var&gt; if the value of &lt;var&gt;expression1&lt;/var&gt; is sufficient to determine the return value of the entire conditional expression.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 와 &lt;code&gt;||&lt;/code&gt; 운영자는 평가하지 않는 &lt;var&gt;expression2&lt;/var&gt; 값 경우 &lt;var&gt;expression1&lt;/var&gt; 이 전체 조건식의 반환 값을 결정하기에 충분하다.</target>
        </trans-unit>
        <trans-unit id="bbe31a7cdd193d8b76017034e64a464eb64bc0cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;source&lt;/code&gt; builtins do not search the current directory for the filename argument if it is not found by searching &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.&lt;/code&gt; 그리고 &lt;code&gt;source&lt;/code&gt; 가 검색하여 찾을 수없는 경우 내장 명령은 파일 이름 인수에 대한 현재 디렉토리를 검색하지 않습니다 &lt;code&gt;PATH&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1cafec1cb7fa980227fa5ce2bc2995563155c35c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;0&lt;/code&gt;th word. For many applications, this is the command word.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 번째 단어. 많은 응용 프로그램에서 이것은 명령 단어입니다.</target>
        </trans-unit>
        <trans-unit id="7e63fd7beea76870a573e92fdcb443a2069a1947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FUNCNEST&lt;/code&gt; variable, if set to a numeric value greater than 0, defines a maximum function nesting level. Function invocations that exceed the limit cause the entire command to abort.</source>
          <target state="translated">&lt;code&gt;FUNCNEST&lt;/code&gt; 의 변수는 0보다 큰 수치로 설정이 최대 함수 중첩 레벨을 정의하는 경우. 한계를 초과하는 함수 호출로 인해 전체 명령이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="4a25b3adaefea8cd99b5dfd6064cb103a0833644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GLOBIGNORE&lt;/code&gt; shell variable may be used to restrict the set of file names matching a pattern. If &lt;code&gt;GLOBIGNORE&lt;/code&gt; is set, each matching file name that also matches one of the patterns in &lt;code&gt;GLOBIGNORE&lt;/code&gt; is removed from the list of matches. If the &lt;code&gt;nocaseglob&lt;/code&gt; option is set, the matching against the patterns in &lt;code&gt;GLOBIGNORE&lt;/code&gt; is performed without regard to case. The filenames</source>
          <target state="translated">&lt;code&gt;GLOBIGNORE&lt;/code&gt; 의 쉘 변수 패턴 매칭 파일 이름의 세트를 제한 할 수있다. 경우 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 가 설정되어,도에있는 패턴 중 하나와 일치하는 각 일치하는 파일 이름 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 는 경기의 목록에서 제거됩니다. 경우] &lt;code&gt;nocaseglob&lt;/code&gt; 의 옵션이 설정되어있는 패턴에 대해 매칭 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 이 경우에 관계없이 수행된다. 파일 이름</target>
        </trans-unit>
        <trans-unit id="81d6c760a0b5d0480eb13356fdaecd7d4af15b8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IFS&lt;/code&gt; variable is used to split only the results of expansion, not all words (see &lt;a href=&quot;word-splitting&quot;&gt;Word Splitting&lt;/a&gt;). This closes a longstanding shell security hole.</source>
          <target state="translated">&lt;code&gt;IFS&lt;/code&gt; 의 변수가 확장의 결과, 모든 단어를 분할하는 데 사용된다 ( &lt;a href=&quot;word-splitting&quot;&gt;워드 분할을&lt;/a&gt; ). 이것은 오랜 쉘 보안 구멍을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ea0276161bd566005688dbc574abf6de66616b40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IFS&lt;/code&gt; variable is used to split only the results of expansion, not all words (see &lt;a href=&quot;word-splitting#Word-Splitting&quot;&gt;Word Splitting&lt;/a&gt;). This closes a longstanding shell security hole.</source>
          <target state="translated">&lt;code&gt;IFS&lt;/code&gt; 의 변수가 확장의 결과, 모든 단어를 분할하는 데 사용된다 ( &lt;a href=&quot;word-splitting#Word-Splitting&quot;&gt;워드 분할을&lt;/a&gt; ). 이것은 오래된 쉘 보안 구멍을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="445d09811150616e91ec749f82226d5fb7f15c8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bg&lt;/code&gt; builtin uses the required format to describe each job placed in the background, which does not include an indication of whether the job is the current or previous job.</source>
          <target state="translated">&lt;code&gt;bg&lt;/code&gt; 편입 작업이 현재 또는 이전의 작업인지의 여부의 표시를 포함하지 않는 배경에서 각 작업 위치를 기술하기 위해 요구되는 포맷을 사용한다.</target>
        </trans-unit>
        <trans-unit id="558cd193ceb1695ce1cb5757c4b3957a38dfaa5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind&amp;nbsp;-V&lt;/code&gt; command lists the current Readline variable names and values. See &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bind&amp;nbsp;-V&lt;/code&gt; 명령 목록 현재의 Readline 변수의 이름과 값을. &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="adb7b384d494115dd83fc455d6726d7c50d65070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind&amp;nbsp;-V&lt;/code&gt; command lists the current Readline variable names and values. See &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bind&amp;nbsp;-V&lt;/code&gt; 명령 목록 현재의 Readline 변수의 이름과 값을. &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f54cd0f204ff45264cefd8053e60c66327d47a4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; command displays Readline function names and bindings in a format that can put directly into an initialization file. See &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; 명령은 초기화 파일에 직접 넣을 수있는 형식으로 Readline와 함수 이름과 바인딩. &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="805be08c5acd292bb95deafad8c931b8091ba6d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; command displays Readline function names and bindings in a format that can put directly into an initialization file. See &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; 명령은 초기화 파일에 직접 넣을 수있는 형식으로 Readline와 함수 이름과 바인딩. &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="699a4cdbbb84e2e949a592ca6a901bac63bd2d56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) may be used to control loop execution.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 과 &lt;code&gt;continue&lt;/code&gt; 내장 명령은 (참조 &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne 쉘 내장 명령을&lt;/a&gt; ) 제어 루프 실행에 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="0b4ebc4b6853938afb3e6f9a3d3d933c606fc6d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) may be used to control loop execution.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 과 &lt;code&gt;continue&lt;/code&gt; 내장 명령은 (참조 &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne 쉘 내장 명령을&lt;/a&gt; ) 제어 루프 실행에 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="bc81d2f2f3b647d239128672b5a6fbaa47b78697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;command&lt;/code&gt; builtin allows selective disabling of functions when command lookup is performed (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 내장 명령 룩업을 행하는 기능을 선택적으로 디스 에이블 (참조있게 &lt;a href=&quot;bash-builtins&quot;&gt;배시를 내장 매크로&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d150bd895a2175703486fddb6477b44bc9cd086" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;command&lt;/code&gt; builtin allows selective disabling of functions when command lookup is performed (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 내장 명령 룩업을 행하는 기능을 선택적으로 디스 에이블 (참조있게 &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;배시를 내장 매크로&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fec54dd1e28cd56804463fd7a5d7e0f53a262a35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;command&lt;/code&gt; builtin does not prevent builtins that take assignment statements as arguments from expanding them as assignment statements; when not in &lt;small&gt;POSIX&lt;/small&gt; mode, assignment builtins lose their assignment statement expansion properties when preceded by &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 내장은 할당 문로 확대에서 인수로 할당 문을 내장 명령을 방지하지 않는다; &lt;small&gt;POSIX&lt;/small&gt; 모드 가 아닌 경우 할당 내장은 &lt;code&gt;command&lt;/code&gt; 가 앞에 있으면 할당 명령문 확장 특성이 유실됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b7d033377a39f9c87a2d7ec0ee7e65df00c5412" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; shell script attempts to guess correct values for various system-dependent variables used during compilation. It uses those values to create a</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 쉘 스크립트 시도를 컴파일하는 동안 사용되는 다양한 시스템 종속 변수에 대한 올바른 값을 추측합니다. 이 값을 사용하여</target>
        </trans-unit>
        <trans-unit id="b00f66e494fabde35dd4a8862e424396e9794a64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;, and &lt;code&gt;readonly&lt;/code&gt; builtins each accept a</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; , &lt;code&gt;local&lt;/code&gt; 및 &lt;code&gt;readonly&lt;/code&gt; 각각을 받아 내장 명령</target>
        </trans-unit>
        <trans-unit id="769b46370acdd7d098875073392f1558a5dcd3a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disown&lt;/code&gt; builtin can remove a job from the internal shell job table (see &lt;a href=&quot;job-control-builtins&quot;&gt;Job Control Builtins&lt;/a&gt;) or suppress the sending of &lt;code&gt;SIGHUP&lt;/code&gt; to a job when the shell exits as the result of a &lt;code&gt;SIGHUP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disown&lt;/code&gt; 내장 내부 쉘 작업 테이블에서 작업을 제거 할 수 있습니다 ( &lt;a href=&quot;job-control-builtins&quot;&gt;작업 제어 내장 명령을&lt;/a&gt; ) 또는 보내는 억제 &lt;code&gt;SIGHUP&lt;/code&gt; 을 작업에 때의 결과로 쉘 종료 &lt;code&gt;SIGHUP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2680ef721f951f99511fde4337291e0355e443f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disown&lt;/code&gt; builtin can remove a job from the internal shell job table (see &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;Job Control Builtins&lt;/a&gt;) or suppress the sending of &lt;code&gt;SIGHUP&lt;/code&gt; to a job when the shell exits as the result of a &lt;code&gt;SIGHUP&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disown&lt;/code&gt; 내장 내부 쉘 작업 테이블에서 작업을 제거 할 수 있습니다 ( &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;작업 제어 내장 명령을&lt;/a&gt; ) 또는 보내는 억제 &lt;code&gt;SIGHUP&lt;/code&gt; 을 작업에 때의 결과로 쉘 종료 &lt;code&gt;SIGHUP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f23967f9d07b09ced14380eb4fe57d7706bf541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;editing-mode&lt;/code&gt; variable controls which default set of key bindings is used. By default, Readline starts up in Emacs editing mode, where the keystrokes are most similar to Emacs. This variable can be set to either &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;editing-mode&lt;/code&gt; 키 바인딩 세트 기본 변수 컨트롤이 사용됩니다. 기본적으로 Readline은 키 입력이 Emacs와 가장 유사한 Emacs 편집 모드에서 시작됩니다. 이 변수는 '</target>
        </trans-unit>
        <trans-unit id="1e6d32818f3b1d2f5f2232a651e3ca70d24c6998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;export&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt; builtin commands display their output in the format required by &lt;small&gt;POSIX&lt;/small&gt;.</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 및 &lt;code&gt;readonly&lt;/code&gt; 명령 내장이 필요로하는 형식으로 자신의 출력을 표시 &lt;small&gt;POSIX&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="41de6dcf35f30bb96146e4f54a60530e578609e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fc&lt;/code&gt; builtin checks &lt;code&gt;$EDITOR&lt;/code&gt; as a program to edit history entries if &lt;code&gt;FCEDIT&lt;/code&gt; is unset, rather than defaulting directly to &lt;code&gt;ed&lt;/code&gt;. &lt;code&gt;fc&lt;/code&gt; uses &lt;code&gt;ed&lt;/code&gt; if &lt;code&gt;EDITOR&lt;/code&gt; is unset.</source>
          <target state="translated">&lt;code&gt;fc&lt;/code&gt; 검사 내장 &lt;code&gt;$EDITOR&lt;/code&gt; 경우 편집 기록 항목에 대한 프로그램으로 &lt;code&gt;FCEDIT&lt;/code&gt; 가 아니라 직접 디폴트보다, 설정되지 &lt;code&gt;ed&lt;/code&gt; . &lt;code&gt;EDITOR&lt;/code&gt; 가 설정되지 않은 경우 &lt;code&gt;fc&lt;/code&gt; 는 &lt;code&gt;ed&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="3b31f152204e4ec71b0864ffc2d625d20f06364f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kill&lt;/code&gt; builtin does not accept signal names with a &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;kill&lt;/code&gt; 내장은 '으로 신호 이름을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="aa265aa95c1294172029df15e568278fd5668454" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; builtin allows arithmetic to be performed on shell variables. Each &lt;var&gt;expression&lt;/var&gt; is evaluated according to the rules given below in &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;. If the last &lt;var&gt;expression&lt;/var&gt; evaluates to 0, &lt;code&gt;let&lt;/code&gt; returns 1; otherwise 0 is returned.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 내장 쉘 변수에서 수행 될 산술 수있다. 각 &lt;var&gt;expression&lt;/var&gt; 은 아래의 &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic에&lt;/a&gt; 주어진 규칙에 따라 평가됩니다 . 마지막 &lt;var&gt;expression&lt;/var&gt; 이 0으로 평가되면 &lt;code&gt;let&lt;/code&gt; 은 1을 반환합니다. 그렇지 않으면 0이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e6a221ff533de5c2c42163aa08df69ba88bd590b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; builtin allows arithmetic to be performed on shell variables. Each &lt;var&gt;expression&lt;/var&gt; is evaluated according to the rules given below in &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;. If the last &lt;var&gt;expression&lt;/var&gt; evaluates to 0, &lt;code&gt;let&lt;/code&gt; returns 1; otherwise 0 is returned.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; 내장 쉘 변수에서 수행 될 산술 수있다. 각 &lt;var&gt;expression&lt;/var&gt; 은 아래의 &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt; 규칙에 따라 평가됩니다 . 마지막 &lt;var&gt;expression&lt;/var&gt; 이 0으로 평가되면 &lt;code&gt;let&lt;/code&gt; 은 1을 리턴합니다. 그렇지 않으면 0이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1ccc0c33fd80bc03158c408477f545ccd528cd3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mkclone&lt;/code&gt; script requires Bash, so you must have already built Bash for at least one architecture before you can create build directories for other architectures.</source>
          <target state="translated">&lt;code&gt;mkclone&lt;/code&gt; 의 스크립트는 다른 아키텍처에 대한 빌드 디렉토리를 작성하기 전에 이미 적어도 하나의 아키텍처 배쉬를 구축해야합니다, 그래서 배쉬가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="79186754fc861af86678e7e71417ba006dc66a6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode=&lt;/code&gt; form of the &lt;code&gt;$if&lt;/code&gt; directive is used to test whether Readline is in &lt;code&gt;emacs&lt;/code&gt; or &lt;code&gt;vi&lt;/code&gt; mode. This may be used in conjunction with the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;$if&lt;/code&gt; 지시문 의 &lt;code&gt;mode=&lt;/code&gt; 형식은 Readline이 &lt;code&gt;emacs&lt;/code&gt; 인지 &lt;code&gt;vi&lt;/code&gt; 모드 인지 테스트하는 데 사용 됩니다. 이것은 '</target>
        </trans-unit>
        <trans-unit id="36c0d594a35e6a73513bbeb560a20718acfb95ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noclobber&lt;/code&gt; option is available to avoid overwriting existing files with output redirection (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;). The &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;noclobber&lt;/code&gt; 옵션 (참조 출력 재 지정으로 기존 파일을 덮어 쓰지 않도록 할 수 있습니다 &lt;a href=&quot;the-set-builtin&quot;&gt;set 내부를&lt;/a&gt; ). '</target>
        </trans-unit>
        <trans-unit id="f7a5c495825e4ab9be3107dd1eb8144e2f27817e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noclobber&lt;/code&gt; option is available to avoid overwriting existing files with output redirection (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;). The &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;noclobber&lt;/code&gt; 옵션 (참조 출력 재 지정으로 기존 파일을 덮어 쓰지 않도록 할 수 있습니다 &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;set 내부를&lt;/a&gt; ). '</target>
        </trans-unit>
        <trans-unit id="da9793f9f2cfb7222ab21776a5f73a255c016308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printf&lt;/code&gt; builtin is available to display formatted output (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; 내장 포맷 출력을 표시 할 수있다 (참조 &lt;a href=&quot;bash-builtins&quot;&gt;배시를 내장 매크로&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="71024e24201f40b668438cc9414469b6ac68a493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;printf&lt;/code&gt; builtin is available to display formatted output (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; 내장 포맷 출력을 표시 할 수있다 (참조 &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;배시를 내장 매크로&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="61dd86bae1e8e40040881413babc94342a7b0b03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pwd&lt;/code&gt; builtin verifies that the value it prints is the same as the current directory, even if it is not asked to check the file system with the</source>
          <target state="translated">내장 된 &lt;code&gt;pwd&lt;/code&gt; 는 파일 시스템에</target>
        </trans-unit>
        <trans-unit id="b74c81aeacd11c0aac0772dfd6279123fef0e5a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; builtin may be interrupted by a signal for which a trap has been set. If Bash receives a trapped signal while executing &lt;code&gt;read&lt;/code&gt;, the trap handler executes and &lt;code&gt;read&lt;/code&gt; returns an exit status greater than 128.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 내장은 트랩 설정된 해당하는 신호에 의해 중단 될 수있다. &lt;code&gt;read&lt;/code&gt; 를 실행하는 동안 Bash가 트랩 된 신호를 수신 하면 트랩 핸들러가 실행되고 &lt;code&gt;read&lt;/code&gt; 는 128보다 큰 종료 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9d5bb59a5e34821507ba560d3c23c5fd6e24d179" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return&lt;/code&gt; builtin may be used to abort execution of scripts executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 내장은으로 실행 스크립트의 중단 실행을 사용할 수 있습니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 내장 ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2a939ead081da617261684b32e11698ddf0b302f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return&lt;/code&gt; builtin may be used to abort execution of scripts executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 내장은으로 실행 스크립트의 중단 실행을 사용할 수 있습니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 내장 ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="83298a3607cb05d1448dc0cb7e8179483b47e74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; construct allows the easy generation of menus. It has almost the same syntax as the &lt;code&gt;for&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 구조는 메뉴를 쉽게 생성 할 수 있습니다. &lt;code&gt;for&lt;/code&gt; 명령 과 구문이 거의 같습니다.</target>
        </trans-unit>
        <trans-unit id="a109c32979a5a1982a1fca3d8dd1078f6fc87ca1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;term=&lt;/code&gt; form may be used to include terminal-specific key bindings, perhaps to bind the key sequences output by the terminal&amp;rsquo;s function keys. The word on the right side of the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;term=&lt;/code&gt; 폼 아마 단말기의 기능 키에 키 시퀀스 출력을 결합하기 위해, 단말 고유 키 바인딩을 포함하는 데 이용 될 수있다. 오른쪽에있는 단어</target>
        </trans-unit>
        <trans-unit id="18c20fa9908a74dde5b5deda1de799593d557c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; builtins evaluate conditional expressions using a set of rules based on the number of arguments.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;[&lt;/code&gt; 내장 매크로는 인수의 수에 따라 일련의 규칙을 사용하여 조건식을 평가한다.</target>
        </trans-unit>
        <trans-unit id="34687b6a4af1b2a135a873fe7655184e30eb9fc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) is slightly different, as it implements the &lt;small&gt;POSIX&lt;/small&gt; algorithm, which specifies the behavior based on the number of arguments.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins&quot;&gt;본 셸을 내장 매크로&lt;/a&gt; 는 구현으로) 약간 다른 &lt;small&gt;POSIX&lt;/small&gt; 인수의 수에 기초하여 동작을 지정 알고리즘.</target>
        </trans-unit>
        <trans-unit id="7609c8398944d20d0b73184e68b20bd594e494c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) is slightly different, as it implements the &lt;small&gt;POSIX&lt;/small&gt; algorithm, which specifies the behavior based on the number of arguments.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;본 셸을 내장 매크로&lt;/a&gt; 는 구현으로) 약간 다른 &lt;small&gt;POSIX&lt;/small&gt; 인수의 수에 기초하여 동작을 지정 알고리즘.</target>
        </trans-unit>
        <trans-unit id="2b025dcd96c1d77974596085efac9e34c7171c2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; reserved word may be used by itself as a command. When used in this way, it displays timing statistics for the shell and its completed children. The &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable controls the format of the timing information.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; 예약 된 단어는 명령으로 그 자체로 사용할 수있다. 이 방법으로 사용하면 쉘 및 완료된 하위에 대한 타이밍 통계가 표시됩니다. &lt;code&gt;TIMEFORMAT&lt;/code&gt; 의 변수는 타이밍 정보의 포맷을 제어한다.</target>
        </trans-unit>
        <trans-unit id="daec8de15c8a01678d8e4aaa972ff0b7bfefbbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows a &lt;code&gt;DEBUG&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt;. Commands specified with a &lt;code&gt;DEBUG&lt;/code&gt; trap are executed before every simple command, &lt;code&gt;for&lt;/code&gt; command, &lt;code&gt;case&lt;/code&gt; command, &lt;code&gt;select&lt;/code&gt; command, every arithmetic &lt;code&gt;for&lt;/code&gt; command, and before the first command executes in a shell function. The &lt;code&gt;DEBUG&lt;/code&gt; trap is not inherited by shell functions unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute or the &lt;code&gt;functrace&lt;/code&gt; option has been enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin. The &lt;code&gt;extdebug&lt;/code&gt; shell option has additional effects on the &lt;code&gt;DEBUG&lt;/code&gt; trap.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins&quot;&gt;본 셸을 내장 명령&lt;/a&gt; )을 허용 &lt;code&gt;DEBUG&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 를 . 지정된 명령 &lt;code&gt;DEBUG&lt;/code&gt; 의 트랩마다 간단한 명령 전에 실행 &lt;code&gt;for&lt;/code&gt; 명령 &lt;code&gt;case&lt;/code&gt; 명령 &lt;code&gt;select&lt;/code&gt; 각 연산 명령 &lt;code&gt;for&lt;/code&gt; 명령 및 쉘 함수의 첫 번째 명령이 실행 전에. &lt;code&gt;DEBUG&lt;/code&gt; 함수가 지정하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;trace&lt;/code&gt; 특성 또는 &lt;code&gt;functrace&lt;/code&gt; 의 사용하여 활성화 된 옵션 &lt;code&gt;shopt&lt;/code&gt; 내부의 내장을. 그만큼 &lt;code&gt;extdebug&lt;/code&gt; 셸 옵션은 &lt;code&gt;DEBUG&lt;/code&gt; 트랩 에 추가 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="204d2054db05c642505e4144513b222465a0e6d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows a &lt;code&gt;RETURN&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt; and &lt;code&gt;DEBUG&lt;/code&gt;. Commands specified with an &lt;code&gt;RETURN&lt;/code&gt; trap are executed before execution resumes after a shell function or a shell script executed with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; returns. The &lt;code&gt;RETURN&lt;/code&gt; trap is not inherited by shell functions unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute or the &lt;code&gt;functrace&lt;/code&gt; option has been enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins&quot;&gt;본 셸을 내장 명령&lt;/a&gt; )을 허용 &lt;code&gt;RETURN&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 및 &lt;code&gt;DEBUG&lt;/code&gt; 를 . &lt;code&gt;RETURN&lt;/code&gt; 트랩으로 지정된 명령 은 쉘 함수 또는로 실행 된 쉘 스크립트 후 실행이 재개되기 전에 실행됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 반환. &lt;code&gt;RETURN&lt;/code&gt; 함수가 지정하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;trace&lt;/code&gt; 특성 또는 &lt;code&gt;functrace&lt;/code&gt; 의 사용하여 활성화 된 옵션 &lt;code&gt;shopt&lt;/code&gt; 내부의 내장을.</target>
        </trans-unit>
        <trans-unit id="8b0d310f61d3649fe40f80eb13cd1167d2980445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows an &lt;code&gt;ERR&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt; and &lt;code&gt;DEBUG&lt;/code&gt;. Commands specified with an &lt;code&gt;ERR&lt;/code&gt; trap are executed after a simple command fails, with a few exceptions. The &lt;code&gt;ERR&lt;/code&gt; trap is not inherited by shell functions unless the &lt;code&gt;-o errtrace&lt;/code&gt; option to the &lt;code&gt;set&lt;/code&gt; builtin is enabled.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins&quot;&gt;본 셸을 내장 매크로&lt;/a&gt; )는 허용 &lt;code&gt;ERR&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 및 &lt;code&gt;DEBUG&lt;/code&gt; 를 . &lt;code&gt;ERR&lt;/code&gt; 트랩으로 지정된 명령은 몇 가지 예외를 제외하고 간단한 명령이 실패한 후에 실행됩니다. &lt;code&gt;ERR&lt;/code&gt; 의 하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;-o errtrace&lt;/code&gt; 를 받는 옵션 &lt;code&gt;set&lt;/code&gt; 내장이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="ca11ce6dfccf18d7ae5455235edc8005c94707aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows a &lt;code&gt;DEBUG&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt;. Commands specified with a &lt;code&gt;DEBUG&lt;/code&gt; trap are executed before every simple command, &lt;code&gt;for&lt;/code&gt; command, &lt;code&gt;case&lt;/code&gt; command, &lt;code&gt;select&lt;/code&gt; command, every arithmetic &lt;code&gt;for&lt;/code&gt; command, and before the first command executes in a shell function. The &lt;code&gt;DEBUG&lt;/code&gt; trap is not inherited by shell functions unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute or the &lt;code&gt;functrace&lt;/code&gt; option has been enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin. The &lt;code&gt;extdebug&lt;/code&gt; shell option has additional effects on the &lt;code&gt;DEBUG&lt;/code&gt; trap.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;본 셸을 내장 명령&lt;/a&gt; )을 허용 &lt;code&gt;DEBUG&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 를 . 지정된 명령 &lt;code&gt;DEBUG&lt;/code&gt; 의 트랩마다 간단한 명령 전에 실행 &lt;code&gt;for&lt;/code&gt; 명령 &lt;code&gt;case&lt;/code&gt; 명령 &lt;code&gt;select&lt;/code&gt; 각 연산 명령 &lt;code&gt;for&lt;/code&gt; 명령 및 쉘 함수의 첫 번째 명령이 실행 전에. &lt;code&gt;DEBUG&lt;/code&gt; 함수가 지정하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;trace&lt;/code&gt; 특성 또는 &lt;code&gt;functrace&lt;/code&gt; 의 옵션을 사용하여 활성화 된 &lt;code&gt;shopt&lt;/code&gt; 내부의 내장을. 그만큼 &lt;code&gt;extdebug&lt;/code&gt; 을shell 옵션은 &lt;code&gt;DEBUG&lt;/code&gt; 트랩 에 추가 영향을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="3d6ce37dbd1878ed225dec119b3b12f838688477" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows a &lt;code&gt;RETURN&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt; and &lt;code&gt;DEBUG&lt;/code&gt;. Commands specified with an &lt;code&gt;RETURN&lt;/code&gt; trap are executed before execution resumes after a shell function or a shell script executed with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; returns. The &lt;code&gt;RETURN&lt;/code&gt; trap is not inherited by shell functions unless the function has been given the &lt;code&gt;trace&lt;/code&gt; attribute or the &lt;code&gt;functrace&lt;/code&gt; option has been enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;본 셸을 내장 명령&lt;/a&gt; )을 허용 &lt;code&gt;RETURN&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 및 &lt;code&gt;DEBUG&lt;/code&gt; 를 . &lt;code&gt;RETURN&lt;/code&gt; 트랩으로 지정된 명령 은 쉘 함수 또는로 실행 된 쉘 스크립트 후에 실행이 재개되기 전에 실행됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;source&lt;/code&gt; 반환. &lt;code&gt;RETURN&lt;/code&gt; 함수가 지정하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;trace&lt;/code&gt; 특성 또는 &lt;code&gt;functrace&lt;/code&gt; 의 사용하여 활성화 된 옵션 &lt;code&gt;shopt&lt;/code&gt; 내부의 내장을.</target>
        </trans-unit>
        <trans-unit id="3fdabd768ad127a391fc72e79dc320cecf2c0dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) allows an &lt;code&gt;ERR&lt;/code&gt; pseudo-signal specification, similar to &lt;code&gt;EXIT&lt;/code&gt; and &lt;code&gt;DEBUG&lt;/code&gt;. Commands specified with an &lt;code&gt;ERR&lt;/code&gt; trap are executed after a simple command fails, with a few exceptions. The &lt;code&gt;ERR&lt;/code&gt; trap is not inherited by shell functions unless the &lt;code&gt;-o errtrace&lt;/code&gt; option to the &lt;code&gt;set&lt;/code&gt; builtin is enabled.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장 (참조 : &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;본 셸을 내장 매크로&lt;/a&gt; )는 허용 &lt;code&gt;ERR&lt;/code&gt; 유사한 의사 신호 규격 &lt;code&gt;EXIT&lt;/code&gt; 및 &lt;code&gt;DEBUG&lt;/code&gt; 를 . &lt;code&gt;ERR&lt;/code&gt; 트랩으로 지정된 명령은 몇 가지 예외를 제외하고 간단한 명령이 실패한 후에 실행됩니다. &lt;code&gt;ERR&lt;/code&gt; 의 하지 않는 한 트랩 쉘 기능에 의해 상속되지 &lt;code&gt;-o errtrace&lt;/code&gt; 를 받는 옵션 &lt;code&gt;set&lt;/code&gt; 내장이 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="831b45af189787ceb18a9fd01008bdf4c959220e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin displays signal names without the leading &lt;code&gt;SIG&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 디스플레이 내장은 최고의 않고 이름을 신호 &lt;code&gt;SIG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec21f73f10dc0c33fb8fc0ed4b8a3ae27c1ef5c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trap&lt;/code&gt; builtin doesn&amp;rsquo;t check the first argument for a possible signal specification and revert the signal handling to the original disposition if it is, unless that argument consists solely of digits and is a valid signal number. If users want to reset the handler for a given signal to the original disposition, they should use &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;trap&lt;/code&gt; 내장이 가능한 신호 사양 첫번째 인자를 확인하고 그 인수 단독 숫자로 구성하고, 유효 신호의 개수는 않는이면 원래 처분 처리 신호를 되 돌리지 않는다. 사용자가 지정된 신호에 대한 핸들러를 원래 처리로 재설정하려면 '</target>
        </trans-unit>
        <trans-unit id="db7cc09f1546ca9f5cf92492777f27e4b1a5ee7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt; builtins will not report a non-executable file as having been found, though the shell will attempt to execute such a file if it is the only so-named file found in &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;command&lt;/code&gt; 이 유일한 소위라는 이름의 파일이 발견되면 쉘이 이러한 파일을 실행하려고 시도하지만 내장 명령은 발견 된 같은 비 실행 파일을보고하지 않습니다 &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce0e6ce72d613f9309353713f7270dccf84960f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeset&lt;/code&gt; command is supplied for compatibility with the Korn shell. It is a synonym for the &lt;code&gt;declare&lt;/code&gt; builtin command.</source>
          <target state="translated">&lt;code&gt;typeset&lt;/code&gt; 명령은 Korn 쉘과의 호환성을 위해 제공됩니다. &lt;code&gt;declare&lt;/code&gt; 내장 명령 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="b9be17c095f6d632873df3847bdf9b08ba6bf9f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ulimit&lt;/code&gt; builtin uses a block size of 512 bytes for the</source>
          <target state="translated">내장 된 &lt;code&gt;ulimit&lt;/code&gt; 는 512 바이트의 블록 크기를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="968cfb042d33fc3e485a2e1f5aa8e0f8a9d24bf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unset&lt;/code&gt; builtin also acts using the same dynamic scope: if a variable is local to the current scope, &lt;code&gt;unset&lt;/code&gt; will unset it; otherwise the unset will refer to the variable found in any calling scope as described above. If a variable at the current local scope is unset, it will remain so until it is reset in that scope or until the function returns. Once the function returns, any instance of the variable at a previous scope will become visible. If the unset acts on a variable at a previous scope, any instance of a variable with that name that had been shadowed will become visible.</source>
          <target state="translated">&lt;code&gt;unset&lt;/code&gt; 내장은 동일한 동적 범위를 이용하여 작용한다 : 변수가 현재 범위에 로컬 인 경우, &lt;code&gt;unset&lt;/code&gt; 그 설정을 해제한다; 그렇지 않으면 설정 해제는 위에서 설명한대로 호출 범위에서 찾은 변수를 참조합니다. 현재 로컬 범위에서 변수가 설정되어 있지 않으면 해당 범위에서 재설정되거나 함수가 반환 될 때까지 그대로 유지됩니다. 함수가 반환되면 이전 범위의 변수 인스턴스가 표시됩니다. 설정되지 않은 변수가 이전 범위의 변수에 작용하면 해당 이름을 가진 변수의 인스턴스가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a0e245a89a701f9b3eb55eaa8fd7e1e476137a4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unset&lt;/code&gt; builtin is used to destroy arrays. &lt;code&gt;unset &lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]&lt;/code&gt; destroys the array element at index &lt;var&gt;subscript&lt;/var&gt;. Negative subscripts to indexed arrays are interpreted as described above. Unsetting the last element of an array variable does not unset the variable. &lt;code&gt;unset &lt;var&gt;name&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;name&lt;/var&gt; is an array, removes the entire array. A subscript of &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;unset&lt;/code&gt; 내장 배열을 파괴하는 데 사용됩니다. &lt;code&gt;unset &lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]&lt;/code&gt; 는 인덱스 &lt;var&gt;subscript&lt;/var&gt; 에서 배열 요소를 파괴합니다 . 인덱스 배열에 대한 음의 아래 첨자는 위에서 설명한대로 해석됩니다. 배열 변수의 마지막 요소를 설정 해제해도 변수는 설정 해제되지 않습니다. &lt;code&gt;unset &lt;var&gt;name&lt;/var&gt;&lt;/code&gt; (여기서 &lt;var&gt;name&lt;/var&gt; 은 배열 임)은 전체 배열을 제거합니다. '의 첨자</target>
        </trans-unit>
        <trans-unit id="480cdaa025b86102c4705881ab585ad9216d728b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; test may be used to perform comparisons against specific Readline versions. The &lt;code&gt;version&lt;/code&gt; expands to the current Readline version. The set of comparison operators includes &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 테스트는 특정 Readline와 버전에 대한 비교를 수행하는 데 사용할 수 있습니다. &lt;code&gt;version&lt;/code&gt; 현재의 readline 버전으로 확장합니다. 비교 연산자 세트에는 '</target>
        </trans-unit>
        <trans-unit id="26b1d9d47459a4e083106d792ba76effe9e2b00c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vi&lt;/code&gt; editing mode will invoke the &lt;code&gt;vi&lt;/code&gt; editor directly when the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;vi&lt;/code&gt; 편집 모드를 호출합니다 &lt;code&gt;vi&lt;/code&gt; 직접 편집기를 할 때 '</target>
        </trans-unit>
        <trans-unit id="6fe1fcebdd17b99aca9e067d295a5e1c42538ce0" translate="yes" xml:space="preserve">
          <source>The &lt;small&gt;POSIX&lt;/small&gt; startup files are executed (&lt;code&gt;$ENV&lt;/code&gt;) rather than the normal Bash files.</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 시작 파일 (실행 &lt;code&gt;$ENV&lt;/code&gt; )이 아닌 일반 배쉬 파일.</target>
        </trans-unit>
        <trans-unit id="64ec0f5db20ebd3ca46fce423cb7799df70d381d" translate="yes" xml:space="preserve">
          <source>The &lt;small&gt;POSIX&lt;/small&gt;&lt;code&gt;$()&lt;/code&gt; form of command substitution is implemented (see &lt;a href=&quot;command-substitution&quot;&gt;Command Substitution&lt;/a&gt;), and preferred to the Bourne shell&amp;rsquo;s &lt;code&gt;``&lt;/code&gt; (which is also implemented for backwards compatibility).</source>
          <target state="translated">&lt;small&gt;POSIX &lt;/small&gt; &lt;code&gt;$()&lt;/code&gt; 명령 치환의 형태는 (참조 구현 &lt;a href=&quot;command-substitution&quot;&gt;명령 대체를&lt;/a&gt; )하고, 선호하는 Bourne 쉘의에 &lt;code&gt;``&lt;/code&gt; (또한 이전 버전과의 호환성을 위해 구현된다).</target>
        </trans-unit>
        <trans-unit id="255367174b7a8740a41f05bdf2ba1953e1186831" translate="yes" xml:space="preserve">
          <source>The &lt;small&gt;POSIX&lt;/small&gt;&lt;code&gt;$()&lt;/code&gt; form of command substitution is implemented (see &lt;a href=&quot;command-substitution#Command-Substitution&quot;&gt;Command Substitution&lt;/a&gt;), and preferred to the Bourne shell&amp;rsquo;s &lt;code&gt;``&lt;/code&gt; (which is also implemented for backwards compatibility).</source>
          <target state="translated">&lt;small&gt;POSIX &lt;/small&gt; &lt;code&gt;$()&lt;/code&gt; 명령 치환의 형태는 (참조 구현 &lt;a href=&quot;command-substitution#Command-Substitution&quot;&gt;명령 대체를&lt;/a&gt; )하고, 선호하는 Bourne 쉘의에 &lt;code&gt;``&lt;/code&gt; (또한 이전 버전과의 호환성을 위해 구현된다).</target>
        </trans-unit>
        <trans-unit id="75dad2d7beea5fc3a3a1b5f45d608890f0cd459c" translate="yes" xml:space="preserve">
          <source>The &lt;small&gt;POSIX&lt;/small&gt;&lt;code&gt;PS1&lt;/code&gt; and &lt;code&gt;PS2&lt;/code&gt; expansions of &amp;lsquo;</source>
          <target state="translated">'의 &lt;small&gt;POSIX &lt;/small&gt; &lt;code&gt;PS1&lt;/code&gt; 및 &lt;code&gt;PS2&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="c67d0f094fc3f04fab9a06d3dc2f965fac327bab" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;action&lt;/var&gt; may be one of the following to generate a list of possible completions:</source>
          <target state="translated">&lt;var&gt;action&lt;/var&gt; 가능한 완성의 목록을 생성하려면 다음 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e6a003a6373d4273213b4025450dc71aa5388392" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;application&lt;/var&gt; construct is used to include application-specific settings. Each program using the Readline library sets the &lt;var&gt;application name&lt;/var&gt;, and you can test for a particular value. This could be used to bind key sequences to functions useful for a specific program. For instance, the following command adds a key sequence that quotes the current or previous word in Bash:</source>
          <target state="translated">&lt;var&gt;application&lt;/var&gt; 구조는 애플리케이션 별 설정을 포함하는 데 사용됩니다. Readline 라이브러리를 사용하는 각 프로그램은 &lt;var&gt;application name&lt;/var&gt; 설정 하며 특정 값을 테스트 할 수 있습니다. 키 시퀀스를 특정 프로그램에 유용한 함수에 바인딩하는 데 사용할 수 있습니다. 예를 들어 다음 명령은 Bash에서 현재 또는 이전 단어를 인용하는 키 시퀀스를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f88fbdc6e650a38683e16bcfad100b046ee4ee38" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;arg&lt;/var&gt;s are added to the end of the history list as a single entry.</source>
          <target state="translated">&lt;var&gt;arg&lt;/var&gt; s는 하나의 항목으로 기록 목록의 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9ec90f709e5f9c505b88251232d3a1c76288dd87" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;commands&lt;/var&gt; are executed after each selection until a &lt;code&gt;break&lt;/code&gt; command is executed, at which point the &lt;code&gt;select&lt;/code&gt; command completes.</source>
          <target state="translated">&lt;var&gt;commands&lt;/var&gt; 까지 각각의 선택 후에 수행되는 &lt;code&gt;break&lt;/code&gt; 명령이 실행되는 시점, &lt;code&gt;select&lt;/code&gt; 명령이 완료한다.</target>
        </trans-unit>
        <trans-unit id="48898c98eee784fb5f6ea18295358a30f4b7f905" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;comp-option&lt;/var&gt; controls several aspects of the compspec&amp;rsquo;s behavior beyond the simple generation of completions. &lt;var&gt;comp-option&lt;/var&gt; may be one of:</source>
          <target state="translated">&lt;var&gt;comp-option&lt;/var&gt; 완성의 간단한 세대를 넘어 compspec의 행동의 여러 측면을 제어합니다. &lt;var&gt;comp-option&lt;/var&gt; 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="181c58c500b060dc3f6a4c1f3074539c076322df" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;format&lt;/var&gt; is a character string which contains three types of objects: plain characters, which are simply copied to standard output, character escape sequences, which are converted and copied to the standard output, and format specifications, each of which causes printing of the next successive &lt;var&gt;argument&lt;/var&gt;. In addition to the standard &lt;code&gt;printf(1)&lt;/code&gt; formats, &lt;code&gt;printf&lt;/code&gt; interprets the following extensions:</source>
          <target state="translated">&lt;var&gt;format&lt;/var&gt; 다음의 인쇄 원인, 각각의 표준 출력으로 변환 복사됩니다 단순히 표준 출력에 복사됩니다 일반 문자, 문자 이스케이프 시퀀스, 및 형식 스펙, 세 개체의 유형을 포함하는 문자열입니다 연속적인 &lt;var&gt;argument&lt;/var&gt; . 표준 &lt;code&gt;printf(1)&lt;/code&gt; 형식 외에도 &lt;code&gt;printf&lt;/code&gt; 는 다음 확장자를 해석합니다.</target>
        </trans-unit>
        <trans-unit id="c5630a0384e3462ded4442078517cde64969373c" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;format&lt;/var&gt; is passed to &lt;code&gt;strftime&lt;/code&gt;(3) and the result is inserted into the prompt string; an empty &lt;var&gt;format&lt;/var&gt; results in a locale-specific time representation. The braces are required.</source>
          <target state="translated">&lt;var&gt;format&lt;/var&gt; 으로 전달 &lt;code&gt;strftime&lt;/code&gt; (3) 그 결과는 메시지 문자열 삽입되고 &lt;var&gt;format&lt;/var&gt; 이 비어 있으면 로케일 별 시간이 표시됩니다. 괄호가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="41d883678477e207f935094a81d886b1383d76fb" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;format&lt;/var&gt; is reused as necessary to consume all of the &lt;var&gt;arguments&lt;/var&gt;. If the &lt;var&gt;format&lt;/var&gt; requires more &lt;var&gt;arguments&lt;/var&gt; than are supplied, the extra format specifications behave as if a zero value or null string, as appropriate, had been supplied. The return value is zero on success, non-zero on failure.</source>
          <target state="translated">&lt;var&gt;format&lt;/var&gt; 의 모든 소비 할 필요에 따라 재사용 &lt;var&gt;arguments&lt;/var&gt; . &lt;var&gt;format&lt;/var&gt; 에 제공된 것보다 많은 &lt;var&gt;arguments&lt;/var&gt; 가 필요한 경우 추가 형식 스펙은 0 값 또는 널 문자열이 적절하게 제공된 것처럼 작동합니다. 성공하면 반환 값은 0이고 실패하면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f19eb0371bb44451127e86d4065067ea29a989db" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;n&lt;/var&gt;th word.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 번째 워드.</target>
        </trans-unit>
        <trans-unit id="a86959a15e5d2995248b4526a6a4f7beb157093b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;pattern&lt;/var&gt; is expanded to produce a pattern just as in filename expansion. &lt;var&gt;Parameter&lt;/var&gt; is expanded and the longest match of &lt;var&gt;pattern&lt;/var&gt; against its value is replaced with &lt;var&gt;string&lt;/var&gt;. The match is performed according to the rules described below (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;). If &lt;var&gt;pattern&lt;/var&gt; begins with &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; 단지 파일 이름 확장에서 같은 패턴을 생성하기 위해 확장된다. &lt;var&gt;Parameter&lt;/var&gt; 가 확장되고 해당 값에 대한 &lt;var&gt;pattern&lt;/var&gt; 의 가장 긴 일치 가 &lt;var&gt;string&lt;/var&gt; 으로 대체됩니다 . 아래에 설명 된 규칙에 따라 일치가 수행됩니다 ( &lt;a href=&quot;pattern-matching&quot;&gt;패턴 일치&lt;/a&gt; 참조 ). &lt;var&gt;pattern&lt;/var&gt; 이 '로 시작하는 경우</target>
        </trans-unit>
        <trans-unit id="68266abd43ed860a6e725494095fa23f51bfd85e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;pattern&lt;/var&gt; is expanded to produce a pattern just as in filename expansion. &lt;var&gt;Parameter&lt;/var&gt; is expanded and the longest match of &lt;var&gt;pattern&lt;/var&gt; against its value is replaced with &lt;var&gt;string&lt;/var&gt;. The match is performed according to the rules described below (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;). If &lt;var&gt;pattern&lt;/var&gt; begins with &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; 단지 파일 이름 확장에서 같은 패턴을 생성하기 위해 확장된다. &lt;var&gt;Parameter&lt;/var&gt; 가 확장되고 해당 값에 대한 가장 긴 &lt;var&gt;pattern&lt;/var&gt; 일치 가 &lt;var&gt;string&lt;/var&gt; 으로 대체됩니다 . 일치는 아래 설명 된 규칙에 따라 수행됩니다 ( &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;패턴 일치&lt;/a&gt; 참조 ). &lt;var&gt;pattern&lt;/var&gt; 이 '로 시작 하면</target>
        </trans-unit>
        <trans-unit id="87155350f1ca968163aa9c46ea25ff13d667cec6" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;subscript&lt;/var&gt; is treated as an arithmetic expression that must evaluate to a number. To explicitly declare an array, use</source>
          <target state="translated">아래 &lt;var&gt;subscript&lt;/var&gt; 는 숫자로 평가되어야하는 산술 연산 식으로 취급됩니다. 명시 적으로 배열을 선언하려면</target>
        </trans-unit>
        <trans-unit id="594378cbebeda6287d644d836547f914f6e8931f" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;test-commands&lt;/var&gt; list is executed, and if its return status is zero, the &lt;var&gt;consequent-commands&lt;/var&gt; list is executed. If &lt;var&gt;test-commands&lt;/var&gt; returns a non-zero status, each &lt;code&gt;elif&lt;/code&gt; list is executed in turn, and if its exit status is zero, the corresponding &lt;var&gt;more-consequents&lt;/var&gt; is executed and the command completes. If &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;test-commands&lt;/var&gt; 목록이 실행되고, 그것의 반환 상태가 0 인 경우는 &lt;var&gt;consequent-commands&lt;/var&gt; 목록이 실행된다. 경우 &lt;var&gt;test-commands&lt;/var&gt; 아닌 제로 상태를 반환, 각 &lt;code&gt;elif&lt;/code&gt; 목록이 차례로 실행되고, 종료 상태가 0 인 경우, 해당 &lt;var&gt;more-consequents&lt;/var&gt; 실행되고 명령이 완료됩니다. 만약 '</target>
        </trans-unit>
        <trans-unit id="58cdf4c83fe89d3f7c6ad4c0802efe2f974717b7" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;variable&lt;/var&gt; construct provides simple equality tests for Readline variables and values. The permitted comparison operators are &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;variable&lt;/var&gt; 구조물은의 readline 변수 값 단순한 항등 테스트를 제공한다. 허용 된 비교 연산자는 '</target>
        </trans-unit>
        <trans-unit id="413d1b8d4a650dd116fb0d0d3bd6ae20b22987e7" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; is expanded to produce a pattern and matched according to the rules described below (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;). If the pattern matches a trailing portion of the expanded value of &lt;var&gt;parameter&lt;/var&gt;, then the result of the expansion is the value of &lt;var&gt;parameter&lt;/var&gt; with the shortest matching pattern (the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 후술하는 규칙 (참조에 의한 패턴을 생성하기 위하여 팽창 매칭 &lt;a href=&quot;pattern-matching&quot;&gt;패턴 매칭&lt;/a&gt; ). 패턴이 &lt;var&gt;parameter&lt;/var&gt; 의 확장 된 값의 후미 부분과 일치하는 경우 확장 결과는 일치하는 패턴이 가장 짧은 &lt;var&gt;parameter&lt;/var&gt; 값 ( '</target>
        </trans-unit>
        <trans-unit id="212382715ff9cff342012ce4a011147732e6a507" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; is expanded to produce a pattern and matched according to the rules described below (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;). If the pattern matches the beginning of the expanded value of &lt;var&gt;parameter&lt;/var&gt;, then the result of the expansion is the expanded value of &lt;var&gt;parameter&lt;/var&gt; with the shortest matching pattern (the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 후술하는 규칙 (참조에 의한 패턴을 생성하기 위하여 팽창 매칭 &lt;a href=&quot;pattern-matching&quot;&gt;패턴 매칭&lt;/a&gt; ). 패턴이 &lt;var&gt;parameter&lt;/var&gt; 의 확장 된 값의 시작과 일치하면 확장 의 결과는 일치하는 패턴이 가장 짧은 &lt;var&gt;parameter&lt;/var&gt; 의 확장 된 값 ( '</target>
        </trans-unit>
        <trans-unit id="7e03f1d2cb21a846c6525ed5ee9d4ad6e035f30c" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; is expanded to produce a pattern and matched according to the rules described below (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;). If the pattern matches a trailing portion of the expanded value of &lt;var&gt;parameter&lt;/var&gt;, then the result of the expansion is the value of &lt;var&gt;parameter&lt;/var&gt; with the shortest matching pattern (the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 후술하는 규칙 (참조에 의한 패턴을 생성하기 위하여 팽창 매칭 &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;패턴 매칭&lt;/a&gt; ). 패턴이 확장 된 &lt;var&gt;parameter&lt;/var&gt; 값의 후미 부분과 일치하면 확장 결과는 일치 패턴이 가장 짧은 &lt;var&gt;parameter&lt;/var&gt; 의 값 ( '</target>
        </trans-unit>
        <trans-unit id="135d508445236cf079307a09a2a6c555b234eef9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; is expanded to produce a pattern and matched according to the rules described below (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;). If the pattern matches the beginning of the expanded value of &lt;var&gt;parameter&lt;/var&gt;, then the result of the expansion is the expanded value of &lt;var&gt;parameter&lt;/var&gt; with the shortest matching pattern (the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 규칙 설명에 따른 패턴을 생성하기 위하여 팽창 매칭 (참조 :&lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt; 패턴 매칭&lt;/a&gt; ). 패턴의 확장 값의 시작과 일치하는 경우 &lt;var&gt;parameter&lt;/var&gt; 다음 확장의 결과의 확장 값 &lt;var&gt;parameter&lt;/var&gt; 최단 매칭 패턴합니다 ( '</target>
        </trans-unit>
        <trans-unit id="7fb34d8e903203f6a0802b48909d54711fd52a0e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; undergoes tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal. Filename expansion and word splitting are not performed. The result is supplied as a single string, with a newline appended, to the command on its standard input (or file descriptor &lt;var&gt;n&lt;/var&gt; if &lt;var&gt;n&lt;/var&gt; is specified).</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; 확장 매개 변수 확장 명령 치환 산술 확장 및 인용 제거 틸드 겪을. 파일 이름 확장 및 단어 분할이 수행되지 않습니다. 결과는 표준 입력 (또는 &lt;var&gt;n&lt;/var&gt; 이 지정된 경우 파일 설명자 &lt;var&gt;n&lt;/var&gt; ) 의 명령에 줄 바꿈이 추가 된 단일 문자열로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="8db7640dae201f17ece7a4ce378f29ac781e303c" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;word&lt;/var&gt; undergoes tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal. Pathname expansion and word splitting are not performed. The result is supplied as a single string, with a newline appended, to the command on its standard input (or file descriptor &lt;var&gt;n&lt;/var&gt; if &lt;var&gt;n&lt;/var&gt; is specified).</source>
          <target state="translated">그만큼 &lt;var&gt;word&lt;/var&gt; 물결표 확장, 매개 변수 및 변수 확장, 명령 대체, 산술 확장 및 따옴표 제거가 적용됩니다. 경로 이름 확장 및 단어 분리가 수행되지 않습니다. 결과는 표준 입력 (또는 &lt;var&gt;n&lt;/var&gt; 이 지정된 경우 파일 설명자 &lt;var&gt;n&lt;/var&gt; ) 의 명령에 줄 바꾸기가 추가 된 단일 문자열로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dd5a5d55c8f27dde11f3baeaa1f434c5c884f2a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;wordlist&lt;/var&gt; is split using the characters in the &lt;code&gt;IFS&lt;/code&gt; special variable as delimiters, and each resultant word is expanded. The possible completions are the members of the resultant list which match the word being completed.</source>
          <target state="translated">그만큼 &lt;var&gt;wordlist&lt;/var&gt; (가)의 문자를 사용하여 분할 &lt;code&gt;IFS&lt;/code&gt; 구분 기호와 같은 특수 변수를 각 결과 단어가 확장됩니다. 가능한 완성은 완성 된 단어와 일치하는 결과 목록의 구성원입니다.</target>
        </trans-unit>
        <trans-unit id="eb3fdf937c1496421b6858ea7edee93a3a799ddd" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;cd&lt;/code&gt; and &lt;code&gt;pwd&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) each take</source>
          <target state="translated">Bash &lt;code&gt;cd&lt;/code&gt; 및 &lt;code&gt;pwd&lt;/code&gt; 내장 ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell 내장&lt;/a&gt; 참조 )은 각각</target>
        </trans-unit>
        <trans-unit id="d32dbbafffce1fc4e5112663803f67f698e0313b" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;cd&lt;/code&gt; and &lt;code&gt;pwd&lt;/code&gt; builtins (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) each take</source>
          <target state="translated">배쉬 &lt;code&gt;cd&lt;/code&gt; 및 &lt;code&gt;pwd&lt;/code&gt; 내장 ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell 내장&lt;/a&gt; 참조 )은 각각</target>
        </trans-unit>
        <trans-unit id="8a995895aaf4f7fd7c7fa7ac037a9f805e6b0cb2" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;configure&lt;/code&gt; has a number of</source>
          <target state="translated">Bash &lt;code&gt;configure&lt;/code&gt; 에는</target>
        </trans-unit>
        <trans-unit id="91ab71557d1ad18b498d3efa44417e2a2b5b64d1" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;exec&lt;/code&gt; builtin takes additional options that allow users to control the contents of the environment passed to the executed command, and what the zeroth argument to the command is to be (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash &lt;code&gt;exec&lt;/code&gt; 내장은 사용자가 실행 된 명령에 전달 된 환경의 내용과 명령에 대한 0 번째 인수가 될 것을 제어 할 수있는 추가 옵션을 사용합니다 ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5ca648070e218ac90e898929bafc1ebebbc4dc3d" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;exec&lt;/code&gt; builtin takes additional options that allow users to control the contents of the environment passed to the executed command, and what the zeroth argument to the command is to be (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">배쉬 &lt;code&gt;exec&lt;/code&gt; 내장은 사용자가 실행 된 명령에 전달 된 환경의 내용과 명령의 0 번째 인수를 제어 할 수있는 추가 옵션을 취합니다 ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9e3e61e392870587087c878ec441b6110999e7a2" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;declare&lt;/code&gt; builtins can take a</source>
          <target state="translated">Bash &lt;code&gt;export&lt;/code&gt; , &lt;code&gt;readonly&lt;/code&gt; 및 내장 &lt;code&gt;declare&lt;/code&gt; 은</target>
        </trans-unit>
        <trans-unit id="e84f3de2b05bb82f105adb422f91a0235e33ed21" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;hash&lt;/code&gt; builtin allows a name to be associated with an arbitrary filename, even when that filename cannot be found by searching the &lt;code&gt;$PATH&lt;/code&gt;, using &amp;lsquo;</source>
          <target state="translated">배쉬 &lt;code&gt;hash&lt;/code&gt; 내장 그 파일명이 탐색에 의해 발견 될 수없는 경우에도, 이름은 임의의 파일 이름과 연관 될 수 있도록 &lt;code&gt;$PATH&lt;/code&gt; '를 이용하여,</target>
        </trans-unit>
        <trans-unit id="b6983155bcc585c6aa81a48c55c1f98cf2d49f2d" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;read&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;) will read a line ending in &amp;lsquo;</source>
          <target state="translated">Bash &lt;code&gt;read&lt;/code&gt; 내장 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 )은 '로 끝나는 행을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="6f1a29c23ab47c096c80d29d1f28c871afdbf2f9" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;read&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;) will read a line ending in &amp;lsquo;</source>
          <target state="translated">배쉬 &lt;code&gt;read&lt;/code&gt; builtin ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 )은 '로 끝나는 줄을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="78a6987d3ab34c403b00747d037e5331174010d0" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;type&lt;/code&gt; builtin is more extensive and gives more information about the names it finds (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash &lt;code&gt;type&lt;/code&gt; 내장은 더 광범위하며 찾은 이름에 대한 자세한 정보를 제공합니다 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="9560f04958ba9662309d7c9ca30a5452558e8734" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;type&lt;/code&gt; builtin is more extensive and gives more information about the names it finds (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">배쉬 &lt;code&gt;type&lt;/code&gt; 내장은 더 광범위하며 찾은 이름에 대한 자세한 정보를 제공합니다 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="011f68718a3bf7ddfcc10c8f4d4974853dd058fa" translate="yes" xml:space="preserve">
          <source>The Bash &lt;code&gt;umask&lt;/code&gt; builtin permits a</source>
          <target state="translated">배쉬 &lt;code&gt;umask&lt;/code&gt; 내장은</target>
        </trans-unit>
        <trans-unit id="88a134a32d506c251b6b9f4f2024b15b176c6d2c" translate="yes" xml:space="preserve">
          <source>The Bash builtin commands that manipulate the command history.</source>
          <target state="translated">명령 히스토리를 조작하는 Bash 내장 명령.</target>
        </trans-unit>
        <trans-unit id="119862918d5afe567ca2c7c20e0ba5775c10fbf6" translate="yes" xml:space="preserve">
          <source>The Bash restricted mode is more useful (see &lt;a href=&quot;the-restricted-shell&quot;&gt;The Restricted Shell&lt;/a&gt;); the SVR4.2 shell restricted mode is too limited.</source>
          <target state="translated">Bash 제한 모드가 더 유용합니다 ( &lt;a href=&quot;the-restricted-shell&quot;&gt;The Restricted Shell&lt;/a&gt; 참조 ). SVR4.2 셸 제한 모드가 너무 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="dfad86bb10df133daef7e9361ebf45d501606d4f" translate="yes" xml:space="preserve">
          <source>The Bash restricted mode is more useful (see &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;); the SVR4.2 shell restricted mode is too limited.</source>
          <target state="translated">Bash 제한 모드가 더 유용합니다 ( &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;Restricted Shell&lt;/a&gt; 참조) . ). SVR4.2 쉘 제한 모드가 너무 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="f350d3ce6f3b2d6288fc07ca3f4336ba164ab29c" translate="yes" xml:space="preserve">
          <source>The CPU percentage, computed as (%U + %S) / %R.</source>
          <target state="translated">(% U + % S) / % R로 계산 된 CPU 백분율입니다.</target>
        </trans-unit>
        <trans-unit id="8101e8043dfcb405fba00536d729164e8202e22c" translate="yes" xml:space="preserve">
          <source>The Directory Stack</source>
          <target state="translated">디렉토리 스택</target>
        </trans-unit>
        <trans-unit id="44da4a00c73cebc1904bc729c930599744fcdb80" translate="yes" xml:space="preserve">
          <source>The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.</source>
          <target state="translated">문서에는이 라이센스가 문서에 적용된다는 통지 옆에 보증 고지 사항이 포함될 수 있습니다. 본 보증 면책 조항은 본 라이센스에 참조로 포함 된 것으로 간주되지만, 보증 면책 조항과 관련해서 만 : 본 보증 면책 조항이 가질 수있는 기타 영향은 무효이며 본 라이센스의 의미에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc4e1b1f3573db339f8f310e945685b221d8f7f8" translate="yes" xml:space="preserve">
          <source>The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See &lt;a href=&quot;http://www.gnu.org/copyleft/&quot;&gt;http://www.gnu.org/copyleft/&lt;/a&gt;.</source>
          <target state="translated">자유 소프트웨어 재단은 때때로 개정 된 GNU 자유 문서 라이센스 버전을 게시 할 수 있습니다. 이러한 새 버전은 현재 버전과 비슷하지만 새로운 문제 나 문제를 해결하기 위해 세부적으로 다를 수 있습니다. &lt;a href=&quot;http://www.gnu.org/copyleft/&quot;&gt;http://www.gnu.org/copyleft/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fa1d9aab0e3b835f4051ce83b125ccb3ca8221c" translate="yes" xml:space="preserve">
          <source>The GNU Bash Reference Manual</source>
          <target state="translated">GNU Bash 참조 매뉴얼</target>
        </trans-unit>
        <trans-unit id="7e3dcb60799ee16ce758c52d568981c6f3a3fed7" translate="yes" xml:space="preserve">
          <source>The History library provides a history expansion feature that is similar to the history expansion provided by &lt;code&gt;csh&lt;/code&gt;. This section describes the syntax used to manipulate the history information.</source>
          <target state="translated">히스토리 라이브러리는 &lt;code&gt;csh&lt;/code&gt; 에서 제공하는 히스토리 확장과 유사한 히스토리 확장 기능을 제공합니다. . 이 섹션에서는 기록 정보를 조작하는 데 사용되는 구문에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="d1ed7400ec115a9dfc3fddebdd8a40128c4ded56" translate="yes" xml:space="preserve">
          <source>The Restricted Shell</source>
          <target state="translated">제한된 껍질</target>
        </trans-unit>
        <trans-unit id="0221900f3cc15a1c298860102bf64524308b81de" translate="yes" xml:space="preserve">
          <source>The SVR4.2 &lt;code&gt;sh&lt;/code&gt; uses a &lt;code&gt;TIMEOUT&lt;/code&gt; variable like Bash uses &lt;code&gt;TMOUT&lt;/code&gt;.</source>
          <target state="translated">SVR4.2의 &lt;code&gt;sh&lt;/code&gt; 사용 &lt;code&gt;TIMEOUT&lt;/code&gt; 배쉬 같은 변수가 사용 &lt;code&gt;TMOUT&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f86158c9c8608385c777b3354e666f7607899302" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell behaves differently when invoked as &lt;code&gt;jsh&lt;/code&gt; (it turns on job control).</source>
          <target state="translated">SVR4.2 쉘은 &lt;code&gt;jsh&lt;/code&gt; 로 호출 될 때 다르게 작동합니다 (작업 제어를 켭니다).</target>
        </trans-unit>
        <trans-unit id="51dd1dec0e8631e54d29f98cee86e1486aa8c7c7" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell does not allow the &lt;code&gt;IFS&lt;/code&gt;, &lt;code&gt;MAILCHECK&lt;/code&gt;, &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;PS1&lt;/code&gt;, or &lt;code&gt;PS2&lt;/code&gt; variables to be unset.</source>
          <target state="translated">SVR4.2 쉘은 &lt;code&gt;IFS&lt;/code&gt; , &lt;code&gt;MAILCHECK&lt;/code&gt; , &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;PS1&lt;/code&gt; 또는 &lt;code&gt;PS2&lt;/code&gt; 변수를 설정 해제 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7dc3e76e4a7a71a2c5c68736369778200d4a068b" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell does not allow users to trap &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGALRM&lt;/code&gt;, or &lt;code&gt;SIGCHLD&lt;/code&gt;.</source>
          <target state="translated">SVR4.2 쉘에서는 사용자가 &lt;code&gt;SIGSEGV&lt;/code&gt; , &lt;code&gt;SIGALRM&lt;/code&gt; 또는 &lt;code&gt;SIGCHLD&lt;/code&gt; 를 트랩 할 수 없습니다. .</target>
        </trans-unit>
        <trans-unit id="7c8cec60eaa81d287be6036d5b3330155d2aaee0" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell exits a script if any builtin fails; Bash exits a script only if one of the &lt;small&gt;POSIX&lt;/small&gt; special builtins fails, and only for certain failures, as enumerated in the &lt;small&gt;POSIX&lt;/small&gt; standard.</source>
          <target state="translated">내장에 실패하면 SVR4.2 쉘이 스크립트를 종료합니다. Bash 는 &lt;small&gt;POSIX&lt;/small&gt; 표준에 열거 된 &lt;small&gt;POSIX&lt;/small&gt; 특수 내장 중 하나가 실패하고 특정 실패에 대해서만 스크립트를 종료합니다 .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e9e65fac50588f06f337b446e689d06b9fa1fcdd" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell has two privilege-related builtins (&lt;code&gt;mldmode&lt;/code&gt; and &lt;code&gt;priv&lt;/code&gt;) not present in Bash.</source>
          <target state="translated">SVR4.2 쉘에는 Bash에없는 두 가지 권한 관련 내장 ( &lt;code&gt;mldmode&lt;/code&gt; 및 &lt;code&gt;priv&lt;/code&gt; )이 있습니다.</target>
        </trans-unit>
        <trans-unit id="abfe42a73378f192636c416081ee0ba75c921dbd" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell treats &amp;lsquo;</source>
          <target state="translated">SVR4.2 쉘은</target>
        </trans-unit>
        <trans-unit id="32da5124ce290e06f5df4021e5c9e58a2ec68fca" translate="yes" xml:space="preserve">
          <source>The SVR4.2 shell uses a baroque memory management scheme based on trapping &lt;code&gt;SIGSEGV&lt;/code&gt;. If the shell is started from a process with &lt;code&gt;SIGSEGV&lt;/code&gt; blocked (e.g., by using the &lt;code&gt;system()&lt;/code&gt; C library function call), it misbehaves badly.</source>
          <target state="translated">SVR4.2 쉘은 &lt;code&gt;SIGSEGV&lt;/code&gt; 트래핑에 기반한 바로크 메모리 관리 체계를 사용합니다 . &lt;code&gt;SIGSEGV&lt;/code&gt; 가 차단 된 프로세스 (예 : &lt;code&gt;system()&lt;/code&gt; C 라이브러리 함수 호출 사용) 에서 쉘을 시작 하면 잘못 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9d078170d9ac1a24a65b855ed322285b43c4a1f9" translate="yes" xml:space="preserve">
          <source>The Set Builtin</source>
          <target state="translated">내장 세트</target>
        </trans-unit>
        <trans-unit id="a178a5fcf936f299e161d13787958b2688f0a3bd" translate="yes" xml:space="preserve">
          <source>The Shopt Builtin</source>
          <target state="translated">Shopt Builtin</target>
        </trans-unit>
        <trans-unit id="c44b3bbabdeb1666eb94cab66694e7ce4fb1c065" translate="yes" xml:space="preserve">
          <source>The above table describes the most basic keystrokes that you need in order to do editing of the input line. For your convenience, many other commands have been added in addition to</source>
          <target state="translated">위의 표는 입력 라인을 편집하는 데 필요한 가장 기본적인 키 입력을 설명합니다. 편의를 위해 많은 다른 명령이 추가되었습니다</target>
        </trans-unit>
        <trans-unit id="bfb30ed55cffda59921fb41c9a88599aba518ba6" translate="yes" xml:space="preserve">
          <source>The arguments are concatenated together into a single command, which is then read and executed, and its exit status returned as the exit status of &lt;code&gt;eval&lt;/code&gt;. If there are no arguments or only empty arguments, the return status is zero.</source>
          <target state="translated">인수는 단일 명령으로 연결되어 읽히고 실행되며 종료 상태는 &lt;code&gt;eval&lt;/code&gt; 의 종료 상태로 리턴됩니다 . 인수가 없거나 빈 인수 만있는 경우 반환 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="80f8ba932268350e49c3ab1b42a0ce68722c6824" translate="yes" xml:space="preserve">
          <source>The arguments to the interpreter consist of a single optional argument following the interpreter name on the first line of the script file, followed by the name of the script file, followed by the rest of the arguments. Bash will perform this action on operating systems that do not handle it themselves. Note that some older versions of Unix limit the interpreter name and argument to a maximum of 32 characters.</source>
          <target state="translated">인터프리터에 대한 인수는 스크립트 파일의 첫 번째 행에있는 인터프리터 이름 다음에 스크립트 파일의 이름이오고 나머지 인수가 뒤에 오는 단일 선택적 인수로 구성됩니다. Bash는 스스로 처리하지 않는 운영 체제에서이 작업을 수행합니다. 일부 이전 버전의 Unix는 인터프리터 이름과 인수를 최대 32 자로 제한합니다.</target>
        </trans-unit>
        <trans-unit id="c630bbd7033e6aff3aef920603c8eff22485c829" translate="yes" xml:space="preserve">
          <source>The arguments to the interpreter consist of one or more optional arguments following the interpreter name on the first line of the script file, followed by the name of the script file, followed by the rest of the arguments supplied to the script. The details of how the interpreter line is split into an interpreter name and a set of arguments vary across systems. Bash will perform this action on operating systems that do not handle it themselves. Note that some older versions of Unix limit the interpreter name and a single argument to a maximum of 32 characters, so it&amp;rsquo;s not portable to assume that using more than one argument will work.</source>
          <target state="translated">인터프리터에 대한 인수는 스크립트 파일의 첫 번째 줄에있는 인터프리터 이름 다음에 나오는 하나 이상의 선택적 인수로 구성되고, 그 뒤에 스크립트 파일 이름과 스크립트에 제공된 나머지 인수가 뒤 따릅니다. 인터프리터 라인이 인터프리터 이름과 인수 세트로 분할되는 방법에 대한 세부 사항은 시스템마다 다릅니다. Bash는 스스로 처리하지 않는 운영 체제에서이 작업을 수행합니다. 일부 이전 버전의 Unix는 인터프리터 이름과 단일 인수를 최대 32 자로 제한하므로 둘 이상의 인수를 사용하는 것이 작동한다고 가정하는 것은 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a17b00755955ad6efdf8f79a6d21b69a3d2fd947" translate="yes" xml:space="preserve">
          <source>The arithmetic &lt;var&gt;expression&lt;/var&gt; is evaluated according to the rules described below (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). If the value of the expression is non-zero, the return status is 0; otherwise the return status is 1. This is exactly equivalent to</source>
          <target state="translated">산술 &lt;var&gt;expression&lt;/var&gt; 은 아래에 설명 된 규칙에 따라 평가됩니다 ( &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt; 참조 ). 표현식의 값이 0이 아니면 반환 상태는 0입니다. 그렇지 않으면 반환 상태는 1입니다. 이것은 정확히 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="544b33d9a56fea5e12b312c1fecdfd3f4e00c12c" translate="yes" xml:space="preserve">
          <source>The arithmetic &lt;var&gt;expression&lt;/var&gt; is evaluated according to the rules described below (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). If the value of the expression is non-zero, the return status is 0; otherwise the return status is 1. This is exactly equivalent to</source>
          <target state="translated">산술 &lt;var&gt;expression&lt;/var&gt; 은 아래에 설명 된 규칙에 따라 평가됩니다 ( &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;쉘 산술&lt;/a&gt; 참조 ). 표현식의 값이 0이 아닌 경우 리턴 상태는 0입니다. 그렇지 않으면 반환 상태는 1입니다. 이것은 정확히</target>
        </trans-unit>
        <trans-unit id="d20a2ea71a62e80042fe4b221f62bbc7d9ad9534" translate="yes" xml:space="preserve">
          <source>The arrival of &lt;code&gt;SIGCHLD&lt;/code&gt; when a trap is set on &lt;code&gt;SIGCHLD&lt;/code&gt; does not interrupt the &lt;code&gt;wait&lt;/code&gt; builtin and cause it to return immediately. The trap command is run once for each child that exits.</source>
          <target state="translated">트랩이 &lt;code&gt;SIGCHLD&lt;/code&gt; 에 설정 될 때 &lt;code&gt;SIGCHLD&lt;/code&gt; 의 도착은 내장 &lt;code&gt;wait&lt;/code&gt; 방해하지 않으며 즉시 리턴합니다. 트랩 명령은 종료되는 각 하위에 대해 한 번씩 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3c942f1235d6aa99590aadaf6d144fb8e66aa7a8" translate="yes" xml:space="preserve">
          <source>The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.</source>
          <target state="translated">이 사용권 계약에 의해 문서의 저자 및 발행인은 자신의 이름을 수정 버전의 홍보 또는 주장 또는 암시를 암시 할 수있는 권한을 부여하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0719d70a53ccc4d8b1222bf02f06761ac07d2e30" translate="yes" xml:space="preserve">
          <source>The basename of &lt;code&gt;$PWD&lt;/code&gt;, with &lt;code&gt;$HOME&lt;/code&gt; abbreviated with a tilde.</source>
          <target state="translated">의 기본 이름 &lt;code&gt;$PWD&lt;/code&gt; 와, &lt;code&gt;$HOME&lt;/code&gt; 물결표 약자.</target>
        </trans-unit>
        <trans-unit id="4e3b8521e9991cf592635840f88cab8b001d472f" translate="yes" xml:space="preserve">
          <source>The basename of the shell&amp;rsquo;s terminal device name.</source>
          <target state="translated">쉘 터미널 장치 이름의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1f2b74dd6c178d7ff0e2c04bb2dd60a1e50de447" translate="yes" xml:space="preserve">
          <source>The basic form of parameter expansion is ${&lt;var&gt;parameter&lt;/var&gt;}. The value of &lt;var&gt;parameter&lt;/var&gt; is substituted. The &lt;var&gt;parameter&lt;/var&gt; is a shell parameter as described above (see &lt;a href=&quot;shell-parameters&quot;&gt;Shell Parameters&lt;/a&gt;) or an array reference (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;). The braces are required when &lt;var&gt;parameter&lt;/var&gt; is a positional parameter with more than one digit, or when &lt;var&gt;parameter&lt;/var&gt; is followed by a character that is not to be interpreted as part of its name.</source>
          <target state="translated">매개 변수 확장의 기본 형식은 $ { &lt;var&gt;parameter&lt;/var&gt; }입니다. &lt;var&gt;parameter&lt;/var&gt; 값 이 대체됩니다. &lt;var&gt;parameter&lt;/var&gt; 전술 한 바와 같이 쉘 파라미터이다 ( &lt;a href=&quot;shell-parameters&quot;&gt;셸 파라미터&lt;/a&gt; ) 또는 배열 기준 (참고 &lt;a href=&quot;arrays&quot;&gt;배열&lt;/a&gt; ). 중괄호 때 필요한 &lt;var&gt;parameter&lt;/var&gt; 하나 개 이상의 숫자와 위치 파라미터 인 경우 또는 &lt;var&gt;parameter&lt;/var&gt; 없는 그 이름의 일부로 해석 될 문자 따른다.</target>
        </trans-unit>
        <trans-unit id="22b08de91689f1b108df56372625d3addb0d1e32" translate="yes" xml:space="preserve">
          <source>The basic form of parameter expansion is ${&lt;var&gt;parameter&lt;/var&gt;}. The value of &lt;var&gt;parameter&lt;/var&gt; is substituted. The &lt;var&gt;parameter&lt;/var&gt; is a shell parameter as described above (see &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;Shell Parameters&lt;/a&gt;) or an array reference (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;). The braces are required when &lt;var&gt;parameter&lt;/var&gt; is a positional parameter with more than one digit, or when &lt;var&gt;parameter&lt;/var&gt; is followed by a character that is not to be interpreted as part of its name.</source>
          <target state="translated">매개 변수 확장의 기본 형식은 $ { &lt;var&gt;parameter&lt;/var&gt; }입니다. &lt;var&gt;parameter&lt;/var&gt; 값 이 대체됩니다. &lt;var&gt;parameter&lt;/var&gt; 전술 한 바와 같이 쉘 파라미터이다 ( &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;셸 파라미터&lt;/a&gt; ) 또는 배열 기준 (참고 &lt;a href=&quot;arrays#Arrays&quot;&gt;배열&lt;/a&gt; ). &lt;var&gt;parameter&lt;/var&gt; 가 두 자리 이상의 위치 매개 변수이거나 &lt;var&gt;parameter&lt;/var&gt; 뒤에 이름의 일부로 해석되지 않는 문자가 오는 경우 중괄호가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="522497e12cce3a24573239f8f443b81d58f1c108" translate="yes" xml:space="preserve">
          <source>The basic operation of the shell.</source>
          <target state="translated">쉘의 기본 조작.</target>
        </trans-unit>
        <trans-unit id="547b737e157ebce4950fd4c3ba0807ea7f813f59" translate="yes" xml:space="preserve">
          <source>The build version.</source>
          <target state="translated">빌드 버전.</target>
        </trans-unit>
        <trans-unit id="5f53279b4ab68d3c5397e0f4a33d75ae949fc61e" translate="yes" xml:space="preserve">
          <source>The builtin command &lt;code&gt;fc&lt;/code&gt; may be used to list or edit and re-execute a portion of the history list. The &lt;code&gt;history&lt;/code&gt; builtin may be used to display or modify the history list and manipulate the history file. When using command-line editing, search commands are available in each editing mode that provide access to the history list (see &lt;a href=&quot;commands-for-history&quot;&gt;Commands For History&lt;/a&gt;).</source>
          <target state="translated">내장 명령 &lt;code&gt;fc&lt;/code&gt; 를 사용하여 히스토리 목록의 일부를 나열하거나 편집하고 다시 실행할 수 있습니다. &lt;code&gt;history&lt;/code&gt; 내장은 표시하거나 기록 목록을 수정하고 기록 파일을 조작하는 데 사용할 수 있습니다. 명령 줄 편집을 사용하는 경우 기록 목록에 대한 액세스를 제공하는 각 편집 모드에서 검색 명령을 사용할 수 있습니다 ( &lt;a href=&quot;commands-for-history&quot;&gt;기록 명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="e1031c39f1533ef620fa929abb5b80eb7ef4e303" translate="yes" xml:space="preserve">
          <source>The builtin command &lt;code&gt;fc&lt;/code&gt; may be used to list or edit and re-execute a portion of the history list. The &lt;code&gt;history&lt;/code&gt; builtin may be used to display or modify the history list and manipulate the history file. When using command-line editing, search commands are available in each editing mode that provide access to the history list (see &lt;a href=&quot;commands-for-history#Commands-For-History&quot;&gt;Commands For History&lt;/a&gt;).</source>
          <target state="translated">내장 명령 &lt;code&gt;fc&lt;/code&gt; 를 사용하여 히스토리 목록의 일부를 나열하거나 편집하고 다시 실행할 수 있습니다. &lt;code&gt;history&lt;/code&gt; 내장은 표시하거나 기록 목록을 수정하고 기록 파일을 조작하는 데 사용할 수 있습니다. 명령 행 편집을 사용하는 경우 히스토리 목록에 대한 액세스를 제공하는 각 편집 모드에서 검색 명령을 사용할 수 있습니다 (히스토리 &lt;a href=&quot;commands-for-history#Commands-For-History&quot;&gt;명령&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5681c7eb98f8f62f9691a67a1aa7dc98ddf16666" translate="yes" xml:space="preserve">
          <source>The character indicating end-of-file as set, for example, by &lt;code&gt;stty&lt;/code&gt;. If this character is read when there are no characters on the line, and point is at the beginning of the line, Readline interprets it as the end of input and returns &lt;small&gt;EOF&lt;/small&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;stty&lt;/code&gt; 에 의해 설정된 파일 끝을 나타내는 문자 입니다. 행에 문자가없고 포인트가 행의 시작 부분에있을 때이 문자를 읽으면 Readline은 입력의 끝으로 해석하여 &lt;small&gt;EOF를&lt;/small&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a1f43e37d7e0145f9475ffaf82e4a308daf0898d" translate="yes" xml:space="preserve">
          <source>The character whose ASCII code is the octal value &lt;var&gt;nnn&lt;/var&gt;.</source>
          <target state="translated">ASCII 코드가 8 진수 값 &lt;var&gt;nnn&lt;/var&gt; 인 문자입니다 .</target>
        </trans-unit>
        <trans-unit id="57a7ee957bc5a71d3cbf9326e9008389a7ca4437" translate="yes" xml:space="preserve">
          <source>The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work.</source>
          <target state="translated">결합 된 저작물에는이 라이센스의 사본이 하나만 있으면되며 여러 개의 동일한 고정 섹션이 단일 사본으로 대체 될 수 있습니다. 이름은 같지만 내용이 다른 불변 섹션이 여러 개있는 경우 섹션 끝 (해당 섹션의 원래 작성자 또는 발행자 이름을 괄호로 묶음)을 추가하여 각 섹션의 제목을 고유하게 만드십시오. 고유 번호. 결합 된 저작물의 라이센스 고지에있는 불변 섹션 목록에서 섹션 제목을 동일하게 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="363f698c08628d02c4804195d4308c0880e37d96" translate="yes" xml:space="preserve">
          <source>The command argument to the</source>
          <target state="translated">에 대한 명령 인수</target>
        </trans-unit>
        <trans-unit id="db438ba0a9d98063be92c5c7fdf602e0c569af2c" translate="yes" xml:space="preserve">
          <source>The command currently being executed or about to be executed, unless the shell is executing a command as the result of a trap, in which case it is the command executing at the time of the trap.</source>
          <target state="translated">쉘이 트랩의 결과로 명령을 실행하지 않는 한, 현재 실행 중이거나 실행 되려는 명령.이 경우에는 트랩시 실행되는 명령입니다.</target>
        </trans-unit>
        <trans-unit id="0823f87b1dc72e2cb57608747bffc173f073b6c3" translate="yes" xml:space="preserve">
          <source>The command currently being executed or about to be executed, unless the shell is executing a command as the result of a trap, in which case it is the command executing at the time of the trap. If &lt;code&gt;BASH_COMMAND&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">쉘이 트랩의 결과로 명령을 실행하지 않는 한 현재 실행 중이거나 실행될 명령입니다.이 경우 트랩시 실행되는 명령입니다. 경우 &lt;code&gt;BASH_COMMAND&lt;/code&gt; 가 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="8faaec7f2fd73daa01fde31d516db82f1177830a" translate="yes" xml:space="preserve">
          <source>The command number and the history number are usually different: the history number of a command is its position in the history list, which may include commands restored from the history file (see &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash History Facilities&lt;/a&gt;), while the command number is the position in the sequence of commands executed during the current shell session.</source>
          <target state="translated">명령 번호와 히스토리 번호는 일반적으로 다릅니다. 명령의 히스토리 번호는 히스토리 목록에서의 위치이며 히스토리 파일에서 복원 된 명령을 포함 할 수 있습니다 ( &lt;a href=&quot;bash-history-facilities&quot;&gt;Bash 히스토리 기능&lt;/a&gt; 참조 ). 현재 셸 세션 중에 실행되는 일련의 명령.</target>
        </trans-unit>
        <trans-unit id="d298dac4bb7f8b8b84ac852a5deae9875edb6e39" translate="yes" xml:space="preserve">
          <source>The command number and the history number are usually different: the history number of a command is its position in the history list, which may include commands restored from the history file (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;), while the command number is the position in the sequence of commands executed during the current shell session.</source>
          <target state="translated">명령 번호와 히스토리 번호는 일반적으로 다릅니다. 명령의 히스토리 번호는 히스토리 파일에서 복원 된 명령을 포함 할 수있는 히스토리 목록에서의 위치 ( &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash 히스토리 기능&lt;/a&gt; 참조 )이며 명령 번호는 현재 쉘 세션 동안 실행 된 명령 순서</target>
        </trans-unit>
        <trans-unit id="68c083513e7077cde36063ca622b3fe84c369a12" translate="yes" xml:space="preserve">
          <source>The command number of this command.</source>
          <target state="translated">이 명령의 명령 번호</target>
        </trans-unit>
        <trans-unit id="444edec36d62dad4eb01d33ce460ea3f967b5e7b" translate="yes" xml:space="preserve">
          <source>The commands in &lt;var&gt;arg&lt;/var&gt; are to be read and executed when the shell receives signal &lt;var&gt;sigspec&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is absent (and there is a single &lt;var&gt;sigspec&lt;/var&gt;) or equal to &amp;lsquo;</source>
          <target state="translated">쉘이 &lt;var&gt;sigspec&lt;/var&gt; 신호를 수신 할 때 &lt;var&gt;arg&lt;/var&gt; 의 명령을 읽고 실행 해야 합니다. 경우 &lt;var&gt;arg&lt;/var&gt; (단일 부재가 &lt;var&gt;sigspec&lt;/var&gt; ) 또는 '동등</target>
        </trans-unit>
        <trans-unit id="aaf7f9b1349e0e7e1616c5e20edba33e1e828af3" translate="yes" xml:space="preserve">
          <source>The compiler used to compile Bash.</source>
          <target state="translated">컴파일러는 Bash를 컴파일하는 데 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb5c3e35ed67e42305d577a701f3bbae6dd338b1" translate="yes" xml:space="preserve">
          <source>The configuration process uses GCC to build Bash if it is available.</source>
          <target state="translated">구성 프로세스는 사용 가능한 경우 GCC를 사용하여 Bash를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="1c7411b2494a8d31cf91d750fc8ee6f3169c04af" translate="yes" xml:space="preserve">
          <source>The contents of the Readline line buffer, for use with &amp;lsquo;</source>
          <target state="translated">'와 함께 사용하기위한 Readline 라인 버퍼의 내용</target>
        </trans-unit>
        <trans-unit id="2c45336942920b7170007cc831424a324196685a" translate="yes" xml:space="preserve">
          <source>The contents of the directory stack are also visible as the value of the &lt;code&gt;DIRSTACK&lt;/code&gt; shell variable.</source>
          <target state="translated">디렉토리 스택의 내용은 &lt;code&gt;DIRSTACK&lt;/code&gt; 쉘 변수 의 값으로도 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b6b4afda0374724137c55901b8b514c75f618e3" translate="yes" xml:space="preserve">
          <source>The current command line. This variable is available only in shell functions and external commands invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">현재 명령 줄입니다. 이 변수는 프로그래밍 가능한 완료 기능에 의해 호출 된 쉘 함수 및 외부 명령에서만 사용할 수 있습니다 ( &lt;a href=&quot;programmable-completion&quot;&gt;프로그래밍 가능한 완료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="272cfe39d051b3b6acdf30eb9e7ff41d5210caa6" translate="yes" xml:space="preserve">
          <source>The current command line. This variable is available only in shell functions and external commands invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">현재 명령 행 이 변수는 프로그램 가능 완료 기능에 의해 호출 된 쉘 기능 및 외부 명령에서만 사용 가능합니다 ( &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;프로그램 가능 완료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="6c84be98532ea7490d3f3b6b5372252f832c61d7" translate="yes" xml:space="preserve">
          <source>The current user&amp;rsquo;s home directory; the default for the &lt;code&gt;cd&lt;/code&gt; builtin command. The value of this variable is also used by tilde expansion (see &lt;a href=&quot;tilde-expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">현재 사용자의 홈 디렉토리. &lt;code&gt;cd&lt;/code&gt; 내장 명령 의 기본값 . 이 변수의 값은 또한 물결 팽창에 의해 사용된다 ( &lt;a href=&quot;tilde-expansion&quot;&gt;틸드 확장&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="85b7d3b88d190b91804d29fb6c79b02596242b66" translate="yes" xml:space="preserve">
          <source>The current user&amp;rsquo;s home directory; the default for the &lt;code&gt;cd&lt;/code&gt; builtin command. The value of this variable is also used by tilde expansion (see &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">현재 사용자의 홈 디렉토리 &lt;code&gt;cd&lt;/code&gt; 내장 명령 의 기본값 이 변수의 값은 또한 물결 팽창에 의해 사용된다 ( &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;틸드 확장&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="756252819c489eccf2d6dfd7220af85cbf39741e" translate="yes" xml:space="preserve">
          <source>The current working directory as set by the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; 내장에서 설정 한 현재 작업 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="2d977a91df3c6d96d531d4699803ccb23120defa" translate="yes" xml:space="preserve">
          <source>The current working directory, with &lt;code&gt;$HOME&lt;/code&gt; abbreviated with a tilde (uses the &lt;code&gt;$PROMPT_DIRTRIM&lt;/code&gt; variable).</source>
          <target state="translated">&lt;code&gt;$HOME&lt;/code&gt; 이 물결표로 축약 된 현재 작업 디렉토리 ( &lt;code&gt;$PROMPT_DIRTRIM&lt;/code&gt; 변수 사용).</target>
        </trans-unit>
        <trans-unit id="2e40e2943bfc29c4e8f571c2cc18658ade7b2675" translate="yes" xml:space="preserve">
          <source>The date, in &quot;Weekday Month Date&quot; format (e.g., &quot;Tue May 26&quot;).</source>
          <target state="translated">&quot;평일 월 날짜&quot;형식의 날짜 (예 : &quot;화 5 월 26 일&quot;).</target>
        </trans-unit>
        <trans-unit id="76cdb31f5e7b4f5eff9ab47dfb6bfbb2699ca5bd" translate="yes" xml:space="preserve">
          <source>The default editor used by &lt;code&gt;fc&lt;/code&gt; is &lt;code&gt;ed&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fc&lt;/code&gt; 가 사용하는 기본 편집기 는 &lt;code&gt;ed&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c83865772580a561b300828e97c67e2bb4129e60" translate="yes" xml:space="preserve">
          <source>The default history file is</source>
          <target state="translated">기본 기록 파일은</target>
        </trans-unit>
        <trans-unit id="cf2b50ab45069e3e4b7917ea14c9ab9c0c14b0e2" translate="yes" xml:space="preserve">
          <source>The default variable for the &lt;code&gt;read&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 내장 의 기본 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="0422c738d422db971a344fd93c76843bfddb16dd" translate="yes" xml:space="preserve">
          <source>The directory stack is a list of recently-visited directories. The &lt;code&gt;pushd&lt;/code&gt; builtin adds directories to the stack as it changes the current directory, and the &lt;code&gt;popd&lt;/code&gt; builtin removes specified directories from the stack and changes the current directory to the directory removed. The &lt;code&gt;dirs&lt;/code&gt; builtin displays the contents of the directory stack. The current directory is always the &quot;top&quot; of the directory stack.</source>
          <target state="translated">디렉토리 스택은 최근에 방문한 디렉토리의 목록입니다. &lt;code&gt;pushd&lt;/code&gt; 현재 디렉토리를 변경하고 같은 내장은 스택에 디렉토리를 추가 &lt;code&gt;popd&lt;/code&gt; 를 제거합니다 내장이 스택에서 디렉토리를 지정 제거 디렉토리로 현재 디렉토리를 변경합니다. 내장 된 &lt;code&gt;dirs&lt;/code&gt; 는 디렉토리 스택의 내용을 표시합니다. 현재 디렉토리는 항상 디렉토리 스택의 &quot;맨 위&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f84fe1217141a60f1acea263424777b99143ff80" translate="yes" xml:space="preserve">
          <source>The editor used as a default by the</source>
          <target state="translated">에 의해 기본값으로 사용되는 편집기</target>
        </trans-unit>
        <trans-unit id="8f8ac00d44812804b6698dc01288babfb57f1868" translate="yes" xml:space="preserve">
          <source>The elapsed time in seconds.</source>
          <target state="translated">경과 시간 (초)</target>
        </trans-unit>
        <trans-unit id="1be6a1113e30606692a67477f4097f43bbe26e72" translate="yes" xml:space="preserve">
          <source>The entire command line typed so far.</source>
          <target state="translated">지금까지 전체 명령 줄이 입력되었습니다.</target>
        </trans-unit>
        <trans-unit id="84ff79058d0ce94205cd8823e0f4e7a6789d15de" translate="yes" xml:space="preserve">
          <source>The environment for any simple command or function may be augmented temporarily by prefixing it with parameter assignments, as described in &lt;a href=&quot;shell-parameters&quot;&gt;Shell Parameters&lt;/a&gt;. These assignment statements affect only the environment seen by that command.</source>
          <target state="translated">간단한 명령 또는 기능에 대한 환경은 &lt;a href=&quot;shell-parameters&quot;&gt;Shell Parameters에&lt;/a&gt; 설명 된대로 매개 변수 할당을 접두사로 지정하여 일시적으로 확장 할 수 있습니다 . 이러한 할당 명령문은 해당 명령이 표시하는 환경에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="004ef2973c3fe380792b41ec8640618bf36ae5ec" translate="yes" xml:space="preserve">
          <source>The environment for any simple command or function may be augmented temporarily by prefixing it with parameter assignments, as described in &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;Shell Parameters&lt;/a&gt;. These assignment statements affect only the environment seen by that command.</source>
          <target state="translated">&lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;쉘 매개 변수에&lt;/a&gt; 설명 된대로 간단한 명령 또는 기능의 환경은 매개 변수 지정으로 접 두부를 붙여 일시적으로 기능을 보강 할 수 있습니다 . 이러한 할당 문은 해당 명령으로 보이는 환경에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="c806edb5a9a33cdfe28359bafdacfa8e20ef36ad" translate="yes" xml:space="preserve">
          <source>The environment given to a command.</source>
          <target state="translated">명령에 주어진 환경.</target>
        </trans-unit>
        <trans-unit id="8c97a4fcc116c7260ddba34ab30efe6d48cd3904" translate="yes" xml:space="preserve">
          <source>The environment in which Bash executes commands that are not shell builtins.</source>
          <target state="translated">Bash가 쉘 내장이 아닌 명령을 실행하는 환경.</target>
        </trans-unit>
        <trans-unit id="6494e848de7e8672931e606b3eb599c45d712d78" translate="yes" xml:space="preserve">
          <source>The evaluation is performed according to the rules listed below (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). If the expression is invalid, Bash prints a message indicating failure to the standard error and no substitution occurs.</source>
          <target state="translated">평가는 아래 나열된 규칙에 따라 수행됩니다 ( &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt; 참조 ). 표현식이 유효하지 않으면 Bash는 표준 오류에 대한 실패를 나타내는 메시지를 인쇄하고 대체가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d48bf4fbf249bff3c7227d31993cd69d77fc772" translate="yes" xml:space="preserve">
          <source>The evaluation is performed according to the rules listed below (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). If the expression is invalid, Bash prints a message indicating failure to the standard error and no substitution occurs.</source>
          <target state="translated">평가는 아래 나열된 규칙에 따라 수행됩니다 ( &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;쉘 산술&lt;/a&gt; 참조 ). 표현식이 유효하지 않으면 Bash는 표준 오류 실패를 나타내는 메시지를 인쇄하고 대체가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5facf0a0b0cff233ba51912100429e5c474a3e34" translate="yes" xml:space="preserve">
          <source>The exit status is used by the Bash conditional commands (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;) and some of the list constructs (see &lt;a href=&quot;lists&quot;&gt;Lists&lt;/a&gt;).</source>
          <target state="translated">종료 상태는 Bash 조건부 명령 ( &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt; 참조 ) 및 일부 목록 구성 ( &lt;a href=&quot;lists&quot;&gt;Lists&lt;/a&gt; 참조 )에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b2a3bcd8de06d432811148b511088b8c490fa8cc" translate="yes" xml:space="preserve">
          <source>The exit status is used by the Bash conditional commands (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;) and some of the list constructs (see &lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;).</source>
          <target state="translated">종료 상태가 Bash는 조건 명령으로 사용된다 ( &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;조건부 구축해를&lt;/a&gt; )하고 목록 구조의 일부 (참조 &lt;a href=&quot;lists#Lists&quot;&gt;목록을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cde7e4cab4ce1918b0e4eaf2989a1e2a03f95939" translate="yes" xml:space="preserve">
          <source>The exit status of a function definition is zero unless a syntax error occurs or a readonly function with the same name already exists. When executed, the exit status of a function is the exit status of the last command executed in the body.</source>
          <target state="translated">구문 오류가 발생하거나 동일한 이름의 읽기 전용 함수가 이미 존재하지 않는 한 함수 정의의 종료 상태는 0입니다. 실행될 때 함수의 종료 상태는 본문에서 마지막으로 실행 된 명령의 종료 상태입니다.</target>
        </trans-unit>
        <trans-unit id="dcf5b5e2ebe373693345ac97297647ccc71d5099" translate="yes" xml:space="preserve">
          <source>The exit status of a pipeline is the exit status of the last command in the pipeline, unless the &lt;code&gt;pipefail&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;). If &lt;code&gt;pipefail&lt;/code&gt; is enabled, the pipeline&amp;rsquo;s return status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully. If the reserved word &amp;lsquo;</source>
          <target state="translated">파이프 라인의 종료 상태는 &lt;code&gt;pipefail&lt;/code&gt; 옵션이 활성화 되지 않은 경우 파이프 라인에있는 마지막 명령의 종료 상태입니다 ( &lt;a href=&quot;the-set-builtin&quot;&gt;Set Builtin&lt;/a&gt; 참조 ). &lt;code&gt;pipefail&lt;/code&gt; 이 활성화 된 경우 파이프 라인의 반환 상태는 0이 아닌 상태로 종료하는 마지막 (가장 오른쪽) 명령의 값이거나 모든 명령이 성공적으로 종료되면 0입니다. 예약어 '</target>
        </trans-unit>
        <trans-unit id="882874af5c1883e6795fc355502741713e443883" translate="yes" xml:space="preserve">
          <source>The exit status of a pipeline is the exit status of the last command in the pipeline, unless the &lt;code&gt;pipefail&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;). If &lt;code&gt;pipefail&lt;/code&gt; is enabled, the pipeline&amp;rsquo;s return status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully. If the reserved word &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;pipefail&lt;/code&gt; 옵션이 활성화되어 있지 않으면 파이프 라인의 종료 상태는 파이프 라인에서 마지막 명령의 종료 상태입니다 ( &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;내장 설정&lt;/a&gt; 참조 ). &lt;code&gt;pipefail&lt;/code&gt; 이 사용 가능한 경우 파이프 라인의 리턴 상태는 0이 아닌 상태로 종료하는 마지막 (가장 오른쪽) 명령의 값이거나 모든 명령이 성공적으로 종료되면 0입니다. 예약어가 '</target>
        </trans-unit>
        <trans-unit id="93521ff5f845f7a673cd2da3229c4bb2d0df9a9a" translate="yes" xml:space="preserve">
          <source>The exit status of an executed command is the value returned by the &lt;var&gt;waitpid&lt;/var&gt; system call or equivalent function. Exit statuses fall between 0 and 255, though, as explained below, the shell may use values above 125 specially. Exit statuses from shell builtins and compound commands are also limited to this range. Under certain circumstances, the shell will use special values to indicate specific failure modes.</source>
          <target state="translated">실행 된 명령의 종료 상태는 &lt;var&gt;waitpid&lt;/var&gt; 시스템 호출 또는 동등한 기능에 의해 리턴되는 값 입니다. 종료 상태는 0에서 255 사이입니다. 아래에서 설명 하듯이 쉘은 특별히 125 이상의 값을 사용할 수 있습니다. 쉘 내장 및 복합 명령의 종료 상태도이 범위로 제한됩니다. 특정 상황에서 쉘은 특정 실패 모드를 표시하기 위해 특수 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f56e5df71600b99dbbc7e4e5772c796cf78e239d" translate="yes" xml:space="preserve">
          <source>The exit status of both of these constructs is the exit status of &lt;var&gt;list&lt;/var&gt;.</source>
          <target state="translated">이 두 구성의 종료 상태는 &lt;var&gt;list&lt;/var&gt; 의 종료 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="af302677a0ba24ac769ec8978131a3baa418945c" translate="yes" xml:space="preserve">
          <source>The expanded result is single-quoted, as if the dollar sign had not been present.</source>
          <target state="translated">확장 된 결과는 달러 기호가없는 것처럼 작은 따옴표로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="78075a86afd7d05f1bbb85b728d68fedf63cefae" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${!&lt;var&gt;prefix&lt;/var&gt;*}&lt;/code&gt; expansion, which expands to the names of all shell variables whose names begin with &lt;var&gt;prefix&lt;/var&gt;, is available (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">확장 &lt;code&gt;${!&lt;var&gt;prefix&lt;/var&gt;*}&lt;/code&gt; 이름이 &lt;var&gt;prefix&lt;/var&gt; 로 시작하는 모든 쉘 변수의 이름으로 확장되는 prefix *} 확장 이 사용 가능합니다 ( &lt;a href=&quot;shell-parameter-expansion&quot;&gt;쉘 매개 변수 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4add03abbcaa883b33fdc2478513c8ec4d7883da" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${!&lt;var&gt;prefix&lt;/var&gt;*}&lt;/code&gt; expansion, which expands to the names of all shell variables whose names begin with &lt;var&gt;prefix&lt;/var&gt;, is available (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">확장 &lt;code&gt;${!&lt;var&gt;prefix&lt;/var&gt;*}&lt;/code&gt; 확장은 이름이 &lt;var&gt;prefix&lt;/var&gt; 로 시작하는 모든 쉘 변수의 이름으로 &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;확장&lt;/a&gt; 됩니다 ( 쉘 매개 변수 확장 참조 ).</target>
        </trans-unit>
        <trans-unit id="3c8113d3f7022b7ff7f0dfc2dd9fadf836bc5824" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${#xx}&lt;/code&gt;, which returns the length of &lt;code&gt;${xx}&lt;/code&gt;, is supported (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">팽창 &lt;code&gt;${#xx}&lt;/code&gt; 의 길이 반환 &lt;code&gt;${xx}&lt;/code&gt; 지원된다 ( &lt;a href=&quot;shell-parameter-expansion&quot;&gt;쉘 매개 변수 확장을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5a18b5072df5f51be72b242a3328e3ffaff7861" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${#xx}&lt;/code&gt;, which returns the length of &lt;code&gt;${xx}&lt;/code&gt;, is supported (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">팽창 &lt;code&gt;${#xx}&lt;/code&gt; 의 길이 반환 &lt;code&gt;${xx}&lt;/code&gt; 지원된다 ( &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;쉘 매개 변수 확장을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="728dd7c8909721f104260a8381910d186ea943b1" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${var/[/]&lt;/code&gt;&lt;var&gt;pattern&lt;/var&gt;&lt;code&gt;[/&lt;/code&gt;&lt;var&gt;replacement&lt;/var&gt;&lt;code&gt;]}&lt;/code&gt;, which matches &lt;var&gt;pattern&lt;/var&gt; and replaces it with &lt;var&gt;replacement&lt;/var&gt; in the value of &lt;code&gt;var&lt;/code&gt;, is available (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; 과 일치 하고 &lt;code&gt;var&lt;/code&gt; 값의 &lt;var&gt;replacement&lt;/var&gt; 바꾸는 확장 &lt;code&gt;${var/[/]&lt;/code&gt; &lt;var&gt;pattern&lt;/var&gt; &lt;code&gt;[/&lt;/code&gt; &lt;var&gt;replacement&lt;/var&gt; &lt;code&gt;]}&lt;/code&gt; 를 사용할 수 있습니다 ( &lt;a href=&quot;shell-parameter-expansion&quot;&gt;쉘 매개 변수 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="96f8b8e01f75d796ba1a1ef795676f19fc71a1e2" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${var/[/]&lt;/code&gt;&lt;var&gt;pattern&lt;/var&gt;&lt;code&gt;[/&lt;/code&gt;&lt;var&gt;replacement&lt;/var&gt;&lt;code&gt;]}&lt;/code&gt;, which matches &lt;var&gt;pattern&lt;/var&gt; and replaces it with &lt;var&gt;replacement&lt;/var&gt; in the value of &lt;code&gt;var&lt;/code&gt;, is available (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; 과 일치 하고 &lt;code&gt;var&lt;/code&gt; 값 으로 &lt;var&gt;replacement&lt;/var&gt; 대체하는 확장 &lt;code&gt;${var/[/]&lt;/code&gt; &lt;var&gt;pattern&lt;/var&gt; &lt;code&gt;[/&lt;/code&gt; &lt;var&gt;replacement&lt;/var&gt; &lt;code&gt;]}&lt;/code&gt; 를 사용할 수 있습니다 ( &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="bf672000392ba68ffd989e341d96aaeced59663d" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${var:&lt;/code&gt;&lt;var&gt;offset&lt;/var&gt;&lt;code&gt;[:&lt;/code&gt;&lt;var&gt;length&lt;/var&gt;&lt;code&gt;]}&lt;/code&gt;, which expands to the substring of &lt;code&gt;var&lt;/code&gt;&amp;rsquo;s value of length &lt;var&gt;length&lt;/var&gt;, beginning at &lt;var&gt;offset&lt;/var&gt;, is present (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">팽창 &lt;code&gt;${var:&lt;/code&gt; &lt;var&gt;offset&lt;/var&gt; &lt;code&gt;[:&lt;/code&gt; &lt;var&gt;length&lt;/var&gt; &lt;code&gt;]}&lt;/code&gt; 의 문자열로 확장 &lt;code&gt;var&lt;/code&gt; 길이의 값의 &lt;var&gt;length&lt;/var&gt; 에서 시작 &lt;var&gt;offset&lt;/var&gt; (참조 존재 &lt;a href=&quot;shell-parameter-expansion&quot;&gt;셸 파라미터 확장&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ff195a9615788b7570de20653f069dfee0752945" translate="yes" xml:space="preserve">
          <source>The expansion &lt;code&gt;${var:&lt;/code&gt;&lt;var&gt;offset&lt;/var&gt;&lt;code&gt;[:&lt;/code&gt;&lt;var&gt;length&lt;/var&gt;&lt;code&gt;]}&lt;/code&gt;, which expands to the substring of &lt;code&gt;var&lt;/code&gt;&amp;rsquo;s value of length &lt;var&gt;length&lt;/var&gt;, beginning at &lt;var&gt;offset&lt;/var&gt;, is present (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">팽창 &lt;code&gt;${var:&lt;/code&gt; &lt;var&gt;offset&lt;/var&gt; &lt;code&gt;[:&lt;/code&gt; &lt;var&gt;length&lt;/var&gt; &lt;code&gt;]}&lt;/code&gt; 의 문자열로 확장 &lt;code&gt;var&lt;/code&gt; 길이의 값의 &lt;var&gt;length&lt;/var&gt; 에서 시작 &lt;var&gt;offset&lt;/var&gt; (참조 존재 &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;셸 파라미터 확장&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c42697b02e8d21ef0011f21334b20db388215922" translate="yes" xml:space="preserve">
          <source>The expansion is a string consisting of flag values representing &lt;var&gt;parameter&lt;/var&gt;&amp;rsquo;s attributes.</source>
          <target state="translated">확장은 &lt;var&gt;parameter&lt;/var&gt; 의 속성을 나타내는 플래그 값으로 구성된 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="afab0e853d9367c4e25802117ca6694fb42e958d" translate="yes" xml:space="preserve">
          <source>The expansion is a string in the form of an assignment statement or &lt;code&gt;declare&lt;/code&gt; command that, if evaluated, will recreate &lt;var&gt;parameter&lt;/var&gt; with its attributes and value.</source>
          <target state="translated">확장은 평가시 양식 및 속성으로 &lt;var&gt;parameter&lt;/var&gt; 를 다시 작성 하는 지정 문 또는 &lt;code&gt;declare&lt;/code&gt; 명령 양식의 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="6d9251a10d923aa6190dece4ce617090523d0f5a" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the result of expanding the value of &lt;var&gt;parameter&lt;/var&gt; as if it were a prompt string (see &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;).</source>
          <target state="translated">확장은 마치 프롬프트 문자열 인 것처럼 &lt;var&gt;parameter&lt;/var&gt; 의 값을 확장 한 결과 인 문자열입니다 ( &lt;a href=&quot;controlling-the-prompt&quot;&gt;프롬프트 제어&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="d6be86a3848bcf91893ed7d3309235866c74397b" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the result of expanding the value of &lt;var&gt;parameter&lt;/var&gt; as if it were a prompt string (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;).</source>
          <target state="translated">확장은 &lt;var&gt;parameter&lt;/var&gt; 값을 프롬프트 문자열 인 것처럼 확장 한 결과 인 문자열입니다 ( &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;프롬프트 제어&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="718e5782e0ebb46109a132b8422a56fd0c862fe8" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the value of &lt;var&gt;parameter&lt;/var&gt; quoted in a format that can be reused as input.</source>
          <target state="translated">확장은 입력으로 재사용 할 수있는 형식으로 인용 된 &lt;var&gt;parameter&lt;/var&gt; 의 값인 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="49011b37d553b27a53f468c55ddd26aef836c36e" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the value of &lt;var&gt;parameter&lt;/var&gt; with backslash escape sequences expanded as with the &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; quoting mechanism.</source>
          <target state="translated">확장은 &lt;code&gt;$'&amp;hellip;'&lt;/code&gt; 인용 메커니즘 과 같이 확장 된 백 슬래시 이스케이프 시퀀스 가있는 &lt;var&gt;parameter&lt;/var&gt; 의 값인 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="12abc97531c07d00e570999de2f9ca88f1dd5481" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the value of &lt;var&gt;parameter&lt;/var&gt; with lowercase alphabetic characters converted to uppercase.</source>
          <target state="translated">확장은 소문자 알파벳 문자가 대문자로 변환 된 &lt;var&gt;parameter&lt;/var&gt; 의 값인 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="d31737cbbc69ecf4c0950542e92b2e60137f85a2" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the value of &lt;var&gt;parameter&lt;/var&gt; with the first character converted to uppercase, if it is alphabetic.</source>
          <target state="translated">확장은 첫 번째 문자가 알파벳 인 경우 대문자로 변환 된 &lt;var&gt;parameter&lt;/var&gt; 값인 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="3beb48d747b53ac53a2f5e11ef213d436f818b94" translate="yes" xml:space="preserve">
          <source>The expansion is a string that is the value of &lt;var&gt;parameter&lt;/var&gt; with uppercase alphabetic characters converted to lowercase.</source>
          <target state="translated">확장은 대문자 알파벳 문자가 소문자로 변환 된 &lt;var&gt;parameter&lt;/var&gt; 값인 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="89719bd636e28ecb9ebeb938ed5ebd39231ef58f" translate="yes" xml:space="preserve">
          <source>The expansion is either a transformation of the value of &lt;var&gt;parameter&lt;/var&gt; or information about &lt;var&gt;parameter&lt;/var&gt; itself, depending on the value of &lt;var&gt;operator&lt;/var&gt;. Each &lt;var&gt;operator&lt;/var&gt; is a single letter:</source>
          <target state="translated">확장은 &lt;var&gt;operator&lt;/var&gt; 값에 따라 &lt;var&gt;parameter&lt;/var&gt; &lt;var&gt;parameter&lt;/var&gt; 값의 변환 이거나 매개 변수 자체 에 대한 정보 입니다. 각 &lt;var&gt;operator&lt;/var&gt; 는 단일 문자입니다.</target>
        </trans-unit>
        <trans-unit id="df069b9637dead763765488d713656a0c16cb85d" translate="yes" xml:space="preserve">
          <source>The expression is false.</source>
          <target state="translated">표현이 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="917a28ba64b958eccd04b25a0853ab60f14fd25a" translate="yes" xml:space="preserve">
          <source>The expression is parsed and evaluated according to precedence using the rules listed above.</source>
          <target state="translated">위에 나열된 규칙을 사용하여 우선 순위에 따라 표현식을 구문 분석하고 평가합니다.</target>
        </trans-unit>
        <trans-unit id="765283e36a1fd1dbb9b7969584d0849fec8d65c2" translate="yes" xml:space="preserve">
          <source>The expression is treated as if it were within double quotes, but a double quote inside the parentheses is not treated specially. All tokens in the expression undergo parameter and variable expansion, command substitution, and quote removal. The result is treated as the arithmetic expression to be evaluated. Arithmetic expansions may be nested.</source>
          <target state="translated">표현식은 큰 따옴표 안에있는 것처럼 취급되지만 괄호 안의 큰 따옴표는 특별히 처리되지 않습니다. 표현식의 모든 토큰에는 매개 변수 및 변수 확장, 명령 대체 및 따옴표 제거가 적용됩니다. 결과는 평가할 산술 식으로 취급됩니다. 산술 확장이 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5648f53f152d5e29fc3812849ec1b8d658e77938" translate="yes" xml:space="preserve">
          <source>The expression is true if, and only if, the argument is not null.</source>
          <target state="translated">인수가 널이 아닌 경우에만 표현식이 참입니다.</target>
        </trans-unit>
        <trans-unit id="04fbc7508d5d457aedc840547581d13fb785d13c" translate="yes" xml:space="preserve">
          <source>The file</source>
          <target state="translated">파일</target>
        </trans-unit>
        <trans-unit id="5a1f23a6e05b417744f95f7b69c2d488fda88b55" translate="yes" xml:space="preserve">
          <source>The filename expansion bracket expression code uses &amp;lsquo;</source>
          <target state="translated">파일 이름 확장 괄호 표현식 코드는 '</target>
        </trans-unit>
        <trans-unit id="aaacebebc80f60660c7ad0d231556561a01ad1ae" translate="yes" xml:space="preserve">
          <source>The filename expansion pattern &lt;var&gt;globpat&lt;/var&gt; is expanded to generate the possible completions.</source>
          <target state="translated">파일 이름 확장 패턴 &lt;var&gt;globpat&lt;/var&gt; 가 확장되어 가능한 완성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5edef30a2af12324677eae56bf83124a0130e459" translate="yes" xml:space="preserve">
          <source>The first argument; that is, word 1.</source>
          <target state="translated">첫 번째 주장; 즉, 단어 1입니다.</target>
        </trans-unit>
        <trans-unit id="9b8dec4b71ba6807789b61a734fa23b8fd78022f" translate="yes" xml:space="preserve">
          <source>The first character of &lt;var&gt;delim&lt;/var&gt; is used to terminate each input line, rather than newline. If &lt;var&gt;delim&lt;/var&gt; is the empty string, &lt;code&gt;mapfile&lt;/code&gt; will terminate a line when it reads a NUL character.</source>
          <target state="translated">&lt;var&gt;delim&lt;/var&gt; 의 첫 문자는 개행 문자가 아닌 각 입력 행을 종료하는 데 사용됩니다. 경우 &lt;var&gt;delim&lt;/var&gt; 빈 문자열이며, &lt;code&gt;mapfile&lt;/code&gt; 그것이 NUL 문자를 읽을 때 줄을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="05fedeb99a9947ee2d22eae659bc2114dd328c91" translate="yes" xml:space="preserve">
          <source>The first character of &lt;var&gt;delim&lt;/var&gt; is used to terminate the input line, rather than newline. If &lt;var&gt;delim&lt;/var&gt; is the empty string, &lt;code&gt;read&lt;/code&gt; will terminate a line when it reads a NUL character.</source>
          <target state="translated">&lt;var&gt;delim&lt;/var&gt; 의 첫 문자는 개행 문자가 아닌 입력 행을 종료하는 데 사용됩니다. 경우 &lt;var&gt;delim&lt;/var&gt; 빈 문자열이며, &lt;code&gt;read&lt;/code&gt; 그것은 NUL 문자를 읽을 때 줄을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="5acdf0f4c865ba4046fb45d377dc9d2cfc30f085" translate="yes" xml:space="preserve">
          <source>The first form lists the active jobs. The options have the following meanings:</source>
          <target state="translated">첫 번째 양식에는 활성 작업이 나열되어 있습니다. 옵션의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="91c4f6aafde2c2f91fbe85ba6046c6dc3f0f3413" translate="yes" xml:space="preserve">
          <source>The first form selects a range of commands from &lt;var&gt;first&lt;/var&gt; to &lt;var&gt;last&lt;/var&gt; from the history list and displays or edits and re-executes them. Both &lt;var&gt;first&lt;/var&gt; and &lt;var&gt;last&lt;/var&gt; may be specified as a string (to locate the most recent command beginning with that string) or as a number (an index into the history list, where a negative number is used as an offset from the current command number).</source>
          <target state="translated">첫 번째 양식 은 히스토리 목록 에서 &lt;var&gt;first&lt;/var&gt; 부터 &lt;var&gt;last&lt;/var&gt; 까지 의 명령 범위를 선택 하고 표시하거나 편집하고 다시 실행합니다. &lt;var&gt;first&lt;/var&gt; 와 &lt;var&gt;last&lt;/var&gt; 모두 문자열 (해당 문자열로 시작하는 가장 최근 명령을 찾기 위해) 또는 숫자 (현재 명령 번호의 오프셋으로 음수가 사용되는 히스토리 목록의 색인)로 지정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c070d0f8863df81437dc35015ed66e6c8a423b39" translate="yes" xml:space="preserve">
          <source>The first form selects a range of commands from &lt;var&gt;first&lt;/var&gt; to &lt;var&gt;last&lt;/var&gt; from the history list and displays or edits and re-executes them. Both &lt;var&gt;first&lt;/var&gt; and &lt;var&gt;last&lt;/var&gt; may be specified as a string (to locate the most recent command beginning with that string) or as a number (an index into the history list, where a negative number is used as an offset from the current command number). If &lt;var&gt;last&lt;/var&gt; is not specified, it is set to &lt;var&gt;first&lt;/var&gt;. If &lt;var&gt;first&lt;/var&gt; is not specified, it is set to the previous command for editing and -16 for listing. If the</source>
          <target state="translated">첫 번째 양식 은 히스토리 목록 에서 &lt;var&gt;first&lt;/var&gt; 부터 &lt;var&gt;last&lt;/var&gt; 까지 의 명령 범위를 선택하고 명령을 표시 또는 편집하고 다시 실행합니다. &lt;var&gt;first&lt;/var&gt; 와 &lt;var&gt;last&lt;/var&gt; 는 모두 문자열 (해당 문자열로 시작하는 가장 최근의 명령을 찾기 위해) 또는 숫자 (히스토리 목록의 색인으로 지정 될 수 있으며 음수는 현재 명령 번호의 오프셋으로 사용됨)로 지정할 수 있습니다. 경우 &lt;var&gt;last&lt;/var&gt; 지정되지 않은, 그것은으로 설정되어 &lt;var&gt;first&lt;/var&gt; . 경우 &lt;var&gt;first&lt;/var&gt; 지정되지 않은, 그것은 목록에 대한 편집 및 -16에 대한 이전 명령으로 설정됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="c8c2e770fa8a575b94054f403e628e1a41d9b2d7" translate="yes" xml:space="preserve">
          <source>The first two matches will succeed, but the second two will not, because in the second two the backslash will be part of the pattern to be matched. In the first two examples, the backslash removes the special meaning from &amp;lsquo;</source>
          <target state="translated">첫 두 경기는 성공하지만 두 번째 경기는 성공하지 못합니다. 두 번째 경기에서는 백 슬래시가 일치시킬 패턴의 일부이기 때문입니다. 처음 두 예제에서 백 슬래시는 '에서 특별한 의미를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="011cfa38a12b8f6e7adadf5e07ab25c46871e0e2" translate="yes" xml:space="preserve">
          <source>The first word matched by the most recent &amp;lsquo;</source>
          <target state="translated">가장 최근 '와 일치하는 첫 단어</target>
        </trans-unit>
        <trans-unit id="653797fdb45594c050bc255e0eccba33ff16f76d" translate="yes" xml:space="preserve">
          <source>The first word of each simple command, if unquoted, is checked to see if it has an alias. If so, that word is replaced by the text of the alias. The characters &amp;lsquo;</source>
          <target state="translated">인용되지 않은 경우 각 간단한 명령의 첫 단어는 별칭이 있는지 확인합니다. 그렇다면 해당 단어가 별칭의 텍스트로 바뀝니다. 문자 '</target>
        </trans-unit>
        <trans-unit id="f05f3215d7b20148c8c62f31469f98550a932678" translate="yes" xml:space="preserve">
          <source>The following &lt;small&gt;GNU&lt;/small&gt; Emacs style escape sequences are available when specifying key sequences:</source>
          <target state="translated">키 시퀀스를 지정할 때 다음 &lt;small&gt;GNU&lt;/small&gt; Emacs 스타일 이스케이프 시퀀스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24ddb0f7f45aa8e7da0193822322df7608a8a1de" translate="yes" xml:space="preserve">
          <source>The following conditions are applied in the order listed.</source>
          <target state="translated">다음과 같은 조건이 나열된 순서대로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="19be275d9d4da579c940b470f6bd0e28acdc4d18" translate="yes" xml:space="preserve">
          <source>The following examples illustrate substring expansion using positional parameters:</source>
          <target state="translated">다음 예제는 위치 매개 변수를 사용한 부분 문자열 확장을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3264a3c2fce96954f61e856f6cb6a203854296df" translate="yes" xml:space="preserve">
          <source>The following function provides completions for the &lt;code&gt;cd&lt;/code&gt; builtin. It is a reasonably good example of what shell functions must do when used for completion. This function uses the word passed as &lt;code&gt;$2&lt;/code&gt; to determine the directory name to complete. You can also use the &lt;code&gt;COMP_WORDS&lt;/code&gt; array variable; the current word is indexed by the &lt;code&gt;COMP_CWORD&lt;/code&gt; variable.</source>
          <target state="translated">다음 기능은 &lt;code&gt;cd&lt;/code&gt; 내장에 대한 완성 기능을 제공합니다 . 완성에 사용될 때 쉘 기능이 수행해야하는 작업에 대한 합리적으로 좋은 예입니다. 이 함수는 &lt;code&gt;$2&lt;/code&gt; 로 전달 된 단어를 사용하여 완료 할 디렉토리 이름을 결정합니다. &lt;code&gt;COMP_WORDS&lt;/code&gt; 배열 변수를 사용할 수도 있습니다 . 현재 단어는 &lt;code&gt;COMP_CWORD&lt;/code&gt; 변수에 의해 색인됩니다 .</target>
        </trans-unit>
        <trans-unit id="1973674b141605d49022a34798172dc015ebae3d" translate="yes" xml:space="preserve">
          <source>The following is a brief description of the shell&amp;rsquo;s operation when it reads and executes a command. Basically, the shell does the following:</source>
          <target state="translated">다음은 명령을 읽고 실행할 때 쉘의 작동에 대한 간략한 설명입니다. 기본적으로 쉘은 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e6e56424b5edaef5f8b22992ca94c1e28fccfbfb" translate="yes" xml:space="preserve">
          <source>The following list is what&amp;rsquo;s changed when &amp;lsquo;&lt;small&gt;POSIX&lt;/small&gt; mode&amp;rsquo; is in effect:</source>
          <target state="translated">다음 목록은 ' &lt;small&gt;POSIX&lt;/small&gt; 모드'가 &lt;small&gt;적용될&lt;/small&gt; 때 변경된 내용입니다 .</target>
        </trans-unit>
        <trans-unit id="eb0c3b0e34e323551707bf5e0633877075c8b092" translate="yes" xml:space="preserve">
          <source>The following options can be used to restrict output to variables with the specified attributes or to give variables attributes:</source>
          <target state="translated">다음 옵션을 사용하여 출력을 지정된 속성을 가진 변수로 제한하거나 변수 속성을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e475c1ef3ba8861c03c9c0474a01c3785e4b8b69" translate="yes" xml:space="preserve">
          <source>The following paragraphs describe the notation used to represent keystrokes.</source>
          <target state="translated">다음 단락은 키 입력을 나타내는 데 사용되는 표기법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cf56dd8b6034696a2255946a3c1711fd0c0fdad5" translate="yes" xml:space="preserve">
          <source>The following script demonstrates this behavior. When executed, the script displays</source>
          <target state="translated">다음 스크립트는이 동작을 보여줍니다. 실행되면 스크립트가 표시됩니다</target>
        </trans-unit>
        <trans-unit id="40fac25ff0d0f9207380149b6506832e8dd34742" translate="yes" xml:space="preserve">
          <source>The following shell builtin commands are inherited from the Bourne Shell. These commands are implemented as specified by the &lt;small&gt;POSIX&lt;/small&gt; standard.</source>
          <target state="translated">다음 쉘 내장 명령은 Bourne 쉘에서 상속됩니다. 이러한 명령은 &lt;small&gt;POSIX&lt;/small&gt; 표준에 지정된대로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="afe6bd1402238d50ca5f09a2bbfeddb70b66dbf0" translate="yes" xml:space="preserve">
          <source>The following table shows how Bash treats unquoted tilde-prefixes:</source>
          <target state="translated">다음 표는 Bash가 인용되지 않은 물결표 접두사를 처리하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="824f8c58a50e27f3e689bc87d7807d7e4b1386ae" translate="yes" xml:space="preserve">
          <source>The format for a coprocess is:</source>
          <target state="translated">코 프로세스의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="008bd0975bad329b905e1c1101a0523476226ee8" translate="yes" xml:space="preserve">
          <source>The format for a pipeline is</source>
          <target state="translated">파이프 라인의 형식은</target>
        </trans-unit>
        <trans-unit id="02b3a48c9b9344fc8d6b2324781aac0f808840e9" translate="yes" xml:space="preserve">
          <source>The format for appending standard output and standard error is:</source>
          <target state="translated">표준 출력 및 표준 오류를 추가하는 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d5ed4051a7f541831398ffdbf9b3784483cda4e" translate="yes" xml:space="preserve">
          <source>The format of here-documents is:</source>
          <target state="translated">여기 문서의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8888845c75667610ca68745649c9bc19049d0a19" translate="yes" xml:space="preserve">
          <source>The full pathname to the shell is kept in this environment variable. If it is not set when the shell starts, Bash assigns to it the full pathname of the current user&amp;rsquo;s login shell.</source>
          <target state="translated">쉘의 전체 경로 이름은이 환경 변수에 유지됩니다. 쉘이 시작될 때 설정되지 않으면 Bash는 현재 사용자 로그인 쉘의 전체 경로 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="75aae69f918b3c92e6508a81e7d55526d6fc838f" translate="yes" xml:space="preserve">
          <source>The full pathname used to execute the current instance of Bash.</source>
          <target state="translated">Bash의 현재 인스턴스를 실행하는 데 사용되는 전체 경로 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1fd1ec0b88c8f770eb95e67f1e63b0edd96eba10" translate="yes" xml:space="preserve">
          <source>The function relies on the &lt;code&gt;complete&lt;/code&gt; and &lt;code&gt;compgen&lt;/code&gt; builtins to do much of the work, adding only the things that the Bash &lt;code&gt;cd&lt;/code&gt; does beyond accepting basic directory names: tilde expansion (see &lt;a href=&quot;tilde-expansion&quot;&gt;Tilde Expansion&lt;/a&gt;), searching directories in &lt;var&gt;$CDPATH&lt;/var&gt;, which is described above (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;), and basic support for the &lt;code&gt;cdable_vars&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;). &lt;code&gt;_comp_cd&lt;/code&gt; modifies the value of &lt;var&gt;IFS&lt;/var&gt; so that it contains only a newline to accommodate file names containing spaces and tabs &amp;ndash; &lt;code&gt;compgen&lt;/code&gt; prints the possible completions it generates one per line.</source>
          <target state="translated">이 기능은에 의존 &lt;code&gt;complete&lt;/code&gt; 하고 &lt;code&gt;compgen&lt;/code&gt; 배쉬 만 일 추가, 대부분의 작업을 수행하는 내장 명령 &lt;code&gt;cd&lt;/code&gt; 기본 디렉토리 이름 받아들이 이상을 수행합니다 틸드 확장 (참조 &lt;a href=&quot;tilde-expansion&quot;&gt;물결표 확장을&lt;/a&gt; 에서 디렉토리를 검색) &lt;var&gt;$CDPATH&lt;/var&gt; 위의 설명, ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ), &lt;code&gt;cdable_vars&lt;/code&gt; 셸 옵션에 대한 기본 지원 ( &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; 참조 ). &lt;code&gt;_comp_cd&lt;/code&gt; 는 &lt;var&gt;IFS&lt;/var&gt; 의 값을 수정하여 공백과 탭을 포함하는 파일 이름을 수용하기 위해 개행 만 포함하도록합니다. &lt;code&gt;compgen&lt;/code&gt; 은 한 줄에 하나씩 생성 할 수있는 가능한 완성을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="e3f587f0d4243df9d4928e7ce1617551920b7c10" translate="yes" xml:space="preserve">
          <source>The function relies on the &lt;code&gt;complete&lt;/code&gt; and &lt;code&gt;compgen&lt;/code&gt; builtins to do much of the work, adding only the things that the Bash &lt;code&gt;cd&lt;/code&gt; does beyond accepting basic directory names: tilde expansion (see &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;), searching directories in &lt;var&gt;$CDPATH&lt;/var&gt;, which is described above (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;), and basic support for the &lt;code&gt;cdable_vars&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;). &lt;code&gt;_comp_cd&lt;/code&gt; modifies the value of &lt;var&gt;IFS&lt;/var&gt; so that it contains only a newline to accommodate file names containing spaces and tabs &amp;ndash; &lt;code&gt;compgen&lt;/code&gt; prints the possible completions it generates one per line.</source>
          <target state="translated">이 기능은에 의존 &lt;code&gt;complete&lt;/code&gt; 하고 &lt;code&gt;compgen&lt;/code&gt; 배쉬 만 일 추가, 대부분의 작업을 수행하는 내장 명령 &lt;code&gt;cd&lt;/code&gt; 기본 디렉토리 이름 받아들이 이상을 수행합니다 틸드 확장 (참조 &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;물결표 확장을&lt;/a&gt; 에서 디렉토리를 검색) &lt;var&gt;$CDPATH&lt;/var&gt; 위의 설명, ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ) 및 &lt;code&gt;cdable_vars&lt;/code&gt; 쉘 옵션에 대한 기본 지원 ( &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ). &lt;code&gt;_comp_cd&lt;/code&gt; 는 공백과 탭을 포함하는 파일 이름을 수용하기 위해 줄 바꾸기 만 포함하도록 &lt;var&gt;IFS&lt;/var&gt; 의 값을 수정합니다. &lt;code&gt;compgen&lt;/code&gt; 은 줄당 하나씩 생성 할 수있는 완료를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="13611c4c0ecb29cf7f14a3ed944a012d009ef2c3" translate="yes" xml:space="preserve">
          <source>The general format for appending output is:</source>
          <target state="translated">출력을 추가하는 일반적인 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ffa6a9428796413da955f4cd2a055baf37da0878" translate="yes" xml:space="preserve">
          <source>The general format for redirecting input is:</source>
          <target state="translated">입력 리디렉션의 일반적인 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c61d67487ed929fce6191ab3f2cecff60115cb2b" translate="yes" xml:space="preserve">
          <source>The general format for redirecting output is:</source>
          <target state="translated">출력 리디렉션의 일반적인 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a47fc4b4c39ae1e37cb5da5d7d7220e4cd957885" translate="yes" xml:space="preserve">
          <source>The general way to pass numeric arguments to a command is to type meta digits before the command. If the first &amp;lsquo;digit&amp;rsquo; typed is a minus sign (&amp;lsquo;</source>
          <target state="translated">숫자 인수를 명령에 전달하는 일반적인 방법은 명령 앞에 메타 숫자를 입력하는 것입니다. 입력 한 첫 번째 '숫자'가 빼기 부호 ( '</target>
        </trans-unit>
        <trans-unit id="b782a125111561adab68b848b80ff8b06af5cdea" translate="yes" xml:space="preserve">
          <source>The hardware and operating system.</source>
          <target state="translated">하드웨어 및 운영 체제</target>
        </trans-unit>
        <trans-unit id="e9ed18f3234de7da5850c7fe21e8086c2e69760a" translate="yes" xml:space="preserve">
          <source>The history number of this command.</source>
          <target state="translated">이 명령의 히스토리 번호.</target>
        </trans-unit>
        <trans-unit id="3fa085d4afcdce86e3f7d9438ed8538eb90513d9" translate="yes" xml:space="preserve">
          <source>The history number, or index in the history list, of the current command. Assignments to &lt;code&gt;HISTCMD&lt;/code&gt; are ignored. If &lt;code&gt;HISTCMD&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">현재 명령의 내역 번호 또는 내역 목록의 색인입니다. &lt;code&gt;HISTCMD&lt;/code&gt; 에 대한 할당 은 무시됩니다. 경우 &lt;code&gt;HISTCMD&lt;/code&gt; 가 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="a65ee602f62d7df3888e4f9382eab7dbcb1dafb7" translate="yes" xml:space="preserve">
          <source>The history number, or index in the history list, of the current command. If &lt;code&gt;HISTCMD&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">현재 명령의 기록 번호 또는 기록 목록의 색인. 경우 &lt;code&gt;HISTCMD&lt;/code&gt; 가 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="13a95f3a85c30ffe4471233d330866926e2d5a35" translate="yes" xml:space="preserve">
          <source>The hostname, up to the first &amp;lsquo;.&amp;rsquo;.</source>
          <target state="translated">첫 번째 '.'까지의 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7c751fdbb38c77c9e0a00c4631f7273f61e129b7" translate="yes" xml:space="preserve">
          <source>The hostname.</source>
          <target state="translated">호스트 이름</target>
        </trans-unit>
        <trans-unit id="ecdf5946a785106998c1a7d05f396df981d58b05" translate="yes" xml:space="preserve">
          <source>The index of the current cursor position relative to the beginning of the current command. If the current cursor position is at the end of the current command, the value of this variable is equal to &lt;code&gt;${#COMP_LINE}&lt;/code&gt;. This variable is available only in shell functions and external commands invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">현재 명령의 시작에 상대적인 현재 커서 위치의 인덱스입니다. 현재 커서 위치가 현재 명령의 끝에있는 경우이 변수의 값은 &lt;code&gt;${#COMP_LINE}&lt;/code&gt; 입니다. 이 변수는 프로그래밍 가능한 완료 기능에 의해 호출 된 쉘 함수 및 외부 명령에서만 사용할 수 있습니다 ( &lt;a href=&quot;programmable-completion&quot;&gt;프로그래밍 가능한 완료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f6db584b78ec2e82b3cad14450e10249038b0f5c" translate="yes" xml:space="preserve">
          <source>The index of the current cursor position relative to the beginning of the current command. If the current cursor position is at the end of the current command, the value of this variable is equal to &lt;code&gt;${#COMP_LINE}&lt;/code&gt;. This variable is available only in shell functions and external commands invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">현재 명령의 시작을 기준으로 현재 커서 위치의 인덱스입니다. 현재 커서 위치가 현재 명령의 끝에있는 경우이 변수의 값은 &lt;code&gt;${#COMP_LINE}&lt;/code&gt; 과 같습니다 . 이 변수는 프로그램 가능 완료 기능에 의해 호출 된 쉘 기능 및 외부 명령에서만 사용 가능합니다 ( &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;프로그램 가능 완료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="473130ec203865ee4c843e203a83ba055936c269" translate="yes" xml:space="preserve">
          <source>The index of the last option argument processed by the &lt;code&gt;getopts&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;getopts&lt;/code&gt; 내장에서 처리 한 마지막 옵션 인수의 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="1f2f60edca49496dae0d28870137a50af5de6b5a" translate="yes" xml:space="preserve">
          <source>The key (or final key of a key sequence) used to invoke the current completion function.</source>
          <target state="translated">현재 완료 기능을 호출하는 데 사용되는 키 (또는 키 시퀀스의 최종 키)입니다.</target>
        </trans-unit>
        <trans-unit id="686f59b319a273c3ab44e2c15cbea72c6654a855" translate="yes" xml:space="preserve">
          <source>The last argument.</source>
          <target state="translated">마지막 논쟁.</target>
        </trans-unit>
        <trans-unit id="f15a79a13792b2daaecff6a8e0207b36bfaaae0e" translate="yes" xml:space="preserve">
          <source>The least you need to know about Readline.</source>
          <target state="translated">최소한 Readline에 대해 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="479bc0213f8e2c9635f1484f22020efc023ed13a" translate="yes" xml:space="preserve">
          <source>The length in characters of the common prefix of a list of possible completions that is displayed without modification. When set to a value greater than zero, common prefixes longer than this value are replaced with an ellipsis when displaying possible completions.</source>
          <target state="translated">수정없이 표시되는 가능한 완료 목록의 공통 접 두부의 문자 길이입니다. 0보다 큰 값으로 설정하면 가능한 값을 표시 할 때이 값보다 긴 공통 접두사가 줄임표로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="17ae5c6e81e59d0e2b66f91f9368d1f88f1eb5c5" translate="yes" xml:space="preserve">
          <source>The length in characters of the expanded value of &lt;var&gt;parameter&lt;/var&gt; is substituted. If &lt;var&gt;parameter&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">확장 된 &lt;var&gt;parameter&lt;/var&gt; 값의 문자 길이 가 대체됩니다. 만약 &lt;var&gt;parameter&lt;/var&gt; '입니다</target>
        </trans-unit>
        <trans-unit id="eb11c557d4404e21d134d7ea32d161578e702837" translate="yes" xml:space="preserve">
          <source>The line number in the script or shell function currently executing.</source>
          <target state="translated">현재 실행중인 스크립트 또는 셸 함수의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="bf0a136e9f69e2c1a2f860e74bd2cd1b72cf5118" translate="yes" xml:space="preserve">
          <source>The line number in the script or shell function currently executing. If &lt;code&gt;LINENO&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">현재 실행중인 스크립트 또는 셸 함수의 줄 번호입니다. &lt;code&gt;LINENO&lt;/code&gt; 가 설정되지 않으면 이후에 재설정 되더라도 특수 속성이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="61cd279aec85f8f1f1b7130c687f985f6fa6efe6" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;shopt&lt;/code&gt; options is:</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; 옵션 목록 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65320a04aac95e184bf875acc72fa1b7f9897605" translate="yes" xml:space="preserve">
          <source>The list of expansions that would have been generated by &lt;code&gt;glob-expand-word&lt;/code&gt; is displayed, and the line is redrawn. If a numeric argument is supplied, a &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;glob-expand-word&lt;/code&gt; 로 생성 된 확장 목록 이 표시되고 선이 다시 그려집니다. 숫자 인수가 제공되면 '</target>
        </trans-unit>
        <trans-unit id="2019a589f4c2bf28aba032c82e704730984150cd" translate="yes" xml:space="preserve">
          <source>The list of words following &lt;code&gt;in&lt;/code&gt; is expanded, generating a list of items. The set of expanded words is printed on the standard error output stream, each preceded by a number. If the &amp;lsquo;</source>
          <target state="translated">다음 &lt;code&gt;in&lt;/code&gt; 나오는 단어 목록 이 확장되어 항목 목록이 생성됩니다. 확장 된 단어 세트는 표준 오류 출력 스트림에 인쇄되며 각각 앞에 숫자가 붙습니다. '</target>
        </trans-unit>
        <trans-unit id="aa39d9bca29b56b174fa694ebf1be4f907420565" translate="yes" xml:space="preserve">
          <source>The major version number (the &lt;var&gt;release&lt;/var&gt;).</source>
          <target state="translated">메이저 버젼 번호 ( &lt;var&gt;release&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="ad629efae3b908eab3fc335f7c6b1514e76455a0" translate="yes" xml:space="preserve">
          <source>The matches will be generated in the same way as if the programmable completion code had generated them directly from a completion specification with the same flags. If &lt;var&gt;word&lt;/var&gt; is specified, only those completions matching &lt;var&gt;word&lt;/var&gt; will be displayed.</source>
          <target state="translated">프로그램 가능 완료 코드가 동일한 플래그를 사용하여 완료 스펙에서 직접 생성 한 것과 동일한 방식으로 일치가 생성됩니다. 경우 &lt;var&gt;word&lt;/var&gt; 지정되고, 일치 만 완료 &lt;var&gt;word&lt;/var&gt; 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7a37f69e87b146cfcdc4f0321e25da8ec8def7a7" translate="yes" xml:space="preserve">
          <source>The maximum amount of cpu time in seconds.</source>
          <target state="translated">최대 CPU 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="bc5acea89c45f6c1a1ee8563532e340fc0af5dff" translate="yes" xml:space="preserve">
          <source>The maximum amount of virtual memory available to the shell, and, on some systems, to its children.</source>
          <target state="translated">셸과 일부 시스템에서 사용 가능한 최대 가상 메모리 양입니다.</target>
        </trans-unit>
        <trans-unit id="ff190943f99549005e82ca78f2a03c75c857df6c" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes in &lt;small&gt;POSIX&lt;/small&gt; message queues.</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 메시지 큐 의 최대 바이트 수입니다 .</target>
        </trans-unit>
        <trans-unit id="e612ee42927bf27d5122f8658f402d131625097b" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes in POSIX message queues.</source>
          <target state="translated">POSIX 메시지 큐의 최대 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="60e2e72c62b84d4520681d3312ecc71d64ac18c1" translate="yes" xml:space="preserve">
          <source>The maximum number of commands to remember on the history list. If the value is 0, commands are not saved in the history list. Numeric values less than zero result in every command being saved on the history list (there is no limit). The shell sets the default value to 500 after reading any startup files.</source>
          <target state="translated">히스토리 목록에서 기억해야 할 최대 명령 수입니다. 값이 0이면 명령이 기록 목록에 저장되지 않습니다. 0보다 작은 숫자 값은 모든 명령이 기록 목록에 저장됩니다 (제한 없음). 셸은 시작 파일을 읽은 후 기본값을 500으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="eccb1f861be87bad932c6e08746f3c0f3321d602" translate="yes" xml:space="preserve">
          <source>The maximum number of file locks.</source>
          <target state="translated">최대 파일 잠금 수</target>
        </trans-unit>
        <trans-unit id="49d2af9b6317e720f9864618927f092d866ec43a" translate="yes" xml:space="preserve">
          <source>The maximum number of kqueues that may be allocated.</source>
          <target state="translated">할당 될 수있는 최대 큐 수입니다.</target>
        </trans-unit>
        <trans-unit id="89e64b1e3b19576f52f300b05c74d81f04a457d5" translate="yes" xml:space="preserve">
          <source>The maximum number of lines contained in the history file. When this variable is assigned a value, the history file is truncated, if necessary, to contain no more than that number of lines by removing the oldest entries. The history file is also truncated to this size after writing it when a shell exits. If the value is 0, the history file is truncated to zero size. Non-numeric values and numeric values less than zero inhibit truncation. The shell sets the default value to the value of &lt;code&gt;HISTSIZE&lt;/code&gt; after reading any startup files.</source>
          <target state="translated">히스토리 파일에 포함 된 최대 행 수입니다. 이 변수에 값이 지정되면, 가장 오래된 항목을 제거하여 히스토리 파일이 필요한 경우 잘려서 해당 행 수를 포함하지 않습니다. 쉘이 종료 될 때 기록 파일도이 크기로 잘립니다. 값이 0이면 히스토리 파일이 0으로 잘립니다. 숫자가 아닌 값과 0보다 작은 숫자 값은 잘림을 금지합니다. 쉘은 시작 파일을 읽은 후 기본값을 &lt;code&gt;HISTSIZE&lt;/code&gt; 값으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="2c3213f5627b1c2c18181db54a40fc7d44020c89" translate="yes" xml:space="preserve">
          <source>The maximum number of open file descriptors (most systems do not allow this value to be set).</source>
          <target state="translated">열린 파일 디스크립터의 최대 수입니다 (대부분의 시스템에서는이 값을 설정할 수 없습니다).</target>
        </trans-unit>
        <trans-unit id="6f3371a6b70457453e618d4aa234c6805eb07e71" translate="yes" xml:space="preserve">
          <source>The maximum number of pending signals.</source>
          <target state="translated">보류중인 최대 신호 수입니다.</target>
        </trans-unit>
        <trans-unit id="cb06ca1269dc6deb79b3d3dd22e2cf6959660122" translate="yes" xml:space="preserve">
          <source>The maximum number of processes available to a single user.</source>
          <target state="translated">단일 사용자가 사용할 수있는 최대 프로세스 수입니다.</target>
        </trans-unit>
        <trans-unit id="021bd63455221bb20e66653acd17297499bc8ef3" translate="yes" xml:space="preserve">
          <source>The maximum number of pseudoterminals.</source>
          <target state="translated">최대 의사 터미널 수입니다.</target>
        </trans-unit>
        <trans-unit id="491d1e5adda3b14899bb2173f42ad3472a20aeea" translate="yes" xml:space="preserve">
          <source>The maximum number of threads.</source>
          <target state="translated">최대 스레드 수입니다.</target>
        </trans-unit>
        <trans-unit id="f8ba3c38db08c2bd096841949b0d0265a592bf92" translate="yes" xml:space="preserve">
          <source>The maximum real-time scheduling priority.</source>
          <target state="translated">최대 실시간 예약 우선 순위.</target>
        </trans-unit>
        <trans-unit id="b64acd82e9522cf0d0f4eee81f4c41b783ba89de" translate="yes" xml:space="preserve">
          <source>The maximum resident set size (many systems do not honor this limit).</source>
          <target state="translated">최대 상주 세트 크기 (많은 시스템은이 한계를 따르지 않습니다).</target>
        </trans-unit>
        <trans-unit id="0da354b3da817bda1f8e533def312ff9c1eb8fac" translate="yes" xml:space="preserve">
          <source>The maximum scheduling priority (&quot;nice&quot;).</source>
          <target state="translated">최대 예약 우선 순위 ( &quot;nice&quot;).</target>
        </trans-unit>
        <trans-unit id="271ec27888b79c99e459f384254c3c0335d491b9" translate="yes" xml:space="preserve">
          <source>The maximum size of a process&amp;rsquo;s data segment.</source>
          <target state="translated">프로세스 데이터 세그먼트의 최대 크기</target>
        </trans-unit>
        <trans-unit id="2e56b4fe4f74677d789c73cbaaeb3c1edfc5fd45" translate="yes" xml:space="preserve">
          <source>The maximum size of core files created.</source>
          <target state="translated">작성된 코어 파일의 최대 크기입니다.</target>
        </trans-unit>
        <trans-unit id="5ce142917de9109aacebbfe4f26e2b49432d0d54" translate="yes" xml:space="preserve">
          <source>The maximum size of files written by the shell and its children.</source>
          <target state="translated">쉘과 그 자식이 쓴 파일의 최대 크기.</target>
        </trans-unit>
        <trans-unit id="be670a1e4867c1cdff3b42c75d7c1065b739dc5f" translate="yes" xml:space="preserve">
          <source>The maximum size that may be locked into memory.</source>
          <target state="translated">메모리에 잠겨있을 수있는 최대 크기입니다.</target>
        </trans-unit>
        <trans-unit id="660d7cf7ea5978addf0941e67e0af36d68983daa" translate="yes" xml:space="preserve">
          <source>The maximum socket buffer size.</source>
          <target state="translated">최대 소켓 버퍼 크기입니다.</target>
        </trans-unit>
        <trans-unit id="16647a836b2f81787f8dcff2ae1a4fe51ee726d8" translate="yes" xml:space="preserve">
          <source>The maximum stack size.</source>
          <target state="translated">최대 스택 크기입니다.</target>
        </trans-unit>
        <trans-unit id="1b92b0b3ca569986d42f9ea629ced5a1f9174259" translate="yes" xml:space="preserve">
          <source>The maximum time a real-time process can run before blocking, in microseconds.</source>
          <target state="translated">실시간 프로세스가 차단되기 전에 실행할 수있는 최대 시간 (마이크로 초)입니다.</target>
        </trans-unit>
        <trans-unit id="8a867609caa0696ab2352f776f8abdb45b60a63e" translate="yes" xml:space="preserve">
          <source>The message printed by the job control code and builtins when a job exits with a non-zero status is &amp;lsquo;Done(status)&amp;rsquo;.</source>
          <target state="translated">작업이 0이 아닌 상태로 종료 될 때 작업 제어 코드 및 내장으로 인쇄되는 메시지는 '완료 (상태)'입니다.</target>
        </trans-unit>
        <trans-unit id="71dc135bf9c56dc46672123474c6b426e1cdd315" translate="yes" xml:space="preserve">
          <source>The message printed by the job control code and builtins when a job is stopped is &amp;lsquo;Stopped(&lt;var&gt;signame&lt;/var&gt;)&amp;rsquo;, where &lt;var&gt;signame&lt;/var&gt; is, for example, &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">작업이 중지 될 때 작업 제어 코드 및 내장으로 인쇄 된 메시지는 'Stopped ( &lt;var&gt;signame&lt;/var&gt; )'입니다. 여기서 &lt;var&gt;signame&lt;/var&gt; 은 &lt;code&gt;SIGTSTP&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0536298fd15b9d1ff52d797ef8c0e31c2062bfa1" translate="yes" xml:space="preserve">
          <source>The minimum set of commands for editing a line.</source>
          <target state="translated">라인을 편집하기위한 최소 명령 세트.</target>
        </trans-unit>
        <trans-unit id="acfc35388c1d2def9ecf3524b014ac228ea40342" translate="yes" xml:space="preserve">
          <source>The minor version number (the &lt;var&gt;version&lt;/var&gt;).</source>
          <target state="translated">부 버전 번호 ( &lt;var&gt;version&lt;/var&gt; ).</target>
        </trans-unit>
        <trans-unit id="6783142c35942058e1c609e274cfc80a41e75089" translate="yes" xml:space="preserve">
          <source>The most common type of command.</source>
          <target state="translated">가장 일반적인 유형의 명령입니다.</target>
        </trans-unit>
        <trans-unit id="138d9f5e08c2a06b2507bb7c4b82f8e1fe3734c8" translate="yes" xml:space="preserve">
          <source>The most common way to obtain additional completion functionality beyond the default actions &lt;code&gt;complete&lt;/code&gt; and &lt;code&gt;compgen&lt;/code&gt; provide is to use a shell function and bind it to a particular command using &lt;code&gt;complete -F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 및 &lt;code&gt;compgen&lt;/code&gt; 이 제공 하는 기본 조치 이외의 추가 완료 기능을 얻는 가장 일반적인 방법 은 쉘 함수를 사용하고 &lt;code&gt;complete -F&lt;/code&gt; 를 사용하여 특정 명령에 바인딩하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="22a2b765809e319a2304221eeb084e8e9cdfc39d" translate="yes" xml:space="preserve">
          <source>The name of the Readline initialization file, overriding the default of</source>
          <target state="translated">Readline 초기화 파일의 이름으로 기본값 인</target>
        </trans-unit>
        <trans-unit id="fb009d0232ac976858b27feed0246f646da7d244" translate="yes" xml:space="preserve">
          <source>The name of the current host.</source>
          <target state="translated">현재 호스트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="66d01fa534ec35d1d9cf4793403b9ee6bc2445fc" translate="yes" xml:space="preserve">
          <source>The name of the file to which the command history is saved. The default value is</source>
          <target state="translated">명령 히스토리가 저장된 파일의 이름입니다. 기본값은</target>
        </trans-unit>
        <trans-unit id="1e58eb13b0f3d9ef8278b27b915cf92fb8fb2e65" translate="yes" xml:space="preserve">
          <source>The name of the shell, the basename of &lt;code&gt;$0&lt;/code&gt; (the portion following the final slash).</source>
          <target state="translated">쉘 이름, 기본 이름 &lt;code&gt;$0&lt;/code&gt; (마지막 슬래시 다음 부분).</target>
        </trans-unit>
        <trans-unit id="ce55092ecb8d0e944542f108143836a76b13fbcc" translate="yes" xml:space="preserve">
          <source>The number of CPU seconds spent in system mode.</source>
          <target state="translated">시스템 모드에서 소요 된 CPU 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="52ab86da1c8fe970c41c94a163626bb9b036dfca" translate="yes" xml:space="preserve">
          <source>The number of CPU seconds spent in user mode.</source>
          <target state="translated">사용자 모드에서 소요 된 CPU 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="7303a5b046e1771b35c3116551ce4956386bee5a" translate="yes" xml:space="preserve">
          <source>The number of jobs currently managed by the shell.</source>
          <target state="translated">현재 셸에서 관리하는 작업 수</target>
        </trans-unit>
        <trans-unit id="dacac9af1a286b5ddce8490f741bd35082259bf3" translate="yes" xml:space="preserve">
          <source>The number of possible completions that determines when the user is asked whether the list of possibilities should be displayed. If the number of possible completions is greater than or equal to this value, Readline will ask whether or not the user wishes to view them; otherwise, they are simply listed. This variable must be set to an integer value greater than or equal to 0. A negative value means Readline should never ask. The default limit is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">사용자에게 가능성 목록을 표시할지 여부를 묻는시기를 결정하는 가능한 완료 횟수입니다. 가능한 완료 횟수가이 값보다 크거나 같으면 Readline은 사용자가 볼 것인지 여부를 묻습니다. 그렇지 않으면 단순히 나열됩니다. 이 변수는 0보다 크거나 같은 정수 값으로 설정해야합니다. 음수 값은 Readline이 묻지 않아야 함을 의미합니다. 기본 제한은 &lt;code&gt;100&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="46880f98e07dea2b5ce8b2895ddbfcd1d50aeb0e" translate="yes" xml:space="preserve">
          <source>The number of possible completions that determines when the user is asked whether the list of possibilities should be displayed. If the number of possible completions is greater than this value, Readline will ask the user whether or not he wishes to view them; otherwise, they are simply listed. This variable must be set to an integer value greater than or equal to 0. A negative value means Readline should never ask. The default limit is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">가능한 목록을 표시해야하는지 여부를 사용자에게 묻는시기를 결정하는 가능한 완료 수. 가능한 완료 횟수가이 값보다 큰 경우 Readline은 사용자에게이를보고 싶은지 여부를 묻습니다. 그렇지 않으면 간단히 나열됩니다. 이 변수는 0 이상의 정수 값으로 설정해야합니다. 음수 값은 Readline이 요청하지 않아야 함을 의미합니다. 기본 제한은 &lt;code&gt;100&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="96b4cb1b0a4beb8cd8b3ce13835f3d64ad580e27" translate="yes" xml:space="preserve">
          <source>The number of screen columns used to display possible matches when performing completion. The value is ignored if it is less than 0 or greater than the terminal screen width. A value of 0 will cause matches to be displayed one per line. The default value is -1.</source>
          <target state="translated">완료를 수행 할 때 가능한 일치 항목을 표시하는 데 사용되는 화면 열 수입니다. 값이 0보다 작거나 터미널 화면 너비보다 크면 값이 무시됩니다. 값이 0이면 일치 항목이 한 줄에 하나씩 표시됩니다. 기본값은 -1입니다.</target>
        </trans-unit>
        <trans-unit id="1d5d823f152e786ac9b5aee994ab43d1a7bb51da" translate="yes" xml:space="preserve">
          <source>The numeric effective user id of the current user. This variable is readonly.</source>
          <target state="translated">현재 사용자의 숫자 유효 사용자 ID입니다. 이 변수는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="0bbb696997781134cb812ad201a40047736b898f" translate="yes" xml:space="preserve">
          <source>The numeric real user id of the current user. This variable is readonly.</source>
          <target state="translated">현재 사용자의 숫자 실제 사용자 ID입니다. 이 변수는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="63d45cc307ddcc325aa8619a61638def1cc4192e" translate="yes" xml:space="preserve">
          <source>The operator</source>
          <target state="translated">운영자</target>
        </trans-unit>
        <trans-unit id="b1a65e11a6dbbf1eca29abd652b467c14efe692f" translate="yes" xml:space="preserve">
          <source>The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.</source>
          <target state="translated">MMC 사이트의 운영자는 MMC가 재 라이센스를받을 자격이있는 경우 2009 년 8 월 1 일 이전에 언제든지 같은 사이트에서 CC-BY-SA에 따라 사이트에 포함 된 MMC를 다시 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75a4caa554203fe5c2eee034e1659633a67b2e13" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;l&lt;/code&gt; specifies a longer format, including minutes, of the form &lt;var&gt;MM&lt;/var&gt;m&lt;var&gt;SS&lt;/var&gt;.&lt;var&gt;FF&lt;/var&gt;s. The value of &lt;var&gt;p&lt;/var&gt; determines whether or not the fraction is included.</source>
          <target state="translated">선택적인 &lt;code&gt;l&lt;/code&gt; 은 분을 포함하여 &lt;var&gt;MM&lt;/var&gt; m &lt;var&gt;SS&lt;/var&gt; 형식의 더 긴 형식을 지정합니다 . &lt;var&gt;FF&lt;/var&gt; 의. &lt;var&gt;p&lt;/var&gt; 의 값은 분수가 포함되는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7be00dbf7d289b2eb0bf4fce81bce6631920f3f4" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;p&lt;/var&gt; is a digit specifying the precision, the number of fractional digits after a decimal point. A value of 0 causes no decimal point or fraction to be output. At most three places after the decimal point may be specified; values of &lt;var&gt;p&lt;/var&gt; greater than 3 are changed to 3. If &lt;var&gt;p&lt;/var&gt; is not specified, the value 3 is used.</source>
          <target state="translated">선택적 &lt;var&gt;p&lt;/var&gt; 는 소수점 이하의 소수 자릿수 인 정밀도를 지정하는 숫자입니다. 값이 0이면 소수점이나 분수가 출력되지 않습니다. 소수점 다음 최대 3 자리를 지정할 수 있습니다. &lt;var&gt;p&lt;/var&gt; 가 3보다 큰 p의 값은 3으로 변경됩니다. &lt;var&gt;p&lt;/var&gt; 를 지정하지 않으면 값 3이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="26f0bd933b7b9d8f84f5462c4298e97f7c296d19" translate="yes" xml:space="preserve">
          <source>The order of expansions is: brace expansion; tilde expansion, parameter and variable expansion, arithmetic expansion, and command substitution (done in a left-to-right fashion); word splitting; and filename expansion.</source>
          <target state="translated">확장 순서는 다음과 같습니다. 괄호 확장; 물결표 확장, 매개 변수 및 변수 확장, 산술 확장 및 명령 대체 (왼쪽에서 오른쪽으로 수행); 단어 분할; 파일 이름 확장.</target>
        </trans-unit>
        <trans-unit id="50d838a94b4bc043bd855b513349ceb7802c1610" translate="yes" xml:space="preserve">
          <source>The output of &amp;lsquo;</source>
          <target state="translated">'의 출력</target>
        </trans-unit>
        <trans-unit id="3a2c151866f3b6bd5ce6fe6924ba9eb6adb99c4c" translate="yes" xml:space="preserve">
          <source>The output of each command in the pipeline is connected via a pipe to the input of the next command. That is, each command reads the previous command&amp;rsquo;s output. This connection is performed before any redirections specified by the command.</source>
          <target state="translated">파이프 라인의 각 명령 출력은 파이프를 통해 다음 명령의 입력에 연결됩니다. 즉, 각 명령은 이전 명령의 출력을 읽습니다. 이 연결은 명령으로 지정된 리디렉션 전에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fa65e023b8ce44d4e8e7824b211da8ffeb1e7b50" translate="yes" xml:space="preserve">
          <source>The parser does not recognize &lt;code&gt;time&lt;/code&gt; as a reserved word if the next token begins with a &amp;lsquo;</source>
          <target state="translated">다음 토큰이 '로 시작하면 구문 분석기가 &lt;code&gt;time&lt;/code&gt; 을 예약어로 인식하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06bac09ccee4d705fea241688c64200c84c5f1ba" translate="yes" xml:space="preserve">
          <source>The patch level.</source>
          <target state="translated">패치 레벨.</target>
        </trans-unit>
        <trans-unit id="268b3789ed5873e9eb986217a5d81cc62801e101" translate="yes" xml:space="preserve">
          <source>The pattern will match if it matches any part of the string. Anchor the pattern using the &amp;lsquo;</source>
          <target state="translated">패턴은 문자열의 일부와 일치하면 일치합니다. '를 사용하여 패턴을 고정</target>
        </trans-unit>
        <trans-unit id="82bcc4b7792df97617e5fd3e84922c7ba5bfbd72" translate="yes" xml:space="preserve">
          <source>The pipe buffer size.</source>
          <target state="translated">파이프 버퍼 크기.</target>
        </trans-unit>
        <trans-unit id="706f778768beb7f9adc0e2167b460eac1b364acd" translate="yes" xml:space="preserve">
          <source>The position of the &lt;var&gt;mark&lt;/var&gt; (saved insertion point) in the Readline line buffer, for use with &amp;lsquo;</source>
          <target state="translated">'와 함께 사용하기위한 Readline 행 버퍼에서 &lt;var&gt;mark&lt;/var&gt; (저장된 삽입 점) 의 위치</target>
        </trans-unit>
        <trans-unit id="878cfb678aa1398c62c2c7bcababcbf34f64ba20" translate="yes" xml:space="preserve">
          <source>The position of the insertion point in the Readline line buffer, for use with &amp;lsquo;</source>
          <target state="translated">'와 함께 사용하기 위해 Readline 라인 버퍼에서 삽입 점의 위치</target>
        </trans-unit>
        <trans-unit id="dd2ced6057af76085ad3486eb77baba77e87710a" translate="yes" xml:space="preserve">
          <source>The previous working directory as set by the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; 내장에서 설정 한 이전 작업 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="f0b9ceb8168c844e484377cfcb903e440bb39715" translate="yes" xml:space="preserve">
          <source>The primary prompt string. The default value is &amp;lsquo;</source>
          <target state="translated">기본 프롬프트 문자열 기본값은 '</target>
        </trans-unit>
        <trans-unit id="0b276991abb43db5060a47d03f39ac7bd61622bc" translate="yes" xml:space="preserve">
          <source>The process &lt;small&gt;ID&lt;/small&gt; of the shell&amp;rsquo;s parent process. This variable is readonly.</source>
          <target state="translated">쉘 상위 프로세스의 프로세스 &lt;small&gt;ID &lt;/small&gt;이 변수는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="2d70ba186fbf6d79117746e61da83c9945506776" translate="yes" xml:space="preserve">
          <source>The process &lt;var&gt;list&lt;/var&gt; is run asynchronously, and its input or output appears as a filename. This filename is passed as an argument to the current command as the result of the expansion. If the &lt;code&gt;&amp;gt;(&lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; form is used, writing to the file will provide input for &lt;var&gt;list&lt;/var&gt;. If the &lt;code&gt;&amp;lt;(&lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; form is used, the file passed as an argument should be read to obtain the output of &lt;var&gt;list&lt;/var&gt;. Note that no space may appear between the &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; and the left parenthesis, otherwise the construct would be interpreted as a redirection. Process substitution is supported on systems that support named pipes (&lt;small&gt;FIFO&lt;/small&gt;s) or the</source>
          <target state="translated">프로세스 &lt;var&gt;list&lt;/var&gt; 은 비동기 적으로 실행되며 입력 또는 출력은 파일 이름으로 나타납니다. 이 파일 이름은 확장 결과로 현재 명령에 인수로 전달됩니다. 경우] &lt;code&gt;&amp;gt;(&lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; 형태가 사용되는 파일에 기록하기위한 입력을 제공 할 &lt;var&gt;list&lt;/var&gt; . 경우] &lt;code&gt;&amp;lt;(&lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; 형태가 사용되는 인수로 전달되는 파일의 출력을 얻기 위해 읽어야 &lt;var&gt;list&lt;/var&gt; . &lt;code&gt;&amp;lt;&lt;/code&gt; 또는 &lt;code&gt;&amp;gt;&lt;/code&gt; 와 왼쪽 괄호 사이에 공백이 없을 수 있습니다 . 그렇지 않으면 구문이 리디렉션으로 해석됩니다. 프로세스 대체는 명명 된 파이프 ( &lt;small&gt;FIFO&lt;/small&gt; )를 지원하는 시스템 또는</target>
        </trans-unit>
        <trans-unit id="a476b7cbb60009ff5f1c82648823f099258ff9c3" translate="yes" xml:space="preserve">
          <source>The process ID of the shell spawned to execute the coprocess is available as the value of the variable &lt;code&gt;NAME&lt;/code&gt;_PID. The &lt;code&gt;wait&lt;/code&gt; builtin command may be used to wait for the coprocess to terminate.</source>
          <target state="translated">코 프로세스를 실행하기 위해 생성 된 쉘의 프로세스 ID는 변수 &lt;code&gt;NAME&lt;/code&gt; _PID 의 값으로 사용 가능합니다 . &lt;code&gt;wait&lt;/code&gt; coprocess 종료하는 명령 내장 기다려야하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11324d9084adeebeaa06d16286cc17b28bc94b0a" translate="yes" xml:space="preserve">
          <source>The process of applying these completion specifications when word completion is attempted is described above (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">단어 완성을 시도 할 때 이러한 완성 사양을 적용하는 프로세스는 위에 설명되어 있습니다 ( &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4ab6c26bdbf0356755b4a57ca47b4bd143ceea98" translate="yes" xml:space="preserve">
          <source>The process of applying these completion specifications when word completion is attempted is described above (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">단어 완성을 시도 할 때 이러한 완성 사양을 적용하는 프로세스는 위에서 설명했습니다 ( &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;프로그램 가능 완료&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4716eb77c0dd878dd02c08b86405054f2b50e5af" translate="yes" xml:space="preserve">
          <source>The purpose of this License is to make a manual, textbook, or other functional and useful document &lt;em&gt;free&lt;/em&gt; in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others.</source>
          <target state="translated">이 라이센스의 목적은 매뉴얼, 교과서 또는 기타 기능적이고 유용한 문서를 &lt;em&gt;자유&lt;/em&gt; 의 의미에서 자유롭게 만드는 것 입니다. 모든 사람이 상업적 또는 비영리적으로 문서를 수정하거나 수정하지 않고 복사 및 재배포 할 수있는 실질적인 자유를 보장합니다. 두 번째로,이 라이센스는 저작자와 출판사가 자신의 저작물에 대한 크레딧을 얻을 수있는 방법을 유지하면서 다른 사람의 수정에 대한 책임은 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8678459bfb33be477b57cf23b48d632857722d94" translate="yes" xml:space="preserve">
          <source>The redirection operator</source>
          <target state="translated">리디렉션 연산자</target>
        </trans-unit>
        <trans-unit id="27f8c2af21d6229f2c8dde6af4005922bca465da" translate="yes" xml:space="preserve">
          <source>The release of Bash, version + patchlevel (e.g., 2.00.0)</source>
          <target state="translated">Bash 릴리스, 버전 + 패치 수준 (예 : 2.00.0)</target>
        </trans-unit>
        <trans-unit id="ec3d24986546d409613e59dd2c1b015c3ef7a627" translate="yes" xml:space="preserve">
          <source>The release status (e.g., &lt;var&gt;beta1&lt;/var&gt;).</source>
          <target state="translated">릴리스 상태 (예 : &lt;var&gt;beta1&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="0c5530f0669af8db7b780b20e4169689af02c4bf" translate="yes" xml:space="preserve">
          <source>The remaining N &lt;var&gt;arguments&lt;/var&gt; are positional parameters and are assigned, in order, to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &amp;hellip; &lt;code&gt;$N&lt;/code&gt;. The special parameter &lt;code&gt;#&lt;/code&gt; is set to N.</source>
          <target state="translated">나머지 N &lt;var&gt;arguments&lt;/var&gt; 는 위치 매개 변수이며 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,&amp;hellip; &lt;code&gt;$N&lt;/code&gt; 순서대로 지정됩니다 . 특수 매개 변수 &lt;code&gt;#&lt;/code&gt; 는 N으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c406d85fc6d1876c9ab35d2f29d5708542f39727" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;time&lt;/code&gt; causes timing statistics to be printed for the pipeline once it finishes. The statistics currently consist of elapsed (wall-clock) time and user and system time consumed by the command&amp;rsquo;s execution. The</source>
          <target state="translated">예약어 &lt;code&gt;time&lt;/code&gt; 은 파이프 라인이 완료되면 타이밍 통계가 인쇄되도록합니다. 통계는 현재 경과 된 (벽 시계) 시간과 명령 실행에 소비 된 사용자 및 시스템 시간으로 구성됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="f70377bc4bcdfe0357b29757b411a170e51fb3c0" translate="yes" xml:space="preserve">
          <source>The restricted shell mode is only one component of a useful restricted environment. It should be accompanied by setting &lt;code&gt;PATH&lt;/code&gt; to a value that allows execution of only a few verified commands (commands that allow shell escapes are particularly vulnerable), leaving the user in a non-writable directory other than his home directory after login, not allowing the restricted shell to execute shell scripts, and cleaning the environment of variables that cause some commands to modify their behavior (e.g., &lt;code&gt;VISUAL&lt;/code&gt; or &lt;code&gt;PAGER&lt;/code&gt;).</source>
          <target state="translated">제한된 쉘 모드는 유용한 제한된 환경의 구성 요소 중 하나 일뿐입니다. &lt;code&gt;PATH&lt;/code&gt; 는 몇 가지 확인 된 명령 (쉘 이스케이프를 허용하는 명령이 특히 취약) 만 실행할 수있는 값 으로 설정해야하며 , 로그인 후 홈 디렉토리 이외의 쓰기 불가능한 디렉토리에 사용자를 남겨두고 제한된 쉘은 쉘 스크립트를 실행하고 일부 명령이 동작을 수정하게하는 변수 환경을 정리합니다 (예 : &lt;code&gt;VISUAL&lt;/code&gt; 또는 &lt;code&gt;PAGER&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5cee0f144ed659e31e73a5f3d6bebe29b873b0ce" translate="yes" xml:space="preserve">
          <source>The result of the expansion is subject to word splitting and filename expansion as described below.</source>
          <target state="translated">확장 결과는 아래 설명 된대로 단어 분할 및 파일 이름 확장의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="f5788bd5b869c4f2f3b0a6a16acf04e0ef52e086" translate="yes" xml:space="preserve">
          <source>The result of the expansion is subject to word splitting and pathname expansion as described below.</source>
          <target state="translated">확장 결과는 아래 설명과 같이 단어 분할 및 경로 이름 확장의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="3c5ea1637b561e444d01f9bd61fad77c0ba233c7" translate="yes" xml:space="preserve">
          <source>The return status (see &lt;a href=&quot;exit-status&quot;&gt;Exit Status&lt;/a&gt;) of a simple command is its exit status as provided by the &lt;small&gt;POSIX&lt;/small&gt; 1003.1 &lt;code&gt;waitpid&lt;/code&gt; function, or 128+&lt;var&gt;n&lt;/var&gt; if the command was terminated by signal &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">리턴 상태 (참조 &lt;a href=&quot;exit-status&quot;&gt;종료 상태를&lt;/a&gt; 간단한 명령)은에 의해 제공되는 종료 상태이다 &lt;small&gt;POSIX&lt;/small&gt; 1003.1 &lt;code&gt;waitpid&lt;/code&gt; 를 함수 또는 128+ &lt;var&gt;n&lt;/var&gt; 명령이 신호에 의해 중단 된 경우 &lt;var&gt;n&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4afc22fd875e16ab7009fb8b2656518be216471f" translate="yes" xml:space="preserve">
          <source>The return status (see &lt;a href=&quot;exit-status#Exit-Status&quot;&gt;Exit Status&lt;/a&gt;) of a simple command is its exit status as provided by the &lt;small&gt;POSIX&lt;/small&gt; 1003.1 &lt;code&gt;waitpid&lt;/code&gt; function, or 128+&lt;var&gt;n&lt;/var&gt; if the command was terminated by signal &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">단순 명령 의 리턴 상태 ( &lt;a href=&quot;exit-status#Exit-Status&quot;&gt;종료 상태&lt;/a&gt; 참조 )는 &lt;small&gt;POSIX&lt;/small&gt; 1003.1 &lt;code&gt;waitpid&lt;/code&gt; 함수에서 제공 한 종료 상태 이거나 명령이 신호 &lt;var&gt;n&lt;/var&gt; 으로 종료 된 경우 128 &lt;var&gt;n&lt;/var&gt; n 입니다.</target>
        </trans-unit>
        <trans-unit id="d4c16feae2ec17c1b766055b73ef372158cc5577" translate="yes" xml:space="preserve">
          <source>The return status is always zero unless an invalid option is supplied.</source>
          <target state="translated">유효하지 않은 옵션을 제공하지 않으면 반환 상태는 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="edf5b2fc810067ae8bd5d1a116f1b988711b4726" translate="yes" xml:space="preserve">
          <source>The return status is the exit status of the last command that executes. If there are no items in the expansion of &lt;var&gt;words&lt;/var&gt;, no commands are executed, and the return status is zero.</source>
          <target state="translated">리턴 상태는 마지막으로 실행 된 명령의 종료 상태입니다. &lt;var&gt;words&lt;/var&gt; 확장에 항목이 없으면 명령이 실행되지 않으며 반환 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="139ea59902aacb9b462b237611bb180dededca16" translate="yes" xml:space="preserve">
          <source>The return status is zero if all of the &lt;var&gt;names&lt;/var&gt; are found, non-zero if any are not found.</source>
          <target state="translated">모든 &lt;var&gt;names&lt;/var&gt; 이 발견 되면 리턴 상태는 0이고, 이름 이 없으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3e2e10afbf0eb8cd947b719e65752d296e25acdf" translate="yes" xml:space="preserve">
          <source>The return status is zero if no &lt;var&gt;pattern&lt;/var&gt; is matched. Otherwise, the return status is the exit status of the &lt;var&gt;command-list&lt;/var&gt; executed.</source>
          <target state="translated">일치하는 &lt;var&gt;pattern&lt;/var&gt; 이 없으면 리턴 상태는 0 입니다. 그렇지 않으면, 리턴 상태는 실행 된 &lt;var&gt;command-list&lt;/var&gt; 의 종료 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="fd37bef165d1c2b13e0b9c03f77edc8dca883363" translate="yes" xml:space="preserve">
          <source>The return status is zero if the directory is successfully changed, non-zero otherwise.</source>
          <target state="translated">디렉토리가 성공적으로 변경되면 리턴 상태는 0이고, 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="980ed86ff499fbca6bf880e390688e559e87fee4" translate="yes" xml:space="preserve">
          <source>The return status is zero unless a &lt;var&gt;name&lt;/var&gt; is not a shell builtin or there is an error loading a new builtin from a shared object.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; 이 쉘 내장이 아니거나 공유 객체에서 새 내장을로드하는 동안 오류가 없으면 반환 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="d7361147afb0905e0d597ba8f358f5fa3e4789f7" translate="yes" xml:space="preserve">
          <source>The return status is zero unless a &lt;var&gt;sigspec&lt;/var&gt; does not specify a valid signal.</source>
          <target state="translated">&lt;var&gt;sigspec&lt;/var&gt; 이 유효한 신호를 지정하지 않으면 반환 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="b9520c176239454e40ab970a76500acf0a2a9708" translate="yes" xml:space="preserve">
          <source>The return status is zero unless an invalid option is encountered, an attempt is made to define a function using &amp;lsquo;</source>
          <target state="translated">유효하지 않은 옵션이 발견되지 않으면 리턴 상태는 0입니다. '를 사용하여 함수를 정의하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="d977247bb00ecbeefc2342eb94e26ab0b25dfde9" translate="yes" xml:space="preserve">
          <source>The return status is zero unless an invalid option is supplied or an error occurs.</source>
          <target state="translated">유효하지 않은 옵션이 제공되거나 오류가 발생하지 않으면 리턴 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="2d84c34844e5928e34eb45fc62a6fa465da1eed8" translate="yes" xml:space="preserve">
          <source>The return status is zero unless an invalid option is supplied, one of the names is not a valid shell variable name, or</source>
          <target state="translated">유효하지 않은 옵션이 제공되지 않거나 이름 중 하나가 유효한 쉘 변수 이름이 아닌 경우 리턴 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="cb9bb3db604d40c52d6a0ed4be85c8d7e3588d80" translate="yes" xml:space="preserve">
          <source>The return status is zero unless an invalid option or argument is supplied, or an error occurs while setting a new limit.</source>
          <target state="translated">유효하지 않은 옵션이나 인수가 제공되지 않거나 새 한계를 설정하는 동안 오류가 발생하지 않으면 리턴 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="0f2412a1102b7277323c4cc092cbf40530c3672f" translate="yes" xml:space="preserve">
          <source>The return status is zero unless no command matches &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;pattern&lt;/var&gt; 과 일치하는 명령이 없으면 리턴 상태는 0 입니다 .</target>
        </trans-unit>
        <trans-unit id="f3c05430accfd44314e843b73808550a84df168e" translate="yes" xml:space="preserve">
          <source>The return status of &lt;small&gt;AND&lt;/small&gt; and &lt;small&gt;OR&lt;/small&gt; lists is the exit status of the last command executed in the list.</source>
          <target state="translated">&lt;small&gt;AND&lt;/small&gt; 및 &lt;small&gt;OR&lt;/small&gt; 리스트 의 리턴 상태는 리스트에서 마지막으로 실행 된 명령의 종료 상태입니다.</target>
        </trans-unit>
        <trans-unit id="444c7ff858fdf7094cf753409e8f19e0840ab92b" translate="yes" xml:space="preserve">
          <source>The return status when listing options is zero if all &lt;var&gt;optnames&lt;/var&gt; are enabled, non-zero otherwise. When setting or unsetting options, the return status is zero unless an &lt;var&gt;optname&lt;/var&gt; is not a valid shell option.</source>
          <target state="translated">모든 &lt;var&gt;optnames&lt;/var&gt; 이 사용 가능한 경우 옵션을 나열 할 때 리턴 상태는 0이고 , 그렇지 않으면 0이 아닙니다. 옵션을 설정 또는 설정 해제 할 때 &lt;var&gt;optname&lt;/var&gt; 이 유효한 쉘 옵션 이 아닌 경우 리턴 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="29c786e126af22d614c9083278320ac7fc5eefe1" translate="yes" xml:space="preserve">
          <source>The return value is 0 unless the shell is not executing a subroutine call or &lt;var&gt;expr&lt;/var&gt; does not correspond to a valid position in the call stack.</source>
          <target state="translated">쉘이 서브 루틴 호출을 실행 하지 않거나 &lt;var&gt;expr&lt;/var&gt; 이 호출 스택의 유효한 위치에 해당하지 않는 한 리턴 값은 0 입니다.</target>
        </trans-unit>
        <trans-unit id="d86714d75d70f053c6711f08829d0c808f136b26" translate="yes" xml:space="preserve">
          <source>The return value is true unless an invalid option is supplied, an attempt is made to modify the options for a &lt;var&gt;name&lt;/var&gt; for which no completion specification exists, or an output error occurs.</source>
          <target state="translated">유효하지 않은 옵션이 제공 되지 않거나 완료 스펙이 존재하지 않는 &lt;var&gt;name&lt;/var&gt; 의 옵션을 수정하려고 시도 하거나 출력 오류가 발생 하지 않으면 리턴 값은 true 입니다.</target>
        </trans-unit>
        <trans-unit id="87c85924056c36528995c9b7ba4ed62a82614420" translate="yes" xml:space="preserve">
          <source>The return value is true unless an invalid option is supplied, an option other than</source>
          <target state="translated">유효하지 않은 옵션이 제공되지 않으면 리턴 값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="15a822235281678e7fa50e449a6c26717df07938" translate="yes" xml:space="preserve">
          <source>The return value is true unless an invalid option is supplied, or no matches were generated.</source>
          <target state="translated">유효하지 않은 옵션이 제공되거나 일치 항목이 생성되지 않으면 리턴 값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="fc11c48cfe742a595ccb253defc457d792dc1ec9" translate="yes" xml:space="preserve">
          <source>The rules concerning the definition and use of aliases are somewhat confusing. Bash always reads at least one complete line of input, and all lines that make up a compound command, before executing any of the commands on that line or the compound command. Aliases are expanded when a command is read, not when it is executed. Therefore, an alias definition appearing on the same line as another command does not take effect until the next line of input is read. The commands following the alias definition on that line are not affected by the new alias. This behavior is also an issue when functions are executed. Aliases are expanded when a function definition is read, not when the function is executed, because a function definition is itself a command. As a consequence, aliases defined in a function are not available until after that function is executed. To be safe, always put alias definitions on a separate line, and do not use &lt;code&gt;alias&lt;/code&gt; in compound commands.</source>
          <target state="translated">별명 정의 및 사용에 관한 규칙은 다소 혼동됩니다. Bash는 항상 하나 이상의 완전한 입력 행과 복합 명령을 구성하는 모든 행을 읽습니다. 해당 행의 명령 또는 복합 명령을 실행하기 전에. 명령이 실행될 때가 아니라 명령을 읽을 때 별칭이 확장됩니다. 따라서 다른 명령과 동일한 행에 나타나는 별명 정의는 다음 입력 행을 읽을 때까지 적용되지 않습니다. 해당 행에서 별명 정의 뒤에 나오는 명령은 새 별명의 영향을받지 않습니다. 이 동작은 기능이 실행될 때도 문제가됩니다. 함수 정의 자체가 명령이기 때문에 함수가 실행될 때가 아니라 함수 정의를 읽을 때 별칭이 확장됩니다. 결과로서,함수에 정의 된 별칭은 해당 함수가 실행될 때까지 사용할 수 없습니다. 안전을 위해 항상 별칭 정의를 별도의 줄에 배치하고 사용하지 마십시오 &lt;code&gt;alias&lt;/code&gt; 복합 명령의 별명 .</target>
        </trans-unit>
        <trans-unit id="7c69f91a4b82b2298fab3319d89e9bff24ee39ea" translate="yes" xml:space="preserve">
          <source>The secondary prompt string. The default value is &amp;lsquo;</source>
          <target state="translated">보조 프롬프트 문자열 기본값은 '</target>
        </trans-unit>
        <trans-unit id="f3e658ab4121249a4adecc41b2997df149afa25c" translate="yes" xml:space="preserve">
          <source>The set of characters that the Readline library treats as word separators when performing word completion. If &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">Readline 라이브러리가 단어 완성을 수행 할 때 단어 구분 기호로 취급하는 문자 세트입니다. 경우 &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; 가 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="a9227631f6e16c78b2307840c22265ee938df1e2" translate="yes" xml:space="preserve">
          <source>The shell &quot;building blocks&quot;.</source>
          <target state="translated">쉘 &quot;빌딩 블록&quot;.</target>
        </trans-unit>
        <trans-unit id="e56b5b448656c7590aab2b5146242bdd0df94454" translate="yes" xml:space="preserve">
          <source>The shell allows arithmetic expressions to be evaluated, as one of the shell expansions or by using the &lt;code&gt;((&lt;/code&gt; compound command, the &lt;code&gt;let&lt;/code&gt; builtin, or the</source>
          <target state="translated">쉘은 쉘 확장 중 하나로서 또는 &lt;code&gt;((&lt;/code&gt; 복합 명령, &lt;code&gt;let&lt;/code&gt; 내장 또는</target>
        </trans-unit>
        <trans-unit id="15e2ebf76c24ae645749f953f264479cf1d7c200" translate="yes" xml:space="preserve">
          <source>The shell allows control of the various characters used by the history expansion mechanism with the &lt;code&gt;histchars&lt;/code&gt; variable, as explained above (see &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;). The shell uses the history comment character to mark history timestamps when writing the history file.</source>
          <target state="translated">쉘은 위에서 설명한 것처럼 &lt;code&gt;histchars&lt;/code&gt; 변수를 사용하여 히스토리 확장 메커니즘에서 사용하는 다양한 문자를 제어 할 수 있습니다 ( &lt;a href=&quot;bash-variables&quot;&gt;Bash 변수&lt;/a&gt; 참조 ). 쉘은 히스토리 주석 문자를 사용하여 히스토리 파일을 쓸 때 히스토리 타임 스탬프를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="de6f5329a04c76e3eb0db5c92b0698630793acca" translate="yes" xml:space="preserve">
          <source>The shell allows control of the various characters used by the history expansion mechanism with the &lt;code&gt;histchars&lt;/code&gt; variable, as explained above (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;). The shell uses the history comment character to mark history timestamps when writing the history file.</source>
          <target state="translated">쉘은 위에서 설명한대로 &lt;code&gt;histchars&lt;/code&gt; 변수를 사용하여 히스토리 확장 메커니즘에서 사용하는 다양한 문자를 제어 할 수 있습니다 ( &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash 변수&lt;/a&gt; 참조 ). 쉘은 히스토리 주석 문자를 사용하여 히스토리 파일을 작성할 때 히스토리 시간 소인을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9f573752388525b9ff3b106fa9caec0ef4669473" translate="yes" xml:space="preserve">
          <source>The shell allows control over which commands are saved on the history list. The &lt;code&gt;HISTCONTROL&lt;/code&gt; and &lt;code&gt;HISTIGNORE&lt;/code&gt; variables may be set to cause the shell to save only a subset of the commands entered. The &lt;code&gt;cmdhist&lt;/code&gt; shell option, if enabled, causes the shell to attempt to save each line of a multi-line command in the same history entry, adding semicolons where necessary to preserve syntactic correctness. The &lt;code&gt;lithist&lt;/code&gt; shell option causes the shell to save the command with embedded newlines instead of semicolons. The &lt;code&gt;shopt&lt;/code&gt; builtin is used to set these options. See &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;, for a description of &lt;code&gt;shopt&lt;/code&gt;.</source>
          <target state="translated">쉘은 히스토리 목록에 저장되는 명령을 제어 할 수 있습니다. &lt;code&gt;HISTCONTROL&lt;/code&gt; 및 &lt;code&gt;HISTIGNORE&lt;/code&gt; 변수는 입력 된 명령의 하위 집합을 저장 쉘의 원인이 설정 될 수있다. &lt;code&gt;cmdhist&lt;/code&gt; 의 쉘 옵션이 활성화 된 경우, 구문 정확성을 유지하기 위해 필요한 세미콜론을 추가, 같은 역사 항목에 여러 줄의 명령의 각 라인을 저장하려고하는 쉘됩니다. &lt;code&gt;lithist&lt;/code&gt; 의 쉘 옵션이 포함 된 줄 바꿈 대신 세미콜론으로 명령을 저장하려면 쉘을 발생합니다. &lt;code&gt;shopt&lt;/code&gt; 내부의 내장은 이러한 옵션을 설정하는 데 사용됩니다. &lt;code&gt;shopt&lt;/code&gt; 에 대한 설명은 &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0362e466df6eb864c38d9b0e66a2024579878737" translate="yes" xml:space="preserve">
          <source>The shell allows control over which commands are saved on the history list. The &lt;code&gt;HISTCONTROL&lt;/code&gt; and &lt;code&gt;HISTIGNORE&lt;/code&gt; variables may be set to cause the shell to save only a subset of the commands entered. The &lt;code&gt;cmdhist&lt;/code&gt; shell option, if enabled, causes the shell to attempt to save each line of a multi-line command in the same history entry, adding semicolons where necessary to preserve syntactic correctness. The &lt;code&gt;lithist&lt;/code&gt; shell option causes the shell to save the command with embedded newlines instead of semicolons. The &lt;code&gt;shopt&lt;/code&gt; builtin is used to set these options. See &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;, for a description of &lt;code&gt;shopt&lt;/code&gt;.</source>
          <target state="translated">셸을 사용하면 기록 목록에 저장할 명령을 제어 할 수 있습니다. &lt;code&gt;HISTCONTROL&lt;/code&gt; 및 &lt;code&gt;HISTIGNORE&lt;/code&gt; 변수는 입력 된 명령의 하위 집합을 저장 쉘의 원인이 설정 될 수있다. &lt;code&gt;cmdhist&lt;/code&gt; 의 쉘 옵션이 활성화 된 경우, 구문 정확성을 유지하기 위해 필요한 세미콜론을 추가, 같은 역사 항목에 여러 줄의 명령의 각 라인을 저장하려고하는 쉘됩니다. &lt;code&gt;lithist&lt;/code&gt; 의 쉘 옵션이 포함 된 줄 바꿈 대신 세미콜론으로 명령을 저장하려면 쉘을 발생합니다. &lt;code&gt;shopt&lt;/code&gt; 내부의 내장은 이러한 옵션을 설정하는 데 사용됩니다. &lt;code&gt;shopt&lt;/code&gt; 에 대한 설명은 &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5e2d6d8d979b9089bc7dbd323e0fcd7060ebed5" translate="yes" xml:space="preserve">
          <source>The shell associates a &lt;var&gt;job&lt;/var&gt; with each pipeline. It keeps a table of currently executing jobs, which may be listed with the &lt;code&gt;jobs&lt;/code&gt; command. When Bash starts a job asynchronously, it prints a line that looks like:</source>
          <target state="translated">셸은 &lt;var&gt;job&lt;/var&gt; 을 각 파이프 라인과 연결합니다 . 현재 실행중인 작업 테이블을 유지하며 &lt;code&gt;jobs&lt;/code&gt; 명령 과 함께 나열 될 수 있습니다 . Bash는 비동기 적으로 작업을 시작하면 다음과 같은 행을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="092a3ca63833bce47d2884049427553d7fea6bcd" translate="yes" xml:space="preserve">
          <source>The shell exits by default upon receipt of a &lt;code&gt;SIGHUP&lt;/code&gt;. Before exiting, an interactive shell resends the &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs, running or stopped. Stopped jobs are sent &lt;code&gt;SIGCONT&lt;/code&gt; to ensure that they receive the &lt;code&gt;SIGHUP&lt;/code&gt;. To prevent the shell from sending the &lt;code&gt;SIGHUP&lt;/code&gt; signal to a particular job, it should be removed from the jobs table with the &lt;code&gt;disown&lt;/code&gt; builtin (see &lt;a href=&quot;job-control-builtins&quot;&gt;Job Control Builtins&lt;/a&gt;) or marked to not receive &lt;code&gt;SIGHUP&lt;/code&gt; using &lt;code&gt;disown -h&lt;/code&gt;.</source>
          <target state="translated">쉘은 기본적으로 &lt;code&gt;SIGHUP&lt;/code&gt; 수신시 종료됩니다 . 종료하기 전에 대화식 쉘은 실행 중이거나 중지 된 모든 작업에 &lt;code&gt;SIGHUP&lt;/code&gt; 를 다시 보냅니다 . 중지 된 작업은 &lt;code&gt;SIGHUP&lt;/code&gt; 를 수신하도록 &lt;code&gt;SIGCONT&lt;/code&gt; 를 보냅니다 . 쉘 이 특정 작업에 &lt;code&gt;SIGHUP&lt;/code&gt; 신호를 보내는 것을 방지하려면 &lt;code&gt;disown&lt;/code&gt; 내장 ( &lt;a href=&quot;job-control-builtins&quot;&gt;작업 제어 내장&lt;/a&gt; 참조) 을 사용하여 작업 테이블에서 제거 하거나 &lt;code&gt;disown -h&lt;/code&gt; 를 사용하여 &lt;code&gt;SIGHUP&lt;/code&gt; 를 수신하지 않도록 표시해야 합니다.</target>
        </trans-unit>
        <trans-unit id="9cf7a6dea08a855c9acf206522d804a0254a3f0c" translate="yes" xml:space="preserve">
          <source>The shell exits by default upon receipt of a &lt;code&gt;SIGHUP&lt;/code&gt;. Before exiting, an interactive shell resends the &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs, running or stopped. Stopped jobs are sent &lt;code&gt;SIGCONT&lt;/code&gt; to ensure that they receive the &lt;code&gt;SIGHUP&lt;/code&gt;. To prevent the shell from sending the &lt;code&gt;SIGHUP&lt;/code&gt; signal to a particular job, it should be removed from the jobs table with the &lt;code&gt;disown&lt;/code&gt; builtin (see &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;Job Control Builtins&lt;/a&gt;) or marked to not receive &lt;code&gt;SIGHUP&lt;/code&gt; using &lt;code&gt;disown -h&lt;/code&gt;.</source>
          <target state="translated">쉘은 &lt;code&gt;SIGHUP&lt;/code&gt; 을 받으면 기본적으로 종료됩니다 . 종료하기 전에 대화식 쉘은 &lt;code&gt;SIGHUP&lt;/code&gt; 을 실행 또는 중지 된 모든 작업으로 다시 보냅니다 . 중지 된 작업은 &lt;code&gt;SIGHUP&lt;/code&gt; 을 수신 할 수 있도록 &lt;code&gt;SIGCONT&lt;/code&gt; 로 전송 됩니다 . 쉘이 &lt;code&gt;SIGHUP&lt;/code&gt; 신호를 특정 작업으로 전송하지 못하게하려면 &lt;code&gt;disown&lt;/code&gt; 내장 ( &lt;a href=&quot;job-control-builtins#Job-Control-Builtins&quot;&gt;작업 제어 내장&lt;/a&gt; 참조)이 있는 작업 테이블에서이를 제거 하거나 &lt;code&gt;disown -h&lt;/code&gt; 를 사용하여 &lt;code&gt;SIGHUP&lt;/code&gt; 을 수신하지 않도록 표시해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b7d46b45d803e837a756f85b6e5ec3e4838f69a0" translate="yes" xml:space="preserve">
          <source>The shell function &lt;var&gt;function&lt;/var&gt; is executed in the current shell environment. When it is executed, $1 is the name of the command whose arguments are being completed, $2 is the word being completed, and $3 is the word preceding the word being completed, as described above (see &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt;). When it finishes, the possible completions are retrieved from the value of the &lt;code&gt;COMPREPLY&lt;/code&gt; array variable.</source>
          <target state="translated">쉘 기능 &lt;var&gt;function&lt;/var&gt; 은 현재 쉘 환경에서 실행됩니다. 실행될 때, $ 1은 인수가 완료되는 명령의 이름이고, $ 2는 완료되는 단어이며, $ 3은 위에서 설명한대로 완료되는 단어 앞의 단어입니다 ( &lt;a href=&quot;programmable-completion&quot;&gt;Programmable Completion&lt;/a&gt; 참조 ). 완료되면 &lt;code&gt;COMPREPLY&lt;/code&gt; 배열 변수 의 값에서 가능한 완료가 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="6da304625649da7647ca4753c774c91abbcbb1aa" translate="yes" xml:space="preserve">
          <source>The shell function &lt;var&gt;function&lt;/var&gt; is executed in the current shell environment. When it is executed, $1 is the name of the command whose arguments are being completed, $2 is the word being completed, and $3 is the word preceding the word being completed, as described above (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;). When it finishes, the possible completions are retrieved from the value of the &lt;code&gt;COMPREPLY&lt;/code&gt; array variable.</source>
          <target state="translated">쉘 기능 &lt;var&gt;function&lt;/var&gt; 은 현재 쉘 환경에서 실행됩니다. 실행될 때 $ 1은 인수가 완료되는 명령의 이름, $ 2는 완료되는 단어, $ 3은 위에서 설명한대로 완료되는 단어 앞에 오는 단어입니다 ( &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;프로그램 완료&lt;/a&gt; 참조 ). 완료되면 &lt;code&gt;COMPREPLY&lt;/code&gt; 배열 변수 의 값에서 가능한 완료를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="9265d28258a9f15465eb26e5f672576598c224b2" translate="yes" xml:space="preserve">
          <source>The shell has an &lt;var&gt;execution environment&lt;/var&gt;, which consists of the following:</source>
          <target state="translated">셸에는 다음과 같이 구성된 &lt;var&gt;execution environment&lt;/var&gt; 이 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
