<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="bash">
    <body>
      <group id="bash">
        <trans-unit id="9265d28258a9f15465eb26e5f672576598c224b2" translate="yes" xml:space="preserve">
          <source>The shell has an &lt;var&gt;execution environment&lt;/var&gt;, which consists of the following:</source>
          <target state="translated">셸에는 다음과 같이 구성된 &lt;var&gt;execution environment&lt;/var&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc18292b655a353a6d0db19b5f5c669e2707cbcc" translate="yes" xml:space="preserve">
          <source>The shell learns immediately whenever a job changes state. Normally, Bash waits until it is about to print a prompt before reporting changes in a job&amp;rsquo;s status so as to not interrupt any other output. If the</source>
          <target state="translated">쉘은 작업 상태가 변경 될 때마다 즉시 학습합니다. 일반적으로 Bash는 다른 출력을 방해하지 않도록 작업 상태 변경을보고하기 전에 프롬프트를 인쇄 할 때까지 기다립니다. 만약</target>
        </trans-unit>
        <trans-unit id="b848180ca0000ad79ae324e1c3a900dedfdaa10a" translate="yes" xml:space="preserve">
          <source>The shell scans the results of parameter expansion, command substitution, and arithmetic expansion that did not occur within double quotes for word splitting.</source>
          <target state="translated">쉘은 단어 분리를 위해 큰 따옴표 안에없는 매개 변수 확장, 명령 대체 및 산술 확장의 결과를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="864a1f5705bf8c76e35ade259a7203aa4774f5e5" translate="yes" xml:space="preserve">
          <source>The shell sets this option if it is started as a login shell (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;). The value may not be changed.</source>
          <target state="translated">쉘은 로그인 쉘로 시작되면이 옵션을 설정합니다 ( &lt;a href=&quot;invoking-bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ). 값은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eefc3401f6dd1bb6691c9bebf0d6d5fb898f599b" translate="yes" xml:space="preserve">
          <source>The shell sets this option if it is started as a login shell (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;). The value may not be changed.</source>
          <target state="translated">쉘은 로그인 쉘로 시작된 경우이 옵션을 설정합니다 ( &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ). 값이 변경되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e81d7344b430289b6b870eac8027d82b6960af7" translate="yes" xml:space="preserve">
          <source>The shell sets this option if it is started in restricted mode (see &lt;a href=&quot;the-restricted-shell&quot;&gt;The Restricted Shell&lt;/a&gt;). The value may not be changed. This is not reset when the startup files are executed, allowing the startup files to discover whether or not a shell is restricted.</source>
          <target state="translated">제한된 모드에서 시작되는 경우 셸은이 옵션을 설정합니다 ( &lt;a href=&quot;the-restricted-shell&quot;&gt;제한된 셸&lt;/a&gt; 참조 ). 값은 변경할 수 없습니다. 시작 파일이 실행될 때 재설정되지 않으므로 시작 파일이 셸이 제한되었는지 여부를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51c0ca18fa53fc79a29905727290b49d2ebb6a65" translate="yes" xml:space="preserve">
          <source>The shell sets this option if it is started in restricted mode (see &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;). The value may not be changed. This is not reset when the startup files are executed, allowing the startup files to discover whether or not a shell is restricted.</source>
          <target state="translated">쉘은 제한 모드에서 시작된 경우이 옵션을 설정합니다 ( &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;제한 쉘&lt;/a&gt; 참조 ). 값이 변경되지 않을 수 있습니다. 시작 파일이 실행될 때 재설정되지 않으므로 시작 파일이 쉘 제한 여부를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d77b348c667c262a723d3137596851cfdbb00e0" translate="yes" xml:space="preserve">
          <source>The shell then parses these tokens into commands and other constructs, removes the special meaning of certain words or characters, expands others, redirects input and output as needed, executes the specified command, waits for the command&amp;rsquo;s exit status, and makes that exit status available for further inspection or processing.</source>
          <target state="translated">그런 다음 쉘은 이러한 토큰을 명령 및 기타 구문으로 구문 분석하고 특정 단어 또는 문자의 특수 의미를 제거하고 다른 단어를 확장하고 필요에 따라 입력 및 출력을 리디렉션하고 지정된 명령을 실행하며 명령의 종료 상태를 기다린 후 종료 상태를 사용 가능하게 만듭니다. 추가 검사 또는 처리를 위해.</target>
        </trans-unit>
        <trans-unit id="9ba4037ea0906aeaaf517aff4e32cf5f4a49049a" translate="yes" xml:space="preserve">
          <source>The shell treats each character of &lt;code&gt;$IFS&lt;/code&gt; as a delimiter, and splits the results of the other expansions into words using these characters as field terminators. If &lt;code&gt;IFS&lt;/code&gt; is unset, or its value is exactly &lt;code&gt;&amp;lt;space&amp;gt;&amp;lt;tab&amp;gt;&amp;lt;newline&amp;gt;&lt;/code&gt;, the default, then sequences of &lt;code&gt; &amp;lt;space&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;newline&amp;gt;&lt;/code&gt; at the beginning and end of the results of the previous expansions are ignored, and any sequence of &lt;code&gt;IFS&lt;/code&gt; characters not at the beginning or end serves to delimit words. If &lt;code&gt;IFS&lt;/code&gt; has a value other than the default, then sequences of the whitespace characters &lt;code&gt;space&lt;/code&gt;, &lt;code&gt;tab&lt;/code&gt;, and &lt;code&gt;newline&lt;/code&gt; are ignored at the beginning and end of the word, as long as the whitespace character is in the value of &lt;code&gt;IFS&lt;/code&gt; (an &lt;code&gt;IFS&lt;/code&gt; whitespace character). Any character in &lt;code&gt;IFS&lt;/code&gt; that is not &lt;code&gt;IFS&lt;/code&gt; whitespace, along with any adjacent &lt;code&gt;IFS&lt;/code&gt; whitespace characters, delimits a field. A sequence of &lt;code&gt;IFS&lt;/code&gt; whitespace characters is also treated as a delimiter. If the value of &lt;code&gt;IFS&lt;/code&gt; is null, no word splitting occurs.</source>
          <target state="translated">쉘은 &lt;code&gt;$IFS&lt;/code&gt; 의 각 문자를 분리 문자로 취급 하고이 확장 문자를 필드 종결 자로 사용하여 다른 확장 결과를 단어로 나눕니다. 경우 &lt;code&gt;IFS&lt;/code&gt; 가 설정되지 않은 경우, 또는 그 값이 정확히 &lt;code&gt;&amp;lt;space&amp;gt;&amp;lt;tab&amp;gt;&amp;lt;newline&amp;gt;&lt;/code&gt; , 기본의 다음 순서 &lt;code&gt; &amp;lt;space&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;newline&amp;gt;&lt;/code&gt; 시작과 이전 확장의 결과의 끝 무시 되고 시작 또는 끝에없는 &lt;code&gt;IFS&lt;/code&gt; 문자 시퀀스는 단어를 구분하는 역할을합니다. &lt;code&gt;IFS&lt;/code&gt; 에 기본값 이외의 값이 있으면 공백 문자 &lt;code&gt;space&lt;/code&gt; , &lt;code&gt;tab&lt;/code&gt; 및 &lt;code&gt;newline&lt;/code&gt; 문자 시퀀스공백 문자가 &lt;code&gt;IFS&lt;/code&gt; ( &lt;code&gt;IFS&lt;/code&gt; 공백 문자) 값에있는 한 단어의 시작과 끝에서 무시됩니다 . 의 모든 문자 &lt;code&gt;IFS&lt;/code&gt; 아닌 &lt;code&gt;IFS&lt;/code&gt; 인접한과 함께 공백을 &lt;code&gt;IFS&lt;/code&gt; , 필드을 구분 공백 문자. 일련의 &lt;code&gt;IFS&lt;/code&gt; 공백 문자도 분리 문자로 처리됩니다. &lt;code&gt;IFS&lt;/code&gt; 의 값 이 널이면 단어 분할이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07cc547bede40d0cae5e40f5f4a99569ccd0c4b4" translate="yes" xml:space="preserve">
          <source>The shell treats several parameters specially. These parameters may only be referenced; assignment to them is not allowed.</source>
          <target state="translated">쉘은 여러 매개 변수를 특별히 처리합니다. 이 매개 변수는 참조 만 가능합니다. 그들에게 할당은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b2ad0c7d7487f4ea0379a55a58abfa1a4e0befb" translate="yes" xml:space="preserve">
          <source>The shell uses &lt;var&gt;dynamic scoping&lt;/var&gt; to control a variable&amp;rsquo;s visibility within functions. With dynamic scoping, visible variables and their values are a result of the sequence of function calls that caused execution to reach the current function. The value of a variable that a function sees depends on its value within its caller, if any, whether that caller is the &quot;global&quot; scope or another shell function. This is also the value that a local variable declaration &quot;shadows&quot;, and the value that is restored when the function returns.</source>
          <target state="translated">쉘은 &lt;var&gt;dynamic scoping&lt;/var&gt; 을 사용하여 함수 내에서 변수의 가시성을 제어합니다. 동적 범위 지정을 통해 보이는 변수 및 해당 값은 실행이 현재 함수에 도달하게하는 함수 호출 시퀀스의 결과입니다. 함수가 보는 변수의 값은 호출자가 &quot;전역&quot;범위인지 다른 쉘 함수인지에 따라 호출자 내의 값에 따라 다릅니다. 이것은 또한 지역 변수 선언이 &quot;그림자&quot;값이며, 함수가 반환 될 때 복원되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="2cd5dcbeb759d0a2c3722587604bdeddf6714377" translate="yes" xml:space="preserve">
          <source>The shell will check the value of the &lt;code&gt;TMOUT&lt;/code&gt; variable and exit if a command is not read within the specified number of seconds after printing &lt;code&gt;$PS1&lt;/code&gt; (see &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">쉘은 &lt;code&gt;TMOUT&lt;/code&gt; 변수 의 값을 확인하고 &lt;code&gt;$PS1&lt;/code&gt; 을 인쇄 한 후 지정된 시간 (초) 내에 명령을 읽지 않으면 종료합니다 ( &lt;a href=&quot;bash-variables&quot;&gt;Bash 변수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="86b20ce8aab434c014aaddb88f0788ead16beb6d" translate="yes" xml:space="preserve">
          <source>The shell will check the value of the &lt;code&gt;TMOUT&lt;/code&gt; variable and exit if a command is not read within the specified number of seconds after printing &lt;code&gt;$PS1&lt;/code&gt; (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">쉘은 &lt;code&gt;$PS1&lt;/code&gt; 인쇄 후 지정된 시간 (초) 내에 명령을 읽지 않으면 &lt;code&gt;TMOUT&lt;/code&gt; 변수 의 값을 확인 하고 종료합니다 ( &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;배시 변수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="10728f81ed1b0c90c9a0e0cca0f938487a92ca89" translate="yes" xml:space="preserve">
          <source>The shell will not exit on expansion errors caused by &lt;var&gt;var&lt;/var&gt; being unset or null in &lt;code&gt;${&lt;var&gt;var&lt;/var&gt;:?&lt;var&gt;word&lt;/var&gt;}&lt;/code&gt; expansions (see &lt;a href=&quot;shell-parameter-expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;${&lt;var&gt;var&lt;/var&gt;:?&lt;var&gt;word&lt;/var&gt;}&lt;/code&gt; &lt;var&gt;var&lt;/var&gt; :? 에서 &lt;var&gt;var&lt;/var&gt; 가 설정 해제되거나 null로 인해 발생하는 확장 오류로 인해 쉘이 종료되지 않습니다 . &lt;var&gt;word&lt;/var&gt; } 확장 ( &lt;a href=&quot;shell-parameter-expansion&quot;&gt;쉘 매개 변수 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="02d8f9c91b575ef17dfa7f7dbf1c624fb566f7b4" translate="yes" xml:space="preserve">
          <source>The shell will not exit on expansion errors caused by &lt;var&gt;var&lt;/var&gt; being unset or null in &lt;code&gt;${&lt;var&gt;var&lt;/var&gt;:?&lt;var&gt;word&lt;/var&gt;}&lt;/code&gt; expansions (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;${&lt;var&gt;var&lt;/var&gt;:?&lt;var&gt;word&lt;/var&gt;}&lt;/code&gt; &lt;var&gt;var&lt;/var&gt; : var 에서 &lt;var&gt;var&lt;/var&gt; 가 설정 해제되었거나 null로 인해 확장 오류가 발생하면 셸이 종료되지 않습니다 . &lt;var&gt;word&lt;/var&gt; } expansions ( &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;쉘 매개 변수 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3b82ee1e30bd714355a029909592b9a4adf828d0" translate="yes" xml:space="preserve">
          <source>The shell will perform brace expansion (see &lt;a href=&quot;brace-expansion&quot;&gt;Brace Expansion&lt;/a&gt;). This option is on by default.</source>
          <target state="translated">쉘은 중괄호 확장 (참조 수행 &lt;a href=&quot;brace-expansion&quot;&gt;브레이스 확장&lt;/a&gt; ). 이 옵션은 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f85b03a392455895011cb39b0e69ae7d461f563" translate="yes" xml:space="preserve">
          <source>The shell will perform brace expansion (see &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;). This option is on by default.</source>
          <target state="translated">쉘은 중괄호 확장 (참조 수행 &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;브레이스 확장&lt;/a&gt; ). 이 옵션은 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="929e9d23bb121f55558c95f11d362127b9b29dfc" translate="yes" xml:space="preserve">
          <source>The shell&amp;rsquo;s command-line arguments.</source>
          <target state="translated">쉘의 명령 행 인수.</target>
        </trans-unit>
        <trans-unit id="2eaa3191638c3167e75792e2c32188b7558fa5c1" translate="yes" xml:space="preserve">
          <source>The simplest way to compile Bash is:</source>
          <target state="translated">Bash를 컴파일하는 가장 간단한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6d492ae475f3eb0b64cc0410b3e288c4efe8d31" translate="yes" xml:space="preserve">
          <source>The special parameters &amp;lsquo;</source>
          <target state="translated">특수 매개 변수 '</target>
        </trans-unit>
        <trans-unit id="78ac93ea4c7d589a16f423e51aa82d328440771b" translate="yes" xml:space="preserve">
          <source>The special pattern characters have the following meanings:</source>
          <target state="translated">특수 패턴 문자는 다음과 같은 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ab52fbd0480da10f00829294cf610456cf0473ff" translate="yes" xml:space="preserve">
          <source>The status returned by commands and how Bash interprets it.</source>
          <target state="translated">명령이 리턴 한 상태 및 Bash가이를 해석하는 방법.</target>
        </trans-unit>
        <trans-unit id="d148582706b425cd062c99f44b6a48edbaa1d99b" translate="yes" xml:space="preserve">
          <source>The string of characters that should terminate an incremental search without subsequently executing the character as a command (see &lt;a href=&quot;searching&quot;&gt;Searching&lt;/a&gt;). If this variable has not been given a value, the characters &lt;code&gt;ESC&lt;/code&gt; and</source>
          <target state="translated">이후에 문자를 명령으로 실행하지 않고 증분 검색을 종료해야하는 문자열입니다 ( &lt;a href=&quot;searching&quot;&gt;검색&lt;/a&gt; 참조 ). 이 변수에 값이 제공되지 않은 경우 &lt;code&gt;ESC&lt;/code&gt; 및</target>
        </trans-unit>
        <trans-unit id="c96d3826ce6fa7fa67cd9e6a57d44dbfee981c12" translate="yes" xml:space="preserve">
          <source>The string of characters that should terminate an incremental search without subsequently executing the character as a command (see &lt;a href=&quot;searching#Searching&quot;&gt;Searching&lt;/a&gt;). If this variable has not been given a value, the characters &lt;code&gt;ESC&lt;/code&gt; and</source>
          <target state="translated">이후에 문자를 명령으로 실행하지 않고 증분 검색을 종료해야하는 문자열입니다 ( &lt;a href=&quot;searching#Searching&quot;&gt;검색&lt;/a&gt; 참조 ). 이 변수에 값이 없으면 문자 &lt;code&gt;ESC&lt;/code&gt; 및</target>
        </trans-unit>
        <trans-unit id="651d0c97af7e902b9750faea2a0b1c833b2440b5" translate="yes" xml:space="preserve">
          <source>The string that would be displayed by &amp;lsquo;</source>
          <target state="translated">'로 표시되는 문자열</target>
        </trans-unit>
        <trans-unit id="7776d244b6bbd7d504afa9689c3cb612100b5e61" translate="yes" xml:space="preserve">
          <source>The string to insert at the beginning of the line when the &lt;code&gt;insert-comment&lt;/code&gt; command is executed. The default value is &lt;code&gt;&quot;#&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;insert-comment&lt;/code&gt; 명령이 실행될 때 행의 시작 부분에 삽입 할 문자열 입니다. 기본값은 &lt;code&gt;&quot;#&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="557cad528fdbd6bd6acf00aaccdee22ebcbd8c35" translate="yes" xml:space="preserve">
          <source>The subdirectory &lt;code&gt;foo&lt;/code&gt; of the home directory of the user &lt;code&gt;fred&lt;/code&gt;</source>
          <target state="translated">사용자 &lt;code&gt;fred&lt;/code&gt; 의 홈 디렉토리의 서브 디렉토리 &lt;code&gt;foo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8f8b505ce05315e1a17e36787d4eec3e6ea7c76" translate="yes" xml:space="preserve">
          <source>The syntax</source>
          <target state="translated">문법</target>
        </trans-unit>
        <trans-unit id="83864cb09377d92aa6ef6b10369692847d068dfa" translate="yes" xml:space="preserve">
          <source>The syntax for controlling key bindings in the init file is simple. First you need to find the name of the command that you want to change. The following sections contain tables of the command name, the default keybinding, if any, and a short description of what the command does.</source>
          <target state="translated">init 파일에서 키 바인딩을 제어하는 ​​구문은 간단합니다. 먼저 변경하려는 명령의 이름을 찾아야합니다. 다음 섹션에는 명령 이름, 기본 키 바인딩 (있는 경우) 및 명령의 간략한 설명이 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="397e51c7f8e3aa386b3ed248ec72a1a9aefbb131" translate="yes" xml:space="preserve">
          <source>The syntax of the &lt;code&gt;case&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;case&lt;/code&gt; 명령 의 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e89589fa0086f9e4f68229bce7a4fb55ef7e7312" translate="yes" xml:space="preserve">
          <source>The syntax of the &lt;code&gt;for&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 명령 의 구문은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="94ec1dcd0351776c8525baf65f5936a95fd39414" translate="yes" xml:space="preserve">
          <source>The syntax of the &lt;code&gt;if&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 명령 의 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1ca84b4cf40aa870bc7a9434cdbbcf620bc46e31" translate="yes" xml:space="preserve">
          <source>The syntax of the &lt;code&gt;until&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; 명령 의 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5997dd0fe5383486f475a01e977e6d7562319f43" translate="yes" xml:space="preserve">
          <source>The syntax of the &lt;code&gt;while&lt;/code&gt; command is:</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 명령 의 구문 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4cb5a4878d4824a6e3cc97693f13a3d7af45ba70" translate="yes" xml:space="preserve">
          <source>The text</source>
          <target state="translated">텍스트</target>
        </trans-unit>
        <trans-unit id="b2677043af3f5a768ae74d245381c283718fb041" translate="yes" xml:space="preserve">
          <source>The text after the &amp;lsquo;</source>
          <target state="translated">'다음의 텍스트</target>
        </trans-unit>
        <trans-unit id="039ba39464b2a648b548e0b817d33ee8e5ee39a0" translate="yes" xml:space="preserve">
          <source>The time, in 12-hour HH:MM:SS format.</source>
          <target state="translated">12 시간 HH : MM : SS 형식의 시간입니다.</target>
        </trans-unit>
        <trans-unit id="2947cf4592e14132541d8fa3e6d64c9f4e395f81" translate="yes" xml:space="preserve">
          <source>The time, in 12-hour am/pm format.</source>
          <target state="translated">오전 12시 / 오후 형식의 시간입니다.</target>
        </trans-unit>
        <trans-unit id="8fa95493f6e19849ab7227b92efebe0c1e71c5b9" translate="yes" xml:space="preserve">
          <source>The time, in 24-hour HH:MM format.</source>
          <target state="translated">24 시간 HH : MM 형식의 시간입니다.</target>
        </trans-unit>
        <trans-unit id="c3d065f007cd9dd11288efaacb92822ea86c8464" translate="yes" xml:space="preserve">
          <source>The time, in 24-hour HH:MM:SS format.</source>
          <target state="translated">24 시간 HH : MM : SS 형식의 시간입니다.</target>
        </trans-unit>
        <trans-unit id="546c59017480fec7e5615dbe0528ae2a9afeb0a3" translate="yes" xml:space="preserve">
          <source>The types of commands you can use.</source>
          <target state="translated">사용할 수있는 명령 유형.</target>
        </trans-unit>
        <trans-unit id="ff955a1de3f03a21fca8ad8b7504d2f3da2a59f4" translate="yes" xml:space="preserve">
          <source>The username of the current user.</source>
          <target state="translated">현재 사용자의 사용자 이름</target>
        </trans-unit>
        <trans-unit id="087fccc507f3e61e6e384dfb1994d2cf73dce05a" translate="yes" xml:space="preserve">
          <source>The value is used to set the shell&amp;rsquo;s compatibility level. See &lt;a href=&quot;shell-compatibility-mode&quot;&gt;Shell Compatibility Mode&lt;/a&gt;, for a description of the various compatibility levels and their effects. The value may be a decimal number (e.g., 4.2) or an integer (e.g., 42) corresponding to the desired compatibility level. If &lt;code&gt;BASH_COMPAT&lt;/code&gt; is unset or set to the empty string, the compatibility level is set to the default for the current version. If &lt;code&gt;BASH_COMPAT&lt;/code&gt; is set to a value that is not one of the valid compatibility levels, the shell prints an error message and sets the compatibility level to the default for the current version. The valid values correspond to the compatibility levels described below (see &lt;a href=&quot;shell-compatibility-mode&quot;&gt;Shell Compatibility Mode&lt;/a&gt;). For example, 4.2 and 42 are valid values that correspond to the &lt;code&gt;compat42&lt;/code&gt;&lt;code&gt;shopt&lt;/code&gt; option and set the compatibility level to 42. The current version is also a valid value.</source>
          <target state="translated">이 값은 셸의 호환성 수준을 설정하는 데 사용됩니다. 다양한 호환성 수준 및 그 효과에 대한 설명은 &lt;a href=&quot;shell-compatibility-mode&quot;&gt;셸 호환 모드를&lt;/a&gt; 참조하십시오 . 값은 10 진수 (예 : 4.2) 또는 원하는 호환성 수준에 해당하는 정수 (예 : 42) 일 수 있습니다. 경우 &lt;code&gt;BASH_COMPAT&lt;/code&gt; 이 빈 문자열로 설정 해제 또는 설정되어 호환성 수준은 현재 버전의 기본값으로 설정됩니다. &lt;code&gt;BASH_COMPAT&lt;/code&gt; 가 유효한 호환성 수준 중 하나가 아닌 값으로 설정된 경우 셸은 오류 메시지를 인쇄하고 호환성 수준을 현재 버전의 기본값으로 설정합니다. 유효한 값은 아래에 설명 된 호환성 수준에 해당합니다 ( &lt;a href=&quot;shell-compatibility-mode&quot;&gt;셸 호환 모드&lt;/a&gt; 참조).). 예를 들어 4.2 및 42는 &lt;code&gt;compat42&lt;/code&gt; &lt;code&gt;shopt&lt;/code&gt; 옵션에 해당하는 유효한 값이며 호환성 수준을 42로 설정합니다. 현재 버전도 유효한 값입니다.</target>
        </trans-unit>
        <trans-unit id="44f04f240cded95f75a32464630957f4300c35e8" translate="yes" xml:space="preserve">
          <source>The value is used to set the shell&amp;rsquo;s compatibility level. See &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;, for a description of the various compatibility levels and their effects. The value may be a decimal number (e.g., 4.2) or an integer (e.g., 42) corresponding to the desired compatibility level. If &lt;code&gt;BASH_COMPAT&lt;/code&gt; is unset or set to the empty string, the compatibility level is set to the default for the current version. If &lt;code&gt;BASH_COMPAT&lt;/code&gt; is set to a value that is not one of the valid compatibility levels, the shell prints an error message and sets the compatibility level to the default for the current version. The valid compatibility levels correspond to the compatibility options accepted by the &lt;code&gt;shopt&lt;/code&gt; builtin described above (for example, &lt;var&gt;compat42&lt;/var&gt; means that 4.2 and 42 are valid values). The current version is also a valid value.</source>
          <target state="translated">이 값은 쉘의 호환성 수준을 설정하는 데 사용됩니다. 다양한 호환성 수준과 그 효과에 대한 설명은 &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin을&lt;/a&gt; 참조하십시오 . 값은 원하는 호환성 레벨에 대응하는 10 진수 (예를 들어, 4.2) 또는 정수 (예를 들어, 42) 일 수있다. 경우 &lt;code&gt;BASH_COMPAT&lt;/code&gt; 이 빈 문자열로 설정 해제 또는 설정되어 호환성 수준은 현재 버전의 기본값으로 설정됩니다. 경우 &lt;code&gt;BASH_COMPAT&lt;/code&gt; 가 유효한 호환성 수준 중 하나가 아닌 값으로 설정되고, 쉘은 에러 메시지를 출력하고 현재 버전의 기본에 호환성 수준을 설정합니다. 유효한 호환성 수준 은 위에서 설명한 &lt;code&gt;shopt&lt;/code&gt; 내장 (예 : &lt;var&gt;compat42&lt;/var&gt; )에서 허용하는 호환성 옵션에 해당합니다.4.2와 42가 유효한 값임을 의미합니다). 현재 버전도 유효한 값입니다.</target>
        </trans-unit>
        <trans-unit id="fd85921f250378d8ae629c564190aa36eee3643f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;$HOME&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$HOME&lt;/code&gt; 의 가치</target>
        </trans-unit>
        <trans-unit id="0f98eb18117382268ac2fdda01b7fb5e78dc5a17" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;MACHTYPE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MACHTYPE&lt;/code&gt; 의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="f0bd6195d8ca24500579dfc5b25501a8dbcc48b7" translate="yes" xml:space="preserve">
          <source>The value of the last option argument processed by the &lt;code&gt;getopts&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;getopts&lt;/code&gt; 내장에서 처리 한 마지막 옵션 인수의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="1c799dffdb48e568cebb24d89b06c4c19963f103" translate="yes" xml:space="preserve">
          <source>The value of the variable &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; is examined just before Bash prints each primary prompt. If &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; is set and has a non-null value, then the value is executed just as if it had been typed on the command line.</source>
          <target state="translated">변수 &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; 의 값은 Bash가 각 기본 프롬프트를 인쇄하기 직전에 검사됩니다. 경우 &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; 가 설정하고 null이 아닌 값을 가지고있다가 명령 행에 입력했던 것처럼, 그 값이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="04c2787216a163bf068f73e779f6b5f2397b4ed9" translate="yes" xml:space="preserve">
          <source>The value of this parameter is expanded like &lt;code&gt;PS1&lt;/code&gt; and displayed by interactive shells after reading a command and before the command is executed.</source>
          <target state="translated">이 매개 변수의 값은 &lt;code&gt;PS1&lt;/code&gt; 처럼 확장 되며 명령을 읽은 후 명령이 실행되기 전에 대화 형 쉘에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="df0402efd8dde69c4d2f33edcea256ddb23b3c45" translate="yes" xml:space="preserve">
          <source>The value of this parameter is expanded like &lt;var&gt;PS1&lt;/var&gt; and displayed by interactive shells after reading a command and before the command is executed.</source>
          <target state="translated">이 매개 변수의 값은 &lt;var&gt;PS1&lt;/var&gt; 처럼 확장되고 명령을 읽은 후 명령이 실행되기 전에 대화식 쉘에 의해 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="25d045943c08d9fa184f14d59e811d5662ab8e94" translate="yes" xml:space="preserve">
          <source>The value of this parameter is expanded like &lt;var&gt;PS1&lt;/var&gt; and the expanded value is the prompt printed before the command line is echoed when the</source>
          <target state="translated">이 매개 변수의 값은 &lt;var&gt;PS1&lt;/var&gt; 과 같이 확장되며 확장 된 값은 명령 행이 에코 될 때 인쇄 된 프롬프트입니다.</target>
        </trans-unit>
        <trans-unit id="c2069a853e7e4c352256c651bc9711895ad4aea0" translate="yes" xml:space="preserve">
          <source>The value of this parameter is used as a format string specifying how the timing information for pipelines prefixed with the &lt;code&gt;time&lt;/code&gt; reserved word should be displayed. The &amp;lsquo;</source>
          <target state="translated">이 매개 변수의 값은 &lt;code&gt;time&lt;/code&gt; 예약어가 접두어로 붙은 파이프 라인의 타이밍 정보가 표시되는 방법을 지정하는 형식 문자열로 사용 됩니다. '</target>
        </trans-unit>
        <trans-unit id="3d1c9f8bb4dfddf7179168d82d2de258443de2eb" translate="yes" xml:space="preserve">
          <source>The value of this variable is used as the prompt for the &lt;code&gt;select&lt;/code&gt; command. If this variable is not set, the &lt;code&gt;select&lt;/code&gt; command prompts with &amp;lsquo;</source>
          <target state="translated">이 변수의 값은 &lt;code&gt;select&lt;/code&gt; 명령 의 프롬프트로 사용됩니다 . 이 변수를 설정하지 않으면 &lt;code&gt;select&lt;/code&gt; 명령에 '</target>
        </trans-unit>
        <trans-unit id="a6d1661055dab5ddd2b22885205d0882c08bf298" translate="yes" xml:space="preserve">
          <source>The value returned by a command to its caller. The value is restricted to eight bits, so the maximum value is 255.</source>
          <target state="translated">명령이 호출자에게 리턴 한 값. 값은 8 비트로 제한되므로 최대 값은 255입니다.</target>
        </trans-unit>
        <trans-unit id="9b96f53e885a014517a93deb64d66fbf5e4996b6" translate="yes" xml:space="preserve">
          <source>The variable is to be treated as an integer; arithmetic evaluation (see &lt;a href=&quot;shell-arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;) is performed when the variable is assigned a value.</source>
          <target state="translated">변수는 정수로 처리됩니다. 산술 평가 ( &lt;a href=&quot;shell-arithmetic&quot;&gt;쉘 산술&lt;/a&gt; 참조 )는 변수에 값이 할당 될 때 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="148bb77806c5b1ec4dfcfb34ad15d87996bd4d0d" translate="yes" xml:space="preserve">
          <source>The variable is to be treated as an integer; arithmetic evaluation (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;) is performed when the variable is assigned a value.</source>
          <target state="translated">변수는 정수로 취급됩니다. 변수에 값이 할당되면 산술 평가 ( &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;쉘 산술&lt;/a&gt; 참조 )가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="b39bf8e1552fff49229a38ab03b9c35eb7c5fe33" translate="yes" xml:space="preserve">
          <source>The version number of Bash.</source>
          <target state="translated">Bash의 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="a11b6fbf8320b54f58c60bf5fbc2ab78318d291f" translate="yes" xml:space="preserve">
          <source>The version number of the current instance of Bash.</source>
          <target state="translated">현재 Bash 인스턴스의 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="f30c7f23d4e6f3d476f2e127031ef6f4ed2a1b01" translate="yes" xml:space="preserve">
          <source>The version of Bash (e.g., 2.00)</source>
          <target state="translated">배쉬 버전 (예 : 2.00)</target>
        </trans-unit>
        <trans-unit id="027d950e271c78503f04d5e7dffcabc091968d50" translate="yes" xml:space="preserve">
          <source>The word before point is treated as a pattern for pathname expansion, and the list of matching file names is inserted, replacing the word. If a numeric argument is supplied, a &amp;lsquo;</source>
          <target state="translated">포인트 앞의 단어는 경로 이름 확장을위한 패턴으로 취급되며 일치하는 파일 이름 목록이 삽입되어 단어를 대체합니다. 숫자 인수가 제공되면 '</target>
        </trans-unit>
        <trans-unit id="222c4b4554c8b6901e2325416221a577860ca250" translate="yes" xml:space="preserve">
          <source>The word before point is treated as a pattern for pathname expansion, with an asterisk implicitly appended. This pattern is used to generate a list of matching file names for possible completions.</source>
          <target state="translated">포인트 이전의 단어는 별표가 암시 적으로 추가 된 경로 이름 확장 패턴으로 취급됩니다. 이 패턴은 가능한 완료를 위해 일치하는 파일 이름 목록을 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0c65ac33cabff828f2aa8f1e90a8750474ac6d6c" translate="yes" xml:space="preserve">
          <source>The word following the redirection operator in the following descriptions, unless otherwise noted, is subjected to brace expansion, tilde expansion, parameter expansion, command substitution, arithmetic expansion, quote removal, filename expansion, and word splitting. If it expands to more than one word, Bash reports an error.</source>
          <target state="translated">달리 언급되지 않는 한, 이하의 설명에서 리디렉션 연산자 다음의 단어는 중괄호 확장, 틸드 확장, 파라미터 확장, 명령 대체, 산술 확장, 따옴표 제거, 파일 이름 확장 및 단어 분할이 적용된다. 둘 이상의 단어로 확장되면 Bash는 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="346079daa02f2cb31ed65b06f1366a24cd782ecd" translate="yes" xml:space="preserve">
          <source>The word matched by the most recent &amp;lsquo;</source>
          <target state="translated">가장 최근의 단어와 일치하는 단어</target>
        </trans-unit>
        <trans-unit id="10e9087ca60e5e8a54425de161a2d02c0f440cfc" translate="yes" xml:space="preserve">
          <source>The words are assigned to sequential indices of the array variable &lt;var&gt;aname&lt;/var&gt;, starting at 0. All elements are removed from &lt;var&gt;aname&lt;/var&gt; before the assignment. Other &lt;var&gt;name&lt;/var&gt; arguments are ignored.</source>
          <target state="translated">단어는 0부터 시작 하여 배열 변수 &lt;var&gt;aname&lt;/var&gt; 의 순차적 인덱스에 할당됩니다. 할당 전에 모든 요소가 &lt;var&gt;aname&lt;/var&gt; 에서 제거됩니다 . 다른 &lt;var&gt;name&lt;/var&gt; 인수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="dad164cb93ff4e408938cab6e4b29afba973b1f0" translate="yes" xml:space="preserve">
          <source>The words that are not variable assignments or redirections are expanded (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;). If any words remain after expansion, the first word is taken to be the name of the command and the remaining words are the arguments.</source>
          <target state="translated">변수 할당 또는 리디렉션이 아닌 단어가 확장됩니다 ( &lt;a href=&quot;shell-expansions&quot;&gt;셸 확장&lt;/a&gt; 참조 ). 확장 후에 단어가 남아 있으면 첫 번째 단어가 명령의 이름이되고 나머지 단어는 인수가됩니다.</target>
        </trans-unit>
        <trans-unit id="40868cb137c232e64b231908d1d301657c99868c" translate="yes" xml:space="preserve">
          <source>The words that are not variable assignments or redirections are expanded (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;). If any words remain after expansion, the first word is taken to be the name of the command and the remaining words are the arguments.</source>
          <target state="translated">변수 할당 또는 방향 전환이 아닌 단어가 확장됩니다 ( &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;쉘 확장&lt;/a&gt; 참조 ). 확장 후에도 단어가 남아 있으면 첫 번째 단어는 명령의 이름으로 간주되고 나머지 단어는 인수입니다.</target>
        </trans-unit>
        <trans-unit id="1115f35bbb1c2198812247bacb427d5941c313a5" translate="yes" xml:space="preserve">
          <source>The words that the parser has marked as variable assignments (those preceding the command name) and redirections are saved for later processing.</source>
          <target state="translated">파서가 변수 할당 (명령 이름 앞에 오는 것)으로 표시 한 단어와 리디렉션은 나중에 처리하기 위해 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="34835e8862f137b6b67b76e845cf0916c66a7d74" translate="yes" xml:space="preserve">
          <source>There are a number of ways to refer to a job in the shell. The character &amp;lsquo;</source>
          <target state="translated">쉘에서 작업을 참조하는 방법에는 여러 가지가 있습니다. 캐릭터 '</target>
        </trans-unit>
        <trans-unit id="5380837a8dc4b937f8c653fd992daf4e5508db28" translate="yes" xml:space="preserve">
          <source>There are only a few basic constructs allowed in the Readline init file. Blank lines are ignored. Lines beginning with a &amp;lsquo;</source>
          <target state="translated">Readline init 파일에는 몇 가지 기본 구성 만 허용됩니다. 빈 줄은 무시됩니다. '로 시작하는 줄</target>
        </trans-unit>
        <trans-unit id="8422d6b3111c08b7087bda621a6b140c5d376882" translate="yes" xml:space="preserve">
          <source>There are several</source>
          <target state="translated">몇 가지가 있습니다</target>
        </trans-unit>
        <trans-unit id="355ae59a61b832450204db67a5d845ba171bf393" translate="yes" xml:space="preserve">
          <source>There are several single-character options that may be supplied at invocation which are not available with the &lt;code&gt;set&lt;/code&gt; builtin.</source>
          <target state="translated">호출시 제공 될 수있는 단일 문자 옵션이 여러 개 있으며 내장 된 &lt;code&gt;set&lt;/code&gt; 에서는 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="da410ea10b5c65b982eecff9f69deb78b7882c49" translate="yes" xml:space="preserve">
          <source>There are three quoting mechanisms: the &lt;var&gt;escape character&lt;/var&gt;, single quotes, and double quotes.</source>
          <target state="translated">&lt;var&gt;escape character&lt;/var&gt; , 작은 따옴표 및 큰 따옴표 등 세 가지 인용 메커니즘이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57dcc9600ee50cb4594d545bc4b2e3f3a34a4fa9" translate="yes" xml:space="preserve">
          <source>There are two formats for redirecting standard output and standard error:</source>
          <target state="translated">표준 출력 및 표준 오류를 재 지정하기위한 두 가지 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4cc96780f245ab386ceb829f056c264700d3183" translate="yes" xml:space="preserve">
          <source>There are ways to run commands in parallel that are not built into Bash. GNU Parallel is a tool to do just that.</source>
          <target state="translated">Bash에 내장되지 않은 명령을 병렬로 실행하는 방법이 있습니다. GNU Parallel은 바로이를위한 도구입니다.</target>
        </trans-unit>
        <trans-unit id="86cd538151bd75069884e9f6288905f292468e7a" translate="yes" xml:space="preserve">
          <source>There is no mechanism for using arguments in the replacement text, as in &lt;code&gt;csh&lt;/code&gt;. If arguments are needed, a shell function should be used (see &lt;a href=&quot;shell-functions&quot;&gt;Shell Functions&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; 와 같이 대체 텍스트에 인수를 사용하는 메커니즘은 없습니다 . 인수가 필요하면 쉘 함수를 사용해야합니다 ( &lt;a href=&quot;shell-functions&quot;&gt;쉘 함수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f5777c1669d42cb1acb2551be9d5476e2c723421" translate="yes" xml:space="preserve">
          <source>There is no mechanism for using arguments in the replacement text, as in &lt;code&gt;csh&lt;/code&gt;. If arguments are needed, a shell function should be used (see &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell Functions&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; 에서와 같이 대체 텍스트에서 인수를 사용하는 메커니즘은 없습니다 . 인수가 필요한 경우 쉘 함수를 사용해야합니다 ( &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;쉘 함수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c5f46df76fa16611d124197c9368dfd67cc3688c" translate="yes" xml:space="preserve">
          <source>There is other &lt;small&gt;POSIX&lt;/small&gt; behavior that Bash does not implement by default even when in &lt;small&gt;POSIX&lt;/small&gt; mode. Specifically:</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 모드 에서도 Bash가 기본적으로 구현하지 않는 다른 &lt;small&gt;POSIX&lt;/small&gt; 동작이 있습니다. 구체적으로 특별히:&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e9ac2201cee1badcd944531174bf1efb539f9461" translate="yes" xml:space="preserve">
          <source>There is some support for dynamically modifying completions. This is most useful when used in combination with a default completion specified with</source>
          <target state="translated">완료를 동적으로 수정하기위한 일부 지원이 있습니다. 이 옵션은 지정된 기본 완료와 함께 사용할 때 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a5be4ef90f6dd62a6f8fcf59741822b9b02eb595" translate="yes" xml:space="preserve">
          <source>There may be an arbitrary number of &lt;code&gt;case&lt;/code&gt; clauses, each terminated by a &amp;lsquo;</source>
          <target state="translated">임의의 수의 &lt;code&gt;case&lt;/code&gt; 절이 있을 수 있으며 각 절은 '</target>
        </trans-unit>
        <trans-unit id="e81c82a23500da34f5f3f9852232cef329cf49a0" translate="yes" xml:space="preserve">
          <source>There may be some features &lt;code&gt;configure&lt;/code&gt; can not figure out automatically, but need to determine by the type of host Bash will run on. Usually &lt;code&gt;configure&lt;/code&gt; can figure that out, but if it prints a message saying it can not guess the host type, give it the</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 가 자동으로 파악할 수없는 일부 기능이있을 수 있지만 Bash가 실행될 호스트 유형에 따라 결정해야합니다. 일반적으로 &lt;code&gt;configure&lt;/code&gt; 는이를 알아낼 수 있지만 호스트 유형을 추측 할 수 없다는 메시지를 인쇄하면</target>
        </trans-unit>
        <trans-unit id="9015989b924a2ac88a0ae4fbf68f6592b8c17a42" translate="yes" xml:space="preserve">
          <source>These are installation instructions for Bash.</source>
          <target state="translated">다음은 Bash 설치 지침입니다.</target>
        </trans-unit>
        <trans-unit id="7aedb4b233a7d36f1ed706bd4fe3eb06a42c78b4" translate="yes" xml:space="preserve">
          <source>These are the &lt;small&gt;POSIX&lt;/small&gt; special builtins:</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 특수 내장 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2823635c62ce920404058edfdb7fd410042efd12" translate="yes" xml:space="preserve">
          <source>These control aspects of the shell&amp;rsquo;s compatibility mode (see &lt;a href=&quot;shell-compatibility-mode&quot;&gt;Shell Compatibility Mode&lt;/a&gt;).</source>
          <target state="translated">이러한 제어 기능은 셸 호환 모드의 측면을 제어합니다 ( &lt;a href=&quot;shell-compatibility-mode&quot;&gt;셸 호환 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a64944b0b14b546d025ea7cbc1a0ffafc5f3a745" translate="yes" xml:space="preserve">
          <source>These definitions are used throughout the remainder of this manual.</source>
          <target state="translated">이 정의는이 설명서의 나머지 부분에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52445fd9af51159ab52902e33535ffe11eaa99ca" translate="yes" xml:space="preserve">
          <source>These examples show how you can use substring expansion with indexed arrays:</source>
          <target state="translated">이 예제는 인덱스 배열에서 하위 문자열 확장을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="36d357d109541ac67ed9625400ae8662ccbda188" translate="yes" xml:space="preserve">
          <source>These restrictions are enforced after any startup files are read.</source>
          <target state="translated">이러한 제한은 시작 파일을 읽은 후에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6cba66425428991d68cbdaa44f3c3bf5b58d81" translate="yes" xml:space="preserve">
          <source>These variables are set or used by Bash, but other shells do not normally treat them specially.</source>
          <target state="translated">이러한 변수는 Bash에서 설정하거나 사용하지만 다른 쉘은 일반적으로 특수하게 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1156fdd4019160ed61ec17c8bdc9f4ed741b6727" translate="yes" xml:space="preserve">
          <source>This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The &amp;ldquo;Document&amp;rdquo;, below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as &amp;ldquo;you&amp;rdquo;. You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law.</source>
          <target state="translated">이 라이센스는 본 라이센스 조건에 따라 배포 될 수 있다는 저작권 소유자의 고지가 포함 된 모든 매체의 모든 매뉴얼 또는 기타 작업에 적용됩니다. 이러한 통지는 여기에 명시된 조건 하에서 해당 저작물을 사용할 수있는 기간에 제한이없는 전 세계 로열티가없는 라이센스를 부여합니다. 아래의 &quot;문서&quot;는 그러한 매뉴얼 또는 작업을 나타냅니다. 일반인은 라이센스 사용자이며 &quot;귀하&quot;로 처리됩니다. 저작권법에 따라 허가가 필요한 방식으로 저작물을 복사, 수정 또는 배포하는 경우 라이센스에 동의합니다.</target>
        </trans-unit>
        <trans-unit id="d7172d540090de5c8986abd8471f45ad42900b54" translate="yes" xml:space="preserve">
          <source>This License is a kind of &amp;ldquo;copyleft&amp;rdquo;, which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software.</source>
          <target state="translated">이 라이센스는 일종의 &quot;카피 레프트 (copyleft)&quot;입니다. 즉, 문서의 파생 작품 자체도 같은 의미에서 자유로 워야합니다. 자유 소프트웨어 용으로 설계된 카피 레프트 라이센스 인 GNU General Public License를 보완합니다.</target>
        </trans-unit>
        <trans-unit id="9774638f742e8e76ad20a90b73b698f411ba8820" translate="yes" xml:space="preserve">
          <source>This alters the default behavior of the completion functions in a fashion similar to &lt;var&gt;show-all-if-ambiguous&lt;/var&gt;. If set to &amp;lsquo;</source>
          <target state="translated">이는 &lt;var&gt;show-all-if-ambiguous&lt;/var&gt; 와 유사한 방식으로 완료 함수의 기본 동작을 변경 합니다 . '로 설정하면</target>
        </trans-unit>
        <trans-unit id="8332763d55887221896b817cdc3faab9f19c83f2" translate="yes" xml:space="preserve">
          <source>This alters the default behavior of the completion functions. If set to &amp;lsquo;</source>
          <target state="translated">완료 기능의 기본 동작이 변경됩니다. '로 설정하면</target>
        </trans-unit>
        <trans-unit id="3e34f2d1e6f278b2c604c84a983d396b66ab2ed0" translate="yes" xml:space="preserve">
          <source>This builds a Bash binary that produces profiling information to be processed by &lt;code&gt;gprof&lt;/code&gt; each time it is executed.</source>
          <target state="translated">이것은 &lt;code&gt;gprof&lt;/code&gt; 가 실행될 때마다 처리 할 프로파일 링 정보를 생성하는 Bash 바이너리를 빌드합니다 .</target>
        </trans-unit>
        <trans-unit id="c3cd4b02660da5e86fd9458a00db29bf6ba4c32f" translate="yes" xml:space="preserve">
          <source>This builtin allows you to change additional shell optional behavior.</source>
          <target state="translated">이 내장 기능을 사용하면 추가 쉘 선택적 동작을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51c09c163709e0806212e0c4d85c59c0e76dee4c" translate="yes" xml:space="preserve">
          <source>This builtin is so complicated that it deserves its own section. &lt;code&gt;set&lt;/code&gt; allows you to change the values of shell options and set the positional parameters, or to display the names and values of shell variables.</source>
          <target state="translated">이 내장은 너무 복잡하여 자체 섹션이 필요합니다. &lt;code&gt;set&lt;/code&gt; 을 사용하면 쉘 옵션의 값을 변경하고 위치 매개 변수를 설정하거나 쉘 변수의 이름과 값을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aec1f6282f72efc73514af3bcef7701cafdc1347" translate="yes" xml:space="preserve">
          <source>This causes Bash to be linked statically, if &lt;code&gt;gcc&lt;/code&gt; is being used. This could be used to build a version to use as root&amp;rsquo;s shell.</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; 를 사용하는 경우 Bash가 정적으로 링크 됩니다. 루트 쉘로 사용할 버전을 빌드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b444cedd05507c2879b16fcc79445c70923c1a2" translate="yes" xml:space="preserve">
          <source>This chapter briefly summarizes the shell&amp;rsquo;s &amp;lsquo;building blocks&amp;rsquo;: commands, control structures, shell functions, shell</source>
          <target state="translated">이 장에서는 쉘의 '빌딩 블록'(명령, 제어 구조, 쉘 기능, 쉘)을 간략하게 요약합니다.</target>
        </trans-unit>
        <trans-unit id="5550e13176089ed86a46ffd518b0119005cc3ed7" translate="yes" xml:space="preserve">
          <source>This chapter describes features unique to Bash.</source>
          <target state="translated">이 장에서는 Bash 고유의 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1b26127352667f52293bc4f0daa266336d9c3761" translate="yes" xml:space="preserve">
          <source>This chapter describes how to use the &lt;small&gt;GNU&lt;/small&gt; History Library interactively, from a user&amp;rsquo;s standpoint. It should be considered a user&amp;rsquo;s guide. For information on using the &lt;small&gt;GNU&lt;/small&gt; History Library in other programs, see the &lt;small&gt;GNU&lt;/small&gt; Readline Library Manual.</source>
          <target state="translated">이 장에서는 사용자 관점에서 대화 형으로 &lt;small&gt;GNU&lt;/small&gt; History Library 를 사용하는 방법에 대해 설명합니다 . 사용자 안내서로 간주해야합니다. 다른 프로그램에서 &lt;small&gt;GNU&lt;/small&gt; History Library 를 사용하는 것에 대한 정보 는 &lt;small&gt;GNU&lt;/small&gt; Readline Library Manual을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de15b35f7c50f67a3ef7e4a47233594367c7e8b4" translate="yes" xml:space="preserve">
          <source>This chapter describes the basic features of the &lt;small&gt;GNU&lt;/small&gt; command line editing interface. Command line editing is provided by the Readline library, which is used by several different programs, including Bash. Command line editing is enabled by default when using an interactive shell, unless the</source>
          <target state="translated">이 장에서는 &lt;small&gt;GNU&lt;/small&gt; 명령 줄 편집 인터페이스 의 기본 기능에 대해 설명합니다 . 명령 줄 편집은 Bash를 포함한 여러 다른 프로그램에서 사용되는 Readline 라이브러리에서 제공됩니다. 대화식 쉘을 사용하는 경우 기본적으로 명령 행 편집이 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="03ef6306676cfcd40ae8b20738ea19d430016d4e" translate="yes" xml:space="preserve">
          <source>This chapter describes the shell variables that Bash uses. Bash automatically assigns default values to a number of variables.</source>
          <target state="translated">이 장에서는 Bash가 사용하는 쉘 변수에 대해 설명합니다. Bash는 자동으로 여러 변수에 기본값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="c09354d1984a5765dc8136f0cec8a9d7bd70fd4d" translate="yes" xml:space="preserve">
          <source>This chapter discusses what job control is, how it works, and how Bash allows you to access its facilities.</source>
          <target state="translated">이 장에서는 작업 제어 기능, 작동 방식 및 Bash를 사용하여 시설에 액세스하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f2e3b64c94896242bb0f5f8bf5c5ae3d1ee830d8" translate="yes" xml:space="preserve">
          <source>This chapter provides basic instructions for installing Bash on the various supported platforms. The distribution supports the &lt;small&gt;GNU&lt;/small&gt; operating systems, nearly every version of Unix, and several non-Unix systems such as BeOS and Interix. Other independent ports exist for &lt;small&gt;MS-DOS&lt;/small&gt;, &lt;small&gt;OS/2&lt;/small&gt;, and Windows platforms.</source>
          <target state="translated">이 장에서는 다양한 지원 플랫폼에 Bash를 설치하기위한 기본 지침을 제공합니다. 이 배포판은 &lt;small&gt;GNU&lt;/small&gt; 운영 체제, 거의 모든 Unix 버전 및 BeOS 및 Interix와 같은 여러 비 유닉스 시스템을 지원합니다. &lt;small&gt;MS-DOS&lt;/small&gt; , &lt;small&gt;OS / 2&lt;/small&gt; 및 Windows 플랫폼에 대한 다른 독립 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="49e1d439d827302ed752f66204ca921eb96c58f6" translate="yes" xml:space="preserve">
          <source>This command, as seen in the previous example, terminates an &lt;code&gt;$if&lt;/code&gt; command.</source>
          <target state="translated">이전 예에서 볼 수 있듯이이 명령은 &lt;code&gt;$if&lt;/code&gt; 명령을 종료합니다 .</target>
        </trans-unit>
        <trans-unit id="fb0f85630397c158a20c2fa4d3ef1c1973ec8dcb" translate="yes" xml:space="preserve">
          <source>This construct allows both the standard output (file descriptor 1) and the standard error output (file descriptor 2) to be appended to the file whose name is the expansion of &lt;var&gt;word&lt;/var&gt;.</source>
          <target state="translated">이 구문을 사용하면 표준 출력 (파일 설명자 1)과 표준 오류 출력 (파일 설명자 2)을 모두 이름이 &lt;var&gt;word&lt;/var&gt; 확장 인 파일에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56799de86f1e6d6fa96e1e930b36c93db6384595" translate="yes" xml:space="preserve">
          <source>This construct allows both the standard output (file descriptor 1) and the standard error output (file descriptor 2) to be redirected to the file whose name is the expansion of &lt;var&gt;word&lt;/var&gt;.</source>
          <target state="translated">이 구문을 사용하면 표준 출력 (파일 설명자 1)과 표준 오류 출력 (파일 설명자 2)을 모두 이름이 &lt;var&gt;word&lt;/var&gt; 확장 인 파일로 리디렉션 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="098091aa94ef2f9c52549d501cc96335db2b9a80" translate="yes" xml:space="preserve">
          <source>This construct is typically used as shorthand when the common prefix of the strings to be generated is longer than in the above example:</source>
          <target state="translated">이 구문은 일반적으로 생성 될 문자열의 공통 접두어가 위의 예보다 길면 속기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c881176096b94394f535a9c85d76e0a7b0e1132b" translate="yes" xml:space="preserve">
          <source>This creates a coprocess named &lt;var&gt;NAME&lt;/var&gt;. If &lt;var&gt;NAME&lt;/var&gt; is not supplied, the default name is &lt;var&gt;COPROC&lt;/var&gt;. &lt;var&gt;NAME&lt;/var&gt; must not be supplied if &lt;var&gt;command&lt;/var&gt; is a simple command (see &lt;a href=&quot;simple-commands&quot;&gt;Simple Commands&lt;/a&gt;); otherwise, it is interpreted as the first word of the simple command.</source>
          <target state="translated">이렇게하면 &lt;var&gt;NAME&lt;/var&gt; 이라는 코 프로세스가 생성 됩니다. &lt;var&gt;NAME&lt;/var&gt; 이 제공되지 않은 경우 기본 이름은 &lt;var&gt;COPROC&lt;/var&gt; 입니다. &lt;var&gt;command&lt;/var&gt; 가 단순 명령 인 경우 &lt;var&gt;NAME&lt;/var&gt; 을 제공하지 않아야합니다 ( &lt;a href=&quot;simple-commands&quot;&gt;단순 명령&lt;/a&gt; 참조 ). 그렇지 않으면 간단한 명령의 첫 번째 단어로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="904303c6dcba829a9fb6ebeeb4ed82e34d87e5b5" translate="yes" xml:space="preserve">
          <source>This creates a coprocess named &lt;var&gt;NAME&lt;/var&gt;. If &lt;var&gt;NAME&lt;/var&gt; is not supplied, the default name is &lt;var&gt;COPROC&lt;/var&gt;. &lt;var&gt;NAME&lt;/var&gt; must not be supplied if &lt;var&gt;command&lt;/var&gt; is a simple command (see &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;); otherwise, it is interpreted as the first word of the simple command.</source>
          <target state="translated">&lt;var&gt;NAME&lt;/var&gt; 이라는 공동 프로세스가 작성 됩니다. 경우 &lt;var&gt;NAME&lt;/var&gt; 제공되지 않으면 기본 이름입니다 &lt;var&gt;COPROC&lt;/var&gt; . &lt;var&gt;command&lt;/var&gt; 가 간단한 명령 인 경우 &lt;var&gt;NAME&lt;/var&gt; 을 제공하면 안됩니다 ( &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt; 참조 ). 그렇지 않으면 간단한 명령의 첫 단어로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="48dc91286dfb7c3b7f2addb52424c570ab295dc6" translate="yes" xml:space="preserve">
          <source>This defines a shell function named &lt;var&gt;fname&lt;/var&gt;. The reserved word &lt;code&gt;function&lt;/code&gt; is optional. If the &lt;code&gt;function&lt;/code&gt; reserved word is supplied, the parentheses are optional. The &lt;var&gt;body&lt;/var&gt; of the function is the compound command &lt;var&gt;compound-command&lt;/var&gt; (see &lt;a href=&quot;compound-commands&quot;&gt;Compound Commands&lt;/a&gt;). That command is usually a &lt;var&gt;list&lt;/var&gt; enclosed between { and }, but may be any compound command listed above, with one exception: If the &lt;code&gt;function&lt;/code&gt; reserved word is used, but the parentheses are not supplied, the braces are required. &lt;var&gt;compound-command&lt;/var&gt; is executed whenever &lt;var&gt;fname&lt;/var&gt; is specified as the name of a command. When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), &lt;var&gt;fname&lt;/var&gt; must be a valid shell &lt;var&gt;name&lt;/var&gt; and may not be the same as one of the special builtins (see &lt;a href=&quot;special-builtins&quot;&gt;Special Builtins&lt;/a&gt;). In default mode, a function name can be any unquoted shell word that does not contain &amp;lsquo;</source>
          <target state="translated">이것은 &lt;var&gt;fname&lt;/var&gt; 이라는 쉘 함수를 정의합니다 . 예약어 &lt;code&gt;function&lt;/code&gt; 은 선택 사항입니다. 는 IF &lt;code&gt;function&lt;/code&gt; 예약 된 단어가 공급되고, 괄호는 선택 사항입니다. 함수 의 &lt;var&gt;body&lt;/var&gt; 은 복합 명령 &lt;var&gt;compound-command&lt;/var&gt; ( &lt;a href=&quot;compound-commands&quot;&gt;복합 명령&lt;/a&gt; 참조 ). 이 명령은 일반적으로 {와}로 묶인 &lt;var&gt;list&lt;/var&gt; 이지만 위에 나열된 복합 명령이 될 수 있습니다. 단 한 가지 예외가 있습니다. &lt;code&gt;function&lt;/code&gt; 예약어가 사용되지만 괄호가 제공되지 않은 경우 중괄호가 필요합니다. &lt;var&gt;compound-command&lt;/var&gt; 은 &lt;var&gt;fname&lt;/var&gt; 이 명령 이름으로 지정 될 때마다 실행 됩니다. 쉘이 안에있을 때&lt;small&gt;POSIX&lt;/small&gt; 모드 ( &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ), &lt;var&gt;fname&lt;/var&gt; 은 유효한 쉘 &lt;var&gt;name&lt;/var&gt; 이어야하며 특수 내장 기능 중 하나와 동일하지 않을 수 있습니다 ( &lt;a href=&quot;special-builtins&quot;&gt;Special Builtins&lt;/a&gt; 참조 ). 기본 모드에서 함수 이름은 '를 포함하지 않는 인용되지 않은 쉘 단어 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26a80e893b74901379cada236187c32722dce1a2" translate="yes" xml:space="preserve">
          <source>This defines a shell function named &lt;var&gt;name&lt;/var&gt;. The reserved word &lt;code&gt;function&lt;/code&gt; is optional. If the &lt;code&gt;function&lt;/code&gt; reserved word is supplied, the parentheses are optional. The &lt;var&gt;body&lt;/var&gt; of the function is the compound command &lt;var&gt;compound-command&lt;/var&gt; (see &lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;Compound Commands&lt;/a&gt;). That command is usually a &lt;var&gt;list&lt;/var&gt; enclosed between { and }, but may be any compound command listed above, with one exception: If the &lt;code&gt;function&lt;/code&gt; reserved word is used, but the parentheses are not supplied, the braces are required. &lt;var&gt;compound-command&lt;/var&gt; is executed whenever &lt;var&gt;name&lt;/var&gt; is specified as the name of a command. When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), &lt;var&gt;name&lt;/var&gt; may not be the same as one of the special builtins (see &lt;a href=&quot;special-builtins#Special-Builtins&quot;&gt;Special Builtins&lt;/a&gt;). Any redirections (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;) associated with the shell function are performed when the function is executed.</source>
          <target state="translated">이것은 &lt;var&gt;name&lt;/var&gt; 이라는 쉘 함수를 정의합니다 . 예약어 &lt;code&gt;function&lt;/code&gt; 은 선택 사항입니다. 는 IF &lt;code&gt;function&lt;/code&gt; 예약 된 단어가 공급되고, 괄호는 선택 사항입니다. 함수 의 &lt;var&gt;body&lt;/var&gt; 은 복합 명령 &lt;var&gt;compound-command&lt;/var&gt; ( &lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;복합 명령&lt;/a&gt; 참조 ). 이 명령은 일반적으로 {와}로 묶인 &lt;var&gt;list&lt;/var&gt; 이지만 위에 나열된 복합 명령 일 수 있지만 한 가지 예외가 있습니다. &lt;code&gt;function&lt;/code&gt; 예약어를 사용하지만 괄호를 제공하지 않으면 중괄호가 필요합니다. &lt;var&gt;compound-command&lt;/var&gt; 은 &lt;var&gt;name&lt;/var&gt; 이 명령 이름 으로 지정 될 때마다 실행 됩니다. 껍질이 들어있을 때&lt;small&gt;POSIX의&lt;/small&gt; 모드 (참조 &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;배쉬 POSIX 모드&lt;/a&gt; ), &lt;var&gt;name&lt;/var&gt; 특별 내장 매크로 중 하나 (볼과 다를 수 있습니다 &lt;a href=&quot;special-builtins#Special-Builtins&quot;&gt;특수 내장 명령을&lt;/a&gt; ). 상관 리디렉션 (참조 &lt;a href=&quot;redirections#Redirections&quot;&gt;리디렉션&lt;/a&gt; 함수가 실행될 때, 쉘과 연관된 기능)을 수행한다.</target>
        </trans-unit>
        <trans-unit id="72f7f5b4da998ab8df0644c5d407c25a95acfdf5" translate="yes" xml:space="preserve">
          <source>This directive takes a single filename as an argument and reads commands and bindings from that file. For example, the following directive reads from</source>
          <target state="translated">이 지시문은 단일 파일 이름을 인수로 사용하여 해당 파일에서 명령 및 바인딩을 읽습니다. 예를 들어 다음 지시문은</target>
        </trans-unit>
        <trans-unit id="eb6f850de6ffd513c865b9b438b0e19f0d5d333c" translate="yes" xml:space="preserve">
          <source>This enables process substitution (see &lt;a href=&quot;process-substitution&quot;&gt;Process Substitution&lt;/a&gt;) if the operating system provides the necessary support.</source>
          <target state="translated">이 프로세스 치환 (참조 수 있도록 &lt;a href=&quot;process-substitution&quot;&gt;프로세스 대체를&lt;/a&gt; 운영 체제가 필요한 지원을 제공하는 경우).</target>
        </trans-unit>
        <trans-unit id="a5118d015d00e4a360925cba156e434ce747bdac" translate="yes" xml:space="preserve">
          <source>This enables process substitution (see &lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;Process Substitution&lt;/a&gt;) if the operating system provides the necessary support.</source>
          <target state="translated">이 프로세스 치환 (참조 수 있도록 &lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;프로세스 대체를&lt;/a&gt; 운영 체제가 필요한 지원을 제공하는 경우).</target>
        </trans-unit>
        <trans-unit id="70ec920a9b1ef0bd197e2d02cb16baed84fbb992" translate="yes" xml:space="preserve">
          <source>This enables support for multibyte characters if the operating system provides the necessary support.</source>
          <target state="translated">운영 체제가 필요한 지원을 제공 할 경우 멀티 바이트 문자를 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97dee16ab200431034c8965be2124b7b38f80e98" translate="yes" xml:space="preserve">
          <source>This enables the job control features (see &lt;a href=&quot;job-control&quot;&gt;Job Control&lt;/a&gt;), if the operating system supports them.</source>
          <target state="translated">이렇게하면 운영 체제에서 지원하는 경우 작업 제어 기능 ( &lt;a href=&quot;job-control&quot;&gt;작업 제어&lt;/a&gt; 참조)이 활성화 됩니다.</target>
        </trans-unit>
        <trans-unit id="509f335377188e421365bec5bd4d4686ab18e530" translate="yes" xml:space="preserve">
          <source>This enables the job control features (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;), if the operating system supports them.</source>
          <target state="translated">운영 체제에서 지원하는 경우 작업 제어 기능 ( &lt;a href=&quot;job-control#Job-Control&quot;&gt;작업 제어&lt;/a&gt; 참조)을 사용 가능하게 합니다.</target>
        </trans-unit>
        <trans-unit id="f98fed1c7f0cd1e908f69ce14eb5661f744800fc" translate="yes" xml:space="preserve">
          <source>This enables the special handling of filenames of the form &lt;code&gt;/dev/tcp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;/dev/udp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; when used in redirections (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">이렇게하면 리디렉션에 사용되는 경우 &lt;code&gt;/dev/tcp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;/dev/udp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; 형식의 파일 이름을 특수하게 처리 할 수 ​​있습니다 ( &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b69be3ac71af5df7545cc8a700149c2d3ee31783" translate="yes" xml:space="preserve">
          <source>This enables the special handling of filenames of the form &lt;code&gt;/dev/tcp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;/dev/udp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; when used in redirections (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">이 형식의 파일 이름의 특수 처리 수 &lt;code&gt;/dev/tcp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; 와 &lt;code&gt;/dev/udp/&lt;var&gt;host&lt;/var&gt;/&lt;var&gt;port&lt;/var&gt;&lt;/code&gt; 리디렉션 (참조에 사용하는 경우 &lt;a href=&quot;redirections#Redirections&quot;&gt;리디렉션을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8bbf3f5182f8a8c87b2c04c3d26aceee82b5e1a5" translate="yes" xml:space="preserve">
          <source>This environment variable expands to the full pathname to the shell. If it is not set when the shell starts, Bash assigns to it the full pathname of the current user&amp;rsquo;s login shell.</source>
          <target state="translated">이 환경 변수는 셸의 전체 경로 이름으로 확장됩니다. 쉘이 시작될 때 설정되지 않으면 Bash는 현재 사용자 로그인 쉘의 전체 경로 이름을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="40a07c8bd3f0229d20c7c2f39de9b4875eb9f8a8" translate="yes" xml:space="preserve">
          <source>This expansion modifies the case of alphabetic characters in &lt;var&gt;parameter&lt;/var&gt;. The &lt;var&gt;pattern&lt;/var&gt; is expanded to produce a pattern just as in filename expansion. Each character in the expanded value of &lt;var&gt;parameter&lt;/var&gt; is tested against &lt;var&gt;pattern&lt;/var&gt;, and, if it matches the pattern, its case is converted. The pattern should not attempt to match more than one character. The &amp;lsquo;</source>
          <target state="translated">이 확장은 &lt;var&gt;parameter&lt;/var&gt; 의 알파벳 문자를 수정합니다 . &lt;var&gt;pattern&lt;/var&gt; 단지 파일 이름 확장에서 같은 패턴을 생성하기 위해 확장된다. 확장 된 &lt;var&gt;parameter&lt;/var&gt; 값의 각 문자는 &lt;var&gt;pattern&lt;/var&gt; 에 대해 테스트 되며 패턴과 일치하면 대소 문자가 변환됩니다. 패턴은 둘 이상의 문자와 일치하지 않아야합니다. '</target>
        </trans-unit>
        <trans-unit id="d61b2efd68e98c23f7678f3c3ce3e351db3fa92a" translate="yes" xml:space="preserve">
          <source>This function is intended to be bound to the &quot;bracketed paste&quot; escape sequence sent by some terminals, and such a binding is assigned by default. It allows Readline to insert the pasted text as a single unit without treating each character as if it had been read from the keyboard. The characters are inserted as if each one was bound to &lt;code&gt;self-insert&lt;/code&gt; instead of executing any editing commands.</source>
          <target state="translated">이 기능은 일부 터미널에서 전송 한 &quot;브래킷 붙여 넣기&quot;이스케이프 시퀀스에 바인딩되며 이러한 바인딩은 기본적으로 할당됩니다. Readline은 각 문자를 키보드에서 읽은 것처럼 취급하지 않고 붙여 넣은 텍스트를 단일 단위로 삽입 할 수 있습니다. 문자는 편집 명령을 실행하는 대신 각 문자가 자동 ​​삽입되는 것처럼 &lt;code&gt;self-insert&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="9e4672748e5ecd3cd3638310ccff2c686865681f" translate="yes" xml:space="preserve">
          <source>This is Edition 5.0, last updated 12 May 2019, of</source>
          <target state="translated">2019 년 5 월 12 일 마지막으로 업데이트 된 Edition 5.0입니다.</target>
        </trans-unit>
        <trans-unit id="c5b1bcdccc5265dd7abe8fc5192f0709b88061e8" translate="yes" xml:space="preserve">
          <source>This is Edition 5.1, last updated 29 October 2020, of</source>
          <target state="translated">이것은 Edition 5.1이며 2020 년 10 월 29 일에 마지막으로 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="7a06df83bbef351306679950f41296c41140880a" translate="yes" xml:space="preserve">
          <source>This is another way to specify an argument. If this command is followed by one or more digits, optionally with a leading minus sign, those digits define the argument. If the command is followed by digits, executing &lt;code&gt;universal-argument&lt;/code&gt; again ends the numeric argument, but is otherwise ignored. As a special case, if this command is immediately followed by a character that is neither a digit nor minus sign, the argument count for the next command is multiplied by four. The argument count is initially one, so executing this function the first time makes the argument count four, a second time makes the argument count sixteen, and so on. By default, this is not bound to a key.</source>
          <target state="translated">이것은 인수를 지정하는 또 다른 방법입니다. 이 명령 다음에 선택적으로 선행 빼기 부호가있는 하나 이상의 숫자가 오는 경우 해당 숫자는 인수를 정의합니다. 명령 뒤에 숫자가 오는 경우, &lt;code&gt;universal-argument&lt;/code&gt; 다시 실행 하면 숫자 인수가 종료되지만 그렇지 않으면 무시됩니다. 특별한 경우로,이 명령 바로 뒤에 숫자 나 빼기 부호가 아닌 문자가 오는 경우 다음 명령의 인수 수에 4가 곱해집니다. 인수 개수는 처음에는 1이므로이 함수를 처음 실행하면 인수가 4 개가되고, 두 번째로 인수가 16 개가됩니다. 기본적으로 이것은 키에 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73605a5a3bbb20b86fcc0402bec934934a54ffb5" translate="yes" xml:space="preserve">
          <source>This is referred to as Substring Expansion. It expands to up to &lt;var&gt;length&lt;/var&gt; characters of the value of &lt;var&gt;parameter&lt;/var&gt; starting at the character specified by &lt;var&gt;offset&lt;/var&gt;. If &lt;var&gt;parameter&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">이것을 서브 스트링 확장이라고합니다. &lt;var&gt;offset&lt;/var&gt; 에 의해 지정된 문자에서 시작하여 &lt;var&gt;parameter&lt;/var&gt; 값의 최대 &lt;var&gt;length&lt;/var&gt; 문자 까지 확장됩니다 . 만약 &lt;var&gt;parameter&lt;/var&gt; '입니다</target>
        </trans-unit>
        <trans-unit id="151979d05e7240d88bf171daba8f2b58717bcf5a" translate="yes" xml:space="preserve">
          <source>This is semantically equivalent to</source>
          <target state="translated">이것은 의미 적으로</target>
        </trans-unit>
        <trans-unit id="0dbd560b0b0395be077529e37601cdce32273f75" translate="yes" xml:space="preserve">
          <source>This manual is meant as a brief introduction to features found in Bash. The Bash manual page should be used as the definitive reference on shell behavior.</source>
          <target state="translated">이 매뉴얼은 Bash의 기능에 대한 간략한 소개입니다. Bash 매뉴얼 페이지는 쉘 동작에 대한 결정적인 참조로 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3b5ae9533d130fe9a05b744016af901159d98c5f" translate="yes" xml:space="preserve">
          <source>This option applies to the shell environment and each subshell environment separately (see &lt;a href=&quot;command-execution-environment&quot;&gt;Command Execution Environment&lt;/a&gt;), and may cause subshells to exit before executing all the commands in the subshell.</source>
          <target state="translated">이 옵션은 쉘 환경과 각 서브 쉘 환경에 개별적으로 적용되며 ( &lt;a href=&quot;command-execution-environment&quot;&gt;명령 실행 환경&lt;/a&gt; 참조 ) 서브 쉘의 모든 명령을 실행하기 전에 서브 쉘이 종료되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c093e6825af417675783ce091d281a9a95a59153" translate="yes" xml:space="preserve">
          <source>This option applies to the shell environment and each subshell environment separately (see &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;Command Execution Environment&lt;/a&gt;), and may cause subshells to exit before executing all the commands in the subshell.</source>
          <target state="translated">이 옵션은 쉘 환경과 각 서브 쉘 환경에 별도로 적용되며 ( &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;명령 실행 환경&lt;/a&gt; 참조 ) 서브 쉘에서 모든 명령을 실행하기 전에 서브 쉘이 종료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42eafa62609fe5b37b24cded2464d5b80027b3dc" translate="yes" xml:space="preserve">
          <source>This produces a shell with minimal features, close to the historical Bourne shell.</source>
          <target state="translated">이것은 역사적인 Bourne 쉘에 가까운 최소한의 기능을 가진 쉘을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5b7e79b98ec0db3f559f5c9043a8f3f79dc69673" translate="yes" xml:space="preserve">
          <source>This section briefly describes the builtins which Bash inherits from the Bourne Shell, as well as the builtin commands which are unique to or have been extended in Bash.</source>
          <target state="translated">이 섹션에서는 Bash가 Bourne Shell에서 상속 한 내장 기능과 Bash에서 고유하거나 확장 된 내장 명령에 대해 간략하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="900236838a308c08887b885d5f1e0a0a7007f236" translate="yes" xml:space="preserve">
          <source>This section describes Readline commands that may be bound to key sequences. You can list your key bindings by executing &lt;code&gt;bind&amp;nbsp;-P&lt;/code&gt; or, for a more terse format, suitable for an &lt;var&gt;inputrc&lt;/var&gt; file, &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt;. (See &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;.) Command names without an accompanying key sequence are unbound by default.</source>
          <target state="translated">이 섹션에서는 키 시퀀스에 바인딩 될 수있는 Readline 명령에 대해 설명합니다. &lt;code&gt;bind&amp;nbsp;-P&lt;/code&gt; 를 실행하여 키 바인딩을 나열 할 수 있습니다 .보다 간결한 형식의 경우 &lt;var&gt;inputrc&lt;/var&gt; 파일에 적합한 &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; 있습니다. ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins를&lt;/a&gt; 참조하십시오 .) 동반되는 키 시퀀스가없는 명령 이름은 기본적으로 바인딩 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="f6d4766cf4327e831915497c7a2b7779015e37ea" translate="yes" xml:space="preserve">
          <source>This section describes Readline commands that may be bound to key sequences. You can list your key bindings by executing &lt;code&gt;bind&amp;nbsp;-P&lt;/code&gt; or, for a more terse format, suitable for an &lt;var&gt;inputrc&lt;/var&gt; file, &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt;. (See &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;.) Command names without an accompanying key sequence are unbound by default.</source>
          <target state="translated">이 섹션에서는 키 시퀀스에 바인딩 될 수있는 Readline 명령에 대해 설명합니다. &lt;code&gt;bind&amp;nbsp;-P&lt;/code&gt; 또는 더 간결한 형식의 경우 &lt;var&gt;inputrc&lt;/var&gt; 파일에 적합한 &lt;code&gt;bind&amp;nbsp;-p&lt;/code&gt; 를 실행하여 키 바인딩을 나열 할 수 있습니다 . ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 ) 키 시퀀스가없는 명령 이름은 기본적으로 바인딩되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="05c2933a9fb91b2574d1896fdb5a5d064ade83dc" translate="yes" xml:space="preserve">
          <source>This section describes builtin commands which are unique to or have been extended in Bash. Some of these commands are specified in the &lt;small&gt;POSIX&lt;/small&gt; standard.</source>
          <target state="translated">이 섹션에서는 Bash에 고유하거나 확장 된 내장 명령에 대해 설명합니다. 이러한 명령 중 일부는 &lt;small&gt;POSIX&lt;/small&gt; 표준에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="16783acdf4aac8d4ff409d46ce751dd8d4c6f2d8" translate="yes" xml:space="preserve">
          <source>This section describes how Bash executes its startup files. If any of the files exist but cannot be read, Bash reports an error. Tildes are expanded in filenames as described above under Tilde Expansion (see &lt;a href=&quot;tilde-expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 Bash가 시작 파일을 실행하는 방법을 설명합니다. 파일이 존재하지만 읽을 수없는 경우 Bash는 오류를보고합니다. 물결표 확장에서 위에서 설명한대로 물결표는 파일 이름으로 확장됩니다 ( &lt;a href=&quot;tilde-expansion&quot;&gt;물결표 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="021d6317bb52d7c98080712da2ab2b13bfecd196" translate="yes" xml:space="preserve">
          <source>This section describes how Bash executes its startup files. If any of the files exist but cannot be read, Bash reports an error. Tildes are expanded in filenames as described above under Tilde Expansion (see &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">이 섹션에서는 Bash가 시작 파일을 실행하는 방법에 대해 설명합니다. 파일이 있지만 읽을 수없는 경우 Bash는 오류를보고합니다. 물결표는 위에서 물결표 확장에 설명 된대로 파일 이름으로 확장됩니다 ( &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;물결표 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3f151c5c21237c924798b84115f0053c53cfacfd" translate="yes" xml:space="preserve">
          <source>This syntax is also accepted by the &lt;code&gt;declare&lt;/code&gt; builtin. Individual array elements may be assigned to using the &lt;code&gt;&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; syntax introduced above.</source>
          <target state="translated">이 구문은 &lt;code&gt;declare&lt;/code&gt; 내장 선언 에서도 허용됩니다 . 개별 배열 요소는 위에서 소개 된 &lt;code&gt;&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; 구문 을 사용하여 할당 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8200736ff62022947594a20000da454c1425bb2e" translate="yes" xml:space="preserve">
          <source>This text is a brief description of the features that are present in the Bash shell (version 5.0, 12 May 2019). The Bash home page is &lt;a href=&quot;http://www.gnu.org/software/bash/&quot;&gt;http://www.gnu.org/software/bash/&lt;/a&gt;.</source>
          <target state="translated">이 텍스트는 Bash 셸 (버전 5.0, 2019 년 5 월 12 일)에있는 기능에 대한 간략한 설명입니다. Bash 홈페이지는 &lt;a href=&quot;http://www.gnu.org/software/bash/&quot;&gt;http://www.gnu.org/software/bash/&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ae016345a31b25167e2748b2106cdcd2a06a6c7f" translate="yes" xml:space="preserve">
          <source>This text is a brief description of the features that are present in the Bash shell (version 5.1, 29 October 2020). The Bash home page is &lt;a href=&quot;http://www.gnu.org/software/bash/&quot;&gt;http://www.gnu.org/software/bash/&lt;/a&gt;.</source>
          <target state="translated">이 텍스트는 Bash 셸 (버전 5.1, 2020 년 10 월 29 일)에있는 기능에 대한 간략한 설명입니다. Bash 홈페이지는 &lt;a href=&quot;http://www.gnu.org/software/bash/&quot;&gt;http://www.gnu.org/software/bash/&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af2176fd56e6e26401c146d8957b977b88ad4f24" translate="yes" xml:space="preserve">
          <source>This text is a brief description of the features that are present in the Bash shell (version 5.1, 29 October 2020). The Bash home page is &lt;a href=&quot;https://www.gnu.org/software/bash/&quot;&gt;http://www.gnu.org/software/bash/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa36388e8270005983d3c3a89d175634cb9d6d6" translate="yes" xml:space="preserve">
          <source>This type of redirection instructs the shell to read input from the current source until a line containing only &lt;var&gt;word&lt;/var&gt; (with no trailing blanks) is seen. All of the lines read up to that point are then used as the standard input (or file descriptor &lt;var&gt;n&lt;/var&gt; if &lt;var&gt;n&lt;/var&gt; is specified) for a command.</source>
          <target state="translated">이 유형의 방향 재 지정은 &lt;var&gt;word&lt;/var&gt; 만 포함하는 행 (후행 공백 없음)이 표시 될 때까지 쉘이 현재 소스에서 입력을 읽도록 지시합니다 . 해당 지점까지 읽은 모든 행 은 명령 의 표준 입력 (또는 &lt;var&gt;n&lt;/var&gt; 이 지정된 경우 파일 설명자 &lt;var&gt;n&lt;/var&gt; )으로 사용 됩니다 .</target>
        </trans-unit>
        <trans-unit id="48f6e17e8da6cd0eb6bf7fce31b9c51712841200" translate="yes" xml:space="preserve">
          <source>This variable can be set to either &amp;lsquo;</source>
          <target state="translated">이 변수는 '</target>
        </trans-unit>
        <trans-unit id="b898e323bf42516d42d2884eb9c4d9d2c8ecc146" translate="yes" xml:space="preserve">
          <source>This variable can be used with &lt;code&gt;BASH_LINENO&lt;/code&gt; and &lt;code&gt;BASH_SOURCE&lt;/code&gt;. Each element of &lt;code&gt;FUNCNAME&lt;/code&gt; has corresponding elements in &lt;code&gt;BASH_LINENO&lt;/code&gt; and &lt;code&gt;BASH_SOURCE&lt;/code&gt; to describe the call stack. For instance, &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; was called from the file &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; at line number &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt;. The &lt;code&gt;caller&lt;/code&gt; builtin displays the current call stack using this information.</source>
          <target state="translated">이 변수는 &lt;code&gt;BASH_LINENO&lt;/code&gt; 및 &lt;code&gt;BASH_SOURCE&lt;/code&gt; 와 함께 사용할 수 있습니다 . &lt;code&gt;FUNCNAME&lt;/code&gt; 의 각 요소 에는 호출 스택을 설명하기 위해 &lt;code&gt;BASH_LINENO&lt;/code&gt; 및 &lt;code&gt;BASH_SOURCE&lt;/code&gt; 에 해당 요소가 있습니다. 예를 들어 &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; 은 ( 는) 행 번호 &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt; &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; 파일에서 호출되었습니다 . &lt;code&gt;caller&lt;/code&gt; 표시 내장이 정보를 사용하여 현재 호출 스택.</target>
        </trans-unit>
        <trans-unit id="8f621ed80bd0b1d46bf87d748900234c7ee9eaa0" translate="yes" xml:space="preserve">
          <source>This variable controls how the shell interacts with the user and job control. If this variable exists then single word simple commands without redirections are treated as candidates for resumption of an existing job. There is no ambiguity allowed; if there is more than one job beginning with the string typed, then the most recently accessed job will be selected. The name of a stopped job, in this context, is the command line used to start it. If this variable is set to the value &amp;lsquo;</source>
          <target state="translated">이 변수는 쉘이 사용자 및 작업 제어와 상호 작용하는 방법을 제어합니다. 이 변수가 존재하면 경로 재 지정이없는 단일 단어 단순 명령이 기존 작업의 재개 후보로 처리됩니다. 모호성이 허용되지 않습니다. 문자열 유형으로 시작하는 작업이 둘 이상 있으면 가장 최근에 액세스 한 작업이 선택됩니다. 이 컨텍스트에서 중지 된 작업의 이름은 작업을 시작하는 데 사용되는 명령 줄입니다. 이 변수가 '</target>
        </trans-unit>
        <trans-unit id="e58ac964c9ad7ad249ffbff32e2382262903654e" translate="yes" xml:space="preserve">
          <source>This variable determines the collation order used when sorting the results of filename expansion, and determines the behavior of range expressions, equivalence classes, and collating sequences within filename expansion and pattern matching (see &lt;a href=&quot;filename-expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">이 변수는 파일 이름 확장의 결과를 정렬 할 때 사용되는 데이터 정렬 순서를 결정하고 파일 이름 확장 및 패턴 일치 내에서 범위 표현식, 등가 클래스 및 데이터 정렬 시퀀스의 동작을 결정합니다 ( &lt;a href=&quot;filename-expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="322c0f55723ec893e9cb7bfc5a0c27101a72d2f9" translate="yes" xml:space="preserve">
          <source>This variable determines the collation order used when sorting the results of filename expansion, and determines the behavior of range expressions, equivalence classes, and collating sequences within filename expansion and pattern matching (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">이 변수는 파일 이름 확장 결과를 정렬 할 때 사용되는 데이터 정렬 순서를 결정하고 파일 이름 확장 및 패턴 일치 내에서 범위 표현식, 동등 클래스 및 데이터 정렬 시퀀스의 동작을 결정합니다 ( &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="95e7d5eaa101172508fd9f7abb7e95b0fc73923b" translate="yes" xml:space="preserve">
          <source>This variable determines the interpretation of characters and the behavior of character classes within filename expansion and pattern matching (see &lt;a href=&quot;filename-expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">이 변수는 파일 이름 확장 및 패턴 일치 내에서 문자의 해석과 문자 클래스의 동작을 결정합니다 ( &lt;a href=&quot;filename-expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7d0ca062754111dbbfd7e5739986fb58b4a986cd" translate="yes" xml:space="preserve">
          <source>This variable determines the interpretation of characters and the behavior of character classes within filename expansion and pattern matching (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">이 변수는 파일 이름 확장 및 패턴 일치 내에서 문자의 해석 및 문자 클래스의 동작을 결정합니다 ( &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;파일 이름 확장&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="acbe98e6bd7b514b31e99a907e5f0b6515c9aab6" translate="yes" xml:space="preserve">
          <source>This variable determines the locale category used for data and time formatting.</source>
          <target state="translated">이 변수는 데이터 및 시간 형식에 사용되는 로캘 범주를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="3bb0dafe7e2142258af9b9c7fdf74c8aebee47d7" translate="yes" xml:space="preserve">
          <source>This variable determines the locale category used for number formatting.</source>
          <target state="translated">이 변수는 숫자 형식에 사용되는 로캘 범주를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e8a56010968910b59ed93e8bc10f374429422c2c" translate="yes" xml:space="preserve">
          <source>This variable determines the locale used to translate double-quoted strings preceded by a &amp;lsquo;</source>
          <target state="translated">이 변수는 큰 따옴표로 묶은 문자열 앞에 '</target>
        </trans-unit>
        <trans-unit id="e6b7b1d7cb659509a9b298bed27f32af97ca9ff8" translate="yes" xml:space="preserve">
          <source>This variable expands to a 32-bit pseudo-random number each time it is referenced. The random number generator is not linear on systems that support</source>
          <target state="translated">이 변수는 참조 될 때마다 32 비트 의사 난수로 확장됩니다. 난수 생성기는 다음을 지원하는 시스템에서 선형이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="86ab35dc0367a2aaa05d2986dc008b4f6d6c1c34" translate="yes" xml:space="preserve">
          <source>This variable expands to the number of seconds since the shell was started. Assignment to this variable resets the count to the value assigned, and the expanded value becomes the value assigned plus the number of seconds since the assignment.</source>
          <target state="translated">이 변수는 쉘이 시작된 이후의 시간 (초)으로 확장됩니다. 이 변수에 할당하면 카운트가 할당 된 값으로 재설정되고 확장 된 값은 할당 된 값에 할당 이후의 초 수를 더한 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="f31f5c8ca78eedbd5449d6cf16de3505b855b2c1" translate="yes" xml:space="preserve">
          <source>This variable expands to the number of seconds since the shell was started. Assignment to this variable resets the count to the value assigned, and the expanded value becomes the value assigned plus the number of seconds since the assignment. The number of seconds at shell invocation and the current time is always determined by querying the system clock. If &lt;code&gt;SECONDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">이 변수는 쉘이 시작된 이후의 시간 (초)으로 확장됩니다. 이 변수에 할당하면 카운트가 할당 된 값으로 재설정되고 확장 된 값은 할당 된 값에 할당 이후의 시간 (초)을 더한 값이됩니다. 쉘 호출시 시간 (초)과 현재 시간은 항상 시스템 시계를 조회하여 결정됩니다. 경우 &lt;code&gt;SECONDS&lt;/code&gt; 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="d2d0578e878088aefbfca4ced87f5d6f4c523b5a" translate="yes" xml:space="preserve">
          <source>This variable overrides the value of &lt;code&gt;LANG&lt;/code&gt; and any other &lt;code&gt;LC_&lt;/code&gt; variable specifying a locale category.</source>
          <target state="translated">이 변수는 &lt;code&gt;LANG&lt;/code&gt; 및 로케일 범주를 지정하는 다른 &lt;code&gt;LC_&lt;/code&gt; 변수 의 값을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e3c7c3129c1796756c2de28b0ac178af8b1d5551" translate="yes" xml:space="preserve">
          <source>This variable, when set to &amp;lsquo;</source>
          <target state="translated">이 변수는 '</target>
        </trans-unit>
        <trans-unit id="8c0a82cc0c0acb81621c0e8a8ea0c1b101cf2241" translate="yes" xml:space="preserve">
          <source>This will recompress all files in the current directory with names ending in .gz using bzip2, running one job per CPU (-j+0) in parallel. (We use &lt;code&gt;ls&lt;/code&gt; for brevity here; using &lt;code&gt;find&lt;/code&gt; as above is more robust in the face of filenames containing unexpected characters.) Parallel can take arguments from the command line; the above can also be written as</source>
          <target state="translated">이것은 bzip2를 사용하여 .gz로 끝나는 현재 디렉토리의 모든 파일을 CPU 당 하나의 작업 (-j + 0)으로 병렬로 다시 압축합니다. 여기서는 간결성을 위해 &lt;code&gt;ls&lt;/code&gt; 를 사용 합니다. 예기치 않은 문자가 포함 된 파일 이름의 경우 위와 같이 &lt;code&gt;find&lt;/code&gt; 를 사용하는 것이 더 강력합니다. Parallel은 명령 줄에서 인수를 사용할 수 있습니다. 위와 같이 쓸 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="8ad4bbea3750b4693e3ab30e9e81cb36dd009c76" translate="yes" xml:space="preserve">
          <source>This will run as many &lt;code&gt;mv&lt;/code&gt; commands as there are files in the current directory. You can emulate a parallel &lt;code&gt;xargs&lt;/code&gt; by adding the</source>
          <target state="translated">현재 디렉토리에 파일이있는만큼 &lt;code&gt;mv&lt;/code&gt; 명령 이 실행됩니다 . 추가하여 병렬 &lt;code&gt;xargs&lt;/code&gt; 를 에뮬레이션 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="73fa1b98e98d236ed8d9007a8b27f06db355f7c3" translate="yes" xml:space="preserve">
          <source>Three builtin commands are available to manipulate the programmable completion facilities: one to specify how the arguments to a particular command are to be completed, and two to modify the completion as it is happening.</source>
          <target state="translated">프로그램 가능 완료 기능을 조작하기 위해 세 가지 기본 제공 명령을 사용할 수 있습니다. 하나는 특정 명령에 대한 인수를 완료하는 방법을 지정하고, 하나는 완료 될 때 완료를 수정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5d1f96e557614b0a690090f9dca6f209f6c0274d" translate="yes" xml:space="preserve">
          <source>Tilde Expansion</source>
          <target state="translated">물결 확장</target>
        </trans-unit>
        <trans-unit id="29a0154a26a0aa025c65e57ccd5615d5132587a5" translate="yes" xml:space="preserve">
          <source>Tilde expansion is only performed on assignments preceding a command name, rather than on all assignment statements on the line.</source>
          <target state="translated">틸드 확장은 라인의 모든 할당 문이 아닌 명령 이름 앞에있는 할당에서만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8ccacd4d99966dea93ed7cd2d116b2ebac5faf9f" translate="yes" xml:space="preserve">
          <source>To determine within a startup script whether or not Bash is running interactively, test the value of the &amp;lsquo;</source>
          <target state="translated">시작 스크립트 내에서 Bash가 대화식으로 실행 중인지 여부를 판별하려면 '</target>
        </trans-unit>
        <trans-unit id="c06441f5639bd713ff8f6ee1faf86ceaf5fadf3d" translate="yes" xml:space="preserve">
          <source>To facilitate the implementation of the user interface to job control, the operating system maintains the notion of a current terminal process group &lt;small&gt;ID&lt;/small&gt;. Members of this process group (processes whose process group &lt;small&gt;ID&lt;/small&gt; is equal to the current terminal process group &lt;small&gt;ID&lt;/small&gt;) receive keyboard-generated signals such as &lt;code&gt;SIGINT&lt;/code&gt;. These processes are said to be in the foreground. Background processes are those whose process group &lt;small&gt;ID&lt;/small&gt; differs from the terminal&amp;rsquo;s; such processes are immune to keyboard-generated signals. Only foreground processes are allowed to read from or, if the user so specifies with &lt;code&gt;stty tostop&lt;/code&gt;, write to the terminal. Background processes which attempt to read from (write to when &lt;code&gt;stty tostop&lt;/code&gt; is in effect) the terminal are sent a &lt;code&gt;SIGTTIN&lt;/code&gt; (&lt;code&gt;SIGTTOU&lt;/code&gt;) signal by the kernel&amp;rsquo;s terminal driver, which, unless caught, suspends the process.</source>
          <target state="translated">작업 제어에 대한 사용자 인터페이스 구현을 용이하게하기 위해 운영 체제는 현재 터미널 프로세스 그룹 &lt;small&gt;ID&lt;/small&gt; 개념을 유지합니다 . 이 프로세스 그룹의 멤버 (프로세스 그룹 &lt;small&gt;ID&lt;/small&gt; 가 현재 터미널 프로세스 그룹 &lt;small&gt;ID와&lt;/small&gt; 동일한 프로세스 )는 &lt;code&gt;SIGINT&lt;/code&gt; 와 같은 키보드 생성 신호를 수신 합니다. 이러한 프로세스는 포 그라운드에 있다고합니다. 백그라운드 프로세스는 프로세스 그룹 &lt;small&gt;ID&lt;/small&gt; 가 터미널과 다른 프로세스입니다 . 이러한 프로세스는 키보드 생성 신호에 영향을받지 않습니다. 사용자가 &lt;code&gt;stty tostop&lt;/code&gt; 으로 지정한 경우 포 그라운드 프로세스 만 읽을 수 있습니다.터미널에 씁니다. &lt;code&gt;stty tostop&lt;/code&gt; 이 유효 할 때 쓰기를 시도하는 백그라운드 프로세스 는 커널 터미널 드라이버에 의해 &lt;code&gt;SIGTTIN&lt;/code&gt; ( &lt;code&gt;SIGTTOU&lt;/code&gt; ) 신호를 보내며 ,이 프로세스는 잡히지 않으면 프로세스를 일시 중단합니다.</target>
        </trans-unit>
        <trans-unit id="7461bebceaba8e9786a438f43be22c208daad744" translate="yes" xml:space="preserve">
          <source>To find other matching entries in the history list, type</source>
          <target state="translated">기록 목록에서 일치하는 다른 항목을 찾으려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="30be0318ce7f5e48f6f8aebb72ff5f9a498e339c" translate="yes" xml:space="preserve">
          <source>To find out more about the options and arguments that the &lt;code&gt;configure&lt;/code&gt; script understands, type</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 스크립트가 이해 하는 옵션 및 인수에 대한 자세한 내용을 보려면</target>
        </trans-unit>
        <trans-unit id="234871e08b6f492490e17c79f3e3c9f389f0019c" translate="yes" xml:space="preserve">
          <source>To use this License in a document you have written, include a copy of the License in the document and put the following copyright and license notices just after the title page:</source>
          <target state="translated">귀하가 작성한 문서에서이 라이센스를 사용하려면 문서에 라이센스의 사본을 포함시키고 제목 페이지 바로 뒤에 다음 저작권 및 라이센스 고지를 두십시오.</target>
        </trans-unit>
        <trans-unit id="1c79fb4cfb10162b75bfbf4f221b1bd3dea706fd" translate="yes" xml:space="preserve">
          <source>Toggle overwrite mode. With an explicit positive numeric argument, switches to overwrite mode. With an explicit non-positive numeric argument, switches to insert mode. This command affects only &lt;code&gt;emacs&lt;/code&gt; mode; &lt;code&gt;vi&lt;/code&gt; mode does overwrite differently. Each call to &lt;code&gt;readline()&lt;/code&gt; starts in insert mode.</source>
          <target state="translated">덮어 쓰기 모드를 전환합니다. 명시적인 양수 인수를 사용하면 덮어 쓰기 모드로 전환됩니다. 명시적인 비 양수 숫자 인수를 사용하여 삽입 모드로 전환합니다. 이 명령은 &lt;code&gt;emacs&lt;/code&gt; 모드 에만 영향을줍니다 . &lt;code&gt;vi&lt;/code&gt; 모드는 다르게 덮어 씁니다. &lt;code&gt;readline()&lt;/code&gt; 각 호출 은 삽입 모드에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="64173d2188c9be0ec9ff6bb79881f697e1bff5ed" translate="yes" xml:space="preserve">
          <source>Toggle the values of settings controlling optional shell behavior. The settings can be either those listed below, or, if the</source>
          <target state="translated">선택적 쉘 동작을 제어하는 ​​설정 값을 토글합니다. 설정은 아래에 나열된 설정이거나</target>
        </trans-unit>
        <trans-unit id="db14d824e8eb47798dded3ebab911e7aba6462ac" translate="yes" xml:space="preserve">
          <source>Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail.</source>
          <target state="translated">번역은 일종의 수정으로 간주되므로 섹션 4의 조항에 따라 문서의 번역을 배포 할 수 있습니다. 변하지 않는 섹션을 번역으로 바꾸려면 저작권 보유자의 특별한 허가가 필요하지만 일부 또는 모든 불변 섹션의 번역을 포함 할 수 있습니다 이 고정 섹션의 원래 버전. 본 라이센스의 원본 영어 버전과 해당 통지 및 책임의 원래 버전도 포함하는 경우,이 라이센스의 번역, 문서의 모든 라이센스 공지 및 모든 보증 부인을 포함 할 수 있습니다. 번역과 본 라이센스의 원본 버전 또는 통지 또는 고지 사항간에 의견이 일치하지 않을 경우 원본 버전이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="25b56e8610a80aa4c358553af9d469a2389a0d0b" translate="yes" xml:space="preserve">
          <source>Treat unset variables and parameters other than the special parameters &amp;lsquo;</source>
          <target state="translated">특수 매개 변수 이외의 설정되지 않은 변수 및 매개 변수 처리</target>
        </trans-unit>
        <trans-unit id="c576040022ef2d3ed4c5cfb729ef747257d3d0c6" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;expr&lt;/var&gt; is false.</source>
          <target state="translated">진정한 경우 &lt;var&gt;expr&lt;/var&gt; false입니다.</target>
        </trans-unit>
        <trans-unit id="c1e09b47a41f17423a47403dc34af583d967ced8" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;expression&lt;/var&gt; is false.</source>
          <target state="translated">&lt;var&gt;expression&lt;/var&gt; 거짓 이면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="1dfe2b86c7856ed0672b49f8031ca7598cd2e53a" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file1&lt;/var&gt; and &lt;var&gt;file2&lt;/var&gt; refer to the same device and inode numbers.</source>
          <target state="translated">&lt;var&gt;file1&lt;/var&gt; 과 &lt;var&gt;file2&lt;/var&gt; 가 동일한 장치 및 inode 번호를 참조 하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="1931c6818bb80999d31b4895be8e1032a0090a5a" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file1&lt;/var&gt; is newer (according to modification date) than &lt;var&gt;file2&lt;/var&gt;, or if &lt;var&gt;file1&lt;/var&gt; exists and &lt;var&gt;file2&lt;/var&gt; does not.</source>
          <target state="translated">&lt;var&gt;file1&lt;/var&gt; 이 &lt;var&gt;file2&lt;/var&gt; 보다 최신 이거나 ( 수정 날짜에 따라) &lt;var&gt;file1&lt;/var&gt; 이 있고 &lt;var&gt;file2&lt;/var&gt; 가없는 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="32482cdb8a0a8c00990d2254409eb0064fa456e0" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file1&lt;/var&gt; is older than &lt;var&gt;file2&lt;/var&gt;, or if &lt;var&gt;file2&lt;/var&gt; exists and &lt;var&gt;file1&lt;/var&gt; does not.</source>
          <target state="translated">&lt;var&gt;file1&lt;/var&gt; 이 &lt;var&gt;file2&lt;/var&gt; 보다 오래된 경우 또는 &lt;var&gt;file2&lt;/var&gt; 가 존재하고 &lt;var&gt;file1&lt;/var&gt; 이없는 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="4f29d31c4b26c9c972f26d19960ae09b504edcc2" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and has a size greater than zero.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 크기가 0보다 크면 True 입니다.</target>
        </trans-unit>
        <trans-unit id="a58e629fec5bb0f7399ff14c07ac493c7af547e4" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and has been modified since it was last read.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 마지막으로 읽은 이후 수정 된 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="ff555302ffe9977d7e774f403778a2b43ca9e6fb" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a block special file.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 블록 특수 파일 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="785fff67e549edee63f87e13610d25e06e563134" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a character special file.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 문자 특수 파일 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="32250a9f0fb33fa74e350624e933c3af0031a469" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a directory.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 디렉토리 이면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="672fc8348e4d811dca287144bf4afc66b5779262" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a named pipe (FIFO).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 명명 된 파이프 (FIFO) 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="398d1fa760f00f29d01a407c21ca50fafe5950e2" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a regular file.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 일반 파일 인 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="915744ff671beed3f722bd4d5fc6716b115eef67" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a socket.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 소켓 인 경우에 해당 됩니다 .</target>
        </trans-unit>
        <trans-unit id="017980389fddb5aadceb3bc6336ea0d3b25f926b" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is a symbolic link.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 기호 링크 인 경우에 해당 됩니다 .</target>
        </trans-unit>
        <trans-unit id="303e1abad6194c1fd1d818c1476426963f0229e4" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is executable.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 실행 가능한 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="cdb2fca38caf968e64be89bc93da5ca5dbbab94c" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is owned by the effective group id.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 유효 그룹 ID가 소유 한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="536aa1f6ed6018a92c953af3d3892c3285094b46" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is owned by the effective user id.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 유효 사용자 ID가 소유 한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="86d461baa0cc35b80042a133d8520dbb853cdc36" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is readable.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 읽을 수 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="f7aaebd5416f1b8c71b2067cff350417cc28cd41" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and is writable.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재하고 쓰기 가능한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="f35727abb72a043fc58a69af5b10c3bdcdce008a" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and its &quot;sticky&quot; bit is set.</source>
          <target state="translated">진정한 경우 &lt;var&gt;file&lt;/var&gt; 존재 해, &quot;끈적 끈적한&quot;비트가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7401f1886dca5f7578d9880d8abf714b6e397264" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and its set-group-id bit is set.</source>
          <target state="translated">true의 경우 &lt;var&gt;file&lt;/var&gt; 존재 해, 그 설정 그룹-ID 비트가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="64cb08c3d3b10e3c1f58c6df08810878e2be1bac" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists and its set-user-id bit is set.</source>
          <target state="translated">진정한 경우 &lt;var&gt;file&lt;/var&gt; 존재 해, 그 설정 사용자-ID 비트가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0ad8ede1f5901af4ead70e5e4f5ffea0dff96af3" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; exists.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 존재 하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="a694844e564143deec0005453edfce994f46f41f" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;string1&lt;/var&gt; sorts after &lt;var&gt;string2&lt;/var&gt; lexicographically.</source>
          <target state="translated">&lt;var&gt;string1&lt;/var&gt; 이 사전 순으로 &lt;var&gt;string2&lt;/var&gt; 다음에 정렬 되면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="2eaf782c48f4f232fd972b24507c8090e33acfd0" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;string1&lt;/var&gt; sorts before &lt;var&gt;string2&lt;/var&gt; lexicographically.</source>
          <target state="translated">&lt;var&gt;string1&lt;/var&gt; 이 사전 순으로 &lt;var&gt;string2&lt;/var&gt; 보다 먼저 정렬 되면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="dfd0ae4f41de5a24984c76e4ec506bbf5ead35fe" translate="yes" xml:space="preserve">
          <source>True if both &lt;var&gt;expr1&lt;/var&gt; and &lt;var&gt;expr2&lt;/var&gt; are true.</source>
          <target state="translated">사실 두 경우 &lt;var&gt;expr1&lt;/var&gt; 을 하고 &lt;var&gt;expr2&lt;/var&gt; 이이 사실이다.</target>
        </trans-unit>
        <trans-unit id="8f65766fae75b0ca98aa32ef28e4297c6e10769f" translate="yes" xml:space="preserve">
          <source>True if both &lt;var&gt;expression1&lt;/var&gt; and &lt;var&gt;expression2&lt;/var&gt; are true.</source>
          <target state="translated">사실 두 경우 &lt;var&gt;expression1&lt;/var&gt; 및 &lt;var&gt;expression2&lt;/var&gt; 가 해당.</target>
        </trans-unit>
        <trans-unit id="9ca4bbaac189fe4ef1c7494e1ad83de3cf6af5b6" translate="yes" xml:space="preserve">
          <source>True if either &lt;var&gt;expr1&lt;/var&gt; or &lt;var&gt;expr2&lt;/var&gt; is true.</source>
          <target state="translated">사실 어느 경우 &lt;var&gt;expr1&lt;/var&gt; 을 또는 &lt;var&gt;expr2&lt;/var&gt; 이는 사실이다.</target>
        </trans-unit>
        <trans-unit id="db68e589c03d9400814cc445d96c1dc4310f307f" translate="yes" xml:space="preserve">
          <source>True if either &lt;var&gt;expression1&lt;/var&gt; or &lt;var&gt;expression2&lt;/var&gt; is true.</source>
          <target state="translated">사실 어느 경우 &lt;var&gt;expression1&lt;/var&gt; 또는 &lt;var&gt;expression2&lt;/var&gt; 를는 사실이다.</target>
        </trans-unit>
        <trans-unit id="5c8258be0a5a3c372a9f45bc293f8b281921f601" translate="yes" xml:space="preserve">
          <source>True if file descriptor &lt;var&gt;fd&lt;/var&gt; is open and refers to a terminal.</source>
          <target state="translated">파일 디스크립터 &lt;var&gt;fd&lt;/var&gt; 가 열려 있고 터미널을 참조 하면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="dac97a4e44b66a08100ff32dd6db743cd8d30e14" translate="yes" xml:space="preserve">
          <source>True if the length of &lt;var&gt;string&lt;/var&gt; is non-zero.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 길이가 0이 아닌 경우 참 입니다.</target>
        </trans-unit>
        <trans-unit id="3f209d388a9f63e0cf9fc44924f1c6cc1fcf816a" translate="yes" xml:space="preserve">
          <source>True if the length of &lt;var&gt;string&lt;/var&gt; is zero.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 길이 가 0 이면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="9755b366b236842b5acd5a1bb0f3c4e786f2da82" translate="yes" xml:space="preserve">
          <source>True if the shell option &lt;var&gt;optname&lt;/var&gt; is enabled. The list of options appears in the description of the</source>
          <target state="translated">쉘 옵션 &lt;var&gt;optname&lt;/var&gt; 이 사용 가능한 경우 true 입니다. 옵션 목록이</target>
        </trans-unit>
        <trans-unit id="095ba591e289192519c99cde5accd02885f7161e" translate="yes" xml:space="preserve">
          <source>True if the shell variable &lt;var&gt;varname&lt;/var&gt; is set (has been assigned a value).</source>
          <target state="translated">쉘 변수 &lt;var&gt;varname&lt;/var&gt; 이 설정되어 있으면 (값이 할당 된 경우) true 입니다.</target>
        </trans-unit>
        <trans-unit id="98cfa3f65eadea23036a451a78c852c151c553c7" translate="yes" xml:space="preserve">
          <source>True if the shell variable &lt;var&gt;varname&lt;/var&gt; is set and is a name reference.</source>
          <target state="translated">쉘 변수 &lt;var&gt;varname&lt;/var&gt; 이 설정되어 있고 이름 참조 인 경우 참입니다.</target>
        </trans-unit>
        <trans-unit id="25dcdab3acba62b7a44dd40e3255c75a4c9040b5" translate="yes" xml:space="preserve">
          <source>True if the strings are equal. When used with the &lt;code&gt;[[&lt;/code&gt; command, this performs pattern matching as described above (see &lt;a href=&quot;conditional-constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">문자열이 같으면 참. &lt;code&gt;[[&lt;/code&gt; 명령 과 함께 사용하면 위에서 설명한대로 패턴 일치를 수행합니다 ( &lt;a href=&quot;conditional-constructs&quot;&gt;조건부&lt;/a&gt; 구문 참조 ).</target>
        </trans-unit>
        <trans-unit id="87550cc27a4d851c58589edab9351918b2c6e70e" translate="yes" xml:space="preserve">
          <source>True if the strings are equal. When used with the &lt;code&gt;[[&lt;/code&gt; command, this performs pattern matching as described above (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">문자열이 같으면 참입니다. &lt;code&gt;[[&lt;/code&gt; 명령 과 함께 사용하면 위에서 설명한대로 패턴 일치를 수행합니다 ( &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;조건부 구성&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="901d788cb9c954e0e3bc5acc54c4b07a8234d973" translate="yes" xml:space="preserve">
          <source>True if the strings are not equal.</source>
          <target state="translated">문자열이 같지 않으면 참입니다.</target>
        </trans-unit>
        <trans-unit id="7ba597c4ba706a33ba89181ef140d5de6ce00b1f" translate="yes" xml:space="preserve">
          <source>Turn on privileged mode. In this mode, the &lt;code&gt;$BASH_ENV&lt;/code&gt; and &lt;code&gt;$ENV&lt;/code&gt; files are not processed, shell functions are not inherited from the environment, and the &lt;code&gt;SHELLOPTS&lt;/code&gt;, &lt;code&gt;BASHOPTS&lt;/code&gt;, &lt;code&gt;CDPATH&lt;/code&gt; and &lt;code&gt;GLOBIGNORE&lt;/code&gt; variables, if they appear in the environment, are ignored. If the shell is started with the effective user (group) id not equal to the real user (group) id, and the</source>
          <target state="translated">권한 모드를 켜십시오. 이 모드에서는 &lt;code&gt;$BASH_ENV&lt;/code&gt; 및 &lt;code&gt;$ENV&lt;/code&gt; 파일이 처리되지 않고 셸 함수가 환경에서 상속되지 않으며 &lt;code&gt;SHELLOPTS&lt;/code&gt; , &lt;code&gt;BASHOPTS&lt;/code&gt; , &lt;code&gt;CDPATH&lt;/code&gt; 및 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 변수가 환경에 나타나는 경우 무시됩니다. 유효 사용자 (그룹) ID가 실제 사용자 (그룹) ID와 같지 않은 상태로 쉘이 시작된 경우</target>
        </trans-unit>
        <trans-unit id="6ff7d27e2fdf3c7d1f41f8ef2274dc6d3687f3a5" translate="yes" xml:space="preserve">
          <source>Turn on the interpretation of a number of backslash-escaped characters in the &lt;code&gt;$PS0&lt;/code&gt;, &lt;code&gt;$PS1&lt;/code&gt;, &lt;code&gt;$PS2&lt;/code&gt;, and &lt;code&gt;$PS4&lt;/code&gt; prompt strings. See &lt;a href=&quot;controlling-the-prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;, for a complete list of prompt string escape sequences.</source>
          <target state="translated">&lt;code&gt;$PS0&lt;/code&gt; , &lt;code&gt;$PS1&lt;/code&gt; , &lt;code&gt;$PS2&lt;/code&gt; 및 &lt;code&gt;$PS4&lt;/code&gt; 프롬프트 문자열 에서 여러 백 슬래시 이스케이프 문자의 해석을 켭니다 . 프롬프트 문자열 이스케이프 시퀀스의 전체 목록은 프롬프트 &lt;a href=&quot;controlling-the-prompt&quot;&gt;제어를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="529cc456a0b2e03b61877af15a727605fcc2878b" translate="yes" xml:space="preserve">
          <source>Turn on the interpretation of a number of backslash-escaped characters in the &lt;code&gt;$PS0&lt;/code&gt;, &lt;code&gt;$PS1&lt;/code&gt;, &lt;code&gt;$PS2&lt;/code&gt;, and &lt;code&gt;$PS4&lt;/code&gt; prompt strings. See &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;, for a complete list of prompt string escape sequences.</source>
          <target state="translated">&lt;code&gt;$PS0&lt;/code&gt; , &lt;code&gt;$PS1&lt;/code&gt; , &lt;code&gt;$PS2&lt;/code&gt; 및 &lt;code&gt;$PS4&lt;/code&gt; 프롬프트 문자열 에서 다수의 백 슬래시 이스케이프 문자 해석을 설정하십시오 . 프롬프트 문자열 이스케이프 시퀀스의 전체 목록은 프롬프트 &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;제어를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3795902d765dfd462c8684fb196a720749ac4df0" translate="yes" xml:space="preserve">
          <source>Turning off restricted mode with &amp;lsquo;</source>
          <target state="translated">'를 사용하여 제한 모드 끄기</target>
        </trans-unit>
        <trans-unit id="c1d93843f852e85798d20eeb3cdc905a4fa50479" translate="yes" xml:space="preserve">
          <source>Two-way communication between commands.</source>
          <target state="translated">명령 간 양방향 통신</target>
        </trans-unit>
        <trans-unit id="4b4d91bc73387f9d4d807d8dd6507627174593ea" translate="yes" xml:space="preserve">
          <source>Type &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="d946adf52a4783929f122d341b29ac0fe188371c" translate="yes" xml:space="preserve">
          <source>UID</source>
          <target state="translated">UID</target>
        </trans-unit>
        <trans-unit id="d3ec7720c14cebb138c6a1ef57a0eb2ea1e40a65" translate="yes" xml:space="preserve">
          <source>Unbind all keys bound to the named &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">명명 된 &lt;var&gt;function&lt;/var&gt; 바인딩 된 모든 키를 바인딩 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="a09912a5a17af809447f38efa5d4c0b6c0ec7c06" translate="yes" xml:space="preserve">
          <source>Undo all changes made to this line. This is like executing the &lt;code&gt;undo&lt;/code&gt; command enough times to get back to the beginning.</source>
          <target state="translated">이 줄의 모든 변경 사항을 취소하십시오. 이것은 처음으로 돌아 가기 위해 충분한 시간 동안 &lt;code&gt;undo&lt;/code&gt; 명령을 실행하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6012c0f2d0e2bd7f7010ec2b337685770c24679e" translate="yes" xml:space="preserve">
          <source>Undo the last editing command. You can undo all the way back to an empty line.</source>
          <target state="translated">마지막 편집 명령을 취소하십시오. 빈 줄로 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c7021edb2aa70f462455b960f49f5a5410323a4" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, each builtin command documented as accepting options preceded by &amp;lsquo;</source>
          <target state="translated">별도의 언급이없는 한, 각 내장 명령은 옵션 앞에 '</target>
        </trans-unit>
        <trans-unit id="d754bbd613ae92596fbe8c352f9060939b1fa5db" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the &lt;code&gt;shopt&lt;/code&gt; options are disabled (off) by default.</source>
          <target state="translated">달리 명시되지 않는 한, &lt;code&gt;shopt&lt;/code&gt; 옵션은 기본적으로 비활성화되어 있습니다 (꺼짐).</target>
        </trans-unit>
        <trans-unit id="ac9ca0e57a5feba07a2f16b1b29d2a12e00b69b2" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, primaries that operate on files follow symbolic links and operate on the target of the link, rather than the link itself.</source>
          <target state="translated">달리 지정하지 않는 한 파일에서 작동하는 기본은 링크 자체가 아닌 심볼릭 링크를 따라 링크의 대상에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3489e75b130d63030b5acfa5f4c8708dc7f7d92f" translate="yes" xml:space="preserve">
          <source>Up to three characters which control history expansion, quick substitution, and tokenization (see &lt;a href=&quot;history-interaction&quot;&gt;History Interaction&lt;/a&gt;). The first character is the &lt;var&gt;history expansion&lt;/var&gt; character, that is, the character which signifies the start of a history expansion, normally &amp;lsquo;</source>
          <target state="translated">히스토리 확장, 빠른 대체 및 토큰 화를 제어하는 ​​최대 3 개의 문자 ( &lt;a href=&quot;history-interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ). 첫 번째 문자는 &lt;var&gt;history expansion&lt;/var&gt; 문자, 즉 역사 확장 의 시작을 나타내는 문자이며 일반적으로 '</target>
        </trans-unit>
        <trans-unit id="bf5bef4f6cefc24fd54a3710a491f1aee7ad8db0" translate="yes" xml:space="preserve">
          <source>Up to three characters which control history expansion, quick substitution, and tokenization (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;). The first character is the &lt;var&gt;history expansion&lt;/var&gt; character, that is, the character which signifies the start of a history expansion, normally &amp;lsquo;</source>
          <target state="translated">히스토리 확장, 빠른 대체 및 토큰 화를 제어하는 ​​최대 3 자 ( &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;히스토리 상호 작용&lt;/a&gt; 참조 ). 첫 번째 문자는 &lt;var&gt;history expansion&lt;/var&gt; 문자입니다. 즉, 히스토리 확장 의 시작을 나타내는 문자입니다. 일반적으로 '</target>
        </trans-unit>
        <trans-unit id="1467b55bf83d8f146d9cbd0dbde2ea1dffe5d0ca" translate="yes" xml:space="preserve">
          <source>Uppercase the current (or following) word. With a negative argument, uppercase the previous word, but do not move the cursor.</source>
          <target state="translated">현재 (또는 다음) 단어를 대문자로 바꿉니다. 음수 인수를 사용하면 이전 단어는 대문자이지만 커서를 움직이지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9e5d9a89497ab86de574d743d1c130d84137f4f1" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;keymap&lt;/var&gt; as the keymap to be affected by the subsequent bindings. Acceptable &lt;var&gt;keymap&lt;/var&gt; names are &lt;code&gt;emacs&lt;/code&gt;, &lt;code&gt;emacs-standard&lt;/code&gt;, &lt;code&gt;emacs-meta&lt;/code&gt;, &lt;code&gt;emacs-ctlx&lt;/code&gt;, &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;vi-move&lt;/code&gt;, &lt;code&gt;vi-command&lt;/code&gt;, and &lt;code&gt;vi-insert&lt;/code&gt;. &lt;code&gt;vi&lt;/code&gt; is equivalent to &lt;code&gt;vi-command&lt;/code&gt; (&lt;code&gt;vi-move&lt;/code&gt; is also a synonym); &lt;code&gt;emacs&lt;/code&gt; is equivalent to &lt;code&gt;emacs-standard&lt;/code&gt;.</source>
          <target state="translated">후속 바인딩에 의해 영향을받을 키맵을 &lt;var&gt;keymap&lt;/var&gt; 으로 사용하십시오 . 허용되는 &lt;var&gt;keymap&lt;/var&gt; 이름은 &lt;code&gt;emacs&lt;/code&gt; , &lt;code&gt;emacs-standard&lt;/code&gt; , &lt;code&gt;emacs-meta&lt;/code&gt; , &lt;code&gt;emacs-ctlx&lt;/code&gt; , &lt;code&gt;vi&lt;/code&gt; , &lt;code&gt;vi-move&lt;/code&gt; , &lt;code&gt;vi-command&lt;/code&gt; 및 &lt;code&gt;vi-insert&lt;/code&gt; 입니다. &lt;code&gt;vi&lt;/code&gt; 는 &lt;code&gt;vi-command&lt;/code&gt; 과 같습니다 ( &lt;code&gt;vi-move&lt;/code&gt; 는 동의어입니다). &lt;code&gt;emacs&lt;/code&gt; 는 &lt;code&gt;emacs-standard&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7e07f77c9239bf54a759e369906e3a404f76bbe3" translate="yes" xml:space="preserve">
          <source>Use Readline&amp;rsquo;s default filename completion if the compspec generates no matches.</source>
          <target state="translated">compspec이 일치 항목을 생성하지 않으면 Readline의 기본 파일 이름 완성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e13efcca92d8c2088b064f9a0d824489242298ce" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;vi&lt;/code&gt;-style line editing interface. This also affects the editing interface used for &lt;code&gt;read -e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vi&lt;/code&gt; 스타일 라인 편집 인터페이스를 사용하십시오 . 이것은 &lt;code&gt;read -e&lt;/code&gt; 사용되는 편집 인터페이스에도 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="9d8792f622d21db0abb113c97af14d0a618ec153" translate="yes" xml:space="preserve">
          <source>Use an &lt;code&gt;emacs&lt;/code&gt;-style line editing interface (see &lt;a href=&quot;command-line-editing&quot;&gt;Command Line Editing&lt;/a&gt;). This also affects the editing interface used for &lt;code&gt;read -e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;emacs&lt;/code&gt; 스타일의 라인 편집 인터페이스를 사용 하십시오 ( &lt;a href=&quot;command-line-editing&quot;&gt;커맨드 라인 편집&lt;/a&gt; 참조 ). 이것은 &lt;code&gt;read -e&lt;/code&gt; 에 사용되는 편집 인터페이스에도 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="6bd846b5b9947fcf59f1ab1e64ccb1efb4c70bfd" translate="yes" xml:space="preserve">
          <source>Use an &lt;code&gt;emacs&lt;/code&gt;-style line editing interface (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;). This also affects the editing interface used for &lt;code&gt;read -e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;emacs&lt;/code&gt; 스타일 라인 편집 인터페이스를 사용 하십시오 ( &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;명령 행 편집&lt;/a&gt; 참조 ). 이것은 또한 &lt;code&gt;read -e&lt;/code&gt; 사용되는 편집 인터페이스에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="63e0786d5f5bb4e3503ea612859fa534484cfee9" translate="yes" xml:space="preserve">
          <source>Use and save the results of the tests in &lt;var&gt;file&lt;/var&gt; instead of</source>
          <target state="translated">테스트 결과를 &lt;var&gt;file&lt;/var&gt; 대신 파일로 사용 및 저장</target>
        </trans-unit>
        <trans-unit id="086fc1b30c6b83fd872491602730a60589b516d8" translate="yes" xml:space="preserve">
          <source>Use external files for the documentation displayed by the &lt;code&gt;help&lt;/code&gt; builtin instead of storing the text internally.</source>
          <target state="translated">텍스트를 내부적으로 저장하는 대신 &lt;code&gt;help&lt;/code&gt; 내장으로 표시되는 문서에 외부 파일을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="26b03b9d40d67e9e1aca335ea3a530a2b06427e8" translate="yes" xml:space="preserve">
          <source>Use function names only.</source>
          <target state="translated">기능 이름 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3939cfddf95079bf3c70d7f2c89621e7c5e8cb7d" translate="yes" xml:space="preserve">
          <source>Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.</source>
          <target state="translated">제목 페이지 (및 표지가있는 경우)에서 문서와 다른 제목 및 이전 버전의 제목 (있는 경우 문서의 내역 섹션에 나열되어있는 제목)에서 사용하십시오. 해당 버전의 원래 게시자가 권한을 부여한 경우 이전 버전과 동일한 제목을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e64a382a8d8334301f5273038636975edc03ca65" translate="yes" xml:space="preserve">
          <source>Use the Bash version of &lt;code&gt;malloc&lt;/code&gt; in the directory</source>
          <target state="translated">디렉토리에서 &lt;code&gt;malloc&lt;/code&gt; 의 Bash 버전을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d1791f137f37d4095496337401553258787738e6" translate="yes" xml:space="preserve">
          <source>Use the curses library instead of the termcap library. This should be supplied if your system has an inadequate or incomplete termcap database.</source>
          <target state="translated">termcap 라이브러리 대신 curses 라이브러리를 사용하십시오. 시스템에 불충분하거나 불완전한 termcap 데이터베이스가있는 경우 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="5cf2952cd6f0e0df68738c14e4fbc8b79af1c2af" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;select&lt;/code&gt; command to determine the column length for printing selection lists. Automatically set if the &lt;code&gt;checkwinsize&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), or in an interactive shell upon receipt of a &lt;code&gt;SIGWINCH&lt;/code&gt;.</source>
          <target state="translated">선택 목록 인쇄를위한 열 길이를 결정하기 위해 &lt;code&gt;select&lt;/code&gt; 명령에서 사용됩니다 . &lt;code&gt;checkwinsize&lt;/code&gt; 옵션이 활성화 된 경우 ( &lt;a href=&quot;the-shopt-builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ) 또는 &lt;code&gt;SIGWINCH&lt;/code&gt; 수신시 대화 형 쉘에서 자동으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="df5c8fd73ad894a813ccaad7a4925ed0c52f8123" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;select&lt;/code&gt; command to determine the column length for printing selection lists. Automatically set if the &lt;code&gt;checkwinsize&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), or in an interactive shell upon receipt of a &lt;code&gt;SIGWINCH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 명령에서 선택 목록을 인쇄하기위한 열 길이를 결정하는 데 사용됩니다 . &lt;code&gt;checkwinsize&lt;/code&gt; 옵션이 활성화 된 경우 ( &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ) 또는 &lt;code&gt;SIGWINCH&lt;/code&gt; 를 수신하면 대화식 쉘에 자동 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff9efd96fecc1b68e674ed00fd87ffcc17e49253" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;select&lt;/code&gt; command to determine the terminal width when printing selection lists. Automatically set if the &lt;code&gt;checkwinsize&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), or in an interactive shell upon receipt of a &lt;code&gt;SIGWINCH&lt;/code&gt;.</source>
          <target state="translated">선택 목록을 인쇄 할 때 터미널 너비를 결정하기 위해 &lt;code&gt;select&lt;/code&gt; 명령에 사용됩니다 . &lt;code&gt;checkwinsize&lt;/code&gt; 옵션이 활성화 된 경우 ( &lt;a href=&quot;the-shopt-builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ) 또는 &lt;code&gt;SIGWINCH&lt;/code&gt; 수신시 대화 형 쉘에서 자동으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="41c569bca6c6eea434c09da3f820b58ed45456a1" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;select&lt;/code&gt; command to determine the terminal width when printing selection lists. Automatically set if the &lt;code&gt;checkwinsize&lt;/code&gt; option is enabled (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), or in an interactive shell upon receipt of a &lt;code&gt;SIGWINCH&lt;/code&gt;.</source>
          <target state="translated">에 의해 사용 &lt;code&gt;select&lt;/code&gt; 선택 목록을 인쇄 할 때 명령은 터미널 폭을 결정합니다. &lt;code&gt;checkwinsize&lt;/code&gt; 옵션이 활성화 된 경우 ( &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ) 또는 &lt;code&gt;SIGWINCH&lt;/code&gt; 를 수신하면 대화식 쉘에 자동 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="40fdd5093c6c050a6b063cf37a4191fb09c2631e" translate="yes" xml:space="preserve">
          <source>Used to determine the locale category for any category not specifically selected with a variable starting with &lt;code&gt;LC_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LC_&lt;/code&gt; 로 시작하는 변수로 특별히 선택되지 않은 범주의 로케일 범주를 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="af0b7ad9a5bfd4d63654d75f68eb17698307be01" translate="yes" xml:space="preserve">
          <source>User names. May also be specified as</source>
          <target state="translated">사용자 이름 다음과 같이 지정할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="af3138cc282360a8600ef75867abc1b680f535c7" translate="yes" xml:space="preserve">
          <source>Using &amp;lsquo;</source>
          <target state="translated">사용하여</target>
        </trans-unit>
        <trans-unit id="b6eae4c33c5f87493e2b1cc3498d3d490ac90534" translate="yes" xml:space="preserve">
          <source>Using History Interactively</source>
          <target state="translated">대화식으로 기록 사용</target>
        </trans-unit>
        <trans-unit id="da7ccfcc8a9a926b0b1350dc297a1e2c7cda35d9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;enable&lt;/code&gt; builtin command to enable disabled shell builtins.</source>
          <target state="translated">사용은 &lt;code&gt;enable&lt;/code&gt; 장애인 쉘 내장 명령을 사용하려면 명령 내장.</target>
        </trans-unit>
        <trans-unit id="03b9ca37ed1619de24a56f058a1fe56ab343e43b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;exec&lt;/code&gt; builtin to replace the shell with another command.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 내장을 사용하여 쉘을 다른 명령으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8a6ac30a861e1619cd84db145124298ba539ad1f" translate="yes" xml:space="preserve">
          <source>Using the output of a command as an argument.</source>
          <target state="translated">명령의 출력을 인수로 사용</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="a3984eeedbd717d8d0ec28ed3e564994273bb19d" translate="yes" xml:space="preserve">
          <source>VERBATIM COPYING</source>
          <target state="translated">완전 복사</target>
        </trans-unit>
        <trans-unit id="078318c4267a2eb76a7671446bb3b6cb23544b8c" translate="yes" xml:space="preserve">
          <source>Valid arguments for the</source>
          <target state="translated">에 대한 유효한 인수</target>
        </trans-unit>
        <trans-unit id="1fd56c936990b710865dc57bc3ae92376b9660a0" translate="yes" xml:space="preserve">
          <source>Variable Index</source>
          <target state="translated">변수 인덱스</target>
        </trans-unit>
        <trans-unit id="79e9eab118c299f006f827a6c037c20d995dac29" translate="yes" xml:space="preserve">
          <source>Variable Settings</source>
          <target state="translated">변수 설정</target>
        </trans-unit>
        <trans-unit id="34611b34ca858fbda6b863f451376eccb1e257ed" translate="yes" xml:space="preserve">
          <source>Variable assignments preceding commands affect only that command, even builtins and functions (see &lt;a href=&quot;environment&quot;&gt;Environment&lt;/a&gt;). In &lt;code&gt;sh&lt;/code&gt;, all variable assignments preceding commands are global unless the command is executed from the file system.</source>
          <target state="translated">명령 앞의 변수 할당은 해당 명령, 심지어 내장 및 함수에만 영향을줍니다 ( &lt;a href=&quot;environment&quot;&gt;환경&lt;/a&gt; 참조 ). 에서 &lt;code&gt;sh&lt;/code&gt; 명령이 파일 시스템에서 실행되지 않는 한, 명령 앞에 모든 변수 할당은 글로벌 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e276969864d32d41ccd66d053703a5cafa514c3" translate="yes" xml:space="preserve">
          <source>Variable assignments preceding commands affect only that command, even builtins and functions (see &lt;a href=&quot;environment#Environment&quot;&gt;Environment&lt;/a&gt;). In &lt;code&gt;sh&lt;/code&gt;, all variable assignments preceding commands are global unless the command is executed from the file system.</source>
          <target state="translated">명령 앞의 변수 할당은 해당 명령에만 영향을 미치며 내장 및 기능까지도 포함됩니다 ( &lt;a href=&quot;environment#Environment&quot;&gt;환경&lt;/a&gt; 참조 ). 에서 &lt;code&gt;sh&lt;/code&gt; 명령이 파일 시스템에서 실행되지 않는 한, 명령 앞에 모든 변수 할당은 글로벌 있습니다.</target>
        </trans-unit>
        <trans-unit id="51f507187d0a5a4031dcd2315875af72542c33c5" translate="yes" xml:space="preserve">
          <source>Variable names and values, where appropriate, are recognized without regard to case. Unrecognized variable names are ignored.</source>
          <target state="translated">적절한 경우 변수 이름과 값은 대소 문자에 관계없이 인식됩니다. 인식 할 수없는 변수 이름은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8044f944dffdadb90c7080fe842ff08f4fe443ca" translate="yes" xml:space="preserve">
          <source>Variables Bash uses to customize job control.</source>
          <target state="translated">변수 Bash는 작업 제어를 사용자 정의하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fbf032cb2a8460171d364812c7ddfd295003fca8" translate="yes" xml:space="preserve">
          <source>Variables local to the function may be declared with the &lt;code&gt;local&lt;/code&gt; builtin. These variables are visible only to the function and the commands it invokes. This is particularly important when a shell function calls other functions.</source>
          <target state="translated">함수의 로컬 변수는 &lt;code&gt;local&lt;/code&gt; 내장 으로 선언 될 수 있습니다 . 이러한 변수는 함수와 함수가 호출하는 명령에만 표시됩니다. 쉘 함수가 다른 함수를 호출 할 때 특히 중요합니다.</target>
        </trans-unit>
        <trans-unit id="430be416ee1a6bde3f265a913e16640caf6ace5a" translate="yes" xml:space="preserve">
          <source>Variables present in the shell&amp;rsquo;s initial environment are automatically exported to child processes. The Bourne shell does not normally do this unless the variables are explicitly marked using the &lt;code&gt;export&lt;/code&gt; command.</source>
          <target state="translated">쉘의 초기 환경에 존재하는 변수는 자동으로 자식 프로세스로 내보내집니다. &lt;code&gt;export&lt;/code&gt; 명령을 사용하여 변수를 명시 적으로 표시하지 않으면 Bourne 쉘은 일반적으로이를 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b841eae11bf9319d8d92ec0331d39213387a9de3" translate="yes" xml:space="preserve">
          <source>Variables used or set by Bash.</source>
          <target state="translated">Bash에 의해 사용되거나 설정된 변수.</target>
        </trans-unit>
        <trans-unit id="d5c2d85fcc8296c85c27d685fb685a43e5518049" translate="yes" xml:space="preserve">
          <source>Variables which Bash uses in the same way as the Bourne Shell.</source>
          <target state="translated">Bash가 Bourne Shell과 같은 방식으로 사용하는 변수.</target>
        </trans-unit>
        <trans-unit id="d10056db9d3e6245371ac5fd190b495d652b6fc2" translate="yes" xml:space="preserve">
          <source>Various indexes for this manual.</source>
          <target state="translated">이 매뉴얼에 대한 다양한 색인.</target>
        </trans-unit>
        <trans-unit id="850a1309ea27542661d46dd46aedeab66fe7f368" translate="yes" xml:space="preserve">
          <source>Version 1.3, 3 November 2008</source>
          <target state="translated">버전 1.3, 2008 년 11 월 3 일</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="e61b4d0688d81e1b49d2204ecd20b4664cd14ce1" translate="yes" xml:space="preserve">
          <source>Wait until the child process specified by each process &lt;small&gt;ID&lt;/small&gt;&lt;var&gt;pid&lt;/var&gt; or job specification &lt;var&gt;jobspec&lt;/var&gt; exits and return the exit status of the last command waited for. If a job spec is given, all processes in the job are waited for. If no arguments are given, &lt;code&gt;wait&lt;/code&gt; waits for all running background jobs and the last-executed process substitution, if its process id is the same as &lt;var&gt;$!&lt;/var&gt;, and the return status is zero. If the</source>
          <target state="translated">각 프로세스 &lt;small&gt;ID &lt;/small&gt; &lt;var&gt;pid&lt;/var&gt; 또는 작업 사양 &lt;var&gt;jobspec&lt;/var&gt; 에 지정된 하위 프로세스가 종료 될 때까지 기다렸다가 마지막으로 대기 한 명령의 종료 상태를 반환합니다. 작업 사양이 제공되면 작업의 모든 프로세스가 대기합니다. 인수가 제공되지 않으면 실행중인 모든 백그라운드 작업과 마지막으로 실행 된 프로세스 대체를 &lt;code&gt;wait&lt;/code&gt; 립니다 (프로세스 ID가 &lt;var&gt;$!&lt;/var&gt; , 반환 상태는 0입니다. 만약</target>
        </trans-unit>
        <trans-unit id="0a5b141eb4ada1d94bec5095e760c2e909d3a511" translate="yes" xml:space="preserve">
          <source>Wait until the child process specified by each process &lt;small&gt;ID&lt;/small&gt;&lt;var&gt;pid&lt;/var&gt; or job specification &lt;var&gt;jobspec&lt;/var&gt; exits and return the exit status of the last command waited for. If a job spec is given, all processes in the job are waited for. If no arguments are given, all currently active child processes are waited for, and the return status is zero. If the</source>
          <target state="translated">각 프로세스 &lt;small&gt;ID &lt;/small&gt; &lt;var&gt;pid&lt;/var&gt; 또는 작업 스펙 &lt;var&gt;jobspec&lt;/var&gt; 에 의해 지정된 하위 프로세스가 종료 될 때까지 기다렸다가 마지막으로 대기 한 명령의 종료 상태를 리턴하십시오. 작업 스펙이 제공되면 작업의 모든 프로세스가 대기합니다. 인수가 제공되지 않으면 현재 활성화 된 모든 하위 프로세스가 대기되고 리턴 상태는 0입니다. 만약</target>
        </trans-unit>
        <trans-unit id="8b90f212f669732e5904ca7248796b2889df8819" translate="yes" xml:space="preserve">
          <source>Ways to group commands.</source>
          <target state="translated">명령을 그룹화하는 방법.</target>
        </trans-unit>
        <trans-unit id="852d4faf737a59961ad578b84ea1222167e054b1" translate="yes" xml:space="preserve">
          <source>We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.</source>
          <target state="translated">자유 소프트웨어에는 무료 문서가 필요하기 때문에 자유 소프트웨어의 매뉴얼에 사용하기 위해이 라이센스를 설계했습니다. 무료 프로그램에는 소프트웨어와 동일한 자유를 제공하는 매뉴얼이 제공되어야합니다. 그러나이 라이센스는 소프트웨어 매뉴얼에만 국한되지 않습니다. 주제 나 인쇄물로 출판되는지 여부에 관계없이 모든 텍스트 작업에 사용할 수 있습니다. 이 라이센스는 주로 지시 또는 참조 목적의 저작물에 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="29091257776e242dd78eb6e74a92f65c4271204f" translate="yes" xml:space="preserve">
          <source>We install the completion function using the</source>
          <target state="translated">우리는 완성 기능을 사용하여 설치합니다</target>
        </trans-unit>
        <trans-unit id="4b0b496aead232019c2e10fd95a82098e897c42d" translate="yes" xml:space="preserve">
          <source>What an interactive shell is.</source>
          <target state="translated">대화식 쉘이 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="ab1d5198de366563da43601f5c69be678890beff" translate="yes" xml:space="preserve">
          <source>What changes in a interactive shell?</source>
          <target state="translated">대화식 쉘에서 어떤 변화가 있습니까?</target>
        </trans-unit>
        <trans-unit id="dd12fe3d72f2be333642d248e003627799a52910" translate="yes" xml:space="preserve">
          <source>What determines whether a shell is Interactive.</source>
          <target state="translated">쉘이 대화식인지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="d8b792b93ede4848c41e5ef18bf5b05c6f2202b7" translate="yes" xml:space="preserve">
          <source>What happens when Bash or a command it runs receives a signal.</source>
          <target state="translated">Bash 또는 명령이 실행되면 발생하는 상황</target>
        </trans-unit>
        <trans-unit id="cc61a16a9f07eba1d18f3025bdb8bae3ec152b43" translate="yes" xml:space="preserve">
          <source>What happens when you run a command.</source>
          <target state="translated">명령을 실행하면 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="39753cb75cb0c5b74594822c0841eb7267bb71f1" translate="yes" xml:space="preserve">
          <source>What is Bash?</source>
          <target state="translated">배쉬 란?</target>
        </trans-unit>
        <trans-unit id="90d69a46587495539e22be234f38996aeb0a37a8" translate="yes" xml:space="preserve">
          <source>What is a shell?</source>
          <target state="translated">껍질이란?</target>
        </trans-unit>
        <trans-unit id="b879b4c80058832d18ae19e85070d872239273ac" translate="yes" xml:space="preserve">
          <source>What is an Interactive Shell?</source>
          <target state="translated">대화식 쉘이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="1fae4b61a51c5003ef635ba37d077edfd5a02985" translate="yes" xml:space="preserve">
          <source>What it feels like using History as a user.</source>
          <target state="translated">History를 사용자로 사용하는 느낌</target>
        </trans-unit>
        <trans-unit id="8718a1b15e428da49ae66e23ad7a8d7458d79675" translate="yes" xml:space="preserve">
          <source>What job control is and how Bash allows you to use it.</source>
          <target state="translated">작업 제어 란 무엇이며 Bash를 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="a32696e6dfe2c38566b0745c6133dc7f5f2f730e" translate="yes" xml:space="preserve">
          <source>What your input means to the shell.</source>
          <target state="translated">쉘에 입력 한 내용</target>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="939eb0fb342f62f76ac14f8030ccea8867055342" translate="yes" xml:space="preserve">
          <source>When Bash invokes an external command, the variable &amp;lsquo;</source>
          <target state="translated">Bash가 외부 명령을 호출하면 변수 '</target>
        </trans-unit>
        <trans-unit id="0890f61347bbf1ac979377a2c90aa96f3d70fe3f" translate="yes" xml:space="preserve">
          <source>When Bash is interactive, in the absence of any traps, it ignores &lt;code&gt;SIGTERM&lt;/code&gt; (so that &amp;lsquo;</source>
          <target state="translated">Bash가 대화식 일 때 트랩이 없으면 &lt;code&gt;SIGTERM&lt;/code&gt; 을 무시합니다 ( '</target>
        </trans-unit>
        <trans-unit id="343e2279b1b41bc9544bf20f1acd36ea8c90f0ca" translate="yes" xml:space="preserve">
          <source>When Bash is invoked as an interactive login shell, or as a non-interactive shell with the</source>
          <target state="translated">Bash가 대화 형 로그인 셸로 또는 비 대화식 셸로 호출 된 경우</target>
        </trans-unit>
        <trans-unit id="296f393b4ddf1ad7de620da67837a1e5cdc72d57" translate="yes" xml:space="preserve">
          <source>When Bash is not executing in &lt;small&gt;POSIX&lt;/small&gt; mode, these builtins behave no differently than the rest of the Bash builtin commands. The Bash &lt;small&gt;POSIX&lt;/small&gt; mode is described in &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;.</source>
          <target state="translated">Bash가 &lt;small&gt;POSIX&lt;/small&gt; 모드 에서 실행되지 않을 때 이러한 내장 기능은 나머지 Bash 내장 명령과 다르게 동작하지 않습니다. 배시 &lt;small&gt;POSIX의&lt;/small&gt; 모드가 설명되어 &lt;a href=&quot;bash-posix-mode&quot;&gt;배시 POSIX 모드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba9c71060dccd3fa7de0b7ad1f41d0d3299654e9" translate="yes" xml:space="preserve">
          <source>When Bash is not executing in &lt;small&gt;POSIX&lt;/small&gt; mode, these builtins behave no differently than the rest of the Bash builtin commands. The Bash &lt;small&gt;POSIX&lt;/small&gt; mode is described in &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;.</source>
          <target state="translated">Bash가 &lt;small&gt;POSIX&lt;/small&gt; 모드 에서 실행되지 않는 경우 이러한 내장 기능은 나머지 Bash 내장 명령과 다르게 작동하지 않습니다. 배시 &lt;small&gt;POSIX의&lt;/small&gt; 모드가 설명되어 &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;배시 POSIX 모드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2bbe73ce70477a17845633ac0643ee9f742681a" translate="yes" xml:space="preserve">
          <source>When Bash is started in &lt;small&gt;POSIX&lt;/small&gt; mode, as with the</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 모드 에서 Bash가 시작될 때</target>
        </trans-unit>
        <trans-unit id="635f7b7cfca984f782445c48ff197663304bc7a7" translate="yes" xml:space="preserve">
          <source>When Bash is started non-interactively, to run a shell script, for example, it looks for the variable &lt;code&gt;BASH_ENV&lt;/code&gt; in the environment, expands its value if it appears there, and uses the expanded value as the name of a file to read and execute. Bash behaves as if the following command were executed:</source>
          <target state="translated">Bash가 비 대화식으로 시작될 때, 예를 들어, 쉘 스크립트를 실행하기 위해 환경에서 변수 &lt;code&gt;BASH_ENV&lt;/code&gt; 를 찾고 , 거기에 표시되면 값을 확장하고, 확장 된 값을 읽고 실행할 파일 이름으로 사용합니다. . Bash는 다음 명령이 실행 된 것처럼 동작합니다.</target>
        </trans-unit>
        <trans-unit id="3fe565d734cceecb3fe936c7e6c90c5086f2c931" translate="yes" xml:space="preserve">
          <source>When Bash runs a shell script, it sets the special parameter &lt;code&gt;0&lt;/code&gt; to the name of the file, rather than the name of the shell, and the positional parameters are set to the remaining arguments, if any are given. If no additional arguments are supplied, the positional parameters are unset.</source>
          <target state="translated">Bash는 쉘 스크립트를 실행할 때 특수 매개 변수 &lt;code&gt;0&lt;/code&gt; 을 쉘 이름이 아닌 파일 이름으로 설정하고 위치 매개 변수는 나머지 인수로 설정됩니다 (있는 경우). 추가 인수가 제공되지 않으면 위치 매개 변수가 설정 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="9e58abd297c6a4133cd5d738bac34e27741aabae" translate="yes" xml:space="preserve">
          <source>When a command in the hash table no longer exists, Bash will re-search &lt;code&gt;$PATH&lt;/code&gt; to find the new location. This is also available with &amp;lsquo;</source>
          <target state="translated">해시 테이블에 명령이 더 이상 존재하지 않으면 Bash는 &lt;code&gt;$PATH&lt;/code&gt; 를 다시 검색 하여 새 위치를 찾습니다. 이것은 '</target>
        </trans-unit>
        <trans-unit id="fef014e018d71be7db2194d0f9860f69480f2ec1" translate="yes" xml:space="preserve">
          <source>When a command that is found to be a shell script is executed (see &lt;a href=&quot;shell-scripts&quot;&gt;Shell Scripts&lt;/a&gt;), &lt;code&gt;rbash&lt;/code&gt; turns off any restrictions in the shell spawned to execute the script.</source>
          <target state="translated">발견 명령이 쉘 스크립트가 실행 될 때 (참조 &lt;a href=&quot;shell-scripts&quot;&gt;쉘 스크립트&lt;/a&gt; ), &lt;code&gt;rbash&lt;/code&gt; 셸에서 어떤 제한 해제 회전 스크립트를 실행하기 위해 양산.</target>
        </trans-unit>
        <trans-unit id="57adcc6112f09b93153336f00fc3a43b19f963c4" translate="yes" xml:space="preserve">
          <source>When a command that is found to be a shell script is executed (see &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt;), &lt;code&gt;rbash&lt;/code&gt; turns off any restrictions in the shell spawned to execute the script.</source>
          <target state="translated">발견 명령이 쉘 스크립트가 실행 될 때 (참조 &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;쉘 스크립트&lt;/a&gt; ), &lt;code&gt;rbash&lt;/code&gt; 셸에서 어떤 제한 해제 회전 스크립트를 실행하기 위해 양산.</target>
        </trans-unit>
        <trans-unit id="ba8875efd01dda7b5b4b30097c6e56268320958f" translate="yes" xml:space="preserve">
          <source>When a compspec indicates that directory name completion is desired, the programmable completion functions force Readline to append a slash to completed names which are symbolic links to directories, subject to the value of the &lt;var&gt;mark-directories&lt;/var&gt; Readline variable, regardless of the setting of the &lt;var&gt;mark-symlinked-directories&lt;/var&gt; Readline variable.</source>
          <target state="translated">compspec이 디렉토리 이름 완성을 원한다고 표시하면 프로그램 가능 완료 기능은 Readline이 &lt;var&gt;mark-directories&lt;/var&gt; 설정에 관계없이 mark-directories Readline 변수 의 값에 따라 디렉토리에 대한 심볼릭 링크 인 완성 된 이름에 슬래시를 추가 하도록 &lt;var&gt;mark-symlinked-directories&lt;/var&gt; Readline 변수.</target>
        </trans-unit>
        <trans-unit id="b9bcb624b73c013e15b8c5ac05a16d035621ad72" translate="yes" xml:space="preserve">
          <source>When a function is executed, the arguments to the function become the positional parameters during its execution (see &lt;a href=&quot;positional-parameters&quot;&gt;Positional Parameters&lt;/a&gt;). The special parameter &amp;lsquo;</source>
          <target state="translated">함수가 실행되면 함수에 대한 인수는 실행 중에 위치 매개 변수가됩니다 ( &lt;a href=&quot;positional-parameters&quot;&gt;위치 매개 변수&lt;/a&gt; 참조 ). 특수 매개 변수 '</target>
        </trans-unit>
        <trans-unit id="d12530caddaa309fd835ff8499a285072c87b11d" translate="yes" xml:space="preserve">
          <source>When a function is executed, the arguments to the function become the positional parameters during its execution (see &lt;a href=&quot;positional-parameters#Positional-Parameters&quot;&gt;Positional Parameters&lt;/a&gt;). The special parameter &amp;lsquo;</source>
          <target state="translated">함수가 실행될 때 함수에 대한 인수는 실행 중에 위치 매개 변수가됩니다 ( &lt;a href=&quot;positional-parameters#Positional-Parameters&quot;&gt;위치 매개 변수&lt;/a&gt; 참조 ). 특수 매개 변수 '</target>
        </trans-unit>
        <trans-unit id="d37f53584df0fca3f86fc274012236330d7d58b4" translate="yes" xml:space="preserve">
          <source>When a pattern is used for filename expansion, the character &amp;lsquo;</source>
          <target state="translated">파일 이름 확장에 패턴을 사용하면 '</target>
        </trans-unit>
        <trans-unit id="39b62095a08bd7b0216aa1ae612e33d7154823e0" translate="yes" xml:space="preserve">
          <source>When a positional parameter consisting of more than a single digit is expanded, it must be enclosed in braces.</source>
          <target state="translated">두 자리 이상의 숫자로 구성된 위치 매개 변수가 확장되면 중괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="fa4f52edd6f757831ec88733a19fa50ef12a0318" translate="yes" xml:space="preserve">
          <source>When a program is invoked it is given an array of strings called the &lt;var&gt;environment&lt;/var&gt;. This is a list of name-value pairs, of the form &lt;code&gt;name=value&lt;/code&gt;.</source>
          <target state="translated">프로그램이 호출되면 &lt;var&gt;environment&lt;/var&gt; 라는 문자열 배열이 제공 됩니다 . 이것은 &lt;code&gt;name=value&lt;/code&gt; 형식의 이름-값 쌍 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="2bda9944164cf112452d8f8b52615725cfd5de8c" translate="yes" xml:space="preserve">
          <source>When a program which uses the Readline library starts up, the init file is read, and the key bindings are set.</source>
          <target state="translated">Readline 라이브러리를 사용하는 프로그램이 시작되면 init 파일이 읽히고 키 바인딩이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="adb498439895d8d06b8d4e36b0cc57240ab31d26" translate="yes" xml:space="preserve">
          <source>When a simple command is executed, the shell performs the following expansions, assignments, and redirections, from left to right, in the following order.</source>
          <target state="translated">간단한 명령이 실행되면 셸은 다음 순서로 왼쪽에서 오른쪽으로 다음 확장, 할당 및 리디렉션을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2a80ca567de1dd1b14b3ed0a6268811838e44d22" translate="yes" xml:space="preserve">
          <source>When a simple command is executed, the shell performs the following expansions, assignments, and redirections, from left to right.</source>
          <target state="translated">간단한 명령이 실행되면 셸은 왼쪽에서 오른쪽으로 다음과 같은 확장, 할당 및 리디렉션을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="232e66604a9df4ec85b78e97b1ef5290dc8d67f1" translate="yes" xml:space="preserve">
          <source>When a simple command other than a builtin or shell function is to be executed, it is invoked in a separate execution environment that consists of the following. Unless otherwise noted, the values are inherited from the shell.</source>
          <target state="translated">내장 또는 쉘 함수 이외의 간단한 명령을 실행하려면 다음으로 구성된 별도의 실행 환경에서 호출됩니다. 다른 언급이 없으면 값은 셸에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="ccdb235821ba3486822d12a838408ae1ed87a59e" translate="yes" xml:space="preserve">
          <source>When an interactive login shell exits, or a non-interactive login shell executes the &lt;code&gt;exit&lt;/code&gt; builtin command, Bash reads and executes commands from the file</source>
          <target state="translated">대화식 로그인 쉘이 종료되거나 비 대화식 로그인 쉘이 &lt;code&gt;exit&lt;/code&gt; 내장 명령을 실행하면 Bash는 파일에서 명령을 읽고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="007b34e03af0dd54d201a22183121ea255813af1" translate="yes" xml:space="preserve">
          <source>When an interactive shell that is not a login shell is started, Bash reads and executes commands from</source>
          <target state="translated">로그인 쉘이 아닌 대화식 쉘이 시작되면 Bash는 다음 명령을 읽고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="1a6fb1716bf550e6d2fd9e84ef26357c744a0df8" translate="yes" xml:space="preserve">
          <source>When and how Bash executes scripts.</source>
          <target state="translated">Bash가 스크립트를 언제 어떻게 실행하는지.</target>
        </trans-unit>
        <trans-unit id="4be03dfe6149d22e64c1dcd3fbf25bf1461e8f4c" translate="yes" xml:space="preserve">
          <source>When any of the</source>
          <target state="translated">때 중 하나</target>
        </trans-unit>
        <trans-unit id="8c7f4665380351078a4b92b8f13ce1c59aee44b4" translate="yes" xml:space="preserve">
          <source>When assigning to an associative array, the subscript is required.</source>
          <target state="translated">연관 배열에 할당 할 때는 아래 첨자가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8b94a719f6167355618d28cf88f3e0255aca8eb2" translate="yes" xml:space="preserve">
          <source>When assigning to an associative array, the words in a compound assignment may be either assignment statements, for which the subscript is required, or a list of words that is interpreted as a sequence of alternating keys and values: &lt;var&gt;name&lt;/var&gt;=(&lt;var&gt;key1&lt;/var&gt;&lt;var&gt;value1&lt;/var&gt;&lt;var&gt;key2&lt;/var&gt;&lt;var&gt;value2&lt;/var&gt; &amp;hellip; ). These are treated identically to &lt;var&gt;name&lt;/var&gt;=( [&lt;var&gt;key1&lt;/var&gt;]=&lt;var&gt;value1&lt;/var&gt; [&lt;var&gt;key2&lt;/var&gt;]=&lt;var&gt;value2&lt;/var&gt; &amp;hellip; ). The first word in the list determines how the remaining words are interpreted; all assignments in a list must be of the same type. When using key/value pairs, the keys may not be missing or empty; a final missing value is treated like the empty string.</source>
          <target state="translated">연관 배열에 할당 할 때 복합 할당의 단어는 아래 첨자가 필요한 할당 문이거나 교대 키 및 값의 시퀀스로 해석되는 단어 목록 일 수 있습니다. &lt;var&gt;name&lt;/var&gt; = ( &lt;var&gt;key1&lt;/var&gt; &lt;var&gt;value1&lt;/var&gt; &lt;var&gt;key2&lt;/var&gt; &lt;var&gt;value2&lt;/var&gt; &amp;hellip;). 이들은 &lt;var&gt;name&lt;/var&gt; = ([ &lt;var&gt;key1&lt;/var&gt; ] = &lt;var&gt;value1&lt;/var&gt; [ &lt;var&gt;key2&lt;/var&gt; ] = &lt;var&gt;value2&lt;/var&gt; &amp;hellip;)와 동일하게 취급 됩니다. 목록의 첫 번째 단어는 나머지 단어가 해석되는 방식을 결정합니다. 목록의 모든 할당은 동일한 유형이어야합니다. 키 / 값 쌍을 사용할 때 키가 누락되거나 비어 있지 않을 수 있습니다. 최종 결 측값은 빈 문자열처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="dde5b5c589a1e1bd4e9b27320e42bdff38c97b2f" translate="yes" xml:space="preserve">
          <source>When assigning to an indexed array, if &lt;var&gt;name&lt;/var&gt; is subscripted by a negative number, that number is interpreted as relative to one greater than the maximum index of &lt;var&gt;name&lt;/var&gt;, so negative indices count back from the end of the array, and an index of -1 references the last element.</source>
          <target state="translated">인덱스 배열에 할당 할 때 &lt;var&gt;name&lt;/var&gt; 이 음수로 첨자 화 된 경우 해당 숫자는 &lt;var&gt;name&lt;/var&gt; 의 최대 인덱스보다 1이 큰 것으로 해석 되므로 음수 인덱스는 배열의 끝에서 다시 계산되며 인덱스는 -1입니다. 마지막 요소를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="7d3d6c790567d2b34fc873d9fa4fe748f8ccf81a" translate="yes" xml:space="preserve">
          <source>When available, process substitution is performed simultaneously with parameter and variable expansion, command substitution, and arithmetic expansion.</source>
          <target state="translated">사용 가능한 경우 프로세스 대체는 매개 변수 및 변수 확장, 명령 대체 및 산술 확장과 동시에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="538a71ef848f2a6c380b3706ed7f7e699e1a41b2" translate="yes" xml:space="preserve">
          <source>When braces are used, the matching ending brace is the first &amp;lsquo;</source>
          <target state="translated">중괄호를 사용하면 일치하는 끝 중괄호가 첫 번째 '</target>
        </trans-unit>
        <trans-unit id="3c096d63a7ffed613b88cf6e90a5e52589593c53" translate="yes" xml:space="preserve">
          <source>When entering the text of a macro, single or double quotes must be used to indicate a macro definition. Unquoted text is assumed to be a function name. In the macro body, the backslash escapes described above are expanded. Backslash will quote any other character in the macro text, including &amp;lsquo;</source>
          <target state="translated">매크로 텍스트를 입력 할 때 매크로 정의를 나타내려면 작은 따옴표 나 큰 따옴표를 사용해야합니다. 인용되지 않은 텍스트는 함수 이름으로 간주됩니다. 매크로 본문에서 위에서 설명한 백 슬래시 이스케이프가 확장됩니다. 백 슬래시는 매크로 텍스트에 '</target>
        </trans-unit>
        <trans-unit id="9fd112b30cf6c4d2c65ca00e38b79431df23dbb8" translate="yes" xml:space="preserve">
          <source>When expanding the &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="41bb4f6e6938705bf7fc6b9c00d3541469a830b9" translate="yes" xml:space="preserve">
          <source>When invoked as &lt;code&gt;sh&lt;/code&gt;, Bash enters &lt;small&gt;POSIX&lt;/small&gt; mode after reading the startup files.</source>
          <target state="translated">&lt;code&gt;sh&lt;/code&gt; 로 호출되면 Bash는 시작 파일을 읽은 후 &lt;small&gt;POSIX&lt;/small&gt; 모드 로 들어갑니다 .</target>
        </trans-unit>
        <trans-unit id="add21ed4442cf9a2dd8325bddafd1fb2bfefad0a" translate="yes" xml:space="preserve">
          <source>When invoked as &lt;code&gt;sh&lt;/code&gt;, Bash enters &lt;small&gt;POSIX&lt;/small&gt; mode after the startup files are read.</source>
          <target state="translated">&lt;code&gt;sh&lt;/code&gt; 로 호출되면 시작 파일을 읽은 후 Bash가 &lt;small&gt;POSIX&lt;/small&gt; 모드 로 들어갑니다 .</target>
        </trans-unit>
        <trans-unit id="8e8a7270151e34910804cc9c116cd8f1097bd0d4" translate="yes" xml:space="preserve">
          <source>When invoked as an interactive login shell, or as a non-interactive shell with the</source>
          <target state="translated">대화식 로그인 셸 또는을 사용하여 비 대화식 셸로 호출 된 경우</target>
        </trans-unit>
        <trans-unit id="7953fce75850b2edb7b98ee9a7e7bfd7be5cbdf7" translate="yes" xml:space="preserve">
          <source>When job control is not active, the &lt;code&gt;kill&lt;/code&gt; and &lt;code&gt;wait&lt;/code&gt; builtins do not accept &lt;var&gt;jobspec&lt;/var&gt; arguments. They must be supplied process &lt;small&gt;ID&lt;/small&gt;s.</source>
          <target state="translated">작업 제어가 활성화되지 않은 경우, &lt;code&gt;kill&lt;/code&gt; 및 &lt;code&gt;wait&lt;/code&gt; 내장은 &lt;var&gt;jobspec&lt;/var&gt; 인수를 허용하지 않습니다 . 프로세스 &lt;small&gt;ID를&lt;/small&gt; 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0a281c916b9b7bd87cb943e319b56cec58fcf88e" translate="yes" xml:space="preserve">
          <source>When listing the history, the &lt;code&gt;fc&lt;/code&gt; builtin does not include an indication of whether or not a history entry has been modified.</source>
          <target state="translated">히스토리를 나열 할 때 &lt;code&gt;fc&lt;/code&gt; 내장은 히스토리 항목이 수정되었는지 여부에 대한 표시를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="805b609d0e93d5992ac70df75409b3ad58c5bd29" translate="yes" xml:space="preserve">
          <source>When listing, a &lt;var&gt;first&lt;/var&gt; or &lt;var&gt;last&lt;/var&gt; of 0 is equivalent to -1 and -0 is equivalent to the current command (usually the &lt;code&gt;fc&lt;/code&gt; command); otherwise 0 is equivalent to -1 and -0 is invalid.</source>
          <target state="translated">나열 할 때 0 의 &lt;var&gt;first&lt;/var&gt; 또는 &lt;var&gt;last&lt;/var&gt; 은 -1과 동일하고 -0은 현재 명령 (일반적으로 &lt;code&gt;fc&lt;/code&gt; 명령)과 동일합니다. 그렇지 않으면 0은 -1과 같고 -0은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98c569a5965c6296cd95084f246d0cc55f8fc54b" translate="yes" xml:space="preserve">
          <source>When matching a filename, the slash character must always be matched explicitly by a slash in the pattern, but in other matching contexts it can be matched by a special pattern character as described below (see &lt;a href=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/a&gt;).</source>
          <target state="translated">파일 이름을 일치시킬 때 슬래시 문자는 항상 패턴의 슬래시로 명시 적으로 일치해야하지만 다른 일치하는 컨텍스트에서는 아래에 설명 된대로 특수 패턴 문자로 일치시킬 수 있습니다 ( &lt;a href=&quot;pattern-matching&quot;&gt;패턴 일치&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="80ce90571990e51b3a376a35bfbe9d5d0aab248f" translate="yes" xml:space="preserve">
          <source>When matching a filename, the slash character must always be matched explicitly by a slash in the pattern, but in other matching contexts it can be matched by a special pattern character as described below (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;).</source>
          <target state="translated">파일 이름을 일치시킬 때 슬래시 문자는 항상 패턴에서 슬래시와 명시 적으로 일치해야하지만 다른 일치하는 컨텍스트에서는 아래 설명 된대로 특수 패턴 문자와 일치 할 수 있습니다 ( &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;패턴 일치&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="94526a55da849b0bce77ccd1dca347592dcac65f" translate="yes" xml:space="preserve">
          <source>When no arguments are given, &lt;code&gt;popd&lt;/code&gt; removes the top directory from the stack and performs a &lt;code&gt;cd&lt;/code&gt; to the new top directory. The elements are numbered from 0 starting at the first directory listed with &lt;code&gt;dirs&lt;/code&gt;; that is, &lt;code&gt;popd&lt;/code&gt; is equivalent to &lt;code&gt;popd +0&lt;/code&gt;.</source>
          <target state="translated">인수를 지정하지 않으면 &lt;code&gt;popd&lt;/code&gt; 는 스택에서 최상위 디렉토리를 제거 하고 새 최상위 디렉토리로 &lt;code&gt;cd&lt;/code&gt; 를 수행합니다 . 요소는 &lt;code&gt;dirs&lt;/code&gt; 로 나열된 첫 번째 디렉토리에서 시작하여 0부터 번호가 매겨집니다 . 즉, &lt;code&gt;popd&lt;/code&gt; 는 &lt;code&gt;popd +0&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f35704d27cbab8942f6e0f842f935547c255c02b" translate="yes" xml:space="preserve">
          <source>When not performing substring expansion, using the form described below (e.g., &amp;lsquo;</source>
          <target state="translated">하위 문자열 확장을 수행하지 않는 경우 아래 설명 된 형식을 사용하십시오 (예 : '</target>
        </trans-unit>
        <trans-unit id="15e33c9da97e268b5d63a9391a2bce0492152a19" translate="yes" xml:space="preserve">
          <source>When options are supplied, they set or unset shell attributes. Options, if specified, have the following meanings:</source>
          <target state="translated">옵션이 제공되면 쉘 속성을 설정하거나 설정 해제합니다. 지정된 경우 옵션의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a6580a4e014bfeccd6ef9a819a5f70cd8425c69c" translate="yes" xml:space="preserve">
          <source>When parsing and expanding a ${&amp;hellip;} expansion that appears within double quotes, single quotes are no longer special and cannot be used to quote a closing brace or other special character, unless the operator is one of those defined to perform pattern removal. In this case, they do not have to appear as matched pairs.</source>
          <target state="translated">큰 따옴표 안에 표시되는 $ {&amp;hellip;} 확장을 구문 분석하고 확장 할 때 작은 따옴표는 더 이상 특별하지 않으며 연산자가 패턴 제거를 수행하도록 정의 된 문자 중 하나가 아닌 한 닫는 괄호 또는 다른 특수 문자를 인용하는 데 사용할 수 없습니다. 이 경우 일치하는 쌍으로 표시 될 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6971c57a17fffc05a32d0d3f7c561163f04ec7c2" translate="yes" xml:space="preserve">
          <source>When printing shell function definitions (e.g., by &lt;code&gt;type&lt;/code&gt;), Bash does not print the &lt;code&gt;function&lt;/code&gt; keyword.</source>
          <target state="translated">쉘 함수 정의를 인쇄 할 때 (예 : &lt;code&gt;type&lt;/code&gt; ) Bash는 &lt;code&gt;function&lt;/code&gt; 키워드를 인쇄하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cb3a3cbee2b0c08114feb5a885f1705ebbb37ab3" translate="yes" xml:space="preserve">
          <source>When referenced, this variable expands to the name of the shell or shell script (identical to &lt;code&gt;$0&lt;/code&gt;; See &lt;a href=&quot;special-parameters&quot;&gt;Special Parameters&lt;/a&gt;, for the description of special parameter 0). Assignment to &lt;code&gt;BASH_ARGV0&lt;/code&gt; causes the value assigned to also be assigned to &lt;code&gt;$0&lt;/code&gt;. If &lt;code&gt;BASH_ARGV0&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">참조하면, 쉘이나 쉘 스크립트의 이름이 변수가 확장 (동일 &lt;code&gt;$0&lt;/code&gt; ; 참조 &lt;a href=&quot;special-parameters&quot;&gt;특수 매개 변수&lt;/a&gt; , 특수 매개 변수 0의 설명). &lt;code&gt;BASH_ARGV0&lt;/code&gt; 에 할당 하면 할당 된 값이 &lt;code&gt;$0&lt;/code&gt; 에도 할당됩니다 . &lt;code&gt;BASH_ARGV0&lt;/code&gt; 이 설정되지 않으면 이후에 재설정 되더라도 특수 속성이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="150c68ccee034162950161be62a4f805a5ef9435" translate="yes" xml:space="preserve">
          <source>When referenced, this variable expands to the name of the shell or shell script (identical to &lt;code&gt;$0&lt;/code&gt;; See &lt;a href=&quot;special-parameters#Special-Parameters&quot;&gt;Special Parameters&lt;/a&gt;, for the description of special parameter 0). Assignment to &lt;code&gt;BASH_ARGV0&lt;/code&gt; causes the value assigned to also be assigned to &lt;code&gt;$0&lt;/code&gt;. If &lt;code&gt;BASH_ARGV0&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">참조하면, 쉘이나 쉘 스크립트의 이름이 변수가 확장 (동일 &lt;code&gt;$0&lt;/code&gt; ; 참조 &lt;a href=&quot;special-parameters#Special-Parameters&quot;&gt;특수 매개 변수&lt;/a&gt; , 특수 매개 변수 0의 설명). &lt;code&gt;BASH_ARGV0&lt;/code&gt; 에 지정 하면 지정된 값도 &lt;code&gt;$0&lt;/code&gt; 지정됩니다 . 경우 &lt;code&gt;BASH_ARGV0&lt;/code&gt; 가 설정되지, 그것은 나중에 다시 경우에도 특별한 속성을 잃게된다.</target>
        </trans-unit>
        <trans-unit id="45cf503e752328f4671d7fd8b0aa73a3ce391007" translate="yes" xml:space="preserve">
          <source>When running in &lt;small&gt;POSIX&lt;/small&gt; mode, a special builtin returning an error status will not cause the shell to exit (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 모드 에서 실행할 때 오류 상태를 반환하는 특수 내장 기능으로 인해 쉘이 종료되지 않습니다 ( &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="086cf6906dc04f0765087bbc691ace44014c43a1" translate="yes" xml:space="preserve">
          <source>When running in &lt;small&gt;POSIX&lt;/small&gt; mode, a special builtin returning an error status will not cause the shell to exit (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt; 모드 에서 실행할 때 오류 상태를 리턴하는 특수 내장 기능은 쉘을 종료하지 않습니다 ( &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7b8317d3aa6cbfb795fe137ca454414725d9ebe3" translate="yes" xml:space="preserve">
          <source>When set to &amp;lsquo;</source>
          <target state="translated">'로 설정하면</target>
        </trans-unit>
        <trans-unit id="55f3e3f1e06a97818ce0ffb33865599309fb29ae" translate="yes" xml:space="preserve">
          <source>When the</source>
          <target state="translated">때</target>
        </trans-unit>
        <trans-unit id="ed6f6132d172440c1347341297e43687516fbe0f" translate="yes" xml:space="preserve">
          <source>When the &amp;lsquo;</source>
          <target state="translated">때 '</target>
        </trans-unit>
        <trans-unit id="753d257bf6ee3cd6f44fec11ebbaeca478a30867" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;[&lt;/code&gt; form is used, the last argument to the command must be a &lt;code&gt;]&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;[&lt;/code&gt; 형태가 사용되는 명령의 마지막 인자는이어야 &lt;code&gt;]&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="bd8fbc4c3ab7b1cc80a0533e910af5b054950285" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;alias&lt;/code&gt; builtin displays alias definitions, it does not display them with a leading &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;alias&lt;/code&gt; 내장에 별명 정의가 표시 되면 앞에 '</target>
        </trans-unit>
        <trans-unit id="ede03a75a00c40b7521d02f5b9c764a1fc9ff744" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cd&lt;/code&gt; builtin cannot change a directory because the length of the pathname constructed from &lt;code&gt;$PWD&lt;/code&gt; and the directory name supplied as an argument exceeds &lt;var&gt;PATH_MAX&lt;/var&gt; when all symbolic links are expanded, &lt;code&gt;cd&lt;/code&gt; will fail instead of attempting to use only the supplied directory name.</source>
          <target state="translated">모든 기호 링크가 확장 될 때 &lt;code&gt;$PWD&lt;/code&gt; 에서 생성 된 경로 이름의 길이 와 인수로 제공된 디렉토리 이름이 &lt;var&gt;PATH_MAX&lt;/var&gt; 를 초과 하여 &lt;code&gt;cd&lt;/code&gt; 내장에서 디렉토리를 변경할 수없는 경우, 제공된 디렉토리 이름 만 사용하는 대신 &lt;code&gt;cd&lt;/code&gt; 가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e03d0b8eac300db42ea692af51322d2345246227" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cd&lt;/code&gt; builtin is invoked in &lt;var&gt;logical&lt;/var&gt; mode, and the pathname constructed from &lt;code&gt;$PWD&lt;/code&gt; and the directory name supplied as an argument does not refer to an existing directory, &lt;code&gt;cd&lt;/code&gt; will fail instead of falling back to &lt;var&gt;physical&lt;/var&gt; mode.</source>
          <target state="translated">때 &lt;code&gt;cd&lt;/code&gt; 내장이에 호출 &lt;var&gt;logical&lt;/var&gt; 모드,로 구성 경로 이름 &lt;code&gt;$PWD&lt;/code&gt; 인수가 기존의 디렉토리를 참조하지 않는 및 디렉토리 이름 공급, &lt;code&gt;cd&lt;/code&gt; 대신 다시 떨어지는 실패 &lt;var&gt;physical&lt;/var&gt; 모드.</target>
        </trans-unit>
        <trans-unit id="70b34d9bc91438d8df4f544558ff765251e270cf" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;set&lt;/code&gt; builtin is invoked without options, it displays variable values without quotes, unless they contain shell metacharacters, even if the result contains nonprinting characters.</source>
          <target state="translated">때 &lt;code&gt;set&lt;/code&gt; 내장이 옵션없이 호출 그들은 결과가 인쇄되지 않는 문자가 포함 된 경우에도, 쉘 메타 문자를 포함하지 않는 한, 그것은 따옴표없이 변수 값을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e3b23cbca44922a690aeaf426ca126c4c99bf9c1" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;set&lt;/code&gt; builtin is invoked without options, it does not display shell function names and definitions.</source>
          <target state="translated">옵션없이 &lt;code&gt;set&lt;/code&gt; builtin을 호출 하면 쉘 함수 이름과 정의가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="17d27a57c44a0c7b3e09cf75676ad49580258f1e" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;xpg_echo&lt;/code&gt; option is enabled, Bash does not attempt to interpret any arguments to &lt;code&gt;echo&lt;/code&gt; as options. Each argument is displayed, after escape characters are converted.</source>
          <target state="translated">때 &lt;code&gt;xpg_echo&lt;/code&gt; 의 옵션이 활성화되어, 배쉬는 어떤 인수를 해석하려고 시도하지 않습니다 &lt;code&gt;echo&lt;/code&gt; 옵션으로. 이스케이프 문자가 변환 된 후 각 인수가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e313430e29daad7b2a47e01771927c0ee9907994" translate="yes" xml:space="preserve">
          <source>When the coprocess is executed, the shell creates an array variable (see &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt;) named &lt;code&gt;NAME&lt;/code&gt; in the context of the executing shell. The standard output of &lt;var&gt;command&lt;/var&gt; is connected via a pipe to a file descriptor in the executing shell, and that file descriptor is assigned to &lt;code&gt;NAME&lt;/code&gt;[0]. The standard input of &lt;var&gt;command&lt;/var&gt; is connected via a pipe to a file descriptor in the executing shell, and that file descriptor is assigned to &lt;code&gt;NAME&lt;/code&gt;[1]. This pipe is established before any redirections specified by the command (see &lt;a href=&quot;redirections&quot;&gt;Redirections&lt;/a&gt;). The file descriptors can be utilized as arguments to shell commands and redirections using standard word expansions. Other than those created to execute command and process substitutions, the file descriptors are not available in subshells.</source>
          <target state="translated">코 프로세스가 실행되면 셸은 실행중인 셸의 컨텍스트에서 &lt;code&gt;NAME&lt;/code&gt; 이라는 배열 변수 ( &lt;a href=&quot;arrays&quot;&gt;Arrays&lt;/a&gt; 참조 )를 만듭니다 . &lt;var&gt;command&lt;/var&gt; 의 표준 출력은 파이프를 통해 실행중인 쉘의 파일 설명자에 연결되며 해당 파일 설명자는 &lt;code&gt;NAME&lt;/code&gt; [0]에 할당됩니다 . &lt;var&gt;command&lt;/var&gt; 의 표준 입력은 파이프를 통해 실행중인 쉘의 파일 설명자에 연결되며 해당 파일 설명자는 &lt;code&gt;NAME&lt;/code&gt; [1]에 할당됩니다 . 이 파이프는 명령에서 지정한 리디렉션 전에 설정됩니다 ( &lt;a href=&quot;redirections&quot;&gt;리디렉션&lt;/a&gt; 참조).). 파일 설명자는 표준 단어 확장을 사용하여 쉘 명령 및 리디렉션에 대한 인수로 활용할 수 있습니다. 명령 및 프로세스 대체를 실행하기 위해 생성 된 것 외에 파일 설명자는 서브 쉘에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="199243eb479e5f8d4ee5c53671c20467621f2580" translate="yes" xml:space="preserve">
          <source>When the coprocess is executed, the shell creates an array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;) named &lt;code&gt;NAME&lt;/code&gt; in the context of the executing shell. The standard output of &lt;var&gt;command&lt;/var&gt; is connected via a pipe to a file descriptor in the executing shell, and that file descriptor is assigned to &lt;code&gt;NAME&lt;/code&gt;[0]. The standard input of &lt;var&gt;command&lt;/var&gt; is connected via a pipe to a file descriptor in the executing shell, and that file descriptor is assigned to &lt;code&gt;NAME&lt;/code&gt;[1]. This pipe is established before any redirections specified by the command (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;). The file descriptors can be utilized as arguments to shell commands and redirections using standard word expansions. Other than those created to execute command and process substitutions, the file descriptors are not available in subshells.</source>
          <target state="translated">코 프로세스가 실행될 때, 쉘은 실행중인 쉘의 컨텍스트에서 &lt;code&gt;NAME&lt;/code&gt; 이라는 배열 변수 ( &lt;a href=&quot;arrays#Arrays&quot;&gt;배열&lt;/a&gt; 참조 )를 작성합니다 . &lt;var&gt;command&lt;/var&gt; 의 표준 출력은 파이프를 통해 실행 쉘의 파일 디스크립터에 연결되며 해당 파일 디스크립터는 &lt;code&gt;NAME&lt;/code&gt; [0]에 지정됩니다 . &lt;var&gt;command&lt;/var&gt; 의 표준 입력은 파이프를 통해 실행 쉘의 파일 디스크립터에 연결되며 해당 파일 디스크립터는 &lt;code&gt;NAME&lt;/code&gt; [1]에 지정됩니다 . 이 파이프는 명령으로 지정된 리디렉션 전에 설정됩니다 ( &lt;a href=&quot;redirections#Redirections&quot;&gt;리디렉션&lt;/a&gt; 참조).). 파일 디스크립터는 표준 단어 확장을 사용하여 쉘 명령 및 경로 재 지정에 대한 인수로 사용될 수 있습니다. 명령 및 프로세스 대체를 실행하기 위해 작성된 것 이외의 파일 디스크립터는 서브 쉘에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="272fd40115d9a135d8797ba275f3cd6b25337922" translate="yes" xml:space="preserve">
          <source>When the end of options is encountered, &lt;code&gt;getopts&lt;/code&gt; exits with a return value greater than zero. &lt;code&gt;OPTIND&lt;/code&gt; is set to the index of the first non-option argument, and &lt;var&gt;name&lt;/var&gt; is set to &amp;lsquo;</source>
          <target state="translated">옵션의 끝이 발생하면 &lt;code&gt;getopts&lt;/code&gt; 는 리턴 값이 0보다 큰 엑시트를 종료합니다. &lt;code&gt;OPTIND&lt;/code&gt; 는 옵션이 아닌 첫 번째 인수의 색인으로 설정 되고 &lt;var&gt;name&lt;/var&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="d2ed536c18161a096582f70b1168f7b1216c7832" translate="yes" xml:space="preserve">
          <source>When the old-style backquote form of substitution is used, backslash retains its literal meaning except when followed by &amp;lsquo;</source>
          <target state="translated">이전 스타일의 역 따옴표 대체 형식을 사용하는 경우 백 슬래시는 뒤에 '</target>
        </trans-unit>
        <trans-unit id="74c274f3b8a1c6be20564925328d3e28431a65f5" translate="yes" xml:space="preserve">
          <source>When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), &lt;code&gt;time&lt;/code&gt; may be followed by a newline. In this case, the shell displays the total user and system time consumed by the shell and its children. The &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable may be used to specify the format of the time information.</source>
          <target state="translated">쉘이 &lt;small&gt;POSIX&lt;/small&gt; 모드 에있을 때 ( &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ) &lt;code&gt;time&lt;/code&gt; 뒤에 개행이 올 수 있습니다. 이 경우 셸은 셸과 해당 자식이 소비 한 총 사용자 및 시스템 시간을 표시합니다. &lt;code&gt;TIMEFORMAT&lt;/code&gt; 의 변수는 시간 정보의 포맷을 지정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="96a9041d224ded50f6d61046286100832281d2e7" translate="yes" xml:space="preserve">
          <source>When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), &lt;code&gt;time&lt;/code&gt; may be followed by a newline. In this case, the shell displays the total user and system time consumed by the shell and its children. The &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable may be used to specify the format of the time information.</source>
          <target state="translated">쉘이 &lt;small&gt;POSIX&lt;/small&gt; 모드 인 경우 ( &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ) &lt;code&gt;time&lt;/code&gt; 뒤에 줄 바꿈이 올 수 있습니다. 이 경우 셸에는 셸과 해당 자식에서 소비 한 총 사용자 및 시스템 시간이 표시됩니다. &lt;code&gt;TIMEFORMAT&lt;/code&gt; 의 변수는 시간 정보의 포맷을 지정하기 위해 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="d4ec193a539c22ac5eca91a72f81d7adf6025612" translate="yes" xml:space="preserve">
          <source>When the shell is running interactively, it changes its behavior in several ways.</source>
          <target state="translated">쉘이 대화식으로 실행되면 여러 가지 방식으로 동작이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="e42b85a148a076bbc7a895300855a32abf142653" translate="yes" xml:space="preserve">
          <source>When the shell is waiting for a job or process using the &lt;code&gt;wait&lt;/code&gt; builtin, and job control is enabled, &lt;code&gt;wait&lt;/code&gt; will return when the job changes state. The</source>
          <target state="translated">쉘이 대기 내장 기능을 사용하여 작업 또는 프로세스를 &lt;code&gt;wait&lt;/code&gt; 중이고 작업 제어가 사용 가능한 경우 작업 상태가 변경되면 &lt;code&gt;wait&lt;/code&gt; 가 리턴됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="fbfddd034699ddbb19853b5cffd539e5eaa98dc8" translate="yes" xml:space="preserve">
          <source>When the shell reads input, it proceeds through a sequence of operations. If the input indicates the beginning of a comment, the shell ignores the comment symbol (&amp;lsquo;</source>
          <target state="translated">쉘이 입력을 읽을 때 일련의 작업을 진행합니다. 입력이 주석의 시작을 나타내는 경우 쉘은 주석 기호 ( '</target>
        </trans-unit>
        <trans-unit id="ef506d9dc11fa9109da8ad65cf883d89c9449053" translate="yes" xml:space="preserve">
          <source>When the shell starts up, the history is initialized from the file named by the &lt;code&gt;HISTFILE&lt;/code&gt; variable (default</source>
          <target state="translated">쉘이 시작될 때 히스토리는 &lt;code&gt;HISTFILE&lt;/code&gt; 변수에 의해 명명 된 파일에서 초기화됩니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="77a6e1e727c8b8d46a90e5211c2564f5b4e07e74" translate="yes" xml:space="preserve">
          <source>When the variable is assigned a value, all lower-case characters are converted to upper-case. The lower-case attribute is disabled.</source>
          <target state="translated">변수에 값이 지정되면 모든 소문자가 대문자로 변환됩니다. 소문자 속성이 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b92815e90e22bfc43ea3604f269b538b0461773" translate="yes" xml:space="preserve">
          <source>When the variable is assigned a value, all upper-case characters are converted to lower-case. The upper-case attribute is disabled.</source>
          <target state="translated">변수에 값이 지정되면 모든 대문자가 소문자로 변환됩니다. 대문자 속성이 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c63a351bbb0b692e0a20f094808827f822d8d96" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;[[&lt;/code&gt;, the &amp;lsquo;</source>
          <target state="translated">함께 사용되는 경우 &lt;code&gt;[[&lt;/code&gt; 상기 '</target>
        </trans-unit>
        <trans-unit id="ea37a64e15d28ed7a20c1b6d5cdabe5ba6012c12" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;test&lt;/code&gt; or &amp;lsquo;</source>
          <target state="translated">함께 사용하면 &lt;code&gt;test&lt;/code&gt; '또는</target>
        </trans-unit>
        <trans-unit id="f7ee732871c7b8b43fe2973d514b7807acd539cd" translate="yes" xml:space="preserve">
          <source>When using</source>
          <target state="translated">사용할 때</target>
        </trans-unit>
        <trans-unit id="c61dcfadd37db50e68e58cb8326397e6ca93fc37" translate="yes" xml:space="preserve">
          <source>When using a variable name with a subscript as an argument to a command, such as with &lt;code&gt;unset&lt;/code&gt;, without using the word expansion syntax described above, the argument is subject to the shell&amp;rsquo;s filename expansion. If filename expansion is not desired, the argument should be quoted.</source>
          <target state="translated">위에 설명 된 단어 확장 구문을 사용하지 않고 &lt;code&gt;unset&lt;/code&gt; 과 같은 명령에 대한 인수로 아래 첨자를 가진 변수 이름을 사용하는 경우 인수는 셸의 파일 이름 확장에 영향을받습니다. 파일 이름 확장을 원하지 않으면 인수를 인용해야합니다.</target>
        </trans-unit>
        <trans-unit id="81da930d4106f4d1e85e5be34715b2306e8ddcdf" translate="yes" xml:space="preserve">
          <source>When using the second form, &lt;var&gt;word&lt;/var&gt; may not expand to a number or &amp;lsquo;</source>
          <target state="translated">두 번째 양식을 사용할 때 &lt;var&gt;word&lt;/var&gt; 가 숫자 나 '</target>
        </trans-unit>
        <trans-unit id="668069609747d6c224ed20a0f608411c874e3e6a" translate="yes" xml:space="preserve">
          <source>When using the shell, only &amp;lsquo;</source>
          <target state="translated">쉘을 사용할 때 '</target>
        </trans-unit>
        <trans-unit id="1f72fda5730c2c292d6bfbac173258b567cd1c2a" translate="yes" xml:space="preserve">
          <source>When word completion is attempted for an argument to a command for which a completion specification (a &lt;var&gt;compspec&lt;/var&gt;) has been defined using the &lt;code&gt;complete&lt;/code&gt; builtin (see &lt;a href=&quot;programmable-completion-builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;), the programmable completion facilities are invoked.</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 내장 ( &lt;a href=&quot;programmable-completion-builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt; 참조)을 사용하여 완성 사양 ( &lt;var&gt;compspec&lt;/var&gt; )이 정의 된 명령에 대한 인수에 대해 단어 완성을 시도 하면 프로그래밍 가능한 완성 기능이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="56abe9ecf09f2b7691653e7729606d38408ddd54" translate="yes" xml:space="preserve">
          <source>When word completion is attempted for an argument to a command for which a completion specification (a &lt;var&gt;compspec&lt;/var&gt;) has been defined using the &lt;code&gt;complete&lt;/code&gt; builtin (see &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;), the programmable completion facilities are invoked.</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 스펙을 사용하여 완료 스펙 ( &lt;var&gt;compspec&lt;/var&gt; )이 정의 된 명령에 대한 인수에 대해 단어 완료가 시도 되면 ( &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;프로그램 가능 완료 내장&lt;/a&gt; 참조 ) 프로그램 가능 완료 기능이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="38e6cf49bb0a8ee6e58a3e620a573fc3ad9d522f" translate="yes" xml:space="preserve">
          <source>When you add text in the middle of a line, you will notice that characters to the right of the cursor are &amp;lsquo;pushed over&amp;rsquo; to make room for the text that you have inserted. Likewise, when you delete text behind the cursor, characters to the right of the cursor are &amp;lsquo;pulled back&amp;rsquo; to fill in the blank space created by the removal of the text. A list of the bare essentials for editing the text of an input line follows.</source>
          <target state="translated">줄 중간에 텍스트를 추가하면 커서 오른쪽에있는 문자가 '밀어 져'삽입 된 텍스트를위한 공간이 만들어집니다. 마찬가지로, 커서 뒤의 텍스트를 삭제하면 커서 오른쪽의 문자가 '뒤로 당겨져'텍스트를 제거하여 생성 된 빈 공간을 채 웁니다. 입력 줄의 텍스트를 편집하는 데 필요한 기본 사항 목록이 이어집니다.</target>
        </trans-unit>
        <trans-unit id="cec74b15fc6bfefba022a119fb96c3cec23af155" translate="yes" xml:space="preserve">
          <source>When you enter a line in &lt;code&gt;vi&lt;/code&gt; mode, you are already placed in &amp;lsquo;insertion&amp;rsquo; mode, as if you had typed an &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;vi&lt;/code&gt; 모드 에서 라인을 입력하면 '삽입'모드에 이미 '</target>
        </trans-unit>
        <trans-unit id="39bab91fb8c5856e90231b9523fc1c7ec513fdd3" translate="yes" xml:space="preserve">
          <source>When you use a kill command, the text is saved in a &lt;em&gt;kill-ring&lt;/em&gt;. Any number of consecutive kills save all of the killed text together, so that when you yank it back, you get it all. The kill ring is not line specific; the text that you killed on a previously typed line is available to be yanked back later, when you are typing another line.</source>
          <target state="translated">kill 명령을 사용하면 텍스트가 &lt;em&gt;kill-ring에&lt;/em&gt; 저장됩니다 . 연속으로 여러 번 죽이면 죽여 진 텍스트를 모두 함께 저장하므로 다시 잡아 당길 때 모든 텍스트를 얻을 수 있습니다. 킬 링은 특정 라인이 아닙니다. 이전에 입력 한 줄에서 죽인 텍스트는 다른 줄을 입력 할 때 나중에 다시 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="255774c5e880fecd728cc58e02263e9d32d2416a" translate="yes" xml:space="preserve">
          <source>While executing commands is essential, most of the power (and complexity) of shells is due to their embedded programming languages. Like any high-level language, the shell provides variables, flow control constructs, quoting, and functions.</source>
          <target state="translated">명령을 실행하는 것이 필수적이지만 쉘의 강력한 기능 (및 복잡성)은 내장 된 프로그래밍 언어로 인한 것입니다. 다른 고급 언어와 마찬가지로 쉘은 변수, 흐름 제어 구문, 인용 및 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9180ec4d813a7436e99939ed2d81f4dcd696a248" translate="yes" xml:space="preserve">
          <source>While the &lt;small&gt;GNU&lt;/small&gt; operating system provides other shells, including a version of &lt;code&gt;csh&lt;/code&gt;, Bash is the default shell. Like other &lt;small&gt;GNU&lt;/small&gt; software, Bash is quite portable. It currently runs on nearly every version of Unix and a few other operating systems - independently-supported ports exist for &lt;small&gt;MS-DOS&lt;/small&gt;, &lt;small&gt;OS/2&lt;/small&gt;, and Windows platforms.</source>
          <target state="translated">&lt;small&gt;GNU&lt;/small&gt; 운영 체제는 &lt;code&gt;csh&lt;/code&gt; 버전을 포함한 다른 쉘을 제공 하지만 Bash는 기본 쉘입니다. 다른 &lt;small&gt;GNU&lt;/small&gt; 소프트웨어 와 마찬가지로 Bash는 이식성이 뛰어납니다. 현재 거의 모든 Unix 버전과 몇 가지 다른 운영 체제에서 실행되며 &lt;small&gt;MS-DOS&lt;/small&gt; , &lt;small&gt;OS / 2&lt;/small&gt; 및 Windows 플랫폼에 대해 독립적으로 지원되는 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d296b77a725bd6de00e8492f649e38826354e5c" translate="yes" xml:space="preserve">
          <source>While the Readline library does not have a full set of &lt;code&gt;vi&lt;/code&gt; editing functions, it does contain enough to allow simple editing of the line. The Readline &lt;code&gt;vi&lt;/code&gt; mode behaves as specified in the &lt;small&gt;POSIX&lt;/small&gt; standard.</source>
          <target state="translated">Readline 라이브러리에는 전체 &lt;code&gt;vi&lt;/code&gt; 편집 기능 세트가 없지만 간단한 행 편집을 허용하기에 충분합니다. Readline &lt;code&gt;vi&lt;/code&gt; 모드는 &lt;small&gt;POSIX&lt;/small&gt; 표준에 지정된대로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="9612b10a6e0a4d6d0c625743851547327018b8f1" translate="yes" xml:space="preserve">
          <source>While variable indirection is available, it may not be applied to the &amp;lsquo;</source>
          <target state="translated">변수 간접 지정을 사용할 수 있지만 '</target>
        </trans-unit>
        <trans-unit id="b19351b493bff1c5e2ef8080582e54b0ee55dac4" translate="yes" xml:space="preserve">
          <source>With no options, display the history list with line numbers. Lines prefixed with a &amp;lsquo;</source>
          <target state="translated">옵션이 없으면 행 번호와 함께 히스토리 목록을 표시하십시오. 접두사 '</target>
        </trans-unit>
        <trans-unit id="55ad82d118f5a65694a7b6a3104ba8e1f5d0dc63" translate="yes" xml:space="preserve">
          <source>Within &amp;lsquo;</source>
          <target state="translated">내</target>
        </trans-unit>
        <trans-unit id="655cc82cd533f06957e505ed15d00ab247320e6c" translate="yes" xml:space="preserve">
          <source>Without &lt;var&gt;expr&lt;/var&gt;, &lt;code&gt;caller&lt;/code&gt; displays the line number and source filename of the current subroutine call. If a non-negative integer is supplied as &lt;var&gt;expr&lt;/var&gt;, &lt;code&gt;caller&lt;/code&gt; displays the line number, subroutine name, and source file corresponding to that position in the current execution call stack. This extra information may be used, for example, to print a stack trace. The current frame is frame 0.</source>
          <target state="translated">없이 &lt;var&gt;expr&lt;/var&gt; , &lt;code&gt;caller&lt;/code&gt; 현재 서브 루틴 호출의 행 번호와 소스 파일 이름을 표시합니다. 음수가 아닌 정수가 &lt;var&gt;expr&lt;/var&gt; 로 제공 되면 &lt;code&gt;caller&lt;/code&gt; 는 현재 실행 호출 스택에서 해당 위치에 해당하는 행 번호, 서브 루틴 이름 및 소스 파일을 표시합니다. 이 추가 정보는 예를 들어 스택 추적을 인쇄하는 데 사용될 수 있습니다. 현재 프레임은 프레임 0입니다.</target>
        </trans-unit>
        <trans-unit id="f3bccb568d2083ce3cc3fd5d484aeb7a4fa665e1" translate="yes" xml:space="preserve">
          <source>Without a numeric argument, the value of the &lt;code&gt;comment-begin&lt;/code&gt; variable is inserted at the beginning of the current line. If a numeric argument is supplied, this command acts as a toggle: if the characters at the beginning of the line do not match the value of &lt;code&gt;comment-begin&lt;/code&gt;, the value is inserted, otherwise the characters in &lt;code&gt;comment-begin&lt;/code&gt; are deleted from the beginning of the line. In either case, the line is accepted as if a newline had been typed. The default value of &lt;code&gt;comment-begin&lt;/code&gt; causes this command to make the current line a shell comment. If a numeric argument causes the comment character to be removed, the line will be executed by the shell.</source>
          <target state="translated">숫자 인수가 없으면 &lt;code&gt;comment-begin&lt;/code&gt; 변수 의 값 이 현재 행의 시작 부분에 삽입됩니다. 숫자 인수가 제공되면이 명령은 토글 역할을합니다. 줄의 시작 부분에있는 문자가 &lt;code&gt;comment-begin&lt;/code&gt; 값과 일치하지 않으면 값이 삽입되고, 그렇지 않으면 &lt;code&gt;comment-begin&lt;/code&gt; 에있는 문자 가 처음부터 삭제됩니다 라인의. 두 경우 모두 줄 바꿈이 입력 된 것처럼 줄이 수락됩니다. &lt;code&gt;comment-begin&lt;/code&gt; 의 기본값 은이 명령으로 현재 행을 쉘 주석으로 만듭니다. 숫자 인수가 주석 문자를 제거하면 쉘이 행을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="653ebf73bebeedbc12797f58a606efdf49f60d81" translate="yes" xml:space="preserve">
          <source>Without arguments or with the</source>
          <target state="translated">인수없이 또는</target>
        </trans-unit>
        <trans-unit id="96926cabf14560d2972e553541566c921210f5d0" translate="yes" xml:space="preserve">
          <source>Without options, remove each &lt;var&gt;jobspec&lt;/var&gt; from the table of active jobs. If the</source>
          <target state="translated">옵션이 없으면 활성 작업 테이블에서 각 &lt;var&gt;jobspec&lt;/var&gt; 을 제거하십시오 . 만약</target>
        </trans-unit>
        <trans-unit id="c759d7dc3468dfe86f9cbaed5a1c36016677768d" translate="yes" xml:space="preserve">
          <source>Word Designators</source>
          <target state="translated">단어 지정자</target>
        </trans-unit>
        <trans-unit id="1a1b902933d8ac04cec7026f7cceaa9d893a7476" translate="yes" xml:space="preserve">
          <source>Word Splitting</source>
          <target state="translated">단어 분리</target>
        </trans-unit>
        <trans-unit id="f2778c7e426e39bc29879fdf4ac05b63428e4861" translate="yes" xml:space="preserve">
          <source>Word designators are used to select desired words from the event. A &amp;lsquo;</source>
          <target state="translated">단어 지정자는 이벤트에서 원하는 단어를 선택하는 데 사용됩니다. ㅏ '</target>
        </trans-unit>
        <trans-unit id="848f48edf34a4bd78eb9d02f18c5a46103ddc968" translate="yes" xml:space="preserve">
          <source>Words of the form &lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; are treated specially. The word expands to &lt;var&gt;string&lt;/var&gt;, with backslash-escaped characters replaced as specified by the ANSI C standard. Backslash escape sequences, if present, are decoded as follows:</source>
          <target state="translated">&lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; 형식의 단어는 특별히 취급됩니다. ANSI C 표준에 지정된대로 백 슬래시 이스케이프 문자가 바뀐 상태로 단어가 &lt;var&gt;string&lt;/var&gt; 으로 확장됩니다 . 백 슬래시 이스케이프 시퀀스가있는 경우 다음과 같이 디코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="867c2261c6766c9fb6f59923e00fafd3705c3d2a" translate="yes" xml:space="preserve">
          <source>Words that have special meaning to the shell.</source>
          <target state="translated">껍데기에 특별한 의미가있는 단어.</target>
        </trans-unit>
        <trans-unit id="84c51356b071f1d521a4f1f299fba8c8301acb7a" translate="yes" xml:space="preserve">
          <source>Write out the current history list to the history file.</source>
          <target state="translated">현재 히스토리 목록을 히스토리 파일에 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="9842f6fa4c1dbb866338c2ef7fc96fca552c238e" translate="yes" xml:space="preserve">
          <source>Write the formatted &lt;var&gt;arguments&lt;/var&gt; to the standard output under the control of the &lt;var&gt;format&lt;/var&gt;. The</source>
          <target state="translated">&lt;var&gt;format&lt;/var&gt; 제어를 통해 형식화 된 &lt;var&gt;arguments&lt;/var&gt; 를 표준 출력에 기록하십시오 . 그만큼</target>
        </trans-unit>
        <trans-unit id="f0ce36eaf7d15e3950e3e94f7e814a43c3aff0ef" translate="yes" xml:space="preserve">
          <source>XCF</source>
          <target state="translated">XCF</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="c6522577101d4c974000a04d4aa197b0b181fc24" translate="yes" xml:space="preserve">
          <source>Yank the most recently killed text back into the buffer at the cursor.</source>
          <target state="translated">가장 최근에 죽인 텍스트를 커서의 버퍼로 다시 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="677dc7bd7602fa2437c898d54e1ab14378d52ff9" translate="yes" xml:space="preserve">
          <source>Yank the top of the kill ring into the buffer at point.</source>
          <target state="translated">킬링 (Kill) 링의 상단을 버퍼에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="7836d624fd362de336f8c651347570a188eaf6ad" translate="yes" xml:space="preserve">
          <source>You can compile Bash for more than one kind of computer at the same time, by placing the object files for each architecture in their own directory. To do this, you must use a version of &lt;code&gt;make&lt;/code&gt; that supports the &lt;code&gt;VPATH&lt;/code&gt; variable, such as GNU &lt;code&gt;make&lt;/code&gt;. &lt;code&gt;cd&lt;/code&gt; to the directory where you want the object files and executables to go and run the &lt;code&gt;configure&lt;/code&gt; script from the source directory (see &lt;a href=&quot;basic-installation&quot;&gt;Basic Installation&lt;/a&gt;). You may need to supply the</source>
          <target state="translated">각 아키텍처에 대한 개체 파일을 자체 디렉터리에 배치하여 동시에 여러 종류의 컴퓨터에 대해 Bash를 컴파일 할 수 있습니다. 이렇게하려면 GNU &lt;code&gt;make&lt;/code&gt; 와 같이 &lt;code&gt;VPATH&lt;/code&gt; 변수 를 지원하는 &lt;code&gt;make&lt;/code&gt; 버전을 사용해야합니다 . 개체 파일과 실행 파일을 저장할 디렉터리로 &lt;code&gt;cd&lt;/code&gt; 하고 소스 디렉터리에서 &lt;code&gt;configure&lt;/code&gt; 스크립트를 실행합니다 ( &lt;a href=&quot;basic-installation&quot;&gt;기본 설치&lt;/a&gt; 참조 ). 제공해야 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="25c737fe9782668677465bb13c81366f7005ee3e" translate="yes" xml:space="preserve">
          <source>You can compile Bash for more than one kind of computer at the same time, by placing the object files for each architecture in their own directory. To do this, you must use a version of &lt;code&gt;make&lt;/code&gt; that supports the &lt;code&gt;VPATH&lt;/code&gt; variable, such as GNU &lt;code&gt;make&lt;/code&gt;. &lt;code&gt;cd&lt;/code&gt; to the directory where you want the object files and executables to go and run the &lt;code&gt;configure&lt;/code&gt; script from the source directory (see &lt;a href=&quot;basic-installation#Basic-Installation&quot;&gt;Basic Installation&lt;/a&gt;). You may need to supply the</source>
          <target state="translated">각 아키텍처에 대한 오브젝트 파일을 자체 디렉토리에 배치하여 둘 이상의 컴퓨터에 대해 Bash를 동시에 컴파일 할 수 있습니다. 이렇게하려면 GNU &lt;code&gt;make&lt;/code&gt; 와 같은 &lt;code&gt;VPATH&lt;/code&gt; 변수 를 지원하는 &lt;code&gt;make&lt;/code&gt; 버전을 사용해야합니다 . 오브젝트 파일 및 실행 파일을 이동하려는 디렉토리로 &lt;code&gt;cd&lt;/code&gt; 하고 소스 디렉토리에서 &lt;code&gt;configure&lt;/code&gt; 스크립트를 실행 하십시오 ( &lt;a href=&quot;basic-installation#Basic-Installation&quot;&gt;기본 설치&lt;/a&gt; 참조 ). 당신은 공급해야 할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="966292c34949d5d341081c06091f7aeabaaf5055" translate="yes" xml:space="preserve">
          <source>You can modify the run-time behavior of Readline by altering the values of variables in Readline using the &lt;code&gt;set&lt;/code&gt; command within the init file. The syntax is simple:</source>
          <target state="translated">init 파일 내의 &lt;code&gt;set&lt;/code&gt; 명령을 사용하여 Readline의 변수 값을 변경하여 Readline의 런타임 동작을 수정할 수 있습니다 . 구문은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="fa7bf613e3295ed9f0a8fb5ca0672b3c5eab07e1" translate="yes" xml:space="preserve">
          <source>You can pass numeric arguments to Readline commands. Sometimes the argument acts as a repeat count, other times it is the</source>
          <target state="translated">숫자 인수를 Readline 명령에 전달할 수 있습니다. 때로는 인수가 반복 횟수로 작동하고 다른 경우에는</target>
        </trans-unit>
        <trans-unit id="5be9cf180a0c9b7e18ecc3038ece719ad6ce745a" translate="yes" xml:space="preserve">
          <source>You can remove the program binaries and object files from the source code directory by typing &amp;lsquo;</source>
          <target state="translated">'를 입력하여 소스 코드 디렉토리에서 프로그램 바이너리 및 오브젝트 파일을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8809b83e96c416d37503bf077e1953492b50d356" translate="yes" xml:space="preserve">
          <source>You can specify separate installation prefixes for architecture-specific files and architecture-independent files. If you give &lt;code&gt;configure&lt;/code&gt; the option</source>
          <target state="translated">아키텍처 별 파일과 아키텍처 독립적 인 파일에 대해 별도의 설치 접두사를 지정할 수 있습니다. 당신은주는 경우에 &lt;code&gt;configure&lt;/code&gt; 옵션을</target>
        </trans-unit>
        <trans-unit id="3d549afa7c81de4bec2647a208873a198d6763c6" translate="yes" xml:space="preserve">
          <source>You can use Parallel to move files from the current directory when the number of files is too large to process with one &lt;code&gt;mv&lt;/code&gt; invocation:</source>
          <target state="translated">파일 수가 너무 많아서 하나의 &lt;code&gt;mv&lt;/code&gt; 호출 로 처리 할 수없는 경우 병렬을 사용하여 현재 디렉토리에서 파일을 이동할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff1274999d5897a967880e9602c53686869c7832" translate="yes" xml:space="preserve">
          <source>You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one.</source>
          <target state="translated">수정 된 버전의 표지 텍스트 목록 끝에 최대 5 개의 단어를 앞 표지 텍스트로, 최대 25 개의 단어를 뒤 표지 텍스트로 추가 할 수 있습니다. 하나의 엔터티에 의해 하나의 프론트 커버 텍스트와 하나의 백 커버 텍스트 만 추가 될 수 있습니다. 문서에 이미 귀하가 추가 한 동일한 표지에 대한 표지 텍스트가 포함되어 있거나 귀하를 대리하고있는 동일한 단체에 의해 작성된 약정이 포함 된 경우, 귀하는 다른 표지를 추가 할 수 없습니다. 그러나 이전 게시자를 추가 한 이전 게시자의 명시 적 허가에 따라 이전 것을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e661e3a96416898648db44bb6ce0eb56887ee1c9" translate="yes" xml:space="preserve">
          <source>You may add a section Entitled &amp;ldquo;Endorsements&amp;rdquo;, provided it contains nothing but endorsements of your Modified Version by various parties&amp;mdash;for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard.</source>
          <target state="translated">피어 리뷰 진술서 또는 텍스트가 표준에 대한 권위있는 정의로 텍스트에 의해 승인 된 것과 같이 다양한 당사자에 의해 수정 된 버전에 대한 보증만을 포함하는 경우, &quot;승인&quot;이라는 제목의 섹션을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="282bb9dfed04c9fa638e3ac9a73c1f5ecd474d79" translate="yes" xml:space="preserve">
          <source>You may also lend copies, under the same conditions stated above, and you may publicly display copies.</source>
          <target state="translated">위에서 언급 한 것과 동일한 조건에서 사본을 빌려줄 수도 있으며 공개적으로 사본을 표시 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c6f537b19345a1f28e1581319a0a7d12ff3a575" translate="yes" xml:space="preserve">
          <source>You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers.</source>
          <target state="translated">귀하는 원본 문서의 모든 고정 섹션을 수정하지 않은 상태로 모두 포함하고 수정하지 않은 경우, 본 버전에 따라이 라이센스에 따라 릴리스 된 다른 문서와 수정 버전에 대해 위의 섹션 4에 정의 된 조건에 따라 문서를 결합 할 수 있습니다. 사용권 계약에 결합 된 작업의 고정 섹션으로 사용되며 모든 보증 면책 사항을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="412203d0de70d3e44d37e7ecda18aa73505e5c31" translate="yes" xml:space="preserve">
          <source>You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:</source>
          <target state="translated">귀하는이 라이센스에 따라 수정 된 버전을 문서의 역할로 채우고 수정 된 버전을 문서의 역할로 채우는 경우, 위 2 항 및 3 항의 조건에 따라 수정 된 버전의 문서를 복사 및 배포 할 수 있습니다. 사본을 소유 한 사람에게 수정 된 버전. 또한 수정 된 버전에서 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d30168039ed590d15bcce8ea918cbf6e6bb07cae" translate="yes" xml:space="preserve">
          <source>You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3.</source>
          <target state="translated">이 라이센스, 저작권 고지 및이 라이센스가 해당 문서에 적용된다는 라이센스 고지가 모든 사본으로 재생산되고 다른 조건을 추가하지 않는 한, 상업적 또는 비영리적으로 어떤 매체로도 문서를 복사하고 배포 할 수 있습니다. 이 라이센스의 사람들에게. 귀하는 귀하가 작성 또는 배포 한 사본의 읽기 또는 추가 복사를 방해하거나 통제하기 위해 기술적 조치를 사용할 수 없습니다. 그러나 사본과 교환하여 보상을받을 수 있습니다. 충분한 수의 사본을 배포하는 경우 섹션 3의 조건도 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="56e62f961ec3ed13a2f798469affbc27b69bd976" translate="yes" xml:space="preserve">
          <source>You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.</source>
          <target state="translated">추출 된 문서에이 라이센스의 사본을 삽입하고 해당 문서의 완전 복사와 관련하여 다른 모든 측면에서이 라이센스를 따르는 경우, 해당 콜렉션에서 단일 문서를 추출하여이 라이센스에 따라 개별적으로 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e8e1827e6f8675e9dd0669377a6e4bd993e83f2" translate="yes" xml:space="preserve">
          <source>You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects.</source>
          <target state="translated">귀하는 본 라이센스에 따라이 라이센스의 규칙을 준수하는 경우,이 라이센스에 따라 공개 된 문서 및 기타 문서로 구성된 콜렉션을 작성하고이 라이센스의 개별 사본을 콜렉션에 포함 된 단일 사본으로 대체 할 수 있습니다. 다른 모든 측면에서 각 문서의 완전 복사.</target>
        </trans-unit>
        <trans-unit id="51d02e802fce41287d4c0388192a7d2945190088" translate="yes" xml:space="preserve">
          <source>You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License.</source>
          <target state="translated">이 라이센스에 따라 명시 적으로 제공된 경우를 제외하고 문서를 복사, 수정, 하위 라이센스 또는 배포 할 수 없습니다. 달리 복사, 수정, 하위 라이센스 또는 배포하려는 시도는 무효이며이 라이센스에 따른 귀하의 권리는 자동으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="1e5c2f367f02e47a8c160cda1cd9d91decbac441" translate="yes" xml:space="preserve">
          <source>[</source>
          <target state="translated">[</target>
        </trans-unit>
        <trans-unit id="d224d8bd579e022a3152adc3ac6ec5ffac7b3367" translate="yes" xml:space="preserve">
          <source>[ ]*</source>
          <target state="translated">[] *</target>
        </trans-unit>
        <trans-unit id="f834bde21859165b56c0aaa6547991a1ce7d94bd" translate="yes" xml:space="preserve">
          <source>[[</source>
          <target state="translated">[[</target>
        </trans-unit>
        <trans-unit id="edd74dd5fd077a5baf2dd832b6fcd2516c38db54" translate="yes" xml:space="preserve">
          <source>[a-dx-z]</source>
          <target state="translated">[a-dx-z]</target>
        </trans-unit>
        <trans-unit id="e9f16a01f274397b0c8315286f1929d05b06c0ef" translate="yes" xml:space="preserve">
          <source>[aBbCcDdxXyYz]</source>
          <target state="translated">[aBbCcDdxXyYz]</target>
        </trans-unit>
        <trans-unit id="fadabc351d4f25299435d015d6cfd06136703b5e" translate="yes" xml:space="preserve">
          <source>[abcdxyz]</source>
          <target state="translated">[abcdxyz]</target>
        </trans-unit>
        <trans-unit id="41899536e2ac4b7391727782d5a1adbdf3f35125" translate="yes" xml:space="preserve">
          <source>[n]&amp;gt;&amp;amp;&lt;var&gt;word&lt;/var&gt;</source>
          <target state="translated">[n]&amp;gt;&amp;amp;&lt;var&gt;word&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="780fa0ff9e751654e40fe8a1a68d0f2a62d159e8" translate="yes" xml:space="preserve">
          <source>[n]&amp;lt;&amp;amp;&lt;var&gt;word&lt;/var&gt;</source>
          <target state="translated">[n]&amp;lt;&amp;amp;&lt;var&gt;word&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="translated">\</target>
        </trans-unit>
        <trans-unit id="2de673b7fa2e0a0e52326460a59d3f726ea66d02" translate="yes" xml:space="preserve">
          <source>\1</source>
          <target state="translated">\1</target>
        </trans-unit>
        <trans-unit id="c016fb3c2d71f02e58827dbbb11225ca77cbae92" translate="yes" xml:space="preserve">
          <source>\2</source>
          <target state="translated">\2</target>
        </trans-unit>
        <trans-unit id="d2e4c64b58fc62c43b5d838f83539aed0c4da1a8" translate="yes" xml:space="preserve">
          <source>\s-\v\$</source>
          <target state="translated">\s-\v\$</target>
        </trans-unit>
        <trans-unit id="0f30fef4f3c89af3463eaa6ea1c157ebb2c73c9e" translate="yes" xml:space="preserve">
          <source>]]</source>
          <target state="translated">]]</target>
        </trans-unit>
        <trans-unit id="5bc50612646fc47ce021d3fa7fba6af78c0a8cca" translate="yes" xml:space="preserve">
          <source>^Y</source>
          <target state="translated">^Y</target>
        </trans-unit>
        <trans-unit id="702bf963d5f4436227c3776678b3e175902e762a" translate="yes" xml:space="preserve">
          <source>^Z</source>
          <target state="translated">^Z</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="90c73bacbd21841707ae60d5bcc1160e5dc4e4c3" translate="yes" xml:space="preserve">
          <source>a control-&lt;var&gt;x&lt;/var&gt; character</source>
          <target state="translated">제어 &lt;var&gt;x&lt;/var&gt; 문자</target>
        </trans-unit>
        <trans-unit id="d536b1baf37bf343aa892b44bcab569176c3a795" translate="yes" xml:space="preserve">
          <source>aaaaaab</source>
          <target state="translated">aaaaaab</target>
        </trans-unit>
        <trans-unit id="40b904fd8852297daeaeb426b1bca46fd2454aa3" translate="yes" xml:space="preserve">
          <source>aab</source>
          <target state="translated">aab</target>
        </trans-unit>
        <trans-unit id="cbecc8ebffcfc0bb9b9798a5613916c64a2b63a8" translate="yes" xml:space="preserve">
          <source>abort (C-g)</source>
          <target state="translated">중단 (Cg)</target>
        </trans-unit>
        <trans-unit id="03acfbf987d64c228646286847667ecf6b8fb6be" translate="yes" xml:space="preserve">
          <source>accept-line (Newline or Return)</source>
          <target state="translated">수락 라인 (개행 또는 리턴)</target>
        </trans-unit>
        <trans-unit id="9118866496dfbc2e597505390a41e74349ab5152" translate="yes" xml:space="preserve">
          <source>addition, subtraction</source>
          <target state="translated">더하기, 빼기</target>
        </trans-unit>
        <trans-unit id="07f3659ec271eee920b5269f5364d0ab8433728c" translate="yes" xml:space="preserve">
          <source>after (or before) any login-specific initializations.</source>
          <target state="translated">로그인 별 초기화 후 (또는 이전)</target>
        </trans-unit>
        <trans-unit id="f50433605f8f400a57a74b70284fb69b0627cf01" translate="yes" xml:space="preserve">
          <source>alert (bell)</source>
          <target state="translated">경고 (종)</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="c81ac90ad154e582701af8147aa7541b041f5a84" translate="yes" xml:space="preserve">
          <source>alias expansion</source>
          <target state="translated">별칭 확장</target>
        </trans-unit>
        <trans-unit id="b09c26042f7d9089b55ba3fe7cf73079745b7d48" translate="yes" xml:space="preserve">
          <source>alias-expand-line ()</source>
          <target state="translated">별칭 확장 라인 ()</target>
        </trans-unit>
        <trans-unit id="7208b011d04e4840597133487f3e0cdb3e7339a6" translate="yes" xml:space="preserve">
          <source>an escape character</source>
          <target state="translated">탈출 캐릭터</target>
        </trans-unit>
        <trans-unit id="e12e6046a92734bfd31cc6d381fc395fb569cedf" translate="yes" xml:space="preserve">
          <source>an escape character (not ANSI C)</source>
          <target state="translated">이스케이프 문자 (ANSI C 아님)</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="f9585e116f42fc80bfcc117654868617655b8df3" translate="yes" xml:space="preserve">
          <source>and its successor,</source>
          <target state="translated">그리고 그 후계자</target>
        </trans-unit>
        <trans-unit id="fee01b359832af6797c78f83ce4d97efd54f80c3" translate="yes" xml:space="preserve">
          <source>and the compound assignment syntax to create array variables, additional attributes do not take effect until subsequent assignments.</source>
          <target state="translated">배열 변수를 작성하기위한 복합 지정 구문을 사용하면 추가 지정이 후속 지정까지 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68d82c662f6eac816c0e3353d7ed4a723e965282" translate="yes" xml:space="preserve">
          <source>and the current working directory cannot be successfully determined after a successful directory change, &lt;code&gt;cd&lt;/code&gt; will return an unsuccessful status.</source>
          <target state="translated">디렉토리 변경에 성공한 후 현재 작업 디렉토리를 판별 할 수 없으면 &lt;code&gt;cd&lt;/code&gt; 는 실패한 상태를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d69b217d0e88de30853dbce706c9849430de03f5" translate="yes" xml:space="preserve">
          <source>and/or processing tools are not generally available, and the machine-generated</source>
          <target state="translated">및 / 또는 가공 도구는 일반적으로 이용 가능하지 않으며, 기계 생성</target>
        </trans-unit>
        <trans-unit id="1268a4c533db781c38527c7c5f444ef72884fba8" translate="yes" xml:space="preserve">
          <source>are always ignored when &lt;code&gt;GLOBIGNORE&lt;/code&gt; is set and not null. However, setting &lt;code&gt;GLOBIGNORE&lt;/code&gt; to a non-null value has the effect of enabling the &lt;code&gt;dotglob&lt;/code&gt; shell option, so all other filenames beginning with a &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;GLOBIGNORE&lt;/code&gt; 가 설정되고 null이 아닌 경우 항상 무시됩니다 . 그러나 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 를 널이 아닌 값으로 설정하면 &lt;code&gt;dotglob&lt;/code&gt; 쉘 옵션을 사용 하는 효과가 있으므로 다른 모든 파일 이름은 '</target>
        </trans-unit>
        <trans-unit id="4e268dbb80edc51c8246863d7e7bac755c465aec" translate="yes" xml:space="preserve">
          <source>are supplied, any other &lt;var&gt;name&lt;/var&gt; arguments are ignored; these completions only apply to the case specified by the option.</source>
          <target state="translated">다른 &lt;var&gt;name&lt;/var&gt; 인수는 무시됩니다. 이러한 완료는 옵션으로 지정된 경우에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa3ecd9e4f4771afd3546fe76a43487532ad61af" translate="yes" xml:space="preserve">
          <source>argument to tell &lt;code&gt;configure&lt;/code&gt; where the source files are. &lt;code&gt;configure&lt;/code&gt; automatically checks for the source code in the directory that &lt;code&gt;configure&lt;/code&gt; is in and in &amp;lsquo;..&amp;rsquo;.</source>
          <target state="translated">인수는 말할 &lt;code&gt;configure&lt;/code&gt; 소스 파일은 다음과 같습니다. &lt;code&gt;configure&lt;/code&gt; 는 &lt;code&gt;configure&lt;/code&gt; 가 있는 디렉토리 와 '..' 에있는 소스 코드를 자동으로 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="6c684d3782e2decbf824cf0a5a0eacdf61c00566" translate="yes" xml:space="preserve">
          <source>arithmetic evaluation</source>
          <target state="translated">산술 평가</target>
        </trans-unit>
        <trans-unit id="7c7839f4094eb3f2bf8846547e825bee4d667fbf" translate="yes" xml:space="preserve">
          <source>arithmetic expansion</source>
          <target state="translated">산술 확장</target>
        </trans-unit>
        <trans-unit id="7afe4fda2816bf2d3746dfe1513abfccf9d8c133" translate="yes" xml:space="preserve">
          <source>arithmetic, shell</source>
          <target state="translated">산술, 쉘</target>
        </trans-unit>
        <trans-unit id="fcc9016d1aa6a646348df69e14d31e955d51da60" translate="yes" xml:space="preserve">
          <source>arrays</source>
          <target state="translated">arrays</target>
        </trans-unit>
        <trans-unit id="e43188efd03e628b87dcc57a46a0003265638044" translate="yes" xml:space="preserve">
          <source>as alluded to above.</source>
          <target state="translated">위에서 언급 한 바와 같이.</target>
        </trans-unit>
        <trans-unit id="ce69e0a4b543276e16b7547ba7f8363b2db902c8" translate="yes" xml:space="preserve">
          <source>as appropriate. This will search backward or forward in the history for the next entry matching the search string typed so far. Any other key sequence bound to a Readline command will terminate the search and execute that command. For instance, a &lt;code&gt;RET&lt;/code&gt; will terminate the search and accept the line, thereby executing the command from the history list. A movement command will terminate the search, make the last line found the current line, and begin editing.</source>
          <target state="translated">적절한. 그러면 지금까지 입력 한 검색 문자열과 일치하는 다음 항목이 기록에서 앞뒤로 검색됩니다. Readline 명령에 바인딩 된 다른 키 시퀀스는 검색을 종료하고 해당 명령을 실행합니다. 예를 들어, &lt;code&gt;RET&lt;/code&gt; 은 검색을 종료하고 라인을 승인하여 히스토리 목록에서 명령을 실행합니다. 이동 명령은 검색을 종료하고 마지막 줄을 현재 줄로 찾은 다음 편집을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="b697dfce9fa378f19687d2d74caa1b51c0c89796" translate="yes" xml:space="preserve">
          <source>as signifying the end of options.</source>
          <target state="translated">옵션의 끝을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f26b63d628c9b5679c54e6f8f5ee244932da2d7d" translate="yes" xml:space="preserve">
          <source>assignment</source>
          <target state="translated">assignment</target>
        </trans-unit>
        <trans-unit id="117f1628e507334ac1452a1400e6522fce67256c" translate="yes" xml:space="preserve">
          <source>at the Bash prompt in your Bash source directory.</source>
          <target state="translated">Bash 소스 디렉토리의 Bash 프롬프트에서.</target>
        </trans-unit>
        <trans-unit id="ee36e383db46fe87f1937cbbd00df8ef37bd94a1" translate="yes" xml:space="preserve">
          <source>attribute itself, are performed on the variable referenced by &lt;var&gt;name&lt;/var&gt;&amp;rsquo;s value. The nameref attribute cannot be applied to array variables.</source>
          <target state="translated">속성 자체는 &lt;var&gt;name&lt;/var&gt; 값으로 참조되는 변수에서 수행됩니다 . nameref 속성은 배열 변수에 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c9072eb987d0905a72c46fd2f6e922e36e93c239" translate="yes" xml:space="preserve">
          <source>audible</source>
          <target state="translated">audible</target>
        </trans-unit>
        <trans-unit id="3a89bdb9412bc8f22c9c0f2b3fe93933ec2ff4e7" translate="yes" xml:space="preserve">
          <source>auto_resume</source>
          <target state="translated">auto_resume</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="248a20b62efba8f4303c75830c83230f1b088f1e" translate="yes" xml:space="preserve">
          <source>background</source>
          <target state="translated">background</target>
        </trans-unit>
        <trans-unit id="3853072116a861ff4c871d3e96a9cac7da78b7d2" translate="yes" xml:space="preserve">
          <source>backslash</source>
          <target state="translated">backslash</target>
        </trans-unit>
        <trans-unit id="4930eb3f60df3a6a61e8d44178feb2b8f820a153" translate="yes" xml:space="preserve">
          <source>backspace</source>
          <target state="translated">backspace</target>
        </trans-unit>
        <trans-unit id="11f508181c6291d45e531743e04a1e2f5b4fdf49" translate="yes" xml:space="preserve">
          <source>backward-char (C-b)</source>
          <target state="translated">뒤로 문자 (Cb)</target>
        </trans-unit>
        <trans-unit id="fe52ffa71338b999595b2a846eaac7087bc718d4" translate="yes" xml:space="preserve">
          <source>backward-delete-char (Rubout)</source>
          <target state="translated">뒤로 삭제 문자 (루브 아웃)</target>
        </trans-unit>
        <trans-unit id="1fe959421f97f4643d90427553dbabda732ba5c3" translate="yes" xml:space="preserve">
          <source>backward-kill-line (C-x Rubout)</source>
          <target state="translated">후진 킬라 인 (Cx Rubout)</target>
        </trans-unit>
        <trans-unit id="99421e02ed9a0fae784b99fe58beadc924ec9b6e" translate="yes" xml:space="preserve">
          <source>backward-kill-word (M-DEL)</source>
          <target state="translated">백 킬킬 워드 (M-DEL)</target>
        </trans-unit>
        <trans-unit id="c856eb9ca7f445b4f6f11f01edb0156776f5e5a4" translate="yes" xml:space="preserve">
          <source>backward-word (M-b)</source>
          <target state="translated">백 워드 (Mb)</target>
        </trans-unit>
        <trans-unit id="ab28712d143d8f15faca7745bd40669636f4c2a4" translate="yes" xml:space="preserve">
          <source>bash-malloc</source>
          <target state="translated">bash-malloc</target>
        </trans-unit>
        <trans-unit id="4e859a10308ef3e53cba4c29d868095126753fa8" translate="yes" xml:space="preserve">
          <source>because the word boundaries differ.</source>
          <target state="translated">단어의 경계가 다르기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="03c9454959760f23a7139beafad08a43360caa42" translate="yes" xml:space="preserve">
          <source>beginning-of-history (M-&amp;lt;)</source>
          <target state="translated">역사의 시작 (M- &amp;lt;)</target>
        </trans-unit>
        <trans-unit id="0a8394789be2a936ee80c0b79c64e928a7914e04" translate="yes" xml:space="preserve">
          <source>beginning-of-line (C-a)</source>
          <target state="translated">라인 시작 (Ca)</target>
        </trans-unit>
        <trans-unit id="1fc020e095de2ec81f837d30c0e3cc25e7de8eb8" translate="yes" xml:space="preserve">
          <source>bell-style</source>
          <target state="translated">bell-style</target>
        </trans-unit>
        <trans-unit id="80f87c8847da6c872ce2fc9fec0a98a73ebc578d" translate="yes" xml:space="preserve">
          <source>bg</source>
          <target state="translated">bg</target>
        </trans-unit>
        <trans-unit id="f415ec1d9821f06dedec21eea5790ab8d8e21305" translate="yes" xml:space="preserve">
          <source>bg %1</source>
          <target state="translated">bg % 1</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="602e9530b4ae1beff22d544afefc90f5d036efa6" translate="yes" xml:space="preserve">
          <source>bind -x</source>
          <target state="translated">바인드 -x</target>
        </trans-unit>
        <trans-unit id="9072cd214a9f2e8b33bb5ea0876f1f32ebba91a0" translate="yes" xml:space="preserve">
          <source>bind-tty-special-chars</source>
          <target state="translated">bind-tty-special-chars</target>
        </trans-unit>
        <trans-unit id="4ba5b46e332d373dfdfa248036598eb70f831d32" translate="yes" xml:space="preserve">
          <source>bitwise AND</source>
          <target state="translated">비트 AND</target>
        </trans-unit>
        <trans-unit id="7d5bb4d1e43ddd2b7554d5d7d0b44fa8e15c9b68" translate="yes" xml:space="preserve">
          <source>bitwise OR</source>
          <target state="translated">비트 OR</target>
        </trans-unit>
        <trans-unit id="5f0f8466323f4b1566846afa9c8d4b65fab80825" translate="yes" xml:space="preserve">
          <source>bitwise exclusive OR</source>
          <target state="translated">비트 배타적 OR</target>
        </trans-unit>
        <trans-unit id="cf451154dbabadfd6aad6ecedb4a5dc16273fae9" translate="yes" xml:space="preserve">
          <source>blink-matching-paren</source>
          <target state="translated">blink-matching-paren</target>
        </trans-unit>
        <trans-unit id="5fc1df04ede4371bf68283b29ac654f74bc5bb92" translate="yes" xml:space="preserve">
          <source>brace expansion</source>
          <target state="translated">버팀대 확장</target>
        </trans-unit>
        <trans-unit id="80803a8cf590e165baa58dd65b859acb3f493f8d" translate="yes" xml:space="preserve">
          <source>bracketed-paste-begin ()</source>
          <target state="translated">괄호 붙여 넣기 시작 ()</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="748a336cc88c03ccb07ed5f5073d18624731b8b5" translate="yes" xml:space="preserve">
          <source>builtin</source>
          <target state="translated">builtin</target>
        </trans-unit>
        <trans-unit id="fccae45c20eb86351df553c5112826c1e2b0dde7" translate="yes" xml:space="preserve">
          <source>builtin xxx</source>
          <target state="translated">내장 xxx</target>
        </trans-unit>
        <trans-unit id="bd1dc6f71297c711fd62c63df1bdbc3f49918cb3" translate="yes" xml:space="preserve">
          <source>builtins</source>
          <target state="translated">builtins</target>
        </trans-unit>
        <trans-unit id="67088e8d86fead569a6b737f9775499b48ae14a4" translate="yes" xml:space="preserve">
          <source>but the value of the &lt;code&gt;PATH&lt;/code&gt; variable is not used to search for the filename.</source>
          <target state="translated">그러나 &lt;code&gt;PATH&lt;/code&gt; 변수 의 값은 파일 이름을 검색하는 데 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b135c91c22da20c5bf6a8140fd6629d0393e898" translate="yes" xml:space="preserve">
          <source>by giving &lt;code&gt;configure&lt;/code&gt; the option</source>
          <target state="translated">옵션 을 &lt;code&gt;configure&lt;/code&gt; 하여</target>
        </trans-unit>
        <trans-unit id="6331a0351729ab84ac55aded8edd1c3b9e08309e" translate="yes" xml:space="preserve">
          <source>call-last-kbd-macro (C-x e)</source>
          <target state="translated">콜-라스트 -kbd- 매크로 (Cx e)</target>
        </trans-unit>
        <trans-unit id="14dc69de2a1e6087529f02b62fd2888c90d741d3" translate="yes" xml:space="preserve">
          <source>caller</source>
          <target state="translated">caller</target>
        </trans-unit>
        <trans-unit id="85f762af1815cf6c18bc7974f5da42d33a5508b3" translate="yes" xml:space="preserve">
          <source>capitalize-word (M-c)</source>
          <target state="translated">대문자 단어 (Mc)</target>
        </trans-unit>
        <trans-unit id="6e9f192b79a14968d26f70ab1aa8e21b65e3df64" translate="yes" xml:space="preserve">
          <source>carriage return</source>
          <target state="translated">캐리지 리턴</target>
        </trans-unit>
        <trans-unit id="6406510c31e0c9925733c7f21414bf6428333ed2" translate="yes" xml:space="preserve">
          <source>case</source>
          <target state="translated">case</target>
        </trans-unit>
        <trans-unit id="b3597e3ba40838313efca5d16876aec7434a322f" translate="yes" xml:space="preserve">
          <source>cat file | bash</source>
          <target state="translated">고양이 파일 | 세게 때리다</target>
        </trans-unit>
        <trans-unit id="70c98830b8e294055184b1eb485a9ad71bd5052c" translate="yes" xml:space="preserve">
          <source>causes the file whose name is the expansion of &lt;var&gt;word&lt;/var&gt; to be opened for both reading and writing on file descriptor &lt;var&gt;n&lt;/var&gt;, or on file descriptor 0 if &lt;var&gt;n&lt;/var&gt; is not specified. If the file does not exist, it is created.</source>
          <target state="translated">파일 디스크립터 &lt;var&gt;n&lt;/var&gt; 에서 읽기 및 쓰기를 위해 또는 &lt;var&gt;n&lt;/var&gt; 이 지정되지 않은 경우 파일 디스크립터 0 에서 파일의 이름이 확장 된 &lt;var&gt;word&lt;/var&gt; 의 파일이 열리도록 합니다. 파일이 없으면 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="034778198a045c1ed80be271cdd029b76874f6fc" translate="yes" xml:space="preserve">
          <source>cd</source>
          <target state="translated">cd</target>
        </trans-unit>
        <trans-unit id="b452d6b23b3c28f85872fffd99bdaf90ce0ad44a" translate="yes" xml:space="preserve">
          <source>ce</source>
          <target state="translated">ce</target>
        </trans-unit>
        <trans-unit id="2dbdeac35f75ac34d500de8f12e3bad211f27a37" translate="yes" xml:space="preserve">
          <source>character-search (C-])</source>
          <target state="translated">문자 검색 (C-))</target>
        </trans-unit>
        <trans-unit id="84c5bae5ea1b4612e1de0169359404a2ded06cad" translate="yes" xml:space="preserve">
          <source>character-search-backward (M-C-])</source>
          <target state="translated">문자 검색 후진 (MC-])</target>
        </trans-unit>
        <trans-unit id="dc89efc56b3571e3abc91cb195241a7489437a83" translate="yes" xml:space="preserve">
          <source>characters will terminate an incremental search.</source>
          <target state="translated">문자는 증분 검색을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="0918a5e40d76f368c815146a02acb9f603ec8d4f" translate="yes" xml:space="preserve">
          <source>clear-screen (C-l)</source>
          <target state="translated">클리어 스크린 (Cl)</target>
        </trans-unit>
        <trans-unit id="8fd35124b96fd8fb9b1ef1956dc8f95b59713786" translate="yes" xml:space="preserve">
          <source>colored-completion-prefix</source>
          <target state="translated">colored-completion-prefix</target>
        </trans-unit>
        <trans-unit id="243e3e0df1f310517d725c8e0576e3eadffa0e8e" translate="yes" xml:space="preserve">
          <source>colored-stats</source>
          <target state="translated">colored-stats</target>
        </trans-unit>
        <trans-unit id="6806f9cdb5c86b97d792597c92a2fbb73aad545c" translate="yes" xml:space="preserve">
          <source>comma</source>
          <target state="translated">comma</target>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="077c890397bea2056341829848e85570a1fe69d1" translate="yes" xml:space="preserve">
          <source>command an argument of 10, you could type &amp;lsquo;</source>
          <target state="translated">10의 인수를 명령하면 '</target>
        </trans-unit>
        <trans-unit id="9eed55da1f298f022a2075483e35465f5e08f841" translate="yes" xml:space="preserve">
          <source>command editing</source>
          <target state="translated">명령 편집</target>
        </trans-unit>
        <trans-unit id="402ed957b23d3eaa92467b21cec4500025aa15aa" translate="yes" xml:space="preserve">
          <source>command execution</source>
          <target state="translated">명령 실행</target>
        </trans-unit>
        <trans-unit id="454756230d5364d24466bddafd2da935b6419e25" translate="yes" xml:space="preserve">
          <source>command expansion</source>
          <target state="translated">명령 확장</target>
        </trans-unit>
        <trans-unit id="4d1d77e25cd35356cde10ef63fc85f8a802d39fc" translate="yes" xml:space="preserve">
          <source>command history</source>
          <target state="translated">명령 기록</target>
        </trans-unit>
        <trans-unit id="b05e1cd716adf3f3e010054dd33cbc26546ba5cb" translate="yes" xml:space="preserve">
          <source>command line option, it follows the &lt;small&gt;POSIX&lt;/small&gt; standard for startup files. In this mode, interactive shells expand the &lt;code&gt;ENV&lt;/code&gt; variable and commands are read and executed from the file whose name is the expanded value. No other startup files are read.</source>
          <target state="translated">명령 행 옵션 은 시작 파일 의 &lt;small&gt;POSIX&lt;/small&gt; 표준을 따릅니다 . 이 모드에서 대화식 쉘은 &lt;code&gt;ENV&lt;/code&gt; 변수를 확장하고 이름이 확장 된 값을 가진 파일에서 명령을 읽고 실행합니다. 다른 시작 파일을 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8a4be2d3930670c6d53b12e2f7d099be05b3eaca" translate="yes" xml:space="preserve">
          <source>command ls</source>
          <target state="translated">명령 ls</target>
        </trans-unit>
        <trans-unit id="428ab79c2b21a0ed2b6307161ddb8954b3df4542" translate="yes" xml:space="preserve">
          <source>command search</source>
          <target state="translated">명령 검색</target>
        </trans-unit>
        <trans-unit id="7ccd7eb1cd01381dd3073d46f1920ad418c69933" translate="yes" xml:space="preserve">
          <source>command substitution</source>
          <target state="translated">명령 대체</target>
        </trans-unit>
        <trans-unit id="a02c684aed3888815022d9330c1e1941a5a41dc9" translate="yes" xml:space="preserve">
          <source>command timing</source>
          <target state="translated">명령 타이밍</target>
        </trans-unit>
        <trans-unit id="09f7bb7a173d6082e979e94516f77977dd9559c9" translate="yes" xml:space="preserve">
          <source>command-line option or executing &amp;lsquo;</source>
          <target state="translated">명령 행 옵션 또는 '</target>
        </trans-unit>
        <trans-unit id="5b27cc7e22d1843c0482b877a83b3267c5ae7f2c" translate="yes" xml:space="preserve">
          <source>commands, compound</source>
          <target state="translated">명령, 복합</target>
        </trans-unit>
        <trans-unit id="06600b23932bc3e5e48fb2a1bde1b3811a68a80f" translate="yes" xml:space="preserve">
          <source>commands, conditional</source>
          <target state="translated">조건부 명령</target>
        </trans-unit>
        <trans-unit id="07245602a4027800213f178c6efe3048d5a286a5" translate="yes" xml:space="preserve">
          <source>commands, grouping</source>
          <target state="translated">명령, 그룹화</target>
        </trans-unit>
        <trans-unit id="964f17fac13390aa0191140375d2c0ae486dc079" translate="yes" xml:space="preserve">
          <source>commands, lists</source>
          <target state="translated">명령, 목록</target>
        </trans-unit>
        <trans-unit id="750b18cc74949c31c4817ce883fb1832a12cc61c" translate="yes" xml:space="preserve">
          <source>commands, looping</source>
          <target state="translated">명령, 반복</target>
        </trans-unit>
        <trans-unit id="e4858f65bbe715a3d4278901c913f7941a4f4e24" translate="yes" xml:space="preserve">
          <source>commands, pipelines</source>
          <target state="translated">명령, 파이프 라인</target>
        </trans-unit>
        <trans-unit id="991cb53bce6bfb337958a683762ecaf7304a4cf8" translate="yes" xml:space="preserve">
          <source>commands, shell</source>
          <target state="translated">명령, 쉘</target>
        </trans-unit>
        <trans-unit id="7e324281b3847e22c6cfc4a3621a0441c9125ab8" translate="yes" xml:space="preserve">
          <source>commands, simple</source>
          <target state="translated">간단한 명령</target>
        </trans-unit>
        <trans-unit id="296e22de8822f87512b8c1afea8e19feba479752" translate="yes" xml:space="preserve">
          <source>comment-begin</source>
          <target state="translated">comment-begin</target>
        </trans-unit>
        <trans-unit id="843e2d09948add183056420948ba9afa2b24674c" translate="yes" xml:space="preserve">
          <source>comments, shell</source>
          <target state="translated">주석, 쉘</target>
        </trans-unit>
        <trans-unit id="a6b8d8f62e216ac25f3e5a24c05cd51dabb64e7d" translate="yes" xml:space="preserve">
          <source>commonly is, see above for the effects.</source>
          <target state="translated">일반적으로 효과는 위를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4d04521b659a980378ebb5bda98bc5d6300c89c8" translate="yes" xml:space="preserve">
          <source>comparison</source>
          <target state="translated">comparison</target>
        </trans-unit>
        <trans-unit id="0f8e86986194ef77dc7c27a25f5e36760cb08467" translate="yes" xml:space="preserve">
          <source>compgen</source>
          <target state="translated">compgen</target>
        </trans-unit>
        <trans-unit id="0737c22d3bfae812339732d14d8c7dbd6dc4e09c" translate="yes" xml:space="preserve">
          <source>complete</source>
          <target state="translated">complete</target>
        </trans-unit>
        <trans-unit id="40272d2433fb023cb11293b476743289a5880c25" translate="yes" xml:space="preserve">
          <source>complete (TAB)</source>
          <target state="translated">완료 (TAB)</target>
        </trans-unit>
        <trans-unit id="61aa3738b931b055bae749bfb8375b05cfb9b8fc" translate="yes" xml:space="preserve">
          <source>complete-command (M-!)</source>
          <target state="translated">완전한 명령 (M-!)</target>
        </trans-unit>
        <trans-unit id="ff086b5fbf1f97bbe6c255ef386315f35e4a41fe" translate="yes" xml:space="preserve">
          <source>complete-filename (M-/)</source>
          <target state="translated">완전한 파일 이름 (M- /)</target>
        </trans-unit>
        <trans-unit id="7f748c047f73ca94030b0638105047d0984b8ca3" translate="yes" xml:space="preserve">
          <source>complete-hostname (M-@)</source>
          <target state="translated">완전한 호스트 이름 (M- @)</target>
        </trans-unit>
        <trans-unit id="038228a8664c492a67ef484b9c3745455d718bf8" translate="yes" xml:space="preserve">
          <source>complete-into-braces (M-{)</source>
          <target state="translated">완전 괄호 (M- {)</target>
        </trans-unit>
        <trans-unit id="e16e5bc4344388a4e25723082f18574bb85c7664" translate="yes" xml:space="preserve">
          <source>complete-username (M-~)</source>
          <target state="translated">완전한 사용자 이름 (M- ~)</target>
        </trans-unit>
        <trans-unit id="357861654fb8537035f9a29f8aec410cb9a87e52" translate="yes" xml:space="preserve">
          <source>complete-variable (M-$)</source>
          <target state="translated">완전 변수 (M- $)</target>
        </trans-unit>
        <trans-unit id="a94ce5f6178f8dd5bd9b17199af4e12fcc69e9ce" translate="yes" xml:space="preserve">
          <source>completion builtins</source>
          <target state="translated">완성 내장</target>
        </trans-unit>
        <trans-unit id="f4a19945f41ecdd886638932a566fa48e0bc0af2" translate="yes" xml:space="preserve">
          <source>completion-display-width</source>
          <target state="translated">completion-display-width</target>
        </trans-unit>
        <trans-unit id="1892ef5e0b0662ca3e4650e65be03f24ee265398" translate="yes" xml:space="preserve">
          <source>completion-ignore-case</source>
          <target state="translated">completion-ignore-case</target>
        </trans-unit>
        <trans-unit id="7d5f63055e9910d560ea96f19c7108685517d5f1" translate="yes" xml:space="preserve">
          <source>completion-map-case</source>
          <target state="translated">completion-map-case</target>
        </trans-unit>
        <trans-unit id="55eef9339c378aa4f14a53a29caf116f5bbce84d" translate="yes" xml:space="preserve">
          <source>completion-prefix-display-length</source>
          <target state="translated">completion-prefix-display-length</target>
        </trans-unit>
        <trans-unit id="dfbfbeb412d567931de726f65c3414fbb04c39e1" translate="yes" xml:space="preserve">
          <source>completion-query-items</source>
          <target state="translated">completion-query-items</target>
        </trans-unit>
        <trans-unit id="2e92afff16ab40f0db91c1e0d75a576ed6347ed5" translate="yes" xml:space="preserve">
          <source>compopt</source>
          <target state="translated">compopt</target>
        </trans-unit>
        <trans-unit id="fb996269eff67c0452e0538cc0f31775fb604799" translate="yes" xml:space="preserve">
          <source>conditional operator</source>
          <target state="translated">조건부 연산자</target>
        </trans-unit>
        <trans-unit id="aa221629d4166f269241614e022eba93f564a0c6" translate="yes" xml:space="preserve">
          <source>config-top.h</source>
          <target state="translated">config-top.h</target>
        </trans-unit>
        <trans-unit id="dd609cee42b96ae5a3197f92c6518ac41d9daf9d" translate="yes" xml:space="preserve">
          <source>config.cache</source>
          <target state="translated">config.cache</target>
        </trans-unit>
        <trans-unit id="03461db87a24c8a99f7e61a96ba5df4ef9e79d47" translate="yes" xml:space="preserve">
          <source>config.h</source>
          <target state="translated">config.h</target>
        </trans-unit>
        <trans-unit id="0a382cdcbcea7fc88d5b1dc00bbdad14a0624e14" translate="yes" xml:space="preserve">
          <source>config.log</source>
          <target state="translated">config.log</target>
        </trans-unit>
        <trans-unit id="0652e436f42d75f5672a8bd9ae2f398a55115d51" translate="yes" xml:space="preserve">
          <source>configuration</source>
          <target state="translated">configuration</target>
        </trans-unit>
        <trans-unit id="c4a709fa17ee62ed5b65e54177f2236a55318e5f" translate="yes" xml:space="preserve">
          <source>configure --help</source>
          <target state="translated">--help 구성</target>
        </trans-unit>
        <trans-unit id="87db583be5c13c1f7b3c958b10e03d67b6a2ca06" translate="yes" xml:space="preserve">
          <source>configure.ac</source>
          <target state="translated">configure.ac</target>
        </trans-unit>
        <trans-unit id="e79b46b13be5b5b4cb85f6ba62a192b4ac7a974c" translate="yes" xml:space="preserve">
          <source>containing compiler output (useful mainly for debugging &lt;code&gt;configure&lt;/code&gt;). If at some point</source>
          <target state="translated">컴파일러 출력을 포함합니다 (주로 &lt;code&gt;configure&lt;/code&gt; 디버깅에 유용 ). 어느 시점에</target>
        </trans-unit>
        <trans-unit id="a6f9c6ce275bbea9bac06ee3e4d1ed05a515d5f1" translate="yes" xml:space="preserve">
          <source>contains C Preprocessor &amp;lsquo;</source>
          <target state="translated">C 전 처리기 포함</target>
        </trans-unit>
        <trans-unit id="a298c0466afc46788b8c481fc945c74dc4e89bc7" translate="yes" xml:space="preserve">
          <source>contains a list of shell commands, one per line,</source>
          <target state="translated">쉘 명령 목록을 포함합니다 (한 줄에 하나씩).</target>
        </trans-unit>
        <trans-unit id="bfa1161684a7ffad5a5a9d245155a916a5f65324" translate="yes" xml:space="preserve">
          <source>contains results you don&amp;rsquo;t want to keep, you may remove or edit it.</source>
          <target state="translated">유지하고 싶지 않은 결과가 포함되어 있으면 삭제하거나 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d69ec69f2661f0723d3eeba3e9d09b5fc1a7e4" translate="yes" xml:space="preserve">
          <source>contains the line</source>
          <target state="translated">라인을 포함</target>
        </trans-unit>
        <trans-unit id="eee0bbba4ff92adbeb038a77df0466d660f15716" translate="yes" xml:space="preserve">
          <source>continue</source>
          <target state="translated">continue</target>
        </trans-unit>
        <trans-unit id="5cbd49312e540274d99e98a86f39b6e2059f247c" translate="yes" xml:space="preserve">
          <source>control operator</source>
          <target state="translated">제어 연산자</target>
        </trans-unit>
        <trans-unit id="06bc848cd0de71c656b6e4faea36ba73e368f27b" translate="yes" xml:space="preserve">
          <source>control prefix</source>
          <target state="translated">제어 접두사</target>
        </trans-unit>
        <trans-unit id="5cb83b7ca3d0fc89462a7914ef3d465f1d051247" translate="yes" xml:space="preserve">
          <source>convert-meta</source>
          <target state="translated">convert-meta</target>
        </trans-unit>
        <trans-unit id="a9132a9fdf23af1213879350ff511bbd1d538895" translate="yes" xml:space="preserve">
          <source>coprocess</source>
          <target state="translated">coprocess</target>
        </trans-unit>
        <trans-unit id="9872067df4776e21a0ec01def86a52bf6845d5b2" translate="yes" xml:space="preserve">
          <source>copy-backward-word ()</source>
          <target state="translated">카피 뒤로 단어 ()</target>
        </trans-unit>
        <trans-unit id="7b20287f18f7430a3dd4f566489e5ede9d250e57" translate="yes" xml:space="preserve">
          <source>copy-forward-word ()</source>
          <target state="translated">복사 전진 ()</target>
        </trans-unit>
        <trans-unit id="6cac573d383c190796528507c9b06a251a20a9c5" translate="yes" xml:space="preserve">
          <source>copy-region-as-kill ()</source>
          <target state="translated">복사 지역 (kill-region-as-kill) ()</target>
        </trans-unit>
        <trans-unit id="9145a3ad32249e3a113e52d2384b4bf1bb0f3b0f" translate="yes" xml:space="preserve">
          <source>csh</source>
          <target state="translated">csh</target>
        </trans-unit>
        <trans-unit id="75d4b00a1049122ad067c62b8a1d12b1fc774726" translate="yes" xml:space="preserve">
          <source>current traps set by &lt;code&gt;trap&lt;/code&gt;</source>
          <target state="translated">에 의해 설정된 현재의 트랩 &lt;code&gt;trap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38c3b38578f0e310c5dba5dad853162af304600c" translate="yes" xml:space="preserve">
          <source>dabbrev-expand ()</source>
          <target state="translated">dabbrev-expand ()</target>
        </trans-unit>
        <trans-unit id="a0910bc7d1ab368fa7191ecccf1477a45b181b8c" translate="yes" xml:space="preserve">
          <source>declare</source>
          <target state="translated">declare</target>
        </trans-unit>
        <trans-unit id="935418780523b8666627e7503dffbdca3152b785" translate="yes" xml:space="preserve">
          <source>declare -i</source>
          <target state="translated">선언 -i</target>
        </trans-unit>
        <trans-unit id="d581e7e3785c1029634135fed966140a7767e034" translate="yes" xml:space="preserve">
          <source>declare -x</source>
          <target state="translated">선언 -x</target>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="translated">delete</target>
        </trans-unit>
        <trans-unit id="679c1edf99a88ee1f40611e62552ebcf4000e1ed" translate="yes" xml:space="preserve">
          <source>delete-char (C-d)</source>
          <target state="translated">삭제 문자 (Cd)</target>
        </trans-unit>
        <trans-unit id="131a77b81c57ffa9c0d194831472f6f8fe8b671a" translate="yes" xml:space="preserve">
          <source>delete-char-or-list ()</source>
          <target state="translated">삭제 문자 또는 목록 ()</target>
        </trans-unit>
        <trans-unit id="a417f4a188969d6f67d80c65182bc23158540692" translate="yes" xml:space="preserve">
          <source>delete-horizontal-space ()</source>
          <target state="translated">수평-삭제 공간 ()</target>
        </trans-unit>
        <trans-unit id="04ede91cc7b184ec1d5c9237f2a5e61141d8fc63" translate="yes" xml:space="preserve">
          <source>designates the last argument of the preceding command. This may be shortened to &lt;code&gt;!$&lt;/code&gt;.</source>
          <target state="translated">이전 명령의 마지막 인수를 지정합니다. &lt;code&gt;!$&lt;/code&gt; 로 단축 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b612cb76c7d2ce13fca9100dbed308987d47df3" translate="yes" xml:space="preserve">
          <source>designates the preceding command. When you type this, the preceding command is repeated in toto.</source>
          <target state="translated">이전 명령을 지정합니다. 이것을 입력하면 이전 명령이 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="50051d6d9aefc6de1b14b7d66f7bc3faf424831f" translate="yes" xml:space="preserve">
          <source>designates the second argument of the most recent command starting with the letters &lt;code&gt;fi&lt;/code&gt;.</source>
          <target state="translated">문자 &lt;code&gt;fi&lt;/code&gt; 로 시작하는 가장 최근 명령의 두 번째 인수를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="4918151e941e8e1cdd88f2fec4cd995c9b7fbfe0" translate="yes" xml:space="preserve">
          <source>designed for human modification. Examples of transparent image formats include</source>
          <target state="translated">인간 수정을 위해 설계되었습니다. 투명한 이미지 형식의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a1672660723a4964716c4fad8430b64426c7ede" translate="yes" xml:space="preserve">
          <source>digit-argument (M-0, M-1, … M--)</source>
          <target state="translated">숫자 인수 (M-0, M-1,&amp;hellip; M--)</target>
        </trans-unit>
        <trans-unit id="4559b9a75a27e2112213399116a91ccc02b2b8d1" translate="yes" xml:space="preserve">
          <source>directories, each directory under</source>
          <target state="translated">디렉토리, 각 디렉토리 아래</target>
        </trans-unit>
        <trans-unit id="73d18221870155650a2a5df22f1db22d18fbd895" translate="yes" xml:space="preserve">
          <source>directory stack</source>
          <target state="translated">디렉토리 스택</target>
        </trans-unit>
        <trans-unit id="832a6c915c30481f1aecc9b9ec5600f7288a555e" translate="yes" xml:space="preserve">
          <source>directs both standard output (file descriptor 1) and standard error (file descriptor 2) to the file &lt;var&gt;dirlist&lt;/var&gt;, while the command</source>
          <target state="translated">파일을 모두 표준 출력 (파일 기술자 1)과 표준 오차 (파일 기술자 2) 지시 &lt;var&gt;dirlist&lt;/var&gt; 을 명령하는 동안,</target>
        </trans-unit>
        <trans-unit id="382d3f7938d955f423af4f34a33261241e45c9b2" translate="yes" xml:space="preserve">
          <source>directs only the standard output to file &lt;var&gt;dirlist&lt;/var&gt;, because the standard error was made a copy of the standard output before the standard output was redirected to &lt;var&gt;dirlist&lt;/var&gt;.</source>
          <target state="translated">표준 출력이 &lt;var&gt;dirlist&lt;/var&gt; 로 경로 재 지정되기 전에 표준 오류가 표준 출력의 사본이 되었기 때문에 표준 출력 만 파일 &lt;var&gt;dirlist&lt;/var&gt; 로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="3904c3fa5235bded78ba13f24e0690a907f04e90" translate="yes" xml:space="preserve">
          <source>direxpand-default</source>
          <target state="translated">direxpand-default</target>
        </trans-unit>
        <trans-unit id="4d47d2db541c41663c8c0bc2b1795aa88c209d4d" translate="yes" xml:space="preserve">
          <source>dirs</source>
          <target state="translated">dirs</target>
        </trans-unit>
        <trans-unit id="fbab444ca8de7b9af1966fe25bbfd9b1ffd1efdb" translate="yes" xml:space="preserve">
          <source>dirs +&lt;var&gt;N&lt;/var&gt;</source>
          <target state="translated">dirs + &lt;var&gt;N&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="9cf2faf360544bc3c530d7005a5e750d4ded5738" translate="yes" xml:space="preserve">
          <source>dirs -&lt;var&gt;N&lt;/var&gt;</source>
          <target state="translated">dirs- &lt;var&gt;N&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="a62fd6713cc9e37915d398272e8f56a8036cd16c" translate="yes" xml:space="preserve">
          <source>disable-completion</source>
          <target state="translated">disable-completion</target>
        </trans-unit>
        <trans-unit id="9d0f44a9c56f780e55732c15d00549586d34d7b8" translate="yes" xml:space="preserve">
          <source>disabled-builtins</source>
          <target state="translated">disabled-builtins</target>
        </trans-unit>
        <trans-unit id="9b66695fe2c105488ed57178ad21457b4a8f4d6d" translate="yes" xml:space="preserve">
          <source>disown</source>
          <target state="translated">disown</target>
        </trans-unit>
        <trans-unit id="99ab2e9e816b1935d99a079f44bbc8837a0b17c0" translate="yes" xml:space="preserve">
          <source>display-shell-version (C-x C-v)</source>
          <target state="translated">디스플레이 셸 버전 (Cx Cv)</target>
        </trans-unit>
        <trans-unit id="eadcd9bd2a09c75aef04954e6799e50278ee124a" translate="yes" xml:space="preserve">
          <source>do</source>
          <target state="translated">do</target>
        </trans-unit>
        <trans-unit id="e2f76b605ca3284684f458b0dca29ed99c4cf1e4" translate="yes" xml:space="preserve">
          <source>do-lowercase-version (M-A, M-B, M-x, …)</source>
          <target state="translated">소문자 버전 (MA, MB, Mx,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f7f029ecb98abe979074a3ab45b74dbd9af02d42" translate="yes" xml:space="preserve">
          <source>doc</source>
          <target state="translated">doc</target>
        </trans-unit>
        <trans-unit id="e5fd9cfe0e8039111d54b588e77b2bb0cad41c3a" translate="yes" xml:space="preserve">
          <source>done</source>
          <target state="translated">done</target>
        </trans-unit>
        <trans-unit id="5554bff0e540b930596ca569f631433f1f953645" translate="yes" xml:space="preserve">
          <source>double quote</source>
          <target state="translated">큰 따옴표</target>
        </trans-unit>
        <trans-unit id="896a7d9a6eec1ea5a91e2c761310ef42c1a0bb1a" translate="yes" xml:space="preserve">
          <source>downcase-word (M-l)</source>
          <target state="translated">소문자 단어 (Ml)</target>
        </trans-unit>
        <trans-unit id="68da4744ba794f0b12d98c66008c4ee79c008ed9" translate="yes" xml:space="preserve">
          <source>dump-functions ()</source>
          <target state="translated">덤프 기능 ()</target>
        </trans-unit>
        <trans-unit id="e44f3b4b64db9ccad65c4173a2d2611197f9529b" translate="yes" xml:space="preserve">
          <source>dump-macros ()</source>
          <target state="translated">덤프 매크로 ()</target>
        </trans-unit>
        <trans-unit id="a8a3fc9e3abd37923e617471a0dd6d1f1e43a771" translate="yes" xml:space="preserve">
          <source>dump-variables ()</source>
          <target state="translated">덤프 변수 ()</target>
        </trans-unit>
        <trans-unit id="7de90a69ddaffa54daa76e4403c3374421a7c66a" translate="yes" xml:space="preserve">
          <source>dynamic-complete-history (M-TAB)</source>
          <target state="translated">역동적 인 역사 (M-TAB)</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="b2d21e771d9f86865c5eff193663574dd1796c8f" translate="yes" xml:space="preserve">
          <source>echo</source>
          <target state="translated">echo</target>
        </trans-unit>
        <trans-unit id="c9146e1e018e33a2a1e5494b4577038e86c24a0c" translate="yes" xml:space="preserve">
          <source>echo-control-characters</source>
          <target state="translated">echo-control-characters</target>
        </trans-unit>
        <trans-unit id="e2c82c62c981df756590cfec88dfeb142e37cc96" translate="yes" xml:space="preserve">
          <source>edit-and-execute-command (C-x C-e)</source>
          <target state="translated">편집 및 실행 명령 (Cx Ce)</target>
        </trans-unit>
        <trans-unit id="a4820ba31c47bcf6ac4b6d5af46eba5ffc4fe15b" translate="yes" xml:space="preserve">
          <source>editing command lines</source>
          <target state="translated">명령 행 편집</target>
        </trans-unit>
        <trans-unit id="25dc5e40683332eac672e8c73edba569f7cf2d56" translate="yes" xml:space="preserve">
          <source>editing-mode</source>
          <target state="translated">editing-mode</target>
        </trans-unit>
        <trans-unit id="fe0d5578663a9feafd9a45dacd9318cb3c9822eb" translate="yes" xml:space="preserve">
          <source>elif</source>
          <target state="translated">elif</target>
        </trans-unit>
        <trans-unit id="ae050f5b7fb8d383d62139276081853b47e7a03e" translate="yes" xml:space="preserve">
          <source>else</source>
          <target state="translated">else</target>
        </trans-unit>
        <trans-unit id="802c59623ae48a66b2de310fa2d5a01babe1b993" translate="yes" xml:space="preserve">
          <source>else &lt;var&gt;alternate-consequents&lt;/var&gt;</source>
          <target state="translated">다른 &lt;var&gt;alternate-consequents&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4bb0566de8ca4848075d64ca6dd14fea11761eb1" translate="yes" xml:space="preserve">
          <source>emacs</source>
          <target state="translated">emacs</target>
        </trans-unit>
        <trans-unit id="797b9a9e71d1f66cce0fb2d77ae88e08adcaa063" translate="yes" xml:space="preserve">
          <source>emacs-mode-string</source>
          <target state="translated">emacs-mode-string</target>
        </trans-unit>
        <trans-unit id="9905c33933602ae804e94f7731ecb5faaf4d6770" translate="yes" xml:space="preserve">
          <source>enable</source>
          <target state="translated">enable</target>
        </trans-unit>
        <trans-unit id="8f0986a2abfcb06779c186c5be49d67461de0fa6" translate="yes" xml:space="preserve">
          <source>enable -n test</source>
          <target state="translated">-n 테스트 활성화</target>
        </trans-unit>
        <trans-unit id="dec2b5965becfeec0ac8e7c5fb835124ad73557d" translate="yes" xml:space="preserve">
          <source>enable -n xxx</source>
          <target state="translated">-n xxx 활성화</target>
        </trans-unit>
        <trans-unit id="30fdd0b8498d29a0f29849648fbaa394f44ad7d2" translate="yes" xml:space="preserve">
          <source>enable-&lt;var&gt;feature&lt;/var&gt;</source>
          <target state="translated">enable-&lt;var&gt;feature&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="5228db6bb8928752740390f170e2acf1fa14c24b" translate="yes" xml:space="preserve">
          <source>enable-bracketed-paste</source>
          <target state="translated">enable-bracketed-paste</target>
        </trans-unit>
        <trans-unit id="d3f2f543a2d1a28862ffb6b77713b9ad86f1a1a7" translate="yes" xml:space="preserve">
          <source>enable-keypad</source>
          <target state="translated">enable-keypad</target>
        </trans-unit>
        <trans-unit id="e96b25738ed8d1569994caa2c2b283ff829387bf" translate="yes" xml:space="preserve">
          <source>end-kbd-macro (C-x ))</source>
          <target state="translated">최종 -kbd- 매크로 (Cx))</target>
        </trans-unit>
        <trans-unit id="42122622dc817bf28be56205ad8d9534f599d5ce" translate="yes" xml:space="preserve">
          <source>end-of-file (usually C-d)</source>
          <target state="translated">파일 끝 (일반적으로 Cd)</target>
        </trans-unit>
        <trans-unit id="43ff0bd1ece3200a13044121a1eb372c4be81931" translate="yes" xml:space="preserve">
          <source>end-of-history (M-&amp;gt;)</source>
          <target state="translated">연말 (M-&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="758460d6544fe001722f3654dc5ec776c0aa9bda" translate="yes" xml:space="preserve">
          <source>end-of-line (C-e)</source>
          <target state="translated">라인 끝 (Ce)</target>
        </trans-unit>
        <trans-unit id="c6e454d960df4845f9d69eb11377c8b23882715b" translate="yes" xml:space="preserve">
          <source>environment</source>
          <target state="translated">environment</target>
        </trans-unit>
        <trans-unit id="af4b87685135eac0fb8877d4c706f163b571cac7" translate="yes" xml:space="preserve">
          <source>equality and inequality</source>
          <target state="translated">평등과 불평등</target>
        </trans-unit>
        <trans-unit id="20b31e25580327bd89cb430af5dafc18dc4cca7d" translate="yes" xml:space="preserve">
          <source>erasedups</source>
          <target state="translated">erasedups</target>
        </trans-unit>
        <trans-unit id="c03ad2693775910671edb765fbf0086b17a28b72" translate="yes" xml:space="preserve">
          <source>esac</source>
          <target state="translated">esac</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="a84c906906538759cff80a5c084f03db67f523b1" translate="yes" xml:space="preserve">
          <source>evaluation, arithmetic</source>
          <target state="translated">평가, 산술</target>
        </trans-unit>
        <trans-unit id="6676ef1d0a74386209605f29a76108976d966048" translate="yes" xml:space="preserve">
          <source>event designators</source>
          <target state="translated">이벤트 지정자</target>
        </trans-unit>
        <trans-unit id="b55e22fe7830e8fe49f48f834b913ef8618f0521" translate="yes" xml:space="preserve">
          <source>exact</source>
          <target state="translated">exact</target>
        </trans-unit>
        <trans-unit id="131ba025f31f7dfeb68575160f6fa0c8713b1672" translate="yes" xml:space="preserve">
          <source>examples/complete</source>
          <target state="translated">examples/complete</target>
        </trans-unit>
        <trans-unit id="30652948b0bf2463385bcd1b7e6ae07f68d6ee95" translate="yes" xml:space="preserve">
          <source>except for the output format.</source>
          <target state="translated">출력 형식을 제외하고.</target>
        </trans-unit>
        <trans-unit id="76fb52c829ee3de812917ff40f0f7002b68aa250" translate="yes" xml:space="preserve">
          <source>exchange-point-and-mark (C-x C-x)</source>
          <target state="translated">교환 포인트 및 마크 (Cx Cx)</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="3827c0d25cae442bbf1da14bca8b795bed453e12" translate="yes" xml:space="preserve">
          <source>exec -l bash</source>
          <target state="translated">exec -l bash</target>
        </trans-unit>
        <trans-unit id="2a716e59dcf7689eca249dcebbcc9acab131c70e" translate="yes" xml:space="preserve">
          <source>exec bash --login</source>
          <target state="translated">exec bash-로그인</target>
        </trans-unit>
        <trans-unit id="041b4f3693861ca3414547daa1b4548d00f06d28" translate="yes" xml:space="preserve">
          <source>exec bash -l</source>
          <target state="translated">exec bash -l</target>
        </trans-unit>
        <trans-unit id="98908800e040040490c41b0d802503a631175a16" translate="yes" xml:space="preserve">
          <source>execution environment</source>
          <target state="translated">실행 환경</target>
        </trans-unit>
        <trans-unit id="de3ac21778e51de199438300e1a9f816c618d33a" translate="yes" xml:space="preserve">
          <source>exit</source>
          <target state="translated">exit</target>
        </trans-unit>
        <trans-unit id="02bfbca7c50eea6ef860280445622b05fdfded8f" translate="yes" xml:space="preserve">
          <source>exit status</source>
          <target state="translated">종료 상태</target>
        </trans-unit>
        <trans-unit id="336adcfe4f658d40438babd8acd44a0bc4d81029" translate="yes" xml:space="preserve">
          <source>expand-tilde</source>
          <target state="translated">expand-tilde</target>
        </trans-unit>
        <trans-unit id="429688a9b9de3a4445605c3943bf11bab1486e82" translate="yes" xml:space="preserve">
          <source>expansion</source>
          <target state="translated">expansion</target>
        </trans-unit>
        <trans-unit id="98f7434bb40ab895ac53704a640ccf244621db0e" translate="yes" xml:space="preserve">
          <source>expansion, arithmetic</source>
          <target state="translated">확장, 산술</target>
        </trans-unit>
        <trans-unit id="e45a40d589e7629d8079003f94ea9baf18ca056c" translate="yes" xml:space="preserve">
          <source>expansion, brace</source>
          <target state="translated">확장, 버팀대</target>
        </trans-unit>
        <trans-unit id="6ba7213c689070cc8c92c720217dae3025e9f3b5" translate="yes" xml:space="preserve">
          <source>expansion, filename</source>
          <target state="translated">확장, 파일 이름</target>
        </trans-unit>
        <trans-unit id="95937acdff72afbb68c2ddfcd37b48bc8257b37e" translate="yes" xml:space="preserve">
          <source>expansion, parameter</source>
          <target state="translated">확장, 매개 변수</target>
        </trans-unit>
        <trans-unit id="4e41ed97b60e09562b2a6065ad5536cba4456084" translate="yes" xml:space="preserve">
          <source>expansion, pathname</source>
          <target state="translated">확장, 경로명</target>
        </trans-unit>
        <trans-unit id="3b516d9c4bb551675be6397fb2f421a1c9e4170c" translate="yes" xml:space="preserve">
          <source>expansion, tilde</source>
          <target state="translated">팽창, 물결표</target>
        </trans-unit>
        <trans-unit id="1d422390c5a3d1333fb7f5d97621fa0f6e7f0d6c" translate="yes" xml:space="preserve">
          <source>exponentiation</source>
          <target state="translated">exponentiation</target>
        </trans-unit>
        <trans-unit id="51713409935576d63d066e104eb1ad0e37137da7" translate="yes" xml:space="preserve">
          <source>export</source>
          <target state="translated">export</target>
        </trans-unit>
        <trans-unit id="dd2e3a77297c30d1fbdc65634d9bf4c9be79f995" translate="yes" xml:space="preserve">
          <source>export -n</source>
          <target state="translated">수출 -n</target>
        </trans-unit>
        <trans-unit id="61cb532955223863c06a90b63650286ca19b919c" translate="yes" xml:space="preserve">
          <source>expressions, arithmetic</source>
          <target state="translated">식, 산술</target>
        </trans-unit>
        <trans-unit id="08ab591c6017e62392449b09ce57095e02fa97a4" translate="yes" xml:space="preserve">
          <source>expressions, conditional</source>
          <target state="translated">조건식</target>
        </trans-unit>
        <trans-unit id="4a4b13fb65765b44000af2ac22643547bb59a772" translate="yes" xml:space="preserve">
          <source>fc</source>
          <target state="translated">fc</target>
        </trans-unit>
        <trans-unit id="72f77e84ba0149b2af1051f1318128dccf60ab60" translate="yes" xml:space="preserve">
          <source>fg</source>
          <target state="translated">fg</target>
        </trans-unit>
        <trans-unit id="dfcc2a348e7474ada22cf75b583de6a72c8255e0" translate="yes" xml:space="preserve">
          <source>fg %1</source>
          <target state="translated">fg % 1</target>
        </trans-unit>
        <trans-unit id="6b163fa3bad47a62474afcb81fb9f27bcb549d82" translate="yes" xml:space="preserve">
          <source>fi</source>
          <target state="translated">fi</target>
        </trans-unit>
        <trans-unit id="2da0b68df8841752bb747a76780679bcd87c6215" translate="yes" xml:space="preserve">
          <source>field</source>
          <target state="translated">field</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="3ec5cf89afd58d5591920a53b707c43aa2caf649" translate="yes" xml:space="preserve">
          <source>file containing system-dependent definitions. Finally, it creates a shell script named &lt;code&gt;config.status&lt;/code&gt; that you can run in the future to recreate the current configuration, a file</source>
          <target state="translated">시스템 의존적 정의를 포함하는 파일. 마지막으로, 현재 구성 인 파일을 다시 작성하기 위해 나중에 실행할 수있는 &lt;code&gt;config.status&lt;/code&gt; 라는 쉘 스크립트 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6873b3d211d45c7f5e551cb83f9d6305b2a03720" translate="yes" xml:space="preserve">
          <source>file contains a list of systems for which this should be turned off, and &lt;code&gt;configure&lt;/code&gt; disables this option automatically for a number of systems.</source>
          <target state="translated">파일에는이 기능을 해제해야하는 시스템 목록이 포함되어 있으며 &lt;code&gt;configure&lt;/code&gt; 는 여러 시스템에서이 옵션을 자동으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="aad9e3d11dd1407027a26d1d570d7187dd57b0fc" translate="yes" xml:space="preserve">
          <source>filename expansion</source>
          <target state="translated">파일명 확장</target>
        </trans-unit>
        <trans-unit id="5cd12fed44bf79bcdd44edaf89d08d9bf90bf8e9" translate="yes" xml:space="preserve">
          <source>flag is given, the commands are listed on standard output. The</source>
          <target state="translated">플래그가 지정되면 명령이 표준 출력에 나열됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="253877973c2acdf7783716de746df48442789cef" translate="yes" xml:space="preserve">
          <source>flag reverses the order of the listing. Otherwise, the editor given by &lt;var&gt;ename&lt;/var&gt; is invoked on a file containing those commands. If &lt;var&gt;ename&lt;/var&gt; is not given, the value of the following variable expansion is used: &lt;code&gt;${FCEDIT:-${EDITOR:-vi}}&lt;/code&gt;. This says to use the value of the &lt;code&gt;FCEDIT&lt;/code&gt; variable if set, or the value of the &lt;code&gt;EDITOR&lt;/code&gt; variable if that is set, or &lt;code&gt;vi&lt;/code&gt; if neither is set. When editing is complete, the edited commands are echoed and executed.</source>
          <target state="translated">플래그는 목록의 순서를 반대로 바꿉니다. 그렇지 않으면 &lt;var&gt;ename&lt;/var&gt; 으로 지정된 편집기 가 해당 명령이 포함 된 파일에서 호출됩니다. 경우 &lt;var&gt;ename&lt;/var&gt; 제공되지 않으며, 다음과 같은 변수 확장의 값이 사용됩니다 : &lt;code&gt;${FCEDIT:-${EDITOR:-vi}}&lt;/code&gt; . 이것은 &lt;code&gt;FCEDIT&lt;/code&gt; 변수의 값 이 설정되어 있거나 &lt;code&gt;EDITOR&lt;/code&gt; 변수 의 값 이 설정되어 있거나 &lt;code&gt;vi&lt;/code&gt; 가 설정되어 있지 않은 경우 vi 를 사용한다고 말합니다 . 편집이 완료되면 편집 된 명령이 에코되고 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a25f3af8a1f4563581aa061891a1e9c766bfc42a" translate="yes" xml:space="preserve">
          <source>flag suppresses the command numbers when listing. The</source>
          <target state="translated">플래그는 나열 할 때 명령 번호를 억제합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="29f365503fe022e0577395cf3552e10c4d2a0e3e" translate="yes" xml:space="preserve">
          <source>for the possible values of each field.</source>
          <target state="translated">각 필드의 가능한 값에 대해.</target>
        </trans-unit>
        <trans-unit id="94ed7003b24274bb77481223b08bdff5c3a2f6ca" translate="yes" xml:space="preserve">
          <source>for which the</source>
          <target state="translated">어떤</target>
        </trans-unit>
        <trans-unit id="2ed97adde4c8048aa5958ca36ef990f92927ba40" translate="yes" xml:space="preserve">
          <source>foreground</source>
          <target state="translated">foreground</target>
        </trans-unit>
        <trans-unit id="cacfbd40505fff5a97d7effce15468bbc881b94d" translate="yes" xml:space="preserve">
          <source>form feed</source>
          <target state="translated">사료 공급</target>
        </trans-unit>
        <trans-unit id="d98e48e58339296424ac0e0314cd840ad0538c75" translate="yes" xml:space="preserve">
          <source>forward-backward-delete-char ()</source>
          <target state="translated">앞으로 뒤로 삭제 문자 ()</target>
        </trans-unit>
        <trans-unit id="f210ca19975578b84cd7c07f00303667fc311b29" translate="yes" xml:space="preserve">
          <source>forward-char (C-f)</source>
          <target state="translated">전달 문자 (Cf)</target>
        </trans-unit>
        <trans-unit id="f01790e2dfbbcc31e3312af2679b3951f9a9bac6" translate="yes" xml:space="preserve">
          <source>forward-search-history (C-s)</source>
          <target state="translated">미래 검색 기록 (Cs)</target>
        </trans-unit>
        <trans-unit id="436d3cd0e3396f0dd3b25ec6243d63002cb9391b" translate="yes" xml:space="preserve">
          <source>forward-word (M-f)</source>
          <target state="translated">앞으로 단어 (Mf)</target>
        </trans-unit>
        <trans-unit id="943d602782a7e8870ee56fc210e457afc63e20f0" translate="yes" xml:space="preserve">
          <source>from the source code in</source>
          <target state="translated">소스 코드에서</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="fdbf28a95c889bb410a216fd5320895db40d4469" translate="yes" xml:space="preserve">
          <source>functions, shell</source>
          <target state="translated">기능, 쉘</target>
        </trans-unit>
        <trans-unit id="6a660bc704151556a16e882a7999043039198704" translate="yes" xml:space="preserve">
          <source>getopts</source>
          <target state="translated">getopts</target>
        </trans-unit>
        <trans-unit id="484b15efcac70b4317c124994d3b7fe35eb8d5c6" translate="yes" xml:space="preserve">
          <source>glob-complete-word (M-g)</source>
          <target state="translated">glob-complete-word (Mg)</target>
        </trans-unit>
        <trans-unit id="17a22cf5470efdf77e44e2be7532f0d973a6f7a3" translate="yes" xml:space="preserve">
          <source>glob-expand-word (C-x *)</source>
          <target state="translated">glob-expand-word (Cx *)</target>
        </trans-unit>
        <trans-unit id="157e68b03b5434eb8f11a99790e5047b89444f78" translate="yes" xml:space="preserve">
          <source>glob-list-expansions (C-x g)</source>
          <target state="translated">글로브리스트 확장 (Cx g)</target>
        </trans-unit>
        <trans-unit id="4e4f3d4dbe58f8e1da9c34eda01c027b303b5687" translate="yes" xml:space="preserve">
          <source>had been executed. When the shell enters &lt;small&gt;POSIX&lt;/small&gt; mode, it sets this variable if it was not already set.</source>
          <target state="translated">처형되었다. 쉘이 &lt;small&gt;POSIX&lt;/small&gt; 모드 로 들어가면 아직 설정되지 않은 경우이 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bba1b92bcdad8ccfae79e3f5cdd806ddf294f09b" translate="yes" xml:space="preserve">
          <source>has been supplied, the shell displays the trap commands associated with each &lt;var&gt;sigspec&lt;/var&gt;. If no arguments are supplied, or only</source>
          <target state="translated">쉘은 각 &lt;var&gt;sigspec&lt;/var&gt; 과 연관된 트랩 명령을 표시합니다 . 인수가 제공되지 않거나</target>
        </trans-unit>
        <trans-unit id="1e6612187f3e7eb3376df48aff2cace54b528b6e" translate="yes" xml:space="preserve">
          <source>has no effect if the</source>
          <target state="translated">경우 효과가 없습니다</target>
        </trans-unit>
        <trans-unit id="2346ad27d7568ba9896f1b7da6b5991251debdf2" translate="yes" xml:space="preserve">
          <source>hash</source>
          <target state="translated">hash</target>
        </trans-unit>
        <trans-unit id="9c19ba4537df6613898e1a14c024318cf25deb6f" translate="yes" xml:space="preserve">
          <source>hash -p</source>
          <target state="translated">해시 -p</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="023a3ebb1a03d262fc3c52618003b9f3ad9dba01" translate="yes" xml:space="preserve">
          <source>histchars</source>
          <target state="translated">histchars</target>
        </trans-unit>
        <trans-unit id="66f79d8a6327c82c9033e6d65ff03322a3766c87" translate="yes" xml:space="preserve">
          <source>history</source>
          <target state="translated">history</target>
        </trans-unit>
        <trans-unit id="dd2547d0fa01fa66eb4611ce7d694a1e658e4ede" translate="yes" xml:space="preserve">
          <source>history builtins</source>
          <target state="translated">역사 내장</target>
        </trans-unit>
        <trans-unit id="f759e45f6cb354c043b351f1dbc0aa9e324256dd" translate="yes" xml:space="preserve">
          <source>history events</source>
          <target state="translated">역사 사건</target>
        </trans-unit>
        <trans-unit id="f179ee84118f3e0b3e26bc8c05abfb7fd3bca6a6" translate="yes" xml:space="preserve">
          <source>history expansion</source>
          <target state="translated">역사 확장</target>
        </trans-unit>
        <trans-unit id="b2fbd9717bb9a334e0a0fa26b1263a41f2397e24" translate="yes" xml:space="preserve">
          <source>history list</source>
          <target state="translated">역사 목록</target>
        </trans-unit>
        <trans-unit id="e427d822abfd1e338db350044fc708f2deeb7f6f" translate="yes" xml:space="preserve">
          <source>history-and-alias-expand-line ()</source>
          <target state="translated">히스토리 및 앨리어스 확장 라인 ()</target>
        </trans-unit>
        <trans-unit id="ea83e936a8256ac3b2798be59c87fbe10a4f4fb1" translate="yes" xml:space="preserve">
          <source>history-expand-line (M-^)</source>
          <target state="translated">히스토리 확장 라인 (M- ^)</target>
        </trans-unit>
        <trans-unit id="233f43aeb050b4b25a45d576fd24017333b8e36b" translate="yes" xml:space="preserve">
          <source>history-preserve-point</source>
          <target state="translated">history-preserve-point</target>
        </trans-unit>
        <trans-unit id="1bc21e7f6ab39c107bf230961a2fa937f66a9b21" translate="yes" xml:space="preserve">
          <source>history-search-backward ()</source>
          <target state="translated">역사 검색 후진 ()</target>
        </trans-unit>
        <trans-unit id="c700feff9e4bb2954a429f30fee2eeaca1fa1617" translate="yes" xml:space="preserve">
          <source>history-search-forward ()</source>
          <target state="translated">이력 검색 ()</target>
        </trans-unit>
        <trans-unit id="1dcd0f6a7d784db96a3501b5bba926a5b5de3d4c" translate="yes" xml:space="preserve">
          <source>history-size</source>
          <target state="translated">history-size</target>
        </trans-unit>
        <trans-unit id="209584d67f7019f766f8f5fde7122906e6bd5714" translate="yes" xml:space="preserve">
          <source>history-substring-search-backward ()</source>
          <target state="translated">역사 하위 문자열 검색 뒤로 ()</target>
        </trans-unit>
        <trans-unit id="bcd6c0e65b93ac639f1124e750f1a9c0faa27075" translate="yes" xml:space="preserve">
          <source>history-substring-search-forward ()</source>
          <target state="translated">히스토리 서브 스트링-검색-포워드</target>
        </trans-unit>
        <trans-unit id="840335b8f41f2168b82077c6520c948eb5434936" translate="yes" xml:space="preserve">
          <source>horizontal tab</source>
          <target state="translated">가로 탭</target>
        </trans-unit>
        <trans-unit id="3d223c6a2aa0c85ea9269671bb3bec9e3e0fe156" translate="yes" xml:space="preserve">
          <source>horizontal-scroll-mode</source>
          <target state="translated">horizontal-scroll-mode</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="3a10ddbccc71422d1a67ee3ec166716b7a4d1725" translate="yes" xml:space="preserve">
          <source>i386-unknown-freebsd4.2</source>
          <target state="translated">i386-unknown-freebsd4.2</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="e5f6a5bac40a1ee9570f265c7a327d870fb4173c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;filename&lt;/code&gt; is an executable shell script. This subshell reinitializes itself, so that the effect is as if a new shell had been invoked to interpret the script, with the exception that the locations of commands remembered by the parent (see the description of &lt;code&gt;hash&lt;/code&gt; in &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) are retained by the child.</source>
          <target state="translated">경우 &lt;code&gt;filename&lt;/code&gt; 실행 쉘 스크립트입니다. 이 서브 쉘은 새로운 쉘 스크립트를 해석하기 위해 호출 된 것처럼 효과가 부모에 의해 기억 명령의 위치는 (설명 참조 점을 제외하고, 그래서 것을, 자신을 다시 초기화 &lt;code&gt;hash&lt;/code&gt; 에서 &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne 쉘 내장 명령을&lt;/a&gt; 에 의해 유지됩니다) 아이.</target>
        </trans-unit>
        <trans-unit id="39ed2300a2feb4bb67f85409b6fe1a231a74f535" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;filename&lt;/code&gt; is an executable shell script. This subshell reinitializes itself, so that the effect is as if a new shell had been invoked to interpret the script, with the exception that the locations of commands remembered by the parent (see the description of &lt;code&gt;hash&lt;/code&gt; in &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;) are retained by the child.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 이 실행 가능한 쉘 스크립트 인 경우 이 서브 쉘은 새로운 쉘 스크립트를 해석하기 위해 호출 된 것처럼 효과가 부모에 의해 기억 명령의 위치는 (설명 참조 점을 제외하고, 그래서 것을, 자신을 다시 초기화 &lt;code&gt;hash&lt;/code&gt; 에서 &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne 쉘 내장 명령을&lt;/a&gt; 에 의해 유지됩니다) 아이.</target>
        </trans-unit>
        <trans-unit id="1bfb5ecad05b26134116164f43c961ffdb21d1b2" translate="yes" xml:space="preserve">
          <source>if it exists, then</source>
          <target state="translated">존재한다면</target>
        </trans-unit>
        <trans-unit id="c14b7dd2ab8f5537e48079fa324b0eb4df382a33" translate="yes" xml:space="preserve">
          <source>if it exists. Or, you can set the &lt;code&gt;CONFIG_SITE&lt;/code&gt; environment variable to the location of the site script. A warning: the Bash &lt;code&gt;configure&lt;/code&gt; looks for a site script, but not all &lt;code&gt;configure&lt;/code&gt; scripts do.</source>
          <target state="translated">존재하는 경우. 또는 &lt;code&gt;CONFIG_SITE&lt;/code&gt; 환경 변수를 사이트 스크립트의 위치로 설정할 수 있습니다 . 경고 : Bash &lt;code&gt;configure&lt;/code&gt; 는 사이트 스크립트를 찾지 만 모든 &lt;code&gt;configure&lt;/code&gt; 스크립트는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1961357c9f9b22464e79d2775375ec1bf3840397" translate="yes" xml:space="preserve">
          <source>if you want to change it or regenerate &lt;code&gt;configure&lt;/code&gt; using a newer version of Autoconf. If you do this, make sure you are using Autoconf version 2.50 or newer.</source>
          <target state="translated">변경하거나 최신 버전의 Autoconf를 사용하여 &lt;code&gt;configure&lt;/code&gt; 을 재생성하려는 경우 . 이렇게하면 Autoconf 버전 2.50 이상을 사용하고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ca5f99a3e6d439a60b9ae0b7128ceae440fe9157" translate="yes" xml:space="preserve">
          <source>ignoreboth</source>
          <target state="translated">ignoreboth</target>
        </trans-unit>
        <trans-unit id="ffedc49daaaf9c4a8efe4cfc8bdc703d47c4813f" translate="yes" xml:space="preserve">
          <source>ignoredups</source>
          <target state="translated">ignoredups</target>
        </trans-unit>
        <trans-unit id="87a9a5cc39a0cf0b55704d49fbdae1540f32c9d1" translate="yes" xml:space="preserve">
          <source>ignorespace</source>
          <target state="translated">ignorespace</target>
        </trans-unit>
        <trans-unit id="470cec587602b47395a317eb72d14272f9628412" translate="yes" xml:space="preserve">
          <source>implies</source>
          <target state="translated">implies</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="a31a5bc9c9c0abe418fe09dd700e41208d2ed723" translate="yes" xml:space="preserve">
          <source>in &quot;$@&quot;</source>
          <target state="translated">&quot;$ @&quot;</target>
        </trans-unit>
        <trans-unit id="b29b982f5af5f5824d4d63d24262a1ec033c7595" translate="yes" xml:space="preserve">
          <source>in &lt;var&gt;words&lt;/var&gt;</source>
          <target state="translated">의 &lt;var&gt;words&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="38b0cb0fe84a3661744067496a5c2ad2c7efb04a" translate="yes" xml:space="preserve">
          <source>in each directory of the package (the top directory, the</source>
          <target state="translated">패키지의 각 디렉토리 (최상위 디렉토리,</target>
        </trans-unit>
        <trans-unit id="fbf992c19e7847a4733a87cb6307a678a48c3979" translate="yes" xml:space="preserve">
          <source>indicating that this job is job number 1 and that the process &lt;small&gt;ID&lt;/small&gt; of the last process in the pipeline associated with this job is 25647. All of the processes in a single pipeline are members of the same job. Bash uses the &lt;var&gt;job&lt;/var&gt; abstraction as the basis for job control.</source>
          <target state="translated">이 작업이 작업 번호 1 이고이 작업과 연관된 파이프 라인에서 마지막 프로세스 의 프로세스 &lt;small&gt;ID&lt;/small&gt; 가 25647임을 나타냅니다. 단일 파이프 라인의 모든 프로세스는 동일한 작업의 구성원입니다. Bash는 &lt;var&gt;job&lt;/var&gt; 추상화를 작업 제어의 기초로 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="07e3467a52ceb3181f6c9329d920241652629356" translate="yes" xml:space="preserve">
          <source>initialization file in an interactive shell. This is on by default if the shell is invoked as &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="translated">대화식 쉘의 초기화 파일. 쉘이 &lt;code&gt;sh&lt;/code&gt; 로 호출되면 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="998d392bb46b37ac20c484595a662924aa6d601e" translate="yes" xml:space="preserve">
          <source>initialization file, readline</source>
          <target state="translated">초기화 파일, readline</target>
        </trans-unit>
        <trans-unit id="1459ca47543e99c18a865c21a9b4142be8d39d41" translate="yes" xml:space="preserve">
          <source>input-meta</source>
          <target state="translated">input-meta</target>
        </trans-unit>
        <trans-unit id="e327fcb0bfa222236a810313936a123a89c15e50" translate="yes" xml:space="preserve">
          <source>insert-comment (M-#)</source>
          <target state="translated">삽입 주석 (M- #)</target>
        </trans-unit>
        <trans-unit id="50c053335b0608c8240b0714a4d453a94c03c770" translate="yes" xml:space="preserve">
          <source>insert-completions (M-*)</source>
          <target state="translated">삽입 완료 (M- *)</target>
        </trans-unit>
        <trans-unit id="cd7b91f36d8b7973b1aae758b4e243787f0f02b8" translate="yes" xml:space="preserve">
          <source>insert-last-argument (M-. or M-_)</source>
          <target state="translated">마지막 인수 삽입 (M-. 또는 M-_)</target>
        </trans-unit>
        <trans-unit id="2fb163bdf2cec5bad690dcb1baa9c63f84c039c8" translate="yes" xml:space="preserve">
          <source>inside the function creates a nameref variable &lt;var&gt;ref&lt;/var&gt; whose value is the variable name passed as the first argument. References and assignments to &lt;var&gt;ref&lt;/var&gt;, and changes to its attributes, are treated as references, assignments, and attribute modifications to the variable whose name was passed as &lt;code&gt;$1&lt;/code&gt;.</source>
          <target state="translated">함수 내에서 nameref 변수 &lt;var&gt;ref&lt;/var&gt; 가 생성되며 그 값은 첫 번째 인수로 전달 된 변수 이름입니다. &lt;var&gt;ref&lt;/var&gt; 에 대한 참조 및 지정 및 속성의 변경은 이름이 &lt;code&gt;$1&lt;/code&gt; 으로 전달 된 변수에 대한 참조, 지정 및 속성 수정으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1e2b964389a44069f6393f7f404e4082b21b782" translate="yes" xml:space="preserve">
          <source>installation</source>
          <target state="translated">installation</target>
        </trans-unit>
        <trans-unit id="21b45f23e5b78ab4ccf8f7538e7f4aca6d8833c5" translate="yes" xml:space="preserve">
          <source>interaction, readline</source>
          <target state="translated">상호 작용, readline</target>
        </trans-unit>
        <trans-unit id="65d05779c3ed2c9a3fa0a54d3b6c9a5a72745998" translate="yes" xml:space="preserve">
          <source>interactive shell</source>
          <target state="translated">대화식 쉘</target>
        </trans-unit>
        <trans-unit id="cd05286ee0ff8a830dbdc0c24f1cb68b83b0ef36" translate="yes" xml:space="preserve">
          <source>internationalization</source>
          <target state="translated">internationalization</target>
        </trans-unit>
        <trans-unit id="75ad3cb8dbe5765c9dcafbdb6cb04999002cc2aa" translate="yes" xml:space="preserve">
          <source>invocation option (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;), or from the user&amp;rsquo;s terminal.</source>
          <target state="translated">호출 옵션 ( &lt;a href=&quot;invoking-bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ) 또는 사용자 터미널에서.</target>
        </trans-unit>
        <trans-unit id="fcd0bb0f89d9af2289a6802e9fcaab929d5a965b" translate="yes" xml:space="preserve">
          <source>invocation option (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;), or from the user&amp;rsquo;s terminal.</source>
          <target state="translated">호출 옵션 ( &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ) 또는 사용자 터미널에서.</target>
        </trans-unit>
        <trans-unit id="b81a1aefae9de6216bbf4aa7870707c641f905b8" translate="yes" xml:space="preserve">
          <source>invocation option had been supplied. If it is set while the shell is running, Bash enables &lt;small&gt;POSIX&lt;/small&gt; mode, as if the command</source>
          <target state="translated">호출 옵션이 제공되었습니다. 쉘이 실행되는 동안 설정되면 Bash는 마치 명령처럼 &lt;small&gt;POSIX&lt;/small&gt; 모드를 활성화 합니다</target>
        </trans-unit>
        <trans-unit id="38552cc1ab2c4397babcf3bce39867ac196b831e" translate="yes" xml:space="preserve">
          <source>invocation option is ignored, and &amp;lsquo;</source>
          <target state="translated">호출 옵션이 무시되고 '</target>
        </trans-unit>
        <trans-unit id="bc5b7ec6a85e69798719a6c60acbfab46d1fd2de" translate="yes" xml:space="preserve">
          <source>invocation option may be used to set the positional parameters when an interactive shell is started.</source>
          <target state="translated">호출 옵션은 대화식 쉘이 시작될 때 위치 매개 변수를 설정하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dffda436f4d95e6bfb7166b30b75816164f4477" translate="yes" xml:space="preserve">
          <source>invocation option.</source>
          <target state="translated">호출 옵션.</target>
        </trans-unit>
        <trans-unit id="59c9d6ff424703d8f890dcaee6243d31c7e9e44a" translate="yes" xml:space="preserve">
          <source>invocation options list the translatable strings found in a script (see &lt;a href=&quot;locale-translation&quot;&gt;Locale Translation&lt;/a&gt;).</source>
          <target state="translated">호출 옵션은 스크립트에있는 번역 가능한 문자열을 나열합니다 ( &lt;a href=&quot;locale-translation&quot;&gt;로케일 번역&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f9c2b53ba06a23d56bb77dc0560babaad649fd75" translate="yes" xml:space="preserve">
          <source>invocation options list the translatable strings found in a script (see &lt;a href=&quot;locale-translation#Locale-Translation&quot;&gt;Locale Translation&lt;/a&gt;).</source>
          <target state="translated">호출 옵션은 스크립트에서 찾은 번역 가능한 문자열을 나열합니다 ( &lt;a href=&quot;locale-translation#Locale-Translation&quot;&gt;로케일 변환&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="56257b4b2abfc3657f9ce2c2940c4dc89b3489d9" translate="yes" xml:space="preserve">
          <source>is a symbolic link to</source>
          <target state="translated">에 대한 상징적 링크입니다</target>
        </trans-unit>
        <trans-unit id="62305f6b14ccb0af81c2f56f336923021494ee2b" translate="yes" xml:space="preserve">
          <source>is again bound to the function &lt;code&gt;universal-argument&lt;/code&gt; (just as it was in the first example), &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;universal-argument&lt;/code&gt; 함수에 다시 바인딩됩니다 (첫 번째 예에서와 동일).</target>
        </trans-unit>
        <trans-unit id="ce5d945664ae4ad605f5c4b075aff9d9fa700db6" translate="yes" xml:space="preserve">
          <source>is also accepted; the &lt;var&gt;subscript&lt;/var&gt; is ignored.</source>
          <target state="translated">또한 받아 들여진다; 아래 &lt;var&gt;subscript&lt;/var&gt; 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="4e8f86672718b13e1a9ecab9c641718bc6c857c6" translate="yes" xml:space="preserve">
          <source>is assumed. Values are in 1024-byte increments, except for</source>
          <target state="translated">가정합니다. 다음을 제외하고 값은 1024 바이트 단위입니다.</target>
        </trans-unit>
        <trans-unit id="3918a0fd98904629bd9a57db25122a46409f51cd" translate="yes" xml:space="preserve">
          <source>is being ignored, none of the commands executed within the compound command or function body will be affected by the</source>
          <target state="translated">를 무시하는 경우 복합 명령 또는 함수 본문 내에서 실행 된 명령은</target>
        </trans-unit>
        <trans-unit id="662f3c2c838377a03a8adf9540ec1b676ce75d91" translate="yes" xml:space="preserve">
          <source>is bound to run the macro expressed on the right hand side (that is, to insert the text &amp;lsquo;</source>
          <target state="translated">오른쪽에 표시된 매크로를 실행하도록 (즉, '</target>
        </trans-unit>
        <trans-unit id="2d4b33ba2ad9444b9d3a8847d15663d8bd1f08ab" translate="yes" xml:space="preserve">
          <source>is bound to the function &lt;code&gt;backward-kill-word&lt;/code&gt;, and</source>
          <target state="translated">함수 &lt;code&gt;backward-kill-word&lt;/code&gt; 바인딩되어 있으며</target>
        </trans-unit>
        <trans-unit id="d666b5408610a849c748c637f1877c7ace5c72d7" translate="yes" xml:space="preserve">
          <source>is bound to the function &lt;code&gt;universal-argument&lt;/code&gt;,</source>
          <target state="translated">함수에 바인딩 &lt;code&gt;universal-argument&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="326f7768d44b3c9f184f1704d7a964c8b364aced" translate="yes" xml:space="preserve">
          <source>is equivalent to executing</source>
          <target state="translated">실행에 해당</target>
        </trans-unit>
        <trans-unit id="d211c49f71cd6475d755baf754c85eabc60c0c33" translate="yes" xml:space="preserve">
          <source>is given, &lt;code&gt;trap&lt;/code&gt; prints the list of commands associated with each signal number in a form that may be reused as shell input. The</source>
          <target state="translated">주어진, &lt;code&gt;trap&lt;/code&gt; 쉘 입력으로 재사용 될 수있는 형태로 각각의 신호 번호와 관련된 명령의 목록을 출력한다. 그만큼</target>
        </trans-unit>
        <trans-unit id="20b62fa0b0e904a9eaf93f95e10d0ac0afd67253" translate="yes" xml:space="preserve">
          <source>is given, the names of the signals corresponding to the arguments are listed, and the return status is zero. &lt;var&gt;exit_status&lt;/var&gt; is a number specifying a signal number or the exit status of a process terminated by a signal. The</source>
          <target state="translated">가 주어지면, 인수에 해당하는 신호의 이름이 나열되고 리턴 상태는 0입니다. &lt;var&gt;exit_status&lt;/var&gt; 는 신호 번호 또는 신호로 종료 된 프로세스의 종료 상태를 지정하는 숫자입니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="f02a3c1b0709bd5730046981a7e8f97ec9e9096d" translate="yes" xml:space="preserve">
          <source>is ignored, that setting will not have any effect until the compound command or the command containing the function call completes.</source>
          <target state="translated">복합 명령 또는 함수 호출을 포함하는 명령이 완료 될 때까지 해당 설정은 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4022543525ee8bb61b7b229c652f86610682be2a" translate="yes" xml:space="preserve">
          <source>is invoked first. The function may use any of the shell facilities, including the &lt;code&gt;compgen&lt;/code&gt; and &lt;code&gt;compopt&lt;/code&gt; builtins described below (see &lt;a href=&quot;programmable-completion-builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;), to generate the matches. It must put the possible completions in the &lt;code&gt;COMPREPLY&lt;/code&gt; array variable, one per array element.</source>
          <target state="translated">먼저 호출됩니다. 이 함수는 아래에 설명 된 &lt;code&gt;compgen&lt;/code&gt; 및 &lt;code&gt;compopt&lt;/code&gt; 내장 ( &lt;a href=&quot;programmable-completion-builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt; 참조)을 포함한 모든 쉘 기능 을 사용하여 일치 항목을 생성 할 수 있습니다. 가능한 완료를 &lt;code&gt;COMPREPLY&lt;/code&gt; 배열 변수에 배열 요소 당 하나씩 넣어야합니다 .</target>
        </trans-unit>
        <trans-unit id="116120c36026ce597824895be29954b66bfcfec5" translate="yes" xml:space="preserve">
          <source>is invoked first. The function may use any of the shell facilities, including the &lt;code&gt;compgen&lt;/code&gt; and &lt;code&gt;compopt&lt;/code&gt; builtins described below (see &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;Programmable Completion Builtins&lt;/a&gt;), to generate the matches. It must put the possible completions in the &lt;code&gt;COMPREPLY&lt;/code&gt; array variable, one per array element.</source>
          <target state="translated">먼저 호출됩니다. 이 함수는 아래에 설명 된 &lt;code&gt;compgen&lt;/code&gt; 및 &lt;code&gt;compopt&lt;/code&gt; 내장 ( &lt;a href=&quot;programmable-completion-builtins#Programmable-Completion-Builtins&quot;&gt;프로그램 가능한 완료 내장&lt;/a&gt; 참조)을 포함한 모든 쉘 기능 을 사용하여 일치를 생성 할 수 있습니다. 가능한 완성은 배열 요소 당 하나씩 &lt;code&gt;COMPREPLY&lt;/code&gt; 배열 변수 에 넣어야합니다 .</target>
        </trans-unit>
        <trans-unit id="63ea2f95fc43834975da17ceb87233d383402067" translate="yes" xml:space="preserve">
          <source>is not set, and the sourced file changes the &lt;code&gt;DEBUG&lt;/code&gt; trap, the new value is retained when &lt;code&gt;source&lt;/code&gt; completes. The return status is the exit status of the last command executed, or zero if no commands are executed. If &lt;var&gt;filename&lt;/var&gt; is not found, or cannot be read, the return status is non-zero. This builtin is equivalent to &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">이 설정되지 않고 소스 파일이 &lt;code&gt;DEBUG&lt;/code&gt; 트랩을 변경 하면 &lt;code&gt;source&lt;/code&gt; 완료 될 때 새 값이 유지됩니다 . 리턴 상태는 마지막으로 실행 된 명령의 종료 상태이거나 명령이 실행되지 않으면 0입니다. 경우 &lt;var&gt;filename&lt;/var&gt; 발견되지 않았거나 읽을 수없는, 반환 상태가 아닌 제로이다. 이 내장은 &lt;code&gt;source&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="26f65300b98453c8918c27f2369b3b6f31901ff1" translate="yes" xml:space="preserve">
          <source>is read as &amp;lsquo;Control-K&amp;rsquo; and describes the character produced when the &lt;code&gt;k&lt;/code&gt; key is pressed while the Control key is depressed.</source>
          <target state="translated">는 'Control-K'로 읽히고 Control 키를 누른 상태에서 &lt;code&gt;k&lt;/code&gt; 키를 누를 때 생성되는 문자를 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="bd1f42ebfa7b89ff1b54471f5f6c13dd82f90846" translate="yes" xml:space="preserve">
          <source>is read as &amp;lsquo;Meta-Control-k&amp;rsquo; and describes the character produced by &lt;em&gt;metafying&lt;/em&gt;</source>
          <target state="translated">'Meta-Control-k'로 읽히고 메타 &lt;em&gt;피팅으로&lt;/em&gt; 생성 된 캐릭터를 설명합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3593766d94938c6954a0de2d038b9c804c13e5a" translate="yes" xml:space="preserve">
          <source>is read as &amp;lsquo;Meta-K&amp;rsquo; and describes the character produced when the Meta key (if you have one) is depressed, and the &lt;code&gt;k&lt;/code&gt; key is pressed. The Meta key is labeled &lt;code&gt;ALT&lt;/code&gt; on many keyboards. On keyboards with two keys labeled &lt;code&gt;ALT&lt;/code&gt; (usually to either side of the space bar), the &lt;code&gt;ALT&lt;/code&gt; on the left side is generally set to work as a Meta key. The &lt;code&gt;ALT&lt;/code&gt; key on the right may also be configured to work as a Meta key or may be configured as some other modifier, such as a Compose key for typing accented characters.</source>
          <target state="translated">은 'Meta-K'로 읽히고 메타 키 (있는 경우) 를 누르고 &lt;code&gt;k&lt;/code&gt; 키를 누를 때 생성되는 문자를 설명합니다 . 메타 키는 많은 키보드에서 &lt;code&gt;ALT&lt;/code&gt; 로 표시되어 있습니다. &lt;code&gt;ALT&lt;/code&gt; 레이블이 붙은 두 개의 키가있는 키보드 (보통 스페이스 바의 양쪽에 해당) 에서 왼쪽 의 &lt;code&gt;ALT&lt;/code&gt; 는 일반적으로 메타 키로 작동하도록 설정되어 있습니다. 오른쪽 의 &lt;code&gt;ALT&lt;/code&gt; 키는 메타 키로 작동하도록 구성되거나 악센트 부호가있는 문자를 입력하기위한 Compose 키와 같은 다른 수정 자로 구성 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f04997804af7c707fe89524080ea4eb4e3226e98" translate="yes" xml:space="preserve">
          <source>is set and a command returns a failure status. If a compound command or shell function sets</source>
          <target state="translated">가 설정되고 명령이 실패 상태를 반환합니다. 복합 명령 또는 쉘 기능이 설정된 경우</target>
        </trans-unit>
        <trans-unit id="6bb33fc7cfbd3d4e8e7d721acab5b3bb94c38980" translate="yes" xml:space="preserve">
          <source>is specified without</source>
          <target state="translated">없이 지정</target>
        </trans-unit>
        <trans-unit id="2153bf5b53b7ac31d733e56c890d50e15c4dbae0" translate="yes" xml:space="preserve">
          <source>is specified, the trailing newline is suppressed. If the</source>
          <target state="translated">이 지정되면 후행 줄 바꿈이 억제됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="b0781c7ab205650ddad01b55859923d6980bc8ff" translate="yes" xml:space="preserve">
          <source>is specified, without specifying the</source>
          <target state="translated">지정하지 않고</target>
        </trans-unit>
        <trans-unit id="ccf390c346a3c3d76bf0e0075bf163093f80d7cf" translate="yes" xml:space="preserve">
          <source>is supplied with a name that is not a shell function.</source>
          <target state="translated">쉘 기능이 아닌 이름이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="32a918dc82080da3476368ffc62fbec0b94992f0" translate="yes" xml:space="preserve">
          <source>is supplied without &lt;var&gt;name&lt;/var&gt; arguments, &lt;code&gt;declare&lt;/code&gt; will display the attributes and values of all variables having the attributes specified by the additional options. If no other options are supplied with</source>
          <target state="translated">는 &lt;var&gt;name&lt;/var&gt; 인수 없이 제공 되며 , &lt;code&gt;declare&lt;/code&gt; 은 추가 옵션으로 지정된 속성을 가진 모든 변수의 속성 및 값을 표시합니다. 다른 옵션이 제공되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="85fa0961462dd0a122782bc509cd4562f348205c" translate="yes" xml:space="preserve">
          <source>is supplied without a &lt;var&gt;name&lt;/var&gt; argument, an attempt is made to remove a completion specification for a &lt;var&gt;name&lt;/var&gt; for which no specification exists, or an error occurs adding a completion specification.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; 인수 없이 제공된 경우, 스펙이 존재하지 않는 &lt;var&gt;name&lt;/var&gt; 대한 완료 스펙을 제거하려고 시도하거나 완료 스펙을 추가하는 중에 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="567038af62167d38179bd21c65f00d117708c19f" translate="yes" xml:space="preserve">
          <source>is supplied, all aliases are removed. Aliases are described in &lt;a href=&quot;aliases&quot;&gt;Aliases&lt;/a&gt;.</source>
          <target state="translated">가 제공되면 모든 별칭이 제거됩니다. 별칭에 설명되어 &lt;a href=&quot;aliases&quot;&gt;별칭&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1eff29aa350441ee39a59fbbc6c913a8973fd267" translate="yes" xml:space="preserve">
          <source>is supplied, all aliases are removed. Aliases are described in &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;.</source>
          <target state="translated">가 제공되면 모든 별칭이 제거됩니다. 별칭에 설명되어 &lt;a href=&quot;aliases#Aliases&quot;&gt;별칭&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fc71fba759cac6c2b363d2aa07d21071cf91b84" translate="yes" xml:space="preserve">
          <source>is supplied, both the hard and soft limits are set. If no option is given, then</source>
          <target state="translated">하드 제한과 소프트 제한이 모두 설정되어 있습니다. 옵션이 없으면</target>
        </trans-unit>
        <trans-unit id="8f48075284b6624a537b83eb9d603f6e05b4cedd" translate="yes" xml:space="preserve">
          <source>is supplied, information about remembered commands is printed. The return status is zero unless a &lt;var&gt;name&lt;/var&gt; is not found or an invalid option is supplied.</source>
          <target state="translated">제공된 명령에 대한 정보가 인쇄됩니다. &lt;var&gt;name&lt;/var&gt; 찾을 수 없거나 유효하지 않은 옵션이 제공되지 않으면 리턴 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="73b1cd0447b476035cce1cf2c7b561eeb08cde38" translate="yes" xml:space="preserve">
          <source>is supplied, the shell passes &lt;var&gt;name&lt;/var&gt; as the zeroth argument to &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;command&lt;/var&gt; cannot be executed for some reason, a non-interactive shell exits, unless the &lt;code&gt;execfail&lt;/code&gt; shell option is enabled. In that case, it returns failure. An interactive shell returns failure if the file cannot be executed. A subshell exits unconditionally if &lt;code&gt;exec&lt;/code&gt; fails. If no &lt;var&gt;command&lt;/var&gt; is specified, redirections may be used to affect the current shell environment. If there are no redirection errors, the return status is zero; otherwise the return status is non-zero.</source>
          <target state="translated">쉘은 &lt;var&gt;name&lt;/var&gt; 을 &lt;var&gt;command&lt;/var&gt; 의 0 번째 인수로 전달합니다 . 어떤 이유로 &lt;var&gt;command&lt;/var&gt; 을 실행할 수없는 경우 &lt;code&gt;execfail&lt;/code&gt; 쉘 옵션을 사용 하지 않으면 비 대화식 쉘이 종료됩니다 . 이 경우 실패를 반환합니다. 파일을 실행할 수없는 경우 대화식 쉘이 실패를 리턴합니다. &lt;code&gt;exec&lt;/code&gt; 가 실패하면 서브 쉘이 무조건 종료됩니다 . &lt;var&gt;command&lt;/var&gt; 을 지정 하지 않으면 재 지정을 사용하여 현재 쉘 환경에 영향을 줄 수 있습니다. 리디렉션 오류가 없으면 반환 상태는 0입니다. 그렇지 않으면 반환 상태는 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ac16be5e888f91838e2b4898df347d86ac41bfc2" translate="yes" xml:space="preserve">
          <source>is used similarly to duplicate output file descriptors. If &lt;var&gt;n&lt;/var&gt; is not specified, the standard output (file descriptor 1) is used. If the digits in &lt;var&gt;word&lt;/var&gt; do not specify a file descriptor open for output, a redirection error occurs. If &lt;var&gt;word&lt;/var&gt; evaluates to &amp;lsquo;</source>
          <target state="translated">출력 파일 디스크립터를 복제하는 데 유사하게 사용됩니다. 경우 &lt;var&gt;n&lt;/var&gt; 을 지정하지 않고, 표준 출력 (파일 기술자 1)이 사용된다. &lt;var&gt;word&lt;/var&gt; 의 숫자가 출력을 위해 열린 파일 디스크립터를 지정하지 않으면 경로 재 지정 오류가 발생합니다. 만약 &lt;var&gt;word&lt;/var&gt; '로 평가</target>
        </trans-unit>
        <trans-unit id="ad61322952021f4aedce89cac8ced7b2e245a7cf" translate="yes" xml:space="preserve">
          <source>is used to create &lt;code&gt;configure&lt;/code&gt; by a program called Autoconf. You only need</source>
          <target state="translated">Autoconf라는 프로그램에서 &lt;code&gt;configure&lt;/code&gt; 을 만드는 데 사용됩니다 . 당신은 필요</target>
        </trans-unit>
        <trans-unit id="7c9ba06812a08b57384b9b92529668be623dad69" translate="yes" xml:space="preserve">
          <source>is used to duplicate input file descriptors. If &lt;var&gt;word&lt;/var&gt; expands to one or more digits, the file descriptor denoted by &lt;var&gt;n&lt;/var&gt; is made to be a copy of that file descriptor. If the digits in &lt;var&gt;word&lt;/var&gt; do not specify a file descriptor open for input, a redirection error occurs. If &lt;var&gt;word&lt;/var&gt; evaluates to &amp;lsquo;</source>
          <target state="translated">입력 파일 디스크립터를 복제하는 데 사용됩니다. &lt;var&gt;word&lt;/var&gt; 가 하나 이상의 숫자로 확장 되면 &lt;var&gt;n&lt;/var&gt; 으로 표시된 파일 디스크립터 는 해당 파일 디스크립터의 사본이됩니다. &lt;var&gt;word&lt;/var&gt; 의 숫자가 입력을 위해 열린 파일 디스크립터를 지정하지 않으면 경로 재 지정 오류가 발생합니다. 만약 &lt;var&gt;word&lt;/var&gt; '로 평가</target>
        </trans-unit>
        <trans-unit id="25f648ba07c318fb10c2ec4f60a42f5fb257af03" translate="yes" xml:space="preserve">
          <source>is used with</source>
          <target state="translated">와 함께 사용</target>
        </trans-unit>
        <trans-unit id="01b9101268e38117b60c179a41d89653187e2823" translate="yes" xml:space="preserve">
          <source>is used with &lt;var&gt;name&lt;/var&gt; arguments, additional options, other than</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; 인수, 추가 옵션 과 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f505aeb8452a9e1dda8e2421ee583bd426a1042a" translate="yes" xml:space="preserve">
          <source>is used with no &lt;var&gt;optname&lt;/var&gt; arguments, &lt;code&gt;shopt&lt;/code&gt; shows only those options which are set or unset, respectively.</source>
          <target state="translated">&lt;var&gt;optname&lt;/var&gt; 인수 없이 사용되는 &lt;code&gt;shopt&lt;/code&gt; 는 각각 설정 또는 설정 해제 된 옵션 만 표시합니다.</target>
        </trans-unit>
        <trans-unit id="217fb43e209237b0aaa1895959072269c8744929" translate="yes" xml:space="preserve">
          <source>is used, the &lt;var&gt;name&lt;/var&gt;s become disabled. Otherwise &lt;var&gt;name&lt;/var&gt;s are enabled. For example, to use the &lt;code&gt;test&lt;/code&gt; binary found via &lt;code&gt;$PATH&lt;/code&gt; instead of the shell builtin version, type &amp;lsquo;</source>
          <target state="translated">를 사용하면 &lt;var&gt;name&lt;/var&gt; 이 비활성화됩니다. 그렇지 않으면 &lt;var&gt;name&lt;/var&gt; 이 활성화됩니다. 예를 들어, 쉘 내장 버전 대신 &lt;code&gt;$PATH&lt;/code&gt; 를 통해 찾은 &lt;code&gt;test&lt;/code&gt; 바이너리 를 사용하려면 '</target>
        </trans-unit>
        <trans-unit id="35752976225509bfeec8b0999e3d0d702f9eb870" translate="yes" xml:space="preserve">
          <source>isearch-terminators</source>
          <target state="translated">isearch-terminators</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="2eda8ad1632af052b0c74d6fcab6058b3a79cf25" translate="yes" xml:space="preserve">
          <source>job</source>
          <target state="translated">job</target>
        </trans-unit>
        <trans-unit id="d33590b03ac4b301b87f275ccaa0d52b307ffcc7" translate="yes" xml:space="preserve">
          <source>job control</source>
          <target state="translated">직무 관리</target>
        </trans-unit>
        <trans-unit id="6966922100bf006356af2b9098e6ba3b1c190226" translate="yes" xml:space="preserve">
          <source>jobs</source>
          <target state="translated">jobs</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="1f687eea1b24312cc11b36a55de93fad10fd9cfd" translate="yes" xml:space="preserve">
          <source>keymap</source>
          <target state="translated">keymap</target>
        </trans-unit>
        <trans-unit id="a43aa2b3cce8548368bbd79297bc5714364ea31a" translate="yes" xml:space="preserve">
          <source>keyword</source>
          <target state="translated">keyword</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="3be3b7d642432669ef6e2c09cb330be09b1f9c58" translate="yes" xml:space="preserve">
          <source>kill -l</source>
          <target state="translated">죽이다 -l</target>
        </trans-unit>
        <trans-unit id="840750711c0b33a5ccc4d38987c73737a91db5a7" translate="yes" xml:space="preserve">
          <source>kill 0</source>
          <target state="translated">킬 0</target>
        </trans-unit>
        <trans-unit id="9127ac661e5c219ad1b4417d0fe16496e7137010" translate="yes" xml:space="preserve">
          <source>kill ring</source>
          <target state="translated">킬 링</target>
        </trans-unit>
        <trans-unit id="efd1e93289a11d56fa1ce4744a9d58d1ff82cc51" translate="yes" xml:space="preserve">
          <source>kill-line (C-k)</source>
          <target state="translated">킬라 인 (Ck)</target>
        </trans-unit>
        <trans-unit id="3bb03dcb8506e35cb8ae51cfb44bc900c72b957c" translate="yes" xml:space="preserve">
          <source>kill-region ()</source>
          <target state="translated">킬 지역 ()</target>
        </trans-unit>
        <trans-unit id="b3221c7600a5f27a99876d60558ac549d708788d" translate="yes" xml:space="preserve">
          <source>kill-whole-line ()</source>
          <target state="translated">전체 라인 ()</target>
        </trans-unit>
        <trans-unit id="30705def791af266513b2db9f935bfdedd8311a5" translate="yes" xml:space="preserve">
          <source>kill-word (M-d)</source>
          <target state="translated">살해 (Md)</target>
        </trans-unit>
        <trans-unit id="4492634f7fd8b8c936a4ec4f6ca43c544395b285" translate="yes" xml:space="preserve">
          <source>killing text</source>
          <target state="translated">텍스트를 죽이는</target>
        </trans-unit>
        <trans-unit id="9e2ff2fcafa9e9d00113f6de489ce260cc60a64e" translate="yes" xml:space="preserve">
          <source>ksh</source>
          <target state="translated">ksh</target>
        </trans-unit>
        <trans-unit id="37e4f0618558b7dcaee0e895d46ec03ea399ef01" translate="yes" xml:space="preserve">
          <source>left and right bitwise shifts</source>
          <target state="translated">좌우 비트 시프트</target>
        </trans-unit>
        <trans-unit id="0262f9bb6ecbef4efbae97193c08ec335698a205" translate="yes" xml:space="preserve">
          <source>let</source>
          <target state="translated">let</target>
        </trans-unit>
        <trans-unit id="9d062bafff17ba8b9a1215c4c51485134d509d91" translate="yes" xml:space="preserve">
          <source>lib</source>
          <target state="translated">lib</target>
        </trans-unit>
        <trans-unit id="6755b7f3be4d57f35f487463981e184cb3c21e6d" translate="yes" xml:space="preserve">
          <source>lib/malloc</source>
          <target state="translated">lib/malloc</target>
        </trans-unit>
        <trans-unit id="06fcf6270355a8ed05d4291077bf83f5645dc172" translate="yes" xml:space="preserve">
          <source>lib/readline</source>
          <target state="translated">lib/readline</target>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="82792a940aeb9dba2eeaa46c50d08754bf494cfc" translate="yes" xml:space="preserve">
          <source>localization</source>
          <target state="translated">localization</target>
        </trans-unit>
        <trans-unit id="268437e9bd2e099a9f82701e5f6bc2d784b2fc62" translate="yes" xml:space="preserve">
          <source>logical AND</source>
          <target state="translated">논리 AND</target>
        </trans-unit>
        <trans-unit id="7885a0b6df2add59817cfee480cdaf87d6b5b971" translate="yes" xml:space="preserve">
          <source>logical OR</source>
          <target state="translated">논리 OR</target>
        </trans-unit>
        <trans-unit id="9a7706f1752e19c786d860b91d544a61fb902b77" translate="yes" xml:space="preserve">
          <source>logical and bitwise negation</source>
          <target state="translated">논리적이고 비트 단위의 부정</target>
        </trans-unit>
        <trans-unit id="e01148e3b7cd58b5655ddc6da8871580e6d8b916" translate="yes" xml:space="preserve">
          <source>login shell</source>
          <target state="translated">로그인 쉘</target>
        </trans-unit>
        <trans-unit id="55525e1b3dfd8787fd202aed45fb04494e3242d0" translate="yes" xml:space="preserve">
          <source>logout</source>
          <target state="translated">logout</target>
        </trans-unit>
        <trans-unit id="b5cb594fa2a396cb19afd29f9887c277bf99f5dd" translate="yes" xml:space="preserve">
          <source>magic-space ()</source>
          <target state="translated">매직 스페이스 ()</target>
        </trans-unit>
        <trans-unit id="5821eb27d7b71c9078000da31a5a654c97e401b9" translate="yes" xml:space="preserve">
          <source>make</source>
          <target state="translated">make</target>
        </trans-unit>
        <trans-unit id="112d438a32e6e15222611e49ff58445e826be351" translate="yes" xml:space="preserve">
          <source>make clean</source>
          <target state="translated">깨끗하게하다</target>
        </trans-unit>
        <trans-unit id="f65c530b348da0e69a6b0981344be874f738991b" translate="yes" xml:space="preserve">
          <source>make distclean</source>
          <target state="translated">깨끗하지 않다</target>
        </trans-unit>
        <trans-unit id="8ac56d2d6c13acc3594f87eb880d15f820a757b2" translate="yes" xml:space="preserve">
          <source>make install</source>
          <target state="translated">설치하다</target>
        </trans-unit>
        <trans-unit id="f32d54266ec79922e1a06cc8a3601d0fa939f5da" translate="yes" xml:space="preserve">
          <source>make tests</source>
          <target state="translated">시험하다</target>
        </trans-unit>
        <trans-unit id="e5603bda0f8f462cc8c27637b14b9ee06e247168" translate="yes" xml:space="preserve">
          <source>mapfile</source>
          <target state="translated">mapfile</target>
        </trans-unit>
        <trans-unit id="802ff1c83e4667805d6ea9536acbd3374e65f988" translate="yes" xml:space="preserve">
          <source>mark-modified-lines</source>
          <target state="translated">mark-modified-lines</target>
        </trans-unit>
        <trans-unit id="d4b365c2469b053afb66a6bdfa1bdae143444c6a" translate="yes" xml:space="preserve">
          <source>mark-symlinked-directories</source>
          <target state="translated">mark-symlinked-directories</target>
        </trans-unit>
        <trans-unit id="fdf099cfae798d98fa570e297c550609934897de" translate="yes" xml:space="preserve">
          <source>match-hidden-files</source>
          <target state="translated">match-hidden-files</target>
        </trans-unit>
        <trans-unit id="23dab2d7dcbd8319e0d9a07d4114fab8446c835a" translate="yes" xml:space="preserve">
          <source>matching, pattern</source>
          <target state="translated">매칭, 패턴</target>
        </trans-unit>
        <trans-unit id="0f89434b7118d6fa8f8358035df8650a3453e9d6" translate="yes" xml:space="preserve">
          <source>menu-complete ()</source>
          <target state="translated">메뉴 완성 ()</target>
        </trans-unit>
        <trans-unit id="a62ea18c3ec87ffedba9aebdc091d0f41242ad04" translate="yes" xml:space="preserve">
          <source>menu-complete-backward ()</source>
          <target state="translated">메뉴 완성-뒤로 ()</target>
        </trans-unit>
        <trans-unit id="f46939cc5d8f47e1a6ef1a43b11c3270f12e12e5" translate="yes" xml:space="preserve">
          <source>menu-complete-display-prefix</source>
          <target state="translated">menu-complete-display-prefix</target>
        </trans-unit>
        <trans-unit id="6be1c980c0e18efd59eb5487624c4981e24af58b" translate="yes" xml:space="preserve">
          <source>meta prefix</source>
          <target state="translated">메타 접두사</target>
        </trans-unit>
        <trans-unit id="aacf56760fdaac6bf393c9e56bd09568805bb882" translate="yes" xml:space="preserve">
          <source>meta-flag</source>
          <target state="translated">meta-flag</target>
        </trans-unit>
        <trans-unit id="c1d3d70699b31ee64cb23e6446c8dba17f385b7d" translate="yes" xml:space="preserve">
          <source>metacharacter</source>
          <target state="translated">metacharacter</target>
        </trans-unit>
        <trans-unit id="75692d3d6a25fdbbab9edabf38e5720974cf6f43" translate="yes" xml:space="preserve">
          <source>method of naming open files.</source>
          <target state="translated">열린 파일의 이름을 지정하는 방법.</target>
        </trans-unit>
        <trans-unit id="36ead0719d1ff32cc3f81b6ef6c9ccf3a31a07b2" translate="yes" xml:space="preserve">
          <source>minimal-config</source>
          <target state="translated">minimal-config</target>
        </trans-unit>
        <trans-unit id="c93cd2cca5dbb9e3fe8506e7ad76bdb43933c06d" translate="yes" xml:space="preserve">
          <source>moves forward a character, while</source>
          <target state="translated">문자를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="0164191dc3b4d052e57f650044473bc28407c125" translate="yes" xml:space="preserve">
          <source>moves forward a word. It is a loose convention that control keystrokes operate on characters while meta keystrokes operate on words.</source>
          <target state="translated">단어를 앞으로 이동시킵니다. 메타 키 스트로크가 단어에서 작동하는 동안 제어 키 스트로크는 문자에서 작동하는 느슨한 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="4223f83c4cba8246c6602412200bf2cd0a77cba1" translate="yes" xml:space="preserve">
          <source>moves the file descriptor &lt;var&gt;digit&lt;/var&gt; to file descriptor &lt;var&gt;n&lt;/var&gt;, or the standard input (file descriptor 0) if &lt;var&gt;n&lt;/var&gt; is not specified. &lt;var&gt;digit&lt;/var&gt; is closed after being duplicated to &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">파일 디스크립터 &lt;var&gt;digit&lt;/var&gt; 를 파일 디스크립터 &lt;var&gt;n&lt;/var&gt; 또는 &lt;var&gt;n&lt;/var&gt; 이 지정되지 않은 경우 표준 입력 (파일 디스크립터 0)으로 이동 합니다. &lt;var&gt;n&lt;/var&gt; 에 복제 된 후 &lt;var&gt;digit&lt;/var&gt; 가 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="22c392fdd0dc8192cc4599f2c2f344be7ded8af8" translate="yes" xml:space="preserve">
          <source>moves the file descriptor &lt;var&gt;digit&lt;/var&gt; to file descriptor &lt;var&gt;n&lt;/var&gt;, or the standard output (file descriptor 1) if &lt;var&gt;n&lt;/var&gt; is not specified.</source>
          <target state="translated">파일 디스크립터 &lt;var&gt;digit&lt;/var&gt; 를 파일 디스크립터 &lt;var&gt;n&lt;/var&gt; 또는 &lt;var&gt;n&lt;/var&gt; 이 지정되지 않은 경우 표준 출력 (파일 디스크립터 1)으로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="019ca3776e3460a672c6955d46faf2067062ad62" translate="yes" xml:space="preserve">
          <source>multiplication, division, remainder</source>
          <target state="translated">곱셈, 나눗셈, 나머지</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="d4862135104fab09dd10c92cb73759fd014d9c70" translate="yes" xml:space="preserve">
          <source>name=value</source>
          <target state="translated">name=value</target>
        </trans-unit>
        <trans-unit id="1404b8c3b46ed519cb95ee827a3962734aadf0cc" translate="yes" xml:space="preserve">
          <source>native languages</source>
          <target state="translated">모국어</target>
        </trans-unit>
        <trans-unit id="e453d1d3e45b46f4624613d0ed41283e8121317d" translate="yes" xml:space="preserve">
          <source>new line</source>
          <target state="translated">새로운 줄</target>
        </trans-unit>
        <trans-unit id="f6fd7a4346b3bb0e3124991926d729836808da54" translate="yes" xml:space="preserve">
          <source>newline</source>
          <target state="translated">newline</target>
        </trans-unit>
        <trans-unit id="a6077275cbc2aec6c02259e562c00a041f1d6218" translate="yes" xml:space="preserve">
          <source>next-history (C-n)</source>
          <target state="translated">다음 역사 (Cn)</target>
        </trans-unit>
        <trans-unit id="5b8fbece3ffb6d16174154482947ef4b4c973e65" translate="yes" xml:space="preserve">
          <source>next-screen-line ()</source>
          <target state="translated">다음 화면 라인 ()</target>
        </trans-unit>
        <trans-unit id="c35295b7bbff9f94824e832ea55f73222e7780a6" translate="yes" xml:space="preserve">
          <source>non-incremental-forward-search-history (M-n)</source>
          <target state="translated">비 증분-포워드 검색 기록 (Mn)</target>
        </trans-unit>
        <trans-unit id="7543b86bdee46f50efda87cdaed345283e0cc4ea" translate="yes" xml:space="preserve">
          <source>non-incremental-reverse-search-history (M-p)</source>
          <target state="translated">비 증분 역 검색 역사 (Mp)</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="19d0495c3630c205e3f85cd13c6d4cb031c0953f" translate="yes" xml:space="preserve">
          <source>nor</source>
          <target state="translated">nor</target>
        </trans-unit>
        <trans-unit id="c6634755e8d0a9ed3bec5be9af09235cbd9e30bc" translate="yes" xml:space="preserve">
          <source>nor the</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="358c35146455bf41c9eea5fb004c606e71e229b9" translate="yes" xml:space="preserve">
          <source>notation, readline</source>
          <target state="translated">표기법, readline</target>
        </trans-unit>
        <trans-unit id="3233885639dbb197856a1b3a743b40f9842dfdae" translate="yes" xml:space="preserve">
          <source>of the argument that is significant. If you pass a negative argument to a command which normally acts in a forward direction, that command will act in a backward direction. For example, to kill text back to the start of the line, you might type &amp;lsquo;</source>
          <target state="translated">중요한 논쟁의. 일반적으로 순방향으로 작동하는 명령에 음수 인수를 전달하면 해당 명령은 역방향으로 작동합니다. 예를 들어, 줄의 시작 부분으로 텍스트를 다시 죽이려면 '</target>
        </trans-unit>
        <trans-unit id="da7a68734367828e30b94927f4c2b43ed2c0f652" translate="yes" xml:space="preserve">
          <source>off</source>
          <target state="translated">off</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">on</target>
        </trans-unit>
        <trans-unit id="314a363da54e00dba91d59bc601a2761ceca5cc9" translate="yes" xml:space="preserve">
          <source>open files inherited by the shell at invocation, as modified by redirections supplied to the &lt;code&gt;exec&lt;/code&gt; builtin</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 내장에 제공된 경로 재 지정에 의해 수정 된, 호출시 쉘에 의해 상속 된 파일 열기</target>
        </trans-unit>
        <trans-unit id="014233bbb6ec1846524be9e1dc81e342f1c79784" translate="yes" xml:space="preserve">
          <source>operate-and-get-next (C-o)</source>
          <target state="translated">작동 및 획득 (다음)</target>
        </trans-unit>
        <trans-unit id="bdf61f767a5311ae1c88adc2937cef4e49c884ba" translate="yes" xml:space="preserve">
          <source>operator, shell</source>
          <target state="translated">연산자, 쉘</target>
        </trans-unit>
        <trans-unit id="14eb14ece52df99c284b819d9f8092e50aa1613e" translate="yes" xml:space="preserve">
          <source>option</source>
          <target state="translated">option</target>
        </trans-unit>
        <trans-unit id="b1587322e2d07a943ce4dbe3d0972b76ed7a38ce" translate="yes" xml:space="preserve">
          <source>option (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;), then &lt;code&gt;$0&lt;/code&gt; is set to the first argument after the string to be executed, if one is present. Otherwise, it is set to the filename used to invoke Bash, as given by argument zero.</source>
          <target state="translated">옵션 ( &lt;a href=&quot;invoking-bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ), &lt;code&gt;$0&lt;/code&gt; 이 실행될 문자열 다음의 첫 번째 인수 (존재하는 경우)로 설정됩니다. 그렇지 않으면 인수 0에 지정된대로 Bash를 호출하는 데 사용되는 파일 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4c47e82fba109fcab8aa83bfbea6c4174331a0d2" translate="yes" xml:space="preserve">
          <source>option (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;), then &lt;code&gt;$0&lt;/code&gt; is set to the first argument after the string to be executed, if one is present. Otherwise, it is set to the filename used to invoke Bash, as given by argument zero.</source>
          <target state="translated">옵션 ( &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 )이있는 경우 &lt;code&gt;$0&lt;/code&gt; 은 실행될 문자열 다음에 첫 번째 인수가 설정됩니다 (있는 경우). 그렇지 않으면 인수 0으로 지정된대로 Bash를 호출하는 데 사용 된 파일 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9def802bfafecfa4235099bfb18712b98b426fb3" translate="yes" xml:space="preserve">
          <source>option and parallel&amp;rsquo;s</source>
          <target state="translated">옵션과 병렬</target>
        </trans-unit>
        <trans-unit id="104ee24387f4691a3098f26bfe9962fae6f618eb" translate="yes" xml:space="preserve">
          <source>option and will use Readline to obtain the line when given the</source>
          <target state="translated">옵션이 주어지면 Readline을 사용하여 줄을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2d3a40253691f0d7103e82b79d5b142a15d36b20" translate="yes" xml:space="preserve">
          <source>option are generated next. The words generated by the pattern need not match the word being completed. The &lt;code&gt;GLOBIGNORE&lt;/code&gt; shell variable is not used to filter the matches, but the &lt;code&gt;FIGNORE&lt;/code&gt; shell variable is used.</source>
          <target state="translated">다음에 옵션이 생성됩니다. 패턴에 의해 생성 된 단어는 완료되는 단어와 일치하지 않아도됩니다. &lt;code&gt;GLOBIGNORE&lt;/code&gt; 의 쉘 변수가 일치를 필터링하는 데 사용되지 않고, &lt;code&gt;FIGNORE&lt;/code&gt; 쉘 변수가 사용된다.</target>
        </trans-unit>
        <trans-unit id="480f382d10e5d60aed39e4f37d2809e389d8333f" translate="yes" xml:space="preserve">
          <source>option below).</source>
          <target state="translated">아래 옵션).</target>
        </trans-unit>
        <trans-unit id="666c2b21fbc238627d03c3fd7a17016b956a2c27" translate="yes" xml:space="preserve">
          <source>option brings in the rest of the &quot;Bash default&quot; completions &amp;ndash; possible completion that Bash adds to the default Readline set. These include things like command name completion, variable completion for words beginning with &amp;lsquo;</source>
          <target state="translated">옵션은 나머지 &quot;Bash default&quot;완료 &amp;ndash; Bash가 기본 Readline 세트에 추가 할 수있는 완료를 가져옵니다. 여기에는 명령 이름 완성, '로 시작하는 단어에 대한 변수 완성 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0632bf76f5b2aa644b3c2064aca7b3415593da52" translate="yes" xml:space="preserve">
          <source>option can be used to override this and force the suspension.</source>
          <target state="translated">옵션을 사용하여이를 무시하고 서스펜션을 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06bdc3f4f83e9eaf823f8dc2efcb7f0a70dfd6c3" translate="yes" xml:space="preserve">
          <source>option causes &lt;code&gt;wait&lt;/code&gt; to wait until the job or process terminates before returning.</source>
          <target state="translated">옵션의 원인은 &lt;code&gt;wait&lt;/code&gt; 반환하기 전에 작업 또는 프로세스가 종료 될 때까지 기다려야.</target>
        </trans-unit>
        <trans-unit id="feab3bbd40699067638a9bd5488d6481b2d59a1b" translate="yes" xml:space="preserve">
          <source>option causes &lt;var&gt;command&lt;/var&gt; to be executed with an empty environment. If</source>
          <target state="translated">옵션은 빈 환경에서 &lt;var&gt;command&lt;/var&gt; 이 실행되도록합니다. 만약</target>
        </trans-unit>
        <trans-unit id="5d72e60603fe61fb6f4b42dd257f4ff9f6d20c01" translate="yes" xml:space="preserve">
          <source>option causes a single word indicating the command or file name used to invoke &lt;var&gt;command&lt;/var&gt; to be displayed; the</source>
          <target state="translated">옵션은 호출 용으로 사용되는 명령 또는 파일 이름을 나타내는 단어 원인 &lt;var&gt;command&lt;/var&gt; 표시 할을; 그만큼</target>
        </trans-unit>
        <trans-unit id="3279c5b1e067865ffb31bccd19cd8e02d4794d18" translate="yes" xml:space="preserve">
          <source>option causes local variables to inherit the attributes (except the &lt;var&gt;nameref&lt;/var&gt; attribute) and value of any existing variable with the same &lt;var&gt;name&lt;/var&gt; at a surrounding scope. If there is no existing variable, the local variable is initially unset.</source>
          <target state="translated">옵션은 지역 변수가 주변 범위에서 동일한 &lt;var&gt;name&lt;/var&gt; 을 가진 기존 변수 의 속성 ( &lt;var&gt;nameref&lt;/var&gt; 속성 제외 ) 및 값 을 상속하도록합니다 . 기존 변수가없는 경우 로컬 변수는 처음에 설정 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb92662dfb462bca699bb66c809e4be30bb1dbd" translate="yes" xml:space="preserve">
          <source>option causes output to be displayed in a form that may be reused as input. Other options have the following meanings:</source>
          <target state="translated">옵션은 출력을 입력으로 재사용 할 수있는 형식으로 표시합니다. 다른 옵션의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="91dc4da4a4c21b26fc7713a1770d5c8050e182e9" translate="yes" xml:space="preserve">
          <source>option causes output to be displayed in a format that may be reused as input. If a variable name is followed by =&lt;var&gt;value&lt;/var&gt;, the value of the variable is set to &lt;var&gt;value&lt;/var&gt;. The return status is zero unless an invalid option is supplied, one of the &lt;var&gt;name&lt;/var&gt; arguments is not a valid shell variable or function name, or the</source>
          <target state="translated">옵션은 출력을 입력으로 재사용 할 수있는 형식으로 표시합니다. 변수 이름 = 뒤에 있다면 &lt;var&gt;value&lt;/var&gt; , 변수의 값을 설정 &lt;var&gt;value&lt;/var&gt; . 유효하지 않은 옵션이 제공 되지 않거나 &lt;var&gt;name&lt;/var&gt; 인수 중 하나가 유효한 쉘 변수 또는 함수 이름 이 아닌 경우 리턴 상태는 0입니다 .</target>
        </trans-unit>
        <trans-unit id="edd0ae8a52c63e8dd38a9be603dc3d78f8607bb4" translate="yes" xml:space="preserve">
          <source>option causes output to be displayed in a format that may be reused as input. If no arguments are given, or if only</source>
          <target state="translated">옵션은 출력을 입력으로 재사용 할 수있는 형식으로 표시합니다. 인수가 제공되지 않거나</target>
        </trans-unit>
        <trans-unit id="ee70ddcf0718f28b3117e7d5d914b42d1b009fcb" translate="yes" xml:space="preserve">
          <source>option causes the output to be assigned to the variable &lt;var&gt;var&lt;/var&gt; rather than being printed to the standard output.</source>
          <target state="translated">옵션은 출력 이 표준 출력으로 인쇄되지 않고 변수 &lt;var&gt;var&lt;/var&gt; 에 지정되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="c48f0567250b2ef4413db606d22e5cfd9beb35a5" translate="yes" xml:space="preserve">
          <source>option causes the shell to forget all remembered locations. The</source>
          <target state="translated">옵션은 쉘이 기억 된 모든 위치를 잊게합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="4091f89d870ab1089aa32406550b1e67fd19eb5c" translate="yes" xml:space="preserve">
          <source>option causes the shell to forget the remembered location of each &lt;var&gt;name&lt;/var&gt;. If the</source>
          <target state="translated">옵션은 쉘이 각 &lt;var&gt;name&lt;/var&gt; 의 기억 된 위치를 잊게합니다 . 만약</target>
        </trans-unit>
        <trans-unit id="f3c594956d52734b3706dacfbfe954e54c3ad410" translate="yes" xml:space="preserve">
          <source>option causes the shell to print a list of signal names and their corresponding numbers. Each &lt;var&gt;sigspec&lt;/var&gt; is either a signal name or a signal number. Signal names are case insensitive and the &lt;code&gt;SIG&lt;/code&gt; prefix is optional.</source>
          <target state="translated">옵션을 사용하면 쉘이 신호 이름 및 해당 번호 목록을 인쇄합니다. 각 &lt;var&gt;sigspec&lt;/var&gt; 은 신호 이름 또는 신호 번호입니다. 신호 이름은 대소 문자를 구분하지 않으며 &lt;code&gt;SIG&lt;/code&gt; 접두어는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="766ac0a95e319369a2c4d1fa0f0f685eef26842a" translate="yes" xml:space="preserve">
          <source>option changes the output format to that specified by &lt;small&gt;POSIX&lt;/small&gt;. When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), it does not recognize &lt;code&gt;time&lt;/code&gt; as a reserved word if the next token begins with a &amp;lsquo;</source>
          <target state="translated">옵션은 출력 형식을 &lt;small&gt;POSIX에서&lt;/small&gt; 지정한 형식으로 변경합니다 . 쉘이 &lt;small&gt;POSIX&lt;/small&gt; 모드 ( &lt;a href=&quot;bash-posix-mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 )에 있을 때 다음 토큰이 '로 시작하면 &lt;code&gt;time&lt;/code&gt; 을 예약어로 인식하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b02aa780ae6476630e34920f6bab1973180f9d9a" translate="yes" xml:space="preserve">
          <source>option changes the output format to that specified by &lt;small&gt;POSIX&lt;/small&gt;. When the shell is in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), it does not recognize &lt;code&gt;time&lt;/code&gt; as a reserved word if the next token begins with a &amp;lsquo;</source>
          <target state="translated">옵션은 출력 형식을 &lt;small&gt;POSIX로&lt;/small&gt; 지정된 형식으로 변경합니다 . 쉘이 &lt;small&gt;POSIX&lt;/small&gt; 모드 인 경우 ( &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX 모드&lt;/a&gt; 참조 ) 다음 토큰이 '로 시작하면 &lt;code&gt;time&lt;/code&gt; 이 예약어로 인식되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d06de06c1c2032a4ca2a4e1f9924385dee70ea0" translate="yes" xml:space="preserve">
          <source>option disables the interpretation of these escape characters, even on systems where they are interpreted by default. The &lt;code&gt;xpg_echo&lt;/code&gt; shell option may be used to dynamically determine whether or not &lt;code&gt;echo&lt;/code&gt; expands these escape characters by default. &lt;code&gt;echo&lt;/code&gt; does not interpret</source>
          <target state="translated">이 옵션은 기본적으로 해석되는 시스템에서도 이스케이프 문자의 해석을 비활성화합니다. &lt;code&gt;xpg_echo&lt;/code&gt; 의 쉘 옵션은 동적 여부를 결정하기 위해 사용될 수있다 &lt;code&gt;echo&lt;/code&gt; 기본적으로 이러한 이스케이프 문자를 확장합니다. &lt;code&gt;echo&lt;/code&gt; 가 해석되지 않습니다</target>
        </trans-unit>
        <trans-unit id="0e1ee4974d9d26cd665f6a6615c946e9d929bdae" translate="yes" xml:space="preserve">
          <source>option displays output in a form that may be reused as input. If a variable name is followed by =&lt;var&gt;value&lt;/var&gt;, the value of the variable is set to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">옵션은 입력으로 재사용 될 수있는 형식으로 출력을 표시합니다. 변수 이름 = 뒤에 있다면 &lt;var&gt;value&lt;/var&gt; , 변수의 값을 설정 &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f1e46c7b408b5093615fa70bfcff4629a0f33c0f" translate="yes" xml:space="preserve">
          <source>option forces a path search for each &lt;var&gt;name&lt;/var&gt;, even if</source>
          <target state="translated">옵션은 각 &lt;var&gt;name&lt;/var&gt; 대한 경로 검색을 강제 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="cd995f7dbbedee338ceb2490b9b694b6e5765b69" translate="yes" xml:space="preserve">
          <source>option forces variables to be created or modified at the global scope, even when &lt;code&gt;declare&lt;/code&gt; is executed in a shell function. It is ignored in all other cases.</source>
          <target state="translated">옵션은 &lt;code&gt;declare&lt;/code&gt; 이 쉘 함수에서 실행될 때에도 전역 범위에서 변수를 작성하거나 수정 합니다. 다른 모든 경우에는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e232f03ff1715b89d945b509981432e1e1f956a2" translate="yes" xml:space="preserve">
          <source>option from the parent shell. When not in &lt;small&gt;POSIX&lt;/small&gt; mode, Bash clears the</source>
          <target state="translated">부모 쉘에서 옵션. &lt;small&gt;POSIX&lt;/small&gt; 모드가 아닌 경우 Bash는</target>
        </trans-unit>
        <trans-unit id="5bfbdf94ef7ee7435e35e0836baa120fe4245d5f" translate="yes" xml:space="preserve">
          <source>option from the parent shell. When the &lt;code&gt;inherit_errexit&lt;/code&gt; option is not enabled, Bash clears the</source>
          <target state="translated">부모 쉘에서 옵션. 때 &lt;code&gt;inherit_errexit&lt;/code&gt; 의 옵션을 사용할 수 없습니다, 배쉬는 지워</target>
        </trans-unit>
        <trans-unit id="1b79568dcd3536c83055f8e88adc1ee7e5076368" translate="yes" xml:space="preserve">
          <source>option has been set (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;), Bash scans each word for the characters &amp;lsquo;</source>
          <target state="translated">옵션이 설정되어 있으면 ( &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt; 참조 ) Bash는 문자 '</target>
        </trans-unit>
        <trans-unit id="9c922bef79dc0ae863ba0261ac0dd34364b8cefa" translate="yes" xml:space="preserve">
          <source>option has been set (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;), Bash scans each word for the characters &amp;lsquo;</source>
          <target state="translated">옵션이 설정되면 ( &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;내장 설정&lt;/a&gt; 참조 ) Bash는 각 단어에서 '</target>
        </trans-unit>
        <trans-unit id="c1f3887b90f6e1c01345e86011fb39a659cd4a57" translate="yes" xml:space="preserve">
          <source>option has been supplied, the first argument is assumed to be the name of a file containing shell commands (see &lt;a href=&quot;shell-scripts&quot;&gt;Shell Scripts&lt;/a&gt;). When Bash is invoked in this fashion, &lt;code&gt;$0&lt;/code&gt; is set to the name of the file, and the positional parameters are set to the remaining arguments. Bash reads and executes commands from this file, then exits. Bash&amp;rsquo;s exit status is the exit status of the last command executed in the script. If no commands are executed, the exit status is 0.</source>
          <target state="translated">옵션이 제공되면 첫 번째 인수는 쉘 명령이 포함 된 파일의 이름으로 간주됩니다 ( &lt;a href=&quot;shell-scripts&quot;&gt;쉘 스크립트&lt;/a&gt; 참조 ). Bash가 이러한 방식으로 호출되면 &lt;code&gt;$0&lt;/code&gt; 이 파일 이름으로 설정되고 위치 매개 변수가 나머지 인수로 설정됩니다. Bash는이 파일에서 명령을 읽고 실행 한 다음 종료합니다. Bash의 종료 상태는 스크립트에서 실행 된 마지막 명령의 종료 상태입니다. 명령이 실행되지 않으면 종료 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="29cceed43a15204739532767e5398fd22244fb2d" translate="yes" xml:space="preserve">
          <source>option has been supplied, the first argument is assumed to be the name of a file containing shell commands (see &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt;). When Bash is invoked in this fashion, &lt;code&gt;$0&lt;/code&gt; is set to the name of the file, and the positional parameters are set to the remaining arguments. Bash reads and executes commands from this file, then exits. Bash&amp;rsquo;s exit status is the exit status of the last command executed in the script. If no commands are executed, the exit status is 0.</source>
          <target state="translated">옵션이 제공되면 첫 번째 인수는 쉘 명령을 포함하는 파일의 이름 인 것으로 간주됩니다 ( &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;쉘 스크립트&lt;/a&gt; 참조 ). 이 방식으로 Bash를 호출하면 &lt;code&gt;$0&lt;/code&gt; 이 파일 이름으로 설정되고 위치 매개 변수는 나머지 인수로 설정됩니다. Bash는이 파일에서 명령을 읽고 실행 한 다음 종료합니다. Bash의 종료 상태는 스크립트에서 마지막으로 실행 된 명령의 종료 상태입니다. 명령이 실행되지 않으면 종료 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="3f2af33021dd13f950bbb10bbf76d71a47ff3678" translate="yes" xml:space="preserve">
          <source>option has no effect. A non-interactive shell invoked with the name &lt;code&gt;sh&lt;/code&gt; does not attempt to read any other startup files.</source>
          <target state="translated">옵션은 효과가 없습니다. &lt;code&gt;sh&lt;/code&gt; 라는 이름으로 호출 된 비 대화식 쉘 은 다른 시작 파일을 읽으려고 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="640088caef3b0f874b197b4c8f31c5a0f19a67ae" translate="yes" xml:space="preserve">
          <source>option in such subshells.</source>
          <target state="translated">그러한 서브 쉘에서 옵션.</target>
        </trans-unit>
        <trans-unit id="65bca4b5b18e88bfee36f3bcab6361ff6f1e6c0a" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options and actions should apply to &amp;ldquo;empty&amp;rdquo; command completion; that is, completion attempted on a blank line. The</source>
          <target state="translated">옵션은 다른 제공된 옵션 및 조치가 &quot;빈&quot;명령 완료에 적용되어야 함을 나타냅니다. 즉, 빈 줄에 완료를 시도했습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="d66e7bd936911c886ea78900837059ea098cacfe" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options and actions should apply to completion on the initial non-assignment word on the line, or after a command delimiter such as &amp;lsquo;</source>
          <target state="translated">옵션은 다른 제공된 옵션 및 조치가 행의 초기 비 할당 단어에서 완료에 적용되거나 '</target>
        </trans-unit>
        <trans-unit id="d75d0a152f90f4f193ef695dc70eff051be63caf" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options and actions should apply to the &amp;ldquo;default&amp;rdquo; command completion; that is, completion attempted on a command for which no completion has previously been defined. The</source>
          <target state="translated">옵션은 제공된 다른 옵션 및 조치가 &quot;기본&quot;명령 완료에 적용되어야 함을 나타냅니다. 즉, 이전에 완료가 정의되지 않은 명령에서 완료를 시도했습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="0e5e87746d27014a845133460452ab6278627b53" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options should apply to &amp;ldquo;empty&amp;rdquo; command completion; that is, completion attempted on a blank line. The</source>
          <target state="translated">옵션은 다른 제공된 옵션이 &quot;빈&quot;명령 완료에 적용되어야 함을 나타냅니다. 즉, 빈 줄에 완료를 시도했습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="57a92abc7cb27b1c39fe6e5861c6f29b95daf9ac" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options should apply to completion on the initial non-assignment word on the line, or after a command delimiter such as &amp;lsquo;</source>
          <target state="translated">option은 다른 제공된 옵션이 줄의 첫 번째 비 할당 단어에서 완료되거나 '</target>
        </trans-unit>
        <trans-unit id="d23cd92c882c8cb6aa533f122cdb62719a3edf48" translate="yes" xml:space="preserve">
          <source>option indicates that other supplied options should apply to the &amp;ldquo;default&amp;rdquo; command completion; that is, completion attempted on a command for which no completion has previously been defined. The</source>
          <target state="translated">option은 다른 제공된 옵션이 &quot;default&quot;명령 완료에 적용되어야 함을 나타냅니다. 즉, 이전에 완료가 정의되지 않은 명령에서 완료를 시도했습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="dba3abb42182eac6af1d5fda462f8f7f91de68b5" translate="yes" xml:space="preserve">
          <source>option inhibits the display of function definitions; only the function name and attributes are printed. If the &lt;code&gt;extdebug&lt;/code&gt; shell option is enabled using &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the source file name and line number where each &lt;var&gt;name&lt;/var&gt; is defined are displayed as well.</source>
          <target state="translated">옵션은 기능 정의의 표시를 금지합니다. 함수 이름과 속성 만 인쇄됩니다. 는 IF &lt;code&gt;extdebug&lt;/code&gt; 의 쉘 옵션을 사용하여 활성화됩니다 &lt;code&gt;shopt&lt;/code&gt; 내부를 (참조 &lt;a href=&quot;the-shopt-builtin&quot;&gt;shopt 내부 기본 제공된을&lt;/a&gt; ), 각 소스 파일 이름과 줄 번호 &lt;var&gt;name&lt;/var&gt; 정의되어 잘으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7c4e8253593ea66ff5f242de71991d2440ce34df" translate="yes" xml:space="preserve">
          <source>option inhibits the display of function definitions; only the function name and attributes are printed. If the &lt;code&gt;extdebug&lt;/code&gt; shell option is enabled using &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the source file name and line number where each &lt;var&gt;name&lt;/var&gt; is defined are displayed as well.</source>
          <target state="translated">옵션은 기능 정의 표시를 금지합니다. 기능 이름과 속성 만 인쇄됩니다. &lt;code&gt;shopt&lt;/code&gt; 를 사용하여 &lt;code&gt;extdebug&lt;/code&gt; 쉘 옵션을 활성화 한 경우 ( &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtin&lt;/a&gt; 참조 ) 각 &lt;var&gt;name&lt;/var&gt; 이 정의 된 소스 파일 이름과 줄 번호 도 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6747b2e05f1fcd92f3964ac1fe074ff926f28ebd" translate="yes" xml:space="preserve">
          <source>option inhibits the path search, and &lt;var&gt;filename&lt;/var&gt; is used as the location of &lt;var&gt;name&lt;/var&gt;. The</source>
          <target state="translated">옵션은 경로 검색을 금지하고 &lt;var&gt;filename&lt;/var&gt; 은 &lt;var&gt;name&lt;/var&gt; 의 위치로 사용됩니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="bf0db6442364bab33c6deebd1deb335fc0cd92f2" translate="yes" xml:space="preserve">
          <source>option is applied to the list. The filter is a pattern as used for pathname expansion; a &amp;lsquo;</source>
          <target state="translated">옵션이 목록에 적용됩니다. 필터는 경로 이름 확장에 사용되는 패턴입니다. ㅏ '</target>
        </trans-unit>
        <trans-unit id="f6a62a292f46cfd293219f56ca9ac0080a04a014" translate="yes" xml:space="preserve">
          <source>option is considered. The string is first split using the characters in the &lt;code&gt;IFS&lt;/code&gt; special variable as delimiters. Shell quoting is honored within the string, in order to provide a mechanism for the words to contain shell metacharacters or characters in the value of &lt;code&gt;IFS&lt;/code&gt;. Each word is then expanded using brace expansion, tilde expansion, parameter and variable expansion, command substitution, and arithmetic expansion, as described above (see &lt;a href=&quot;shell-expansions&quot;&gt;Shell Expansions&lt;/a&gt;). The results are split using the rules described above (see &lt;a href=&quot;word-splitting&quot;&gt;Word Splitting&lt;/a&gt;). The results of the expansion are prefix-matched against the word being completed, and the matching words become the possible completions.</source>
          <target state="translated">옵션이 고려됩니다. 문자열은 먼저 &lt;code&gt;IFS&lt;/code&gt; 특수 변수의 문자를 구분 기호로 사용하여 분할 됩니다. 셸 인용은 &lt;code&gt;IFS&lt;/code&gt; 값에 셸 메타 문자 또는 문자를 포함하는 단어에 대한 메커니즘을 제공하기 위해 문자열 내에서 적용 됩니다. 그런 다음 각 단어는 위에 설명 된대로 중괄호 확장, 물결표 확장, 매개 변수 및 변수 확장, 명령 대체, 산술 확장을 사용하여 확장됩니다 ( &lt;a href=&quot;shell-expansions&quot;&gt;쉘 확장&lt;/a&gt; 참조 ). 결과는 위에서 설명한 규칙을 사용하여 분할됩니다 ( &lt;a href=&quot;word-splitting&quot;&gt;단어 분할&lt;/a&gt; 참조 ). 확장 결과는 완성되는 단어와 접두사 일치되며 일치하는 단어는 가능한 완성이됩니다.</target>
        </trans-unit>
        <trans-unit id="84895ff8ded44c89f76ef107c3d43962d553c588" translate="yes" xml:space="preserve">
          <source>option is considered. The string is first split using the characters in the &lt;code&gt;IFS&lt;/code&gt; special variable as delimiters. Shell quoting is honored within the string, in order to provide a mechanism for the words to contain shell metacharacters or characters in the value of &lt;code&gt;IFS&lt;/code&gt;. Each word is then expanded using brace expansion, tilde expansion, parameter and variable expansion, command substitution, and arithmetic expansion, as described above (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;). The results are split using the rules described above (see &lt;a href=&quot;word-splitting#Word-Splitting&quot;&gt;Word Splitting&lt;/a&gt;). The results of the expansion are prefix-matched against the word being completed, and the matching words become the possible completions.</source>
          <target state="translated">옵션이 고려됩니다. 문자열은 먼저 &lt;code&gt;IFS&lt;/code&gt; 특수 변수 의 문자를 분리 문자로 사용하여 분할 됩니다. 쉘 인용은 &lt;code&gt;IFS&lt;/code&gt; 값에 쉘 ​​메타 문자 또는 문자를 포함하는 단어에 대한 메커니즘을 제공하기 위해 문자열 내에서 사용 됩니다. 그런 다음 위에 설명한대로 중괄호 확장, 물결 확장, 매개 변수 및 변수 확장, 명령 대체 및 산술 확장을 사용하여 각 단어를 확장합니다 ( &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;쉘 확장&lt;/a&gt; 참조 ). 결과는 위에서 설명한 규칙을 사용하여 분할됩니다 ( &lt;a href=&quot;word-splitting#Word-Splitting&quot;&gt;단어 분할&lt;/a&gt; 참조 ). 확장 결과는 완료되는 단어와 접두사로 일치하며 일치하는 단어는 가능한 완성이됩니다.</target>
        </trans-unit>
        <trans-unit id="3c688274908d9b4d1a2cb8740613dbbb81225cbc" translate="yes" xml:space="preserve">
          <source>option is enabled, &lt;code&gt;source&lt;/code&gt; inherits any trap on &lt;code&gt;DEBUG&lt;/code&gt;; if it is not, any &lt;code&gt;DEBUG&lt;/code&gt; trap string is saved and restored around the call to &lt;code&gt;source&lt;/code&gt;, and &lt;code&gt;source&lt;/code&gt; unsets the &lt;code&gt;DEBUG&lt;/code&gt; trap while it executes. If</source>
          <target state="translated">옵션이 활성화되면 &lt;code&gt;source&lt;/code&gt; 는 &lt;code&gt;DEBUG&lt;/code&gt; 의 트랩을 상속합니다 . 그렇지 않은 경우 &lt;code&gt;DEBUG&lt;/code&gt; 트랩 문자열은 &lt;code&gt;source&lt;/code&gt; 에 대한 호출 주위에 저장 및 복원 되며 &lt;code&gt;source&lt;/code&gt; 는 &lt;code&gt;DEBUG&lt;/code&gt; 트랩이 실행되는 동안 설정을 해제합니다 . 만약</target>
        </trans-unit>
        <trans-unit id="ca614ade4493bfee95033e802295ef9a3e915812" translate="yes" xml:space="preserve">
          <source>option is equivalent to</source>
          <target state="translated">옵션은</target>
        </trans-unit>
        <trans-unit id="97269007a6d636b526c7a8b441cbe179ebafb978" translate="yes" xml:space="preserve">
          <source>option is given, a list of names of all exported variables is displayed. The</source>
          <target state="translated">옵션이 제공되면 내 보낸 모든 변수의 이름 목록이 표시됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="c591e326f7bd65f40e258fa84b74e41d4806431c" translate="yes" xml:space="preserve">
          <source>option is given, each &lt;var&gt;name&lt;/var&gt; refers to a shell variable and that variable is removed. If the</source>
          <target state="translated">옵션이 주어지면 각 &lt;var&gt;name&lt;/var&gt; 은 쉘 변수를 나타내며 해당 변수는 제거됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="a4cefd79f99311b4b69f41594d53c499f449610e" translate="yes" xml:space="preserve">
          <source>option is given, interpretation of the following backslash-escaped characters is enabled. The</source>
          <target state="translated">옵션이 제공되면 다음 백 슬래시 이스케이프 문자의 해석이 활성화됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="dd1a4408d7c31254b8d7540aa24fa633b06ad6af" translate="yes" xml:space="preserve">
          <source>option is given, the &lt;var&gt;name&lt;/var&gt;s refer to shell functions, and the function definition is removed. If the</source>
          <target state="translated">옵션이 주어지면 &lt;var&gt;name&lt;/var&gt; 은 쉘 함수를 나타내며 함수 정의는 제거됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="e889aa9c8572539d60449ec9b77f0a4abeacdefc" translate="yes" xml:space="preserve">
          <source>option is given, the job is not removed from the table, but is marked so that &lt;code&gt;SIGHUP&lt;/code&gt; is not sent to the job if the shell receives a &lt;code&gt;SIGHUP&lt;/code&gt;. If &lt;var&gt;jobspec&lt;/var&gt; is not present, and neither the</source>
          <target state="translated">옵션이 제공되면 작업이 테이블에서 제거되지 않지만 쉘이 &lt;code&gt;SIGHUP&lt;/code&gt; 을 수신하는 경우 &lt;code&gt;SIGHUP&lt;/code&gt; 이 작업으로 전송되지 않도록 표시 됩니다. &lt;var&gt;jobspec&lt;/var&gt; 이없는 경우</target>
        </trans-unit>
        <trans-unit id="58a448783f589e5ef10491fcfddef0cce16a4db6" translate="yes" xml:space="preserve">
          <source>option is invoked in an environment equivalent to command substitution. It should print a list of completions, one per line, to the standard output. Backslash may be used to escape a newline, if necessary.</source>
          <target state="translated">옵션은 명령 대체와 동등한 환경에서 호출됩니다. 완성 된 목록을 한 줄에 하나씩 표준 출력에 인쇄해야합니다. 필요한 경우 백 슬래시를 사용하여 줄 바꿈을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf1cec6ab31ae7efef6fd8a676ffe2b0ca4a848" translate="yes" xml:space="preserve">
          <source>option is not also used.</source>
          <target state="translated">옵션도 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6e2c9eb8554e9eb51fe84ec2ce62db28eca83f10" translate="yes" xml:space="preserve">
          <source>option is not supplied, no startup files are read, shell functions are not inherited from the environment, the &lt;code&gt;SHELLOPTS&lt;/code&gt;, &lt;code&gt;BASHOPTS&lt;/code&gt;, &lt;code&gt;CDPATH&lt;/code&gt;, and &lt;code&gt;GLOBIGNORE&lt;/code&gt; variables, if they appear in the environment, are ignored, and the effective user id is set to the real user id. If the</source>
          <target state="translated">옵션이 제공되지 않고 시작 파일을 읽지 않고 쉘 함수가 환경에서 상속되지 않고 &lt;code&gt;SHELLOPTS&lt;/code&gt; , &lt;code&gt;BASHOPTS&lt;/code&gt; , &lt;code&gt;CDPATH&lt;/code&gt; 및 &lt;code&gt;GLOBIGNORE&lt;/code&gt; 변수가 환경에 표시되면 무시되며 유효 사용자 ID는 실제 사용자 ID 만약</target>
        </trans-unit>
        <trans-unit id="8f28f6cd37c90a84e47034c7a7658c690b31c881" translate="yes" xml:space="preserve">
          <source>option is not supplied, these actions are taken and the effective user id is set to the real user id. If the</source>
          <target state="translated">옵션이 제공되지 않으면 이러한 조치가 수행되고 유효 사용자 ID가 실제 사용자 ID로 설정됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="062fe771edc149b3d6cf338aa730e936ee0b17be" translate="yes" xml:space="preserve">
          <source>option is not used, &lt;var&gt;limit&lt;/var&gt; is the new value of the specified resource. The special &lt;var&gt;limit&lt;/var&gt; values &lt;code&gt;hard&lt;/code&gt;, &lt;code&gt;soft&lt;/code&gt;, and &lt;code&gt;unlimited&lt;/code&gt; stand for the current hard limit, the current soft limit, and no limit, respectively. A hard limit cannot be increased by a non-root user once it is set; a soft limit may be increased up to the value of the hard limit. Otherwise, the current value of the soft limit for the specified resource is printed, unless the</source>
          <target state="translated">옵션이 사용되지 않으면 &lt;var&gt;limit&lt;/var&gt; 은 지정된 자원의 새로운 값입니다. 특수 &lt;var&gt;limit&lt;/var&gt; 값 &lt;code&gt;hard&lt;/code&gt; , &lt;code&gt;soft&lt;/code&gt; 및 &lt;code&gt;unlimited&lt;/code&gt; 은 각각 현재 하드 제한, 현재 소프트 제한 및 제한 없음을 나타냅니다. 루트가 아닌 사용자가 설정 한 후에는 하드 한계를 늘릴 수 없습니다. 소프트 한계는 하드 한계의 값까지 증가 될 수있다. 그렇지 않으면 지정된 자원에 대한 현재 소프트 한계 값이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="1d2c1c98b4a0046933330665d668b60054ec0ffe" translate="yes" xml:space="preserve">
          <source>option is set (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;), then all parameter assignments are placed in the environment for a command, not just those that precede the command name.</source>
          <target state="translated">옵션이 설정되면 ( &lt;a href=&quot;the-set-builtin&quot;&gt;Set Builtin&lt;/a&gt; 참조 ) 명령 이름 앞에 오는 매개 변수뿐만 아니라 명령에 대한 환경에 모든 매개 변수 할당이 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="26018f84e891d6ad26deb4ddeecfe3795bca0cb1" translate="yes" xml:space="preserve">
          <source>option is set (see &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt;). The first character of the expanded value is replicated multiple times, as necessary, to indicate multiple levels of indirection. The default is &amp;lsquo;</source>
          <target state="translated">옵션이 설정되어 있습니다 ( &lt;a href=&quot;the-set-builtin&quot;&gt;The Set Builtin&lt;/a&gt; 참조 ). 확장 된 값의 첫 번째 문자는 여러 수준의 간접 참조를 나타 내기 위해 필요에 따라 여러 번 복제됩니다. 기본값은 '</target>
        </trans-unit>
        <trans-unit id="889c270521317aceefbe75e6b60f7f64a5c53940" translate="yes" xml:space="preserve">
          <source>option is set (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;), then all parameter assignments are placed in the environment for a command, not just those that precede the command name.</source>
          <target state="translated">옵션이 설정되면 ( &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;내장 설정&lt;/a&gt; 참조 ) 모든 매개 변수 지정은 명령 이름 앞에 오는 것만이 아니라 명령의 환경에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="46714f9b873def505470e0e37e779cc6be7f2cdc" translate="yes" xml:space="preserve">
          <source>option is set (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;). The first character of the expanded value is replicated multiple times, as necessary, to indicate multiple levels of indirection. The default is &amp;lsquo;</source>
          <target state="translated">옵션이 설정됩니다 ( &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;내장 설정&lt;/a&gt; 참조 ). 확장 된 값의 첫 문자는 필요에 따라 여러 수준의 간접 성을 나타 내기 위해 여러 번 복제됩니다. 기본값은 '</target>
        </trans-unit>
        <trans-unit id="974c1ecbb1538cc40a2ddae7ea357a9836cfde36" translate="yes" xml:space="preserve">
          <source>option is supplied (see &lt;a href=&quot;invoking-bash&quot;&gt;Invoking Bash&lt;/a&gt;), Bash reads and executes commands from the file, then exits. This mode of operation creates a non-interactive shell. The shell first searches for the file in the current directory, and looks in the directories in &lt;code&gt;$PATH&lt;/code&gt; if not found there.</source>
          <target state="translated">옵션이 제공 되면 (Bash &lt;a href=&quot;invoking-bash&quot;&gt;호출&lt;/a&gt; 참조 ) Bash는 파일에서 명령을 읽고 실행 한 다음 종료합니다. 이 작동 모드는 비대화 형 셸을 만듭니다. 쉘은 먼저 현재 디렉토리에서 파일을 검색하고 거기에 없으면 &lt;code&gt;$PATH&lt;/code&gt; 에서 디렉토리를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="2af03cee6a56b044caebc69aa7a25d8003b04cdb" translate="yes" xml:space="preserve">
          <source>option is supplied (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;), Bash reads and executes commands from the file, then exits. This mode of operation creates a non-interactive shell. The shell first searches for the file in the current directory, and looks in the directories in &lt;code&gt;$PATH&lt;/code&gt; if not found there.</source>
          <target state="translated">옵션이 제공되고 ( &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Bash 호출&lt;/a&gt; 참조 ) Bash는 파일에서 명령을 읽고 실행 한 다음 종료합니다. 이 작동 모드는 비 대화식 쉘을 만듭니다. 쉘은 먼저 현재 디렉토리에서 파일을 검색하고, 찾을 수 없으면 &lt;code&gt;$PATH&lt;/code&gt; 의 디렉토리를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c7879453bddec1ede215ba68cbd603342abcee07" translate="yes" xml:space="preserve">
          <source>option is supplied at invocation, the shell becomes restricted. A restricted shell is used to set up an environment more controlled than the standard shell. A restricted shell behaves identically to &lt;code&gt;bash&lt;/code&gt; with the exception that the following are disallowed or not performed:</source>
          <target state="translated">옵션은 호출시 제공되며 쉘은 제한됩니다. 제한된 쉘은 표준 쉘보다 더 제어 된 환경을 설정하는 데 사용됩니다. 제한된 쉘은 다음이 허용되지 않거나 수행되지 않는 것을 제외하고는 &lt;code&gt;bash&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="febd14dcd4eebe51b63010c793db7eecb3a807b5" translate="yes" xml:space="preserve">
          <source>option is supplied at invocation, the startup behavior is the same, but the effective user id is not reset.</source>
          <target state="translated">옵션은 호출시 제공되며 시작 동작은 동일하지만 유효 사용자 ID는 재설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f039512123d0d701a7e6d556aca71916873bad8" translate="yes" xml:space="preserve">
          <source>option is supplied at shell invocation. Line editing is also used when using the</source>
          <target state="translated">쉘 호출시 옵션이 제공됩니다. 라인 편집은</target>
        </trans-unit>
        <trans-unit id="f3a31e02652e73ee44967a5891241ffd27c55002" translate="yes" xml:space="preserve">
          <source>option is supplied at startup, the effective user id is not reset. Turning this option off causes the effective user and group ids to be set to the real user and group ids.</source>
          <target state="translated">옵션은 시작시 제공되며 유효 사용자 ID는 재설정되지 않습니다. 이 옵션을 끄면 유효 사용자 및 그룹 ID가 실제 사용자 및 그룹 ID로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d5d632586e0ea096bbe7eb4904badf4300f17d9f" translate="yes" xml:space="preserve">
          <source>option is supplied with</source>
          <target state="translated">옵션은 함께 제공됩니다</target>
        </trans-unit>
        <trans-unit id="428f3b4c7739c315f17a36e3eb72683915973fd3" translate="yes" xml:space="preserve">
          <source>option is supplied with a name that is not a shell function.</source>
          <target state="translated">옵션에는 쉘 기능이 아닌 이름이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="cfd0a0c02d5a2f277d38374c0ad02ba7e4b5e2c1" translate="yes" xml:space="preserve">
          <source>option is supplied without a &lt;var&gt;mode&lt;/var&gt; argument, the mask is printed in a symbolic format. If the</source>
          <target state="translated">옵션은 &lt;var&gt;mode&lt;/var&gt; 인수 없이 제공 되며 마스크는 기호 형식으로 인쇄됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="21ee3ee1c26c8604b7d6eb0d2d1592d40b5242c8" translate="yes" xml:space="preserve">
          <source>option is supplied, &lt;code&gt;jobs&lt;/code&gt; replaces any &lt;var&gt;jobspec&lt;/var&gt; found in &lt;var&gt;command&lt;/var&gt; or &lt;var&gt;arguments&lt;/var&gt; with the corresponding process group &lt;small&gt;ID&lt;/small&gt;, and executes &lt;var&gt;command&lt;/var&gt;, passing it &lt;var&gt;argument&lt;/var&gt;s, returning its exit status.</source>
          <target state="translated">옵션은 공급되는 &lt;code&gt;jobs&lt;/code&gt; 어떤 대체 &lt;var&gt;jobspec&lt;/var&gt; 에서 발견을 &lt;var&gt;command&lt;/var&gt; 또는 &lt;var&gt;arguments&lt;/var&gt; 해당 프로세스 그룹과 &lt;small&gt;ID&lt;/small&gt; 및 실행하는이 &lt;var&gt;command&lt;/var&gt; 이 전달 &lt;var&gt;argument&lt;/var&gt; 종료 상태를 반환들.</target>
        </trans-unit>
        <trans-unit id="1b3550811a79ad4e46198528fc1aba445955cdb5" translate="yes" xml:space="preserve">
          <source>option is supplied, &lt;code&gt;wait&lt;/code&gt; waits for a single job from the list of &lt;var&gt;pids&lt;/var&gt; or &lt;var&gt;jobspecs&lt;/var&gt; or, if no arguments are supplied, any job, to complete and returns its exit status. If none of the supplied arguments is a child of the shell, or if no arguments are supplied and the shell has no unwaited-for children, the exit status is 127. If the</source>
          <target state="translated">옵션이 제공되면 &lt;var&gt;pids&lt;/var&gt; 또는 &lt;var&gt;jobspecs&lt;/var&gt; 목록에서 단일 작업을 기다리 거나 인수가 제공되지 않은 경우 모든 작업이 완료 될 &lt;code&gt;wait&lt;/code&gt; 기다렸다가 종료 상태를 반환합니다. 제공된 인수가 쉘의 하위가 아니거나 인수가 제공되지 않고 쉘에 대기중인 하위가 없으면 종료 상태는 127입니다.</target>
        </trans-unit>
        <trans-unit id="044eca1addc8507dc0a0415f1d0486245d2c6b79" translate="yes" xml:space="preserve">
          <source>option is supplied, &lt;code&gt;wait&lt;/code&gt; waits for a single job to terminate and returns its exit status. Supplying the</source>
          <target state="translated">옵션이 제공되면 &lt;code&gt;wait&lt;/code&gt; 는 단일 작업이 종료 될 때까지 대기하고 종료 상태를 리턴합니다. 공급</target>
        </trans-unit>
        <trans-unit id="9639437eb34627949036d8616ef39707263615b2" translate="yes" xml:space="preserve">
          <source>option is supplied, a description of &lt;var&gt;command&lt;/var&gt; is printed. The</source>
          <target state="translated">옵션이 제공되면 &lt;var&gt;command&lt;/var&gt; 설명 이 인쇄됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="132c69cb3665534c4cbb1cf6044d2e88e1ffea16" translate="yes" xml:space="preserve">
          <source>option is supplied, a list of all readonly names is printed. The other options may be used to restrict the output to a subset of the set of readonly names. The</source>
          <target state="translated">옵션이 제공되면 모든 읽기 전용 이름 목록이 인쇄됩니다. 다른 옵션은 출력을 읽기 전용 이름 세트의 서브 세트로 제한하는 데 사용될 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="6080f0adda74ef961be0cc9d54b77015d1ccdedb" translate="yes" xml:space="preserve">
          <source>option is supplied, and &lt;var&gt;mode&lt;/var&gt; is omitted, the output is in a form that may be reused as input. The return status is zero if the mode is successfully changed or if no &lt;var&gt;mode&lt;/var&gt; argument is supplied, and non-zero otherwise.</source>
          <target state="translated">옵션이 제공되고 &lt;var&gt;mode&lt;/var&gt; 가 생략되면 출력은 입력으로 재사용 될 수있는 형식입니다. 모드가 성공적으로 변경되었거나 &lt;var&gt;mode&lt;/var&gt; 인수가 제공 되지 않으면 리턴 상태는 0 이고 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="01b86c7a440b217dc67fafe41558edb621add28c" translate="yes" xml:space="preserve">
          <source>option is supplied, and &lt;var&gt;name&lt;/var&gt; is a variable with the &lt;var&gt;nameref&lt;/var&gt; attribute, &lt;var&gt;name&lt;/var&gt; will be unset rather than the variable it references.</source>
          <target state="translated">옵션이 제공되고 &lt;var&gt;name&lt;/var&gt; 은 &lt;var&gt;nameref&lt;/var&gt; 속성 이있는 변수이며 참조하는 변수가 아닌 &lt;var&gt;name&lt;/var&gt; 이 설정 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="dc2f701cb6bd4a313691a2a07cec5d98a2800524" translate="yes" xml:space="preserve">
          <source>option is supplied, each &lt;var&gt;name&lt;/var&gt; refers to a shell function. The</source>
          <target state="translated">옵션이 제공되면 각 &lt;var&gt;name&lt;/var&gt; 은 쉘 기능을 나타냅니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="6f85d6952be501df9b8c252e4e91f35d64a67b1b" translate="yes" xml:space="preserve">
          <source>option is supplied, or if no options are supplied, existing completion specifications are printed in a way that allows them to be reused as input. The</source>
          <target state="translated">옵션이 제공되거나 옵션이 제공되지 않으면 기존 완성 사양이 입력으로 재사용 될 수있는 방식으로 인쇄됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="d9618db110a979559b9248c61dcb1a2dd9451989" translate="yes" xml:space="preserve">
          <source>option is supplied, or no &lt;var&gt;name&lt;/var&gt; arguments appear, a list of shell builtins is printed. With no other arguments, the list consists of all enabled shell builtins. The</source>
          <target state="translated">옵션이 제공되거나 &lt;var&gt;name&lt;/var&gt; 인수가 나타나지 않으면 쉘 내장 목록이 인쇄됩니다. 다른 인수가 없으면 목록은 사용 가능한 모든 쉘 내장으로 구성됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="2f78b7dafdeea19022a04e9e085eec4c4046c594" translate="yes" xml:space="preserve">
          <source>option is supplied, symbolic links in &lt;var&gt;directory&lt;/var&gt; are resolved after &lt;code&gt;cd&lt;/code&gt; processes an instance of &amp;lsquo;</source>
          <target state="translated">옵션은 기호 링크, 공급 &lt;var&gt;directory&lt;/var&gt; 후 해결 &lt;code&gt;cd&lt;/code&gt; '의 인스턴스를 처리</target>
        </trans-unit>
        <trans-unit id="eb84a00374eb3f8ed1702cbc0807965291b5bb17" translate="yes" xml:space="preserve">
          <source>option is supplied, the &lt;var&gt;name&lt;/var&gt;s refer to shell functions; otherwise the names refer to shell variables. The</source>
          <target state="translated">옵션이 제공되면 &lt;var&gt;name&lt;/var&gt; 은 쉘 기능을 나타냅니다. 그렇지 않으면 이름은 쉘 변수를 나타냅니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="c2409158ca18695eae21313a6f604c4a1536dfba" translate="yes" xml:space="preserve">
          <source>option is supplied, the current job is used. If no &lt;var&gt;jobspec&lt;/var&gt; is supplied, the</source>
          <target state="translated">옵션이 제공되면 현재 작업이 사용됩니다. &lt;var&gt;jobspec&lt;/var&gt; 이 제공 되지 않으면</target>
        </trans-unit>
        <trans-unit id="2be317b88dba944559219083cec6d765934eb43c" translate="yes" xml:space="preserve">
          <source>option is supplied, the full pathname to which each &lt;var&gt;name&lt;/var&gt; corresponds is printed. If multiple &lt;var&gt;name&lt;/var&gt; arguments are supplied with</source>
          <target state="translated">옵션이 제공되면 각 &lt;var&gt;name&lt;/var&gt; 해당하는 전체 경로 이름 이 인쇄됩니다. 여러 &lt;var&gt;name&lt;/var&gt; 인수가 제공되는 경우</target>
        </trans-unit>
        <trans-unit id="79e0ddd3ee4dc7e199a3bece072d2729402c5b3c" translate="yes" xml:space="preserve">
          <source>option is supplied, the pathname printed may contain symbolic links. The return status is zero unless an error is encountered while determining the name of the current directory or an invalid option is supplied.</source>
          <target state="translated">옵션이 제공되면 인쇄 된 경로 이름에 기호 링크가 포함될 수 있습니다. 현재 디렉토리의 이름을 판별하는 동안 오류가 발생하거나 유효하지 않은 옵션이 제공되지 않으면 리턴 상태는 0입니다.</target>
        </trans-unit>
        <trans-unit id="dfdd58382b5fb88b2bab25523a3680b902b9a193" translate="yes" xml:space="preserve">
          <source>option is supplied, the pathname printed will not contain symbolic links. If the</source>
          <target state="translated">옵션이 제공되면 인쇄 된 경로 이름에 기호 링크가 포함되지 않습니다. 만약</target>
        </trans-unit>
        <trans-unit id="7dc1dd8790c536bedac958d1afce05fc4df21b50" translate="yes" xml:space="preserve">
          <source>option is supplied, the process or job identifier of the job for which the exit status is returned is assigned to the variable &lt;var&gt;varname&lt;/var&gt; named by the option argument. The variable will be unset initially, before any assignment. This is useful only when the</source>
          <target state="translated">옵션이 제공되면 종료 상태가 반환되는 작업의 프로세스 또는 작업 식별자가 옵션 인수로 명명 된 변수 &lt;var&gt;varname&lt;/var&gt; 에 할당됩니다 . 변수는 할당 전에 처음에 설정 해제됩니다. 이것은</target>
        </trans-unit>
        <trans-unit id="9597801f9db71941b29d044e680733bdd6cc2ef6" translate="yes" xml:space="preserve">
          <source>option is supplied, the shell places a dash at the beginning of the zeroth argument passed to &lt;var&gt;command&lt;/var&gt;. This is what the &lt;code&gt;login&lt;/code&gt; program does. The</source>
          <target state="translated">옵션이 제공되면 쉘은 &lt;var&gt;command&lt;/var&gt; 에 전달 된 0 번째 인수의 시작 부분에 대시를 배치합니다 . 이것이 &lt;code&gt;login&lt;/code&gt; 프로그램이하는 일입니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="8ff7ef21de37d0214cc8781bd1e89ac0320ef403" translate="yes" xml:space="preserve">
          <source>option is supplied.</source>
          <target state="translated">옵션이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="89f7d98e64b762454e0d20c9190d1539f58c1f65" translate="yes" xml:space="preserve">
          <source>option is supplied. If no options are supplied, each &lt;var&gt;name&lt;/var&gt; refers to a variable; if there is no variable by that name, a function with that name, if any, is unset. Readonly variables and functions may not be unset. Some shell variables lose their special behavior if they are unset; such behavior is noted in the description of the individual variables. The return status is zero unless a &lt;var&gt;name&lt;/var&gt; is readonly.</source>
          <target state="translated">옵션이 제공됩니다. 옵션이 제공되지 않으면 각 &lt;var&gt;name&lt;/var&gt; 은 변수를 참조합니다. 해당 이름의 변수가 없으면 해당 이름을 가진 함수가 설정되지 않습니다. 읽기 전용 변수 및 함수는 설정 해제 할 수 없습니다. 일부 셸 변수는 설정되지 않은 경우 특별한 동작을 잃습니다. 이러한 동작은 개별 변수에 대한 설명에 명시되어 있습니다. &lt;var&gt;name&lt;/var&gt; 이 읽기 전용이 아니면 반환 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="aefcda03ac24ef986025ec52fbd8b62c396e4aa8" translate="yes" xml:space="preserve">
          <source>option is supplied. If no options are supplied, each &lt;var&gt;name&lt;/var&gt; refers to a variable; if there is no variable by that name, any function with that name is unset. Readonly variables and functions may not be unset. The return status is zero unless a &lt;var&gt;name&lt;/var&gt; is readonly.</source>
          <target state="translated">옵션이 제공됩니다. 옵션이 제공되지 않으면 각 &lt;var&gt;name&lt;/var&gt; 은 변수를 나타냅니다. 해당 이름의 변수가 없으면 해당 이름의 함수가 설정 해제됩니다. 읽기 전용 변수 및 함수는 설정 해제되지 않을 수 있습니다. &lt;var&gt;name&lt;/var&gt; 이 읽기 전용 이 아닌 한 반환 상태는 0 입니다.</target>
        </trans-unit>
        <trans-unit id="f4f3037c69b1bd52f0fe6896348b1e6b73ce0da0" translate="yes" xml:space="preserve">
          <source>option is supplied. Supplying the</source>
          <target state="translated">옵션이 제공됩니다. 공급</target>
        </trans-unit>
        <trans-unit id="b1a3cac84001c472f7a26da80c86051ca84cc528" translate="yes" xml:space="preserve">
          <source>option is supplied. The variable &lt;code&gt;MAPFILE&lt;/code&gt; is the default &lt;var&gt;array&lt;/var&gt;. Options, if supplied, have the following meanings:</source>
          <target state="translated">옵션이 제공됩니다. &lt;code&gt;MAPFILE&lt;/code&gt; 변수 는 기본 &lt;var&gt;array&lt;/var&gt; 입니다. 옵션 (제공된 경우)의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c78d7739d701e014492e89a3c3c9ba92e2cda69e" translate="yes" xml:space="preserve">
          <source>option is supplied. When more than one resource is specified, the limit name and unit, if appropriate, are printed before the value. When setting new limits, if neither</source>
          <target state="translated">옵션이 제공됩니다. 둘 이상의 자원이 지정되면 한계 이름과 단위 (해당하는 경우)가 값 앞에 인쇄됩니다. 새로운 제한을 설정할 때 둘 다</target>
        </trans-unit>
        <trans-unit id="430cb1f84271384fb3ddb97139478d89191be85f" translate="yes" xml:space="preserve">
          <source>option is supplied. When setting new limits, if neither</source>
          <target state="translated">옵션이 제공됩니다. 새 제한을 설정할 때</target>
        </trans-unit>
        <trans-unit id="55e6d8b234c7ba5e90096ebd7e24b7d15b0aecfc" translate="yes" xml:space="preserve">
          <source>option is used for filename or directory name completion, the shell variable &lt;code&gt;FIGNORE&lt;/code&gt; is used to filter the matches. See &lt;a href=&quot;bash-variables&quot;&gt;Bash Variables&lt;/a&gt;, for a description of &lt;code&gt;FIGNORE&lt;/code&gt;.</source>
          <target state="translated">옵션은 파일 이름 또는 디렉토리 이름 완성에 사용되며 쉘 변수 &lt;code&gt;FIGNORE&lt;/code&gt; 는 일치 항목을 필터링하는 데 사용됩니다. &lt;code&gt;FIGNORE&lt;/code&gt; 에 대한 설명은 &lt;a href=&quot;bash-variables&quot;&gt;Bash 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f87083975fbb824ff94ab7538e1ef94c13108a7e" translate="yes" xml:space="preserve">
          <source>option is used for filename or directory name completion, the shell variable &lt;code&gt;FIGNORE&lt;/code&gt; is used to filter the matches. See &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;, for a description of &lt;code&gt;FIGNORE&lt;/code&gt;.</source>
          <target state="translated">옵션은 파일 이름 또는 디렉토리 이름 완성에 사용되며 쉘 변수 &lt;code&gt;FIGNORE&lt;/code&gt; 는 일치를 필터링하는 데 사용됩니다. &lt;code&gt;FIGNORE&lt;/code&gt; 에 대한 설명은 &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de09bfde8e67be563da69cbc4a9a06697d7db83e" translate="yes" xml:space="preserve">
          <source>option is used, &lt;code&gt;type&lt;/code&gt; does not attempt to find shell functions, as with the &lt;code&gt;command&lt;/code&gt; builtin.</source>
          <target state="translated">옵션을 사용하면 &lt;code&gt;type&lt;/code&gt; 은 내장 &lt;code&gt;command&lt;/code&gt; 과 같이 쉘 함수를 찾으려고하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="030d0af8de82bdb28404094ed7a13de8d79dac05" translate="yes" xml:space="preserve">
          <source>option is used, &lt;code&gt;type&lt;/code&gt; either returns the name of the disk file that would be executed, or nothing if</source>
          <target state="translated">옵션이 사용되는 경우 &lt;code&gt;type&lt;/code&gt; 은 실행될 디스크 파일의 이름을 반환하거나</target>
        </trans-unit>
        <trans-unit id="59ffc9ea7983b7bf2183e82d2ce467e63f7f8c9c" translate="yes" xml:space="preserve">
          <source>option is used, &lt;code&gt;type&lt;/code&gt; prints a single word which is one of &amp;lsquo;</source>
          <target state="translated">옵션이 사용되면 &lt;code&gt;type&lt;/code&gt; 은 '</target>
        </trans-unit>
        <trans-unit id="62c721204a4ef824bdb64e5072666911fed440c0" translate="yes" xml:space="preserve">
          <source>option is used, &lt;code&gt;type&lt;/code&gt; returns all of the places that contain an executable named &lt;var&gt;file&lt;/var&gt;. This includes aliases and functions, if and only if the</source>
          <target state="translated">option을 사용하면 &lt;code&gt;type&lt;/code&gt; 은 &lt;var&gt;file&lt;/var&gt; 이라는 실행 파일 이 포함 된 모든 장소를 반환 합니다 . 여기에는 다음과 같은 경우에만 별칭과 기능이 포함됩니다</target>
        </trans-unit>
        <trans-unit id="b0dbb11fad10e1d9d381796578fbcc13789269be" translate="yes" xml:space="preserve">
          <source>option is used, those available with the</source>
          <target state="translated">옵션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3f0df740b5026cc6b6c2d3f553fe202937a9c2b8" translate="yes" xml:space="preserve">
          <source>option is used. If a variable name is followed by =&lt;var&gt;value&lt;/var&gt;, the value of the variable is set to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">옵션이 사용됩니다. 변수 이름 = 뒤에 있다면 &lt;var&gt;value&lt;/var&gt; , 변수의 값을 설정 &lt;var&gt;value&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2e54da22236a45d80dfb3118a0c84c9464a848f4" translate="yes" xml:space="preserve">
          <source>option lists the signal names. If any arguments are supplied when</source>
          <target state="translated">옵션은 신호 이름을 나열합니다. 다음과 같은 경우에 인수가 제공되는 경우</target>
        </trans-unit>
        <trans-unit id="f486e5982e4523d358bf8d27eef8b444eb807599" translate="yes" xml:space="preserve">
          <source>option may be used to force another file to be read, but neither &lt;code&gt;rshd&lt;/code&gt; nor &lt;code&gt;sshd&lt;/code&gt; generally invoke the shell with those options or allow them to be specified.</source>
          <target state="translated">option을 사용하여 다른 파일을 강제로 읽을 수 있지만 &lt;code&gt;rshd&lt;/code&gt; 나 &lt;code&gt;sshd&lt;/code&gt; 는 일반적으로 해당 옵션으로 셸을 호출 하거나 파일을 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6f2e8e2fec69ba6423e91a665cd299dc434293a7" translate="yes" xml:space="preserve">
          <source>option may be used to inhibit this behavior, and the</source>
          <target state="translated">옵션을 사용하여이 동작을 막을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11f01e4684bea796f07195bc1f3299e590cd8b36" translate="yes" xml:space="preserve">
          <source>option may be used to inhibit this behavior. When invoked as an interactive shell with the name &lt;code&gt;sh&lt;/code&gt;, Bash looks for the variable &lt;code&gt;ENV&lt;/code&gt;, expands its value if it is defined, and uses the expanded value as the name of a file to read and execute. Since a shell invoked as &lt;code&gt;sh&lt;/code&gt; does not attempt to read and execute commands from any other startup files, the</source>
          <target state="translated">옵션을 사용하여이 동작을 금지 할 수 있습니다. 이름이 &lt;code&gt;sh&lt;/code&gt; 인 대화식 쉘로 호출되면 Bash는 변수 &lt;code&gt;ENV&lt;/code&gt; 를 찾고 정의 된 경우 값을 펼친 다음 확장 된 값을 읽고 실행할 파일 이름으로 사용합니다. &lt;code&gt;sh&lt;/code&gt; 로 호출 된 쉘 은 다른 시작 파일에서 명령을 읽고 실행하려고 시도하지 않기 때문에</target>
        </trans-unit>
        <trans-unit id="8b387a066416f92e9863312145cc9576c9390dad" translate="yes" xml:space="preserve">
          <source>option may be used when the shell is started to inhibit this behavior.</source>
          <target state="translated">이 동작을 막기 위해 쉘을 시작할 때 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f44a9e5862fde43ee0248c71653667b8f4071802" translate="yes" xml:space="preserve">
          <source>option means each &lt;var&gt;name&lt;/var&gt; refers to an associative array variable. If both options are supplied,</source>
          <target state="translated">옵션은 각 &lt;var&gt;name&lt;/var&gt; 이 연관 배열 변수를 참조 함을 의미 합니다. 두 옵션이 모두 제공되면</target>
        </trans-unit>
        <trans-unit id="304d5c7bf9bce84231ded9fb5519a54255b6615a" translate="yes" xml:space="preserve">
          <source>option means each &lt;var&gt;name&lt;/var&gt; refers to an indexed array variable; the</source>
          <target state="translated">옵션은 각 &lt;var&gt;name&lt;/var&gt; 이 색인 배열 변수를 참조 함을 의미 합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="c11a5a3e21a1e356c971e2b1564be6dc144fcd0d" translate="yes" xml:space="preserve">
          <source>option means to list each builtin with an indication of whether or not it is enabled.</source>
          <target state="translated">옵션은 각 내장 기능이 활성화되어 있는지 여부를 나타내는 목록을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7cf2793d7f02d865c87eb6e5a5cafc40435c6e59" translate="yes" xml:space="preserve">
          <source>option means to load the new builtin command &lt;var&gt;name&lt;/var&gt; from shared object &lt;var&gt;filename&lt;/var&gt;, on systems that support dynamic loading. The</source>
          <target state="translated">옵션은 동적로드를 지원하는 시스템 에서 공유 객체 &lt;var&gt;filename&lt;/var&gt; 에서 새 내장 명령 &lt;var&gt;name&lt;/var&gt; 을로드하는 것을 의미합니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="cbebcbcd23f9fa2f939511e626755810eec6290e" translate="yes" xml:space="preserve">
          <source>option means to no longer mark each &lt;var&gt;name&lt;/var&gt; for export. If no &lt;var&gt;names&lt;/var&gt; are supplied, or if the</source>
          <target state="translated">옵션은 더 이상 각 &lt;var&gt;name&lt;/var&gt; 을 내보내기로 표시하지 않음을 의미합니다 . &lt;var&gt;names&lt;/var&gt; 이 제공 되지 않거나</target>
        </trans-unit>
        <trans-unit id="dfd526a9645f0ed85bf6ae6974caf9fbde2495bc" translate="yes" xml:space="preserve">
          <source>option means to not follow symbolic links: symbolic links are resolved while &lt;code&gt;cd&lt;/code&gt; is traversing &lt;var&gt;directory&lt;/var&gt; and before processing an instance of &amp;lsquo;</source>
          <target state="translated">옵션은 기호 링크를 따르지 않음을 의미합니다. &lt;code&gt;cd&lt;/code&gt; 가 &lt;var&gt;directory&lt;/var&gt; 순회 하는 동안 및 '</target>
        </trans-unit>
        <trans-unit id="ca6c79b66073c5c69f6afe81ef32619286243582" translate="yes" xml:space="preserve">
          <source>option means to remove or mark all jobs; the</source>
          <target state="translated">옵션은 모든 작업을 제거하거나 표시하는 것을 의미합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="ebad551bbd2346f90a5e42f4bfe940f5ff3d151b" translate="yes" xml:space="preserve">
          <source>option means to use a default value for &lt;code&gt;PATH&lt;/code&gt; that is guaranteed to find all of the standard utilities. The return status in this case is 127 if &lt;var&gt;command&lt;/var&gt; cannot be found or an error occurred, and the exit status of &lt;var&gt;command&lt;/var&gt; otherwise.</source>
          <target state="translated">옵션은 모든 표준 유틸리티를 찾도록 보장되는 &lt;code&gt;PATH&lt;/code&gt; 의 기본값을 사용함을 의미합니다 . 이 경우 &lt;var&gt;command&lt;/var&gt; 을 찾을 수 없거나 오류가 발생한 경우 리턴 상태는 127이고 , 그렇지 않으면 &lt;var&gt;command&lt;/var&gt; 의 종료 상태입니다 .</target>
        </trans-unit>
        <trans-unit id="5d518a89baab3345f94f58dd3f626ca4a8540e2d" translate="yes" xml:space="preserve">
          <source>option presents the extended attributes associated with a file as a directory.</source>
          <target state="translated">옵션은 파일과 연관된 확장 된 속성을 디렉토리로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="23031c77c6b6b9c3bacb92c77701629d0644c976" translate="yes" xml:space="preserve">
          <source>option produces a more verbose description. In this case, the return status is zero if &lt;var&gt;command&lt;/var&gt; is found, and non-zero if not.</source>
          <target state="translated">옵션은 더 자세한 설명을 생성합니다. 이 경우 &lt;var&gt;command&lt;/var&gt; 이 반환되면 반환 상태는 0입니다. 이 발견 이고 그렇지 않으면 0이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="81b429c7ec3f95a526ef3a73d224a3c1a6ffba5e" translate="yes" xml:space="preserve">
          <source>option removes a completion specification for each &lt;var&gt;name&lt;/var&gt;, or, if no &lt;var&gt;name&lt;/var&gt;s are supplied, all completion specifications. The</source>
          <target state="translated">옵션은 각 &lt;var&gt;name&lt;/var&gt; 또는 &lt;var&gt;name&lt;/var&gt; 이없는 경우 완료 사양을 제거합니다. 이 제공 모든 완료 스펙을 제거합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="3cfe51e8a35f0f9d1b3cb146ede2aa83d1745c4a" translate="yes" xml:space="preserve">
          <source>option restricts &lt;code&gt;enable&lt;/code&gt; to the &lt;small&gt;POSIX&lt;/small&gt; special builtins. If</source>
          <target state="translated">옵션 은 &lt;small&gt;POSIX로 &lt;/small&gt; &lt;code&gt;enable&lt;/code&gt; 를 제한 합니다&lt;small&gt;&lt;/small&gt; 특수 내장으로 . 만약</target>
        </trans-unit>
        <trans-unit id="08ad115b526261dec39ab5f75c81e28ff21087d2" translate="yes" xml:space="preserve">
          <source>option specifies &lt;var&gt;quantum&lt;/var&gt;.</source>
          <target state="translated">옵션은 &lt;var&gt;quantum&lt;/var&gt; 을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="7e98bcf674035021aaea1faeea96910394b1f627" translate="yes" xml:space="preserve">
          <source>option takes precedence over</source>
          <target state="translated">옵션이 우선합니다</target>
        </trans-unit>
        <trans-unit id="5eaa3a0287025678fb95eb615bc11d9ba7d28266" translate="yes" xml:space="preserve">
          <source>option tells Readline that the possible completions should be treated as filenames, and quoted appropriately. That option will also cause Readline to append a slash to filenames it can determine are directories (which is why we might want to extend &lt;code&gt;_comp_cd&lt;/code&gt; to append a slash if we&amp;rsquo;re using directories found via &lt;var&gt;CDPATH&lt;/var&gt;: Readline can&amp;rsquo;t tell those completions are directories). The</source>
          <target state="translated">옵션은 Readline에 가능한 완성을 파일 이름으로 취급하고 적절하게 인용해야 함을 알려줍니다. 이 옵션은 또한 Readline이 디렉토리 이름을 결정할 수있는 파일 이름에 슬래시를 추가하게합니다 (따라서 &lt;var&gt;CDPATH&lt;/var&gt; 를 통해 찾은 디렉토리를 사용하는 경우 &lt;code&gt;_comp_cd&lt;/code&gt; 를 확장 하여 슬래시를 추가 할 수 있습니다). ). 그만큼</target>
        </trans-unit>
        <trans-unit id="8ea2e2557eda8cd7935a789b8a2f9d3ab11541b8" translate="yes" xml:space="preserve">
          <source>option tells Readline to not append a space character to the directory name, in case we want to append to it. The</source>
          <target state="translated">옵션은 Readline에게 디렉토리 이름에 공백 문자를 추가하지 않도록 지시합니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="773a0403aab20aa7149b49db08d30cf94bdb09cb" translate="yes" xml:space="preserve">
          <source>option to &lt;code&gt;complete&lt;/code&gt; is used as the default. If there is no default compspec, Bash attempts alias expansion on the command word as a final resort, and attempts to find a compspec for the command word from any successful expansion</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 옵션 이 기본값으로 사용됩니다. 기본 compspec이없는 경우 Bash는 최종 단어로 명령 단어에서 별칭 확장을 시도하고 성공적인 확장에서 명령 단어에 대한 compspec을 찾으려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="65a5da84333d7b9f0beb910c8bff1007d0de9c31" translate="yes" xml:space="preserve">
          <source>option to &lt;code&gt;complete&lt;/code&gt; is used. If the command word is a full pathname, a compspec for the full pathname is searched for first. If no compspec is found for the full pathname, an attempt is made to find a compspec for the portion following the final slash. If those searches do not result in a compspec, any compspec defined with the</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 옵션 이 사용됩니다. 명령 단어가 전체 경로 이름 인 경우 전체 경로 이름에 대한 compspec이 먼저 검색됩니다. 전체 경로 이름에 대한 compspec이 없으면 최종 슬래시 다음 부분에 대한 compspec을 찾으려고 시도합니다. 이러한 검색으로 인해 compspec이 발생하지 않으면</target>
        </trans-unit>
        <trans-unit id="f82639220bbdc8d207b115eedd7a5fecdf05c097" translate="yes" xml:space="preserve">
          <source>option to &lt;code&gt;complete&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; 옵션 :</target>
        </trans-unit>
        <trans-unit id="b7a67964c8c69bee6dbaec53da3c22d3294a6844" translate="yes" xml:space="preserve">
          <source>option to &lt;code&gt;declare&lt;/code&gt; or &lt;code&gt;typeset&lt;/code&gt; will list the function names only (and optionally the source file and line number, if the &lt;code&gt;extdebug&lt;/code&gt; shell option is enabled). Functions may be exported so that subshells automatically have them defined with the</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; 또는 &lt;code&gt;typeset&lt;/code&gt; 옵션 은 함수 이름 만 표시하고 &lt;code&gt;extdebug&lt;/code&gt; 인 경우 선택적으로 소스 파일 및 줄 번호를 표시합니다 . 쉘 옵션이 활성화 된 ). 서브 쉘이 자동으로 정의되도록 기능을 익스포트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24cb64ecb5cef0b8c35eb45a85c8cbdc23dcf6bb" translate="yes" xml:space="preserve">
          <source>option to act on shell functions, a</source>
          <target state="translated">쉘 기능에 작용하는 옵션</target>
        </trans-unit>
        <trans-unit id="92e0084a93e4e240d71973ac622d59149ffe1797" translate="yes" xml:space="preserve">
          <source>option to assign a list of words read from the standard input to an array, and can read values from the standard input into individual array elements. The &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;declare&lt;/code&gt; builtins display array values in a way that allows them to be reused as input.</source>
          <target state="translated">옵션은 표준 입력에서 읽은 단어 목록을 배열에 할당하고 표준 입력의 값을 개별 배열 요소로 읽을 수 있습니다. &lt;code&gt;set&lt;/code&gt; 및 &lt;code&gt;declare&lt;/code&gt; 내장 명령들을 입력으로 재사용 할 수 있도록하는 방식으로 배열 값을 표시.</target>
        </trans-unit>
        <trans-unit id="d2a129a3cc53c258814d68066214840c61a0be58" translate="yes" xml:space="preserve">
          <source>option to cause the output to be displayed in the form of a &lt;code&gt;umask&lt;/code&gt; command that may be reused as input (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">입력으로 재사용 할 수 있는 &lt;code&gt;umask&lt;/code&gt; 명령 의 형태로 출력을 표시하도록하는 옵션 ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="1723219ffc3b7a22a86ebf235d5f41011fdaf26c" translate="yes" xml:space="preserve">
          <source>option to cause the output to be displayed in the form of a &lt;code&gt;umask&lt;/code&gt; command that may be reused as input (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">옵션은 출력이 입력으로 재사용 될 수 있는 &lt;code&gt;umask&lt;/code&gt; 명령 의 형태로 표시 되도록합니다 ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a2f8924a42f0cb31e68a1f3550c7ac2230cfac27" translate="yes" xml:space="preserve">
          <source>option to display variables with various attributes set in a format that can be used as shell input, a</source>
          <target state="translated">쉘 입력으로 사용할 수있는 형식으로 다양한 속성이 설정된 변수를 표시하는 옵션</target>
        </trans-unit>
        <trans-unit id="d2b5f491fd003d71d392c69a71010ce4579015e4" translate="yes" xml:space="preserve">
          <source>option to remove various variable attributes, and &amp;lsquo;</source>
          <target state="translated">다양한 변수 속성을 제거하는 옵션 및 '</target>
        </trans-unit>
        <trans-unit id="9edecefa04a184168a1fd4a8c3bdca8371d4a687" translate="yes" xml:space="preserve">
          <source>option to specify an associative array. If both options are supplied,</source>
          <target state="translated">연관 배열을 지정하는 옵션입니다. 두 옵션이 모두 제공되면</target>
        </trans-unit>
        <trans-unit id="c5ee2cbd08c5ca88b36ff2955fcacbfa8bf4ffae" translate="yes" xml:space="preserve">
          <source>option to specify an indexed array and a</source>
          <target state="translated">인덱스 배열과 a를 지정하는 옵션</target>
        </trans-unit>
        <trans-unit id="a63a4dd0e3d8c3820932c20630a7116ac655abc7" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;command&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; 내장 옵션 .</target>
        </trans-unit>
        <trans-unit id="4767f82aed74dba178d247c855b828d8d8886c3c" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; (&lt;code&gt;typeset&lt;/code&gt;) builtin command (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;). The</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; ( &lt;code&gt;typeset&lt;/code&gt; ) 내장 명령 에 대한 옵션 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ). 그만큼</target>
        </trans-unit>
        <trans-unit id="62a8ff9f299a2c9ac4591915e5e58d42b4622f21" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; (&lt;code&gt;typeset&lt;/code&gt;) builtin command (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;). The</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; ( &lt;code&gt;typeset&lt;/code&gt; ) 내장 명령 에 대한 옵션 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 ). 그만큼</target>
        </trans-unit>
        <trans-unit id="8899031c949d87e7704e3df35bba22b2b79b29fe" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;) displays the source file name and line number corresponding to each function name supplied as an argument.</source>
          <target state="translated">내장 &lt;code&gt;declare&lt;/code&gt; 옵션 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 )은 인수로 제공된 각 함수 이름에 해당하는 소스 파일 이름과 행 번호를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b6e083ee3bac558455e05e71500f376b5d4fb589" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;) displays the source file name and line number corresponding to each function name supplied as an argument.</source>
          <target state="translated">내장 &lt;code&gt;declare&lt;/code&gt; ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조) 옵션 은 인수로 제공된 각 함수 이름에 해당하는 소스 파일 이름과 행 번호를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f68e4f605f2242ee2f653002a3433431cf7e5dbd" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; builtin.</source>
          <target state="translated">내장 &lt;code&gt;declare&lt;/code&gt; 옵션 .</target>
        </trans-unit>
        <trans-unit id="a5e14dbeca3fc6e286ef3bc737f358065f9964cb" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; or &lt;code&gt;local&lt;/code&gt; builtin commands (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;) to create a &lt;var&gt;nameref&lt;/var&gt;, or a reference to another variable. This allows variables to be manipulated indirectly. Whenever the nameref variable is referenced, assigned to, unset, or has its attributes modified (other than using or changing the nameref attribute itself), the operation is actually performed on the variable specified by the nameref variable&amp;rsquo;s value. A nameref is commonly used within shell functions to refer to a variable whose name is passed as an argument to the function. For instance, if a variable name is passed to a shell function as its first argument, running</source>
          <target state="translated">받는 옵션 &lt;code&gt;declare&lt;/code&gt; 또는 &lt;code&gt;local&lt;/code&gt; 내장 명령 (참조 &lt;a href=&quot;bash-builtins&quot;&gt;갈라 내장 명령을&lt;/a&gt; 크리에이트하는) &lt;var&gt;nameref&lt;/var&gt; 또는 다른 변수에 대한 참조. 이를 통해 변수를 간접적으로 조작 할 수 있습니다. nameref 변수가 참조, 할당, 설정 해제되거나 속성이 수정 될 때마다 (nameref 속성 자체를 사용하거나 변경하는 경우 제외) 실제로는 nameref 변수 값에 지정된 변수에 대해 작업이 수행됩니다. nameref는 일반적으로 쉘 함수 내에서 이름이 함수에 인수로 전달되는 변수를 참조하는 데 사용됩니다. 예를 들어 변수 이름이 첫 번째 인수로 셸 함수에 전달되면 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="1d07a244fccc5b3e01fe96612b5b4efe1117ac35" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;declare&lt;/code&gt; or &lt;code&gt;local&lt;/code&gt; builtin commands (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;) to create a &lt;var&gt;nameref&lt;/var&gt;, or a reference to another variable. This allows variables to be manipulated indirectly. Whenever the nameref variable is referenced, assigned to, unset, or has its attributes modified (other than using or changing the nameref attribute itself), the operation is actually performed on the variable specified by the nameref variable&amp;rsquo;s value. A nameref is commonly used within shell functions to refer to a variable whose name is passed as an argument to the function. For instance, if a variable name is passed to a shell function as its first argument, running</source>
          <target state="translated">&lt;code&gt;declare&lt;/code&gt; 또는 &lt;code&gt;local&lt;/code&gt; 내장 명령 에 대한 옵션 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 )으로 &lt;var&gt;nameref&lt;/var&gt; 를 작성하십시오 . 또는 다른 변수에 대한 참조. 이를 통해 변수를 간접적으로 조작 할 수 있습니다. nameref 변수가 참조, 지정, 설정 해제 또는 속성이 수정 될 때마다 (nameref 속성 자체를 사용하거나 변경하는 경우 제외) 실제로 nameref 변수의 값으로 지정된 변수에 대해 작업이 수행됩니다. nameref는 일반적으로 쉘 함수 내에서 이름이 함수의 인수로 전달되는 변수를 참조하기 위해 사용됩니다. 예를 들어, 변수 이름이 첫 번째 인수로 쉘 함수에 전달되면</target>
        </trans-unit>
        <trans-unit id="2e885a931aff55b10681dd73b6efc80c3efdd0d5" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;export&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">옵션을 &lt;code&gt;export&lt;/code&gt; 내장 ( &lt;a href=&quot;bourne-shell-builtins&quot;&gt;Bourne Shell 내장&lt;/a&gt; 참조 )에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7e6746d1240464e6cdba382b9bbc5bb4b405f28a" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;export&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; 내장 옵션 ( &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="af0b84995a4467f64baf02e5efcdef32e1d0b7d1" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;fc&lt;/code&gt; builtin command.</source>
          <target state="translated">&lt;code&gt;fc&lt;/code&gt; 내장 명령 에 대한 옵션 .</target>
        </trans-unit>
        <trans-unit id="1b2cc79323104bffd4c6eb35b74c7bef98101963" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;hash&lt;/code&gt; builtin command.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; 내장 명령 에 대한 옵션 .</target>
        </trans-unit>
        <trans-unit id="1c894c6244c98e22de14ad7d739a545a60fc6e4d" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;history&lt;/code&gt; builtin command may be used to see what a history expansion will do before using it. The</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; builtin 명령 에 대한 옵션을 사용하여 사용하기 전에 사용 내역 확장을 수행 할 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="61b7bb270513ecad03db32d74f166f7c9f976e48" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;history&lt;/code&gt; builtin may be used to add commands to the end of the history list without actually executing them, so that they are available for subsequent recall. This is most useful in conjunction with Readline.</source>
          <target state="translated">&lt;code&gt;history&lt;/code&gt; 내장 옵션은 실제로 실행하지 않고 히스토리 목록의 끝에 명령을 추가하여 후속 리콜에 사용할 수 있도록하는 데 사용될 수 있습니다. 이것은 Readline과 함께 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6d8780bea74626868d10722aee49be32ec99cec7" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;read&lt;/code&gt; builtin command (see &lt;a href=&quot;bash-builtins&quot;&gt;Bash Builtins&lt;/a&gt;). By default, the line editing commands are similar to those of Emacs. A vi-style line editing interface is also available. Line editing can be enabled at any time using the</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 내장 명령 에 대한 옵션 ( &lt;a href=&quot;bash-builtins&quot;&gt;Bash 내장&lt;/a&gt; 참조 ). 기본적으로 라인 편집 명령은 Emacs의 명령과 유사합니다. vi 스타일 라인 편집 인터페이스도 사용할 수 있습니다. 줄 편집은 다음을 사용하여 언제든지 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d09d2c4162658ad8f2cfecd568580b536a93d43" translate="yes" xml:space="preserve">
          <source>option to the &lt;code&gt;read&lt;/code&gt; builtin command (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;). By default, the line editing commands are similar to those of Emacs. A vi-style line editing interface is also available. Line editing can be enabled at any time using the</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; builtin 명령 에 대한 옵션입니다 ( &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt; 참조 ). 기본적으로 라인 편집 명령은 Emacs의 명령과 유사합니다. vi 스타일 라인 편집 인터페이스도 제공됩니다. 를 사용하여 언제든지 라인 편집을 활성화 할 수 있습니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
