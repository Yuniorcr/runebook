<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="groovy">
    <body>
      <group id="groovy">
        <trans-unit id="8e7d7b16a3156cd5e51ee35ddcf77ad66c5a78d1" translate="yes" xml:space="preserve">
          <source>Returns an enumeration of the values in this table. Use the Enumeration methods on the returned object to fetch the elements sequentially.</source>
          <target state="translated">이 테이블에있는 값의 열거를 반환합니다. 반환 된 개체에서 Enumeration 메서드를 사용하여 요소를 순차적으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="20504e56230306b3d761ac8c3dcf7c5d02e1a326" translate="yes" xml:space="preserve">
          <source>Returns an equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt; 와 동등한 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ee094b076e32cf201096a9056fcd764e2c19b630" translate="yes" xml:space="preserve">
          <source>Returns an equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;. The time portion of the returned calendar is cleared and the time zone is the current system default.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt; 와 동등한 인스턴스를 반환합니다 . 반환 된 달력의 시간 부분이 지워지고 표준 시간대가 현재 시스템 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="6f151bf2ca8ecc6e716a046852a31c28b1db6fe6" translate="yes" xml:space="preserve">
          <source>Returns an equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;.</source>
          <target state="translated">의 해당 인스턴스를 반환 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;날짜&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c938dd9faa9920082782398bb0e57dfc66479f40" translate="yes" xml:space="preserve">
          <source>Returns an equivalent instance of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;. The time portion of the returned date is cleared.</source>
          <target state="translated">의 해당 인스턴스를 반환 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Date.html&quot;&gt;날짜&lt;/a&gt; . 반환 된 날짜의 시간 부분이 지워집니다.</target>
        </trans-unit>
        <trans-unit id="c46b343c586a84a0df5bf12bf7282c4e829b053f" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator but with all duplicated items removed by using a Closure to determine duplicate (equal) items.</source>
          <target state="translated">이 반복기와 동일하지만 복제 (동일) 항목을 결정하기 위해 Closure를 사용하여 모든 중복 항목이 제거 된 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02d1eda54580d0ba6f9bc9cbbd63f558bcaa1ddc" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator but with all duplicated items removed by using a Closure to determine duplicate (equal) items. The original iterator will be fully processed after the call.</source>
          <target state="translated">이 반복기와 동일하지만 복제 (동일) 항목을 결정하기 위해 Closure를 사용하여 모든 중복 항목이 제거 된 반복기를 반환합니다. 원래 반복자는 호출 후 완전히 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9721116a4d242797b868a9a634330a5c6e66a998" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator but with all duplicated items removed where duplicate (equal) items are deduced by calling the supplied Closure condition.</source>
          <target state="translated">제공된 Closure 조건을 호출하여 중복 (동일) 항목이 추론되는 모든 중복 항목이 제거 된이 반복기와 동등한 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a954c39b0438571e36a47f67c87659d315638087" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator with all duplicated items removed by using Groovy's default number-aware comparator.</source>
          <target state="translated">Groovy의 기본 숫자 인식 비교기를 사용하여 모든 중복 항목이 제거 된이 반복기에 해당하는 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cdbd65b6fa9c83f2b5bc8b8aa167efb26ccb0342" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator with all duplicated items removed by using Groovy's default number-aware comparator. The original iterator will become exhausted of elements after determining the unique values. A new iterator for the unique values will be returned.</source>
          <target state="translated">Groovy의 기본 숫자 인식 비교기를 사용하여 모든 중복 항목이 제거 된이 반복기에 해당하는 반복기를 반환합니다. 원래 반복자는 고유 값을 결정한 후 요소가 고갈됩니다. 고유 값에 대한 새 반복기가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d5e8307b51202579390ab3e10b1525b69b3cd23b" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator with all duplicated items removed by using the natural ordering of the items.</source>
          <target state="translated">항목의 자연스러운 순서를 사용하여 모든 중복 항목이 제거 된이 반복기에 해당하는 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e596126fc1e499ccb841d35bb1555b1668192b43" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator with all duplicated items removed by using the supplied comparator.</source>
          <target state="translated">제공된 비교기를 사용하여 모든 중복 항목이 제거 된이 반복기에 해당하는 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c07c3c1673ce3810894ec59e9ec59e600982646c" translate="yes" xml:space="preserve">
          <source>Returns an iterator equivalent to this iterator with all duplicated items removed by using the supplied comparator. The original iterator will be exhausted upon returning.</source>
          <target state="translated">제공된 비교기를 사용하여 모든 중복 항목이 제거 된이 반복기에 해당하는 반복기를 반환합니다. 원래 반복자는 반환시 모두 소모됩니다.</target>
        </trans-unit>
        <trans-unit id="e2936cb5d7ddd200824fe809226c1750f9a745f1" translate="yes" xml:space="preserve">
          <source>Returns an iterator for all runners that are registered.</source>
          <target state="translated">등록 된 모든 러너에 대한 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="373d9e4f12de1def47c3bc87cf7afd4bb0134da0" translate="yes" xml:space="preserve">
          <source>Returns an iterator for all runners that are registered. The returned iterator is a snapshot of the registry at the time the iterator is created. This iterator does not support removal.</source>
          <target state="translated">등록 된 모든 러너에 대한 반복자를 반환합니다. 반환 된 이터레이터는 이터레이터가 생성 된 시점의 레지스트리 스냅 샷입니다. 이 반복기는 제거를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="716d95f50f01b1cc5bb2e456deae73caef354c03" translate="yes" xml:space="preserve">
          <source>Returns an iterator of up to the first &lt;code&gt;num&lt;/code&gt; elements from this iterator.</source>
          <target state="translated">이 반복기에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소 까지의 반복기를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="d781238423155448862fab166462f3e37f9aba4d" translate="yes" xml:space="preserve">
          <source>Returns an iterator of up to the first &lt;code&gt;num&lt;/code&gt; elements from this iterator. The original iterator is stepped along by &lt;code&gt;num&lt;/code&gt; elements.</source>
          <target state="translated">이 반복기에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소 까지의 반복기를 리턴 합니다. 원래 이터레이터는 &lt;code&gt;num&lt;/code&gt; 요소를 따라 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="26681e97f342d6aab3eb463c644da5bee03b5bbb" translate="yes" xml:space="preserve">
          <source>Returns an iterator on the unit's SourceUnits.</source>
          <target state="translated">유닛의 SourceUnits에 대한 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="99b059f41dab85d18c9bdccd2e69b82675f5877e" translate="yes" xml:space="preserve">
          <source>Returns an iterator over all non-null values in this queue.</source>
          <target state="translated">이 큐에서 널이 아닌 모든 값에 대한 반복자를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="baa852f9e5962d1d6517b363d199a80a02c202eb" translate="yes" xml:space="preserve">
          <source>Returns an iterator over all non-null values in this queue. The values should be returned in the order they were added.</source>
          <target state="translated">이 큐에서 널이 아닌 모든 값에 대한 반복자를 리턴합니다. 값은 추가 된 순서대로 반환되어야합니다.</target>
        </trans-unit>
        <trans-unit id="20ab921a86bbc74f14f7499628489d57206d2750" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the child nodes of this GPathResult.</source>
          <target state="translated">이 GPathResult의 자식 노드에 대한 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eb609f70551ecfbd52ae444dbbb5df6abbe81623" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the child nodes of this Node.</source>
          <target state="translated">이 노드의 자식 노드에 대한 반복자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3a113fd9bac5b4291d818e2e38d46416f44e0f02" translate="yes" xml:space="preserve">
          <source>Returns an iterator to iterate over all constant meta classes.</source>
          <target state="translated">모든 상수 메타 클래스를 반복하는 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2f784bf8b240d17b3ede247300e9b1a1341240d6" translate="yes" xml:space="preserve">
          <source>Returns an iterator to iterate over all constant meta classes. This iterator can be seen as making a snapshot of the current state of the registry. The snapshot will include all meta classes that has been used unless they are already collected. Collected meta classes will be skipped automatically, so you can expect that each element of the iteration is not null. Calling this method is thread safe, the usage of the iterator is not.</source>
          <target state="translated">모든 상수 메타 클래스를 반복하는 반복기를 반환합니다. 이 반복기는 레지스트리의 현재 상태에 대한 스냅 샷을 만드는 것으로 볼 수 있습니다. 스냅 샷에는 이미 수집되지 않은 경우 사용 된 모든 메타 클래스가 포함됩니다. 수집 된 메타 클래스는 자동으로 건너 뛰므로 반복의 각 요소가 null이 아닌 것으로 예상 할 수 있습니다. 이 메서드를 호출하는 것은 스레드로부터 안전하며 반복자의 사용은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e582e3f299965175bc9d2410e012cd12e4223003" translate="yes" xml:space="preserve">
          <source>Returns an object satisfying Groovy truth if the implementing MetaClass responds to a method with the given name and arguments types.</source>
          <target state="translated">구현하는 MetaClass가 주어진 이름과 인수 유형을 가진 메소드에 응답하면 Groovy 진리를 만족하는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c25cdb6ae2a4677e43aeae1bc4e69c3a39c26dba" translate="yes" xml:space="preserve">
          <source>Returns an object satisfying Groovy truth if the implementing MetaClass responds to a method with the given name regardless of arguments. In other words this method will return for foo() and foo(String).</source>
          <target state="translated">구현하는 MetaClass가 인수에 관계없이 주어진 이름의 메서드에 응답하면 Groovy 진리를 만족하는 객체를 반환합니다. 즉,이 메서드는 foo () 및 foo (String)에 대해 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79ff7d7cd089bee4334b1b361df526dd581eedca" translate="yes" xml:space="preserve">
          <source>Returns an object satisfying Groovy truth if the implementing MetaClass responds to a method with the given name regardless of the arguments.</source>
          <target state="translated">구현 MetaClass가 인수에 관계없이 주어진 이름을 가진 메소드에 응답하면 Groovy 진리를 만족하는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="14b9b0b8b727cbe53ca37d4776f6a8f79fd751ac" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; view of the mappings contained in this map.</source>
          <target state="translated">이지도에 포함 된 매핑 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;지도&lt;/a&gt; 보기를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1cb6d38080465225aea4e1ed1ffed4a1cc61dcf5" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; view of the mappings contained in this map. The map's collections return the mappings whose order of iteration is the ascending order in which its entries are considered eligible for retention, from the least-likely to be retained to the most-likely.</source>
          <target state="translated">이지도에 포함 된 매핑 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;지도&lt;/a&gt; 보기를 반환합니다 . 맵의 컬렉션은 항목이 보존 될 가능성이 가장 낮은 것부터 가장 가능성이 높은 것까지 항목이 보존 대상으로 간주되는 오름차순 인 반복 순서 인 매핑을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="96905b2c17b5bfe577e2cca02925b3a73fd377ce" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;Map&lt;/a&gt; view of the mappings contained in this map. The map's collections return the mappings whose order of iteration is the descending order in which its entries are considered eligible for retention, from the most-likely to be retained to the least-likely.</source>
          <target state="translated">이지도에 포함 된 매핑 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Map.html&quot;&gt;지도&lt;/a&gt; 보기를 반환합니다 . 맵의 컬렉션은 반복 순서가 항목이 보존 대상으로 간주되는 내림차순으로 유지 될 가능성이 가장 높은 것부터 가능성이 가장 낮은 것까지 매핑을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ff9110410ad6d82bda4d1ee4ffd34736c084b10" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;Set&lt;/a&gt; view of the keys contained in this map.</source>
          <target state="translated">이 맵에 포함 된 키 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;세트&lt;/a&gt; 보기를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="613298408f390deb91d31e44ca96051f4d126dea" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;Set&lt;/a&gt; view of the keys contained in this map. The set's iterator returns the keys whose order of iteration is the ascending order in which its entries are considered eligible for retention, from the least-likely to be retained to the most-likely.</source>
          <target state="translated">이 맵에 포함 된 키 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;세트&lt;/a&gt; 보기를 리턴합니다 . 세트의 반복자는 반복 순서가 항목이 보존에 적합한 것으로 간주되는 오름차순 인 키를 최소 유지 가능성에서 가장 가능성이 높은 순서로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="288bcdc3cb0488a3a3c19eb5b7a587f9d8d851ca" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable snapshot &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;Set&lt;/a&gt; view of the keys contained in this map. The set's iterator returns the keys whose order of iteration is the descending order in which its entries are considered eligible for retention, from the most-likely to be retained to the least-likely.</source>
          <target state="translated">이 맵에 포함 된 키 의 수정 불가능한 스냅 샷 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Set.html&quot;&gt;세트&lt;/a&gt; 보기를 리턴합니다 . 세트의 반복기는 반복 순서가 항목이 보존 될 수있는 것으로 간주되는 내림차순 인 키를 가장 많이 보유 할 가능성이 높은 것부터 가장 낮은 것까지 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c6605abbdd91bace51c700bcaa803ab22521c615" translate="yes" xml:space="preserve">
          <source>Returns an unmodifiable view of the current node metadata.</source>
          <target state="translated">현재 노드 메타 데이터의 수정할 수없는보기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46c774dbe502f7d29780f4ec6b702d0b1650f7c2" translate="yes" xml:space="preserve">
          <source>Returns array of type checking annotations.</source>
          <target state="translated">유형 검사 주석의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d709ef5f2623c2d941b20db697e1f80e7def63b2" translate="yes" xml:space="preserve">
          <source>Returns array of type checking annotations. Subclasses may override this method in order to provide additional types which must be looked up when checking if a method or a class node should be skipped.</source>
          <target state="translated">유형 검사 주석의 배열을 반환합니다. 서브 클래스는 메소드 또는 클래스 노드를 건너 뛰어야하는지 확인할 때 조회해야하는 추가 유형을 제공하기 위해이 메소드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24b177bcd32cc498215639ef7456fd614bbaf936" translate="yes" xml:space="preserve">
          <source>Returns as GPathResult with the parent nodes of the current GPathResult</source>
          <target state="translated">현재 GPathResult의 부모 노드와 함께 GPathResult로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e9f22f26bd1e00d6fbfb6e6d2b24cc699674c456" translate="yes" xml:space="preserve">
          <source>Returns benchmark statistics as a List&amp;lt;Object[]&amp;gt;.</source>
          <target state="translated">벤치 마크 통계를 List &amp;lt;Object []&amp;gt;로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26b86cb5d4032332d0582de6c090a738f140c3be" translate="yes" xml:space="preserve">
          <source>Returns benchmark statistics as a List&amp;lt;Object[]&amp;gt;. AccumulateTime is measured in milliseconds and is as accurate as System.currentTimeMillis() allows it to be.</source>
          <target state="translated">벤치 마크 통계를 List &amp;lt;Object []&amp;gt;로 반환합니다. AccumulateTime은 밀리 초 단위로 측정되며 System.currentTimeMillis ()가 허용하는만큼 정확합니다.</target>
        </trans-unit>
        <trans-unit id="59184cfc46ebe2d0797d0541ded98de5d97091bb" translate="yes" xml:space="preserve">
          <source>Returns indices of the array.</source>
          <target state="translated">배열의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8411687866aeeeecdb6600675bf7916db2db22eb" translate="yes" xml:space="preserve">
          <source>Returns indices of the collection.</source>
          <target state="translated">컬렉션의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8eda457ac68776be329010bbc32b553ead1228e3" translate="yes" xml:space="preserve">
          <source>Returns method signature (as Class[]) given the meta map that describes the method.</source>
          <target state="translated">메서드를 설명하는 메타 맵이 지정된 경우 메서드 서명 (Class [])을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3d42c5b3fb9bed85d13e223a512e25b1d21cdff" translate="yes" xml:space="preserve">
          <source>Returns new CharSequence after removing the right &lt;code&gt;num&lt;/code&gt; chars.</source>
          <target state="translated">오른쪽 &lt;code&gt;num&lt;/code&gt; 문자를 제거한 후 새 CharSequence를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2338f33ede04e3f7fe45defa55a9aee1fd15e1e6" translate="yes" xml:space="preserve">
          <source>Returns new CharSequence after removing the right &lt;code&gt;num&lt;/code&gt; chars. Returns empty String if the &lt;code&gt;num&lt;/code&gt; is greater than the length of the CharSequence.</source>
          <target state="translated">오른쪽 &lt;code&gt;num&lt;/code&gt; 문자를 제거한 후 새 CharSequence를 반환합니다 . &lt;code&gt;num&lt;/code&gt; 이 CharSequence의 길이보다 크면 빈 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6474e86b013fde358d7596c8449feb5724eba408" translate="yes" xml:space="preserve">
          <source>Returns our class loader (as supplied on construction).</source>
          <target state="translated">클래스 로더를 반환합니다 (구성시 제공됨).</target>
        </trans-unit>
        <trans-unit id="ccc66079c2afdf0ffb55ac199c740eccb1ce2e5c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;DayOfWeek&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; many days after this day of the week.</source>
          <target state="translated">반품 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;된 요일&lt;/a&gt; 입니다 &lt;code&gt;days&lt;/code&gt; 많은 일 일주일의 하루를.</target>
        </trans-unit>
        <trans-unit id="a4194f9b579dbf6c21f5ba14297c8e11f2d1d74c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;DayOfWeek&lt;/a&gt; that is &lt;code&gt;days&lt;/code&gt; many days before this day of the week.</source>
          <target state="translated">반품 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/DayOfWeek.html&quot;&gt;된 요일&lt;/a&gt; 입니다 &lt;code&gt;days&lt;/code&gt; 많은 일이 요일 전에합니다.</target>
        </trans-unit>
        <trans-unit id="5af3c6f75ef73f218669ee19e3ddd96f9116a0e7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt; that is &lt;code&gt;months&lt;/code&gt; months after this month.</source>
          <target state="translated">이번 달 이후의 &lt;code&gt;months&lt;/code&gt; &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a6352dcc7c5413389e4552b2637c819893d11315" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt; that is &lt;code&gt;months&lt;/code&gt; months before this month.</source>
          <target state="translated">이번 달보다 &lt;code&gt;months&lt;/code&gt; 달 전인 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/Month.html&quot;&gt;Month&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e7b32d58cd135985c580f69a7b51e0875d9db176" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt; currently associated with the system default &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt;.</source>
          <target state="translated">시스템 기본 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt; 와 현재 연결된 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a735cc6500737460b56d860fd44b060bf8ef9bcc" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CharSequence&lt;/code&gt; that exists after the first occurrence of the given &lt;code&gt;searchString&lt;/code&gt; in this CharSequence.</source>
          <target state="translated">이 CharSequence에서 지정된 &lt;code&gt;searchString&lt;/code&gt; 의 첫 번째 발생 후에 존재 하는 &lt;code&gt;CharSequence&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9f582b06e51392f58ac4af1c72a02c41c1cf75fb" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CharSequence&lt;/code&gt; that exists before the first occurrence of the given &lt;code&gt;searchString&lt;/code&gt; in this CharSequence.</source>
          <target state="translated">이 CharSequence에서 지정된 &lt;code&gt;searchString&lt;/code&gt; 이 처음 발생하기 전에 존재 하는 &lt;code&gt;CharSequence&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="632c8219363f292bee8199880f4be4ce8b6337e6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Class&lt;/code&gt; associated with this &lt;code&gt;ClassInfo&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;ClassInfo&lt;/code&gt; 에 관련된 &lt;code&gt;Class&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="2ce48399a2b84f00cbe44a2adfc4786f95844b23" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;ClassNode&lt;/code&gt; this node is a proxy for or the node itself.</source>
          <target state="translated">이 노드가 프록시 인 &lt;code&gt;ClassNode&lt;/code&gt; 또는 노드 자체를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="be448e645ad93e8c99b845115867221355f1d8d2" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;MetaClass&lt;/code&gt; for the &lt;code&gt;Class&lt;/code&gt; associated with this &lt;code&gt;ClassInfo&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;ClassInfo&lt;/code&gt; 에 관련된 &lt;code&gt;Class&lt;/code&gt; 의 &lt;code&gt;MetaClass&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6ce19521dd3fa90cad60b2b159f17cd222e3240c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;MetaClass&lt;/code&gt; for the &lt;code&gt;Class&lt;/code&gt; associated with this &lt;code&gt;ClassInfo&lt;/code&gt;. If no &lt;code&gt;MetaClass&lt;/code&gt; exists one will be created.</source>
          <target state="translated">이 &lt;code&gt;ClassInfo&lt;/code&gt; 에 관련된 &lt;code&gt;Class&lt;/code&gt; 의 &lt;code&gt;MetaClass&lt;/code&gt; 를 리턴합니다 . &lt;code&gt;MetaClass&lt;/code&gt; 가 없으면 하나가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e63a3eba6b475bda1baafd3a505f97b0e339954a" translate="yes" xml:space="preserve">
          <source>Returns the Abstract Syntax Tree produced during convert()ing and expanded during later phases.</source>
          <target state="translated">convert () ing 동안 생성되고 이후 단계에서 확장 된 추상 구문 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2524f3d746f3d79cc04d36708629a47daabf11a" translate="yes" xml:space="preserve">
          <source>Returns the CharSequence that is in between the first occurrence of the given &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; CharSequences and empty if the unavailable inputs are given.</source>
          <target state="translated">주어진 &lt;code&gt;from&lt;/code&gt; 과 &lt;code&gt;to&lt;/code&gt; CharSequences 의 첫 번째 발생 사이에 있고 사용할 수없는 입력이 제공되면 비어 있는 CharSequence를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="034376090fe5072ef58dcf3a7f93596cce0aa213" translate="yes" xml:space="preserve">
          <source>Returns the CharSequence that is in between the given the nth (specified by occurrence) pair of &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; CharSequences and empty if the unavailable inputs are given.</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 과 &lt;code&gt;to&lt;/code&gt; CharSequences 의 n 번째 (어커런스로 지정됨) 쌍 사이에 있고 사용할 수없는 입력이 주어지면 비어 있는 CharSequence를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="6fd9aafd1094d9c9562c2fcb237d947f529c1cc5" translate="yes" xml:space="preserve">
          <source>Returns the CompilePhase for the given integer phase number.</source>
          <target state="translated">주어진 정수 단계 번호에 대한 CompilePhase를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ded0f76a991ecb4b863e169617a8d6b41b38e935" translate="yes" xml:space="preserve">
          <source>Returns the CompileUnit that roots our AST.</source>
          <target state="translated">AST를 루트하는 CompileUnit을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7f3351fd7601baac9342648d048231e5d8491569" translate="yes" xml:space="preserve">
          <source>Returns the Concrete Syntax Tree produced during parse()ing.</source>
          <target state="translated">parse () ing 중에 생성 된 구체적인 구문 트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12c851a9b479e3c270479a79cebb6ef94f724778" translate="yes" xml:space="preserve">
          <source>Returns the GroovyClassLoader associated with this script engine instance.</source>
          <target state="translated">이 스크립트 엔진 인스턴스와 관련된 GroovyClassLoader를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d9587258d5d214edd893ab01bdbf129b742605a5" translate="yes" xml:space="preserve">
          <source>Returns the GroovyClassLoader associated with this script engine instance. Useful if you need to pass the class loader to another library.</source>
          <target state="translated">이 스크립트 엔진 인스턴스와 관련된 GroovyClassLoader를 반환합니다. 클래스 로더를 다른 라이브러리로 전달해야하는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dbb0927591c7b4e8557fedb291252ab12df291e6" translate="yes" xml:space="preserve">
          <source>Returns the MetaClass that this adapter adapts</source>
          <target state="translated">이 어댑터가 적응하는 MetaClass를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d471476c52b90cf1004b3e5a1d385eb68c02ab83" translate="yes" xml:space="preserve">
          <source>Returns the QName for the given localName.</source>
          <target state="translated">주어진 localName에 대한 QName을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fa1cd650c380d7e4a6e1aa01f17f862e565e26fb" translate="yes" xml:space="preserve">
          <source>Returns the Selector</source>
          <target state="translated">선택자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c6d077fb8e03e6f197c657b0ffb85d537b81dc35" translate="yes" xml:space="preserve">
          <source>Returns the Time Zone of the Calendar as a java.time.ZoneId.</source>
          <target state="translated">달력의 시간대를 java.time.ZoneId로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e960c9706789d2fcaa002a3c01f2077be7a6d16" translate="yes" xml:space="preserve">
          <source>Returns the Time Zone of the Date as a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt;.</source>
          <target state="translated">날짜의 시간대를 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="562453193a64021d1bc700f919e01a24a903a645" translate="yes" xml:space="preserve">
          <source>Returns the Time Zone of the Date as a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt;. This will typically be the system's default ZoneId.</source>
          <target state="translated">날짜의 시간대를 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html&quot;&gt;ZoneId&lt;/a&gt; 로 반환합니다 . 이는 일반적으로 시스템의 기본 ZoneId입니다.</target>
        </trans-unit>
        <trans-unit id="55969d5e0b849c93baa1b7df80c0e3670830d220" translate="yes" xml:space="preserve">
          <source>Returns the Time Zone offset of the Calendar as a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;.</source>
          <target state="translated">달력의 시간대 오프셋을 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="42d6117def2e90abf69788c4343056edcebcc4c0" translate="yes" xml:space="preserve">
          <source>Returns the Time Zone offset of the Date as a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset&lt;/a&gt;, which will typically be system's default offset.</source>
          <target state="translated">일반적으로 시스템의 기본 오프셋이 될 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html&quot;&gt;ZoneOffset으로&lt;/a&gt; Date의 시간대 오프셋을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c3720c5ef04375608f8e82723e9e29be87bc182a" translate="yes" xml:space="preserve">
          <source>Returns the URI of the namespace of this Attribute.</source>
          <target state="translated">이 Attribute 네임 스페이스의 URI를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c1cca3f7402156b007e6987f24e7df37030ae0dc" translate="yes" xml:space="preserve">
          <source>Returns the URI of the namespace of this Node.</source>
          <target state="translated">이 Node의 네임 스페이스 URI를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7b06274e14c1d5061ac64c9c41287f778d610a29" translate="yes" xml:space="preserve">
          <source>Returns the URI of the namespace of this NodeChild.</source>
          <target state="translated">이 NodeChild 네임 스페이스의 URI를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="31bbf1cf5d36f8346d7bb757cac8131c66a4d9b4" translate="yes" xml:space="preserve">
          <source>Returns the URI of this namespace</source>
          <target state="translated">이 네임 스페이스의 URI를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5413ba03de93a5967d636939df52bcc50c60947e" translate="yes" xml:space="preserve">
          <source>Returns the access modifier.</source>
          <target state="translated">액세스 수정자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ae631ebc657525d905341af2aa71dce0fdcbdf0" translate="yes" xml:space="preserve">
          <source>Returns the actual type of the node.</source>
          <target state="translated">노드의 실제 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3d908710f446707b192bbc9f2b0a1b45db1293c9" translate="yes" xml:space="preserve">
          <source>Returns the actual type of the node. If the node isEmpty(), returns the type of Token.NULL.</source>
          <target state="translated">노드의 실제 유형을 반환합니다. 노드가 Empty ()이면 Token.NULL 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e81847bbb74c0e86b76e0a4994dd5df67f2cc10" translate="yes" xml:space="preserve">
          <source>Returns the assertion's source text after removing line breaks.</source>
          <target state="translated">줄 바꿈을 제거한 후 어설 션의 소스 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6bb2b487e495607baccb82b4410ca6b489ffa7c2" translate="yes" xml:space="preserve">
          <source>Returns the binary expression which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택 맨 위에있는 이진 표현식을 반환하거나, 그러한 요소가 없으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f29e49389593b61fd005e8eab0d4a0361891495" translate="yes" xml:space="preserve">
          <source>Returns the bug text to describe this error</source>
          <target state="translated">이 오류를 설명하는 버그 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e1c1ae5afc9a692bfc2e88b524ff639ece78fac3" translate="yes" xml:space="preserve">
          <source>Returns the cached class for this metaclass</source>
          <target state="translated">이 메타 클래스에 대해 캐시 된 클래스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="66acd27baeaba88aaf44527d583c361663448fda" translate="yes" xml:space="preserve">
          <source>Returns the causing exception, if available.</source>
          <target state="translated">가능한 경우 원인 예외를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9544ba6e1fbd16b0f64f11bd46331629c7bd413e" translate="yes" xml:space="preserve">
          <source>Returns the children of this GPathResult as a GPathResult object.</source>
          <target state="translated">이 GPathResult의 자식을 GPathResult 객체로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="87b02b65a163d56b48e4a19ca0ba51b1ae0619cb" translate="yes" xml:space="preserve">
          <source>Returns the children of this GPathResult matching the condition(s) specified in the passed closure.</source>
          <target state="translated">전달 된 클로저에 지정된 조건과 일치하는이 GPathResult의 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="038405829c2ddb62ef85d89df211508fcb2b79b4" translate="yes" xml:space="preserve">
          <source>Returns the class loader for loading AST transformations.</source>
          <target state="translated">AST 변환을로드하기위한 클래스 로더를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e909b53e9aa8fb18c2c9b72ab36bb65f7ebd2066" translate="yes" xml:space="preserve">
          <source>Returns the class loader in use by this ProcessingUnit.</source>
          <target state="translated">이 ProcessingUnit에서 사용중인 클래스 로더를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a01bc04019757b5e31618cadef7669df56dfd02a" translate="yes" xml:space="preserve">
          <source>Returns the class node which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택의 맨 위에있는 클래스 노드를 반환하거나 그러한 요소가 없으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f03467d152bf971134b9f5482ca52eb28eb2234" translate="yes" xml:space="preserve">
          <source>Returns the class this object this is the metaclass of.</source>
          <target state="translated">이 객체가 메타 클래스 인 클래스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b270e59b085294d468263e67b79bc5a8576d02b1" translate="yes" xml:space="preserve">
          <source>Returns the classLoader used to load a node's class.</source>
          <target state="translated">노드의 클래스를로드하는 데 사용되는 classLoader를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c244452bfc9e30690cecbcae599e13a296e6606e" translate="yes" xml:space="preserve">
          <source>Returns the closure expression which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택 맨 위에있는 클로저 표현식을 반환하거나, 그러한 요소가 없으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7625890c49b40c61a2789549ab7b8386caa46086" translate="yes" xml:space="preserve">
          <source>Returns the colfill.</source>
          <target state="translated">colfill을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e4c726da58fdfd83f0e28805cc98046e85c397dc" translate="yes" xml:space="preserve">
          <source>Returns the column in</source>
          <target state="translated">열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fea478cd00a07287faa18b126852dd2df04b1a1" translate="yes" xml:space="preserve">
          <source>Returns the concrete class this classnode relates to.</source>
          <target state="translated">이 클래스 노드와 관련된 구체적인 클래스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bd621a1a470601c38fa87cd7aaaccd204f4fbb62" translate="yes" xml:space="preserve">
          <source>Returns the concrete class this classnode relates to. However, this method is inherently unsafe as it may return null depending on the compile phase you are using. AST transformations should never use this method directly, but rather obtain a new class node using &lt;a href=&quot;#getPlainNodeReference()&quot;&gt;getPlainNodeReference()&lt;/a&gt;.</source>
          <target state="translated">이 클래스 노드와 관련된 구체적인 클래스를 반환합니다. 그러나이 메서드는 사용중인 컴파일 단계에 따라 null을 반환 할 수 있으므로 본질적으로 안전하지 않습니다. AST 변환은이 메서드를 직접 사용 &lt;a href=&quot;#getPlainNodeReference()&quot;&gt;해서는 안되며 getPlainNodeReference ()를&lt;/a&gt; 사용하여 새 클래스 노드를 가져와야 합니다.</target>
        </trans-unit>
        <trans-unit id="33a62050b712d8cdbf4fce92df98c27b5df8d1cb" translate="yes" xml:space="preserve">
          <source>Returns the constant name associated with the given resolve strategy.</source>
          <target state="translated">주어진 해결 전략과 관련된 상수 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e169caac51dd2c5aff019e7f5c4b36baa785c328" translate="yes" xml:space="preserve">
          <source>Returns the current ChildPropertySetter.</source>
          <target state="translated">현재 ChildPropertySetter를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3aa9f56342303c9ea236b82e43398f15c93d66cc" translate="yes" xml:space="preserve">
          <source>Returns the current ClassNameResolver.</source>
          <target state="translated">현재 ClassNameResolver를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7084e5288e1a88abb0b9d4b7d047e390e1459b47" translate="yes" xml:space="preserve">
          <source>Returns the current NewInstanceResolver.</source>
          <target state="translated">현재 NewInstanceResolver를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27b5dc89652dcec6183c775f860c7052d91238a9" translate="yes" xml:space="preserve">
          <source>Returns the current RelationNameResolver.</source>
          <target state="translated">현재 RelationNameResolver를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e008fd680019de4e5e9519ed7dfa9244a680483" translate="yes" xml:space="preserve">
          <source>Returns the current keep ignorable whitespace setting.</source>
          <target state="translated">현재 무시할 수있는 공백 유지 설정을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73caa3c58de5e3dae6854a37c191b5961723311d" translate="yes" xml:space="preserve">
          <source>Returns the current name of the 'bean' node.</source>
          <target state="translated">'bean'노드의 현재 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c5f9d0db8da2da0b445c69d52eb50120544aed12" translate="yes" xml:space="preserve">
          <source>Returns the current phase.</source>
          <target state="translated">현재 단계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44e7032c6f79eff16176afcff2cfd9aa2afd34e6" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing binary expressions.</source>
          <target state="translated">둘러싸는 이진 표현식의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79b0d5d013242bfa29ce1004ff0af9a158d8992f" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing binary expressions. The first element is the top of the stack.</source>
          <target state="translated">둘러싸는 이진 표현식의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위입니다.</target>
        </trans-unit>
        <trans-unit id="29e32ea239e9bf7c59fc6d405bd9c8efc91e55cc" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing classes.</source>
          <target state="translated">둘러싸는 클래스의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e6816231956af382f795ebf4dfefbb1bcc8ed30a" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing classes. The first element is the top of the stack, that is to say the currently visited class.</source>
          <target state="translated">둘러싸는 클래스의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위, 즉 현재 방문한 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d12c918a89924d2cb8bb163f79dafd93d9849620" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing closure expressions.</source>
          <target state="translated">둘러싸는 클로저 표현식의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf5c275447d7a432717b4eb45f7a17c601bc5ea6" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing closure expressions. The first element is the top of the stack.</source>
          <target state="translated">둘러싸는 클로저 표현식의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위입니다.</target>
        </trans-unit>
        <trans-unit id="a58964c05fac5a6930b0067d1e8ad7d0d0c50514" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing method calls.</source>
          <target state="translated">둘러싸는 메서드 호출의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="95a53a071ce86dda9e2a1026bc630ca6462ac0ac" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing method calls. The first element is the top of the stack, that is to say the currently visited method call.</source>
          <target state="translated">둘러싸는 메서드 호출의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위, 즉 현재 방문한 메서드 호출입니다.</target>
        </trans-unit>
        <trans-unit id="8f8bc4b575996b7f1c2efa1445f08df423bb8b17" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing methods.</source>
          <target state="translated">둘러싸는 메서드의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1365be2cf0dcfba0add7adc0009555b088f2d600" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing methods. The first element is the top of the stack, that is to say the last visited method.</source>
          <target state="translated">둘러싸는 메서드의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위, 즉 마지막으로 방문한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="ef89411e74e1fb5a03540696807bfe43bdcae848" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing switch statements.</source>
          <target state="translated">둘러싸는 switch 문의 현재 스택을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eef21850311ec61e46a948c9cb61ae0545908bc2" translate="yes" xml:space="preserve">
          <source>Returns the current stack of enclosing switch statements. The first element is the top of the stack, that is to say the last visited switch statement.</source>
          <target state="translated">둘러싸는 switch 문의 현재 스택을 반환합니다. 첫 번째 요소는 스택의 맨 위, 즉 마지막으로 방문한 switch 문입니다.</target>
        </trans-unit>
        <trans-unit id="b2c207e66973373d8d078147bb34a1128edce48a" translate="yes" xml:space="preserve">
          <source>Returns the current trim whitespace setting.</source>
          <target state="translated">현재 트림 공백 설정을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="392f7d35db486203846b29e3951d55fec5caba65" translate="yes" xml:space="preserve">
          <source>Returns the current type checking context.</source>
          <target state="translated">현재 유형 검사 컨텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b4a72f6cf0d500603bd459627f9c7985532b6ff" translate="yes" xml:space="preserve">
          <source>Returns the current type checking context. The context is used internally by the type checker during type checking to store various state data.</source>
          <target state="translated">현재 유형 검사 컨텍스트를 반환합니다. 컨텍스트는 다양한 상태 데이터를 저장하기 위해 유형 검사 중에 유형 검사기에 의해 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="624862b4c88990718d7bc57ceac205927de134f5" translate="yes" xml:space="preserve">
          <source>Returns the default import classes: class name -&amp;gt; the relevant package names</source>
          <target state="translated">기본 가져 오기 클래스를 반환합니다. 클래스 이름-&amp;gt; 관련 패키지 이름</target>
        </trans-unit>
        <trans-unit id="9222628b5c369a046152edc4963289110a63f3d7" translate="yes" xml:space="preserve">
          <source>Returns the delegate.</source>
          <target state="translated">대리자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5076bd2320f34ab5d2b16db11a600cb7ac87350d" translate="yes" xml:space="preserve">
          <source>Returns the description for the current phase.</source>
          <target state="translated">현재 단계에 대한 설명을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="017b6419001f75f8204bc7b1a632d343a92f3856" translate="yes" xml:space="preserve">
          <source>Returns the detail message string of this error.</source>
          <target state="translated">이 오류의 세부 메시지 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="342fd9446726eeedefbc5d975c9b4fefd45d0267" translate="yes" xml:space="preserve">
          <source>Returns the detail message string of this error. The message will consist of the bug text prefixed by &quot;BUG! &quot; if there this instance was created using a message. If this error was constructed without using a bug text the message of the cause is used prefixed by &quot;BUG! UNCAUGHT EXCEPTION: &quot;</source>
          <target state="translated">이 오류의 세부 메시지 문자열을 반환합니다. 이 인스턴스가 메시지를 사용하여 생성 된 경우 메시지는 &quot;BUG!&quot;접두사가 붙은 버그 텍스트로 구성됩니다. 이 오류가 버그 텍스트를 사용하지 않고 생성 된 경우 원인의 메시지 앞에 &quot;BUG! UNCAUGHT EXCEPTION :&quot;이 붙습니다.</target>
        </trans-unit>
        <trans-unit id="42ef6c507d5f752def5e6663827fcef56d4e6ad7" translate="yes" xml:space="preserve">
          <source>Returns the directive.</source>
          <target state="translated">지시문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e05f6a4b622056b9fd37223f521a77ce85623bfb" translate="yes" xml:space="preserve">
          <source>Returns the element at the given index but grows the list if needed.</source>
          <target state="translated">주어진 인덱스의 요소를 반환하지만 필요한 경우 목록을 늘립니다.</target>
        </trans-unit>
        <trans-unit id="b32c9e7fc27e980cdaa663e4fcdc2387604962cf" translate="yes" xml:space="preserve">
          <source>Returns the element at the given index but grows the list if needed. If the requested &lt;code&gt;index&lt;/code&gt; is greater than or equal to &lt;code&gt;size()&lt;/code&gt;, the list will grow to the new size and a default value calculated using the &lt;code&gt;initClosure&lt;/code&gt; will be used to populate the missing value and returned.</source>
          <target state="translated">주어진 인덱스의 요소를 반환하지만 필요한 경우 목록을 늘립니다. 요청 된 &lt;code&gt;index&lt;/code&gt; 가 &lt;code&gt;size()&lt;/code&gt; 보다 크거나 같으면 목록이 새 크기로 &lt;code&gt;initClosure&lt;/code&gt; 를 사용하여 계산 된 기본값 이 누락 된 값을 채우는 데 사용되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="491929f5b325c34333ab12c4d01fe40f9d7ec40a" translate="yes" xml:space="preserve">
          <source>Returns the encoding to be used when creating files.</source>
          <target state="translated">파일을 만들 때 사용할 인코딩을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3638ce30dcd7a176f85625b3378d0a5aaf4239a5" translate="yes" xml:space="preserve">
          <source>Returns the era of the year, which is currently either 0 (BC) or 1 (AD).</source>
          <target state="translated">현재 0 (BC) 또는 1 (AD) 인 연대의 ​​연대를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="278d4f4e96370649b20bc420427dc3e1261c7c68" translate="yes" xml:space="preserve">
          <source>Returns the escapeAttributes property value.</source>
          <target state="translated">escapeAttributes 속성 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a777c288c4c1f6ff5d75550db7be2d962ba0a02" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;num&lt;/code&gt; elements from the head of this Iterable.</source>
          <target state="translated">이 Iterable 헤드에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a4af75bf1d1fcd9888a8873768c0871a8ba963f5" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;num&lt;/code&gt; elements from the head of this List.</source>
          <target state="translated">이 List의 헤드에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d8dcfa41c82423b4b14e06ad26cc87da0e44a5b" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;num&lt;/code&gt; elements from the head of this SortedSet.</source>
          <target state="translated">이 SortedSet의 헤드에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="282aaf88b8ccfede257e621a2830e6de10be84b2" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;num&lt;/code&gt; elements from the head of this array.</source>
          <target state="translated">이 배열의 헤드에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9a29ac38a1709ffa978bb5ef62a3dfe81b9d1724" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;num&lt;/code&gt; elements from this CharSequence.</source>
          <target state="translated">이 CharSequence에서 처음 &lt;code&gt;num&lt;/code&gt; 개의 요소를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4d004ec864bf4872b50f17b69d85479f2b059db4" translate="yes" xml:space="preserve">
          <source>Returns the first GroovyRowResult object from the dataset</source>
          <target state="translated">데이터 집합에서 첫 번째 GroovyRowResult 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b3aefe33795bb0ebd9104db46d0b6d94d9f4a79c" translate="yes" xml:space="preserve">
          <source>Returns the first child of this GPathResult matching the condition(s) specified in the passed closure.</source>
          <target state="translated">전달 된 클로저에 지정된 조건과 일치하는이 GPathResult의 첫 번째 자식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1373d5f0a0f9ea422c87109216c020a018ffb81" translate="yes" xml:space="preserve">
          <source>Returns the first item from the Iterable.</source>
          <target state="translated">Iterable에서 첫 번째 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3adec8d01cbbf3fd1490ca5ca6dfa2c603c7c6e" translate="yes" xml:space="preserve">
          <source>Returns the first item from the List.</source>
          <target state="translated">목록에서 첫 번째 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6595c071cdf5e8f2f7b37bbdb77bcfc6ff717247" translate="yes" xml:space="preserve">
          <source>Returns the first item from the Object array.</source>
          <target state="translated">Object 배열에서 첫 번째 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="301245528d36543a089c032e624dcea21cdd4840" translate="yes" xml:space="preserve">
          <source>Returns the first item from the array.</source>
          <target state="translated">배열에서 첫 번째 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ea5f2ccc7c6dc71eb6336f5249b71a2d58ab1b2b" translate="yes" xml:space="preserve">
          <source>Returns the first matching meaning of the specified types.</source>
          <target state="translated">지정된 유형의 첫 번째 일치 의미를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36f49e944446053218bf26f2dcd590db3b0a0fa4" translate="yes" xml:space="preserve">
          <source>Returns the first matching meaning of the specified types. Returns Types.UNKNOWN if there are no matches.</source>
          <target state="translated">지정된 유형의 첫 번째 일치 의미를 반환합니다. 일치하는 항목이 없으면 Types.UNKNOWN을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7807d323ed8ec88f9f9e587cf227c030bab88b2e" translate="yes" xml:space="preserve">
          <source>Returns the first non-null closure result found by passing each map entry to the closure, otherwise null is returned.</source>
          <target state="translated">각 맵 항목을 클로저에 전달하여 찾은 null이 아닌 첫 번째 클로저 결과를 반환합니다. 그렇지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f838dfe4acf90638677f6a0509c6920593a42153" translate="yes" xml:space="preserve">
          <source>Returns the first non-null closure result found by passing each map entry to the closure, otherwise null is returned. If the closure takes two parameters, the entry key and value are passed. If the closure takes one parameter, the Map.Entry object is passed.</source>
          <target state="translated">각 맵 항목을 클로저에 전달하여 찾은 null이 아닌 첫 번째 클로저 결과를 반환합니다. 그렇지 않으면 null이 반환됩니다. 클로저에 두 개의 매개 변수가 있으면 입력 키와 값이 전달됩니다. 클로저가 하나의 매개 변수를 사용하면 Map.Entry 객체가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="0c86869111047574d8ff9831aa17fa7bb55eb4ed" translate="yes" xml:space="preserve">
          <source>Returns the first non-null closure result found by passing each map entry to the closure, otherwise the defaultResult is returned.</source>
          <target state="translated">각 맵 항목을 클로저에 전달하여 찾은 null이 아닌 첫 번째 클로저 결과를 반환합니다. 그렇지 않으면 defaultResult가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e0af688bd960776275ee4b1cdfb338ec01960dcd" translate="yes" xml:space="preserve">
          <source>Returns the first non-null closure result found by passing each map entry to the closure, otherwise the defaultResult is returned. If the closure takes two parameters, the entry key and value are passed. If the closure takes one parameter, the Map.Entry object is passed.</source>
          <target state="translated">각 맵 항목을 클로저에 전달하여 찾은 null이 아닌 첫 번째 클로저 결과를 반환합니다. 그렇지 않으면 defaultResult가 반환됩니다. 클로저에 두 개의 매개 변수가 있으면 입력 키와 값이 전달됩니다. 클로저가 하나의 매개 변수를 사용하면 Map.Entry 객체가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="8ffe7b7ea1c9cfbe85a951784beccdc608346700" translate="yes" xml:space="preserve">
          <source>Returns the first of several candidates found. This is useful if several types should be supported but only the first should be the default/inferred type. Other options in the list are obtained through explicitly typing the parameter(s).</source>
          <target state="translated">찾은 여러 후보 중 첫 번째를 반환합니다. 여러 유형이 지원되어야하지만 첫 번째 유형 만 기본 / 추론 유형이어야하는 경우 유용합니다. 목록의 다른 옵션은 매개 변수를 명시 적으로 입력하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d426a3f68315856ac870a5b2d9238ca1f9fb3e1c" translate="yes" xml:space="preserve">
          <source>Returns the first row from a DataSet's underlying table</source>
          <target state="translated">DataSet의 기본 테이블에서 첫 번째 행을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c9b480eafdf1495997f3561497a9eb781b148633" translate="yes" xml:space="preserve">
          <source>Returns the found classes</source>
          <target state="translated">찾은 클래스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a784404d5fafa1f30a4939fa1270b8b67ab07e37" translate="yes" xml:space="preserve">
          <source>Returns the fully qualified name of this QName</source>
          <target state="translated">이 QName의 완전한 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0735094970402bc2967e223517c8567229f969d6" translate="yes" xml:space="preserve">
          <source>Returns the groovy version</source>
          <target state="translated">그루비 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="454841c74e442e33ba6bd09a3cd2226459fb2bfc" translate="yes" xml:space="preserve">
          <source>Returns the hours component of this offset.</source>
          <target state="translated">이 오프셋의 시간 구성 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="09c51d7339436f5b1257d7d8295c623c9408a112" translate="yes" xml:space="preserve">
          <source>Returns the hours component of this offset. If the offset's total seconds are negative, a negative value will be returned.</source>
          <target state="translated">이 오프셋의 시간 구성 요소를 반환합니다. 오프셋의 총 초가 음수이면 음수 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6148abde27acee16955c4be7f760223becf16006" translate="yes" xml:space="preserve">
          <source>Returns the include-aware uri of the script or template file.</source>
          <target state="translated">스크립트 또는 템플릿 파일의 포함 인식 URI를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ebf3f6f0b4e42ebb93a169058b6258986714790" translate="yes" xml:space="preserve">
          <source>Returns the inclusive flag.</source>
          <target state="translated">포함 플래그를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="81bcdd7c9c41347f4e371a0dc57eb53a881729ac" translate="yes" xml:space="preserve">
          <source>Returns the inclusive flag. Null for non-inclusive aware ranges or non-null for inclusive aware ranges.</source>
          <target state="translated">포함 플래그를 반환합니다. 비 포함 인식 범위의 경우 Null이고 포함 인식 범위의 경우 Null이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5faa049cad91627c159b4495871cc746c892ffd3" translate="yes" xml:space="preserve">
          <source>Returns the inferred return type of a closure or a method, if stored on the AST node.</source>
          <target state="translated">AST 노드에 저장된 경우 클로저 또는 메서드의 유추 된 반환 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a3d396759b8050d4bb739655bfced5fe8a90ac5" translate="yes" xml:space="preserve">
          <source>Returns the inferred return type of a closure or a method, if stored on the AST node. This method doesn't perform any type inference by itself.</source>
          <target state="translated">AST 노드에 저장된 경우 클로저 또는 메서드의 유추 된 반환 유형을 반환합니다. 이 메서드는 자체적으로 유형 추론을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c43e883ce5222496188a4417b15a6df34df1c17" translate="yes" xml:space="preserve">
          <source>Returns the inferred type of an expression.</source>
          <target state="translated">추론 된 식의 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c3c437b86f242aa1f4233412011ea5a02b62bcb" translate="yes" xml:space="preserve">
          <source>Returns the inferred type of an expression. Delegates to the type checker implementation.</source>
          <target state="translated">추론 된 식의 유형을 반환합니다. 유형 검사기 구현에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="a3eb2bf505a1a783a38a0d2e205f23b344d85b08" translate="yes" xml:space="preserve">
          <source>Returns the instance this event is for.</source>
          <target state="translated">이 이벤트가 대상인 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3f2942bed9d9c2b233f49a98cdb69aa4efe405f6" translate="yes" xml:space="preserve">
          <source>Returns the interruption check statement.</source>
          <target state="translated">중단 확인 문을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6820418c1c48af4e9efb99cc1d1cfb06beb3ab3" translate="yes" xml:space="preserve">
          <source>Returns the inverse view of this map</source>
          <target state="translated">이지도의 역보기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="edb81bca35a40733ca32325718f07897399d4826" translate="yes" xml:space="preserve">
          <source>Returns the inverse view of this map, and duplicated key is not allowed</source>
          <target state="translated">이지도의 역보기를 반환하며 중복 된 키는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71fc4a1fd3020203cee65d07aad4a83b6468b86b" translate="yes" xml:space="preserve">
          <source>Returns the items from the Iterable excluding the first item.</source>
          <target state="translated">Iterable에서 첫 번째 항목을 제외한 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3feebd834c7b8bce804393c4f3e905666a91d512" translate="yes" xml:space="preserve">
          <source>Returns the items from the Iterable excluding the last item.</source>
          <target state="translated">마지막 항목을 제외하고 Iterable에서 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7e9cbc954fb455d9f0d2069f29e8ae4ca9afe14f" translate="yes" xml:space="preserve">
          <source>Returns the items from the Iterable excluding the last item. Leaves the original Iterable unchanged.</source>
          <target state="translated">마지막 항목을 제외하고 Iterable에서 항목을 반환합니다. 원래 Iterable을 변경하지 않고 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="5831bb3b559969a0628a25b1474cb39543e3df08" translate="yes" xml:space="preserve">
          <source>Returns the items from the List excluding the first item.</source>
          <target state="translated">목록에서 첫 번째 항목을 제외한 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45fc36015b81f606ca6aacf07e776ab86446c2f9" translate="yes" xml:space="preserve">
          <source>Returns the items from the List excluding the last item.</source>
          <target state="translated">마지막 항목을 제외한 목록에서 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0594978a7e4fb86bd5aeedc0a2559e2824bc9b54" translate="yes" xml:space="preserve">
          <source>Returns the items from the List excluding the last item. Leaves the original List unchanged.</source>
          <target state="translated">마지막 항목을 제외한 목록에서 항목을 반환합니다. 원래 목록을 변경하지 않고 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="fcbc8b178d9997d2bfdfe702dfde645fdb2063ee" translate="yes" xml:space="preserve">
          <source>Returns the items from the Object array excluding the last item.</source>
          <target state="translated">마지막 항목을 제외한 Object 배열의 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e503bfae589cffb03ba4907190ba9f27bd0b0ba" translate="yes" xml:space="preserve">
          <source>Returns the items from the SortedSet excluding the first item.</source>
          <target state="translated">첫 번째 항목을 제외한 SortedSet의 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70bc43c399abcc13c9a677ee79266c8adb448b22" translate="yes" xml:space="preserve">
          <source>Returns the items from the SortedSet excluding the last item.</source>
          <target state="translated">마지막 항목을 제외한 SortedSet의 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3b7c1cb8eccfc17709f0a49ef9ec6258c68545b3" translate="yes" xml:space="preserve">
          <source>Returns the items from the SortedSet excluding the last item. Leaves the original SortedSet unchanged.</source>
          <target state="translated">마지막 항목을 제외한 SortedSet의 항목을 반환합니다. 원래 SortedSet을 변경하지 않고 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="70d161c3f317d39c6abc11df23d573e1884f1ae7" translate="yes" xml:space="preserve">
          <source>Returns the items from the array excluding the first item.</source>
          <target state="translated">배열에서 첫 번째 항목을 제외한 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39726142b54e74252a65c5d560ff99f46791739f" translate="yes" xml:space="preserve">
          <source>Returns the label for the given name</source>
          <target state="translated">주어진 이름에 대한 레이블을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a7a8c956bd508cea664564957526d2198207db99" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;num&lt;/code&gt; elements from the tail of this Iterable.</source>
          <target state="translated">마지막 리턴 &lt;code&gt;num&lt;/code&gt; 이의 Iterable의 꼬리에서 요소를.</target>
        </trans-unit>
        <trans-unit id="bf0c22fe05a69ce9d027bf133f69c109c4d33163" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;num&lt;/code&gt; elements from the tail of this List.</source>
          <target state="translated">마지막 리턴 &lt;code&gt;num&lt;/code&gt; 이 목록의 꼬리에서 요소를.</target>
        </trans-unit>
        <trans-unit id="a94c5da26a54dee77c536b8ffede5208d4b9c070" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;num&lt;/code&gt; elements from the tail of this SortedSet.</source>
          <target state="translated">마지막 리턴 &lt;code&gt;num&lt;/code&gt; 이 된 SortedSet의 꼬리에서 요소를.</target>
        </trans-unit>
        <trans-unit id="cda915ef04e66a5071dc0a026709c0593ba90cdb" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;num&lt;/code&gt; elements from the tail of this array.</source>
          <target state="translated">마지막 리턴 &lt;code&gt;num&lt;/code&gt; 이 배열의 꼬리에서 요소를.</target>
        </trans-unit>
        <trans-unit id="fa0a6f310ee4ef0bb9c08d5a86d6644c99f66bd9" translate="yes" xml:space="preserve">
          <source>Returns the last &lt;code&gt;num&lt;/code&gt; elements from this CharSequence.</source>
          <target state="translated">마지막 리턴 &lt;code&gt;num&lt;/code&gt; 이의 CharSequence에서 요소를.</target>
        </trans-unit>
        <trans-unit id="1ff270537b807ea148859277fc5570f71961e7b3" translate="yes" xml:space="preserve">
          <source>Returns the last error reported.</source>
          <target state="translated">보고 된 마지막 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="75cea783fdea48581074c5a692b89f6d1a308c4f" translate="yes" xml:space="preserve">
          <source>Returns the last item from the Iterable.</source>
          <target state="translated">Iterable에서 마지막 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dc9cfc5bc220cdca8ce1994fc6f50e662dc2349d" translate="yes" xml:space="preserve">
          <source>Returns the last item from the List.</source>
          <target state="translated">목록에서 마지막 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e4edb8265eb8d0702f12beeab05a51f83b06b16" translate="yes" xml:space="preserve">
          <source>Returns the last item from the array.</source>
          <target state="translated">배열에서 마지막 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9e962b85b760c4bc54a28a08cf2b88cf8cf2c4d" translate="yes" xml:space="preserve">
          <source>Returns the line number in the template source where the error occurred</source>
          <target state="translated">오류가 발생한 템플릿 소스의 줄 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1b04c96e81d9a73d314bdb8905a54ce32af1acf7" translate="yes" xml:space="preserve">
          <source>Returns the lines of a CharSequence as a List of String.</source>
          <target state="translated">CharSequence의 라인을 문자열 목록으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="efeb0a6994169e3b31ac1c747cb4ddbbf4215a82" translate="yes" xml:space="preserve">
          <source>Returns the list of any direct String nodes of this NodeChild.</source>
          <target state="translated">이 NodeChild의 직접 문자열 노드 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="91e936b2fc25abb0506c68598104ee83f35b732b" translate="yes" xml:space="preserve">
          <source>Returns the list of any direct String nodes of this node.</source>
          <target state="translated">이 노드의 직접 문자열 노드 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3263dd9cb579907132e3f69d706682a7bba3145" translate="yes" xml:space="preserve">
          <source>Returns the list of compilation customizers.</source>
          <target state="translated">컴파일 커 스터 마이저 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ea0354f3e36a20692cba0c8fa0828c3e672a07f" translate="yes" xml:space="preserve">
          <source>Returns the list of disabled global AST transformation class names.</source>
          <target state="translated">비활성화 된 전역 AST 변환 클래스 이름 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="31f1b167df6e0c5647e6cd46783634a4a920b45c" translate="yes" xml:space="preserve">
          <source>Returns the list of errors, or null if there are none.</source>
          <target state="translated">오류 목록을 반환하거나없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b0cc19f63d2b40275e6a40cad52c21c5b6d66069" translate="yes" xml:space="preserve">
          <source>Returns the list of warnings, or null if there are none.</source>
          <target state="translated">경고 목록을 반환하거나없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f2f16cf202381e0714577c7c4340c66c9273d9a" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of elements in this iterator where each element passed to the given condition closure evaluates to true.</source>
          <target state="translated">주어진 조건 클로저에 전달 된 각 요소가 true로 평가되는이 반복기에서 요소의 가장 긴 접 두부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="da25a46f22a571d3fee4e0d1c1b9b349baaadbf4" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this CharSequence where each element passed to the given closure evaluates to true.</source>
          <target state="translated">지정된 클로저에 전달 된 각 요소가 true로 평가되는이 CharSequence의 가장 긴 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9e5f7910b9a55371116298413d43ab2920073e88" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this Map where each entry (or key/value pair) when passed to the given closure evaluates to true.</source>
          <target state="translated">주어진 클로저에 전달 될 때 각 항목 (또는 키 / 값 쌍)이 true로 평가되는이 Map의 가장 긴 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dec7a40d65165f726d63ff277c2fd0c078e2509e" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this SortedSet where each element passed to the given closure condition evaluates to true.</source>
          <target state="translated">지정된 클로저 조건에 전달 된 각 요소가 true로 평가되는이 SortedSet의 가장 긴 접 두부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6668ce6da76dabdd34ce599eb87fd78614338d0e" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this SortedSet where each element passed to the given closure condition evaluates to true. Similar to &lt;a href=&quot;#takeWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;takeWhile(Iterable, groovy.lang.Closure)&lt;/a&gt; except that it attempts to preserve the type of the original SortedSet.</source>
          <target state="translated">지정된 클로저 조건에 전달 된 각 요소가 true로 평가되는이 SortedSet의 가장 긴 접 두부를 리턴합니다. &lt;a href=&quot;#takeWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;takeWhile (Iterable, groovy.lang.Closure)&lt;/a&gt; 와 유사 하지만 원래 SortedSet의 유형을 보존하려고합니다.</target>
        </trans-unit>
        <trans-unit id="dd460c7b588afcb4532491e6d87c3e7cbe645256" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this array where each element passed to the given closure evaluates to true.</source>
          <target state="translated">주어진 클로저에 전달 된 각 요소가 true로 평가되는이 배열의 가장 긴 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cbd3492afd6a87b5e4227c7ed756ebccfe9c60aa" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this list where each element passed to the given closure condition evaluates to true.</source>
          <target state="translated">주어진 클로저 조건에 전달 된 각 요소가 true로 평가되는이 목록의 가장 긴 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="33c1f4e491e53b42c9c9d4927353a5996fabaf2e" translate="yes" xml:space="preserve">
          <source>Returns the longest prefix of this list where each element passed to the given closure condition evaluates to true. Similar to &lt;a href=&quot;#takeWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;takeWhile(Iterable, groovy.lang.Closure)&lt;/a&gt; except that it attempts to preserve the type of the original list.</source>
          <target state="translated">주어진 클로저 조건에 전달 된 각 요소가 true로 평가되는이 목록의 가장 긴 접두사를 반환합니다. &lt;a href=&quot;#takeWhile(java.lang.Iterable,%20groovy.lang.Closure)&quot;&gt;takeWhile (Iterable, groovy.lang.Closure)&lt;/a&gt; 와 유사 하지만 원래 목록의 유형을 보존하려고합니다.</target>
        </trans-unit>
        <trans-unit id="c7552f33fbe7fc1b8b271ffe846872cc62292e92" translate="yes" xml:space="preserve">
          <source>Returns the major and minor part of the groovy version excluding the point/patch part of the version.</source>
          <target state="translated">버전의 포인트 / 패치 부분을 제외하고 그루비 버전의 주 및 부 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dfac5764cb45693b2edd3684f34a8d51cb616dc7" translate="yes" xml:space="preserve">
          <source>Returns the major and minor part of the groovy version excluding the point/patch part of the version. E.g. 3.0.0, 3.0.0-SNAPSHOT, 3.0.0-rc-1 all have 3.0 as the short version.</source>
          <target state="translated">버전의 포인트 / 패치 부분을 제외하고 그루비 버전의 주 및 부 부분을 반환합니다. 예 : 3.0.0, 3.0.0-SNAPSHOT, 3.0.0-rc-1은 모두 3.0이 짧은 버전입니다.</target>
        </trans-unit>
        <trans-unit id="b862a0d9305f505cffa5e0d9a46a5163e043cadc" translate="yes" xml:space="preserve">
          <source>Returns the mapping name of child -&amp;gt; parent</source>
          <target state="translated">자식-&amp;gt; 부모의 매핑 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0f54c4d29e584d7d3175085fcf6cf3a60b4be37d" translate="yes" xml:space="preserve">
          <source>Returns the mapping name of parent -&amp;gt; child</source>
          <target state="translated">부모-&amp;gt; 자식의 매핑 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a4d2bb1612fec6c16cde557f208230d537e63d1" translate="yes" xml:space="preserve">
          <source>Returns the meaning of this node.</source>
          <target state="translated">이 노드의 의미를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a951fb3f038f4f07f76ec9840dd874750973f9e6" translate="yes" xml:space="preserve">
          <source>Returns the meaning of this node. If the node isEmpty(), returns the type of Token.NULL.</source>
          <target state="translated">이 노드의 의미를 반환합니다. 노드가 Empty ()이면 Token.NULL 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7aba9604ed2452a6d14787c316dcb65597ed0d10" translate="yes" xml:space="preserve">
          <source>Returns the metaclass for a given class.</source>
          <target state="translated">주어진 클래스의 메타 클래스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="25052c954338df039a2e6547aef62d77a578b74b" translate="yes" xml:space="preserve">
          <source>Returns the method call which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택 맨 위에있는 메서드 호출을 반환하거나 해당 요소가없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1c44dc650ce52c1a439afd927af2339567919f7" translate="yes" xml:space="preserve">
          <source>Returns the method node which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택의 맨 위에있는 메서드 노드를 반환하거나 이러한 요소가 없으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="756b0042d1a0791cb89611eacf21b8066db05037" translate="yes" xml:space="preserve">
          <source>Returns the method pointer for the given object name</source>
          <target state="translated">주어진 객체 이름에 대한 메서드 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41989925a75b2451ccbb7f36dc9680af4f407e04" translate="yes" xml:space="preserve">
          <source>Returns the method(s) which best fit the argument types.</source>
          <target state="translated">인수 유형에 가장 잘 맞는 메서드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="429b08d5c5d6f9ada59cb4120d542c85f50667ce" translate="yes" xml:space="preserve">
          <source>Returns the minutes component of this offset.</source>
          <target state="translated">이 오프셋의 분 구성 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="78d3283df5b97b9ea2cb053641e9e0d6d3cd87d6" translate="yes" xml:space="preserve">
          <source>Returns the minutes component of this offset. If the offset's total seconds are negative, a negative value will be returned.</source>
          <target state="translated">이 오프셋의 분 구성 요소를 반환합니다. 오프셋의 총 초가 음수이면 음수 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e9f7f816fdf3cee20863751d397e3589cb9f4526" translate="yes" xml:space="preserve">
          <source>Returns the modifiers for this method</source>
          <target state="translated">이 메서드의 수정자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6baae3bfb7e9871f1b355e7e027af0e23b55b60" translate="yes" xml:space="preserve">
          <source>Returns the name for the SourceUnit.</source>
          <target state="translated">SourceUnit의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c30714b81f9822991c4fa36c1fa685c9f011fd8" translate="yes" xml:space="preserve">
          <source>Returns the name for the SourceUnit. This name shouldn't be used for controlling the SourceUnit, it is only for error messages</source>
          <target state="translated">SourceUnit의 이름을 반환합니다. 이 이름은 SourceUnit을 제어하는 ​​데 사용해서는 안되며 오류 메시지에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb6546aa2a6f9b4461b514f872189da563c346a8" translate="yes" xml:space="preserve">
          <source>Returns the name of a method without the super trait specific prefix.</source>
          <target state="translated">super trait 특정 접두사가없는 메서드의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f7f4c2059b2ca5947cfbcfc119b2fe45395ca959" translate="yes" xml:space="preserve">
          <source>Returns the name of a method without the super trait specific prefix. If the method name doesn't correspond to a super trait method call, the result will be null.</source>
          <target state="translated">super trait 특정 접두사가없는 메서드의 이름을 반환합니다. 메서드 이름이 super trait 메서드 호출과 일치하지 않으면 결과는 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="a79bbbf11e7bad70330bfc80df9d28699401b375" translate="yes" xml:space="preserve">
          <source>Returns the name of the call site type</source>
          <target state="translated">호출 사이트 유형의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5424852618ca4a9ce61f70af228bb818342d15f6" translate="yes" xml:space="preserve">
          <source>Returns the name of the main class for this configuration.</source>
          <target state="translated">이 구성에 대한 기본 클래스의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecd36811ed100c38f95f7e5b630ad72ebcb46ce8" translate="yes" xml:space="preserve">
          <source>Returns the name of the method represented by this class</source>
          <target state="translated">이 클래스가 나타내는 메소드의 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="917fc0b851f47b30d1e37c7d214aa8e9ddab7469" translate="yes" xml:space="preserve">
          <source>Returns the name of the property that references another node.</source>
          <target state="translated">다른 노드를 참조하는 속성의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b336ec13edade4254e4507950c40dddb8fd40f3" translate="yes" xml:space="preserve">
          <source>Returns the name of the property that will identify the node.</source>
          <target state="translated">노드를 식별 할 속성의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4e86613c7f7ec4db7568f9bb00f5cacab33e0347" translate="yes" xml:space="preserve">
          <source>Returns the name of this GPathResult.</source>
          <target state="translated">이 GPathResult의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8b0331d36045471b8c434c74ed08777cd769cf1" translate="yes" xml:space="preserve">
          <source>Returns the name of this Node.</source>
          <target state="translated">이 노드의 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5c1dd9ced9de0a5b47bd98f0ed5e838f57f46c40" translate="yes" xml:space="preserve">
          <source>Returns the name of this zone formatted according to the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#FULL&quot;&gt;TextStyle.FULL&lt;/a&gt; text style for the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html&quot;&gt;Locale&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html&quot;&gt;Locale&lt;/a&gt; 의 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#FULL&quot;&gt;TextStyle.FULL&lt;/a&gt; 텍스트 스타일 에 따라 서식이 지정된이 영역의 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4bab768983352a2cb5e98de22ff65008eeb401b6" translate="yes" xml:space="preserve">
          <source>Returns the name of this zone formatted according to the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#FULL&quot;&gt;TextStyle.FULL&lt;/a&gt; text style.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#FULL&quot;&gt;TextStyle.FULL&lt;/a&gt; 텍스트 스타일 에 따라 서식이 지정된이 영역의 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0343a20560333238edbcba0ae5ecb7376432c6be" translate="yes" xml:space="preserve">
          <source>Returns the name of this zone formatted according to the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#SHORT&quot;&gt;TextStyle.SHORT&lt;/a&gt; text style for the provided &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html&quot;&gt;Locale&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html&quot;&gt;Locale&lt;/a&gt; 의 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#SHORT&quot;&gt;TextStyle.SHORT&lt;/a&gt; 텍스트 스타일 에 따라 형식이 지정된이 영역의 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c0202db9a18608f0d6c8939b5d2ecc0b5073f968" translate="yes" xml:space="preserve">
          <source>Returns the name of this zone formatted according to the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#SHORT&quot;&gt;TextStyle.SHORT&lt;/a&gt; text style.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/TextStyle.html#SHORT&quot;&gt;TextStyle.SHORT&lt;/a&gt; 텍스트 스타일 에 따라 서식이 지정된이 영역의 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="17d51f84f92c3984da024c491f44c40f927dd4d3" translate="yes" xml:space="preserve">
          <source>Returns the names of Classes and direct subpackages contained in a package.</source>
          <target state="translated">패키지에 포함 된 클래스 및 직접 하위 패키지의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="efc971c93ef556e1e8c2eaaf40a15508feeb9212" translate="yes" xml:space="preserve">
          <source>Returns the namespace mapped to the specified prefix.</source>
          <target state="translated">지정된 접두사에 매핑 된 네임 스페이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f90a1739646bea7e2fa005af4adc22d50e24d8b" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the node (including root).</source>
          <target state="translated">노드의 요소 수 (루트 포함)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="727b1f081841e11525dc84573410bdf506eb6903" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the node.</source>
          <target state="translated">노드의 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46409e03864b9c08ef6b9f0e3ce45460cd0d8ed8" translate="yes" xml:space="preserve">
          <source>Returns the number of errors.</source>
          <target state="translated">오류 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9182404a03fb4d263cdbd5fabe3d01c27d1c3252" translate="yes" xml:space="preserve">
          <source>Returns the number of key-value mappings in this map.</source>
          <target state="translated">이 맵의 키-값 매핑 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20a8fd9d743f9efbdaf07ddae2c07358d692a377" translate="yes" xml:space="preserve">
          <source>Returns the number of non-root elements in the node.</source>
          <target state="translated">노드에서 루트가 아닌 요소의 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac84ba308346b3e2ac1a54aa46feffb8c69e5e27" translate="yes" xml:space="preserve">
          <source>Returns the number of registered runners.</source>
          <target state="translated">등록 된 러너 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5716794ac89864c50fb024620c9851fd2ac75000" translate="yes" xml:space="preserve">
          <source>Returns the number of warnings.</source>
          <target state="translated">경고 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c61e76785ebcda7c2408064365e953297b19042" translate="yes" xml:space="preserve">
          <source>Returns the number, effectively being a noop for numbers.</source>
          <target state="translated">숫자를 반환하여 사실상 숫자에 대한 noop이됩니다.</target>
        </trans-unit>
        <trans-unit id="5a73271514fac68ebe4f5ac31f8c31edcf76aabf" translate="yes" xml:space="preserve">
          <source>Returns the number, effectively being a noop for numbers. Operator overloaded form of the '+' operator when it preceeds a single operand, i.e. &lt;code&gt;+10&lt;/code&gt;</source>
          <target state="translated">숫자를 반환하여 사실상 숫자에 대한 noop이됩니다. 연산자가 단일 피연산자 앞에있을 때 '+'연산자의 오버로드 형식 (예 : &lt;code&gt;+10&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cb8f8193277a46d33e180c0fc1780e54640c90f5" translate="yes" xml:space="preserve">
          <source>Returns the original closure that this method invokes</source>
          <target state="translated">이 메서드가 호출하는 원래 클로저를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42e7470a13711d4abcb6b2f06026242a923f4abf" translate="yes" xml:space="preserve">
          <source>Returns the original iterator after throwing away the first element.</source>
          <target state="translated">첫 번째 요소를 버리고 원래 반복기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f718fe49b7be5934f3af21c889cbae8fb44cab7a" translate="yes" xml:space="preserve">
          <source>Returns the parent of the node.</source>
          <target state="translated">노드의 부모를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca6f5cd4f731a1b52b071d118edb8ae7971a8019" translate="yes" xml:space="preserve">
          <source>Returns the parent of this GPathResult.</source>
          <target state="translated">이 GPathResult의 부모를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9f8e8b8dfa01d4368e2bbee6c846759de435795d" translate="yes" xml:space="preserve">
          <source>Returns the parent of this GPathResult. If this GPathResult has no parent the GPathResult itself is returned. This is no navigation in the XML tree. It is backtracking on the GPath expression chain. It is the behavior of parent() prior to 2.2.0. Backtracking on '..' actually goes down one level in the tree again. find() and findAll() are popped along with the level they have been applied to.</source>
          <target state="translated">이 GPathResult의 부모를 반환합니다. 이 GPathResult에 부모가 없으면 GPathResult 자체가 반환됩니다. 이것은 XML 트리의 탐색이 아닙니다. GPath 표현식 체인에서 역 추적됩니다. 2.2.0 이전의 parent () 동작입니다. '..'에 대한 역 추적은 실제로 트리에서 다시 한 단계 아래로 내려갑니다. find () 및 findAll ()은 적용된 레벨과 함께 팝됩니다.</target>
        </trans-unit>
        <trans-unit id="2b57d92cbb15944b4421b77894dc8ff7922f236d" translate="yes" xml:space="preserve">
          <source>Returns the parent of this Node.</source>
          <target state="translated">이 노드의 부모를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac3fc7479a632cf2adfaab5c1860795f321438b4" translate="yes" xml:space="preserve">
          <source>Returns the parents of this GPathResult as a &lt;code&gt;GPathResult&lt;/code&gt;.</source>
          <target state="translated">리턴 등이 GPathResult의 부모 &lt;code&gt;GPathResult&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="389fa6787d70c31033037e230be82b17661d1418" translate="yes" xml:space="preserve">
          <source>Returns the parents of this GPathResult as a &lt;code&gt;GPathResult&lt;/code&gt;. Warning: The subclasses of this package do not implement this method yet.</source>
          <target state="translated">리턴 등이 GPathResult의 부모 &lt;code&gt;GPathResult&lt;/code&gt; . 경고 :이 패키지의 하위 클래스는 아직이 메서드를 구현하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a79a85b0424c2b855e7d11dd8e01fdf23d4f8437" translate="yes" xml:space="preserve">
          <source>Returns the precedence of the specified operator.</source>
          <target state="translated">지정된 연산자의 우선 순위를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1fc47debe36fe8806df50ade167ece5ddf2e7224" translate="yes" xml:space="preserve">
          <source>Returns the precedence of the specified operator. Non-operator's will receive -1 or a GroovyBugError, depending on your preference.</source>
          <target state="translated">지정된 연산자의 우선 순위를 반환합니다. 비 연산자는 선호도에 따라 -1 또는 GroovyBugError를 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="6bf6050da468a158f6d59c41ed7db5b432cd5200" translate="yes" xml:space="preserve">
          <source>Returns the prefix mapped to this namespace</source>
          <target state="translated">이 네임 스페이스에 매핑 된 접두사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="299b887ddb0bfdf2e14f29fe050054abfa57d973" translate="yes" xml:space="preserve">
          <source>Returns the proper type's class name when a short version is provided (i.e.</source>
          <target state="translated">짧은 버전이 제공되면 적절한 유형의 클래스 이름을 반환합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="e4be1761aea964bcbeeeca1872622043518ddd0d" translate="yes" xml:space="preserve">
          <source>Returns the proper type's class name when a short version is provided (i.e. String returns java.lang.String)</source>
          <target state="translated">짧은 버전이 제공되면 적절한 유형의 클래스 이름을 반환합니다 (예 : String이 java.lang.String을 반환 함).</target>
        </trans-unit>
        <trans-unit id="0964ded125c882f794069089b14e6492cfb6b787" translate="yes" xml:space="preserve">
          <source>Returns the property name, e.g. age, given an accessor name, e.g. getAge.</source>
          <target state="translated">접근 자 이름 (예 : getAge)이 제공된 속성 이름 (예 : age)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79c88fe53cbcf49fafff82cd82cfb1bce6c98b56" translate="yes" xml:space="preserve">
          <source>Returns the property name, e.g. age, given an accessor name, e.g. getAge. Returns the original if a valid prefix cannot be removed.</source>
          <target state="translated">접근 자 이름 (예 : getAge)이 제공된 속성 이름 (예 : age)을 반환합니다. 유효한 접두사를 제거 할 수없는 경우 원본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ea8690e9bfe3890cea006bed130a79f0c539a07" translate="yes" xml:space="preserve">
          <source>Returns the raw data associated with the current benchmark run.</source>
          <target state="translated">현재 벤치 마크 실행과 관련된 원시 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8501107a68885b6c0029e1fb2883b0e6dd900a58" translate="yes" xml:space="preserve">
          <source>Returns the registered runner for the specified key.</source>
          <target state="translated">지정된 키에 대해 등록 된 러너를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cdd0a7b95dcb891fe63e1327668acf42f5b248fa" translate="yes" xml:space="preserve">
          <source>Returns the registry for this metaclass</source>
          <target state="translated">이 메타 클래스의 레지스트리를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9300b4dc98d7d4ea7a32ba32d1a1b18890a89078" translate="yes" xml:space="preserve">
          <source>Returns the requested error tolerance.</source>
          <target state="translated">요청 된 오류 허용 오차를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="541c9263de646a3278da60725f2563dc7e566a60" translate="yes" xml:space="preserve">
          <source>Returns the result of calling a closure with the first occurrence of a compiled regular expression found within a String.</source>
          <target state="translated">문자열 내에서 처음 발견 된 컴파일 된 정규식으로 클로저를 호출 한 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9993656255a01a846f55c41ae8bf3257f5fa28d" translate="yes" xml:space="preserve">
          <source>Returns the result of calling a closure with the first occurrence of a compiled regular expression found within a String. If the regex doesn't match, the closure will not be called and find will return null.</source>
          <target state="translated">문자열 내에서 처음 발견 된 컴파일 된 정규식으로 클로저를 호출 한 결과를 반환합니다. 정규식이 일치하지 않으면 클로저가 호출되지 않고 find가 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="091857f1986b05dd6d40e5acea6a443766a196b6" translate="yes" xml:space="preserve">
          <source>Returns the result of calling a closure with the first occurrence of a regular expression found within a CharSequence.</source>
          <target state="translated">CharSequence에서 찾은 정규식의 첫 번째 발생으로 클로저를 호출 한 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="505cf29cb2584e1a46a98855fdda9e0ed2c2f844" translate="yes" xml:space="preserve">
          <source>Returns the result of calling a closure with the first occurrence of a regular expression found within a CharSequence. If the regex doesn't match, the closure will not be called and find will return null.</source>
          <target state="translated">CharSequence에서 찾은 정규식의 첫 번째 발생으로 클로저를 호출 한 결과를 반환합니다. 정규식이 일치하지 않으면 클로저가 호출되지 않고 find가 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aae4c95d6c21d637622b7ae4f100e2cd1e527109" translate="yes" xml:space="preserve">
          <source>Returns the root of the node, the Token that indicates its type.</source>
          <target state="translated">노드의 루트, 그 유형을 나타내는 토큰을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5188635fb36ea44baa0cd5443e76e930a9ff9c1d" translate="yes" xml:space="preserve">
          <source>Returns the root of the node, the Token that indicates its type. Returns a Token.NULL if safe and the actual root is null.</source>
          <target state="translated">노드의 루트, 그 유형을 나타내는 토큰을 리턴합니다. 안전하고 실제 루트가 null 인 경우 Token.NULL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b303ec68dce8d5b582e76af6c6f0df9e30b5c0c9" translate="yes" xml:space="preserve">
          <source>Returns the root of the node, the Token that indicates its type. Returns null if there is no root (usually only if the node is a placeholder of some kind -- see isEmpty()).</source>
          <target state="translated">노드의 루트, 그 유형을 나타내는 토큰을 리턴합니다. 루트가 없으면 null을 반환합니다 (보통 노드가 일종의 자리 표시자인 경우에만-isEmpty () 참조).</target>
        </trans-unit>
        <trans-unit id="52372b765ccdc096a91bc0107fabc03baab5d3b2" translate="yes" xml:space="preserve">
          <source>Returns the root of the node.</source>
          <target state="translated">노드의 루트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a997dedbad34c56e92be1a7809e19ce02501c7fe" translate="yes" xml:space="preserve">
          <source>Returns the root of the node. By convention, all nodes have a Token as the first element (or root), which indicates the type of the node. May return null if the node &lt;code&gt;isEmpty()&lt;/code&gt;.</source>
          <target state="translated">노드의 루트를 반환합니다. 규칙에 따라 모든 노드는 노드 유형을 나타내는 첫 번째 요소 (또는 루트)로 토큰을 갖습니다. 노드가 &lt;code&gt;isEmpty()&lt;/code&gt; 경우 null을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1f8d29b00fe943e2f665ef023fe365ea3ff67a2" translate="yes" xml:space="preserve">
          <source>Returns the rowfill.</source>
          <target state="translated">rowfill을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01d45b3ab471ec900245cae6d705337f7e7f8553" translate="yes" xml:space="preserve">
          <source>Returns the seconds component of this offset.</source>
          <target state="translated">이 오프셋의 초 구성 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="229f9b12473e67c47736b689d36a8b67dab2a0c9" translate="yes" xml:space="preserve">
          <source>Returns the seconds component of this offset. This is not the same as the total seconds. For example:</source>
          <target state="translated">이 오프셋의 초 구성 요소를 반환합니다. 이것은 총 초와 동일하지 않습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2cc8af1275cd0eb205a2dc80a2560ab822b73b6b" translate="yes" xml:space="preserve">
          <source>Returns the signature of this method</source>
          <target state="translated">이 메서드의 서명을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3d321db785c42e410649f0ae8f59e443211e65d0" translate="yes" xml:space="preserve">
          <source>Returns the single abstract method of a class node, if it is a SAM type, or null otherwise.</source>
          <target state="translated">SAM 유형이면 클래스 노드의 단일 추상 메서드를 반환하고 그렇지 않으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3265a5bfff20282da365e5f794fc8885abcb1f7" translate="yes" xml:space="preserve">
          <source>Returns the singular BytecodeInstruction.</source>
          <target state="translated">단일 BytecodeInstruction을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d74477e9042de74153118a986f70365920436a70" translate="yes" xml:space="preserve">
          <source>Returns the size of this Attribute, which is always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">이 속성의 크기 (항상 &lt;code&gt;1&lt;/code&gt; )를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="cd9a8d8e8ebd0ea15f326fffad78df6090880c33" translate="yes" xml:space="preserve">
          <source>Returns the size of this GPathResult.</source>
          <target state="translated">이 GPathResult의 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ce80c063f22c0eab7dbec3c77c0f1394d5390a2f" translate="yes" xml:space="preserve">
          <source>Returns the specified Property of this GPathResult.</source>
          <target state="translated">이 GPathResult의 지정된 Property를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8980707dc110b3f6c5526132db54d592368ea922" translate="yes" xml:space="preserve">
          <source>Returns the specified element, or Token.NULL if safe is set and the specified element is null (or doesn't exist).</source>
          <target state="translated">지정된 요소를 반환하거나 safe가 설정되어 있고 지정된 요소가 null (또는 존재하지 않는 경우) 인 경우 Token.NULL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d92ef269b8b9b14d5ee044823319f32c5643d0b0" translate="yes" xml:space="preserve">
          <source>Returns the specified element, or null.</source>
          <target state="translated">지정된 요소 또는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1d9a919ef6803fc842e8f3166ea451f3c5007370" translate="yes" xml:space="preserve">
          <source>Returns the specified error message, or null.</source>
          <target state="translated">지정된 오류 메시지 또는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dac857768cf0643a53f93684454e8d5716b3feb5" translate="yes" xml:space="preserve">
          <source>Returns the specified error's underlying Exception, or null if it isn't one.</source>
          <target state="translated">지정된 오류의 기본 Exception을 반환하거나 오류가 아닌 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46ab1098e2fa06a904a6fa7db978b0b3de77b9c3" translate="yes" xml:space="preserve">
          <source>Returns the specified error's underlying SyntaxException, or null if it isn't one.</source>
          <target state="translated">지정된 오류의 기본 SyntaxException을 반환하거나 오류가 아닌 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4f35d62d1b3324366cb01c7738b4bbaeac05594d" translate="yes" xml:space="preserve">
          <source>Returns the specified warning message, or null.</source>
          <target state="translated">지정된 경고 메시지 또는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="014145636ee24561be22e930027a4463256c2aa0" translate="yes" xml:space="preserve">
          <source>Returns the starting column of the node.</source>
          <target state="translated">노드의 시작 열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5060d112e96fa4276317ba80912d783e1b40521c" translate="yes" xml:space="preserve">
          <source>Returns the starting column of the node. Returns -1 if not known.</source>
          <target state="translated">노드의 시작 열을 반환합니다. 알 수없는 경우 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c388a6b83a88b3f743b2e626639aaa41bc9e1d03" translate="yes" xml:space="preserve">
          <source>Returns the starting line of the node.</source>
          <target state="translated">노드의 시작 라인을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="88427c7b81c97454a9b0878759263cddf64997de" translate="yes" xml:space="preserve">
          <source>Returns the starting line of the node. Returns -1 if not known.</source>
          <target state="translated">노드의 시작 라인을 반환합니다. 알 수없는 경우 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="806771c163f6b425c1c6934344a0393abc63e75a" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given array.</source>
          <target state="translated">주어진 배열의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="829e6fc592e04cd1b395e658d0c20cf5662316e2" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given array. The string displays the contents of the array, similar to an array literal, i.e. &lt;code&gt;{1, 2, &quot;a&quot;}&lt;/code&gt;.</source>
          <target state="translated">주어진 배열의 문자열 표현을 반환합니다. 문자열은 배열 리터럴과 유사하게 배열의 내용을 표시합니다 (예 : &lt;code&gt;{1, 2, &quot;a&quot;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce897476161da69b4e7fb934c26a37d2586d9ef6" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given collection.</source>
          <target state="translated">주어진 컬렉션의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b52544fc76b4e85c54535a5e8e2b00a5a0398eff" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given collection. The string displays the contents of the collection, i.e. &lt;code&gt;[1, 2, a]&lt;/code&gt;.</source>
          <target state="translated">주어진 컬렉션의 문자열 표현을 반환합니다. 문자열은 컬렉션의 내용을 표시합니다 (예 : &lt;code&gt;[1, 2, a]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="194f53c9631c45de6d085626d174640c3b08d064" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given list.</source>
          <target state="translated">주어진 목록의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9491191f35a8e7c1966244743f00bd0888171f26" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given list. The string displays the contents of the list, similar to a list literal, i.e. &lt;code&gt;[1, 2, a]&lt;/code&gt;.</source>
          <target state="translated">주어진 목록의 문자열 표현을 반환합니다. 문자열은 목록 리터럴과 유사하게 목록의 내용을 표시합니다 (예 : &lt;code&gt;[1, 2, a]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3dcbf554a7edd56b168845cc9b5a27d7c1d1ddc6" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given map.</source>
          <target state="translated">주어진지도의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66268984f904d7e69e6bc281b8354aa912e2ea2c" translate="yes" xml:space="preserve">
          <source>Returns the string representation of this array's contents.</source>
          <target state="translated">이 배열 내용의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42bf897848a62aef738cbdcdc8d7724751b49f7b" translate="yes" xml:space="preserve">
          <source>Returns the string representation of this map.</source>
          <target state="translated">이 맵의 문자열 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed0ec9918da4ae8cfa164e6cee3ef465a971e6ec" translate="yes" xml:space="preserve">
          <source>Returns the string representation of this map. The string displays the contents of the map, i.e. &lt;code&gt;[one:1, two:2, three:3]&lt;/code&gt;.</source>
          <target state="translated">이 맵의 문자열 표현을 반환합니다. 문자열은지도의 내용을 표시합니다. 즉 &lt;code&gt;[one:1, two:2, three:3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bec5a4511ab39d92d7917d54b179c12afa65bac5" translate="yes" xml:space="preserve">
          <source>Returns the switch statement which is on the top of the stack, or null if there's no such element.</source>
          <target state="translated">스택 맨 위에있는 switch 문을 반환하거나 해당 요소가 없으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ace46604c0905ac42863d0306abb9ffd9ce431b" translate="yes" xml:space="preserve">
          <source>Returns the text for the specified type.</source>
          <target state="translated">지정된 유형의 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b1fc59ae20bae4af7f6ce7361232a85fe0f9d59" translate="yes" xml:space="preserve">
          <source>Returns the text for the specified type. Returns &quot;&quot; if the text isn't found.</source>
          <target state="translated">지정된 유형의 텍스트를 반환합니다. 텍스트를 찾을 수 없으면 &quot;&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2e59bd8f7ed42f11eaebbb9ff0901087ba78e11" translate="yes" xml:space="preserve">
          <source>Returns the text of the root node.</source>
          <target state="translated">루트 노드의 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e5c84a0fc7df78a441e282a140872856d6f61846" translate="yes" xml:space="preserve">
          <source>Returns the text of the root node. Uses &lt;code&gt;getRoot(true)&lt;/code&gt; to get the root, so you will only receive null in return if the root token returns it.</source>
          <target state="translated">루트 노드의 텍스트를 반환합니다. &lt;code&gt;getRoot(true)&lt;/code&gt; 를 사용 하여 루트를 가져 오므로 루트 토큰이 반환하는 경우에만 null을 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="8b68203a54466e1e88dadf5f8659353d10f02f4e" translate="yes" xml:space="preserve">
          <source>Returns the text of the root.</source>
          <target state="translated">루트의 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d26158b1dae7d74537989fa0384b04f5254249c1" translate="yes" xml:space="preserve">
          <source>Returns the text of the root. Uses &lt;code&gt;getRoot(true)&lt;/code&gt; to get the root, so you will only receive null in return if the root token returns it.</source>
          <target state="translated">루트의 텍스트를 반환합니다. &lt;code&gt;getRoot(true)&lt;/code&gt; 를 사용 하여 루트를 가져 오므로 루트 토큰이 반환하는 경우에만 null을 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="dbe8c60924cee6604b87cd604631c90499de6e58" translate="yes" xml:space="preserve">
          <source>Returns the text of the token.</source>
          <target state="translated">토큰의 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="05da9161a5982d3020b615ecabdf62c9b01f9408" translate="yes" xml:space="preserve">
          <source>Returns the text of the token. Equivalent to &lt;code&gt;getRootText()&lt;/code&gt; when called directly.</source>
          <target state="translated">토큰의 텍스트를 반환합니다. 직접 호출되는 경우 &lt;code&gt;getRootText()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="faeb28d9b2073d70ce3736e11c6e6a2012e02023" translate="yes" xml:space="preserve">
          <source>Returns the text of this GPathResult as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 GPathResult의 텍스트를 &lt;code&gt;String&lt;/code&gt; 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5cd069860515d64db8e68330a43d9b27aab702ef" translate="yes" xml:space="preserve">
          <source>Returns the text of this GPathResult.</source>
          <target state="translated">이 GPathResult의 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7bbef052f895f01897a2019f7a9679684432b4db" translate="yes" xml:space="preserve">
          <source>Returns the text value of all of the elements in the collection.</source>
          <target state="translated">컬렉션에있는 모든 요소의 텍스트 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8fce634c7ff856e0602e4c3a10b6ce152fda326e" translate="yes" xml:space="preserve">
          <source>Returns the textual representation of the current node and all its child nodes.</source>
          <target state="translated">현재 노드와 모든 자식 노드의 텍스트 표현을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86d8c111815cff381ce09656f7eef27b8a5da774" translate="yes" xml:space="preserve">
          <source>Returns the type checker information protocol number.</source>
          <target state="translated">유형 검사기 정보 프로토콜 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3bcd7d3e2b5e10f93c3df1994e380e39a007795" translate="yes" xml:space="preserve">
          <source>Returns the type checker information protocol number. This is used if the format of the string used in &lt;a href=&quot;#inferredType()&quot;&gt;inferredType()&lt;/a&gt; changes.</source>
          <target state="translated">유형 검사기 정보 프로토콜 번호를 반환합니다. &lt;a href=&quot;#inferredType()&quot;&gt;inferredType ()&lt;/a&gt; 에서 사용되는 문자열의 형식이 변경된 경우 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="2eca4e5326e20dc384f9494593cab02811eb1eb8" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified keyword text.</source>
          <target state="translated">지정된 키워드 텍스트의 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="98975f41f0b4d1997a212ae3f527747209803e08" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified keyword text. Returns UNKNOWN if the text isn't found.</source>
          <target state="translated">지정된 키워드 텍스트의 유형을 반환합니다. 텍스트를 찾을 수없는 경우 UNKNOWN을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b921dd56a6e60e180f4b7fae06f377dcaffa7f5" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified symbol text.</source>
          <target state="translated">지정된 기호 텍스트의 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2fb90321d2da5469f1bfa0a89e29ff1cc25a1be4" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified symbol text. Returns UNKNOWN if the text isn't found.</source>
          <target state="translated">지정된 기호 텍스트의 유형을 반환합니다. 텍스트를 찾을 수없는 경우 UNKNOWN을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="369b733b506418652931f1e11640a1edd09e0e57" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified symbol/keyword text.</source>
          <target state="translated">지정된 기호 / 키워드 텍스트의 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e6807d096554d7ac2c99358f3febbf68e4687462" translate="yes" xml:space="preserve">
          <source>Returns the type for the specified symbol/keyword text. Returns UNKNOWN if the text isn't found. You can filter finds on a type.</source>
          <target state="translated">지정된 기호 / 키워드 텍스트의 유형을 반환합니다. 텍스트를 찾을 수없는 경우 UNKNOWN을 반환합니다. 유형에서 찾은 항목을 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f748797e3928c976c6b07bc017a9963faabd0b30" translate="yes" xml:space="preserve">
          <source>Returns the type which was used when this variable expression was created.</source>
          <target state="translated">이 변수 표현식을 만들 때 사용 된 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3a9c1b7d5a29a8f1d904d5d050d5b74fd2e231ed" translate="yes" xml:space="preserve">
          <source>Returns the type which was used when this variable expression was created. For example, &lt;a href=&quot;#getType()&quot;&gt;getType()&lt;/a&gt; may return a boxed type while this method would return the primitive type.</source>
          <target state="translated">이 변수 표현식을 만들 때 사용 된 유형을 반환합니다. 예를 들어, &lt;a href=&quot;#getType()&quot;&gt;getType ()&lt;/a&gt; 은 boxed 유형을 반환 할 수 있지만이 메서드는 기본 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6dbafb2bc0957575b618ecef660954552c2a6efa" translate="yes" xml:space="preserve">
          <source>Returns the underlieng integer Phase number.</source>
          <target state="translated">기본 정수 위상 번호를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="80641e6368a7a14c97cfd1a36330f46197d79e53" translate="yes" xml:space="preserve">
          <source>Returns the underlying Exception.</source>
          <target state="translated">기본 예외를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3958c38154a2fe1b437f68ca91ac4527ce681a3a" translate="yes" xml:space="preserve">
          <source>Returns the underlying SyntaxException.</source>
          <target state="translated">기본 SyntaxException을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b50d77e994a71df61e130c7e37b6f3fa2786eb83" translate="yes" xml:space="preserve">
          <source>Returns the underlying builder.</source>
          <target state="translated">기본 빌더를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="131955ad782982fb44635655fde1eece021af3b5" translate="yes" xml:space="preserve">
          <source>Returns the updateCount.</source>
          <target state="translated">updateCount를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fef2547b0c389f0e281d7a36eeef5e790a023e5f" translate="yes" xml:space="preserve">
          <source>Returns the value of this Attribute.</source>
          <target state="translated">이 속성의 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bb0df94b2e3b1962641f59d673db79d1060554c5" translate="yes" xml:space="preserve">
          <source>Returns the value stored for the given key at the point of call.</source>
          <target state="translated">호출 지점에서 지정된 키에 대해 저장된 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="592a0f4dae2a080dd2d2c9e3a0bd2a902ba90595" translate="yes" xml:space="preserve">
          <source>Returns the value to which the specified key is mapped in this table.</source>
          <target state="translated">이 테이블에서 지정된 키가 매핑되는 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="110e823a6a72e1b8c5aad31d7367da08cda8c464" translate="yes" xml:space="preserve">
          <source>Returns the value to which the specified key is mapped, or &lt;code&gt;null&lt;/code&gt; if this map contains no mapping for the key.</source>
          <target state="translated">지정된 키가 매핑되는 값을 반환하거나이 맵에 키에 대한 매핑 이 &lt;code&gt;null&lt;/code&gt; 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7c4052d454103f2ae4ce3e5d3d8ae5db46194516" translate="yes" xml:space="preserve">
          <source>Returns the value to which the specified key is mapped, or &lt;code&gt;null&lt;/code&gt; if this map contains no mapping for the key. This method differs from &lt;a href=&quot;#get(java.lang.Object)&quot;&gt;get(Object)&lt;/a&gt; in that it does not record the operation with the page replacement policy.</source>
          <target state="translated">지정된 키가 매핑되는 값을 반환하거나이 맵에 키에 대한 매핑 이 &lt;code&gt;null&lt;/code&gt; 경우 null을 반환합니다. 이 메서드는 페이지 교체 정책으로 작업을 기록하지 않는다는 점에서 &lt;a href=&quot;#get(java.lang.Object)&quot;&gt;get (Object)&lt;/a&gt; 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="6d4379d33098e02ecb03e6a197c6918946330837" translate="yes" xml:space="preserve">
          <source>Returns the verbosity level.</source>
          <target state="translated">상세 수준을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca98e5e18699f2b90926c8702c5f4f078fb8ac2b" translate="yes" xml:space="preserve">
          <source>Returns the weighted size of this map.</source>
          <target state="translated">이지도의 가중 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e5606546c4249f291852b5de9d6de8a3899dea36" translate="yes" xml:space="preserve">
          <source>Returns the writer associated with this interceptor.</source>
          <target state="translated">이 인터셉터와 관련된 작성기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="58ff7c418683d9030d6f178d2992b86334881d64" translate="yes" xml:space="preserve">
          <source>Returns true for default constructors added by the compiler.</source>
          <target state="translated">컴파일러가 추가 한 기본 생성자에 대해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b98a3249ba8536ec94a9373977f50f9ace8ed13" translate="yes" xml:space="preserve">
          <source>Returns true for expressions of the form x[...]</source>
          <target state="translated">x [...] 형식의 표현식에 대해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e1d68c2b4048f4eed608ec911c9c0f41b3d4b5b" translate="yes" xml:space="preserve">
          <source>Returns true if a CharSequence only contains whitespace characters.</source>
          <target state="translated">CharSequence에 공백 문자 만 포함 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43bac0e6b7eb6c18438ed5972ab2f37d36693acc" translate="yes" xml:space="preserve">
          <source>Returns true if a class node makes use of generic types.</source>
          <target state="translated">클래스 노드가 제네릭 유형을 사용하는 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a25a96a8b2dcc0588c7dd70a8cdec4ab7cab0ae9" translate="yes" xml:space="preserve">
          <source>Returns true if a class node makes use of generic types. If the class node represents an array type, then checks if the component type is using generics.</source>
          <target state="translated">클래스 노드가 제네릭 유형을 사용하는 경우 true를 반환합니다. 클래스 노드가 배열 유형을 나타내는 경우 구성 요소 유형이 제네릭을 사용하고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1b7397fae89cd7586eac0aa941e8f5fe112685e2" translate="yes" xml:space="preserve">
          <source>Returns true if a warning would be relevant to the specified level.</source>
          <target state="translated">경고가 지정된 수준과 관련된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cf22b2acc0dee054834c0d764e0970e86e35d29" translate="yes" xml:space="preserve">
          <source>Returns true if debugging operation has been requested.</source>
          <target state="translated">디버깅 작업이 요청 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="588961cb1997f08b142412ba8a1aa05f8039234c" translate="yes" xml:space="preserve">
          <source>Returns true if parameter metadata generation has been enabled.</source>
          <target state="translated">매개 변수 메타 데이터 생성이 활성화 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20566d9b16b927b74db25f52b41a21c8c441ed6f" translate="yes" xml:space="preserve">
          <source>Returns true if preview features has been enabled.</source>
          <target state="translated">미리보기 기능이 활성화 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f63f68755ade2104c8c8409853a999492df190e8" translate="yes" xml:space="preserve">
          <source>Returns true if references can be resolved lazily</source>
          <target state="translated">참조를 느리게 해결할 수 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6652ae8882a953b1acc38ec4924df8df226aa354" translate="yes" xml:space="preserve">
          <source>Returns true if the GPathResult is empty, i.e. if, and only if, &lt;code&gt;size()&lt;/code&gt; is 0.</source>
          <target state="translated">GPathResult가 비어있는 경우, 즉 &lt;code&gt;size()&lt;/code&gt; 가 0 인 경우에만 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44495e3ffbe65cbdfc2b67824221bd5eace634db" translate="yes" xml:space="preserve">
          <source>Returns true if the MetaClass has the given property</source>
          <target state="translated">MetaClass에 주어진 속성이 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9428fd1e8bc3bc31e3b1b105d1ca79a053a66937" translate="yes" xml:space="preserve">
          <source>Returns true if the class node represents a the class node for the Class class and if the parametrized type is a neither a placeholder or a wildcard.</source>
          <target state="translated">클래스 노드가 클래스 클래스의 클래스 노드를 나타내고 매개 변수화 된 유형이 자리 표시 자나 와일드 카드가 아닌 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aab11849bde48c41a04f6da87778bdc163564d5f" translate="yes" xml:space="preserve">
          <source>Returns true if the class node represents a the class node for the Class class and if the parametrized type is a neither a placeholder or a wildcard. For example, the class node Class&amp;lt;Foo&amp;gt; where Foo is a class would return true, but the class node for Class&amp;lt;?&amp;gt; would return false.</source>
          <target state="translated">클래스 노드가 클래스 클래스의 클래스 노드를 나타내고 매개 변수화 된 유형이 자리 표시 자나 와일드 카드가 아닌 경우 true를 반환합니다. 예를 들어, Foo가 클래스 인 클래스 노드 Class &amp;lt;Foo&amp;gt;는 true를 반환하지만 Class &amp;lt;?&amp;gt;의 클래스 노드는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="17f0ff1d156191cb1f45648430d571450aaab5f0" translate="yes" xml:space="preserve">
          <source>Returns true if the current Sql object is currently executing a withBatch method call.</source>
          <target state="translated">현재 Sql 개체가 현재 withBatch 메서드 호출을 실행중인 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f55c6944ce37f4bfc1c00e126d4a47479230dc44" translate="yes" xml:space="preserve">
          <source>Returns true if the given method has a possibly matching static method with the given name and arguments.</source>
          <target state="translated">주어진 메서드에 주어진 이름 및 인수와 일치 할 수있는 정적 메서드가있는 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b158030c73b97ca4a1049c92269e12c5f99bd715" translate="yes" xml:space="preserve">
          <source>Returns true if the given method has a possibly matching static method with the given name and arguments. Handles default arguments and optionally spread expressions.</source>
          <target state="translated">주어진 메서드에 주어진 이름 및 인수와 일치 할 수있는 정적 메서드가있는 경우 true를 반환합니다. 기본 인수 및 선택적으로 확산 식을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="70c86936a56b389697d7e3634a2d09f1dfc0353b" translate="yes" xml:space="preserve">
          <source>Returns true if the modifiers flags contain a visibility modifier</source>
          <target state="translated">수정 자 플래그에 가시성 수정자가 포함 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a9b3d1bba0f6f96654bd0b2d66bf30a81084a83" translate="yes" xml:space="preserve">
          <source>Returns true if the node can be coerced to the specified type.</source>
          <target state="translated">노드가 지정된 유형으로 강제 변환 될 수있는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9f0a281574912e195066de92ebb3808642a5e7e6" translate="yes" xml:space="preserve">
          <source>Returns true if the node has any non-root elements.</source>
          <target state="translated">노드에 루트가 아닌 요소가 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="97c25cc8aff5ed486c414b6e07d1c1cbc4f52310" translate="yes" xml:space="preserve">
          <source>Returns true if the node is a complete expression.</source>
          <target state="translated">노드가 완전한 표현식이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76e5ee021fa4373f341b6d89f2b62a2bf82df406" translate="yes" xml:space="preserve">
          <source>Returns true if the node is completely empty (no root, even).</source>
          <target state="translated">노드가 완전히 비어 있으면 참을 반환합니다 (루트 없음, 짝수).</target>
        </trans-unit>
        <trans-unit id="8589613abe3f318656e12d769cb51589cf1df86d" translate="yes" xml:space="preserve">
          <source>Returns true if the node's meaning matches all of the specified types.</source>
          <target state="translated">노드의 의미가 지정된 모든 유형과 일치하면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="531e8d3f40807b5cc1d225565fbbb1c7e45eef81" translate="yes" xml:space="preserve">
          <source>Returns true if the node's meaning matches any of the specified types.</source>
          <target state="translated">노드의 의미가 지정된 유형 중 하나와 일치하면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69b2a7eecd5978489b8a23db375d229157d58440" translate="yes" xml:space="preserve">
          <source>Returns true if the node's meaning matches the specified type.</source>
          <target state="translated">노드의 의미가 지정된 유형과 일치하면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27b414792bd77c58cdce1d788a809414f9b3bbb3" translate="yes" xml:space="preserve">
          <source>Returns true if the provided class node, when considered as a receiver of a message or as a parameter, is using a placeholder in its generics type.</source>
          <target state="translated">제공된 클래스 노드가 메시지의 수신자 또는 매개 변수로 간주 될 때 제네릭 유형에서 플레이스 홀더를 사용하는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8ff6e4ca5078b44b4870947f3133e2e899f6c2f8" translate="yes" xml:space="preserve">
          <source>Returns true if the provided class node, when considered as a receiver of a message or as a parameter, is using a placeholder in its generics type. In this case, we're facing unchecked generics and type checking is limited (ex: void foo(Set s) { s.keySet() }</source>
          <target state="translated">제공된 클래스 노드가 메시지의 수신자 또는 매개 변수로 간주 될 때 제네릭 유형에서 플레이스 홀더를 사용하는 경우 true를 리턴합니다. 이 경우, 우리는 검사되지 않은 제네릭에 직면하고 있으며 유형 검사가 제한됩니다 (예 : void foo (Set s) {s.keySet ()}</target>
        </trans-unit>
        <trans-unit id="b910d9fd212f6d2e300a926f47540fc14a85e7ef" translate="yes" xml:space="preserve">
          <source>Returns true if the source can be restarted (ie. if getReader() will return non-null on subsequent calls.</source>
          <target state="translated">소스를 다시 시작할 수 있으면 true를 반환합니다 (즉, getReader ()가 후속 호출에서 null이 아닌 값을 반환하는 경우).</target>
        </trans-unit>
        <trans-unit id="fa8589f3d41e54a0c7385587730bd7dd579ef330" translate="yes" xml:space="preserve">
          <source>Returns true if the specific character is a base-8 digit.</source>
          <target state="translated">특정 문자가 8 진수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f09d04152be133dd615c48d9d7cf563707d2ce02" translate="yes" xml:space="preserve">
          <source>Returns true if the specified character is a base-10 digit.</source>
          <target state="translated">지정된 문자가 10 진수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c56a3858380387eea303e4496f2d6427babe6af" translate="yes" xml:space="preserve">
          <source>Returns true if the specified character is a base-16 digit.</source>
          <target state="translated">지정된 문자가 16 진수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="65d5da74593c622a74cfc10266846c2c2770569f" translate="yes" xml:space="preserve">
          <source>Returns true if the specified character is a valid type specifier for a numeric value.</source>
          <target state="translated">지정된 문자가 숫자 값에 대해 유효한 형식 지정자이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e4a14eea3eca039cd72cb636ff8eafea936305a" translate="yes" xml:space="preserve">
          <source>Returns true if the specified class is a trait.</source>
          <target state="translated">지정된 클래스가 트레이 트이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8eebd9b438e2b5a5f9a4740d4d84927ecc103c5f" translate="yes" xml:space="preserve">
          <source>Returns true if the specified class node is a trait.</source>
          <target state="translated">지정된 클래스 노드가 트레이 트이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="999a440738ebe860f666a882c85201c746cd59a2" translate="yes" xml:space="preserve">
          <source>Returns true if the specified class node is annotated with the &lt;a href=&quot;../../../../../groovy/transform/trait&quot;&gt;Trait&lt;/a&gt; interface.</source>
          <target state="translated">지정된 클래스 노드가 &lt;a href=&quot;../../../../../groovy/transform/trait&quot;&gt;Trait&lt;/a&gt; 인터페이스로 주석 처리 된 경우 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e587787673e529609d04c8d85f6bce46c7c12408" translate="yes" xml:space="preserve">
          <source>Returns true if the two classes share the same compilation unit.</source>
          <target state="translated">두 클래스가 동일한 컴파일 단위를 공유하는 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3556efdd74161c45e5b7744a273ec403442a720" translate="yes" xml:space="preserve">
          <source>Returns true if there are any errors pending.</source>
          <target state="translated">보류중인 오류가 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71f5ab233de68f4f7e1d3950a4bd90142a463b96" translate="yes" xml:space="preserve">
          <source>Returns true if there are any warnings pending.</source>
          <target state="translated">보류중인 경고가 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="217d3521b6d76bfdae9e3782e8dd97b4d90c1e8a" translate="yes" xml:space="preserve">
          <source>Returns true if this duration is positive, excluding zero.</source>
          <target state="translated">이 기간이 0을 제외하고 양수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8a7836f30fe390184c011f67ceab5924dd659a99" translate="yes" xml:space="preserve">
          <source>Returns true if this duration is zero or negative.</source>
          <target state="translated">이 기간이 0이거나 음수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e156161b945f3e44a34e9e8d8aa14ac5eec184ea" translate="yes" xml:space="preserve">
          <source>Returns true if this duration is zero or positive.</source>
          <target state="translated">이 기간이 0이거나 양수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e703c7b31fa2ccbbb94718f1936ae190c597ff36" translate="yes" xml:space="preserve">
          <source>Returns true if this message is as or more important than the specified importance level.</source>
          <target state="translated">이 메시지가 지정된 중요도 수준 이상이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2da432e4c60ef0f6074593c26bbaf8a1188162ba" translate="yes" xml:space="preserve">
          <source>Returns true if this period is positive, excluding zero.</source>
          <target state="translated">이 기간이 0을 제외하고 양수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1016ecd6041fda37a721e20be7d1f221f3016321" translate="yes" xml:space="preserve">
          <source>Returns true if this period is zero or negative.</source>
          <target state="translated">이 기간이 0이거나 음수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71f72bfa4a5460fabcec6bcad06e4d4020a73090" translate="yes" xml:space="preserve">
          <source>Returns true if this period is zero or positive.</source>
          <target state="translated">이 기간이 0이거나 양수이면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3fe5be5036ac53ed6abb639de944d485b2763aaf" translate="yes" xml:space="preserve">
          <source>Returns true if this this metamethod represents the same method as the argument.</source>
          <target state="translated">이 메타 메서드가 인수와 동일한 메소드를 나타내는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bef2771076ae0ca9866f8dad49bd5909dab30318" translate="yes" xml:space="preserve">
          <source>Returns true if type is assignable to the value's class, false if value is null or a String.</source>
          <target state="translated">유형이 값의 클래스에 할당 가능한 경우 true를 반환하고 값이 null 또는 문자열이면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecb2632115c6ae8ce970624b35ab7f085c8ada58" translate="yes" xml:space="preserve">
          <source>Returns true if verbose operation has been requested.</source>
          <target state="translated">자세한 작업이 요청 된 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2ddfa2fc6f0fdcd0d0b9238c51d825bc4d3ae3e6" translate="yes" xml:space="preserve">
          <source>Returns true iff this scope corresponds to a class; as opposed to a method, &quot;if&quot; statement, block statement, etc.</source>
          <target state="translated">이 범위가 클래스에 해당하는 경우 true를 반환합니다. 메서드, &quot;if&quot;문, 블록 문 등과는 반대로</target>
        </trans-unit>
        <trans-unit id="3262179bca51cceb234580098dff3ce6893a1f36" translate="yes" xml:space="preserve">
          <source>Returns true of the implementing MetaClass has a property of the given name</source>
          <target state="translated">구현하는 MetaClass에 주어진 이름의 속성이 있으면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="920fee80be9d702596dbe4b341eae710289f5d07" translate="yes" xml:space="preserve">
          <source>Returns true or false depending on whether the right classnode can be assigned to the left classnode.</source>
          <target state="translated">오른쪽 클래스 노드가 왼쪽 클래스 노드에 할당 될 수 있는지 여부에 따라 true 또는 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c284fd29e7481a0825fa3484db43d81420a1812" translate="yes" xml:space="preserve">
          <source>Returns true or false depending on whether the right classnode can be assigned to the left classnode. This method should not add errors by itself: we let the caller decide what to do if an incompatible assignment is found.</source>
          <target state="translated">오른쪽 클래스 노드가 왼쪽 클래스 노드에 할당 될 수 있는지 여부에 따라 true 또는 false를 반환합니다. 이 메서드는 자체적으로 오류를 추가해서는 안됩니다. 호환되지 않는 할당이 발견되면 호출자가 수행 할 작업을 결정하도록합니다.</target>
        </trans-unit>
        <trans-unit id="2e752ec64f5e227b93ad4661e8e6531aab56c6ff" translate="yes" xml:space="preserve">
          <source>Returns whether custom meta classes are disabled.</source>
          <target state="translated">사용자 정의 메타 클래스가 비활성화되었는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="840b123b71633d0bf4d132b1cca81fdd73d09d89" translate="yes" xml:space="preserve">
          <source>Returns whether or not this method is abstract.</source>
          <target state="translated">이 메서드가 추상인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dcf1650a39463d755d730fd981a63af21aa5bf0c" translate="yes" xml:space="preserve">
          <source>Returns whether or not this method is private.</source>
          <target state="translated">이 메서드가 전용인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="578a3209949eab749ad431e227f19e075abdc937" translate="yes" xml:space="preserve">
          <source>Returns whether or not this method is protected.</source>
          <target state="translated">이 메서드가 보호되는지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44ed56af9280018a16c8b2994718d73ff48f0388" translate="yes" xml:space="preserve">
          <source>Returns whether or not this method is public.</source>
          <target state="translated">이 메서드가 공용인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e88b6414c6a2a62502ff4ff5b80c2e390edb60af" translate="yes" xml:space="preserve">
          <source>Returns whether or not this method is static.</source>
          <target state="translated">이 메서드가 정적인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a488275680d90586e1be33da85c2b9b9b99fd17d" translate="yes" xml:space="preserve">
          <source>Returns whether this object is cacheable</source>
          <target state="translated">이 객체가 캐시 가능한지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ff317805d8baac8eb02c54d0e5d6c2ecdaa03d7b" translate="yes" xml:space="preserve">
          <source>Reverse the items in an array.</source>
          <target state="translated">배열의 항목을 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="4ffb1857f32cc34dbdf1f2fea4dea9d73dae2c97" translate="yes" xml:space="preserve">
          <source>Reverse the items in an array. If mutate is true, the original array is modified in place and returned. Otherwise, a new array containing the reversed items is produced.</source>
          <target state="translated">배열의 항목을 뒤집습니다. mutate가 true이면 원래 배열이 제자리에서 수정되고 반환됩니다. 그렇지 않으면 반전 된 항목을 포함하는 새 배열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6b965296dcb97703315869dd2802806ec9f3ee45" translate="yes" xml:space="preserve">
          <source>Reverses the elements in a list.</source>
          <target state="translated">목록의 요소를 반전합니다.</target>
        </trans-unit>
        <trans-unit id="71c11c4ac3236557013a72e6d8f55fd6c53309dc" translate="yes" xml:space="preserve">
          <source>Reverses the elements in a list. If mutate is true, the original list is modified in place and returned. Otherwise, a new list containing the reversed items is produced.</source>
          <target state="translated">목록의 요소를 반전합니다. mutate가 true이면 원래 목록이 제자리에서 수정되고 반환됩니다. 그렇지 않으면 반전 된 항목이 포함 된 새 목록이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0079bfd35be0b8583bb85c72d82c587d207b73fb" translate="yes" xml:space="preserve">
          <source>Reverses the iterator.</source>
          <target state="translated">반복기를 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="ac3d3afb0c063d096a1630dc2709b31308e708cb" translate="yes" xml:space="preserve">
          <source>Reverses the iterator. The original iterator will become exhausted of elements after determining the reversed values. A new iterator for iterating through the reversed values is returned.</source>
          <target state="translated">반복기를 되돌립니다. 원래 반복자는 반전 된 값을 결정한 후 요소가 고갈됩니다. 반전 된 값을 반복하기위한 새 반복기가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="afb7fdb8028e0e8ede98fdbb29cc2d0555dbfe1c" translate="yes" xml:space="preserve">
          <source>RootLoader</source>
          <target state="translated">RootLoader</target>
        </trans-unit>
        <trans-unit id="d9afc467d499810b1424e2e325d0107a8f96a90f" translate="yes" xml:space="preserve">
          <source>Roughly equivalent to &lt;code&gt;Map m = new HashMap(); m.putAll(left); m.putAll(right); return m;&lt;/code&gt; but with some additional logic to preserve the &lt;code&gt;left&lt;/code&gt; Map type for common cases as described above.</source>
          <target state="translated">대략 &lt;code&gt;Map m = new HashMap(); m.putAll(left); m.putAll(right); return m;&lt;/code&gt; 그러나 위에서 설명한 일반적인 경우에 대해 &lt;code&gt;left&lt;/code&gt; 맵 유형 을 보존하기 위한 몇 가지 추가 로직이 있습니다.</target>
        </trans-unit>
        <trans-unit id="01955a2d545ab1994c73f2d940779641d5edeb3f" translate="yes" xml:space="preserve">
          <source>Round the value</source>
          <target state="translated">값 반올림</target>
        </trans-unit>
        <trans-unit id="e16a2a5a7daacf8f5cfa5c6172830daed7b2330b" translate="yes" xml:space="preserve">
          <source>Run Interactive Shell with initial command</source>
          <target state="translated">초기 명령으로 대화 형 셸 실행</target>
        </trans-unit>
        <trans-unit id="a3b949b7d417048aa802241f26b5fa639bb5d008" translate="yes" xml:space="preserve">
          <source>Run Interactive Shell with optional initial script and files to load</source>
          <target state="translated">로드 할 선택적 초기 스크립트 및 파일을 사용하여 대화 형 셸 실행</target>
        </trans-unit>
        <trans-unit id="dcd0ffb3fa8c95cdd135e6ae6758bf52ca22e2c3" translate="yes" xml:space="preserve">
          <source>Run a script identified by name with a given binding.</source>
          <target state="translated">주어진 바인딩으로 이름으로 식별되는 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="fe9fab6e8ef402e526268a0a8b1b594a704f25f3" translate="yes" xml:space="preserve">
          <source>Run a script identified by name with a single argument.</source>
          <target state="translated">단일 인수로 이름으로 식별되는 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="05b302f78f6c89a0eb4acbe07906525c7dc3f62c" translate="yes" xml:space="preserve">
          <source>Run the script file specified by the classpath</source>
          <target state="translated">클래스 경로에 지정된 스크립트 파일 실행</target>
        </trans-unit>
        <trans-unit id="db02acd5efe14923c132868d63d4d09df9a14d8d" translate="yes" xml:space="preserve">
          <source>Run the script file specified by the file path</source>
          <target state="translated">파일 경로로 지정된 스크립트 파일 실행</target>
        </trans-unit>
        <trans-unit id="4eb856162706fafb4e43665c351ce2e6e4ae6e5f" translate="yes" xml:space="preserve">
          <source>Run this class as a script to compile a groovy file and print out the resulting source.</source>
          <target state="translated">이 클래스를 스크립트로 실행하여 멋진 파일을 컴파일하고 결과 소스를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="606486d4269593e0f24edd98307e2ea9118c19ba" translate="yes" xml:space="preserve">
          <source>Runnable</source>
          <target state="translated">Runnable</target>
        </trans-unit>
        <trans-unit id="ff8bea7afa5d5a8ddce9fb6b8afde340449e7dd3" translate="yes" xml:space="preserve">
          <source>Runs the calling JUnit test again and fails only if it unexpectedly runs.</source>
          <target state="translated">호출 JUnit 테스트를 다시 실행하고 예기치 않게 실행되는 경우에만 실패합니다.</target>
        </trans-unit>
        <trans-unit id="18eb641605e61de83c148ac830b20a68e6f57aaf" translate="yes" xml:space="preserve">
          <source>Runs the given class.</source>
          <target state="translated">주어진 클래스를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6896e8e06e89889344f4639392fbcd2d34980872" translate="yes" xml:space="preserve">
          <source>Runs the given script file name with the given command line arguments</source>
          <target state="translated">주어진 명령 줄 인수를 사용하여 주어진 스크립트 파일 이름을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6174cd462968319ae143c581e0567759709c7814" translate="yes" xml:space="preserve">
          <source>Runs the report once all initialization is complete.</source>
          <target state="translated">모든 초기화가 완료되면 보고서를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2c9dac7fe6e7a932deca90cd3f78943a62bd9078" translate="yes" xml:space="preserve">
          <source>Runs this server.</source>
          <target state="translated">이 서버를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="1770aeda8b6cf59be995165d1535d4d996b675d3" translate="yes" xml:space="preserve">
          <source>Runs this server. There is typically no need to call this method, as the object's constructor creates a new thread and runs this object automatically.</source>
          <target state="translated">이 서버를 실행합니다. 개체의 생성자가 새 스레드를 만들고이 개체를 자동으로 실행하므로 일반적으로이 메서드를 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="60eba6e2f22836a90ff587d39b5e841140a03bb8" translate="yes" xml:space="preserve">
          <source>Runtime classes for Groovy - whether the dynamic interpreter is being used, the compiler or the bytecode generator.</source>
          <target state="translated">Groovy 용 런타임 클래스-동적 인터프리터를 사용하는지 컴파일러 또는 바이트 코드 생성기를 사용하는지 여부.</target>
        </trans-unit>
        <trans-unit id="a4a395d46a8322991b5f355db3c7dc1211df8058" translate="yes" xml:space="preserve">
          <source>Runtime exception used by JmxBuilder.</source>
          <target state="translated">JmxBuilder에서 사용하는 런타임 예외입니다.</target>
        </trans-unit>
        <trans-unit id="8767af124ac679b669d589fe5958d6e8d6432e1c" translate="yes" xml:space="preserve">
          <source>RuntimeException - any exception the closure might have thrown during execution.</source>
          <target state="translated">RuntimeException-실행 중에 클로저가 발생했을 수있는 예외</target>
        </trans-unit>
        <trans-unit id="f4c772d3bc6da44814c6c65d888c1a6367a97185" translate="yes" xml:space="preserve">
          <source>RuntimeException if the property could not be evaluated</source>
          <target state="translated">속성을 평가할 수없는 경우 RuntimeException</target>
        </trans-unit>
        <trans-unit id="883e24ec646ca6c35489000cfdeb123138a786d1" translate="yes" xml:space="preserve">
          <source>RuntimeException if the property could not be set</source>
          <target state="translated">속성을 설정할 수없는 경우 RuntimeException</target>
        </trans-unit>
        <trans-unit id="7c29ec86ba0a674b2ee052f5865e4071466bbee2" translate="yes" xml:space="preserve">
          <source>RuntimeException or Error if the mappingFunction does so, in which case the mapping is left unestablished</source>
          <target state="translated">mappingFunction이 그렇게하는 경우 RuntimeException 또는 Error (이 경우 매핑이 설정되지 않은 상태로 유지됨)</target>
        </trans-unit>
        <trans-unit id="24a1b331ccbe481f76358a2fcb452606f9890ac9" translate="yes" xml:space="preserve">
          <source>SAXException</source>
          <target state="translated">SAXException</target>
        </trans-unit>
        <trans-unit id="97b864396a54bc645c7475440c1116b10f8c5719" translate="yes" xml:space="preserve">
          <source>SAXException Any SAX exception, possibly wrapping another exception.</source>
          <target state="translated">SAXException 모든 SAX 예외, 다른 예외를 래핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dbe52f3b8dc825139ab9b92b6812971651029bd" translate="yes" xml:space="preserve">
          <source>SAXException for SAX errors.</source>
          <target state="translated">SAX 오류에 대한 SAXException입니다.</target>
        </trans-unit>
        <trans-unit id="8149540f9a12c04c1df99a3a7fcb43d1adfc721f" translate="yes" xml:space="preserve">
          <source>SHA-256 value</source>
          <target state="translated">SHA-256 값</target>
        </trans-unit>
        <trans-unit id="031619888fe32430b4847208bced1bb84e4d55ab" translate="yes" xml:space="preserve">
          <source>SQLException if a database access error occurs</source>
          <target state="translated">데이터베이스 액세스 오류가 발생한 경우 SQLException</target>
        </trans-unit>
        <trans-unit id="e61c17a5f582604794a7a08cb15a865f4e50721e" translate="yes" xml:space="preserve">
          <source>SQLException if a database access error occurs or the result set type is &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;</source>
          <target state="translated">데이터베이스 액세스 오류가 발생하거나 결과 세트 유형이 &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt; 인 경우 SQLException</target>
        </trans-unit>
        <trans-unit id="45d760003f5acc36ecba809e88b06c2fa5bab6b1" translate="yes" xml:space="preserve">
          <source>SQLException if a database access error occurs, or the driver does not support batch statements. Throws &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html&quot;&gt;BatchUpdateException&lt;/a&gt; (a subclass of &lt;code&gt;SQLException&lt;/code&gt;) if one of the commands sent to the database fails to execute properly.</source>
          <target state="translated">데이터베이스 액세스 오류가 발생하거나 드라이버가 배치 문을 지원하지 않는 경우 SQLException입니다. 예외 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html&quot;&gt;의 개요 BatchUpdateException&lt;/a&gt; (의 서브 클래스 &lt;code&gt;SQLException&lt;/code&gt; 데이터베이스로 전송 명령 중 하나가 제대로 실행하지 않을 경우).</target>
        </trans-unit>
        <trans-unit id="e45d2900a3a8b038fffddbbdfda8d512995f4444" translate="yes" xml:space="preserve">
          <source>SQLException if a database access error occurs, or this method is called on a closed &lt;code&gt;Statement&lt;/code&gt;, or the driver does not support batch statements. Throws &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html&quot;&gt;BatchUpdateException&lt;/a&gt; (a subclass of &lt;code&gt;SQLException&lt;/code&gt;) if one of the commands sent to the database fails to execute properly or attempts to return a result set.</source>
          <target state="translated">SQLException 데이터베이스 액세스 오류가 발생하거나 닫힌 &lt;code&gt;Statement&lt;/code&gt; 에서이 메서드가 호출 되거나 드라이버가 배치 문을 지원하지 않는 경우. 예외 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/sql/BatchUpdateException.html&quot;&gt;의 개요 BatchUpdateException&lt;/a&gt; (의 서브 클래스 &lt;code&gt;SQLException&lt;/code&gt; 데이터베이스로 전송 명령 중 하나가 결과 집합을 반환 제대로 또는 시도를 실행하지 않을 경우).</target>
        </trans-unit>
        <trans-unit id="e206e1083ec7225f76aa453fbf7a4ae4f7661542" translate="yes" xml:space="preserve">
          <source>SQLException if a database error occurs</source>
          <target state="translated">데이터베이스 오류가 발생한 경우 SQLException</target>
        </trans-unit>
        <trans-unit id="c353f30acc3a35d83375bc685be3cff5217a9d52" translate="yes" xml:space="preserve">
          <source>SQLException if some exception occurs finding out the column count</source>
          <target state="translated">열 수를 찾는 예외가 발생하면 SQLException</target>
        </trans-unit>
        <trans-unit id="8efa42884fbee829c538eaba74a28d195b666a78" translate="yes" xml:space="preserve">
          <source>SQLException if something goes wrong</source>
          <target state="translated">무언가 잘못되면 SQLException</target>
        </trans-unit>
        <trans-unit id="7d841aef9bbaca2c3b3337013ef89134d00963b5" translate="yes" xml:space="preserve">
          <source>SQLException if the result set can not be returned</source>
          <target state="translated">결과 세트를 리턴 할 수없는 경우 SQLException</target>
        </trans-unit>
        <trans-unit id="c874a36b4ec37431e35e3f72f130224b7242e0d7" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;eval(ScriptEngine, Reader, Binding)&lt;/code&gt; except that the source of the script is provided as a &lt;code&gt;Reader&lt;/code&gt;</source>
          <target state="translated">과 동일 &lt;code&gt;eval(ScriptEngine, Reader, Binding)&lt;/code&gt; 스크립트의 소스가 제공된다는 점을 제외하고 &lt;code&gt;Reader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14ef2f5d30e6a5c2bbca184ecc54dd192d3f0fcc" translate="yes" xml:space="preserve">
          <source>Same as main(args) except that exceptions are thrown out instead of causing the VM to exit and the lookup for .groovy files can be controlled</source>
          <target state="translated">VM을 종료하는 대신 예외가 발생하고 .groovy 파일에 대한 조회를 제어 할 수 있다는 점을 제외하면 main (args)와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f532619524604ffefd584ec8300867090f431d45" translate="yes" xml:space="preserve">
          <source>Same as main(args) except that exceptions are thrown out instead of causing the VM to exit.</source>
          <target state="translated">VM을 종료하는 대신 예외가 발생한다는 점을 제외하면 main (args)와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="15784e4edc67c1ca4a0e5988e27f39ac62a1a72f" translate="yes" xml:space="preserve">
          <source>Same logic as &lt;a href=&quot;#stripIndent(java.lang.CharSequence)&quot;&gt;stripIndent(CharSequence)&lt;/a&gt; if &lt;code&gt;forceGroovyBehavior&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, otherwise Java 13's &lt;code&gt;stripIndent&lt;/code&gt; will be invoked.</source>
          <target state="translated">&lt;code&gt;forceGroovyBehavior&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;a href=&quot;#stripIndent(java.lang.CharSequence)&quot;&gt;stripIndent (CharSequence)&lt;/a&gt; 와 동일한 논리 , 그렇지 않으면 Java 13의 &lt;code&gt;stripIndent&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="402c5e3fd35e601d738f9f7126eb9038403ff28c" translate="yes" xml:space="preserve">
          <source>Sanitize the exception and ALL nested causes</source>
          <target state="translated">예외 및 모든 중첩 원인 제거</target>
        </trans-unit>
        <trans-unit id="18c332350c3ec28ad8d9c12c1bbb370c5cd58543" translate="yes" xml:space="preserve">
          <source>Sanitizes and builds an attribute meta map from a descriptor collection.</source>
          <target state="translated">설명자 컬렉션에서 속성 메타 맵을 삭제하고 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="544411f29c6fead9d16897d960fb2518c4a764bc" translate="yes" xml:space="preserve">
          <source>Sanitizes and builds an attribute meta map from a descriptor collection. The collection can either be a map of the form [attribName:[descriptor...],...] or [attribName1,...attribNameN]. The code guests sensible defaults when values are not provided</source>
          <target state="translated">설명자 컬렉션에서 속성 메타 맵을 삭제하고 빌드합니다. 컬렉션은 [attribName : [descriptor ...], ...] 또는 [attribName1, ... attribNameN] 형식의 맵일 수 있습니다. 값이 제공되지 않은 경우 코드 게스트에게 적합한 기본값</target>
        </trans-unit>
        <trans-unit id="335d4670b74540ac1e05c4dd06cbc6b391cc402b" translate="yes" xml:space="preserve">
          <source>Scans the directory looking for source files to be compiled.</source>
          <target state="translated">컴파일 할 소스 파일을 찾는 디렉토리를 스캔합니다.</target>
        </trans-unit>
        <trans-unit id="6ff99e8961f7b94ef7dcfa4cb624be85a7b1a116" translate="yes" xml:space="preserve">
          <source>Scans the directory looking for source files to be compiled. The results are returned in the class variable compileList</source>
          <target state="translated">컴파일 할 소스 파일을 찾는 디렉토리를 스캔합니다. 결과는 클래스 변수 compileList에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a4662deeb3f4896176a3b6f9e3b10f52752aeef6" translate="yes" xml:space="preserve">
          <source>Scoped use method</source>
          <target state="translated">범위가 지정된 사용 방법</target>
        </trans-unit>
        <trans-unit id="4540ae7c4928532819030e36d93a645966ff600d" translate="yes" xml:space="preserve">
          <source>Scoped use method with list of categories.</source>
          <target state="translated">범주 목록이있는 범위 지정 사용 방법.</target>
        </trans-unit>
        <trans-unit id="477c9957165548607aa3acf00b6fc35c95e8cdaa" translate="yes" xml:space="preserve">
          <source>Script.class</source>
          <target state="translated">Script.class</target>
        </trans-unit>
        <trans-unit id="8d9d062483d04b7084f5a9b4f6bbbebfdc9b0200" translate="yes" xml:space="preserve">
          <source>ScriptEngineFactory</source>
          <target state="translated">ScriptEngineFactory</target>
        </trans-unit>
        <trans-unit id="efdde7f2d384afd27a8990295e8e5a8a7b8da311" translate="yes" xml:space="preserve">
          <source>ScriptException if there is a problem parsing the script</source>
          <target state="translated">스크립트 구문 분석에 문제가있는 경우 ScriptException</target>
        </trans-unit>
        <trans-unit id="6e80b7d701dece25cc10e6800d7263da9c4b4e99" translate="yes" xml:space="preserve">
          <source>Sean Brown</source>
          <target state="translated">션 브라운</target>
        </trans-unit>
        <trans-unit id="8b2b304885873d9a7d7adfebb3c7eab53412cd47" translate="yes" xml:space="preserve">
          <source>Search for the script file, doesn't bother if it is named precisely.</source>
          <target state="translated">스크립트 파일을 검색하고 이름이 정확하게 지정 되어도 신경 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="292e2d68d598ab24fbe257bba139f096dc5fdce6" translate="yes" xml:space="preserve">
          <source>Search for the script file, doesn't bother if it is named precisely. Tries in this order: - actual supplied name - name.groovy - name.gvy - name.gy - name.gsh</source>
          <target state="translated">스크립트 파일을 검색하고 이름이 정확하게 지정 되어도 신경 쓰지 않습니다. 다음 순서로 시도합니다.-실제 제공된 이름-name.groovy-name.gvy-name.gy-name.gsh</target>
        </trans-unit>
        <trans-unit id="11ca4407920b581f932ee7ecccb4fd7a8a2cb286" translate="yes" xml:space="preserve">
          <source>Second, it calls the visit method on the transformation for each relevant annotation found.</source>
          <target state="translated">둘째, 발견 된 각 관련 주석에 대한 변환에서 방문 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="ebe6017819f50fa1c08c74619442a580119d3e6a" translate="yes" xml:space="preserve">
          <source>Security-related classes</source>
          <target state="translated">보안 관련 클래스</target>
        </trans-unit>
        <trans-unit id="530f0e50906e40519b48fb673896d768dbad6f8e" translate="yes" xml:space="preserve">
          <source>SecurityException if the request is denied by the security manager</source>
          <target state="translated">SecurityException 요청이 보안 관리자에 의해 거부 된 경우</target>
        </trans-unit>
        <trans-unit id="61456ea95fca1ce605e97eedd33deaae257140a2" translate="yes" xml:space="preserve">
          <source>SecurityException if usage of this expression class is forbidden</source>
          <target state="translated">이 표현식 클래스의 사용이 금지 된 경우 SecurityException</target>
        </trans-unit>
        <trans-unit id="e78c29f13eb7c822b5b955b27f1dfc3c4490c8c8" translate="yes" xml:space="preserve">
          <source>SecurityException if usage of this statement class is forbidden</source>
          <target state="translated">이 명령문 클래스의 사용이 금지 된 경우 SecurityException</target>
        </trans-unit>
        <trans-unit id="51a0b0fcb5f481c60f75d6677958efef82ebe247" translate="yes" xml:space="preserve">
          <source>SecurityException if usage of this token is forbidden</source>
          <target state="translated">이 토큰의 사용이 금지 된 경우 SecurityException</target>
        </trans-unit>
        <trans-unit id="e71a94fa3a5ff7886d4fe3e28e3cc2d3dbb9ca05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#call(java.lang.String,%20java.util.List,%20groovy.lang.Closure)&quot;&gt;call(String, List, Closure)&lt;/a&gt; for more details about creating a &lt;code&gt;Hemisphere(IN first, IN last, OUT dwells)&lt;/code&gt; stored procedure. Once created, it can be called like this:</source>
          <target state="translated">참조 &lt;a href=&quot;#call(java.lang.String,%20java.util.List,%20groovy.lang.Closure)&quot;&gt;호출 (문자열, 목록, 폐쇄)&lt;/a&gt; 만드는 방법에 대한 자세한 내용은 &lt;code&gt;Hemisphere(IN first, IN last, OUT dwells)&lt;/code&gt; 저장 프로 시저를. 생성되면 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d8fd761b3070585578704c2ab65ff3363909b0b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://commons.apache.org/proper/commons-cli/javadocs/api-release/org/apache/commons/cli/Option.html&quot;&gt;Option&lt;/a&gt; for the meaning of most of these properties and CliBuilderTest for further examples.</source>
          <target state="translated">이러한 속성 대부분의 의미는 &lt;a href=&quot;https://commons.apache.org/proper/commons-cli/javadocs/api-release/org/apache/commons/cli/Option.html&quot;&gt;Option&lt;/a&gt; 을 참조 하고 추가 예제는 CliBuilderTest를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0508084894f45dfb89e1de5dd756d6d775834ec8" translate="yes" xml:space="preserve">
          <source>See GROOVY-4161</source>
          <target state="translated">GROOVY-4161을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="90cbc160e61eee412ec481b3d8104e190eab5e91" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;addAll&lt;/code&gt; for similar functionality with modify semantics, i.e. which performs the changes on the original list itself.</source>
          <target state="translated">의미를 수정하는 유사한 기능, 즉 원래 목록 자체에서 변경을 수행하는 유사한 기능에 대해서는 &lt;code&gt;addAll&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29af3a317ea5aa534210a0dad76ceec9634c1b57" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;findAll&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt; when wanting to produce a new list containing items which match some criteria but leaving the original collection unchanged.</source>
          <target state="translated">일부 기준과 일치하지만 원래 컬렉션을 변경하지 않은 항목을 포함하는 새 목록을 생성하려는 경우 &lt;code&gt;findAll&lt;/code&gt; 및 &lt;code&gt;grep&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f13d2ef14fa768d884d6dea15ab17dd146727d8a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;findAll&lt;/code&gt; when wanting to produce a new map containing items which match some criteria but leaving the original map unchanged.</source>
          <target state="translated">일부 기준과 일치하지만 원래 맵을 변경하지 않은 상태로 유지하는 항목을 포함하는 새 맵을 생성하려는 경우 &lt;code&gt;findAll&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5aa1be1a92ad5621b7c633e0238518ba7341048d" translate="yes" xml:space="preserve">
          <source>See also groovy.test.AllTestSuiteTest.groovy</source>
          <target state="translated">groovy.test.AllTestSuiteTest.groovy도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="66336239d60e8398e924a26ba2a7cf075b03251f" translate="yes" xml:space="preserve">
          <source>See also groovy.util.AllTestSuiteTest.groovy</source>
          <target state="translated">groovy.util.AllTestSuiteTest.groovy도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c217d386511b4340a63f6525f34e4d2fc43c53ff" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;stubfor&quot;&gt;StubFor&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;stubfor&quot;&gt;StubFor&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bafe3777fa4a9b4618ab1f03c62b0713d78bd27e" translate="yes" xml:space="preserve">
          <source>See groovy.cli.picocli.CliBuilderTest for further examples.</source>
          <target state="translated">추가 예제는 groovy.cli.picocli.CliBuilderTest를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ceaddebe2a64202c42ce2d4ad765779a55bc2133" translate="yes" xml:space="preserve">
          <source>See https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html 14.20.3.1.</source>
          <target state="translated">https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html 14.20.3.1을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb8c2853efac5f48c8d3a71dc022f5233fc6e5ad" translate="yes" xml:space="preserve">
          <source>See https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html 14.20.3.1. Basic try-with-resources If a basic try-with-resource statement is of the form: try (VariableAccess ...) Block then the resource is first converted to a local variable declaration by the following translation: try (T #r = VariableAccess ...) { Block }</source>
          <target state="translated">https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html 14.20.3.1을 참조하십시오. 기본 try-with-resources 기본 try-with-resource 문이 다음과 같은 형식 인 경우 try (VariableAccess ...) Block 그러면 리소스가 먼저 다음 번역에 의해 지역 변수 선언으로 변환됩니다. try (T #r = VariableAccess ...) {차단}</target>
        </trans-unit>
        <trans-unit id="6342d25b7e6b312b584d5ca5ff4f259eecd5bb5f" translate="yes" xml:space="preserve">
          <source>See the class Javadoc for more details.</source>
          <target state="translated">자세한 내용은 Javadoc 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="22d9856f8a889f487c51c3ec271813a564693de4" translate="yes" xml:space="preserve">
          <source>See the method and constructor JavaDoc for more details.</source>
          <target state="translated">자세한 내용은 메소드 및 생성자 JavaDoc을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38ae981be0a8e576da82f99939b38cc5f940ad98" translate="yes" xml:space="preserve">
          <source>See the unit test for this class for additional examples.</source>
          <target state="translated">추가 예제는이 클래스의 단위 테스트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f3a9e7721a978112972f9ad20f217adacffce587" translate="yes" xml:space="preserve">
          <source>Select a List of items from a List using a Collection to identify the indices to be selected.</source>
          <target state="translated">컬렉션을 사용하여 목록에서 항목 목록을 선택하여 선택할 인덱스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="e3c34e83b913159898158e281d1435990db612dd" translate="yes" xml:space="preserve">
          <source>Select a List of items from an array using a Collection to identify the indices to be selected.</source>
          <target state="translated">컬렉션을 사용하여 배열에서 항목 목록을 선택하여 선택할 인덱스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="e2804ea0e0e2bcb938c26efd87a54851a68a6354" translate="yes" xml:space="preserve">
          <source>Select a List of items from an eager or lazy List using a Collection to identify the indices to be selected.</source>
          <target state="translated">컬렉션을 사용하여 eager 또는 lazy 목록에서 항목 목록을 선택하여 선택할 인덱스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="5c57bb07e2fd2f91ce3b6cb95552e5cc72635ac6" translate="yes" xml:space="preserve">
          <source>Selects a List of characters from a CharSequence using a Collection to identify the indices to be selected.</source>
          <target state="translated">컬렉션을 사용하여 CharSequence에서 문자 목록을 선택하여 선택할 인덱스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="0627bb4630d3894b95edf16f9324ac8ca622c825" translate="yes" xml:space="preserve">
          <source>Selects a List of values from a Matcher using a Collection to identify the indices to be selected.</source>
          <target state="translated">컬렉션을 사용하여 Matcher에서 값 목록을 선택하여 선택할 인덱스를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="bf6161cdf2560d7dbf2d27492ca4b899f35eebae" translate="yes" xml:space="preserve">
          <source>Selects a method by name and argument classes.</source>
          <target state="translated">이름 및 인수 클래스로 메서드를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ce42fa075bdd88e855ca403396f72cadbe570e53" translate="yes" xml:space="preserve">
          <source>Selects a method by name and argument classes. This method does not search for an exact match, it searches for a compatible method. For this the method selection mechanism is used as provided by the implementation of this MetaClass. pickMethod may or may not be used during the method selection process when invoking a method. There is no warranty for that.</source>
          <target state="translated">이름 및 인수 클래스로 메서드를 선택합니다. 이 방법은 정확히 일치하는 것을 검색하지 않고 호환되는 방법을 검색합니다. 이를 위해이 MetaClass 구현에서 제공하는 메소드 선택 메커니즘이 사용됩니다. pickMethod는 메서드를 호출 할 때 메서드 선택 프로세스 중에 사용되거나 사용되지 않을 수 있습니다. 그것에 대한 보증은 없습니다.</target>
        </trans-unit>
        <trans-unit id="44593e17556585b18a907c9e8b750eeb80a24f26" translate="yes" xml:space="preserve">
          <source>Selects an entry in the map having the maximum calculated value as determined by the supplied closure.</source>
          <target state="translated">제공된 마감에 의해 결정된 최대 계산 값이있는 맵의 항목을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="4dfa4a84834a185327a7e8af03b8442f85291662" translate="yes" xml:space="preserve">
          <source>Selects an entry in the map having the maximum calculated value as determined by the supplied closure. If more than one entry has the maximum value, an arbitrary choice is made between the entries having the maximum value.</source>
          <target state="translated">제공된 마감에 의해 결정된 최대 계산 값이있는 맵의 항목을 선택합니다. 둘 이상의 항목이 최대 값을 갖는 경우 최대 값을 갖는 항목간에 임의로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="ba60ffc2ee8e67a7746e3c0ed122b63316c424cc" translate="yes" xml:space="preserve">
          <source>Selects an entry in the map having the minimum calculated value as determined by the supplied closure.</source>
          <target state="translated">제공된 마감에 의해 결정된 최소 계산 값이있는 맵의 항목을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a453ee30a3815d47204b07bf67252da584953ee2" translate="yes" xml:space="preserve">
          <source>Selects an entry in the map having the minimum calculated value as determined by the supplied closure. If more than one entry has the minimum value, an arbitrary choice is made between the entries having the minimum value.</source>
          <target state="translated">제공된 마감에 의해 결정된 최소 계산 값이있는 맵의 항목을 선택합니다. 둘 이상의 항목에 최소값이있는 경우 최소값을 가진 항목간에 임의로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="17c176047693387d75f83c7a15ca417a33fc6a8b" translate="yes" xml:space="preserve">
          <source>Selects the item in the iterable which when passed as a parameter to the supplied closure returns the maximum value.</source>
          <target state="translated">제공된 클로저에 매개 변수로 전달 될 때 최대 값을 반환하는 iterable의 항목을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c8049da295982dfed69eb6acbf31978fa53e5e45" translate="yes" xml:space="preserve">
          <source>Selects the item in the iterable which when passed as a parameter to the supplied closure returns the maximum value. A null return value represents the least possible return value, so any item for which the supplied closure returns null, won't be selected (unless all items return null). If more than one item has the maximum value, an arbitrary choice is made between the items having the maximum value.</source>
          <target state="translated">제공된 클로저에 매개 변수로 전달 될 때 최대 값을 반환하는 iterable의 항목을 선택합니다. null 반환 값은 가능한 최소 반환 값을 나타내므로 제공된 클로저가 null을 반환하는 항목은 선택되지 않습니다 (모든 항목이 null을 반환하지 않는 한). 둘 이상의 항목이 최대 값을 갖는 경우 최대 값을 갖는 항목간에 임의 선택이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="74c62085d67116333afbdc0af11368efc191456d" translate="yes" xml:space="preserve">
          <source>Selects the item in the iterable which when passed as a parameter to the supplied closure returns the minimum value.</source>
          <target state="translated">제공된 클로저에 매개 변수로 전달 될 때 최소값을 리턴하는 iterable에서 항목을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ee4f890bb666012e50d0accc854c2b0689f903fc" translate="yes" xml:space="preserve">
          <source>Selects the item in the iterable which when passed as a parameter to the supplied closure returns the minimum value. A null return value represents the least possible return value. If more than one item has the minimum value, an arbitrary choice is made between the items having the minimum value.</source>
          <target state="translated">제공된 클로저에 매개 변수로 전달 될 때 최소값을 리턴하는 iterable에서 항목을 선택합니다. null 반환 값은 가능한 최소 반환 값을 나타냅니다. 둘 이상의 항목에 최소값이있는 경우 최소값을 가진 항목간에 임의 선택이 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="212104919e5b7527bdb6a01e5aeaf4e4b0160f36" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found from the Iterator using the closure to determine the correct ordering.</source>
          <target state="translated">올바른 순서를 결정하기 위해 클로저를 사용하여 반복자에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="339b81045b0b71b53a8b4cf017ae1c1bcb63bfe6" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found from the Iterator using the closure to determine the correct ordering. The iterator will become exhausted of elements after this operation.</source>
          <target state="translated">올바른 순서를 결정하기 위해 클로저를 사용하여 반복자에서 찾은 최대 값을 선택합니다. 이 작업 후 반복기에서 요소가 고갈됩니다.</target>
        </trans-unit>
        <trans-unit id="70ecbc18da1463a033bc23913e27370b9c18fd81" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found from the Iterator using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 반복기에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a5241868433cb0a5642c9f392e3f6ed235a1310c" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found from the Object array using the closure to determine the correct ordering.</source>
          <target state="translated">올바른 순서를 결정하기 위해 클로저를 사용하여 Object 배열에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c12757b79c5a0e09f608563e3135566a42f2f0a0" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found from the Object array using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 개체 배열에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="88b4b59afc10b6d019b4655bcdd2d5d2cb022fc7" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found in an Iterable.</source>
          <target state="translated">Iterable에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="bc6fd457beb66b666c083370df9b4dfd13967a13" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found in an array of items, so min([2, 4, 6] as Object[]) == 6.</source>
          <target state="translated">항목 배열에서 찾은 최대 값을 선택하므로 min ([2, 4, 6] as Object []) == 6입니다.</target>
        </trans-unit>
        <trans-unit id="06f72cfa03105044075d1df202786c7767e02fa2" translate="yes" xml:space="preserve">
          <source>Selects the maximum value found in the Iterable using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 Iterable에서 찾은 최대 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="67ec1be08aa8c59b83df269bb9be49bbad429501" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found from the Iterator using the closure to determine the correct ordering.</source>
          <target state="translated">올바른 순서를 결정하기 위해 클로저를 사용하여 반복자에서 찾은 최소값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="7973217de09de05079c646b0912d4c5b5e1dbac2" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found from the Iterator using the closure to determine the correct ordering. The iterator will become exhausted of elements after this operation.</source>
          <target state="translated">올바른 순서를 결정하기 위해 클로저를 사용하여 반복자에서 찾은 최소값을 선택합니다. 이 작업 후 반복기에서 요소가 고갈됩니다.</target>
        </trans-unit>
        <trans-unit id="8385c32cdbdc0ed2e69bf52d3a8919da5eab0bab" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found from the Iterator using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 반복기에서 찾은 최소값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="6ed99ab1555c60b21544f50b0aa0fd3e8ec6206d" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found from the Object array using the closure to determine the correct ordering.</source>
          <target state="translated">클로저를 사용하여 Object 배열에서 찾은 최소값을 선택하여 올바른 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="718d179577e2838b18f65e0230485864bd8feb0a" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found from the Object array using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 객체 배열에서 찾은 최소값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="48de6f0393809acb7aa19f769b992e643b53a57c" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found in an Iterable of items.</source>
          <target state="translated">Iterable 항목에서 찾은 최소값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="8a6c96e9e1cf05f1cf686f9dc0dbafa4488414d8" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found in an array of items, so min([2, 4, 6] as Object[]) == 2.</source>
          <target state="translated">항목 배열에서 찾은 최소값을 선택하므로 min ([2, 4, 6] as Object []) == 2입니다.</target>
        </trans-unit>
        <trans-unit id="5371c206438fd429078853f973e38b74dd390a46" translate="yes" xml:space="preserve">
          <source>Selects the minimum value found in the Iterable using the given comparator.</source>
          <target state="translated">주어진 비교기를 사용하여 Iterable에서 찾은 최소값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="4d92d910867c19c93aacb62738450cccbc8d5696" translate="yes" xml:space="preserve">
          <source>SelfType</source>
          <target state="translated">SelfType</target>
        </trans-unit>
        <trans-unit id="e10ff8c9bcab2cbc1dfadb02c2621442e637469e" translate="yes" xml:space="preserve">
          <source>Sends markup to the given IndentPrinter.</source>
          <target state="translated">지정된 IndentPrinter에 마크 업을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="408c709ac5591f0e8e3df3dde8250801a9d35b49" translate="yes" xml:space="preserve">
          <source>Sends markup to the given IndentPrinter. Use this option if you want to customize the indent used or provide your own IndentPrinter.</source>
          <target state="translated">지정된 IndentPrinter에 마크 업을 보냅니다. 사용 된 들여 쓰기를 사용자 정의하거나 고유 한 IndentPrinter를 제공하려면이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aee82f1c36d8c1c2dff2389b799c221e83cd895e" translate="yes" xml:space="preserve">
          <source>Sends markup to the given PrintWriter</source>
          <target state="translated">지정된 PrintWriter에 마크 업을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="6bb0113daf8cf25d5be1fd87e74ffa491767f939" translate="yes" xml:space="preserve">
          <source>Sends markup to the given Writer but first wrapping it in a PrintWriter</source>
          <target state="translated">지정된 Writer에게 마크 업을 보내지 만 먼저 PrintWriter에서 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="dc1f3c2690cec070768cf5dde8291f16c094e668" translate="yes" xml:space="preserve">
          <source>Serializable</source>
          <target state="translated">Serializable</target>
        </trans-unit>
        <trans-unit id="bd52280054adb05be9f720df3d5d0fdb7b784f41" translate="yes" xml:space="preserve">
          <source>Serializes Number value and writes it into specified buffer.</source>
          <target state="translated">Number 값을 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="abee0fa2a71625f63a2c5d7a4bca3b025f0dca94" translate="yes" xml:space="preserve">
          <source>Serializes a map entry and writes it into specified buffer.</source>
          <target state="translated">맵 항목을 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="2a9c63cf8c0f6237394571d493ec0bc0a9826772" translate="yes" xml:space="preserve">
          <source>Serializes any char sequence and writes it into specified buffer without performing any manipulation of the given text.</source>
          <target state="translated">char 시퀀스를 직렬화하고 지정된 텍스트를 조작하지 않고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="66eebdea39ea81eb8c1b54dbf969741d9406fde9" translate="yes" xml:space="preserve">
          <source>Serializes any char sequence and writes it into specified buffer.</source>
          <target state="translated">char 시퀀스를 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="023df3686decfac37ea5e857c0c3ab3e93f0b499" translate="yes" xml:space="preserve">
          <source>Serializes array and writes it into specified buffer.</source>
          <target state="translated">배열을 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="a36e3e7204eb4603811ce53aaf9081f1e582fba3" translate="yes" xml:space="preserve">
          <source>Serializes date and writes it into specified buffer.</source>
          <target state="translated">날짜를 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="8b20bf8ae29e805878a011afa7e61f1ad6e85c64" translate="yes" xml:space="preserve">
          <source>Serializes iterator and writes it into specified buffer.</source>
          <target state="translated">반복기를 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="4add81e7e25214d23fc1695e260ba67fdd97a2c2" translate="yes" xml:space="preserve">
          <source>Serializes map and writes it into specified buffer.</source>
          <target state="translated">맵을 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="7b1f48e452e539bedcef6dfd97cc3765cdd872e9" translate="yes" xml:space="preserve">
          <source>Serializes object and writes it into specified buffer.</source>
          <target state="translated">개체를 직렬화하고 지정된 버퍼에 씁니다.</target>
        </trans-unit>
        <trans-unit id="957529c779f2bc1104b85349c41500abaf873a8d" translate="yes" xml:space="preserve">
          <source>Serializes the internal data structure built with the builder to a conformant JSON payload string</source>
          <target state="translated">빌더로 빌드 된 내부 데이터 구조를 일치하는 JSON 페이로드 문자열로 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="dc23db702c30ce0e021b5a883e7fb32a029bf017" translate="yes" xml:space="preserve">
          <source>Serializes the internal data structure built with the builder to a conformant YAML payload string</source>
          <target state="translated">빌더로 빌드 된 내부 데이터 구조를 준수 YAML 페이로드 문자열로 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="cd45843776b8241105e0842273732f9d98189b71" translate="yes" xml:space="preserve">
          <source>ServerSocket.accept</source>
          <target state="translated">ServerSocket.accept</target>
        </trans-unit>
        <trans-unit id="b705c833c1a7adda4a8d7e9a13adc76acef6817b" translate="yes" xml:space="preserve">
          <source>Services the request with a response.</source>
          <target state="translated">응답으로 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="bfb5922303a3dbb0a116bba8f4bf5158cca6e731" translate="yes" xml:space="preserve">
          <source>Servlet (or the web application) context.</source>
          <target state="translated">서블릿 (또는 웹 애플리케이션) 컨텍스트.</target>
        </trans-unit>
        <trans-unit id="e781297736e5c8f4ddb67fbd70eadd1fce9ac265" translate="yes" xml:space="preserve">
          <source>Servlet API include key name: path_info</source>
          <target state="translated">서블릿 API에는 키 이름이 포함됩니다. path_info</target>
        </trans-unit>
        <trans-unit id="b7a157434fe3c67790305fb6d62c6b64f931ce52" translate="yes" xml:space="preserve">
          <source>Servlet API include key name: servlet_path</source>
          <target state="translated">Servlet API에는 키 이름이 포함됩니다. servlet_path</target>
        </trans-unit>
        <trans-unit id="089671f0c3ee2a4f3179cb914a2a7cd75efcc846" translate="yes" xml:space="preserve">
          <source>Servlet Init Parameters</source>
          <target state="translated">서블릿 초기화 매개 변수</target>
        </trans-unit>
        <trans-unit id="b68ef23e21ed39fd70b9d33dc72a3c35dc12dbd6" translate="yes" xml:space="preserve">
          <source>Servlet support.</source>
          <target state="translated">서블릿 지원.</target>
        </trans-unit>
        <trans-unit id="1658aefce744982d81d7b170981f7a68070bb593" translate="yes" xml:space="preserve">
          <source>Servlet-specific binding extension to lazy load the writer or the output stream from the response.</source>
          <target state="translated">응답에서 작성기 또는 출력 스트림을 지연로드하는 서블릿 특정 바인딩 확장입니다.</target>
        </trans-unit>
        <trans-unit id="facc61a29b1031e05a6c3ba06c5fcd57474ee5be" translate="yes" xml:space="preserve">
          <source>ServletBinding</source>
          <target state="translated">ServletBinding</target>
        </trans-unit>
        <trans-unit id="79f05da07eb2545b38b3876098bd62478dc0ae96" translate="yes" xml:space="preserve">
          <source>ServletException If the request specified an invalid template source URL</source>
          <target state="translated">ServletException 요청이 잘못된 템플릿 소스 URL을 지정한 경우</target>
        </trans-unit>
        <trans-unit id="0ca93f0837bad62fbd4d6d69c0cb653a295aa496" translate="yes" xml:space="preserve">
          <source>ServletException If the request specified an invalid template source file</source>
          <target state="translated">ServletException 요청이 잘못된 템플릿 소스 파일을 지정한 경우</target>
        </trans-unit>
        <trans-unit id="d7ffdf7f3ebe67efd21af205b33494c59c98e2a8" translate="yes" xml:space="preserve">
          <source>ServletException if init() method defined in super class javax.servlet.GenericServlet throws it</source>
          <target state="translated">ServletException 슈퍼 클래스 javax.servlet.GenericServlet에 정의 된 init () 메서드가이를 throw하는 경우</target>
        </trans-unit>
        <trans-unit id="7c87d6a9c1aec383c91c0b71a657c2efe2094736" translate="yes" xml:space="preserve">
          <source>ServletException if the HTTP request cannot be handled</source>
          <target state="translated">HTTP 요청을 처리 할 수없는 경우 ServletException</target>
        </trans-unit>
        <trans-unit id="ada82484355961987131a999e2b7aa71f48f5585" translate="yes" xml:space="preserve">
          <source>ServletException if this method encountered difficulties</source>
          <target state="translated">이 메서드에 문제가 발생한 경우 ServletException</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="250b8f5b91f0259201acf27e99f3fac5670c0315" translate="yes" xml:space="preserve">
          <source>Set Quote to use when printing attributes.</source>
          <target state="translated">속성을 인쇄 할 때 사용할 견적을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a561b266668b0e695faf479f05914613347b62db" translate="yes" xml:space="preserve">
          <source>Set an inline command to execute.</source>
          <target state="translated">실행할 인라인 명령을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f00759eaedd7cc02146abf87a4db95353443b3c8" translate="yes" xml:space="preserve">
          <source>Set an inline command to execute. NB: Properties are not expanded in this text.</source>
          <target state="translated">실행할 인라인 명령을 설정합니다. 주의 : 속성은이 텍스트에서 확장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f6b4c199975ff80bd4dc97d11f3b217cccaaa93" translate="yes" xml:space="preserve">
          <source>Set decorator that will trigger PropertyChangeEvents when a value changes.</source>
          <target state="translated">값이 변경 될 때 PropertyChangeEvents를 트리거하는 데코레이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9fa509dd55ab4b893d2ede7257dc67e4d50d4e65" translate="yes" xml:space="preserve">
          <source>Set false if e.g. the filename will be inside a String.</source>
          <target state="translated">예를 들어 파일 이름이 문자열 안에 있으면 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a17217952628c278684cb1ae063b025b55edbb31" translate="yes" xml:space="preserve">
          <source>Set false if e.g. the filename will be inside a String. Should not be true if quoteFilenamesWithSpaces is true.</source>
          <target state="translated">예를 들어 파일 이름이 문자열 안에 있으면 false로 설정하십시오. quoteFilenamesWithSpaces가 true이면 true가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="04d2037f4fb4cbe9e2405b9ee692e034c6e51277" translate="yes" xml:space="preserve">
          <source>Set fatal is just ignored.</source>
          <target state="translated">치명적 설정은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="47d799310040145097911d9867da57a606bc6405" translate="yes" xml:space="preserve">
          <source>Set flag saying to disable lookup of custom meta classes It's enough to call this method only once in your application for handle which was set in to registry as every new handle will inherit this property</source>
          <target state="translated">사용자 정의 메타 클래스의 조회를 비활성화하는 플래그 설정 모든 새 핸들이이 속성을 상속하므로 레지스트리에 설정된 핸들에 대해 응용 프로그램에서이 메서드를 한 번만 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6af4766c2c32ab2bca0a85f49162cc2efb8043ff" translate="yes" xml:space="preserve">
          <source>Set global flag to ignore checksums.</source>
          <target state="translated">체크섬을 무시하도록 전역 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b282c0cfe66e34edb9417cedaf124ede3efada80" translate="yes" xml:space="preserve">
          <source>Set global flag to ignore checksums. By default it is set to false.</source>
          <target state="translated">체크섬을 무시하도록 전역 플래그를 설정합니다. 기본적으로 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="777deffe00828443a4bbe5d94119a8a3930b06c3" translate="yes" xml:space="preserve">
          <source>Set of all keys associated with registered runners.</source>
          <target state="translated">등록 된 러너와 관련된 모든 키의 집합입니다.</target>
        </trans-unit>
        <trans-unit id="bb1b22fff7f6682cf2df504412a50c04a38f26d7" translate="yes" xml:space="preserve">
          <source>Set of all keys associated with registered runners. This is a snapshot of the registry and any subsequent registry changes will not be reflected in the set.</source>
          <target state="translated">등록 된 러너와 관련된 모든 키의 집합입니다. 이것은 레지스트리의 스냅 샷이며 이후의 레지스트리 변경 사항은 세트에 반영되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d034fc51dbd92a166d911c99063019056dce485" translate="yes" xml:space="preserve">
          <source>Set property invocation type</source>
          <target state="translated">속성 호출 유형 설정</target>
        </trans-unit>
        <trans-unit id="9f0e46f083f2d6ad42d16d4d1c34aadeba85edd0" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;accessible&lt;/code&gt; flag for this reflected object to &lt;code&gt;true&lt;/code&gt; if possible.</source>
          <target state="translated">설정 &lt;code&gt;accessible&lt;/code&gt; 이 반영 개체에 대한 플래그를 &lt;code&gt;true&lt;/code&gt; 가능한 경우.</target>
        </trans-unit>
        <trans-unit id="3cb8b6039455038dee8f8a906cd61bd870974496" translate="yes" xml:space="preserve">
          <source>Set the base script class name for the scripts (must derive from Script)</source>
          <target state="translated">스크립트의 기본 스크립트 클래스 이름을 설정합니다 (Script에서 파생되어야 함).</target>
        </trans-unit>
        <trans-unit id="1a97aa0ec267c6c0316efbfaacdc9a0d3d683b02" translate="yes" xml:space="preserve">
          <source>Set the caret to use depending on overtype/insert mode</source>
          <target state="translated">겹쳐 쓰기 / 삽입 모드에 따라 사용할 캐럿 설정</target>
        </trans-unit>
        <trans-unit id="545684970fbe34b8dd1923692fc4cc1809958771" translate="yes" xml:space="preserve">
          <source>Set the classpath for loading using the classpath reference.</source>
          <target state="translated">클래스 경로 참조를 사용하여로드 할 클래스 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c9df854ec2220671f4b267e41eb27b732f2d2068" translate="yes" xml:space="preserve">
          <source>Set the classpath to be used for this compilation.</source>
          <target state="translated">이 컴파일에 사용할 클래스 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="15c1dd78293ecfd17dbf9348b1ae07ba99a56f73" translate="yes" xml:space="preserve">
          <source>Set the configuration file used to customize the compilation configuration.</source>
          <target state="translated">컴파일 구성을 사용자 지정하는 데 사용되는 구성 파일을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3f8586b14e7bd1e62397a2426b73c0368c8bdac5" translate="yes" xml:space="preserve">
          <source>Set the destination directory into which the Java source files should be compiled.</source>
          <target state="translated">Java 소스 파일을 컴파일 할 대상 디렉토리를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="79f937951357181daf0367034b8a87d4d38d8349" translate="yes" xml:space="preserve">
          <source>Set the directory where the Groovydoc output will be generated.</source>
          <target state="translated">Groovydoc 출력이 생성 될 디렉토리를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a41aebe7d083da919f4fc3b0458fc46656c06426" translate="yes" xml:space="preserve">
          <source>Set the encoding used to write the declaration header.</source>
          <target state="translated">선언 헤더를 작성하는 데 사용되는 인코딩을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="425b1ba55dbe3433546a6e1678e5d79ec887412f" translate="yes" xml:space="preserve">
          <source>Set the encoding used to write the declaration header. Note that it is the responsibility of the user to ensure that it matches the writer encoding.</source>
          <target state="translated">선언 헤더를 작성하는 데 사용되는 인코딩을 설정합니다. 기록기 인코딩과 일치하는지 확인하는 것은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="bb27c444e25e9129611e8517d31ba3dc7c3e1261" translate="yes" xml:space="preserve">
          <source>Set the extension to use when searching for Groovy source files.</source>
          <target state="translated">Groovy 소스 파일을 검색 할 때 사용할 확장자를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0bdb8dd9a30933e116c681367d6d449454863177" translate="yes" xml:space="preserve">
          <source>Set the extension to use when searching for Groovy source files. Accepts extensions in the form *.groovy, .groovy or groovy</source>
          <target state="translated">Groovy 소스 파일을 검색 할 때 사용할 확장자를 설정하십시오. * .groovy, .groovy 또는 groovy 형식의 확장자를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="985a1feefca558030b8387e6244e71f1d35928cb" translate="yes" xml:space="preserve">
          <source>Set the footer to place at the bottom of each generated html page.</source>
          <target state="translated">생성 된 각 html 페이지의 맨 아래에 배치 할 바닥 글을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b0634d825ca07c81918ec48145ace7485f1853a4" translate="yes" xml:space="preserve">
          <source>Set the forceLookupUnnamedFiles flag.</source>
          <target state="translated">forceLookupUnnamedFiles 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bc4683adaeb176d5c541e40bd833d7f595aa356e" translate="yes" xml:space="preserve">
          <source>Set the forceLookupUnnamedFiles flag. Defaults to false.</source>
          <target state="translated">forceLookupUnnamedFiles 플래그를 설정합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="b9298faaae3e8b39f1fe81d8c4b3c73026bd259a" translate="yes" xml:space="preserve">
          <source>Set the href attribute.</source>
          <target state="translated">href 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0a9b38b1ffbf1c7dee81b869345ac343c6f03efe" translate="yes" xml:space="preserve">
          <source>Set the indy flag.</source>
          <target state="translated">인디 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="15920866d487d50f56e725cd38db0b3bfea35a95" translate="yes" xml:space="preserve">
          <source>Set the keepStubs flag.</source>
          <target state="translated">keepStubs 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="695c9c5d2db2a26ce21186502250afe2b3b825c0" translate="yes" xml:space="preserve">
          <source>Set the keepStubs flag. Defaults to false. Set to true for debugging. Ignored when forked.</source>
          <target state="translated">keepStubs 플래그를 설정합니다. 기본값은 false입니다. 디버깅을 위해 true로 설정하십시오. 분기 될 때 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="362a17b36fd6f8feeab02638d434ea96bbd21ad6" translate="yes" xml:space="preserve">
          <source>Set the maximum number of rows to return in the ResultSet</source>
          <target state="translated">ResultSet에서 리턴 할 최대 행 수 설정</target>
        </trans-unit>
        <trans-unit id="6e03f6944fccf458cf0dd4ed6cca9676b2c2d62d" translate="yes" xml:space="preserve">
          <source>Set the metaclass for a GroovyObject.</source>
          <target state="translated">GroovyObject에 대한 메타 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="213fd8ad69156f3d45c8787caed33e86a840cd74" translate="yes" xml:space="preserve">
          <source>Set the metaclass for an object.</source>
          <target state="translated">객체의 메타 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="21fa679ea25278eeb0c42e3d5391a10646e44d74" translate="yes" xml:space="preserve">
          <source>Set the name of the file to be run.</source>
          <target state="translated">실행할 파일의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a141b8ba8e7c8798208eed7ffb0cfc69b417277b" translate="yes" xml:space="preserve">
          <source>Set the name of the file to be run. The folder of the file is automatically added to the classpath. Required unless statements are enclosed in the build file or a nested resource is supplied.</source>
          <target state="translated">실행할 파일의 이름을 설정합니다. 파일의 폴더가 클래스 경로에 자동으로 추가됩니다. 명령문이 빌드 파일에 포함되거나 중첩 된 리소스가 제공되지 않는 한 필요합니다.</target>
        </trans-unit>
        <trans-unit id="464ea923c1da41db0335a7b88f2f276292ae17f3" translate="yes" xml:space="preserve">
          <source>Set the output file; optional, defaults to the Ant log.</source>
          <target state="translated">출력 파일을 설정하십시오. 선택 사항, 기본값은 Ant 로그입니다.</target>
        </trans-unit>
        <trans-unit id="51c83a8bb71f9e77236b043dd815952088857521" translate="yes" xml:space="preserve">
          <source>Set the package names to be processed.</source>
          <target state="translated">처리 할 패키지 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d7e3c696c824aa4fd6e166d99aae44f2899e9fe8" translate="yes" xml:space="preserve">
          <source>Set the packages attribute.</source>
          <target state="translated">패키지 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5344b0411a6794baf698876cd3a8e61e766cb242" translate="yes" xml:space="preserve">
          <source>Set the property on the given object to the new value.</source>
          <target state="translated">주어진 개체의 속성을 새 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="58c78a0db5bb393c51cb83f801b6015784c677d5" translate="yes" xml:space="preserve">
          <source>Set the script base class name</source>
          <target state="translated">스크립트 기본 클래스 이름 설정</target>
        </trans-unit>
        <trans-unit id="775b56d2ad8e4aa88d970a496bfb27cffefe7595" translate="yes" xml:space="preserve">
          <source>Set the source directories to find the source Java files.</source>
          <target state="translated">소스 Java 파일을 찾으려면 소스 디렉토리를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7d61b424bac5d65804931285d0bc5ba7794cf647" translate="yes" xml:space="preserve">
          <source>Set the source position of toSet including its property expression if it has one.</source>
          <target state="translated">속성 표현식이있는 경우이를 포함하여 toSet의 소스 위치를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0ab16961b48396a84399bcc00f3780b0e75168cb" translate="yes" xml:space="preserve">
          <source>Set the source resource.</source>
          <target state="translated">소스 리소스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e251f199c23ee7ac00993c41d8d390d2438c5aff" translate="yes" xml:space="preserve">
          <source>Set the sourcepath to be used for this compilation.</source>
          <target state="translated">이 컴파일에 사용할 소스 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a3c9c81e1a5261f62a2490342f6ed8a4f3f27cc7" translate="yes" xml:space="preserve">
          <source>Set the stub directory into which the Java source stub files should be generated.</source>
          <target state="translated">Java 소스 스텁 파일이 생성되어야하는 스텁 디렉토리를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9b05e0e2d3b0b4169a1cec061e71cf5e4847a083" translate="yes" xml:space="preserve">
          <source>Set the stub directory into which the Java source stub files should be generated. The directory need not exist and will not be deleted automatically - though its contents will be cleared unless 'keepStubs' is true. Ignored when forked.</source>
          <target state="translated">Java 소스 스텁 파일이 생성되어야하는 스텁 디렉토리를 설정하십시오. 디렉토리는 존재하지 않아도되며 자동으로 삭제되지 않습니다. 'keepStubs'가 true가 아니면 그 내용은 지워집니다. 분기 될 때 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3afe0baafc9570f9ea8fadb5f684c847b62998b3" translate="yes" xml:space="preserve">
          <source>Set the template base class.</source>
          <target state="translated">템플릿 기본 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5bfe8fb0a91e1ce6b3171fabdef6b0533c5986f9" translate="yes" xml:space="preserve">
          <source>Set the template base class. You can use a distinct template class to provide more statically available data to your templates.</source>
          <target state="translated">템플릿 기본 클래스를 설정합니다. 고유 한 템플릿 클래스를 사용하여보다 정적으로 사용 가능한 데이터를 템플릿에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2aee6165ef7cd6148b5a9d88d3c48eab7a3ad09" translate="yes" xml:space="preserve">
          <source>Set the title for the overview page.</source>
          <target state="translated">개요 페이지의 제목을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2403e54c58acf77d0daf221ca3697b3c3b10e3b9" translate="yes" xml:space="preserve">
          <source>Set the title to be placed in the HTML &amp;lt;title&amp;gt; tag of the generated documentation.</source>
          <target state="translated">생성 된 문서의 HTML &amp;lt;title&amp;gt; 태그에 배치 할 제목을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="10fd4c0d77a725cc65daccf88138ac4436db304e" translate="yes" xml:space="preserve">
          <source>Set the type of this variable.</source>
          <target state="translated">이 변수의 유형을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="496870fa899cb7042b553d7d6da20ab730de7257" translate="yes" xml:space="preserve">
          <source>Set the type of this variable. If you call this method from an AST transformation and that the &lt;a href=&quot;#getAccessedVariable()&quot;&gt;accessed variable&lt;/a&gt; is (&lt;a href=&quot;#isClosureSharedVariable()&quot;&gt;shared&lt;/a&gt;, this operation is unsafe and may lead to a verify error at compile time. Instead, set the type of the &lt;a href=&quot;#getAccessedVariable()&quot;&gt;accessed variable&lt;/a&gt;</source>
          <target state="translated">이 변수의 유형을 설정하십시오. AST 변환에서이 메서드를 호출하고 &lt;a href=&quot;#getAccessedVariable()&quot;&gt;액세스 된 변수&lt;/a&gt; 가 ( &lt;a href=&quot;#isClosureSharedVariable()&quot;&gt;shared&lt;/a&gt; 이면이 작업은 안전하지 않으며 컴파일 타임에 확인 오류가 발생할 수 있습니다. 대신 &lt;a href=&quot;#getAccessedVariable()&quot;&gt;액세스 된 변수&lt;/a&gt; 의 유형을 설정하세요.</target>
        </trans-unit>
        <trans-unit id="2519eb18231eac1dd0982a11490c517a83ec1951" translate="yes" xml:space="preserve">
          <source>Set the value of this entry.</source>
          <target state="translated">이 항목의 값을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="96ec688051f165b6ed1ab94b5a224edd67618dea" translate="yes" xml:space="preserve">
          <source>Set the value of this entry. Note: In an entrySet or entrySet.iterator), unless the set or iterator is used under synchronization of the table as a whole (or you can otherwise guarantee lack of concurrent modification),</source>
          <target state="translated">이 항목의 값을 설정하십시오. 참고 : entrySet 또는 entrySet.iterator)에서 세트 또는 반복기가 테이블 전체의 동기화하에 사용되지 않는 한 (또는 동시 수정의 부족을 보장 할 수 있음),</target>
        </trans-unit>
        <trans-unit id="eb7a062a0b6ba69d7136129c02cfec08998ab139" translate="yes" xml:space="preserve">
          <source>Set the verbosity level.</source>
          <target state="translated">상세 수준을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ecd33f2fc5c9b2238426f4e126c7f0f4e19353c8" translate="yes" xml:space="preserve">
          <source>Set this option to true if you want your import rules to be checked against every class node.</source>
          <target state="translated">모든 클래스 노드에 대해 가져 오기 규칙을 확인하려면이 옵션을 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c2b4d1034f8209e2899e35bb7e17dd169e4e4303" translate="yes" xml:space="preserve">
          <source>Set this option to true if you want your import rules to be checked against every class node. This means that if someone uses a fully qualified class name, then it will also be checked against the import rules, preventing, for example, instantiation of classes without imports thanks to FQCN.</source>
          <target state="translated">모든 클래스 노드에 대해 가져 오기 규칙을 확인하려면이 옵션을 true로 설정하십시오. 즉, 누군가가 정규화 된 클래스 이름을 사용하는 경우 가져 오기 규칙에 대해서도 확인되어 FQCN 덕분에 가져 오기없이 클래스의 인스턴스화를 방지합니다.</target>
        </trans-unit>
        <trans-unit id="2b8247d404883e9df8bb9c97d77b6ae556466ba7" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want a conditional check on some of the classes.</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에 대한 조건부 검사 만 원하는 경우이를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2f71becdc49a35e956d1b4442301c5fda57e8634" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want a conditional check on some of the classes. Place annotations on the classes you want enhanced. Set to true (the default) for blanket coverage of conditional checks on all methods, loops and closures within all classes/script code. For even finer-grained control see &lt;code&gt;applyToAllMembers&lt;/code&gt;.</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에 대한 조건부 검사 만 원하는 경우이를 false로 설정하십시오. 강화하려는 클래스에 주석을 배치합니다. 모든 클래스 / 스크립트 코드 내의 모든 메서드, 루프 및 클로저에 대한 조건부 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다. 보다 세밀한 제어는 &lt;code&gt;applyToAllMembers&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="164122ff052ca3b294433aee425113070a07e0a2" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want isInterrupted checks on some of the classes.</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에 대한 isInterrupted 검사 만 원하는 경우이를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b130e13eeded5b47704cb5cd84bfad132f8d1c3d" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want isInterrupted checks on some of the classes. Place annotations on the classes you want enhanced. Set to true (the default) for blanket coverage of isInterrupted checks on all methods, loops and closures within all classes/script code. For even finer-grained control see &lt;code&gt;applyToAllMembers&lt;/code&gt;.</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에 대한 isInterrupted 검사 만 원하는 경우이를 false로 설정하십시오. 강화하려는 클래스에 주석을 배치합니다. 모든 클래스 / 스크립트 코드 내의 모든 메서드, 루프 및 클로저에 대한 isInterrupted 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다. 보다 세밀한 제어는 &lt;code&gt;applyToAllMembers&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87a7ae7472c63ed93f375ef70004296d7b65b8fc" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want timeout checks on some of the classes (or you want different time constraints on different classes).</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에서만 시간 초과 확인을 원하거나 다른 클래스에 대해 다른 시간 제한을 원하는 경우이를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="4becc08c8590c43b458164b17730ed7684acc527" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple classes within one source file and only want timeout checks on some of the classes (or you want different time constraints on different classes). Place an annotation with appropriate parameters on each class you want enhanced. Set to true (the default) for blanket coverage of timeout checks on all methods, loops and closures within all classes/script code. For even finer-grained control see &lt;code&gt;applyToAllMembers&lt;/code&gt;.</source>
          <target state="translated">하나의 소스 파일 내에 여러 클래스가 있고 일부 클래스에서만 시간 초과 확인을 원하거나 다른 클래스에 대해 다른 시간 제한을 원하는 경우이를 false로 설정하십시오. 향상시키려는 각 클래스에 적절한 매개 변수가있는 주석을 배치하십시오. 모든 클래스 / 스크립트 코드 내의 모든 메서드, 루프 및 클로저에 대한 제한 시간 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다. 보다 세밀한 제어는 &lt;code&gt;applyToAllMembers&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f888beabda02aa0dce34a1ab81b4173744aa452" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want conditional checks on some of them.</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 일부에 대한 조건부 검사 만 원하는 경우이 값을 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="dd98865fc85ee3f0996f58aa3462bd0ea0925f62" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want conditional checks on some of them. Place annotations on the methods/closures that you want enhanced. When false, &lt;code&gt;applyToAllClasses&lt;/code&gt; is automatically set to false. Set to true (the default) for blanket coverage of conditional checks on all methods, loops and closures within the class/script.</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 일부에 대한 조건부 검사 만 원하는 경우이 값을 false로 설정하십시오. 개선하려는 방법 / 종료에 주석을 배치합니다. false이면 &lt;code&gt;applyToAllClasses&lt;/code&gt; 가 자동으로 false로 설정됩니다. 클래스 / 스크립트 내의 모든 메서드, 루프 및 클로저에 대한 조건부 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9b1f2326735aed90b64cc60805a6c534c66d087b" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want isInterrupted checks on some of them.</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 그중 일부에 대한 isInterrupted 검사 만 원하는 경우이를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9f9d596ce81411d2fd6694eab666b3cdac9dbf84" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want isInterrupted checks on some of them. Place annotations on the methods/closures that you want enhanced. When false, &lt;code&gt;applyToAllClasses&lt;/code&gt; is automatically set to false. Set to true (the default) for blanket coverage of isInterrupted checks on all methods, loops and closures within the class/script.</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 그중 일부에 대한 isInterrupted 검사 만 원하는 경우이를 false로 설정하십시오. 개선하려는 방법 / 종료에 주석을 배치합니다. false이면 &lt;code&gt;applyToAllClasses&lt;/code&gt; 가 자동으로 false로 설정됩니다. 클래스 / 스크립트 내의 모든 메서드, 루프 및 클로저에 대한 isInterrupted 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cc12ca85c3a5b40c248558d88449957a968613c0" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want timeout checks on some of them (or you want different time constraints on different methods/closures).</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 그중 일부에 대해서만 시간 초과 확인을 원하는 경우 (또는 다른 메서드 / 클로저에 대해 다른 시간 제한을 원하는 경우)이를 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c18d1ada2d2ef6f23bcf1659e84a360418c44e51" translate="yes" xml:space="preserve">
          <source>Set this to false if you have multiple methods/closures within a class or script and only want timeout checks on some of them (or you want different time constraints on different methods/closures). Place annotations with appropriate parameters on the methods/closures that you want enhanced. When false, &lt;code&gt;applyToAllClasses&lt;/code&gt; is automatically set to false. Set to true (the default) for blanket coverage of timeout checks on all methods, loops and closures within the class/script.</source>
          <target state="translated">클래스 또는 스크립트 내에 여러 메서드 / 클로저가 있고 그중 일부에 대해서만 시간 초과 확인을 원하는 경우 (또는 다른 메서드 / 클로저에 대해 다른 시간 제한을 원하는 경우)이를 false로 설정하십시오. 개선하려는 메소드 / 클로저에 적절한 매개 변수가있는 주석을 배치하십시오. false이면 &lt;code&gt;applyToAllClasses&lt;/code&gt; 가 자동으로 false로 설정됩니다. 클래스 / 스크립트 내의 모든 메서드, 루프 및 클로저에 대한 제한 시간 검사를 포괄적으로 적용하려면 true (기본값)로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f465a2b4cb4393c5e870c4ab375ee59c37a3fe91" translate="yes" xml:space="preserve">
          <source>Set this to true if you want the template engine to render indents automatically.</source>
          <target state="translated">템플릿 엔진이 들여 쓰기를 자동으로 렌더링하도록하려면 이것을 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="900782ccf5029a18b46a9726e4ac617ee449d40f" translate="yes" xml:space="preserve">
          <source>Set this to true if you want the template engine to render indents automatically. In that case, the supplied writer is wrapped into a &lt;a href=&quot;delegatingindentwriter&quot;&gt;DelegatingIndentWriter&lt;/a&gt; and indents are inserted after each call to newLine.</source>
          <target state="translated">템플릿 엔진이 들여 쓰기를 자동으로 렌더링하도록하려면 이것을 true로 설정하십시오. 이 경우 제공된 작성기는 &lt;a href=&quot;delegatingindentwriter&quot;&gt;DelegatingIndentWriter&lt;/a&gt; 로 래핑되고 newLine을 호출 할 때마다 들여 쓰기가 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="76e21fd6bddac765f3522c08efd6b59bb9216d37" translate="yes" xml:space="preserve">
          <source>Set to false if you want to disable automatic downloading of locally missing jars.</source>
          <target state="translated">로컬에서 누락 된 jar의 자동 다운로드를 비활성화하려면 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="340d9505f8557f07ded4fe13a561ffa4b7534101" translate="yes" xml:space="preserve">
          <source>Set to true if you want the context classloader to be initialised to the classloader of the current class or script.</source>
          <target state="translated">컨텍스트 클래스 로더를 현재 클래스 또는 스크립트의 클래스 로더로 초기화하려면 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bc75ac24604d3a8a3888f85731fdf61c9f55cfce" translate="yes" xml:space="preserve">
          <source>Set to true if you want the context classloader to be initialised to the classloader of the current class or script. This is useful for libraries or frameworks that assume that the context classloader has been set. But be careful when using this flag as your script or class might behave differently when called directly (from the command line or from an IDE) versus when called from within a container, e.g. a web container or a JEE container.</source>
          <target state="translated">컨텍스트 클래스 로더를 현재 클래스 또는 스크립트의 클래스 로더로 초기화하려면 true로 설정하십시오. 이는 컨텍스트 클래스 로더가 설정되었다고 가정하는 라이브러리 또는 프레임 워크에 유용합니다. 그러나이 플래그를 스크립트 나 클래스로 사용할 때는 직접 (명령 줄 또는 IDE에서) 호출 할 때와 컨테이너 (예 : 웹 컨테이너 또는 JEE 컨테이너)에서 호출 할 때 다르게 동작 할 수 있으므로주의하십시오.</target>
        </trans-unit>
        <trans-unit id="e09151a10aa66d1bf10b5b67088171eab90e87d5" translate="yes" xml:space="preserve">
          <source>Set to true if you want to disable checksum checking.</source>
          <target state="translated">체크섬 검사를 비활성화하려면 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f7c714f6dceb904d9a4336a58caaa61474ca0c0c" translate="yes" xml:space="preserve">
          <source>Set to true if you want to use the system classloader when loading the grape.</source>
          <target state="translated">포도를로드 할 때 시스템 클래스 로더를 사용하려면 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7220931bacacf9c555dbab7287230dfbae4d7d7f" translate="yes" xml:space="preserve">
          <source>Set to true if you want to use the system classloader when loading the grape. This is normally only required when a core Java class needs to reference the grabbed classes, e.g. for a database driver accessed using DriverManager.</source>
          <target state="translated">포도를로드 할 때 시스템 클래스 로더를 사용하려면 true로 설정하십시오. 이는 일반적으로 핵심 Java 클래스가 예를 들어 DriverManager를 사용하여 액세스 한 데이터베이스 드라이버에 대해 파악 된 클래스를 참조해야하는 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="241594f86978c374dc13e9f57b909ed3f11c72ff" translate="yes" xml:space="preserve">
          <source>Set to true if you want variables in the model which are assignable to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html&quot;&gt;CharSequence&lt;/a&gt; to be escaped automatically in templates.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html&quot;&gt;CharSequence&lt;/a&gt; 에 할당 할 수있는 모델의 변수 를 템플릿에서 자동으로 이스케이프 하려면 true로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="15e87d981e0262c824906e3c7dffc15d4188fcd4" translate="yes" xml:space="preserve">
          <source>Set to true if you want variables in the model which are assignable to &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html&quot;&gt;CharSequence&lt;/a&gt; to be escaped automatically in templates. If this flag is set to true and that you want a value not to be automatically escaped, then you need to use</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html&quot;&gt;CharSequence&lt;/a&gt; 에 할당 할 수있는 모델의 변수 를 템플릿에서 자동으로 이스케이프 하려면 true로 설정합니다 . 이 플래그가 true로 설정되어 있고 값이 자동으로 이스케이프되지 않도록하려면 다음을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b5d0b599bef1cf060fd68987cbc9666c7453398" translate="yes" xml:space="preserve">
          <source>Set to true so that comparator uses reversed natural order.</source>
          <target state="translated">비교기가 반전 된 자연 순서를 사용하도록 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f5c8269231a1099e48ecfcbd83bc1ddcb3e07ab3" translate="yes" xml:space="preserve">
          <source>Set.remove</source>
          <target state="translated">Set.remove</target>
        </trans-unit>
        <trans-unit id="f0a1f74f3eccb027a96032c282e868657157acb8" translate="yes" xml:space="preserve">
          <source>Sets a ClassgenCallback.</source>
          <target state="translated">ClassgenCallback을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="610e59d2058833f97fe4ff3a23794cf4d2721d85" translate="yes" xml:space="preserve">
          <source>Sets a ClassgenCallback. You can have only one, and setting it to &lt;code&gt;null&lt;/code&gt; removes any existing setting.</source>
          <target state="translated">ClassgenCallback을 설정합니다. 하나만 가질 수 있으며 &lt;code&gt;null&lt;/code&gt; 로 설정하면 기존 설정이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="8743e176cd46ffe487249eebae6492100188bd67" translate="yes" xml:space="preserve">
          <source>Sets a ProgressCallback.</source>
          <target state="translated">ProgressCallback을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b40ac6749c97f5bdb34f7b22fb501fa85b17e8b7" translate="yes" xml:space="preserve">
          <source>Sets a ProgressCallback. You can have only one, and setting it to &lt;code&gt;null&lt;/code&gt; removes any existing setting.</source>
          <target state="translated">ProgressCallback을 설정합니다. 하나만 가질 수 있으며 &lt;code&gt;null&lt;/code&gt; 로 설정하면 기존 설정이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="a56b720176c35418361144e4f8e4b8bd7993f170" translate="yes" xml:space="preserve">
          <source>Sets a handle internally used to create MetaClass implementations.</source>
          <target state="translated">MetaClass 구현을 만드는 데 내부적으로 사용되는 핸들을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2a9452b3305f1a3d17dced5e108ca3c3d1034fc2" translate="yes" xml:space="preserve">
          <source>Sets a handle internally used to create MetaClass implementations. When replacing the handle with a custom version, you should reuse the old handle to keep custom logic and to use the default logic as fall back. WARNING: experimental code, likely to change soon</source>
          <target state="translated">MetaClass 구현을 만드는 데 내부적으로 사용되는 핸들을 설정합니다. 핸들을 사용자 지정 버전으로 바꿀 때 사용자 지정 논리를 유지하고 기본 논리를 대체로 사용하려면 이전 핸들을 다시 사용해야합니다. 경고 : 곧 변경 될 가능성이있는 실험용 코드</target>
        </trans-unit>
        <trans-unit id="41d34301c2d28de8960bdb2ad43999587372338b" translate="yes" xml:space="preserve">
          <source>Sets a method call target for a direct method call.</source>
          <target state="translated">직접 메서드 호출에 대한 메서드 호출 대상을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6cf8122d43109c4ac27cc7d2b83172c9438e5f94" translate="yes" xml:space="preserve">
          <source>Sets a method call target for a direct method call. WARNING: A method call made this way will run outside of the MOP!</source>
          <target state="translated">직접 메서드 호출에 대한 메서드 호출 대상을 설정합니다. 경고 :이 방법으로 만든 메서드 호출은 MOP 외부에서 실행됩니다!</target>
        </trans-unit>
        <trans-unit id="d35e31367c4957559b27f1318cf429fee72a4a71" translate="yes" xml:space="preserve">
          <source>Sets a new bundle used for reference creation.</source>
          <target state="translated">참조 생성에 사용되는 새 번들을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="59d2bd2dc1553002ec3e2127c5f2fac9e670b448" translate="yes" xml:space="preserve">
          <source>Sets a new bundle used for reference creation. Be warned that older entries will not be changed by this</source>
          <target state="translated">참조 생성에 사용되는 새 번들을 설정합니다. 이전 항목은 이로 인해 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="46bb16588c0c0a4d55df215bff4651672997e776" translate="yes" xml:space="preserve">
          <source>Sets a new value for a given key. an older value is overwritten.</source>
          <target state="translated">주어진 키에 대한 새 값을 설정합니다. 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="8f970180e7e6c846073fe2e79206847c2b58bb4f" translate="yes" xml:space="preserve">
          <source>Sets a property of an instance of the class returned by the getTheClass() method.</source>
          <target state="translated">getTheClass () 메서드에서 반환 된 클래스 인스턴스의 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9f4643b3eea7669826b94b40c926d40dc2b46ae3" translate="yes" xml:space="preserve">
          <source>Sets a property on the given receiver for the specified arguments. The sender is the class that is setting the property from the object. The MetaClass will attempt to establish the method to invoke based on the name and arguments provided.</source>
          <target state="translated">지정된 인수에 대해 지정된 수신자의 속성을 설정합니다. 보낸 사람은 개체에서 속성을 설정하는 클래스입니다. MetaClass는 제공된 이름과 인수를 기반으로 호출 할 메서드를 설정하려고합니다.</target>
        </trans-unit>
        <trans-unit id="1ee5c21f69ff7214f34d47c94a389c3e8b84af1f" translate="yes" xml:space="preserve">
          <source>Sets a system property from a &lt;code&gt;name=value&lt;/code&gt; String.</source>
          <target state="translated">&lt;code&gt;name=value&lt;/code&gt; 문자열 에서 시스템 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="320c697582019435497763c4b9604e609ccab6d7" translate="yes" xml:space="preserve">
          <source>Sets a system property from a &lt;code&gt;name=value&lt;/code&gt; String. If no '=' is found, the property is assumed to be a Boolean flag with value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name=value&lt;/code&gt; 문자열 에서 시스템 속성을 설정합니다 . '='이 없으면 속성은 값이 &lt;code&gt;true&lt;/code&gt; 인 부울 플래그로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5aca322a3ca45e1afd9bdccb0f3233e460b95e5" translate="yes" xml:space="preserve">
          <source>Sets a system property from a &lt;code&gt;name=value&lt;/code&gt; String. If no '=' is found, the property is assumed to be a Boolean flag with value &lt;code&gt;true&lt;/code&gt;. Does nothing if a Security manager is in place which doesn't allow the operation.</source>
          <target state="translated">&lt;code&gt;name=value&lt;/code&gt; 문자열 에서 시스템 속성을 설정합니다 . '='이 없으면 속성은 값이 &lt;code&gt;true&lt;/code&gt; 인 부울 플래그로 간주됩니다 . 작업을 허용하지 않는 보안 관리자가있는 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8eaaff8ff016c2e4582ae4a8157f376a86afc20f" translate="yes" xml:space="preserve">
          <source>Sets an attribute of an instance of the class returned by the getTheClass() method.</source>
          <target state="translated">getTheClass () 메서드에 의해 반환 된 클래스의 인스턴스 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="840c6701e867aa73ba7a030abed858b888f7fad3" translate="yes" xml:space="preserve">
          <source>Sets an element in at the specified index.</source>
          <target state="translated">지정된 인덱스에 요소를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b631e2c1dcee8b664605d56791f112982990d683" translate="yes" xml:space="preserve">
          <source>Sets an element node in at the specified index.</source>
          <target state="translated">지정된 인덱스에서 요소 노드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="09cc35fd29019a608e03d410867e7b3a02762907" translate="yes" xml:space="preserve">
          <source>Sets an element node in at the specified index. Returns the element for convenience. Not all nodes support this operation!</source>
          <target state="translated">지정된 인덱스에서 요소 노드를 설정합니다. 편의를 위해 요소를 반환합니다. 모든 노드가이 작업을 지원하는 것은 아닙니다!</target>
        </trans-unit>
        <trans-unit id="00ec0a38915add49c065c23d8db46d53c6948606" translate="yes" xml:space="preserve">
          <source>Sets any additional variables that should be placed into the binding when evaluating Config scripts</source>
          <target state="translated">구성 스크립트를 평가할 때 바인딩에 배치해야하는 추가 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="342aa1c87d0d41a7552096ddc6988df21fd30f4d" translate="yes" xml:space="preserve">
          <source>Sets location(lineNumber, colNumber, lastLineNumber, lastColumnNumber) for node using standard context information.</source>
          <target state="translated">표준 컨텍스트 정보를 사용하여 노드의 위치 (lineNumber, colNumber, lastLineNumber, lastColumnNumber)를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="450810535698487092afd67a8b891bd6c1b797b8" translate="yes" xml:space="preserve">
          <source>Sets location(lineNumber, colNumber, lastLineNumber, lastColumnNumber) for node using standard context information. Note: this method is implemented to be closed over ASTNode. It returns same node as it received in arguments.</source>
          <target state="translated">표준 컨텍스트 정보를 사용하여 노드의 위치 (lineNumber, colNumber, lastLineNumber, lastColumnNumber)를 설정합니다. 참고 :이 메서드는 ASTNode를 통해 닫히도록 구현됩니다. 인수로받은 것과 동일한 노드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a12b959ccb671bf4db90f0b8361d5f728466b3cc" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#expandArgumentFiles&quot;&gt;expandArgumentFiles&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and on the &lt;a href=&quot;#parser&quot;&gt;parser&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 및 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#parser&quot;&gt;파서&lt;/a&gt; 에 &lt;a href=&quot;#expandArgumentFiles&quot;&gt;expandArgumentFiles&lt;/a&gt; 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="59de8ac5c19b9e1b077c3b7d085ab579513cac24" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#expandArgumentFiles&quot;&gt;expandArgumentFiles&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and on the &lt;a href=&quot;#parser&quot;&gt;parser&lt;/a&gt; used by the underlying library. @-files</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 및 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#parser&quot;&gt;파서&lt;/a&gt; 에 &lt;a href=&quot;#expandArgumentFiles&quot;&gt;expandArgumentFiles&lt;/a&gt; 속성을 설정합니다 . @-파일</target>
        </trans-unit>
        <trans-unit id="fc25072815403fa7cd983560080cf3d17f34cbf8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#footer&quot;&gt;footer&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and on the &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 및 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; 에 대한 &lt;a href=&quot;#footer&quot;&gt;바닥 글&lt;/a&gt; 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2c5aa4b8f228cfe416ea840f7565e9ea8c3894f1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#header&quot;&gt;header&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and the &lt;code&gt;description&lt;/code&gt; on the &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 의 &lt;a href=&quot;#header&quot;&gt;헤더&lt;/a&gt; 속성 과 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; 의 &lt;code&gt;description&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7dd9ef8bb4a633bd8725bcf1f41113713a9347e9" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#posix&quot;&gt;posix&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and the &lt;code&gt;posixClusteredShortOptionsAllowed&lt;/code&gt; property on the &lt;a href=&quot;#parser&quot;&gt;parser&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">설정합니다 &lt;a href=&quot;#posix&quot;&gt;POSIX의&lt;/a&gt; 이에 재산 &lt;code&gt;CliBuilder&lt;/code&gt; 과 &lt;code&gt;posixClusteredShortOptionsAllowed&lt;/code&gt; 의 상의 특성 &lt;a href=&quot;#parser&quot;&gt;파서&lt;/a&gt; 기본 라이브러리에 의해 사용.</target>
        </trans-unit>
        <trans-unit id="4302037dfb67df156b82f9fa2895fbc07467e372" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#stopAtNonOption&quot;&gt;stopAtNonOption&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and the &lt;code&gt;stopAtPositional&lt;/code&gt; property on the &lt;a href=&quot;#parser&quot;&gt;parser&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">설정합니다 &lt;a href=&quot;#stopAtNonOption&quot;&gt;stopAtNonOption의&lt;/a&gt; 이에 재산 &lt;code&gt;CliBuilder&lt;/code&gt; 과 &lt;code&gt;stopAtPositional&lt;/code&gt; 상의 특성 &lt;a href=&quot;#parser&quot;&gt;파서&lt;/a&gt; 기본 라이브러리에 의해 사용.</target>
        </trans-unit>
        <trans-unit id="c3424787c34b815873e25f63ad0fb61374fd1904" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#usage&quot;&gt;usage&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and the &lt;code&gt;customSynopsis&lt;/code&gt; on the &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 의 &lt;a href=&quot;#usage&quot;&gt;사용&lt;/a&gt; 속성 과 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; 의 &lt;code&gt;customSynopsis&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="79ae664316d45aa93710e5e044448e651c47a666" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt; property on this &lt;code&gt;CliBuilder&lt;/code&gt; and on the &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; used by the underlying library.</source>
          <target state="translated">이 &lt;code&gt;CliBuilder&lt;/code&gt; 및 기본 라이브러리에서 사용 하는 &lt;a href=&quot;#usageMessage&quot;&gt;usageMessage&lt;/a&gt; 의 &lt;a href=&quot;#width&quot;&gt;너비&lt;/a&gt; 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="bb53e32dbdf39379d97655b3e87e55b2b7871151" translate="yes" xml:space="preserve">
          <source>Sets the CompilerConfiguration for this ProcessingUnit.</source>
          <target state="translated">이 ProcessingUnit에 대한 CompilerConfiguration을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8439dba9182b40bf0030422a938deac39040b8a5" translate="yes" xml:space="preserve">
          <source>Sets the MetaClass adapted by this MetaClass</source>
          <target state="translated">이 MetaClass에 의해 조정 된 MetaClass를 설정합니다</target>
        </trans-unit>
        <trans-unit id="b1d68a9e082164e38a16b3c793571075ac9b9b26" translate="yes" xml:space="preserve">
          <source>Sets the MetaClassCreationHandle instance that is responsible for constructing instances</source>
          <target state="translated">인스턴스 생성을 담당하는 MetaClassCreationHandle 인스턴스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4b1f56a2171c054900340aee2d0239efd25b0a50" translate="yes" xml:space="preserve">
          <source>Sets the RootLoader as reference. Re-execution of this task will set a new instance of RootLoader for the reference. arguments:</source>
          <target state="translated">RootLoader를 참조로 설정합니다. 이 작업을 다시 실행하면 참조 용으로 RootLoader의 새 인스턴스가 설정됩니다. 인수 :</target>
        </trans-unit>
        <trans-unit id="f4e4d7d9ecf7f822ef74f8130a5880042ab79573" translate="yes" xml:space="preserve">
          <source>Sets the bug text to describe this error</source>
          <target state="translated">이 오류를 설명하는 버그 텍스트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="372a1d02133e3e550e48a433f04661011094a781" translate="yes" xml:space="preserve">
          <source>Sets the builder to be used as a proxy.</source>
          <target state="translated">프록시로 사용할 빌더를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c7ac1997959ca6e16fbd8ee5e16ddfbba1de00be" translate="yes" xml:space="preserve">
          <source>Sets the bytecode compatibility level.</source>
          <target state="translated">바이트 코드 호환성 수준을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="30450bc3bd76ae7a773ef543aec564a2b73cd9cc" translate="yes" xml:space="preserve">
          <source>Sets the bytecode compatibility level. The parameter can take one of the values in &lt;a href=&quot;#ALLOWED_JDKS&quot;&gt;ALLOWED_JDKS&lt;/a&gt;.</source>
          <target state="translated">바이트 코드 호환성 수준을 설정합니다. 매개 변수는 &lt;a href=&quot;#ALLOWED_JDKS&quot;&gt;ALLOWED_JDKS&lt;/a&gt; 의 값 중 하나를 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d536efde048698b91ba40a248543b2f8055114a6" translate="yes" xml:space="preserve">
          <source>Sets the bytecode compatibility level. The parameter can take one of the values in &lt;a href=&quot;../control/compilerconfiguration#ALLOWED_JDKS&quot;&gt;CompilerConfiguration.ALLOWED_JDKS&lt;/a&gt;.</source>
          <target state="translated">바이트 코드 호환성 수준을 설정합니다. 매개 변수는 &lt;a href=&quot;../control/compilerconfiguration#ALLOWED_JDKS&quot;&gt;CompilerConfiguration.ALLOWED_JDKS&lt;/a&gt; 의 값 중 하나를 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df0f85ad8e626a6bd8cef5e94476ec08fc89e694" translate="yes" xml:space="preserve">
          <source>Sets the class loader for use by this ProcessingUnit.</source>
          <target state="translated">이 ProcessingUnit에서 사용할 클래스 로더를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7aa284bfca8bcac894e6863c4dbe1d432b34139d" translate="yes" xml:space="preserve">
          <source>Sets the classLoader used to load a node's class.</source>
          <target state="translated">노드의 클래스를로드하는 데 사용되는 classLoader를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="aded5567c1929a6b87246608605cc190cc7e99d1" translate="yes" xml:space="preserve">
          <source>Sets the classpath for loading.</source>
          <target state="translated">로드 할 클래스 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="092f76b8d112610b239125f668342a88122752c0" translate="yes" xml:space="preserve">
          <source>Sets the classpath.</source>
          <target state="translated">클래스 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9412c2fa14a7c8cded1a10f12b35101eefcea763" translate="yes" xml:space="preserve">
          <source>Sets the compiler flags/settings to default values.</source>
          <target state="translated">컴파일러 플래그 / 설정을 기본값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="36f05849870ab3f91cf7ec286844ecdae9013981" translate="yes" xml:space="preserve">
          <source>Sets the compiler flags/settings to default values. The following system properties are referenced when setting the configuration:</source>
          <target state="translated">컴파일러 플래그 / 설정을 기본값으로 설정합니다. 구성을 설정할 때 다음 시스템 속성이 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="0e13b6cca183c9ba9d9ab396eb15437791c0a499" translate="yes" xml:space="preserve">
          <source>Sets the configuration flags/settings according to values from the supplied &lt;code&gt;Properties&lt;/code&gt; instance or if not found, supplying a default value.</source>
          <target state="translated">제공된 &lt;code&gt;Properties&lt;/code&gt; 인스턴스의 값에 따라 구성 플래그 / 설정을 설정 하거나 찾을 수없는 경우 기본값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3a4ae59e223cd71c8ed147bda0bb977f3ca21f24" translate="yes" xml:space="preserve">
          <source>Sets the configuration flags/settings according to values from the supplied &lt;code&gt;Properties&lt;/code&gt; instance or if not found, supplying a default value. Note that unlike &lt;a href=&quot;#CompilerConfiguration()&quot;&gt;CompilerConfiguration()&lt;/a&gt;, the &quot;defaults&quot; here do &lt;em&gt;not&lt;/em&gt; in general include checking the settings in &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#getProperties()&quot;&gt;System.getProperties&lt;/a&gt;. If you want to set a few flags but keep Groovy's default configuration behavior then be sure to make your settings in a &lt;code&gt;Properties&lt;/code&gt; object that is backed by &lt;code&gt;System.getProperties()&lt;/code&gt; (which is done using this constructor). That might be done like this:</source>
          <target state="translated">제공된 &lt;code&gt;Properties&lt;/code&gt; 인스턴스의 값에 따라 구성 플래그 / 설정을 설정 하거나 찾을 수없는 경우 기본값을 제공합니다. &lt;a href=&quot;#CompilerConfiguration()&quot;&gt;CompilerConfiguration ()&lt;/a&gt; 과 달리 여기서 &quot;기본값&quot; 에는 일반적으로 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/System.html#getProperties()&quot;&gt;System.getProperties&lt;/a&gt; 의 설정 확인이 포함 &lt;em&gt;되지 않습니다&lt;/em&gt; . 몇 가지 플래그를 설정하고 싶지만 Groovy의 기본 구성 동작을 유지하려면 &lt;code&gt;System.getProperties()&lt;/code&gt; (이 생성자를 사용하여 수행됨 ) 가 지원 하는 &lt;code&gt;Properties&lt;/code&gt; 객체 에서 설정을 구성해야합니다 . 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="909c3858185a2d075d517fdc2887107deec9df10" translate="yes" xml:space="preserve">
          <source>Sets the configuration script for the groovy compiler configuration.</source>
          <target state="translated">그루비 컴파일러 구성을위한 구성 스크립트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="188a3bfc001e4b402e6e98453c9d13495db62ee5" translate="yes" xml:space="preserve">
          <source>Sets the contents of this sequence to that of the given collection.</source>
          <target state="translated">이 시퀀스의 내용을 지정된 컬렉션의 내용으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="32ec426b688f03834a53c37bfa65a59870b2aff7" translate="yes" xml:space="preserve">
          <source>Sets the current ChildPropertySetter.</source>
          <target state="translated">현재 ChildPropertySetter를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1c47a521a76f95b011972f77245178b91ecb3d28" translate="yes" xml:space="preserve">
          <source>Sets the current ClassNameResolver.</source>
          <target state="translated">현재 ClassNameResolver를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="10cc4bd4dc9c635a01e3d8882d166341738e012a" translate="yes" xml:space="preserve">
          <source>Sets the current IdentifierResolver.</source>
          <target state="translated">현재 IdentifierResolver를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff16bb6e1c880dd0ca8b43945143bb04eaa41e32" translate="yes" xml:space="preserve">
          <source>Sets the current NewInstanceResolver.</source>
          <target state="translated">현재 NewInstanceResolver를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="729a8777f6462e6f801df57688b7c96beb011a4f" translate="yes" xml:space="preserve">
          <source>Sets the current ReferenceResolver.</source>
          <target state="translated">현재 ReferenceResolver를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3255b68b83119f5ab0bfd7429f81d1d0da5ecea7" translate="yes" xml:space="preserve">
          <source>Sets the current RelationNameResolver.</source>
          <target state="translated">현재 RelationNameResolver를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="22c5a78422daec7fd0e3c2568dc2f139e291e32d" translate="yes" xml:space="preserve">
          <source>Sets the current class node context.</source>
          <target state="translated">현재 클래스 노드 컨텍스트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="99068376b10a74bccbb41eda3659c6d72f4bf2de" translate="yes" xml:space="preserve">
          <source>Sets the date format that will be used to serialize &lt;code&gt;Date&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 개체 를 직렬화하는 데 사용할 날짜 형식을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="b6b3ccd920e05d0ecdb61f1f947a4353c457ba71" translate="yes" xml:space="preserve">
          <source>Sets the date format that will be used to serialize &lt;code&gt;Date&lt;/code&gt; objects. This must be a valid pattern for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt; and the date formatter will be constructed with the default locale of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#US&quot;&gt;Locale.US&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 개체 를 직렬화하는 데 사용할 날짜 형식을 설정 합니다. 이것은 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat에&lt;/a&gt; 대해 유효한 패턴이어야하며 날짜 포맷터는 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#US&quot;&gt;Locale.US&lt;/a&gt; 의 기본 로케일로 구성 됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a13e3fae17f57759b1a8f64a3716e222d653956" translate="yes" xml:space="preserve">
          <source>Sets the date format that will be used to serialize &lt;code&gt;Date&lt;/code&gt; objects. This must be a valid pattern for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 개체 를 직렬화하는 데 사용할 날짜 형식을 설정 합니다. &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat에&lt;/a&gt; 대해 유효한 패턴이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="baa22ec74056d4105cd3b7cb2f4ca71cdd8e4dd9" translate="yes" xml:space="preserve">
          <source>Sets the delegation target.</source>
          <target state="translated">위임 대상을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="df61a36f912f30dda1922c8b944cc84253edddd9" translate="yes" xml:space="preserve">
          <source>Sets the encoding to be used when reading source files.</source>
          <target state="translated">소스 파일을 읽을 때 사용할 인코딩을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7d077bf698905edcdaa4a24fbdbd1c4125f8f61e" translate="yes" xml:space="preserve">
          <source>Sets the error tolerance, which is the number of non-fatal errors (per unit) that should be tolerated before compilation is aborted.</source>
          <target state="translated">컴파일이 중단되기 전에 허용되어야하는 치명적이지 않은 오류 (단위당)의 수인 오류 허용치를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="27339dbada0efd4551cf8051f317b1cf997e07dd" translate="yes" xml:space="preserve">
          <source>Sets the field of this property</source>
          <target state="translated">이 속성의 필드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bb3602e22bfb75a9f68db7ca915156088c34db2e" translate="yes" xml:space="preserve">
          <source>Sets the file encoding for generated files.</source>
          <target state="translated">생성 된 파일의 파일 인코딩을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="982edff5fcf4a69a81a4fa027213f526f2690aab" translate="yes" xml:space="preserve">
          <source>Sets the flag for this method to indicate it is a script body implementation.</source>
          <target state="translated">이 메서드에 대한 플래그를 설정하여 스크립트 본문 구현임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ff20f125b85e5c0912f45c4ef315004bd45079f0" translate="yes" xml:space="preserve">
          <source>Sets the given property to the new value.</source>
          <target state="translated">주어진 속성을 새 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c50b56b8bc6bd7d388c0e44dca6919c5496d5deb" translate="yes" xml:space="preserve">
          <source>Sets the horizontal alignment to a case insensitive value of {LEFT, CENTER, RIGHT}</source>
          <target state="translated">수평 정렬을 대소 문자를 구분하지 않는 {LEFT, CENTER, RIGHT} 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="812fe236737beceece181aa6a8cf3abc28522647" translate="yes" xml:space="preserve">
          <source>Sets the indy flag to enable or disable invokedynamic</source>
          <target state="translated">invokedynamic을 사용하거나 사용하지 않도록 indy 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a55dfa40b5ee098bcbc617ba649190e201486093" translate="yes" xml:space="preserve">
          <source>Sets the internal flag if the current annotation has &lt;code&gt;RetentionPolicy.SOURCE&lt;/code&gt;.</source>
          <target state="translated">현재 주석에 &lt;code&gt;RetentionPolicy.SOURCE&lt;/code&gt; 가있는 경우 내부 플래그를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2b020cbc5cd69af293f65aa270b02a0d865b97f9" translate="yes" xml:space="preserve">
          <source>Sets the internal flag if the current annotation has an explicit &lt;code&gt;RetentionPolicy.CLASS&lt;/code&gt;.</source>
          <target state="translated">현재 주석에 명시적인 &lt;code&gt;RetentionPolicy.CLASS&lt;/code&gt; 가있는 경우 내부 플래그를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="fb9feed99dc3bc58bfafd93f9d3aab25f53a36df" translate="yes" xml:space="preserve">
          <source>Sets the joint compilation options for this configuration.</source>
          <target state="translated">이 구성에 대한 공동 컴파일 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dfdb10206a69e7f6c4668c3d3a646aa709a558b6" translate="yes" xml:space="preserve">
          <source>Sets the joint compilation options for this configuration. Using null will disable joint compilation.</source>
          <target state="translated">이 구성에 대한 공동 컴파일 옵션을 설정합니다. null을 사용하면 공동 컴파일이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="e074e28010adafceac497919ed192487f4d5ef76" translate="yes" xml:space="preserve">
          <source>Sets the keep ignorable whitespace setting value.</source>
          <target state="translated">무시할 수있는 공백 유지 설정 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="58dd435631ed5c7f412551e145959fc11448af29" translate="yes" xml:space="preserve">
          <source>Sets the lexer that is using this reader.</source>
          <target state="translated">이 리더를 사용하는 어휘 분석기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c46f03a5af203d11a65fb56fbeb4cf58b87f042a" translate="yes" xml:space="preserve">
          <source>Sets the lexer that is using this reader. Must be called before the lexer is used.</source>
          <target state="translated">이 리더를 사용하는 어휘 분석기를 설정합니다. 어휘 분석기를 사용하기 전에 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ad8a415071fafbf43bec7fac7a8746101523021" translate="yes" xml:space="preserve">
          <source>Sets the list of classes which deny method calls.</source>
          <target state="translated">메서드 호출을 거부하는 클래스 목록을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="40adb948bd7f677fd0cfbfbe4291c45a186b495a" translate="yes" xml:space="preserve">
          <source>Sets the list of classes which deny method calls. Please note that since Groovy is a dynamic language, and this class performs a static type check, it will be relatively simple to bypass any disallowed list unless the disallowed receivers list contains, at a minimum, Object, Script, GroovyShell, and Eval. Additionally, it is necessary to also have MethodPointerExpression in the disallowed expressions list for the disallowed receivers list to function as a security check.</source>
          <target state="translated">메서드 호출을 거부하는 클래스 목록을 설정합니다. Groovy는 동적 언어이고이 클래스는 정적 유형 검사를 수행하기 때문에 허용되지 않는 수신자 목록에 최소한 Object, Script, GroovyShell 및 Eval이 포함되어 있지 않으면 허용되지 않는 목록을 우회하는 것이 상대적으로 간단합니다. 또한 허용되지 않는 수신자 목록이 보안 검사로 작동하려면 허용되지 않는 표현식 목록에 MethodPointerExpression이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="838d21c192fb497781a426d79d102f23f3dde4e9" translate="yes" xml:space="preserve">
          <source>Sets the list of classes which may accept method calls.</source>
          <target state="translated">메서드 호출을 허용 할 수있는 클래스 목록을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="170894e44d3d1e721aec9c7239fcc605a6bd90d0" translate="yes" xml:space="preserve">
          <source>Sets the list of tokens which are not permitted.</source>
          <target state="translated">허용되지 않는 토큰 목록을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b58360e2e75b911091dc40ae90abc3d99b17b60c" translate="yes" xml:space="preserve">
          <source>Sets the list of tokens which are permitted.</source>
          <target state="translated">허용되는 토큰 목록을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c043481b0087a5cd6cba99f1df417f3467673a2d" translate="yes" xml:space="preserve">
          <source>Sets the loop block.</source>
          <target state="translated">루프 블록을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="959de14b2611890572ed50b653e5ff1e1acbf142" translate="yes" xml:space="preserve">
          <source>Sets the main class.</source>
          <target state="translated">메인 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0a6d5c5f2561cb910b398cc7a31167a07a1a940e" translate="yes" xml:space="preserve">
          <source>Sets the main class. If there is already a main class it is overwritten. Calling &lt;a href=&quot;#configure(java.io.InputStream)&quot;&gt;configure(InputStream)&lt;/a&gt; after calling this method does not require a main class definition inside the stream.</source>
          <target state="translated">메인 클래스를 설정합니다. 이미 메인 클래스가 있으면 덮어 씁니다. 호출 &lt;a href=&quot;#configure(java.io.InputStream)&quot;&gt;구성 (의 InputStream을)&lt;/a&gt; 이 메소드를 호출 한 후하면 스트림 내부의 메인 클래스 정의를 필요로하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b37f86c835b3e359eb6f1504beea04894cf16851" translate="yes" xml:space="preserve">
          <source>Sets the maximum weighted capacity of the map and eagerly evicts entries until it shrinks to the appropriate size.</source>
          <target state="translated">맵의 최대 가중치 용량을 설정하고 적절한 크기로 축소 될 때까지 항목을 열심히 제거합니다.</target>
        </trans-unit>
        <trans-unit id="ca0dcf7946eb721525c40ae4890ff406063a2468" translate="yes" xml:space="preserve">
          <source>Sets the meaning for this node (and its root Token).</source>
          <target state="translated">이 노드 (및 루트 토큰)의 의미를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0671e7028231b22c4b02ae19c7a44acadbf02d2d" translate="yes" xml:space="preserve">
          <source>Sets the meaning for this node (and its root Token). Not valid if the node isEmpty(). Returns the node, for convenience.</source>
          <target state="translated">이 노드 (및 루트 토큰)의 의미를 설정합니다. 노드가 Empty ()이면 유효하지 않습니다. 편의를 위해 노드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3167b3aa6e9df564260f1293e06b02d973d1d13b" translate="yes" xml:space="preserve">
          <source>Sets the meaning for this node (and its root Token). Not valid if the node isEmpty(). Returns this token, for convenience.</source>
          <target state="translated">이 노드 (및 루트 토큰)의 의미를 설정합니다. 노드가 Empty ()이면 유효하지 않습니다. 편의를 위해이 토큰을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="999f4830556b5574df0eb110f92ba0ae5e45cbf0" translate="yes" xml:space="preserve">
          <source>Sets the meta class for an object, by delegating to the appropriate &lt;a href=&quot;defaultgroovymethods&quot;&gt;DefaultGroovyMethods&lt;/a&gt; helper method.</source>
          <target state="translated">적절한 &lt;a href=&quot;defaultgroovymethods&quot;&gt;DefaultGroovyMethods&lt;/a&gt; 도우미 메서드 에 위임하여 개체의 메타 클래스를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="395b0872581a5e659a3cc545fb50f8533606a2f6" translate="yes" xml:space="preserve">
          <source>Sets the meta class for an object, by delegating to the appropriate &lt;a href=&quot;defaultgroovymethods&quot;&gt;DefaultGroovyMethods&lt;/a&gt; helper method. This method was introduced as a breaking change in 2.0 to solve rare cases of stack overflow. See GROOVY-5285. The method is named doSetMetaClass in order to prevent misusages. Do not use this method directly unless you know what you do.</source>
          <target state="translated">적절한 &lt;a href=&quot;defaultgroovymethods&quot;&gt;DefaultGroovyMethods&lt;/a&gt; 도우미 메서드 에 위임하여 개체의 메타 클래스를 설정합니다 . 이 방법은 드물게 발생하는 스택 오버플로를 해결하기 위해 2.0에서 주요 변경 사항으로 도입되었습니다. GROOVY-5285를 참조하십시오. 오용을 방지하기 위해 메서드 이름은 doSetMetaClass입니다. 수행하는 작업을 알지 못하는 경우이 방법을 직접 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7e29dd429e72fd4f4e6c2bc228ed28145f3c332a" translate="yes" xml:space="preserve">
          <source>Sets the metaclass for a given class.</source>
          <target state="translated">주어진 클래스에 대한 메타 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="381e54cf53e1b6929826fd3c2b1cf1f779373d68" translate="yes" xml:space="preserve">
          <source>Sets the name for the 'bean' node.</source>
          <target state="translated">'bean'노드의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fdf6d9ea0a7ed0bb6bbf292870f9609c2267b23a" translate="yes" xml:space="preserve">
          <source>Sets the name of the base class for scripts.</source>
          <target state="translated">스크립트의 기본 클래스 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6ad1507641a88c865a37bcc111e7009fa2797db4" translate="yes" xml:space="preserve">
          <source>Sets the name of the base class for scripts. It must be a subclass of Script.</source>
          <target state="translated">스크립트의 기본 클래스 이름을 설정합니다. Script의 하위 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a57ef935806fa71b5fb3ee50c5e70107a84203ba" translate="yes" xml:space="preserve">
          <source>Sets the name of the java executable to use when invoking the compiler in forked mode, ignored otherwise.</source>
          <target state="translated">분기 모드에서 컴파일러를 호출 할 때 사용할 Java 실행 파일의 이름을 설정합니다. 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="79f57c845e59304388fcc689be0b98115fbed851" translate="yes" xml:space="preserve">
          <source>Sets the node meta data but allows overwriting values.</source>
          <target state="translated">노드 메타 데이터를 설정하지만 값을 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="753b850bf646cc57b77f12ec046e1edf89c77236" translate="yes" xml:space="preserve">
          <source>Sets the node meta data.</source>
          <target state="translated">노드 메타 데이터를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4ab019d902be42ce02ceda267b789a26be3f8022" translate="yes" xml:space="preserve">
          <source>Sets the number of columns that this cell should span.</source>
          <target state="translated">이 셀에 걸쳐 있어야하는 열 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2d8ce18326ef27e4af29f40fecfc618f3a6238a3" translate="yes" xml:space="preserve">
          <source>Sets the number of columns that this cell should span. The default value is 1</source>
          <target state="translated">이 셀에 걸쳐 있어야하는 열 수를 설정합니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="8609048e204f11fdbbff18150d3559d46615122a" translate="yes" xml:space="preserve">
          <source>Sets the number of rows that this cell should span.</source>
          <target state="translated">이 셀에 걸쳐 야하는 행 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="52c11bb8ef48decf63af2ce180a5fcb66387d450" translate="yes" xml:space="preserve">
          <source>Sets the number of rows that this cell should span. The default value is 1</source>
          <target state="translated">이 셀에 걸쳐 야하는 행 수를 설정합니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="69c5b4c1264e37167254c7c1763d87a7debc153f" translate="yes" xml:space="preserve">
          <source>Sets the optimization options for this configuration.</source>
          <target state="translated">이 구성에 대한 최적화 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="241c6b8fe398ffbd8794e10dddf8fc7ee169dad1" translate="yes" xml:space="preserve">
          <source>Sets the optimization options for this configuration. No entry or a true for that entry means to enable that optimization, a false means the optimization is disabled. Valid keys are &quot;all&quot; and &quot;int&quot;.</source>
          <target state="translated">이 구성에 대한 최적화 옵션을 설정합니다. 항목이 없거나 해당 항목에 대한 true는 해당 최적화를 사용함을 의미하고 false는 최적화가 사용되지 않음을 의미합니다. 유효한 키는 &quot;all&quot;및 &quot;int&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f5ab5d1637e795e3ca9406e635e5401df2674c3b" translate="yes" xml:space="preserve">
          <source>Sets the output writer.</source>
          <target state="translated">출력 기록기를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8dffa6afb2a223467463d3a3ddecc41e87d12d18" translate="yes" xml:space="preserve">
          <source>Sets the position of the given Matcher to the given index.</source>
          <target state="translated">지정된 Matcher의 위치를 ​​지정된 인덱스로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e54ab5407c9be35e36275895ea7272c69112770b" translate="yes" xml:space="preserve">
          <source>Sets the properties on the given object</source>
          <target state="translated">주어진 개체의 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f116987204410db96e9ed01f6f9c70cbc96eae9f" translate="yes" xml:space="preserve">
          <source>Sets the property on the given object to the new value</source>
          <target state="translated">주어진 객체의 속성을 새 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8f2c4db30bbd8da4416ec701eed845a24b1eed30" translate="yes" xml:space="preserve">
          <source>Sets the resultSetConcurrency for statements created using the connection.</source>
          <target state="translated">연결을 사용하여 만든 문에 대한 resultSetConcurrency를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c720767e17b0256aa8dac8eaa1ca47fedafb5161" translate="yes" xml:space="preserve">
          <source>Sets the resultSetConcurrency for statements created using the connection. May cause SQLFeatureNotSupportedException exceptions to occur if the underlying database doesn't support the requested concurrency value.</source>
          <target state="translated">연결을 사용하여 만든 문에 대한 resultSetConcurrency를 설정합니다. 기본 데이터베이스가 요청 된 동시성 값을 지원하지 않는 경우 SQLFeatureNotSupportedException 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7fa88bf63c35adbd25ec11a83b4d0cc30d87802" translate="yes" xml:space="preserve">
          <source>Sets the resultSetHoldability for statements created using the connection.</source>
          <target state="translated">연결을 사용하여 생성 된 문에 대한 resultSetHoldability를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1c230ed8cae24c711787d88fe5bd4e530dca1dcf" translate="yes" xml:space="preserve">
          <source>Sets the resultSetHoldability for statements created using the connection. May cause SQLFeatureNotSupportedException exceptions to occur if the underlying database doesn't support the requested holdability value.</source>
          <target state="translated">연결을 사용하여 생성 된 문에 대한 resultSetHoldability를 설정합니다. 기본 데이터베이스가 요청 된 유지 가능성 값을 지원하지 않는 경우 SQLFeatureNotSupportedException 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59accb18c6677f72a552be4779a1f6cde5b8d2d5" translate="yes" xml:space="preserve">
          <source>Sets the resultSetType for statements created using the connection.</source>
          <target state="translated">연결을 사용하여 생성 된 문에 대한 resultSetType을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4134c6026e4e9d9db6cd889fe89d8651c779092b" translate="yes" xml:space="preserve">
          <source>Sets the resultSetType for statements created using the connection. May cause SQLFeatureNotSupportedException exceptions to occur if the underlying database doesn't support the requested type value.</source>
          <target state="translated">연결을 사용하여 생성 된 문에 대한 resultSetType을 설정합니다. 기본 데이터베이스가 요청 된 유형 값을 지원하지 않는 경우 SQLFeatureNotSupportedException 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c71331387a2ff1ca96fd4193c28418bc6feea5fb" translate="yes" xml:space="preserve">
          <source>Sets the source position using another ASTNode.</source>
          <target state="translated">다른 ASTNode를 사용하여 소스 위치를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0e54152c7889748d23c25655a2489bb0e282203e" translate="yes" xml:space="preserve">
          <source>Sets the source position using another ASTNode. The sourcePosition consists of a line/column pair for the start and a line/column pair for the end of the expression or statement</source>
          <target state="translated">다른 ASTNode를 사용하여 소스 위치를 설정합니다. sourcePosition은 시작을위한 행 / 열 쌍과 표현식 또는 명령문의 끝을위한 행 / 열 쌍으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="bb4bbd4c4109f8b0eb69939615c1322f6383ba62" translate="yes" xml:space="preserve">
          <source>Sets the strategy which the closure uses to resolve property references and methods.</source>
          <target state="translated">클로저가 속성 참조 및 메서드를 해결하는 데 사용하는 전략을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fcd8979bb528d4278a05c409c775b9ee927cae90" translate="yes" xml:space="preserve">
          <source>Sets the strategy which the closure uses to resolve property references and methods. The default is Closure.OWNER_FIRST</source>
          <target state="translated">클로저가 속성 참조 및 메서드를 해결하는 데 사용하는 전략을 설정합니다. 기본값은 Closure.OWNER_FIRST입니다.</target>
        </trans-unit>
        <trans-unit id="fc1446b0705b78875ca5e4a14ba9242ccba4015c" translate="yes" xml:space="preserve">
          <source>Sets the superclass of this &lt;code&gt;ClassNode&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;ClassNode&lt;/code&gt; 슈퍼 클래스를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7b5f2b0ba1ceb04b54965a8fc01e9c92bc5c4f38" translate="yes" xml:space="preserve">
          <source>Sets the target directory.</source>
          <target state="translated">대상 디렉터리를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="31718b9f6dffef1fe9b18ab1fa5a5c50cb60e238" translate="yes" xml:space="preserve">
          <source>Sets the time zone that will be used to serialize dates.</source>
          <target state="translated">날짜를 직렬화하는 데 사용할 시간대를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a26b8b049a6424d7c4e39194f1eaa1963b381cea" translate="yes" xml:space="preserve">
          <source>Sets the trim whitespace setting value.</source>
          <target state="translated">트림 공백 설정 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0229767997ff70f56ba75bea03d3c8f8add78fdb" translate="yes" xml:space="preserve">
          <source>Sets the type of exception which is thrown.</source>
          <target state="translated">throw되는 예외 유형을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a05596151d6b3fbc1b2387ce8d09045c498b2699" translate="yes" xml:space="preserve">
          <source>Sets the value of an attribute (field).</source>
          <target state="translated">속성 (필드)의 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="23d9b88ec26c8a7a3c4c35a1fa4b6dd17bacbda0" translate="yes" xml:space="preserve">
          <source>Sets the value of an attribute (field). This method is to support the Groovy runtime and not for general client API usage.</source>
          <target state="translated">속성 (필드)의 값을 설정합니다. 이 방법은 일반적인 클라이언트 API 사용이 아닌 Groovy 런타임을 지원하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6bec01e79c3ea659872b5acad7d8663e5ef14c72" translate="yes" xml:space="preserve">
          <source>Sets the value of the given variable</source>
          <target state="translated">주어진 변수의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="0bc36a6e9ad7156169092652e20be7f517ca896d" translate="yes" xml:space="preserve">
          <source>Sets the vertical alignment to a case insensitive value of {TOP, MIDDLE, BOTTOM}</source>
          <target state="translated">세로 정렬을 {TOP, MIDDLE, BOTTOM}의 대소 문자를 구분하지 않는 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cc750eb83da9459fcd6cdec53ebff5c35353ff3e" translate="yes" xml:space="preserve">
          <source>Sets the warning level.</source>
          <target state="translated">경고 수준을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5fc0b48d3df75f8e5691dfdf9e2d249cfeaafb88" translate="yes" xml:space="preserve">
          <source>Sets the warning level. See &lt;a href=&quot;messages/warningmessage&quot;&gt;WarningMessage&lt;/a&gt; for level details.</source>
          <target state="translated">경고 수준을 설정합니다. 레벨 세부 사항 은 &lt;a href=&quot;messages/warningmessage&quot;&gt;WarningMessage&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="c8066f8b720a482e63b9b1725a65ff4461ebc418" translate="yes" xml:space="preserve">
          <source>Sets this instance as proxy for the given &lt;code&gt;ClassNode&lt;/code&gt;.</source>
          <target state="translated">이 인스턴스를 지정된 &lt;code&gt;ClassNode&lt;/code&gt; 의 프록시로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="21ed35a5cd53ddf11ce074add8288a29850ae4b7" translate="yes" xml:space="preserve">
          <source>Sets this node as a node added by the compiler.</source>
          <target state="translated">이 노드를 컴파일러가 추가 한 노드로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="36b2333b55d26c4df706e4763f877f0b34a441e1" translate="yes" xml:space="preserve">
          <source>Sets up event listeners for this MBean as described in the descriptor.</source>
          <target state="translated">설명자에 설명 된대로이 MBean에 대한 이벤트 리스너를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="563845a0a2c78a668413034055816fe6e8c4556e" translate="yes" xml:space="preserve">
          <source>Sets up event listeners for this MBean as described in the descriptor. The descriptor contains a map with layout {item -&amp;gt; Map[event:&quot;...&quot;, from:ObjectName, callback:&amp;amp;Closure],...,}</source>
          <target state="translated">설명자에 설명 된대로이 MBean에 대한 이벤트 리스너를 설정합니다. 설명자에는 {item-&amp;gt; Map [event : &quot;...&quot;, from : ObjectName, callback : &amp;amp; Closure], ...,} 레이아웃이있는 맵이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="207791dff312e56fcfc48e615dd2bb94d4c41367" translate="yes" xml:space="preserve">
          <source>Sets whether or not this column should allow its component to stretch to fill the space available</source>
          <target state="translated">이 열이 사용 가능한 공간을 채우기 위해 구성 요소를 늘릴 수 있는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8bdcc946a0cf6fa8eaee2ccda531c9bd9a4e308a" translate="yes" xml:space="preserve">
          <source>Sets whether or not this row should allow its component to stretch to fill the space available</source>
          <target state="translated">이 행이 사용 가능한 공간을 채우기 위해 구성 요소를 늘릴 수 있는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d8e7d5f72ef7646638c90958d34690776b24f29f" translate="yes" xml:space="preserve">
          <source>Sets whether references can be resolved lazily or not.</source>
          <target state="translated">참조를 느리게 해결할 수 있는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a0ffb13940ffe3fd9f47a3d3c989d53cf5f0f1ab" translate="yes" xml:space="preserve">
          <source>Sets whether the builder outputs attribute values in double quotes or single quotes.</source>
          <target state="translated">빌더가 속성 값을 큰 따옴표 또는 작은 따옴표로 출력하는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0918910bcc44137a78ea9e67d62e503f75372b60" translate="yes" xml:space="preserve">
          <source>Sets whether the bytecode version has preview features enabled (JEP 12).</source>
          <target state="translated">바이트 코드 버전에 미리보기 기능이 활성화되어 있는지 여부를 설정합니다 (JEP 12).</target>
        </trans-unit>
        <trans-unit id="62168a709262329817b152907d76d8cc49c55ce4" translate="yes" xml:space="preserve">
          <source>Sets/updates the metaclass for a given class to a closure.</source>
          <target state="translated">주어진 클래스에 대한 메타 클래스를 클로저로 설정 / 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e034198558be36cf1eb0c22f6994f08e1b2470ee" translate="yes" xml:space="preserve">
          <source>Sets/updates the metaclass for a given object to a closure.</source>
          <target state="translated">주어진 객체에 대한 메타 클래스를 클로저로 설정 / 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4b02e5e6c5b70547f7e596a27c7b335878a9ef34" translate="yes" xml:space="preserve">
          <source>Setter - sets event thrown by Emitter.</source>
          <target state="translated">Setter-이미 터가 던진 이벤트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3beb49a78e387280a2b2d2fce76d2d4aa0408b68" translate="yes" xml:space="preserve">
          <source>Setting to true will cause the contextClassLoader to be set with the classLoader of the shell used to run the script.</source>
          <target state="translated">true로 설정하면 스크립트를 실행하는 데 사용 된 쉘의 classLoader로 contextClassLoader가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="89ba24946a838213acc3e4c6f392cd69c9b95825" translate="yes" xml:space="preserve">
          <source>Setting to true will cause the contextClassLoader to be set with the classLoader of the shell used to run the script. Not used if fork is true. Not allowed when running from Maven but in that case the context classLoader is set appropriately for Maven.</source>
          <target state="translated">true로 설정하면 스크립트를 실행하는 데 사용 된 쉘의 classLoader로 contextClassLoader가 설정됩니다. fork가 참이면 사용되지 않습니다. Maven에서 실행할 때는 허용되지 않지만이 경우 컨텍스트 classLoader가 Maven에 적합하게 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="55dfe9e96c4acdeb216d3d771d6a86a145edfcc4" translate="yes" xml:space="preserve">
          <source>Settings can either be bound into nested maps or onto a specified JavaBean instance. In the latter case, an error will be thrown if a property cannot be bound.</source>
          <target state="translated">설정은 중첩 된 맵 또는 지정된 JavaBean 인스턴스에 바인딩 될 수 있습니다. 후자의 경우 속성을 바인딩 할 수 없으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a5c94556a835bb0cdcb5323ea251031f648d7552" translate="yes" xml:space="preserve">
          <source>Setup the Completer for the command.</source>
          <target state="translated">명령에 대한 Completer를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="41c56a05b5f09c24cde36272a08da8e1b6f2107d" translate="yes" xml:space="preserve">
          <source>Several of the methods in this class (ones which have a String-based sql query and params in a List&amp;lt;Object&amp;gt; or Object[] or Map) support &lt;em&gt;named&lt;/em&gt; or &lt;em&gt;named ordinal&lt;/em&gt; parameters. These methods are useful for queries with large numbers of parameters - though the GString variations are often preferred in such cases too. Reminder: when you see a variant with Object[] as the type of the last parameter, Groovy allows vararg style parameters so you don't explicitly need to create an Object[] and if the first parameter is of type Map, Groovy supports named arguments - examples of both are contained in the examples below.</source>
          <target state="translated">이 클래스의 여러 메서드 (List &amp;lt;Object&amp;gt; 또는 Object [] 또는 Map에 문자열 기반 SQL 쿼리 및 매개 변수가있는 메서드)는 &lt;em&gt;명명&lt;/em&gt; 되거나 &lt;em&gt;명명 된 서수&lt;/em&gt; 매개 변수를 지원 합니다. 이러한 메소드는 매개 변수가 많은 쿼리에 유용하지만 이러한 경우에도 GString 변형이 선호되는 경우가 많습니다. 알림 : 마지막 매개 변수의 유형으로 Object []가 포함 된 변형을 볼 때 Groovy는 vararg 스타일 매개 변수를 허용하므로 Object []를 명시 적으로 만들 필요가 없으며 첫 번째 매개 변수가 Map 유형 인 경우 Groovy는 named 인수-둘 다의 예가 아래 예에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d0161d5f184eb357800c380cb6b39fbe7e5bc4b" translate="yes" xml:space="preserve">
          <source>Several predefined hints can be found, which should cover most of the use cases.</source>
          <target state="translated">대부분의 사용 사례를 포함해야하는 몇 가지 사전 정의 된 힌트를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fe7d82f25a3015040a206e54f9c1d3a9717c4c4" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Short</target>
        </trans-unit>
        <trans-unit id="b5dfc419eba5904dd343380943d705efdc999eb5" translate="yes" xml:space="preserve">
          <source>Short name for the option, will be prefixed with a single hyphen.</source>
          <target state="translated">옵션의 짧은 이름은 단일 하이픈으로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="29e46f01ae1a510b2d49c4fbf81895f4bae63750" translate="yes" xml:space="preserve">
          <source>Short option names may not contain a hyphen. If a long option name contains a hyphen, e.g. '--max-wait' then you can either use the long hand method call &lt;code&gt;options.hasOption('max-wait')&lt;/code&gt; or surround the option name in quotes, e.g. &lt;code&gt;options.'max-wait'&lt;/code&gt;.</source>
          <target state="translated">짧은 옵션 이름에는 하이픈이 포함될 수 없습니다. 긴 옵션 이름에 하이픈 (예 : '--max-wait')이 포함 된 경우 긴 손 메서드 호출 &lt;code&gt;options.hasOption('max-wait')&lt;/code&gt; 를 사용 하거나 옵션 이름을 따옴표로 묶을 수 있습니다 (예 : &lt;code&gt;options.'max-wait'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea5ac00489334e912bc7a148e2d4d368346f6cd5" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt; to output a String representation of this calendar instance. This method respects the Calendar's assigned &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZone&lt;/a&gt;, whereas calling &lt;code&gt;cal.time.format('HH:mm:ss')&lt;/code&gt; would use the system timezone.</source>
          <target state="translated">이 달력 인스턴스의 문자열 표현을 출력하는 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat의&lt;/a&gt; 바로 가기입니다 . 이 메서드는 캘린더에 할당 된 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html&quot;&gt;TimeZone을&lt;/a&gt; 존중하는 반면 &lt;code&gt;cal.time.format('HH:mm:ss')&lt;/code&gt; 호출 은 시스템 시간대를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b327e5c6d210583da0d9c27e6be85509aed0c72d" translate="yes" xml:space="preserve">
          <source>Should a new GroovyShell be used when forking.</source>
          <target state="translated">분기 할 때 새 GroovyShell을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4028568fe1cc154aa661b77d7793ee7b3f482762" translate="yes" xml:space="preserve">
          <source>Should a new GroovyShell be used when forking. Special variables won't be available but you don't need Ant in the classpath.</source>
          <target state="translated">분기 할 때 새 GroovyShell을 사용해야합니다. 특수 변수는 사용할 수 없지만 클래스 경로에 Ant는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b72a8dcf89e80470be963289ccf6d9ce890a6398" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that defines also a scope.</source>
          <target state="translated">범위도 정의하는 루프로 내려갈 때 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a46b29d8751d413f8bce0ead7a8a496c0c7028b7" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that defines also a scope. Calls pushVariableScope and prepares labels for a loop structure. Creates a element for the state stack so pop has to be called later</source>
          <target state="translated">범위도 정의하는 루프로 내려갈 때 호출되어야합니다. pushVariableScope를 호출하고 루프 구조에 대한 레이블을 준비합니다. 상태 스택에 대한 요소를 생성하므로 나중에 pop을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="87a163296d1ca46b923a4703ca3856b715715342" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that defines also a scope. Calls pushVariableScope and prepares labels for a loop structure. Creates a element for the state stack so pop has to be called later, TODO:</source>
          <target state="translated">범위도 정의하는 루프로 내려갈 때 호출되어야합니다. pushVariableScope를 호출하고 루프 구조에 대한 레이블을 준비합니다. 상태 스택에 대한 요소를 생성하므로 나중에 pop을 호출해야합니다. TODO :</target>
        </trans-unit>
        <trans-unit id="f90f44204bce088a0d3837f131217bb6b1b6333f" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that does not define a scope.</source>
          <target state="translated">범위를 정의하지 않는 루프로 내려갈 때 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3582a2b5584c8dfe8806afc65b8e5ffe7af4b47b" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that does not define a scope. Creates a element for the state stack so pop has to be called later</source>
          <target state="translated">범위를 정의하지 않는 루프로 내려갈 때 호출되어야합니다. 상태 스택에 대한 요소를 생성하므로 나중에 pop을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="630911ba45e20b06eacad09c443c3988de573a2f" translate="yes" xml:space="preserve">
          <source>Should be called when descending into a loop that does not define a scope. Creates a element for the state stack so pop has to be called later, TODO:</source>
          <target state="translated">범위를 정의하지 않는 루프로 내려갈 때 호출되어야합니다. 상태 스택에 대한 요소를 생성하므로 나중에 pop을 호출해야합니다. TODO :</target>
        </trans-unit>
        <trans-unit id="8a6a6d039639017769004e3d0de6fc68d941059f" translate="yes" xml:space="preserve">
          <source>Should super properties be called within a call to the parent constructor rather than set as properties.</source>
          <target state="translated">슈퍼 속성은 속성으로 설정하는 대신 부모 생성자에 대한 호출 내에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="27557028b690ed4bc83e6c232ebc5bfc8d75190a" translate="yes" xml:space="preserve">
          <source>Should super properties be called within a call to the parent constructor rather than set as properties. Typically used in combination with &lt;code&gt;includeSuperProperties&lt;/code&gt;. Can't be true if using &lt;code&gt;pre&lt;/code&gt; with a &lt;code&gt;super&lt;/code&gt; first statement.</source>
          <target state="translated">슈퍼 속성은 속성으로 설정하는 대신 부모 생성자에 대한 호출 내에서 호출해야합니다. 일반적으로 &lt;code&gt;includeSuperProperties&lt;/code&gt; 와 함께 사용됩니다 . &lt;code&gt;super&lt;/code&gt; first 문과 함께 &lt;code&gt;pre&lt;/code&gt; 를 사용하는 경우 참일 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b936f2d592979664e943355a6a14178bdcaf0e42" translate="yes" xml:space="preserve">
          <source>Should the script be executed using a forked process.</source>
          <target state="translated">포크 된 프로세스를 사용하여 스크립트를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb9354f9fda68a2e98b7bff739505958bcd95edf" translate="yes" xml:space="preserve">
          <source>Should the script be executed using a forked process. Defaults to false.</source>
          <target state="translated">포크 된 프로세스를 사용하여 스크립트를 실행해야합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="dc742c8780078f7a89d6b0d9f4baab14ca498624" translate="yes" xml:space="preserve">
          <source>Should the system classpath be included on the classpath when forking.</source>
          <target state="translated">분기 할 때 시스템 클래스 경로가 클래스 경로에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e6c49b718cea7887f753743d5af320136c3a3194" translate="yes" xml:space="preserve">
          <source>Should the system classpath be included on the classpath when forking. Defaults to true.</source>
          <target state="translated">분기 할 때 시스템 클래스 경로가 클래스 경로에 포함되어야합니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="16317ce4dcccca40624db7995e48fd51ccd06c93" translate="yes" xml:space="preserve">
          <source>SignatureCodec</source>
          <target state="translated">SignatureCodec</target>
        </trans-unit>
        <trans-unit id="fdac12177d509f721d3960f0c90dd578c4787a55" translate="yes" xml:space="preserve">
          <source>Simple binary expressions - String concatenation and numeric +, -, /, *</source>
          <target state="translated">간단한 이진 표현식-문자열 연결 및 숫자 +,-, /, *</target>
        </trans-unit>
        <trans-unit id="2004227c843c868a1fa5c1c53f9deb7b9470c1c3" translate="yes" xml:space="preserve">
          <source>Simple check for whether the binding contains a particular variable or not.</source>
          <target state="translated">바인딩에 특정 변수가 포함되어 있는지 여부를 간단하게 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a5e5f7e05c6b49b65f71c0cb6f61f3a03ebb993a" translate="yes" xml:space="preserve">
          <source>Simple names, as in {x|...}, are completely equivalent to {(def x)|...}.</source>
          <target state="translated">{x | ...}에서와 같이 단순한 이름은 {(def x) | ...}와 완전히 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7225f4f6f681ed2ba468ffe49255469c3c244d14" translate="yes" xml:space="preserve">
          <source>Simple names, as in {x|...}, are completely equivalent to {(def x)|...}. Build the right AST.</source>
          <target state="translated">{x | ...}에서와 같이 단순한 이름은 {(def x) | ...}와 완전히 동일합니다. 올바른 AST를 구축하십시오.</target>
        </trans-unit>
        <trans-unit id="fd20dbcaccbcb5f10b6f2e38ada9a7f6cc0a4828" translate="yes" xml:space="preserve">
          <source>Simple server that executes supplied script against a socket.</source>
          <target state="translated">소켓에 대해 제공된 스크립트를 실행하는 간단한 서버.</target>
        </trans-unit>
        <trans-unit id="02e288afcd0d7adcf518174089e12f23858216a2" translate="yes" xml:space="preserve">
          <source>Simple syntax:</source>
          <target state="translated">간단한 구문 :</target>
        </trans-unit>
        <trans-unit id="dca90ecbe910fff53f60032cc48eb7dcaeb4e8bf" translate="yes" xml:space="preserve">
          <source>Simple testing harness for the GSE.</source>
          <target state="translated">GSE를위한 간단한 테스트 장치.</target>
        </trans-unit>
        <trans-unit id="0e0ba45985ebf9b7a7f88ad935451a4d563668e3" translate="yes" xml:space="preserve">
          <source>Simple testing harness for the GSE. Enter script roots as arguments and then input script names to run them.</source>
          <target state="translated">GSE를위한 간단한 테스트 장치. 스크립트 루트를 인수로 입력 한 다음 스크립트 이름을 입력하여 실행합니다.</target>
        </trans-unit>
        <trans-unit id="82e0bf1a3f6a9899a6ddb30e040dbfc9efdc204e" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat</source>
          <target state="translated">SimpleDateFormat</target>
        </trans-unit>
        <trans-unit id="960f23bcdee7563833256b1212e07144542e2b9f" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.format</source>
          <target state="translated">SimpleDateFormat.format</target>
        </trans-unit>
        <trans-unit id="d4e70a1d3b436b3c259e04961d5973b9b11ccf54" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.parse</source>
          <target state="translated">SimpleDateFormat.parse</target>
        </trans-unit>
        <trans-unit id="abc0f65e445af1da4d4883450d2e66636ab82290" translate="yes" xml:space="preserve">
          <source>SimpleStrategy</source>
          <target state="translated">SimpleStrategy</target>
        </trans-unit>
        <trans-unit id="6f5e0c17b4240c7efb5c4340590a09727aec1cea" translate="yes" xml:space="preserve">
          <source>SimpleTagLib</source>
          <target state="translated">SimpleTagLib</target>
        </trans-unit>
        <trans-unit id="4e72b16ba8a8abe401425660fd3728db5bf6ac3c" translate="yes" xml:space="preserve">
          <source>Since Year=0 represents 1 BC, the yearOfEra value of Year=0 is 1, Year=-1 is 2, and so on.</source>
          <target state="translated">Year = 0은 1 BC를 나타내므로 Year = 0의 yearOfEra 값은 1이고 Year = -1은 2입니다.</target>
        </trans-unit>
        <trans-unit id="a1f6a5c61164d4b5ba4ba4f4dd410abf47324812" translate="yes" xml:space="preserve">
          <source>Since a ternary statement has more than one exit point tail-recursiveness testing cannot be easily done. Therefore this class translates a ternary statement (or Elvis operator) into the equivalent if-else statement.</source>
          <target state="translated">삼 항문은 둘 이상의 출구 점을 가지고 있기 때문에 꼬리 재귀 테스트는 쉽게 할 수 없습니다. 따라서이 클래스는 삼항 문 (또는 Elvis 연산자)을 동등한 if-else 문으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cf6bfd4f4a6c6711b6ac6015c4796b4c8bd09bff" translate="yes" xml:space="preserve">
          <source>Since this is implemented as a singleton, we should avoid the use of the clone method</source>
          <target state="translated">이것은 싱글 톤으로 구현되기 때문에 clone 메소드의 사용을 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="414633b99df13e372a9c63be560746a90d7e6860" translate="yes" xml:space="preserve">
          <source>Singleton of MetaClassRegistry.</source>
          <target state="translated">MetaClassRegistry의 싱글 톤.</target>
        </trans-unit>
        <trans-unit id="162fe304a57049535834bca1757e2e82e7615cb6" translate="yes" xml:space="preserve">
          <source>Skip processing sibling files/directories within the current directory being processed</source>
          <target state="translated">처리중인 현재 디렉터리 내의 형제 파일 / 디렉터리 처리 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="b9c7c9973fdaadca6cdd4a7b2e8624fa794c81f7" translate="yes" xml:space="preserve">
          <source>Skip the specified number of characters.</source>
          <target state="translated">지정된 수의 문자를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="b6061425cb00aabd37d61394d9ccee0f5312d7ca" translate="yes" xml:space="preserve">
          <source>Skip white space.</source>
          <target state="translated">공백을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="0b57a0caeaef72b21d0deb2ebb5b924749c0efb3" translate="yes" xml:space="preserve">
          <source>Skips all the whitespace characters and moves the cursor to the next non-space character.</source>
          <target state="translated">모든 공백 문자를 건너 뛰고 커서를 공백이 아닌 다음 문자로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a59025c2a8fea79b1ce89cedae83d00e3f657be0" translate="yes" xml:space="preserve">
          <source>Skips characters.</source>
          <target state="translated">문자를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="b678b88552da52a0491c44841f8bb032bb16b603" translate="yes" xml:space="preserve">
          <source>Sleep for so many milliseconds, even if interrupted.</source>
          <target state="translated">중단 되더라도 수 밀리 초 동안 잠자기.</target>
        </trans-unit>
        <trans-unit id="91e23f0fc1a217e3022161f591504f90ec5ec9fa" translate="yes" xml:space="preserve">
          <source>Sleep for so many milliseconds, using a given closure for interrupt processing.</source>
          <target state="translated">인터럽트 처리를 위해 주어진 클로저를 사용하여 수 밀리 초 동안 휴면합니다.</target>
        </trans-unit>
        <trans-unit id="69a02d7108ae80345308348ea8b8baaf1c15990f" translate="yes" xml:space="preserve">
          <source>Slf4jLoggingStrategy.class</source>
          <target state="translated">Slf4jLoggingStrategy.class</target>
        </trans-unit>
        <trans-unit id="a0ecae4b17b6c1279737e5114b5a933d697fb5a2" translate="yes" xml:space="preserve">
          <source>Snoops through the declaring class and all parents looking for a field of type VetoableChangeSupport.</source>
          <target state="translated">선언 클래스와 모든 부모를 통해 VetoableChangeSupport 유형의 필드를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="962cc6a50351de54d3443997a7206feea12be478" translate="yes" xml:space="preserve">
          <source>Snoops through the declaring class and all parents looking for a field of type VetoableChangeSupport. Remembers the field and returns false if found otherwise returns true to indicate that such support should be added.</source>
          <target state="translated">선언 클래스와 모든 부모를 통해 VetoableChangeSupport 유형의 필드를 찾습니다. 필드를 기억하고 발견되면 false를 반환하고 그렇지 않으면 해당 지원이 추가되어야 함을 나타 내기 위해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e5f4bda795cf38a2a5c81b39aa3969f34d834b8" translate="yes" xml:space="preserve">
          <source>Snoops through the declaring class and all parents looking for methods &lt;code&gt;void addPropertyChangeListener(PropertyChangeListener)&lt;/code&gt;, &lt;code&gt;void removePropertyChangeListener(PropertyChangeListener)&lt;/code&gt;, and &lt;code&gt;void firePropertyChange(String, Object, Object)&lt;/code&gt;.</source>
          <target state="translated">선언 클래스와 모든 부모를 통해 &lt;code&gt;void addPropertyChangeListener(PropertyChangeListener)&lt;/code&gt; , &lt;code&gt;void removePropertyChangeListener(PropertyChangeListener)&lt;/code&gt; 및 &lt;code&gt;void firePropertyChange(String, Object, Object)&lt;/code&gt; 메서드를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="2b7f3482e1143d04183f7ea5fdf81391dfd0d682" translate="yes" xml:space="preserve">
          <source>Snoops through the declaring class and all parents looking for methods &lt;code&gt;void addPropertyChangeListener(PropertyChangeListener)&lt;/code&gt;, &lt;code&gt;void removePropertyChangeListener(PropertyChangeListener)&lt;/code&gt;, and &lt;code&gt;void firePropertyChange(String, Object, Object)&lt;/code&gt;. If any are defined all must be defined or a compilation error results.</source>
          <target state="translated">선언 클래스와 모든 부모를 통해 &lt;code&gt;void addPropertyChangeListener(PropertyChangeListener)&lt;/code&gt; , &lt;code&gt;void removePropertyChangeListener(PropertyChangeListener)&lt;/code&gt; 및 &lt;code&gt;void firePropertyChange(String, Object, Object)&lt;/code&gt; 메서드를 찾습니다 . 정의 된 것이 있으면 모두 정의해야합니다. 그렇지 않으면 컴파일 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4f28a5b027f7f040c14a6dbf21b69863bb858415" translate="yes" xml:space="preserve">
          <source>So a tab becomes the characters &lt;code&gt;'\\'&lt;/code&gt; and &lt;code&gt;'t'&lt;/code&gt;.</source>
          <target state="translated">따라서 탭은 &lt;code&gt;'\\'&lt;/code&gt; 및 &lt;code&gt;'t'&lt;/code&gt; 문자가됩니다 .</target>
        </trans-unit>
        <trans-unit id="50c5ffaf2b1aae19abc75bec7a333a098d1cd593" translate="yes" xml:space="preserve">
          <source>So even though the class is ugly, there are good reason to have this in Groovy, even if the class makes absolutely no sense in normal Java. But it is not used in normal Java, but from the bytecode.</source>
          <target state="translated">따라서 클래스가 추악하더라도 일반 Java에서 클래스가 전혀 의미가 없더라도 Groovy에 이것을 가질 충분한 이유가 있습니다. 그러나 일반 Java에서는 사용되지 않지만 바이트 코드에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e3ee64e2dd80fc54f5ea82aeb733836b219fb35b" translate="yes" xml:space="preserve">
          <source>Soft reference with lazy initialization under lock</source>
          <target state="translated">잠금 상태에서 지연 초기화가있는 소프트 참조</target>
        </trans-unit>
        <trans-unit id="fb247683c041d9561260524bdf7af292144e4d40" translate="yes" xml:space="preserve">
          <source>Sole constructor setting name to &quot;length&quot; and type to int</source>
          <target state="translated">유일한 생성자 설정 이름을 &quot;길이&quot;로, 유형을 int로</target>
        </trans-unit>
        <trans-unit id="f8ea503e3e4064ee8106eeb9b9bc099b6f654195" translate="yes" xml:space="preserve">
          <source>Sole constructor setting name, type (class), getter and setter.</source>
          <target state="translated">유일한 생성자 설정 이름, 유형 (클래스), getter 및 setter.</target>
        </trans-unit>
        <trans-unit id="857742b3fe233ef4e76838db2b3607d7507381f2" translate="yes" xml:space="preserve">
          <source>Some Notes:</source>
          <target state="translated">일부 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="98f4b71d0793c3c8de32649a5423c4b1eb9183f6" translate="yes" xml:space="preserve">
          <source>Some examples of usage:</source>
          <target state="translated">사용의 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="4437fe04ab81b7a7c22df07b61097c134ce69c4f" translate="yes" xml:space="preserve">
          <source>Some expressions need to be visited twice, because type information may be insufficient at some point.</source>
          <target state="translated">어떤 표현은 유형 정보가 어느 시점에서 불충분 할 수 있기 때문에 두 번 방문해야합니다.</target>
        </trans-unit>
        <trans-unit id="9d04d184b42e55de23e51072daf01c9f9b734f8e" translate="yes" xml:space="preserve">
          <source>Some expressions need to be visited twice, because type information may be insufficient at some point. For example, for closure shared variables, we need a first pass to collect every type which is assigned to a closure shared variable, then a second pass to ensure that every method call on such a variable is made on a LUB.</source>
          <target state="translated">어떤 표현은 유형 정보가 어느 시점에서 불충분 할 수 있기 때문에 두 번 방문해야합니다. 예를 들어, 클로저 공유 변수의 경우 클로저 공유 변수에 할당 된 모든 유형을 수집하기위한 첫 번째 패스가 필요합니다. 그런 다음 이러한 변수에 대한 모든 메서드 호출이 LUB에서 이루어 지도록 두 번째 패스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="54975129976f6f3bd010fd1f8f7cb176f9c3b269" translate="yes" xml:space="preserve">
          <source>Some expressions use symbols as aliases to method calls (&amp;lt;&amp;lt;, +=, ...). In static compilation, if such a method call is found, we transform the original binary expression into a method call expression so that the call gets statically compiled.</source>
          <target state="translated">일부 식은 기호를 메서드 호출에 대한 별칭으로 사용합니다 (&amp;lt;&amp;lt;, + =, ...). 정적 컴파일에서 이러한 메서드 호출이 발견되면 호출이 정적으로 컴파일되도록 원래 이진 표현식을 메서드 호출 표현식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="9e7283fbd18159f671f79b771289d37695dba0e7" translate="yes" xml:space="preserve">
          <source>Some malformed constructor expressions are not detected in the parser, but in a post-pass. Bad examples: [1,b:2], [a:1,2], [:1]. (Note that method call arguments, by contrast, can be a mix of keyworded and non-keyworded arguments.)</source>
          <target state="translated">일부 잘못된 생성자 표현식은 파서에서 감지되지 않지만 사후 통과에서 감지됩니다. 잘못된 예 : [1, b : 2], [a : 1,2], [: 1]. (반대로 메서드 호출 인수는 키워드 및 비 키워드 인수의 혼합 일 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="7f8f2db0a98bee05f5da2b5481f3e03c0e41b7a3" translate="yes" xml:space="preserve">
          <source>Some reflection helper methods</source>
          <target state="translated">일부 반사 도우미 메서드</target>
        </trans-unit>
        <trans-unit id="804377af5b37b5954b639b1146122ab25f8327b7" translate="yes" xml:space="preserve">
          <source>Some semantic predicates for altering the behaviour of the lexer and parser</source>
          <target state="translated">어휘 분석기와 파서의 동작을 변경하기위한 의미 론적 술어</target>
        </trans-unit>
        <trans-unit id="54d8621ab4c9e44bc9f5b2088a272f59a3461b70" translate="yes" xml:space="preserve">
          <source>Sometimes we will need more than one grab per class, but we can only add one annotation type per annotatable node. This class allows for multiple grabs to be added.</source>
          <target state="translated">때때로 우리는 클래스 당 둘 이상의 그랩이 필요하지만, annotatable 노드 당 하나의 주석 유형 만 추가 할 수 있습니다. 이 클래스를 사용하면 여러 가져 오기를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="504b4433b680860aa04aaa1cc1f1042c13d05823" translate="yes" xml:space="preserve">
          <source>Sort by most specific to least specific.</source>
          <target state="translated">가장 구체적인 순으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="0c740b23321754cf8402bfdf8380055559e50d9c" translate="yes" xml:space="preserve">
          <source>Sorts all Iterable members into (sub)groups determined by the supplied mapping closures.</source>
          <target state="translated">모든 Iterable 멤버를 제공된 매핑 클로저에 의해 결정된 (하위) 그룹으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="eaddf68367d404a161f317faa5bf5932bc2e167e" translate="yes" xml:space="preserve">
          <source>Sorts all Iterable members into (sub)groups determined by the supplied mapping closures. Each closure should return the key that this item should be grouped by. The returned LinkedHashMap will have an entry for each distinct 'key path' returned from the closures, with each value being a list of items for that 'group path'. Example usage:</source>
          <target state="translated">모든 Iterable 멤버를 제공된 매핑 클로저에 의해 결정된 (하위) 그룹으로 정렬합니다. 각 클로저는이 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 LinkedHashMap에는 클로저에서 반환 된 각 고유 한 '키 경로'에 대한 항목이 있으며 각 값은 해당 '그룹 경로'에 대한 항목 목록입니다. 사용 예 :</target>
        </trans-unit>
        <trans-unit id="d611a7ef483812607258c8a62bd5a6dd7181f2d9" translate="yes" xml:space="preserve">
          <source>Sorts all Iterable members into groups determined by the supplied mapping closure.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 Iterable 멤버를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="bc109ede0abb0b46a554dfe6abc17105f11936b4" translate="yes" xml:space="preserve">
          <source>Sorts all Iterable members into groups determined by the supplied mapping closure. The closure should return the key that this item should be grouped by. The returned LinkedHashMap will have an entry for each distinct key returned from the closure, with each value being a list of items for that group.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 Iterable 멤버를 정렬합니다. 클로저는이 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 LinkedHashMap에는 클로저에서 반환 된 각 고유 키에 대한 항목이 있으며 각 값은 해당 그룹의 항목 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9bd09f5a7882c380a688466929475da65a13afd5" translate="yes" xml:space="preserve">
          <source>Sorts all array members into (sub)groups determined by the supplied mapping closures as per the Iterable variant of this method.</source>
          <target state="translated">이 메서드의 Iterable 변형에 따라 제공된 매핑 클로저에 의해 결정된 (하위) 그룹으로 모든 배열 구성원을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="41fa09bea59fb11cd3822f2683abb179c8485a74" translate="yes" xml:space="preserve">
          <source>Sorts all array members into (sub)groups determined by the supplied mapping closures as per the list variant of this method.</source>
          <target state="translated">이 메서드의 목록 변형에 따라 제공된 매핑 클로저에 의해 결정된 (하위) 그룹으로 모든 배열 구성원을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="a21316851429e2b1d40319a706589692b4ee7aac" translate="yes" xml:space="preserve">
          <source>Sorts all array members into groups determined by the supplied mapping closure and counts the group size.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 배열 구성원을 정렬하고 그룹 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="240139c404329022e0c244c82e51652d49a6e3e3" translate="yes" xml:space="preserve">
          <source>Sorts all array members into groups determined by the supplied mapping closure and counts the group size. The closure should return the key that each item should be grouped by. The returned Map will have an entry for each distinct key returned from the closure, with each value being the frequency of items occurring for that group.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 배열 구성원을 정렬하고 그룹 크기를 계산합니다. 클로저는 각 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 Map에는 클로저에서 반환 된 각 고유 키에 대한 항목이 있으며 각 값은 해당 그룹에 대해 발생하는 항목의 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="f5f08f94e4f8c4efadedaed3a02b07444ea4dd4a" translate="yes" xml:space="preserve">
          <source>Sorts all array members into groups determined by the supplied mapping closure.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 배열 구성원을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="5936bd9cf9a177b9dcac80ccbc42c5120c5199a2" translate="yes" xml:space="preserve">
          <source>Sorts all array members into groups determined by the supplied mapping closure. The closure should return the key that this item should be grouped by. The returned LinkedHashMap will have an entry for each distinct key returned from the closure, with each value being a list of items for that group.</source>
          <target state="translated">제공된 매핑 클로저에 의해 결정된 그룹으로 모든 배열 구성원을 정렬합니다. 클로저는이 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 LinkedHashMap에는 클로저에서 반환 된 각 고유 키에 대한 항목이 있으며 각 값은 해당 그룹의 항목 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e7472585de3ad1389c24a0ad6b8f5a3d245b58a5" translate="yes" xml:space="preserve">
          <source>Sorts all collection members into groups determined by the supplied mapping closure and counts the group size.</source>
          <target state="translated">모든 컬렉션 멤버를 제공된 매핑 클로저에 의해 결정된 그룹으로 정렬하고 그룹 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8aa99d70c450d9b787e60669a7cdd05d23d861f8" translate="yes" xml:space="preserve">
          <source>Sorts all collection members into groups determined by the supplied mapping closure and counts the group size. The closure should return the key that each item should be grouped by. The returned Map will have an entry for each distinct key returned from the closure, with each value being the frequency of items occurring for that group.</source>
          <target state="translated">모든 컬렉션 멤버를 제공된 매핑 클로저에 의해 결정된 그룹으로 정렬하고 그룹 크기를 계산합니다. 클로저는 각 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 Map에는 클로저에서 반환 된 각 고유 키에 대한 항목이 있으며 각 값은 해당 그룹에 대해 발생하는 항목의 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="39a86d1b3f45b5f13352b15528113a94d7680270" translate="yes" xml:space="preserve">
          <source>Sorts all iterator items into groups determined by the supplied mapping closure and counts the group size.</source>
          <target state="translated">모든 반복기 항목을 제공된 매핑 클로저에 의해 결정된 그룹으로 정렬하고 그룹 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="f6f9fffb497b3469783b91b7841eab09e29a884b" translate="yes" xml:space="preserve">
          <source>Sorts all iterator items into groups determined by the supplied mapping closure and counts the group size. The closure should return the key that each item should be grouped by. The returned Map will have an entry for each distinct key returned from the closure, with each value being the frequency of items occurring for that group.</source>
          <target state="translated">모든 반복기 항목을 제공된 매핑 클로저에 의해 결정된 그룹으로 정렬하고 그룹 크기를 계산합니다. 클로저는 각 항목을 그룹화해야하는 키를 반환해야합니다. 반환 된 Map에는 클로저에서 반환 된 각 고유 키에 대한 항목이 있으며 각 값은 해당 그룹에 대해 발생하는 항목의 빈도입니다.</target>
        </trans-unit>
        <trans-unit id="ab4d523ae146c9dc7eb58c42d4e4a293c95d137f" translate="yes" xml:space="preserve">
          <source>Sorts the Collection.</source>
          <target state="translated">컬렉션을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="ec20f7957121f220c696734164d1a6d2ea3a706e" translate="yes" xml:space="preserve">
          <source>Sorts the Collection. Assumes that the collection items are comparable and uses their natural ordering to determine the resulting order. If the Collection is a List, it is sorted in place and returned. Otherwise, the elements are first placed into a new list which is then sorted and returned - leaving the original Collection unchanged.</source>
          <target state="translated">컬렉션을 정렬합니다. 컬렉션 항목이 비교 가능하고 자연스러운 순서를 사용하여 결과 순서를 결정한다고 가정합니다. 컬렉션이 목록이면 제자리에 정렬되어 반환됩니다. 그렇지 않으면 요소가 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 컬렉션은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d21700236514288f21b57e99ae2a828df3a85560" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable using the given Comparator.</source>
          <target state="translated">주어진 Comparator를 사용하여 Iterable을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="889a2b0d45ff5e09ab18bb8418fe6b0de5210954" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable using the given Comparator. If the Iterable is a List and mutate is true, it is sorted in place and returned. Otherwise, the elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">주어진 Comparator를 사용하여 Iterable을 정렬합니다. Iterable이 List이고 mutate가 true이면 제자리에 정렬되어 반환됩니다. 그렇지 않으면 요소가 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b61f8867f366a906bb18c5734e970b5fe05789f" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable using the given Comparator. The elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">주어진 Comparator를 사용하여 Iterable을 정렬합니다. 요소는 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d9635dd48111c0783e34f700f7fe50daa492949" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable.</source>
          <target state="translated">Iterable을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="49ed2f51dd3167a8abbb10b81f29e6918541be8e" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable. Assumes that the Iterable elements are comparable and uses a &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; to determine the resulting order. &lt;code&gt;NumberAwareComparator&lt;/code&gt; has special treatment for numbers but otherwise uses the natural ordering of the Iterable elements. The elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">Iterable을 정렬합니다. Iterable 요소가 비교 가능하고 &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; 를 사용하여 결과 순서를 결정한다고 가정합니다. &lt;code&gt;NumberAwareComparator&lt;/code&gt; 는 숫자를 특별하게 처리하지만 그렇지 않으면 Iterable 요소의 자연스러운 순서를 사용합니다. 요소는 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1008453fc1a3b6fd057acd7c7cf40790af3b269" translate="yes" xml:space="preserve">
          <source>Sorts the Iterable. Assumes that the Iterable items are comparable and uses their natural ordering to determine the resulting order. If the Iterable is a List and mutate is true, it is sorted in place and returned. Otherwise, the elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">Iterable을 정렬합니다. Iterable 항목이 비교 가능하고 자연스러운 순서를 사용하여 결과 순서를 결정한다고 가정합니다. Iterable이 List이고 mutate가 true이면 제자리에 정렬되어 반환됩니다. 그렇지 않으면 요소가 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b87b6ada243a40e7fee342886bb47734f84476c2" translate="yes" xml:space="preserve">
          <source>Sorts the Iterator.</source>
          <target state="translated">반복자를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="06678b25f3ab10a8b403e73d8c64c044671ddcd3" translate="yes" xml:space="preserve">
          <source>Sorts the Iterator. Assumes that the Iterator elements are comparable and uses a &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; to determine the resulting order. &lt;code&gt;NumberAwareComparator&lt;/code&gt; has special treatment for numbers but otherwise uses the natural ordering of the Iterator elements. A new iterator is produced that traverses the items in sorted order.</source>
          <target state="translated">반복자를 정렬합니다. Iterator 요소가 비교 가능하고 &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; 를 사용하여 결과 순서를 결정한다고 가정합니다. &lt;code&gt;NumberAwareComparator&lt;/code&gt; 는 숫자를 특별하게 처리하지만 그렇지 않으면 Iterator 요소의 자연스러운 순서를 사용합니다. 정렬 된 순서로 항목을 순회하는 새 반복기가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="89ff2f10a893b95849257d2a1703f2c9cf9abc3c" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered Map using the natural ordering of the keys to determine the ordering.</source>
          <target state="translated">순서를 결정하기 위해 키의 자연스러운 순서를 사용하여 지정된 맵의 요소를 새 순서 맵으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="3c0175347a51bcc0d39eecec3d1fd43fe1dd0556" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered Map using the natural ordering of the keys to determine the ordering. The original map is unchanged.</source>
          <target state="translated">순서를 결정하기 위해 키의 자연스러운 순서를 사용하여 지정된 맵의 요소를 새 순서 맵으로 정렬합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a3e404be100b8b23d0400cd2f40af3c677fd0c4" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered Map using the specified key comparator to determine the ordering.</source>
          <target state="translated">지정된 키 비교기를 사용하여 지정된 맵의 요소를 정렬 된 새 맵으로 정렬하여 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="5df7da295fe7741672b29a5389f3fc64c6649c64" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered Map using the specified key comparator to determine the ordering. The original map is unchanged.</source>
          <target state="translated">지정된 키 비교기를 사용하여 지정된 맵의 요소를 정렬 된 새 맵으로 정렬하여 순서를 결정합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f99652c3eb3e093bf3b29c014b322f0179e752d5" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using a &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; on map entry values to determine the resulting order.</source>
          <target state="translated">결과 순서를 결정하기 위해 맵 항목 값에서 &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; 를 사용하여 지정된 맵의 요소를 새 순서 맵 으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="2ed32ff1952b5286e1cd633d7c886a5694bc1753" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using a &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; on map entry values to determine the resulting order. &lt;code&gt;NumberAwareComparator&lt;/code&gt; has special treatment for numbers but otherwise uses the natural ordering of the Iterator elements. The original map is unchanged.</source>
          <target state="translated">결과 순서를 결정하기 위해 맵 항목 값에서 &lt;a href=&quot;numberawarecomparator&quot;&gt;NumberAwareComparator&lt;/a&gt; 를 사용하여 지정된 맵의 요소를 새 순서 맵 으로 정렬합니다. &lt;code&gt;NumberAwareComparator&lt;/code&gt; 는 숫자를 특별하게 처리하지만 그렇지 않으면 Iterator 요소의 자연스러운 순서를 사용합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88387190aca925ae31e2d5e2612c277d72be6ae0" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the closure as a comparator to determine the ordering.</source>
          <target state="translated">정렬을 결정하는 비교기로 클로저를 사용하여 지정된 맵의 요소를 새로운 정렬 된 맵으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="384b79a3b7a2b1fc925951412cbc6c0bf16a2cb6" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the closure as a comparator to determine the ordering. The original map is unchanged.</source>
          <target state="translated">정렬을 결정하는 비교기로 클로저를 사용하여 지정된 맵의 요소를 새로운 정렬 된 맵으로 정렬합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c7d26e51682ca381fe3906ce7904128a4e9fbf1" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the supplied Closure condition as a comparator to determine the ordering.</source>
          <target state="translated">제공된 클로저 조건을 비교기로 사용하여 지정된 맵의 요소를 정렬 된 새 맵으로 정렬하여 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c7d876e6a18fbe93d1c087bdd4be19a72832b142" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the supplied Closure condition as a comparator to determine the ordering. The original map is unchanged.</source>
          <target state="translated">제공된 클로저 조건을 비교기로 사용하여 지정된 맵의 요소를 정렬 된 새 맵으로 정렬하여 순서를 결정합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09060764edc13f9be9c425342baf6540cf95f11a" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the supplied comparator to determine the ordering.</source>
          <target state="translated">제공된 비교기를 사용하여 지정된 맵의 요소를 새 순서 맵으로 정렬하여 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="1f921419fc789877c6a2dcea212ee243134aa035" translate="yes" xml:space="preserve">
          <source>Sorts the elements from the given map into a new ordered map using the supplied comparator to determine the ordering. The original map is unchanged.</source>
          <target state="translated">제공된 비교기를 사용하여 지정된 맵의 요소를 새 순서 맵으로 정렬하여 순서를 결정합니다. 원래지도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6829f54bfb29429aa3508e933eb0e4c601fb947" translate="yes" xml:space="preserve">
          <source>Sorts the elements from this array into a newly created array using the Closure to determine the correct ordering.</source>
          <target state="translated">이 배열의 요소를 Closure를 사용하여 새로 만든 배열로 정렬하여 올바른 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="d9d31292daca5b8b6501f1a13b5c54478185887f" translate="yes" xml:space="preserve">
          <source>Sorts the given array into sorted order using the given comparator.</source>
          <target state="translated">지정된 비교기를 사용하여 지정된 배열을 정렬 된 순서로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="80077b79515d167740a794047edb7ccb68a7fce3" translate="yes" xml:space="preserve">
          <source>Sorts the given array into sorted order.</source>
          <target state="translated">지정된 배열을 정렬 된 순서로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="ec54dd324edefd95b0041b1864b1876be2890034" translate="yes" xml:space="preserve">
          <source>Sorts the given array into sorted order. The array items are assumed to be comparable. If mutate is true, the array is sorted in place and returned. Otherwise, a new sorted array is returned and the original array remains unchanged.</source>
          <target state="translated">지정된 배열을 정렬 된 순서로 정렬합니다. 배열 항목은 비교 가능한 것으로 간주됩니다. mutate가 true이면 배열이 제자리에 정렬되어 반환됩니다. 그렇지 않으면 새로운 정렬 된 배열이 반환되고 원래 배열은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0508631e4c660e2184addd6fd9b22795fc3e99d2" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator using the Closure to determine the correct ordering.</source>
          <target state="translated">Closure를 사용하여 지정된 반복기 항목을 정렬 된 반복기로 정렬하여 올바른 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="a80918d7ab82cd12edb860e012f69bd73f2f25e7" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator using the Closure to determine the correct ordering. The original iterator will be fully processed after the method call.</source>
          <target state="translated">Closure를 사용하여 지정된 반복기 항목을 정렬 된 반복기로 정렬하여 올바른 순서를 결정합니다. 원래 반복자는 메서드 호출 후에 완전히 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9ebf4deab6017fdcdf968cfa9dfac016fd8468b3" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator using the comparator.</source>
          <target state="translated">비교기를 사용하여 지정된 반복기 항목을 정렬 된 반복기로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="a4904e82ad26bd67e4105597773f7d7533c6f817" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator using the comparator. The original iterator will become exhausted of elements after completing this method call. A new iterator is produced that traverses the items in sorted order.</source>
          <target state="translated">비교기를 사용하여 지정된 반복기 항목을 정렬 된 반복기로 정렬합니다. 이 메서드 호출을 완료하면 원래 반복기에서 요소가 모두 소모됩니다. 정렬 된 순서로 항목을 순회하는 새 반복기가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="74459390513fdd60d9c93aad701a8303840f07f3" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator.</source>
          <target state="translated">지정된 반복기 항목을 정렬 된 반복기로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="232099f42a665528c317c2fdd931d0a61e615df7" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items into a sorted iterator. The items are assumed to be comparable. The original iterator will become exhausted of elements after completing this method call. A new iterator is produced that traverses the items in sorted order.</source>
          <target state="translated">지정된 반복기 항목을 정렬 된 반복기로 정렬합니다. 항목은 비교 가능한 것으로 간주됩니다. 이 메서드 호출을 완료하면 원래 반복기에서 요소가 모두 소모됩니다. 정렬 된 순서로 항목을 순회하는 새 반복기가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="825bb3ba60b473f143b226cb83aa2f0f8abedcef" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items using the comparator.</source>
          <target state="translated">비교기를 사용하여 지정된 반복기 항목을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="e05df2f1f362e811df327572aacd87e1cf52f6e0" translate="yes" xml:space="preserve">
          <source>Sorts the given iterator items using the comparator. The original iterator will become exhausted of elements after completing this method call. A new iterator is produced that traverses the items in sorted order.</source>
          <target state="translated">비교기를 사용하여 지정된 반복기 항목을 정렬합니다. 이 메서드 호출을 완료하면 원래 반복기에서 요소가 모두 소모됩니다. 정렬 된 순서로 항목을 순회하는 새 반복기가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="9e208897e100ecf3023ab129c6afec5fefab695a" translate="yes" xml:space="preserve">
          <source>Sorts this Iterable using the given Closure to determine the correct ordering.</source>
          <target state="translated">지정된 Closure를 사용하여이 Iterable을 정렬하여 올바른 순서를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="b5178fba135379a2485f1ac50432d207e8915467" translate="yes" xml:space="preserve">
          <source>Sorts this Iterable using the given Closure to determine the correct ordering. If the Iterable is a List and mutate is true, it is sorted in place and returned. Otherwise, the elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">지정된 Closure를 사용하여이 Iterable을 정렬하여 올바른 순서를 결정합니다. Iterable이 List이고 mutate가 true이면 제자리에 정렬되어 반환됩니다. 그렇지 않으면 요소가 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8190a5627d3cf24c6019667d98f46d9b60c1dbf6" translate="yes" xml:space="preserve">
          <source>Sorts this Iterable using the given Closure to determine the correct ordering. If the Iterable is a List, it is sorted in place and returned. Otherwise, the elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">지정된 Closure를 사용하여이 Iterable을 정렬하여 올바른 순서를 결정합니다. Iterable이 목록이면 제자리에 정렬되어 반환됩니다. 그렇지 않으면 요소가 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7657920e0729205cf4219559c859b55544807cbe" translate="yes" xml:space="preserve">
          <source>Sorts this Iterable using the given Closure to determine the correct ordering. The elements are first placed into a new list which is then sorted and returned - leaving the original Iterable unchanged.</source>
          <target state="translated">지정된 Closure를 사용하여이 Iterable을 정렬하여 올바른 순서를 결정합니다. 요소는 먼저 새 목록에 배치 된 다음 정렬되고 반환되며 원래 Iterable은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c795535740a650dd92455f59788cdd95b29f6af4" translate="yes" xml:space="preserve">
          <source>Source files will be read from the directory specified by the &lt;code&gt;javadocAssertion.src.dir&lt;/code&gt; system property, including all files matching &lt;code&gt;javadocAssertion.src.pattern&lt;/code&gt; and excluding files matching the &lt;code&gt;javadocAssertion.src.excludesPattern&lt;/code&gt;. By default all &lt;code&gt;.java&lt;/code&gt; and &lt;code&gt;.groovy&lt;/code&gt; source files from &lt;code&gt;./src&lt;/code&gt; will be scanned for assertions. You can also run this class as an application from the command line (assumes Groovy, JUnit and Ant are on the classpath). As an example:</source>
          <target state="translated">소스 파일은 지정한 디렉토리에서 읽을 수 있습니다 &lt;code&gt;javadocAssertion.src.dir&lt;/code&gt; 의 모든 파일 일치를 포함하여 시스템 등록, &lt;code&gt;javadocAssertion.src.pattern&lt;/code&gt; 을 하고, 일치하는 파일 제외 &lt;code&gt;javadocAssertion.src.excludesPattern&lt;/code&gt; 을 . 기본적으로 모든 &lt;code&gt;.java&lt;/code&gt; 과 &lt;code&gt;.groovy&lt;/code&gt; 에서 소스 파일 &lt;code&gt;./src&lt;/code&gt; 는 주장 검색됩니다. 명령 줄에서이 클래스를 애플리케이션으로 실행할 수도 있습니다 (Groovy, JUnit 및 Ant가 클래스 경로에 있다고 가정). 예로서:</target>
        </trans-unit>
        <trans-unit id="4c7f367b9b175fca21dd0192296435f4d0a8aee7" translate="yes" xml:space="preserve">
          <source>SourceBinding</source>
          <target state="translated">SourceBinding</target>
        </trans-unit>
        <trans-unit id="7b26e0162c9c5085949c1c0bd9d02f07184b15c2" translate="yes" xml:space="preserve">
          <source>SourceInfo</source>
          <target state="translated">SourceInfo</target>
        </trans-unit>
        <trans-unit id="141f32df616779694fefa2415863abe2790cf3d1" translate="yes" xml:space="preserve">
          <source>SourceText</source>
          <target state="translated">SourceText</target>
        </trans-unit>
        <trans-unit id="021ac41ed4e69cec6b3250a0a4f20b0bc1d194aa" translate="yes" xml:space="preserve">
          <source>Special 'Case' implementation for Class, which allows testing for a certain class in a switch statement.</source>
          <target state="translated">Class의 특수 'Case'구현으로 switch 문에서 특정 클래스를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9f2ab5297cccc8e6356b615189c71e463968a0b" translate="yes" xml:space="preserve">
          <source>Special 'Case' implementation for Class, which allows testing for a certain class in a switch statement. For example:</source>
          <target state="translated">Class의 특수 'Case'구현으로 switch 문에서 특정 클래스를 테스트 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="9ad9efba5413d62b2cee15e7a47b8f62939658fd" translate="yes" xml:space="preserve">
          <source>Special 'case' implementation for all numbers, which delegates to the &lt;code&gt;compareTo()&lt;/code&gt; method for comparing numbers of different types.</source>
          <target state="translated">모든 숫자에 대한 특수 '케이스'구현으로, 다른 유형의 숫자를 비교하기 위해 &lt;code&gt;compareTo()&lt;/code&gt; 메서드에 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e863a07de94b4f25ce62891f04998fb7042b817" translate="yes" xml:space="preserve">
          <source>Special class loader, which when running on Sun VM allows to generate accessor classes for any method</source>
          <target state="translated">Sun VM에서 실행될 때 모든 메소드에 대한 접근 자 클래스를 생성 할 수있는 특수 클래스 로더</target>
        </trans-unit>
        <trans-unit id="eab3b860a36d763e122f3e42ddfe980d4098da0c" translate="yes" xml:space="preserve">
          <source>Specific script engine able to reload modified scripts as well as dealing properly with dependent scripts.</source>
          <target state="translated">수정 된 스크립트를 다시로드하고 종속 스크립트를 적절하게 처리 할 수있는 특정 스크립트 엔진.</target>
        </trans-unit>
        <trans-unit id="601bd2affa651c14bcb4abc70f55cabac8119724" translate="yes" xml:space="preserve">
          <source>Specifically this template engine can handle strings larger than 64k which still causes problems for the other groovy template engines.</source>
          <target state="translated">특히이 템플릿 엔진은 64k보다 큰 문자열을 처리 할 수있어 다른 멋진 템플릿 엔진에 여전히 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eb3e3b0735de4efa09d548e98b3c209f846e456e" translate="yes" xml:space="preserve">
          <source>Specifies a stylesheet file to use.</source>
          <target state="translated">사용할 스타일 시트 파일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d3313139eec2ca1cbb9c73caa089e59164ff0ec9" translate="yes" xml:space="preserve">
          <source>Specifies a stylesheet file to use. If not specified, a default one will be generated for you.</source>
          <target state="translated">사용할 스타일 시트 파일을 지정합니다. 지정하지 않으면 기본값이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="23a93689a7d378667ad30dbd7bc5df5af0c7843e" translate="yes" xml:space="preserve">
          <source>Specifies an algorithm to determine how many the units of capacity a value consumes.</source>
          <target state="translated">값이 소비하는 용량 단위 수를 결정하는 알고리즘을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="89ef138bd62410b7ac4e8ab0cfd5cc84ffce947c" translate="yes" xml:space="preserve">
          <source>Specifies an algorithm to determine how many the units of capacity a value consumes. The default algorithm bounds the map by the number of key-value pairs by giving each entry a weight of</source>
          <target state="translated">값이 소비하는 용량 단위 수를 결정하는 알고리즘을 지정합니다. 기본 알고리즘은 각 항목에 가중치를 부여하여 키-값 쌍의 수로 맵을 제한합니다.</target>
        </trans-unit>
        <trans-unit id="573855dd5af060b3656356e27e02bae2984e54ed" translate="yes" xml:space="preserve">
          <source>Specifies an algorithm to determine how many the units of capacity an entry consumes.</source>
          <target state="translated">항목이 소비하는 용량 단위 수를 결정하는 알고리즘을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="3b00b1dfb357475447b2678fa7f597512a244b16" translate="yes" xml:space="preserve">
          <source>Specifies an algorithm to determine how many the units of capacity an entry consumes. The default algorithm bounds the map by the number of key-value pairs by giving each entry a weight of</source>
          <target state="translated">항목이 소비하는 용량 단위 수를 결정하는 알고리즘을 지정합니다. 기본 알고리즘은 각 항목에 가중치를 부여하여 키-값 쌍의 수로 맵을 제한합니다.</target>
        </trans-unit>
        <trans-unit id="de6e5552ec11441f0d9a5d98110f2404f12d63b3" translate="yes" xml:space="preserve">
          <source>Specifies an optional listener that is registered for notification when an entry is evicted.</source>
          <target state="translated">항목이 제거 될 때 알림을 위해 등록 된 선택적 리스너를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="aa633d27d6ffd92b5a2d1f89bc8137e3801a5067" translate="yes" xml:space="preserve">
          <source>Specifies the charset to be used in the templates, i.e. the value output within: &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=&lt;em&gt;charset&lt;/em&gt;&quot;&amp;gt;.</source>
          <target state="translated">템플릿에서 사용할 문자 집합, 즉 &amp;lt;meta http-equiv = &quot;Content-Type&quot;content = &quot;text / html; charset = &lt;em&gt;charset&lt;/em&gt; &quot;&amp;gt; 내의 값 출력을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="2eec7465c7a2d81686eb303e751f6d9ea0381443" translate="yes" xml:space="preserve">
          <source>Specifies the estimated number of concurrently updating threads.</source>
          <target state="translated">동시 업데이트 스레드의 예상 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c992c11d727f375063968152181c28df3e09feee" translate="yes" xml:space="preserve">
          <source>Specifies the estimated number of concurrently updating threads. The implementation performs internal sizing to try to accommodate this many threads (default</source>
          <target state="translated">동시 업데이트 스레드의 예상 수를 지정합니다. 구현은이 많은 스레드를 수용하기 위해 내부 크기 조정을 수행합니다 (기본값</target>
        </trans-unit>
        <trans-unit id="cbe47f5420928da1458ea6f65dad2c854cae152b" translate="yes" xml:space="preserve">
          <source>Specifies the file encoding to be used for generated files.</source>
          <target state="translated">생성 된 파일에 사용할 파일 인코딩을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dfa230fbdd71fc398bf2ff5b2d840120be8c3629" translate="yes" xml:space="preserve">
          <source>Specifies the file encoding to be used for generated files. If &lt;em&gt;fileEncoding&lt;/em&gt; is missing, the &lt;em&gt;charset&lt;/em&gt; encoding will be used for writing the files. If &lt;em&gt;fileEncoding&lt;/em&gt; and &lt;em&gt;charset&lt;/em&gt; are missing, the file encoding will default to &lt;em&gt;Charset.defaultCharset()&lt;/em&gt;.</source>
          <target state="translated">생성 된 파일에 사용할 파일 인코딩을 지정합니다. &lt;em&gt;fileEncoding&lt;/em&gt; 이 누락 된 경우 파일 쓰기에 &lt;em&gt;문자 &lt;/em&gt;&lt;em&gt;집합&lt;/em&gt; 인코딩이 사용됩니다. 경우 &lt;em&gt;fileEncoding&lt;/em&gt; 및 &lt;em&gt;캐릭터 세트가&lt;/em&gt; 누락 파일 인코딩을 기본값으로 &lt;em&gt;Charset.defaultCharset ()&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aa3ab9964e015b03e70fbb75e8f6513515abba9d" translate="yes" xml:space="preserve">
          <source>Specifies the header text to be placed at the top of each output file.</source>
          <target state="translated">각 출력 파일의 맨 위에 배치 할 헤더 텍스트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c59e45ca2eb41b7e35e0a14ac6918a21cd224b95" translate="yes" xml:space="preserve">
          <source>Specifies the header text to be placed at the top of each output file. The header will be placed to the right of the upper navigation bar. It may contain HTML tags and white space, though if it does, it must be enclosed in quotes. Any internal quotation marks within the header may have to be escaped.</source>
          <target state="translated">각 출력 파일의 맨 위에 배치 할 헤더 텍스트를 지정합니다. 헤더는 상단 탐색 모음의 오른쪽에 배치됩니다. HTML 태그와 공백을 포함 할 수 있지만 포함 된 경우 따옴표로 묶어야합니다. 헤더 내의 모든 내부 인용 부호를 이스케이프해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f4be1990edf2e3ee9b73f369e7db40ef9122f55" translate="yes" xml:space="preserve">
          <source>Specifies the initial capacity of the hash table (default</source>
          <target state="translated">해시 테이블의 초기 용량을 지정합니다 (기본값</target>
        </trans-unit>
        <trans-unit id="f9ce40bb484a26f2e8f05da1e658dc459dabffe2" translate="yes" xml:space="preserve">
          <source>Specifies the maximum weighted capacity to coerce the map to and may exceed it temporarily.</source>
          <target state="translated">맵을 강제 할 최대 가중치 용량을 지정하고 일시적으로 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bd5dbe4265d46251a2653e9a732dd5f06dac974" translate="yes" xml:space="preserve">
          <source>Specify annotation parameters.</source>
          <target state="translated">주석 매개 변수를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="b5c67afe19bc05983882d717fd91f28b556ab2ca" translate="yes" xml:space="preserve">
          <source>Specify annotation parameters. For example, if the annotation is :</source>
          <target state="translated">주석 매개 변수를 지정하십시오. 예를 들어 주석이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="14039cfdb7f993ca18c550945604b151fa059591" translate="yes" xml:space="preserve">
          <source>Specify the file containing the overview to be included in the generated documentation.</source>
          <target state="translated">생성 된 문서에 포함될 개요가 포함 된 파일을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="bab6cd73faf6887da7961f7553ad2cb08a3d8b9c" translate="yes" xml:space="preserve">
          <source>Specify where to find source file</source>
          <target state="translated">소스 파일을 찾을 위치 지정</target>
        </trans-unit>
        <trans-unit id="d2fd352a3ac46dc5bd477d6837c7ca6c7e3ce61b" translate="yes" xml:space="preserve">
          <source>Splits a CharSequence (with whitespace as delimiter).</source>
          <target state="translated">CharSequence를 분할합니다 (분리 문자로 공백 사용).</target>
        </trans-unit>
        <trans-unit id="23e968a92c3141b2d4e0c1c88c1c7ce326b15bf5" translate="yes" xml:space="preserve">
          <source>Splits a CharSequence (with whitespace as delimiter). Similar to tokenize, but returns an Array of String instead of a List.</source>
          <target state="translated">CharSequence를 분할합니다 (분리 문자로 공백 사용). tokenize와 비슷하지만 List 대신 Array of String을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="68d3ca1ed2fc96b4331399d2fe930596084fbebe" translate="yes" xml:space="preserve">
          <source>Splits all items into two collections based on the closure condition.</source>
          <target state="translated">마감 조건에 따라 모든 항목을 두 개의 컬렉션으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="f1dd0cf95c2c094bb61259ad0a6699564e94f704" translate="yes" xml:space="preserve">
          <source>Splits all items into two collections based on the closure condition. The first list contains all items which match the closure expression. The second list all those that don't.</source>
          <target state="translated">마감 조건에 따라 모든 항목을 두 개의 컬렉션으로 분할합니다. 첫 번째 목록에는 클로저 표현식과 일치하는 모든 항목이 포함됩니다. 두 번째는 그렇지 않은 모든 것을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="e9d89cb48c7afddcfc09bb32f3e7598a2204f06b" translate="yes" xml:space="preserve">
          <source>Splits all items into two lists based on the closure condition.</source>
          <target state="translated">마감 조건에 따라 모든 항목을 두 개의 목록으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="ededf1ab233c9cff8cfaf36bba9820e447f2d7d6" translate="yes" xml:space="preserve">
          <source>Splits all items into two lists based on the closure condition. The first list contains all items matching the closure expression. The second list all those that don't.</source>
          <target state="translated">마감 조건에 따라 모든 항목을 두 개의 목록으로 분할합니다. 첫 번째 목록에는 클로저 표현식과 일치하는 모든 항목이 포함됩니다. 두 번째는 그렇지 않은 모든 것을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="874849af16a62cd8899fe0c1d773b1c250e22060" translate="yes" xml:space="preserve">
          <source>SpreadMap.SpreadMap</source>
          <target state="translated">SpreadMap.SpreadMap</target>
        </trans-unit>
        <trans-unit id="d35b567496a9d43b32b47f264cb24c55bcdc261d" translate="yes" xml:space="preserve">
          <source>Sprintf to a string.</source>
          <target state="translated">Sprintf를 문자열로.</target>
        </trans-unit>
        <trans-unit id="a91e34a5013ed514a2cf67abf07383fda2b002bc" translate="yes" xml:space="preserve">
          <source>Sql.eachRow</source>
          <target state="translated">Sql.eachRow</target>
        </trans-unit>
        <trans-unit id="5ed2b7cb4864ec59ef2b83519f9ddcfba00d6644" translate="yes" xml:space="preserve">
          <source>SqlExtensions</source>
          <target state="translated">SqlExtensions</target>
        </trans-unit>
        <trans-unit id="358abf58a44d5a6f4f000f23b592129bceb7c107" translate="yes" xml:space="preserve">
          <source>StampedCommonCache(int, int)</source>
          <target state="translated">StampedCommonCache(int, int)</target>
        </trans-unit>
        <trans-unit id="6b41789e76562e0f2dfd8a550da3a64a3b6caa34" translate="yes" xml:space="preserve">
          <source>Standard Groovy size() method for StringBuilders.</source>
          <target state="translated">StringBuilders에 대한 표준 Groovy size () 메서드.</target>
        </trans-unit>
        <trans-unit id="bf737e0f51396dba31702e45d4cf0f113bfbc2d3" translate="yes" xml:space="preserve">
          <source>Standard aliases for the command.</source>
          <target state="translated">명령의 표준 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="48eb431a37093785be7b5fb60408eb13a1ae2aad" translate="yes" xml:space="preserve">
          <source>Standard iterator for a data input stream which iterates through the stream content a Byte at a time.</source>
          <target state="translated">스트림 콘텐츠를 한 번에 Byte 씩 반복하는 데이터 입력 스트림에 대한 표준 반복기입니다.</target>
        </trans-unit>
        <trans-unit id="6301983c95efe511603227c46c48d3f6f2f1a05e" translate="yes" xml:space="preserve">
          <source>Standard iterator for a input stream which iterates through the stream content in a byte-based fashion.</source>
          <target state="translated">바이트 기반 방식으로 스트림 콘텐츠를 반복하는 입력 스트림에 대한 표준 반복기입니다.</target>
        </trans-unit>
        <trans-unit id="9fa0ac6da20df70c7e3327ff67dc8dc1d9f6b3b2" translate="yes" xml:space="preserve">
          <source>Start a Thread with a given name and the given closure as a Runnable instance.</source>
          <target state="translated">주어진 이름과 주어진 클로저를 Runnable 인스턴스로 사용하여 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="5981cf4b360a34b92040fe23411992d366eb6575" translate="yes" xml:space="preserve">
          <source>Start a Thread with the given closure as a Runnable instance.</source>
          <target state="translated">Runnable 인스턴스로 주어진 클로저를 사용하여 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="00b5375da7b75a6faeb34ca714309db3be39e5a9" translate="yes" xml:space="preserve">
          <source>Start a daemon Thread with a given name and the given closure as a Runnable instance.</source>
          <target state="translated">Runnable 인스턴스로 주어진 이름과 주어진 클로저로 데몬 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="32f093ab531f4737ab1c20ee033eb3427d4086f1" translate="yes" xml:space="preserve">
          <source>Start a daemon Thread with the given closure as a Runnable instance.</source>
          <target state="translated">Runnable 인스턴스로 주어진 클로저로 데몬 스레드를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2a62fac61987bec25503a9ee9cbd1ca3c431b652" translate="yes" xml:space="preserve">
          <source>Starts intercepting System.out/System.err</source>
          <target state="translated">System.out / System.err 인터셉트 시작</target>
        </trans-unit>
        <trans-unit id="1ef6a1d9026c050fdc028ba10268a7e9a5181f51" translate="yes" xml:space="preserve">
          <source>Stateless objects used to perform math on the various Number subclasses. Instances are required so that polymorphic calls work properly, but each subclass creates a singleton instance to minimize garbage. All methods must be thread-safe. The design goals of this class are as follows:</source>
          <target state="translated">다양한 Number 하위 클래스에서 수학을 수행하는 데 사용되는 상태 비 저장 객체입니다. 다형성 호출이 제대로 작동하려면 인스턴스가 필요하지만 각 하위 클래스는 가비지를 최소화하기 위해 단일 인스턴스를 만듭니다. 모든 메소드는 스레드로부터 안전해야합니다. 이 클래스의 디자인 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a72ca256dc49e55a1a57b9a727fbde9834c9a3f7" translate="yes" xml:space="preserve">
          <source>Statement</source>
          <target state="translated">Statement</target>
        </trans-unit>
        <trans-unit id="0a45e4795f05ad2b38a3d741cbf31bd1f1e13442" translate="yes" xml:space="preserve">
          <source>Statements can either be read in from a text file using the</source>
          <target state="translated">문은 다음을 사용하여 텍스트 파일에서 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e9c6e62d7e73c03eb36e9a5563efaafee3b57b1" translate="yes" xml:space="preserve">
          <source>Static compilation AST node metadata keys.</source>
          <target state="translated">정적 컴파일 AST 노드 메타 데이터 키.</target>
        </trans-unit>
        <trans-unit id="47550adb5fd62bc8181856f49263a980e76051e4" translate="yes" xml:space="preserve">
          <source>Static methods are used with the first parameter being the destination class, i.e. &lt;code&gt;public static String reverse(String self)&lt;/code&gt; provides a &lt;code&gt;reverse()&lt;/code&gt; method for &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">고정 방법은 첫 번째 파라미터가 대상 클래스 인으로 사용되는, 즉 &lt;code&gt;public static String reverse(String self)&lt;/code&gt; 제공 &lt;code&gt;reverse()&lt;/code&gt; 에 대한 방법 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef319f643393758bee71b73a45de0129c340bdf" translate="yes" xml:space="preserve">
          <source>Static methods, synthetic methods or methods from the &lt;code&gt;GroovyObject&lt;/code&gt; interface are not candidates for delegation</source>
          <target state="translated">&lt;code&gt;GroovyObject&lt;/code&gt; 인터페이스의 정적 메서드, 합성 메서드 또는 메서드는 위임 후보가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1e562fc80d4000c08c8cc29da61df8d3065d4054" translate="yes" xml:space="preserve">
          <source>Steps through the range, calling a closure for each item.</source>
          <target state="translated">범위를 단계별로 이동하여 각 항목에 대한 클로저를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="bcb0b4cd5de865b3698724e03a0fbeb5cab467c8" translate="yes" xml:space="preserve">
          <source>Stops intercepting System.out/System.err, sending output to wherever it was going when this interceptor was created.</source>
          <target state="translated">System.out / System.err의 인터셉트를 중지하고이 인터셉터가 작성되었을 때 어디로 가든지 출력을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9be51fd362d93664ea38e76a84b7d60d267cac1e" translate="yes" xml:space="preserve">
          <source>Stores an inferred type for an expression.</source>
          <target state="translated">식에 대한 유추 된 형식을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e202ad3759e75b6f8874bca5b5df704489cec6fd" translate="yes" xml:space="preserve">
          <source>Stores an inferred type for an expression. Delegates to the type checker.</source>
          <target state="translated">식에 대한 유추 된 형식을 저장합니다. 유형 검사기에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="6abed4241d0973dbecad79bab09cb9e50ebcfeb0" translate="yes" xml:space="preserve">
          <source>Stores info about GroovyDoc tags.</source>
          <target state="translated">GroovyDoc 태그에 대한 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="2d09f604b14bdf52a999aa8c7b5b7fb8d86d6265" translate="yes" xml:space="preserve">
          <source>Stores information about types when [objectOfInstanceof instanceof typeExpression] is visited.</source>
          <target state="translated">[objectOfInstanceof instanceof typeExpression] 방문시 유형에 대한 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="f331c08de701ddf8566a6509378cf053c22dd599" translate="yes" xml:space="preserve">
          <source>Stores information which is only valid in the &quot;if&quot; branch of an if-then-else statement.</source>
          <target state="translated">if-then-else 문의 &quot;if&quot;분기에서만 유효한 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4c63e3c08017cfb58c62cfe55858e9f1542bcc18" translate="yes" xml:space="preserve">
          <source>Stores information which is only valid in the &quot;if&quot; branch of an if-then-else statement. This is used when the if condition expression makes use of an instanceof check</source>
          <target state="translated">if-then-else 문의 &quot;if&quot;분기에서만 유효한 정보를 저장합니다. if 조건식이 검사 인스턴스를 사용할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f298cd6c5b7cc9ac58c50e71d1c94992686b18d9" translate="yes" xml:space="preserve">
          <source>Stores state information about global AST transformations applied to a compilation unit.</source>
          <target state="translated">컴파일 단위에 적용된 전역 AST 변환에 대한 상태 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9dcc1ffd24be8ea4dec56f1abe00b0401728a81d" translate="yes" xml:space="preserve">
          <source>Stores the IvyGrabRecord(s) for all dependencies in each grab() call.</source>
          <target state="translated">각 grab () 호출의 모든 종속성에 대한 IvyGrabRecord (s)를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="bbf3854a38ef7c9b77b4d9646577e48504b995aa" translate="yes" xml:space="preserve">
          <source>Stores the inferred return type of a closure or a method.</source>
          <target state="translated">클로저 또는 메서드의 유추 된 반환 형식을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0188835eea92c56bd9b12f1847b3889e84693d3e" translate="yes" xml:space="preserve">
          <source>Stores the inferred return type of a closure or a method. We are using a separate key to store inferred return type because the inferred type of a closure is &lt;a href=&quot;../../../../../groovy/lang/closure&quot;&gt;Closure&lt;/a&gt;, which is different from the inferred type of the code of the closure.</source>
          <target state="translated">클로저 또는 메서드의 유추 된 반환 형식을 저장합니다. 추론 된 클로저 유형이 &lt;a href=&quot;../../../../../groovy/lang/closure&quot;&gt;클로저&lt;/a&gt; 코드의 추론 된 유형과 다른 Closure 이므로 추론 된 반환 유형을 저장하기 위해 별도의 키를 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="69b20855d90783c3d348249cc797cc95158fb84b" translate="yes" xml:space="preserve">
          <source>Stores the thread local states in a Map that can be passed across threads</source>
          <target state="translated">스레드간에 전달할 수있는 맵에 스레드 로컬 상태를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e60bd4d9d3ea4f994a3d25544e8bc3584d4bbd32" translate="yes" xml:space="preserve">
          <source>Strategy for creating new instances of a class.</source>
          <target state="translated">클래스의 새 인스턴스를 만드는 전략입니다.</target>
        </trans-unit>
        <trans-unit id="77b8182be0898823504df336addeb353884b9f0c" translate="yes" xml:space="preserve">
          <source>Strategy for picking the correct synthetic identifier.</source>
          <target state="translated">올바른 합성 식별자를 선택하기위한 전략.</target>
        </trans-unit>
        <trans-unit id="42587c7991f73c7df68c88e45680b806bc0e1315" translate="yes" xml:space="preserve">
          <source>Strategy for picking the correct synthetic reference identifier.</source>
          <target state="translated">올바른 합성 참조 식별자를 선택하기위한 전략.</target>
        </trans-unit>
        <trans-unit id="4c2208906aff43c4d8169b4f159c6ddaa0ced15e" translate="yes" xml:space="preserve">
          <source>Strategy for resolving a classname.</source>
          <target state="translated">클래스 이름을 해결하기위한 전략.</target>
        </trans-unit>
        <trans-unit id="abc4c46ea7793bf4ab30c4df5ea70f7bc6d3e7a0" translate="yes" xml:space="preserve">
          <source>Strategy for resolving a relationship property name.</source>
          <target state="translated">관계 속성 이름을 확인하기위한 전략.</target>
        </trans-unit>
        <trans-unit id="d9e83cc99b3782f26690c43d13bce962d46301c9" translate="yes" xml:space="preserve">
          <source>Strategy for setting a child node on its parent.</source>
          <target state="translated">부모에 자식 노드를 설정하기위한 전략.</target>
        </trans-unit>
        <trans-unit id="15e593c4b6dc8dfea5a5825f93831a8d4f99643d" translate="yes" xml:space="preserve">
          <source>Strategy method allowing derived classes to handle types differently such as for CLOBs etc.</source>
          <target state="translated">파생 클래스가 CLOB 등과 같이 유형을 다르게 처리 할 수 ​​있도록하는 전략 방법입니다.</target>
        </trans-unit>
        <trans-unit id="faa75249ef44bcdb28a89cdde229de47f5ae956a" translate="yes" xml:space="preserve">
          <source>Strategy method to establish parent/child relationships.</source>
          <target state="translated">부모 / 자식 관계를 설정하는 전략 방법.</target>
        </trans-unit>
        <trans-unit id="227db0b33e59cc4bc93dfe37e94902f44be8258b" translate="yes" xml:space="preserve">
          <source>Stream writer which flushes after each write operation.</source>
          <target state="translated">각 쓰기 작업 후 플러시하는 스트림 작성기.</target>
        </trans-unit>
        <trans-unit id="88cdde310c81a6e0255738870f2d2b740b76d833" translate="yes" xml:space="preserve">
          <source>StreamingTemplateEngine as a servlet engine</source>
          <target state="translated">서블릿 엔진으로서의 StreamingTemplateEngine</target>
        </trans-unit>
        <trans-unit id="07288ccbe8954874bd48bbc7566c276957552017" translate="yes" xml:space="preserve">
          <source>StrictExpectation</source>
          <target state="translated">StrictExpectation</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="33086d3aa3c6fa2c2f1e7d480d24d1de0663f006" translate="yes" xml:space="preserve">
          <source>String after removing the right &lt;code&gt;num&lt;/code&gt; chars and empty of the &lt;code&gt;num&lt;/code&gt; is greater than the length of the CharSequence</source>
          <target state="translated">올바른 제거한 후 문자열 &lt;code&gt;num&lt;/code&gt; 문자를과의 비어 &lt;code&gt;num&lt;/code&gt; 의 CharSequence의 길이보다 큰</target>
        </trans-unit>
        <trans-unit id="77c04237617b6729db92642214be4091dc2eff89" translate="yes" xml:space="preserve">
          <source>String array to be indexed by the CLASS_xxx_IDX constants</source>
          <target state="translated">CLASS_xxx_IDX 상수로 인덱싱 할 문자열 배열</target>
        </trans-unit>
        <trans-unit id="cb4d0047df38620a732e030cb88f28a92ccf368a" translate="yes" xml:space="preserve">
          <source>String between the 2 subsequent &lt;code&gt;enclosure&lt;/code&gt; strings</source>
          <target state="translated">2 개의 후속 &lt;code&gt;enclosure&lt;/code&gt; 문자열 사이의 문자열</target>
        </trans-unit>
        <trans-unit id="0990a53ef8eba0822c0359fb014d21585bcb34d1" translate="yes" xml:space="preserve">
          <source>String between the nth occurrence of pair of &lt;code&gt;enclosure&lt;/code&gt; strings</source>
          <target state="translated">n 번째 &lt;code&gt;enclosure&lt;/code&gt; 문자열 쌍 사이의 문자열</target>
        </trans-unit>
        <trans-unit id="23c046d0f386da164f1eb64a0a39d08c120ee03f" translate="yes" xml:space="preserve">
          <source>String representation of this calendar with the given format.</source>
          <target state="translated">주어진 형식으로이 달력의 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="bd0e9c81ef6b9cc86a74adaa6de880f58c5fc7a0" translate="yes" xml:space="preserve">
          <source>String representing the object as xml</source>
          <target state="translated">객체를 xml로 나타내는 문자열</target>
        </trans-unit>
        <trans-unit id="42b05028dae611f4c2d5eb736c4502d99d6b63b4" translate="yes" xml:space="preserve">
          <source>String that is after the given searchString and empty string if it does not exist</source>
          <target state="translated">주어진 searchString 뒤에있는 문자열 및 존재하지 않는 경우 빈 문자열</target>
        </trans-unit>
        <trans-unit id="c73df1dd7124d35e97aeb0759d67edee23bdd6d9" translate="yes" xml:space="preserve">
          <source>String that is before the given searchString</source>
          <target state="translated">주어진 searchString 앞에있는 문자열</target>
        </trans-unit>
        <trans-unit id="3944d6945ec1790240c31e5bb08713c41935f9dd" translate="yes" xml:space="preserve">
          <source>String that is in between the given two CharSequences and empty if the unavailable inputs are given</source>
          <target state="translated">주어진 두 CharSequence 사이에 있고 사용할 수없는 입력이 주어지면 비어있는 문자열</target>
        </trans-unit>
        <trans-unit id="e78a388bc574f232239303ca29f31ec9c1f9efaf" translate="yes" xml:space="preserve">
          <source>String the description</source>
          <target state="translated">설명 문자열</target>
        </trans-unit>
        <trans-unit id="7f542c75fd7a460dd7cfbd1df3dc8fb899f9881f" translate="yes" xml:space="preserve">
          <source>String utility functions.</source>
          <target state="translated">문자열 유틸리티 함수.</target>
        </trans-unit>
        <trans-unit id="3c3ff1d8631b84ab9256e2a1940c51094c8174a1" translate="yes" xml:space="preserve">
          <source>String with escaped values, &lt;code&gt;null&lt;/code&gt; if null string input</source>
          <target state="translated">탈출 값과 문자열 &lt;code&gt;null&lt;/code&gt; 의 경우는 null 문자열 입력</target>
        </trans-unit>
        <trans-unit id="f54e5b9f3f63996a048d3bc00596b6cafdc22514" translate="yes" xml:space="preserve">
          <source>String.matches</source>
          <target state="translated">String.matches</target>
        </trans-unit>
        <trans-unit id="d6fc77fada5f3e4d73cc33c3e3916dfdf5a6f3bd" translate="yes" xml:space="preserve">
          <source>String.replaceAll</source>
          <target state="translated">String.replaceAll</target>
        </trans-unit>
        <trans-unit id="407d155c32c8aacd62f629ae47bdceb19d671bbf" translate="yes" xml:space="preserve">
          <source>String.replaceFirst</source>
          <target state="translated">String.replaceFirst</target>
        </trans-unit>
        <trans-unit id="1dd3437157a2617f6a94feaf67c320289a50dbe4" translate="yes" xml:space="preserve">
          <source>String.split</source>
          <target state="translated">String.split</target>
        </trans-unit>
        <trans-unit id="33fcc7667ad456313181c4b3d9207aa9f0ebfc98" translate="yes" xml:space="preserve">
          <source>String.toLowerCase</source>
          <target state="translated">String.toLowerCase</target>
        </trans-unit>
        <trans-unit id="748d6e406bad3a31a3d01358dcbe86a9d02e68c6" translate="yes" xml:space="preserve">
          <source>String.toUpperCase</source>
          <target state="translated">String.toUpperCase</target>
        </trans-unit>
        <trans-unit id="395bc71d964b3925f2852aca0b52e3e106a8820f" translate="yes" xml:space="preserve">
          <source>StringGroovyMethods.size</source>
          <target state="translated">StringGroovyMethods.size</target>
        </trans-unit>
        <trans-unit id="8cbb96436717ef355df8469720078513b78efc6e" translate="yes" xml:space="preserve">
          <source>StringTokenizer.StringTokenizer</source>
          <target state="translated">StringTokenizer.StringTokenizer</target>
        </trans-unit>
        <trans-unit id="00a1fbeda407def363056aaabfd5d9131265daf7" translate="yes" xml:space="preserve">
          <source>StringUtil.tr</source>
          <target state="translated">StringUtil.tr</target>
        </trans-unit>
        <trans-unit id="901f27604e20208eb2f26a9fe8a04a85ffe2165c" translate="yes" xml:space="preserve">
          <source>StringWriter</source>
          <target state="translated">StringWriter</target>
        </trans-unit>
        <trans-unit id="3c601bb4b4fea36634611fd67381ac879667f68a" translate="yes" xml:space="preserve">
          <source>String[] result of split</source>
          <target state="translated">String [] 분할 결과</target>
        </trans-unit>
        <trans-unit id="f7ad99d667c893051edc15624315946de288943f" translate="yes" xml:space="preserve">
          <source>Strips &lt;code&gt;numChars&lt;/code&gt; leading characters from every line in a CharSequence.</source>
          <target state="translated">스트립 &lt;code&gt;numChars&lt;/code&gt; 의 CharSequence의 모든 라인의 문자를 선도합니다.</target>
        </trans-unit>
        <trans-unit id="e1047ade3287971ba497f5940cd7974e0b1706f3" translate="yes" xml:space="preserve">
          <source>Strips leading spaces from every line in a CharSequence.</source>
          <target state="translated">CharSequence의 모든 줄에서 선행 공백을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0f95ecabd0c87b34a9cda0a83a7c4534b196793e" translate="yes" xml:space="preserve">
          <source>Strips leading spaces from every line in a CharSequence. The line with the least number of leading spaces determines the number to remove. Lines only containing whitespace are ignored when calculating the number of leading spaces to strip.</source>
          <target state="translated">CharSequence의 모든 줄에서 선행 공백을 제거합니다. 가장 적은 수의 선행 공백이있는 행이 제거 할 수를 결정합니다. 제거 할 선행 공백 수를 계산할 때 공백 만 포함하는 줄은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3bd2bd01169e27e41d07ce438b1db5f4fc5e5e0c" translate="yes" xml:space="preserve">
          <source>Strips leading whitespace/control characters followed by '|' from every line in a CharSequence.</source>
          <target state="translated">선행 공백 / 제어 문자 뒤에 '|'가 오는 것을 제거합니다. CharSequence의 모든 줄에서.</target>
        </trans-unit>
        <trans-unit id="263332c379ade67e64410a3addcdf8ce6481c353" translate="yes" xml:space="preserve">
          <source>Strips leading whitespace/control characters followed by &lt;code&gt;marginChar&lt;/code&gt; from every line in a CharSequence.</source>
          <target state="translated">CharSequence의 모든 행에서 선행 공백 / 제어 문자 다음에 &lt;code&gt;marginChar&lt;/code&gt; 가 오는 것을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8e9a46a72c9270dca7c96dca87c4b43274360953" translate="yes" xml:space="preserve">
          <source>Stub for macro calls.</source>
          <target state="translated">매크로 호출을위한 스텁.</target>
        </trans-unit>
        <trans-unit id="d0e850b1412e2c5a8c0e157aea7256252e93d23c" translate="yes" xml:space="preserve">
          <source>Stub needed for testing.</source>
          <target state="translated">테스트에 필요한 스텁.</target>
        </trans-unit>
        <trans-unit id="3d7a1b85fdcfddfe51ba56c0fdfcf6596f4751cc" translate="yes" xml:space="preserve">
          <source>Stub needed for testing. Called when a connection is opened by one of the command-pattern classes so that a test case can monitor the state of the connection through its subclass.</source>
          <target state="translated">테스트에 필요한 스텁. 테스트 케이스가 하위 클래스를 통해 연결 상태를 모니터링 할 수 있도록 명령 패턴 클래스 중 하나에 의해 연결이 열릴 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d4c1e723bfb178c4a8cf349eae38b7dfb45a6dcb" translate="yes" xml:space="preserve">
          <source>StubFor supports (typically unit) testing of classes in isolation by allowing a loosely-ordered expectation of the behavior of collaborators to be defined. A typical test scenario involves a class under test (CUT) and one or more collaborators. In such a scenario it is often desirable to just test the business logic of the CUT. One strategy for doing that is to replace the collaborator instances with simplified stub objects to help isolate out the logic in the CUT. StubFor allows such stubs to be created using meta-programming. The desired behavior of collaborators is defined as a behavior specification. The behavior can be checked by the user using verify(). With StubFor, a stub's expectation is sequence independent and use of verify() is left to the user. Typical usage is as follows: &amp;lt;</source>
          <target state="translated">StubFor는 공동 작업자의 행동에 대해 느슨하게 정렬 된 기대를 정의함으로써 격리 된 클래스의 테스트 (일반적으로 단위)를 지원합니다. 일반적인 테스트 시나리오에는 테스트중인 클래스 (CUT)와 한 명 이상의 공동 작업자가 포함됩니다. 이러한 시나리오에서는 CUT의 비즈니스 로직 만 테스트하는 것이 바람직합니다. 이를위한 한 가지 전략은 CUT에서 로직을 분리하는 데 도움이되도록 협업 자 인스턴스를 단순화 된 스텁 객체로 교체하는 것입니다. StubFor를 사용하면 메타 프로그래밍을 사용하여 이러한 스텁을 만들 수 있습니다. 협력자의 원하는 행동은 행동 사양으로 정의됩니다. 사용자는 verify ()를 사용하여 동작을 확인할 수 있습니다. StubFor를 사용하면 스텁의 기대치는 시퀀스에 독립적이며 verify () 사용은 사용자에게 맡겨집니다. 일반적인 사용법은 다음과 같습니다. &amp;lt;</target>
        </trans-unit>
        <trans-unit id="529da797248c64d56e1bac01555b3ef1202e511b" translate="yes" xml:space="preserve">
          <source>Style to use when cloning.</source>
          <target state="translated">복제 할 때 사용할 스타일입니다.</target>
        </trans-unit>
        <trans-unit id="515f8a256444c13feeb6ade6882cee9e9c41673d" translate="yes" xml:space="preserve">
          <source>Subclasses are therefore expected to return the signatures according to the available context, which is only the target method and the potential options.</source>
          <target state="translated">따라서 하위 클래스는 사용 가능한 컨텍스트에 따라 서명을 반환해야합니다. 이는 대상 메서드 및 잠재적 옵션 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="fe589363e4ac259adc89164a4b30d2637d7f2bd4" translate="yes" xml:space="preserve">
          <source>Subclasses may override this method to provide a custom engine.</source>
          <target state="translated">서브 클래스는 커스텀 엔진을 제공하기 위해이 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4429e4082fc721ed49174a4f731ca437e45c64" translate="yes" xml:space="preserve">
          <source>Subclasses of Enum</source>
          <target state="translated">Enum의 하위 클래스</target>
        </trans-unit>
        <trans-unit id="2a8000e224c8f10020019ec44e2314b8edeb0829" translate="yes" xml:space="preserve">
          <source>Subclasses should implement this method if they need to perform additional checks after the type checker has finished its work.</source>
          <target state="translated">하위 클래스는 유형 검사기가 작업을 마친 후 추가 검사를 수행해야하는 경우이 메서드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="241010c606b0131238cd4b19c9eaa38d72946400" translate="yes" xml:space="preserve">
          <source>Subclasses should implement this method if they need to perform additional checks after the type checker has finished its work. This is particularly useful for situations where you need multiple passes. Some checks in that case may be deferred to the end, using this method.</source>
          <target state="translated">하위 클래스는 유형 검사기가 작업을 마친 후 추가 검사를 수행해야하는 경우이 메서드를 구현해야합니다. 이것은 다중 패스가 필요한 상황에 특히 유용합니다. 이 경우 일부 검사는이 방법을 사용하여 끝까지 연기 될 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
