<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeceptjs">
    <body>
      <group id="codeceptjs">
        <trans-unit id="40e3da7a34426e713e445b29bdc1153e217ed16d" translate="yes" xml:space="preserve">
          <source>Presses a key on a focused element. Special keys like 'Enter', 'Control', &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/element/:id/value&quot;&gt;etc (opens new window)&lt;/a&gt; will be replaced with corresponding unicode. If modifier key is used (Control, Command, Alt, Shift) in array, it will be released afterwards.</source>
          <target state="translated">초점이 맞춰진 요소에서 키를 누릅니다. 'Enter', 'Control'등과 같은 특수 키 &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/element/:id/value&quot;&gt;(새 창 열기)&lt;/a&gt; 는 해당 유니 코드로 대체됩니다. 배열에서 수정 자 키 (Control, Command, Alt, Shift)를 사용하면 나중에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="3849eb902fbc2bb42000f2789d3993626e2d2a79" translate="yes" xml:space="preserve">
          <source>Presses a key on a focused element. Special keys like 'Enter', 'Control', &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/element/:id/value&quot;&gt;etc&lt;/a&gt; will be replaced with corresponding unicode. If modifier key is used (Control, Command, Alt, Shift) in array, it will be released afterwards.</source>
          <target state="translated">초점을 맞춘 요소에서 키를 누릅니다. , '제어', '입력'와 같은 특수 키 &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/element/:id/value&quot;&gt;등은&lt;/a&gt; 유니 코드를 해당로 대체됩니다. 배열에서 수정 자 키 (Control, Command, Alt, Shift)를 사용하면 나중에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="2b68bb22f9d2c8c0391d93300c1ed460b697befe" translate="yes" xml:space="preserve">
          <source>Prints all available methods of &lt;code&gt;I&lt;/code&gt; to console</source>
          <target state="translated">모든 가능한 방법 인쇄 &lt;code&gt;I&lt;/code&gt; 콘솔을</target>
        </trans-unit>
        <trans-unit id="a1e89128b9db4b25e947fbd75a85386e9d2004d4" translate="yes" xml:space="preserve">
          <source>Prints debugging information concerning the local environment</source>
          <target state="translated">로컬 환경에 관한 디버깅 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="2ee5ed93cc6fa1932f3362f400b843124c501230" translate="yes" xml:space="preserve">
          <source>Prints test scenarios without executing them</source>
          <target state="translated">테스트 시나리오를 실행하지 않고 인쇄</target>
        </trans-unit>
        <trans-unit id="14daa113536d8253331dd78c208c256a9375fa17" translate="yes" xml:space="preserve">
          <source>Problem: request mocking does not work and in debug mode you see this in output:</source>
          <target state="translated">문제 : 요청 모킹이 작동하지 않고 디버그 모드에서 출력에 다음이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5aef942ac8ff2b9437b3a404b6f2ca126f3edc50" translate="yes" xml:space="preserve">
          <source>Produces &lt;code&gt;steps.d.ts&lt;/code&gt; file, which referenced in the very beginning of a test file.</source>
          <target state="translated">생산 &lt;code&gt;steps.d.ts&lt;/code&gt; 의 매우 테스트 파일의 시작에서 참조 파일을.</target>
        </trans-unit>
        <trans-unit id="ff4fc0276e960c348647b647235f68200887c9d2" translate="yes" xml:space="preserve">
          <source>Profile</source>
          <target state="translated">Profile</target>
        </trans-unit>
        <trans-unit id="84083370162d72d8f9d3e15fe561f0204aaadf33" translate="yes" xml:space="preserve">
          <source>Pros</source>
          <target state="translated">Pros</target>
        </trans-unit>
        <trans-unit id="c2dfdb825ac19ef8886164073605851f7838e15e" translate="yes" xml:space="preserve">
          <source>Protractor</source>
          <target state="translated">Protractor</target>
        </trans-unit>
        <trans-unit id="f7f9ee0ea4941e47284fb36a443348f3543e4803" translate="yes" xml:space="preserve">
          <source>Protractor Example</source>
          <target state="translated">각도기 예</target>
        </trans-unit>
        <trans-unit id="e364f6c8f4f86c7e30356dba2c09fe4f25ae6965" translate="yes" xml:space="preserve">
          <source>Protractor Testing with CodeceptJS</source>
          <target state="translated">CodeceptJS를 사용한 각도기 테스트</target>
        </trans-unit>
        <trans-unit id="df88a6d3dcef749963b90cc85e818bf2192e7bc1" translate="yes" xml:space="preserve">
          <source>Protractor can also be used to test applications built without AngularJS. In this case, you need to disable the angular synchronization feature inside the config:</source>
          <target state="translated">각도기를 사용하여 AngularJS없이 구축 된 애플리케이션을 테스트 할 수도 있습니다. 이 경우 구성 내에서 각도 동기화 기능을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="60739083347cd1f2142c1140890d3d05ecff884f" translate="yes" xml:space="preserve">
          <source>Protractor example demonstrates usage of global &lt;code&gt;element&lt;/code&gt; and &lt;code&gt;by&lt;/code&gt; objects. However &lt;code&gt;browser&lt;/code&gt; should be accessed from a helper instance via &lt;code&gt;this.helpers['Protractor']&lt;/code&gt;; We also use &lt;code&gt;chai-as-promised&lt;/code&gt; library to have nice assertions with promises.</source>
          <target state="translated">각도기 예제는 전역 &lt;code&gt;element&lt;/code&gt; 및 객체 &lt;code&gt;by&lt;/code&gt; 사용법을 보여줍니다 . 그러나 &lt;code&gt;this.helpers['Protractor']&lt;/code&gt; 를 통해 헬퍼 인스턴스에서 &lt;code&gt;browser&lt;/code&gt; 액세스해야합니다 . 또한 &lt;code&gt;chai-as-promised&lt;/code&gt; 라이브러리를 사용하여 약속과 함께 멋진 주장을합니다.</target>
        </trans-unit>
        <trans-unit id="9fc22139714c4d907ef3c59e8d21d9b53e71cf13" translate="yes" xml:space="preserve">
          <source>Protractor helper is based on &lt;a href=&quot;http://www.protractortest.org&quot;&gt;Protractor library (opens new window)&lt;/a&gt; and used for testing web applications.</source>
          <target state="translated">Protractor 도우미는 &lt;a href=&quot;http://www.protractortest.org&quot;&gt;Protractor 라이브러리 (새 창에서 열림&lt;/a&gt; )를 기반으로 하며 웹 애플리케이션 테스트에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dac7263d70842f03433601148e83eeb5030ca97e" translate="yes" xml:space="preserve">
          <source>Protractor helper is based on &lt;a href=&quot;http://www.protractortest.org&quot;&gt;Protractor library&lt;/a&gt; and used for testing web applications.</source>
          <target state="translated">각도기 도우미는 &lt;a href=&quot;http://www.protractortest.org&quot;&gt;각도기 라이브러리를&lt;/a&gt; 기반으로 하며 웹 응용 프로그램 테스트에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3c8515ad045a941505034b570cf91c84424c4d55" translate="yes" xml:space="preserve">
          <source>Protractor requires &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium Server and ChromeDriver/GeckoDriver to be installed (opens new window)&lt;/a&gt;. To test non-Angular applications please make sure you have &lt;code&gt;angular: false&lt;/code&gt; in configuration file.</source>
          <target state="translated">Protractor를 사용하려면 &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium Server 및 ChromeDriver / GeckoDriver를 설치해야합니다 (새 창에서 열림)&lt;/a&gt; . 각도가 아닌 응용 프로그램을 테스트하려면 구성 파일에 &lt;code&gt;angular: false&lt;/code&gt; 가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f83f4c1cb18fa6f6c0f9efda82e6bf0147d9e669" translate="yes" xml:space="preserve">
          <source>Protractor requires &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium Server and ChromeDriver/GeckoDriver to be installed&lt;/a&gt;. To test non-Angular applications please make sure you have &lt;code&gt;angular: false&lt;/code&gt; in configuration file.</source>
          <target state="translated">각도기는 &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium 서버 및 ChromeDriver / GeckoDriver를 설치해야&lt;/a&gt; 합니다. Angular 이외의 응용 프로그램을 테스트하려면 구성 파일에 &lt;code&gt;angular: false&lt;/code&gt; 가 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c23a1366111a61e3dc62c1c5c4d269758011462" translate="yes" xml:space="preserve">
          <source>Protractor requires Selenium Server to be started and running. To start and stop Selenium automatically install &lt;code&gt;@wdio/selenium-standalone-service&lt;/code&gt;.</source>
          <target state="translated">각도기를 시작하고 실행하려면 Selenium Server가 필요합니다. Selenium을 시작하고 중지하려면 자동으로 &lt;code&gt;@wdio/selenium-standalone-service&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e05ad465d2e7b7cf009240fd6413771c7dbb26ce" translate="yes" xml:space="preserve">
          <source>Provide a function description as a first parameter, function should return a promise:</source>
          <target state="translated">함수 설명을 첫 번째 매개 변수로 제공하십시오. 함수는 약속을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="8514d84a13dc9bca091ec4f251085af7509cb1c9" translate="yes" xml:space="preserve">
          <source>Provide an array for the second argument to select multiple options.</source>
          <target state="translated">여러 옵션을 선택하려면 두 번째 인수에 대한 배열을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">공용 API</target>
        </trans-unit>
        <trans-unit id="f475e0bb1876c07330627db87c50f93a234b1e33" translate="yes" xml:space="preserve">
          <source>Pulls a file from the device.</source>
          <target state="translated">장치에서 파일을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8b962c5248e49ad5e80a98e9a17775f4f17e4645" translate="yes" xml:space="preserve">
          <source>Puppeteer</source>
          <target state="translated">Puppeteer</target>
        </trans-unit>
        <trans-unit id="065879c8e6636d94367db56e89f66071ceb76049" translate="yes" xml:space="preserve">
          <source>Puppeteer Example</source>
          <target state="translated">인형 조종사 예</target>
        </trans-unit>
        <trans-unit id="7ba85998ce9fb6a1d589bf1d6e90ddc3979fd94a" translate="yes" xml:space="preserve">
          <source>Puppeteer can also work with Firefox. &lt;a href=&quot;https://codecept.io/helpers/Puppeteer-firefox&quot;&gt;Learn how to set it up&lt;/a&gt;</source>
          <target state="translated">Puppeteer는 Firefox에서도 작동 할 수 있습니다. &lt;a href=&quot;https://codecept.io/helpers/Puppeteer-firefox&quot;&gt;설정 방법 알아보기&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8937271ef4cac53671885a03ca83099e5c121cd3" translate="yes" xml:space="preserve">
          <source>Puppeteer commands are asynchronous so a callback function must be async.</source>
          <target state="translated">Puppeteer 명령은 비동기식이므로 콜백 함수는 비동기식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1ed2d3d37f5bcd1a6c6221b975cd12d062b6a375" translate="yes" xml:space="preserve">
          <source>Puppeteer has &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;nice and elegant API (opens new window)&lt;/a&gt; which you can use inside helpers. Accessing &lt;code&gt;page&lt;/code&gt; instance via &lt;code&gt;this.helpers.Puppeteer.page&lt;/code&gt; from inside a helper.</source>
          <target state="translated">Puppeteer에는 도우미 내부에서 사용할 수있는 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;멋지고 우아한 API (새 창에서 열림)&lt;/a&gt; 가 있습니다. 도우미 내부에서 &lt;code&gt;this.helpers.Puppeteer.page&lt;/code&gt; 를 통해 &lt;code&gt;page&lt;/code&gt; 인스턴스에 액세스 합니다 .</target>
        </trans-unit>
        <trans-unit id="44cf533586f4ecba59625f417469913793d64503" translate="yes" xml:space="preserve">
          <source>Puppeteer has a very &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;rich and flexible API&lt;/a&gt;. Sure, you can extend your test suites to use the methods listed there. CodeceptJS already prepares some objects for you and you can use them from your you helpers.</source>
          <target state="translated">Puppeteer는 매우 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md&quot;&gt;풍부하고 유연한 API를 가지고&lt;/a&gt; 있습니다. 물론, 테스트 스위트를 확장하여 여기에 나열된 방법을 사용할 수 있습니다. CodeceptJS는 이미 일부 객체를 준비하고 있으므로 도우미에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b06b43318edd1a95d3a51290acedd41c7fd3b517" translate="yes" xml:space="preserve">
          <source>Puppeteer starts a browser without showing its window. To see the browser, edit &lt;code&gt;codecept.json&lt;/code&gt; config and set &lt;code&gt;show: true&lt;/code&gt; for Puppeteer:</source>
          <target state="translated">Puppeteer는 창을 표시하지 않고 브라우저를 시작합니다. 브라우저를 보려면 &lt;code&gt;codecept.json&lt;/code&gt; 구성을 편집 하고 Puppeteer에 대해 &lt;code&gt;show: true&lt;/code&gt; 를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7e8c083d4680d692e97e537fa0321b84b117713" translate="yes" xml:space="preserve">
          <source>Puppeteer uses different strategies to detect if a page is loaded. In configuration use &lt;code&gt;waitForNavigation&lt;/code&gt; option for that:</source>
          <target state="translated">Puppeteer는 다른 전략을 사용하여 페이지가로드되었는지 감지합니다. 구성 에서 다음에 대해 &lt;code&gt;waitForNavigation&lt;/code&gt; 옵션을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="84f2680d95df677767ad2a02ced7ab510413fa2f" translate="yes" xml:space="preserve">
          <source>QAs</source>
          <target state="translated">QAs</target>
        </trans-unit>
        <trans-unit id="2467c80fb7cdd0df0768bcc064410e21bd71a2ed" translate="yes" xml:space="preserve">
          <source>QuickStart</source>
          <target state="translated">QuickStart</target>
        </trans-unit>
        <trans-unit id="d07133c8504b6a0e98371a1b9afe2ca2855a7270" translate="yes" xml:space="preserve">
          <source>Quickstart</source>
          <target state="translated">Quickstart</target>
        </trans-unit>
        <trans-unit id="cbaaa18133a5ea571bba33bebe1a8cc7e93344f9" translate="yes" xml:space="preserve">
          <source>REST</source>
          <target state="translated">REST</target>
        </trans-unit>
        <trans-unit id="0e719b3143e2b6ccb1fe9c98ac0c69157e0722cc" translate="yes" xml:space="preserve">
          <source>REST API endpoint which allows to perform create / delete requests and</source>
          <target state="translated">요청 작성 / 삭제를 수행 할 수있는 REST API 엔드 포인트</target>
        </trans-unit>
        <trans-unit id="eb17d8a03430f7ed2c77f54e2f18f6fae341e06e" translate="yes" xml:space="preserve">
          <source>REST helper allows to send additional requests to the REST API during acceptance tests. &lt;a href=&quot;http://unirest.io/nodejs.html&quot;&gt;Unirest&lt;/a&gt; library is used to perform requests.</source>
          <target state="translated">REST 헬퍼는 승인 테스트 중에 REST API에 추가 요청을 보낼 수 있습니다. &lt;a href=&quot;http://unirest.io/nodejs.html&quot;&gt;Unirest&lt;/a&gt; 라이브러리는 요청을 수행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e26fb0253fe97716b9fa4f463d617cbb777933d5" translate="yes" xml:space="preserve">
          <source>REST helper allows to send additional requests to the REST API during acceptance tests. &lt;a href=&quot;https://github.com/axios/axios&quot;&gt;Axios (opens new window)&lt;/a&gt; library is used to perform requests.</source>
          <target state="translated">REST 도우미를 사용하면 승인 테스트 중에 REST API에 추가 요청을 보낼 수 있습니다. &lt;a href=&quot;https://github.com/axios/axios&quot;&gt;Axios (새 창 열기)&lt;/a&gt; 라이브러리는 요청을 수행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="01a0a40d519f377d62cdb66ddf26e5b46a9f93c5" translate="yes" xml:space="preserve">
          <source>REST helper provides basic methods to send requests to application:</source>
          <target state="translated">REST 헬퍼는 애플리케이션에 요청을 보내는 기본 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b461d03d5b49fd3005114266c0578b80b33a781d" translate="yes" xml:space="preserve">
          <source>React applications require some additional love for end to end testing. At first, it is very hard to test an application which was never designed to be tested! This happens to many React application. While building components developers often forget to keep the element's semantic.</source>
          <target state="translated">React 애플리케이션은 종단 간 테스트에 대한 추가 사랑이 필요합니다. 처음에는 테스트하도록 설계되지 않은 애플리케이션을 테스트하기가 매우 어렵습니다! 이것은 많은 React 애플리케이션에서 발생합니다. 구성 요소를 구축하는 동안 개발자는 종종 요소의 의미를 유지하는 것을 잊습니다.</target>
        </trans-unit>
        <trans-unit id="a6a873d807ab46bbac572d7d36d29e5eb81b1496" translate="yes" xml:space="preserve">
          <source>React locators work via &lt;a href=&quot;https://github.com/baruchvlz/resq&quot;&gt;resq (opens new window)&lt;/a&gt; library, which handles React 16 and above.</source>
          <target state="translated">React 로케이터 는 React 16 이상을 처리하는 &lt;a href=&quot;https://github.com/baruchvlz/resq&quot;&gt;resq (새 창 열기)&lt;/a&gt; 라이브러리 를 통해 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="52499d8864ecc6bafdc64251b205e22644e1f0bf" translate="yes" xml:space="preserve">
          <source>Real Page Objects</source>
          <target state="translated">실제 페이지 개체</target>
        </trans-unit>
        <trans-unit id="d4f33e47d3b2b0af12574bbd494a84c450c96d32" translate="yes" xml:space="preserve">
          <source>Receive Playwright client from a custom helper by accessing &lt;code&gt;browser&lt;/code&gt; for the Browser object or &lt;code&gt;page&lt;/code&gt; for the current Page object:</source>
          <target state="translated">에 액세스하여 사용자 지정 도우미에서 극작가 클라이언트를 수신 &lt;code&gt;browser&lt;/code&gt; 브라우저 개체 나에 대한 &lt;code&gt;page&lt;/code&gt; 현재 페이지 객체 :</target>
        </trans-unit>
        <trans-unit id="47dd8f8025ece94d49096ed6f949b6a5d16f50c2" translate="yes" xml:space="preserve">
          <source>Receive Puppeteer client from a custom helper by accessing &lt;code&gt;browser&lt;/code&gt; for the Browser object or &lt;code&gt;page&lt;/code&gt; for the current Page object:</source>
          <target state="translated">에 액세스하여 사용자 지정 도우미에서 인형 클라이언트를 수신 &lt;code&gt;browser&lt;/code&gt; 브라우저 개체 나에 대한 &lt;code&gt;page&lt;/code&gt; 현재 페이지 객체 :</target>
        </trans-unit>
        <trans-unit id="6b18e65250fe51bcbb7ac2ea4f5873c9c257d6c4" translate="yes" xml:space="preserve">
          <source>Receive a Appium client from a custom helper by accessing &lt;code&gt;browser&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; 특성 에 액세스하여 사용자 정의 헬퍼로부터 Appium 클라이언트를 수신하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c6a921a87dec3b7be1ca9bb6ec83f03a6573cfd" translate="yes" xml:space="preserve">
          <source>Receive a WebDriver client from a custom helper by accessing &lt;code&gt;browser&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; 속성 에 액세스하여 사용자 지정 도우미에서 WebDriver 클라이언트를받습니다 .</target>
        </trans-unit>
        <trans-unit id="47ef6d2ffab580ce1dfef17c03ce72bff13f9940" translate="yes" xml:space="preserve">
          <source>Receive a WebDriverIO client from a custom helper by accessing &lt;code&gt;browser&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; 특성 에 액세스하여 사용자 정의 헬퍼로부터 WebDriverIO 클라이언트를 수신하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfbb5137925b6ff0a5fe989d878a0765221b34bc" translate="yes" xml:space="preserve">
          <source>Record &amp;amp; Replay mode allows you to record all xhr &amp;amp; fetch requests and save them to file. On next runs those requests can be replayed. By default, it stores all passed requests, but this behavior can be customized with &lt;code&gt;I.mockServer&lt;/code&gt;</source>
          <target state="translated">기록 및 재생 모드를 사용하면 모든 xhr 및 가져 오기 요청을 기록하고 파일에 저장할 수 있습니다. 다음 실행시 해당 요청을 재생할 수 있습니다. 기본적으로 전달 된 모든 요청을 저장하지만이 동작은 &lt;code&gt;I.mockServer&lt;/code&gt; 로 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c47f70f41f36cbaf588ca2a5c5390ec46b311f2d" translate="yes" xml:space="preserve">
          <source>Record/Replay mode is not tested in WebDriver but technically can work with &lt;a href=&quot;https://netflix.github.io/pollyjs/#/examples?id=rest-persister&quot;&gt;REST Persister (opens new window)&lt;/a&gt;</source>
          <target state="translated">기록 / 재생 모드는 WebDriver에서 테스트되지 않지만 기술적으로 &lt;a href=&quot;https://netflix.github.io/pollyjs/#/examples?id=rest-persister&quot;&gt;REST Persister&lt;/a&gt; 와 함께 작동 할 수 있습니다 (새 창 열림).</target>
        </trans-unit>
        <trans-unit id="114edfc04a1ab03541bdc80ce064f66a7cfcedbb" translate="yes" xml:space="preserve">
          <source>Recorder</source>
          <target state="translated">Recorder</target>
        </trans-unit>
        <trans-unit id="7ea6763b951f2a35f74af093a867481aac0a1086" translate="yes" xml:space="preserve">
          <source>Refactoring</source>
          <target state="translated">Refactoring</target>
        </trans-unit>
        <trans-unit id="284d7d88eba3ed71662e1ded3c6f362225e0c8fe" translate="yes" xml:space="preserve">
          <source>Refer to following guides to more information on:</source>
          <target state="translated">다음에 대한 자세한 내용은 다음 가이드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="d07e4357dc3fac0017cf9e24498ab112ec6ade33" translate="yes" xml:space="preserve">
          <source>Registering &lt;code&gt;Step&lt;/code&gt; globally:</source>
          <target state="translated">전역 적으로 &lt;code&gt;Step&lt;/code&gt; 등록 :</target>
        </trans-unit>
        <trans-unit id="d4417cd22c88f685b10e6ff7553917e65ef6a9a1" translate="yes" xml:space="preserve">
          <source>Registering &lt;code&gt;__&lt;/code&gt; globally:</source>
          <target state="translated">&lt;code&gt;__&lt;/code&gt; 전역 등록 :</target>
        </trans-unit>
        <trans-unit id="22401807a2e23faefb91cba8e3516d66c81e46fc" translate="yes" xml:space="preserve">
          <source>Relaunches an application.</source>
          <target state="translated">응용 프로그램을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="541755c3d3d17bbfab6143af54338c15261319d7" translate="yes" xml:space="preserve">
          <source>Releases a key in the browser which was previously set to a down state.</source>
          <target state="translated">이전에 다운 상태로 설정된 브라우저에서 키를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="4dc5b76a93b9f16f06fd974329b5dd531a8e3ceb" translate="yes" xml:space="preserve">
          <source>Reload the current page.</source>
          <target state="translated">현재 페이지를 다시로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a38c5d50bd59992b9d41a9f23ac2c71a97fe3d5c" translate="yes" xml:space="preserve">
          <source>Reload the page</source>
          <target state="translated">페이지 새로 고침</target>
        </trans-unit>
        <trans-unit id="3233d5661131c9e47c617e6d4063c0f8cd4de0f4" translate="yes" xml:space="preserve">
          <source>Reloads page</source>
          <target state="translated">새로 고침 페이지</target>
        </trans-unit>
        <trans-unit id="eddef9a41046e5bbbf71be178224c2322f1300d1" translate="yes" xml:space="preserve">
          <source>Remove an app from the device.</source>
          <target state="translated">기기에서 앱을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6d5b63f0da71fc56b08584ec7a9c77d5551b5753" translate="yes" xml:space="preserve">
          <source>Removes mocked Angular module. If modName not specified - clears all mock modules.</source>
          <target state="translated">조롱 된 각도 모듈을 제거합니다. modName을 지정하지 않으면 모든 모의 모듈을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="2d3854f75b15e6afe710ee0345fcdda113316ec7" translate="yes" xml:space="preserve">
          <source>ReportPortal</source>
          <target state="translated">ReportPortal</target>
        </trans-unit>
        <trans-unit id="4a28165bd85132c82d26771bbd29abef42ef343a" translate="yes" xml:space="preserve">
          <source>Reporters</source>
          <target state="translated">Reporters</target>
        </trans-unit>
        <trans-unit id="f7194e6a0d0b838382b202853e7c198d693fbabc" translate="yes" xml:space="preserve">
          <source>Requests</source>
          <target state="translated">Requests</target>
        </trans-unit>
        <trans-unit id="5b3dee3677bcc9736eb819a9140fca1d7501f0c7" translate="yes" xml:space="preserve">
          <source>Requests Using Browser Session</source>
          <target state="translated">브라우저 세션을 사용한 요청</target>
        </trans-unit>
        <trans-unit id="1a04dc4f49d1906c9b8f39d673d4f3319dfa8b2a" translate="yes" xml:space="preserve">
          <source>Requests can also be overridden with a function which returns &lt;a href=&quot;https://github.com/axios/axios#request-config&quot;&gt;axois request config (opens new window)&lt;/a&gt;.</source>
          <target state="translated">요청은 &lt;a href=&quot;https://github.com/axios/axios#request-config&quot;&gt;axois 요청 구성 (새 창 열기)&lt;/a&gt; 을 반환하는 함수로 재정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="19bd6e69e6a7d1db728904f95fea8d2c827e9ef0" translate="yes" xml:space="preserve">
          <source>Requests can be updated on the fly by using &lt;code&gt;onRequest&lt;/code&gt; function. For instance, you can pass in current session from a cookie.</source>
          <target state="translated">요청은 &lt;code&gt;onRequest&lt;/code&gt; 함수 를 사용하여 즉시 업데이트 할 수 있습니다 . 예를 들어 쿠키에서 현재 세션을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bff5c4dd0585a4f0e68311b683e36c85f477b138" translate="yes" xml:space="preserve">
          <source>Require</source>
          <target state="translated">Require</target>
        </trans-unit>
        <trans-unit id="73dd60eb63803275fc2458230a021c50c5920915" translate="yes" xml:space="preserve">
          <source>Required objects can be obtained via parameters in tests or via a global &lt;code&gt;inject()&lt;/code&gt; call.</source>
          <target state="translated">필요한 객체는 테스트의 매개 변수 또는 전역 &lt;code&gt;inject()&lt;/code&gt; 호출을 통해 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b4aed93d38a7275aad2b08f1d965390e818cf1c2" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;nightmare&lt;/code&gt; package to be installed.</source>
          <target state="translated">필요 &lt;code&gt;nightmare&lt;/code&gt; 패키지가 설치된다.</target>
        </trans-unit>
        <trans-unit id="063fa1926cbb8442fa2ba27b97d3d6da16ce9106" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;playwright&lt;/code&gt; package version ^1 to be installed:</source>
          <target state="translated">필요 &lt;code&gt;playwright&lt;/code&gt; 패키지 버전 ^ 1을 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="fbe444f58c1b317a70e54521fdc3d73ccc8bab16" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;puppeteer&lt;/code&gt; package to be installed.</source>
          <target state="translated">필요 &lt;code&gt;puppeteer&lt;/code&gt; 패키지가 설치된다.</target>
        </trans-unit>
        <trans-unit id="a631648e8761d4005bd218de222f86441253ccc8" translate="yes" xml:space="preserve">
          <source>Requires &lt;code&gt;testcafe&lt;/code&gt; package to be installed.</source>
          <target state="translated">필요 &lt;code&gt;testcafe&lt;/code&gt; 설치 될 패키지를.</target>
        </trans-unit>
        <trans-unit id="6c0c7017477a1b056ce9d89135229e970505f6ed" translate="yes" xml:space="preserve">
          <source>Requires Puppeteer helper or WebDriver helper enabled</source>
          <target state="translated">Puppeteer 도우미 또는 WebDriver 도우미 활성화 필요</target>
        </trans-unit>
        <trans-unit id="851f378757a0dce41539e8269d58cdb53e14a059" translate="yes" xml:space="preserve">
          <source>Requires described module before run. This option is useful for assertion libraries, so you may &lt;code&gt;--require should&lt;/code&gt; instead of manually invoking &lt;code&gt;require('should')&lt;/code&gt; within each test file. It can be used with relative paths, e.g. &lt;code&gt;&quot;require&quot;: [&quot;/lib/somemodule&quot;]&lt;/code&gt;, and installed packages.</source>
          <target state="translated">실행하기 전에 설명 된 모듈이 필요합니다. 이 옵션은 어설 션 라이브러리에 유용하므로 각 테스트 파일 내에서 &lt;code&gt;require('should')&lt;/code&gt; 를 수동으로 호출 하는 대신 &lt;code&gt;--require should&lt;/code&gt; 를 사용할 수 있습니다. 예를 들어 &lt;code&gt;&quot;require&quot;: [&quot;/lib/somemodule&quot;]&lt;/code&gt; 및 설치된 패키지와 같은 상대 경로와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="069499a028eed62047e7c8708c2fcdbf148cdb21" translate="yes" xml:space="preserve">
          <source>Rerun the test to see the browser.</source>
          <target state="translated">브라우저를 보려면 테스트를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3b31c9b567b52248115c11b3cb3e6841f9741142" translate="yes" xml:space="preserve">
          <source>Rerunning Flaky Tests Multiple Times Since 2.4</source>
          <target state="translated">2.4 이후 여러 번 비정상적인 테스트 다시 실행</target>
        </trans-unit>
        <trans-unit id="04554c47fb754259bc69e2f39679b1d1f30b7ed4" translate="yes" xml:space="preserve">
          <source>Reset headers for the request to default state</source>
          <target state="translated">요청의 헤더를 기본 상태로 재설정</target>
        </trans-unit>
        <trans-unit id="e8055ec8af542ea8a47aaeff9bc82134775d6d72" translate="yes" xml:space="preserve">
          <source>Resize the current window to provided width and height. First parameter can be set to &lt;code&gt;maximize&lt;/code&gt;</source>
          <target state="translated">현재 창 크기를 제공된 너비와 높이로 조정하십시오. 첫 번째 매개 변수는 &lt;code&gt;maximize&lt;/code&gt; 하도록 설정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e9024410674ef71b0ab09b94022c7137156e55a6" translate="yes" xml:space="preserve">
          <source>Resize the current window to provided width and height. First parameter can be set to &lt;code&gt;maximize&lt;/code&gt;.</source>
          <target state="translated">현재 창 크기를 제공된 너비와 높이로 조정합니다. 첫 번째 매개 변수는 &lt;code&gt;maximize&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="633f6e8b851aad01759e04e23cfe5188859a4d5b" translate="yes" xml:space="preserve">
          <source>Responses</source>
          <target state="translated">Responses</target>
        </trans-unit>
        <trans-unit id="1e7bb78d52e8900ce214cb49a4799abec8233fd9" translate="yes" xml:space="preserve">
          <source>Result will be located at &lt;code&gt;output/index.html&lt;/code&gt; file.</source>
          <target state="translated">결과는 &lt;code&gt;output/index.html&lt;/code&gt; 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d70b759158ba7fee783d205fc9d6e6d2172115f6" translate="yes" xml:space="preserve">
          <source>Result will be located at &lt;code&gt;output/result.xml&lt;/code&gt; file.</source>
          <target state="translated">결과는 &lt;code&gt;output/result.xml&lt;/code&gt; 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="13093e568fcffba32cbe1f9796a271c07111d626" translate="yes" xml:space="preserve">
          <source>Retries</source>
          <target state="translated">Retries</target>
        </trans-unit>
        <trans-unit id="afad64b606c7018d2e200f9fe7320e95fe8e9c90" translate="yes" xml:space="preserve">
          <source>Retries each failed step in a test.</source>
          <target state="translated">테스트에서 실패한 각 단계를 재 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="98fb7e90083b5dee928588120ed4d296eb12cb50" translate="yes" xml:space="preserve">
          <source>Retrieve current context</source>
          <target state="translated">현재 컨텍스트 검색</target>
        </trans-unit>
        <trans-unit id="bb443503a323446c5cb5041e4d13cbdfff0740d6" translate="yes" xml:space="preserve">
          <source>Retrieves a page scroll position and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside an async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">페이지 스크롤 위치를 검색하여 테스트로 되돌립니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4180b4b7cb04304023bbb7e4538f77c6509272e4" translate="yes" xml:space="preserve">
          <source>Retrieves a page title and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">페이지 제목을 검색하여 테스트로 되돌립니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b07562a1f3b0b6eea8614461aaead5baccdf26cd" translate="yes" xml:space="preserve">
          <source>Retrieves a text from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 텍스트를 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a3602d8da6ead40381ed023262c94011e8bce4" translate="yes" xml:space="preserve">
          <source>Retrieves a value from a form element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 양식 요소에서 값을 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자를 &lt;strong&gt;사용하여 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f4fb188cd253573953f3e96d7686e078ed691b01" translate="yes" xml:space="preserve">
          <source>Retrieves a value from a form element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator. If more than one element is found - value of first element is returned.</source>
          <target state="translated">CSS 또는 XPath에있는 양식 요소에서 값을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; . 둘 이상의 요소가 발견되면 첫 번째 요소의 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="766b3104e8054ea06c72ea3a1edaa244cb99cd24" translate="yes" xml:space="preserve">
          <source>Retrieves all texts from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 모든 텍스트를 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="55fe99cbba0e0300dd49a341998509a46d078e26" translate="yes" xml:space="preserve">
          <source>Retrieves all the innerHTML from elements located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 모든 innerHTML을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9caff694b6c4bcc0afe4c030111ef77e45fdf0b2" translate="yes" xml:space="preserve">
          <source>Retrieves an array of attributes from elements located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 속성 배열을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8e2b2b6a23640b6ac5ebb5b7dfad03653d6ee178" translate="yes" xml:space="preserve">
          <source>Retrieves an array of value from a form located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 양식에서 값 배열을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6305af7785a6e1fe2d21fb891c7c8938a0c8589e" translate="yes" xml:space="preserve">
          <source>Retrieves an attribute from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 속성을 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8b74dfa2d621a4835236a8a7f25db51f8a04be4f" translate="yes" xml:space="preserve">
          <source>Retrieves an attribute from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator. If more than one element is found - attribute of first element is returned.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 속성을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 내부에서 사용해야합니다&lt;/strong&gt; . 둘 이상의 요소가 발견되면 첫 번째 요소의 속성이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6703356ecbf5df71324c3b9ce6d350c264879dc2" translate="yes" xml:space="preserve">
          <source>Retrieves page source and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">페이지 소스를 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4afb230c367b7c1a79c1bea84e3c76fba50ac75b" translate="yes" xml:space="preserve">
          <source>Retrieves page source and returns it to test. Resumes test execution, so should be used inside an async function.</source>
          <target state="translated">페이지 소스를 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 비동기 함수 내에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbfd7df8a8a14dc25251ce9f6965b21990d169dd" translate="yes" xml:space="preserve">
          <source>Retrieves the innerHTML from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside an async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 innerHTML을 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4a46e0e2adae2604c9b47d589658c533aa18d076" translate="yes" xml:space="preserve">
          <source>Retrieves the innerHTML from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator. Appium: support only web testing</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 innerHTML을 검색하여 테스트로 리턴합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자를 &lt;strong&gt;사용하여 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; . Appium : 웹 테스트 만 지원</target>
        </trans-unit>
        <trans-unit id="8cc70fc1495b433f4fd4b299d86941437a1cdd81" translate="yes" xml:space="preserve">
          <source>Retrieves the innerHTML from an element located by CSS or XPath and returns it to test. Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator. If more than one element is found - HTML of first element is returned.</source>
          <target state="translated">CSS 또는 XPath에있는 요소에서 innerHTML을 검색하고 테스트에 반환합니다. 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; . 둘 이상의 요소가 발견되면 첫 번째 요소의 HTML이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="260eaaf644586aca4304c03d3421acd2ac46b51b" translate="yes" xml:space="preserve">
          <source>Retry Feature</source>
          <target state="translated">재시도 기능</target>
        </trans-unit>
        <trans-unit id="08ab4a2cc52fce7ef23917b562f73d6ca8e17e3d" translate="yes" xml:space="preserve">
          <source>Retry Scenario</source>
          <target state="translated">재시도 시나리오</target>
        </trans-unit>
        <trans-unit id="0fd09abb183aa607029cd3fdd3325122654a4da7" translate="yes" xml:space="preserve">
          <source>Retry Step</source>
          <target state="translated">재시도 단계</target>
        </trans-unit>
        <trans-unit id="9c26945104722d7cac8e10baf818c00221a015f7" translate="yes" xml:space="preserve">
          <source>Retry rules are available in array &lt;code&gt;recorder.retries&lt;/code&gt;. The last retry rule can be disabled by running &lt;code&gt;recorder.retries.pop()&lt;/code&gt;;</source>
          <target state="translated">재시도 규칙은 array &lt;code&gt;recorder.retries&lt;/code&gt; 에서 사용할 수 있습니다 . &lt;code&gt;recorder.retries.pop()&lt;/code&gt; 을 실행하여 마지막 재시도 규칙을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a91902f0fe952388b669c62051a0ed4d9fbed301" translate="yes" xml:space="preserve">
          <source>Return the current geo location Resumes test execution, so &lt;strong&gt;should be used inside async function with &lt;code&gt;await&lt;/code&gt;&lt;/strong&gt; operator.</source>
          <target state="translated">현재 지리적 위치 반환 테스트 실행을 재개하므로 &lt;strong&gt; &lt;code&gt;await&lt;/code&gt; &lt;/strong&gt; 연산자 &lt;strong&gt;와 함께 비동기 함수 내에서 사용해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6f3455878936015a796b84f0b39feb3c655b387f" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;object (opens new window)&lt;/a&gt;&amp;gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined (opens new window)&lt;/a&gt;)&lt;/strong&gt; all browser logs</source>
          <target state="translated">&lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;object (새 창 열림)&lt;/a&gt; &amp;gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined (새 창 열림)&lt;/a&gt; )&lt;/strong&gt; 모든 브라우저 로그를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7cc7777c2c9b82d6a50e5a17795c5c5492dd5fb7" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;)&lt;/strong&gt; attribute value</source>
          <target state="translated">반환 &lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 ()가 새 창을 엽니 다&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 () 새로운 창을 엽니 다&lt;/a&gt; &amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 ()가 새 창을 엽니 다&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;배열 ()가 새 창을 엽니 다&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창을 엽니 다)&lt;/a&gt; &amp;gt;&amp;gt;)&lt;/strong&gt; 속성 값</target>
        </trans-unit>
        <trans-unit id="6e7de14b46bd390f4c148941a6313299cbf49035" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;)&lt;/strong&gt; attribute valueCookie in JSON format. If name not passed returns all cookies for this domain.Multiple cookies can be received by passing query object &lt;code&gt;I.grabCookie({ secure: true});&lt;/code&gt;. If you'd like get all cookies for all urls, use: &lt;code&gt;.grabCookie({ url: null }).&lt;/code&gt;</source>
          <target state="translated">반환 &lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창) 열립니다&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창을 엽니)&lt;/a&gt; |&amp;gt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 새 창에서 열립니다&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;새 창) 열립니다 (배열&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창을 엽니 다)&lt;/a&gt; &amp;gt;&amp;gt;)&lt;/strong&gt; JSON 형식의 속성 valueCookie을. 이름이 전달되지 않으면이 도메인에 대한 모든 쿠키가 반환됩니다. 쿼리 객체를 전달하여 여러 쿠키를받을 수 있습니다. &lt;code&gt;I.grabCookie({ secure: true});&lt;/code&gt; . 모든 URL에 대해 모든 쿠키를 얻으려면 &lt;code&gt;.grabCookie({ url: null }).&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7eb1e561074ea9640cc8a34469985ebd772175e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;)&lt;/strong&gt; attribute valueReturns cookie in JSON &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object&quot;&gt;format (opens new window)&lt;/a&gt;.</source>
          <target state="translated">반환 &lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (새 창 열림)&lt;/a&gt; &amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (새 창 열림)&lt;/a&gt; &amp;gt;&amp;gt;)&lt;/strong&gt; attribute value JSON &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object&quot;&gt;형식으로&lt;/a&gt; 쿠키 반환 (새 창 열림) ) .</target>
        </trans-unit>
        <trans-unit id="202ab253f7a88ef91fd8106c6cb32f0e14001e47" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;)&lt;/strong&gt; attribute valueReturns cookie in JSON format. If name not passed returns all cookies for this domain.</source>
          <target state="translated">반환 &lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (새 창 열림)&lt;/a&gt; &amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (새 창 열림)&lt;/a&gt; &amp;gt;&amp;gt;)&lt;/strong&gt; attribute value JSON 형식으로 쿠키를 반환합니다. 이름이 전달되지 않으면이 도메인에 대한 모든 쿠키가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6b4a6e0dea6b03dbb75b449bf79cf08b168378d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;DOMRect&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;&amp;gt;)&lt;/strong&gt; Element bounding rectangle</source>
          <target state="translated">반환 &lt;strong&gt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창에서 열림)&lt;/a&gt; &amp;lt;DOMRect&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창에서 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창에서 열림)&lt;/a&gt; &amp;gt;)&lt;/strong&gt; 요소 경계 사각형</target>
        </trans-unit>
        <trans-unit id="99cc5f88381914e63f4a320025c60c453965732b" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;(&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt; | null)&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열기)&lt;/a&gt; &amp;lt;( &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; | null)&amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45e896a01c9b0067e39de1b0fb886f9d4464efeb" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">Return &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (새 창 열림)&lt;/a&gt; &amp;gt;&amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b7cd12cd909a62c72b6f0f89d93ae0f99163b26" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;&lt;/strong&gt; CSS value</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;배열 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; &amp;gt;&amp;gt;&lt;/strong&gt; CSS 값</target>
        </trans-unit>
        <trans-unit id="c896ffb3a4db669d237cf8ce54b6f6d756caa79e" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;&lt;/strong&gt; HTML code for an element</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;배열 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; &amp;gt;&amp;gt;&lt;/strong&gt; 요소에 대한 HTML 코드</target>
        </trans-unit>
        <trans-unit id="bda969b578a0d19ff7bf842adbaeab6f14d5a54e" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;&lt;/strong&gt; attribute value</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;배열 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; &amp;gt;&amp;gt;&lt;/strong&gt; 속성 값</target>
        </trans-unit>
        <trans-unit id="15060178151240e4e48f425aeb432f583c59f86e" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&amp;gt;&lt;/strong&gt; attribute valueAppium: can be used for apps only with several values (&quot;contentDescription&quot;, &quot;text&quot;, &quot;className&quot;, &quot;resourceId&quot;)</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;&lt;/a&gt;&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;lt; &lt;/strong&gt;&lt;strong&gt;배열 (새 창&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;lt; &lt;/strong&gt;&lt;strong&gt;문자열 (새 창&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;gt;&amp;gt;&lt;/strong&gt; 속성 값 Appium : 여러 값 ( &quot;contentDescription&quot;, &quot;text&quot;, &quot;className&quot;, &quot;resourceId)이있는 앱에만 사용할 수 있습니다. &quot;)</target>
        </trans-unit>
        <trans-unit id="d35d1e45a263290b5d74d7f7c9f7ba99f1ea3aca" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;Array (새 창 열림)&lt;/a&gt; &amp;lt;any &amp;gt;&amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cad195311750da1ef70b7492a7217d5c186b8fea" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; number of open tabs</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 열린 탭 수</target>
        </trans-unit>
        <trans-unit id="60310de406c4565f49b7939d73e7f594ca2f0eb1" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; number of visible elements</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 보이는 요소 수</target>
        </trans-unit>
        <trans-unit id="2b3585f49325724fb299f80bd0631f9294b3791d" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94969d585b1a5632e0d51ada89c33201ad57a3e3" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; CSS value</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; &amp;gt;&lt;/strong&gt; CSS 값</target>
        </trans-unit>
        <trans-unit id="78906776c3fb7a7a202a58f49a1fa9df01aa1d6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; HTML code for an element</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 요소에 대한 HTML 코드</target>
        </trans-unit>
        <trans-unit id="0d77ee87607d18ec2da7a3f8f839b4a11f70af58" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; attribute value</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 속성 값</target>
        </trans-unit>
        <trans-unit id="124a528417730b53a4de95b49312a054cc8daf45" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; attribute valueAppium: can be used for apps only with several values (&quot;contentDescription&quot;, &quot;text&quot;, &quot;className&quot;, &quot;resourceId&quot;)</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;&lt;/a&gt;&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;lt; &lt;/strong&gt;&lt;strong&gt;문자열 (새 창&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;gt;&lt;/strong&gt; 속성 값 Appium : 여러 값 ( &quot;contentDescription&quot;, &quot;text&quot;, &quot;className&quot;, &quot;resourceId&quot;)이있는 앱에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1f8e2af404d7b6280ebba16566a8b68516b5919" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; current URL</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창 열기)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열기)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 현재 URL</target>
        </trans-unit>
        <trans-unit id="db052df9b04bd85633eb97370ef3be20bac57cad" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; source code</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 소스 코드</target>
        </trans-unit>
        <trans-unit id="e20279e4835dc68b3eea325ac926b6b33137e812" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&amp;gt;&lt;/strong&gt; title</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창 열림)&lt;/a&gt; &amp;lt; &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열 (새 창 열림)&lt;/a&gt; &amp;gt;&lt;/strong&gt; 제목</target>
        </trans-unit>
        <trans-unit id="c454d121189eab941bca7bc1ca5de96d74dd6cd9" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;PageScrollPosition&amp;gt;&lt;/strong&gt; scroll position</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/strong&gt; 반환 &lt;strong&gt;(새 창에서 열림)&lt;/strong&gt;&lt;strong&gt; &amp;lt;PageScrollPosition&amp;gt;&lt;/strong&gt; 스크롤 위치</target>
        </trans-unit>
        <trans-unit id="b571c47d1e86a8668441a649ffb10405f880e61d" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">반품 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;약속 (새 창에서 열림)&lt;/a&gt; &amp;lt;모두&amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74450cdc59ed71aa42df834a36997f1d3550a017" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt; Asynchronous scripts can also be executed with &lt;code&gt;executeScript&lt;/code&gt; if a function returns a Promise.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/strong&gt; 반환 &lt;strong&gt;(새 창&lt;/strong&gt; &lt;code&gt;executeScript&lt;/code&gt; &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;lt;any&amp;gt;&lt;/strong&gt; 함수가 Promise를 반환하는 경우 executeScript 로 비동기 스크립트를 실행할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0324e09e841841cd318f4fc4fa4f165a2b70c68e" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt; If a function returns a Promise It will wait for it resolution.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/strong&gt; 반환 &lt;strong&gt;(새 창 열기)&lt;/strong&gt;&lt;strong&gt; &amp;lt;any&amp;gt;&lt;/strong&gt; 함수가 Promise를 반환하면 해결을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="47395a254cdebe136d619f832d0704874b422d4c" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt; Wrapper for asynchronous &lt;a href=&quot;https://github.com/segmentio/nightmare#evaluatefn-arg1-arg2&quot;&gt;evaluate (opens new window)&lt;/a&gt;. Unlike NightmareJS implementation calling &lt;code&gt;done&lt;/code&gt; will return its first argument.</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise를&lt;/a&gt;&lt;/strong&gt; 반환합니다 &lt;strong&gt;(새 창 열림)&lt;/strong&gt;&lt;strong&gt; &amp;lt;any&amp;gt;&lt;/strong&gt; 비동기 &lt;a href=&quot;https://github.com/segmentio/nightmare#evaluatefn-arg1-arg2&quot;&gt;평가&lt;/a&gt; 용 래퍼 (새 창 열림) . NightmareJS 구현과 달리 &lt;code&gt;done&lt;/code&gt; 을 호출 하면 첫 번째 인수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0ef45cfe560fd8f1576c1133dde364b0c9387ba0" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt; Wrapper for synchronous &lt;a href=&quot;https://github.com/segmentio/nightmare#evaluatefn-arg1-arg2&quot;&gt;evaluate (opens new window)&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/strong&gt; 반환 &lt;strong&gt;(새 창 열림)&lt;/strong&gt;&lt;strong&gt; &amp;lt;any&amp;gt;&lt;/strong&gt; 동기 &lt;a href=&quot;https://github.com/segmentio/nightmare#evaluatefn-arg1-arg2&quot;&gt;평가&lt;/a&gt; 용 래퍼 (새 창 열림)</target>
        </trans-unit>
        <trans-unit id="21d807e8e3ea4720f4ef6cd47db40ceced2e5e70" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/strong&gt; Wraps &lt;a href=&quot;http://webdriver.io/api/protocol/execute&quot;&gt;execute (opens new window)&lt;/a&gt; command.</source>
          <target state="translated">Return &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창&lt;/a&gt;&lt;/strong&gt; 열기 &lt;strong&gt;)&lt;/strong&gt;&lt;strong&gt; &amp;lt;any&amp;gt; &lt;/strong&gt;&lt;a href=&quot;http://webdriver.io/api/protocol/execute&quot;&gt;실행 (새 창&lt;/a&gt; 열기 ) 명령을 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="3e15406232342ae919cc1e611ac370ad4f8e1dbb" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (opens new window)&lt;/a&gt;&amp;lt;{latitude: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;, longitude: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;, altitude: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (opens new window)&lt;/a&gt;}&amp;gt;&lt;/strong&gt;</source>
          <target state="translated">반환 &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise (새 창에서 열림)&lt;/a&gt; &amp;lt;{latitude : &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창에서 열림)&lt;/a&gt; , 경도 : &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창에서 열림)&lt;/a&gt; , altitude : &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number&quot;&gt;number (새 창에서 열림)&lt;/a&gt; }&amp;gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f504e27fbf061ba75aa698dc79db8d20bc3f8c6" translate="yes" xml:space="preserve">
          <source>Returns &lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string (opens new window)&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;문자열&lt;/a&gt;&lt;/strong&gt; 반환 &lt;strong&gt;(새 창에서 열림)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c941c325d96ee746bd7d4088dda9fbda9620305" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; keys.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; 키가 있는 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="8445de9963ce0a309fefe8172bbb0c1a83b49d59" translate="yes" xml:space="preserve">
          <source>Returns file names in current directory.</source>
          <target state="translated">현재 디렉토리의 파일 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4190ec0b88013176fb43fddbc7677643b5e29d05" translate="yes" xml:space="preserve">
          <source>Robust Chrome Testing with Puppeteer</source>
          <target state="translated">Puppeteer를 사용한 강력한 Chrome 테스트</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="4e31b6583f3448bf26451b672c9602f1cce18bbb" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;basic&lt;/code&gt; suite for all browsers</source>
          <target state="translated">모든 브라우저를위한 &lt;code&gt;basic&lt;/code&gt; 제품군 실행</target>
        </trans-unit>
        <trans-unit id="13a9bcf58f7f665b48f3a9a2b8eab6fc1f2914d1" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;basic&lt;/code&gt; suite for chrome and &lt;code&gt;smoke&lt;/code&gt; for firefox</source>
          <target state="translated">크롬 용 &lt;code&gt;basic&lt;/code&gt; 스위트 실행 및 파이어 폭스 용 &lt;code&gt;smoke&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b216fb014ddac5074fe81df244ec1a371ab8d6c3" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;basic&lt;/code&gt; suite for chrome only:</source>
          <target state="translated">크롬 전용 &lt;code&gt;basic&lt;/code&gt; 제품군을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7f7e5044afd205fa90a11340b6417e4a7910444" translate="yes" xml:space="preserve">
          <source>Run Multiple</source>
          <target state="translated">다중 실행</target>
        </trans-unit>
        <trans-unit id="405f5bdedea647d83c00cd39fafe33979ec170c9" translate="yes" xml:space="preserve">
          <source>Run Rerun Since 2.4</source>
          <target state="translated">2.4 이후 재실행 실행</target>
        </trans-unit>
        <trans-unit id="69d15c5dc48c3bc917a8cbb3b459970e3193a822" translate="yes" xml:space="preserve">
          <source>Run Workers</source>
          <target state="translated">워커 실행</target>
        </trans-unit>
        <trans-unit id="3ac8dd11af992c92ca27e751f739a82d1574593d" translate="yes" xml:space="preserve">
          <source>Run a test:</source>
          <target state="translated">테스트 실행 :</target>
        </trans-unit>
        <trans-unit id="dc65b719dcbb085e14c80e3a34c5e4a755084a35" translate="yes" xml:space="preserve">
          <source>Run all suites for all browsers:</source>
          <target state="translated">모든 브라우저에 대해 모든 스위트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5882424aed17dc371164413d3cffefbffc812e" translate="yes" xml:space="preserve">
          <source>Run all tests from current dir</source>
          <target state="translated">현재 디렉토리에서 모든 테스트 실행</target>
        </trans-unit>
        <trans-unit id="dc33325df522d34bed2408a2899f8bb98166cb04" translate="yes" xml:space="preserve">
          <source>Run all tests without &quot;@IEOnly&quot; word in name</source>
          <target state="translated">이름에 &quot;@IEOnly&quot;단어없이 모든 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4aaecbbee66665b81ea8cc4208beed08dd95d6c7" translate="yes" xml:space="preserve">
          <source>Run basic tests with grep and junit reporter</source>
          <target state="translated">grep 및 junit reporter로 기본 테스트 실행</target>
        </trans-unit>
        <trans-unit id="19092aa569ee7004cd983f8244cfd4f01767d93c" translate="yes" xml:space="preserve">
          <source>Run multiple</source>
          <target state="translated">여러 번 실행</target>
        </trans-unit>
        <trans-unit id="0a79987f8e91a6c7956f47484ee91bcafe5d7fd7" translate="yes" xml:space="preserve">
          <source>Run multiple suites.</source>
          <target state="translated">여러 스위트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="70ef98648b1435b516464ac375ba5ec1f80f486b" translate="yes" xml:space="preserve">
          <source>Run multiple suites. Unlike &lt;code&gt;run-workers&lt;/code&gt; spawns processes to execute tests. &lt;a href=&quot;https://codecept.io/advanced#multiple-browsers-execution&quot;&gt;Requires additional configuration&lt;/a&gt; and can be used to execute tests in multiple browsers.</source>
          <target state="translated">여러 제품군을 실행합니다. &lt;code&gt;run-workers&lt;/code&gt; 와 달리 테스트를 실행하는 프로세스를 생성합니다. &lt;a href=&quot;https://codecept.io/advanced#multiple-browsers-execution&quot;&gt;추가 구성이 필요&lt;/a&gt; 하며 여러 브라우저에서 테스트를 실행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efc6c38dd1abfa13f9e36ed21953e389b7bbdfe7" translate="yes" xml:space="preserve">
          <source>Run only tests with &quot;signin&quot; word in name</source>
          <target state="translated">이름에 &quot;로그인&quot;단어가있는 테스트 만 실행</target>
        </trans-unit>
        <trans-unit id="71cbe30509142b3eec365162487ddf23c54c2680" translate="yes" xml:space="preserve">
          <source>Run regression tests specifying different config path:</source>
          <target state="translated">다른 구성 경로를 지정하여 회귀 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="817582e16009198fcecfda3072a58fa72e2bdb7c" translate="yes" xml:space="preserve">
          <source>Run single test [path to codecept.js] [test filename]</source>
          <target state="translated">단일 테스트 실행 [codecept.js의 경로] [테스트 파일 이름]</target>
        </trans-unit>
        <trans-unit id="dedcdeb6f32b2ee88556eb063eb5c38b17785d14" translate="yes" xml:space="preserve">
          <source>Run single test in debug mode</source>
          <target state="translated">디버그 모드에서 단일 테스트 실행</target>
        </trans-unit>
        <trans-unit id="7e97f3563af3d7e8311e7f479f3b241ec4d2dcc4" translate="yes" xml:space="preserve">
          <source>Run single test with steps printed</source>
          <target state="translated">단계가 인쇄 된 단일 테스트 실행</target>
        </trans-unit>
        <trans-unit id="9e41c1d3d1ecf39de84bd4767ededea0475c12c4" translate="yes" xml:space="preserve">
          <source>Run test with internal logs printed (global promises, and events).</source>
          <target state="translated">내부 로그가 인쇄 된 상태에서 테스트를 실행합니다 (전역 약속 및 이벤트).</target>
        </trans-unit>
        <trans-unit id="ab8fdf0ac0c124be432f91e0679013c13a2d4fca" translate="yes" xml:space="preserve">
          <source>Run tests and produce xunit report:</source>
          <target state="translated">테스트를 실행하고 xunit 보고서를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="aa98b61f66941ec8f4586b2bf8230a83625071b0" translate="yes" xml:space="preserve">
          <source>Run tests in parallel threads.</source>
          <target state="translated">병렬 스레드에서 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="31351cd4a4b83ff7579e91d6ed5c9e009b5ac84f" translate="yes" xml:space="preserve">
          <source>Run tests multiple times to detect and fix flaky tests.</source>
          <target state="translated">테스트를 여러 번 실행하여 불안정한 테스트를 감지하고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="11125f64499039423e1060a4466c4fbd1606546a" translate="yes" xml:space="preserve">
          <source>Run tests with allure plugin enabled:</source>
          <target state="translated">allure 플러그인을 사용하여 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="50401e73976f4fa3a94423a6c1b928818312f83a" translate="yes" xml:space="preserve">
          <source>Run tests with plugin enabled:</source>
          <target state="translated">플러그인을 사용하여 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="75744a3735a0ff77baa819eeadd5f1fb8b596d7c" translate="yes" xml:space="preserve">
          <source>Run the following command to create a container. To know more &lt;a href=&quot;https://aerokube.com/selenoid/latest/#_option_2_start_selenoid_container&quot;&gt;refer here (opens new window)&lt;/a&gt;</source>
          <target state="translated">다음 명령을 실행하여 컨테이너를 만듭니다. 자세한 &lt;a href=&quot;https://aerokube.com/selenoid/latest/#_option_2_start_selenoid_container&quot;&gt;내용은 여기를 참조하십시오 (새 창에서 열림).&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc92e94da2c9f57dc988bdd79b05b846d2e7908c" translate="yes" xml:space="preserve">
          <source>Running Several Scenarios</source>
          <target state="translated">여러 시나리오 실행</target>
        </trans-unit>
        <trans-unit id="7ec9eede60ad8e8637510a86e616531533ada02f" translate="yes" xml:space="preserve">
          <source>Running Tests</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="74ad93cbebf587ac46ab0ef1e3f24139ddd3f535" translate="yes" xml:space="preserve">
          <source>Russian</source>
          <target state="translated">Russian</target>
        </trans-unit>
        <trans-unit id="f6714ba6fbbfa9f41e0113bdff1b54fa43e9ffe1" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#click&quot;&gt;click&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#click&quot;&gt;클릭&lt;/a&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="abc0840cf15d4771db0be1f80654f1877c21a9f2" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tap&quot;&gt;tap&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#tap&quot;&gt;탭&lt;/a&gt; 과 동일</target>
        </trans-unit>
        <trans-unit id="6f07b83d2e31d894c449039955009319d2c7ef96" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;Before&lt;/code&gt; you can use &lt;code&gt;After&lt;/code&gt; to run teardown for each scenario.</source>
          <target state="translated">각 시나리오에 대해 &lt;code&gt;After&lt;/code&gt; to run 분해를 사용할 수 있기 &lt;code&gt;Before&lt;/code&gt; 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="1ad331ccc6d744e11d717226988dee92221b10b5" translate="yes" xml:space="preserve">
          <source>Same syntax is the same for all helpers in CodeceptJS so to learn more about available commands learn &lt;a href=&quot;https://codecept.io/basics&quot;&gt;CodeceptJS Basics&lt;/a&gt;.</source>
          <target state="translated">CodeceptJS의 모든 도우미에 대해 동일한 구문이 동일하므로 사용 가능한 명령에 대해 자세히 알아 &lt;a href=&quot;https://codecept.io/basics&quot;&gt;보려면 CodeceptJS 기본 사항을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e1c47c2a79c81519b3b7bdca43afee2568829ff" translate="yes" xml:space="preserve">
          <source>Same thing happens for form fields: they are searched by field names, labels, and so on.</source>
          <target state="translated">양식 필드에서도 마찬가지입니다. 필드 이름, 레이블 등으로 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="b2778159c46e81686feb1e25e79dc17c461e7ff6" translate="yes" xml:space="preserve">
          <source>Sample Config</source>
          <target state="translated">샘플 구성</target>
        </trans-unit>
        <trans-unit id="9bb7a7739abd6fc514637ade05ad13e47e60af00" translate="yes" xml:space="preserve">
          <source>Sample mount: &lt;code&gt;-v path/to/codecept.json:/tests&lt;/code&gt;</source>
          <target state="translated">샘플 마운트 : &lt;code&gt;-v path/to/codecept.json:/tests&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6be98fc70d403137beb6c354f6278b6f8869fc6" translate="yes" xml:space="preserve">
          <source>Sauce Service</source>
          <target state="translated">소스 서비스</target>
        </trans-unit>
        <trans-unit id="013bfd20d5a21fd2c3d0eed3c9b347644f4d5bba" translate="yes" xml:space="preserve">
          <source>SauceLabs</source>
          <target state="translated">SauceLabs</target>
        </trans-unit>
        <trans-unit id="d6c25c67ecc6fd031d3c09e51cc2293f0605f370" translate="yes" xml:space="preserve">
          <source>SauceLabs can be configured via wdio service, which should be installed additionally:</source>
          <target state="translated">SauceLabs는 wdio 서비스를 통해 구성 할 수 있으며 추가로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="055a40f803af696f3ae1319f3934809998f5ca59" translate="yes" xml:space="preserve">
          <source>Saves a screenshot to ouput folder (set in codecept.json or codecept.conf.js). Filename is relative to output folder. Optionally resize the window to the full available page &lt;code&gt;scrollHeight&lt;/code&gt; and &lt;code&gt;scrollWidth&lt;/code&gt; to capture the entire page by passing &lt;code&gt;true&lt;/code&gt; in as the second argument.</source>
          <target state="translated">ouput 폴더에 스크린 샷을 저장합니다 (codecept.json 또는 codecept.conf.js에서 설정). 파일 이름은 출력 폴더에 상대적입니다. 선택적으로 창 크기를 사용 가능한 전체 페이지 &lt;code&gt;scrollHeight&lt;/code&gt; 및 &lt;code&gt;scrollWidth&lt;/code&gt; 로 조정하여 두 번째 인수로 &lt;code&gt;true&lt;/code&gt; 를 전달하여 전체 페이지를 캡처하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f67346e7c91844a2f7f82ff58f77a800cc88952" translate="yes" xml:space="preserve">
          <source>Saves a screenshot to ouput folder (set in codecept.json). Filename is relative to output folder. Optionally resize the window to the full available page &lt;code&gt;scrollHeight&lt;/code&gt; and &lt;code&gt;scrollWidth&lt;/code&gt; to capture the entire page by passing &lt;code&gt;true&lt;/code&gt; in as the second argument.</source>
          <target state="translated">스크린 샷을 출력 폴더에 저장합니다 (codecept.json에서 설정). 파일 이름은 출력 폴더와 관련이 있습니다. 선택적으로 창을 사용 가능한 전체 페이지 &lt;code&gt;scrollHeight&lt;/code&gt; 및 &lt;code&gt;scrollWidth&lt;/code&gt; 로 크기를 조정하여 두 번째 인수로 &lt;code&gt;true&lt;/code&gt; 를 전달하여 전체 페이지를 캡처하십시오 .</target>
        </trans-unit>
        <trans-unit id="1287bd7541e548acaf09bd520da2ce74fa495f69" translate="yes" xml:space="preserve">
          <source>Saves a screenshot to the output dir</source>
          <target state="translated">출력 디렉토리에 스크린 샷을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="22bcc2a6932a909854a5a7153622a54de6a93171" translate="yes" xml:space="preserve">
          <source>Saves screenshot of the specified locator to ouput folder (set in codecept.json or codecept.conf.js). Filename is relative to output folder.</source>
          <target state="translated">지정된 로케이터의 스크린 샷을 ouput 폴더에 저장합니다 (codecept.json 또는 codecept.conf.js에서 설정). 파일 이름은 출력 폴더에 상대적입니다.</target>
        </trans-unit>
        <trans-unit id="d4441482cb724726d30f3a314769de568ad18d09" translate="yes" xml:space="preserve">
          <source>Scenario('project update test', async (I) =&amp;gt; { Given(); const projectId = await I.have('project');</source>
          <target state="translated">Scenario ( '프로젝트 업데이트 테스트', 비동기 (I) =&amp;gt; {Given (); const projectId = await I.have ( 'project');</target>
        </trans-unit>
        <trans-unit id="2dd4a83d012acd714fbd600cfb9847611783fea3" translate="yes" xml:space="preserve">
          <source>Scenarios</source>
          <target state="translated">Scenarios</target>
        </trans-unit>
        <trans-unit id="34c1918b2a4b9612d701de55207d79e2d08b7a2b" translate="yes" xml:space="preserve">
          <source>Scenarios are live examples of feature usage. Inside a feature file it should be written inside a &lt;em&gt;Feature&lt;/em&gt; block. Each scenario should contain its title:</source>
          <target state="translated">시나리오는 기능 사용의 실제 예입니다. 피처 파일 내부는 &lt;em&gt;피처&lt;/em&gt; 블록 안에 작성해야합니다 . 각 시나리오에는 제목이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0f1e7edea1e62bf8f0750b5063b3924d3112bc6e" translate="yes" xml:space="preserve">
          <source>Scenarios are written in step-by-step manner using Given-When-Then approach. At start, scenario should describe its context with &lt;strong&gt;Given&lt;/strong&gt; keyword:</source>
          <target state="translated">시나리오는 Given-When-Then 방식을 사용하여 단계별로 작성됩니다. 시작시 시나리오는 &lt;strong&gt;주어진&lt;/strong&gt; 키워드로 컨텍스트를 설명해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8ef02ceac1eb32f96bf500ca4f1cf50da1f3fbd1" translate="yes" xml:space="preserve">
          <source>Scenarios can become more descriptive when you represent repeating data as tables. Instead of writing several steps &quot;I have product with :num1 $ price in my cart&quot; we can have one step with multiple values in it.</source>
          <target state="translated">반복되는 데이터를 표로 표현할 때 시나리오가보다 설명이 될 수 있습니다. &quot;내 장바구니에 : num1 $ price의 제품이 있습니다&quot;라는 여러 단계를 작성하는 대신 여러 값을 가진 한 단계를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2ee6ad7423825a816eadc12664a35e00eb60a06" translate="yes" xml:space="preserve">
          <source>Screenshot on Failure</source>
          <target state="translated">실패 스크린 샷</target>
        </trans-unit>
        <trans-unit id="2d995bfdf6ef22b499f2293e11c42b1b5bf347c9" translate="yes" xml:space="preserve">
          <source>Screenshot on failure</source>
          <target state="translated">실패에 대한 스크린 샷</target>
        </trans-unit>
        <trans-unit id="75b458f6eae110ea130f3961193f50f26eb40778" translate="yes" xml:space="preserve">
          <source>Scroll element into viewport.</source>
          <target state="translated">요소를 뷰포트로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="e2507d5c553f672f570a2e024900210f298de934" translate="yes" xml:space="preserve">
          <source>Scroll page to the bottom</source>
          <target state="translated">페이지를 맨 아래로 스크롤</target>
        </trans-unit>
        <trans-unit id="e5f57d1a36e65eb1914017876506fdf92c34a96a" translate="yes" xml:space="preserve">
          <source>Scroll page to the bottom.</source>
          <target state="translated">페이지를 맨 아래로 스크롤하십시오.</target>
        </trans-unit>
        <trans-unit id="69a7ea09f965854022556b2ac5bcf712bd973cc3" translate="yes" xml:space="preserve">
          <source>Scroll page to the top</source>
          <target state="translated">페이지를 맨 위로 스크롤</target>
        </trans-unit>
        <trans-unit id="6581343da5dd8e8932f75839b2d131149a3011d0" translate="yes" xml:space="preserve">
          <source>Scroll page to the top.</source>
          <target state="translated">페이지를 맨 위로 스크롤하십시오.</target>
        </trans-unit>
        <trans-unit id="27dda94169d44c7f5cbbf2302ceadd146abe47d5" translate="yes" xml:space="preserve">
          <source>Scrolls to element matched by locator. Extra shift can be set with offsetX and offsetY options</source>
          <target state="translated">로케이터와 일치하는 요소로 스크롤합니다. offsetX 및 offsetY 옵션으로 추가 시프트를 설정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8437fe5c928d92697b8e3456167d4cc85dfdf257" translate="yes" xml:space="preserve">
          <source>Scrolls to element matched by locator. Extra shift can be set with offsetX and offsetY options Appium: support only web testing</source>
          <target state="translated">로케이터와 일치하는 요소로 스크롤합니다. offsetX 및 offsetY 옵션으로 추가 이동을 설정할 수 있습니다. Appium : 웹 테스트 만 지원</target>
        </trans-unit>
        <trans-unit id="350af05edafad8ee55367d6ae339c2a228786fd8" translate="yes" xml:space="preserve">
          <source>Scrolls to element matched by locator. Extra shift can be set with offsetX and offsetY options.</source>
          <target state="translated">로케이터와 일치하는 요소로 스크롤합니다. offsetX 및 offsetY 옵션을 사용하여 추가 이동을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6026b1681a7e0f1ad1fd379047701c73ba57813d" translate="yes" xml:space="preserve">
          <source>Scrolls to the bottom of an element.</source>
          <target state="translated">요소의 맨 아래로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="7b6a158fed009123c92648b80273f0a357fa69e8" translate="yes" xml:space="preserve">
          <source>Scrolls to the left of an element.</source>
          <target state="translated">요소의 왼쪽으로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="d634124705b94e0ec75eb5a837550c2edd59e89b" translate="yes" xml:space="preserve">
          <source>Scrolls to the right of an element.</source>
          <target state="translated">요소의 오른쪽으로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="99b9160bb20d84280d04a666c73125d9e34c0aa9" translate="yes" xml:space="preserve">
          <source>Scrolls to the top of an element.</source>
          <target state="translated">요소의 맨 위로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="17c289585eee45e0d4d891e5670d7b637f1f6e1f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://codecept.io/helpers/MockRequest#mockrequest&quot;&gt;&lt;code&gt;mockRequest&lt;/code&gt; API&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/MockRequest#mockrequest&quot;&gt; &lt;code&gt;mockRequest&lt;/code&gt; &lt;/a&gt; API 참조</target>
        </trans-unit>
        <trans-unit id="7efc5ca439275632563bc0810612eb479f0c9818" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer's reference (opens new window)&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer의 참조 (새 창을 엽니 다)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="022434a063c021b324efb59ec2bd1b2f2d96c14f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer's reference&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer의 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5839a8d635dcc93b48bb2d2adaab21c8d7b8c591" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/microsoft/Playwright/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer's reference (opens new window)&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;https://github.com/microsoft/Playwright/blob/master/docs/api.md#pagewaitfornavigationoptions&quot;&gt;Pupeteer의 참조 (새 창을 엽니 다)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c315427b938775713aa084d4f054b240c916bae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://webdriver.io/docs/browserstack-service&quot;&gt;complete reference on webdriver.io (opens new window)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://webdriver.io/docs/browserstack-service&quot;&gt;webdriver.io (새 창에서 열림)에 대한 전체 참조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a89fdce36364d388f292e639560dae7f9f1a0480" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://webdriver.io/docs/sauce-service&quot;&gt;complete reference on webdriver.io (opens new window)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://webdriver.io/docs/sauce-service&quot;&gt;webdriver.io (새 창에서 열림)에 대한 전체 참조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4962e5d40b98d6dfece7ad3d3d11db244dbbca0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://webdriver.io/docs/testingbot-service&quot;&gt;complete reference on webdriver.io (opens new window)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://webdriver.io/docs/testingbot-service&quot;&gt;webdriver.io (새 창에서 열림)에 대한 전체 참조를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f78a0fd348a8c3c088143e2d60763a7eba0ae02e" translate="yes" xml:space="preserve">
          <source>See complete reference</source>
          <target state="translated">완전한 참조를보십시오</target>
        </trans-unit>
        <trans-unit id="833a1b59e5121dca1483d5b1b564751fc519d571" translate="yes" xml:space="preserve">
          <source>See complete reference on &lt;a href=&quot;https://codecept.io/helpers/ApiDataFactory&quot;&gt;ApiDataFactory (opens new window)&lt;/a&gt; helper</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/ApiDataFactory&quot;&gt;ApiDataFactory (새 창에서 열림)&lt;/a&gt; 도우미 에 대한 전체 참조보기</target>
        </trans-unit>
        <trans-unit id="333a498c1507c431f90d8b77190f863c84eeb976" translate="yes" xml:space="preserve">
          <source>See complete reference on &lt;a href=&quot;https://codecept.io/helpers/GraphQL&quot;&gt;GraphQL (opens new window)&lt;/a&gt; helper</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/GraphQL&quot;&gt;GraphQL (새 창에서 열림)&lt;/a&gt; 도우미 에 대한 전체 참조보기</target>
        </trans-unit>
        <trans-unit id="5dc73ffb5d4a968aaec2ec19dc4a8c5e7aeab6a4" translate="yes" xml:space="preserve">
          <source>See complete reference on &lt;a href=&quot;https://codecept.io/helpers/GraphQLDataFactory&quot;&gt;GraphQLDataFactory (opens new window)&lt;/a&gt; helper</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/GraphQLDataFactory&quot;&gt;GraphQLDataFactory (새 창에서 열림)&lt;/a&gt; 도우미 에 대한 전체 참조보기</target>
        </trans-unit>
        <trans-unit id="687cbd1730d4ca8180026907ef405bd1fdbba69b" translate="yes" xml:space="preserve">
          <source>See complete reference on &lt;a href=&quot;https://codecept.io/helpers/REST&quot;&gt;REST (opens new window)&lt;/a&gt; helper</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/REST&quot;&gt;REST (새 창에서 열림)&lt;/a&gt; 도우미 에 대한 전체 참조보기</target>
        </trans-unit>
        <trans-unit id="5f6a0a8c6fa04ac3ffce4e722c07aec1c8fa6fb9" translate="yes" xml:space="preserve">
          <source>See corresponding &lt;a href=&quot;http://webdriver.io/api/mobile/rotate.html&quot;&gt;webdriverio reference&lt;/a&gt;.</source>
          <target state="translated">해당 &lt;a href=&quot;http://webdriver.io/api/mobile/rotate.html&quot;&gt;webdriverio 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2025fb94570e711ec1811e17b60552181c5bf76" translate="yes" xml:space="preserve">
          <source>See corresponding &lt;a href=&quot;http://webdriver.io/api/mobile/setImmediateValue.html&quot;&gt;webdriverio reference&lt;/a&gt;.</source>
          <target state="translated">해당 &lt;a href=&quot;http://webdriver.io/api/mobile/setImmediateValue.html&quot;&gt;webdriverio 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1838601e020488d4d06ba20d0451d4d77963a68" translate="yes" xml:space="preserve">
          <source>See corresponding &lt;a href=&quot;http://webdriver.io/api/mobile/setNetworkConnection.html&quot;&gt;webdriverio reference&lt;/a&gt;.</source>
          <target state="translated">해당 &lt;a href=&quot;http://webdriver.io/api/mobile/setNetworkConnection.html&quot;&gt;webdriverio 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2d3b6faf92f4bc2a52191b39d48ba4bdce1daa0" translate="yes" xml:space="preserve">
          <source>See example:</source>
          <target state="translated">예를보십시오 :</target>
        </trans-unit>
        <trans-unit id="d1fd138f5fd5292b9691ec5a00994533496d6e13" translate="yes" xml:space="preserve">
          <source>See examples below:</source>
          <target state="translated">아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="28e5a74b9cdfb2150c0a68c2e968041bfa7391ce" translate="yes" xml:space="preserve">
          <source>See full reference for CodeceptJS Puppeteer Helper</source>
          <target state="translated">CodeceptJS Puppeteer Helper에 대한 전체 참조보기</target>
        </trans-unit>
        <trans-unit id="0e4194f2eda38c312f92f2370f623ef4dca02eeb" translate="yes" xml:space="preserve">
          <source>See the config example:</source>
          <target state="translated">구성 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e772f531e6c8ba34fc884a1c6275df38b7ab334d" translate="yes" xml:space="preserve">
          <source>See the example for Posts factories:</source>
          <target state="translated">Posts factory 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5068db9133fc6be487406be030f025199d09e5b0" translate="yes" xml:space="preserve">
          <source>See the example for Users factories:</source>
          <target state="translated">사용자 팩토리의 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e895751becd350a9e6bb3ce36cfa9770375c24c" translate="yes" xml:space="preserve">
          <source>See the example providing a factory for User generation:</source>
          <target state="translated">사용자 생성을위한 팩토리 제공 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0bbbbdc9053f2d238b9281d4416c62297eb55446" translate="yes" xml:space="preserve">
          <source>See the example:</source>
          <target state="translated">예를보십시오 :</target>
        </trans-unit>
        <trans-unit id="65c86b16dbab8f7d681a84420cc277b0f16ded46" translate="yes" xml:space="preserve">
          <source>See the sample config:</source>
          <target state="translated">샘플 구성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="067ec3769735c3fbd410b9853d493c7243798236" translate="yes" xml:space="preserve">
          <source>Select &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;Appium helper (opens new window)&lt;/a&gt; when asked.</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;메시지가 표시&lt;/a&gt; 되면 Appium 도우미 (새 창에서 열림)를 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="273950a2248e9ffd34af5b18871f08d1ce94971b" translate="yes" xml:space="preserve">
          <source>Select &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;Appium helper&lt;/a&gt; when asked.</source>
          <target state="translated">요청되면 &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;Appium 헬퍼를&lt;/a&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d9dc7d891e4f550e79eb65aab9a3a12a86857c9" translate="yes" xml:space="preserve">
          <source>Select config file manually (&lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--config&lt;/code&gt; option)</source>
          <target state="translated">구성 파일을 수동으로 선택하십시오 ( &lt;code&gt;-c&lt;/code&gt; 또는 &lt;code&gt;--config&lt;/code&gt; 옵션).</target>
        </trans-unit>
        <trans-unit id="0a29bfdd195a3aace7d215fda862d76540093511" translate="yes" xml:space="preserve">
          <source>Selects a checkbox or radio button. Element is located by label or name or CSS or XPath.</source>
          <target state="translated">확인란 또는 라디오 버튼을 선택합니다. 요소는 레이블 또는 이름 또는 CSS 또는 XPath로 위치합니다.</target>
        </trans-unit>
        <trans-unit id="90ba29b15e0b252fe89bc91455e670952ec764fa" translate="yes" xml:space="preserve">
          <source>Selects an option in a drop-down select. Field is searched by label | name | CSS | XPath. Option is selected by visible text or by value.</source>
          <target state="translated">드롭 다운 선택에서 옵션을 선택합니다. 필드는 레이블로 검색됩니다 | 이름 | CSS | XPath. 옵션은 보이는 텍스트 또는 값으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="7fcf32472f53b4b471e0f4f1131cbf84b9f91cc0" translate="yes" xml:space="preserve">
          <source>Selenium - is a toolset for browser test automation</source>
          <target state="translated">Selenium-브라우저 테스트 자동화를위한 도구 세트</target>
        </trans-unit>
        <trans-unit id="e8d17f3bc84f194c7c06d01937600261380b023f" translate="yes" xml:space="preserve">
          <source>Selenium Server - to execute and send commands to browser</source>
          <target state="translated">Selenium Server-명령을 실행하고 브라우저로 보내기</target>
        </trans-unit>
        <trans-unit id="2c7ace0f588b8ad5f189682e0c019c650d4a1faf" translate="yes" xml:space="preserve">
          <source>Selenium Standalone Service</source>
          <target state="translated">Selenium 독립형 서비스</target>
        </trans-unit>
        <trans-unit id="01bf18d9fcf98ef2b19f4532c311a59187e8e055" translate="yes" xml:space="preserve">
          <source>Selenium WebDriver is considered to be standard for end to end testing of web applications. Despite its popularity it have its drawbacks, it requires a real browser and Selenium server to control it. This hardens setting it up testing environment for CI server and slows down test execution.</source>
          <target state="translated">Selenium WebDriver는 웹 애플리케이션의 엔드 투 엔드 테스트를위한 표준으로 간주됩니다. 인기에도 불구하고 단점이 있지만이를 제어하려면 실제 브라우저와 Selenium 서버가 필요합니다. CI 서버에 대한 테스트 환경 설정을 강화하고 테스트 실행 속도를 늦 춥니 다.</target>
        </trans-unit>
        <trans-unit id="689f2c6fa8a40bc9e810832fc8bfb3ee6ac94365" translate="yes" xml:space="preserve">
          <source>Selenium WebDriver may be complicated from start, as it requires following tools to be installed and started.</source>
          <target state="translated">Selenium WebDriver는 다음 도구를 설치하고 시작해야하기 때문에 처음부터 복잡 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b860f1ab211dd643c40626bbc4a1873669f14310" translate="yes" xml:space="preserve">
          <source>Selenium in Docker (Selenoid)</source>
          <target state="translated">Docker의 셀레늄 (셀레 노이드)</target>
        </trans-unit>
        <trans-unit id="f095ed92e75dd5f830c1bf3ec326326a36644f36" translate="yes" xml:space="preserve">
          <source>Selenoid Options</source>
          <target state="translated">셀레 노이드 옵션</target>
        </trans-unit>
        <trans-unit id="f11a4c640b7b76a53b53e39e423d18b1347e330b" translate="yes" xml:space="preserve">
          <source>Selenoid plugin can be started in two ways:</source>
          <target state="translated">Selenoid 플러그인은 두 가지 방법으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="623eddfde4828010d0b87b41a97533eee1cd3638" translate="yes" xml:space="preserve">
          <source>Semantic Locators</source>
          <target state="translated">시맨틱 로케이터</target>
        </trans-unit>
        <trans-unit id="485a04931a8039a26249c836145881254c2654c1" translate="yes" xml:space="preserve">
          <source>Send GET request to REST API</source>
          <target state="translated">REST API에 GET 요청 보내기</target>
        </trans-unit>
        <trans-unit id="381ffae3c0bf4a4ef7d246d855cd3aaf29579644" translate="yes" xml:space="preserve">
          <source>Send GraphQL requests by accessing &lt;code&gt;_executeQuery&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;_executeQuery&lt;/code&gt; 메서드 에 액세스하여 GraphQL 요청을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="62f20f785960d3ece4058474b273c42d68da8dbe" translate="yes" xml:space="preserve">
          <source>Send REST requests by accessing &lt;code&gt;_executeRequest&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;_executeRequest&lt;/code&gt; 메서드 에 액세스하여 REST 요청을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="783650e8e39af192da6f02fbce684f4b4c646ce3" translate="yes" xml:space="preserve">
          <source>Send a key event to the device. List of keys: &lt;a href=&quot;https://developer.android.com/reference/android/view/KeyEvent.html&quot;&gt;https://developer.android.com/reference/android/view/KeyEvent.html&lt;/a&gt;</source>
          <target state="translated">장치에 키 이벤트를 보냅니다. 키 목록 : &lt;a href=&quot;https://developer.android.com/reference/android/view/KeyEvent.html&quot;&gt;https://developer.android.com/reference/android/view/KeyEvent.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aa8b485c5246b0a81aa10f3be06ebd283c16fdf" translate="yes" xml:space="preserve">
          <source>Send query to GraphQL endpoint over http</source>
          <target state="translated">http를 통해 GraphQL 끝점에 쿼리 보내기</target>
        </trans-unit>
        <trans-unit id="7f3ddb3dc45dab22e200ae494abedcf5f3c913c0" translate="yes" xml:space="preserve">
          <source>Send query to GraphQL endpoint over http. Returns a response as a promise.</source>
          <target state="translated">http를 통해 GraphQL 끝점에 쿼리를 보냅니다. 응답을 약속으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bb9d9af165d51cd3c67c403407a01ddc64922e72" translate="yes" xml:space="preserve">
          <source>Sends &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#contentssendinputeventevent&quot;&gt;input event (opens new window)&lt;/a&gt; on a page. Should be a mouse event like: { type: 'mouseDown', x: args.x, y: args.y, button: &quot;left&quot; }</source>
          <target state="translated">페이지에 &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#contentssendinputeventevent&quot;&gt;입력 이벤트 (새 창&lt;/a&gt; 열기)를 보냅니다 . 다음과 같은 마우스 이벤트 여야합니다. {type : 'mouseDown', x : args.x, y : args.y, button : &quot;left&quot;}</target>
        </trans-unit>
        <trans-unit id="28cb789787ec3d1d4fdb0c5c51753ef8db874835" translate="yes" xml:space="preserve">
          <source>Sends &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#contentssendinputeventevent&quot;&gt;input event&lt;/a&gt; on a page. Should be a mouse event like: { type: 'mouseDown', x: args.x, y: args.y, button: &quot;left&quot; }</source>
          <target state="translated">페이지에서 &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#contentssendinputeventevent&quot;&gt;입력 이벤트&lt;/a&gt; 를 보냅니다 . 다음과 같은 마우스 이벤트 여야합니다. {type : 'mouseDown', x : args.x, y : args.y, button : &quot;left&quot;}</target>
        </trans-unit>
        <trans-unit id="8589a786417d8609b779c7587f41c824270a3527" translate="yes" xml:space="preserve">
          <source>Sends &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#webcontentssendinputeventevent&quot;&gt;input event (opens new window)&lt;/a&gt; on a page. Can submit special keys like 'Enter', 'Backspace', etc</source>
          <target state="translated">페이지에 &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#webcontentssendinputeventevent&quot;&gt;입력 이벤트 (새 창&lt;/a&gt; 열기)를 보냅니다 . 'Enter', 'Backspace'등과 같은 특수 키를 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7800516bba6d585d7bad2c5e7a638da03c1abdc0" translate="yes" xml:space="preserve">
          <source>Sends &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#webcontentssendinputeventevent&quot;&gt;input event&lt;/a&gt; on a page. Can submit special keys like 'Enter', 'Backspace', etc</source>
          <target state="translated">페이지에서 &lt;a href=&quot;https://electron.atom.io/docs/api/web-contents/#webcontentssendinputeventevent&quot;&gt;입력 이벤트&lt;/a&gt; 를 보냅니다 . 'Enter', 'Backspace'등과 같은 특수 키를 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec3749a0974c79c6c78c4593244bd25c5f471603" translate="yes" xml:space="preserve">
          <source>Sends DELETE request to API.</source>
          <target state="translated">DELETE 요청을 API로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="69ad3848b4f7ecfedd2fc6e8820624c48ec9ce40" translate="yes" xml:space="preserve">
          <source>Sends PATCH request to API.</source>
          <target state="translated">PATCH 요청을 API로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="ec9fb25f4bc759186d65790aa0bea89d5ce55812" translate="yes" xml:space="preserve">
          <source>Sends POST request to API.</source>
          <target state="translated">POST 요청을 API로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="fa618a74443bacc4be85a1af63891942f3fca9ee" translate="yes" xml:space="preserve">
          <source>Sends PUT request to API.</source>
          <target state="translated">PUT 요청을 API로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="162a33788262f9737ba77d94a437395860580408" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;http://webdriver.io/guide/testrunner/timeouts.html&quot;&gt;WebDriverIO timeouts&lt;/a&gt; in realtime. Appium: support only web testing Timeouts are expected to be passed as object:</source>
          <target state="translated">실시간 &lt;a href=&quot;http://webdriver.io/guide/testrunner/timeouts.html&quot;&gt;WebDriverIO 시간 초과&lt;/a&gt; 를 설정하십시오 . Appium : 웹 테스트 만 지원 시간 초과는 객체로 전달 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="a65cba7035ddc72ae1a82d3c5a46f5d23a87b861" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;https://webdriver.io/docs/timeouts&quot;&gt;WebDriver timeouts (opens new window)&lt;/a&gt; in realtime.</source>
          <target state="translated">설정 &lt;a href=&quot;https://webdriver.io/docs/timeouts&quot;&gt;WebDriver 시간 초과 (새 창을 엽니 다)&lt;/a&gt; 실시간한다.</target>
        </trans-unit>
        <trans-unit id="45c009f50a1560ab747e8c13573f874470bc87f9" translate="yes" xml:space="preserve">
          <source>Set Up steps.d.ts</source>
          <target state="translated">steps.d.ts 설정</target>
        </trans-unit>
        <trans-unit id="a037bc4a89ef92481f7f7bb6d246599b5e4f15db" translate="yes" xml:space="preserve">
          <source>Set a device orientation. Will fail, if app will not set orientation</source>
          <target state="translated">장치 방향을 설정하십시오. 앱이 방향을 설정하지 않으면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="bb2420583dd9a772877ef200c6f9e77552ee83cd" translate="yes" xml:space="preserve">
          <source>Set current page</source>
          <target state="translated">현재 페이지 설정</target>
        </trans-unit>
        <trans-unit id="88768284b0dbd38726bfdf5a5db51d28e69ff74a" translate="yes" xml:space="preserve">
          <source>Set headers for all next requests</source>
          <target state="translated">모든 다음 요청에 대한 헤더 설정</target>
        </trans-unit>
        <trans-unit id="2489467a87b02beead88b63711725bf335dffd35" translate="yes" xml:space="preserve">
          <source>Set headers for the request</source>
          <target state="translated">요청에 대한 헤더 설정</target>
        </trans-unit>
        <trans-unit id="95ca3da5b05e13d9a007147731b73470f743fcc2" translate="yes" xml:space="preserve">
          <source>Set immediate value in app.</source>
          <target state="translated">앱에서 즉각적인 가치를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d560786311f1d96c9bcc0219670410e894d9b4c0" translate="yes" xml:space="preserve">
          <source>Set mode via enironment variable, &lt;code&gt;replay&lt;/code&gt; mode by default:</source>
          <target state="translated">환경 변수를 통한 모드 설정, 기본적으로 &lt;code&gt;replay&lt;/code&gt; 모드 :</target>
        </trans-unit>
        <trans-unit id="a309593068c7c2e3c15d38d7efd249bf09f063d4" translate="yes" xml:space="preserve">
          <source>Set network connection mode.</source>
          <target state="translated">네트워크 연결 모드를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="25a2bd07e00968bce4997ee8190d0e1c6e3bf896" translate="yes" xml:space="preserve">
          <source>Set response auto-redirects OFF</source>
          <target state="translated">응답 자동 리디렉션 설정 OFF</target>
        </trans-unit>
        <trans-unit id="a6f103c2f170a25fabe5cb673ae6d723461ede79" translate="yes" xml:space="preserve">
          <source>Set response auto-redirects ON</source>
          <target state="translated">응답 자동 리디렉션 설정</target>
        </trans-unit>
        <trans-unit id="cb157b756b2814c1a8877f3074c78762d4eaa00a" translate="yes" xml:space="preserve">
          <source>Set the automatic popup response to Accept. This must be set before a popup is triggered.</source>
          <target state="translated">자동 팝업 응답을 수락으로 설정하십시오. 팝업이 트리거되기 전에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="431e3067d64835671cab7d5a53d9ede78d97cb5b" translate="yes" xml:space="preserve">
          <source>Set the automatic popup response to Cancel/Dismiss. This must be set before a popup is triggered.</source>
          <target state="translated">자동 팝업 응답을 취소 / 해제로 설정하십시오. 팝업이 트리거되기 전에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc3d02f053b3b655db78fd77f92703e53ba86da3" translate="yes" xml:space="preserve">
          <source>Set the current geo location</source>
          <target state="translated">현재 지리적 위치 설정</target>
        </trans-unit>
        <trans-unit id="7ab825c598446256746994267ac9c557fb6e4797" translate="yes" xml:space="preserve">
          <source>Set the number of taps in second argument. Optionally define the context element by third argument.</source>
          <target state="translated">두 번째 인수에서 탭 수를 설정합니다. 선택적으로 세 번째 인수로 컨텍스트 요소를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="22de2c6794d0044043ab9e0317394b2510c6b63e" translate="yes" xml:space="preserve">
          <source>Set timeout for the request</source>
          <target state="translated">요청 시간 초과 설정</target>
        </trans-unit>
        <trans-unit id="da574cb621f2823122b91de999ab3147d36a879c" translate="yes" xml:space="preserve">
          <source>Sets a cookie</source>
          <target state="translated">쿠키를 설정합니다</target>
        </trans-unit>
        <trans-unit id="0de8e0190844de1c128747647133bdd80a93e489" translate="yes" xml:space="preserve">
          <source>Sets a directory to where save files. Allows to test file downloads. Should be used with &lt;a href=&quot;https://codecept.io/helpers/FileSystem&quot;&gt;FileSystem helper (opens new window)&lt;/a&gt; to check that file were downloaded correctly.</source>
          <target state="translated">파일을 저장할 디렉토리를 설정합니다. 파일 다운로드를 테스트 할 수 있습니다. 파일이 올바르게 다운로드되었는지 확인하려면 &lt;a href=&quot;https://codecept.io/helpers/FileSystem&quot;&gt;FileSystem 도우미 (새 창에서 열림)&lt;/a&gt; 와 함께 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6479a90f34e6e2327a722959551fb74001e712f8" translate="yes" xml:space="preserve">
          <source>Sets cookie(s).</source>
          <target state="translated">쿠키를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d60b0890a431be3750d67b0f7fe70b5f3af16d7e" translate="yes" xml:space="preserve">
          <source>Setting Up</source>
          <target state="translated">설정</target>
        </trans-unit>
        <trans-unit id="869a7d3a9ca25d6de15bdb645841995850933cc2" translate="yes" xml:space="preserve">
          <source>Setting up CodeceptJS with Protractor</source>
          <target state="translated">각도기로 CodeceptJS 설정</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="cbcda5e1472c6c7a556cd0ba7be55ea13a2e3eef" translate="yes" xml:space="preserve">
          <source>Setup (ApiDataFactory)</source>
          <target state="translated">설정 (ApiDataFactory)</target>
        </trans-unit>
        <trans-unit id="278694d055f8dc0f782c12f629c13eb221836e8f" translate="yes" xml:space="preserve">
          <source>Several plugins can be enabled as well:</source>
          <target state="translated">여러 플러그인도 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="106e8b8c146ebd8120c61c66a86a10d167741fa6" translate="yes" xml:space="preserve">
          <source>Shakes the device.</source>
          <target state="translated">장치를 흔 듭니다.</target>
        </trans-unit>
        <trans-unit id="cc59823d5fabf49ccb4730fd8f8914e9a7898753" translate="yes" xml:space="preserve">
          <source>Share your helpers at our &lt;a href=&quot;https://github.com/codeceptjs/CodeceptJS/wiki/Community-Helpers&quot;&gt;Wiki Page (opens new window)&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/codeceptjs/CodeceptJS/wiki/Community-Helpers&quot;&gt;Wiki 페이지&lt;/a&gt; 에서 도우미 공유 (새 창에서 열림)</target>
        </trans-unit>
        <trans-unit id="cc329c3f9aa282e248e2a78e6c1a0b820b0eaf7e" translate="yes" xml:space="preserve">
          <source>Sharing Data Between Workers</source>
          <target state="translated">작업자 간 데이터 공유</target>
        </trans-unit>
        <trans-unit id="2a88eb48e590cfb575f793ec1821ab493f045706" translate="yes" xml:space="preserve">
          <source>Sharing browser session with ApiDataFactory or GraphQLDataFactory can be especially useful when you test Single Page Applications</source>
          <target state="translated">ApiDataFactory 또는 GraphQLDataFactory와 브라우저 세션을 공유하면 단일 페이지 애플리케이션을 테스트 할 때 특히 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdc1fd5d3c0f3dcfd55d010426e61bf9451e680d" translate="yes" xml:space="preserve">
          <source>Shell</source>
          <target state="translated">Shell</target>
        </trans-unit>
        <trans-unit id="dbef73b4c7113c8da3915b8e8577bd55d20fff63" translate="yes" xml:space="preserve">
          <source>Short Cuts</source>
          <target state="translated">지름길</target>
        </trans-unit>
        <trans-unit id="94d4b1ccc193e1e957985e253bdf12a52a1377d7" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;makeTouchAction&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;makeTouchAction&lt;/code&gt; 단축키</target>
        </trans-unit>
        <trans-unit id="ab240773e92c6c2b636f6252abc12f0780ed52d1" translate="yes" xml:space="preserve">
          <source>Should be used with &lt;a href=&quot;https://codecept.io/helpers/FileSystem&quot;&gt;FileSystem helper (opens new window)&lt;/a&gt; to check that file were downloaded correctly.</source>
          <target state="translated">파일이 올바르게 다운로드되었는지 확인하려면 &lt;a href=&quot;https://codecept.io/helpers/FileSystem&quot;&gt;FileSystem 도우미 (새 창에서 열림)&lt;/a&gt; 와 함께 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2f64df420023dd824589a797870e203d76d58494" translate="yes" xml:space="preserve">
          <source>Similar method can be implemented for Playwright &amp;amp; Puppeteer:</source>
          <target state="translated">Playwright &amp;amp; Puppeteer에 대해서도 유사한 방법을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a6f3df748f6af9a1a1ef99511614e0cbd1cd7d3" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;code&gt;Before&lt;/code&gt; you can use &lt;code&gt;After&lt;/code&gt; and &lt;code&gt;Fail&lt;/code&gt; inside a scenario. &lt;code&gt;Fail&lt;/code&gt; hook is activated on failure and receive two parameters: &lt;code&gt;test&lt;/code&gt; and current &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Before&lt;/code&gt; 와 마찬가지로 시나리오 내에서 &lt;code&gt;After&lt;/code&gt; 및 &lt;code&gt;Fail&lt;/code&gt; 을 사용할 수 있습니다 . &lt;code&gt;Fail&lt;/code&gt; 후크가 활성화되고 &lt;code&gt;test&lt;/code&gt; 및 현재 &lt;code&gt;error&lt;/code&gt; 두 매개 변수를 수신 합니다 .</target>
        </trans-unit>
        <trans-unit id="63c19e91b6684402f716df8f9a08fb706d5441e6" translate="yes" xml:space="preserve">
          <source>Similarly, CodeceptJS allows you to generate &lt;strong&gt;PageFragments&lt;/strong&gt; and any other abstractions by running the &lt;code&gt;go&lt;/code&gt; command with &lt;code&gt;--type&lt;/code&gt; (or &lt;code&gt;-t&lt;/code&gt;) option:</source>
          <target state="translated">마찬가지로 CodeceptJS를 사용하면 &lt;code&gt;--type&lt;/code&gt; (또는 &lt;code&gt;-t&lt;/code&gt; ) 옵션 과 함께 &lt;code&gt;go&lt;/code&gt; 명령을 실행하여 &lt;strong&gt;PageFragments&lt;/strong&gt; 및 기타 추상화 를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="11573989d1103235b7dffb7ed73ead58fe7a540a" translate="yes" xml:space="preserve">
          <source>Simulate Touch ID with either valid (match == true) or invalid (match == false) fingerprint.</source>
          <target state="translated">유효한 (일치 == true) 또는 유효하지 않은 (일치 == false) 지문으로 Touch ID를 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="68a1412afd5e57c5e41380840f6865e958b90deb" translate="yes" xml:space="preserve">
          <source>Since CodeceptJS 2.3, you can run tests in parallel by using NodeJS workers. This feature requires NodeJS &amp;gt;= 11.6. Use &lt;code&gt;run-workers&lt;/code&gt; command with the number of workers (threads) to split tests.</source>
          <target state="translated">CodeceptJS 2.3부터 NodeJS 작업자를 사용하여 테스트를 병렬로 실행할 수 있습니다. 이 기능을 사용하려면 NodeJS&amp;gt; = 11.6이 필요합니다. 사용 &lt;code&gt;run-workers&lt;/code&gt; 분할 테스트 근로자 (스레드)의 수에 따라 명령.</target>
        </trans-unit>
        <trans-unit id="9d924a5b1db65db0c351619ba2f57161f93b168b" translate="yes" xml:space="preserve">
          <source>Since CodeceptJS 2.3.3 there is a simple way to enable shared session for browser and data helpers. Install &lt;a href=&quot;https://github.com/codeceptjs/configure&quot;&gt;&lt;code&gt;@codeceptjs/configure&lt;/code&gt; (opens new window)&lt;/a&gt; package:</source>
          <target state="translated">CodeceptJS 2.3.3부터 브라우저 및 데이터 도우미를위한 공유 세션을 활성화하는 간단한 방법이 있습니다. 설치 &lt;a href=&quot;https://github.com/codeceptjs/configure&quot;&gt; &lt;code&gt;@codeceptjs/configure&lt;/code&gt; (새 창에서 열림)&lt;/a&gt; 패키지 :</target>
        </trans-unit>
        <trans-unit id="22c22c92516b167e48a8850862fd9d43b049ad6a" translate="yes" xml:space="preserve">
          <source>Skipping</source>
          <target state="translated">Skipping</target>
        </trans-unit>
        <trans-unit id="d9318dfc9bb40977755987003dec8c59bea1e642" translate="yes" xml:space="preserve">
          <source>Smart Wait to locate an element</source>
          <target state="translated">요소를 찾기 위해 스마트 대기</target>
        </trans-unit>
        <trans-unit id="c5cad87bd00c6e7984876cefb0f1643d6574a8dc" translate="yes" xml:space="preserve">
          <source>SmartWait</source>
          <target state="translated">SmartWait</target>
        </trans-unit>
        <trans-unit id="0e9b6d56a0d9624faca2fbd76751a2c687e687e1" translate="yes" xml:space="preserve">
          <source>SmartWait can be enabled by setting wait option in WebDriver config. Add &lt;code&gt;smartWait: 5000&lt;/code&gt; to wait for additional 5s.</source>
          <target state="translated">WebDriver 구성에서 대기 옵션을 설정하여 SmartWait을 활성화 할 수 있습니다. 추가 5 초를 기다리 &lt;code&gt;smartWait: 5000&lt;/code&gt; 을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="08896a7011d754d1ed29528e735a4ec7e60147ae" translate="yes" xml:space="preserve">
          <source>SmartWait can be enabled by setting wait option in WebDriverIO config. Add &lt;code&gt;&quot;smartWait&quot;: 5000&lt;/code&gt; to wait for additional 5s.</source>
          <target state="translated">WebDriverIO 구성에서 대기 옵션을 설정하여 SmartWait를 활성화 할 수 있습니다. 추가 &lt;code&gt;&quot;smartWait&quot;: 5000&lt;/code&gt; 추가로 5 초를 기다려야.</target>
        </trans-unit>
        <trans-unit id="886bc26f868889175f76167da8da37db770d0da6" translate="yes" xml:space="preserve">
          <source>SmartWait doesn't check element for visibility, so tests may fail even element is on a page.</source>
          <target state="translated">SmartWait는 요소의 가시성을 검사하지 않으므로 요소가 페이지에 있어도 테스트가 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="928abb982eead875a3265bf6eb4995630fb0d9c8" translate="yes" xml:space="preserve">
          <source>SmartWait works with a CSS/XPath locators in &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;seeElement&lt;/code&gt; and other methods. See where it is enabled and where is not:</source>
          <target state="translated">SmartWait는 &lt;code&gt;click&lt;/code&gt; , &lt;code&gt;seeElement&lt;/code&gt; 및 기타 메소드 에서 CSS / XPath 로케이터와 함께 작동 합니다. 활성화 된 위치와 활성화되지 않은 위치를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4ee924fbbe5c9a269b6b854496bf5ed3ce44830a" translate="yes" xml:space="preserve">
          <source>So there is no magic in testing of AngularJS application in CodeceptJS. You just execute regular Protractor commands, packed in a simple high-level API.</source>
          <target state="translated">따라서 CodeceptJS에서 AngularJS 응용 프로그램을 테스트하는 데 마술이 없습니다. 간단한 고급 API로 압축 된 일반 각도기 명령 만 실행하면됩니다.</target>
        </trans-unit>
        <trans-unit id="fe006693e786db6e0c56212380f73eb403fb9e87" translate="yes" xml:space="preserve">
          <source>Solution: update Puppeteer config to include &lt;code&gt;--disable-web-security&lt;/code&gt; arguments:</source>
          <target state="translated">솔루션 : &lt;code&gt;--disable-web-security&lt;/code&gt; 인수 를 포함하도록 Puppeteer 구성을 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="794d5660d1d35a1528deef2c2e1eef0d68fcf3cf" translate="yes" xml:space="preserve">
          <source>Some of the supported key names are:</source>
          <target state="translated">지원되는 키 이름 중 일부는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7208c775cf3c3adc8d6b9dc1da43701dbfc810a1" translate="yes" xml:space="preserve">
          <source>Sometimes it takes some time for a page to respond to user's actions. Depending on app's performance this can be either slow or fast.</source>
          <target state="translated">페이지가 사용자의 작업에 응답하는 데 시간이 걸리는 경우가 있습니다. 앱의 성능에 따라 느리거나 빠를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f563bdd805295a83a564d4fa51d6f2cc8cafb135" translate="yes" xml:space="preserve">
          <source>Sometimes it takes some time for a page to respond to user's actions. Depending on app's perfromance this can be either slow or fast.</source>
          <target state="translated">때때로 페이지가 사용자의 조치에 응답하는 데 시간이 걸립니다. 앱의 성능에 따라 느리거나 빠를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eb4c1f832cb28079156a04b2d24c28ac702b21a" translate="yes" xml:space="preserve">
          <source>Sometimes you need to retrieve a data from a page to use it in next steps of a scenario. Imagine, application generates a password and you want to ensure that user can login using this password.</source>
          <target state="translated">시나리오의 다음 단계에서 사용하기 위해 페이지에서 데이터를 검색해야하는 경우가 있습니다. 응용 프로그램이 암호를 생성하고 사용자가이 암호를 사용하여 로그인 할 수있게하려고한다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="fb1168d40890ffba02a51776265cf02a0a827262" translate="yes" xml:space="preserve">
          <source>Sometimes you need to retrieve data from a page to use it in the following steps of a scenario. Imagine the application generates a password, and you want to ensure that user can login using this password.</source>
          <target state="translated">시나리오의 다음 단계에서 사용하기 위해 페이지에서 데이터를 검색해야하는 경우가 있습니다. 애플리케이션이 비밀번호를 생성하고 사용자가이 비밀번호를 사용하여 로그인 할 수 있는지 확인하려고한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="c197d5ce5da757b0d160cc68cdac20665ff36a18" translate="yes" xml:space="preserve">
          <source>Start a test by opening a page. Use the &lt;code&gt;I.amOnPage()&lt;/code&gt; command for this:</source>
          <target state="translated">페이지를 열어 테스트를 시작하십시오. 이를 위해 &lt;code&gt;I.amOnPage()&lt;/code&gt; 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cbef4d87ea1a0b40a4940da07298533a21d73089" translate="yes" xml:space="preserve">
          <source>Start an arbitrary Android activity during a session.</source>
          <target state="translated">세션 중에 임의의 Android 활동을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="faa99e666b09bfc6656274bc0bc55a322d5346ec" translate="yes" xml:space="preserve">
          <source>Start with creating an &lt;code&gt;MyPlaywright&lt;/code&gt; helper using &lt;code&gt;generate:helper&lt;/code&gt; or &lt;code&gt;gh&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;generate:helper&lt;/code&gt; 또는 &lt;code&gt;gh&lt;/code&gt; 명령을 사용하여 &lt;code&gt;MyPlaywright&lt;/code&gt; 도우미 만들기를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="df38f2065f16537b5f945a5f104d16cec0b91df0" translate="yes" xml:space="preserve">
          <source>Start with creating an &lt;code&gt;MyPuppeteer&lt;/code&gt; helper using &lt;code&gt;generate:helper&lt;/code&gt; or &lt;code&gt;gh&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;generate:helper&lt;/code&gt; 또는 &lt;code&gt;gh&lt;/code&gt; 명령을 사용하여 &lt;code&gt;MyPuppeteer&lt;/code&gt; 도우미 작성으로 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="0226ae9dcbdbe4e339b7dc2f4a2bfa39d94cfe00" translate="yes" xml:space="preserve">
          <source>Start with creating file &lt;code&gt;bin/parallel.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin/parallel.js&lt;/code&gt; 파일 생성부터 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="5c2034c45360b8fe6fa31eb66665ad2b203d3fb8" translate="yes" xml:space="preserve">
          <source>Starting Selenium Server</source>
          <target state="translated">Selenium 서버 시작</target>
        </trans-unit>
        <trans-unit id="df43e39b48b283836168db75ef927076e615fc1a" translate="yes" xml:space="preserve">
          <source>Starts mocking of http requests. In record mode starts recording of all requests. In replay mode blocks all requests and replaces them with saved.</source>
          <target state="translated">http 요청 조롱을 시작합니다. 기록 모드에서 모든 요청의 기록을 시작합니다. 재생 모드에서는 모든 요청을 차단하고 저장된 요청으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="a3808b0d6f92482aefb62858b27bc89bd8fdf66a" translate="yes" xml:space="preserve">
          <source>Step By Step Report</source>
          <target state="translated">단계별 보고서</target>
        </trans-unit>
        <trans-unit id="baa48047d0504ed625a6534181f9614799002447" translate="yes" xml:space="preserve">
          <source>Step Definitions</source>
          <target state="translated">단계 정의</target>
        </trans-unit>
        <trans-unit id="4ef83d2fb6cf941db835f1e60eb89c18afd537c8" translate="yes" xml:space="preserve">
          <source>Step Object</source>
          <target state="translated">단계 객체</target>
        </trans-unit>
        <trans-unit id="b3d3ee980e92439bb447866c5bdc52cbde63738b" translate="yes" xml:space="preserve">
          <source>Step definitions are placed in JavaScript file with Given/When/Then functions that map strings from feature file to functions:</source>
          <target state="translated">단계 정의는 기능 파일에서 함수로 문자열을 맵핑하는 Given / When / Then 함수를 사용하여 JavaScript 파일에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="8c6d65f895af48edaeda2ab1f364743f1a0ca8ae" translate="yes" xml:space="preserve">
          <source>Step events provide step objects with following fields:</source>
          <target state="translated">단계 이벤트는 단계 필드에 다음 필드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="86e2b082d0e8bc6a146b47345920ce9fdfb156da" translate="yes" xml:space="preserve">
          <source>StepObjects</source>
          <target state="translated">StepObjects</target>
        </trans-unit>
        <trans-unit id="c7cbecdb145a805da7d7d53fd5148b834740756c" translate="yes" xml:space="preserve">
          <source>StepObjects represent complex actions which involve the usage of multiple web pages. For instance, creating users in the backend, changing permissions, etc. StepObject can be created similarly to PageObjects or PageFragments:</source>
          <target state="translated">StepObjects는 여러 웹 페이지의 사용과 관련된 복잡한 작업을 나타냅니다. 예를 들어 백엔드에서 사용자 생성, 권한 변경 등 StepObject는 PageObjects 또는 PageFragments와 유사하게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf980df6fb420f6f506f82d4c39fa3da38544782" translate="yes" xml:space="preserve">
          <source>StepObjects represent complex actions which involve usage of multiple web pages. For instance, creating users in backend, changing permissions, etc. StepObject can be created similarly to PageObjects or PageFragments:</source>
          <target state="translated">StepObject는 여러 웹 페이지 사용과 관련된 복잡한 작업을 나타냅니다. 예를 들어, 백엔드에서 사용자 작성, 권한 변경 등 StepObject는 PageObjects 또는 PageFragments와 유사하게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="192aafddea514fb73ba264406454d326851304fe" translate="yes" xml:space="preserve">
          <source>Steps can be either strings or regular expressions. Parameters from string are passed as function arguments. To define parameters in a string we use &lt;a href=&quot;https://docs.cucumber.io/cucumber/cucumber-expressions/&quot;&gt;Cucumber expressions (opens new window)&lt;/a&gt;</source>
          <target state="translated">단계는 문자열 또는 정규식 일 수 있습니다. 문자열의 매개 변수는 함수 인수로 전달됩니다. 문자열에 매개 변수를 정의하려면 &lt;a href=&quot;https://docs.cucumber.io/cucumber/cucumber-expressions/&quot;&gt;Cucumber 표현식&lt;/a&gt; 을 사용 합니다 (새 창에서 열림).</target>
        </trans-unit>
        <trans-unit id="461036301bb6091a9d8b11b6ee26676d0abdd1c3" translate="yes" xml:space="preserve">
          <source>Steps can be either strings or regular expressions. Parameters from string are passed as function arguments. To define parameters in a string we use &lt;a href=&quot;https://docs.cucumber.io/cucumber/cucumber-expressions/&quot;&gt;Cucumber expressions&lt;/a&gt;</source>
          <target state="translated">단계는 문자열 또는 정규식 일 수 있습니다. 문자열의 매개 변수는 함수 인수로 전달됩니다. 문자열에서 매개 변수를 정의하기 위해 &lt;a href=&quot;https://docs.cucumber.io/cucumber/cucumber-expressions/&quot;&gt;오이 표현식&lt;/a&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="43a1f02f811190703678e0cc1d87fa782f0048bd" translate="yes" xml:space="preserve">
          <source>Steps in background are defined the same way as in scenarios.</source>
          <target state="translated">백그라운드 단계는 시나리오와 동일한 방식으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ccb952823faf9cedf36e274b9205e4744e9388da" translate="yes" xml:space="preserve">
          <source>Steps prefixed with &lt;code&gt;__&lt;/code&gt; will be printed as nested steps in &lt;code&gt;--steps&lt;/code&gt; output:</source>
          <target state="translated">&lt;code&gt;__&lt;/code&gt; 접두사가 붙은 단계는 &lt;code&gt;--steps&lt;/code&gt; 출력 에서 중첩 된 단계로 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f240afe4b99a709cace817dc39136c74b0b2ee9" translate="yes" xml:space="preserve">
          <source>Stopping a server from a previous example can be done in a similar manner. Create a teardown file and add it to &lt;code&gt;codecept.json&lt;/code&gt;:</source>
          <target state="translated">이전 예제에서 서버를 중지하는 것도 비슷한 방식으로 수행 할 수 있습니다. 테어 다운 파일을 작성하여 &lt;code&gt;codecept.json&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7600a6c86d6b62a844ec83630cb51bdb676dbccb" translate="yes" xml:space="preserve">
          <source>Stops mocking requests. Must be called to save recorded requests into faile.</source>
          <target state="translated">조롱 요청을 중지합니다. 기록 된 요청을 실패로 저장하려면 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="28d39e269d7e17367aad2cf5adab2134e15415d4" translate="yes" xml:space="preserve">
          <source>Strict locators allow to specify additional locator types:</source>
          <target state="translated">엄격한 로케이터를 사용하면 추가 로케이터 유형을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ebde4c2b10e6ace16338f84a54f868d47c06a9e" translate="yes" xml:space="preserve">
          <source>Such talks should produce written stories. There should be an actor that doing some things, the feature that should be fulfilled within the story and the result achieved.</source>
          <target state="translated">그러한 대화는 글을 써야합니다. 어떤 일을하는 배우, 스토리 내에서 성취되어야 할 기능 및 달성 된 결과가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ad8c707c9820471da9a35d61ffc28291f147d0cc" translate="yes" xml:space="preserve">
          <source>Sure, Protractor can be used to test applications built without AngularJS. In this case you need to disable angular synchronization feature in config:</source>
          <target state="translated">물론, 각도기를 사용하여 AngularJS없이 빌드 된 애플리케이션을 테스트 할 수 있습니다. 이 경우 config에서 각도 동기화 기능을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="3d4d2ff51f2e539277119b5ec706030864779b1f" translate="yes" xml:space="preserve">
          <source>Switch focus to a particular tab by its number. It waits tabs loading and then switch tab</source>
          <target state="translated">번호로 특정 탭으로 초점을 전환하십시오. 탭 로딩 대기 후 탭 전환</target>
        </trans-unit>
        <trans-unit id="e2cfbaf28e9ce0ca990fab73b45a1735c5bff2cf" translate="yes" xml:space="preserve">
          <source>Switch focus to a particular tab by its number. It waits tabs loading and then switch tab.</source>
          <target state="translated">번호로 특정 탭으로 포커스를 전환합니다. 탭 로딩을 기다린 다음 탭을 전환합니다.</target>
        </trans-unit>
        <trans-unit id="fcea82fb41ee294997c8999f99f0be5cb6269093" translate="yes" xml:space="preserve">
          <source>Switch to non-Angular mode, start using WebDriver instead of Protractor in this session</source>
          <target state="translated">이 세션에서 비 각도 모드로 전환하고 각도기 대신 WebDriver를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="39e073c7ca09d9a9aecea4c3060c302c5b66c202" translate="yes" xml:space="preserve">
          <source>Switch to the specified context.</source>
          <target state="translated">지정된 컨텍스트로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="1255f3cea5319884a49350da7f444177476a068c" translate="yes" xml:space="preserve">
          <source>Switch to the window with a specified handle.</source>
          <target state="translated">지정된 핸들이있는 창으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="1b0397a1271d032469d5e329935eb61696ce5d8d" translate="yes" xml:space="preserve">
          <source>Switches current element to found one. Can accept another &lt;code&gt;locate&lt;/code&gt; call or strict locator.</source>
          <target state="translated">현재 요소를 찾은 것으로 전환합니다. 다른로 &lt;code&gt;locate&lt;/code&gt; 호출 또는 엄격한 로케이터를 수락 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d557a7ad34933bc80e9ad74d43985bf6d220bae9" translate="yes" xml:space="preserve">
          <source>Switches device to landscape orientation</source>
          <target state="translated">장치를 가로 방향으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="f0e754ab23fc4f02647128266f4b3f45845b1dce" translate="yes" xml:space="preserve">
          <source>Switches device to portrait orientation</source>
          <target state="translated">장치를 세로 방향으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="938dd9a547288d32442854a39ff875501212780f" translate="yes" xml:space="preserve">
          <source>Switches frame or in case of null locator reverts to parent.</source>
          <target state="translated">프레임을 전환하거나 null 로케이터가 부모로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="43ac0e5cc77506828a814ad113dd34db757f438d" translate="yes" xml:space="preserve">
          <source>Switches frame or in case of null locator reverts to parent. Appium: support only web testing</source>
          <target state="translated">프레임을 전환하거나 null 로케이터가 부모로 돌아갑니다. Appium : 웹 테스트 만 지원</target>
        </trans-unit>
        <trans-unit id="a50d93537099424c48a1441c688ff52e91413e92" translate="yes" xml:space="preserve">
          <source>Switches to native context. By default switches to NATIVE_APP context unless other specified.</source>
          <target state="translated">기본 컨텍스트로 전환합니다. 다른 지정이없는 한 기본적으로 NATIVE_APP 컨텍스트로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="87c53cfda5e293677d2f0361b8c27c198496ecf8" translate="yes" xml:space="preserve">
          <source>Switches to web context. If no context is provided switches to the first detected web context</source>
          <target state="translated">웹 컨텍스트로 전환합니다. 컨텍스트가 제공되지 않으면 처음 감지 된 웹 컨텍스트로 전환</target>
        </trans-unit>
        <trans-unit id="deffdf8f3fef992a077a0ca33839a5ae3800fe33" translate="yes" xml:space="preserve">
          <source>TO launch additional browser context (or incognito window) use &lt;code&gt;session&lt;/code&gt; command.</source>
          <target state="translated">추가 브라우저 컨텍스트 (또는 시크릿 창)를 시작하려면 &lt;code&gt;session&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="3b4d5a2bc9581e399e44d82776f6a357d67bce7d" translate="yes" xml:space="preserve">
          <source>Tables are the recommended way to pass arrays into test scenarios. Inside a step definition data is stored in argument passed as &lt;code&gt;DataTable&lt;/code&gt; JavaScript object. You can iterate on it like this:</source>
          <target state="translated">테이블은 배열을 테스트 시나리오로 전달하는 데 권장되는 방법입니다. 단계 정의 내에서 데이터는 &lt;code&gt;DataTable&lt;/code&gt; JavaScript 개체 로 전달 된 인수에 저장됩니다 . 다음과 같이 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8927cf1b362bf42a3e4a3cbe9f6f2cf9170ce2d" translate="yes" xml:space="preserve">
          <source>Tables is a recommended ways to pass arrays into test scenarios. Inside a step definition data is stored in argument passed as &lt;code&gt;DataTable&lt;/code&gt; JavaScript object. You can iterate on it like this:</source>
          <target state="translated">테이블은 배열을 테스트 시나리오에 전달하는 데 권장되는 방법입니다. 단계 정의 데이터 안에는 &lt;code&gt;DataTable&lt;/code&gt; JavaScript 객체 로 전달 된 인수에 저장됩니다 . 다음과 같이 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1efa71619d15a19a43b3d9877337ae315f174228" translate="yes" xml:space="preserve">
          <source>Tag should be placed before &lt;em&gt;Scenario:&lt;/em&gt; or before &lt;em&gt;Feature:&lt;/em&gt; keyword. In the last case all scenarios of that feature will be added to corresponding group.</source>
          <target state="translated">태그는 &lt;em&gt;시나리오 :&lt;/em&gt; 또는 &lt;em&gt;기능 :&lt;/em&gt; 키워드 앞에 배치해야합니다 . 마지막 경우 해당 기능의 모든 시나리오가 해당 그룹에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="14337687dd6f084a5c3dc9a199d6957658461aa4" translate="yes" xml:space="preserve">
          <source>Take a look at a sample test:</source>
          <target state="translated">샘플 테스트를 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="ff49742ffccb37f7db97ddb5ff2a6ec05b7e463c" translate="yes" xml:space="preserve">
          <source>Take a look into the next example:</source>
          <target state="translated">다음 예를 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="2de8011c16566b3f36b36c0f42fcce1272cba6d0" translate="yes" xml:space="preserve">
          <source>Taps an element and holds for a requested time.</source>
          <target state="translated">요소를 탭하고 요청 된 시간 동안 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a848e4577aa84fec2eedefdac01136b2e75261d4" translate="yes" xml:space="preserve">
          <source>Taps on an element. Element can be located by its text or id or accessibility id.</source>
          <target state="translated">요소를 탭합니다. 요소는 텍스트 또는 ID 또는 접근성 ID로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252658a12cbff4f469056cd394139b9d57025d63" translate="yes" xml:space="preserve">
          <source>Taps on element.</source>
          <target state="translated">요소를 두드립니다.</target>
        </trans-unit>
        <trans-unit id="08e18970a23ec7fd37ee52303a6dad58f3e611a2" translate="yes" xml:space="preserve">
          <source>Technically they are the same as PageObjects. StepObjects can inject PageObjects and use multiple POs to make a complex scenarios:</source>
          <target state="translated">기술적으로 이들은 PageObjects와 동일합니다. StepObjects는 PageObjects를 주입하고 여러 PO를 사용하여 복잡한 시나리오를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="685a6d7d678c767ea0b2f923575227aa98705d0d" translate="yes" xml:space="preserve">
          <source>Technically, they are the same as PageObjects. StepObjects can inject PageObjects and use multiple POs to make a complex scenarios:</source>
          <target state="translated">기술적으로는 PageObjects와 동일합니다. StepObjects는 PageObject를 주입하고 여러 PO를 사용하여 복잡한 시나리오를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="192b6b9f049fe6b310066bdf747ff2d241bf1774" translate="yes" xml:space="preserve">
          <source>Test Object</source>
          <target state="translated">테스트 대상</target>
        </trans-unit>
        <trans-unit id="49fbc53d093bfa5de1b61d4e6675d1eb626c9373" translate="yes" xml:space="preserve">
          <source>Test Options</source>
          <target state="translated">테스트 옵션</target>
        </trans-unit>
        <trans-unit id="07dd06c7d7bd89ecc801268ec9e941c29d2cff80" translate="yes" xml:space="preserve">
          <source>Test events provide a test object with following fields:</source>
          <target state="translated">테스트 이벤트는 테스트 필드에 다음 필드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5cc9c82bae22de7e1cb2c62d6c1b4f4bbca74c76" translate="yes" xml:space="preserve">
          <source>Test execution can be paused in any place of a test with &lt;code&gt;pause()&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;pause()&lt;/code&gt; 호출로 테스트의 어느 위치에서나 테스트 실행을 일시 중지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0149057a8d28c1b63470da901a951ae194e0108" translate="yes" xml:space="preserve">
          <source>Test execution can be paused in any place of a test with &lt;code&gt;pause()&lt;/code&gt; call. Variables can also be passed to &lt;code&gt;pause({data: 'hi', func: () =&amp;gt; console.log('hello')})&lt;/code&gt; which can be accessed in Interactive shell.</source>
          <target state="translated">&lt;code&gt;pause()&lt;/code&gt; 호출 을 사용하여 테스트의 어느 위치에서나 테스트 실행을 일시 중지 할 수 있습니다 . 변수는 또한 대화 형 셸에서 액세스 할 수있는 &lt;code&gt;pause({data: 'hi', func: () =&amp;gt; console.log('hello')})&lt;/code&gt; 로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f79afa07b33a6ac4edcad4679b2c59369a204a41" translate="yes" xml:space="preserve">
          <source>Test output and the way tests are written can be localized. This way scenarios can be written in almost native language using UTF support of JavaScript. If you have non-English team and you work on non-English project consider enabling translation by setting translation to &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/translations&quot;&gt;one of available languages&lt;/a&gt;.</source>
          <target state="translated">테스트 결과 및 테스트 작성 방법을 현지화 할 수 있습니다. 이 방법으로 JavaScript의 UTF 지원을 사용하여 시나리오를 거의 모국어로 작성할 수 있습니다. 영어 이외의 팀이 있고 영어 이외의 프로젝트 &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/translations&quot;&gt;를 수행하는 경우 사용 가능한 언어 중 하나로&lt;/a&gt; 번역을 설정하여 번역 을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0162da41d3ee89d844a17f750d14e9f1836e01ea" translate="yes" xml:space="preserve">
          <source>Test output and the way tests are written can be localized. This way scenarios can be written in almost native language using UTF support of JavaScript. If you have non-English team and you work on non-English project consider enabling translation by setting translation to &lt;a href=&quot;https://github.com/codeceptjs/CodeceptJS/blob/master/translations&quot;&gt;one of available languages (opens new window)&lt;/a&gt;.</source>
          <target state="translated">테스트 출력 및 테스트 작성 방식을 현지화 할 수 있습니다. 이러한 방식으로 시나리오는 JavaScript의 UTF 지원을 사용하여 거의 기본 언어로 작성 될 수 있습니다. 영어가 아닌 팀이 있고 영어가 아닌 프로젝트에서 작업하는 경우 &lt;a href=&quot;https://github.com/codeceptjs/CodeceptJS/blob/master/translations&quot;&gt;사용 가능한 언어 중 하나로&lt;/a&gt; 번역을 설정하여 번역을 활성화하는 것이 좋습니다 (새 창에서 열림) .</target>
        </trans-unit>
        <trans-unit id="d18c21b6ad742120f6d46f4a1f8bc7d5d148017f" translate="yes" xml:space="preserve">
          <source>Test scenario should always use &lt;code&gt;I&lt;/code&gt; object to execute commands. This is important as all methods of &lt;code&gt;I&lt;/code&gt; are running in global promise chain, this way CodeceptJS makes sure everything is executed in right order. At first a page should be opened to proceed, we use &lt;code&gt;amOnPage&lt;/code&gt; command for that. As we already specified full URL to TodoMVC app, we can pass relative path into it instead of absolute url:</source>
          <target state="translated">테스트 시나리오는 항상 &lt;code&gt;I&lt;/code&gt; 객체를 사용하여 명령을 실행해야합니다. 이 모든 방법으로 중요하다 &lt;code&gt;I&lt;/code&gt; 세계 약속 체인에서 실행되고,이 방법 CodeceptJS가 올바른 순서로 실행해야합니다 모든 것을합니다. 처음에는 계속 진행하기 위해 페이지를 열어야하며,이를 위해 &lt;code&gt;amOnPage&lt;/code&gt; 명령을 사용합니다. 이미 전체 URL을 TodoMVC 앱에 지정 했으므로 절대 URL 대신 상대 경로를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d73d3609e28a38ef9ba867f4b929d149dfa5f30" translate="yes" xml:space="preserve">
          <source>Test the application how it is.</source>
          <target state="translated">응용 프로그램을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="10f908ceba5f009dd71054f4ef6b3aaa66ff44bc" translate="yes" xml:space="preserve">
          <source>TestCafe</source>
          <target state="translated">TestCafe</target>
        </trans-unit>
        <trans-unit id="af5b9ac8a804139c9bfbba6723bb19d15fc87844" translate="yes" xml:space="preserve">
          <source>Testing React Applications</source>
          <target state="translated">React 애플리케이션 테스트</target>
        </trans-unit>
        <trans-unit id="57525f64f0bc512c8eb3639634df1962d99608b0" translate="yes" xml:space="preserve">
          <source>Testing is simple &amp;amp; fun, enjoy it!</source>
          <target state="translated">테스트는 간단하고 재미 있습니다. 즐겨보세요!</target>
        </trans-unit>
        <trans-unit id="44d27de8c6e9a942f3ac2d23ea0acada26438a78" translate="yes" xml:space="preserve">
          <source>Testing non-Angular Applications</source>
          <target state="translated">비 앵귤러 응용 프로그램 테스트</target>
        </trans-unit>
        <trans-unit id="0673872405ca83ff2ef42b5512e1da209b2ee115" translate="yes" xml:space="preserve">
          <source>Testing with Playwright Since 2.5</source>
          <target state="translated">2.5 이후 극작가로 테스트</target>
        </trans-unit>
        <trans-unit id="d8045cb3a5df69281dc7eb27619cbace7c80acda" translate="yes" xml:space="preserve">
          <source>Testing with Puppeteer</source>
          <target state="translated">Puppeteer로 테스트</target>
        </trans-unit>
        <trans-unit id="801685e614ff643e78df2081be908532feb10afb" translate="yes" xml:space="preserve">
          <source>Testing with TestCafe</source>
          <target state="translated">TestCafe로 테스트</target>
        </trans-unit>
        <trans-unit id="204ace9503976e6dc9bb63fac7371334cb0a1da4" translate="yes" xml:space="preserve">
          <source>Testing with WebDriver</source>
          <target state="translated">WebDriver로 테스트</target>
        </trans-unit>
        <trans-unit id="3ada2358a0771d2fb106fe5467eb5dd50e9b17d5" translate="yes" xml:space="preserve">
          <source>TestingBot</source>
          <target state="translated">TestingBot</target>
        </trans-unit>
        <trans-unit id="c85c378d5341f4e581c246216e32826da4651116" translate="yes" xml:space="preserve">
          <source>Tests are expected to be written in &lt;strong&gt;ECMAScript 7&lt;/strong&gt;.</source>
          <target state="translated">테스트는 &lt;strong&gt;ECMAScript 7&lt;/strong&gt; 로 작성 될 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="57cadeb225c8d7b89cd6c27cace559d468fbd4f2" translate="yes" xml:space="preserve">
          <source>Tests are split by scenarios, not by files. Results are aggregated and shown up in the main process.</source>
          <target state="translated">테스트는 파일이 아닌 시나리오별로 분할됩니다. 결과는 집계되어 기본 프로세스에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cb26fe90f1a3bb8e52a5b9a8b8fb9d720ad1bd88" translate="yes" xml:space="preserve">
          <source>Tests are written from a user's perspective. There is an actor (represented as &lt;code&gt;I&lt;/code&gt;) which contains actions taken from helpers. A test is written as a sequence of actions performed by an actor:</source>
          <target state="translated">테스트는 사용자의 관점에서 작성됩니다. 도우미가 수행 한 작업을 포함 하는 액터 ( &lt;code&gt;I&lt;/code&gt; 로 표시됨)가 있습니다. 테스트는 액터가 수행하는 일련의 작업으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="99e91084d2f58a5b0219e27f14ed6920cf0d87d5" translate="yes" xml:space="preserve">
          <source>Tests are written from user's perspective. There is an actor (represented as &lt;code&gt;I&lt;/code&gt;) which contains actions taken from helpers. A test is written as a sequence of actions performed y actor:</source>
          <target state="translated">테스트는 사용자의 관점에서 작성되었습니다. 헬퍼에서 취한 조치를 포함 하는 행위자 ( &lt;code&gt;I&lt;/code&gt; 로 표시됨)가 있습니다. 테스트는 행위자에 의해 수행되는 일련의 동작으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4c6ba368e21e52a786f00b796962f04c9a68962a" translate="yes" xml:space="preserve">
          <source>Tests are written in a synchronous way. This improves the readability and maintainability of tests. While writing tests you should not think about promises, and instead should focus on the test scenario.</source>
          <target state="translated">테스트는 동기식으로 작성됩니다. 이것은 테스트의 가독성과 유지 보수성을 향상시킵니다. 테스트를 작성하는 동안 약속에 대해 생각하지 말고 대신 테스트 시나리오에 집중해야합니다.</target>
        </trans-unit>
        <trans-unit id="f3e6459857b5fc7ee47e6443c5b35545d610a6d3" translate="yes" xml:space="preserve">
          <source>Tests are written in synchronous way. This improves readability and maintainability of tests. While writing tests you should not think about promises. You should focus on test scenario.</source>
          <target state="translated">테스트는 동기 방식으로 작성됩니다. 이것은 테스트의 가독성과 유지 관리 성을 향상시킵니다. 테스트를 작성하는 동안 약속에 대해 생각해서는 안됩니다. 테스트 시나리오에 중점을 두어야합니다.</target>
        </trans-unit>
        <trans-unit id="9cc3b22835c9f790c60b5c6b1c109d0efa0c5b51" translate="yes" xml:space="preserve">
          <source>Tests consist with a scenario of user's action taken on a page. The most widely used ones are:</source>
          <target state="translated">테스트는 페이지에서 수행 된 사용자의 행동 시나리오로 구성됩니다. 가장 널리 사용되는 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b5eb29aef6674e7a9336098909cb7847b0a0059d" translate="yes" xml:space="preserve">
          <source>Tests vs Features</source>
          <target state="translated">테스트 대 기능</target>
        </trans-unit>
        <trans-unit id="30b6fda3137a3460993392b5a9a737ff4fbd4b84" translate="yes" xml:space="preserve">
          <source>Text values inside a scenarios can be set inside a &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; block:</source>
          <target state="translated">시나리오 내의 텍스트 값은 &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; 블록 내에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fdeeb3f63916a3eeb97d5d5ed471f73462f099d6" translate="yes" xml:space="preserve">
          <source>That's all. New locator type is ready to use:</source>
          <target state="translated">그게 다야. 새 로케이터 유형을 사용할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="66466173a1b0458ee12202924688eff7dfb3e2fa" translate="yes" xml:space="preserve">
          <source>That's it, our method is now available to use as &lt;code&gt;I.createTodo(title)&lt;/code&gt;:</source>
          <target state="translated">이제 우리의 메소드를 &lt;code&gt;I.createTodo(title)&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b41c5e2c82945f3e47d4b1a5274c6f9950662ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;grabTextFrom&lt;/code&gt; action is used to retrieve the text from an element. All actions starting with the &lt;code&gt;grab&lt;/code&gt; prefix are expected to return data. In order to synchronize this step with a scenario you should pause the test execution with the &lt;code&gt;await&lt;/code&gt; keyword of ES6. To make it work, your test should be written inside a async function (notice &lt;code&gt;async&lt;/code&gt; in its definition).</source>
          <target state="translated">&lt;code&gt;grabTextFrom&lt;/code&gt; 의 조치는 요소에서 텍스트를 검색하는 데 사용됩니다. &lt;code&gt;grab&lt;/code&gt; 접두사로 시작하는 모든 작업 은 데이터를 반환해야합니다. 이 단계를 시나리오와 동기화하려면 &lt;code&gt;await&lt;/code&gt; 키워드 ES6을 사용하여 테스트 실행을 일시 중지해야합니다 . 작동하려면 테스트를 비동기 함수 내부에 작성해야합니다 ( 정의에서 &lt;code&gt;async&lt;/code&gt; 에 유의 ).</target>
        </trans-unit>
        <trans-unit id="ca8209af3a52426e3a4e5c2365566dcda25f0179" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; function expects the first parameter to be the name of the session. You can switch back to this session by using the same name.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 기능은 첫번째 파라미터는 세션의 이름이 예상된다. 동일한 이름을 사용하여이 세션으로 다시 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7680af57cf68b97bcebebcf13e5bfce4798da54" translate="yes" xml:space="preserve">
          <source>The Touch Action API provides the basis of all gestures that can be automated in Appium. At its core is the ability to chain together ad hoc individual actions, which will then be applied to an element in the application on the device. &lt;a href=&quot;http://webdriver.io/api/mobile/touchAction.html&quot;&gt;See complete documentation&lt;/a&gt;</source>
          <target state="translated">Touch Action API는 Appium에서 자동화 할 수있는 모든 제스처의 기초를 제공합니다. 핵심은 애드혹 개별 동작을 서로 연결하여 장치의 응용 프로그램에있는 요소에 적용하는 기능입니다. &lt;a href=&quot;http://webdriver.io/api/mobile/touchAction.html&quot;&gt;완전한 문서를 참조하십시오&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3163a1b2c475e8bcddc933e317814b442251938" translate="yes" xml:space="preserve">
          <source>The UI of your web application has interaction areas which can be shared across different tests. To avoid code duplication you can put common locators and methods in one place.</source>
          <target state="translated">웹 애플리케이션의 UI에는 여러 테스트에서 공유 할 수있는 상호 작용 영역이 있습니다. 코드 중복을 방지하기 위해 공통 로케이터와 메서드를 한 곳에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="369164e60e5eee81c94b4860b9f8307ff0c8642f" translate="yes" xml:space="preserve">
          <source>The following is a diagram of the CodeceptJS architecture:</source>
          <target state="translated">다음은 CodeceptJS 아키텍처의 다이어그램입니다.</target>
        </trans-unit>
        <trans-unit id="f50e4f76876708b934c2ac0dc3af15738a1bfc64" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mockRequest&lt;/code&gt; will be added to &lt;code&gt;I&lt;/code&gt; object. You can use it to explicitly define which requests to block and which response they should return instead:</source>
          <target state="translated">&lt;code&gt;mockRequest&lt;/code&gt; 함수 가 &lt;code&gt;I&lt;/code&gt; 객체에 추가됩니다 . 이를 사용하여 차단할 요청과 대신 반환해야하는 응답을 명시 적으로 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a17f4bfca15c256f6d52aa218d7718113978d172" translate="yes" xml:space="preserve">
          <source>The helper uses GraphQL mutations to store the built data and automatically clean them up after a test. This way for setting data for a test is as simple as writing:</source>
          <target state="translated">도우미는 GraphQL 변이를 사용하여 빌드 된 데이터를 저장하고 테스트 후 자동으로 정리합니다. 테스트 데이터를 설정하는이 방법은 다음과 같이 작성하는 것만 큼 간단합니다.</target>
        </trans-unit>
        <trans-unit id="996c7574ad48e1d2447f138442e5ace9e50b4d9d" translate="yes" xml:space="preserve">
          <source>The idea of story BDD can be narrowed to:</source>
          <target state="translated">스토리 BDD의 아이디어는 다음과 같이 좁힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62721d2e633cefe2bc9f9d6e352a599e4e9cc3df" translate="yes" xml:space="preserve">
          <source>The interactive shell can be started outside of test context by running &lt;code&gt;npx codeceptjs shell&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npx codeceptjs shell&lt;/code&gt; 을 실행하여 테스트 컨텍스트 외부에서 대화 형 셸을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ba21799d73141c4a2378db8dc797638b66ff696" translate="yes" xml:space="preserve">
          <source>The most efficient way would be to allow test to control its data, i.e. the 3rd option. However, accessing database directly is not a good idea as database vendor, schema and data are used by application internally and are out of scope of acceptance test.</source>
          <target state="translated">가장 효율적인 방법은 테스트가 데이터, 즉 세 번째 옵션을 제어하도록하는 것입니다. 그러나 데이터베이스 공급 업체, 스키마 및 데이터는 응용 프로그램에서 내부적으로 사용되며 허용 범위를 벗어나므로 데이터베이스에 직접 액세스하는 것은 좋지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb586497437367f06c08d6161ca37357b9de448c" translate="yes" xml:space="preserve">
          <source>The most general and common assertion is &lt;code&gt;see&lt;/code&gt;, which checks visilibility of a text on a page:</source>
          <target state="translated">가장 일반적이고 일반적인 주장은 &lt;code&gt;see&lt;/code&gt; 에있는 텍스트의 가시성을 확인하는 see입니다.</target>
        </trans-unit>
        <trans-unit id="6451a931e4d9909ce742793c54649a28a9cffaa2" translate="yes" xml:space="preserve">
          <source>The most general and common assertion is &lt;code&gt;see&lt;/code&gt;:</source>
          <target state="translated">가장 일반적이고 공통적 인 주장이있다 &lt;code&gt;see&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd267140c77c5263311dfb0511aaf730d67d2d9f" translate="yes" xml:space="preserve">
          <source>The object built by the factory is sent as the variables object along with the mutation. So make sure it matches the argument type as detailed in the GraphQL schema. You may want to pass a constructor to the factory to achieve that.</source>
          <target state="translated">팩토리에서 만든 객체는 변이와 함께 변수 객체로 전송됩니다. 따라서 GraphQL 스키마에 설명 된대로 인수 유형과 일치하는지 확인하십시오. 이를 위해 생성자를 팩토리에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bb1ed62767476c3b6f3cccf4eac8109df4c548b" translate="yes" xml:space="preserve">
          <source>The order of helpers is important! ApiDataFactory will clean up created users after a test, so it needs browser to be still opened to obtain its cookies.</source>
          <target state="translated">도우미의 순서가 중요합니다! ApiDataFactory는 테스트 후 생성 된 사용자를 정리하므로 쿠키를 얻으려면 브라우저를 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="f835919883c42f42e321068832ab318ce5dcb572" translate="yes" xml:space="preserve">
          <source>The output should be similar to this:</source>
          <target state="translated">출력은 다음과 유사해야합니다.</target>
        </trans-unit>
        <trans-unit id="32a9695194a96a58df511927cfeca5ba9802894a" translate="yes" xml:space="preserve">
          <source>The same can be done with GraphQLDataFactory.</source>
          <target state="translated">GraphQLDataFactory에서도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="f90c469dff798af96908a0a9d1f5caaa558c2a5d" translate="yes" xml:space="preserve">
          <source>The same code can be shared for web applications as well. To execute some code in web browser only, use &lt;code&gt;I.runInWeb&lt;/code&gt;:</source>
          <target state="translated">웹 애플리케이션에서도 동일한 코드를 공유 할 수 있습니다. 웹 브라우저에서만 일부 코드를 실행하려면 &lt;code&gt;I.runInWeb&lt;/code&gt; 을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="297de5b6285481a079ce32f45200c204a5b3a89f" translate="yes" xml:space="preserve">
          <source>The same is true for form fields: they can be searched by field name, label, and so on.</source>
          <target state="translated">양식 필드도 마찬가지입니다. 필드 이름, 레이블 등으로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b30c557ddaa3468d8c17c030b1b41534011fdbb" translate="yes" xml:space="preserve">
          <source>The same way you can also access &lt;code&gt;browser&lt;/code&gt; object to implement more actions or handle events.</source>
          <target state="translated">동일한 방법으로 &lt;code&gt;browser&lt;/code&gt; 개체에 액세스 하여 더 많은 작업을 구현하거나 이벤트를 처리 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb6e02cb66e1f6b02d779672dc1b962eda4bf74b" translate="yes" xml:space="preserve">
          <source>The same way you can also access &lt;code&gt;browser&lt;/code&gt; object to implement more actions or handle events. &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;Learn more about Helpers&lt;/a&gt; in the corresponding guide.</source>
          <target state="translated">&lt;code&gt;browser&lt;/code&gt; 객체에 액세스 하여 더 많은 작업을 구현하거나 이벤트를 처리 할 수도 있습니다 . 해당 안내서에서 &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;도우미&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="7f5a11892b6445e935912e6d04f0307abfb58c51" translate="yes" xml:space="preserve">
          <source>The same way you can also access &lt;code&gt;browser&lt;/code&gt; object to implement more actions or handle events. For instance, you want to set the permissions, you can approach it with:</source>
          <target state="translated">동일한 방법으로 &lt;code&gt;browser&lt;/code&gt; 개체에 액세스 하여 더 많은 작업을 구현하거나 이벤트를 처리 할 수도 있습니다 . 예를 들어 권한을 설정하려면 다음과 같이 접근 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a33d02ff1f25b4b25ac847f2e6b6b840547327df" translate="yes" xml:space="preserve">
          <source>The second parameter is a context (CSS or XPath locator) to narrow the search.</source>
          <target state="translated">두 번째 매개 변수는 검색 범위를 좁히기위한 컨텍스트 (CSS 또는 XPath 로케이터)입니다.</target>
        </trans-unit>
        <trans-unit id="a31335c50438edfb932d2915b8b40355dbf5c533" translate="yes" xml:space="preserve">
          <source>The second parameter is a context (id | type | accessibility id) to narrow the search.</source>
          <target state="translated">두 번째 매개 변수는 검색 범위를 좁히기위한 컨텍스트 (id | type | accessibility id)입니다.</target>
        </trans-unit>
        <trans-unit id="01737434983574b8e5ab93179b6a5b840b50bf01" translate="yes" xml:space="preserve">
          <source>The second parameter is a context element to narrow the search.</source>
          <target state="translated">두 번째 매개 변수는 검색 범위를 좁히는 컨텍스트 요소입니다.</target>
        </trans-unit>
        <trans-unit id="95d64fd731a82bd66e3e7131da7556f667749b7e" translate="yes" xml:space="preserve">
          <source>The similar test written in native syntax of Protractor (inherited from selenium-webdriver) would look like this:</source>
          <target state="translated">Protractor의 기본 구문 (셀레늄 웹 드라이버에서 상 속됨)으로 작성된 유사한 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="21822eecd05230cb62e477d1944311e1c31d67db" translate="yes" xml:space="preserve">
          <source>The standard and proved way to run browser test automation over years is Selenium WebDriver. Over years this technology was standartized and works over all popular browsers and operating systems. There are cloud services like SauceLabs or BrowserStack which allow executing such browsers in the cloud. The superset of WebDriver protocol is also used to test &lt;a href=&quot;https://codecept.io/mobile&quot;&gt;native and hybrid mobile applications&lt;/a&gt;.</source>
          <target state="translated">수년에 걸쳐 브라우저 테스트 자동화를 실행하는 표준 및 입증 된 방법은 Selenium WebDriver입니다. 수년에 걸쳐이 기술은 표준화되었으며 모든 인기있는 브라우저 및 운영 체제에서 작동합니다. 클라우드에서 이러한 브라우저를 실행할 수있는 SauceLabs 또는 BrowserStack과 같은 클라우드 서비스가 있습니다. WebDriver 프로토콜의 상위 집합은 &lt;a href=&quot;https://codecept.io/mobile&quot;&gt;기본 및 하이브리드 모바일 응용 프로그램&lt;/a&gt; 을 테스트하는데도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c00e3c7bfc5ea3e2783fb2a2dfc14d8a0aceb579" translate="yes" xml:space="preserve">
          <source>The ubiquitous language is always referred as &lt;em&gt;common&lt;/em&gt; language. That is it's main benefit. It is not a couple of our business specification's words, and not a couple of developer's technical terms. It is a common words and terms that can be understood by people for whom we are building the software and should be understood by developers. Establishing correct communication between this two groups people is vital for building successful project that will fit the domain and fulfill all business needs.</source>
          <target state="translated">유비쿼터스 언어는 항상 &lt;em&gt;공통&lt;/em&gt; 언어 라고 합니다. 그것이 주요 이점입니다. 이는 비즈니스 사양의 두 단어가 아니며 개발자의 기술 용어가 아닙니다. 소프트웨어를 개발하는 사람들이 이해할 수있는 일반적인 단어와 용어이며 개발자가 이해해야합니다. 이 두 그룹간에 올바른 의사 소통을 확립하는 것은 도메인에 적합하고 모든 비즈니스 요구를 충족시키는 성공적인 프로젝트를 구축하는 데 필수적입니다.</target>
        </trans-unit>
        <trans-unit id="dfb2b6ef6d0b9480226e4470da6dda201a3f0a6d" translate="yes" xml:space="preserve">
          <source>Then configure ApiDataHelper to match factories and REST API:</source>
          <target state="translated">그런 다음 팩토리 및 REST API와 일치하도록 ApiDataHelper를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="1626cd0728fd4ad2471fa2fe70a505a4087dbca2" translate="yes" xml:space="preserve">
          <source>Then configure GraphQLDataHelper to match factories and GraphQL schema:</source>
          <target state="translated">그런 다음 공장 및 GraphQL 스키마와 일치하도록 GraphQLDataHelper를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="82ad5e606ab96946347370a802d796f02991634f" translate="yes" xml:space="preserve">
          <source>Then create a module which will export a factory for an entity.</source>
          <target state="translated">그런 다음 엔티티의 팩토리를 내보낼 모듈을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="472a18d3620739a44a5b1763264bdd48acc51a89" translate="yes" xml:space="preserve">
          <source>Then create a module which will export a factory for an entity. And add that module as a part of the configuration for the helper.</source>
          <target state="translated">그런 다음 엔티티에 대한 팩토리를 내보낼 모듈을 만듭니다. 그리고 해당 모듈을 도우미 구성의 일부로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="d8349d8a3be095091f92e07c83f2b075a32f2eeb" translate="yes" xml:space="preserve">
          <source>Then inside a Helper you can access &lt;code&gt;Playwright&lt;/code&gt; helper of CodeceptJS. Let's say you want to create &lt;code&gt;I.grabDimensionsOfCurrentPage&lt;/code&gt; action. In this case you need to call &lt;code&gt;evaluate&lt;/code&gt; method of &lt;code&gt;page&lt;/code&gt; object</source>
          <target state="translated">그런 다음 도우미 내에서 CodeceptJS의 &lt;code&gt;Playwright&lt;/code&gt; 도우미에 액세스 할 수 있습니다 . &lt;code&gt;I.grabDimensionsOfCurrentPage&lt;/code&gt; 작업 을 생성한다고 가정 해 보겠습니다 . 이 경우 &lt;code&gt;page&lt;/code&gt; 객체의 &lt;code&gt;evaluate&lt;/code&gt; 메소드 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d04e975876bde4dc99ada01737a1886fcdd6fd33" translate="yes" xml:space="preserve">
          <source>Then inside a Helper you can access &lt;code&gt;Puppeteer&lt;/code&gt; helper of CodeceptJS. Let's say you want to create &lt;code&gt;I.renderPageToPdf&lt;/code&gt; action. In this case you need to call &lt;code&gt;pdf&lt;/code&gt; method of &lt;code&gt;page&lt;/code&gt; object</source>
          <target state="translated">그런 다음 도우미 내부에서 CodeceptJS의 &lt;code&gt;Puppeteer&lt;/code&gt; 도우미에 액세스 할 수 있습니다 . &lt;code&gt;I.renderPageToPdf&lt;/code&gt; 조치 를 작성한다고 가정하십시오 . 이 경우 &lt;code&gt;page&lt;/code&gt; 객체의 &lt;code&gt;pdf&lt;/code&gt; 메소드 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="dcbea797e5a4a4a25507c16ec3990b282b42570c" translate="yes" xml:space="preserve">
          <source>Then inside a test import a comment function from a plugin. For instance, you can prepare Given/When/Then functions to use them inside tests:</source>
          <target state="translated">그런 다음 테스트 내에서 플러그인에서 주석 기능을 가져옵니다. 예를 들어 Given / When / Then 함수를 준비하여 테스트 내에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dac1ec98baf75521016d7fe4b46d6ebdb5eaa0f" translate="yes" xml:space="preserve">
          <source>Then tests can be executed using &lt;code&gt;run-multiple&lt;/code&gt; command.</source>
          <target state="translated">그런 다음 &lt;code&gt;run-multiple&lt;/code&gt; 명령을 사용하여 테스트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b07fa5c8069c5be64a66f3d4234c1cf42973600" translate="yes" xml:space="preserve">
          <source>Then tests with failure will have screenshots.</source>
          <target state="translated">그런 다음 실패한 테스트에는 스크린 샷이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ced7ce868e1f8b9e3a3fec4cfdf6a2e4073d77e3" translate="yes" xml:space="preserve">
          <source>Then to execute them use run-multiple command passing configured suite, which is parallel in this example:</source>
          <target state="translated">그런 다음 실행 예제를 실행하는 run-multiple 명령 전달 구성된 스위트를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="59a52e66d3871ba0d11ebd12c311f8d61c173386" translate="yes" xml:space="preserve">
          <source>Then you need to add this helper to your &lt;code&gt;codecept.conf.js&lt;/code&gt; like in this &lt;a href=&quot;https://codecept.io/helpers/#configuration&quot;&gt;docs (opens new window)&lt;/a&gt;. And then run the command &lt;code&gt;npx codeceptjs def&lt;/code&gt;.</source>
          <target state="translated">그런 다음 이 &lt;a href=&quot;https://codecept.io/helpers/#configuration&quot;&gt;문서&lt;/a&gt; 와 같이 &lt;code&gt;codecept.conf.js&lt;/code&gt; 에이 도우미를 추가해야합니다 (새 창 열기 ) . 그런 다음 &lt;code&gt;npx codeceptjs def&lt;/code&gt; 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fc63de61e30fe7786a7c38d788176106750506a" translate="yes" xml:space="preserve">
          <source>Then you need to initialize a project, selecting TestCafe when asked:</source>
          <target state="translated">그런 다음 요청이있을 때 TestCafe를 선택하여 프로젝트를 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0bba0788f0cd22006371a2be0cb04db1b44b8eca" translate="yes" xml:space="preserve">
          <source>Then you need to prepare application for execution. It should be packed into apk (for Android) or .ipa (for iOS) or zip.</source>
          <target state="translated">그런 다음 응용 프로그램을 실행할 준비를해야합니다. apk (Android) 또는 .ipa (iOS) 또는 zip으로 압축해야합니다.</target>
        </trans-unit>
        <trans-unit id="5166231d1f44bbd29f0386fd8ecf26ce3ff0dec9" translate="yes" xml:space="preserve">
          <source>Then(); projectPage.open(projectId); I.see('new title', 'h1'); });</source>
          <target state="translated">그때(); projectPage.open (projectId); I.see ( '새 제목', 'h1'); });</target>
        </trans-unit>
        <trans-unit id="d001f9befe93533e211c8c089ad8719e2cb522d4" translate="yes" xml:space="preserve">
          <source>Then, calling &lt;code&gt;I.have('user')&lt;/code&gt; inside a test will create a new user for you. This is done by sending POST request to &lt;code&gt;/api/users&lt;/code&gt; URL. Response is returned and can be used in tests.</source>
          <target state="translated">그런 다음 테스트 내에서 &lt;code&gt;I.have('user')&lt;/code&gt; 를 호출 하면 새로운 사용자가 만들어집니다. POST 요청을 &lt;code&gt;/api/users&lt;/code&gt; URL 로 보내면 됩니다. 응답이 반환되고 테스트에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1529a1589398a2c9b64d247d86d46961de1bd2dc" translate="yes" xml:space="preserve">
          <source>Then, calling &lt;code&gt;I.mutateData('createUser')&lt;/code&gt; inside a test will create a new user for you. This is done by sending a GraphQL mutation request over Http to &lt;code&gt;/graphql&lt;/code&gt; endpoint. Response is returned and can be used in tests.</source>
          <target state="translated">그런 다음 테스트 내에서 &lt;code&gt;I.mutateData('createUser')&lt;/code&gt; 를 호출 하면 새 사용자가 생성됩니다. 이는 Http를 통해 &lt;code&gt;/graphql&lt;/code&gt; 엔드 포인트에 GraphQL 변형 요청을 전송하여 수행됩니다 . 응답이 반환되며 테스트에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee3d6af2e36b2faab8eb2d1312a7e8505d00ec37" translate="yes" xml:space="preserve">
          <source>There are also &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities&quot;&gt;browser and platform specific capabilities (opens new window)&lt;/a&gt;. Services like SauceLabs, BrowserStack or browser vendors can provide their own specific capabilities for more tuning.</source>
          <target state="translated">도 있습니다 &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities&quot;&gt;브라우저 및 플랫폼 특정 기능 (새 창을 엽니 다)&lt;/a&gt; . SauceLabs, BrowserStack 또는 브라우저 공급 업체와 같은 서비스는 더 많은 조정을 위해 고유 한 특정 기능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="886d107ce2677c96a17122673fc769d56dc9d551" translate="yes" xml:space="preserve">
          <source>There are different ways to define bootstrap and teardown functions:</source>
          <target state="translated">부트 스트랩 및 테어 다운 기능을 정의하는 방법에는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe1fee044950c42195a6bbb794e1806a985efcad" translate="yes" xml:space="preserve">
          <source>There are few public API methods which can be accessed from other plugins.</source>
          <target state="translated">다른 플러그인에서 액세스 할 수있는 공개 API 메소드는 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="30ad69df407e2991e7143e7d2d97406284c266db" translate="yes" xml:space="preserve">
          <source>There are following options available:</source>
          <target state="translated">다음과 같은 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ab0062d589deac8948bc116f1075f80ac953a79" translate="yes" xml:space="preserve">
          <source>There are mobile-only methods like:</source>
          <target state="translated">다음과 같은 모바일 전용 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="21bc44a8ff6c076290ddb77e9fde639d9bd1e507" translate="yes" xml:space="preserve">
          <source>There is a simple way to add additional comments to your test scenario. Use &lt;code&gt;say&lt;/code&gt; command to print information to screen:</source>
          <target state="translated">테스트 시나리오에 주석을 추가하는 간단한 방법이 있습니다. &lt;code&gt;say&lt;/code&gt; 명령을 사용 하여 정보를 화면에 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="8244170e5cbd276880f3ae206e7e52defd9d16ae" translate="yes" xml:space="preserve">
          <source>There is a simple way to add additional comments to your test scenario: Use the &lt;code&gt;say&lt;/code&gt; command to print information to screen:</source>
          <target state="translated">테스트 시나리오에 주석을 추가하는 간단한 방법이 있습니다. &lt;code&gt;say&lt;/code&gt; 명령을 사용하여 정보를 화면에 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="741ed77d944c6e548003536938b36c33faae6acd" translate="yes" xml:space="preserve">
          <source>There is a way to execute unsuccessful actions to without failing a test. This might be useful when you might need to click &quot;Accept cookie&quot; button but probably cookies were already accepted. To handle these cases &lt;code&gt;tryTo&lt;/code&gt; function was introduced:</source>
          <target state="translated">테스트에 실패하지 않고 실패한 작업을 실행하는 방법이 있습니다. &quot;쿠키 허용&quot;버튼을 클릭해야하지만 쿠키가 이미 승인되었을 때 유용 할 수 있습니다. 이러한 경우를 처리하기 위해 &lt;code&gt;tryTo&lt;/code&gt; 함수가 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="a151df5297554c3ddcdcfcf19ccd15a9caf8cad4" translate="yes" xml:space="preserve">
          <source>There is a way to list all tests and their steps without actually executing them. Execute tests in &lt;code&gt;dry-run&lt;/code&gt; mode to see all available tests:</source>
          <target state="translated">실제로 실행하지 않고 모든 테스트와 단계를 나열하는 방법이 있습니다. 드라 이런 모드 에서 테스트를 &lt;code&gt;dry-run&lt;/code&gt; 하여 사용 가능한 모든 테스트를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9d566001e452b689c3cecc45aef2131a100cc26c" translate="yes" xml:space="preserve">
          <source>There is no magic in testing of AngularJS application in CodeceptJS. You just execute regular Protractor commands, packaged into a simple, high-level API.</source>
          <target state="translated">CodeceptJS에서 AngularJS 애플리케이션 테스트에는 마법이 없습니다. 간단한 고수준 API에 패키지 된 일반 각도기 명령을 실행하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4f47904294169120cbb1afb2131fd41c1aa9df34" translate="yes" xml:space="preserve">
          <source>These helpers build data according to defined rules and use REST API or GraphQL mutations to store them and automatically clean them up after a test.</source>
          <target state="translated">이러한 도우미는 정의 된 규칙에 따라 데이터를 빌드하고 REST API 또는 GraphQL 변형을 사용하여이를 저장하고 테스트 후 자동으로 정리합니다.</target>
        </trans-unit>
        <trans-unit id="72b9e97f7810d40b3bafb1e9390a03684e6047c2" translate="yes" xml:space="preserve">
          <source>These objects can now be retrieved by the name specified in the configuration.</source>
          <target state="translated">이제 이러한 개체는 구성에 지정된 이름으로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="428e1134da804eeda54e0c42e80eb943ad39f7f0" translate="yes" xml:space="preserve">
          <source>This Helper uses &lt;a href=&quot;https://codecept.io/helpers/GraphQL/&quot;&gt;GraphQL (opens new window)&lt;/a&gt; helper and accepts its configuration in &quot;GraphQL&quot; section. For instance, to set timeout you should add:</source>
          <target state="translated">이 도우미는 &lt;a href=&quot;https://codecept.io/helpers/GraphQL/&quot;&gt;GraphQL (새 창에서 열림)&lt;/a&gt; 도우미를 사용하고 &quot;GraphQL&quot;섹션에서 구성을 수락합니다. 예를 들어 시간 제한을 설정하려면 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="5186782edac8c1b55c6773c5ab2c05ac6d5fca81" translate="yes" xml:space="preserve">
          <source>This Helper uses &lt;a href=&quot;https://codecept.io/helpers/REST/&quot;&gt;REST (opens new window)&lt;/a&gt; helper and accepts its configuration in &quot;REST&quot; section. For instance, to set timeout you should add:</source>
          <target state="translated">이 도우미는 &lt;a href=&quot;https://codecept.io/helpers/REST/&quot;&gt;REST (새 창&lt;/a&gt; 열기 ) 도우미를 사용하고 &quot;REST&quot;섹션에서 해당 구성을 수락합니다. 예를 들어 시간 제한을 설정하려면 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="6913f6a5fca5a91e42516c70feb17807829caeb8" translate="yes" xml:space="preserve">
          <source>This Helper uses &lt;a href=&quot;https://codecept.io/helpers/REST/&quot;&gt;REST&lt;/a&gt; helper and accepts its configuration in &quot;REST&quot; section. So, in order to set default headers or timeout you should add:</source>
          <target state="translated">이 헬퍼는 &lt;a href=&quot;https://codecept.io/helpers/REST/&quot;&gt;REST&lt;/a&gt; 헬퍼를 사용 하고 &quot;REST&quot;섹션에서 해당 구성을 승인합니다. 따라서 기본 헤더 또는 시간 초과를 설정하려면 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="41287ed8b53bd169bbf16788d4c719d0703d5e99" translate="yes" xml:space="preserve">
          <source>This action supports &lt;a href=&quot;https://codecept.io/react#locators&quot;&gt;React locators (opens new window)&lt;/a&gt;</source>
          <target state="translated">이 작업은 &lt;a href=&quot;https://codecept.io/react#locators&quot;&gt;React 로케이터를&lt;/a&gt; 지원합니다 (새 창에서 열림).</target>
        </trans-unit>
        <trans-unit id="31f60d330f6c7015ec91647dcd80f15f51d7aec6" translate="yes" xml:space="preserve">
          <source>This also enables localized method names for actor object.</source>
          <target state="translated">또한 액터 오브젝트에 대해 지역화 된 메소드 이름을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5afe6ba27fa86e2dd1473f62bdcf3aea58c40b72" translate="yes" xml:space="preserve">
          <source>This behavior can be configured with following options:</source>
          <target state="translated">이 동작은 다음 옵션으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d61d6f09f1365d31eb0521e13a97b3401b0b22a" translate="yes" xml:space="preserve">
          <source>This can also be used to emulate Ajax requests:</source>
          <target state="translated">이것은 또한 Ajax 요청을 에뮬레이트하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c042c27fca5f5c4fafbdd654199ffce11f503f2" translate="yes" xml:space="preserve">
          <source>This can be done inside a helper using the global &lt;a href=&quot;https://codecept.io/hooks/#api&quot;&gt;promise recorder&lt;/a&gt;:</source>
          <target state="translated">글로벌 &lt;a href=&quot;https://codecept.io/hooks/#api&quot;&gt;약속 레코더를&lt;/a&gt; 사용하여 도우미 내부에서 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6a9243d6be87dd0e39640753e81dca777e5f943" translate="yes" xml:space="preserve">
          <source>This can be used to keep state between steps:</source>
          <target state="translated">단계간에 상태를 유지하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c7de9ee8ab9642e3e71f92abc71a8d687659c72" translate="yes" xml:space="preserve">
          <source>This chapter describes data management for external sources. If you are looking for using Data Sets in tests, see &lt;a href=&quot;https://codecept.io/advanced/#data-drivern-tests&quot;&gt;Data Driven Tests (opens new window)&lt;/a&gt; section*</source>
          <target state="translated">이 장에서는 외부 소스에 대한 데이터 관리에 대해 설명합니다. 테스트에서 데이터 세트를 사용하려는 경우 &lt;a href=&quot;https://codecept.io/advanced/#data-drivern-tests&quot;&gt;데이터 기반 테스트 (새 창에서 열림)&lt;/a&gt; 섹션 *을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="95aaa285451b24d0eff26b7c32227c7be369f918" translate="yes" xml:space="preserve">
          <source>This command generates a basic helper and appends it to &lt;code&gt;helpers&lt;/code&gt; section of config file:</source>
          <target state="translated">이 명령은 기본 도우미를 생성하여 구성 파일의 &lt;code&gt;helpers&lt;/code&gt; 섹션에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="b385a3bfe9445f95d96eb0207079a41d5e3f641e" translate="yes" xml:space="preserve">
          <source>This command generates a basic helper, append it to &lt;code&gt;helpers&lt;/code&gt; section of config file:</source>
          <target state="translated">이 명령은 기본 도우미를 생성하고 구성 파일의 &lt;code&gt;helpers&lt;/code&gt; 섹션에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="488c0e1a57a6dfdc4eb25b3d25dbfd760463f4e3" translate="yes" xml:space="preserve">
          <source>This command is a wrapper for &lt;code&gt;codecept run --steps&lt;/code&gt;. You can use the &lt;a href=&quot;https://codecept.io/commands#run&quot;&gt;Run arguments and options&lt;/a&gt; here.</source>
          <target state="translated">이 명령은 &lt;code&gt;codecept run --steps&lt;/code&gt; 의 래퍼입니다 . 여기 에서 &lt;a href=&quot;https://codecept.io/commands#run&quot;&gt;Run 인수 및 옵션을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a0c0567430b801351b64db84fb14337a5bccfc2" translate="yes" xml:space="preserve">
          <source>This command is a wrapper for &lt;code&gt;codecept run-workers 2&lt;/code&gt;. You can use the &lt;a href=&quot;https://codecept.io/commands#run-workers&quot;&gt;Run arguments and options&lt;/a&gt; here.</source>
          <target state="translated">이 명령은 &lt;code&gt;codecept run-workers 2&lt;/code&gt; 용 래퍼입니다 . 여기 에서 &lt;a href=&quot;https://codecept.io/commands#run-workers&quot;&gt;Run 인수 및 옵션을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dee791bcbdc88c6baf56073626d7a8c3dbca03a7" translate="yes" xml:space="preserve">
          <source>This command is similar to &lt;code&gt;run&lt;/code&gt;, however, steps output can't be shown in workers mode, as it is impossible to synchronize steps output from different processes.</source>
          <target state="translated">이 명령은 &lt;code&gt;run&lt;/code&gt; 과 유사 하지만 다른 프로세스의 단계 출력을 동기화 할 수 없기 때문에 작업자 모드에서 단계 출력을 표시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a3e5a039b7d7dccc484243121b0a63525e085810" translate="yes" xml:space="preserve">
          <source>This concept is extended by &lt;a href=&quot;https://codecept.io/helpers/ApiDataFactory/&quot;&gt;ApiDataFactory&lt;/a&gt; helper. It builds data according to defined rules and uses API to store them and automatically clean them up after a test, This way setting data for a test is as simple as writing:</source>
          <target state="translated">이 개념은 &lt;a href=&quot;https://codecept.io/helpers/ApiDataFactory/&quot;&gt;ApiDataFactory&lt;/a&gt; 헬퍼에 의해 확장됩니다 . 정의 된 규칙에 따라 데이터를 작성하고 API를 사용하여이를 저장하고 테스트 후에 자동으로 정리합니다.이 방법으로 테스트에 대한 데이터 설정은 작성하는 것만 큼 간단합니다.</target>
        </trans-unit>
        <trans-unit id="012d865063f816993ba225a715704c70dcae8b26" translate="yes" xml:space="preserve">
          <source>This concept is extended by:</source>
          <target state="translated">이 개념은 다음으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="d36a9e8b31251ba3fe6f7a2a9798358ed3f3e615" translate="yes" xml:space="preserve">
          <source>This example is &lt;a href=&quot;https://github.com/DavertMik/codeceptjs-angular-todomvc&quot;&gt;available on GitHub (opens new window)&lt;/a&gt;.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;https://github.com/DavertMik/codeceptjs-angular-todomvc&quot;&gt;GitHub (새 창에서 열림&lt;/a&gt; )에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f17a4bb2aaf142defa278f9dba00fab6f4efb2f8" translate="yes" xml:space="preserve">
          <source>This helper allows to &lt;strong&gt;mock requests while running tests in Puppeteer or WebDriver&lt;/strong&gt;. For instance, you can block calls to 3rd-party services like Google Analytics, CDNs. Another way of using is to emulate requests from server by passing prepared data.</source>
          <target state="translated">이 도우미를 사용하면 &lt;strong&gt;Puppeteer 또는 WebDriver에서 테스트를 실행하는 동안 요청&lt;/strong&gt; 을 &lt;strong&gt;모의&lt;/strong&gt; 할 수 있습니다 . 예를 들어 Google Analytics, CDN과 같은 타사 서비스에 대한 호출을 차단할 수 있습니다. 또 다른 사용 방법은 준비된 데이터를 전달하여 서버의 요청을 에뮬레이트하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3e9991faf1d5c5f019d7b1be4ab97290bc419d3e" translate="yes" xml:space="preserve">
          <source>This helper partially works with WebDriver. It can intercept and mock requests &lt;strong&gt;only on already loaded page&lt;/strong&gt;.</source>
          <target state="translated">이 도우미는 WebDriver에서 부분적으로 작동합니다. &lt;strong&gt;이미로드 된 페이지에서만&lt;/strong&gt; 요청을 가로 채고 모의 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fe9d34c56927d006bdf186d436d0bac003bdc29" translate="yes" xml:space="preserve">
          <source>This helper should be configured in codecept.json</source>
          <target state="translated">이 도우미는 codecept.json에서 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="90aeec2fcc0c8d0451f84c6c8f5db04dd4ce588b" translate="yes" xml:space="preserve">
          <source>This helper should be configured in codecept.json or codecept.conf.js</source>
          <target state="translated">이 도우미는 codecept.json 또는 codecept.conf.js에서 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4e6633a9115a0553c0108898e3f567fc971be3d" translate="yes" xml:space="preserve">
          <source>This helper solves this problem. If a web application has GraphQL support, it can be used to create and delete test records. By combining GraphQL with Factories you can easily create records for tests:</source>
          <target state="translated">이 도우미는이 문제를 해결합니다. 웹 애플리케이션에 GraphQL 지원이있는 경우 테스트 레코드를 생성하고 삭제하는 데 사용할 수 있습니다. GraphQL을 팩토리와 결합하면 테스트를위한 레코드를 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d268688c213c8ece4be450b6ca19c03fb9511d61" translate="yes" xml:space="preserve">
          <source>This helper solves this problem. Most of web application have API, and it can be used to create and delete test records. By combining REST API with Factories you can easily create records for tests:</source>
          <target state="translated">이 도우미는이 문제를 해결합니다. 대부분의 웹 응용 프로그램에는 API가 있으며 테스트 레코드를 만들고 삭제하는 데 사용할 수 있습니다. REST API를 팩토리와 결합하면 테스트 레코드를 쉽게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14e7301456eb6bcfec0527bf7e3d920ab87a41c2" translate="yes" xml:space="preserve">
          <source>This helper uses REST API to store the built data and automatically clean them up after a test, The way for setting data for a test is as simple as writing:</source>
          <target state="translated">이 도우미는 REST API를 사용하여 빌드 된 데이터를 저장하고 테스트 후 자동으로 정리합니다. 테스트 데이터를 설정하는 방법은 다음과 같이 작성하는 것만 큼 간단합니다.</target>
        </trans-unit>
        <trans-unit id="49385fdef69a4f4640c9c5434fe7132fed15c3d8" translate="yes" xml:space="preserve">
          <source>This helper works with a browser out of the box with no additional tools required to install.</source>
          <target state="translated">이 도우미는 설치에 필요한 추가 도구없이 브라우저에서 즉시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e8e7e3d96883016042e9f3abc62018e4928a8ae9" translate="yes" xml:space="preserve">
          <source>This image comes with the necessary dependencies and packages to execute CodeceptJS tests. Mount in your CodeceptJS config directory into the &lt;code&gt;/tests&lt;/code&gt; directory in the docker container.</source>
          <target state="translated">이 이미지는 CodeceptJS 테스트를 실행하는 데 필요한 종속성 및 패키지와 함께 제공됩니다. CodeceptJS 구성 디렉토리 에서 docker 컨테이너 의 &lt;code&gt;/tests&lt;/code&gt; 디렉토리에 마운트하십시오 .</target>
        </trans-unit>
        <trans-unit id="693b9372d48e692af54307532ad38bb73190d369" translate="yes" xml:space="preserve">
          <source>This is a work in progress but you can control two browsers at a time right out of the box. Individual control is something that is planned for a later version.</source>
          <target state="translated">이 작업은 진행 중이지만 즉시 한 번에 두 개의 브라우저를 제어 할 수 있습니다. 개별 제어는 이후 버전을 위해 계획된 것입니다.</target>
        </trans-unit>
        <trans-unit id="7f63ca52990cbfa65eed032bc4b365e184fb22b0" translate="yes" xml:space="preserve">
          <source>This is a wrapper on top of &lt;a href=&quot;https://github.com/wix/Detox&quot;&gt;Detox (opens new window)&lt;/a&gt; library, aimied to unify testing experience for CodeceptJS framework. Detox provides a grey box testing for mobile applications, playing especially good for React Native apps.</source>
          <target state="translated">이것은 CodeceptJS 프레임 워크에 대한 테스트 경험을 통합하는 것과 유사한 &lt;a href=&quot;https://github.com/wix/Detox&quot;&gt;Detox (새 창에서 열림)&lt;/a&gt; 라이브러리 위에있는 래퍼입니다 . Detox는 모바일 애플리케이션에 대한 회색 상자 테스트를 제공하며 특히 React Native 앱에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="ae5aa27faaf98e955484f545e7ce20d1c471f26e" translate="yes" xml:space="preserve">
          <source>This is especially useful while writing a new scratch. After opening a page call &lt;code&gt;pause()&lt;/code&gt; to start interacting with a page:</source>
          <target state="translated">이것은 새로운 스크래치를 쓰는 동안 특히 유용합니다. 페이지를 연 후 &lt;code&gt;pause()&lt;/code&gt; 를 호출 하여 페이지와 상호 작용을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a82a1627e563ecf486ddacd07380b7804bae8e99" translate="yes" xml:space="preserve">
          <source>This is how we can check that login form of a simple web application works. At first we opened &lt;code&gt;/login&lt;/code&gt; page, then filled forms and in the end we saw the greetings text.</source>
          <target state="translated">간단한 웹 응용 프로그램의 로그인 양식이 작동하는지 확인할 수 있습니다. 처음에 &lt;code&gt;/login&lt;/code&gt; 페이지를 연 다음 양식을 채우고 결국 인사말 텍스트를 보았습니다.</target>
        </trans-unit>
        <trans-unit id="b4fc848e78da33625b5580ea2409fe5cafeb572e" translate="yes" xml:space="preserve">
          <source>This is how we described the initial conditions. Next, we perform some action. We use &lt;strong&gt;When&lt;/strong&gt; keyword for it:</source>
          <target state="translated">이것이 우리가 초기 조건을 묘사 한 방법입니다. 다음으로 몇 가지 조치를 수행합니다. 우리는 &lt;strong&gt;때&lt;/strong&gt; 사용&lt;strong&gt;&lt;/strong&gt; 키워드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="640fee89bcd023ff4d43a3ce0e8ae1003555389a" translate="yes" xml:space="preserve">
          <source>This is just enough to run a test, open a browser, and think what to do next to write a test case.</source>
          <target state="translated">이것은 테스트를 실행하고 브라우저를 열고 테스트 케이스를 작성하기 위해 다음에해야 할 일을 생각하기에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="c49c266e560f5a3ed42270339184d20a4ad666a2" translate="yes" xml:space="preserve">
          <source>This is the recommended way to implement all custom logic using low-level Protractor syntax in order to reuse it inside of test scenarios. For more information, see an &lt;a href=&quot;https://codecept.io/helpers/#protractor-example&quot;&gt;example of such a helper (opens new window)&lt;/a&gt;.</source>
          <target state="translated">이는 테스트 시나리오 내에서 재사용하기 위해 저수준 각도기 구문을 사용하여 모든 사용자 지정 논리를 구현하는 데 권장되는 방법입니다. 자세한 내용 &lt;a href=&quot;https://codecept.io/helpers/#protractor-example&quot;&gt;은 이러한 도우미의 예 (새 창에서 열림)를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a34a24d7996350334e0d38098267bc12b1e245b" translate="yes" xml:space="preserve">
          <source>This is useful if you want to execute same tests but on different browsers and with different configurations or different tests on same browsers in parallel.</source>
          <target state="translated">이는 동일한 테스트를 실행하지만 다른 브라우저에서, 동일한 브라우저에서 다른 구성 또는 다른 테스트를 병렬로 실행하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9fe781d62786b685507c2e1b0e49caf42baf32e8" translate="yes" xml:space="preserve">
          <source>This is very smart idea. But to use TestCafe on daily basis you need to clearly understand its benefits and limitations:</source>
          <target state="translated">이것은 매우 현명한 아이디어입니다. 그러나 TestCafe를 매일 사용하려면 장점과 한계를 명확하게 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="8114fea1026c85d180ad85100e4a14b4c3610a1e" translate="yes" xml:space="preserve">
          <source>This launches interactive console where you can call actions of &lt;code&gt;I&lt;/code&gt; object.</source>
          <target state="translated">그러면 &lt;code&gt;I&lt;/code&gt; 오브젝트의 조치를 호출 할 수있는 대화식 콘솔이 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="305fbbd698c9e98614b5ff83c4e818076388497e" translate="yes" xml:space="preserve">
          <source>This launches the interactive console where you can call any action from the &lt;code&gt;I&lt;/code&gt; object.</source>
          <target state="translated">그러면 &lt;code&gt;I&lt;/code&gt; 개체 에서 모든 작업을 호출 할 수있는 대화 형 콘솔이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="8640e784f2a247192307026a8c32632b9e5307ce" translate="yes" xml:space="preserve">
          <source>This method is &lt;strong&gt;deprecated&lt;/strong&gt;.</source>
          <target state="translated">이 메서드는 &lt;strong&gt;더 이상 사용되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f9b83b62f695a585d0f56ec348c37388845bad59" translate="yes" xml:space="preserve">
          <source>This method return promise with array of IDs of found elements. Actual elements can be accessed inside &lt;code&gt;evaluate&lt;/code&gt; by using &lt;code&gt;codeceptjs.fetchElement()&lt;/code&gt; client-side function:</source>
          <target state="translated">이 메소드는 발견 된 요소의 ID 배열로 약속을 리턴합니다. &lt;code&gt;codeceptjs.fetchElement()&lt;/code&gt; 클라이언트 측 함수 를 사용하여 &lt;code&gt;evaluate&lt;/code&gt; 내에서 실제 요소에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78ff19fbe184de9d6618ecb15b5895bbec16b2ab" translate="yes" xml:space="preserve">
          <source>This plugin &lt;strong&gt;requires Docker&lt;/strong&gt; to be installed.</source>
          <target state="translated">이 플러그인을 사용 &lt;strong&gt;하려면 Docker&lt;/strong&gt; 를 설치 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d9f1e4ad06454d0bb9b6bcd2031a37d45f25680e" translate="yes" xml:space="preserve">
          <source>This plugin allows to record and save video per each executed tests.</source>
          <target state="translated">이 플러그인을 사용하면 실행 된 각 테스트별로 비디오를 녹화하고 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6f5cc6a8f99a7d4e982c1f24cc5725d25a1c834" translate="yes" xml:space="preserve">
          <source>This plugin allows to run webdriverio services like:</source>
          <target state="translated">이 플러그인을 사용하면 다음과 같은 webdriverio 서비스를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85f65c7acb1660fa4ee1dfa0ca1626ce88c32299" translate="yes" xml:space="preserve">
          <source>This plugin allows to slow down tests execution when a test running too fast. It puts a tiny delay for before and after action commands.</source>
          <target state="translated">이 플러그인을 사용하면 테스트가 너무 빨리 실행될 때 테스트 실행 속도를 늦출 수 있습니다. 동작 명령 전후에 약간의 지연이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fc8a0999cca3e15d5797262daf239f18b5f528c8" translate="yes" xml:space="preserve">
          <source>This plugin can be disabled per test. In this case you will need to stet &lt;code&gt;I.retry()&lt;/code&gt; to all flaky steps:</source>
          <target state="translated">이 플러그인은 테스트별로 비활성화 할 수 있습니다. 이 경우 &lt;code&gt;I.retry()&lt;/code&gt; 를 모든 비정상적인 단계로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d2a0cb1f807d7b47c74d7b402ef6f8a5e1bf757" translate="yes" xml:space="preserve">
          <source>This plugin can be used</source>
          <target state="translated">이 플러그인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="815e01b007f3f5c9fd9c1b0b0f32e8cbeafa3c0e" translate="yes" xml:space="preserve">
          <source>This plugin is &lt;strong&gt;enabled by default&lt;/strong&gt;.</source>
          <target state="translated">이 플러그인은 &lt;strong&gt;기본적으로 활성화되어&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="58e203fef09c7b5e4ac99e2b45ee03864e830dff" translate="yes" xml:space="preserve">
          <source>This plugin is very basic so it's recommended to improve it to match your custom needs.</source>
          <target state="translated">이 플러그인은 매우 기본적이므로 사용자 정의 요구에 맞게 개선하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4cbbc26781e8560d9af5a2f6850bc6cca1992b0b" translate="yes" xml:space="preserve">
          <source>This plugin requires some configuration but is very simple in use:</source>
          <target state="translated">이 플러그인은 몇 가지 구성이 필요하지만 사용이 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="f6a3b222ee6fbcf879d209d1b3cf8e11eafa6b92" translate="yes" xml:space="preserve">
          <source>This plugin requires two options: locator prefix and actual attribute to match.</source>
          <target state="translated">이 플러그인에는 로케이터 접두사와 일치시킬 실제 속성의 두 가지 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c5c9eb0b0802df498781c4f9967e4c4a14d91b8a" translate="yes" xml:space="preserve">
          <source>This plugin will create a valid XPath locator for you.</source>
          <target state="translated">이 플러그인은 유효한 XPath 로케이터를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3064ffa320d13b40a656377d2231749ee91563de" translate="yes" xml:space="preserve">
          <source>This provides use with output:</source>
          <target state="translated">출력과 함께 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6d563a209391db9676bec1f114d9761da7217ca1" translate="yes" xml:space="preserve">
          <source>This requires &lt;code&gt;./data.js&lt;/code&gt; module and assigns it to &lt;code&gt;Data&lt;/code&gt; argument in a test.</source>
          <target state="translated">여기에는 &lt;code&gt;./data.js&lt;/code&gt; 모듈 이 필요 하며 테스트에서 &lt;code&gt;Data&lt;/code&gt; 인수에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="51af69de4d872885141002ac582a20c987ff1a98" translate="yes" xml:space="preserve">
          <source>This requires &lt;code&gt;@codeceptjs/configure&lt;/code&gt; package to be installed.</source>
          <target state="translated">이를 위해서는 &lt;code&gt;@codeceptjs/configure&lt;/code&gt; 패키지를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="d87fef17ab7d0002efc3fa21eb79dcbdbc56775c" translate="yes" xml:space="preserve">
          <source>This requires the &lt;code&gt;./data.js&lt;/code&gt; module and assigns it to a &lt;code&gt;Data&lt;/code&gt; argument in a test.</source>
          <target state="translated">이를 위해서는 &lt;code&gt;./data.js&lt;/code&gt; 모듈 이 필요하며 이를 테스트 의 &lt;code&gt;Data&lt;/code&gt; 인수에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="ffa1cf782b4598dafaa487dbdcb0037135516e3e" translate="yes" xml:space="preserve">
          <source>This sample assertion used &lt;code&gt;_locate&lt;/code&gt; helper method which searched for elements by CSS/XPath or a strict locator. Then &lt;code&gt;browser.evaluate&lt;/code&gt; method was called to use locate found elements on a page and return attribute from the first of them.</source>
          <target state="translated">이 샘플 어설 션 은 CSS / XPath 또는 엄격한 로케이터로 요소를 검색 하는 &lt;code&gt;_locate&lt;/code&gt; 도우미 메소드를 사용 했습니다 . 그런 다음 &lt;code&gt;browser.evaluate&lt;/code&gt; 메소드가 호출되어 페이지에서 찾은 요소를 찾고 첫 번째 요소에서 속성을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3c123974910057a1aa1899f129426be904b7da36" translate="yes" xml:space="preserve">
          <source>This scenario will be restarted two times on a failure.</source>
          <target state="translated">이 시나리오는 실패시 두 번 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="1fc1adcb102b4d4b4a2c7b8dfb114764c0867c04" translate="yes" xml:space="preserve">
          <source>This scenario will be restarted two times on a failure. Unlike retry step, there is no &lt;code&gt;when&lt;/code&gt; condition supported for retries on a scenario level.</source>
          <target state="translated">이 시나리오는 실패시 두 번 다시 시작됩니다. 재시도 단계와 달리 시나리오 수준의 재 시도에 지원되는 &lt;code&gt;when&lt;/code&gt; 조건 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="26ce3457e17ce1251213460ca505d70fbc2a8cff" translate="yes" xml:space="preserve">
          <source>This scenarios are nice as live documentation but they do not test anything yet. What we need next is to define how to run those steps. Steps can be defined by executing &lt;code&gt;gherkin:snippets&lt;/code&gt; command:</source>
          <target state="translated">이 시나리오는 실제 문서로는 좋지만 아직 아무것도 테스트하지 않습니다. 다음에 필요한 것은 해당 단계를 실행하는 방법을 정의하는 것입니다. &lt;code&gt;gherkin:snippets&lt;/code&gt; 명령 을 실행하여 단계를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="690bde6733776176baee026a9da68a536800e0e9" translate="yes" xml:space="preserve">
          <source>This string can be accessed inside a &lt;code&gt;content&lt;/code&gt; property of a last argument:</source>
          <target state="translated">이 문자열은 마지막 인수 의 &lt;code&gt;content&lt;/code&gt; 속성 내에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3352e1bab831b37c11a9a1d55733702ef451f41" translate="yes" xml:space="preserve">
          <source>This test is easy to read and write. Also it will work both on iOS and Android devices. Doesn't it sound cool?</source>
          <target state="translated">이 테스트는 읽고 쓰기 쉽습니다. 또한 iOS 및 Android 장치에서 모두 작동합니다. 멋지지 않습니까?</target>
        </trans-unit>
        <trans-unit id="870bb977208d3c2b6f600ef1de1fdac969564a03" translate="yes" xml:space="preserve">
          <source>This test will be skipped like with regular &lt;code&gt;Scenario.skip&lt;/code&gt; but with additional message &quot;Test not implemented!&quot;:</source>
          <target state="translated">이 테스트는 일반 &lt;code&gt;Scenario.skip&lt;/code&gt; 에서처럼 건너 뛰지 만 &quot;테스트가 구현되지 않았습니다!&quot;라는 추가 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ed7e13d5023ce183dfb3b32d6a8eb5578f121eaf" translate="yes" xml:space="preserve">
          <source>This text should be rewritten to follow your buisness rules. Don't think about a web interface for a while. Think about how user interacts with your system and what goals they want to achieve. Then write interaction scenarios.</source>
          <target state="translated">비즈니스 규칙에 따라이 텍스트를 다시 작성해야합니다. 한동안 웹 인터페이스를 생각하지 마십시오. 사용자가 시스템과 상호 작용하는 방식과 달성하려는 목표에 대해 생각하십시오. 그런 다음 상호 작용 시나리오를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="3a403b6a8735cf715fd7fe6250357750b12cf82b" translate="yes" xml:space="preserve">
          <source>This way tests can be written in Chinese language while it is still JavaScript:</source>
          <target state="translated">이 방법으로 테스트는 여전히 JavaScript 인 동안 중국어로 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69c1d67d688c6c06b60c2823f5c9c8a94c055829" translate="yes" xml:space="preserve">
          <source>This way tests can be written in native language while it is still JavaScript:</source>
          <target state="translated">이 방법으로 테스트는 여전히 JavaScript 인 상태에서 모국어로 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a06dd5f4a07b4dc2e8cd2fc5a5c5e6b8e7df8ddd" translate="yes" xml:space="preserve">
          <source>This way we recommend to implement all custom logic using low-level Protractor syntax and using it inside scenario tests. Please see an &lt;a href=&quot;https://codecept.io/helpers/#protractor-example&quot;&gt;example of such helper&lt;/a&gt;.</source>
          <target state="translated">이 방법으로 저수준 각도기 구문을 사용하고 시나리오 테스트 내에서이를 사용하여 모든 사용자 지정 논리를 구현하는 것이 좋습니다. &lt;a href=&quot;https://codecept.io/helpers/#protractor-example&quot;&gt;그러한 도우미&lt;/a&gt; 의 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c482d6a4f0fc68267d5566fecdc03d74f5d8a278" translate="yes" xml:space="preserve">
          <source>This way you can build very flexible and stable locators even on application never designed for testing.</source>
          <target state="translated">이렇게하면 테스트 용으로 설계되지 않은 애플리케이션에서도 매우 유연하고 안정적인 로케이터를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2efce9385b092d2186d44776f32f2180bbc93b92" translate="yes" xml:space="preserve">
          <source>This way you can call &lt;a href=&quot;https://github.com/segmentio/nightmare#interact-with-the-page&quot;&gt;native Nightmare commands&lt;/a&gt;.</source>
          <target state="translated">이 방법으로 &lt;a href=&quot;https://github.com/segmentio/nightmare#interact-with-the-page&quot;&gt;기본 Nightmare 명령을&lt;/a&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0984100e3067bc6bf0929fe1084b16ba5399996" translate="yes" xml:space="preserve">
          <source>This way, if your tests are written with TypeScript, your IDE will be able to leverage features like autocomplete and so on.</source>
          <target state="translated">이런 식으로 테스트를 TypeScript로 작성하면 IDE에서 자동 완성 등과 같은 기능을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efd58ec5c30e165d6897ff9542dbdfd0dbce46e0" translate="yes" xml:space="preserve">
          <source>This will create a sample template for a page object and include it in the &lt;code&gt;codecept.json&lt;/code&gt; config file.</source>
          <target state="translated">이렇게하면 페이지 개체에 대한 샘플 템플릿이 생성되고 &lt;code&gt;codecept.json&lt;/code&gt; 구성 파일에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5967bd21ac5a62a104c79503cf53afc129efc373" translate="yes" xml:space="preserve">
          <source>This will create a sample template for a page object and include it into &lt;code&gt;codecept.json&lt;/code&gt; config.</source>
          <target state="translated">그러면 페이지 객체의 샘플 템플릿이 생성되어 &lt;code&gt;codecept.json&lt;/code&gt; 구성에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6a2bc9d429955a08af5a5119865b23ee2b87cc6" translate="yes" xml:space="preserve">
          <source>This will give you cli with steps in console and HTML report in &lt;code&gt;output&lt;/code&gt; directory.</source>
          <target state="translated">이것은 콘솔의 단계와 &lt;code&gt;output&lt;/code&gt; 디렉토리의 HTML 보고서를 제공 합니다 .</target>
        </trans-unit>
        <trans-unit id="cd7962c1146774ece46ff3c8e4b3d6c4b98f7887" translate="yes" xml:space="preserve">
          <source>This will install CodeceptJS, CodeceptUI &amp;amp; Puppeteer with Chrome browser.</source>
          <target state="translated">Chrome 브라우저와 함께 CodeceptJS, CodeceptUI 및 Puppeteer가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="44afd644987855e8bde0e77f006fd8ebb8c07d78" translate="yes" xml:space="preserve">
          <source>This will limit data sets accoring passed function:</source>
          <target state="translated">전달 된 함수에 따라 데이터 세트가 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="88250cb017c0fd611db72a09f64ed7591d533fd3" translate="yes" xml:space="preserve">
          <source>This will produce 2 tests with different data sets. Current data set is appended to a test name in output:</source>
          <target state="translated">서로 다른 데이터 세트로 2 개의 테스트가 생성됩니다. 현재 데이터 세트가 출력의 테스트 이름에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b00a344050375c1e13c934384a2afcdae9367d53" translate="yes" xml:space="preserve">
          <source>This will produce code templates for all undefined steps in all feature files of this suite. It will also place stub definitions into &lt;code&gt;step_definitions/steps.js&lt;/code&gt; file. Our next step will be to define those steps and transforming feature-file into a valid test.</source>
          <target state="translated">이렇게하면이 제품군의 모든 기능 파일에서 정의되지 않은 모든 단계에 대한 코드 템플릿이 생성됩니다. 또한 스텁 정의를 &lt;code&gt;step_definitions/steps.js&lt;/code&gt; 파일에 배치 합니다. 다음 단계는 이러한 단계를 정의하고 기능 파일을 유효한 테스트로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eb8c2ad7bf42239192af22a0e465871996637c1e" translate="yes" xml:space="preserve">
          <source>This will produce code templates for all undefined steps in the .feature files. By default, it will scan all of the .feature files specified in the gherkin.features section of the config and produce code templates for all undefined steps. If the &lt;code&gt;--feature&lt;/code&gt; option is specified, it will scan the specified .feature file(s). The stub definitions by default will be placed into the first file specified in the gherkin.steps section of the config. However, you may also use &lt;code&gt;--path&lt;/code&gt; to specify a specific file in which to place all undefined steps. This file must exist and be in the gherkin.steps array of the config. Our next step will be to define those steps and transforming feature-file into a valid test.</source>
          <target state="translated">그러면 .feature 파일의 정의되지 않은 모든 단계에 대한 코드 템플릿이 생성됩니다. 기본적으로 구성의 gherkin.features 섹션에 지정된 모든 .feature 파일을 스캔하고 정의되지 않은 모든 단계에 대한 코드 템플릿을 생성합니다. 경우 &lt;code&gt;--feature&lt;/code&gt; 옵션을 지정, 그것은 지정된 .feature 파일 (들)을 검색합니다. 기본적으로 스텁 정의는 구성의 gherkin.steps 섹션에 지정된 첫 번째 파일에 배치됩니다. 그러나 &lt;code&gt;--path&lt;/code&gt; 를 사용하여 정의되지 않은 모든 단계를 배치 할 특정 파일을 지정할 수도 있습니다 . 이 파일은 반드시 존재해야하며 설정의 gherkin.steps 배열에 있어야합니다. 다음 단계는 이러한 단계를 정의하고 기능 파일을 유효한 테스트로 변환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="de3985659507ca6e52659b3ca5fc95577520b71b" translate="yes" xml:space="preserve">
          <source>This will show execution steps as well as notices from test runner. To get even more information with more technical details like error stack traces, and global promises, or events use &lt;code&gt;--verbose&lt;/code&gt; mode.</source>
          <target state="translated">실행 단계와 테스트 실행기의 알림이 표시됩니다. 오류 스택 추적, 전역 약속 또는 이벤트와 같은 더 많은 기술적 세부 정보와 함께 더 많은 정보를 얻으려면 &lt;code&gt;--verbose&lt;/code&gt; 모드를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="1084029148ee5678063c3031c603530abcfc4538" translate="yes" xml:space="preserve">
          <source>Those tools can be easily installed via NPM. Use &lt;a href=&quot;https://www.npmjs.com/package/selenium-standalone&quot;&gt;selenium-standalone (opens new window)&lt;/a&gt; to automatically install them.</source>
          <target state="translated">이러한 도구는 NPM을 통해 쉽게 설치할 수 있습니다. 사용 &lt;a href=&quot;https://www.npmjs.com/package/selenium-standalone&quot;&gt;셀레늄 독립형 (새 창에서 열림)&lt;/a&gt; 를 자동으로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="e1f4f1007f7f5c5e4b911db91fe3c124c76e860f" translate="yes" xml:space="preserve">
          <source>Timeouts are expected to be passed as object:</source>
          <target state="translated">제한 시간은 객체로 전달 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="50d84252b2753cd57724f32fcb2246d871d2d463" translate="yes" xml:space="preserve">
          <source>Tips: Using async function in the autoLogin</source>
          <target state="translated">팁 : autoLogin에서 비동기 기능 사용</target>
        </trans-unit>
        <trans-unit id="ba84f02583de459271902082d3f778d02a86a675" translate="yes" xml:space="preserve">
          <source>To &lt;strong&gt;debug test step-by-step&lt;/strong&gt; press Enter, the next step will be executed and interactive shell will be shown again.</source>
          <target state="translated">&lt;strong&gt;테스트를 단계별로 디버깅&lt;/strong&gt; 하려면 Enter 키를 누르면 다음 단계가 실행되고 대화 형 셸이 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0b3a218d7485b4ed466c26bdd616aa3f6470f1df" translate="yes" xml:space="preserve">
          <source>To &lt;strong&gt;debug test step-by-step&lt;/strong&gt; type &lt;code&gt;next&lt;/code&gt; and press Enter. The next step will be executed and interactive shell will be shown again.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; &lt;strong&gt;단계적으로 테스트&lt;/strong&gt; 유형 을 &lt;strong&gt;디버그&lt;/strong&gt; 하고 Enter를 누르십시오. 다음 단계가 실행되고 대화식 쉘이 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d06e105dca9eae5b4cb8e3d3e1e34f2cf13cf1b0" translate="yes" xml:space="preserve">
          <source>To add CodeceptJS to your project invoke installer:</source>
          <target state="translated">CodeceptJS를 프로젝트에 추가하려면 설치 프로그램을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="b24585a5a9d7c99db79536da56481b741710483b" translate="yes" xml:space="preserve">
          <source>To adjust browser settings you can pass &lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md#browsernewcontextoptions&quot;&gt;custom options (opens new window)&lt;/a&gt;</source>
          <target state="translated">브라우저 설정을 조정하려면 &lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md#browsernewcontextoptions&quot;&gt;사용자 지정 옵션을&lt;/a&gt; 전달할 수 있습니다 (새 창에서 열림).</target>
        </trans-unit>
        <trans-unit id="367aa5415d4dcf0f64345dbe9ff472b0df76017b" translate="yes" xml:space="preserve">
          <source>To build this image:</source>
          <target state="translated">이 이미지를 만들려면 :</target>
        </trans-unit>
        <trans-unit id="73b409c537ba85ebc3d787beeb44b7562586bbdd" translate="yes" xml:space="preserve">
          <source>To configure TypeScript in your project, you need to add &lt;a href=&quot;https://github.com/TypeStrong/ts-node&quot;&gt;&lt;code&gt;ts-node/register&lt;/code&gt; (opens new window)&lt;/a&gt; on first line in your config. Like in the following config file:</source>
          <target state="translated">프로젝트에서 TypeScript를 구성하려면 구성의 첫 번째 줄에 &lt;a href=&quot;https://github.com/TypeStrong/ts-node&quot;&gt; &lt;code&gt;ts-node/register&lt;/code&gt; (새 창에서 열림)&lt;/a&gt; 를 추가해야합니다 . 다음 구성 파일과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec0287854527ccbded8b0a0388a94a0ed66762c1" translate="yes" xml:space="preserve">
          <source>To create custom &lt;code&gt;I.*&lt;/code&gt; commands using Playwright API you need to create a custom helper.</source>
          <target state="translated">Playwright API를 사용하여 사용자 지정 &lt;code&gt;I.*&lt;/code&gt; 명령을 만들려면 사용자 지정 도우미를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="b8959819322fcfe83626cdfe229e15709d5f046f" translate="yes" xml:space="preserve">
          <source>To create custom &lt;code&gt;I.*&lt;/code&gt; commands using Puppeteer API you need to create a custom helper.</source>
          <target state="translated">Puppeteer API를 사용하여 사용자 지정 &lt;code&gt;I.*&lt;/code&gt; 명령을 만들려면 사용자 지정 도우미를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="a145838bd14b58f565a2ccfceeda4b70e510f0d5" translate="yes" xml:space="preserve">
          <source>To create new actions which will be added into &lt;code&gt;I.&lt;/code&gt; object you need to create a new helper. This can be done with &lt;code&gt;codeceptjs gh&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;I.&lt;/code&gt; 개체에 추가 될 새 작업 을 만들려면 새 도우미를 만들어야합니다. 이것은 &lt;code&gt;codeceptjs gh&lt;/code&gt; 명령 으로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="892114ab881fbb3c7b6c1e54c96e1c23ae227c79" translate="yes" xml:space="preserve">
          <source>To customize execution call &lt;code&gt;codeceptjs&lt;/code&gt; command:</source>
          <target state="translated">실행 호출 &lt;code&gt;codeceptjs&lt;/code&gt; 명령 을 사용자 정의하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="19c961f1cbe920242e3c7451961ad207a7bce9b3" translate="yes" xml:space="preserve">
          <source>To develop tests it's fine to use local Selenium Server and window mode. Setting up WebDriver on remote CI (Continous Integration) server is different. If there is no desktop and no window mode on CI.</source>
          <target state="translated">테스트를 개발하려면 로컬 Selenium Server 및 창 모드를 사용하는 것이 좋습니다. 원격 CI (Continous Integration) 서버에서 WebDriver를 설정하는 방법은 다릅니다. 데스크톱이없고 CI에 창 모드가없는 경우.</target>
        </trans-unit>
        <trans-unit id="b5c9a4f989d6525d975e53e0904361fd7872af68" translate="yes" xml:space="preserve">
          <source>To enable bootstrap script in dry-run mode, pass in &lt;code&gt;--bootstrap&lt;/code&gt; option when running with &lt;code&gt;--steps&lt;/code&gt; or &lt;code&gt;--debug&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--bootstrap&lt;/code&gt; 모드에서 부트 스트랩 스크립트를 활성화하려면 &lt;code&gt;--steps&lt;/code&gt; 또는 &lt;code&gt;--debug&lt;/code&gt; 로 실행할 때 --bootstrap 옵션을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="114e31584b04e58fc6eea15136260f2ad205792e" translate="yes" xml:space="preserve">
          <source>To enable device emulation for a specific test, create an additional browser session and pass in config as a second parameter:</source>
          <target state="translated">특정 테스트를 위해 장치 에뮬레이션을 활성화하려면 추가 브라우저 세션을 만들고 두 번째 매개 변수로 구성을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="dda1d3c081df9e856ac6016e29a26063f994a1ba" translate="yes" xml:space="preserve">
          <source>To enable pause after a test without a plugin you can use &lt;code&gt;After(pause)&lt;/code&gt; inside a test file.</source>
          <target state="translated">플러그인없이 테스트 후 일시 중지를 활성화하려면 테스트 파일 내에서 &lt;code&gt;After(pause)&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59ae223bedd5c14158c5f1525153951eedec3a1a" translate="yes" xml:space="preserve">
          <source>To enable your custom plugin in config add it to &lt;code&gt;plugins&lt;/code&gt; section. Specify path to node module using &lt;code&gt;require&lt;/code&gt;.</source>
          <target state="translated">구성에서 사용자 정의 플러그인을 사용하려면 &lt;code&gt;plugins&lt;/code&gt; 섹션에 추가 하십시오. &lt;code&gt;require&lt;/code&gt; 를 사용하여 노드 모듈의 경로를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e67163839e7bef0d8a96d0beb89bdad79284d6ca" translate="yes" xml:space="preserve">
          <source>To execute commands in context of a webview use &lt;code&gt;within('webview')&lt;/code&gt; function:</source>
          <target state="translated">webview의 맥락에서 명령을 실행하려면 &lt;code&gt;within('webview')&lt;/code&gt; 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d9428fc3c91fd56331af17c6cf7c1791be5c31fc" translate="yes" xml:space="preserve">
          <source>To execute tests in Google Chrome browser running Selenium Server with ChromeDriver is required.</source>
          <target state="translated">ChromeDriver와 함께 Selenium 서버를 실행하는 Chrome 브라우저에서 테스트를 실행하려면 필요합니다.</target>
        </trans-unit>
        <trans-unit id="226e2f1d55e877f0272201e815db8629b3660624" translate="yes" xml:space="preserve">
          <source>To execute them use &lt;code&gt;run-multiple&lt;/code&gt; command passing configured suite, which is &lt;code&gt;parallel&lt;/code&gt; in this example:</source>
          <target state="translated">그것들을 실행하려면 &lt;code&gt;run-multiple&lt;/code&gt; 명령 전달 구성된 제품군 을 사용하십시오.이 예제 에서는 &lt;code&gt;parallel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="348cf81ca03cf4569a0f486b8c7419aeb9536231" translate="yes" xml:space="preserve">
          <source>To fill in sensitive data use the &lt;code&gt;secret&lt;/code&gt; function, it won't expose actual value in logs.</source>
          <target state="translated">민감한 데이터를 채우기 위해 &lt;code&gt;secret&lt;/code&gt; 기능을 사용하면 로그에 실제 값이 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43dbb9517f12283b733dc8e062ee7f1d6be9a892" translate="yes" xml:space="preserve">
          <source>To filter a test by name use &lt;code&gt;--grep&lt;/code&gt; parameter. Which will execute all tests with names matching the regex pattern.</source>
          <target state="translated">이름으로 테스트를 필터링하려면 &lt;code&gt;--grep&lt;/code&gt; 매개 변수를 사용 하십시오 . 정규식 패턴과 일치하는 이름으로 모든 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="42943775db71644bff76164dfac10113c8cb35ae" translate="yes" xml:space="preserve">
          <source>To filter a test by name use the &lt;code&gt;--grep&lt;/code&gt; parameter, which will execute all tests with names matching the regex pattern.</source>
          <target state="translated">이름으로 테스트를 필터링하려면 정규식 패턴과 일치하는 이름으로 모든 테스트를 실행 하는 &lt;code&gt;--grep&lt;/code&gt; 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="56987b8a8568a5102e9c6351100575132c69a637" translate="yes" xml:space="preserve">
          <source>To find React element names and props in a tree use &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React DevTools (opens new window)&lt;/a&gt; extension.</source>
          <target state="translated">트리에서 React 요소 이름과 소품을 찾으려면 &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React DevTools (새 창에서 열림)&lt;/a&gt; 확장을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="56f2dbf9c03629b6c8986274b48c93c4ca1e480e" translate="yes" xml:space="preserve">
          <source>To get &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#test-controller&quot;&gt;testController (opens new window)&lt;/a&gt;)) inside a test use &lt;a href=&quot;https://codecept.io/helpers/TestCafe/#usetestcafeto&quot;&gt;&lt;code&gt;I.useTestCafeTo&lt;/code&gt;&lt;/a&gt; method with a callback. To keep test readable provide a description of a callback inside the first parameter.</source>
          <target state="translated">테스트 내에서 &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/test-code-structure.html#test-controller&quot;&gt;testController (새 창 &lt;/a&gt;&lt;a href=&quot;https://codecept.io/helpers/TestCafe/#usetestcafeto&quot;&gt; &lt;code&gt;I.useTestCafeTo&lt;/code&gt; &lt;/a&gt; ) )) 를 얻으려면 I.useTestCafeTo 메서드를 콜백과 함께 사용 하십시오 . 테스트를 읽기 쉽게 유지하려면 첫 번째 매개 변수 내에 콜백에 대한 설명을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="7cfd4d243832149c9696ada4092f7e6874df98a6" translate="yes" xml:space="preserve">
          <source>To get &lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md&quot;&gt;Playwright API (opens new window)&lt;/a&gt; inside a test use &lt;code&gt;I.usePlaywrightTo&lt;/code&gt; method with a callback. To keep test readable provide a description of a callback inside the first parameter.</source>
          <target state="translated">테스트 내에서 &lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md&quot;&gt;Playwright API (새 창 열림)&lt;/a&gt; 를 가져 오려면 &lt;code&gt;I.usePlaywrightTo&lt;/code&gt; 메서드를 콜백과 함께 사용 합니다. 테스트를 읽기 쉽게 유지하려면 첫 번째 매개 변수 내에 콜백에 대한 설명을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="8c0d246e12bec11c478039300484fc655e1ec6e9" translate="yes" xml:space="preserve">
          <source>To get &lt;a href=&quot;https://webdriver.io/docs/api&quot;&gt;webdriverio browser API (opens new window)&lt;/a&gt; inside a test use &lt;a href=&quot;https://codecept.io/helpers/WebDriver/#usewebdriverto&quot;&gt;&lt;code&gt;I.useWebDriverTo&lt;/code&gt;&lt;/a&gt; method with a callback. To keep test readable provide a description of a callback inside the first parameter.</source>
          <target state="translated">테스트 내에서 &lt;a href=&quot;https://webdriver.io/docs/api&quot;&gt;webdriverio 브라우저 API (새 창 열림)&lt;/a&gt; 를 가져 오려면 콜백과 함께 &lt;a href=&quot;https://codecept.io/helpers/WebDriver/#usewebdriverto&quot;&gt; &lt;code&gt;I.useWebDriverTo&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다. 테스트를 읽기 쉽게 유지하려면 첫 번째 매개 변수 내에 콜백에 대한 설명을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="d7b3c36dce44ad51856aefeb9c05f8c51978ef11" translate="yes" xml:space="preserve">
          <source>To get Puppeteer API inside a test use &lt;a href=&quot;https://codecept.io/helpers/Puppeteer/#usepuppeteerto&quot;&gt;&lt;code&gt;I.usePupepteerTo&lt;/code&gt;&lt;/a&gt; method with a callback. To keep test readable provide a description of a callback inside the first parameter.</source>
          <target state="translated">테스트 내에서 Puppeteer API를 얻으려면 콜백과 함께 &lt;a href=&quot;https://codecept.io/helpers/Puppeteer/#usepuppeteerto&quot;&gt; &lt;code&gt;I.usePupepteerTo&lt;/code&gt; &lt;/a&gt; 메서드를 사용 하십시오 . 테스트를 읽기 쉽게 유지하려면 첫 번째 매개 변수 내에 콜백에 대한 설명을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="9ed92f252e318c4afcbaf8bac47f9ec7b3d1bd7e" translate="yes" xml:space="preserve">
          <source>To get a full control of parallelization create a custom execution script to match your needs. This way you can configure which tests are matched, how the groups are formed, and with which configuration each worker is executed.</source>
          <target state="translated">병렬화를 완전히 제어하려면 필요에 맞는 사용자 지정 실행 스크립트를 만듭니다. 이렇게하면 일치하는 테스트, 그룹 형성 방법 및 각 작업자가 실행되는 구성을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be6eb647d7a8379accd2b82b9ef36ec1d75df188" translate="yes" xml:space="preserve">
          <source>To get a list of all contexts use &lt;code&gt;grabAllContexts&lt;/code&gt; method:</source>
          <target state="translated">모든 컨텍스트 목록을 얻으려면 &lt;code&gt;grabAllContexts&lt;/code&gt; 메소드를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a45e6f3a7e0ba7a1e8835d248f39ca28483f35ad" translate="yes" xml:space="preserve">
          <source>To get access for elements, connect to a corresponding helper and use &lt;code&gt;_locate&lt;/code&gt; function to match web elements by CSS or XPath, like you usually do:</source>
          <target state="translated">요소에 대한 액세스 권한을 얻으려면 해당 도우미에 연결하고 &lt;code&gt;_locate&lt;/code&gt; 함수를 사용 하여 일반적으로 수행하는 것처럼 CSS 또는 XPath로 웹 요소를 일치 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="b40a99c9959ee7e561dd8c2220c1c32cef853af2" translate="yes" xml:space="preserve">
          <source>To get additional information about test execution use &lt;code&gt;--debug&lt;/code&gt; option.</source>
          <target state="translated">테스트 실행에 대한 추가 정보를 얻으려면 &lt;code&gt;--debug&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f98169d773a2abc1972174f572ac57282b5edfec" translate="yes" xml:space="preserve">
          <source>To get additional information about test execution use &lt;code&gt;--debug&lt;/code&gt; option. This will show execution steps as well as notices from test runner. To get even more information with more technical details like error stack traces, and global promises, or events use &lt;code&gt;--verbose&lt;/code&gt; mode.</source>
          <target state="translated">테스트 실행에 대한 추가 정보를 얻으려면 &lt;code&gt;--debug&lt;/code&gt; 옵션을 사용하십시오 . 실행 단계와 테스트 러너의 알림이 표시됩니다. 오류 스택 추적, 전역 약속 또는 이벤트와 같은보다 자세한 기술 정보로 더 많은 정보를 얻으려면 &lt;code&gt;--verbose&lt;/code&gt; 모드를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="05fe39eb551453a4274186c3f5562e88c9b27422" translate="yes" xml:space="preserve">
          <source>To get autocompletion for localized method names generate definitions by running</source>
          <target state="translated">현지화 된 메소드 이름의 자동 완성을 얻으려면 다음을 실행하여 정의를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="f06195aab0f2a6c52e79a3136fb5511ba65cd0a2" translate="yes" xml:space="preserve">
          <source>To get autocompletion when working with CodeceptJS, use Visual Studio Code or another IDE that supports TypeScript Definitions.</source>
          <target state="translated">CodeceptJS로 작업 할 때 자동 완성을 얻으려면 Visual Studio Code 또는 TypeScript 정의를 지원하는 다른 IDE를 사용하세요.</target>
        </trans-unit>
        <trans-unit id="9ad34beca2e6bb591d796ddff9528fa41ba95449" translate="yes" xml:space="preserve">
          <source>To get only one metric use second parameter:</source>
          <target state="translated">하나의 메트릭 만 가져 오려면 두 번째 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eedd748bde9b30d94ca1cbf8159fbf6e3a2479ce" translate="yes" xml:space="preserve">
          <source>To get started faster we prepared &lt;a href=&quot;https://github.com/codeceptjs/typescript-boilerplate&quot;&gt;typescript boilerplate project (opens new window)&lt;/a&gt; which can be used instead of configuring TypeScript on your own. Clone this repository into an empty folder and you are done.</source>
          <target state="translated">더 빨리 시작하기 위해 TypeScript를 직접 구성하는 대신 사용할 수있는 &lt;a href=&quot;https://github.com/codeceptjs/typescript-boilerplate&quot;&gt;typescript 상용구 프로젝트 (새 창에서 열림)&lt;/a&gt; 를 준비했습니다. 이 저장소를 빈 폴더에 복제하면 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="9d7df25a6b694205cbc23435b8d6478cacdfaecf" translate="yes" xml:space="preserve">
          <source>To inject asynchronous functions in a test or before/after a test you can subscribe to corresponding event and register a function inside a recorder object. &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/recorder.js&quot;&gt;Recorder&lt;/a&gt; represents a global promises chain.</source>
          <target state="translated">테스트에서 또는 테스트 전 / 후에 비동기 함수를 주입하기 위해 해당 이벤트를 구독하고 레코더 객체 내에 함수를 등록 할 수 있습니다. &lt;a href=&quot;https://github.com/Codeception/CodeceptJS/blob/master/lib/recorder.js&quot;&gt;레코더&lt;/a&gt; 는 글로벌 약속 체인을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4951a804b008d14b721a514dbf9c61ec15652e79" translate="yes" xml:space="preserve">
          <source>To install Appium use npm:</source>
          <target state="translated">Appium을 설치하려면 npm을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a5f3c0cb215ece2c2cac6457f937e76ea0ff66ba" translate="yes" xml:space="preserve">
          <source>To install codeceptjs into a different folder, like &lt;code&gt;tests&lt;/code&gt; use &lt;code&gt;npx create-codeceptjs tests&lt;/code&gt;</source>
          <target state="translated">같은 다른 폴더로 codeceptjs를 설치하려면 &lt;code&gt;tests&lt;/code&gt; 사용 &lt;code&gt;npx create-codeceptjs tests&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b7bb7bf920dcf70fe2695fe169c93640486faab" translate="yes" xml:space="preserve">
          <source>To intercept API requests and mock them use following API</source>
          <target state="translated">API 요청을 가로 채서 조롱하려면 다음 API를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="71c5f0e1c349a096f90935c60d4f6b1ff7a5d827" translate="yes" xml:space="preserve">
          <source>To launch tests use &lt;code&gt;run&lt;/code&gt; command. To execute tests in &lt;a href=&quot;https://codecept.io/advanced/#multiple-browsers-execution&quot;&gt;multiple browsers&lt;/a&gt; or &lt;a href=&quot;https://codecept.io/advanced/#parallel-execution&quot;&gt;multiple threads&lt;/a&gt; use &lt;code&gt;run-multiple&lt;/code&gt;.</source>
          <target state="translated">테스트를 시작하려면 &lt;code&gt;run&lt;/code&gt; 명령을 사용하십시오 . 에서 테스트를 실행하려면 &lt;a href=&quot;https://codecept.io/advanced/#multiple-browsers-execution&quot;&gt;여러 브라우저&lt;/a&gt; 또는 &lt;a href=&quot;https://codecept.io/advanced/#parallel-execution&quot;&gt;다중 스레드를&lt;/a&gt; 사용하여 &lt;code&gt;run-multiple&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13498b3bc6ffd55724598ecb31efc2f20540d679" translate="yes" xml:space="preserve">
          <source>To launch tests use the &lt;code&gt;run&lt;/code&gt; command, and to execute tests in &lt;a href=&quot;https://codecept.io/advanced/#multiple-browsers-execution&quot;&gt;multiple browsers&lt;/a&gt; or &lt;a href=&quot;https://codecept.io/advanced/#parallel-execution&quot;&gt;multiple threads&lt;/a&gt; use the &lt;code&gt;run-multiple&lt;/code&gt; command.</source>
          <target state="translated">테스트를 시작하려면 &lt;code&gt;run&lt;/code&gt; 명령을 사용하고 &lt;a href=&quot;https://codecept.io/advanced/#multiple-browsers-execution&quot;&gt;여러 브라우저&lt;/a&gt; 또는 &lt;a href=&quot;https://codecept.io/advanced/#parallel-execution&quot;&gt;여러 스레드&lt;/a&gt; 에서 테스트를 실행 하려면 &lt;code&gt;run-multiple&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4dbe083331d7606a98d1efca353bdd373d6fb42" translate="yes" xml:space="preserve">
          <source>To learn more about refactoring options in CodeceptJS read &lt;a href=&quot;https://codecept.io/pageobjects/&quot;&gt;PageObjects guide (opens new window)&lt;/a&gt;.</source>
          <target state="translated">CodeceptJS의 리팩토링 옵션에 대해 자세히 알아 보려면 &lt;a href=&quot;https://codecept.io/pageobjects/&quot;&gt;PageObjects 가이드 (새 창&lt;/a&gt; 에서 열림)를 읽어보세요 .</target>
        </trans-unit>
        <trans-unit id="3764ed3de22bce95002e04f9e38dba88b5d545ab" translate="yes" xml:space="preserve">
          <source>To learn more about refactoring options in CodeceptJS read &lt;a href=&quot;https://codecept.io/pageobjects/&quot;&gt;PageObjects guide&lt;/a&gt;.</source>
          <target state="translated">CodeceptJS의 리팩토링 옵션에 대한 자세한 내용은 &lt;a href=&quot;https://codecept.io/pageobjects/&quot;&gt;PageObjects 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33ca1416d034c2a6195929194308c2ba3df3b4de" translate="yes" xml:space="preserve">
          <source>To list all available commands for current configuration run &lt;code&gt;codeceptjs list&lt;/code&gt; or enable &lt;a href=&quot;#intellisense&quot;&gt;auto-completion by generating TypeScript definitions&lt;/a&gt;.</source>
          <target state="translated">현재 구성에 사용 가능한 모든 명령을 나열하려면 &lt;code&gt;codeceptjs list&lt;/code&gt; 를 실행 하거나 &lt;a href=&quot;#intellisense&quot;&gt;TypeScript 정의를 생성&lt;/a&gt; 하여 자동 완성을 활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="32bd993b3aec35c6f35db98215ee283e09b83cfe" translate="yes" xml:space="preserve">
          <source>To list all available commands for the current configuration run &lt;code&gt;codeceptjs list&lt;/code&gt; or enable &lt;a href=&quot;#intellisense&quot;&gt;auto-completion by generating TypeScript definitions&lt;/a&gt;.</source>
          <target state="translated">현재 구성에 사용할 수있는 모든 명령을 나열하려면 &lt;code&gt;codeceptjs list&lt;/code&gt; 를 실행 하거나 &lt;a href=&quot;#intellisense&quot;&gt;TypeScript 정의를 생성&lt;/a&gt; 하여 자동 완성을 활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="bc8144a9117a2721cea959d1ebd8b234a8a47835" translate="yes" xml:space="preserve">
          <source>To list all defined steps run &lt;code&gt;gherkin:steps&lt;/code&gt; command:</source>
          <target state="translated">정의 된 모든 단계를 나열하려면 &lt;code&gt;gherkin:steps&lt;/code&gt; 명령을 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="44a70268ed0e15ed0d98ea6e20c80b2908c0fd7f" translate="yes" xml:space="preserve">
          <source>To locate &lt;code&gt;a&lt;/code&gt; element inside &lt;code&gt;label&lt;/code&gt; with text: 'Hello' use:</source>
          <target state="translated">텍스트가있는 &lt;code&gt;label&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 요소 를 찾으려면 'Hello'를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a892b91e923b926fd18f1db7b9776bc02d60a72a" translate="yes" xml:space="preserve">
          <source>To make combinations with modifier and mouse clicks (like Ctrl+Click) press a modifier, click, then release it. Appium: support, but clear field before pressing in apps:</source>
          <target state="translated">Ctrl + 클릭과 같이 수정 자와 마우스 클릭을 조합하려면 수정자를 누르고 클릭 한 다음 놓습니다. Appium : 앱을 누르기 전에 지원하지만 명확한 필드 :</target>
        </trans-unit>
        <trans-unit id="dd700208c317dee5b703250d03c63c9ea29f158a" translate="yes" xml:space="preserve">
          <source>To make combinations with modifier key and user operation (e.g. &lt;code&gt;'Control'&lt;/code&gt; + &lt;a href=&quot;#click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">수정 자 키와 사용자 조작을 조합하려면 (예 : &lt;code&gt;'Control'&lt;/code&gt; + &lt;a href=&quot;#click&quot;&gt; &lt;code&gt;click&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b300bf3184855e39930b5b2d135f2ee09a3d9288" translate="yes" xml:space="preserve">
          <source>To make this work some preparations are required.</source>
          <target state="translated">이 작업을 수행하려면 몇 가지 준비가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7c33db9745c88b0183af1a1e9d3fbe85d03c4cdb" translate="yes" xml:space="preserve">
          <source>To make this work you need</source>
          <target state="translated">이 작업을하려면 필요한</target>
        </trans-unit>
        <trans-unit id="1cd1b591f892518d095ff67cb6f7713fca8a403b" translate="yes" xml:space="preserve">
          <source>To mock requests enable additional helper &lt;a href=&quot;https://codecept.io/helpers/MockRequest&quot;&gt;MockRequest&lt;/a&gt; (which is based on Polly.js).</source>
          <target state="translated">요청을 모의하려면 추가 도우미 &lt;a href=&quot;https://codecept.io/helpers/MockRequest&quot;&gt;MockRequest&lt;/a&gt; (Polly.js 기반)를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="18cc516e95b4bc42b37c4c5d48d836fde301cf6e" translate="yes" xml:space="preserve">
          <source>To narrow down the results you can specify a context in second parameter.</source>
          <target state="translated">결과 범위를 좁히려면 두 번째 매개 변수로 컨텍스트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9a2658dba90793996ba53852aec22fed9e4dc6" translate="yes" xml:space="preserve">
          <source>To narrow down the results you can specify a context in the second parameter.</source>
          <target state="translated">결과의 범위를 좁히기 위해 두 번째 매개 변수에 컨텍스트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfbb6a252c90c39c58bb96c1a53dce200573f20f" translate="yes" xml:space="preserve">
          <source>To press a key in combination with modifier keys, pass the sequence as an array. All modifier keys (&lt;code&gt;'Alt'&lt;/code&gt;, &lt;code&gt;'Control'&lt;/code&gt;, &lt;code&gt;'Meta'&lt;/code&gt;, &lt;code&gt;'Shift'&lt;/code&gt;) will be released afterwards.</source>
          <target state="translated">수정 자 키와 함께 키를 누르려면 시퀀스를 배열로 전달하십시오. 모든 수정 자 키 ( &lt;code&gt;'Alt'&lt;/code&gt; , &lt;code&gt;'Control'&lt;/code&gt; , &lt;code&gt;'Meta'&lt;/code&gt; , &lt;code&gt;'Shift'&lt;/code&gt; )는 나중에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="e9ed06c9d0a8a8d8c0aef1819ed3516ce11203f7" translate="yes" xml:space="preserve">
          <source>To proceed you need to have &lt;a href=&quot;https://codecept.io/quickstart#using-selenium-webdriver&quot;&gt;CodeceptJS installed&lt;/a&gt; and &lt;code&gt;WebDriver&lt;/code&gt; helper selected.</source>
          <target state="translated">계속하려면 &lt;a href=&quot;https://codecept.io/quickstart#using-selenium-webdriver&quot;&gt;CodeceptJS를 설치&lt;/a&gt; 하고 &lt;code&gt;WebDriver&lt;/code&gt; 도우미를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="d59ad1176a56be0d640e6d44960e6392c4ac3729" translate="yes" xml:space="preserve">
          <source>To quickly execute tests use following npm scripts:</source>
          <target state="translated">테스트를 빠르게 실행하려면 다음 npm 스크립트를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cbfbab33da17f176bb938591c5e0abc26eb0e467" translate="yes" xml:space="preserve">
          <source>To run all tests with &lt;code&gt;slow&lt;/code&gt; word in it</source>
          <target state="translated">&lt;code&gt;slow&lt;/code&gt; 단어로 모든 테스트를 실행하려면</target>
        </trans-unit>
        <trans-unit id="17bfb1fc9b95d6776b5016ff2219d30b86481e09" translate="yes" xml:space="preserve">
          <source>To run all tests with the &lt;code&gt;slow&lt;/code&gt; word in it:</source>
          <target state="translated">&lt;code&gt;slow&lt;/code&gt; 단어가 포함 된 모든 테스트를 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="dc785e44fb60a58f2c46308b30b7d823a77ef874" translate="yes" xml:space="preserve">
          <source>To run mobile test you need either an device emulator (available with Android SDK or iOS), real device connected for mobile testing. Alternatively, you may execute Appium with device emulator inside Docker container.</source>
          <target state="translated">모바일 테스트를 실행하려면 모바일 테스트를 위해 연결된 실제 장치 인 장치 에뮬레이터 (Android SDK 또는 iOS에서 사용 가능)가 필요합니다. 또는 Docker 컨테이너 내부의 장치 에뮬레이터로 Appium을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99126829b7d030d6400b727a158619dcb30cb938" translate="yes" xml:space="preserve">
          <source>To run only features use &lt;code&gt;--features&lt;/code&gt; option:</source>
          <target state="translated">기능 만 실행하려면 &lt;code&gt;--features&lt;/code&gt; 옵션을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="59519343ec249121717838e5f214544e1fb0031b" translate="yes" xml:space="preserve">
          <source>To run only tests without features use &lt;code&gt;--tests&lt;/code&gt; option:</source>
          <target state="translated">기능없이 테스트 만 실행하려면 &lt;code&gt;--tests&lt;/code&gt; 옵션을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd770d3ae14df12349d556753928ed4e8394f569" translate="yes" xml:space="preserve">
          <source>To run several browsers in one test see &lt;a href=&quot;https://codecept.io/acceptance/#multiple-sessions&quot;&gt;multiple session&lt;/a&gt; chapter.</source>
          <target state="translated">한 번의 테스트로 여러 브라우저를 실행하려면 &lt;a href=&quot;https://codecept.io/acceptance/#multiple-sessions&quot;&gt;여러 세션&lt;/a&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c21242460be35650ed93b541279745a2e0d38d88" translate="yes" xml:space="preserve">
          <source>To run tests and see step-by step output use &lt;code&gt;--steps&lt;/code&gt; optoin:</source>
          <target state="translated">테스트를 실행하고 단계별 출력을 보려면 &lt;code&gt;--steps&lt;/code&gt; optoin을 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="bed57123098cc5911f6f4042b3de4f44e2c85c98" translate="yes" xml:space="preserve">
          <source>To run tests with pause on fail enabled use &lt;code&gt;-p pauseOnFail&lt;/code&gt; option</source>
          <target state="translated">실패시 일시 중지를 사용하여 테스트를 실행하려면 &lt;code&gt;-p pauseOnFail&lt;/code&gt; 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="88aff1203077d685f0a38adaee794e651c22e26f" translate="yes" xml:space="preserve">
          <source>To see &lt;code&gt;mockRequest&lt;/code&gt; method in intellisense auto completion don't forget to run &lt;code&gt;codeceptjs def&lt;/code&gt; command:</source>
          <target state="translated">intellisense 자동 완성에서 &lt;code&gt;mockRequest&lt;/code&gt; 메서드 를 보려면 codeceptjs &lt;code&gt;codeceptjs def&lt;/code&gt; 명령 을 실행하는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="217bb5f7ea4f7cb44f5e81e5f2f1bfdf9669b6f1" translate="yes" xml:space="preserve">
          <source>To see a more detailed output add the &lt;code&gt;--debug&lt;/code&gt; flag:</source>
          <target state="translated">더 자세한 출력을 보려면 &lt;code&gt;--debug&lt;/code&gt; 플래그를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="40c9b7d37521cdc4e3b114507c7ca44355f4d9bb" translate="yes" xml:space="preserve">
          <source>To see all available commands press TAB two times to see list of all actions included in I.</source>
          <target state="translated">사용 가능한 모든 명령을 보려면 Tab 키를 두 번 눌러 I에 포함 된 모든 작업 목록을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a6853d609c6b8adc512f7dab1be1c408b926010" translate="yes" xml:space="preserve">
          <source>To see all available commands, press TAB two times to see list of all actions included in the &lt;code&gt;I&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 모든 명령을 보려면 Tab 키를 두 번 눌러 &lt;code&gt;I&lt;/code&gt; 개체에 포함 된 모든 작업 목록을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="fc821c26e51299b190cebbef38bd1b5c2d9ff586" translate="yes" xml:space="preserve">
          <source>To see all possible assertions see the helper's reference.</source>
          <target state="translated">가능한 모든 어설 션을 보려면 도우미 참조를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="98d034c362ad6dde6287829b5fb5cc7fd0398c3b" translate="yes" xml:space="preserve">
          <source>To see all possible assertions, check the helper's reference.</source>
          <target state="translated">가능한 모든 어설 션을 보려면 도우미 참조를 확인하세요.</target>
        </trans-unit>
        <trans-unit id="466ca37dc7d1d6445b3db4047144c7d80adba3e8" translate="yes" xml:space="preserve">
          <source>To see how the test was executed, use &lt;a href=&quot;https://codecept.io/plugins/#stepbystepreport&quot;&gt;stepByStepReport Plugin&lt;/a&gt;. It saves a screenshot of each passed step and shows them in a nice slideshow.</source>
          <target state="translated">테스트 실행 방법을 보려면 &lt;a href=&quot;https://codecept.io/plugins/#stepbystepreport&quot;&gt;stepByStepReport Plugin을&lt;/a&gt; 사용 하십시오 . 전달 된 각 단계의 스크린 샷을 저장하고 멋진 슬라이드 쇼로 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="562f854517067cc014eca33ddad32b53b69d87be" translate="yes" xml:space="preserve">
          <source>To see more detailed output add &lt;code&gt;--debug&lt;/code&gt; flag:</source>
          <target state="translated">보다 자세한 출력을 보려면 &lt;code&gt;--debug&lt;/code&gt; 플래그를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="be488195c5ee10c7cd613ecec46efb6e75db6e0f" translate="yes" xml:space="preserve">
          <source>To see not only business steps but an actual performed steps use &lt;code&gt;--debug&lt;/code&gt; flag:</source>
          <target state="translated">비즈니스 단계뿐만 아니라 실제 수행 된 단계를 보려면 &lt;code&gt;--debug&lt;/code&gt; 플래그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5af7485e1dbe6c8a7b18554b2205e4d3cbb27e6c" translate="yes" xml:space="preserve">
          <source>To see step-by-step output of running tests, add &lt;code&gt;--steps&lt;/code&gt; flag:</source>
          <target state="translated">테스트 실행의 단계별 출력을 보려면 &lt;code&gt;--steps&lt;/code&gt; 플래그를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="64c54548b13f9bcb9ee51e5dc70781cb49750bea" translate="yes" xml:space="preserve">
          <source>To see the step-by-step output of running tests, add the &lt;code&gt;--steps&lt;/code&gt; flag:</source>
          <target state="translated">테스트 실행의 단계별 출력을 &lt;code&gt;--steps&lt;/code&gt; 플래그를 추가하세요 .</target>
        </trans-unit>
        <trans-unit id="c976327d05b5c8b01cee66711dc6ecdd7a85fc90" translate="yes" xml:space="preserve">
          <source>To see very detailed output informations use the &lt;code&gt;--verbose&lt;/code&gt; flag:</source>
          <target state="translated">매우 자세한 출력 정보를 보려면 &lt;code&gt;--verbose&lt;/code&gt; 플래그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8705fb31e48d551a73625a10be2d15eb8d87830" translate="yes" xml:space="preserve">
          <source>To see very detailed output system use &lt;code&gt;--verbose&lt;/code&gt; flag:</source>
          <target state="translated">매우 자세한 출력 시스템을 보려면 &lt;code&gt;--verbose&lt;/code&gt; 플래그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d12dd8a174260a6505306c9712e1402e937989a1" translate="yes" xml:space="preserve">
          <source>To set a specific context use &lt;code&gt;{ web: 'webview.context' }&lt;/code&gt; instead:</source>
          <target state="translated">특정 컨텍스트를 설정하려면 &lt;code&gt;{ web: 'webview.context' }&lt;/code&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a12e42bd2a1940c60c37ebce40db6d543ea70278" translate="yes" xml:space="preserve">
          <source>To set this option for all scenarios in a file, add &lt;code&gt;retry&lt;/code&gt; to a feature:</source>
          <target state="translated">파일의 모든 시나리오에 대해이 옵션을 설정하려면 기능 에 &lt;code&gt;retry&lt;/code&gt; 를 추가 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0adcbf28886d29a6ddbc49cbac8f959b54f28fa3" translate="yes" xml:space="preserve">
          <source>To set this option for all scenarios in a file, add retry to a feature:</source>
          <target state="translated">파일의 모든 시나리오에 대해이 옵션을 설정하려면 기능에 재 시도를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ff1522cf3a51f2b1894036b30018c039cca66c88" translate="yes" xml:space="preserve">
          <source>To share the same user session across different tests CodeceptJS provides &lt;a href=&quot;https://codecept.io/plugins#autologin&quot;&gt;autoLogin plugin&lt;/a&gt;. It simplifies login management and reduces time consuming login operations. Instead of filling in login form before each test it saves the cookies of a valid user session and reuses it for next tests. If a session expires or doesn't exist, logs in a user again.</source>
          <target state="translated">다른 테스트에서 동일한 사용자 세션을 공유하기 위해 CodeceptJS는 &lt;a href=&quot;https://codecept.io/plugins#autologin&quot;&gt;autoLogin 플러그인을&lt;/a&gt; 제공합니다 . 로그인 관리를 단순화하고 로그인 작업에 소요되는 시간을 줄여줍니다. 각 테스트 전에 로그인 양식을 채우는 대신 유효한 사용자 세션의 쿠키를 저장하고 다음 테스트에 재사용합니다. 세션이 만료되거나 존재하지 않는 경우 사용자를 다시 로그인합니다.</target>
        </trans-unit>
        <trans-unit id="1eeadb17d957120d37282f11839006326e774061" translate="yes" xml:space="preserve">
          <source>To show additional information for a step in a test. Example:</source>
          <target state="translated">테스트 단계에 대한 추가 정보를 표시합니다. 예:</target>
        </trans-unit>
        <trans-unit id="71751b4c7f3d2a20f9b2c0d7f4c03b4a48d8afaf" translate="yes" xml:space="preserve">
          <source>To skip guessing the locator type, pass in a strict locator - A locator starting with '#' or '.' is considered to be CSS. Locators starting with '//' or './/' are considered to be XPath.</source>
          <target state="translated">로케이터 유형 추측을 건너 뛰려면 엄격한 로케이터- '#'또는 '.'로 시작하는 로케이터를 전달합니다. CSS로 간주됩니다. '//'또는 './/'로 시작하는 로케이터는 XPath로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3f14d81240205b42a44a1591306486a558c77681" translate="yes" xml:space="preserve">
          <source>To skip the global search pass exact strict locator (or start locator with &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt;). In this case you are not limited to buttons and links. Any element found by that locator is clicked.</source>
          <target state="translated">전역 검색을 건너 뛰려면 정확한 엄격한 로케이터를 전달하십시오 (또는 &lt;code&gt;//&lt;/code&gt; 또는 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;#&lt;/code&gt; 로 로케이터를 시작하십시오 ). 이 경우 버튼 및 링크로 제한되지 않습니다. 해당 로케이터가 찾은 모든 요소가 클릭됩니다.</target>
        </trans-unit>
        <trans-unit id="69b64acc79358c0efa50588de57163934570f6c6" translate="yes" xml:space="preserve">
          <source>To specify exact locator type use &lt;strong&gt;strict locators&lt;/strong&gt;:</source>
          <target state="translated">정확한 로케이터 유형을 지정하려면 &lt;strong&gt;엄격한 로케이터를&lt;/strong&gt; 사용 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="82630e4ba5036a12c51764862c29a9322fb8cdc5" translate="yes" xml:space="preserve">
          <source>To specify the exact area on a page where actions can be performed you can use &lt;code&gt;within&lt;/code&gt; function. Everything executed in its context will be narrowed to context specified by locator:</source>
          <target state="translated">조치를 수행 할 수있는 페이지에서 정확한 영역을 지정하려면 기능 &lt;code&gt;within&lt;/code&gt; 사용할 수 있습니다 . 컨텍스트에서 실행되는 모든 것은 로케이터가 지정한 컨텍스트로 좁 힙니다.</target>
        </trans-unit>
        <trans-unit id="a8375cf884fd686aecf16f7d28cea39c17630811" translate="yes" xml:space="preserve">
          <source>To specify the exact area on a page where actions can be performed you can use the &lt;code&gt;within&lt;/code&gt; function. Everything executed in its context will be narrowed to context specified by locator:</source>
          <target state="translated">페이지에서 작업을 수행 할 수있는 정확한 영역을 지정하려면 &lt;code&gt;within&lt;/code&gt; 함수를 사용할 수 있습니다 . 컨텍스트에서 실행되는 모든 것은 로케이터가 지정한 컨텍스트로 좁혀집니다.</target>
        </trans-unit>
        <trans-unit id="9f7c6a4f8547ff923a93c6afe5e7f851bb941258" translate="yes" xml:space="preserve">
          <source>To start CodeceptUI in application mode:</source>
          <target state="translated">애플리케이션 모드에서 CodeceptUI를 시작하려면 :</target>
        </trans-unit>
        <trans-unit id="179cb464e9cc61d257e4d59a06177ba42480b173" translate="yes" xml:space="preserve">
          <source>To start CodeceptUI in server mode:</source>
          <target state="translated">서버 모드에서 CodeceptUI를 시작하려면 :</target>
        </trans-unit>
        <trans-unit id="d8260d28f858afabb6e5651aba72493ad40191b7" translate="yes" xml:space="preserve">
          <source>To start a new project initialize CodeceptJS to create main config file: &lt;code&gt;codecept.conf.js&lt;/code&gt;.</source>
          <target state="translated">: 기본 설정 파일 만들 새 프로젝트 초기화 CodeceptJS를 시작하려면 &lt;code&gt;codecept.conf.js&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8262b47005cd46156ee130bd0a53f42e7220bd72" translate="yes" xml:space="preserve">
          <source>To start interactive pause automatically for a failing test you can run tests with &lt;a href=&quot;https://codecept.io/plugins/#pauseonfail&quot;&gt;pauseOnFail Plugin&lt;/a&gt;. When a test fails, the pause mode will be activated, so you can inspect current browser session before it is closed.</source>
          <target state="translated">실패한 테스트에 대해 대화식 일시 중지를 자동으로 시작하려면 &lt;a href=&quot;https://codecept.io/plugins/#pauseonfail&quot;&gt;pauseOnFail Plugin으로&lt;/a&gt; 테스트를 실행할 수 있습니다 . 테스트가 실패하면 일시 중지 모드가 활성화되므로 닫기 전에 현재 브라우저 세션을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e1e02e70ba7220b433297d51952444b4a0229a" translate="yes" xml:space="preserve">
          <source>To start please install &lt;code&gt;allure-commandline&lt;/code&gt; package (which requires Java 8)</source>
          <target state="translated">시작하려면 &lt;code&gt;allure-commandline&lt;/code&gt; 패키지 (Java 8 필요) 를 설치하십시오</target>
        </trans-unit>
        <trans-unit id="530dedc976b2a27fd3e60a9b172e295acbf77222" translate="yes" xml:space="preserve">
          <source>To start using CodeceptJS you will need to install it via NPM and initialize it in a directory with tests.</source>
          <target state="translated">CodeceptJS 사용을 시작하려면 NPM을 통해 설치하고 테스트가있는 디렉토리에서 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d8e12737b5669a19012fbdd71eaba4d5770dba8" translate="yes" xml:space="preserve">
          <source>To start using CodeceptJS you will need to install it via NPM and initialize it in directory with tests.</source>
          <target state="translated">CodeceptJS를 사용하려면 NPM을 통해 설치하고 테스트를 통해 디렉토리에서 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="edf5acae38231ad8790721a350ba522afd75b2fc" translate="yes" xml:space="preserve">
          <source>To start using CodeceptUI you need to have CodeceptJS project with a few tests written. If CodeceptUI was installed by &lt;code&gt;create-codecept&lt;/code&gt; command it can be started with:</source>
          <target state="translated">CodeceptUI 사용을 시작하려면 몇 가지 테스트가 작성된 CodeceptJS 프로젝트가 있어야합니다. CodeceptUI가 &lt;code&gt;create-codecept&lt;/code&gt; 명령 으로 설치된 경우 다음으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47b54fa654cb35516d73df970c5e94d7c93634b1" translate="yes" xml:space="preserve">
          <source>To start using TestCafe with CodeceptJS install both via NPM</source>
          <target state="translated">CodeceptJS와 함께 TestCafe 사용을 시작하려면 NPM을 통해 둘 다 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="521465ce69232ac885686acbef74fc224e08a6f6" translate="yes" xml:space="preserve">
          <source>To start writing a test it is important to understand how to locate elements for native mobile applications. In both Android and iPhone elements are defined in XML format and can be searched by XPath locators.</source>
          <target state="translated">테스트 작성을 시작하려면 기본 모바일 애플리케이션의 요소를 찾는 방법을 이해해야합니다. Android 및 iPhone 요소 모두에서 XML 형식으로 정의되며 XPath 로케이터로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="900ebfc14e0e6d4d57df376b264c2cb23555328b" translate="yes" xml:space="preserve">
          <source>To start you need CodeceptJS with Playwright packages installed</source>
          <target state="translated">시작하려면 Playwright 패키지가 설치된 CodeceptJS가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="97e34aedb45f88adb2cb8c3dc0c66cf16e6b3343" translate="yes" xml:space="preserve">
          <source>To start you need CodeceptJS with Puppeteer packages installed</source>
          <target state="translated">시작하려면 Puppeteer 패키지가 설치된 CodeceptJS가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1654e19c8a6de96e26d1f254de659120deae5407" translate="yes" xml:space="preserve">
          <source>To start you need CodeceptJS with nightmare package installed.</source>
          <target state="translated">시작하려면 악몽 패키지가 설치된 CodeceptJS가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f416a75640c459750ad3ee388c335da78b24cfb3" translate="yes" xml:space="preserve">
          <source>To stop request recording/replaying use &lt;code&gt;I.stopMocking()&lt;/code&gt;.</source>
          <target state="translated">요청 기록 / 재생을 중지하려면 &lt;code&gt;I.stopMocking()&lt;/code&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f7705b77f5746b9fceccd5a23480057b6c3971e" translate="yes" xml:space="preserve">
          <source>To update &lt;a href=&quot;https://netflix.github.io/pollyjs/#/configuration&quot;&gt;PollyJS configuration (opens new window)&lt;/a&gt; use secon argument:</source>
          <target state="translated">&lt;a href=&quot;https://netflix.github.io/pollyjs/#/configuration&quot;&gt;PollyJS 구성&lt;/a&gt; 을 업데이트하려면 (새 창에서 열림) secon 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8fbbd79323c2915680c6bc843640b06c382fa890" translate="yes" xml:space="preserve">
          <source>To use SmartWait and wait for element to appear on a page, add &lt;code&gt;true&lt;/code&gt; as second arg:</source>
          <target state="translated">SmartWait을 사용하고 요소가 페이지에 나타날 때까지 기다리려면 두 번째 인수로 &lt;code&gt;true&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec467de0e37461348ca1663203f29b211445d1d4" translate="yes" xml:space="preserve">
          <source>To use a Page Fragment within a Page Object, you can use &lt;code&gt;inject&lt;/code&gt; method to get it by its name.</source>
          <target state="translated">페이지 개체 내에서 페이지 조각을 사용하려면 &lt;code&gt;inject&lt;/code&gt; 메서드를 사용 하여 이름으로 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd37a657007ccd611e47bffb6f88e517bd74f966" translate="yes" xml:space="preserve">
          <source>To use a Page Fragment within a Page Object, you need to &lt;code&gt;require&lt;/code&gt; it on top of the Page Object file:</source>
          <target state="translated">페이지 개체 내에서 페이지 조각을 사용하려면, 당신은해야 할 &lt;code&gt;require&lt;/code&gt; 페이지 객체 파일의 상단에를 :</target>
        </trans-unit>
        <trans-unit id="1f2b37261513d8f19482b4288e025adc675e2b43" translate="yes" xml:space="preserve">
          <source>To use a Page Fragment within a Test Scenario just inject it into your Scenario:</source>
          <target state="translated">테스트 시나리오에서 페이지 조각을 사용하려면 시나리오에 페이지 조각을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="5668b1b7f6d7dc22e1ad0da7912adef5ab39e548" translate="yes" xml:space="preserve">
          <source>To use a Page Fragment within a Test Scenario, just inject it into your Scenario:</source>
          <target state="translated">테스트 시나리오 내에서 페이지 조각을 사용하려면 시나리오에 삽입하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d82e0f6a4e8ee6f2f34d5c37bb34ee9a7c3f37d4" translate="yes" xml:space="preserve">
          <source>To use in passthrough mode set rules to mock requests and they will be automatically intercepted and replaced:</source>
          <target state="translated">패스 스루 모드에서 사용하려면 모의 요청에 대한 규칙을 설정하면 자동으로 가로 채서 교체됩니다.</target>
        </trans-unit>
        <trans-unit id="5cfafd7030479be840ac28fac2193e7c45154140" translate="yes" xml:space="preserve">
          <source>To use it with Nightmare install nightmare and nightmare-upload packages:</source>
          <target state="translated">Nightmare와 함께 사용하려면 nightmare 및 nightmare-upload 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="2eaf83cb99b28ca295386b72546a3bbdb9407429" translate="yes" xml:space="preserve">
          <source>To use it with Protractor install protractor package:</source>
          <target state="translated">각도기 설치와 함께 사용하려면 각도기 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="fdcc058df9c075e9f21f2111a4802d1ad6d5cc6e" translate="yes" xml:space="preserve">
          <source>To use it with Puppeteer install puppeteer package:</source>
          <target state="translated">Puppeteer와 함께 사용하려면 puppeteer 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="370b85d7a907a4119da864fe618720c70bf22aa4" translate="yes" xml:space="preserve">
          <source>To use it with WebDriver install webdriverio package:</source>
          <target state="translated">WebDriver와 함께 사용하려면 webdriverio 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="3ef680a79116844b722cde9d6f8f683c698bd120" translate="yes" xml:space="preserve">
          <source>To use it with WebDriverIO install webdriverio package:</source>
          <target state="translated">WebDriverIO와 함께 사용하려면 webdriverio 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="7e816d41c4891c5ed28c698a842d7d307bb92bb0" translate="yes" xml:space="preserve">
          <source>To use remote device you can provide 'remote' as browser parameter this will display a link with QR Code See &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/recipes/test-on-remote-computers-and-mobile-devices&quot;&gt;https://devexpress.github.io/testcafe/documentation/recipes/test-on-remote-computers-and-mobile-devices.html (opens new window)&lt;/a&gt;</source>
          <target state="translated">원격 장치를 사용하려면 브라우저 매개 변수로 '원격'을 제공하면 QR 코드가있는 링크가 표시됩니다. &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/recipes/test-on-remote-computers-and-mobile-devices&quot;&gt;https://devexpress.github.io/testcafe/documentation/recipes/test-on-remote-computers-and-mobile- 참조 devices.html (새 창에서 열림)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f10d700778e7a2439c478d219c5b02502bfd1e78" translate="yes" xml:space="preserve">
          <source>To work, you need the client javascript code to be NOT uglified. They need to be built in &quot;development&quot; mode. And the end of your tests, you'll get a directory full of coverage per test run. Now what? You'll need to convert the coverage code to something istanbul can read. Good news is someone wrote the code for you (see puppeteer-to-istanbul link below). Then using istanbul you need to combine the converted coverage and create a report. Good luck!</source>
          <target state="translated">작동하려면 클라이언트 자바 스크립트 코드가 무시되지 않아야합니다. &quot;개발&quot;모드로 빌드해야합니다. 그리고 테스트가 끝나면 테스트 실행 당 커버리지로 가득 찬 디렉토리를 얻게됩니다. 이제 뭐? 커버리지 코드를 이스탄불이 읽을 수있는 것으로 변환해야합니다. 좋은 소식은 누군가 당신을 위해 코드를 작성했다는 것입니다 (아래의 꼭두각시-이스탄불 링크 참조). 그런 다음 이스탄불을 사용하여 변환 된 범위를 결합하고 보고서를 만들어야합니다. 행운을 빕니다!</target>
        </trans-unit>
        <trans-unit id="5a94dc76ff20fd5b7546ff6bd0cdaaf74102d809" translate="yes" xml:space="preserve">
          <source>To write simpler and effective tests we encourage to use short cuts. Make test be focused on one feature and try to simplify everything that is not related directly to test.</source>
          <target state="translated">더 간단하고 효과적인 테스트를 작성하려면 지름길을 사용하는 것이 좋습니다. 테스트가 하나의 기능에 집중되도록하고 테스트와 직접 관련이없는 모든 것을 단순화하십시오.</target>
        </trans-unit>
        <trans-unit id="9e043b022f30e6001e3c9f611a664861633c9ce7" translate="yes" xml:space="preserve">
          <source>To write your tests in French you can enable the French translation by adding to config:</source>
          <target state="translated">프랑스어로 테스트를 작성하려면 config에 추가하여 프랑스어 번역을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d0d429c99f6f8f65c1e4c01a792cd20d3b907a" translate="yes" xml:space="preserve">
          <source>To write your tests in portuguese you can enable the portuguese translation in config file like:</source>
          <target state="translated">포르투갈어로 테스트를 작성하려면 다음과 같이 구성 파일에서 포르투갈어 번역을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="58512039597890193a44dce4a787d507f0c29c5d" translate="yes" xml:space="preserve">
          <source>Today all modern web applications have REST API. So it is a good idea to use it to create data for a test and delete it after. API supposed to be a stable interface and it can be used by acceptance tests. CodeceptJS provides 2 helpers for Data Management via REST API.</source>
          <target state="translated">오늘날 모든 최신 웹 애플리케이션에는 REST API가 있습니다. 따라서 테스트 용 데이터를 작성하고 나중에 삭제하는 데 사용하는 것이 좋습니다. API는 안정적인 인터페이스로 간주되며 승인 테스트에서 사용할 수 있습니다. CodeceptJS는 REST API를 통해 데이터 관리를위한 2 개의 헬퍼를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3a49d04edc1ab4a0b717ab58e5acccf1ef82a1ed" translate="yes" xml:space="preserve">
          <source>Today all modern web applications have REST or GraphQL API . So it is a good idea to use it to create data for a test and delete it after. API is supposed to be a stable interface and it can be used by acceptance tests. CodeceptJS provides 4 helpers for Data Management via REST and GraphQL API.</source>
          <target state="translated">오늘날 모든 최신 웹 애플리케이션에는 REST 또는 GraphQL API가 있습니다. 따라서 테스트 용 데이터를 생성하고 나중에 삭제하는 데 사용하는 것이 좋습니다. API는 안정적인 인터페이스 여야하며 승인 테스트에서 사용할 수 있습니다. CodeceptJS는 REST 및 GraphQL API를 통해 데이터 관리를위한 4 개의 도우미를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c33099dcec17e883a56194412bf5bd503be62c52" translate="yes" xml:space="preserve">
          <source>Todo Test</source>
          <target state="translated">할일 테스트</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="a975cfaf636408d33108ddab54b9bc044a7078d8" translate="yes" xml:space="preserve">
          <source>Try to perform your scenario step by step. Then copy succesful commands and insert them into a test.</source>
          <target state="translated">시나리오를 단계별로 수행하십시오. 그런 다음 성공적인 명령을 복사하여 테스트에 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="78f9c0525ac7bf9d8ab2e9c0de9e9d9dbdcb7dab" translate="yes" xml:space="preserve">
          <source>Tuning configuration for helpers like WebDriver, Puppeteer can be hard, as it requires good understanding of how these technologies work. Use the &lt;a href=&quot;https://github.com/codeceptjs/configure&quot;&gt;&lt;code&gt;@codeceptjs/configure&lt;/code&gt; (opens new window)&lt;/a&gt; package with common configuration recipes.</source>
          <target state="translated">WebDriver, Puppeteer와 같은 도우미에 대한 구성 조정은 이러한 기술의 작동 방식을 잘 이해해야하기 때문에 어려울 수 있습니다. 사용 &lt;a href=&quot;https://github.com/codeceptjs/configure&quot;&gt; &lt;code&gt;@codeceptjs/configure&lt;/code&gt; (새 창을 엽니 다)&lt;/a&gt; 일반적인 구성 조리법 패키지를.</target>
        </trans-unit>
        <trans-unit id="38c087c694cd03fce0bb2b3ea35b87e4ee6e1251" translate="yes" xml:space="preserve">
          <source>Turn off minification for application builds otherwise component names will be uglified as well</source>
          <target state="translated">응용 프로그램 빌드에 대한 축소를 끄십시오. 그렇지 않으면 구성 요소 이름도 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3741712ddfe0c9bfc5da0baef795807d298f9e73" translate="yes" xml:space="preserve">
          <source>Turn off the &lt;code&gt;restart&lt;/code&gt; option if you want to run your suite in a single browser instance.</source>
          <target state="translated">단일 브라우저 인스턴스에서 스위트를 실행 하려면 &lt;code&gt;restart&lt;/code&gt; 옵션을 끄십시오 .</target>
        </trans-unit>
        <trans-unit id="61a0a642bce073f3ad94e858090a59e2f9bea328" translate="yes" xml:space="preserve">
          <source>Turn off the &lt;code&gt;show&lt;/code&gt; option if you want to run test in headless mode.</source>
          <target state="translated">헤드리스 모드에서 테스트를 실행 하려면 &lt;code&gt;show&lt;/code&gt; 옵션을 끄십시오 .</target>
        </trans-unit>
        <trans-unit id="f1d4a90540f2e07e93418697dfc9a3f920a71b08" translate="yes" xml:space="preserve">
          <source>Turn off the &lt;code&gt;show&lt;/code&gt; option if you want to run test in headless mode. If you don't specify the browser here, &lt;code&gt;chromium&lt;/code&gt; will be used. Possible browsers are: &lt;code&gt;chromium&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt; and &lt;code&gt;webkit&lt;/code&gt;</source>
          <target state="translated">헤드리스 모드에서 테스트를 실행 하려면 &lt;code&gt;show&lt;/code&gt; 옵션을 끄십시오 . 여기에서 브라우저를 지정하지 않으면 &lt;code&gt;chromium&lt;/code&gt; 이 사용됩니다. 가능한 브라우저 : &lt;code&gt;chromium&lt;/code&gt; , &lt;code&gt;firefox&lt;/code&gt; 및 &lt;code&gt;webkit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa59884b6741eacdf93fe0d55c7a78da16453b70" translate="yes" xml:space="preserve">
          <source>Turn on the &lt;code&gt;show&lt;/code&gt; option if you want to follow test progress in a window. This is very useful for debugging.</source>
          <target state="translated">창에서 테스트 진행을 따르려면 &lt;code&gt;show&lt;/code&gt; 옵션을 켜십시오 . 이것은 디버깅에 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="394ccbce7090353e2252f240655ab341d881f171" translate="yes" xml:space="preserve">
          <source>Turn on the &lt;code&gt;show&lt;/code&gt; option if you want to follow test progress in a window. This is very useful for debugging. All other options can be taken from &lt;a href=&quot;https://github.com/segmentio/nightmare#api&quot;&gt;NightmareJS API&lt;/a&gt;.</source>
          <target state="translated">창에서 테스트 진행을 따르려면 &lt;code&gt;show&lt;/code&gt; 옵션을 켜십시오 . 이것은 디버깅에 매우 유용합니다. 다른 모든 옵션은 &lt;a href=&quot;https://github.com/segmentio/nightmare#api&quot;&gt;NightmareJS API&lt;/a&gt; 에서 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8093685b50e97c5589a7048b76a107fcce13829a" translate="yes" xml:space="preserve">
          <source>Type in different actions to try them, copy and paste successful ones into the test file.</source>
          <target state="translated">시도 할 다른 작업을 입력하고 성공한 작업을 복사하여 테스트 파일에 붙여 넣습니다.</target>
        </trans-unit>
        <trans-unit id="412bb5d4610a6199453d4161bbc2f008d48f7949" translate="yes" xml:space="preserve">
          <source>Type in different actions to try them, copy valid successful ones to test, update the test file.</source>
          <target state="translated">다른 작업을 입력하여 시도해보고, 성공한 테스트를 복사하여 테스트 파일을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="ce67f2cbd8ff5a2fced8e3ee7727e721734ad2ad" translate="yes" xml:space="preserve">
          <source>TypeScript Boilerplate</source>
          <target state="translated">TypeScript 보일러 플레이트</target>
        </trans-unit>
        <trans-unit id="c46bd93a1eeb9d6eeea6c64732c8618264c46071" translate="yes" xml:space="preserve">
          <source>TypeScript Definitions</source>
          <target state="translated">타입 스크립트 정의</target>
        </trans-unit>
        <trans-unit id="d7bf8ba2b74edadfbeece1566a7a0ea249acf903" translate="yes" xml:space="preserve">
          <source>TypeScript Definitions allows IDEs to provide autocompletion when writing tests.</source>
          <target state="translated">TypeScript Definitions는 IDE가 테스트를 작성할 때 자동 완성 기능을 제공 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="52524e66f57c06aed5cad1c55ac34505dd2ef6da" translate="yes" xml:space="preserve">
          <source>Types for custom helper or page object</source>
          <target state="translated">사용자 지정 도우미 또는 페이지 개체의 유형</target>
        </trans-unit>
        <trans-unit id="4b0cd03f7cdb8d288120100cf02545dfc60649a5" translate="yes" xml:space="preserve">
          <source>Types out the given text into an active field. To slow down typing use a second parameter, to set interval between key presses. &lt;em&gt;Note:&lt;/em&gt; Should be used when &lt;a href=&quot;#fillfield&quot;&gt;&lt;code&gt;fillField&lt;/code&gt;&lt;/a&gt; is not an option.</source>
          <target state="translated">주어진 텍스트를 활성 필드에 입력합니다. 입력 속도를 늦추려면 두 번째 매개 변수를 사용하여 키 누르기 간격을 설정하십시오. &lt;em&gt;참고 : &lt;/em&gt;&lt;a href=&quot;#fillfield&quot;&gt; &lt;code&gt;fillField&lt;/code&gt; &lt;/a&gt; 가 옵션이 아닐 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="feab39ee2bbfe8daa1e9c0a6177a40d6d2175fce" translate="yes" xml:space="preserve">
          <source>UI of your web application has interaction areas which can be shared across different tests. To avoid code duplication you can put common locators and methods into one place.</source>
          <target state="translated">웹 응용 프로그램의 UI에는 서로 다른 테스트에서 공유 할 수있는 상호 작용 영역이 있습니다. 코드 중복을 피하기 위해 공통 로케이터와 메소드를 한 곳에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c12db084084adfb30a4cae99ab64377dce6931a7" translate="yes" xml:space="preserve">
          <source>Ubiquitous Language</source>
          <target state="translated">유비쿼터스 언어</target>
        </trans-unit>
        <trans-unit id="610d736dbddfd74b732dca313d869892f0a8018b" translate="yes" xml:space="preserve">
          <source>Unless you use retryFailedStep plugin you can manually control retries in your project.</source>
          <target state="translated">retryFailedStep 플러그인을 사용하지 않는 한 프로젝트에서 재 시도를 수동으로 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7be772710ac18949f15dbf01260c9f2e31f327a9" translate="yes" xml:space="preserve">
          <source>Unlike Cucumber, CodeceptJS is not about writing test scenarios above for business rules. To say it again, its &lt;strong&gt;goal is to provide standard action steps you can use for testing applications&lt;/strong&gt;. Surely, it can't cover 100% of cases but it aims for 90%, for others you can write your own steps inside a &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;custom Helper&lt;/a&gt; using API of Protractor</source>
          <target state="translated">오이와 달리 CodeceptJS는 위의 비즈니스 규칙에 대한 테스트 시나리오 작성에 관한 것이 아닙니다. 다시 말해, &lt;strong&gt;목표는 애플리케이션 테스트에 사용할 수있는 표준 조치 단계를 제공&lt;/strong&gt; 하는 &lt;strong&gt;것입니다&lt;/strong&gt; . 분명히, 그것은 100 %의 경우를 커버 할 수 없지만 90 %를 목표로합니다. 다른 사람들을 위해 API의 Protractor를 사용하여 &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;사용자 정의 도우미&lt;/a&gt; 안에 자신의 단계를 작성할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5367882fdcec081aef703aff24508138d36ce73e" translate="yes" xml:space="preserve">
          <source>Unlike Cucumber, CodeceptJS is not about writing test scenarios to satisfy business rules or requirements. Instead, its &lt;strong&gt;goal is to provide standard action steps you can use for testing applications&lt;/strong&gt;. Although it can't cover 100% of use cases, CodeceptJS aims for 90%. For the remainder, you can write your own steps inside a &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;custom Helper (opens new window)&lt;/a&gt; using Protractor's API.</source>
          <target state="translated">Cucumber와 달리 CodeceptJS는 비즈니스 규칙이나 요구 사항을 충족하기 위해 테스트 시나리오를 작성하는 것이 아닙니다. 대신 &lt;strong&gt;애플리케이션 테스트에 사용할 수있는 표준 작업 단계를 제공&lt;/strong&gt; 하는 &lt;strong&gt;것이 목표입니다&lt;/strong&gt; . 사용 사례를 100 % 다룰 수는 없지만 CodeceptJS는 90 %를 목표로합니다. 나머지는 Protractor의 API를 사용하여 &lt;a href=&quot;https://codecept.io/helpers/&quot;&gt;사용자 지정 도우미 (새 창에서 열림)&lt;/a&gt; 내에 자신 만의 단계를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06548ac639c4dcb3bc4182a43e8cf2f7bda54e70" translate="yes" xml:space="preserve">
          <source>Unlike other plugins, &lt;code&gt;pauseOnFail&lt;/code&gt; is not recommended to be enabled by default. Enable it manually on each run via &lt;code&gt;-p&lt;/code&gt; option:</source>
          <target state="translated">다른 플러그인과 달리 &lt;code&gt;pauseOnFail&lt;/code&gt; 은 기본적으로 활성화하지 않는 것이 좋습니다. &lt;code&gt;-p&lt;/code&gt; 옵션을 통해 실행할 때마다 수동으로 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="c50256659f36ba420b19da18c6bf87183176b9ec" translate="yes" xml:space="preserve">
          <source>Unselects a checkbox or radio button. Element is located by label or name or CSS or XPath.</source>
          <target state="translated">확인란 또는 라디오 버튼을 선택 취소합니다. 요소는 레이블 또는 이름 또는 CSS 또는 XPath로 위치합니다.</target>
        </trans-unit>
        <trans-unit id="60ca454412dbb64d426443cd30ff4f5b707b1e50" translate="yes" xml:space="preserve">
          <source>Update JSX files to change output HTML and rebuild the application</source>
          <target state="translated">출력 HTML을 변경하고 애플리케이션을 다시 빌드하도록 JSX 파일을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="798d98908e8309782bb608befc076d882caae2c1" translate="yes" xml:space="preserve">
          <source>Update the current setting on the device</source>
          <target state="translated">장치의 현재 설정 업데이트</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="197e20a8b7ad63f5b858b0e3ddfbee4cee5d5039" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;within('section', ()=&amp;gt;{})&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;within('section', ()=&amp;gt;{})&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a144ffc68a913ed601bc94e5b7df77f2d41c764" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://aerokube.com/cm/latest/&quot;&gt;Selenoid Configuration Manager (opens new window)&lt;/a&gt; to create and start containers semi-automatically.</source>
          <target state="translated">사용 &lt;a href=&quot;https://aerokube.com/cm/latest/&quot;&gt;Selenoid 구성 관리자 (새 창에서 열림)&lt;/a&gt; 생성 및 반 자동으로 컨테이너를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="5548c6a64434ddd92f563f32c49ebc2a60279431" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://codecept.io/pageobjects&quot;&gt;custom steps and page objects&lt;/a&gt; to hide steps which are not relevant to current test.</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/pageobjects&quot;&gt;사용자 지정 단계 및 페이지 개체&lt;/a&gt; 를 사용 하여 현재 테스트와 관련이없는 단계를 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="fea9e3db620e8acc5b0fa5c36676d65ca963999c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://codecept.io/plugins/selenoid&quot;&gt;Selenoid&lt;/a&gt; to run browsers inside Docker containers.</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/plugins/selenoid&quot;&gt;Selenoid&lt;/a&gt; 를 사용 하여 Docker 컨테이너 내에서 브라우저를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="84c1b849dc056715d3089986267181bc9efa3a46" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/&quot;&gt;TestCafe (opens new window)&lt;/a&gt; API inside a test.</source>
          <target state="translated">사용 &lt;a href=&quot;https://devexpress.github.io/testcafe/documentation/test-api/&quot;&gt;TestCafe은 (새 창에서 열림)&lt;/a&gt; 테스트 내부 API를.</target>
        </trans-unit>
        <trans-unit id="400416366783df7362763e99e3c578a6efbbfab8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/PeterNgTr/codeceptjs-applitoolshelper&quot;&gt;CodeceptJS Applitools Helper (opens new window)&lt;/a&gt; with Applitools wdio service.</source>
          <target state="translated">사용 &lt;a href=&quot;https://github.com/PeterNgTr/codeceptjs-applitoolshelper&quot;&gt;CodeceptJS Applitools 도우미 (새 창에서 열림)&lt;/a&gt; Applitools wdio 서비스를.</target>
        </trans-unit>
        <trans-unit id="2861ce2adb37ed8fdc6bfa6ed4db6ba3be724a84" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/codeceptjs/create-codeceptjs&quot;&gt;CodeceptJS all-in-one installer (opens new window)&lt;/a&gt; to get CodeceptJS, a demo project, and Playwright.</source>
          <target state="translated">사용 &lt;a href=&quot;https://github.com/codeceptjs/create-codeceptjs&quot;&gt;CodeceptJS 올인원 설치 (새 창을 엽니 다)&lt;/a&gt; CodeceptJS, 데모 프로젝트와 극작가를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c38484c914b68ac2f0b86296e32d624e02c5e94" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://webdriver.io/docs/api&quot;&gt;webdriverio (opens new window)&lt;/a&gt; API inside a test.</source>
          <target state="translated">사용 &lt;a href=&quot;https://webdriver.io/docs/api&quot;&gt;webdriverio은 (새 창에서 열림)&lt;/a&gt; 테스트 내부 API를.</target>
        </trans-unit>
        <trans-unit id="2d5d355abdb30d3aa8c246e9ede0ff131b37ec11" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://www.npmjs.com/package/selenium-standalone&quot;&gt;selenium-standalone&lt;/a&gt; from NPM to install and run them:</source>
          <target state="translated">NPM의 &lt;a href=&quot;https://www.npmjs.com/package/selenium-standalone&quot;&gt;selenium-standalone&lt;/a&gt; 을 사용 하여 NPM을 설치하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="d2e5d89892951905fced7493fd70fed136dfe27f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://www.protractortest.org/#/api&quot;&gt;Protractor (opens new window)&lt;/a&gt; API inside a test.</source>
          <target state="translated">사용 &lt;a href=&quot;https://www.protractortest.org/#/api&quot;&gt;각도기 (새 창에서 열림)&lt;/a&gt; 테스트 내부 API를.</target>
        </trans-unit>
        <trans-unit id="f97ce176dc7414bc7c6e3034d77ccfa82ea260e0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--headless&lt;/code&gt; option to run browser headlessly</source>
          <target state="translated">&lt;code&gt;--headless&lt;/code&gt; 옵션을 사용 하여 브라우저를 헤드리스로 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="905101835b992811c67efd67b69d9f663729d5cd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--serve&lt;/code&gt; option to start a dev server before tests</source>
          <target state="translated">&lt;code&gt;--serve&lt;/code&gt; 옵션을 사용 하여 테스트 전에 개발 서버를 시작 하십시오.</target>
        </trans-unit>
        <trans-unit id="0a72b3644ef5ec389e490ab2504384053ff370b9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--serve&lt;/code&gt; option to start dev server before running</source>
          <target state="translated">&lt;code&gt;--serve&lt;/code&gt; 옵션을 사용 하여 실행하기 전에 dev 서버를 시작 하십시오.</target>
        </trans-unit>
        <trans-unit id="35722d44d38080cb506d6164fc18a5c79c479d6b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;I.mockServer()&lt;/code&gt; to customize which requests should be recorded and under which name:</source>
          <target state="translated">&lt;code&gt;I.mockServer()&lt;/code&gt; 를 사용 하여 기록 할 요청과 이름을 사용자 지정합니다.</target>
        </trans-unit>
        <trans-unit id="030bbcf1455d5dac666ebe366621396007aeea73" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;grep&lt;/code&gt; to find steps in a list (grep works on Linux &amp;amp; MacOS):</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; 을 사용 하여 목록에서 단계를 찾습니다 (grep은 Linux 및 MacOS에서 작동 함).</target>
        </trans-unit>
        <trans-unit id="678ab0c857f06e04bdf49600a641cba3aa7bc23e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;login&lt;/code&gt; object inside your tests to log in:</source>
          <target state="translated">테스트 내에서 &lt;code&gt;login&lt;/code&gt; 개체를 사용하여 로그인 합니다.</target>
        </trans-unit>
        <trans-unit id="a17f1c06d0a981dbe36a183966b72ecb02d25ddf" translate="yes" xml:space="preserve">
          <source>Use Case</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="1fc68d5db1d83a654ede6624f440dad5cebcaec0" translate="yes" xml:space="preserve">
          <source>Use Case (ApiDataFactory)</source>
          <target state="translated">사용 사례 (ApiDataFactory)</target>
        </trans-unit>
        <trans-unit id="16d1de8b221d1537f4b885a3026e5c0d0b7e7282" translate="yes" xml:space="preserve">
          <source>Use Cases:</source>
          <target state="translated">사용 사례:</target>
        </trans-unit>
        <trans-unit id="3f23fd9e3e349f0b13e5b1addfaf1fe5d8639ebd" translate="yes" xml:space="preserve">
          <source>Use Helpers to introduce low-level API to your tests without polluting test scenarios. Helpers can also be used to share functionality accross different project and installed as npm packages.</source>
          <target state="translated">헬퍼를 사용하여 테스트 시나리오를 오염시키지 않고 테스트에 저수준 API를 도입하십시오. 도우미를 사용하여 여러 프로젝트에서 기능을 공유하고 npm 패키지로 설치할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="562561975f2185e51c84bfa5422f10c20f06c673" translate="yes" xml:space="preserve">
          <source>Use NPM install CodeceptJS:</source>
          <target state="translated">NPM 설치 CodeceptJS를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="16a56bdee0b08316423be03206f398f22544f615" translate="yes" xml:space="preserve">
          <source>Use Playwright API inside a test.</source>
          <target state="translated">테스트 내에서 Playwright API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="721a6ef824a85a44c094324a7f321f9a0a2ed55f" translate="yes" xml:space="preserve">
          <source>Use PollyJS &lt;a href=&quot;https://netflix.github.io/pollyjs/#/server/overview&quot;&gt;Server Routes API (opens new window)&lt;/a&gt; to declare mocks via callback function:</source>
          <target state="translated">PollyJS &lt;a href=&quot;https://netflix.github.io/pollyjs/#/server/overview&quot;&gt;Server Routes API (새 창에서 열림)&lt;/a&gt; 를 사용하여 콜백 함수를 통해 모의를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="2c348cce53cb2520dae474efa1f9c8acf66e2339" translate="yes" xml:space="preserve">
          <source>Use Puppeteer API inside a test.</source>
          <target state="translated">테스트 내에서 Puppeteer API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fb8be758f6ea128c92caf620cc22496a0fa6e348" translate="yes" xml:space="preserve">
          <source>Use an argument to set number of workers</source>
          <target state="translated">인수를 사용하여 작업자 수 설정</target>
        </trans-unit>
        <trans-unit id="1e462b6b82816d0aef0a14dff9cf5f43d01d8ab8" translate="yes" xml:space="preserve">
          <source>Use any of &lt;a href=&quot;https://github.com/mochajs/mocha/tree/master/lib/reporters&quot;&gt;Mocha reporters (opens new window)&lt;/a&gt; used.</source>
          <target state="translated">사용한 &lt;a href=&quot;https://github.com/mochajs/mocha/tree/master/lib/reporters&quot;&gt;모카 리포터 (새 창에서 열림)를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0b29cdda2bd8382e5dcdb414cf35bbe4410e5d7f" translate="yes" xml:space="preserve">
          <source>Use any of &lt;a href=&quot;https://github.com/mochajs/mocha/tree/master/lib/reporters&quot;&gt;Mocha reporters&lt;/a&gt; used.</source>
          <target state="translated">사용 된 &lt;a href=&quot;https://github.com/mochajs/mocha/tree/master/lib/reporters&quot;&gt;모카 기자를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c0dcd7a3f49a9466cd65f2f6dc35c0eb10709129" translate="yes" xml:space="preserve">
          <source>Use default xunit reporter of Mocha to print xml reports. Provide &lt;code&gt;--reporter xunit&lt;/code&gt; to get the report to screen. It is recommended to use more powerful &lt;a href=&quot;https://www.npmjs.com/package/mocha-junit-reporter&quot;&gt;&lt;code&gt;mocha-junit-reporter&lt;/code&gt; (opens new window)&lt;/a&gt; package to get better support for Jenkins CI.</source>
          <target state="translated">Mocha의 기본 xunit 리포터를 사용하여 xml 보고서를 인쇄합니다. 보고서를 화면에 표시하려면 &lt;code&gt;--reporter xunit&lt;/code&gt; 을 제공하십시오 . Jenkins CI에 대한 더 나은 지원을 받으려면 더 강력한 &lt;a href=&quot;https://www.npmjs.com/package/mocha-junit-reporter&quot;&gt; &lt;code&gt;mocha-junit-reporter&lt;/code&gt; (새 창에서 열림)&lt;/a&gt; 패키지 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="667e9dd2e7742e4c98b138c122dd4fb6e85bba0e" translate="yes" xml:space="preserve">
          <source>Use default xunit reporter of Mocha to print xml reports. Provide &lt;code&gt;--reporter xunit&lt;/code&gt; to get the report to screen. It is recommended to use more powerful &lt;a href=&quot;https://www.npmjs.com/package/mocha-junit-reporter&quot;&gt;&lt;code&gt;mocha-junit-reporter&lt;/code&gt;&lt;/a&gt; package to get better support for Jenkins CI.</source>
          <target state="translated">XML 보고서를 인쇄하려면 Mocha의 기본 xunit 기자를 사용하십시오. 보고서를 화면에 표시하려면 &lt;code&gt;--reporter xunit&lt;/code&gt; 을 제공하십시오 . Jenkins CI를 더 잘 지원 하려면보다 강력한 &lt;a href=&quot;https://www.npmjs.com/package/mocha-junit-reporter&quot;&gt; &lt;code&gt;mocha-junit-reporter&lt;/code&gt; &lt;/a&gt; 패키지 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="b172a4acc84bbfac0848dee998569e85a5955480" translate="yes" xml:space="preserve">
          <source>Use headless Chrome or Firefox.</source>
          <target state="translated">헤드리스 Chrome 또는 Firefox를 사용하세요.</target>
        </trans-unit>
        <trans-unit id="375b191fc02afbfe0b45163abfc39b341b77a4de" translate="yes" xml:space="preserve">
          <source>Use it with a test body as a test plan:</source>
          <target state="translated">테스트 계획으로 테스트 바디와 함께 사용 :</target>
        </trans-unit>
        <trans-unit id="8eb0718edc0dd7c05fffaa09f7e68fe0c69d4c8f" translate="yes" xml:space="preserve">
          <source>Use official &lt;a href=&quot;https://github.com/reportportal/agent-js-codecept/&quot;&gt;CodeceptJS Agent for ReportPortal (opens new window)&lt;/a&gt; to start publishing your test results.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/reportportal/agent-js-codecept/&quot;&gt;ReportPortal 용&lt;/a&gt; 공식 CodeceptJS 에이전트 (새 창에서 열림) 를 사용하여 테스트 결과 게시를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="a958de95791ba31e4e4718822b08bce6296796fc" translate="yes" xml:space="preserve">
          <source>Use paid &lt;a href=&quot;https://codecept.io/helpers/WebDriver#cloud-providers&quot;&gt;cloud services (SauceLabs, BrowserStack, TestingBot)&lt;/a&gt;.</source>
          <target state="translated">유료 &lt;a href=&quot;https://codecept.io/helpers/WebDriver#cloud-providers&quot;&gt;클라우드 서비스 (SauceLabs, BrowserStack, TestingBot)를 사용&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="734d6841348ccfa93ade9374e67d029d187bb0da" translate="yes" xml:space="preserve">
          <source>Use regex for more flexible filtering:</source>
          <target state="translated">보다 유연한 필터링을 위해 정규식을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="64c0c723e1296b67b254b8625fe0cf1b2a5a4766" translate="yes" xml:space="preserve">
          <source>Use scenario configuration to disable plugin for a test</source>
          <target state="translated">시나리오 구성을 사용하여 테스트 용 플러그인 비활성화</target>
        </trans-unit>
        <trans-unit id="71e49c6ed5be75c2cf6a8e4d7191c486c8e0f736" translate="yes" xml:space="preserve">
          <source>Use the second parameter to pass in a color value (ASCII).</source>
          <target state="translated">두 번째 매개 변수를 사용하여 색상 값 (ASCII)을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="e9608e559d4dab156f51d38dd29dbb366196e145" translate="yes" xml:space="preserve">
          <source>Use this plugin if:</source>
          <target state="translated">다음과 같은 경우이 플러그인을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9866f4440ed90bbdad39a40649c89d9a2bc1ade7" translate="yes" xml:space="preserve">
          <source>Useful for debugging flaky tests on local environment. Add this plugin to config file:</source>
          <target state="translated">로컬 환경에서 비정상적인 테스트를 디버깅하는 데 유용합니다. 이 플러그인을 구성 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d85f6749853cc492155a6589e23bd6c05ef03046" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://github.com/DevExpress/testcafe&quot;&gt;TestCafe (opens new window)&lt;/a&gt; library to run cross-browser tests. The browser version you want to use in tests must be installed on your system.</source>
          <target state="translated">용도 &lt;a href=&quot;https://github.com/DevExpress/testcafe&quot;&gt;TestCafe은 (새 창에서 열림)&lt;/a&gt; 크로스 브라우저 테스트를 실행하는 라이브러리를. 테스트에 사용하려는 브라우저 버전이 시스템에 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="81361e0348aa17adf0d17b60996e9495ee1b3899" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Google Chrome's Puppeteer (opens new window)&lt;/a&gt; library to run tests inside headless Chrome. Browser control is executed via DevTools Protocol (instead of Selenium). This helper works with a browser out of the box with no additional tools required to install.</source>
          <target state="translated">사용 &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;구글 크롬의 인형 (새 창 열림)&lt;/a&gt; 헤드리스 크롬 내에서 실행되는 테스트에 라이브러리를. 브라우저 제어는 DevTools 프로토콜 (Selenium 대신)을 통해 실행됩니다. 이 도우미는 설치에 필요한 추가 도구없이 브라우저에서 즉시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="debf4326b5f4c0583cc560d108d818c52cc7cdd8" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Google Chrome's Puppeteer&lt;/a&gt; library to run tests inside headless Chrome. Browser control is executed via DevTools without Selenium. This helper works with a browser out of the box with no additional tools required to install.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Chrome의 Puppeteer&lt;/a&gt; 라이브러리를 사용 하여 헤드리스 Chrome 내에서 테스트를 실행합니다. 브라우저 제어는 Selenium없이 DevTools를 통해 실행됩니다. 이 도우미는 별도의 도구를 설치하지 않아도 브라우저를 즉시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="171167ce8b600d44247067e8023dae6893605787" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://github.com/microsoft/playwright&quot;&gt;Playwright (opens new window)&lt;/a&gt; library to run tests inside:</source>
          <target state="translated">사용 &lt;a href=&quot;https://github.com/microsoft/playwright&quot;&gt;극작가는 (새 창에서 열림)&lt;/a&gt; 내에서 테스트를 실행하는 라이브러리를 :</target>
        </trans-unit>
        <trans-unit id="6a2f279291086c54b83873c8b1f6c6cf9e9a5b9c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;data-qa&lt;/code&gt; attribute with &lt;code&gt;=&lt;/code&gt; prefix:</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 접두사 와 함께 &lt;code&gt;data-qa&lt;/code&gt; 속성 사용 :</target>
        </trans-unit>
        <trans-unit id="306d0509c77e9337a1ac9a675974f3a240c65ad3" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;data-test&lt;/code&gt; attribute with &lt;code&gt;$&lt;/code&gt; prefix:</source>
          <target state="translated">&lt;code&gt;$&lt;/code&gt; 접두사가있는 &lt;code&gt;data-test&lt;/code&gt; 속성 사용 :</target>
        </trans-unit>
        <trans-unit id="cf7c749ba24b8ce853cb8eb56736aa3cc4ab858b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;process.env.profile&lt;/code&gt; you can change the config dynamically. It provides value of &lt;code&gt;--profile&lt;/code&gt; option passed to runner. Use its value to change config value on the fly.</source>
          <target state="translated">&lt;code&gt;process.env.profile&lt;/code&gt; 을 사용 하여 구성을 동적으로 변경할 수 있습니다. 러너에게 전달 된 &lt;code&gt;--profile&lt;/code&gt; 옵션의 값을 제공합니다 . 해당 값을 사용하여 구성 값을 즉시 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="5426ae1d72b90a1020dc4dcfc78db6f7c5467bcb" translate="yes" xml:space="preserve">
          <source>Using Appium</source>
          <target state="translated">Appium 사용</target>
        </trans-unit>
        <trans-unit id="b8565615bf5c293e54c949bebf38c0815e50c560" translate="yes" xml:space="preserve">
          <source>Using JavaScript-style config &lt;code&gt;codecept.conf.js&lt;/code&gt;, bootstrapAll and teardownAll functions can be placed inside of it:</source>
          <target state="translated">JavaScript 스타일 설정 &lt;code&gt;codecept.conf.js&lt;/code&gt; 를 사용하여 bootstrapAll 및 teardownAll 함수를 그 안에 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bdf0b240426cf3210658d342e032ba3e90e98eb" translate="yes" xml:space="preserve">
          <source>Using NightmareJS</source>
          <target state="translated">NightmareJS 사용</target>
        </trans-unit>
        <trans-unit id="e8729bc93021a2e5283ed88952093ee0c9a0a8f3" translate="yes" xml:space="preserve">
          <source>Using Protractor</source>
          <target state="translated">각도기 사용</target>
        </trans-unit>
        <trans-unit id="9f220bb418577705f7ca310f8e4d6d03df484985" translate="yes" xml:space="preserve">
          <source>Using Puppeteer</source>
          <target state="translated">Puppeteer 사용</target>
        </trans-unit>
        <trans-unit id="b7427957be089e97020f9d6172eca34a56acbee2" translate="yes" xml:space="preserve">
          <source>Using Selenium WebDriver</source>
          <target state="translated">Selenium WebDriver 사용</target>
        </trans-unit>
        <trans-unit id="3881485aadebf4130ff407b182b349700ede69fa" translate="yes" xml:space="preserve">
          <source>Using Typescript</source>
          <target state="translated">Typescript 사용</target>
        </trans-unit>
        <trans-unit id="1c397d53f561fe71e47ddea3d8e6cfd3a9fa0cdb" translate="yes" xml:space="preserve">
          <source>Using only local function names:</source>
          <target state="translated">로컬 함수 이름 만 사용 :</target>
        </trans-unit>
        <trans-unit id="b1b065440da2f5f0907a852b06c69c6ed241468d" translate="yes" xml:space="preserve">
          <source>Using smart locators makes tests easier to write, however searching an element by text is slower than searching via CSS|XPath, and is much slower than using strict locators.</source>
          <target state="translated">스마트 로케이터를 사용하면 테스트 작성이 더 쉬워 지지만 텍스트로 요소를 검색하는 것이 CSS | XPath를 통해 검색하는 것보다 느리고 엄격한 로케이터를 사용하는 것보다 훨씬 느립니다.</target>
        </trans-unit>
        <trans-unit id="1ffb767648dd766b73975a1aa95cbe25840e2b49" translate="yes" xml:space="preserve">
          <source>Using such smart locators makes tests easy to write, however, searching an element by text is slower than using CSS|XPath and much slower than using strict locators.</source>
          <target state="translated">이러한 스마트 로케이터를 사용하면 테스트를 쉽게 작성할 수 있지만 텍스트로 요소를 검색하는 것은 CSS | XPath를 사용하는 것보다 느리고 엄격한 로케이터를 사용하는 것보다 훨씬 느립니다.</target>
        </trans-unit>
        <trans-unit id="fd42e5ebde925b0eee2f3f78337ee1dbc0b1f2fb" translate="yes" xml:space="preserve">
          <source>Using values from &lt;code&gt;process.profile&lt;/code&gt; you can change the config dynamically. It provides value of &lt;code&gt;--profile&lt;/code&gt; option passed to runner. Use its value to change config value on the fly.</source>
          <target state="translated">&lt;code&gt;process.profile&lt;/code&gt; 의 값을 사용 하여 구성을 동적으로 변경할 수 있습니다. 러너에게 전달 된 &lt;code&gt;--profile&lt;/code&gt; 옵션의 값을 제공합니다 . 값을 사용하여 구성 값을 즉시 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="e4da43b6bd5d2a24bc16854301009cdd75abf193" translate="yes" xml:space="preserve">
          <source>Using your own translation file</source>
          <target state="translated">자신의 번역 파일 사용</target>
        </trans-unit>
        <trans-unit id="eaf78ec5fd1732a4c1be20a1e49a531d5d0079ad" translate="yes" xml:space="preserve">
          <source>Various strategies are used to locate semantic elements. However, they may run slower than specifying locator by XPath or CSS.</source>
          <target state="translated">시맨틱 요소를 찾기 위해 다양한 전략이 사용됩니다. 그러나 XPath 또는 CSS로 로케이터를 지정하는 것보다 느리게 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f3a0f20189d5f7f058f1ae3efb63251ccb86768" translate="yes" xml:space="preserve">
          <source>Verifies that the specified checkbox is checked.</source>
          <target state="translated">지정된 확인란이 선택되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d28acaef6df9d232e03779172e169d3ce681f151" translate="yes" xml:space="preserve">
          <source>Verifies that the specified checkbox is not checked.</source>
          <target state="translated">지정된 확인란이 선택되어 있지 않은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1d5d3f6b11870d5f6ea7e047e5494b8f480e46d7" translate="yes" xml:space="preserve">
          <source>Via Installer</source>
          <target state="translated">설치 프로그램을 통해</target>
        </trans-unit>
        <trans-unit id="bc17c1f0179a888f2a7e8389f67d4f2cf5cf4531" translate="yes" xml:space="preserve">
          <source>Video</source>
          <target state="translated">Video</target>
        </trans-unit>
        <trans-unit id="08acdeca1d30afde8ac48875981902ed8ee8a8f6" translate="yes" xml:space="preserve">
          <source>Video Recording</source>
          <target state="translated">비디오 촬영</target>
        </trans-unit>
        <trans-unit id="d2fbbbc5cd867da155e1adbf78a49c6321bd1dc1" translate="yes" xml:space="preserve">
          <source>Visual testing via Applitools service</source>
          <target state="translated">Applitools 서비스를 통한 시각적 테스트</target>
        </trans-unit>
        <trans-unit id="96056c7a1d346e7e260177cdf4d9140ebc70f5b8" translate="yes" xml:space="preserve">
          <source>Visual-Testing</source>
          <target state="translated">Visual-Testing</target>
        </trans-unit>
        <trans-unit id="5b21f620bae7763fd6b15df52c8ee9f6d1593996" translate="yes" xml:space="preserve">
          <source>Vue CLI installed globally</source>
          <target state="translated">전 세계적으로 설치된 Vue CLI</target>
        </trans-unit>
        <trans-unit id="33d30632848d3fd0ed2340adbd7be3e3e8e61010" translate="yes" xml:space="preserve">
          <source>Waiting</source>
          <target state="translated">Waiting</target>
        </trans-unit>
        <trans-unit id="58ae18181d2126cd7553470ada8b4bf406541218" translate="yes" xml:space="preserve">
          <source>Waiting for the part of the URL to match the expected. Useful for SPA to understand that page was changed.</source>
          <target state="translated">URL의 일부가 예상과 일치하기를 기다리는 중입니다. SPA가 페이지가 변경되었음을 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cece8eefb821ec20fc2c9a231b419301a7176225" translate="yes" xml:space="preserve">
          <source>Waits an elment to become not visible.</source>
          <target state="translated">엘먼트가 보이지 않을 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="608e1f4b9f8e6f52ecc7537fbac3be3db77e45a0" translate="yes" xml:space="preserve">
          <source>Waits for a function to return true (waits for 1 sec by default). Running in browser context.</source>
          <target state="translated">함수가 true를 반환하기를 기다립니다 (기본적으로 1 초 동안 대기). 브라우저 컨텍스트에서 실행</target>
        </trans-unit>
        <trans-unit id="0a3b5a414ff6c8607f5ffc754212c33a38cda7c9" translate="yes" xml:space="preserve">
          <source>Waits for a function to return true (waits for 1sec by default).</source>
          <target state="translated">함수가 true를 반환 할 때까지 기다립니다 (기본적으로 1 초 동안 대기).</target>
        </trans-unit>
        <trans-unit id="170fb4fd4de45ba0a4eae28371ae989f92c3a62b" translate="yes" xml:space="preserve">
          <source>Waits for a network request.</source>
          <target state="translated">네트워크 요청을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="e711fbeb9c8bed8c469b161cd5aecf448bda117f" translate="yes" xml:space="preserve">
          <source>Waits for a network response.</source>
          <target state="translated">네트워크 응답을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="88d939da0749726d6dd5610198b17515578ed573" translate="yes" xml:space="preserve">
          <source>Waits for a specified number of elements on the page</source>
          <target state="translated">페이지에서 지정된 수의 요소를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="76ac397c502428d54bdf284fb5cbaf7fecdd5f5d" translate="yes" xml:space="preserve">
          <source>Waits for a specified number of elements on the page.</source>
          <target state="translated">페이지에서 지정된 수의 요소를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="7d7886533a339fb98f4c972bbb7b4711940d572b" translate="yes" xml:space="preserve">
          <source>Waits for a text to appear (by default waits for 1sec). Element can be located by CSS or XPath. Narrow down search results by providing context.</source>
          <target state="translated">텍스트가 나타날 때까지 기다립니다 (기본적으로 1 초 동안 기다립니다). 요소는 CSS 또는 XPath로 찾을 수 있습니다. 컨텍스트를 제공하여 검색 결과를 좁 힙니다.</target>
        </trans-unit>
        <trans-unit id="ce42798cea3869925c679a0eed38f05a1a59f4b8" translate="yes" xml:space="preserve">
          <source>Waits for all requests handled by MockRequests to be resolved:</source>
          <target state="translated">MockRequests가 처리 한 모든 요청이 해결되기를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="bca765278deb626079936cac24bc7fc12f0edc18" translate="yes" xml:space="preserve">
          <source>Waits for an element to be removed or become invisible on a page (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">페이지에서 요소가 제거되거나 보이지 않게 될 때까지 대기합니다 (기본적으로 1 초 동안 대기 함). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42fec2670566452d3bba0d4944e4b05fa6cd342e" translate="yes" xml:space="preserve">
          <source>Waits for an element to be visible on page.</source>
          <target state="translated">요소가 페이지에 표시 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="bae53ae1e27ddd824a8aa1efc1a99e2e4a99e06d" translate="yes" xml:space="preserve">
          <source>Waits for an element to become not attached to the DOM on a page (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">요소가 페이지의 DOM에 첨부되지 않을 때까지 대기합니다 (기본적으로 1 초 동안 대기 함). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e6ea7602fd415ce658d347cf894e16b3102dc65" translate="yes" xml:space="preserve">
          <source>Waits for an element to become visible on a page (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">페이지에 요소가 표시 될 때까지 대기합니다 (기본적으로 1 초 동안 대기 함). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="703e2012bc29f1186ab64d7a5bbf54fbc594e8c0" translate="yes" xml:space="preserve">
          <source>Waits for an element to exist on page.</source>
          <target state="translated">페이지에 요소가 존재하기를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="68155e36ab766f983ab66cc0031d82eb18a26999" translate="yes" xml:space="preserve">
          <source>Waits for an element to hide (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">요소가 숨길 때까지 기다립니다 (기본적으로 1 초 동안 기다립니다). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf22b0274c81f9ea2ada021d1f5643ac59d9c7e7" translate="yes" xml:space="preserve">
          <source>Waits for element to be clickable (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">요소를 클릭 할 수있을 때까지 기다립니다 (기본적으로 1 초 동안 대기). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efbc5db7617ebfd7103fc671f9ad28d2c4c48eb6" translate="yes" xml:space="preserve">
          <source>Waits for element to be present on page (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">요소가 페이지에 나타날 때까지 기다립니다 (기본적으로 1 초 동안 기다립니다). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34e3522d3eb8f55a7133d392e9bc6650013bf090" translate="yes" xml:space="preserve">
          <source>Waits for element to become clickable for number of seconds.</source>
          <target state="translated">요소가 몇 초 동안 클릭 가능한 상태가 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="481ae48126d4516ac355e4a90dd6a379bb4931fe" translate="yes" xml:space="preserve">
          <source>Waits for element to become enabled (by default waits for 1sec). Element can be located by CSS or XPath.</source>
          <target state="translated">요소가 활성화 될 때까지 기다립니다 (기본적으로 1 초 동안 기다립니다). 요소는 CSS 또는 XPath로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d766ca51d62149ddfdcd4f55de0e1a6413e20e6" translate="yes" xml:space="preserve">
          <source>Waits for file to be present in current directory.</source>
          <target state="translated">파일이 현재 디렉토리에있을 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="c98f6aae5b5db4bba58dcf95a15becb6074bd7ec" translate="yes" xml:space="preserve">
          <source>Waits for navigation to finish. By default takes configured &lt;code&gt;waitForNavigation&lt;/code&gt; option.</source>
          <target state="translated">탐색이 완료되기를 기다립니다. 기본적으로 구성된 &lt;code&gt;waitForNavigation&lt;/code&gt; 옵션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cac6f99485993f2c4d85c7c467eb40412df20274" translate="yes" xml:space="preserve">
          <source>Waits for number of seconds</source>
          <target state="translated">몇 초 동안 대기</target>
        </trans-unit>
        <trans-unit id="9686023327ac9a62a61ea46e707ec0ef95657aeb" translate="yes" xml:space="preserve">
          <source>Waits for the entire URL to match the expected</source>
          <target state="translated">전체 URL이 예상과 일치 할 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="af30d4b8b1074451ed71627bb286108e8222dbdb" translate="yes" xml:space="preserve">
          <source>Waits for the specified value to be in value attribute</source>
          <target state="translated">지정된 값이 값 속성이되기를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="af3faac131672e9d8ecd082df46026d4ec8c5838" translate="yes" xml:space="preserve">
          <source>Waits for the specified value to be in value attribute.</source>
          <target state="translated">지정된 값이 값 속성에있을 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="f66e453412bf9431a6eba8c0b796d8ca0651ff8d" translate="yes" xml:space="preserve">
          <source>Want to have screenshots for failed tests? Then add Mochawesome helper to your config:</source>
          <target state="translated">테스트 실패에 대한 스크린 샷을 원하십니까? 그런 다음 구성에 Mochawesome 도우미를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0daa6e3c73ef8e8eb0000e2c384a8baa4295817a" translate="yes" xml:space="preserve">
          <source>Want to use several reporters in the same time? Try to use &lt;a href=&quot;https://www.npmjs.com/package/mocha-multi&quot;&gt;mocha-multi (opens new window)&lt;/a&gt; reporter</source>
          <target state="translated">여러 기자를 동시에 사용하고 싶으십니까? &lt;a href=&quot;https://www.npmjs.com/package/mocha-multi&quot;&gt;mocha-multi (새 창에서 열림)&lt;/a&gt; 리포터를 사용해보십시오</target>
        </trans-unit>
        <trans-unit id="50bf7cbef12cb682b4de0c490473822b62465607" translate="yes" xml:space="preserve">
          <source>Want to use several reporters in the same time? Try to use &lt;a href=&quot;https://www.npmjs.com/package/mocha-multi&quot;&gt;mocha-multi&lt;/a&gt; reporter</source>
          <target state="translated">동시에 여러 기자를 사용하고 싶습니까? 사용하려고 &lt;a href=&quot;https://www.npmjs.com/package/mocha-multi&quot;&gt;모카 멀티&lt;/a&gt; 기자</target>
        </trans-unit>
        <trans-unit id="7da08f76e4067e6226fb5bc406791dc64a33f320" translate="yes" xml:space="preserve">
          <source>We added npm scripts:</source>
          <target state="translated">npm 스크립트를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="68a59a89717f026c3affdba6c21689efbc15d984" translate="yes" xml:space="preserve">
          <source>We can call a new method from within &lt;code&gt;I&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; 내에서 새로운 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef0a8409eb1de1caec49d10c582cb0298eb47036" translate="yes" xml:space="preserve">
          <source>We can try to write such simple story:</source>
          <target state="translated">우리는 다음과 같은 간단한 이야기를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad78b304c0922dda783305768d85d50fc93de668" translate="yes" xml:space="preserve">
          <source>We need to fill in all those fields and click &quot;Update&quot; button. CodeceptJS matches form elements by their label, name, or by CSS or XPath locators.</source>
          <target state="translated">모든 필드를 채우고 &quot;업데이트&quot;버튼을 클릭해야합니다. CodeceptJS는 레이블, 이름 또는 CSS 또는 XPath 로케이터로 양식 요소를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="8afab1846117583ca17d98987ee9b5d8728f87ab" translate="yes" xml:space="preserve">
          <source>We need to fill in all those fields and click the &quot;Update&quot; button. CodeceptJS matches form elements by their label, name, or by CSS or XPath locators.</source>
          <target state="translated">모든 필드를 채우고 &quot;업데이트&quot;버튼을 클릭해야합니다. CodeceptJS는 레이블, 이름 또는 CSS 또는 XPath 로케이터별로 양식 요소를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="e0cd1d3f413dc90df478869de70f8702b159f6ff" translate="yes" xml:space="preserve">
          <source>We recommend for long-running projects to go with the first option. The better you write your initial HTML the cleaner and less fragile will be your tests. Replace divs with correct HTML elements, add &lt;code&gt;data-&lt;/code&gt; attributes, add labels, and names to input fields to make all CodeceptJS magic like clicking link by a text to work.</source>
          <target state="translated">장기 실행 프로젝트에 첫 번째 옵션을 사용하는 것이 좋습니다. 초기 HTML을 더 잘 작성할수록 테스트가 더 깨끗하고 깨지기 쉽습니다. div를 올바른 HTML 요소로 바꾸고, &lt;code&gt;data-&lt;/code&gt; 속성을 추가하고, 레이블 및 이름을 입력 필드에 추가하여 텍스트로 링크를 클릭하는 것과 같은 모든 CodeceptJS 마법을 작동시킵니다.</target>
        </trans-unit>
        <trans-unit id="c3009075be2b82941fb6689a0d9a387b57a14e34" translate="yes" xml:space="preserve">
          <source>We recommend to install them manually or use NPM packages:</source>
          <target state="translated">수동으로 설치하거나 NPM 패키지를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0328f89125e2e1b8ced43541f828b724fa7837e2" translate="yes" xml:space="preserve">
          <source>We recommended the following configuration in a &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json&quot;&gt;tsconfig.json (opens new window)&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json&quot;&gt;tsconfig.json (새 창에서 열림)&lt;/a&gt; 에서 다음 구성을 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="998d2885de761a6513fbca46dd38642587cb3743" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://webdriver.io&quot;&gt;webdriverio (opens new window)&lt;/a&gt; library to run tests over WebDriver.</source>
          <target state="translated">WebDriver를 통해 테스트를 실행하기 위해 &lt;a href=&quot;https://webdriver.io&quot;&gt;webdriverio (새 창에서 열림)&lt;/a&gt; 라이브러리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="db0252ed9181c794546543db66f45a3b84d3e615" translate="yes" xml:space="preserve">
          <source>Web application sends various requests to local services (Rest API, GraphQL) or to 3rd party services (CDNS, Google Analytics, etc). When you run tests with Puppeteer you can control those requests by mocking them. For instance, you can speed up your tests by blocking trackers, Google Analytics, and other services you don't control.</source>
          <target state="translated">웹 애플리케이션은 로컬 서비스 (Rest API, GraphQL) 또는 타사 서비스 (CDNS, Google Analytics 등)에 다양한 요청을 보냅니다. Puppeteer로 테스트를 실행하면 해당 요청을 조롱하여 제어 할 수 있습니다. 예를 들어 추적기, Google Analytics 및 제어하지 않는 기타 서비스를 차단하여 테스트 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff4a5cbedecf80277fd8c61c1016f6053edb3712" translate="yes" xml:space="preserve">
          <source>Web applications do not always respond instantly. That's why WebDriver protocol has methods to wait for changes on a page. CodeceptJS provides such commands prefixed with &lt;code&gt;wait*&lt;/code&gt; so you could explicitly define what effects we wait for.</source>
          <target state="translated">웹 응용 프로그램이 항상 즉시 응답하는 것은 아닙니다. 이것이 WebDriver 프로토콜에 페이지의 변경 사항을 기다리는 방법이있는 이유입니다. CodeceptJS는 &lt;code&gt;wait*&lt;/code&gt; 접두사가 붙은 이러한 명령을 제공 하므로 어떤 효과를 기다리는 지 명시 적으로 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="662577408276098f60d266c4a962ed77d91c8d4a" translate="yes" xml:space="preserve">
          <source>Web view uses &lt;code&gt;[aria-label]&lt;/code&gt; attribute as accessibility id</source>
          <target state="translated">웹보기는 &lt;code&gt;[aria-label]&lt;/code&gt; 속성을 접근성 ID로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bda2d68e20711107d45980e7009b8c2207fc908c" translate="yes" xml:space="preserve">
          <source>WebDriver</source>
          <target state="translated">WebDriver</target>
        </trans-unit>
        <trans-unit id="84bb6250fc96f4fc3ef3f7d60530658e3deff883" translate="yes" xml:space="preserve">
          <source>WebDriver - a standard protocol for communicating between test framework and browsers</source>
          <target state="translated">WebDriver-테스트 프레임 워크와 브라우저 간의 통신을위한 표준 프로토콜</target>
        </trans-unit>
        <trans-unit id="873fc1e15da44a29d290932257ddd9701cd4b203" translate="yes" xml:space="preserve">
          <source>WebDriver Example</source>
          <target state="translated">WebDriver 예</target>
        </trans-unit>
        <trans-unit id="e4f482e1efe5d3fc520eeb4060feb3ba943efb44" translate="yes" xml:space="preserve">
          <source>WebDriver based helpers like WebDriver, Protractor, Selenium WebDriver will require &lt;a href=&quot;https://codecept.io/helpers/WebDriver/#selenium-installation&quot;&gt;Selenium Server (opens new window)&lt;/a&gt; or &lt;a href=&quot;https://codecept.io/helpers/WebDriver/#phantomjs-installation&quot;&gt;PhantomJS (opens new window)&lt;/a&gt; installed. They will also require ChromeDriver or GeckoDriver to run corresponding browsers.</source>
          <target state="translated">WebDriver, Protractor, Selenium WebDriver와 같은 WebDriver 기반 도우미에는 &lt;a href=&quot;https://codecept.io/helpers/WebDriver/#selenium-installation&quot;&gt;Selenium Server (새 창 &lt;/a&gt;&lt;a href=&quot;https://codecept.io/helpers/WebDriver/#phantomjs-installation&quot;&gt;열기 &lt;/a&gt;) 또는 PhantomJS (새 창 열기)가 설치되어 있어야합니다. 또한 해당 브라우저를 실행하려면 ChromeDriver 또는 GeckoDriver가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4c6ee7129a27d266e5ca260cc58460a8741e8bf9" translate="yes" xml:space="preserve">
          <source>WebDriver based helpers like WebDriverIO, Protractor, Selenium WebDriver will require &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/#selenium-installation&quot;&gt;Selenium Server&lt;/a&gt; or &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/#phantomjs-installation&quot;&gt;PhantomJS&lt;/a&gt; installed. They will also require ChromeDriver or GeckoDriver to run corresponding browsers.</source>
          <target state="translated">WebDriverIO, Protractor, Selenium WebDriver와 같은 WebDriver 기반 헬퍼에는 &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/#selenium-installation&quot;&gt;Selenium Server&lt;/a&gt; 또는 &lt;a href=&quot;https://codecept.io/helpers/WebDriverIO/#phantomjs-installation&quot;&gt;PhantomJS가&lt;/a&gt; 설치되어 있어야합니다. 또한 해당 브라우저를 실행하려면 ChromeDriver 또는 GeckoDriver가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9bce219e6fa40734060fce008096d6ca2b21dda5" translate="yes" xml:space="preserve">
          <source>WebDriver can be configured to run browser tests in window, headlessly, on a remote server or in a cloud.</source>
          <target state="translated">WebDriver는 창, 헤드리스, 원격 서버 또는 클라우드에서 브라우저 테스트를 실행하도록 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c532553b750d055fb58d2ec1fb2c3a68add8e8eb" translate="yes" xml:space="preserve">
          <source>WebDriver helper can be obtained in this function as well. Use this to get full access to webdriverio elements inside the test.</source>
          <target state="translated">WebDriver 도우미는이 기능에서도 얻을 수 있습니다. 이를 사용하여 테스트 내의 webdriverio 요소에 대한 전체 액세스 권한을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="7dbfce6e2cd05a280046cbbf1fa51b007b0054c6" translate="yes" xml:space="preserve">
          <source>WebDriver helper supports standard &lt;a href=&quot;https://codecept.io/locators&quot;&gt;CSS/XPath and text locators&lt;/a&gt; as well as non-trivial &lt;a href=&quot;https://codecept.io/react&quot;&gt;React locators&lt;/a&gt; and &lt;a href=&quot;https://codecept.io/shadow&quot;&gt;Shadow DOM&lt;/a&gt;.</source>
          <target state="translated">WebDriver 도우미는 표준 &lt;a href=&quot;https://codecept.io/locators&quot;&gt;CSS / XPath 및 텍스트 로케이터&lt;/a&gt; 뿐만 아니라 사소하지 않은 &lt;a href=&quot;https://codecept.io/react&quot;&gt;React 로케이터&lt;/a&gt; 및 &lt;a href=&quot;https://codecept.io/shadow&quot;&gt;Shadow DOM을 지원&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="0e1d7b1d9c49fa6b55ff0b8972dc76b95bf79e7d" translate="yes" xml:space="preserve">
          <source>WebDriver helper which wraps &lt;a href=&quot;http://webdriver.io/&quot;&gt;webdriverio (opens new window)&lt;/a&gt; library to manipulate browser using Selenium WebDriver or PhantomJS.</source>
          <target state="translated">Selenium WebDriver 또는 PhantomJS를 사용하여 브라우저를 조작하기 위해 &lt;a href=&quot;http://webdriver.io/&quot;&gt;webdriverio (새 창 열기)&lt;/a&gt; 라이브러리를 래핑하는 WebDriver 도우미입니다 .</target>
        </trans-unit>
        <trans-unit id="5f11d83469697adf05d6c6f75259a5df2f6abb19" translate="yes" xml:space="preserve">
          <source>WebDriver makes it possible to execute tests against services like &lt;code&gt;Sauce Labs&lt;/code&gt;&lt;code&gt;BrowserStack&lt;/code&gt;&lt;code&gt;TestingBot&lt;/code&gt; Check out their documentation on &lt;a href=&quot;http://webdriver.io/guide/usage/cloudservices&quot;&gt;available parameters (opens new window)&lt;/a&gt;</source>
          <target state="translated">WebDriver를 사용하면 &lt;code&gt;Sauce Labs&lt;/code&gt; &lt;code&gt;BrowserStack&lt;/code&gt; &lt;code&gt;TestingBot&lt;/code&gt; 과 같은 서비스에 대한 테스트를 실행할 &lt;a href=&quot;http://webdriver.io/guide/usage/cloudservices&quot;&gt;수 있습니다. 사용 가능한 매개 변수&lt;/a&gt; 에 대한 설명서를 확인하십시오 (새 창에서 열림).</target>
        </trans-unit>
        <trans-unit id="ef900993ce4f1a80101229e63282c0f9a1067b26" translate="yes" xml:space="preserve">
          <source>WebDriver protocol works over HTTP, so you need to have a Selenium Server to be running or any other service that will launch a browser for you. That's why you may need to specify &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, and &lt;code&gt;path&lt;/code&gt; parameters.</source>
          <target state="translated">WebDriver 프로토콜은 HTTP를 통해 작동하므로 Selenium Server를 실행하거나 브라우저를 실행할 다른 서비스가 있어야합니다. 이것이 &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt; 및 &lt;code&gt;path&lt;/code&gt; 매개 변수 를 지정해야하는 이유 입니다.</target>
        </trans-unit>
        <trans-unit id="555415b48c4e53750332179dec63e75a689c4a6b" translate="yes" xml:space="preserve">
          <source>WebDriver requires Selenium Server and ChromeDriver/GeckoDriver to be installed. Those tools can be easily installed via NPM. Please check &lt;a href=&quot;https://codecept.io/webdriver/#testing-with-webdriver&quot;&gt;Testing with WebDriver (opens new window)&lt;/a&gt; for more details.</source>
          <target state="translated">WebDriver를 사용하려면 Selenium Server 및 ChromeDriver / GeckoDriver를 설치해야합니다. 이러한 도구는 NPM을 통해 쉽게 설치할 수 있습니다. 자세한 내용 &lt;a href=&quot;https://codecept.io/webdriver/#testing-with-webdriver&quot;&gt;은 WebDriver로 테스트 (새 창에서 열림)&lt;/a&gt; 를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dab64bdf7fdf61aafebe239824ecd125f10072c9" translate="yes" xml:space="preserve">
          <source>WebDriver, Puppeteer, Playwright, and Protractor drivers provide API for web elements. However, CodeceptJS do not expose them to tests by design, keeping test to be action focused. If you need to get access to web elements, it is recommended to implement operations for web elements in a custom helper.</source>
          <target state="translated">WebDriver, Puppeteer, Playwright 및 Protractor 드라이버는 웹 요소에 대한 API를 제공합니다. 그러나 CodeceptJS는 디자인에 의해 테스트에 노출되지 않으므로 테스트를 작업 중심으로 유지합니다. 웹 요소에 액세스해야하는 경우 사용자 지정 도우미에서 웹 요소에 대한 작업을 구현하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f1e743f1f84c409694a483e552f4180104c2fcf9" translate="yes" xml:space="preserve">
          <source>WebDriverIO</source>
          <target state="translated">WebDriverIO</target>
        </trans-unit>
        <trans-unit id="67b2f997ac4cc51d15a6374c7e168786bcde1dd8" translate="yes" xml:space="preserve">
          <source>WebDriverIO Example</source>
          <target state="translated">WebDriverIO 예</target>
        </trans-unit>
        <trans-unit id="5ce4051d43fe6c0fc19a96f4288f48e8758c9122" translate="yes" xml:space="preserve">
          <source>WebDriverIO helper which wraps &lt;a href=&quot;http://webdriver.io/&quot;&gt;webdriverio&lt;/a&gt; library to manipulate browser using Selenium WebDriver or PhantomJS.</source>
          <target state="translated">WebDriverIO 도우미로 Selenium WebDriver 또는 PhantomJS를 사용하여 브라우저를 조작하기 위해 &lt;a href=&quot;http://webdriver.io/&quot;&gt;webdriverio&lt;/a&gt; 라이브러리를 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="4b8246b75742690da1cff81db1818841a44548ca" translate="yes" xml:space="preserve">
          <source>WebDriverIO makes it possible to execute tests against services like &lt;code&gt;Sauce Labs&lt;/code&gt;&lt;code&gt;BrowserStack&lt;/code&gt;&lt;code&gt;TestingBot&lt;/code&gt; Check out their documentation on &lt;a href=&quot;http://webdriver.io/guide/usage/cloudservices.html&quot;&gt;available parameters&lt;/a&gt;</source>
          <target state="translated">WebDriverIO를 사용하면 &lt;code&gt;Sauce Labs&lt;/code&gt; &lt;code&gt;BrowserStack&lt;/code&gt; &lt;code&gt;TestingBot&lt;/code&gt; 과 같은 서비스에 대해 테스트를 실행할 &lt;a href=&quot;http://webdriver.io/guide/usage/cloudservices.html&quot;&gt;수 있습니다. 사용 가능한 매개 변수&lt;/a&gt; 에 대한 설명서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3e73da95a0ac56dbf82712b993fd01f417261e1b" translate="yes" xml:space="preserve">
          <source>WebDriverIO requires &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium Server and ChromeDriver/GeckoDriver to be installed&lt;/a&gt;.</source>
          <target state="translated">WebDriverIO를 사용하려면 &lt;a href=&quot;https://codecept.io/quickstart/#prepare-selenium-server&quot;&gt;Selenium Server 및 ChromeDriver / GeckoDriver를 설치해야&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2b1b6b9d2a8edcdff4f949b50b8c2f65002ecea3" translate="yes" xml:space="preserve">
          <source>Webdriverio services runner.</source>
          <target state="translated">Webdriverio 서비스 실행기.</target>
        </trans-unit>
        <trans-unit id="4a80c2890f6b03b813729066b6574c209d114080" translate="yes" xml:space="preserve">
          <source>Webkit (Safari)</source>
          <target state="translated">Webkit (Safari)</target>
        </trans-unit>
        <trans-unit id="294dbc856dc7dc84de4ee001e8da1d6fa219ddb1" translate="yes" xml:space="preserve">
          <source>What if CodeceptJS doesn't provide some of Protractor functionality you actually need? Sure its API is to general, and this case is possible. If you don't know how to do something with CodeceptJS - revert back to Protractor syntax!</source>
          <target state="translated">CodeceptJS가 실제로 필요한 각도기 기능을 제공하지 않으면 어떻게됩니까? API가 일반적인 것이 확실 하며이 경우가 가능합니다. CodeceptJS로 무언가를 수행하는 방법을 모른다면 각도기 구문으로 되 돌리십시오!</target>
        </trans-unit>
        <trans-unit id="e1559296258926ec687885639df4b37b72107760" translate="yes" xml:space="preserve">
          <source>What if CodeceptJS doesn't provide some specific Protractor functionality you need? If you don't know how to do something with CodeceptJS, you can simply revert back to using Protractor syntax!</source>
          <target state="translated">CodeceptJS가 필요한 특정 각도기 기능을 제공하지 않으면 어떻게됩니까? CodeceptJS로 작업을 수행하는 방법을 모르는 경우 Protractor 구문을 사용하여 되돌릴 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="5fb69fb74393a257fd7a1e813a52d4ef3396df5a" translate="yes" xml:space="preserve">
          <source>What if we want to locators prefixed with &lt;code&gt;=&lt;/code&gt; to match elements with exact text value. We can do that too:</source>
          <target state="translated">정확한 텍스트 값을 가진 요소를 일치시키기 위해 &lt;code&gt;=&lt;/code&gt; 접두사가 붙은 로케이터를 원하면 어떨까요? 우리도 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbf8f828f0db94bd1ceb760b6b373a45d2752eb6" translate="yes" xml:space="preserve">
          <source>What if you use special test attributes for locators such as &lt;code&gt;data-qa&lt;/code&gt;, &lt;code&gt;data-test&lt;/code&gt;, &lt;code&gt;test-id&lt;/code&gt;, etc. We created &lt;a href=&quot;https://codecept.io/plugins#customlocator&quot;&gt;customLocator plugin&lt;/a&gt; to declare rules for locating element.</source>
          <target state="translated">&lt;code&gt;data-qa&lt;/code&gt; , &lt;code&gt;data-test&lt;/code&gt; , &lt;code&gt;test-id&lt;/code&gt; 등과 같은 로케이터에 특별한 테스트 속성을 사용한다면 &lt;a href=&quot;https://codecept.io/plugins#customlocator&quot;&gt;어떨까요&lt;/a&gt; . 우리는 요소를 찾는 규칙을 선언하기 위해 customLocator 플러그인 을 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="547fbf4b8e8f0a523de2c55a559e30f8a60f453f" translate="yes" xml:space="preserve">
          <source>What is Behavior Driven Development</source>
          <target state="translated">행동 주도 개발이란?</target>
        </trans-unit>
        <trans-unit id="8dbe852f21160e020288a62a9ce8830837a56471" translate="yes" xml:space="preserve">
          <source>What is Selenium WebDriver</source>
          <target state="translated">Selenium WebDriver는 무엇입니까</target>
        </trans-unit>
        <trans-unit id="1e8b0b9829ede904db0527ef1b5afcaef1ce3507" translate="yes" xml:space="preserve">
          <source>What makes CodeceptJS better for mobile testing? Take a look. Here is the sample test for a native mobile application written in CodeceptJS:</source>
          <target state="translated">모바일 테스트에 CodeceptJS가 더 좋은 이유는 무엇입니까? 구경하다. CodeceptJS로 작성된 기본 모바일 애플리케이션에 대한 샘플 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3cf3047bf50706530344c8407793f600e756906c" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://codecept.io/plugins#selenoid&quot;&gt;Selenoid Plugin&lt;/a&gt; is enabled video can be automatically recorded for each test.</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/plugins#selenoid&quot;&gt;Selenoid Plugin&lt;/a&gt; 이 활성화 되면 각 테스트마다 비디오를 자동으로 녹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fe4aa744cffaafd95af872339b92ca76447fb5c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;allure&lt;/code&gt; plugin is enabled a video is attached to report automatically.</source>
          <target state="translated">때 &lt;code&gt;allure&lt;/code&gt; 플러그인을 사용하는 비디오가 자동으로보고 첨부되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2b13a17e7505662cfe89edeb564ac4198292ba0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;autoCreate&lt;/code&gt; is enabled it will pull the &lt;a href=&quot;https://hub.docker.com/u/selenoid&quot;&gt;latest Selenoid from DockerHub (opens new window)&lt;/a&gt; and start Selenoid automatically. It will also create &lt;code&gt;browsers.json&lt;/code&gt; file required by Selenoid.</source>
          <target state="translated">&lt;code&gt;autoCreate&lt;/code&gt; 가 활성화 되면 &lt;a href=&quot;https://hub.docker.com/u/selenoid&quot;&gt;DockerHub에서 최신 Selenoid를 가져와 (새 창&lt;/a&gt; 열림) 자동으로 Selenoid를 시작합니다. 또한 Selenoid에 필요한 &lt;code&gt;browsers.json&lt;/code&gt; 파일을 생성 합니다 .</target>
        </trans-unit>
        <trans-unit id="7c3cb0dafcce62ac26efc77bb5023a99ec94de40" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enableVideo&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; this plugin saves video in &lt;code&gt;output/videos&lt;/code&gt; directory with each test by name To save space videos for all succesful tests are deleted. This can be changed by &lt;code&gt;deletePassed&lt;/code&gt; option.</source>
          <target state="translated">때 &lt;code&gt;enableVideo&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; 이 플러그인은 비디오 저장 &lt;code&gt;output/videos&lt;/code&gt; 모든 성공적인 테스트를 위해 삭제 우주 동영상을 저장하려면 이름으로 각각의 테스트와 디렉토리를. 이것은 &lt;code&gt;deletePassed&lt;/code&gt; 옵션 으로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d04279b301badefb809fbdcc5dc41803cc07973c" translate="yes" xml:space="preserve">
          <source>When a helper is created, regenerate your step definitions, so you could see those actions when using &lt;a href=&quot;https://codecept.io/basics#intellisense&quot;&gt;intellisense&lt;/a&gt;:</source>
          <target state="translated">도우미가 생성되면 단계 정의를 다시 생성하여 &lt;a href=&quot;https://codecept.io/basics#intellisense&quot;&gt;intellisense를&lt;/a&gt; 사용할 때 이러한 작업을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c23aab8426b6af9668aa19632400841da8dbdd0" translate="yes" xml:space="preserve">
          <source>When a project is growing and more and more tests are required, it's time to think about reusing test code across the tests. Some common actions should be moved from tests to other files so to be accessible from different tests.</source>
          <target state="translated">프로젝트가 성장하고 더 많은 테스트가 필요하면 테스트 전체에서 테스트 코드를 재사용하는 것에 대해 생각할 때입니다. 몇 가지 일반적인 작업은 다른 테스트에서 액세스 할 수 있도록 테스트에서 다른 파일로 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4eee0fc2c8a7745faa46869152949bb128cf373" translate="yes" xml:space="preserve">
          <source>When a test runs faster than application it is recommended to increase &lt;code&gt;waitForAction&lt;/code&gt; config value. It will wait for a small amount of time (100ms) by default after each user action is taken.</source>
          <target state="translated">테스트가 애플리케이션보다 빠르게 실행되면 &lt;code&gt;waitForAction&lt;/code&gt; 구성 값 을 늘리는 것이 좋습니다 . 각 사용자 조치가 수행 된 후 기본적으로 적은 시간 (100ms) 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="3b2153b2bf020a9fb35ba294349187884ce91dbd" translate="yes" xml:space="preserve">
          <source>When an URL doesn't start with a protocol (http:// or https://) it is considered to be a relative URL and will be appended to the URL which was initially set-up in the config.</source>
          <target state="translated">URL이 프로토콜 (http : // 또는 https : //)로 시작하지 않는 경우 상대 URL로 간주되며 구성에서 초기에 설정된 URL에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8b1fa438688997100829f037b54566433589bcb6" translate="yes" xml:space="preserve">
          <source>When dealing with clicks, we can specify a text value. CodeceptJS will use that value to search the web page for a valid clickable element containing our specified text. This enables us to search for links and buttons by their text.</source>
          <target state="translated">클릭을 처리 할 때 텍스트 값을 지정할 수 있습니다. CodeceptJS는이 값을 사용하여 지정된 텍스트가 포함 된 유효한 클릭 가능한 요소를 웹 페이지에서 검색합니다. 이를 통해 텍스트로 링크와 버튼을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a61c3a23e71a1289f2eafb5786960e253e6da26" translate="yes" xml:space="preserve">
          <source>When enabled, it collects all test files and executes them in parallel by the specified amount of chunks. Given we have five test scenarios (&lt;code&gt;a_test.js&lt;/code&gt;,&lt;code&gt;b_test.js&lt;/code&gt;,&lt;code&gt;c_test.js&lt;/code&gt;,&lt;code&gt;d_test.js&lt;/code&gt; and &lt;code&gt;e_test.js&lt;/code&gt;), by setting &lt;code&gt;&quot;chunks&quot;: 2&lt;/code&gt; we tell the runner to run two suites in parallel. The first suite will run &lt;code&gt;a_test.js&lt;/code&gt;,&lt;code&gt;b_test.js&lt;/code&gt; and &lt;code&gt;c_test.js&lt;/code&gt;, the second suite will run &lt;code&gt;d_test.js&lt;/code&gt; and &lt;code&gt;e_test.js&lt;/code&gt;.</source>
          <target state="translated">활성화되면 모든 테스트 파일을 수집하여 지정된 청크 단위로 병렬로 실행합니다. &lt;code&gt;&quot;chunks&quot;: 2&lt;/code&gt; 를 설정하여 5 개의 테스트 시나리오 ( &lt;code&gt;a_test.js&lt;/code&gt; , &lt;code&gt;b_test.js&lt;/code&gt; , &lt;code&gt;c_test.js&lt;/code&gt; , &lt;code&gt;d_test.js&lt;/code&gt; 및 &lt;code&gt;e_test.js&lt;/code&gt; ) 가 있다고 가정하면, 2 개의 스위트를 병렬로 실행하도록 러너에게 지시합니다. 첫 번째 스위트는 &lt;code&gt;a_test.js&lt;/code&gt; , &lt;code&gt;b_test.js&lt;/code&gt; 및 &lt;code&gt;c_test.js&lt;/code&gt; 를 실행하고 두 번째 스위트는 &lt;code&gt;d_test.js&lt;/code&gt; 및 &lt;code&gt;e_test.js&lt;/code&gt; 를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="9d0bd1c2ff48868dcec703b5101a364671608dcb" translate="yes" xml:space="preserve">
          <source>When it's hard to match text to element we recommend using &lt;a href=&quot;https://codecept.io/locators#locator-builder&quot;&gt;locator builder&lt;/a&gt;. It allows to build complex locators via fluent API. So if you want to click an element which is not a button or a link and use its text you can use &lt;code&gt;locate()&lt;/code&gt; to build a readable locator:</source>
          <target state="translated">텍스트를 요소와 일치시키기 어려운 경우 &lt;a href=&quot;https://codecept.io/locators#locator-builder&quot;&gt;로케이터 빌더를&lt;/a&gt; 사용하는 것이 좋습니다 . 유창한 API를 통해 복잡한 로케이터를 구축 할 수 있습니다. 따라서 버튼이나 링크가 아닌 요소를 클릭하고 해당 텍스트를 사용하려면 &lt;code&gt;locate()&lt;/code&gt; 를 사용하여 읽기 쉬운 로케이터를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a31f49f903202005d98e6d4890727f36c470fd9" translate="yes" xml:space="preserve">
          <source>When opening a web page you can set headers as well. &lt;code&gt;amOnPage&lt;/code&gt; methods can take headers as second parameter:</source>
          <target state="translated">웹 페이지를 열 때 헤더도 설정할 수 있습니다. &lt;code&gt;amOnPage&lt;/code&gt; 메소드는 헤더를 두 번째 매개 변수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550f48bdadd2b6372c75f6abf056a8300b1e0c2c" translate="yes" xml:space="preserve">
          <source>When passed &lt;code&gt;--steps&lt;/code&gt; or &lt;code&gt;--debug&lt;/code&gt; option runs tests, disabling all plugins and helpers, so you can get step-by-step report with no tests actually executed.</source>
          <target state="translated">&lt;code&gt;--steps&lt;/code&gt; 또는 &lt;code&gt;--debug&lt;/code&gt; 옵션을 통과하면 테스트가 실행되고 모든 플러그인과 도우미가 비활성화되므로 실제로 실행되는 테스트없이 단계별 보고서를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38572368bf0e9c12115e4e5c0ca590383a9ed100" translate="yes" xml:space="preserve">
          <source>When running steps inside a within block will be shown with a shift:</source>
          <target state="translated">within 블록 내에서 단계를 실행하면 시프트와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cd516cf5f9aab979f022969cd0dc59905e3e7dd9" translate="yes" xml:space="preserve">
          <source>When running steps inside, a within block will be shown with a shift:</source>
          <target state="translated">내부 단계를 실행하면 내부 블록이 시프트와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae7116f8a5878a047de727706e2bec9b6399b342" translate="yes" xml:space="preserve">
          <source>When site-wide widgets are used, interactions with them should be placed in &lt;strong&gt;Page Fragments&lt;/strong&gt;. This should be applied to global navigation, modals, widgets.</source>
          <target state="translated">사이트 전체 위젯을 사용하는 경우 해당 위젯과의 상호 작용은 &lt;strong&gt;페이지 조각에&lt;/strong&gt; 배치되어야합니다 . 이것은 전역 탐색, 모달, 위젯에 적용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dea1a2d8f43ed0e0fa6e5b78a5612741d373c6eb" translate="yes" xml:space="preserve">
          <source>When testing web application you can disable some of external requests calls by enabling HTTP mocking. This is useful when you want to isolate application testing from a backend. For instance, if you don't want to save data to database, and you know the request which performs save, you can mock the request, so application will treat this as valid response, but no data will be actually saved.</source>
          <target state="translated">웹 애플리케이션을 테스트 할 때 HTTP 모킹을 활성화하여 일부 외부 요청 호출을 비활성화 할 수 있습니다. 이는 백엔드에서 애플리케이션 테스트를 격리하려는 경우에 유용합니다. 예를 들어 데이터베이스에 데이터를 저장하지 않고 저장을 수행하는 요청을 알고있는 경우 요청을 모의 처리 할 수 ​​있으므로 응용 프로그램은이를 유효한 응답으로 처리하지만 실제로는 데이터가 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8cad1d9e58d3696ff7d3a46daf6fe5108425488d" translate="yes" xml:space="preserve">
          <source>When the helper is enabled in config all methods of a helper class are available in &lt;code&gt;I&lt;/code&gt; object. For instance, if we add a new method to helper class:</source>
          <target state="translated">config에서 도우미가 활성화되면 도우미 클래스의 모든 메서드를 &lt;code&gt;I&lt;/code&gt; 개체 에서 사용할 수 있습니다 . 예를 들어 헬퍼 클래스에 새 메소드를 추가하면 :</target>
        </trans-unit>
        <trans-unit id="cebc8aa66e49073d0a62cb9391eed58129d72f02" translate="yes" xml:space="preserve">
          <source>When to consider navigation succeeded, defaults to &lt;code&gt;load&lt;/code&gt;. Given an array of event strings, navigation is considered to be successful after all events have been fired. Events can be either:</source>
          <target state="translated">탐색 성공을 고려할 때 기본값은 &lt;code&gt;load&lt;/code&gt; 입니다. 이벤트 문자열 배열이 주어지면 모든 이벤트가 실행 된 후 탐색이 성공한 것으로 간주됩니다. 이벤트는 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6e84c5967a780e2406e6949a7ea63f2dd9f48ab" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://codecept.io/advanced/#multiple-execution&quot;&gt;Multiple Execution&lt;/a&gt; mode , there are two additional hooks available; &lt;code&gt;bootstrapAll&lt;/code&gt; and &lt;code&gt;teardownAll&lt;/code&gt;. These hooks are only called once each; before all of the test suites are run (&lt;code&gt;bootstrapAll&lt;/code&gt;) and after all of the test suites have finished (&lt;code&gt;teardownAll&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/advanced/#multiple-execution&quot;&gt;다중 실행&lt;/a&gt; 모드를 사용할 때 사용 가능한 두 가지 추가 후크가 있습니다. &lt;code&gt;bootstrapAll&lt;/code&gt; 및 &lt;code&gt;teardownAll&lt;/code&gt; . 이 후크는 각각 한 번만 호출됩니다. 모든 테스트 스위트가 실행되기 전 ( &lt;code&gt;bootstrapAll&lt;/code&gt; ) 및 모든 테스트 스위트가 완료된 후 ( &lt;code&gt;teardownAll&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f59ecb19a00880d1b4a79bb440a5d62ed6233451" translate="yes" xml:space="preserve">
          <source>When we deal with clicks, CodeceptJS can take a text and search a web page for a valid clickable element with that text. So links and buttons can be searched by their text.</source>
          <target state="translated">클릭을 처리 할 때 CodeceptJS는 텍스트를 가져와 웹 페이지에서 해당 텍스트로 유효한 클릭 가능한 요소를 검색 할 수 있습니다. 따라서 텍스트로 링크와 버튼을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0656ccce597c71fc60a6e58a56b6d97f63e2c2b6" translate="yes" xml:space="preserve">
          <source>When we switch helper to Nightmare:</source>
          <target state="translated">도우미를 악몽으로 전환 할 때 :</target>
        </trans-unit>
        <trans-unit id="3af58657fd3384299c8fbec8ac5940b0a81d5019" translate="yes" xml:space="preserve">
          <source>When you execute such test with &lt;code&gt;codeceptjs run&lt;/code&gt; command you may see the browser is started</source>
          <target state="translated">&lt;code&gt;codeceptjs run&lt;/code&gt; 명령으로 이러한 테스트를 실행 하면 브라우저가 시작되는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3032df83dc0f77a930aa4dc6217ae4211514826" translate="yes" xml:space="preserve">
          <source>When you execute such test with &lt;code&gt;npx codeceptjs run&lt;/code&gt; command you may see the browser is started</source>
          <target state="translated">&lt;code&gt;npx codeceptjs run&lt;/code&gt; 명령으로 이러한 테스트를 실행 하면 브라우저가 시작되는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4da6263585d240ede8aee42a142159d16da621de" translate="yes" xml:space="preserve">
          <source>When you need to customize access to API and go beyond what ApiDataFactory provides, implement DAO:</source>
          <target state="translated">API에 대한 액세스를 사용자 정의하고 ApiDataFactory가 제공하는 것 이상으로 나아가 야하는 경우 DAO를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="1dd15c5f8d4865c6c8ecad6b0a7416343813ee4d" translate="yes" xml:space="preserve">
          <source>When you need to rerun scenarios a few times, add the &lt;code&gt;retries&lt;/code&gt; option to the &lt;code&gt;Scenario&lt;/code&gt; declaration.</source>
          <target state="translated">시나리오를 몇 번 다시 실행해야하는 경우 &lt;code&gt;Scenario&lt;/code&gt; 선언에 &lt;code&gt;retries&lt;/code&gt; 옵션을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="94980865fa971ae2c38a4e515fb3d5a70f16fc5a" translate="yes" xml:space="preserve">
          <source>When you need to rerun scenarios few times just add &lt;code&gt;retries&lt;/code&gt; option added to &lt;code&gt;Scenario&lt;/code&gt; declaration.</source>
          <target state="translated">시나리오를 몇 번 다시 실행해야하는 경우 &lt;code&gt;Scenario&lt;/code&gt; 선언에 &lt;code&gt;retries&lt;/code&gt; 추가 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="11381b66e6ee1b6ba008656bf240cb3d888b0e6b" translate="yes" xml:space="preserve">
          <source>When(); projectPage.update(projectId, { title: 'new title' });</source>
          <target state="translated">언제(); projectPage.update (projectId, {제목 : '새 제목'});</target>
        </trans-unit>
        <trans-unit id="23b1f01e6197d68654bd032f73c03c96ea90aee7" translate="yes" xml:space="preserve">
          <source>Whenever you execute tests with &lt;code&gt;--verbose&lt;/code&gt; option you will see registered events and promises executed by a recorder.</source>
          <target state="translated">&lt;code&gt;--verbose&lt;/code&gt; 옵션으로 테스트를 실행할 때마다 등록 된 이벤트와 약속이 레코더에 의해 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2d73f66cb3405bbcba6b459144d4d17a02f93d7c" translate="yes" xml:space="preserve">
          <source>Whenever you start writing a story you are describing a specific feature of an application, with a set of scenarios and examples describing this feature. Let's open a feature file created by &lt;code&gt;gherkin:init&lt;/code&gt; command, which is &lt;code&gt;feature/basic.feature&lt;/code&gt;.</source>
          <target state="translated">스토리 작성을 시작할 때마다이 기능을 설명하는 시나리오 및 예제 세트와 함께 애플리케이션의 특정 기능을 설명합니다. &lt;code&gt;gherkin:init&lt;/code&gt; 명령으로 작성된 기능 파일 인 &lt;code&gt;feature/basic.feature&lt;/code&gt; 를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="6e7b299717cfa44afb60a6ef85e889b19ef2bd0d" translate="yes" xml:space="preserve">
          <source>While implementing custom actions using WebDriver API please note that, there is two versions of protocol: WebDriver and JSON Wire. Depending on a browser version one of those protocols can be used. We can't know for sure which protocol is going to used, so we will need to implement an action using both APIs.</source>
          <target state="translated">WebDriver API를 사용하여 사용자 지정 작업을 구현하는 동안 WebDriver 및 JSON Wire의 두 가지 버전의 프로토콜이 있습니다. 브라우저 버전에 따라 이러한 프로토콜 중 하나를 사용할 수 있습니다. 어떤 프로토콜이 사용 될지 알 수 없으므로 두 API를 모두 사용하여 작업을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="88ef9d489a10a05418a242978d6ba3ec715b044e" translate="yes" xml:space="preserve">
          <source>While this plugin can create containers for you for better control it is recommended to create and launch containers manually. This is especially useful for Continous Integration server as you can configure scaling for Selenoid containers.</source>
          <target state="translated">이 플러그인은 더 나은 제어를 위해 컨테이너를 생성 할 수 있지만 컨테이너를 수동으로 생성하고 실행하는 것이 좋습니다. 이것은 Selenoid 컨테이너에 대한 확장을 구성 할 수 있으므로 Continous Integration 서버에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6c3b1976cb7407c02beab3b6df64f2736751b659" translate="yes" xml:space="preserve">
          <source>Why TypeScript?</source>
          <target state="translated">왜 TypeScript인가?</target>
        </trans-unit>
        <trans-unit id="a204fc25b091527429bd13c9ddfa37b8d830db33" translate="yes" xml:space="preserve">
          <source>Will automatically create container (Linux only) (default : true)</source>
          <target state="translated">자동으로 컨테이너 생성 (Linux 전용) (기본값 : true)</target>
        </trans-unit>
        <trans-unit id="c4c09e627e968c9a5e167ea358175c3aeb325022" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;autoLogin&lt;/code&gt; plugin you can save cookies into a file and reuse same session on different runs.</source>
          <target state="translated">&lt;code&gt;autoLogin&lt;/code&gt; 플러그인을 사용 하면 쿠키를 파일에 저장하고 다른 실행에서 동일한 세션을 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a30027507572df6b62350d8a27104ffed2db67d" translate="yes" xml:space="preserve">
          <source>With Puppeteer</source>
          <target state="translated">인형과 함께</target>
        </trans-unit>
        <trans-unit id="e9c6fbd92b4efea454b37849fe152b5da99c7a69" translate="yes" xml:space="preserve">
          <source>With Typescript, just simply replacing &lt;code&gt;module.exports&lt;/code&gt; with &lt;code&gt;export&lt;/code&gt; for autocompletion.</source>
          <target state="translated">Typescript를 사용하면 자동 완성을 위해 &lt;code&gt;module.exports&lt;/code&gt; 를 &lt;code&gt;export&lt;/code&gt; 로 바꾸면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1604273a27c8f58c30650342b244436ae4b07e3" translate="yes" xml:space="preserve">
          <source>With WebDriver</source>
          <target state="translated">WebDriver 사용</target>
        </trans-unit>
        <trans-unit id="d6f33dea90f2b07c2f84b649cbe51bed7c80ea5e" translate="yes" xml:space="preserve">
          <source>With the TypeScript writing CodeceptJS tests becomes much easier. If you configure TS properly in your project as well as your IDE, you will get the following features:</source>
          <target state="translated">TypeScript로 CodeceptJS 테스트를 작성하는 것이 훨씬 쉬워집니다. 프로젝트와 IDE에서 TS를 올바르게 구성하면 다음과 같은 기능이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="34536c85b525616eaeef3a4b7aac28978572a18e" translate="yes" xml:space="preserve">
          <source>With this procedure we also ensure that everyone in a team knows what has been developed, what has not, what has been tested and what has not.</source>
          <target state="translated">이 절차를 통해 팀의 모든 사람이 개발 된 사항, 아직 개발되지 않은 대상, 테스트 된 대상 및 그렇지 않은 대상을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eecd6c82bf99523b426f6ba7dd37f2abf11d0fb1" translate="yes" xml:space="preserve">
          <source>With ❤ &lt;a href=&quot;https://codecept.io&quot;&gt;CodeceptJS Team (opens new window)&lt;/a&gt;</source>
          <target state="translated">❤ &lt;a href=&quot;https://codecept.io&quot;&gt;CodeceptJS 팀 (새 창에서 열림)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6205072bdbddad8d3ef5cfb3e195b5d2c6f3556" translate="yes" xml:space="preserve">
          <source>Within</source>
          <target state="translated">Within</target>
        </trans-unit>
        <trans-unit id="83a05aca6c88e8bc82cc6aa5fdfe1131c586b855" translate="yes" xml:space="preserve">
          <source>Within can return a value which can be used in a scenario:</source>
          <target state="translated">within은 시나리오에서 사용할 수있는 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b502d8ac5550a46cce73adda7585bd4be6d1e63" translate="yes" xml:space="preserve">
          <source>Within can return a value, which can be used in a scenario:</source>
          <target state="translated">Within은 시나리오에서 사용할 수있는 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b8485c904e6cba36abcf1aa0f24a20bee07b38a" translate="yes" xml:space="preserve">
          <source>Within web page you can locate elements, interact with them, and check that expected elements are present on a page. That is what a test look like. That is what a test look like.</source>
          <target state="translated">웹 페이지 내에서 요소를 찾고 상호 작용하며 페이지에 예상 요소가 있는지 확인할 수 있습니다. 그것이 시험의 모습입니다. 그것이 시험의 모습입니다.</target>
        </trans-unit>
        <trans-unit id="0a861892b76c83e9d55990203b16ea4faa8bc58e" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;setSharedCookies&lt;/code&gt; you will need to update the config manually, so a data helper could receive cookies from a browser to make a request. If you would like to configure this process manually, here is an example of doing so:</source>
          <target state="translated">&lt;code&gt;setSharedCookies&lt;/code&gt; 가 없으면 구성을 수동으로 업데이트해야하므로 데이터 도우미가 브라우저에서 쿠키를 수신하여 요청할 수 있습니다. 이 프로세스를 수동으로 구성하려면 다음 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="71a523ff248c5666993eb4991bc066a8017169b6" translate="yes" xml:space="preserve">
          <source>Workers are faster and simpler to start, while &lt;code&gt;run-multiple&lt;/code&gt; requires additional configuration and can be used to run tests in different browsers at once.</source>
          <target state="translated">작업자는 시작하기가 더 빠르고 간단하지만 &lt;code&gt;run-multiple&lt;/code&gt; 에는 추가 구성이 필요하며 여러 브라우저에서 한 번에 테스트를 실행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c1250ccfda1bcec1acf7ff40c2ba1878b0928ce" translate="yes" xml:space="preserve">
          <source>Write a simple test scenario:</source>
          <target state="translated">간단한 테스트 시나리오 작성 :</target>
        </trans-unit>
        <trans-unit id="30733d1bd288540cc5a2cf12a30ed6eea7284aa6" translate="yes" xml:space="preserve">
          <source>Writes test to file</source>
          <target state="translated">테스트를 파일에 기록</target>
        </trans-unit>
        <trans-unit id="bee6d0fa8fc7791052acd299661c33874b486665" translate="yes" xml:space="preserve">
          <source>Writing First Test</source>
          <target state="translated">첫 시험 쓰기</target>
        </trans-unit>
        <trans-unit id="ba0e9312c8cb9cd6ef1a61e5d88575514a7ba12b" translate="yes" xml:space="preserve">
          <source>Writing Tests</source>
          <target state="translated">작문 시험</target>
        </trans-unit>
        <trans-unit id="9d497ec47a0985dbe1ace5d6eae1d0ddbb898606" translate="yes" xml:space="preserve">
          <source>Writing Your First Test</source>
          <target state="translated">첫 번째 테스트 작성</target>
        </trans-unit>
        <trans-unit id="7515901810c2f06fbcebdbe370b291231d3fc9ae" translate="yes" xml:space="preserve">
          <source>Writing a Test</source>
          <target state="translated">테스트 작성</target>
        </trans-unit>
        <trans-unit id="838eb367b1e89aaa615c4aa28aefc4d8589fa090" translate="yes" xml:space="preserve">
          <source>Writing good locators can be tricky. The Mozilla team has written an excellent guide titled &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Writing reliable locators for Selenium and WebDriver tests (opens new window)&lt;/a&gt;.</source>
          <target state="translated">좋은 로케이터를 작성하는 것은 까다로울 수 있습니다. Mozilla 팀은 &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Selenium 및 WebDriver 테스트를위한 신뢰할 수있는 로케이터 작성 (새 창에서 열림)&lt;/a&gt; 이라는 제목의 훌륭한 가이드를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="7b3c5c91a420836835f3345db35033e94f5372eb" translate="yes" xml:space="preserve">
          <source>Writing good locators can be tricky. The Mozilla team has written an excellent guide titled &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Writing reliable locators for Selenium and WebDriver tests&lt;/a&gt;.</source>
          <target state="translated">좋은 로케이터를 작성하는 것은 까다로울 수 있습니다. Mozilla 팀은 &lt;a href=&quot;https://blog.mozilla.org/webqa/2013/09/26/writing-reliable-locators-for-selenium-and-webdriver-tests/&quot;&gt;Selenium 및 WebDriver 테스트를위한 신뢰할 수있는 로케이터 작성&lt;/a&gt; 이라는 훌륭한 안내서를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="0a3d7ea26ec76d93907265c923a9954480d5facb" translate="yes" xml:space="preserve">
          <source>XPath</source>
          <target state="translated">XPath</target>
        </trans-unit>
        <trans-unit id="2a353329d5df6fb79e35020f9ce431e70409da96" translate="yes" xml:space="preserve">
          <source>Yes, also the &lt;a href=&quot;https://github.com/DavertMik/codeceptjs-todomvc-puppeteer&quot;&gt;demo project is available on GitHub&lt;/a&gt;</source>
          <target state="translated">예, &lt;a href=&quot;https://github.com/DavertMik/codeceptjs-todomvc-puppeteer&quot;&gt;데모 프로젝트&lt;/a&gt; 도 GitHub에서 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="74d597bef14a9e42c159e21ac3cc6858d541f833" translate="yes" xml:space="preserve">
          <source>Yes, how about &lt;a href=&quot;http://www.nightmarejs.org&quot;&gt;NightmareJS&lt;/a&gt;?</source>
          <target state="translated">예, &lt;a href=&quot;http://www.nightmarejs.org&quot;&gt;NightmareJS는&lt;/a&gt; 어떻습니까?</target>
        </trans-unit>
        <trans-unit id="c8e3ee70b3e6378f5ab1714c0ce6fbfde523af16" translate="yes" xml:space="preserve">
          <source>You are not limited to buttons and links. Any element can be found by passing in valid CSS or XPath:</source>
          <target state="translated">버튼과 링크에 국한되지 않습니다. 유효한 CSS 또는 XPath를 전달하여 모든 요소를 ​​찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="314323323e30e0e9c770ad27d2e0e9dc5267aa96" translate="yes" xml:space="preserve">
          <source>You can also specify the exact locator type with strict locators:</source>
          <target state="translated">엄격한 로케이터로 정확한 로케이터 유형을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="313fd351fa1ec124d20b2c39928f29446f852398" translate="yes" xml:space="preserve">
          <source>You can also switch to JS configuration format for more dynamic options. Create &lt;code&gt;codecept.conf.js&lt;/code&gt; file and make it export &lt;code&gt;config&lt;/code&gt; property.</source>
          <target state="translated">보다 동적 인 옵션을 위해 JS 구성 형식으로 전환 할 수도 있습니다. 만들기 &lt;code&gt;codecept.conf.js&lt;/code&gt; 의 파일을하고 내보낼 수 있도록 &lt;code&gt;config&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="c50e8d831a2ec3626fd84459d9445f916d64a82a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;@wdio/selenium-standalone-service&lt;/code&gt; package, to install and start Selenium Server for your tests automatically.</source>
          <target state="translated">또한 &lt;code&gt;@wdio/selenium-standalone-service&lt;/code&gt; 패키지를 사용하여 테스트를 위해 Selenium Server를 자동으로 설치하고 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca8f733df8ca127aec795194549e25536ea6ca5b" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;parse()&lt;/code&gt; method to obtain an object that allow you to get a simple version of the table parsed by column or row, with header (or not):</source>
          <target state="translated">&lt;code&gt;parse()&lt;/code&gt; 메서드를 사용하여 헤더가 있거나없는 열 또는 행별로 구문 분석 된 테이블의 간단한 버전을 가져올 수있는 객체를 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7da5f558de58faf45ef0e524eebbbbbbdee76114" translate="yes" xml:space="preserve">
          <source>You can auto-retry a failed step by enabling &lt;a href=&quot;https://codecept.io/plugins/#retryfailedstep&quot;&gt;retryFailedStep Plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://codecept.io/plugins/#retryfailedstep&quot;&gt;retryFailedStep Plugin을 사용&lt;/a&gt; 하여 실패한 단계를 자동 재 시도 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12084c3ebd9b170cf7ee42b62b97c23ba0f71aaa" translate="yes" xml:space="preserve">
          <source>You can check that specific element exists (or not) on a page, as it was described in &lt;a href=&quot;#locating-element&quot;&gt;Locating Element&lt;/a&gt; section.</source>
          <target state="translated">요소 &lt;a href=&quot;#locating-element&quot;&gt;찾기&lt;/a&gt; 섹션 에 설명 된대로 페이지에 특정 요소가 존재하는지 여부를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="935d4a7f6da06dda458ed3d0f75d331d4b4097f4" translate="yes" xml:space="preserve">
          <source>You can either access core Helpers (and underlying libraries) or create a new from scratch.</source>
          <target state="translated">핵심 헬퍼 (및 기본 라이브러리)에 액세스하거나 처음부터 새로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdb00b843923397315aae052a26304584cae9376" translate="yes" xml:space="preserve">
          <source>You can execute CodeceptJS with Puppeteer or Nightmare locally with no extra configuration.</source>
          <target state="translated">추가 구성없이 Puppeteer 또는 Nightmare를 사용하여 CodeceptJS를 로컬로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="674eb2b1e277bda9b41ac16c944116ffecc760e0" translate="yes" xml:space="preserve">
          <source>You can find an example project with TypeScript and CodeceptJS on our project &lt;a href=&quot;https://github.com/codecept-js/typescript-boilerplate&quot;&gt;typescript-boilerplate (opens new window)&lt;/a&gt;.</source>
          <target state="translated">프로젝트 &lt;a href=&quot;https://github.com/codecept-js/typescript-boilerplate&quot;&gt;typescript-boilerplate (새 창에서 열림)&lt;/a&gt; 에서 TypeScript 및 CodeceptJS가 포함 된 예제 프로젝트를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd3f01847eea1e34c8f4a03168dbb47aa5f5c831" translate="yes" xml:space="preserve">
          <source>You can have multiple configuration files for a the same project, in this case you can specify a config file to be used with &lt;code&gt;-c&lt;/code&gt; when running.</source>
          <target state="translated">동일한 프로젝트에 대해 여러 구성 파일을 가질 수 있습니다.이 경우 실행할 때 &lt;code&gt;-c&lt;/code&gt; 와 함께 사용할 구성 파일을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08acbc9c56c3f72c4fb18f88b90fc2eeadd72d32" translate="yes" xml:space="preserve">
          <source>You can include this pageobject in a test by its name (defined in &lt;code&gt;codecept.json&lt;/code&gt;). If you created a &lt;code&gt;loginPage&lt;/code&gt; object, it should be added to the list of arguments to be included in the test:</source>
          <target state="translated">이 페이지 객체를 이름 ( &lt;code&gt;codecept.json&lt;/code&gt; 에 정의 됨 ) 으로 테스트에 포함 할 수 있습니다 . &lt;code&gt;loginPage&lt;/code&gt; 개체 를 만든 경우 테스트에 포함 할 인수 목록에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="85b73cf62ed50bef885bd35d361648ab28b2111b" translate="yes" xml:space="preserve">
          <source>You can include this pageobject in test by its name (defined in &lt;code&gt;codecept.json&lt;/code&gt;). In case you created a &lt;code&gt;loginPage&lt;/code&gt; object it should be added to list of test arguments to be included in test:</source>
          <target state="translated">이 pageobject를 이름 ( &lt;code&gt;codecept.json&lt;/code&gt; 에 정의 됨 ) 으로 테스트에 포함시킬 수 있습니다 . &lt;code&gt;loginPage&lt;/code&gt; 객체 를 생성 한 경우 테스트에 포함 할 테스트 인수 목록에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="223a34b75bd2a48098a959430e9abb3f05d5052c" translate="yes" xml:space="preserve">
          <source>You can inject objects per test by calling &lt;code&gt;injectDependencies&lt;/code&gt; function in a Scenario:</source>
          <target state="translated">시나리오에서 &lt;code&gt;injectDependencies&lt;/code&gt; 함수를 호출하여 테스트 당 객체를 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfc489e45d13fc65b6620cd126b3796866a2c30d" translate="yes" xml:space="preserve">
          <source>You can inject objects per test by calling &lt;code&gt;injectDependencies&lt;/code&gt; function on Scenario:</source>
          <target state="translated">시나리오에서 &lt;code&gt;injectDependencies&lt;/code&gt; 함수를 호출하여 테스트 당 오브젝트를 주입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b817f2f5743dc098bd1dd4cf3a18278e49d1240f" translate="yes" xml:space="preserve">
          <source>You can override config for session by passing second parameter:</source>
          <target state="translated">두 번째 매개 변수를 전달하여 세션에 대한 구성을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94a8938408fe174e4a417919c575112bb8f04a40" translate="yes" xml:space="preserve">
          <source>You can override the configuration for the session by passing a second parameter:</source>
          <target state="translated">두 번째 매개 변수를 전달하여 세션에 대한 구성을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="130d263b5606b234ef0f2752a10512d4480627ed" translate="yes" xml:space="preserve">
          <source>You can pass in &lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md#browsernewpageoptions&quot;&gt;page options (opens new window)&lt;/a&gt; to emulate device on this page</source>
          <target state="translated">&lt;a href=&quot;https://github.com/microsoft/playwright/blob/master/docs/api.md#browsernewpageoptions&quot;&gt;페이지 옵션 (새 창 열림)&lt;/a&gt; 을 전달 하여이 페이지에서 장치를 에뮬레이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cbaf87ab0b7ba8ebfc5f140dceb163f31665750b" translate="yes" xml:space="preserve">
          <source>You can pass only one parameter into a function but you can pass in array or object.</source>
          <target state="translated">하나의 매개 변수 만 함수에 전달할 수 있지만 배열이나 객체로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcd3790509f743138fe39ddd41d9f4fcd22f9b37" translate="yes" xml:space="preserve">
          <source>You can register ts-node, so you can use Typescript in tests with ts-node package</source>
          <target state="translated">ts-node를 등록 할 수 있으므로 ts-node 패키지로 테스트에서 Typescript를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="613647883a4212e5a945ec50c06415fa07705a16" translate="yes" xml:space="preserve">
          <source>You can run a specific feature file by its filename or by grepping by name or tag.</source>
          <target state="translated">파일 이름이나 이름 또는 태그를 지정하여 특정 기능 파일을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f491417a4226700c7a8554529008a705e7d191ca" translate="yes" xml:space="preserve">
          <source>You can set up some before hooks inside step definition files. Use &lt;code&gt;Before&lt;/code&gt; function to do that. This function receives current test as a parameter, so you can apply additional configuration to it.</source>
          <target state="translated">단계 정의 파일 내부에 일부 사전 후크를 설정할 수 있습니다. 이를 수행 하려면 &lt;code&gt;Before&lt;/code&gt; 함수를 사용하십시오 . 이 기능은 현재 테스트를 매개 변수로 수신하므로 추가 구성을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="829fc80c831f4699d3fb502d22ad801b417f0532" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Scenario.todo&lt;/code&gt; when you are planning on writing tests.</source>
          <target state="translated">테스트 작성을 계획 할 때 &lt;code&gt;Scenario.todo&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e87f6b08f4b5d450731d53e365b30419bbe1432" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;grep&lt;/code&gt; and &lt;code&gt;outputName&lt;/code&gt; params to filter tests and output directory for suite:</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; 및 &lt;code&gt;outputName&lt;/code&gt; 매개 변수를 사용 하여 제품군의 테스트 및 출력 디렉토리를 필터링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fce681d00e3704a60544db05d3d4bdbb43fc925" translate="yes" xml:space="preserve">
          <source>You can use this options for build your own &lt;a href=&quot;https://codecept.io/hooks/#plugins&quot;&gt;plugins (opens new window)&lt;/a&gt; with &lt;a href=&quot;https://codecept.io/hooks/#api&quot;&gt;event listners (opens new window)&lt;/a&gt;. Example:</source>
          <target state="translated">당신은 빌드 자신 만이 옵션을 사용할 수있는 &lt;a href=&quot;https://codecept.io/hooks/#plugins&quot;&gt;플러그인 (새 창을 엽니 다)&lt;/a&gt; 와 &lt;a href=&quot;https://codecept.io/hooks/#api&quot;&gt;이벤트 listners를 (새 창을 엽니 다)&lt;/a&gt; . 예:</target>
        </trans-unit>
        <trans-unit id="a405e7473a980453f794980504e4c9eb23d12fb1" translate="yes" xml:space="preserve">
          <source>You may also use &lt;code&gt;tryTo&lt;/code&gt; for cases when you deal with uncertainty on page:</source>
          <target state="translated">페이지에서 불확실성을 다룰 때 &lt;code&gt;tryTo&lt;/code&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="018c10d39ed6bc0bb869027b3363d9a10517d5af" translate="yes" xml:space="preserve">
          <source>You may have noticed that CodeceptJS doesn't use &lt;code&gt;by.*&lt;/code&gt; locators which are common in Protractor or Selenium Webdriver. Instead, most methods expect you to pass valid CSS selectors or XPath. If you don't want CodeceptJS to guess the locator type, then you can specify the type using &lt;em&gt;strict locators&lt;/em&gt;. This is the CodeceptJS version of &lt;code&gt;by&lt;/code&gt;, so you can also reuse your angular specific locators (like models, repeaters, bindings, etc):</source>
          <target state="translated">CodeceptJS가 Protractor 또는 Selenium Webdriver에서 일반적으로 사용 &lt;code&gt;by.*&lt;/code&gt; 로케이터를 사용하지 않는다는 것을 알고 계실 것입니다 . 대신, 대부분의 메소드는 유효한 CSS 선택자 또는 XPath를 전달할 것으로 예상합니다. CodeceptJS가 로케이터 유형을 추측하지 않도록하려면 &lt;em&gt;엄격한 로케이터를&lt;/em&gt; 사용하여 유형을 지정할 수 있습니다 . 이것은 &lt;code&gt;by&lt;/code&gt; 의 CodeceptJS 버전 이므로 각도 별 로케이터 (모델, 리피터, 바인딩 등)를 재사용 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd428ae8cc8eb4dfb4b5916a40fea49690d33cad" translate="yes" xml:space="preserve">
          <source>You may run use &lt;code&gt;-v $(pwd)/:tests/&lt;/code&gt; if running this from the root of your CodeceptJS tests directory. &lt;em&gt;Note: The output of your test run will appear in your local directory if your output path is &lt;code&gt;./output&lt;/code&gt; in the CodeceptJS config&lt;/em&gt;&lt;em&gt;Note: If running with the Nightmare driver, it is not necessary to run a selenium docker container and link it. So &lt;code&gt;--link selenium-chrome:selenium&lt;/code&gt; may be omitted&lt;/em&gt;</source>
          <target state="translated">CodeceptJS 테스트 디렉토리의 루트에서이를 실행하는 경우 &lt;code&gt;-v $(pwd)/:tests/&lt;/code&gt; 실행할 수 있습니다 . &lt;em&gt;참고 : CodeceptJS 구성에서 출력 경로가 &lt;code&gt;./output&lt;/code&gt; 인 경우 테스트 실행의 출력이 로컬 디렉토리에 나타납니다. &lt;/em&gt;&lt;em&gt;참고 : Nightmare 드라이버로 실행하는 경우 셀레늄 도커 컨테이너를 실행하고 링크 할 필요가 없습니다. 따라서 &lt;code&gt;--link selenium-chrome:selenium&lt;/code&gt; 은 생략 될 수 있습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c183a7c114264b257189a9776b7d058187773e04" translate="yes" xml:space="preserve">
          <source>You need to upload your Android app (.apk) or iOS app (.ipa) to the BrowserStack servers using the REST API before running your tests. The App URL (&lt;code&gt;bs://hashed appid&lt;/code&gt;) is returned in the response of this call.</source>
          <target state="translated">테스트를 실행하기 전에 REST API를 사용하여 Android 앱 (.apk) 또는 iOS 앱 (.ipa)을 BrowserStack 서버에 업로드해야합니다. 이 호출의 응답으로 앱 URL ( &lt;code&gt;bs://hashed appid&lt;/code&gt; )이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4ccccafe9f302b5cf3040db0005897b58a64fdde" translate="yes" xml:space="preserve">
          <source>You should provide a text as first argument and, optionally, a locator to search for a text in a context.</source>
          <target state="translated">텍스트를 첫 번째 인수로 제공하고 선택적으로 컨텍스트에서 텍스트를 검색하기위한 로케이터를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="913145629ac48069ba2524089cb86940bdeca043" translate="yes" xml:space="preserve">
          <source>You should provide a text as first argument, and optionally a locator to narrow the search context.</source>
          <target state="translated">텍스트를 첫 번째 인수로 제공하고 선택적으로 검색 컨텍스트를 좁히기위한 로케이터를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="907f44cefeae65df37cdf7b28d7c84d3264d3f26" translate="yes" xml:space="preserve">
          <source>You should set min and max runs boundaries so when few tests fail in a row you can rerun them until they are succeeded.</source>
          <target state="translated">최소 및 최대 실행 경계를 설정해야 연속으로 실패한 테스트가 거의 없을 때 성공할 때까지 다시 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc559987a25df7e5ace481b061ea319d06d33408" translate="yes" xml:space="preserve">
          <source>You will also be asked for the platform and the application package.</source>
          <target state="translated">또한 플랫폼 및 응용 프로그램 패키지를 요청 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="7b9b7ff3392b5dda39429d549f7500fd539bf61d" translate="yes" xml:space="preserve">
          <source>You will be asked about installing a demo component. If you start a fresh project &lt;strong&gt;it is recommended to agree and install a demo component&lt;/strong&gt;, so you could see tests passing.</source>
          <target state="translated">데모 구성 요소 설치에 대한 질문이 표시됩니다. 새 프로젝트를 시작하는 경우 테스트 통과를 볼 수 있도록 &lt;strong&gt;동의하고 데모 구성 요소를 설치하는 것이 좋습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="46b905ec5343785ba4c7e5875a343ed8bacd4135" translate="yes" xml:space="preserve">
          <source>You will be asked for a Helper to use, you should select Nightmare and provide url of a website you are testing. Setup process is explained on &lt;a href=&quot;https://codecept.io/quickstart/&quot;&gt;QuickStart page&lt;/a&gt;.</source>
          <target state="translated">사용할 도우미를 요청하면 Nightmare를 선택하고 테스트중인 웹 사이트의 URL을 제공해야합니다. 설정 과정은 &lt;a href=&quot;https://codecept.io/quickstart/&quot;&gt;빠른 시작 페이지에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="93b987b40645db2d6f06e2faa85ccf36aed5c261" translate="yes" xml:space="preserve">
          <source>You will be asked for a Helper to use, you should select Playwright and provide url of a website you are testing.</source>
          <target state="translated">사용할 도우미를 요청하면 극작가를 선택하고 테스트중인 웹 사이트의 URL을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="7548b91d1b2df58c9c01e41b428bb59bfec28410" translate="yes" xml:space="preserve">
          <source>You will be asked for a Helper to use, you should select Puppeteer and provide url of a website you are testing.</source>
          <target state="translated">사용할 도우미를 요청하면 Puppeteer를 선택하고 테스트중인 웹 사이트의 URL을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="611be88a7a15fafb70a62aa2fae216b1c1fda1be" translate="yes" xml:space="preserve">
          <source>You will be asked questions about initial configuration, make sure you select Protractor helper. If you didn't have Protractor library it &lt;strong&gt;will be installed&lt;/strong&gt;. Please agree to extend steps, and use &lt;code&gt;http://todomvc.com/examples/angularjs/&lt;/code&gt; as a url for Protractor helper.</source>
          <target state="translated">초기 구성에 대한 질문이 표시되며 각도기 도우미를 선택해야합니다. 각도기 라이브러리가없는 경우 &lt;strong&gt;설치됩니다&lt;/strong&gt; . 단계를 확장하는 데 동의하고 &lt;code&gt;http://todomvc.com/examples/angularjs/&lt;/code&gt; 를 각도기 도우미의 URL로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac0ff14c23a68ba04709b731a09957827fa5d739" translate="yes" xml:space="preserve">
          <source>You will be asked questions about the initial configuration, make sure you select the Protractor helper. If your project didn't already have the Protractor library, it &lt;strong&gt;will be installed&lt;/strong&gt; as part of this process. Please agree to extend steps, and use &lt;code&gt;http://todomvc.com/examples/angularjs/&lt;/code&gt; as the url for Protractor helper.</source>
          <target state="translated">초기 구성에 대한 질문이 표시됩니다. Protractor 도우미를 선택했는지 확인하십시오. 프로젝트에 Protractor 라이브러리가없는 경우이 프로세스의 일부로 &lt;strong&gt;설치&lt;/strong&gt; 됩니다. 단계 확장에 동의하고 Protractor 도우미의 URL로 &lt;code&gt;http://todomvc.com/examples/angularjs/&lt;/code&gt; 를 사용 하세요.</target>
        </trans-unit>
        <trans-unit id="8a85cd0a3f138bfd2c45ec597a70fb67f76e8d91" translate="yes" xml:space="preserve">
          <source>Your first test can be generated with the &lt;code&gt;gt&lt;/code&gt; command:</source>
          <target state="translated">첫 번째 테스트는 &lt;code&gt;gt&lt;/code&gt; 명령 으로 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff382c35ca36900f196d2db5b9c69113f5d57021" translate="yes" xml:space="preserve">
          <source>Your test scenario should always use the &lt;code&gt;I&lt;/code&gt; object to execute commands. This is important, as all methods of &lt;code&gt;I&lt;/code&gt; are running in the global promise chain. This way, CodeceptJS makes sure everything is executed in right order. To start with opening a webpage, use the &lt;code&gt;amOnPage&lt;/code&gt; command for. Since we already specified the full URL to the TodoMVC app, we can pass the relative path for our url, instead of the absolute url:</source>
          <target state="translated">테스트 시나리오는 항상 &lt;code&gt;I&lt;/code&gt; 개체를 사용하여 명령을 실행해야합니다. 모든 방법으로이 중요하다 &lt;code&gt;I&lt;/code&gt; 세계 약속 체인에서 실행된다. 이런 식으로 CodeceptJS는 모든 것이 올바른 순서로 실행되도록합니다. 웹 페이지 열기를 시작하려면 &lt;code&gt;amOnPage&lt;/code&gt; 명령을 사용하십시오 . 이미 TodoMVC 앱의 전체 URL을 지정 했으므로 절대 URL 대신 URL의 상대 경로를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8032a146a637147372c7cd65e5f99ae7716c778" translate="yes" xml:space="preserve">
          <source>_addPopupListener</source>
          <target state="translated">_addPopupListener</target>
        </trans-unit>
        <trans-unit id="f2fa01af7babff2cfd64e708349dda4046a15a58" translate="yes" xml:space="preserve">
          <source>_addPopupListener (Puppeteer)</source>
          <target state="translated">_addPopupListener (인형)</target>
        </trans-unit>
        <trans-unit id="76eb3e66b48877f71bc78ddff094a90f8e78fef1" translate="yes" xml:space="preserve">
          <source>_cleanRequestHeaders</source>
          <target state="translated">_cleanRequestHeaders</target>
        </trans-unit>
        <trans-unit id="e3eba7f4fdfc27c1a8a4427b59a5d2bb9f840873" translate="yes" xml:space="preserve">
          <source>_cleanRequestHeaders (REST)</source>
          <target state="translated">_cleanRequestHeaders (REST)</target>
        </trans-unit>
        <trans-unit id="f88266bb1eb48b794d522772f90bb8a728ef99c7" translate="yes" xml:space="preserve">
          <source>_executeQuery</source>
          <target state="translated">_executeQuery</target>
        </trans-unit>
        <trans-unit id="5dcf8aaa7412b933faa86be0973304aba6a8b6db" translate="yes" xml:space="preserve">
          <source>_executeRequest</source>
          <target state="translated">_executeRequest</target>
        </trans-unit>
        <trans-unit id="a5f3c3e884d0f620a798a25b904865c2c34ce72a" translate="yes" xml:space="preserve">
          <source>_executeRequest (REST)</source>
          <target state="translated">_executeRequest (REST)</target>
        </trans-unit>
        <trans-unit id="e6eeeeafee7c74c4c71b88c0d86cb9814b7fda54" translate="yes" xml:space="preserve">
          <source>_fetchId</source>
          <target state="translated">_fetchId</target>
        </trans-unit>
        <trans-unit id="2003d1023e0566a197bbcc436e1d49218260aa6b" translate="yes" xml:space="preserve">
          <source>_fetchId (ApiDataFactory)</source>
          <target state="translated">_fetchId (ApiDataFactory)</target>
        </trans-unit>
        <trans-unit id="e1f6814453e02cb4031b3c18898d6933f33db8ac" translate="yes" xml:space="preserve">
          <source>_getPageUrl</source>
          <target state="translated">_getPageUrl</target>
        </trans-unit>
        <trans-unit id="71af93d49af0cd98a4f3784599e2ea3258df48e1" translate="yes" xml:space="preserve">
          <source>_getPageUrl (Puppeteer)</source>
          <target state="translated">_getPageUrl (인형)</target>
        </trans-unit>
        <trans-unit id="b1c28c7181c70dc62087eecac96eab5a3396652a" translate="yes" xml:space="preserve">
          <source>_getWindowHandle</source>
          <target state="translated">_getWindowHandle</target>
        </trans-unit>
        <trans-unit id="034413a12f2f16ed0d0a72c2c4c8a6bc252d1cca" translate="yes" xml:space="preserve">
          <source>_getWindowHandle (Protractor)</source>
          <target state="translated">_getWindowHandle (분도기)</target>
        </trans-unit>
        <trans-unit id="b7fac9a53beff9e872cc201d320902e402a7717d" translate="yes" xml:space="preserve">
          <source>_isShadowLocator</source>
          <target state="translated">_isShadowLocator</target>
        </trans-unit>
        <trans-unit id="19adb23b5c7c056e9a7817e39acbe5a091d30196" translate="yes" xml:space="preserve">
          <source>_locate</source>
          <target state="translated">_locate</target>
        </trans-unit>
        <trans-unit id="08ba5ce7f340fd3fc81ee953ba89c8cdeadcb7b3" translate="yes" xml:space="preserve">
          <source>_locate (Nightmare)</source>
          <target state="translated">_locate (나이트 메어)</target>
        </trans-unit>
        <trans-unit id="1ce0e281a62ddb0a3e536e6dd5608ae539131aa4" translate="yes" xml:space="preserve">
          <source>_locate (Protractor)</source>
          <target state="translated">_locate (분도기)</target>
        </trans-unit>
        <trans-unit id="c6a968ccefbd9b38d1b4b7826a494a11d67f9d29" translate="yes" xml:space="preserve">
          <source>_locate (Puppeteer)</source>
          <target state="translated">_locate (인형)</target>
        </trans-unit>
        <trans-unit id="4eae260e3fdd5187cf965c0ab9c5adf7379205d2" translate="yes" xml:space="preserve">
          <source>_locate (WebDriverIO)</source>
          <target state="translated">_locate (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="bad56698955615dc5dfc0a4ff931dcb18d91d1be" translate="yes" xml:space="preserve">
          <source>_locateCheckable</source>
          <target state="translated">_locateCheckable</target>
        </trans-unit>
        <trans-unit id="b408e19a16fb0e092e4b695b517cc851c57e3fb9" translate="yes" xml:space="preserve">
          <source>_locateCheckable (Protractor)</source>
          <target state="translated">_locateCheckable (분도기)</target>
        </trans-unit>
        <trans-unit id="a3a25b7c660496128a47dcaf48b11f7c2926f34a" translate="yes" xml:space="preserve">
          <source>_locateCheckable (Puppeteer)</source>
          <target state="translated">_locateCheckable (인형)</target>
        </trans-unit>
        <trans-unit id="97cb2e6efd7221f0010050bfa1bb88810c33b147" translate="yes" xml:space="preserve">
          <source>_locateCheckable (WebDriverIO)</source>
          <target state="translated">_locateCheckable (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="62f680ea74a5f954e2048cc4f19e23a2cc2bb6b4" translate="yes" xml:space="preserve">
          <source>_locateClickable</source>
          <target state="translated">_locateClickable</target>
        </trans-unit>
        <trans-unit id="21c10049f8832f28fb707b2ea019bd95113663e6" translate="yes" xml:space="preserve">
          <source>_locateClickable (Protractor)</source>
          <target state="translated">_locate 클릭 가능 (분도기)</target>
        </trans-unit>
        <trans-unit id="2553292efa83d81fdbefb973224e9601e5e677e4" translate="yes" xml:space="preserve">
          <source>_locateClickable (Puppeteer)</source>
          <target state="translated">_locateClickable (인형)</target>
        </trans-unit>
        <trans-unit id="5cc1b013d10c35e85ab2077b78dd51f9b290635b" translate="yes" xml:space="preserve">
          <source>_locateClickable (WebDriverIO)</source>
          <target state="translated">_locateClickable (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="d75da8a7d59d92c02bbf804918efbdae2371c170" translate="yes" xml:space="preserve">
          <source>_locateFields</source>
          <target state="translated">_locateFields</target>
        </trans-unit>
        <trans-unit id="7b323fc35c8933685ef2178edee7e9187dce43ec" translate="yes" xml:space="preserve">
          <source>_locateFields (Protractor)</source>
          <target state="translated">_locateFields (분도기)</target>
        </trans-unit>
        <trans-unit id="722af8418f366df50a3ef2948181c65dac2fa3f4" translate="yes" xml:space="preserve">
          <source>_locateFields (Puppeteer)</source>
          <target state="translated">_locateFields (인형)</target>
        </trans-unit>
        <trans-unit id="705dbf55699e947190a1ed3fce89db643979e82d" translate="yes" xml:space="preserve">
          <source>_locateFields (WebDriverIO)</source>
          <target state="translated">_locateFields (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="68b964c309ad7a9752f168becadb4256b744a6c1" translate="yes" xml:space="preserve">
          <source>_locateShadow</source>
          <target state="translated">_locateShadow</target>
        </trans-unit>
        <trans-unit id="d04e6ef2cd6d1e234b52b753acc6d5d11f2224c4" translate="yes" xml:space="preserve">
          <source>_prepareGraphQLRequest</source>
          <target state="translated">_prepareGraphQLRequest</target>
        </trans-unit>
        <trans-unit id="eafb7cc5e3c8f40754c34b051d81fbc278084ad5" translate="yes" xml:space="preserve">
          <source>_requestCreate</source>
          <target state="translated">_requestCreate</target>
        </trans-unit>
        <trans-unit id="8d97a8ecd9e3df93893385104f286a3ca733c0dc" translate="yes" xml:space="preserve">
          <source>_requestCreate (ApiDataFactory)</source>
          <target state="translated">_requestCreate (ApiDataFactory)</target>
        </trans-unit>
        <trans-unit id="d75317660b1493d9e46abf730ef292bd161868ac" translate="yes" xml:space="preserve">
          <source>_requestDelete</source>
          <target state="translated">_requestDelete</target>
        </trans-unit>
        <trans-unit id="997d83be5ba1e1eee279ae43af59da347d45a2a4" translate="yes" xml:space="preserve">
          <source>_requestDelete (ApiDataFactory)</source>
          <target state="translated">_requestDelete (ApiDataFactory)</target>
        </trans-unit>
        <trans-unit id="b4e2cec9e836989b19905954d6fd9dd691357126" translate="yes" xml:space="preserve">
          <source>_setPage</source>
          <target state="translated">_setPage</target>
        </trans-unit>
        <trans-unit id="28da0f04dcb780b35763ca2c54b42956f471235d" translate="yes" xml:space="preserve">
          <source>_setPage (Puppeteer)</source>
          <target state="translated">_setPage (인형)</target>
        </trans-unit>
        <trans-unit id="56da41fed83652007d459c775b551ce8cfb45fda" translate="yes" xml:space="preserve">
          <source>_smartWait</source>
          <target state="translated">_smartWait</target>
        </trans-unit>
        <trans-unit id="ef0556e6153d9605cefc87274a91a84620ce9ecc" translate="yes" xml:space="preserve">
          <source>_switchToContext</source>
          <target state="translated">_switchToContext</target>
        </trans-unit>
        <trans-unit id="4347e89c4503c65998567e8eb24e2cc0f5953ba3" translate="yes" xml:space="preserve">
          <source>_switchToContext (Appium)</source>
          <target state="translated">_switchToContext (Appium)</target>
        </trans-unit>
        <trans-unit id="5dacd54259b67d84a193e566bd935c4c6015350f" translate="yes" xml:space="preserve">
          <source>_url</source>
          <target state="translated">_url</target>
        </trans-unit>
        <trans-unit id="556e478f4dd500a15a70a03cb901b01670b3d445" translate="yes" xml:space="preserve">
          <source>_url (REST)</source>
          <target state="translated">_url (REST)</target>
        </trans-unit>
        <trans-unit id="55bc8c96f9a5c002529d775b8e990f50ba10dc27" translate="yes" xml:space="preserve">
          <source>acceptPopup</source>
          <target state="translated">acceptPopup</target>
        </trans-unit>
        <trans-unit id="f42481fbbf6c5d4af310b5de46ae00ce3cfb80ce" translate="yes" xml:space="preserve">
          <source>acceptPopup (Protractor)</source>
          <target state="translated">acceptPopup (분도기)</target>
        </trans-unit>
        <trans-unit id="ad637340e64a428afb6439f5b4550eb3e553df47" translate="yes" xml:space="preserve">
          <source>acceptPopup (Puppeteer)</source>
          <target state="translated">acceptPopup (인형)</target>
        </trans-unit>
        <trans-unit id="233daaf74f235ca29a286746edd92480c95c6026" translate="yes" xml:space="preserve">
          <source>acceptPopup (WebDriverIO)</source>
          <target state="translated">acceptPopup (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="75697bb177d04f819f65fd22f13e60dedecda2a6" translate="yes" xml:space="preserve">
          <source>addMochawesomeContext</source>
          <target state="translated">addMochawesomeContext</target>
        </trans-unit>
        <trans-unit id="32b8b4c0ad4143cd3a33bf937b527e6b01e31108" translate="yes" xml:space="preserve">
          <source>additionalParams</source>
          <target state="translated">additionalParams</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="fdac48f9610893268aeba2166caf113e18cdbaa8" translate="yes" xml:space="preserve">
          <source>airplane mode</source>
          <target state="translated">비행기 모드</target>
        </trans-unit>
        <trans-unit id="81f4b06f6ccc84490203b8c87a479a1e0c215aed" translate="yes" xml:space="preserve">
          <source>allure</source>
          <target state="translated">allure</target>
        </trans-unit>
        <trans-unit id="4bc57808c0ef99796065b884c5393d836f3aa528" translate="yes" xml:space="preserve">
          <source>amAcceptingPopups</source>
          <target state="translated">amAcceptingPopups</target>
        </trans-unit>
        <trans-unit id="21463a9d0e7e1c70ba24ffeb6543e6ce0789f38b" translate="yes" xml:space="preserve">
          <source>amAcceptingPopups (Puppeteer)</source>
          <target state="translated">amAcceptingPopups (인형)</target>
        </trans-unit>
        <trans-unit id="7c51fe8d6afbb89b7f8403f47cc3beba9dff951a" translate="yes" xml:space="preserve">
          <source>amCancellingPopups</source>
          <target state="translated">amCancellingPopups</target>
        </trans-unit>
        <trans-unit id="084abef91a4ae18c40692666bd67b4b0c483866a" translate="yes" xml:space="preserve">
          <source>amCancellingPopups (Puppeteer)</source>
          <target state="translated">amCancellingPopups (인형)</target>
        </trans-unit>
        <trans-unit id="7a38742a8f53e3ae2a0772b38e33b7359fe8acb7" translate="yes" xml:space="preserve">
          <source>amFollowingRequestRedirects</source>
          <target state="translated">amFollowingRequestRedirects</target>
        </trans-unit>
        <trans-unit id="7fffcc1e7e4f74bbdaeb8fbcda0532c36d9abb32" translate="yes" xml:space="preserve">
          <source>amFollowingRequestRedirects (REST)</source>
          <target state="translated">amFollowingRequestRedirects (REST)</target>
        </trans-unit>
        <trans-unit id="25ae24696b65e91eb23aebb00c9be6adb477d50e" translate="yes" xml:space="preserve">
          <source>amInPath</source>
          <target state="translated">amInPath</target>
        </trans-unit>
        <trans-unit id="bca5b332ed7cc2be2c7f1c934cee79f6b49c6e40" translate="yes" xml:space="preserve">
          <source>amInPath (FileSystem)</source>
          <target state="translated">amInPath (파일 시스템)</target>
        </trans-unit>
        <trans-unit id="eb9629a72cee7d9412b4d1ffcc0f6869d9c557ff" translate="yes" xml:space="preserve">
          <source>amInsideAngularApp</source>
          <target state="translated">amInsideAngularApp</target>
        </trans-unit>
        <trans-unit id="9d9c937b930b8fc4747e988a206d4d35053acdbf" translate="yes" xml:space="preserve">
          <source>amInsideAngularApp (Protractor)</source>
          <target state="translated">amInsideAngularApp (분도기)</target>
        </trans-unit>
        <trans-unit id="481639566c7cd35e20209c0fbf31d50c4b20860f" translate="yes" xml:space="preserve">
          <source>amNotFollowingRequestRedirects</source>
          <target state="translated">amNotFollowingRequestRedirects</target>
        </trans-unit>
        <trans-unit id="ab63232cb1108920eaebb7d16949f9e548448b0b" translate="yes" xml:space="preserve">
          <source>amNotFollowingRequestRedirects (REST)</source>
          <target state="translated">amNotFollowingRequestRedirects (REST)</target>
        </trans-unit>
        <trans-unit id="f96600977f40621c585a02b26d2d00160f77a51c" translate="yes" xml:space="preserve">
          <source>amOnPage</source>
          <target state="translated">amOnPage</target>
        </trans-unit>
        <trans-unit id="d29f390cad814e57b02773731ce88e60de8bd977" translate="yes" xml:space="preserve">
          <source>amOnPage (Nightmare)</source>
          <target state="translated">amOnPage (나이트 메어)</target>
        </trans-unit>
        <trans-unit id="458c762aa7d2531adc4ee0619f003da615e91951" translate="yes" xml:space="preserve">
          <source>amOnPage (Protractor)</source>
          <target state="translated">amOnPage (분도기)</target>
        </trans-unit>
        <trans-unit id="ed04cbde4bf1a651c2b7edc546728da7913b5d4a" translate="yes" xml:space="preserve">
          <source>amOnPage (Puppeteer)</source>
          <target state="translated">amOnPage (인형)</target>
        </trans-unit>
        <trans-unit id="27fb35eda52e2b1e678fc535c0fb2c4fa8ba5dd3" translate="yes" xml:space="preserve">
          <source>amOnPage (WebDriverIO)</source>
          <target state="translated">amOnPage (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="96dd2f7867859973f3112f02ebba3d3b53a091b5" translate="yes" xml:space="preserve">
          <source>amOutsideAngularApp</source>
          <target state="translated">amOutsideAngularApp</target>
        </trans-unit>
        <trans-unit id="385cf61e41e39fd06220d73f4f4c1cabd5f80530" translate="yes" xml:space="preserve">
          <source>amOutsideAngularApp (Protractor)</source>
          <target state="translated">amOutsideAngularApp (분도기)</target>
        </trans-unit>
        <trans-unit id="d50965011b1d1ceceb42f95bdf9ac7976e9534bc" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;others (opens new window)&lt;/a&gt;.</source>
          <target state="translated">및 &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;기타 (새 창에서 열림)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="827d19e0100100ec22d19f56dd24c2f66fefb3a7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;others&lt;/a&gt;.</source>
          <target state="translated">그리고 &lt;a href=&quot;https://codecept.io/helpers/Appium/&quot;&gt;다른 사람&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1a3664ed62269963188657a9041fe49ca8bb00b" translate="yes" xml:space="preserve">
          <source>and now we can add even more tests!</source>
          <target state="translated">이제 더 많은 테스트를 추가 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="7a6bad4b88d6d1b39f30fbaa9675ab5fd77b51c5" translate="yes" xml:space="preserve">
          <source>and others</source>
          <target state="translated">다른 사람</target>
        </trans-unit>
        <trans-unit id="22377e89c9660f0392a1197e8365bf6211c2803a" translate="yes" xml:space="preserve">
          <source>and so we can add even more tests!</source>
          <target state="translated">더 많은 테스트를 추가 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="a0c0ccdbf44d9adfd15e5dc0c7d8d59c62bda5a2" translate="yes" xml:space="preserve">
          <source>and started as</source>
          <target state="translated">로 시작</target>
        </trans-unit>
        <trans-unit id="298897df9cb36cd25da134b18f761fa27d6e1e35" translate="yes" xml:space="preserve">
          <source>and use them in your tests:</source>
          <target state="translated">테스트에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="54ed8ac17cc56c769553d963456494fe7aaf5ae4" translate="yes" xml:space="preserve">
          <source>another good example is datepicker component:</source>
          <target state="translated">또 다른 좋은 예는 datepicker 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="39fbafba701ecd3b23ec22d55a40f790288df262" translate="yes" xml:space="preserve">
          <source>appendField</source>
          <target state="translated">appendField</target>
        </trans-unit>
        <trans-unit id="2bd8cdd502227277694f5a79ded4f983ed93a123" translate="yes" xml:space="preserve">
          <source>appendField (Appium)</source>
          <target state="translated">appendField (Appium)</target>
        </trans-unit>
        <trans-unit id="e6843445ea34a63aeecd0905cc9546681f1da3cd" translate="yes" xml:space="preserve">
          <source>appendField (Nightmare)</source>
          <target state="translated">appendField (Nightmare)</target>
        </trans-unit>
        <trans-unit id="3d73f26029e65696a262b8858ddef70b077a1ad1" translate="yes" xml:space="preserve">
          <source>appendField (Protractor)</source>
          <target state="translated">appendField (분도기)</target>
        </trans-unit>
        <trans-unit id="c58084641fd04cd43d7db52878c1eb9fed2a47da" translate="yes" xml:space="preserve">
          <source>appendField (Puppeteer)</source>
          <target state="translated">appendField (인형)</target>
        </trans-unit>
        <trans-unit id="5569b476c2535bb62b2505cb43be3b0a2a4b0028" translate="yes" xml:space="preserve">
          <source>appendField (WebDriverIO)</source>
          <target state="translated">appendField (WebDriverIO)</target>
        </trans-unit>
        <trans-unit id="d94e78b1e13df771c53095638941c0cb5e20d415" translate="yes" xml:space="preserve">
          <source>appium</source>
          <target state="translated">appium</target>
        </trans-unit>
        <trans-unit id="72612f3ad94d8f7b0b66d4b466832b145a99a02d" translate="yes" xml:space="preserve">
          <source>asserts that an element appears a given number of times in the DOM Element is located by label or name or CSS or XPath.</source>
          <target state="translated">DOM 요소에서 요소가 지정된 횟수만큼 표시되도록 레이블 또는 이름 또는 CSS 또는 XPath로 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="865e58d246affbd0b9e228b8a1570c221ef5798a" translate="yes" xml:space="preserve">
          <source>asserts that an element appears a given number of times in the DOM Element is located by label or name or CSS or XPath. Appium: support</source>
          <target state="translated">DOM 요소에서 요소가 지정된 횟수만큼 표시되도록 레이블 또는 이름 또는 CSS 또는 XPath로 요소를 찾습니다. Appium : 지원</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
