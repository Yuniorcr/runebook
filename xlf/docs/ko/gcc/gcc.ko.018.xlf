<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="1567d2eb5aba56b9ce17fce64a7265973de5e5ae" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;A&lt;/code&gt; class version of &lt;code&gt;f&lt;/code&gt; is hidden in &lt;code&gt;B&lt;/code&gt;, and code like:</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 의 &lt;code&gt;A&lt;/code&gt; 클래스 버전은 &lt;code&gt;B&lt;/code&gt; 에 숨겨져 있으며 다음과 같은 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="64a1e5f4a068e8fa7e75af7d2cfdf313d9a24a7c" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;noreturn&lt;/code&gt; attribute applies to all the functions declared; the &lt;code&gt;format&lt;/code&gt; attribute only applies to &lt;code&gt;d1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;noreturn&lt;/code&gt; 속성은 함수가 선언 된 모든 적용; &lt;code&gt;format&lt;/code&gt; 속성에만 적용 &lt;code&gt;d1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e70eba1f6eb88acca2d51a506ef00423322a32af" translate="yes" xml:space="preserve">
          <source>the GCC pass that emitted the message, and</source>
          <target state="translated">메시지를 보낸 GCC 패스</target>
        </trans-unit>
        <trans-unit id="7c05b1d7fe1470abb1ece997ac399fd8985f60df" translate="yes" xml:space="preserve">
          <source>the behavior is dependent on those environment variables: If &lt;code&gt;GCC_URLS&lt;/code&gt; is set to empty or &amp;lsquo;</source>
          <target state="translated">동작은 해당 환경 변수에 따라 다릅니다. &lt;code&gt;GCC_URLS&lt;/code&gt; 가 비어 있거나 '</target>
        </trans-unit>
        <trans-unit id="a541da57ca06731218cffa25eae84b6939e024c2" translate="yes" xml:space="preserve">
          <source>the compiler assumes that if interposition happens for functions the overwriting function will have precisely the same semantics (and side effects). Similarly if interposition happens for variables, the constructor of the variable will be the same. The flag has no effect for functions explicitly declared inline (where it is never allowed for interposition to change semantics) and for symbols explicitly declared weak.</source>
          <target state="translated">컴파일러는 함수에 대한 삽입이 발생하면 덮어 쓰기 함수는 정확히 동일한 의미 (및 부작용)를 갖습니다. 마찬가지로 변수에 대한 조정이 발생하면 변수의 생성자가 동일합니다. 이 플래그는 명시 적으로 인라인으로 선언 된 함수 (시맨틱을 변경하기 위해 개입이 허용되지 않는 함수) 및 명시 적으로 약한 것으로 선언 된 기호에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b173b90f0b62faa2226dcb1fb04df8d5ef821f75" translate="yes" xml:space="preserve">
          <source>the compiler does not warn about constructs contained within header files found via &lt;var&gt;dir&lt;/var&gt;. This option is valid only for the C family of languages.</source>
          <target state="translated">컴파일러는 &lt;var&gt;dir&lt;/var&gt; 을 통해 찾은 헤더 파일에 포함 된 구문에 대해서는 경고하지 않습니다 . 이 옵션은 C 언어 군에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="d7b93353846087d77d8dbf6b8d926b9b674c3079" translate="yes" xml:space="preserve">
          <source>the compiler driver adds or removes this option from the compiler proper&amp;rsquo;s command line, because the compiler then knows if the device or architecture has an 8-bit stack pointer and thus no &lt;code&gt;SPH&lt;/code&gt; register or not.</source>
          <target state="translated">컴파일러는 장치 또는 아키텍처에 8 비트 스택 포인터가 있고 &lt;code&gt;SPH&lt;/code&gt; 레지스터 가 없는지 여부를 알고 있기 때문에 컴파일러 드라이버의 명령 행에서이 옵션을 추가하거나 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="d0e2d5dd76b88a72c4ad90affb0b840b5a88487f" translate="yes" xml:space="preserve">
          <source>the compiler performs the entire computation with &lt;code&gt;double&lt;/code&gt; because the floating-point literal is a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">컴파일러와 전체 연산 수행 &lt;code&gt;double&lt;/code&gt; 부동 소수점 리터럴이 때문에 &lt;code&gt;double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a716caf94aa07af4ab52d73b53773a7538264a1" translate="yes" xml:space="preserve">
          <source>the default by configuring GCC with</source>
          <target state="translated">다음과 같이 GCC를 구성하여 기본값</target>
        </trans-unit>
        <trans-unit id="f04abeaa2cabf93ef2c3c754731d72368923d3b0" translate="yes" xml:space="preserve">
          <source>the default is &amp;lsquo;</source>
          <target state="translated">기본값은 '</target>
        </trans-unit>
        <trans-unit id="d9c2301484cdc5eb4574cec30f7f7fedfd659b04" translate="yes" xml:space="preserve">
          <source>the default.</source>
          <target state="translated">디폴트</target>
        </trans-unit>
        <trans-unit id="308f7defa6c7125adfedbe8ca3049e98e8f287d1" translate="yes" xml:space="preserve">
          <source>the execution count of the code being optimized, along with metadata about whether this was from actual profile data, or just an estimate, allowing consumers to prioritize messages by code hotness,</source>
          <target state="translated">실제 프로필 데이터에 의한 것인지 메타 데이터와 함께 메타 데이터와 함께 최적화되는 코드의 실행 횟수, 소비자가 코드 핫스 (hotness)로 메시지의 우선 순위를 정할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="9d82614cbbb50fa51032eeb7f78d1712e956fb2f" translate="yes" xml:space="preserve">
          <source>the following initialization</source>
          <target state="translated">다음 초기화</target>
        </trans-unit>
        <trans-unit id="4040d7fa8b07a97810a09c26fdab7494c9f98a3f" translate="yes" xml:space="preserve">
          <source>the function name of the code being optimized, where applicable,</source>
          <target state="translated">해당되는 경우 최적화중인 코드의 함수 이름</target>
        </trans-unit>
        <trans-unit id="18fec401caf24b2d3f7d89f25c27dd3569567d1f" translate="yes" xml:space="preserve">
          <source>the iteration is implemented by the compiler by repeatedly getting batches of objects from the collection object using the fast enumeration protocol (see below), then iterating over all objects in the batch. This is faster than a normal enumeration where objects are retrieved one by one (hence the name &amp;ldquo;fast enumeration&amp;rdquo;).</source>
          <target state="translated">이 반복은 빠른 열거 프로토콜 (아래 참조)을 사용하여 컬렉션 객체에서 객체 배치를 반복적으로 가져온 다음 배치의 모든 객체를 반복하여 컴파일러에 의해 구현됩니다. 이것은 객체가 하나씩 검색되는 일반 열거보다 빠릅니다 (따라서 &quot;고속 열거&quot;라는 이름).</target>
        </trans-unit>
        <trans-unit id="59068011c168814ad74790e7573a99f4245af05e" translate="yes" xml:space="preserve">
          <source>the list of optimization passes that are turned on and off by the current command-line options.</source>
          <target state="translated">현재 명령 행 옵션으로 켜거나 끄는 최적화 패스 목록</target>
        </trans-unit>
        <trans-unit id="dfcc60f7acbacf29b44e38a400bac9e5f120242e" translate="yes" xml:space="preserve">
          <source>the literals are interspersed in the text section by the assembler. Compiler does not produce explicit &lt;code&gt;.literal&lt;/code&gt; directives and loads literals into registers with &lt;code&gt;MOVI&lt;/code&gt; instructions instead of &lt;code&gt;L32R&lt;/code&gt; to let the assembler do relaxation and place literals as necessary. This option allows assembler to create several literal pools per function and assemble very big functions, which may not be possible with</source>
          <target state="translated">리터럴은 텍스트 섹션에 어셈블러에 의해 산재됩니다. 컴파일러는 명시 적으로 생성하지 않습니다 &lt;code&gt;.literal&lt;/code&gt; 와 레지스터로 지시로드 리터럴 &lt;code&gt;MOVI&lt;/code&gt; 를 대신 지시 &lt;code&gt;L32R&lt;/code&gt; 어셈블러가 필요에 따라 휴식과 장소 리터럴을 할 수 있도록합니다. 이 옵션을 사용하면 어셈블러가 함수 당 여러 리터럴 풀을 만들고 매우 큰 함수를 어셈블 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f718d6eede26fa9eaaa6ea850c637462a64bebe4" translate="yes" xml:space="preserve">
          <source>the location in GCC&amp;rsquo;s own code from which the message was emitted</source>
          <target state="translated">메시지가 생성 된 GCC 자체 코드의 위치</target>
        </trans-unit>
        <trans-unit id="2997a09292df6ee55ccf49c2fe1e76a913b6a65f" translate="yes" xml:space="preserve">
          <source>the macro is defined to &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">매크로는 &lt;code&gt;4&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="b04a6d67afd2c3a8f5d96702490630ce6d4f82b5" translate="yes" xml:space="preserve">
          <source>the macro is defined to &lt;code&gt;atmega8&lt;/code&gt;.</source>
          <target state="translated">매크로는 &lt;code&gt;atmega8&lt;/code&gt; 로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="355646d10b7c8fcdd2d82ae7806a0f5db13e579b" translate="yes" xml:space="preserve">
          <source>the memory occupied by an incoming stack argument;</source>
          <target state="translated">들어오는 스택 인수에 의해 점유 된 메모리;</target>
        </trans-unit>
        <trans-unit id="17789fc37ac7d9d80c7accea5eecb2ac0e19836d" translate="yes" xml:space="preserve">
          <source>the memory occupied by an object with a link-time-constant address.</source>
          <target state="translated">링크 시간 상수 주소를 가진 객체가 차지하는 메모리</target>
        </trans-unit>
        <trans-unit id="4412d80e9d9317d7d8e18c9c5cb40aaef14ff9fe" translate="yes" xml:space="preserve">
          <source>the memory occupied by the current function&amp;rsquo;s stack frame;</source>
          <target state="translated">현재 함수의 스택 프레임이 차지하는 메모리;</target>
        </trans-unit>
        <trans-unit id="ea4fbb0a121c9538a40d5da8d2688d772040e051" translate="yes" xml:space="preserve">
          <source>the precompiled header. If the header files have guards against multiple inclusion, they are skipped because they&amp;rsquo;ve already been included (in the precompiled header).</source>
          <target state="translated">미리 컴파일 된 헤더 헤더 파일에 다중 포함을 방지하는 경우 미리 컴파일 된 헤더에 이미 포함되어 있으므로 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="c1d6d7f753238058ce1cb6ffa9019285c6e866f6" translate="yes" xml:space="preserve">
          <source>the profile gathered by</source>
          <target state="translated">수집 한 프로필</target>
        </trans-unit>
        <trans-unit id="63dc37c3aa31e569ca36d33218dc7ed66b246dd8" translate="yes" xml:space="preserve">
          <source>the read-only qualifier of the pointee gets emitted before the &amp;rsquo;^&amp;rsquo;. The read-only qualifier of the pointer itself gets ignored, unless it is a typedef. Also, the &amp;rsquo;r&amp;rsquo; is only emitted for the outermost type.</source>
          <target state="translated">포인트의 읽기 전용 한정자가 '^'보다 먼저 방출됩니다. 포인터 자체의 읽기 전용 한정자는 typedef가 아닌 한 무시됩니다. 또한 'r'은 가장 바깥 쪽 유형에 대해서만 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="672d573879c1202e2e06461340de5d13be720013" translate="yes" xml:space="preserve">
          <source>the source code lines associated with the assembly instructions, in the form FILENAME:LINENUMBER:CONTENT OF LINE,</source>
          <target state="translated">FILENAME : LINENUMBER : CONTENT OF LINE 형식의 조립 지침과 관련된 소스 코드 행</target>
        </trans-unit>
        <trans-unit id="23085fe4db2d81f02844e6007f9a80fb5b3e5547" translate="yes" xml:space="preserve">
          <source>the value of &lt;code&gt;__alignof__ (foo1.y)&lt;/code&gt; is 1, even though its actual alignment is probably 2 or 4, the same as &lt;code&gt;__alignof__ (int)&lt;/code&gt;. It is an error to ask for the alignment of an incomplete type other than &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">실제 정렬이 &lt;code&gt;__alignof__ (int)&lt;/code&gt; 와 동일하거나 2 또는 4 일지라도 &lt;code&gt;__alignof__ (foo1.y)&lt;/code&gt; 의 값 은 1 입니다. &lt;code&gt;void&lt;/code&gt; 이외의 불완전한 타입의 정렬을 요구하는 것은 에러 입니다.</target>
        </trans-unit>
        <trans-unit id="79169ad61c1161d4142622cff145a2e7917c1709" translate="yes" xml:space="preserve">
          <source>then the implementation of &lt;code&gt;foo&lt;/code&gt; must allow &lt;code&gt;j foo&lt;/code&gt; and &lt;code&gt;jal foo&lt;/code&gt; to be executed speculatively. GCC honors this restriction for functions it compiles itself. It expects non-GCC functions (such as hand-written assembly code) to do the same.</source>
          <target state="translated">그런 다음 &lt;code&gt;foo&lt;/code&gt; 를 구현 하면 &lt;code&gt;j foo&lt;/code&gt; 및 &lt;code&gt;jal foo&lt;/code&gt; 가 추론 적으로 실행될 수 있어야합니다 . GCC는 자체 컴파일 기능에 대한이 제한을 준수합니다. GCC 이외의 기능 (예 : 직접 작성한 어셈블리 코드)도 동일한 기능을 수행 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="ffabb4583f1a68d45a76c8b9f520119218d53aa7" translate="yes" xml:space="preserve">
          <source>therefore disables direct jumps unless GCC knows that the target of the jump is not compressed.</source>
          <target state="translated">따라서 GCC가 점프 대상이 압축되지 않았 음을 알지 않는 한 직접 점프를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c2543fff3bfa6f144c2f06a7de6cd10c0b650cae" translate="yes" xml:space="preserve">
          <source>this</source>
          <target state="translated">this</target>
        </trans-unit>
        <trans-unit id="51cc0e21afc891a9369186579dea6dd551209416" translate="yes" xml:space="preserve">
          <source>this considers e.g. even constant initialized arrays or initialized constant variables with integral or floating-point types. Languages like C or C++ require each variable, including multiple instances of the same variable in recursive calls, to have distinct locations, so using this option results in non-conforming behavior.</source>
          <target state="translated">이것은 예를 들어 상수 초기화 배열이나 정수 또는 부동 소수점 유형의 초기화 상수 변수를 고려합니다. C 또는 C ++와 같은 언어는 재귀 호출에서 동일한 변수의 여러 인스턴스를 포함하여 각 변수가 고유 한 위치를 갖도록 요구하므로이 옵션을 사용하면 부적합한 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="969f11c7000af28297bc0a9dd0ea0539e20a6a8e" translate="yes" xml:space="preserve">
          <source>this example using maxint will not:</source>
          <target state="translated">maxint를 사용하는이 예제는 다음을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b992ec60f7787e4bf897a3e44bdfa43a335a4bf7" translate="yes" xml:space="preserve">
          <source>this is completely equivalent to:</source>
          <target state="translated">이것은 다음과 완전히 같습니다.</target>
        </trans-unit>
        <trans-unit id="2c801b821bb0c13f7809301aee7d03591df1f48c" translate="yes" xml:space="preserve">
          <source>this merging can be suppressed, for debugging state-handling issues.</source>
          <target state="translated">이 병합은 상태 처리 문제를 디버깅하기 위해 억제 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db518582ea0bb3733161339a6d980536530feecc" translate="yes" xml:space="preserve">
          <source>this purging of state can be suppressed, for debugging state-handling issues.</source>
          <target state="translated">상태 처리 문제를 디버깅하기 위해 이러한 상태 제거를 억제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b5bd05243515dc007064d1c5ae985f10132a1dd" translate="yes" xml:space="preserve">
          <source>this setting of the option may result in warnings for benign code.</source>
          <target state="translated">이 옵션 설정으로 인해 양성 코드에 대한 경고가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d28d2b77fa489ab5252d57c24a900533eb9bab17" translate="yes" xml:space="preserve">
          <source>thumb</source>
          <target state="translated">thumb</target>
        </trans-unit>
        <trans-unit id="bdbf09ec296b8934eeef878d2291a86b53a1df09" translate="yes" xml:space="preserve">
          <source>thunderx</source>
          <target state="translated">thunderx</target>
        </trans-unit>
        <trans-unit id="778ec78a1031df3dd767fc0bd18489d375cf450e" translate="yes" xml:space="preserve">
          <source>thunderx2t99</source>
          <target state="translated">thunderx2t99</target>
        </trans-unit>
        <trans-unit id="74bad1c76a204ed9e8282a4dc77815fbd5037b0c" translate="yes" xml:space="preserve">
          <source>thunderx3t110</source>
          <target state="translated">thunderx3t110</target>
        </trans-unit>
        <trans-unit id="7b55768eb832575357bd8b4245a3bd047c96850e" translate="yes" xml:space="preserve">
          <source>thunderxt81</source>
          <target state="translated">thunderxt81</target>
        </trans-unit>
        <trans-unit id="394ea9c4bd08ee3fae1b69eb7e2c7c5752a8752a" translate="yes" xml:space="preserve">
          <source>thunderxt83</source>
          <target state="translated">thunderxt83</target>
        </trans-unit>
        <trans-unit id="0cd860e80f14e802fc616a932ad7f3cf131106d6" translate="yes" xml:space="preserve">
          <source>thunderxt88</source>
          <target state="translated">thunderxt88</target>
        </trans-unit>
        <trans-unit id="e2dba87655b525042a449c0005fa6f444eb0b21f" translate="yes" xml:space="preserve">
          <source>thunderxt88p1</source>
          <target state="translated">thunderxt88p1</target>
        </trans-unit>
        <trans-unit id="1d6cac57f8c0dbec98aa7810b36b3e7ae7929472" translate="yes" xml:space="preserve">
          <source>thunk</source>
          <target state="translated">thunk</target>
        </trans-unit>
        <trans-unit id="c74b9e80ce88383dd17226a4dbba5d52605e3572" translate="yes" xml:space="preserve">
          <source>thunk-extern</source>
          <target state="translated">thunk-extern</target>
        </trans-unit>
        <trans-unit id="8e0860f7803c96ba37c0e2dfdb8391f2326b1284" translate="yes" xml:space="preserve">
          <source>thunk-inline</source>
          <target state="translated">thunk-inline</target>
        </trans-unit>
        <trans-unit id="de3599095913f2a4ce327d5ec79a4ef6eb2337c1" translate="yes" xml:space="preserve">
          <source>tigerlake</source>
          <target state="translated">tigerlake</target>
        </trans-unit>
        <trans-unit id="e50596833fb06679dc4db3ffd03eb29c2d2ec906" translate="yes" xml:space="preserve">
          <source>tilegx</source>
          <target state="translated">tilegx</target>
        </trans-unit>
        <trans-unit id="9e6d22ed0c40f1c704a6b00fd923b78eb03b7f34" translate="yes" xml:space="preserve">
          <source>tilepro</source>
          <target state="translated">tilepro</target>
        </trans-unit>
        <trans-unit id="ccf33a6969b3beb751af68522935f3b388b9e753" translate="yes" xml:space="preserve">
          <source>times the number of branches in the switch.</source>
          <target state="translated">스위치의 분기 수를 곱합니다.</target>
        </trans-unit>
        <trans-unit id="35d37e761f1cec251fe5a0e83b70ce4a5d116766" translate="yes" xml:space="preserve">
          <source>times the size of the original pointer parameter.</source>
          <target state="translated">원래 포인터 매개 변수 크기를 곱한 값입니다.</target>
        </trans-unit>
        <trans-unit id="d4927dda05af693bff7dfd4c7b40eafb0ef92a78" translate="yes" xml:space="preserve">
          <source>tiny</source>
          <target state="translated">tiny</target>
        </trans-unit>
        <trans-unit id="5b88ae9be6fb4236e3471519abb479a3670b49cd" translate="yes" xml:space="preserve">
          <source>titan</source>
          <target state="translated">titan</target>
        </trans-unit>
        <trans-unit id="4929fca9d47db1f6c2520ce3d6bdd6a9304c9812" translate="yes" xml:space="preserve">
          <source>tls</source>
          <target state="translated">tls</target>
        </trans-unit>
        <trans-unit id="a85d92b7ecd7b678ed3d949f344bdf82bb11bfac" translate="yes" xml:space="preserve">
          <source>tme</source>
          <target state="translated">tme</target>
        </trans-unit>
        <trans-unit id="51c8667010d2fa7e6b36f9ca8ba368f4f573a41f" translate="yes" xml:space="preserve">
          <source>tmp.cpp</source>
          <target state="translated">tmp.cpp</target>
        </trans-unit>
        <trans-unit id="8d7326ca5f865d931651df77924995af99eaf04b" translate="yes" xml:space="preserve">
          <source>tmp.cpp.gcov</source>
          <target state="translated">tmp.cpp.gcov</target>
        </trans-unit>
        <trans-unit id="c4cfd4acf4fdd79e8c01a78fb3edc3a8e5375e23" translate="yes" xml:space="preserve">
          <source>to &amp;lsquo;</source>
          <target state="translated">~</target>
        </trans-unit>
        <trans-unit id="ad77733882b0f557ba634a652ae297751f0bb786" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; on all links. It is the default when GCC is configured, explicitly or implicitly, with the HP linker. This option does not affect which &lt;code&gt;ld&lt;/code&gt; is called; it only changes what parameters are passed to that &lt;code&gt;ld&lt;/code&gt;. The &lt;code&gt;ld&lt;/code&gt; that is called is determined by the</source>
          <target state="translated">모든 링크 에 &lt;code&gt;ld&lt;/code&gt; . HP 링커를 사용하여 GCC가 명시 적 또는 암시 적으로 구성된 경우 기본값입니다. 이 옵션은 어떤 &lt;code&gt;ld&lt;/code&gt; 가 호출 되는지에 영향을 미치지 않습니다 . 해당 &lt;code&gt;ld&lt;/code&gt; 로 전달되는 매개 변수 만 변경합니다 . 호출 된 &lt;code&gt;ld&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="052574ea506322e4175ab8fe7ae5997851a73c7d" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; when building a shared library and passes</source>
          <target state="translated">에 &lt;code&gt;ld&lt;/code&gt; 공유 라이브러리와 패스를 구축 할 때</target>
        </trans-unit>
        <trans-unit id="7f375ed6b7d21e29bef7ec7001ca9cb7e1f10a01" translate="yes" xml:space="preserve">
          <source>to &lt;code&gt;ld&lt;/code&gt; when building a shared library. It is the default when GCC is configured, explicitly or implicitly, with the GNU linker. This option does not affect which &lt;code&gt;ld&lt;/code&gt; is called; it only changes what parameters are passed to that &lt;code&gt;ld&lt;/code&gt;. The &lt;code&gt;ld&lt;/code&gt; that is called is determined by the</source>
          <target state="translated">에 &lt;code&gt;ld&lt;/code&gt; 공유 라이브러리를 구축 할 때. GNU 링커를 사용하여 GCC가 명시 적 또는 암시 적으로 구성된 경우 기본값입니다. 이 옵션은 어떤 &lt;code&gt;ld&lt;/code&gt; 가 호출 되는지에 영향을 미치지 않습니다 . 해당 &lt;code&gt;ld&lt;/code&gt; 로 전달되는 매개 변수 만 변경합니다 . 호출 된 &lt;code&gt;ld&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="a1250d72b054639a61892f6728a722d21e18c2ce" translate="yes" xml:space="preserve">
          <source>to adjust the current ABI with AltiVec ABI enhancements.</source>
          <target state="translated">AltiVec ABI 향상으로 현재 ABI를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="eacda4188a74bd486d4cf133dcfe04f422db0e49" translate="yes" xml:space="preserve">
          <source>to allow conditional traps on architectures that support them and</source>
          <target state="translated">이를 지원하는 아키텍처에서 조건부 트랩을 허용하고</target>
        </trans-unit>
        <trans-unit id="147272a50a96cc571871ade447fc98965e18e962" translate="yes" xml:space="preserve">
          <source>to allow the interprocedural optimizers to use more aggressive assumptions which may lead to improved optimization opportunities. Use of</source>
          <target state="translated">절차 적 최적화가 더 적극적인 가정을 사용하여 최적화 기회를 개선 할 수 있도록합니다. 사용</target>
        </trans-unit>
        <trans-unit id="9691671345bd07de9bb4c781ae964352a7002be7" translate="yes" xml:space="preserve">
          <source>to appear or disappear.</source>
          <target state="translated">나타나거나 사라집니다.</target>
        </trans-unit>
        <trans-unit id="0382b54d4234588ef716753062bdbd34ae35cb36" translate="yes" xml:space="preserve">
          <source>to be enabled.</source>
          <target state="translated">활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="6cfc1d1ae9b1990e6658c2bd29b4de5a3bf0b512" translate="yes" xml:space="preserve">
          <source>to be enabled. Enabled by default.</source>
          <target state="translated">활성화됩니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="947d9c4220735ddf7f9b69b00b4604108a31e9b0" translate="yes" xml:space="preserve">
          <source>to bypass the compiler driver and pass &lt;var&gt;option&lt;/var&gt; directly through to the preprocessor. If &lt;var&gt;option&lt;/var&gt; contains commas, it is split into multiple options at the commas. However, many options are modified, translated or interpreted by the compiler driver before being passed to the preprocessor, and</source>
          <target state="translated">컴파일러 드라이버를 무시하고 &lt;var&gt;option&lt;/var&gt; 을 전처리기로 직접 전달 합니다. &lt;var&gt;option&lt;/var&gt; 에 쉼표가 포함되어 있으면 쉼표에서 여러 옵션으로 분할됩니다. 그러나 많은 옵션이 프리 프로세서로 전달되기 전에 컴파일러 드라이버에 의해 수정, 변환 또는 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="40cdbef1c720986a00615faa73ec1ab90de0da56" translate="yes" xml:space="preserve">
          <source>to check programs for strict ISO C conformance. They soon find that it does not do quite what they want: it finds some non-ISO practices, but not all&amp;mdash;only those for which ISO C &lt;em&gt;requires&lt;/em&gt; a diagnostic, and some others for which diagnostics have been added.</source>
          <target state="translated">엄격한 ISO C 적합성에 대한 프로그램을 확인합니다. 그들은 곧 자신이 원하는 것을 제대로하지 못한다는 것을 알게되었다. ISO가 아닌 일부 관행을 찾아 낸다. 전부는 아니지만 ISO C &lt;em&gt;가&lt;/em&gt; 진단을 &lt;em&gt;필요로&lt;/em&gt; 하는 것들과 진단이 추가 된 것들도있다.</target>
        </trans-unit>
        <trans-unit id="94a255a686858f555c8fd88d5aeff6def8cb3789" translate="yes" xml:space="preserve">
          <source>to control ENDBR insertion at the function entry.</source>
          <target state="translated">기능 입력에서 ENDBR 삽입을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="19b2179fa50d0dc5c03ac2bc86827309972186c2" translate="yes" xml:space="preserve">
          <source>to create absolute path names in the</source>
          <target state="translated">에 절대 경로 이름을 만들려면</target>
        </trans-unit>
        <trans-unit id="61d153980416e2776871ed7a73354bcce21b8190" translate="yes" xml:space="preserve">
          <source>to detect missing declarations in C++.</source>
          <target state="translated">C ++에서 누락 된 선언을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="0933a20f384a8d7b9d33c0af497e5215d98b2935" translate="yes" xml:space="preserve">
          <source>to detect missing prototypes. In C++, no warnings are issued for function templates, or for inline functions, or for functions in anonymous namespaces.</source>
          <target state="translated">누락 된 프로토 타입을 감지합니다. C ++에서는 함수 템플릿, 인라인 함수 또는 익명 네임 스페이스의 함수에 대해 경고가 발행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a494cba1db39103892ec4114a05e2de145d05037" translate="yes" xml:space="preserve">
          <source>to determine which diagnostics are controllable and which option controls them.</source>
          <target state="translated">제어 할 수있는 진단 및 제어하는 ​​옵션을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8c695a6dd538d5dbb5a57dc4290630308c91e43d" translate="yes" xml:space="preserve">
          <source>to disable it.</source>
          <target state="translated">비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e8e041429b9c0952fdf9f213889fda578a011674" translate="yes" xml:space="preserve">
          <source>to disable the implicit generation of template instances, and explicitly instantiate all the ones you use. This approach requires more knowledge of exactly which instances you need than do the others, but it&amp;rsquo;s less mysterious and allows greater control if you want to ensure that only the intended instances are used.</source>
          <target state="translated">템플릿 인스턴스의 암시 적 생성을 비활성화하고 사용하는 모든 인스턴스를 명시 적으로 인스턴스화합니다. 이 방법을 사용하려면 다른 인스턴스보다 필요한 인스턴스에 대해 더 많은 지식이 필요하지만, 신비한 것은 아니며 의도 한 인스턴스 만 사용되도록하려면 더 세밀하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c4ff82cecad67b167eba0065ea2bf4d09eb3446" translate="yes" xml:space="preserve">
          <source>to disable them.</source>
          <target state="translated">비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="fbd73b9246bec2bc2e55283764a502c551078ee1" translate="yes" xml:space="preserve">
          <source>to disable this optimization for programs that depend on that behavior.</source>
          <target state="translated">해당 동작에 의존하는 프로그램에 대해이 최적화를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="039e1612b10e94f6f2659062c88dfdf875e27be6" translate="yes" xml:space="preserve">
          <source>to disable this warning.</source>
          <target state="translated">이 경고를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d55d75fe437132ac1720cd629fab6a05c42e7af5" translate="yes" xml:space="preserve">
          <source>to enable it.</source>
          <target state="translated">그것을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="05966880b1ac6606488fa8d8db4545ca6018ef84" translate="yes" xml:space="preserve">
          <source>to enable it; use</source>
          <target state="translated">그것을 가능하게하기 위하여; 사용하다</target>
        </trans-unit>
        <trans-unit id="4bcccf63e106112dbb4698af1310d60e11c3d159" translate="yes" xml:space="preserve">
          <source>to enable the Graphite loop transformation infrastructure.</source>
          <target state="translated">Graphite 루프 변환 인프라를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6c212994ff609c34988244931def67f8d2af0420" translate="yes" xml:space="preserve">
          <source>to enforce a stack limit of 128KB. Note that this may only work with the GNU linker.</source>
          <target state="translated">128KB의 스택 제한을 시행합니다. 이것은 GNU 링커에서만 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="734400b7fea19d9bbb9a0e9ecbe544eadcf35f57" translate="yes" xml:space="preserve">
          <source>to ensure that directory is searched before (or instead of) the directory containing the original header. Then, if you want to check that the precompiled header file is always used, you can put a file of the same name as the original header in this directory containing an &lt;code&gt;#error&lt;/code&gt; command.</source>
          <target state="translated">원래 헤더를 포함하는 디렉토리 이전에 (또는 대신에) 디렉토리를 검색하도록합니다. 그런 다음 미리 컴파일 된 헤더 파일이 항상 사용되는지 확인하려면 &lt;code&gt;#error&lt;/code&gt; 명령 이 포함 된이 디렉토리의 원래 헤더와 동일한 이름의 파일을이 디렉토리에 넣을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56612887fdcd087119426d8be9265bde6fc63d89" translate="yes" xml:space="preserve">
          <source>to ensure that the library participates in the LTO optimization process:</source>
          <target state="translated">라이브러리가 LTO 최적화 프로세스에 참여하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c05bd5385bf80f9a9a04934cc031957bdf366cef" translate="yes" xml:space="preserve">
          <source>to find out the exact set of optimizations that are enabled at each level. See &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;Overall Options&lt;/a&gt;, for examples.</source>
          <target state="translated">각 수준에서 사용 가능한 정확한 최적화 세트를 찾습니다. 예를 들어, &lt;a href=&quot;overall-options#Overall-Options&quot;&gt;전체 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="629b35a9e103e85590bf77ad4ca23d31085af6a9" translate="yes" xml:space="preserve">
          <source>to force the use of breaks.</source>
          <target state="translated">휴식을 강요하기 위해.</target>
        </trans-unit>
        <trans-unit id="4d1097919176c00815b8ac50d1decf852e1bee39" translate="yes" xml:space="preserve">
          <source>to generate compare-and-branch (&lt;code&gt;br&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt;) instructions. It has no effect on generation of these instructions driven by the combiner pass.</source>
          <target state="translated">비교 및 분기 ( &lt;code&gt;br&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt; ) 명령어 를 생성 합니다. 컴 바이 너 패스로 구동되는 이러한 명령어의 생성에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="603b5b4262418040b0998e125944b949f7e6a74c" translate="yes" xml:space="preserve">
          <source>to generate output using the global registers 2 through 4, which the SPARC SVR4 ABI reserves for applications. Like the global register 1, each global register 2 through 4 is then treated as an allocable register that is clobbered by function calls. This is the default.</source>
          <target state="translated">SPARC SVR4 ABI가 응용 프로그램을 위해 예약 한 전역 레지스터 2-4를 사용하여 출력을 생성합니다. 전역 레지스터 1과 마찬가지로 각 전역 레지스터 2 ~ 4는 함수 호출에 의해 클로버되는 할당 가능한 레지스터로 처리됩니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="050dbf2043737f5734fcc472cca8363f2a6e0402" translate="yes" xml:space="preserve">
          <source>to generate the precompiled header but not when using it, you may or may not get debugging information for routines in the precompiled header.</source>
          <target state="translated">사전 컴파일 된 헤더를 생성하지만 사용하지 않는 경우 사전 컴파일 된 헤더에서 루틴에 대한 디버깅 정보를 얻거나 얻지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d64a41aeb3d720fbe4500f1925859d9eb0a9221" translate="yes" xml:space="preserve">
          <source>to get 32-bit code instead.</source>
          <target state="translated">대신 32 비트 코드를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="f64fe5688710dc3468d5b3dfc4519d0326d987aa" translate="yes" xml:space="preserve">
          <source>to identify which features are GNU extensions given that version of the standard. For example</source>
          <target state="translated">해당 표준 버전에서 제공되는 GNU 확장 기능을 식별합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="27759b6de471330fcc87c15f07af7d6823ab99f5" translate="yes" xml:space="preserve">
          <source>to inhibit this behavior.</source>
          <target state="translated">이 행동을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="4698276f01dd7d4d5a2857a8b316c4ea78bb2d42" translate="yes" xml:space="preserve">
          <source>to match.</source>
          <target state="translated">일치합니다.</target>
        </trans-unit>
        <trans-unit id="2f5d88ed04e4ec760db92ef12bc77910590db02f" translate="yes" xml:space="preserve">
          <source>to not conflict with the non-garbage-collected library.</source>
          <target state="translated">가비지 수집 라이브러리와 충돌하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88a51302506899d3e37776fb85e7b09b71b57057" translate="yes" xml:space="preserve">
          <source>to omit the &lt;code&gt;MEMW&lt;/code&gt; instructions.</source>
          <target state="translated">&lt;code&gt;MEMW&lt;/code&gt; 지침 을 생략합니다 .</target>
        </trans-unit>
        <trans-unit id="0a4b0d8525f5f8e70a145372815d6b689452061b" translate="yes" xml:space="preserve">
          <source>to override a system header file, substituting your own version, since these directories are searched before the standard system header file directories. However, you should not use this option to add directories that contain vendor-supplied system header files; use</source>
          <target state="translated">이 디렉토리는 표준 시스템 헤더 파일 디렉토리보다 먼저 검색되므로 사용자 고유의 버전으로 대체하여 시스템 헤더 파일을 대체합니다. 그러나이 옵션을 사용하여 공급 업체 제공 시스템 헤더 파일이 포함 된 디렉토리를 추가해서는 안됩니다. 사용하다</target>
        </trans-unit>
        <trans-unit id="0e0d819cf586e769427bd9c3905cb645eff2cbd0" translate="yes" xml:space="preserve">
          <source>to point to a directory which contains a folder named &lt;code&gt;device-specs&lt;/code&gt; which contains a specs file named &lt;code&gt;specs-&lt;var&gt;mcu&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;mcu&lt;/var&gt; was specified by</source>
          <target state="translated">&lt;code&gt;specs-&lt;var&gt;mcu&lt;/var&gt;&lt;/code&gt; &lt;var&gt;mcu&lt;/var&gt; 라는 사양 파일이 포함 된 &lt;code&gt;device-specs&lt;/code&gt; 폴더가 포함 된 디렉토리를 가리 킵니다 . 여기서 &lt;var&gt;mcu&lt;/var&gt; 는</target>
        </trans-unit>
        <trans-unit id="51475c850a9d73ee144639b820092098a6d159f6" translate="yes" xml:space="preserve">
          <source>to point to specialized trace routines providing the ability of selectively skipping function trace entries for the TPF OS. This option is off by default, even when compiling for the TPF OS and specifying</source>
          <target state="translated">TPF OS에 대한 기능 추적 항목을 선택적으로 건너 뛰는 기능을 제공하는 특수 추적 루틴을 가리 킵니다. 이 옵션은 TPF OS 용으로 컴파일하고 다음을 지정하는 경우에도 기본적으로 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="f278c4572032c86b605671f5ebffd4ef00d07c75" translate="yes" xml:space="preserve">
          <source>to receive all required diagnostics).</source>
          <target state="translated">필요한 모든 진단을 받으려면).</target>
        </trans-unit>
        <trans-unit id="460f07ff1dbfe17d44182eeae667fe92163a595e" translate="yes" xml:space="preserve">
          <source>to request warnings on implicit declarations. Each of these specific warning options also has a negative form beginning &amp;lsquo;</source>
          <target state="translated">암시 적 선언에 대한 경고를 요청합니다. 이러한 특정 경고 옵션 각각은 '</target>
        </trans-unit>
        <trans-unit id="983435caf1f50183a8104ce42b32d9c29ccb09d9" translate="yes" xml:space="preserve">
          <source>to say where &lt;code&gt;gcc&lt;/code&gt; is to stop. Note that some combinations (for example, &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; 가 멈추어야 할 곳을 말하십시오 . 일부 조합 (예 : '</target>
        </trans-unit>
        <trans-unit id="bc2527b26f4ee6f9de55fb763b4725eaf6b8831b" translate="yes" xml:space="preserve">
          <source>to select this variant of C++.</source>
          <target state="translated">이 C ++ 변형을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c00c1c1c90d09a4ce7f4fd4441ddc063ccee6f30" translate="yes" xml:space="preserve">
          <source>to specify the location of the alternate startup code provided by the HAL BSP.</source>
          <target state="translated">HAL BSP에서 제공하는 대체 시작 코드의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="03580f5c66d67f97ea875aacde75a574f8b30638" translate="yes" xml:space="preserve">
          <source>to stop the library from making assumptions about externally-defined data.</source>
          <target state="translated">라이브러리가 외부 정의 데이터에 대한 가정을하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="9c7b484d0d84261b71a1545c8d270843b3becfe1" translate="yes" xml:space="preserve">
          <source>to suppress them.</source>
          <target state="translated">그들을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="c811a1b4242d771b19a525a1d208d80b642a9c43" translate="yes" xml:space="preserve">
          <source>to tell the compiler to treat the DMA instructions as potentially affecting all memory.</source>
          <target state="translated">컴파일러에게 DMA 명령어를 잠재적으로 모든 메모리에 영향을주는 것으로 취급하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="80dfa1b7e6d84586fbe04ae2e5b3ecc9425fc25b" translate="yes" xml:space="preserve">
          <source>to the &lt;var&gt;auxname&lt;/var&gt;. &lt;var&gt;auxname&lt;/var&gt; is generated from the name of the output file, if explicitly specified and it is not an executable, otherwise it is the basename of the source file. An entry is made up of three fields:</source>
          <target state="translated">받는 &lt;var&gt;auxname&lt;/var&gt; . &lt;var&gt;auxname&lt;/var&gt; 은 명시 적으로 지정된 경우 출력 파일의 이름에서 생성되며 실행 파일이 아닌 경우 소스 파일의 기본 이름입니다. 항목은 세 가지 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="cf9e8fa4ffeb576a3d8466c71f19f2e8236b9408" translate="yes" xml:space="preserve">
          <source>to the ELF linker, on targets that support it. This instructs the linker to add all symbols, not only used ones, to the dynamic symbol table. This option is needed for some uses of &lt;code&gt;dlopen&lt;/code&gt; or to allow obtaining backtraces from within a program.</source>
          <target state="translated">ELF 링커를 지원하는 대상에 연결합니다. 이렇게하면 사용 된 심볼뿐만 아니라 모든 심볼을 동적 심볼 테이블에 추가하도록 링커에 지시합니다. 이 옵션은 일부 &lt;code&gt;dlopen&lt;/code&gt; 을 사용 하거나 프로그램 내에서 역 추적을 얻는 데 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="4d9732ef0ab50a0fe284eee03a96d968a332478f" translate="yes" xml:space="preserve">
          <source>to the arguments passed to the second compilation. Dump the final internal representation in both compilations, and print an error if they differ.</source>
          <target state="translated">두 번째 컴파일에 전달 된 인수에. 두 컴파일에서 최종 내부 표현을 덤프하고 서로 다른 경우 오류를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="de7357ba56740482049f7f118ccf7fdf60e6c511" translate="yes" xml:space="preserve">
          <source>to the assembler.</source>
          <target state="translated">어셈블러에.</target>
        </trans-unit>
        <trans-unit id="78a429e6e7080a5e45e973cd47d6f62345704600" translate="yes" xml:space="preserve">
          <source>to the assembler. GCC doesn&amp;rsquo;t generate any DSP instructions at the moment.</source>
          <target state="translated">어셈블러에. GCC는 현재 DSP 명령어를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b698023086fba4aa3d3217a8fe662a8e82d46376" translate="yes" xml:space="preserve">
          <source>to the command line.</source>
          <target state="translated">명령 행에.</target>
        </trans-unit>
        <trans-unit id="48493e621e94e93653fa4936451bd8b569e4242e" translate="yes" xml:space="preserve">
          <source>to the compiler driver&amp;rsquo;s command line. The user takes responsibility for supplying the sub-processes like compiler proper, assembler and linker with appropriate command line options. This means that the user has to supply her private device specs file by means of</source>
          <target state="translated">컴파일러 드라이버의 명령 줄에 추가합니다. 사용자는 적절한 명령 줄 옵션과 함께 적절한 컴파일러, 어셈블러 및 링커와 같은 하위 프로세스를 제공 할 책임이 있습니다. 이는 사용자가 다음을 통해 개인 기기 사양 파일을 제공해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="9ae556297d14df5c890b3b7d02a39e780883c02a" translate="yes" xml:space="preserve">
          <source>to the compiler driver. See the documentation of this option for more details.</source>
          <target state="translated">컴파일러 드라이버에. 자세한 내용은이 옵션의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a5e2bef65f1422dc494684575c79fffa7a01bcc" translate="yes" xml:space="preserve">
          <source>to the compiler without problems. In this mode the integrated preprocessor is little more than a tokenizer for the front ends.</source>
          <target state="translated">문제없이 컴파일러에. 이 모드에서 통합 프리 프로세서는 프런트 엔드 용 토크 나이저에 지나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4f7d50ee83a18b2761d2a93448780c946fbf262" translate="yes" xml:space="preserve">
          <source>to the driver implies</source>
          <target state="translated">운전사에게 암시</target>
        </trans-unit>
        <trans-unit id="ef57e6bc8f62cc2f040dce93c08243f51f372494" translate="yes" xml:space="preserve">
          <source>to the link command.</source>
          <target state="translated">링크 명령에.</target>
        </trans-unit>
        <trans-unit id="c8b83c33ceb7b4db9576f93cb9bbcdda02ff46c2" translate="yes" xml:space="preserve">
          <source>to the linker when linking a shared object. Using this option, you can link position-dependent code into a shared object.</source>
          <target state="translated">공유 객체를 연결할 때 링커에 이 옵션을 사용하면 위치 종속 코드를 공유 객체에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59df5222f9894c3b944a44fe0c985ada0e5e863e" translate="yes" xml:space="preserve">
          <source>to the linker. When using the GNU linker, you can also get the same effect with</source>
          <target state="translated">링커에. GNU 링커를 사용할 때도 동일한 효과를 얻을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ff71001fb1b962107d41fe2e3c8ba6fef28f324f" translate="yes" xml:space="preserve">
          <source>to the profitability score of the candidate.</source>
          <target state="translated">후보의 수익성 점수.</target>
        </trans-unit>
        <trans-unit id="6e3a4fd5dcd8a06d8488683e14b2c5e3c2978ff2" translate="yes" xml:space="preserve">
          <source>to use GNU make&amp;rsquo;s job server mode to determine the number of parallel jobs. This is useful when the Makefile calling GCC is already executing in parallel. You must prepend a &amp;lsquo;</source>
          <target state="translated">병렬 작업 수를 결정하기 위해 GNU make의 작업 서버 모드를 사용합니다. 이것은 GCC를 호출하는 Makefile이 이미 병렬로 실행될 때 유용합니다. 앞에 '</target>
        </trans-unit>
        <trans-unit id="ce9726d2bdb30c8e07367ad518d80f9ba7699230" translate="yes" xml:space="preserve">
          <source>to use GNU make&amp;rsquo;s job server, if available, or otherwise fall back to autodetection of the number of CPU threads present in your system.</source>
          <target state="translated">가능한 경우 GNU make의 작업 서버를 사용하거나 시스템에있는 CPU 스레드 수를 자동으로 감지합니다.</target>
        </trans-unit>
        <trans-unit id="2d334abf3afbc59414f963735bb8a9bef5c69125" translate="yes" xml:space="preserve">
          <source>to use any of the functions, such as &lt;code&gt;class_getName()&lt;/code&gt;, declared in</source>
          <target state="translated">에 선언 된 &lt;code&gt;class_getName()&lt;/code&gt; 과 같은 함수를 사용하려면</target>
        </trans-unit>
        <trans-unit id="fdbc91f4d1da18c4a9eacc86aa69e8b5bbe2d818" translate="yes" xml:space="preserve">
          <source>to use this extension.</source>
          <target state="translated">이 확장을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="837548d358882f5d60c4f2f156607225b2b00e3b" translate="yes" xml:space="preserve">
          <source>to warn about changes relative to</source>
          <target state="translated">관련 변경 사항에 대해 경고하기 위해</target>
        </trans-unit>
        <trans-unit id="f30e94b5c3164ab76a747bf52c67540d2f17389d" translate="yes" xml:space="preserve">
          <source>to work around invalid code, and it will also only catch cases where functions in base classes are called, not where variables in base classes are used (as in the example above).</source>
          <target state="translated">유효하지 않은 코드를 해결하려면 기본 클래스의 변수가 사용되는 경우가 아니라 기본 클래스의 함수가 호출되는 경우 만 잡습니다 (위의 예와 같이).</target>
        </trans-unit>
        <trans-unit id="6d940d3a308e2226f6239f2b9cefd6d0b6a55f53" translate="yes" xml:space="preserve">
          <source>to your other options.</source>
          <target state="translated">다른 옵션으로.</target>
        </trans-unit>
        <trans-unit id="2981264b4e86f51b3136e2679743c7bdd13a2bb9" translate="yes" xml:space="preserve">
          <source>to zero causes a full collection to occur at every opportunity.</source>
          <target state="translated">0으로 설정하면 모든 기회에서 전체 콜렉션이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5381a1aea30f9b9086a2ba40993581e9e64e84f7" translate="yes" xml:space="preserve">
          <source>to zero causes a full collection to occur at every opportunity. This is extremely slow, but can be useful for debugging.</source>
          <target state="translated">0으로 설정하면 모든 기회에서 전체 콜렉션이 발생합니다. 이것은 매우 느리지 만 디버깅에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da755fb8086355c63b04c7fc08e56e6cbf25bb3e" translate="yes" xml:space="preserve">
          <source>together with</source>
          <target state="translated">함께</target>
        </trans-unit>
        <trans-unit id="416fee2b88f7586a5c4d06a5cd0afdd92932e941" translate="yes" xml:space="preserve">
          <source>together, it is possible to generate code that runs on a family of processors, but optimize the code for one particular member of that family.</source>
          <target state="translated">함께 사용하면 프로세서 제품군에서 실행되는 코드를 생성 할 수 있지만 해당 제품군의 특정 멤버에 대한 코드를 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d21e7efea8f1d1cbc83bfe499c70e0d0b9006a4" translate="yes" xml:space="preserve">
          <source>toggles</source>
          <target state="translated">toggles</target>
        </trans-unit>
        <trans-unit id="536c0b339345616c1b33caf454454d8b8a190d6c" translate="yes" xml:space="preserve">
          <source>tomcat</source>
          <target state="translated">tomcat</target>
        </trans-unit>
        <trans-unit id="45c5535e1296d87e2d8d7799ab89807825da7076" translate="yes" xml:space="preserve">
          <source>tracer-dynamic-coverage</source>
          <target state="translated">tracer-dynamic-coverage</target>
        </trans-unit>
        <trans-unit id="81784a60fb1acab3e1d4b1ff2b76ee4a9c633e76" translate="yes" xml:space="preserve">
          <source>tracer-dynamic-coverage-feedback</source>
          <target state="translated">tracer-dynamic-coverage-feedback</target>
        </trans-unit>
        <trans-unit id="cb680ac36c4bc2e3ee82f3bd4d7122a62aa2f6f2" translate="yes" xml:space="preserve">
          <source>tracer-min-branch-probability</source>
          <target state="translated">tracer-min-branch-probability</target>
        </trans-unit>
        <trans-unit id="ca3e8e730a4fc98f2f0311cfdb93e1379f732aea" translate="yes" xml:space="preserve">
          <source>tracer-min-branch-probability-feedback</source>
          <target state="translated">tracer-min-branch-probability-feedback</target>
        </trans-unit>
        <trans-unit id="84270d0c8d1a7f3a0c220e40a25a825bb3ed669c" translate="yes" xml:space="preserve">
          <source>tremont</source>
          <target state="translated">tremont</target>
        </trans-unit>
        <trans-unit id="e441e270376256c7af48f740cf9d53562dadf722" translate="yes" xml:space="preserve">
          <source>true_le</source>
          <target state="translated">true_le</target>
        </trans-unit>
        <trans-unit id="86d0e1c4cf9761735e920b557562afba29f1c983" translate="yes" xml:space="preserve">
          <source>true_store_to_load</source>
          <target state="translated">true_store_to_load</target>
        </trans-unit>
        <trans-unit id="f283ea9bea0e80213ac091021420ffc9b3415914" translate="yes" xml:space="preserve">
          <source>truncate</source>
          <target state="translated">truncate</target>
        </trans-unit>
        <trans-unit id="3ff580ca35b033e4b0f83d9e8fe28eee7eda4918" translate="yes" xml:space="preserve">
          <source>tsc701</source>
          <target state="translated">tsc701</target>
        </trans-unit>
        <trans-unit id="229e3402179c6180c660faf90643acb18211e1e8" translate="yes" xml:space="preserve">
          <source>tso</source>
          <target state="translated">tso</target>
        </trans-unit>
        <trans-unit id="b7ad604f4f6482313a008463f4fcc00076b4b057" translate="yes" xml:space="preserve">
          <source>tsv110</source>
          <target state="translated">tsv110</target>
        </trans-unit>
        <trans-unit id="39a7a3eec6e2c22bc62ab3f184c59faec3eb4285" translate="yes" xml:space="preserve">
          <source>tune=</source>
          <target state="translated">tune=</target>
        </trans-unit>
        <trans-unit id="9cbf2472cf2c548549b31c58eb3dc796d42cac30" translate="yes" xml:space="preserve">
          <source>tune=&lt;var&gt;TUNE&lt;/var&gt;</source>
          <target state="translated">tune=&lt;var&gt;TUNE&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="16e599cc03c5ad8855689660a51463b7addb8730" translate="yes" xml:space="preserve">
          <source>turns off certain features of GCC that are incompatible with ISO C90, such as the &lt;code&gt;asm&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt; keywords, but not other GNU extensions that do not have a meaning in ISO C90, such as omitting the middle term of a &lt;code&gt;?:&lt;/code&gt; expression. On the other hand, when a GNU dialect of a standard is specified, all features supported by the compiler are enabled, even when those features change the meaning of the base standard. As a result, some strict-conforming programs may be rejected. The particular standard is used by</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; 및 &lt;code&gt;typeof&lt;/code&gt; 키워드 와 같이 ISO C90과 호환되지 않는 GCC의 특정 기능을 끄지 만 &lt;code&gt;?:&lt;/code&gt; 표현식 의 중간 용어 생략과 같이 ISO C90에서 의미가없는 다른 GNU 확장은 비활성화 합니다. 반면에 표준의 GNU 방언을 지정하면 해당 기능이 기본 표준의 의미를 변경하더라도 컴파일러가 지원하는 모든 기능이 활성화됩니다. 결과적으로 일부 엄격한 준수 프로그램이 거부 될 수 있습니다. 특정 표준은</target>
        </trans-unit>
        <trans-unit id="4b7c45835340256489beaf1f33d0482f325aa167" translate="yes" xml:space="preserve">
          <source>turns on all optimization flags specified by</source>
          <target state="translated">에 의해 지정된 모든 최적화 플래그를 켭니다.</target>
        </trans-unit>
        <trans-unit id="673f9ec68e29a513136ec213b926eac92e38a1c4" translate="yes" xml:space="preserve">
          <source>turns on all optimizations specified by</source>
          <target state="translated">에 의해 지정된 모든 최적화를 켭니다.</target>
        </trans-unit>
        <trans-unit id="e35019a0858530979588439510eecc5908e16347" translate="yes" xml:space="preserve">
          <source>turns on the following optimization flags:</source>
          <target state="translated">다음 최적화 플래그를 켭니다.</target>
        </trans-unit>
        <trans-unit id="6622ae51eb9825794bdfc50c805d1e4e00507603" translate="yes" xml:space="preserve">
          <source>turns on the following warning flags:</source>
          <target state="translated">다음 경고 플래그를 켭니다.</target>
        </trans-unit>
        <trans-unit id="679379aaad8b89b2891e7c78b8bc927a0bf02326" translate="yes" xml:space="preserve">
          <source>turns the warnings controlled by</source>
          <target state="translated">에 의해 제어되는 경고를 돌립니다</target>
        </trans-unit>
        <trans-unit id="2a7bfaae75b281b1ebae741c8e5d94f222804964" translate="yes" xml:space="preserve">
          <source>turns this on by default.</source>
          <target state="translated">기본적으로 이것을 켭니다.</target>
        </trans-unit>
        <trans-unit id="7c941051db64c3be492ca9df45d7349ddce20ffc" translate="yes" xml:space="preserve">
          <source>twice, once for the option and once for the argument.</source>
          <target state="translated">옵션에 대해 두 번, 인수에 대해 한 번.</target>
        </trans-unit>
        <trans-unit id="5fd56cb8ef558ea2df1bfac863d2f550e72445da" translate="yes" xml:space="preserve">
          <source>twice, once for the option and once for the argument. For example, to pass</source>
          <target state="translated">옵션에 대해 두 번, 인수에 대해 한 번. 예를 들어</target>
        </trans-unit>
        <trans-unit id="54deb17b571f640eb555cc2a30565f68da936eef" translate="yes" xml:space="preserve">
          <source>two parameters are provided.</source>
          <target state="translated">두 개의 매개 변수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1ce20d0b7e29581da2ce0ab6dced2d74f29ffebc" translate="yes" xml:space="preserve">
          <source>type_info</source>
          <target state="translated">type_info</target>
        </trans-unit>
        <trans-unit id="5a8d37351ca8a6a7739b030036a7e7089e1f8853" translate="yes" xml:space="preserve">
          <source>typeid</source>
          <target state="translated">typeid</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="4be01fe4a515750d5ab46675777a7bc0e62d229a" translate="yes" xml:space="preserve">
          <source>ucache</source>
          <target state="translated">ucache</target>
        </trans-unit>
        <trans-unit id="7c960b11e006c84a44916f80fc4a1ef9f39dfbe3" translate="yes" xml:space="preserve">
          <source>uhk</source>
          <target state="translated">uhk</target>
        </trans-unit>
        <trans-unit id="9914224f0ff2f09e1a0211c22526941f8798afe1" translate="yes" xml:space="preserve">
          <source>uhr</source>
          <target state="translated">uhr</target>
        </trans-unit>
        <trans-unit id="e2577dd78b54fe28c65ee56ffbc8bb73058e08c0" translate="yes" xml:space="preserve">
          <source>uid</source>
          <target state="translated">uid</target>
        </trans-unit>
        <trans-unit id="68c42a321969a6abf1cf14a8d0ab4b1a07329ceb" translate="yes" xml:space="preserve">
          <source>uk</source>
          <target state="translated">uk</target>
        </trans-unit>
        <trans-unit id="7e3b66f9c4f175dd93b125d08b9fe1b4cd25111e" translate="yes" xml:space="preserve">
          <source>ulk</source>
          <target state="translated">ulk</target>
        </trans-unit>
        <trans-unit id="93fe479a2749f3437d91373b4275f7fb5dfc783b" translate="yes" xml:space="preserve">
          <source>ullk</source>
          <target state="translated">ullk</target>
        </trans-unit>
        <trans-unit id="ed6ee62e5108dfdb234e2fa8be9c48ae0fe9e920" translate="yes" xml:space="preserve">
          <source>ullr</source>
          <target state="translated">ullr</target>
        </trans-unit>
        <trans-unit id="21ede418147ec5dd09699ae90901c0fa918f952b" translate="yes" xml:space="preserve">
          <source>ulr</source>
          <target state="translated">ulr</target>
        </trans-unit>
        <trans-unit id="74854ce102a32a75d2eda4da188ffd2cd03ac211" translate="yes" xml:space="preserve">
          <source>ultrasparc</source>
          <target state="translated">ultrasparc</target>
        </trans-unit>
        <trans-unit id="f5b409d36df5cd71c1d68ce5071abc4cdf58b012" translate="yes" xml:space="preserve">
          <source>ultrasparc, ultrasparc3, niagara, niagara2, niagara3, niagara4, niagara7, m8</source>
          <target state="translated">ultrasparc, ultrasparc3, ​​나이아가라, 나이아가라 2, 나이아가라 3, 나이아가라 4, 나이아가라 7, m8</target>
        </trans-unit>
        <trans-unit id="020fe295df946742b8e0bf1a9548ae1b566e62ce" translate="yes" xml:space="preserve">
          <source>ultrasparc3</source>
          <target state="translated">ultrasparc3</target>
        </trans-unit>
        <trans-unit id="d7b02c1c5d38014dad3e7f8287fa31126faa2925" translate="yes" xml:space="preserve">
          <source>unary arithmetic operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;)</source>
          <target state="translated">단항 산술 연산자 ( &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="862298a39b9dce3bef134f29ec746bd4eb12d532" translate="yes" xml:space="preserve">
          <source>undocumented</source>
          <target state="translated">undocumented</target>
        </trans-unit>
        <trans-unit id="b0c77b22b4ae5f68687b2320f8889b16f8ab80f6" translate="yes" xml:space="preserve">
          <source>unions</source>
          <target state="translated">unions</target>
        </trans-unit>
        <trans-unit id="7aa3f0c8ceaf14ce8a84c4545bfb99b6fad55bb4" translate="yes" xml:space="preserve">
          <source>unix95.o</source>
          <target state="translated">unix95.o</target>
        </trans-unit>
        <trans-unit id="38dc8538a7b6eca07316a4c2976715f91325c1fc" translate="yes" xml:space="preserve">
          <source>unix98.o</source>
          <target state="translated">unix98.o</target>
        </trans-unit>
        <trans-unit id="47072ca1e0797506998ae898c6bc6400623fceab" translate="yes" xml:space="preserve">
          <source>unknown type</source>
          <target state="translated">알 수없는 유형</target>
        </trans-unit>
        <trans-unit id="9980f6bf3b3cd6ef6d37126ba749b9b9292a23dc" translate="yes" xml:space="preserve">
          <source>unless GCC has been configured with</source>
          <target state="translated">GCC가</target>
        </trans-unit>
        <trans-unit id="e702e81847d2cb1fef5b99f495076b9aaff4d684" translate="yes" xml:space="preserve">
          <source>unless options preventing their inclusion are used as well. This typically removes</source>
          <target state="translated">포함을 방해하는 옵션도 사용하지 않는 한. 이것은 일반적으로 제거</target>
        </trans-unit>
        <trans-unit id="d671de48b3171ccaa129911d88f092a66751bcb2" translate="yes" xml:space="preserve">
          <source>unless other diagnostics are being produced. This allows the use of new</source>
          <target state="translated">다른 진단이 생성되지 않는 한. 이것은 새로운 사용을 허용합니다</target>
        </trans-unit>
        <trans-unit id="e1a6f0b6f73a57a8b3ee30419e28f6cb95143908" translate="yes" xml:space="preserve">
          <source>unlimited</source>
          <target state="translated">unlimited</target>
        </trans-unit>
        <trans-unit id="9d38e760530a4ee7f3935cc545264bf30f767834" translate="yes" xml:space="preserve">
          <source>unrolled_loop</source>
          <target state="translated">unrolled_loop</target>
        </trans-unit>
        <trans-unit id="9c5801f9a359c082f32477ded758379bfcebd289" translate="yes" xml:space="preserve">
          <source>unsigned greater than</source>
          <target state="translated">부호없는 큼</target>
        </trans-unit>
        <trans-unit id="53b078a4ee760a314a4fde626f8e6fe0576d9715" translate="yes" xml:space="preserve">
          <source>unsigned less than equal</source>
          <target state="translated">부호없는 같음 이하</target>
        </trans-unit>
        <trans-unit id="0a25ba5991316bdda4a9b3abcee2106016df28a0" translate="yes" xml:space="preserve">
          <source>update</source>
          <target state="translated">update</target>
        </trans-unit>
        <trans-unit id="7b21fdd90a6056168b4b04da4c8c387c4fbce2f5" translate="yes" xml:space="preserve">
          <source>ur</source>
          <target state="translated">ur</target>
        </trans-unit>
        <trans-unit id="04489a12bbaa6aebffb61ed2f524424ba8e1147e" translate="yes" xml:space="preserve">
          <source>use</source>
          <target state="translated">use</target>
        </trans-unit>
        <trans-unit id="2facbb1cbd656cd8e3d6d4a81237838006d744d6" translate="yes" xml:space="preserve">
          <source>used by the program without going all the way to a fully static link. The</source>
          <target state="translated">완전히 정적 링크로 가지 않고 프로그램에서 사용됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="ce0e313983d96e6051bc4441c741e6c886ba4a60" translate="yes" xml:space="preserve">
          <source>usually calculates the addresses of all three variables, but if you compile it with</source>
          <target state="translated">일반적으로 세 변수 모두의 주소를 계산하지만</target>
        </trans-unit>
        <trans-unit id="ea1dd75eed90fa89afc19a3c6b039f1a0e4b8891" translate="yes" xml:space="preserve">
          <source>v0</source>
          <target state="translated">v0</target>
        </trans-unit>
        <trans-unit id="85a03bae2ecfd070d7b7503cee7c26e30e6efa2a" translate="yes" xml:space="preserve">
          <source>v10</source>
          <target state="translated">v10</target>
        </trans-unit>
        <trans-unit id="c5e31d5915661de4393e3f1489b00ebc4497dd48" translate="yes" xml:space="preserve">
          <source>v3</source>
          <target state="translated">v3</target>
        </trans-unit>
        <trans-unit id="27c8354c47776fb340222a415127286e3cf1fef7" translate="yes" xml:space="preserve">
          <source>v3.00.a</source>
          <target state="translated">v3.00.a</target>
        </trans-unit>
        <trans-unit id="e1535ef03c493cb53a68569bcfbc3d27c8d57008" translate="yes" xml:space="preserve">
          <source>v4.00.b</source>
          <target state="translated">v4.00.b</target>
        </trans-unit>
        <trans-unit id="a49417317361dfc11070a84c5ad9b1655e1ebcbf" translate="yes" xml:space="preserve">
          <source>v5.00.a</source>
          <target state="translated">v5.00.a</target>
        </trans-unit>
        <trans-unit id="47a4fe76c59044b17abc60e1a32a07faee8c704a" translate="yes" xml:space="preserve">
          <source>v5.00.b</source>
          <target state="translated">v5.00.b</target>
        </trans-unit>
        <trans-unit id="803c5ce39075bf90fff623686ffd9e37635e0dd3" translate="yes" xml:space="preserve">
          <source>v6.00.a</source>
          <target state="translated">v6.00.a</target>
        </trans-unit>
        <trans-unit id="c9cf2ef3ad15705851d02c005b381171af921bd7" translate="yes" xml:space="preserve">
          <source>v7</source>
          <target state="translated">v7</target>
        </trans-unit>
        <trans-unit id="f2cbea7e89a45f46819777bb78a1f5bd0241f64c" translate="yes" xml:space="preserve">
          <source>v8</source>
          <target state="translated">v8</target>
        </trans-unit>
        <trans-unit id="a8c661e992ccbe35af1b9e500734de7eb1b7e633" translate="yes" xml:space="preserve">
          <source>v9</source>
          <target state="translated">v9</target>
        </trans-unit>
        <trans-unit id="60abb867de47426a8e6c2141273b784760b29067" translate="yes" xml:space="preserve">
          <source>v&lt;var&gt;X&lt;/var&gt;.&lt;var&gt;YY&lt;/var&gt;.&lt;var&gt;Z&lt;/var&gt;</source>
          <target state="translated">v&lt;var&gt;X&lt;/var&gt;.&lt;var&gt;YY&lt;/var&gt;.&lt;var&gt;Z&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="23a85aa16b1383e63516555f79898cf92c6cb6cb" translate="yes" xml:space="preserve">
          <source>va_arg (ap, void *)</source>
          <target state="translated">va_arg (ap, void *)</target>
        </trans-unit>
        <trans-unit id="e9bd149c7f77d0ce75eddaee481bc96b1a7e2795" translate="yes" xml:space="preserve">
          <source>vaes</source>
          <target state="translated">vaes</target>
        </trans-unit>
        <trans-unit id="39f69c278f46165447f30d10acf54277aaa3d5fc" translate="yes" xml:space="preserve">
          <source>val</source>
          <target state="translated">val</target>
        </trans-unit>
        <trans-unit id="3dffbaee37b0e0dc1203fac99a0be6cbfd5d09af" translate="yes" xml:space="preserve">
          <source>value of environment variable &lt;var&gt;VAR&lt;/var&gt;</source>
          <target state="translated">환경 변수 &lt;var&gt;VAR&lt;/var&gt; 의 값</target>
        </trans-unit>
        <trans-unit id="3c058c680f97b51f5e2d1b17e162947607991fb0" translate="yes" xml:space="preserve">
          <source>value of the other parts (F&amp;mdash;all bits set)</source>
          <target state="translated">다른 부분의 값 (F-모든 비트 세트)</target>
        </trans-unit>
        <trans-unit id="46712f04e3a594d3f7fb9d3d743f6cb27f758abc" translate="yes" xml:space="preserve">
          <source>value profile counter values difference: Some counter values for value profile are runtime dependent, like heap addresses. It&amp;rsquo;s normal to see some difference in these kind of counters.</source>
          <target state="translated">값 프로필 카운터 값 차이 : 값 프로필의 일부 카운터 값은 힙 주소와 같이 런타임에 따라 다릅니다. 이러한 종류의 카운터에 약간의 차이가있는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="345c822266c73d960e7e049d7d44d3fac7c7ec19" translate="yes" xml:space="preserve">
          <source>value.</source>
          <target state="translated">value.</target>
        </trans-unit>
        <trans-unit id="7b80e9918a632d235fc6676b883823a647bb7b4a" translate="yes" xml:space="preserve">
          <source>value. Compiling with different values of &lt;var&gt;num&lt;/var&gt; may or may not work; if it doesn&amp;rsquo;t the linker gives an error message&amp;mdash;incorrect code is not generated.</source>
          <target state="translated">값. 다른 &lt;var&gt;num&lt;/var&gt; 값으로 컴파일하면 작동하지 않을 수 있습니다. 링커가 오류 메시지를 표시하지 않으면 잘못된 코드가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="49bd83ae977ea8f493b8933e1ce0b0842c806310" translate="yes" xml:space="preserve">
          <source>vcrypto</source>
          <target state="translated">vcrypto</target>
        </trans-unit>
        <trans-unit id="b803e7ca5c714dbd85bf00d511fbc99a77690ad2" translate="yes" xml:space="preserve">
          <source>vec</source>
          <target state="translated">vec</target>
        </trans-unit>
        <trans-unit id="71a3656efb248ee678b7294feda650ae9b41003b" translate="yes" xml:space="preserve">
          <source>vec-div</source>
          <target state="translated">vec-div</target>
        </trans-unit>
        <trans-unit id="d93d0a7ebc8b48ccc78139d9016bc52c6cf1aa76" translate="yes" xml:space="preserve">
          <source>vec-sqrt</source>
          <target state="translated">vec-sqrt</target>
        </trans-unit>
        <trans-unit id="4dea40099c64d39d76006d4cee60063ce9ae2add" translate="yes" xml:space="preserve">
          <source>vec.miss</source>
          <target state="translated">vec.miss</target>
        </trans-unit>
        <trans-unit id="8db313297acc16ccd19cca7f97655d97a6fa69c1" translate="yes" xml:space="preserve">
          <source>vec_ld</source>
          <target state="translated">vec_ld</target>
        </trans-unit>
        <trans-unit id="9edbfd96506a2d39748cb2be9d1e8fb891d72255" translate="yes" xml:space="preserve">
          <source>vec_st</source>
          <target state="translated">vec_st</target>
        </trans-unit>
        <trans-unit id="1ffec2e3f3ddd6e27424842d25369db3741afc16" translate="yes" xml:space="preserve">
          <source>vec_vsx_ld</source>
          <target state="translated">vec_vsx_ld</target>
        </trans-unit>
        <trans-unit id="1ebcb466dd7e567e2a0f3063bdcb215f0b4ad02a" translate="yes" xml:space="preserve">
          <source>vec_vsx_st</source>
          <target state="translated">vec_vsx_st</target>
        </trans-unit>
        <trans-unit id="17b4c87d5d71da2a16de98ba1ec408541e0c8c90" translate="yes" xml:space="preserve">
          <source>vecintrin.h</source>
          <target state="translated">vecintrin.h</target>
        </trans-unit>
        <trans-unit id="027c1146b1b8f9274e5a4cfd7a959e328a326cd6" translate="yes" xml:space="preserve">
          <source>vector</source>
          <target state="translated">vector</target>
        </trans-unit>
        <trans-unit id="7291eb9f68564dac97af15a22b95d630dbe88f40" translate="yes" xml:space="preserve">
          <source>vectors</source>
          <target state="translated">vectors</target>
        </trans-unit>
        <trans-unit id="3f73a838273f8b6a5792b9b4f27d36e76a0078b9" translate="yes" xml:space="preserve">
          <source>verbose</source>
          <target state="translated">verbose</target>
        </trans-unit>
        <trans-unit id="dde688fc05bdc40ed8ef866f5c76ed405b6733f5" translate="yes" xml:space="preserve">
          <source>vfp</source>
          <target state="translated">vfp</target>
        </trans-unit>
        <trans-unit id="7d0124077057f5e72207ef47d7438ee3cd00cf49" translate="yes" xml:space="preserve">
          <source>vfpv2</source>
          <target state="translated">vfpv2</target>
        </trans-unit>
        <trans-unit id="dc883f5f65f79cba11fe610ffae3a86ebf62e3cc" translate="yes" xml:space="preserve">
          <source>vfpv3</source>
          <target state="translated">vfpv3</target>
        </trans-unit>
        <trans-unit id="89df9c2f1d8fbc5b6e56f192e621072797bef590" translate="yes" xml:space="preserve">
          <source>vfpv3-d16</source>
          <target state="translated">vfpv3-d16</target>
        </trans-unit>
        <trans-unit id="c38edb06def2f92e8c644e28198937c16e97dd3a" translate="yes" xml:space="preserve">
          <source>vfpv3-d16-fp16</source>
          <target state="translated">vfpv3-d16-fp16</target>
        </trans-unit>
        <trans-unit id="95b9c4da415d8b4ef57023b532e85591d384c9b3" translate="yes" xml:space="preserve">
          <source>vfpv3-fp16</source>
          <target state="translated">vfpv3-fp16</target>
        </trans-unit>
        <trans-unit id="4a8bccb696112b1acc60db60494c81c11f0826b0" translate="yes" xml:space="preserve">
          <source>vfpv3xd</source>
          <target state="translated">vfpv3xd</target>
        </trans-unit>
        <trans-unit id="a178630e9edefbf9b13b01350141c8354ddffd04" translate="yes" xml:space="preserve">
          <source>vfpv3xd-fp16</source>
          <target state="translated">vfpv3xd-fp16</target>
        </trans-unit>
        <trans-unit id="cb807de55cbf2253583831c7a9952511e1d1c1e9" translate="yes" xml:space="preserve">
          <source>vfpv4</source>
          <target state="translated">vfpv4</target>
        </trans-unit>
        <trans-unit id="4fcb4172253138f39c4d6ef73963e7b7b34b968e" translate="yes" xml:space="preserve">
          <source>vfpv4-d16</source>
          <target state="translated">vfpv4-d16</target>
        </trans-unit>
        <trans-unit id="a6c67a59fdf97980d1c2f48f9c131617b9db163b" translate="yes" xml:space="preserve">
          <source>void *</source>
          <target state="translated">무효 *</target>
        </trans-unit>
        <trans-unit id="91a39cc50fc761bc2c955d7546e91c3954863b37" translate="yes" xml:space="preserve">
          <source>vops</source>
          <target state="translated">vops</target>
        </trans-unit>
        <trans-unit id="8150b91109812eb9e0ab7335efe092fa34d688cf" translate="yes" xml:space="preserve">
          <source>vpclmulqdq</source>
          <target state="translated">vpclmulqdq</target>
        </trans-unit>
        <trans-unit id="54e88dfdee11a18f791b7188a9ffbcd1fdba30bd" translate="yes" xml:space="preserve">
          <source>vr</source>
          <target state="translated">vr</target>
        </trans-unit>
        <trans-unit id="d4e3e5cdfae67c1875fd23501db55fe4bcc6844c" translate="yes" xml:space="preserve">
          <source>vr4100</source>
          <target state="translated">vr4100</target>
        </trans-unit>
        <trans-unit id="84448206c2e0a69c5b9aaac3b79425cbf7b91aa1" translate="yes" xml:space="preserve">
          <source>vr4111</source>
          <target state="translated">vr4111</target>
        </trans-unit>
        <trans-unit id="0635226edf9851209ada6b4274e75e9717a2a206" translate="yes" xml:space="preserve">
          <source>vr4120</source>
          <target state="translated">vr4120</target>
        </trans-unit>
        <trans-unit id="026a66d6a97b24e99a0a20381249a68118d79615" translate="yes" xml:space="preserve">
          <source>vr4130</source>
          <target state="translated">vr4130</target>
        </trans-unit>
        <trans-unit id="7b88cf78bf386f70758dca1cb9ad8df1d37066e5" translate="yes" xml:space="preserve">
          <source>vr4300</source>
          <target state="translated">vr4300</target>
        </trans-unit>
        <trans-unit id="ad8783db6e9b9bb0a251f0675d07c4fe7a7e52fe" translate="yes" xml:space="preserve">
          <source>vr5000</source>
          <target state="translated">vr5000</target>
        </trans-unit>
        <trans-unit id="540c1e0fa838c055a396167b8c7c61fe39f1d53a" translate="yes" xml:space="preserve">
          <source>vr5400</source>
          <target state="translated">vr5400</target>
        </trans-unit>
        <trans-unit id="789efffdf3066d91d11db22ed0875478ac77675b" translate="yes" xml:space="preserve">
          <source>vr5500</source>
          <target state="translated">vr5500</target>
        </trans-unit>
        <trans-unit id="e304510a234a413f67c87b3d5b3cf80b0eae288d" translate="yes" xml:space="preserve">
          <source>vsx</source>
          <target state="translated">vsx</target>
        </trans-unit>
        <trans-unit id="8c5dcda77f668f752af6c29ba9c2dbcc3da9fb0a" translate="yes" xml:space="preserve">
          <source>vtv_class_set_sizes.log</source>
          <target state="translated">vtv_class_set_sizes.log</target>
        </trans-unit>
        <trans-unit id="af6e586385ab9f7a955d85df9b2c4fe02b14e73d" translate="yes" xml:space="preserve">
          <source>vtv_count_data.log</source>
          <target state="translated">vtv_count_data.log</target>
        </trans-unit>
        <trans-unit id="b16655c9042551cf6c94774e6c4ff9468b9e81f4" translate="yes" xml:space="preserve">
          <source>vtv_set_ptr_data.log</source>
          <target state="translated">vtv_set_ptr_data.log</target>
        </trans-unit>
        <trans-unit id="966032eab6276624119a49080934e3936d2976f7" translate="yes" xml:space="preserve">
          <source>vulcan</source>
          <target state="translated">vulcan</target>
        </trans-unit>
        <trans-unit id="7b2b701b95aa8a17285091170c8468169fde0790" translate="yes" xml:space="preserve">
          <source>vx</source>
          <target state="translated">vx</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="29f0734fba51b9bc6910bfc4906a613ed88e1795" translate="yes" xml:space="preserve">
          <source>waitpkg</source>
          <target state="translated">waitpkg</target>
        </trans-unit>
        <trans-unit id="6bff24d12dff091f69bf6227c8f80a7f43414182" translate="yes" xml:space="preserve">
          <source>warn about all class types that are caught by value. With</source>
          <target state="translated">가치에 의해 잡히는 모든 클래스 유형에 대해 경고합니다. 와</target>
        </trans-unit>
        <trans-unit id="693ecb6a9bf1bc0c7200f9c980324b96b1709910" translate="yes" xml:space="preserve">
          <source>warn about all types that are not caught by reference.</source>
          <target state="translated">참조되지 않은 모든 유형에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="12bca20efb4ff8c0a30b8489f4724bf2ba5a00e2" translate="yes" xml:space="preserve">
          <source>warn if the compiler makes such assumptions.</source>
          <target state="translated">컴파일러가 이러한 가정을하면 경고합니다.</target>
        </trans-unit>
        <trans-unit id="3bdc9d05ec8dc055f926a73da8ab446accb696e3" translate="yes" xml:space="preserve">
          <source>warn-dynamicstack</source>
          <target state="translated">warn-dynamicstack</target>
        </trans-unit>
        <trans-unit id="584745f9e3919adb577655dd998aa66a344b046d" translate="yes" xml:space="preserve">
          <source>warn-framesize=</source>
          <target state="translated">warn-framesize=</target>
        </trans-unit>
        <trans-unit id="383fd7bf84aa027bdc40159c5d7c5805664a8eb2" translate="yes" xml:space="preserve">
          <source>warning</source>
          <target state="translated">warning</target>
        </trans-unit>
        <trans-unit id="dbb53762fe11407d981e2fbd44eedff880e02473" translate="yes" xml:space="preserve">
          <source>warning for mismatches. To suppress a warning for the necessary cast from a pointer to the implementation member function to the type of the corresponding non-member function use the</source>
          <target state="translated">불일치 경고. 구현 멤버 함수에 대한 포인터에서 해당 비 멤버 함수의 유형에 대한 필수 캐스트에 대한 경고를 표시하지 않으려면</target>
        </trans-unit>
        <trans-unit id="bf4065d5c360701885a0131cfeeb87efae1308f0" translate="yes" xml:space="preserve">
          <source>warning is enabled by</source>
          <target state="translated">에 의해 경고가 활성화됩니다</target>
        </trans-unit>
        <trans-unit id="aaa8b14684e1a17d03eb422ffead96af9156353f" translate="yes" xml:space="preserve">
          <source>warning is enabled by default. To avoid the warning include the appropriate header to bring the prototypes of built-in functions into scope.</source>
          <target state="translated">경고는 기본적으로 활성화되어 있습니다. 경고를 피하려면 내장 함수의 프로토 타입을 범위 내로 가져 오는 적절한 헤더를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="a9d07a9254eb30f9ababa0336f6640d159b849ab" translate="yes" xml:space="preserve">
          <source>warning must not trigger. The fallthrough attribute may appear at most once in each attribute list, and may not be mixed with other attributes. It can only be used in a switch statement (the compiler will issue an error otherwise), after a preceding statement and before a logically succeeding case label, or user-defined label.</source>
          <target state="translated">경고가 트리거되지 않아야합니다. 폴 스루 속성은 각 속성 목록에 최대 한 번 나타날 수 있으며 다른 속성과 혼합되지 않을 수 있습니다. 앞의 명령문 이후와 논리적으로 성공한 케이스 레이블 또는 사용자 정의 레이블 이전에 switch 명령문 (컴파일러는 그렇지 않으면 오류를 발행 함)에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27428f8ab0fcd9cef55c146f1e6b10750dc2130b" translate="yes" xml:space="preserve">
          <source>warning of the variable-length array.</source>
          <target state="translated">가변 길이 배열의 경고.</target>
        </trans-unit>
        <trans-unit id="9c8bfaaa339382d8195d3094c6bde13124c39a7a" translate="yes" xml:space="preserve">
          <source>warning should not be emitted:</source>
          <target state="translated">경고가 발생하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="8cc36dc915dd9ed8f4f699c8029efe309df4fbda" translate="yes" xml:space="preserve">
          <source>warning using &lt;code&gt;[[fallthrough]];&lt;/code&gt; instead of the GNU attribute. In C++11 or C++14 users can use &lt;code&gt;[[gnu::fallthrough]];&lt;/code&gt;, which is a GNU extension. Instead of these attributes, it is also possible to add a fallthrough comment to silence the warning. The whole body of the C or C++ style comment should match the given regular expressions listed below. The option argument &lt;var&gt;n&lt;/var&gt; specifies what kind of comments are accepted:</source>
          <target state="translated">&lt;code&gt;[[fallthrough]];&lt;/code&gt; 사용한 경고 ; GNU 속성 대신에. C ++ 11 또는 C ++ 14에서 사용자는 &lt;code&gt;[[gnu::fallthrough]];&lt;/code&gt; 이것은 GNU 확장입니다. 이러한 속성 대신 경고를 침묵시키기 위해 대체 주석을 추가 할 수도 있습니다. C 또는 C ++ 스타일 주석의 전체 본문은 아래 나열된 주어진 정규식과 일치해야합니다. 옵션 인수 &lt;var&gt;n&lt;/var&gt; 은 어떤 종류의 주석이 허용되는지 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9f6be01127af67b499b57da0fae72ba37a45a9a4" translate="yes" xml:space="preserve">
          <source>warning.</source>
          <target state="translated">warning.</target>
        </trans-unit>
        <trans-unit id="4e3abe7d52b829dc6219de6cfa731a72895cce9c" translate="yes" xml:space="preserve">
          <source>warning:</source>
          <target state="translated">warning:</target>
        </trans-unit>
        <trans-unit id="5ad999ab8aef2776e77329475d94f4896683ce3e" translate="yes" xml:space="preserve">
          <source>warning: 'x' offset 12 in 'struct foo' isn't aligned to 8</source>
          <target state="translated">경고 : 'struct foo'의 'x'오프셋 12가 8에 정렬되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="6d93414fb6cfbe02c21db42e7b35acf56bb3b283" translate="yes" xml:space="preserve">
          <source>warning: 'x' offset 8 in 'struct foo' isn't aligned to 16</source>
          <target state="translated">경고 : 'struct foo'의 'x'오프셋 8이 16에 정렬되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f1280772c266ce894b42a3a1e327828ba37c5aad" translate="yes" xml:space="preserve">
          <source>warning: alignment 4 of 'struct foo' is less than 8</source>
          <target state="translated">경고 : 'struct foo'의 정렬 4가 8보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="ec3123a12b31d7cc81d919c714b250bf3bad05ac" translate="yes" xml:space="preserve">
          <source>warning: alignment 8 of 'struct foo' is less than 16</source>
          <target state="translated">경고 : 'struct foo'의 정렬 8이 16보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="bd207fab08951eb6cee30e4969e79ca50d1f7c65" translate="yes" xml:space="preserve">
          <source>warnings</source>
          <target state="translated">warnings</target>
        </trans-unit>
        <trans-unit id="a62dac89b15d1538f641de43b89da17f7c0b2e0e" translate="yes" xml:space="preserve">
          <source>warnings and automatic tagging of functions and variables. Tagging inline namespaces is generally preferable to tagging individual declarations, but the latter is sometimes necessary, such as when only certain members of a class need to be tagged.</source>
          <target state="translated">함수 및 변수의 경고 및 자동 태그 지정 인라인 네임 스페이스에 태그를 지정하는 것이 일반적으로 개별 선언에 태그를 지정하는 것보다 바람직하지만 클래스의 특정 멤버 만 태그를 지정해야하는 경우와 같이 후자가 필요할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="88fa5114978525e9b645ca3f5c9302d884a7ac25" translate="yes" xml:space="preserve">
          <source>warnings not be errors, even when</source>
          <target state="translated">다음과 같은 경우에도 경고는 오류가 아닙니다</target>
        </trans-unit>
        <trans-unit id="db49c56cb5d2bfb133872d4bfc3588ee675331dd" translate="yes" xml:space="preserve">
          <source>warnings without this one, use</source>
          <target state="translated">이 경고없이 사용</target>
        </trans-unit>
        <trans-unit id="8b53f1352f91f2442af91a6a1a5e976af595f67f" translate="yes" xml:space="preserve">
          <source>warnings, use &amp;lsquo;</source>
          <target state="translated">경고는 '</target>
        </trans-unit>
        <trans-unit id="a2d0f44e764975442af162ae5f191c56e40fff82" translate="yes" xml:space="preserve">
          <source>warnings. The option is equivalent to</source>
          <target state="translated">경고. 이 옵션은</target>
        </trans-unit>
        <trans-unit id="fb1f4b32502228171ac659df8781be3651294f92" translate="yes" xml:space="preserve">
          <source>warns about C++ style &amp;lsquo;</source>
          <target state="translated">C ++ 스타일에 대해 경고</target>
        </trans-unit>
        <trans-unit id="da23f7e2ab350ffba198cf218e7e271a14335e21" translate="yes" xml:space="preserve">
          <source>warns about directives that traditional C understands but ignores because the &amp;lsquo;</source>
          <target state="translated">기존 C가 이해하지만 무시하는 지시문에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="bada08ea60224035325c89285c43398414528823" translate="yes" xml:space="preserve">
          <source>warns about more things if an older ABI version is selected (with</source>
          <target state="translated">이전 ABI 버전을 선택하면 더 많은 사항에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="ccc1a565864bff761cdf60c2e48cdeb1dc7d2f0a" translate="yes" xml:space="preserve">
          <source>warns about places that might want to add a definition.</source>
          <target state="translated">정의를 추가 할 수있는 장소에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="6cf568dbc15536f2d496c596dab5a0bc628c51a6" translate="yes" xml:space="preserve">
          <source>warns about, but in future warnings may be added to</source>
          <target state="translated">경고하지만 향후 경고가 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36e6654e07e442de7df13dc89133dd33b7ed324a" translate="yes" xml:space="preserve">
          <source>warns only about C++ ABI compatibility problems if there is a check added later in a release series for an ABI issue discovered since the initial release.</source>
          <target state="translated">초기 릴리스 이후에 발견 된 ABI 문제에 대해 나중에 릴리스 시리즈에서 추가 된 검사가있는 경우 C ++ ABI 호환성 문제에 대해서만 경고합니다.</target>
        </trans-unit>
        <trans-unit id="bb0be8538afea2939eeb01fb3cd4ef7fabc4a9f4" translate="yes" xml:space="preserve">
          <source>warns when a function marked &lt;code&gt;inline&lt;/code&gt; could not be substituted, and gives the reason for the failure.</source>
          <target state="translated">&lt;code&gt;inline&lt;/code&gt; 표시된 함수를 대체 할 수없는 경우 경고 하고 실패 이유를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2b5bad84b7ee4d84e9357d6ba4b6f8f3868ded3d" translate="yes" xml:space="preserve">
          <source>was built when the compiler was configured, these options have no effect.</source>
          <target state="translated">컴파일러를 구성 할 때 빌드되었으므로 이러한 옵션은 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="acb7f296a719f44d619fadae2c95b2f36c207ccd" translate="yes" xml:space="preserve">
          <source>was built with</source>
          <target state="translated">~로 지어진</target>
        </trans-unit>
        <trans-unit id="828b2c20772c47edc15b0da80e3cfa7def40d3d3" translate="yes" xml:space="preserve">
          <source>was used, a floating point register or NO_REGS.</source>
          <target state="translated">부동 소수점 레지스터 또는 NO_REGS가 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="784b8074d8c86c9fabcf21528e4c9e47bcbc43f1" translate="yes" xml:space="preserve">
          <source>wbnoinvd</source>
          <target state="translated">wbnoinvd</target>
        </trans-unit>
        <trans-unit id="16d02e8ff56395107c97d1369ad02c5e2d8c6cd9" translate="yes" xml:space="preserve">
          <source>wchar.h</source>
          <target state="translated">wchar.h</target>
        </trans-unit>
        <trans-unit id="fcec733657f3fe2f2ce30eb4ed2f9d050ca3455d" translate="yes" xml:space="preserve">
          <source>we can check the costs or benefits of the GIMPLE -&amp;gt; GRAPHITE -&amp;gt; GIMPLE transformation. Some minimal optimizations are also performed by the code generator isl, like index splitting and dead code elimination in loops.</source>
          <target state="translated">GIMPLE-&amp;gt; GRAPHITE-&amp;gt; GIMPLE 변환의 비용 또는 이점을 확인할 수 있습니다. 루프에서 인덱스 분할 및 데드 코드 제거와 같은 일부 최소 최적화도 코드 생성기에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="e35fc317d7038a7c76856f2e6b376a805b3c3f15" translate="yes" xml:space="preserve">
          <source>westmere</source>
          <target state="translated">westmere</target>
        </trans-unit>
        <trans-unit id="752c518bfe91d35c090b1bfa01f1dbf45c9c5023" translate="yes" xml:space="preserve">
          <source>what lines of code are actually executed</source>
          <target state="translated">실제로 실행되는 코드 줄</target>
        </trans-unit>
        <trans-unit id="6bbc42cce24a785ca691b398116235fedf945b40" translate="yes" xml:space="preserve">
          <source>when a single object file accesses more than 64k&amp;rsquo;s worth of GOT entries. Very few do.</source>
          <target state="translated">단일 오브젝트 파일이 64k가 넘는 GOT 항목에 액세스하는 경우 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="d3905554642a6aa600757f758cd6a4d22de0d685" translate="yes" xml:space="preserve">
          <source>when compiling a single object file that accesses more than 8192 GOT entries. Very few do.</source>
          <target state="translated">8192 개 이상의 GOT 항목에 액세스하는 단일 객체 파일을 컴파일 할 때 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="0514c2cdda62bbdf465cc25fd0411ece5521891a" translate="yes" xml:space="preserve">
          <source>when compiling files that don&amp;rsquo;t &amp;lsquo;</source>
          <target state="translated">'이 아닌 파일을 컴파일 할 때</target>
        </trans-unit>
        <trans-unit id="89ac94171259920826326d388840acace52d003e" translate="yes" xml:space="preserve">
          <source>when inline heuristics hints that inlining is very profitable (will enable later optimizations).</source>
          <target state="translated">인라인 휴리스틱이 인라인이 매우 수익성이 있음을 암시 할 때 (나중에 최적화가 가능할 것입니다).</target>
        </trans-unit>
        <trans-unit id="9fea24e7785433b650f36ab22b19b9480538dc03" translate="yes" xml:space="preserve">
          <source>when matching an option like</source>
          <target state="translated">같은 옵션을 일치시킬 때</target>
        </trans-unit>
        <trans-unit id="24074e8d69141f91cc32ea415bdba5149ac6039a" translate="yes" xml:space="preserve">
          <source>when running on the target system. This will fail if the corresponding directory does not exist and it is unable to create it. This can be overcome by, for example, setting the environment as &amp;lsquo;</source>
          <target state="translated">대상 시스템에서 실행할 때 해당 디렉토리가 존재하지 않고 작성할 수 없으면 실패합니다. 예를 들어 환경을 '</target>
        </trans-unit>
        <trans-unit id="63cb443e16cc113469637f0db83395333bde56d4" translate="yes" xml:space="preserve">
          <source>when targeting a CPU supporting the architecture versions V8 or V9 with FPU except</source>
          <target state="translated">FPU를 사용하여 아키텍처 버전 V8 또는 V9를 지원하는 CPU를 대상으로하는 경우</target>
        </trans-unit>
        <trans-unit id="02850b0f1c5f6694e7ec9881c34c5424aee4e4a3" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such an instruction, such as Niagara-2 and later.</source>
          <target state="translated">Niagara-2 이상과 같은 명령어를 지원하는 CPU를 대상으로하는 경우</target>
        </trans-unit>
        <trans-unit id="ea057a56be62746ad34612238bf3f86b30a12f46" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such an instruction, such as Niagara-7 and later.</source>
          <target state="translated">Niagara-7 이상과 같은 명령어를 지원하는 CPU를 대상으로하는 경우</target>
        </trans-unit>
        <trans-unit id="ffbe2afb2561f071a8614860b3e8a5456dd324d7" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such instructions, such as Niagara-3 and later.</source>
          <target state="translated">Niagara-3 이상과 같은 명령어를 지원하는 CPU를 대상으로하는 경우</target>
        </trans-unit>
        <trans-unit id="56c2867d207c7fc32220edbd16cf4ad7f30dbdbb" translate="yes" xml:space="preserve">
          <source>when targeting a CPU that supports such instructions, such as Niagara-4 and later.</source>
          <target state="translated">Niagara-4 이상과 같은 명령어를 지원하는 CPU를 대상으로하는 경우</target>
        </trans-unit>
        <trans-unit id="6bdf4ae9d43e3fbbce963adcaece62a32f742491" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as UltraSPARC-III and later. Setting</source>
          <target state="translated">UltraSPARC-III 이상과 같은 지침을 지원하는 CPU를 대상으로하는 경우 환경</target>
        </trans-unit>
        <trans-unit id="0809c7864e1b89748cbbced3e27471f0198d57e6" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as m8 and later. Setting</source>
          <target state="translated">m8 이상과 같은 명령어를 지원하는 CPU를 대상으로하는 경우 환경</target>
        </trans-unit>
        <trans-unit id="294d672f8b0219c6a9a49817b6de51730746df25" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as niagara-3 and later. Setting</source>
          <target state="translated">niagara-3 이상과 같은 지침을 지원하는 CPU를 대상으로하는 경우 환경</target>
        </trans-unit>
        <trans-unit id="b13ea81cca1a1522bd93057afeea8b91e8adc72a" translate="yes" xml:space="preserve">
          <source>when targeting a cpu that supports such instructions, such as niagara-7 and later. Setting</source>
          <target state="translated">niagara-7 이상과 같은 지침을 지원하는 CPU를 대상으로하는 경우 환경</target>
        </trans-unit>
        <trans-unit id="07066641f72f4d9ee8cd2a5dea35a4871b310b8f" translate="yes" xml:space="preserve">
          <source>when testing pointer or floating-point values.</source>
          <target state="translated">포인터 또는 부동 소수점 값을 테스트 할 때</target>
        </trans-unit>
        <trans-unit id="9fff53961d6e775c69232b0fbc9ae48f5c8704f7" translate="yes" xml:space="preserve">
          <source>when the iteration ends because there are no more objects to iterate over, &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt;. This allows you to determine whether the iteration finished because a &lt;code&gt;break&lt;/code&gt; command was used (in which case &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; will remain set to the last object that was iterated over) or because it iterated over all the objects (in which case &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; will be set to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">반복 할 객체가 더 이상 없기 때문에 반복이 끝나면 &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 로 설정됩니다 . 이것은 당신이 있기 때문에 반복이 완료 여부를 확인할 수 있습니다 &lt;code&gt;break&lt;/code&gt; 명령이 사용되었다 (그 경우 &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; 이상 반복 된 마지막 개체로 설정 상태로 유지됩니다)하거나 (모든 개체를 통해 반복하기 때문에 그 경우 &lt;code&gt;&lt;var&gt;object expression&lt;/var&gt;&lt;/code&gt; 설정됩니다 에 &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="18321fdc2e36afe706e0a07c547b97ca492b9d39" translate="yes" xml:space="preserve">
          <source>when the selected cpu supports the &amp;lsquo;</source>
          <target state="translated">선택한 CPU가 '</target>
        </trans-unit>
        <trans-unit id="ccdc2a9d509ebc7afae190c0f1c79168f2db280b" translate="yes" xml:space="preserve">
          <source>whenever you build a shared library or a main executable, because C++ programs typically use exceptions, so this is the right thing to do.</source>
          <target state="translated">C ++ 프로그램은 일반적으로 예외를 사용하기 때문에 공유 라이브러리 또는 기본 실행 파일을 빌드 할 때마다 이것이 옳은 일입니다.</target>
        </trans-unit>
        <trans-unit id="b907f2b3fd5ef77f0ce05428eca1f61a37dc4df3" translate="yes" xml:space="preserve">
          <source>where &amp;lsquo;</source>
          <target state="translated">어디 '</target>
        </trans-unit>
        <trans-unit id="ef8fffb5b1004bec80ffb58c6379910e377134da" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&lt;var&gt;attr-string&lt;/var&gt;&lt;/code&gt; is one of the attribute strings specified above.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;var&gt;attr-string&lt;/var&gt;&lt;/code&gt; 은 위에서 지정한 속성 문자열 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="6fb6dcb904087947251d23383748fb884b54d96f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; can be any string accepted as an AArch64 target attribute. See &lt;a href=&quot;aarch64-function-attributes#AArch64-Function-Attributes&quot;&gt;AArch64 Function Attributes&lt;/a&gt;, for more details on the permissible values of &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;var&gt;string&lt;/var&gt;&lt;/code&gt; 은 AArch64 대상 속성으로 허용되는 모든 문자열 일 수 있습니다. &lt;code&gt;string&lt;/code&gt; 의 허용 가능한 값에 대한 자세한 내용 은 &lt;a href=&quot;aarch64-function-attributes#AArch64-Function-Attributes&quot;&gt;AArch64 함수 속성&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c9a631c6f260ee2794eb89e716bb201a11a1f18" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;NSFastEnumerationState&lt;/code&gt; must be defined in your code as follows:</source>
          <target state="translated">어디 &lt;code&gt;NSFastEnumerationState&lt;/code&gt; 은 다음과 같이 코드에서 정의해야합니다 :</target>
        </trans-unit>
        <trans-unit id="da79c8ec6a5eda3bdf516906605c4b52a53059ad" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;cpu&lt;/var&gt; is &lt;code&gt;ev67&lt;/code&gt; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">여기서 &lt;var&gt;cpu&lt;/var&gt; 는 &lt;code&gt;ev67&lt;/code&gt; 이상입니다. 모두 이름의 일부인 기계 명령어를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="934d3ed3df69be5aca01f4ade6b816a68a68d530" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;cpu&lt;/var&gt; is &lt;code&gt;pca56&lt;/code&gt; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">여기서 &lt;var&gt;cpu&lt;/var&gt; 는 &lt;code&gt;pca56&lt;/code&gt; 이상입니다. 모두 이름의 일부인 기계 명령어를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="aa6a4ef2c70b1142dd749133182c02d2017e1f3a" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;op&lt;/var&gt; is the name of the instruction. Refer to the ISA manual for the complete list of instructions.</source>
          <target state="translated">여기서 &lt;var&gt;op&lt;/var&gt; 는 명령어 이름입니다. 전체 지침 목록은 ISA 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="185d7db6b76d8d4589a7db2b1c14e07ea90cf75f" translate="yes" xml:space="preserve">
          <source>where &lt;var&gt;prefix&lt;/var&gt; is the prefix to the installed compiler. In many cases &lt;var&gt;prefix&lt;/var&gt; is the value of &lt;code&gt;prefix&lt;/code&gt; when you ran the</source>
          <target state="translated">여기서 &lt;var&gt;prefix&lt;/var&gt; 는 설치된 컴파일러의 접두사입니다. 대부분의 경우 &lt;var&gt;prefix&lt;/var&gt; 는 실행할 때 &lt;code&gt;prefix&lt;/code&gt; 값입니다 .</target>
        </trans-unit>
        <trans-unit id="0a59d4fc3bd963e5a889655930070f10cb8e1aa8" translate="yes" xml:space="preserve">
          <source>where CPU is &amp;lsquo;power8&amp;rsquo; or later. They all generate the machine instruction that is part of the name.</source>
          <target state="translated">여기서 CPU는 'power8'이상입니다. 모두 이름의 일부인 기계 명령어를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="62a9b25faec871180fb0c25a498ec984ef375532" translate="yes" xml:space="preserve">
          <source>where CPU is &amp;lsquo;power8&amp;rsquo; or later. This interface is common between PowerPC and S/390, allowing users to write one HTM source implementation that can be compiled and executed on either system.</source>
          <target state="translated">여기서 CPU는 'power8'이상입니다. 이 인터페이스는 PowerPC와 S / 390간에 공통이므로 사용자는 어느 시스템에서든 컴파일하고 실행할 수있는 하나의 HTM 소스 구현을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="989859d3b6cc7f4402e6321c4c469231127497b5" translate="yes" xml:space="preserve">
          <source>where applicable. This mode also sets</source>
          <target state="translated">해당되는 경우. 이 모드는 또한</target>
        </trans-unit>
        <trans-unit id="2b2809549c32b0c553e765277da172b8d08d8efb" translate="yes" xml:space="preserve">
          <source>where in the last form, &lt;var&gt;asm-qualifiers&lt;/var&gt; contains &lt;code&gt;goto&lt;/code&gt; (and in the first form, not).</source>
          <target state="translated">마지막 형식에서 &lt;var&gt;asm-qualifiers&lt;/var&gt; 는 &lt;code&gt;goto&lt;/code&gt; 를 포함 합니다 (첫 번째 형식은 아님).</target>
        </trans-unit>
        <trans-unit id="1739132defb1405029331b32f782f974adfa6945" translate="yes" xml:space="preserve">
          <source>where it is declared.</source>
          <target state="translated">그것이 선언 된 곳.</target>
        </trans-unit>
        <trans-unit id="875c30baac2072dde7bb1c8014ca1796ae5f099d" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;note&lt;/code&gt; is a child of the &lt;code&gt;warning&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;note&lt;/code&gt; 는 &lt;code&gt;warning&lt;/code&gt; 의 자식입니다 .</target>
        </trans-unit>
        <trans-unit id="dd7d709f911a6dc91815d27e00faca76680e9d43" translate="yes" xml:space="preserve">
          <source>where the fix-it hint suggests replacing the text from &lt;code&gt;start&lt;/code&gt; up to but not including &lt;code&gt;next&lt;/code&gt; with &lt;code&gt;string&lt;/code&gt;&amp;rsquo;s value. Deletions are expressed via an empty value for &lt;code&gt;string&lt;/code&gt;, insertions by having &lt;code&gt;start&lt;/code&gt; equal &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">에서 수정-이 힌트 텍스트를 교체 건의 경우 &lt;code&gt;start&lt;/code&gt; 까지 포함 안 됨 &lt;code&gt;next&lt;/code&gt; 에 &lt;code&gt;string&lt;/code&gt; 의 값입니다. 삭제는 &lt;code&gt;string&lt;/code&gt; 에 대해 빈 값을 통해 표시되며 &lt;code&gt;next&lt;/code&gt; &lt;code&gt;start&lt;/code&gt; 가 같으 므로 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="07b2d65f2e0a46e317e109aa392f3d62aa66549c" translate="yes" xml:space="preserve">
          <source>where the value in &lt;var&gt;dest&lt;/var&gt; will be the result returned from the built-in.</source>
          <target state="translated">여기서 &lt;var&gt;dest&lt;/var&gt; 의 값 은 내장에서 반환 된 결과입니다.</target>
        </trans-unit>
        <trans-unit id="85c2f66fab3d51484c9d1fe235a171be8f77437b" translate="yes" xml:space="preserve">
          <source>which `gcc -print-prog-name=ld`</source>
          <target state="translated">`gcc -print-prog-name = ld`</target>
        </trans-unit>
        <trans-unit id="fd75e699ad0c3badfb9e4d8744252f962e9876a5" translate="yes" xml:space="preserve">
          <source>which cleans up per-thread exception-handling data.</source>
          <target state="translated">스레드 별 예외 처리 데이터를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="b7a65e3e69a10cb3b229fed413be5750edd3db6c" translate="yes" xml:space="preserve">
          <source>which does not contain a processor reset vector handler. This is suitable for transferring control on a processor reset to the bootloader rather than the application.</source>
          <target state="translated">프로세서 리셋 벡터 핸들러를 포함하지 않습니다. 이것은 프로세서 리셋에 대한 제어를 응용 프로그램이 아닌 부트 로더로 전송하는 데 적합합니다.</target>
        </trans-unit>
        <trans-unit id="d8e1a85e7b6651f532717e3d3bb99e3e6eb81147" translate="yes" xml:space="preserve">
          <source>which indicates how many times each line of a source file</source>
          <target state="translated">소스 파일의 각 줄 수를 나타냅니다</target>
        </trans-unit>
        <trans-unit id="df4e07514985cec84d046812f721f3df94eee5ef" translate="yes" xml:space="preserve">
          <source>which will cause a &lt;code&gt;NULL&lt;/code&gt; pointer to be used for the unsafe case.</source>
          <target state="translated">어떤이의 원인이됩니다 &lt;code&gt;NULL&lt;/code&gt; 의 포인터가 안전하지 않은 경우에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2e72557ade65af451c7d7f6f0f18d03a88d82c2" translate="yes" xml:space="preserve">
          <source>whitespace</source>
          <target state="translated">whitespace</target>
        </trans-unit>
        <trans-unit id="aab2563a4afe176c80b016201bdd5365b8fe6d25" translate="yes" xml:space="preserve">
          <source>will always be false.</source>
          <target state="translated">항상 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="fac3e46886bb0c94c863c1f836d5cc22755b4c21" translate="yes" xml:space="preserve">
          <source>will cause a read of the volatile object pointed to by &lt;var&gt;src&lt;/var&gt; and store the value into the volatile object pointed to by &lt;var&gt;dst&lt;/var&gt;. There is no guarantee that these reads and writes are atomic, especially for objects larger than &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;src&lt;/var&gt; 가 가리키는 휘발성 객체를 읽고 &lt;var&gt;dst&lt;/var&gt; 가 가리키는 휘발성 객체에 값을 저장합니다 . 특히 &lt;code&gt;int&lt;/code&gt; 보다 큰 객체의 경우, 이러한 읽기 및 쓰기가 원 자성이라는 보장은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="aab4df65f2ed601275816d0e9536c397a1112ed9" translate="yes" xml:space="preserve">
          <source>will emit information on callsites that were inlined, along with callsites that were not inlined.</source>
          <target state="translated">인라인되지 않은 콜 사이트와 함께 인라인 된 콜 사이트에 대한 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d2100e7e8507aac0629dc2711742ab58de771fb5" translate="yes" xml:space="preserve">
          <source>will increment &lt;code&gt;y&lt;/code&gt; unconditionally, not just when &lt;code&gt;c&lt;/code&gt; holds. The can usually be fixed by wrapping the macro in a do-while loop:</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 를 잡을 때뿐만 아니라 &lt;code&gt;y&lt;/code&gt; 를 무조건 증가시킵니다 . 일반적으로 do-while 루프에 매크로를 배치하여 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69a2ad3933e9c77782d772b6e44eea15e78645ff" translate="yes" xml:space="preserve">
          <source>will instrument only</source>
          <target state="translated">악기 만</target>
        </trans-unit>
        <trans-unit id="967cfa97c2736dbc76374c630ea4b664a97f2d4e" translate="yes" xml:space="preserve">
          <source>will not emit a warning. Because their types are incompatible, if a programmer accidentally uses one in place of the other, type checking will catch that and emit an error or warning. So not warning (about shadowing) in this case will not lead to undetected bugs. Use of this flag instead of</source>
          <target state="translated">경고를 내지 않습니다. 해당 유형이 호환되지 않기 때문에 프로그래머가 실수로 다른 유형 대신 다른 유형을 사용하는 경우 유형 확인시이를 감지하여 오류나 경고가 발생합니다. 따라서이 경우 경고 (섀도 잉에 대해)하지 않으면 버그가 감지되지 않습니다. 이 플래그 대신에</target>
        </trans-unit>
        <trans-unit id="6a2d899c0e2855d00c682be640fe7c0ab0948f3c" translate="yes" xml:space="preserve">
          <source>will prevent instrumentation of all files that are located in</source>
          <target state="translated">에있는 모든 파일의 계측을 방지합니다</target>
        </trans-unit>
        <trans-unit id="823fe1b2f7d4ebcd4c5262c40d3e13ac8a99173f" translate="yes" xml:space="preserve">
          <source>will produce an output file called</source>
          <target state="translated">라는 출력 파일을 생성합니다</target>
        </trans-unit>
        <trans-unit id="fd3c6b3bb03ea1810002e7f2e9e89c16e6bfab9e" translate="yes" xml:space="preserve">
          <source>will produce output &lt;code&gt;&quot;a&quot;&lt;/code&gt; regardless of what the argument &lt;var&gt;a&lt;/var&gt; is.</source>
          <target state="translated">출력 생산할 예정 &lt;code&gt;&quot;a&quot;&lt;/code&gt; 에 관계없이 인수 무엇 &lt;var&gt;a&lt;/var&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd781ba095ea9625f154bbcf6df295db6a70cc39" translate="yes" xml:space="preserve">
          <source>will protect dynamic stack allocations.</source>
          <target state="translated">동적 스택 할당을 보호합니다.</target>
        </trans-unit>
        <trans-unit id="609ede2c7668f1d41b950db5c60a3855b5749217" translate="yes" xml:space="preserve">
          <source>will warn about more things if an older ABI version is selected (with</source>
          <target state="translated">이전 ABI 버전을 선택하면 더 많은 것에 대해 경고합니다.</target>
        </trans-unit>
        <trans-unit id="e8fe8f2b0f3f5297c69dc78e235ff1ec08ad9e93" translate="yes" xml:space="preserve">
          <source>will warn only if there is a check added later in a release series for an ABI issue discovered since the initial release.</source>
          <target state="translated">최초 릴리스 이후 발견 된 ABI 문제에 대해 릴리스 시리즈 후반에 추가 된 검사가있는 경우에만 경고합니다.</target>
        </trans-unit>
        <trans-unit id="060138cd79436c2f5960cca89ee1066b0b239b07" translate="yes" xml:space="preserve">
          <source>winchip-c6</source>
          <target state="translated">winchip-c6</target>
        </trans-unit>
        <trans-unit id="b2423e1c42ea73b138534f49e35557ea211f42f8" translate="yes" xml:space="preserve">
          <source>winchip2</source>
          <target state="translated">winchip2</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="6551a5d074e9f2b6de875b47bf86000c9a340abe" translate="yes" xml:space="preserve">
          <source>with &amp;ldquo;runtime-linking&amp;rdquo; enabled on AIX. To accomplish this the application must be linked with &amp;ldquo;runtime-linking&amp;rdquo; option and the functions explicitly must be exported by the application (</source>
          <target state="translated">AIX에서 &quot;런타임 링크&quot;를 사용할 수 있습니다. 이 작업을 수행하려면 응용 프로그램을 &quot;런타임 연결&quot;옵션과 연결해야하며 응용 프로그램에서 함수를 명시 적으로 내 보내야합니다 (</target>
        </trans-unit>
        <trans-unit id="93d9f2279cd7fe66976d7c274d4aa2ec3a6cf6f7" translate="yes" xml:space="preserve">
          <source>with GCC</source>
          <target state="translated">GCC와 함께</target>
        </trans-unit>
        <trans-unit id="31055ad4e0d473fd782c78a366be8a0fb7b94985" translate="yes" xml:space="preserve">
          <source>with no modifications. However, this means that calls to &lt;code&gt;extern&lt;/code&gt; functions with no explicit visibility use the PLT, so it is more effective to use &lt;code&gt;__attribute ((visibility))&lt;/code&gt; and/or &lt;code&gt;#pragma GCC visibility&lt;/code&gt; to tell the compiler which &lt;code&gt;extern&lt;/code&gt; declarations should be treated as hidden.</source>
          <target state="translated">수정하지 않고. 그러나 이는 명시적인 가시성이없는 &lt;code&gt;extern&lt;/code&gt; 함수 를 호출 하면 PLT를 사용하므로 &lt;code&gt;__attribute ((visibility))&lt;/code&gt; 및 / 또는 &lt;code&gt;#pragma GCC visibility&lt;/code&gt; 을 사용하여 컴파일러에 &lt;code&gt;extern&lt;/code&gt; 선언을 숨겨진 것으로 처리해야한다고 알리는 것이 더 효과적 입니다.</target>
        </trans-unit>
        <trans-unit id="5db39c1cf0be124606287081098976c6f211f749" translate="yes" xml:space="preserve">
          <source>with that compiled with</source>
          <target state="translated">함께 컴파일 된</target>
        </trans-unit>
        <trans-unit id="a1d10d07240bf646aaaee33f9d07cd663e7534c1" translate="yes" xml:space="preserve">
          <source>with this option causes the stack frames not to be generated for leaf functions. The default is</source>
          <target state="translated">이 옵션을 사용하면 리프 기능에 대해 스택 프레임이 생성되지 않습니다. 디폴트는</target>
        </trans-unit>
        <trans-unit id="0d4e654c613ea68bffeeab1587b7dbac44826c2b" translate="yes" xml:space="preserve">
          <source>without</source>
          <target state="translated">without</target>
        </trans-unit>
        <trans-unit id="b004720bc74b0e877d5b63e14fbae0eb6e27a8a6" translate="yes" xml:space="preserve">
          <source>without GNU extensions, this option disables the warnings about non-ISO &lt;code&gt;printf&lt;/code&gt; / &lt;code&gt;scanf&lt;/code&gt; format width specifiers &lt;code&gt;I32&lt;/code&gt;, &lt;code&gt;I64&lt;/code&gt;, and &lt;code&gt;I&lt;/code&gt; used on Windows targets, which depend on the MS runtime.</source>
          <target state="translated">GNU 확장하지 않고,이 옵션이 아닌 ISO에 대한 경고 비활성화 &lt;code&gt;printf&lt;/code&gt; / &lt;code&gt;scanf&lt;/code&gt; 와 지정자 폭 형식 &lt;code&gt;I32&lt;/code&gt; , &lt;code&gt;I64&lt;/code&gt; 을 , 그리고 &lt;code&gt;I&lt;/code&gt; 런타임는 MS에 따라 Windows 대상에 사용.</target>
        </trans-unit>
        <trans-unit id="4acc1ef725b8bf7ee0b0027091401dfd374ab5e6" translate="yes" xml:space="preserve">
          <source>without a definition of the corresponding sized deallocation function</source>
          <target state="translated">해당 크기의 할당 해제 기능에 대한 정의가없는 경우</target>
        </trans-unit>
        <trans-unit id="7bccc0c70333b1fe814bc1edf7d7e782e61540f9" translate="yes" xml:space="preserve">
          <source>without a value is equivalent to</source>
          <target state="translated">값이 없으면</target>
        </trans-unit>
        <trans-unit id="74dc654508f2be6d8a17cfaf23b537e2ed769a54" translate="yes" xml:space="preserve">
          <source>without the</source>
          <target state="translated">없이</target>
        </trans-unit>
        <trans-unit id="0caa61fc679a081b699e5cd92215ea3b0f7e7cc7" translate="yes" xml:space="preserve">
          <source>wlh1</source>
          <target state="translated">wlh1</target>
        </trans-unit>
        <trans-unit id="890ef7c8ed82c3215c9303c0d403743c8c05d138" translate="yes" xml:space="preserve">
          <source>wlh2</source>
          <target state="translated">wlh2</target>
        </trans-unit>
        <trans-unit id="acf1d40a0eda46e01422be875a4de39774a89cc7" translate="yes" xml:space="preserve">
          <source>wlh3</source>
          <target state="translated">wlh3</target>
        </trans-unit>
        <trans-unit id="5c510cfe14bdb19c4efa584442605681c7e54b88" translate="yes" xml:space="preserve">
          <source>wlh4</source>
          <target state="translated">wlh4</target>
        </trans-unit>
        <trans-unit id="1f79be8859a3bfe9a5f2a27211bb7a6b4cd49507" translate="yes" xml:space="preserve">
          <source>wlh5</source>
          <target state="translated">wlh5</target>
        </trans-unit>
        <trans-unit id="bd58e6e5347e0a628bb23814c68b550a7f5f5967" translate="yes" xml:space="preserve">
          <source>works.</source>
          <target state="translated">works.</target>
        </trans-unit>
        <trans-unit id="930dfdf50a38cffe1aaafd50b329d4679ad60cb8" translate="yes" xml:space="preserve">
          <source>would.</source>
          <target state="translated">would.</target>
        </trans-unit>
        <trans-unit id="91bc73521dab9ad48d9aed0a4097fcbb2622a6df" translate="yes" xml:space="preserve">
          <source>would;</source>
          <target state="translated">would;</target>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="2dec0dbbcd1cefc3691c074a2476fe22c7dd8377" translate="yes" xml:space="preserve">
          <source>x.h</source>
          <target state="translated">x.h</target>
        </trans-unit>
        <trans-unit id="8ca163357a3d0c02eff5411e88822a14b08360f4" translate="yes" xml:space="preserve">
          <source>x.h.gcov</source>
          <target state="translated">x.h.gcov</target>
        </trans-unit>
        <trans-unit id="aa537e4edb98dba7159007da6f7236df94bb66d1" translate="yes" xml:space="preserve">
          <source>x86 family</source>
          <target state="translated">x86 가족</target>
        </trans-unit>
        <trans-unit id="8f00c32794f892f009a315b2fcb8dd9c57049273" translate="yes" xml:space="preserve">
          <source>x86 family&amp;mdash;</source>
          <target state="translated">x86 제품군 &amp;mdash;</target>
        </trans-unit>
        <trans-unit id="e46e7b9d8a19e6223647ce2f12f22a12cd89e32a" translate="yes" xml:space="preserve">
          <source>x86 memory models.</source>
          <target state="translated">x86 메모리 모델.</target>
        </trans-unit>
        <trans-unit id="a32491d370d9040539f102558a8fd28759213f1a" translate="yes" xml:space="preserve">
          <source>x86-64</source>
          <target state="translated">x86-64</target>
        </trans-unit>
        <trans-unit id="1ed70c2c3ec28a9db1af7ec4f36b2b2d4262c3aa" translate="yes" xml:space="preserve">
          <source>xgene1</source>
          <target state="translated">xgene1</target>
        </trans-unit>
        <trans-unit id="f32b97ff9b948e52cfb974eb02c93a5793ab8cf5" translate="yes" xml:space="preserve">
          <source>xlen</source>
          <target state="translated">xlen</target>
        </trans-unit>
        <trans-unit id="5e0717c1d041821f6e3518a19013f19a879eceb6" translate="yes" xml:space="preserve">
          <source>xlp</source>
          <target state="translated">xlp</target>
        </trans-unit>
        <trans-unit id="db0cc3e07e8aba09a5ebcddbf9330e1b59294833" translate="yes" xml:space="preserve">
          <source>xlr</source>
          <target state="translated">xlr</target>
        </trans-unit>
        <trans-unit id="2ecbb4a3899bfbbb11310ee04e4d367c66b6d5bf" translate="yes" xml:space="preserve">
          <source>xmdstub</source>
          <target state="translated">xmdstub</target>
        </trans-unit>
        <trans-unit id="62bd1bf1a5a78069634cfe24a69e32060a82909c" translate="yes" xml:space="preserve">
          <source>xop</source>
          <target state="translated">xop</target>
        </trans-unit>
        <trans-unit id="1ecc1f9c663392dabaf34d7ce975b69359d27777" translate="yes" xml:space="preserve">
          <source>xsave</source>
          <target state="translated">xsave</target>
        </trans-unit>
        <trans-unit id="66ddb955748bd23e30b48282085b2ec28eb3e062" translate="yes" xml:space="preserve">
          <source>xsavec</source>
          <target state="translated">xsavec</target>
        </trans-unit>
        <trans-unit id="03137c2287e4d60fc847bc1d8d2f4408f084b5b2" translate="yes" xml:space="preserve">
          <source>xsaveopt</source>
          <target state="translated">xsaveopt</target>
        </trans-unit>
        <trans-unit id="4a9dae36cc01821f529703396a8f7f7cdfff6ff8" translate="yes" xml:space="preserve">
          <source>xsaves</source>
          <target state="translated">xsaves</target>
        </trans-unit>
        <trans-unit id="de6261aaec991553f4743887b0cf47bdbc765e92" translate="yes" xml:space="preserve">
          <source>xscale</source>
          <target state="translated">xscale</target>
        </trans-unit>
        <trans-unit id="03d91bcde0be574d8ad7932ccfc7bed4523b5201" translate="yes" xml:space="preserve">
          <source>xxx.ld</source>
          <target state="translated">xxx.ld</target>
        </trans-unit>
        <trans-unit id="493de3004107b3be319c53c12bf7feeb78e3e7c3" translate="yes" xml:space="preserve">
          <source>you can allocate and send messages to objects whose class is implemented in the same file;</source>
          <target state="translated">클래스가 동일한 파일로 구현 된 객체에 메시지를 할당하고 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c424b63b1af4b4a8b07be26da713a0bd443e311e" translate="yes" xml:space="preserve">
          <source>you can write whatever C code you like;</source>
          <target state="translated">원하는 C 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f526a24758e7c523c040024e8dc30f9d0917fc84" translate="yes" xml:space="preserve">
          <source>you must use the &lt;code&gt;volatile&lt;/code&gt; keyword to protect memory accesses, but that can lead to inefficient code in places where the memory is known to not change. Rather than mark the memory as volatile, you can use</source>
          <target state="translated">&lt;code&gt;volatile&lt;/code&gt; 키워드를 사용하여 메모리 액세스를 보호 해야 하지만 메모리가 변경되지 않는 곳에서는 비효율적 인 코드로 이어질 수 있습니다. 메모리를 휘발성으로 표시하는 대신 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5289cd0f4e3bb253d37e80abcea8fa0446280a0d" translate="yes" xml:space="preserve">
          <source>you should usually specify</source>
          <target state="translated">보통 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="395df8f7c51f007019cb30201c49e884b46b92fa" translate="yes" xml:space="preserve">
          <source>z</source>
          <target state="translated">z</target>
        </trans-unit>
        <trans-unit id="c63e153fcf77300b25d6f37429567f6aef4be84c" translate="yes" xml:space="preserve">
          <source>z-compile</source>
          <target state="translated">z-compile</target>
        </trans-unit>
        <trans-unit id="23becd3485cdfbc174e240585214d594810ab41f" translate="yes" xml:space="preserve">
          <source>z10</source>
          <target state="translated">z10</target>
        </trans-unit>
        <trans-unit id="84d066d3535d7eae7a3e568c9f02785a883c8121" translate="yes" xml:space="preserve">
          <source>z13</source>
          <target state="translated">z13</target>
        </trans-unit>
        <trans-unit id="e9f897ed6b12f55607705a9de41c735382fc8cc5" translate="yes" xml:space="preserve">
          <source>z14</source>
          <target state="translated">z14</target>
        </trans-unit>
        <trans-unit id="0de00214616bb5619bcae0c5c2ba4e7b53ad598f" translate="yes" xml:space="preserve">
          <source>z196</source>
          <target state="translated">z196</target>
        </trans-unit>
        <trans-unit id="3ffd64966cfdd092779cb0c9219e932f20436938" translate="yes" xml:space="preserve">
          <source>z9-109</source>
          <target state="translated">z9-109</target>
        </trans-unit>
        <trans-unit id="c3c2d7210e6ef64a2392cad75d9f052ed4a0a822" translate="yes" xml:space="preserve">
          <source>z9-ec</source>
          <target state="translated">z9-ec</target>
        </trans-unit>
        <trans-unit id="9cd0c3c7b39f86588b1f9b64ce8625ad01155fb1" translate="yes" xml:space="preserve">
          <source>z900</source>
          <target state="translated">z900</target>
        </trans-unit>
        <trans-unit id="0bcece1cb7bc5d066ae58781f4c619d9c7575c8c" translate="yes" xml:space="preserve">
          <source>z990</source>
          <target state="translated">z990</target>
        </trans-unit>
        <trans-unit id="25d8dbd2b240f5e523a20e8e7bd869d85f3305e8" translate="yes" xml:space="preserve">
          <source>zEC12</source>
          <target state="translated">zEC12</target>
        </trans-unit>
        <trans-unit id="fc58d173ddb3c6636e00ec1f54b83e9467c2ffbe" translate="yes" xml:space="preserve">
          <source>zeus</source>
          <target state="translated">zeus</target>
        </trans-unit>
        <trans-unit id="57968f12798767ae5da8b15a0c383ad79d0f338b" translate="yes" xml:space="preserve">
          <source>zlib</source>
          <target state="translated">zlib</target>
        </trans-unit>
        <trans-unit id="0ba688f3453ae35da97fe5769b775e519015bd2f" translate="yes" xml:space="preserve">
          <source>zlib-gnu</source>
          <target state="translated">zlib-gnu</target>
        </trans-unit>
        <trans-unit id="ecc8d6981885740a4a0f47b205c380898e5305e3" translate="yes" xml:space="preserve">
          <source>znver1</source>
          <target state="translated">znver1</target>
        </trans-unit>
        <trans-unit id="c79c855752f30d421158a18047e5fdd2d77a8d91" translate="yes" xml:space="preserve">
          <source>znver2</source>
          <target state="translated">znver2</target>
        </trans-unit>
        <trans-unit id="4ad80eb83ac1d2452acbd0fe0fec839ec48d8254" translate="yes" xml:space="preserve">
          <source>zvector</source>
          <target state="translated">zvector</target>
        </trans-unit>
        <trans-unit id="33c233e6855bc005c19c8ccce05ec5bd9d7c7005" translate="yes" xml:space="preserve">
          <source>{ 0 }</source>
          <target state="translated">{0}</target>
        </trans-unit>
        <trans-unit id="4448e1dbcb7f6e8f55f2f5b257a1169d8c4db209" translate="yes" xml:space="preserve">
          <source>{ }</source>
          <target state="translated">{}</target>
        </trans-unit>
        <trans-unit id="c6dc94a8a279e248f98da82818c5985dad757cf1" translate="yes" xml:space="preserve">
          <source>{&lt;code&gt;upper,either,none&lt;/code&gt;} has been passed, or the &lt;code&gt;section&lt;/code&gt; attribute is applied to a variable, the compiler will generate 430X instructions to handle it. This is because the compiler has to assume that the variable could get placed in the upper memory region (above address 0xFFFF). Marking the variable with the &lt;code&gt;lower&lt;/code&gt; attribute informs the compiler that the variable will be placed in lower memory so it is safe to use 430 instructions to handle it.</source>
          <target state="translated">{ &lt;code&gt;upper,either,none&lt;/code&gt; }이 전달되었거나 &lt;code&gt;section&lt;/code&gt; 속성이 변수에 적용된 경우 컴파일러는이를 처리하기 위해 430X 명령을 생성합니다. 이는 컴파일러가 변수가 상위 메모리 영역 (주소 0xFFFF 위)에 배치 될 수 있다고 가정해야하기 때문입니다. &lt;code&gt;lower&lt;/code&gt; 속성으로 변수를 표시하면 컴파일러에게 변수가 하위 메모리에 배치되므로 430 개의 명령어를 사용하여 처리하는 것이 안전하다는 것을 컴파일러에 알립니다.</target>
        </trans-unit>
        <trans-unit id="3eb416223e9e69e6bb8ee19793911ad1ad2027d8" translate="yes" xml:space="preserve">
          <source>|</source>
          <target state="translated">|</target>
        </trans-unit>
        <trans-unit id="fb3c6e4de85bd9eae26fdc63e75f10a7f39e850e" translate="yes" xml:space="preserve">
          <source>~</source>
          <target state="translated">~</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
