<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="f3c71464059f8c8410d1715e304bd168e0a29f6e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L362&quot;&gt; JSONSerializer ../serializer/addon/json.js:362 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c9162e6fda984e32aa415c13deb8ba93cb3d83" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L376&quot;&gt; JSONSerializer ../serializer/addon/json.js:376 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d8ed5c4cfd6744d95807dd139de2f3ad88361b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L390&quot;&gt; JSONSerializer ../serializer/addon/json.js:390 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be998a632126ab1ae56b14ff6557ad1ec4ed17c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L404&quot;&gt; JSONSerializer ../serializer/addon/json.js:404 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e345fc8f684cad4de15392c015773ce8b28d471c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L418&quot;&gt; JSONSerializer ../serializer/addon/json.js:418 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8256176d324104bc815c1597fbfc98c381ec266f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L432&quot;&gt; JSONSerializer ../serializer/addon/json.js:432 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa538179dd86d2c851eec03c50f294e9e231554" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L495&quot;&gt; JSONSerializer ../serializer/addon/json.js:495 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c1b540cebb893cd065073f2c15cb58e678e1a7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L558&quot;&gt; JSONSerializer ../serializer/addon/json.js:558 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80121676afbe302fa4ff44912a6a11f97e514ad" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L572&quot;&gt; JSONSerializer ../serializer/addon/json.js:572 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a018131247fcbfdaccbc1a8da75b2c9d64bad2a7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L596&quot;&gt; JSONSerializer ../serializer/addon/json.js:596 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9294b6b2a698439a620492fa20f3eb3c94338c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L630&quot;&gt; JSONSerializer ../serializer/addon/json.js:630 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6b8e7a0702583b2f2a382b77653031faaf97fd" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L653&quot;&gt; JSONSerializer ../serializer/addon/json.js:653 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1258f54f4592feb8e45114517f80c40485d1f2ad" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L83&quot;&gt; JSONSerializer ../serializer/addon/json.js:83 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb5c9368c3eb09ccee106061ed7c6b1dce6bd60" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L860&quot;&gt; JSONSerializer ../serializer/addon/json.js:860 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca78391f1d4c5a049616de462a3092d404f3c94a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L881&quot;&gt; JSONSerializer ../serializer/addon/json.js:881 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3bfbca620e76e154b84d2fdd5d6c655c2b925d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L101&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:101 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb364d57c3d03a8443d9714fe0ed24886abc0865" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L127&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:127 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1cdc9a9be35180c425415f2147e2ce8e57796f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L174&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:174 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c0384684ed2a8fa48d7e42b715c1c048e2725b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L233&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:233 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2446a2e8014b46da2d67c988d2df2ad904657b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L247&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:247 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dbb93ebe1cfcc4b4161f6e04faf7214cd3fa28" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L258&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:258 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6f8c5c4f2951f447fd1a1d906aced07ec8c2cf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L269&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:269 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045e23f23097501dc9e4783e60a17fdc33f69f77" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L53&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:53 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c0c99b0b4661070ec0462b7be0135871b849b7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/record-arrays/record-array.js#L67&quot;&gt; RecordArray ../store/addon/-private/system/record-arrays/record-array.js:67 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6809cbb25a4ed661c5955e5b1a5c245d00960b23" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/references/reference.ts#L109&quot;&gt; Reference ../store/addon/-private/system/references/reference.ts:109 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8daa073d5701e1a6c31c10af8cc3294a4c13d1c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/references/reference.ts#L165&quot;&gt; Reference ../store/addon/-private/system/references/reference.ts:165 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1b3e5cd85c0e1937e0bbdcb80023d520e10a1e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../store/addon/-private/system/references/reference.ts#L60&quot;&gt; Reference ../store/addon/-private/system/references/reference.ts:60 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984a9218d8a8023bb8953b155ee3de7ae159bfd6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine-instance.js#L117&quot;&gt; Ember.EngineInstance packages/ember-application/lib/system/engine-instance.js:117 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine-instance.js#L117&quot;&gt;Ember.EngineInstance&lt;/a&gt; 에서 상 속됨 package / ember-application / lib / system / engine-instance.js : 117</target>
        </trans-unit>
        <trans-unit id="a6c8ffc64f32fc8e55d9572badacec97d6a8dd94" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L175&quot;&gt; Ember.Engine packages/ember-application/lib/system/engine.js:175 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L175&quot;&gt;Ember.Engine 패키지 /ember-application/lib/system/engine.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="4595334072e517e78e1c429b5f1403c29ee2d2d7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L295&quot;&gt; Ember.Engine packages/ember-application/lib/system/engine.js:295 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L295&quot;&gt;Ember.Engine 패키지 /ember-application/lib/system/engine.js&lt;/a&gt; 에서 상 속됨 : 295</target>
        </trans-unit>
        <trans-unit id="e2342fcfe4e2dbf67b18217cd7d6d01c2bd9165d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L410&quot;&gt; Ember.Engine packages/ember-application/lib/system/engine.js:410 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-application/lib/system/engine.js#L410&quot;&gt;Ember.Engine 패키지 /ember-application/lib/system/engine.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="d968413039baeb2f4322c8725e1ae587ef1f85db" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L634&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:634 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L634&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 634</target>
        </trans-unit>
        <trans-unit id="fc8b7361641723dcd924ef44a302b5bf57666b08" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L670&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:670 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L670&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 670</target>
        </trans-unit>
        <trans-unit id="6de21e8471ac3324db006445e37ab11abb03cf00" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L685&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:685 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L685&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 685</target>
        </trans-unit>
        <trans-unit id="4431349564c49b4c548fe2fbdec0c6724a8c7846" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L739&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:739 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L739&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 739</target>
        </trans-unit>
        <trans-unit id="4b1f973671d58e2795553ab2f1cf965e24dc6ff5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L749&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:749 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L749&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 749</target>
        </trans-unit>
        <trans-unit id="f150175b7799c52d8ef8737a5d11cbc0a5a4fcca" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L759&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:759 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L759&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 759</target>
        </trans-unit>
        <trans-unit id="ded44d36198a8c65e17de4716866c8e82dd8444e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L767&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:767 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L767&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 767</target>
        </trans-unit>
        <trans-unit id="2841213ae3787982e4b54872afa80a1fdcfe9875" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L775&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:775 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L775&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 775</target>
        </trans-unit>
        <trans-unit id="50f9410a2e72ab1c0ff2f187e4f084d5f8ba1c82" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L783&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:783 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L783&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 783</target>
        </trans-unit>
        <trans-unit id="97a02eca5371fbabe8a5769db13e36f4dfe86719" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L791&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:791 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L791&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 791</target>
        </trans-unit>
        <trans-unit id="472ac2fc5710f1e5f039b1203d188d59d87aacc7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L799&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:799 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L799&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 799</target>
        </trans-unit>
        <trans-unit id="e6605a6154be73fa2d011699e44c9efef508f412" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L807&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:807 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L807&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 807</target>
        </trans-unit>
        <trans-unit id="607543393c27eeabfd1d312303bf149a02d2e4c4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L815&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:815 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L815&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 815</target>
        </trans-unit>
        <trans-unit id="cdcaf2f85e9abcc8704d4f66b1e4ad62238c0139" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L823&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:823 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L823&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 823</target>
        </trans-unit>
        <trans-unit id="b522f34aed495653b129dba86ac19a72ff0141c2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L831&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:831 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L831&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 831</target>
        </trans-unit>
        <trans-unit id="288e48e25ad9b8306a53864e23e188290a07926c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L839&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:839 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L839&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 839</target>
        </trans-unit>
        <trans-unit id="d8b2e324e4c2642b96252e4ddb1ee88432fc1e7d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L856&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:856 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L856&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 856</target>
        </trans-unit>
        <trans-unit id="e15d08b01163c7e5142bbbac368d2ef907b552bf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L868&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:868 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L868&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 868</target>
        </trans-unit>
        <trans-unit id="16f644c167f3f4cd4ba597753dbfd1359df237c0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L897&quot;&gt; Ember.Component packages/ember-glimmer/lib/component.js:897 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-glimmer/lib/component.js#L897&quot;&gt;Ember.Component&lt;/a&gt; 에서 상 속됨 package / ember-glimmer / lib / component.js : 897</target>
        </trans-unit>
        <trans-unit id="d18c55084df6456285bb947e5224a30d4d6c434f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-metal/lib/mixin.js#L501&quot;&gt; Ember.Mixin packages/ember-metal/lib/mixin.js:501 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-metal/lib/mixin.js#L501&quot;&gt;Ember.Mixin 패키지 /ember-metal/lib/mixin.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="8830e383d1d6e50e6706ecd4a0d02955996d0559" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L13&quot;&gt; Ember.ControllerMixin packages/ember-routing/lib/ext/controller.js:13 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L13&quot;&gt;Ember.ControllerMixin&lt;/a&gt; 에서 상 속됨 package / ember-routing / lib / ext / controller.js : 13</target>
        </trans-unit>
        <trans-unit id="eb7f7ed24b3270cbf4232797a7b8ee36c7bad091" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L154&quot;&gt; Ember.ControllerMixin packages/ember-routing/lib/ext/controller.js:154 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L154&quot;&gt;Ember.ControllerMixin&lt;/a&gt; 에서 상 속됨 package / ember-routing / lib / ext / controller.js : 154</target>
        </trans-unit>
        <trans-unit id="879cac7cfd8ee7ab46c403dd87286c695288b1ea" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L75&quot;&gt; Ember.ControllerMixin packages/ember-routing/lib/ext/controller.js:75 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-routing/lib/ext/controller.js#L75&quot;&gt;Ember.ControllerMixin 패키지 /ember-routing/lib/ext/controller.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="97a6b9ab70320ed8f783f71cfb7cdfea35f5423f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/action_handler.js#L144&quot;&gt; Ember.ActionHandler packages/ember-runtime/lib/mixins/action_handler.js:144 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/action_handler.js#L144&quot;&gt;Ember.ActionHandler&lt;/a&gt; 에서 상 속됨 package / ember-runtime / lib / mixins / action_handler.js : 144</target>
        </trans-unit>
        <trans-unit id="049d1f7961c9ab8b391deb0d3408de498afaf6c3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/action_handler.js#L23&quot;&gt; Ember.ActionHandler packages/ember-runtime/lib/mixins/action_handler.js:23 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/action_handler.js#L23&quot;&gt;Ember.ActionHandler&lt;/a&gt; 에서 상 속됨 package / ember-runtime / lib / mixins / action_handler.js : 23</target>
        </trans-unit>
        <trans-unit id="8592b4baff1bb75b36922d024f0dae792a089144" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L220&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:220 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L220&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:220</target>
        </trans-unit>
        <trans-unit id="3b8e37fc61b11382b5ab7b86871c0d8d3432bdfa" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L231&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:231 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L231&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:231</target>
        </trans-unit>
        <trans-unit id="895bee5b483e3adc63b1416ed8271d7926e95a3a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L263&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:263 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L263&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:263</target>
        </trans-unit>
        <trans-unit id="08ff339e3dbf42c6529a0ff110c42f4285346aad" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L287&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:287 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L287&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:287</target>
        </trans-unit>
        <trans-unit id="4a9afdfc656be282d8abd2c58be38f2ad0ec5471" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L328&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:328 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L328&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:328</target>
        </trans-unit>
        <trans-unit id="d0f76096c305859b55baa9ca73e9235403e87391" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L374&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:374 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L374&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:374</target>
        </trans-unit>
        <trans-unit id="7bed05be364b77d20ed7308d4ec8b26ffd102e56" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L417&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:417 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L417&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:417</target>
        </trans-unit>
        <trans-unit id="ab13e4217985d0544570f63f226e0a1c848246ab" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L464&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:464 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L464&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:464</target>
        </trans-unit>
        <trans-unit id="be59939b042fe4dcb21df904d2b2ff8fbc656de9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L494&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:494 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L494&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:494</target>
        </trans-unit>
        <trans-unit id="44bbfd46bc2b710496af19dac2c0642e2d334d3a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L510&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:510 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L510&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:510</target>
        </trans-unit>
        <trans-unit id="ed9647493a37980400c4a284e6783f24f3c04c0b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L521&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:521 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L521&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:521</target>
        </trans-unit>
        <trans-unit id="3ca09e310ffe7e4e5dbe9296d30ff6fc54c63541" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L540&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:540 &lt;/a&gt;</source>
          <target state="translated">Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L540&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:540 &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c378b828f6c5be5c11b64830023e579524492440" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L606&quot;&gt; Ember.Array packages/ember-runtime/lib/mixins/array.js:606 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/array.js#L606&quot;&gt;Ember.Array 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/array.js:606</target>
        </trans-unit>
        <trans-unit id="8ec85df52fc4ffef266f02d2afefb92225802595" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/container_proxy.js#L26&quot;&gt; ContainerProxyMixin packages/ember-runtime/lib/mixins/container_proxy.js:26 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/container_proxy.js#L26&quot;&gt;ContainerProxyMixin 패키지 /ember-runtime/lib/mixins/container_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="25531fc14d550f483f1bb71175a5b4b22bfc2a88" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/container_proxy.js#L50&quot;&gt; ContainerProxyMixin packages/ember-runtime/lib/mixins/container_proxy.js:50 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/container_proxy.js#L50&quot;&gt;ContainerProxyMixin 패키지 /ember-runtime/lib/mixins/container_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="6c7d9d832f973b3454ef3c9f8fda59cf79f0a782" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/controller.js#L15&quot;&gt; Ember.ControllerMixin packages/ember-runtime/lib/mixins/controller.js:15 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/controller.js#L15&quot;&gt;Ember.ControllerMixin 패키지 /ember-runtime/lib/mixins/controller.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="bbde25f4502afc555d72f43f4978c69eaef4384a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/controller.js#L35&quot;&gt; Ember.ControllerMixin packages/ember-runtime/lib/mixins/controller.js:35 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/controller.js#L35&quot;&gt;Ember.ControllerMixin 패키지 /ember-runtime/lib/mixins/controller.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="46044bd34168bf121f7703b0190c2668c8ce5262" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1044&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:1044 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1044&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 : 1044</target>
        </trans-unit>
        <trans-unit id="ec30c80cc6dce721ee096036445ed114adbe6ac0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1075&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:1075 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1075&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js:1075&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="f6fd31adcbe6cc230561dd91baf23bff94c2cab5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1104&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:1104 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L1104&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js:1104&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="311a3edf3f40afc2fc2bdc3995d86098b2b322f1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L134&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:134 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L134&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="205dbbf18e52993120e782b0f3b60b218b9cfa28" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L171&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:171 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L171&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff1a678180425abc9acc0b3224730033354a00e0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L241&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:241 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L241&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ada408cf6a420c9f2dfeffaa337bb8d98135b49" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L292&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:292 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L292&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="741be64f64a358c032672ebc2e7e95da60814fbc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L302&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:302 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L302&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50167cfb2fca5041540d08732bff52644f2fda1b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L318&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:318 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L318&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3f7f305594ad496a44ed0219f24a944eb1fa81" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L353&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:353 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L353&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f08391e710e8a7bb58d92b35ed2eb04c7311924a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L366&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:366 &lt;/a&gt;</source>
          <target state="translated">에서 상속 &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L366&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js 상 :&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="156debf9f5e7b00066a8ea2fae3ce8fe7dcea99e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L407&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:407 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L407&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="91d4df339e3155440643df6bef2ca8ba3b2daaf1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L440&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:440 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L440&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="198bb38b86afabccbb7db8f743079fa19738c008" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L455&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:455 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L455&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="156bc72c64821be5791471cc78d24f0c02331f67" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L474&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:474 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L474&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="2d8a16f1f4ccfb1f2b307f6b91cdec369b2644d0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L532&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:532 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L532&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="fb54b7ee3dae0bc08e3e61a450ad6b2e6e096b25" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L549&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:549 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L549&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="9dd33face5d9136ecb3947aefd4775fbb00a4169" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L588&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:588 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L588&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="4cf258cac775c1577e7b3111ef4d1b035813df88" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L607&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:607 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L607&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="6476dd6e1fa6fbc9536b5fe8c535342aeb96a918" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L665&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:665 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L665&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="b8f0937df84dbde003c828563f5228005ddb0996" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L681&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:681 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L681&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="99055c3e5021e250001eaa78c27460adc01fd4f2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L729&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:729 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L729&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="63e18ce9ebc38d7649e5852fda69330dce197e44" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L754&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:754 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L754&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="3929b7af6d71ed3060800f8dd7d8e14c61558f74" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L770&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:770 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L770&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js:770&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="f8342209143c1b0ce99abfd72e2ea6918086c02e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L786&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:786 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L786&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="d9495ec3a95c02abf8ce6c11125666af737a083a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L818&quot;&gt; Ember.Enumerable packages/ember-runtime/lib/mixins/enumerable.js:818 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/enumerable.js#L818&quot;&gt;Ember.Enumerable 패키지 /ember-runtime/lib/mixins/enumerable.js&lt;/a&gt; 에서 상 속됨 : 818</target>
        </trans-unit>
        <trans-unit id="feb47ffc56470cdf612026463bedabf8539b4c8f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L104&quot;&gt; Ember.Evented packages/ember-runtime/lib/mixins/evented.js:104 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L104&quot;&gt;Ember.Evented 패키지 /ember-runtime/lib/mixins/evented.js:104&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="bfd8e2a1218667bb5e8df0cf01761aaa41421375" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L127&quot;&gt; Ember.Evented packages/ember-runtime/lib/mixins/evented.js:127 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L127&quot;&gt;Ember.Evented 패키지 /ember-runtime/lib/mixins/evented.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="e4aeb616be822b0f46f786ca6483df8676063070" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L142&quot;&gt; Ember.Evented packages/ember-runtime/lib/mixins/evented.js:142 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L142&quot;&gt;Ember.Evented 패키지 /ember-runtime/lib/mixins/evented.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="a928c404a68121119bf5c96d578e53eb8b163788" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L52&quot;&gt; Ember.Evented packages/ember-runtime/lib/mixins/evented.js:52 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L52&quot;&gt;Ember.Evented 패키지 /ember-runtime/lib/mixins/evented.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="039f8f2961742b61c50aded6ff34cec480a753f1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L78&quot;&gt; Ember.Evented packages/ember-runtime/lib/mixins/evented.js:78 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/evented.js#L78&quot;&gt;Ember.Evented 패키지 /ember-runtime/lib/mixins/evented.js&lt;/a&gt; 에서 상 속됨 : 78</target>
        </trans-unit>
        <trans-unit id="0ce2a8076e61679a854557cdf92b5100e93bfcd2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L107&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:107 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L107&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="2b98ffda4cd509da29f142e49c117c44bbf0a756" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L133&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:133 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L133&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="1be5b33ed40e46a23eb39f48a3cd771ac3305048" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L158&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:158 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L158&quot;&gt;Ember.MutableArray 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/mutable_array.js:158</target>
        </trans-unit>
        <trans-unit id="7c205a58a561d577c5b7bec0893e3587eefc5b89" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L179&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:179 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L179&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js:179&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="faf8857a2c9c19cc069b355aa9d1a18cbdc1be35" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L202&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:202 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L202&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js:202&lt;/a&gt; 에서 상 속됨</target>
        </trans-unit>
        <trans-unit id="68521b261b75285b7ecfbd20a6f6be7ecddc3ea6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L228&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:228 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L228&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="1830a3e3b259814e73df794254fa0629f6d68730" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L253&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:253 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L253&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="b96ec6a2647f6a507bde543e17fd900a1178809f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L274&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:274 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L274&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="93b3d4631bb4386d9a53fb446ef9e052aa917e9b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L295&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:295 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L295&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 : 295</target>
        </trans-unit>
        <trans-unit id="e441cafc4fbc26f35dded405f6acd59ed96ba8fe" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L314&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:314 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L314&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="caa8f83e7bf36c0ade03a2b78cb4cb2758a325f8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L63&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:63 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L63&quot;&gt;Ember.MutableArray 패키지 /ember-runtime/lib/mixins/mutable_array.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="dd0745a85d888300a6ccd532fa95172f533fcce5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L81&quot;&gt; Ember.MutableArray packages/ember-runtime/lib/mixins/mutable_array.js:81 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_array.js#L81&quot;&gt;Ember.MutableArray 패키지&lt;/a&gt; 에서 상 속됨 /ember-runtime/lib/mixins/mutable_array.js:81</target>
        </trans-unit>
        <trans-unit id="d3a3105f486fd8e13b8ff7d34981b4e3eba83ef4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L105&quot;&gt; Ember.MutableEnumerable packages/ember-runtime/lib/mixins/mutable_enumerable.js:105 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L105&quot;&gt;Ember.MutableEnumerable 패키지 /ember-runtime/lib/mixins/mutable_enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="a683ed3172be5e5a87364dcaa4952cf6362f5b42" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L55&quot;&gt; Ember.MutableEnumerable packages/ember-runtime/lib/mixins/mutable_enumerable.js:55 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L55&quot;&gt;Ember.MutableEnumerable 패키지 /ember-runtime/lib/mixins/mutable_enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="5b330329a8190da484838421439bee8a76d57a23" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L72&quot;&gt; Ember.MutableEnumerable packages/ember-runtime/lib/mixins/mutable_enumerable.js:72 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L72&quot;&gt;Ember.MutableEnumerable 패키지 /ember-runtime/lib/mixins/mutable_enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="f1f23dcf9ce1086865c82f9d3998f9a90fd27e54" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L87&quot;&gt; Ember.MutableEnumerable packages/ember-runtime/lib/mixins/mutable_enumerable.js:87 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/mutable_enumerable.js#L87&quot;&gt;Ember.MutableEnumerable 패키지 /ember-runtime/lib/mixins/mutable_enumerable.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="67b4559a3b949d2ddf466fd3cdf8dcab792b75fd" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L139&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:139 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L139&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:139</target>
        </trans-unit>
        <trans-unit id="a22e5b7e892d27b289308f9e0a0d9d1e1f96e55b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L164&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:164 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L164&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:164</target>
        </trans-unit>
        <trans-unit id="56492d49ed92c72f05fe7bf9a772089588e5a996" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L213&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:213 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L213&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:213</target>
        </trans-unit>
        <trans-unit id="a8104d2ddfd6170e915845ce3d69c1a39f49bf43" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L318&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:318 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L318&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:318</target>
        </trans-unit>
        <trans-unit id="a623ab418b86c50ba9ce32763aa82f67502c9230" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L333&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:333 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L333&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:333</target>
        </trans-unit>
        <trans-unit id="d665c7d47d5e34a2daa0f14ab571b9b72d76bca5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L380&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:380 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L380&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:380</target>
        </trans-unit>
        <trans-unit id="d7f5e9d442d98268b90d764771fb4ed214e09aae" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L410&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:410 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L410&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:410</target>
        </trans-unit>
        <trans-unit id="941a37440bf9265b378ffaa7be898c51d9b50573" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L428&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:428 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L428&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:428</target>
        </trans-unit>
        <trans-unit id="2b5801c7ab9ad75adfeaeecb83ef7cf976b7a918" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L448&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:448 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L448&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:448</target>
        </trans-unit>
        <trans-unit id="022579c484ee2c1975a5ebd612c4d892c9524014" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L468&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:468 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L468&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:468</target>
        </trans-unit>
        <trans-unit id="b2fa3687c0a29b35d80a39de7afd42c9206ab6a0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L485&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:485 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L485&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:485</target>
        </trans-unit>
        <trans-unit id="28e19f3453a4e9a1de9fdc42241ff741708ac915" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L96&quot;&gt; Ember.Observable packages/ember-runtime/lib/mixins/observable.js:96 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/observable.js#L96&quot;&gt;Ember&lt;/a&gt; 에서 상속 가능 패키지 /ember-runtime/lib/mixins/observable.js:96</target>
        </trans-unit>
        <trans-unit id="454f0a5cf9c5d6a51de0d97f7885b4c94f48c154" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L112&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:112 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L112&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 : 112</target>
        </trans-unit>
        <trans-unit id="1e0fdf3ab8dcaea4c78686a79965fe7dfd3f792d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L122&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:122 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L122&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="e6dc076b27f46a930311ff26bca3d574331ce46b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L133&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:133 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L133&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="ff5a34002e27e6536b8f633eae5d539b8fe78cbd" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L143&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:143 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L143&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="3792ef22b0f9b102c82d9ace12885dc44602c470" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L153&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:153 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L153&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="b2306401c75892e85922e2d467e56c8bdf701d87" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L184&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:184 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L184&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="5c3d6ea6d35a2d8255f62b5f16a35c4c4d55990a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L194&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:194 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L194&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="5606255735a197fc1b1beca7e8fb2ba58fcd0eb9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L21&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:21 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L21&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="74ccb79f36a205b473a55fb6f1344da45a76fb5d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L31&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:31 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L31&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="cc590454437c5996579fa91443e5af4e7a8ca115" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L92&quot;&gt; RegistryProxyMixin packages/ember-runtime/lib/mixins/registry_proxy.js:92 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/mixins/registry_proxy.js#L92&quot;&gt;RegistryProxyMixin 패키지 /ember-runtime/lib/mixins/registry_proxy.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="4f42cf4d64ae91e81756978985d7bfbeee7927bc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L211&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:211 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L211&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="03d3c1285b46fd6de8f6017506ab8197a085ee2c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L249&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:249 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L249&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="aacf94edc0b7d703de9750e04c478fbc79500968" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L322&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:322 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L322&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="63de9fe398e9d4ef926324d9967b5f1a731f76e8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L396&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:396 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L396&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="63d94aa42861fbee7e99504dc96b8cc43b464d3d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L421&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:421 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L421&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 : 421</target>
        </trans-unit>
        <trans-unit id="967e505efe316bdc40a84fa405b8889a82e18761" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L446&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:446 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L446&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="4ec809cdf3c1cac426299062fd3b0ac43c4a349b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L472&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:472 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L472&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="fd2f9e5e48878399a29cd3bbd3fe08a364eb6ecf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L499&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:499 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L499&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="cc62d76d0b79a189da86782b23cd333b214b456f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L561&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:561 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L561&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="d5d4e221e557fa84d7035f8d5990a1483f6020ef" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L669&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:669 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L669&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="94ff0a15e289d8e21b08503e8e78218f41e5bbfe" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L715&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:715 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L715&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="67da20eb3478a172eb3d4fb8b031129b3cda81ca" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L751&quot;&gt; Ember.CoreObject packages/ember-runtime/lib/system/core_object.js:751 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-runtime/lib/system/core_object.js#L751&quot;&gt;Ember.CoreObject 패키지 /ember-runtime/lib/system/core_object.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="25a24b5f0ce541ca38d59d3b7c1b7c3623e73ce2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L19&quot;&gt; Ember.Test.Adapter packages/ember-testing/lib/adapters/adapter.js:19 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L19&quot;&gt;Ember.Test.Adapter 패키지 /ember-testing/lib/adapters/adapter.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="34a5708101c5e79f327df66bf5b14913032732df" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L30&quot;&gt; Ember.Test.Adapter packages/ember-testing/lib/adapters/adapter.js:30 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L30&quot;&gt;Ember.Test.Adapter 패키지 /ember-testing/lib/adapters/adapter.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="907a1bd5622e14f4d9cc097f20817eb6d916dae4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L38&quot;&gt; Ember.Test.Adapter packages/ember-testing/lib/adapters/adapter.js:38 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-testing/lib/adapters/adapter.js#L38&quot;&gt;Ember.Test.Adapter 패키지 /ember-testing/lib/adapters/adapter.js&lt;/a&gt; 에서 상 속됨 :</target>
        </trans-unit>
        <trans-unit id="e8ebe081ba78648f2ac523107a4cc2262b32853b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/action_support.js#L28&quot;&gt; Ember.ActionSupport packages/ember-views/lib/mixins/action_support.js:28 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/action_support.js#L28&quot;&gt;Ember.ActionSupport&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / action_support.js : 28</target>
        </trans-unit>
        <trans-unit id="6809661aded3897a2bc061a65f505480609f6e49" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/class_names_support.js#L26&quot;&gt; Ember.ClassNamesSupport packages/ember-views/lib/mixins/class_names_support.js:26 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/class_names_support.js#L26&quot;&gt;Ember.ClassNamesSupport 패키지&lt;/a&gt; 에서 상 속됨 /ember-views/lib/mixins/class_names_support.js:26</target>
        </trans-unit>
        <trans-unit id="c432080d25d144caec29d366289ddde1df8bb1bf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/class_names_support.js#L38&quot;&gt; Ember.ClassNamesSupport packages/ember-views/lib/mixins/class_names_support.js:38 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/class_names_support.js#L38&quot;&gt;Ember.ClassNamesSupport 패키지&lt;/a&gt; 에서 상 속됨 /ember-views/lib/mixins/class_names_support.js:38</target>
        </trans-unit>
        <trans-unit id="ce3f4bb50a9a574a4ce07e8ba00f8c9b86887bbb" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L116&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:116 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L116&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 116</target>
        </trans-unit>
        <trans-unit id="4d51981eab4e93218607557af2b660db9a5e18c0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L141&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:141 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L141&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 141</target>
        </trans-unit>
        <trans-unit id="9e3ff5153c0e8ad879eeff66d5f2b9ed5eee7c93" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L18&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:18 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L18&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 18</target>
        </trans-unit>
        <trans-unit id="4adae4c4ac3a60d3b927d88eee84ded6f6931d38" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L295&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:295 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L295&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 295</target>
        </trans-unit>
        <trans-unit id="eca7773408d230ad9b974d73c313521a9e2cdfe4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L303&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:303 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L303&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 303</target>
        </trans-unit>
        <trans-unit id="b096caba283ee04926c2e8a0c9f99a42e5340144" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L316&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:316 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L316&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 316</target>
        </trans-unit>
        <trans-unit id="5a800dbe83701149156b879f4c97ff4d14eb22d3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L340&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:340 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L340&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 340</target>
        </trans-unit>
        <trans-unit id="0fe247527e4bbcc3fa61f39ed108c7ec5a43641d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L365&quot;&gt; Ember.ViewMixin packages/ember-views/lib/mixins/view_support.js:365 &lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v2.15.0/packages/ember-views/lib/mixins/view_support.js#L365&quot;&gt;Ember.ViewMixin&lt;/a&gt; 에서 상 속됨 package / ember-views / lib / mixins / view_support.js : 365</target>
        </trans-unit>
        <trans-unit id="f255f1c804d59b70266873f6d4f9e4d73a8a501e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L1014&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:1014 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f3b5c810187e4df98898b77b2a896fe3ad0bbc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L747&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:747 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c2f4f16535dab1bc4b20f4b8c2e7af0517f8a5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L798&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:798 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcad4bc6ba6f16b0608da10930c9fe59bd04ecd" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L813&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:813 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3194c57b59f83906ef37959effb87531617e8d02" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L874&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:874 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29311ad706e405a8c5ff291c725488bf8d2c9ed9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L885&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:885 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbd1df7b340ad3218caa2692a336d10de09ca02" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L895&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:895 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de5a1e17227b1d28d7cbb873bfee3c3edbab6c3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L904&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:904 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103eab69dc9df552e10a25a81f86598254c92123" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L912&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:912 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0044098cd798cfa6c04ecd2c16ea5f7697b95936" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L921&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:921 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2aeb9894918fca8ace9eccf682b192ddce9c99" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L929&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:929 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301d0c5eddc891b164d55375c780f5cd0ce8f9d7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L938&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:938 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7619b13101944ccf60273f43056c7832a1155c9d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L946&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:946 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd838ace85e06524174d931f74aa679856e6aef" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L955&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:955 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7078b6f3411d4ef47cdbb14de0c872f4b08e19" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L963&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:963 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d239e2f68ee038fcdc58948322b8a2667266d776" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L972&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:972 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8e874d05cf91201ed97869df51886a4bdaf164" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L980&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:980 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33daf431eb580304c66ebb781e6c6ac50cb366b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/glimmer/lib/component.ts#L997&quot;&gt; Component packages/@ember/-internals/glimmer/lib/component.ts:997 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd41444484ddd67804ae9d85f3d14545ae3b303" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/routing/lib/ext/controller.ts#L12&quot;&gt; Ember.ControllerMixin packages/@ember/-internals/routing/lib/ext/controller.ts:12 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c5b71fb6e82612b8eee7adf87ec8383a579ef9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/routing/lib/ext/controller.ts#L161&quot;&gt; Ember.ControllerMixin packages/@ember/-internals/routing/lib/ext/controller.ts:161 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749705b51c2a786601289527719f5daaae3d00c0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/routing/lib/ext/controller.ts#L79&quot;&gt; Ember.ControllerMixin packages/@ember/-internals/routing/lib/ext/controller.ts:79 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5fd785ed9c2493f6d59aebbad1479922eb9f5c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/-proxy.js#L64&quot;&gt; Ember.ProxyMixin packages/@ember/-internals/runtime/lib/mixins/-proxy.js:64 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a262045963389806eff9e4b39abba345c39f4cf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/action_handler.js#L167&quot;&gt; Ember.ActionHandler packages/@ember/-internals/runtime/lib/mixins/action_handler.js:167 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2844a6010f7d9e3461d49c8c8c1b245e65acd6b3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/action_handler.js#L22&quot;&gt; Ember.ActionHandler packages/@ember/-internals/runtime/lib/mixins/action_handler.js:22 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae101ccc3ed3845d4684cf12923f5ec2dd5a8e74" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1016&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1016 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00480aba7c8f2961fc596caa3ae6e11ae75a2fdc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1063&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1063 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afa590af3e48c2bdb448d69164862b8bfdd1487" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1095&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1095 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d22509186669d9eacd37ee846050243a9d9479" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1137&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1137 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983a2ab3e159acbd6a87d9075e56bbaf9d6c28de" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1179&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1179 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea418e8b5f68ddee3806947845ab88dd7543c2c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1223&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1223 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efc0834e5c9a1ecc7a9a2e36bee710873ad1f38" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1251&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1251 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1038663c2a6f0c9ac5406709d5314c652ccab85" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1317&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1317 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53dc17834562be78434285a7f0e08e99fbe2c6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1355&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1355 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38afcabe69fd73ff92c96f8ae00ad885466faefc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1367&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1367 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b7e57c7ea8b4e6e5653f0d307e4a5cc6e55dc9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1383&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1383 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14478fee7bce1b42326cf6aeb651648a99d3c66" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1416&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1416 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4e3ff9f53629b7bdee24f2ea0825f2dc6e4649" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1460&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1460 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315fae539fbd1ddbdd0a4be98db6db312617749b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1479&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1479 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6c91bd21a200c69f41cbef08334105db3000e0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1501&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:1501 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af318c468ba857ccca4280cc295fc929b904408" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1549&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1549 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7e85fca886b0373f3ccc5ea63f99b9815bc216" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1568&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1568 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722cc4706aa702deecd2c4ad2ceb42c1477c673f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1594&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1594 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e82d6f7259ad96f7555ff5ec597ab7ed52fde70" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1616&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1616 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855bb2e44d93230e1d47a5730dccfc7011ecc910" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1641&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1641 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3bad86fe59cce153d3f2bc147f229c1fd27696" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1661&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1661 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee905d23cc47fca82185723ccfe5e6723c89e18a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1681&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1681 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44763f7d281363e65baff9295b09f0411f2f9940" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1707&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1707 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba5cb98a38884e5fb5a026cf5095286765651b2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1732&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1732 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5340a74fb9d032a099bdefb6d73c4ad60e5231" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1752&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1752 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ad43b293d7931279f4c23349b922eec613247e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1773&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1773 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988f6b6b18ed8c7d8bf582e234d3e00769ddcc75" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1792&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1792 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bd6ede41762e0a0c9e97ea7607c5229d38b055" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1819&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1819 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3bcdedb7690ba41b9108a35b404484243940c9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1847&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1847 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce564425334c49946b54e31bcfa761c554ffab10" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1864&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1864 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e133825870c48b4cc468b0d1fbac9d12f6c24c9d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L1890&quot;&gt; MutableArray packages/@ember/-internals/runtime/lib/mixins/array.js:1890 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ef6ff9d1df8c3e2cb1c59620a970ae21de1297" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L224&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:224 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3e4c6b7e1d647f934fb59b8b12f6b82f29eac1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L234&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:234 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e60225b309c16b4d0d19859beac5f770b4e2ad9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L259&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:259 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853e62ad2aa26883b8ea109797bc0554260604c4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L278&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:278 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eca4ab8b3a87d4dd815d946f1fa486047189d30" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L306&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:306 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9152b6f47872d9e6b1e9b7fbf5ea2965dd878054" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L331&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:331 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dbd3bcbad604054b3d5be48b020c82eeae9f4a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L343&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:343 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1bf723e9d053f5e99a786025795c6e20eb0f29" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L383&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:383 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70281ede76f06bfc6378a8694625697a420054ff" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L425&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:425 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846d885b8289d24808893678bbe8a581df4dc9c8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L483&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:483 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53210a315c9a09dbd9342ac135c6f564b48ce852" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L536&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:536 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6370408c4b623574b7b2a33305d881a25ba3dd9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L552&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:552 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c35a20e4b3c6ce0a7c7e988d3346d53d0d8765e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L579&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:579 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834e2df650f4e0782f12af25c2fdd514e9eb8b36" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L646&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:646 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a77654467f1f927694aaf4680916833ec0764b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L674&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:674 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c737199abbc3b83a2fc1ebac5c799ad1d2746ea" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L734&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:734 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727e25c75c9c3a5c7b4c7f29d2237c8db7769eba" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L757&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:757 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837a69be820f838cca7ad7d3f9a3e21cc8d7ee9f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L780&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:780 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44df082041db54bec886dfd82551d616185dd07" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L824&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:824 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196531b259a631eef2211a5ce7f934412e5a5030" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L845&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:845 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5b9706be022d7373d0c9e7b9adce67087ca0a8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L918&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:918 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b9881658887249d4c487753e0b3b187b1dd073" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L965&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:965 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797916c810f6cc03e72692099f992792792a8b72" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/array.js#L989&quot;&gt; EmberArray packages/@ember/-internals/runtime/lib/mixins/array.js:989 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3305d3b79594a53c585bb67945005abcde601c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/container_proxy.js#L110&quot;&gt; ContainerProxyMixin packages/@ember/-internals/runtime/lib/mixins/container_proxy.js:110 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfd09591f746aae82158be0921246b10918d4de" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/container_proxy.js#L23&quot;&gt; ContainerProxyMixin packages/@ember/-internals/runtime/lib/mixins/container_proxy.js:23 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46948e3bbe8dc52f58da2ad852b930f50adb7747" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/container_proxy.js#L49&quot;&gt; ContainerProxyMixin packages/@ember/-internals/runtime/lib/mixins/container_proxy.js:49 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80530f71a1eae33ef31b6dc1f1380378fcb2a709" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/evented.js#L101&quot;&gt; Evented packages/@ember/-internals/runtime/lib/mixins/evented.js:101 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa04eb23219356627be3a9b5f9596a9ddc6a59c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/evented.js#L124&quot;&gt; Evented packages/@ember/-internals/runtime/lib/mixins/evented.js:124 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b446b0db7a0a2ab4bf1000aee6d1e04225343ec" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/evented.js#L139&quot;&gt; Evented packages/@ember/-internals/runtime/lib/mixins/evented.js:139 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62bff05b90440eb565c43d4324ddc4f10b0a259" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/evented.js#L54&quot;&gt; Evented packages/@ember/-internals/runtime/lib/mixins/evented.js:54 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c4f7d7dbabd228b91790bf769d7a27ae9ab702" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/evented.js#L80&quot;&gt; Evented packages/@ember/-internals/runtime/lib/mixins/evented.js:80 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8785fd440dd37ad23fc2aa9b7f6b314d2f23ff" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L138&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:138 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec067f659fff463a2bb6db82ee489dc6a6b4be1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L163&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:163 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babd466b05dfaacf49cfbc4fd33b6c5445fcd71e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L211&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:211 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75376e552b96ab889be767fc254383ec780129af" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L268&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:268 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fbca7018c53c239b37cbf5ff88d79b85c1d627" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L286&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:286 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56843b6701a9c6e6fead3cc37d79332aa741de9f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L374&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:374 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4409b8758302639ff3e626805d59c12271ad3f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L426&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:426 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daab3aa46bcb90d0485cfd9e151e3dcd1fcdbe01" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L448&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:448 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a478bacd8bed8e82c2e954e32b85b00570c117" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L470&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:470 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6427a4d5ffcf1f854cb9b0a6138374035e90c2d0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L487&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:487 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21621126290ebc97cb5e2439569833f90214b34d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/observable.js#L93&quot;&gt; Observable packages/@ember/-internals/runtime/lib/mixins/observable.js:93 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6df78d07de0a86ef224f7d05a116f54b4dc0c1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L101&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:101 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4aeaa7463ef548c5ea85274fe8c58a4a800e345" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L124&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:124 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd70ee2fd61926fb7bbd3fee56dc7256cbb65c39" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L134&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:134 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f5cffc33727c70276495c18e377a29638b6091" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L145&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:145 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467ec99891d906b94ba467c5c015b805b582db31" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L155&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:155 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1653c2c6891af9bbae007e59ef97af3d84b396f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L165&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:165 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfb4b73c83bebda98637e8e42190e9d8a0f5e34" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L18&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:18 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9ce05ecfa894b284db4694c1a4985ee4e7f1da" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L198&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:198 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890311c9b0297b9751fc37c3f017a88b2e32c39f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L208&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:208 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa2833f281f8a38210287ea9159edf0bb013c44" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js#L31&quot;&gt; RegistryProxyMixin packages/@ember/-internals/runtime/lib/mixins/registry_proxy.js:31 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35011c762e825e129239be44f474f9bc9766a059" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L292&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:292 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9047fe259dceb8238505558eb04443905788af7d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L326&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:326 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791d5972bc6ebe3539da6d5ff69025cede0c9b72" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L400&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:400 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78f414a61390c48f549c02003d09c239a978c3c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L475&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:475 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d8559662a757a5b43ab9d20b7ec29df8b5e416" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L493&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:493 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a914a1fccb41a04738c01388d9274cc84cfa80" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L511&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:511 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7554c0d970b82a2122af81a4950a5c3148ba3a1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L538&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:538 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5517158d36350f85332b4e89bb14fe2b7e718ce8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L546&quot;&gt; CoreObject packages/@ember/-internals/runtime/lib/system/core_object.js:546 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2f66b4823ac2d78674a701668fd72249d1fc64" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/class_names_support.js#L31&quot;&gt; Ember.ClassNamesSupport packages/@ember/-internals/views/lib/mixins/class_names_support.js:31 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714a65e7665cd0ad3c47337f4695b3a52398614b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/class_names_support.js#L43&quot;&gt; Ember.ClassNamesSupport packages/@ember/-internals/views/lib/mixins/class_names_support.js:43 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c688c40c9a681af5702e912eb11faac4fac704d1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L119&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:119 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5cce58410ee7f4e0c538b38c24dec7c1357b50" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L144&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:144 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2a9cf3e67a321fe353f3027e175277816abcaf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L15&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:15 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6987f4c350f10dbbaf2d3064167470aab433cca" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L271&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:271 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faa4764143760d380829e098bc2f843ac065499" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L279&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:279 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0436b6e45bd3f24174fe70a3413b31cd2d2d02" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L292&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:292 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a12e220920054c54704118839607fa3cfc0544" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L329&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:329 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c150064a6c6200ebd68214e8074004ab437a8321" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/views/lib/mixins/view_support.js#L349&quot;&gt; Ember.ViewMixin packages/@ember/-internals/views/lib/mixins/view_support.js:349 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63afec1eb4a3cf9dd5a8ac214a9645b8fa72436d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/component/template-only.ts#L6&quot;&gt; Ember.ControllerMixin packages/@ember/component/template-only.ts:6 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07af526016e61400cbbc7fbb0fdd85defdf35b5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/controller/lib/controller_mixin.js#L21&quot;&gt; Ember.ControllerMixin packages/@ember/controller/lib/controller_mixin.js:21 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b883bd091057305be35ef4d520c7d685f4dc7363" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/controller/lib/controller_mixin.js#L41&quot;&gt; Ember.ControllerMixin packages/@ember/controller/lib/controller_mixin.js:41 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eded29d64180c1afa6eb4035431f322e37b1cd72" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L159&quot;&gt; Engine packages/@ember/engine/index.js:159 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043b2d98f0add081cb7f6103bca4c95933995ddc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L306&quot;&gt; Engine packages/@ember/engine/index.js:306 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a71597b22cd3d363a333fecb84f1775a203efd5" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L429&quot;&gt; Engine packages/@ember/engine/index.js:429 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d4cfb7386b08afd16a27d3a7bc4d0655c7aa1c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/instance.js#L124&quot;&gt; EngineInstance packages/@ember/engine/instance.js:124 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a111f1a2fed1981946b172e76dc4474f51dfba" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/instance.js#L62&quot;&gt; EngineInstance packages/@ember/engine/instance.js:62 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f17a46664e96972e82327c21203b87757f4bea" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L19&quot;&gt; TestAdapter packages/ember-testing/lib/adapters/adapter.js:19 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5776649859f1ca1da9961e1f58d87116ff9bb99b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L30&quot;&gt; TestAdapter packages/ember-testing/lib/adapters/adapter.js:30 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3b5fe1579eb6f49a064b671e4f40d18b00444b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L38&quot;&gt; TestAdapter packages/ember-testing/lib/adapters/adapter.js:38 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68f827c48ecb62cfd062d7bba24657b63c09509" translate="yes" xml:space="preserve">
          <source>Initial value for the reduce</source>
          <target state="translated">감소의 초기 값</target>
        </trans-unit>
        <trans-unit id="b9485282b93bdc13abfa06c4f77d2d2cc0945381" translate="yes" xml:space="preserve">
          <source>Initialize the &lt;code&gt;EngineInstance&lt;/code&gt; and return a promise that resolves with the instance itself when the boot process is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513188e8247f5166fe85c6ef6cd4a46a8bf275ab" translate="yes" xml:space="preserve">
          <source>Initialize the application and return a promise that resolves with the &lt;code&gt;Application&lt;/code&gt; object when the boot process is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1968af826592f08e4a7794b6d1cf104a0ad15e" translate="yes" xml:space="preserve">
          <source>Initializer receives an object which has the following attributes: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;initialize&lt;/code&gt;. The only required attribute is &lt;code&gt;initialize&lt;/code&gt;, all others are optional.</source>
          <target state="translated">이니셜 라이저는 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;initialize&lt;/code&gt; 속성을 가진 객체를받습니다 . 필요한 필수 속성은 &lt;code&gt;initialize&lt;/code&gt; 이고 다른 속성은 모두 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="db5e65d8fc7dddd98f6860c2416bcbcc90ec0fba" translate="yes" xml:space="preserve">
          <source>Initializers</source>
          <target state="translated">Initializers</target>
        </trans-unit>
        <trans-unit id="848e48bf4618ddc9ce74ad76146f98a5f01e7bb7" translate="yes" xml:space="preserve">
          <source>Initializers provide an opportunity to access the internal registry, which organizes the different components of an Ember application. Additionally they provide a chance to access the instantiated application. Beyond being used for libraries, initializers are also a great way to organize dependency injection or setup in your own application.</source>
          <target state="translated">이니셜 라이저는 내부 레지스트리에 액세스 할 수있는 기회를 제공하여 Ember 애플리케이션의 다양한 구성 요소를 구성합니다. 또한 인스턴스화 된 응용 프로그램에 액세스 할 수있는 기회를 제공합니다. 이니셜 라이저는 라이브러리에 사용되는 것 외에도 자신의 응용 프로그램에서 종속성 주입 또는 설정을 구성하는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d090c2efffd76209ba4e581188d030c23c6a376c" translate="yes" xml:space="preserve">
          <source>Initializers provide an opportunity to configure your application as it boots.</source>
          <target state="translated">이니셜 라이저는 애플리케이션이 부팅 될 때 구성 할 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e9440074e533c28750337362b62c33438a77bb05" translate="yes" xml:space="preserve">
          <source>Initializing Instances</source>
          <target state="translated">인스턴스 초기화</target>
        </trans-unit>
        <trans-unit id="f741df1b84086157c7eb2c557b9294d2e2b9092b" translate="yes" xml:space="preserve">
          <source>Initiates the destruction of a destroyable object. It runs all associated destructors, and then destroys all children recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4b2597695f278d69ac63bb13b33c4056ef5814" translate="yes" xml:space="preserve">
          <source>Injected properties are lazy loaded; meaning the service will not be instantiated until the property is explicitly called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d316f98643868f8354b5396cfe5fed76d7886a" translate="yes" xml:space="preserve">
          <source>Injected properties are lazy loaded; meaning the service will not be instantiated until the property is explicitly called. Therefore you need to access services in your component using the &lt;code&gt;get&lt;/code&gt; function otherwise you might get an undefined.</source>
          <target state="translated">주입 된 속성은 게으르게로드됩니다. 즉, 속성이 명시 적으로 호출 될 때까지 서비스가 인스턴스화되지 않습니다. 따라서 &lt;code&gt;get&lt;/code&gt; 함수를 사용하여 구성 요소의 서비스에 액세스해야 합니다. 그렇지 않으면 정의되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63a3952129f4ca23237b9608c1aa6cd3e1277fad" translate="yes" xml:space="preserve">
          <source>Injections can also be made on a specific factory by using its full key:</source>
          <target state="translated">전체 키를 사용하여 특정 공장에서 사출을 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="63f60f9b5f9037e2a6f5cd3a2548292899123193" translate="yes" xml:space="preserve">
          <source>Injections can also be performed on specific factories.</source>
          <target state="translated">특정 공장에서 사출을 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf35378ef3ffe89f741950aa7eb194c7c4993798" translate="yes" xml:space="preserve">
          <source>Injections can be made into any class that requires instantiation. This includes all of Ember's major framework classes, such as components, helpers, routes, and the router.</source>
          <target state="translated">인스턴스화가 필요한 모든 클래스에 주입 할 수 있습니다. 여기에는 구성 요소, 도우미, 경로 및 라우터와 같은 모든 Ember의 주요 프레임 워크 클래스가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="51f79a9b0dc18bd2d4108546f7d18e96674bffba" translate="yes" xml:space="preserve">
          <source>Inline &lt;code&gt;if&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee0d2a8ba8f85b71f10a1c9ce41a0716a074297" translate="yes" xml:space="preserve">
          <source>Inline Form</source>
          <target state="translated">인라인 양식</target>
        </trans-unit>
        <trans-unit id="9f3fd2e66c9a9c3b529c8aa543548bd9103dc8b8" translate="yes" xml:space="preserve">
          <source>Inline form</source>
          <target state="translated">인라인 양식</target>
        </trans-unit>
        <trans-unit id="425ee4a954daeb63b6f609d7ecbdd4ab76681158" translate="yes" xml:space="preserve">
          <source>Inline helpers don't need to be used inside HTML tags. They can also be used inside attribute values:</source>
          <target state="translated">인라인 헬퍼는 HTML 태그 안에 사용할 필요가 없습니다. 속성 값 내부에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2c1a5659661ca84b039e1a85d0338109f44cff8" translate="yes" xml:space="preserve">
          <source>Input Helpers</source>
          <target state="translated">입력 헬퍼</target>
        </trans-unit>
        <trans-unit id="e4383db107d940cdc8ce7b7aa8845979116f09c6" translate="yes" xml:space="preserve">
          <source>Inside FastBoot: The Road to Server-Side Rendering</source>
          <target state="translated">Inside FastBoot : 서버 측 렌더링으로가는 길</target>
        </trans-unit>
        <trans-unit id="7702a43bb40b542e6abf31cdd969eb1c5e47942a" translate="yes" xml:space="preserve">
          <source>Inside a controller, a computed property continues to filter &lt;code&gt;this.model&lt;/code&gt; correctly after an action is taken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce12275f40b0cfe934f978dad44b7462b4455ba1" translate="yes" xml:space="preserve">
          <source>Inside of your &lt;code&gt;module&lt;/code&gt; and after setting up the test, we can now start to create our first test case. Here, we can use the &lt;code&gt;QUnit.test&lt;/code&gt; helper and we can give it a descriptive name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a5c03b134c46c8387f9dbae563a16e10eaaeef" translate="yes" xml:space="preserve">
          <source>Inside your templates, you can use &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt;&lt;code&gt;{{link-to}}&lt;/code&gt;&lt;/a&gt; to navigate between routes, using the name that you provided to the &lt;code&gt;route&lt;/code&gt; method.</source>
          <target state="translated">템플릿 내에서 &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt; &lt;code&gt;{{link-to}}&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;route&lt;/code&gt; 방법에 제공 한 이름을 사용하여 경로를 탐색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="759152333bf9030ba779d0a8957a317b27f5182b" translate="yes" xml:space="preserve">
          <source>Inside your templates, you can use &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#LinkTo&quot;&gt;&lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;&lt;/a&gt; to navigate between routes, using the name that you provided to the &lt;code&gt;route&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc632eda95ff355bb22eaf269ff1d1c1db02b263" translate="yes" xml:space="preserve">
          <source>Inspecting Instances</source>
          <target state="translated">인스턴스 검사</target>
        </trans-unit>
        <trans-unit id="eed9c61e76c7ac9a58af8eac372aada55ca1cac5" translate="yes" xml:space="preserve">
          <source>Inspecting Objects via the Container</source>
          <target state="translated">컨테이너를 통한 객체 검사</target>
        </trans-unit>
        <trans-unit id="62ec72096b6de8f901844f8a78088a74346c725a" translate="yes" xml:space="preserve">
          <source>Inspecting Records</source>
          <target state="translated">기록 검사</target>
        </trans-unit>
        <trans-unit id="9a426cdb7fbadec688ded01335c3de6bbc1676a9" translate="yes" xml:space="preserve">
          <source>Inspecting Routes</source>
          <target state="translated">경로 검사</target>
        </trans-unit>
        <trans-unit id="0eded73b9100d0e5e50201ec7bb8235c9ab8bf6c" translate="yes" xml:space="preserve">
          <source>Inspecting Settled Values</source>
          <target state="translated">정산 된 값 검사</target>
        </trans-unit>
        <trans-unit id="3c8d423ed9d1a7a66480ee10abfccf244aea6579" translate="yes" xml:space="preserve">
          <source>Inspecting Templates</source>
          <target state="translated">템플릿 검사</target>
        </trans-unit>
        <trans-unit id="ef24fb15bd1e4edcec19f9f1a3e27cf51582c73d" translate="yes" xml:space="preserve">
          <source>Inspector Version Old on Firefox</source>
          <target state="translated">Firefox의 검사기 버전</target>
        </trans-unit>
        <trans-unit id="b4e46370feb76bf6202a78824eecd6f60e247271" translate="yes" xml:space="preserve">
          <source>Install Ember</source>
          <target state="translated">Ember 설치</target>
        </trans-unit>
        <trans-unit id="ee47e26e88b22d56f5fd44c4d4bc0a61f78ea15d" translate="yes" xml:space="preserve">
          <source>Install Ember using npm:</source>
          <target state="translated">npm을 사용하여 Ember를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="4d6d297c94067912d31459246036cc567c0b064b" translate="yes" xml:space="preserve">
          <source>Install the Mirage addon as follows:</source>
          <target state="translated">다음과 같이 Mirage 애드온을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="7afeb9451e49a7326f03c7dd8db970c09edc4206" translate="yes" xml:space="preserve">
          <source>Installing Addons</source>
          <target state="translated">애드온 설치</target>
        </trans-unit>
        <trans-unit id="d41e4d31273d3e97a14121b3c6cdbc44af6f2898" translate="yes" xml:space="preserve">
          <source>Installing Canary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ed2a425b005ef741d58d8bfec6edbe33ba9670" translate="yes" xml:space="preserve">
          <source>Installing Ember</source>
          <target state="translated">Ember 설치</target>
        </trans-unit>
        <trans-unit id="a5909e7ae601bb0d0fa89a0f2c4b253a35b6a483" translate="yes" xml:space="preserve">
          <source>Installing Ember.</source>
          <target state="translated">Ember 설치.</target>
        </trans-unit>
        <trans-unit id="39e873bdff6969b29cfe389d2536494899d0eb51" translate="yes" xml:space="preserve">
          <source>Installing the Inspector</source>
          <target state="translated">인스펙터 설치</target>
        </trans-unit>
        <trans-unit id="675d60e8f5f449f4d4ffb1d1d99193b41b71b502" translate="yes" xml:space="preserve">
          <source>Instance initializer receives an object which has the following attributes: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;initialize&lt;/code&gt;. The only required attribute is &lt;code&gt;initialize&lt;/code&gt;, all others are optional.</source>
          <target state="translated">인스턴스 이니셜 라이저는 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;initialize&lt;/code&gt; 속성을 가진 객체를받습니다 . 필요한 필수 속성은 &lt;code&gt;initialize&lt;/code&gt; 이고 다른 속성은 모두 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="a1749286245704543beedf7fb5fe566bcc90410e" translate="yes" xml:space="preserve">
          <source>Instance initializers receive an application instance as an argument, providing an opportunity to look up an instance of a registered factory.</source>
          <target state="translated">인스턴스 이니셜 라이저는 애플리케이션 인스턴스를 인수로 수신하여 등록 된 팩토리의 인스턴스를 찾을 수있는 기회를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a3070eddde27f4427bd13e223872160000e3c9cc" translate="yes" xml:space="preserve">
          <source>Instance initializers run after all initializers have run. Because instance initializers run after the app is fully set up. We have access to the store, container, and other items. However, these initializers run after code has loaded and are not allowed to defer readiness.</source>
          <target state="translated">인스턴스 이니셜 라이저는 모든 이니셜 라이저가 실행 된 후에 실행됩니다. 앱이 완전히 설정된 후에 인스턴스 이니셜 라이저가 실행되기 때문입니다. 우리는 상점, 컨테이너 및 기타 품목에 접근 할 수 있습니다. 그러나 이러한 초기화 프로그램은 코드가로드 된 후에 실행되며 준비를 지연시킬 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d6b5394d0439c729abebf7b59d3338cb915ba662" translate="yes" xml:space="preserve">
          <source>Instances are like Plain Old JavaScript Objects (POJOs) in many ways. You can assign values to them however you like, and generally treat them the same:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d417c0066da918ab986006990b8c13e4a1c9d4" translate="yes" xml:space="preserve">
          <source>Instantiation</source>
          <target state="translated">Instantiation</target>
        </trans-unit>
        <trans-unit id="c44692d48940d00d0a96b238137fe9729062b0df" translate="yes" xml:space="preserve">
          <source>Instead of 7 failures there should now be 6 (5 acceptance failures and 1 ESLint). You can also run our specific test by selecting the entry called &quot;Acceptance | list rentals&quot; in the drop down input labeled &quot;Module&quot; on the test UI.</source>
          <target state="translated">7 개의 실패 대신 이제 6 (수락 실패 및 1 개의 ESLint)이 있어야합니다. 테스트 UI의 &quot;모듈&quot;이라고 표시된 드롭 다운 입력에서 &quot;Acceptance | list rentals&quot;항목을 선택하여 특정 테스트를 실행할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f50ebb5a399abffac29c20b0be3eb330adc955d" translate="yes" xml:space="preserve">
          <source>Instead of allowing the component itself to be responsible for the multiple, let's allow it to be passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74de5c4b294d2b54e40fb7a408b75d670e7dcb87" translate="yes" xml:space="preserve">
          <source>Instead of copying the whole controller file over to &lt;code&gt;app/controllers/rentals/index.js&lt;/code&gt; from &lt;code&gt;app/controllers/rentals.js&lt;/code&gt;, we'll just take advantage of JavaScript's import/export feature to re-export the rentals controller as the rentals/index controller:</source>
          <target state="translated">전체 컨트롤러 파일 을 &lt;code&gt;app/controllers/rentals.js&lt;/code&gt; 에서 &lt;code&gt;app/controllers/rentals/index.js&lt;/code&gt; 로 복사하는 대신 JavaScript 가져 오기 / 내보내기 기능을 사용하여 렌탈 컨트롤러를 렌탈 / 인덱스 컨트롤러 :</target>
        </trans-unit>
        <trans-unit id="3711aad9ad6336d0b7b83dc302773491ac63f377" translate="yes" xml:space="preserve">
          <source>Instead of handling all events of a particular type anywhere inside the component's element, you may instead want to limit it to a particular element in the component's template. In this case, it would be more convenient to implement an action instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e0edfe9f7db0ea59c2c8f15ea28331b133d7af" translate="yes" xml:space="preserve">
          <source>Instead of having two different components, one for sent messages and one for received messages, we could instead try to create a single message component. Inside of this message component, we could substitute the avatar and username with generic components, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7923bc76e9fd4e08f714fe6e137a2858710b1ef1" translate="yes" xml:space="preserve">
          <source>Instead of having you copy/paste in CSS to style Super Rentals, we've created an addon called &lt;a href=&quot;https://github.com/ember-learn/ember-cli-tutorial-style&quot;&gt;ember-cli-tutorial-style&lt;/a&gt; that instantly adds CSS to the tutorial. The addon works by generating a file called &lt;code&gt;ember-tutorial.css&lt;/code&gt; and putting that file in the super-rentals &lt;code&gt;vendor&lt;/code&gt; directory.</source>
          <target state="translated">Super Rentals의 스타일을 지정하기 위해 CSS에서 복사 / 붙여 넣기 대신, &lt;a href=&quot;https://github.com/ember-learn/ember-cli-tutorial-style&quot;&gt;자습서에&lt;/a&gt; CSS를 즉시 추가하는 ember-cli-tutorial-style 이라는 애드온을 만들었습니다 . 애드온은 &lt;code&gt;ember-tutorial.css&lt;/code&gt; 라는 파일을 생성하고 해당 파일을 수퍼 렌탈 &lt;code&gt;vendor&lt;/code&gt; 디렉토리 에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="ca28292ce7f50f31efa1596e4641d0e325dcd2a6" translate="yes" xml:space="preserve">
          <source>Instead of passing the action to the &lt;code&gt;on&lt;/code&gt; modifier directly, we used the &lt;code&gt;fn&lt;/code&gt; helper to pass the &lt;code&gt;person&lt;/code&gt; as an argument which our action expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f568a5defe520ce6c3c11a1ce556e733b1aa9e2" translate="yes" xml:space="preserve">
          <source>Instead of thinking about changing the class imperatively when the &lt;code&gt;@isAdmin&lt;/code&gt; variable changes, we can think about how to build a template that produces the right output in both cases, and leave it up to Ember to figure out how to update the HTML output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d36dd0ae36f75e90a37a73be0e626bee05ea5d8" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;this._super()&lt;/code&gt;, you must use standard &lt;code&gt;super&lt;/code&gt; syntax in native classes. See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Super_class_calls_with_super&quot;&gt;MDN docs on classes&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f024ee01f5e19fd875e530403e036fab6448a9d" translate="yes" xml:space="preserve">
          <source>Instead of waiting for the app to request a record, however, you can push records into the store's cache ahead of time.</source>
          <target state="translated">그러나 앱이 레코드를 요청하기를 기다리는 대신 레코드를 미리 스토어의 캐시로 푸시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71b6c01fdce1259f3de17bbd5d8338e91999e02d" translate="yes" xml:space="preserve">
          <source>Instead of writing the above, your code now simply becomes the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841f4a5748521289e1a65dce54c9ce37ca8e11e9" translate="yes" xml:space="preserve">
          <source>Instead, we can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_redirect&quot;&gt;&lt;code&gt;redirect()&lt;/code&gt;&lt;/a&gt; method, which will leave the original transition validated, and not cause the parent route's hooks to fire again:</source>
          <target state="translated">대신 &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_redirect&quot;&gt; &lt;code&gt;redirect()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하면 원래 전환이 확인 된 상태로 유지되고 부모 경로의 후크가 다시 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea5c1c44336998ccb14247d75d7210d7d615e885" translate="yes" xml:space="preserve">
          <source>Instead, we can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#redirect&quot;&gt;&lt;code&gt;redirect()&lt;/code&gt;&lt;/a&gt; method, which will leave the original transition validated, and not cause the parent route's hooks to fire again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40d6c5209a7e39167d83c8235324d8faa272be4" translate="yes" xml:space="preserve">
          <source>Instead, you can do these directly in your template. Here are some before and after examples of each API, converted from classic components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4714b8693a81dc11b8d5e6e528c1308c83e273af" translate="yes" xml:space="preserve">
          <source>Instrument a block of code by using &lt;code&gt;Ember.instrument&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Ember.instrument&lt;/code&gt; 를 사용하여 코드 블록을 계측하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb49b30bf89c4f1a8a29b63caa0a66ed1c9abce4" translate="yes" xml:space="preserve">
          <source>Instrumentation</source>
          <target state="translated">Instrumentation</target>
        </trans-unit>
        <trans-unit id="735c2ed2106031df10a8d9d543c22144c0f6ecaa" translate="yes" xml:space="preserve">
          <source>Integrating with Third-Party Libraries with &lt;code&gt;didInsertElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;didInsertElement&lt;/code&gt; 를 사용 하여 타사 라이브러리와 통합</target>
        </trans-unit>
        <trans-unit id="d9887dfe23d1815b30f1036f12ee20e84d0a4f29" translate="yes" xml:space="preserve">
          <source>Integration Test</source>
          <target state="translated">통합 테스트</target>
        </trans-unit>
        <trans-unit id="d90e0e210d1ca63ab3c367bdca02355b93d95528" translate="yes" xml:space="preserve">
          <source>Integration Testing the Map Component</source>
          <target state="translated">맵 구성 요소 통합 테스트</target>
        </trans-unit>
        <trans-unit id="036a5d47efaf84af91b96bca27d0e3394108b032" translate="yes" xml:space="preserve">
          <source>Integration Tests</source>
          <target state="translated">통합 테스트</target>
        </trans-unit>
        <trans-unit id="720208c4601023e230a0995d3273bf68f35dc35b" translate="yes" xml:space="preserve">
          <source>Integration tests serve as a middle ground between acceptance tests, which only interact with the full system through user endpoints, and unit tests, which interact with specific code algorithms on a micro level. Integration tests verify interactions between various parts of the application, such as behavior between UI controls. They are valuable in ensuring data and actions are properly passed between different parts of the system, and provide confidence that parts of the system will work within the application under multiple scenarios.</source>
          <target state="translated">통합 테스트는 사용자 엔드 포인트를 통해 전체 시스템과 만 상호 작용하는 승인 테스트와 마이크로 레벨에서 특정 코드 알고리즘과 상호 작용하는 단위 테스트 사이의 중간 역할을합니다. 통합 테스트는 UI 컨트롤 간의 동작과 같은 응용 프로그램의 여러 부분 간의 상호 작용을 확인합니다. 시스템의 여러 부분간에 데이터와 작업이 올바르게 전달되도록하는 데 유용하며 시스템의 여러 부분이 여러 시나리오에서 응용 프로그램 내에서 작동 할 것이라는 확신을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5aa64517a07e5e795024ba185ce3ecfc2143955b" translate="yes" xml:space="preserve">
          <source>Interestingly, this pattern holds true for many other types of work. Essentially, batching similar work allows for better pipelining, and further optimization.</source>
          <target state="translated">흥미롭게도이 패턴은 많은 다른 유형의 작업에 적용됩니다. 기본적으로 유사한 작업을 일괄 처리하면 파이프 라인을 개선하고 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d0decc37b81a23cbc1c351c9b1c1d0bd3a693aa" translate="yes" xml:space="preserve">
          <source>Internal, experimental or otherwise unstable flags are marked as private.</source>
          <target state="translated">내부, 실험 또는 불안정한 플래그는 비공개로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ccd6e9e8b473b32fabb47d5caef8201513a5c12d" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;Ember.onerror&lt;/code&gt; is used as Backburner's error handler.</source>
          <target state="translated">내부적으로 &lt;code&gt;Ember.onerror&lt;/code&gt; 는 Backburner의 오류 처리기로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2875d5349682fb04958144652bb90208dd916052" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;{{input type=&quot;checkbox&quot;}}&lt;/code&gt; creates an instance of &lt;code&gt;Ember.Checkbox&lt;/code&gt;, passing arguments from the helper to &lt;code&gt;Ember.Checkbox&lt;/code&gt;'s &lt;code&gt;create&lt;/code&gt; method. You can extend the capablilties of checkbox inputs in your applications by reopening this class. For example, if you wanted to add a css class to all checkboxes in your application:</source>
          <target state="translated">내부적으로 &lt;code&gt;{{input type=&quot;checkbox&quot;}}&lt;/code&gt; 는 도우미에서 &lt;code&gt;Ember.Checkbox&lt;/code&gt; 의 &lt;code&gt;create&lt;/code&gt; 메소드 로 인수를 전달 하여 &lt;code&gt;Ember.Checkbox&lt;/code&gt; 의 인스턴스를 만듭니다 . 이 클래스를 다시 열면 응용 프로그램에서 확인란 입력 기능을 확장 할 수 있습니다. 예를 들어 응용 프로그램의 모든 확인란에 CSS 클래스를 추가하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="dad21de853465a1a9cf38538aa6353986f590036" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;{{input type=&quot;text&quot;}}&lt;/code&gt; creates an instance of &lt;code&gt;Ember.TextField&lt;/code&gt;, passing arguments from the helper to &lt;code&gt;Ember.TextField&lt;/code&gt;'s &lt;code&gt;create&lt;/code&gt; method. You can extend the capabilities of text inputs in your applications by reopening this class. For example, if you are building a Bootstrap project where &lt;code&gt;data-*&lt;/code&gt; attributes are used, you can add one to the &lt;code&gt;TextField&lt;/code&gt;'s &lt;code&gt;attributeBindings&lt;/code&gt; property:</source>
          <target state="translated">내부적으로 &lt;code&gt;{{input type=&quot;text&quot;}}&lt;/code&gt; 는 도우미에서 &lt;code&gt;Ember.TextField&lt;/code&gt; 의 &lt;code&gt;create&lt;/code&gt; 메소드 로 인수를 전달 하여 &lt;code&gt;Ember.TextField&lt;/code&gt; 의 인스턴스를 만듭니다 . 이 클래스를 다시 열어 응용 프로그램에서 텍스트 입력 기능을 확장 할 수 있습니다. 예를 들어 &lt;code&gt;data-*&lt;/code&gt; 속성이 사용되는 Bootstrap 프로젝트를 빌드하는 경우 &lt;code&gt;TextField&lt;/code&gt; 의 &lt;code&gt;attributeBindings&lt;/code&gt; 속성에 프로젝트 를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="252ebd8c6a5ce65309f33e8167d4ec420a837458" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;{{textarea}}&lt;/code&gt; creates an instance of &lt;code&gt;Ember.TextArea&lt;/code&gt;, passing arguments from the helper to &lt;code&gt;Ember.TextArea&lt;/code&gt;'s &lt;code&gt;create&lt;/code&gt; method. You can extend the capabilities of text areas in your application by reopening this class. For example, if you are building a Bootstrap project where &lt;code&gt;data-*&lt;/code&gt; attributes are used, you can globally add support for a &lt;code&gt;data-*&lt;/code&gt; attribute on all &lt;code&gt;{{textarea}}&lt;/code&gt;s' in your app by reopening &lt;code&gt;Ember.TextArea&lt;/code&gt; or &lt;code&gt;Ember.TextSupport&lt;/code&gt; and adding it to the &lt;code&gt;attributeBindings&lt;/code&gt; concatenated property:</source>
          <target state="translated">내부적으로 &lt;code&gt;{{textarea}}&lt;/code&gt; 는 도우미에서 &lt;code&gt;Ember.TextArea&lt;/code&gt; 의 &lt;code&gt;create&lt;/code&gt; 메서드 로 인수를 전달 하여 &lt;code&gt;Ember.TextArea&lt;/code&gt; 인스턴스를 만듭니다 . 이 클래스를 다시 열어 응용 프로그램의 텍스트 영역 기능을 확장 할 수 있습니다. 예를 들어 &lt;code&gt;data-*&lt;/code&gt; 속성이 사용되는 Bootstrap 프로젝트를 빌드하는 경우 &lt;code&gt;Ember.TextArea&lt;/code&gt; 또는 &lt;code&gt;Ember.TextSupport&lt;/code&gt; 를 다시 열어 앱의 모든 &lt;code&gt;{{textarea}}&lt;/code&gt; 에 대해 &lt;code&gt;data-*&lt;/code&gt; 속성에 대한 지원을 전역 적으로 추가 할 수 있습니다. 그리고 &lt;code&gt;attributeBindings&lt;/code&gt; 연결 속성에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="357e9bc3fcd1153fe2d1b4d5bc5d070c1e7045ae" translate="yes" xml:space="preserve">
          <source>Intro to Accessibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4271b8507e7d3eecbb85a5bb391fba4af42bfcf3" translate="yes" xml:space="preserve">
          <source>Introducing Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="31220540b2deb9abe39f6e9d8a4baaeef4156f41" translate="yes" xml:space="preserve">
          <source>InvalidError</source>
          <target state="translated">InvalidError</target>
        </trans-unit>
        <trans-unit id="dfa39bbb2b78da3ab951416562f71faecc7b6970" translate="yes" xml:space="preserve">
          <source>InvalidErrors</source>
          <target state="translated">InvalidErrors</target>
        </trans-unit>
        <trans-unit id="05ae5511949411e495f57fd2ae9a6dc3462c6bb6" translate="yes" xml:space="preserve">
          <source>Inverses</source>
          <target state="translated">Inverses</target>
        </trans-unit>
        <trans-unit id="ba075fb75b6fa88ef0bb5214de3b12a7f0b3bc40" translate="yes" xml:space="preserve">
          <source>Invokes the named method on every object in the receiver that implements it. This method corresponds to the implementation in Prototype 1.6.</source>
          <target state="translated">수신자를 구현하는 수신자의 모든 오브젝트에서 이름 지정된 메소드를 호출합니다. 이 방법은 프로토 타입 1.6의 구현에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f79a59c0c980397492109089436f3488de167441" translate="yes" xml:space="preserve">
          <source>Invokes the passed target/method and optional arguments after a specified period of time. The last parameter of this method must always be a number of milliseconds.</source>
          <target state="translated">지정된 시간이 지나면 전달 된 대상 / 방법 및 선택적 인수를 호출합니다. 이 방법의 마지막 매개 변수는 항상 밀리 초 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5f52bc73a8c778dcde308668b703e0ce34d1892b" translate="yes" xml:space="preserve">
          <source>Invoking Actions Directly on Component Collaborators</source>
          <target state="translated">컴포넌트 협업 자에게 직접 조치 호출</target>
        </trans-unit>
        <trans-unit id="97d85e6d10d7789fd6bc5bb65d7687f54bc507fe" translate="yes" xml:space="preserve">
          <source>Invoking a Component</source>
          <target state="translated">컴포넌트 호출</target>
        </trans-unit>
        <trans-unit id="e8f69b36785ce00890212ea5dddbd36e26f1e8b3" translate="yes" xml:space="preserve">
          <source>Invoking an action</source>
          <target state="translated">액션 호출</target>
        </trans-unit>
        <trans-unit id="3577a2cd50e401d2473dbed6d2ca32d1f010d7ee" translate="yes" xml:space="preserve">
          <source>Invoking it when the &lt;code&gt;isEnabled&lt;/code&gt; property on the component is &lt;code&gt;false&lt;/code&gt; will produce HTML that looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c380a75ce61ad0c2f2cdab05828695c3be6d8ee6" translate="yes" xml:space="preserve">
          <source>Invoking this component when the &lt;code&gt;isEnabled&lt;/code&gt; property is true will produce HTML that looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d3b47005dc4e0f90cc347a49f6fd7cca38cb48" translate="yes" xml:space="preserve">
          <source>Invoking this component will produce HTML that looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69671e1f8b66f70cdc8bfd2e851e71c5bae5c4ff" translate="yes" xml:space="preserve">
          <source>Invoking this component will produce output that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9c721bd54f5d19f4c495b0b3366be2d0a55d0a" translate="yes" xml:space="preserve">
          <source>Irregular keys can be mapped with a custom serializer. The &lt;code&gt;attrs&lt;/code&gt; object can be used to declare a simple mapping between property names on &lt;code&gt;Model&lt;/code&gt; records and payload keys in the serialized JSON object representing the record. An object with the property key can also be used to designate the attribute's key on the response payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f2bff11f39777d3a27d7c76a5fc48b0bd040c4" translate="yes" xml:space="preserve">
          <source>Irregular keys can be mapped with a custom serializer. The &lt;code&gt;attrs&lt;/code&gt; object can be used to declare a simple mapping between property names on DS.Model records and payload keys in the serialized JSON object representing the record. An object with the property key can also be used to designate the attribute's key on the response payload.</source>
          <target state="translated">불규칙한 키는 사용자 정의 시리얼 라이저로 매핑 할 수 있습니다. &lt;code&gt;attrs&lt;/code&gt; 객체는 기록을 나타내는 직렬화 된 JSON 객체의 DS.Model 기록과 페이로드 키에 대한 속성 이름과 간단한 매핑을 선언 할 수 있습니다. 속성 키가있는 객체를 사용하여 응답 페이로드에서 속성 키를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7d5ea4a891f7bca54fa3aac157a9411da91367a" translate="yes" xml:space="preserve">
          <source>Is the equivalent of:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a29441f3057135c2e77318149eda8b832f59420d" translate="yes" xml:space="preserve">
          <source>It also binds the function directly to the instance, so it can be used in any context and will correctly refer to the class it came from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cde975491c4027773fd4fc8696c0b019485084" translate="yes" xml:space="preserve">
          <source>It also does not automatically fire any change events. You must manually notify any changes if you want to observe this property.</source>
          <target state="translated">또한 변경 이벤트를 자동으로 발생시키지 않습니다. 이 특성을 관찰하려면 변경 사항을 수동으로 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="19fc16c9777930720ff27e06501c7dbdb8dbcd93" translate="yes" xml:space="preserve">
          <source>It also means that the store can detect that two different components are asking for the same model, allowing your app to only fetch the data from the server once. You can think of the store as a read-through cache for your app's models. Both routes and their corresponding controllers have access to this shared store; when they need to display or modify a model, they first ask the store for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106d72e4675f0b5aaf1513a92c66f00c58daf06f" translate="yes" xml:space="preserve">
          <source>It also means that the store can detect that two different components are asking for the same model, allowing your app to only fetch the data from the server once. You can think of the store as a read-through cache for your app's models. Both your components and routes have access to this shared store; when they need to display or modify a model, they first ask the store for it.</source>
          <target state="translated">또한 스토어는 두 개의 서로 다른 구성 요소가 동일한 모델을 요구하고 있음을 감지하여 앱이 서버에서 한 번만 데이터를 가져올 수 있도록합니다. 스토어를 앱 모델의 읽기 캐시로 생각할 수 있습니다. 구성 요소와 경로 모두이 공유 저장소에 액세스 할 수 있습니다. 모델을 표시하거나 수정해야하는 경우 먼저 상점에 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="54891660039af50f14b77b3add713084079a60b4" translate="yes" xml:space="preserve">
          <source>It also supports an optional named argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13be1efe73dd3747b47d95a475ffe45607e47b1" translate="yes" xml:space="preserve">
          <source>It also supports urls where ids are passed as a query param, such as &lt;code&gt;/comments?id=1&lt;/code&gt; but not those where there is more than 1 query param such as &lt;code&gt;/comments?id=2&amp;amp;name=David&lt;/code&gt; Currently only the query param of &lt;code&gt;id&lt;/code&gt; is supported. If you need to support others, please override this or the &lt;code&gt;_stripIDFromURL&lt;/code&gt; method.</source>
          <target state="translated">또한 id가 쿼리 매개 변수로 전달되는 URL (예 : &lt;code&gt;/comments?id=1&lt;/code&gt; 만하지 그 곳이 같은 2 개 이상의 쿼리 PARAM &lt;code&gt;/comments?id=2&amp;amp;name=David&lt;/code&gt; 현재의 쿼리 PARAM &lt;code&gt;id&lt;/code&gt; 있습니다 지원됩니다. 다른 사람을 지원해야하는 &lt;code&gt;_stripIDFromURL&lt;/code&gt; 방법 또는 _stripIDFromURL 메소드 를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="ecde96cd7188fa9b9f93f4eef2e0ff2041e0523b" translate="yes" xml:space="preserve">
          <source>It can handle actions that involve changing a model or transitioning to a new route.</source>
          <target state="translated">모델을 변경하거나 새 경로로 전환하는 작업을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="d943bc2d625203c129c82c3749810334d7cb9836" translate="yes" xml:space="preserve">
          <source>It can load a model that is then available to the template.</source>
          <target state="translated">템플릿에서 사용할 수있는 모델을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66428354fba7e5eaa0f2419172c9e2bc28b70f11" translate="yes" xml:space="preserve">
          <source>It can redirect to a new route, such as if the user isn't allowed to visit that part of the app.</source>
          <target state="translated">사용자가 앱의 해당 부분을 방문 할 수없는 경우와 같이 새로운 경로로 리디렉션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="848759147648109ad5505c5e8f5f535d3baded85" translate="yes" xml:space="preserve">
          <source>It can render a template.</source>
          <target state="translated">템플릿을 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfefa7d1fea9b7e181bad30efcdb8c1c3e2abbad" translate="yes" xml:space="preserve">
          <source>It can then be invoked like this:</source>
          <target state="translated">그런 다음 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9ad8d3e366b6115749122bb4f353de089786914" translate="yes" xml:space="preserve">
          <source>It does not group records that have differing base urls, such as for example: &lt;code&gt;/posts/1/comments/2&lt;/code&gt; and &lt;code&gt;/posts/2/comments/3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/posts/1/comments/2&lt;/code&gt; 및 같은 기본 URL이 다른 레코드는 그룹화하지 않습니다. &lt;code&gt;/posts/2/comments/3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af70237e15d854c81dae1def0c66ed7769df2de8" translate="yes" xml:space="preserve">
          <source>It does not require a high level of knowledge for you to deploy your website to production. Netlify offers a free account option and no credit card is required. These Guides themselves are hosted on Netlify, while other parts of &lt;code&gt;emberjs.com&lt;/code&gt; are hosted using Heroku, Fastly, GitHub pages, and AWS. Overall, Ember developers have many options for how they deploy their apps! Netlify is just one of the many options you have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d9f6f871d4b80d957a1fd495668f8d84329353" translate="yes" xml:space="preserve">
          <source>It does not run any &lt;code&gt;Component&lt;/code&gt; lifecycle hooks (such as &lt;code&gt;didInsertElement&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 수명주기 후크 (예 : &lt;code&gt;didInsertElement&lt;/code&gt; )를 실행하지 않습니다. )를 .</target>
        </trans-unit>
        <trans-unit id="b5420dc54e296dc0d400f043319cfcbe1f72dc4e" translate="yes" xml:space="preserve">
          <source>It does not set up an &lt;code&gt;EventDispatcher&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventDispatcher&lt;/code&gt; 를 설정하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1e16a501a236c5f520c0e8fd4ff4e8daffbff90f" translate="yes" xml:space="preserve">
          <source>It does not use &lt;code&gt;jQuery&lt;/code&gt; to append the root view; the &lt;code&gt;rootElement&lt;/code&gt; (either specified as a subsequent option or on the application itself) must already be an &lt;code&gt;Element&lt;/code&gt; in the given &lt;code&gt;document&lt;/code&gt; (as opposed to a string selector).</source>
          <target state="translated">&lt;code&gt;jQuery&lt;/code&gt; 를 사용 하여 루트보기를 추가 하지 않습니다 . &lt;code&gt;rootElement&lt;/code&gt; (중 후속 옵션 또는 응용 프로그램 자체에 지정)은 이미이어야 &lt;code&gt;Element&lt;/code&gt; 주어진에서 &lt;code&gt;document&lt;/code&gt; (문자열 선택과 반대로).</target>
        </trans-unit>
        <trans-unit id="de59ad4b2f3c50c4df6422969db899bc32ff4fb9" translate="yes" xml:space="preserve">
          <source>It does so by scheduling work on specific queues. These queues have a priority, and are processed to completion in priority order.</source>
          <target state="translated">특정 대기열에 대한 작업을 예약하여 수행합니다. 이 큐는 우선 순위를 가지며 우선 순위에 따라 완료 될 때까지 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="57763620f48e2f296ab05c5c4a05233ac15a34e5" translate="yes" xml:space="preserve">
          <source>It doesn't automatically apply the site title (though you can imagine how to add that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3995ef36f41be9a185a5131f2aec415ceec8b257" translate="yes" xml:space="preserve">
          <source>It doesn't provide any conventions for constructing nested page titles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e876e868b3e2f18018b95e44cf2d1b8b7cf7c7f6" translate="yes" xml:space="preserve">
          <source>It doesn't work when the page is rendered server-side with FastBoot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14f0a2033c952099422d5b52885ae11d459bf4a" translate="yes" xml:space="preserve">
          <source>It first parses the fullName into an object using &lt;code&gt;parseName&lt;/code&gt;.</source>
          <target state="translated">먼저 &lt;code&gt;parseName&lt;/code&gt; 을 사용하여 fullName을 객체로 구문 분석합니다. .</target>
        </trans-unit>
        <trans-unit id="72060bbca90e8e53b62aaa295cc277cb77017045" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; okay to assign objects or arrays as properties, because they are shared between instances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4183250b925d6faad9810cb511527d9e2c23143" translate="yes" xml:space="preserve">
          <source>It is a singleton, which means there is only one instance of the service object in browser. This will allow us to keep map data while the user navigates around the app, so that returning to a page doesn't require it to reload its maps.</source>
          <target state="translated">싱글 톤이므로 브라우저에 서비스 개체 인스턴스가 하나만 있음을 의미합니다. 이를 통해 사용자가 앱을 탐색하는 동안지도 데이터를 유지할 수 있으므로 페이지를 다시 방문해도지도를 다시로드 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0244a78888548b984f551beea3ed5101ef9ac006" translate="yes" xml:space="preserve">
          <source>It is also possible to call &lt;code&gt;this._super(...arguments)&lt;/code&gt; from within an action handler if it overrides a handler defined on a parent class or mixin:</source>
          <target state="translated">&lt;code&gt;this._super(...arguments)&lt;/code&gt; 호출하는 것도 가능합니다 ._super (... arguments)부모 클래스 또는 mixin에 정의 된 핸들러를 재정의하는 경우 액션 핸들러 내에서 .</target>
        </trans-unit>
        <trans-unit id="816423f038396b703f76c88d694b47c9e9e26f7b" translate="yes" xml:space="preserve">
          <source>It is also possible to override the default event in this manner:</source>
          <target state="translated">이 방법으로 기본 이벤트를 재정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8065ead8b4e2e7f7b40cba724e36bbee0a8fcff4" translate="yes" xml:space="preserve">
          <source>It is also possible to pass a URL (a string that starts with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a204cfd2ad02dbf830f7ff8de9632a5ee09b122" translate="yes" xml:space="preserve">
          <source>It is also possible to pass a URL (a string that starts with a &lt;code&gt;/&lt;/code&gt;). This is intended for testing and debugging purposes and should rarely be used in production code.</source>
          <target state="translated">URL ( &lt;code&gt;/&lt;/code&gt; 로 시작하는 문자열)을 전달할 수도 있습니다. . 이것은 테스트 및 디버깅 목적으로 제작되었으며 프로덕션 코드에는 거의 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c1bcfb95917b9097db6aec4b90e7ea7e3662c45" translate="yes" xml:space="preserve">
          <source>It is also possible to remove a record from a &lt;code&gt;hasMany&lt;/code&gt; relationship:</source>
          <target state="translated">&lt;code&gt;hasMany&lt;/code&gt; 에서 레코드를 제거 할 수도 있습니다 관계 .</target>
        </trans-unit>
        <trans-unit id="d903c48dfda77b1fae1cb884f379c551197518d2" translate="yes" xml:space="preserve">
          <source>It is also valid to wrap the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element around the &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ac9d0fe7e98f9988e8e9b5e9f4e007a92e98ac" translate="yes" xml:space="preserve">
          <source>It is clear to your collaborators you are using a component and not a helper in a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736f62e01814063db4e5d228bb031393f8ddbf04" translate="yes" xml:space="preserve">
          <source>It is important to note that injections can only be performed on classes that are instantiated by Ember itself. Instantiating a class directly (via &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt;) bypasses the dependency injection system.</source>
          <target state="translated">주입은 Ember 자체에서 인스턴스화 한 클래스에서만 수행 할 수 있습니다. &lt;code&gt;create&lt;/code&gt; 또는 &lt;code&gt;new&lt;/code&gt; 를 통해 클래스를 직접 인스턴스화 하면 종속성 주입 시스템이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1a2c5aff9afdabb69d58e5f105a7876ee5e13ed4" translate="yes" xml:space="preserve">
          <source>It is important to note that these properties stay in sync (technically known as being &quot;bound&quot;). That is, if the value of &lt;code&gt;componentProperty&lt;/code&gt; changes in the component, &lt;code&gt;outerProperty&lt;/code&gt; will be updated to reflect that change. The reverse is true as well.</source>
          <target state="translated">이러한 속성은 동기화 된 상태로 유지됩니다 (기술적으로 &quot;바운드&quot;라고 함). 즉, &lt;code&gt;componentProperty&lt;/code&gt; 값이 구성 요소에서 변경되면 &lt;code&gt;outerProperty&lt;/code&gt; 가 해당 변경 사항을 반영하도록 업데이트됩니다. 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="b7c38a77f77239bcd6c7c5c049bd129bd4ab0b74" translate="yes" xml:space="preserve">
          <source>It is important to use a screen reader when checking to make sure your application is accessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa25cbd6830c3c85b8a5d10f25b301eee999023" translate="yes" xml:space="preserve">
          <source>It is important to use the methods in this class to modify arrays so that changes are observable. This allows the binding system in Ember to function correctly.</source>
          <target state="translated">변경 사항을 관찰 할 수 있도록이 클래스의 메소드를 사용하여 배열을 수정하는 것이 중요합니다. 이를 통해 Ember의 바인딩 시스템이 올바르게 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebd441bb8da34edd6941dd14316d0d5a024ef3a7" translate="yes" xml:space="preserve">
          <source>It is injected with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Service_locator_pattern&quot;&gt;service locator&lt;/a&gt;, meaning it will abstract the maps API from the code that uses it, allowing for easier refactoring and maintenance.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Service_locator_pattern&quot;&gt;서비스 로케이터&lt;/a&gt; 가 주입됩니다. 이를 사용하는 코드에서 맵 API를 추상화하므로 리팩토링 및 유지 보수가 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="05dc3385ed904252111f2287793f21cdbec5af62" translate="yes" xml:space="preserve">
          <source>It is lazy-loaded, meaning it won't be initialized until it is called the first time. In some cases this can reduce your app's processor load and memory consumption.</source>
          <target state="translated">지연로드되어 처음 호출 될 때까지 초기화되지 않습니다. 경우에 따라 앱의 프로세서로드 및 메모리 소비가 줄어들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96706b580f77ac228dd5c095add7581e6df8d45c" translate="yes" xml:space="preserve">
          <source>It is not possible to nest curly braces &lt;code&gt;{{}}&lt;/code&gt;, so the correct way to nest a helper is by using parentheses &lt;code&gt;()&lt;/code&gt;:</source>
          <target state="translated">중괄호 &lt;code&gt;{{}}&lt;/code&gt; 를 중첩 할 수 없으므로 도우미를 중첩하는 올바른 방법은 괄호 &lt;code&gt;()&lt;/code&gt; 를 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="5a34ae081d6ad7ef3db656f4e20bb672dd9d1897" translate="yes" xml:space="preserve">
          <source>It is now &lt;em&gt;safe&lt;/em&gt; to assign objects to fields! You can assign an array or an object to your field, and it won't be shared between instances of the class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d382c795ad0dafce1751a155dc0752b4e06f7f8" translate="yes" xml:space="preserve">
          <source>It is of course possible to optimize these scenarios on a case-by-case basis, but getting them for free is much nicer. Using the run loop, we can apply these classes of optimizations not only for each scenario, but holistically app-wide.</source>
          <target state="translated">물론 이러한 시나리오를 사례별로 최적화하는 것이 가능하지만 무료로 제공하는 것이 훨씬 좋습니다. 런 루프를 사용하여 각 시나리오뿐만 아니라 전체적으로 앱 전체에 이러한 클래스의 최적화를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bb47bb233523570bc795e6f893d899cde3bbaec" translate="yes" xml:space="preserve">
          <source>It is okay to assign objects and arrays in class fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca09294a9dedbdf48fcb1c2175abb9ddafbd89a" translate="yes" xml:space="preserve">
          <source>It is only triggered once when the component element is first rendered.</source>
          <target state="translated">컴포넌트 요소가 처음 렌더링 될 때 한 번만 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="31e71bc2651a377a04a619124130d27ceb83c8da" translate="yes" xml:space="preserve">
          <source>It is possible to extend classic classes with native syntax, and to toggle back and forth between the two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95a79760ddea96bf135fd487d923a46ebafea48" translate="yes" xml:space="preserve">
          <source>It is possible to handle event types other than &lt;code&gt;click&lt;/code&gt; by implementing the following event handler methods. In addition, custom events can be registered by using &lt;code&gt;Application.customEvents&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f2ce78fb9e8944c5c645013bf945275c32999d" translate="yes" xml:space="preserve">
          <source>It is possible to support both block and non-block usage of a component from a single component template using the &lt;code&gt;hasBlock&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;hasBlock&lt;/code&gt; 을 사용하여 단일 컴포넌트 템플릿에서 컴포넌트의 블록 및 비 블록 사용을 모두 지원할 수 있습니다 속성을 있습니다.</target>
        </trans-unit>
        <trans-unit id="164ff56fb6513f1655d02706e325c8dd02cfcac9" translate="yes" xml:space="preserve">
          <source>It is recommended that applications define only a single &lt;code&gt;application&lt;/code&gt; adapter and serializer where possible, only implementing an adapter specific to the &lt;code&gt;type&lt;/code&gt; when absolutely necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b3b7b36d0444f3557aa97fc63911e543111e68" translate="yes" xml:space="preserve">
          <source>It is recommended that applications define only a single &lt;code&gt;application&lt;/code&gt; adapter and serializer where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0696e39f5117f03be4cd280654fdeed46d46faa4" translate="yes" xml:space="preserve">
          <source>It is recommended that apps write their own serializer to best suit the needs of their API and application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd96e0c79318a8ac344e8a1bd4d0ae672525498" translate="yes" xml:space="preserve">
          <source>It is recommended that components and helpers be tested with integration tests because the component interacts with the system in the same way that it will within the context of the application, including being rendered from a template and receiving Ember's lifecycle hooks.</source>
          <target state="translated">구성 요소와 도우미는 템플릿에서 렌더링되고 Ember의 수명주기 후크를 포함하여 응용 프로그램 컨텍스트 내에서와 동일한 방식으로 시스템과 상호 작용하기 때문에 통합 테스트로 테스트하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b758927b0b79cbcbc821c6356b7068cec2c17282" translate="yes" xml:space="preserve">
          <source>It is recommended that you &lt;em&gt;enable&lt;/em&gt; this feature. Existing applications adopting this optional feature should add a &lt;code&gt;.js&lt;/code&gt; file for any existing template-only components containing a basic Ember component class. This will maintain backwards compatibility for existing templates while new template-only components gain the advantages of this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9b419616f28434dfe0570866f4f0345296f63b" translate="yes" xml:space="preserve">
          <source>It is the equivalent of:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7902d81b612955574d7c92466fdc2176fc766295" translate="yes" xml:space="preserve">
          <source>It is very important that you properly configure the targets of your app so you get the smallest and fastest code possible.</source>
          <target state="translated">가장 작고 빠른 코드를 얻을 수 있도록 앱의 대상을 올바르게 구성하는 것이 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="eb371b0485855487bdd6ae4ba98f3f3947de49cb" translate="yes" xml:space="preserve">
          <source>It loads a model that is then available to the template.</source>
          <target state="translated">템플릿에서 사용할 수있는 모델을로드합니다.</target>
        </trans-unit>
        <trans-unit id="0470ee8bc47a065dad59342962117de1ff0468c9" translate="yes" xml:space="preserve">
          <source>It loads a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7206b41d875d67c66648dc7597b405b54b98768" translate="yes" xml:space="preserve">
          <source>It may not be absolutely robust if data in your app changes &lt;em&gt;a lot&lt;/em&gt; (imagine a real time app).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e7ec69f95a8495681a2796c9ec95fa542249b0" translate="yes" xml:space="preserve">
          <source>It means that the data persistence library you're using does not support the Inspector. If you are the library's author, &lt;a href=&quot;../data#toc_building-a-data-custom-adapter&quot;&gt;see this section&lt;/a&gt; on how to add Inspector support to your library.</source>
          <target state="translated">사용중인 데이터 지속성 라이브러리가 인스펙터를 지원하지 않음을 의미합니다. 라이브러리 작성자 인 &lt;a href=&quot;../data#toc_building-a-data-custom-adapter&quot;&gt;경우이 섹션을 참조하십시오.&lt;/a&gt; 에 인스펙터 지원을 추가하는 방법에 대한 을 .</target>
        </trans-unit>
        <trans-unit id="8f338927e541fc0d4181c7036937b8bd08a8bfde" translate="yes" xml:space="preserve">
          <source>It receives three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddec540f432bf29ce5af45f73a322ca609ae9234" translate="yes" xml:space="preserve">
          <source>It renders a template, which has access to the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc54342eec20b44f775101ece554b7eb16c40ce" translate="yes" xml:space="preserve">
          <source>It renders a template.</source>
          <target state="translated">템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="eb9df7c2beb261554bb53cb2f30738bcd6b22bc3" translate="yes" xml:space="preserve">
          <source>It sets the &lt;code&gt;location&lt;/code&gt; option to &lt;code&gt;&quot;none&quot;&lt;/code&gt;. (If you would like to use the location adapter specified in the app's router instead, you can also specify &lt;code&gt;{ location: null }&lt;/code&gt; to specifically opt-out.)</source>
          <target state="translated">&lt;code&gt;location&lt;/code&gt; 옵션을 &lt;code&gt;&quot;none&quot;&lt;/code&gt; 으로 설정합니다 . (앱 라우터에 지정된 위치 어댑터를 대신 사용하려면 &lt;code&gt;{ location: null }&lt;/code&gt; 을 지정하여 구체적으로 선택 해제 할 수도 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="13ece96138a6c131d2253e7ce3f7b3a58be65e37" translate="yes" xml:space="preserve">
          <source>It should return &lt;code&gt;true&lt;/code&gt; to include the item in the results, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">그것은 반환해야 &lt;code&gt;true&lt;/code&gt; 결과의 항목에 포함 &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="595581b2eb635c9b0ab9e226f495f5eb4b547bc5" translate="yes" xml:space="preserve">
          <source>It should return a falsey value to include the item in the results.</source>
          <target state="translated">결과에 항목을 포함하려면 잘못된 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="793898dc6bb50a998edac2a2e17f267366e83ae2" translate="yes" xml:space="preserve">
          <source>It should return the &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f95dca6a5d335744ff610041ae183457b2d36f3" translate="yes" xml:space="preserve">
          <source>It should return the &lt;code&gt;true&lt;/code&gt; to include the item in the results, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">결과에 항목을 포함 하려면 &lt;code&gt;true&lt;/code&gt; 를 반환하고 &lt;code&gt;false&lt;/code&gt; 그렇지 않으면 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="8e90973a74b06c6c1a6929e10239465a0f60ca1e" translate="yes" xml:space="preserve">
          <source>It should return the mapped value.</source>
          <target state="translated">매핑 된 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e44eb34bca5320473a67cdf0cb0c001acfb76350" translate="yes" xml:space="preserve">
          <source>It takes the type of the record that is being normalized (as a DS.Model class), the property where the hash was originally found, and the hash to normalize.</source>
          <target state="translated">DS.Model 클래스로 정규화되는 레코드 유형, 원래 해시가 발견 된 속성 및 정규화 할 해시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9b14a13c285a66355fb2df62d996cd9fd1e6eefb" translate="yes" xml:space="preserve">
          <source>It takes the type of the record that is being normalized (as a Model class), the property where the hash was originally found, and the hash to normalize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb781825c3020ad9b46cc6e97c6fb632ace99b1" translate="yes" xml:space="preserve">
          <source>It will &lt;em&gt;not&lt;/em&gt; error if the method does not exist on the parent class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bb9a776e2d407d936255e766e8e97d7158a8b0" translate="yes" xml:space="preserve">
          <source>It will ensure that you can use the newest features in the language and know that they will be transformed to JavaScript that can run in every browser you support. That usually means generating ES5-compatible code that can work on any modern browser, back to Internet Explorer 9.</source>
          <target state="translated">언어의 최신 기능을 사용하고 지원하는 모든 브라우저에서 실행할 수있는 JavaScript로 변환 될 것임을 알 수 있습니다. 이는 일반적으로 최신 브라우저에서 Internet Explorer 9로 작동 할 수있는 ES5 호환 코드를 생성하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f3d761d460e584c27e23735f31c673f5c959e9a7" translate="yes" xml:space="preserve">
          <source>It will first normalize the payload, so you can use this to push in data streaming in from your server structured the same way that fetches and saves are structured.</source>
          <target state="translated">먼저 페이로드를 정규화하므로이를 사용하여 페치 및 저장이 구조화되는 것과 동일한 방식으로 서버에서 데이터 스트리밍을 푸시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97205fd78efb78ec632a286586b8491a2096b518" translate="yes" xml:space="preserve">
          <source>It will result in the following HTML output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ba78255bce3833fe0aabf2fa99e33eb008868b" translate="yes" xml:space="preserve">
          <source>It will return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097a0499174e30d43defaa7dec5f9141c032afae" translate="yes" xml:space="preserve">
          <source>It's clear when you are accessing arguments passed to the component, and when you are accessing fields and properties of the component itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a611f14dad448ad17131dcfc3fb79af81bd95d" translate="yes" xml:space="preserve">
          <source>It's important to note that &lt;code&gt;DS.RecordArray&lt;/code&gt; is not a JavaScript array, it's an object that implements &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;&lt;code&gt;Ember.Enumerable&lt;/code&gt;&lt;/a&gt;. This is important because, for example, if you want to retrieve records by index, the &lt;code&gt;[]&lt;/code&gt; notation will not work--you'll have to use &lt;code&gt;objectAt(index)&lt;/code&gt; instead.</source>
          <target state="translated">그것은주의하는 것이 중요 &lt;code&gt;DS.RecordArray&lt;/code&gt; 는 자바 스크립트 배열이 아닌, 그것을 구현하는 객체의 &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt; &lt;code&gt;Ember.Enumerable&lt;/code&gt; &lt;/a&gt; . 예를 들어 인덱스로 레코드를 검색하려는 경우 &lt;code&gt;[]&lt;/code&gt; 표기법이 작동하지 않으므로 &lt;code&gt;objectAt(index)&lt;/code&gt; 를 사용해야 하므로 이는 중요합니다. 대신 합니다.</target>
        </trans-unit>
        <trans-unit id="bb3c6d931c2b4f725098c65e52f962ec8baaca8d" translate="yes" xml:space="preserve">
          <source>It's important to note that &lt;code&gt;RecordArray&lt;/code&gt; is not a JavaScript array, it's an object that implements &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/MutableArray&quot;&gt;&lt;code&gt;MutableArray&lt;/code&gt;&lt;/a&gt;. This is important because, for example, if you want to retrieve records by index, the &lt;code&gt;[]&lt;/code&gt; notation will not work--you'll have to use &lt;code&gt;objectAt(index)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38ba3c8467ede559e7542b5ab8c68d824b1c94c" translate="yes" xml:space="preserve">
          <source>It's important to note that &lt;code&gt;foo.bar.loading&lt;/code&gt; is not considered now.</source>
          <target state="translated">이 점에 유의하는 것이 중요 &lt;code&gt;foo.bar.loading&lt;/code&gt; 가 지금 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c8d3bd4a2ec03a0798c2c4a59d8c91ddd37dfbe6" translate="yes" xml:space="preserve">
          <source>It's important to note that &lt;code&gt;user.about.loading&lt;/code&gt; template is not considered now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0e7de7105a3ea07d5b5d136a78f916de297e00" translate="yes" xml:space="preserve">
          <source>It's important to note that for &lt;code&gt;slow-model&lt;/code&gt; itself, Ember will not try to find a &lt;code&gt;slow-model.loading&lt;/code&gt; template but for the rest of the hierarchy either syntax is acceptable. This can be useful for creating a custom loading screen for a leaf route like &lt;code&gt;slow-model&lt;/code&gt;.</source>
          <target state="translated">그것은을 위해 참고하는 것이 중요 &lt;code&gt;slow-model&lt;/code&gt; 자체 엠버가 찾으려고하지 않습니다 &lt;code&gt;slow-model.loading&lt;/code&gt; 템플릿을하지만, 계층 구조의 나머지 부분에 대한 구문 중 하나가 허용됩니다. 이는 &lt;code&gt;slow-model&lt;/code&gt; 과 같은 리프 경로에 대한 사용자 정의 로딩 화면을 만드는 데 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="989b16fa94bfc82e5b67c6376aab3b30012fb9c9" translate="yes" xml:space="preserve">
          <source>It's important to note that only &lt;em&gt;explicit&lt;/em&gt; injections are available during class construction (e.g. injections added using &lt;code&gt;@service&lt;/code&gt;). If you still rely on &lt;em&gt;implicit&lt;/em&gt; injections, like Ember Data automatically injecting the &lt;code&gt;store&lt;/code&gt; service, you will need to add it explicitly instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d82ae5873cae9b1484e2f66ead85c5c3f5df30" translate="yes" xml:space="preserve">
          <source>It's important to note that setting tracked properties will always trigger an update, even if the property is set to the same value as it was before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370e4b0af00d33cc321c19dc91113aadbb57f8ee" translate="yes" xml:space="preserve">
          <source>It's important to note that the &lt;code&gt;@each&lt;/code&gt; key can be dependant on more than one key. For example, if you are using &lt;code&gt;Ember.computed&lt;/code&gt; to sort an array by multiple keys, you would declare the dependency with braces: &lt;code&gt;todos.@each.{priority,title}&lt;/code&gt;</source>
          <target state="translated">그것은 있음에 유의해야 &lt;code&gt;@each&lt;/code&gt; 의 키가 두 개 이상의 키에 종속 될 수 있습니다. 예를 들어 &lt;code&gt;Ember.computed&lt;/code&gt; 를 사용하여 여러 키로 배열을 정렬하는 경우 중괄호를 사용하여 의존성을 선언합니다. &lt;code&gt;todos.@each.{priority,title}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d426e41640853504b1db2a4fed101d2c3fe06f5b" translate="yes" xml:space="preserve">
          <source>It's important to note that the template scope inside the component block is the same as outside. If a property is available in the template outside the component, it is also available inside the component block.</source>
          <target state="translated">구성 요소 블록 내부의 템플리트 범위는 외부와 동일합니다. 컴포넌트 외부의 템플리트에서 특성을 사용할 수있는 경우 컴포넌트 블록 내에서도 특성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63138abe44d68fea3beee0d9dfed6ec0270141e7" translate="yes" xml:space="preserve">
          <source>It's important to note that these are &lt;em&gt;not&lt;/em&gt; the same as computed properties, they don't have caching by default or have dependencies, and they rerun every time they are used. In order to have getters and setters &lt;em&gt;rerender&lt;/em&gt; when values have changed, you must either decorate them with the &lt;code&gt;@computed&lt;/code&gt; decorator, or use &lt;em&gt;tracked properties&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d86c45ed2500eea0a188163f7e07ffd0e7ee0a" translate="yes" xml:space="preserve">
          <source>It's not uncommon to use POJOs in Ember code for storing state, representing some models, etc. This works because &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; can be used for any path, on any object, whether or not its an &lt;code&gt;EmberObject&lt;/code&gt;, and whether or not the property was declared in advance. This is part of what lead to the &quot;implicit&quot; property problem - you &lt;code&gt;set&lt;/code&gt; any property you wanted on an existing object and it would work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395b3a206f9b250f44d84d85b98a2a03df3efad3" translate="yes" xml:space="preserve">
          <source>It's super handy for taking one or more normal properties and transforming or manipulating their data to create a new value.</source>
          <target state="translated">하나 이상의 일반 속성을 가져 와서 데이터를 변환하거나 조작하여 새로운 가치를 창출하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0f29a2d9bb79c35f088bfe039e16e43e08922a23" translate="yes" xml:space="preserve">
          <source>It's useful for understanding which objects Ember is finding when it does a lookup and which it is generating automatically for you.</source>
          <target state="translated">Ember가 조회 할 때 찾고있는 객체와 자동으로 생성되는 객체를 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7ccdd5be3ad6b59bbbd2a954dab5dea5c957d015" translate="yes" xml:space="preserve">
          <source>Item Indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebd69f8d8a2deafa0cb9f08bda37d7e8ab38373" translate="yes" xml:space="preserve">
          <source>Iterates through each registered test waiter, and invokes its callback. If any waiter returns false, this method will return true indicating that the waiters have not settled yet.</source>
          <target state="translated">등록 된 각 테스트 웨이터를 반복하고 콜백을 호출합니다. 웨이터가 false를 리턴하면,이 메소드는 웨이터가 아직 정착하지 않았 음을 나타내는 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d1aca6658bd871f43a6a3a92ed0c9426e4fc4e28" translate="yes" xml:space="preserve">
          <source>Iterates through the array, calling the passed function on each item. This method corresponds to the &lt;code&gt;forEach()&lt;/code&gt; method defined in JavaScript 1.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0b362193be4d79ad1b314e9b216fc30078294f" translate="yes" xml:space="preserve">
          <source>Iterates through the attributes of the model, calling the passed function on each attribute.</source>
          <target state="translated">각 속성에 전달 된 함수를 호출하여 모델의 속성을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="02336a46ebc1bca07ea406f90510ac981035c628" translate="yes" xml:space="preserve">
          <source>Iterates through the enumerable, calling the passed function on each item. This method corresponds to the &lt;code&gt;forEach()&lt;/code&gt; method defined in JavaScript 1.6.</source>
          <target state="translated">각 항목에서 전달 된 함수를 호출하여 열거 가능 항목을 반복합니다. 이 메소드 는 JavaScript 1.6에 정의 된 &lt;code&gt;forEach()&lt;/code&gt; 메소드에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="d6cdc2c8b517654ee42b37dee40386d39e0f4b01" translate="yes" xml:space="preserve">
          <source>Iterates through the transformedAttributes of the model, calling the passed function on each attribute. Note the callback will not be called for any attributes that do not have an transformation type.</source>
          <target state="translated">각 속성에서 전달 된 함수를 호출하여 모델의 transformedAttributes를 반복합니다. 변환 유형이없는 속성에 대해서는 콜백이 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d176dccd5163f2c90eee777705b70070425e8c4d" translate="yes" xml:space="preserve">
          <source>Iterating Over an Enumerable</source>
          <target state="translated">열거 형에 대한 반복</target>
        </trans-unit>
        <trans-unit id="2510222790b6667b6cd3cec032ca1daffed8124a" translate="yes" xml:space="preserve">
          <source>Its important to be able to switch between routes and link to different parts of your application. We can do this declaratively in templates using the &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df139be9c14c1067ad0da74d1c4c7a309ada24f2" translate="yes" xml:space="preserve">
          <source>Its last resort is to call the &lt;code&gt;resolveOther&lt;/code&gt; method.</source>
          <target state="translated">마지막 해결 방법 은 &lt;code&gt;resolveOther&lt;/code&gt; 메소드 를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="12e66b14e68858ce6de2169b0a237067273a4737" translate="yes" xml:space="preserve">
          <source>Its model is populated in &lt;code&gt;model&lt;/code&gt; hook in the route handler:</source>
          <target state="translated">모델은 라우트 핸들러의 &lt;code&gt;model&lt;/code&gt; 후크에 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="0dfce6a9c677385d5e49b0b2e6ffe69c9a1c1672" translate="yes" xml:space="preserve">
          <source>JAWS, proprietary software by Freedom Scientific, available for Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e3bf5b70bd372ce961cf41127413867f62e9b9" translate="yes" xml:space="preserve">
          <source>JQuery</source>
          <target state="translated">JQuery</target>
        </trans-unit>
        <trans-unit id="077089c2035a3e00b87273f6830c677b2d0a713f" translate="yes" xml:space="preserve">
          <source>JSON API Conventions</source>
          <target state="translated">JSON API 규칙</target>
        </trans-unit>
        <trans-unit id="633617224eec34c2d4a796f3056e084b5192688e" translate="yes" xml:space="preserve">
          <source>JSON API Document</source>
          <target state="translated">JSON API 문서</target>
        </trans-unit>
        <trans-unit id="57bfa12f2cb935a1e4a6d8d3018b6a6749889a8c" translate="yes" xml:space="preserve">
          <source>JSON API standardizes how JavaScript applications talk to servers, so you decrease the coupling between your frontend and backend, and have more freedom to change pieces of your stack.</source>
          <target state="translated">JSON API는 JavaScript 응용 프로그램이 서버와 통신하는 방식을 표준화하므로 프런트 엔드와 백엔드 간의 연결을 줄이고 스택을 자유롭게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fccf6dcf8ac99baaa0245733b4e93fa0a2f8ba47" translate="yes" xml:space="preserve">
          <source>JSON Structure</source>
          <target state="translated">JSON 구조</target>
        </trans-unit>
        <trans-unit id="0fe03fcb6ff13d4e75c6760719ffd2bc3cb28625" translate="yes" xml:space="preserve">
          <source>JSON-API Document</source>
          <target state="translated">JSON-API 문서</target>
        </trans-unit>
        <trans-unit id="0fa11a3de32627b0e4a691ed779e266c19cf1310" translate="yes" xml:space="preserve">
          <source>JSON:API Document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc98aa98c479c1c4d47f1c97e7852bb70737b090" translate="yes" xml:space="preserve">
          <source>JSON:API standardizes how JavaScript applications talk to servers, so you decrease the coupling between your frontend and backend, and have more freedom to change pieces of your stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e176f40c0ef921f6bf7f9f7ae157ba9a115a1030" translate="yes" xml:space="preserve">
          <source>JSONAPIAdapter</source>
          <target state="translated">JSONAPIAdapter</target>
        </trans-unit>
        <trans-unit id="60e6a8ab161ef53e70a0b5448053a0398bcaaea3" translate="yes" xml:space="preserve">
          <source>JSONAPISerializer</source>
          <target state="translated">JSONAPISerializer</target>
        </trans-unit>
        <trans-unit id="67a601b2ffbfc7e4e1375dc58ef6825d116c344d" translate="yes" xml:space="preserve">
          <source>JSONAPISerializer Conventions</source>
          <target state="translated">JSONAPISerializer 규칙</target>
        </trans-unit>
        <trans-unit id="aeb7fbde09f4867d617fabd5accd2611571998bf" translate="yes" xml:space="preserve">
          <source>JSONObject</source>
          <target state="translated">JSONObject</target>
        </trans-unit>
        <trans-unit id="576405ec091ef1a970bf620914fd330f1047adf9" translate="yes" xml:space="preserve">
          <source>JSONSerializer</source>
          <target state="translated">JSONSerializer</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="827e431db2ebf21bdd4e5c4472229f251817a0cd" translate="yes" xml:space="preserve">
          <source>JavaScript Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adddd4c84ae4f5171b9af05d22a995042b17e7d" translate="yes" xml:space="preserve">
          <source>JavaScript and CSS minification.</source>
          <target state="translated">JavaScript 및 CSS 축소</target>
        </trans-unit>
        <trans-unit id="a9c0b679e349dbe2ce649cc9144fc6529e99a7cd" translate="yes" xml:space="preserve">
          <source>JavaScript is the primary scripting language of the web. Most Ember apps have some amount of JavaScript code in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb31f55434f30393282eff0cda81997729a1325" translate="yes" xml:space="preserve">
          <source>JavaScript objects don't support the observation of property value changes. Consequently, if an object is going to participate in Ember's binding system you may see an &lt;code&gt;Ember.Object&lt;/code&gt; instead of a plain object.</source>
          <target state="translated">JavaScript 객체는 속성 값 변경 관찰을 지원하지 않습니다. 따라서 객체가 Ember의 바인딩 시스템에 참여할 경우 일반 객체 대신 &lt;code&gt;Ember.Object&lt;/code&gt; 가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f481302959ed6a8f6e0f638042c6b15394e2b973" translate="yes" xml:space="preserve">
          <source>Joining a web development community can be a challenge within itself, especially when all the resources you visit assume you're familiar with other technologies that you're not familiar with.</source>
          <target state="translated">웹 개발 커뮤니티에 참여하는 것은 그 자체로 도전이 될 수 있습니다. 특히 방문하는 모든 리소스가 익숙하지 않은 다른 기술에 익숙하다고 가정 할 때 더욱 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="188dccda287398c981d0595eb4ade2feeb944606" translate="yes" xml:space="preserve">
          <source>JsonApiDocument</source>
          <target state="translated">JsonApiDocument</target>
        </trans-unit>
        <trans-unit id="573650ed50efbd3840e0b5dc02ccb076e82082b8" translate="yes" xml:space="preserve">
          <source>Just as important is what we're removing from the Ember experience. These features below will keep working through the rest of Ember 3, but you won't have to use them if you don't want to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f306e8aad35f3e8d07fd3945a2ce5977ff99334" translate="yes" xml:space="preserve">
          <source>Just like in JavaScript, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and the empty string are falsy in Ember templates. Unlike in JavaScript, the empty array is also considered falsy in Ember templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217113d38ff6f593eb814fc95df7c917149c2120" translate="yes" xml:space="preserve">
          <source>Just like in previous examples, you can think of attribute changes as substitution. If the model changes to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8202f30252732e1071c8bba708c81a43b83e5edb" translate="yes" xml:space="preserve">
          <source>Just like the JavaScript language changes over time, web browsers change too! Ember helps you to write code that can work across many different browsers and their versions. Behind the scenes, Ember uses Babel to compile modern JavaScript to something that can work on all browsers. Without this step, you could accidentally end up shipping code that works for your version of Chrome but breaks for someone using Edge. Ember has you covered!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f425d8fd9276df589235063d0b9683290aed3a" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;transitionTo&lt;/code&gt; and &lt;code&gt;replaceWith&lt;/code&gt;, &lt;code&gt;urlFor&lt;/code&gt; can also handle query parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f984bdda394c247db6fbd4b490a4d1a3e607b884" translate="yes" xml:space="preserve">
          <source>Keep in mind that even with this workaround in place, the &lt;code&gt;click&lt;/code&gt; event will not automatically trigger via keyboard driven &lt;code&gt;click&lt;/code&gt; equivalents (such as the &lt;code&gt;enter&lt;/code&gt; key when focused). Browsers will trigger this on clickable elements only by default. This also doesn't make an element accessible to users of assistive technology. You will need to add additional things like &lt;code&gt;role&lt;/code&gt; and/or &lt;code&gt;tabindex&lt;/code&gt; to make this accessible for your users.</source>
          <target state="translated">이 해결 방법을 사용하더라도 &lt;code&gt;click&lt;/code&gt; 이벤트는 키보드로 구동되는 &lt;code&gt;click&lt;/code&gt; 해당하는 항목 (예 : 포커스가있을 때 &lt;code&gt;enter&lt;/code&gt; 키)을 통해 자동으로 트리거되지 않습니다 . 브라우저는 기본적으로 클릭 가능한 요소에서만이를 트리거합니다. 또한 보조 기술 사용자는 요소에 액세스 할 수 없습니다. 사용자가 액세스 할 수있게하려면 &lt;code&gt;role&lt;/code&gt; 및 / 또는 &lt;code&gt;tabindex&lt;/code&gt; 와 같은 항목을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="28d8494717318bc86b2ce7e6a8d698bf9de0e9d4" translate="yes" xml:space="preserve">
          <source>Keep in mind that since some of your users will use &lt;code&gt;HistoryLocation&lt;/code&gt;, your server must serve the Ember app at all the routes you define.</source>
          <target state="translated">일부 사용자는 &lt;code&gt;HistoryLocation&lt;/code&gt; 을 사용하므로 서버는 사용자가 정의한 모든 경로에서 Ember 앱을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="59d25bf59e2f03d765c10b20e4801f1973311339" translate="yes" xml:space="preserve">
          <source>Keep in mind that your server must serve the Ember app at all the routes you define.</source>
          <target state="translated">서버는 사용자가 정의한 모든 경로에서 Ember 앱을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f2abb9048fa40c3b2ae670605bab409d00f6c84" translate="yes" xml:space="preserve">
          <source>Keep in mind that your server must serve the Ember app from all the URLs defined in your &lt;code&gt;Router.map&lt;/code&gt; function. In other words, if your user directly navigates to &lt;code&gt;/posts/new&lt;/code&gt;, your server must be configured to serve your Ember app in response.</source>
          <target state="translated">서버는 &lt;code&gt;Router.map&lt;/code&gt; 함수에 정의 된 모든 URL에서 Ember 앱을 제공해야합니다 . 즉, 사용자가 &lt;code&gt;/posts/new&lt;/code&gt; 를 직접 탐색하는 경우 서버가 응답으로 Ember 앱을 제공하도록 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fcdf14c14378d078bcf72022fa7e634650270b22" translate="yes" xml:space="preserve">
          <source>Keep in mind when writing &lt;code&gt;Ember.TextArea&lt;/code&gt; subclasses that &lt;code&gt;Ember.TextArea&lt;/code&gt; itself extends &lt;code&gt;Ember.Component&lt;/code&gt;. Expect isolated component semantics, not legacy 1.x view semantics (like &lt;code&gt;controller&lt;/code&gt; being present).</source>
          <target state="translated">작성할 때 지켜야 &lt;code&gt;Ember.TextArea&lt;/code&gt; 의 것을 서브 클래스 &lt;code&gt;Ember.TextArea&lt;/code&gt; 자체가 확장 &lt;code&gt;Ember.Component&lt;/code&gt; 을 . 레거시 1.x보기 의미론 (예 : &lt;code&gt;controller&lt;/code&gt; 가 있음)이 아닌 격리 된 구성 요소 의미론을 기대하십시오 .</target>
        </trans-unit>
        <trans-unit id="efedd4227261a610c7768d9207bd164e031f4115" translate="yes" xml:space="preserve">
          <source>Keep in mind when writing &lt;code&gt;Ember.TextField&lt;/code&gt; subclasses that &lt;code&gt;Ember.TextField&lt;/code&gt; itself extends &lt;code&gt;Ember.Component&lt;/code&gt;. Expect isolated component semantics, not legacy 1.x view semantics (like &lt;code&gt;controller&lt;/code&gt; being present). See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember components&lt;/a&gt;</source>
          <target state="translated">작성할 때 지켜야 &lt;code&gt;Ember.TextField&lt;/code&gt; 의 것을 서브 클래스 &lt;code&gt;Ember.TextField&lt;/code&gt; 자체가 확장 &lt;code&gt;Ember.Component&lt;/code&gt; 을 . 레거시 1.x보기 의미론 (예 : &lt;code&gt;controller&lt;/code&gt; 가 있음)이 아닌 격리 된 구성 요소 의미론을 기대하십시오 . &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember 컴포넌트&lt;/a&gt; 에 대해 더 알아보기</target>
        </trans-unit>
        <trans-unit id="6daca38d419216af8efe7750a95552eaefba2ea1" translate="yes" xml:space="preserve">
          <source>Keeping a link active for other routes</source>
          <target state="translated">다른 경로에 대한 링크를 활성 상태로 유지</target>
        </trans-unit>
        <trans-unit id="894975dfa9444a28770860022ec24c860b956397" translate="yes" xml:space="preserve">
          <source>Keyboard events</source>
          <target state="translated">키보드 이벤트</target>
        </trans-unit>
        <trans-unit id="c90c2387188374b9f22ba03a5b76d10a1a4cee1e" translate="yes" xml:space="preserve">
          <source>Keyboard events:</source>
          <target state="translated">키보드 이벤트 :</target>
        </trans-unit>
        <trans-unit id="93ec48004ffde88be321d4c1d910e9d2e81325a8" translate="yes" xml:space="preserve">
          <source>Keys should match column names defined by the model type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b09f1b82a4d2e3342121375fb563cb8dcbd3b4" translate="yes" xml:space="preserve">
          <source>LESS, Sass</source>
          <target state="translated">덜, 사스</target>
        </trans-unit>
        <trans-unit id="2d71b425128f3e213de008747b64cda9c33e1474" translate="yes" xml:space="preserve">
          <source>LOG_STACKTRACE_ON_DEPRECATION</source>
          <target state="translated">LOG_STACKTRACE_ON_DEPRECATION</target>
        </trans-unit>
        <trans-unit id="98aa17af446fd7ffea492ec1747b7ef5d3eef657" translate="yes" xml:space="preserve">
          <source>LOG_STACKTRACE_ON_DEPRECATIONpublic</source>
          <target state="translated">LOG_STACKTRACE_ON_DEPRECATIONpublic</target>
        </trans-unit>
        <trans-unit id="c6b34f92cc00fd20244afec2fdb1507a5ccb4f9d" translate="yes" xml:space="preserve">
          <source>LOG_VERSION</source>
          <target state="translated">LOG_VERSION</target>
        </trans-unit>
        <trans-unit id="613bcee295be1b1c628260cf11784c9936fa7487" translate="yes" xml:space="preserve">
          <source>LOG_VERSIONpublic</source>
          <target state="translated">LOG_VERSIONpublic</target>
        </trans-unit>
        <trans-unit id="44b4b86f5d7854f28cb4479fe6d4fed54075cc2c" translate="yes" xml:space="preserve">
          <source>Labeling Promises</source>
          <target state="translated">라벨링 약속</target>
        </trans-unit>
        <trans-unit id="d5a556c4a5edab3538b9c1620a2892cb22c08e17" translate="yes" xml:space="preserve">
          <source>Lang Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45dbb1d6fc135237270ebb3eb9f4aaf7e1bddd1" translate="yes" xml:space="preserve">
          <source>Large organizations often use Ember.js to power sophisticated web applications. These apps may require collaboration among several teams, sometimes distributed around the world. Typically, responsibility is shared by dividing the application into one or more &quot;sections&quot;. How this division is actually implemented varies from team to team.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec9ecbb8fc087b9ecf864634ccc039a38a37562" translate="yes" xml:space="preserve">
          <source>Last but not least, &lt;a href=&quot;https://percy.io/&quot;&gt;Percy&lt;/a&gt; is a &lt;strong&gt;visual regression testing&lt;/strong&gt; tool that helps you catch accidental style changes. You can try it out for free and pay for additional service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bde7c8ec1509af37567cc03eeddeb046a8fd3af" translate="yes" xml:space="preserve">
          <source>Last but not least, we attach the modifier to the &lt;code&gt;audio&lt;/code&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a0060aa07c7305c3f9c9106b3c65c659afbaaf" translate="yes" xml:space="preserve">
          <source>Lastly, Ember also provides custom input events &lt;code&gt;@enter&lt;/code&gt; and &lt;code&gt;@escape-press&lt;/code&gt;. These events do not exist on native input elements, but you may find them to be useful for handling keyboard interactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2428c8b69c3e301838b161a3b36c1a19cf2366" translate="yes" xml:space="preserve">
          <source>Lastly, if you are already running a local development server (through &lt;code&gt;ember server&lt;/code&gt;), you can visit the &lt;code&gt;/tests&lt;/code&gt; URI. This will render the &lt;code&gt;tests/index.html&lt;/code&gt; template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c060147f4faf5b78f316c846595f34b4a54b34a" translate="yes" xml:space="preserve">
          <source>Layout and LayoutName properties</source>
          <target state="translated">Layout 및 LayoutName 속성</target>
        </trans-unit>
        <trans-unit id="6e5e2ae8145a2451181a785b6ea6d99803c9dca8" translate="yes" xml:space="preserve">
          <source>Layout can be used to wrap content in a component.</source>
          <target state="translated">레이아웃은 구성 요소의 내용을 래핑하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1003edc114d43d9f8f6630f3ba4a529f2b9371c3" translate="yes" xml:space="preserve">
          <source>Layout can be used to wrap content in a component. In addition to wrapping content in a Component's template, you can also use the public layout API in your Component JavaScript.</source>
          <target state="translated">레이아웃은 구성 요소의 내용을 래핑하는 데 사용할 수 있습니다. 컴포넌트의 템플리트에서 컨텐츠를 랩핑하는 것 외에도 컴포넌트 JavaScript에서 공용 레이아웃 API를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="378cbbf54cbb2e3f3bd201f02c1b946ec3601eba" translate="yes" xml:space="preserve">
          <source>Learn More</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cdf2581f9153fa5c8c299ea3352808f5a13bb9" translate="yes" xml:space="preserve">
          <source>Learn about the difference between the front end, API, and database. Front end frameworks connect to APIs, not directly to a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1016fcb2b4ff485857c733a5a8bcf8240d24fddd" translate="yes" xml:space="preserve">
          <source>Learning</source>
          <target state="translated">Learning</target>
        </trans-unit>
        <trans-unit id="b82921e09749f10e99c99d0f3cf9121a01cd4381" translate="yes" xml:space="preserve">
          <source>Learning Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74be0f9aa7cb559e4bbb54815a49c6a3b996de5d" translate="yes" xml:space="preserve">
          <source>Let a new temporary queue be defined as &lt;code&gt;WORK_QUEUE&lt;/code&gt;</source>
          <target state="translated">새 임시 대기열을 &lt;code&gt;WORK_QUEUE&lt;/code&gt; 로 정의 하십시오.</target>
        </trans-unit>
        <trans-unit id="1b8552f9d8fca3dd29363621f4c4e169eaa9ad62" translate="yes" xml:space="preserve">
          <source>Let the highest priority queue with pending jobs be: &lt;code&gt;CURRENT_QUEUE&lt;/code&gt;, if there are no queues with pending jobs the run loop is complete</source>
          <target state="translated">보류중인 작업이있는 우선 순위가 가장 높은 큐를 &lt;code&gt;CURRENT_QUEUE&lt;/code&gt; 로 지정하십시오. 보류중인 작업이있는 큐가없는 경우 실행 루프가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="67a16807f9a01b93187094da9cb5cb746ec11c5c" translate="yes" xml:space="preserve">
          <source>Let us disable &lt;code&gt;jquery-integration&lt;/code&gt; to see what happens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b710127e3df993606b053122b25fb3109ff0d7" translate="yes" xml:space="preserve">
          <source>Let's add some simple logging to indicate that the instance has booted:</source>
          <target state="translated">인스턴스가 부팅되었음을 나타내는 간단한 로깅을 추가해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="085b495290b959d48c569442f2a0b79950c379ea" translate="yes" xml:space="preserve">
          <source>Let's assume our API provides an endpoint for the currently logged in user via:</source>
          <target state="translated">API가 다음을 통해 현재 로그인 한 사용자에게 엔드 포인트를 제공한다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="8bebbdc6b15456a228f0870d9d2490b5dfa0fe61" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a &lt;code&gt;blog-post&lt;/code&gt; and a &lt;code&gt;comment&lt;/code&gt; model, which are related to each other as follows:</source>
          <target state="translated">다음 과 같이 &lt;code&gt;blog-post&lt;/code&gt; 과 &lt;code&gt;comment&lt;/code&gt; 모델 이 있다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="c5da70b8ba9c5afa592c956afa3f642e882bc5cb" translate="yes" xml:space="preserve">
          <source>Let's assume that we have a &lt;code&gt;blog-post&lt;/code&gt; and a &lt;code&gt;comment&lt;/code&gt; model. A single blog post can have several comments linked to it. The correct relationship is shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924f1c95e5c704ddeabbf3c29984cba2d50a6a24" translate="yes" xml:space="preserve">
          <source>Let's assume we have a &lt;code&gt;Player&lt;/code&gt; model that has &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;levelName&lt;/code&gt; attributes. We want to call &lt;code&gt;levelUp()&lt;/code&gt; to increment the &lt;code&gt;level&lt;/code&gt; and assign a new &lt;code&gt;levelName&lt;/code&gt; when the player reaches level 5.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; 및 &lt;code&gt;levelName&lt;/code&gt; 속성 이있는 &lt;code&gt;Player&lt;/code&gt; 모델이 있다고 가정 해 봅시다 . 플레이어가 레벨 5에 도달하면 &lt;code&gt;levelUp()&lt;/code&gt; 을 호출 하여 &lt;code&gt;level&lt;/code&gt; 을 증가시키고 새로운 &lt;code&gt;levelName&lt;/code&gt; 을 할당하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="43244a198a37c1444f327e4bd02ea3d94c86c224" translate="yes" xml:space="preserve">
          <source>Let's assume we have a component with a &lt;code&gt;style&lt;/code&gt; property that is updated whenever the value of the &lt;code&gt;name&lt;/code&gt; property changes. The &lt;code&gt;style&lt;/code&gt; attribute of the component is bound to its &lt;code&gt;style&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 속성 값이 변경 될 때마다 업데이트 되는 &lt;code&gt;style&lt;/code&gt; 속성 이있는 구성 요소가 있다고 가정 합니다. &lt;code&gt;style&lt;/code&gt; 구성 요소의 속성은 자사에 바인딩 &lt;code&gt;style&lt;/code&gt; 건물입니다.</target>
        </trans-unit>
        <trans-unit id="601060df8e8fc0751485087da8c72147299e915a" translate="yes" xml:space="preserve">
          <source>Let's assume we have an action handler that prints its first parameter:</source>
          <target state="translated">첫 번째 매개 변수를 인쇄하는 액션 핸들러가 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="b15c3c86e992c66b14277717a43ee0a510601de2" translate="yes" xml:space="preserve">
          <source>Let's assume you are writing an Ember application which will serve as a blog. This application would likely include models such as &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt;. It would also include interactions such as &lt;em&gt;login&lt;/em&gt; and &lt;em&gt;create post&lt;/em&gt;. Let's finally assume that you would like to have &lt;a href=&quot;http://en.wikipedia.org/wiki/Test_automation&quot;&gt;automated tests&lt;/a&gt; in place for your application.</source>
          <target state="translated">블로그 역할을하는 Ember 애플리케이션을 작성한다고 가정 해 봅시다. 이 응용 프로그램에는 &lt;code&gt;user&lt;/code&gt; 및 &lt;code&gt;post&lt;/code&gt; 와 같은 모델이 포함될 수 있습니다. 또한 &lt;em&gt;login&lt;/em&gt; 및 &lt;em&gt;create post&lt;/em&gt; 와 같은 상호 작용이 포함됩니다 . 마지막으로 응용 프로그램에 대한 &lt;a href=&quot;http://en.wikipedia.org/wiki/Test_automation&quot;&gt;자동화 된 테스트&lt;/a&gt; 를 원한다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="7b5b477036c303ba8a7ab0d8fc43d9c53feee14d" translate="yes" xml:space="preserve">
          <source>Let's build an application that shows a list of scientists. To do that, the first step is to create a route. For now, you can think of routes as being the different pages that make up your application.</source>
          <target state="translated">과학자 목록을 보여주는 응용 프로그램을 만들어 봅시다. 이를 위해 첫 번째 단계는 경로를 만드는 것입니다. 지금은 경로를 응용 프로그램을 구성하는 다른 페이지로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="594280476955d1cfebb902a878634ef27be35c46" translate="yes" xml:space="preserve">
          <source>Let's call our component &lt;code&gt;button-with-confirmation&lt;/code&gt;. We can create it by typing:</source>
          <target state="translated">구성 요소를 &lt;code&gt;button-with-confirmation&lt;/code&gt; 합니다. 다음을 입력하여 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d65003f98c3863e72c3e151b316653c3e8d1a9c" translate="yes" xml:space="preserve">
          <source>Let's change the router above to use a nested route, like this:</source>
          <target state="translated">다음과 같이 중첩 된 경로를 사용하도록 라우터를 변경해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="cd7946e87b8cefba51682d749ec976042c729dd6" translate="yes" xml:space="preserve">
          <source>Let's compare some examples using the model hook to make asynchronous HTTP requests to a server somewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9456cf6503ddd1886850b7573663062b2e6894f3" translate="yes" xml:space="preserve">
          <source>Let's continue with the blog post example from &lt;a href=&quot;../test-types#toc_examples-1&quot;&gt;Rendering Tests&lt;/a&gt;. Recall that our blog post component allows two modes&amp;mdash;view and edit. The following test checks one way for creating a blog post:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476580e8d1c610f503bd76ef80832c6c28fc35fe" translate="yes" xml:space="preserve">
          <source>Let's create a &lt;code&gt;&amp;lt;PeopleList&amp;gt;&lt;/code&gt; component that we can use in multiple places to show a list of people.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd53739e37c74c8b6af3c2762424c20a33a7a208" translate="yes" xml:space="preserve">
          <source>Let's create a &lt;code&gt;format-currency&lt;/code&gt; helper that takes an integer count of cents and turns it into formatted dollars.</source>
          <target state="translated">정수 센트를 가져 와서 서식이 지정된 달러로 변환 하는 &lt;code&gt;format-currency&lt;/code&gt; 도우미를 만들어 봅시다 .</target>
        </trans-unit>
        <trans-unit id="4b2703dcd1f2ced6d41299af63d335c82cc175ac" translate="yes" xml:space="preserve">
          <source>Let's create a &lt;code&gt;people-list&lt;/code&gt; component that we can use in multiple places to show a list of people.</source>
          <target state="translated">여러 장소에서 사람 목록을 표시하는 데 사용할 수 있는 &lt;code&gt;people-list&lt;/code&gt; 구성 요소를 만들어 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="30076fb5a99e1b351917ae26fa7a722ab397058f" translate="yes" xml:space="preserve">
          <source>Let's create a parent component, the &lt;code&gt;UserProfile&lt;/code&gt; component, where the user can delete their profile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50681b0bf964a4527a84e6e7e538f4ce2d598997" translate="yes" xml:space="preserve">
          <source>Let's create the &lt;code&gt;toggleImageSize&lt;/code&gt; function and toggle the &lt;code&gt;isWide&lt;/code&gt; property on our component:</source>
          <target state="translated">&lt;code&gt;toggleImageSize&lt;/code&gt; 함수를 만들고 컴포넌트 에서 &lt;code&gt;isWide&lt;/code&gt; 속성을 토글 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="7b5c19d97e452ebeedb9123f50a533fb95f01188" translate="yes" xml:space="preserve">
          <source>Let's customize the &lt;code&gt;shopping-cart&lt;/code&gt; initializer to inject a &lt;code&gt;cart&lt;/code&gt; property into all the routes in your application:</source>
          <target state="translated">&lt;code&gt;shopping-cart&lt;/code&gt; 초기화 프로그램을 사용자 정의 하여 애플리케이션의 모든 경로에 &lt;code&gt;cart&lt;/code&gt; 특성 을 삽입 하십시오.</target>
        </trans-unit>
        <trans-unit id="e4575ed0bbc0fbaa9b5b0685f53318a958fa4b64" translate="yes" xml:space="preserve">
          <source>Let's define the structure of a rental object using the same attributes for our rental that we &lt;a href=&quot;../model-hook&quot;&gt;previously used&lt;/a&gt; in our hard-coded array of JavaScript objects - &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;city&lt;/em&gt;, &lt;em&gt;property type&lt;/em&gt;, &lt;em&gt;image&lt;/em&gt;, &lt;em&gt;bedrooms&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt;. Define attributes by giving them the result of the function &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt;&lt;code&gt;DS.attr()&lt;/code&gt;&lt;/a&gt;. For more information on Ember Data Attributes, read the section called &lt;a href=&quot;https://guides.emberjs.com/models/defining-models/#toc_defining-attributes&quot;&gt;Defining Attributes&lt;/a&gt; in the guides.</source>
          <target state="translated">&lt;a href=&quot;../model-hook&quot;&gt;이전&lt;/a&gt; 에 하드 코딩 된 JavaScript 객체 배열 ( &lt;em&gt;제목&lt;/em&gt; , &lt;em&gt;소유자&lt;/em&gt; , &lt;em&gt;도시&lt;/em&gt; , &lt;em&gt;부동산 유형&lt;/em&gt; , &lt;em&gt;이미지&lt;/em&gt; , &lt;em&gt;침실&lt;/em&gt; 및 &lt;em&gt;설명)&lt;/em&gt; 에서 사용한 것과 동일한 속성을 사용하여 임대 객체의 구조를 정의 해 보겠습니다 . &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.html#method_attr&quot;&gt; &lt;code&gt;DS.attr()&lt;/code&gt; &lt;/a&gt; 함수의 결과를 제공하여 속성을 정의하십시오 . Ember 데이터 속성에 대한 자세한 내용 은 가이드에서 &lt;a href=&quot;https://guides.emberjs.com/models/defining-models/#toc_defining-attributes&quot;&gt;속성 정의&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad1bc2cf2111a60e4c26dc087f26c3b7d7eb3605" translate="yes" xml:space="preserve">
          <source>Let's do it again. We'll copy the sent message content into a new component, and then include it in our application template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8881cd86228bbf4ddd8a7c1d0e8d3fe2a5faa4" translate="yes" xml:space="preserve">
          <source>Let's explore these concepts using an example of a route displaying a blog post. Assume that the route returns a &lt;code&gt;BlogPost&lt;/code&gt; model that is presented in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b2774cf0be3cfdf91e6720844b3fc03268684b" translate="yes" xml:space="preserve">
          <source>Let's explore these concepts using an example of a route displaying a blog post. Presume a &lt;code&gt;BlogPost&lt;/code&gt; model that is presented in a &lt;code&gt;blog-post&lt;/code&gt; template.</source>
          <target state="translated">블로그 게시물을 표시하는 경로의 예를 사용하여 이러한 개념을 살펴 보겠습니다. &lt;code&gt;blog-post&lt;/code&gt; 템플리트로 제공되는 블로그 &lt;code&gt;BlogPost&lt;/code&gt; 모델을 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="26db41f1383be1d219153569142445a93005ef0d" translate="yes" xml:space="preserve">
          <source>Let's generate a &lt;code&gt;rental-listing&lt;/code&gt; component that will manage the behavior for each of our rentals. A dash is required in every component name to avoid conflicting with a possible HTML element, so &lt;code&gt;rental-listing&lt;/code&gt; is acceptable but &lt;code&gt;rental&lt;/code&gt; isn't.</source>
          <target state="translated">각 임대의 행동을 관리 할 &lt;code&gt;rental-listing&lt;/code&gt; 구성 요소를 생성 해 봅시다 . 가능한 HTML 요소와 충돌을 피하기 위해 모든 구성 요소 이름에 대시가 필요하므로 &lt;code&gt;rental-listing&lt;/code&gt; 은 허용되지만 &lt;code&gt;rental&lt;/code&gt; 는 허용 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e94e8c5fcbcdfe2fafa8482c52537ded890590a" translate="yes" xml:space="preserve">
          <source>Let's get started creating our service by generating it through Ember CLI, which will create the service file, as well as a unit test for it.</source>
          <target state="translated">Ember CLI를 통해 서비스를 생성하여 서비스 생성을 시작하겠습니다. 서비스 파일 및 서비스 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="74da98eb17881a9d971139ec81928f4a28e0b223" translate="yes" xml:space="preserve">
          <source>Let's have a look at a common use case - testing a service - to understand the basic principles of testing in Ember. This will set the foundation for other parts of your Ember application such as controllers, components, helpers and others. Testing a service is as simple as creating a container test, looking up the service on the application's container and running assertions against it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c42fa1c4186808938dbdaa530634247e143009" translate="yes" xml:space="preserve">
          <source>Let's implement &lt;code&gt;double-clickable&lt;/code&gt; such that when it is clicked, an alert is displayed:</source>
          <target state="translated">&lt;code&gt;double-clickable&lt;/code&gt; 할 때 경고가 표시되도록 더블 클릭 가능을 구현합시다 :</target>
        </trans-unit>
        <trans-unit id="80eba8bfca1ed78a5a3f72b4b1cdba111f9f76a2" translate="yes" xml:space="preserve">
          <source>Let's initialize our date picker by overriding the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt; 메서드를 재정 의하여 날짜 선택기를 초기화 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="dfd8f43342f0e8e597ce5606445945b700d097d0" translate="yes" xml:space="preserve">
          <source>Let's look at a similar example that is optimized in Ember, starting with a &lt;code&gt;User&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 객체로 시작하여 Ember에서 최적화 된 유사한 예제를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="9d72a7ee68eed25d1258812dbba232886e6a0877" translate="yes" xml:space="preserve">
          <source>Let's look at a similar example that is optimized in Ember, starting with an &lt;code&gt;Image&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fffb3b327aecf1a41680d27190812818f0ca4fd" translate="yes" xml:space="preserve">
          <source>Let's look at a simple example of how a component can use an action to communicate with its parent.</source>
          <target state="translated">구성 요소가 동작을 사용하여 부모와 통신하는 방법에 대한 간단한 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="f75a786fdb113fbc8a0687ed269e046e9fa4fe3b" translate="yes" xml:space="preserve">
          <source>Let's look at the parent component's JavaScript file. In this example, imagine we have a parent component called &lt;code&gt;user-profile&lt;/code&gt; that shows the user's profile to them.</source>
          <target state="translated">부모 컴포넌트의 JavaScript 파일을 봅시다. 이 예에서는 &lt;code&gt;user-profile&lt;/code&gt; 을 보여주는 user-profile 이라는 부모 구성 요소가 있다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="1b66cbb003165185944800edb660d32eca31d034" translate="yes" xml:space="preserve">
          <source>Let's look at what happens if you request a record that the store already has in its cache.</source>
          <target state="translated">상점이 이미 캐시에 가지고있는 레코드를 요청하면 어떻게되는지 살펴 보자.</target>
        </trans-unit>
        <trans-unit id="590b9c6d802434b51a5191db38e2d406a9e971ad" translate="yes" xml:space="preserve">
          <source>Let's make sure everything is working properly. &lt;code&gt;cd&lt;/code&gt; into the application directory &lt;code&gt;ember-quickstart&lt;/code&gt; and start the development server by typing:</source>
          <target state="translated">모든 것이 제대로 작동하는지 확인하십시오. 응용 프로그램 디렉토리 &lt;code&gt;ember-quickstart&lt;/code&gt; 로 &lt;code&gt;cd&lt;/code&gt; 하고 다음 을 입력하여 개발 서버를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="aab21dd37a2f939f20050faef347b0ec430a0362" translate="yes" xml:space="preserve">
          <source>Let's now implement the helper. Helpers are functions that take one or more inputs and return a single output that should be put into the HTML.</source>
          <target state="translated">이제 헬퍼를 구현해 봅시다. 헬퍼는 하나 이상의 입력을 받아 HTML에 넣어야하는 단일 출력을 반환하는 함수입니다.</target>
        </trans-unit>
        <trans-unit id="f6b204ac311c4ee4a0d190f78f5606bfd6113ee7" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;app/routes/rentals.js&lt;/code&gt; and return an array of rental objects from the &lt;code&gt;model&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;app/routes/rentals.js&lt;/code&gt; 를 열고 &lt;code&gt;model&lt;/code&gt; 함수 에서 대여 객체 배열을 반환 합니다 :</target>
        </trans-unit>
        <trans-unit id="d3543bfe1536f755dd91b9778d9dbe41ea681a12" translate="yes" xml:space="preserve">
          <source>Let's replace all our old code with our new componentized version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2375b0705e717cae76ee71d67117a35bf62d0110" translate="yes" xml:space="preserve">
          <source>Let's say we tried to create a single &lt;code&gt;username&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ceb8f1db907cdf7b3f2956539d99edc738d8f2" translate="yes" xml:space="preserve">
          <source>Let's say we want to add a button to our counter that allows us to double the current count. Every time we press the button, the current count doubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86ec598cd6b2af3f7fafff3f4e673d6c0cecb5b" translate="yes" xml:space="preserve">
          <source>Let's say we wanted to add a feature that would allow the user to toggle the display of the body section. To implement this, we would first modify our template to show the body only if the value of a new &lt;code&gt;isExpanded&lt;/code&gt; property is true.</source>
          <target state="translated">사용자가 본문 섹션의 표시를 전환 할 수있는 기능을 추가하려고한다고 가정 해 보겠습니다. 이를 구현하기 위해 먼저 새로운 &lt;code&gt;isExpanded&lt;/code&gt; 속성 값 이 true 인 경우에만 본문을 표시하도록 템플릿을 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="df7f397c6f18c30340f69e5077cdf134db92a232" translate="yes" xml:space="preserve">
          <source>Let's say you are upgrading an app from &lt;code&gt;v3.4&lt;/code&gt; to &lt;code&gt;v3.8&lt;/code&gt;. Although you heard there are some new features, your main goal is to keep up with security updates. To do this kind of version upgrade, follow the instructions &lt;a href=&quot;https://cli.emberjs.com/release/basic-use/upgrading/&quot;&gt;here in the CLI Guides&lt;/a&gt;. That process will make sure that any peer dependencies of the &lt;code&gt;ember.js&lt;/code&gt; core codebase get upgraded too. Automated tools will help you make the right changes to &lt;code&gt;package.json&lt;/code&gt; and other files. The point of a minor version bump is that you shouldn't need to change anything in your app when you upgrade - it should all keep working, whether or not you choose to adopt new syntaxes and features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b2e4d7e3967cf6832dddd4b5cc115648948c9c" translate="yes" xml:space="preserve">
          <source>Let's see these core concepts in action by building a property rental application in the next lesson.</source>
          <target state="translated">다음 레슨에서 부동산 임대 애플리케이션을 구축하여 이러한 핵심 개념이 실제로 적용되는 것을 보도록하겠습니다.</target>
        </trans-unit>
        <trans-unit id="663060e93610d9c8026342b7f1ee5fa922ff4c0e" translate="yes" xml:space="preserve">
          <source>Let's see what our first example would look like if we were to write it as a modifier using &lt;code&gt;ember-modifier&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb85bb04d6e37a3d55dd2f9946f3e2bc2fae4c" translate="yes" xml:space="preserve">
          <source>Let's start by adding a &lt;code&gt;div&lt;/code&gt; element to the component template. This &lt;code&gt;div&lt;/code&gt; will act as a place for the 3rd party map API to render the map to.</source>
          <target state="translated">컴포넌트 템플릿에 &lt;code&gt;div&lt;/code&gt; 요소를 추가하여 시작하겠습니다 . 이 &lt;code&gt;div&lt;/code&gt; 는 타사지도 API가지도를 렌더링하는 장소 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="56d73e58f7a22994e9e7d10b8e3ff51f512b440e" translate="yes" xml:space="preserve">
          <source>Let's start by building our &quot;about&quot; page.</source>
          <target state="translated">&quot;정보&quot;페이지를 만들어 시작하겠습니다.</target>
        </trans-unit>
        <trans-unit id="f3c5575b6433892f35f7342f08f5489f655fc407" translate="yes" xml:space="preserve">
          <source>Let's start by creating a service that has a &lt;code&gt;computedFoo&lt;/code&gt; computed property based on a &lt;code&gt;foo&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb162b35ef315066c948b1304b9311aee16c4db" translate="yes" xml:space="preserve">
          <source>Let's start by creating an object that has a &lt;code&gt;computedFoo&lt;/code&gt; computed property based on a &lt;code&gt;foo&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; 속성을 기반으로 &lt;code&gt;computedFoo&lt;/code&gt; 계산 속성 이있는 객체를 만들어 시작하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="ff7832d81c62993788fb20c37421c44bad0995e9" translate="yes" xml:space="preserve">
          <source>Let's start by looking at the changes to our Router (&lt;code&gt;app/router.js&lt;/code&gt;).</source>
          <target state="translated">라우터의 변경 사항 ( &lt;code&gt;app/router.js&lt;/code&gt; )을 살펴 보도록하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="1158b6de0ef66b678d1a6a357023eaed9fa61acf" translate="yes" xml:space="preserve">
          <source>Let's start by testing the helper by showing a simple unit test and then move on to testing with a rendering test afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2aa48423894ccede7d5d25c64e916771df1a170" translate="yes" xml:space="preserve">
          <source>Let's start by testing the helper by showing a simple unit test and then move on to testing with integration tests afterwards.</source>
          <target state="translated">간단한 단위 테스트를 표시하여 도우미 테스트부터 시작한 다음 통합 테스트를 사용한 테스트로 넘어 갑시다.</target>
        </trans-unit>
        <trans-unit id="3ea222d5e7f63db048010e2bbfa7f194273de599" translate="yes" xml:space="preserve">
          <source>Let's start with a small example, a counter component. When the user presses the &lt;code&gt;+1&lt;/code&gt; button, the count will increase by 1. When the user presses the &lt;code&gt;-1&lt;/code&gt; button, the count will decrease by 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82384443f2483e2ef2081fbe6ce58916d2d16261" translate="yes" xml:space="preserve">
          <source>Let's start with the DOM structure of a super-simple component that would remove its contents when a click occurs outside of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b0ae47b82e72cacbda3111f2688c5c5f2be3fe" translate="yes" xml:space="preserve">
          <source>Let's start with the sample HTML for a messaging app (that we introduced in the previous chapter, if you're reading the guides in order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae38ff8f4633f0080025bdd7c1482eee21183d1" translate="yes" xml:space="preserve">
          <source>Let's start with two similar but not identical avatar components, that represent different users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218617d30a76c9b177e946995df0274511e270ad" translate="yes" xml:space="preserve">
          <source>Let's start with what we know already. We'll add the &lt;code&gt;multiple&lt;/code&gt; tracked property and an action called &lt;code&gt;double&lt;/code&gt; that doubles the &lt;code&gt;multiple&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237579341342cf5eddf48126271066c26e8c3078" translate="yes" xml:space="preserve">
          <source>Let's take a look at each type and when you might use one over another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565635cdbaba1baa8ed4a8401c8fea01e1ad7667" translate="yes" xml:space="preserve">
          <source>Let's take a look at the folders and files Ember CLI generates.</source>
          <target state="translated">Ember CLI가 생성하는 폴더와 파일을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="ab5d8a5970da5449c2940266437789fa13727bab" translate="yes" xml:space="preserve">
          <source>Let's take a look at two components that display a person's username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a879debe45fb25e88e56e0a9a4d2687e8b6e70" translate="yes" xml:space="preserve">
          <source>Let's take it step by step.</source>
          <target state="translated">단계별로 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="025b4b83d9d807d0b1598e4a5fdf0cd8ab3fbf8b" translate="yes" xml:space="preserve">
          <source>Let's take look at what that means in a couple circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577e149f6125d2215b6f05199ccbdbe1abb66f3d" translate="yes" xml:space="preserve">
          <source>Let's take the large template and break it up into smaller pieces. We can see that there are 3 distinct parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0f6900a7790927c82dfea6b44f975948e4ede3" translate="yes" xml:space="preserve">
          <source>Let's try to use our &lt;code&gt;&amp;lt;Avatar&amp;gt;&lt;/code&gt; component for the sent message avatar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043c80933b2a6a5bd8843f4d18a90fa90152c0fc" translate="yes" xml:space="preserve">
          <source>Let's update our &lt;code&gt;rental-listing&lt;/code&gt; component template to use our new helper and pass in &lt;code&gt;rental.propertyType&lt;/code&gt;:</source>
          <target state="translated">하자 갱신 우리의 &lt;code&gt;rental-listing&lt;/code&gt; 에 우리의 새로운 도우미를 사용하여 전달하는 구성 요소 템플릿 &lt;code&gt;rental.propertyType&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="133ae71497a85603782cb8b70229c6d6a2783787" translate="yes" xml:space="preserve">
          <source>Let's update the component to do that. It'll take a &lt;code&gt;@username&lt;/code&gt; argument and calculate the title and initial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606a02e2fcda6a8a8667006df471f3c99bd32864" translate="yes" xml:space="preserve">
          <source>Let's update the default test to contain the scenarios we want to verify:</source>
          <target state="translated">확인하려는 시나리오를 포함하도록 기본 테스트를 업데이트하겠습니다.</target>
        </trans-unit>
        <trans-unit id="670783028da291a6a49d5996e531bc96807e06e5" translate="yes" xml:space="preserve">
          <source>Let's use Ember's route generator to start our &lt;code&gt;about&lt;/code&gt; route.</source>
          <target state="translated">하자의 사용 엠버의 경로 생성기는 우리의 시작 &lt;code&gt;about&lt;/code&gt; 경로를.</target>
        </trans-unit>
        <trans-unit id="1c89369985b54e2bd39755237a790278e410475d" translate="yes" xml:space="preserve">
          <source>Let's use the &lt;code&gt;{{if}}&lt;/code&gt; helper to show our current rental image larger only when &lt;code&gt;isWide&lt;/code&gt; is set to true, by setting the element class name to &lt;code&gt;wide&lt;/code&gt;. We'll also add some text to indicate that the image can be clicked on, and wrap both with an anchor element, giving it the &lt;code&gt;image&lt;/code&gt; class name so that our test can find it.</source>
          <target state="translated">요소 클래스 이름을 &lt;code&gt;wide&lt;/code&gt; 로 설정하여 &lt;code&gt;isWide&lt;/code&gt; 가 true로 설정된 경우에만 &lt;code&gt;{{if}}&lt;/code&gt; 도우미를 사용하여 현재 대여 이미지를 더 크게 표시해 보겠습니다 . 또한 이미지를 클릭 할 수 있음을 나타내는 텍스트를 추가하고 앵커 요소로 둘 다 감싸서 &lt;code&gt;image&lt;/code&gt; 클래스 이름을 지정하여 테스트에서 찾을 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="89d849f40b52e102654d51fd7d92dff536022969" translate="yes" xml:space="preserve">
          <source>Let's use the creation of a TinyMCE component as an example. Currently, TinyMCE provides a setup configuration option we can use to do some processing after the TinyMCE instance is initialized but before it is actually rendered. We can use that setup option to do some additional setup for our component. The component itself could look something like the following:</source>
          <target state="translated">TinyMCE 컴포넌트 생성을 예로 들어 봅시다. 현재 TinyMCE는 TinyMCE 인스턴스가 초기화 된 후 실제로 렌더링되기 전에 일부 처리를 수행하는 데 사용할 수있는 설정 구성 옵션을 제공합니다. 해당 설정 옵션을 사용하여 컴포넌트에 대한 추가 설정을 수행 할 수 있습니다. 구성 요소 자체는 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67eb54f6056cb9b4a29c6a56cd99c5c9161ed991" translate="yes" xml:space="preserve">
          <source>Let's use the pressing of the escape key as an example. If you wanted to invoke a controller action when a user presses the escape key while on your field, you would use the &lt;code&gt;escape-press&lt;/code&gt; attribute on your field like so:</source>
          <target state="translated">이스케이프 키 누름을 예로 들어 봅시다. 사용자가 필드에서 이스케이프 키를 누를 때 제어기 조치를 호출하려면 다음 과 같이 필드 에서 &lt;code&gt;escape-press&lt;/code&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0946f7fd87cca9c49382d10b9e9e28288b447771" translate="yes" xml:space="preserve">
          <source>Let's use this hook to cleanup our date picker and event listener from above:</source>
          <target state="translated">이 후크를 사용하여 날짜 선택기 및 이벤트 리스너를 위에서 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="20e7c26e92650cd8cc308c911a7985599ad92d4f" translate="yes" xml:space="preserve">
          <source>Let's work through what we want to do on the home page. We want our application to:</source>
          <target state="translated">홈페이지에서 우리가하고 싶은 일을 봅시다. 우리는 우리의 어플리케이션이</target>
        </trans-unit>
        <trans-unit id="635a95b002cf836140f8bfffc7a9737eb04db8de" translate="yes" xml:space="preserve">
          <source>Lets add some protective code to ensure our results do not get out of sync with our filter input. To do this we'll simply provide the filter text to the filter function, so that when the results come back we can compare the original filter value with the current filter value. We will update the results on screen only if the original filter value and the current filter value are the same.</source>
          <target state="translated">결과가 필터 입력과 동기화되지 않도록 보호 코드를 추가 할 수 있습니다. 이를 위해 단순히 필터 텍스트를 필터 함수에 제공하여 결과가 다시 나오면 원래 필터 값과 현재 필터 값을 비교할 수 있습니다. 원래 필터 값과 현재 필터 값이 동일한 경우에만 화면에서 결과를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="bc44f6fd03fb10139ad97676e11707e10e54b58c" translate="yes" xml:space="preserve">
          <source>Lets begin by opening the component integration test created when we generated our &lt;code&gt;list-filter&lt;/code&gt; component, &lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt;. Remove the default test, and create a new test that verifies that by default, the component will list all items.</source>
          <target state="translated">&lt;code&gt;list-filter&lt;/code&gt; 구성 요소, &lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt; 를 생성 할 때 생성 된 구성 요소 통합 테스트를 열어 보자 . 기본 테스트를 제거하고 기본적으로 구성 요소가 모든 항목을 나열하는지 확인하는 새 테스트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c885b189d5463a9de5e3e50647d490118201ec4c" translate="yes" xml:space="preserve">
          <source>Libraries on top of Ember can add initializers, like so:</source>
          <target state="translated">Ember 위에있는 라이브러리는 다음과 같이 이니셜 라이저를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="945316ced7cc6b53c759ff6f262d52bfcb61c767" translate="yes" xml:space="preserve">
          <source>Library Info</source>
          <target state="translated">도서관 정보</target>
        </trans-unit>
        <trans-unit id="c4a417c6c7ec6f5a4f9e827b354dbb85f2e88f9b" translate="yes" xml:space="preserve">
          <source>Library authors can customize how any object will display in the Inspector. By defining a &lt;code&gt;_debugInfo&lt;/code&gt; method, an object can tell the Inspector how it should be rendered. For an example on how to customize an object's properties, see &lt;a href=&quot;https://github.com/emberjs/data/blob/f1be2af71d7402d034bc034d9502733647cad295/packages/ember-data/lib/system/debug/debug_info.js&quot;&gt;Ember Data's customization&lt;/a&gt;.</source>
          <target state="translated">라이브러리 작성자는 개체가 관리자에 표시되는 방식을 사용자 정의 할 수 있습니다. &lt;code&gt;_debugInfo&lt;/code&gt; 메소드 를 정의 하면 객체가 인스펙터에게 렌더링 방법을 알릴 수 있습니다. 객체의 속성을 사용자 정의하는 방법에 대한 예는 &lt;a href=&quot;https://github.com/emberjs/data/blob/f1be2af71d7402d034bc034d9502733647cad295/packages/ember-data/lib/system/debug/debug_info.js&quot;&gt;Ember Data의 사용자 정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="8226bf9e9b956346502b16db50675cd108dd1920" translate="yes" xml:space="preserve">
          <source>Life Without Prototype Extension</source>
          <target state="translated">시제품 연장없는 생활</target>
        </trans-unit>
        <trans-unit id="57ec013a3d266c6865a25d72a7960cd8d6bed640" translate="yes" xml:space="preserve">
          <source>Lifecycle Hook Examples</source>
          <target state="translated">수명주기 후크 예</target>
        </trans-unit>
        <trans-unit id="53264998a6089ee66d685511c855c571a1d9049a" translate="yes" xml:space="preserve">
          <source>Lifecycle Hooks &amp;amp; Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8e53605ae2802620fb0095daba61733e84fe62" translate="yes" xml:space="preserve">
          <source>Lifecycle and Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e40ca34906ca9144be58298c4927fe5e3a283f6" translate="yes" xml:space="preserve">
          <source>Lifecycle hooks are greatly simplified and easier to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7756d2056b7d20b67e5f847928e2cf4a83f1d6" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;find&lt;/code&gt;, but throws an error if the element selector returns no results.</source>
          <target state="translated">마찬가지로 &lt;code&gt;find&lt;/code&gt; 있지만, 요소의 선택이 더 결과를 반환하지 않는 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="612e4d1ad2570e11b34b0d3d1f69299fe0603dcc" translate="yes" xml:space="preserve">
          <source>Like HTML, all values for attributes that are not wrapped in strings are coerced to strings. If you want to pass a boolean or number to a component and &lt;em&gt;not&lt;/em&gt; have it coerced to a string, wrap it in curly braces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ff675c379589d88041784c63e59222fb0ad141" translate="yes" xml:space="preserve">
          <source>Like any Ember object, a service is initialized and can have properties and methods of its own. Below, the shopping cart service manages an items array that represents the items currently in the shopping cart.</source>
          <target state="translated">다른 Ember 객체와 마찬가지로 서비스는 초기화되며 고유 한 속성과 메서드를 가질 수 있습니다. 아래에서 쇼핑 카트 서비스는 현재 쇼핑 카트에있는 항목을 나타내는 항목 배열을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="f24ff1b32ab054733196fb79b66cf78f2352602e" translate="yes" xml:space="preserve">
          <source>Like any helper, the &lt;code&gt;unbound&lt;/code&gt; helper can accept a nested helper expression. This allows for custom helpers to be rendered unbound:</source>
          <target state="translated">도우미와 마찬가지로 &lt;code&gt;unbound&lt;/code&gt; 도우미는 중첩 도우미 식을 허용 할 수 있습니다. 이를 통해 커스텀 헬퍼를 언 바운드로 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27383622ae3b0baab5bfbaf6485a40f3cea2d864" translate="yes" xml:space="preserve">
          <source>Like any service, it can also be injected into helpers, routes, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929d278b25f19e77681c7288170d39454816b011" translate="yes" xml:space="preserve">
          <source>Like functions declared on objects, they can access the instance using &lt;code&gt;this&lt;/code&gt;, so they can store and access variables on the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfe4ba38fb0132e2302d708bc9388449f7a2e79" translate="yes" xml:space="preserve">
          <source>Like many programming languages, Ember also allows you to write &lt;code&gt;if else&lt;/code&gt; and &lt;code&gt;if else if&lt;/code&gt; statements in a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da71805f173628667619ce079198a695a3350514" translate="yes" xml:space="preserve">
          <source>Like methods, accessors do &lt;em&gt;not&lt;/em&gt; exist on the class itself, and instead are on the class prototype. As such, they are only readily accessible on &lt;em&gt;instances&lt;/em&gt; of the class. However, they can be added to the class directly using the &lt;code&gt;static&lt;/code&gt; keyword, which is described in more detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aa5990e7980b9aa614cd12afffc38c4f316c64" translate="yes" xml:space="preserve">
          <source>Like normal attributes, actions can be a property on the component; the only difference is that the property is set to a function that knows how to trigger behavior.</source>
          <target state="translated">일반적인 속성과 마찬가지로 작업은 구성 요소의 속성 일 수 있습니다. 유일한 차이점은 속성이 동작을 트리거하는 방법을 알고있는 함수로 설정되어 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c2cac3e8601ae552602a520670e5074a8519074e" translate="yes" xml:space="preserve">
          <source>Like other helpers, the &lt;code&gt;{{#each}}&lt;/code&gt; helper is bound. If a new item is added to or removed from the iterated array, the DOM will be updated without having to write any additional code. That said, Ember requires that you use &lt;a href=&quot;https://guides.emberjs.com/object-model/enumerables/#toc_use-of-observable-methods-and-properties&quot;&gt;special methods&lt;/a&gt; to update bound arrays. Also be aware that &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#toc_specifying-keys&quot;&gt;using the &lt;code&gt;key&lt;/code&gt; option with an each helper&lt;/a&gt; can improve re-render performance when an array is replaced with another containing similar items.</source>
          <target state="translated">다른 도우미와 마찬가지로 &lt;code&gt;{{#each}}&lt;/code&gt; 도우미가 바인딩됩니다. 반복 된 배열에 새 항목이 추가되거나 제거되면 추가 코드를 작성하지 않고도 DOM이 업데이트됩니다. 즉, Ember는 바인딩 된 배열을 업데이트하기 위해 &lt;a href=&quot;https://guides.emberjs.com/object-model/enumerables/#toc_use-of-observable-methods-and-properties&quot;&gt;특별한 방법&lt;/a&gt; 을 사용해야 합니다. 또한 &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#toc_specifying-keys&quot;&gt;각 도우미와 함께 &lt;/a&gt; &lt;code&gt;key&lt;/code&gt; 옵션 을 사용하면 어레이가 유사한 항목을 포함하는 다른 것으로 교체 될 때 다시 렌더링 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed9307db11ab0375bce3736c5f74b6ce9fc62315" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;if&lt;/code&gt; helper, the &lt;code&gt;unless&lt;/code&gt; helper also has a block form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5368091bb8913e46aa5ac099e90ff00c3876dcb1" translate="yes" xml:space="preserve">
          <source>Like the filtering methods, the &lt;code&gt;every()&lt;/code&gt; and &lt;code&gt;any()&lt;/code&gt; methods have analogous &lt;code&gt;isEvery()&lt;/code&gt; and &lt;code&gt;isAny()&lt;/code&gt; methods.</source>
          <target state="translated">필터링 메소드와 마찬가지로 &lt;code&gt;every()&lt;/code&gt; 및 &lt;code&gt;any()&lt;/code&gt; 메소드에는 유사한 &lt;code&gt;isEvery()&lt;/code&gt; 및 &lt;code&gt;isAny()&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc961a3d01ec909c094017c150b7bdeb3817e489" translate="yes" xml:space="preserve">
          <source>Likewise, if the user navigates to &lt;code&gt;/posts&lt;/code&gt;, the current route will be &lt;code&gt;posts.index&lt;/code&gt;, and the &lt;code&gt;posts/index&lt;/code&gt; template will be rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; of the &lt;code&gt;posts&lt;/code&gt; template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace18740b81dab0322b75335cffde9805b53a9b6" translate="yes" xml:space="preserve">
          <source>Likewise, if you try to call &lt;code&gt;get&lt;/code&gt; on a property whose value is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;unknownProperty()&lt;/code&gt; method will be called on the object. If this method returns any value other than &lt;code&gt;undefined&lt;/code&gt;, it will be returned instead. This allows you to implement &quot;virtual&quot; properties that are not defined upfront.</source>
          <target state="translated">마찬가지로, 값이 &lt;code&gt;undefined&lt;/code&gt; 인 속성에 대해 &lt;code&gt;get&lt;/code&gt; 을 호출하려고 하면 객체 에서 &lt;code&gt;unknownProperty()&lt;/code&gt; 메서드가 호출됩니다. 이 메소드가 &lt;code&gt;undefined&lt;/code&gt; 이외의 다른 값을 리턴하면 대신 리턴됩니다. 이를 통해 미리 정의되지 않은 &quot;가상&quot;속성을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e599d44431c356d188f2d7acca83482d750be9e1" translate="yes" xml:space="preserve">
          <source>Likewise, properties that are not decorated with &lt;code&gt;@tracked&lt;/code&gt; that you get using &lt;code&gt;get&lt;/code&gt; will also autotrack, and update later on when you use &lt;code&gt;set&lt;/code&gt; to update them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c5555cae22b7bb9706107a4ca1a41e719e438c" translate="yes" xml:space="preserve">
          <source>Link to contact information</source>
          <target state="translated">연락처 정보에 연결</target>
        </trans-unit>
        <trans-unit id="74076a27ecfcb330397619467fbee055750ed67b" translate="yes" xml:space="preserve">
          <source>Link to information about the company</source>
          <target state="translated">회사 정보에 ​​대한 링크</target>
        </trans-unit>
        <trans-unit id="5d77a7c8983578d904111c3bee72bdf79449008b" translate="yes" xml:space="preserve">
          <source>LinkComponent</source>
          <target state="translated">LinkComponent</target>
        </trans-unit>
        <trans-unit id="ac4a62a01d54a4764c6d144461d6c9e37e4819d1" translate="yes" xml:space="preserve">
          <source>LinkComponent.rel</source>
          <target state="translated">LinkComponent.rel</target>
        </trans-unit>
        <trans-unit id="068f864595f3d7241ef7c9fff7bc30dab9fcc7a5" translate="yes" xml:space="preserve">
          <source>Linking Between Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940de94ebf96b39d03d62b9606182c5b87b78db6" translate="yes" xml:space="preserve">
          <source>Linking to a Specific Rental</source>
          <target state="translated">특정 임대료에 연결</target>
        </trans-unit>
        <trans-unit id="01d446dbddbc96ed4805d1aaea9745231dc871e7" translate="yes" xml:space="preserve">
          <source>Linking to a dynamic segment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="90f76386e11d7ad585627bc493ee7aedded009f6" translate="yes" xml:space="preserve">
          <source>Links beginning with &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, will be used as is, with no further manipulation.</source>
          <target state="translated">&lt;code&gt;//&lt;/code&gt; , &lt;code&gt;http://&lt;/code&gt; , &lt;code&gt;https://&lt;/code&gt; 로 시작하는 링크 는 추가 조작없이 그대로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf37ddbb4833e091bc4ad70d9b2018056400b70" translate="yes" xml:space="preserve">
          <source>Links beginning with a single &lt;code&gt;/&lt;/code&gt; will have the current adapter's &lt;code&gt;host&lt;/code&gt; value prepended to it.</source>
          <target state="translated">단일 &lt;code&gt;/&lt;/code&gt; 으로 시작하는 링크 에는 현재 어댑터의 &lt;code&gt;host&lt;/code&gt; 값이 앞에 붙습니다.</target>
        </trans-unit>
        <trans-unit id="f7264df21b6806560320b80c6b7fbb6558a5eb0e" translate="yes" xml:space="preserve">
          <source>Links with no beginning &lt;code&gt;/&lt;/code&gt; will have a parentURL prepended to it, via the current adapter's &lt;code&gt;buildURL&lt;/code&gt;.</source>
          <target state="translated">시작 &lt;code&gt;/&lt;/code&gt; 이 없는 링크 는 현재 어댑터의 &lt;code&gt;buildURL&lt;/code&gt; 을 통해 부모 URL 앞에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="66bf4d535a1ef04e79b6cdc89f1a06627656f756" translate="yes" xml:space="preserve">
          <source>Linter, linting</source>
          <target state="translated">린터, 보풀</target>
        </trans-unit>
        <trans-unit id="bbba5a3d0f934d3dca2995dd3e4663bd1ec20aff" translate="yes" xml:space="preserve">
          <source>Linux users can use &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;this guide for Node.js installation on Linux&lt;/a&gt;.</source>
          <target state="translated">Linux 사용자는 Linux &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;에서 Node.js 설치에이 안내서를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29b74ca8265c653c34364f3d4acd28cd24128388" translate="yes" xml:space="preserve">
          <source>List of objects defining filters. The object should have a `name` and `desc` property.</source>
          <target state="translated">필터를 정의하는 객체 목록. 객체는`name`과`desc` 속성을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="00607eeb7342e3f04724c5834e4e2e8f7c2f6ff1" translate="yes" xml:space="preserve">
          <source>List the available rentals</source>
          <target state="translated">사용 가능한 대여 목록</target>
        </trans-unit>
        <trans-unit id="d03c2905c8cd553f3f1f729734fe9cef1280d14a" translate="yes" xml:space="preserve">
          <source>Listed below are the component lifecycle hooks in order of execution according to render scenario.</source>
          <target state="translated">아래는 렌더 시나리오에 따라 실행 순서에 따른 구성 요소 수명주기 후크입니다.</target>
        </trans-unit>
        <trans-unit id="71fda1eb7537f9f6569b136fa9708b82f81f2fcd" translate="yes" xml:space="preserve">
          <source>Listing features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02afd43a11c4310cdd19459b87081ef2af547ad3" translate="yes" xml:space="preserve">
          <source>Loading / Error Substates</source>
          <target state="translated">로드 / 오류 하위 상태</target>
        </trans-unit>
        <trans-unit id="0989b580dabe8ed18a9790d54605768f7b2e7f15" translate="yes" xml:space="preserve">
          <source>Loads a record in a belongs to relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load.</source>
          <target state="translated">아직로드되지 않은 경우 관계에 속하는 레코드를로드합니다. 관계가 이미로드 된 경우이 메소드는 새로드를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56131565fdf53afb990afc6960193790fa3ff98d" translate="yes" xml:space="preserve">
          <source>Loads a record in a belongs-to relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed570ef8b28d2a9d4b5544de5723875a7b30ab7" translate="yes" xml:space="preserve">
          <source>Loads a route, sets up any controllers, and renders any templates associated with the route as though a real user had triggered the route change while using your app.</source>
          <target state="translated">앱을 사용하는 동안 실제 사용자가 경로 변경을 트리거 한 것처럼 경로를로드하고 컨트롤러를 설정하며 경로와 연결된 템플릿을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="8b618c79a59fd45e8d69fc13ceb218d48e4542b0" translate="yes" xml:space="preserve">
          <source>Loads the relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load.</source>
          <target state="translated">관계가 아직로드되지 않은 경우로드합니다. 관계가 이미로드 된 경우이 메소드는 새로드를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="25bea80398f09cf246d75fde79f5e6f2c3b9c98e" translate="yes" xml:space="preserve">
          <source>Loads the relationship if it is not already loaded. If the relationship is already loaded this method does not trigger a new load. This causes a request to the specified relationship link or reloads all items currently in the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5d370fe888f5c3ee4aea91ac1a697813e38032" translate="yes" xml:space="preserve">
          <source>Local variables, introduced via a yield, can still be referred to directly (without &lt;code&gt;this&lt;/code&gt;) since they're unambiguous:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b0da20d6e4d3578fde73b0982ef39086f18d71" translate="yes" xml:space="preserve">
          <source>Location API</source>
          <target state="translated">위치 API</target>
        </trans-unit>
        <trans-unit id="3c20cc766b3ed4cefd9c0f4868560b2be809f67b" translate="yes" xml:space="preserve">
          <source>Log generated controller</source>
          <target state="translated">로그 생성 컨트롤러</target>
        </trans-unit>
        <trans-unit id="5d5c719cb08629876124bf7f8b02dda0475b8203" translate="yes" xml:space="preserve">
          <source>Log object bindings</source>
          <target state="translated">로그 객체 바인딩</target>
        </trans-unit>
        <trans-unit id="603c2cf3c52217f421f3b823673b4e845405e05d" translate="yes" xml:space="preserve">
          <source>Log router transitions</source>
          <target state="translated">로그 라우터 전환</target>
        </trans-unit>
        <trans-unit id="aa00341e83ed481f80d9005fae06dbb9d29b533e" translate="yes" xml:space="preserve">
          <source>Log view lookups</source>
          <target state="translated">로그 뷰 조회</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="f2e14633e86adb02560262087e31589175004916" translate="yes" xml:space="preserve">
          <source>Logging.</source>
          <target state="translated">Logging.</target>
        </trans-unit>
        <trans-unit id="3c2235b03acf7069ebc5be2218e01685d289628c" translate="yes" xml:space="preserve">
          <source>Looping Through Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb61d93b64bfa5767831b843414911c83c1236" translate="yes" xml:space="preserve">
          <source>Looping Through Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74227d8631b812dcd048c45d2e233e2a8d05f33f" translate="yes" xml:space="preserve">
          <source>Luckily, Ember comes with a solution out of the box for this. Ember applications use &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; to compile modern JavaScript to something that can work on &lt;em&gt;all&lt;/em&gt; browsers. This means you can write modern JavaScript and use the latest features without any additional setup!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f2785689ad2ed728b104034fd0390eb004fe8" translate="yes" xml:space="preserve">
          <source>MDN Web Docs: Accessibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfaba86c08ed86838f22fb60cceb822f0b9db4c" translate="yes" xml:space="preserve">
          <source>Mac users often prefer to install Node using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. After installing Homebrew, run &lt;code&gt;brew install node&lt;/code&gt; to install Node.js. Alternatively, installer packages are available directly from &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;.</source>
          <target state="translated">Mac 사용자는 종종 &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew를&lt;/a&gt; 사용하여 노드를 설치하는 것을 선호합니다 . Homebrew를 설치 한 후 &lt;code&gt;brew install node&lt;/code&gt; 를 실행 하여 Node.js를 설치하십시오. 또는 설치 프로그램 패키지는 &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt; 에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca7652dab0737da1dfe2d7881b6a3786dc0a78f9" translate="yes" xml:space="preserve">
          <source>Maintaining large monolithic applications poses the following challenges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc38a019e3efb920b50e4912d6b81c2bd199b87" translate="yes" xml:space="preserve">
          <source>Make sure the &quot;Display the Ember favicon when a site runs Ember.js&quot; checkbox is checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2443f268bec1ac71f9689a446f93b5003aeaf34" translate="yes" xml:space="preserve">
          <source>Make sure the &quot;Display the Tomster&quot; checkbox is checked.</source>
          <target state="translated">&quot;Toster 표시&quot;체크 상자가 체크되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6ad226711cb1283574db1e4c496932d2f5407750" translate="yes" xml:space="preserve">
          <source>Make sure the Inspector is active when you call this method.</source>
          <target state="translated">이 메소드를 호출 할 때 인스펙터가 활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5be8b4e32ecc791ac6bd4b6f06d2b9e2c830fcde" translate="yes" xml:space="preserve">
          <source>Make sure to use these accessor methods; otherwise, computed properties won't recalculate, observers won't fire, and templates won't update.</source>
          <target state="translated">이러한 접근 자 메서드를 사용해야합니다. 그렇지 않으면 계산 된 속성이 다시 계산되지 않고 관찰자가 실행되지 않으며 템플릿이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c908441165d63e5547da102fea7b056e0180ab53" translate="yes" xml:space="preserve">
          <source>Make sure you are logged-in to your Netlify account and in the &quot;Sites&quot; section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10cf5cb44c73808cbd9b0ee95ade42559077f79" translate="yes" xml:space="preserve">
          <source>Make sure you are testing performance on real devices. Simulated mobile environments on a desktop computer give an optimistic-at-best representation of what your real world performance will be like. The more operating systems and hardware configurations you test, the more confident you can be.</source>
          <target state="translated">실제 장치에서 성능을 테스트하고 있는지 확인하십시오. 데스크탑 컴퓨터에서 시뮬레이션 된 모바일 환경은 실제 성능이 어떤지에 대해 낙관적이며 최상의 표현을 제공합니다. 테스트 할 운영 체제 및 하드웨어 구성이 많을수록 자신감을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4b28eac87396cdc54aabf1394e488ee8f47ac04" translate="yes" xml:space="preserve">
          <source>Make sure you list these dependencies so Ember knows when to update bindings that connect to a computed property. Changing a dependency will not immediately trigger an update of the computed property, but will instead clear the cache so that it is updated when the next &lt;code&gt;get&lt;/code&gt; is called on the property.</source>
          <target state="translated">Ember가 계산 된 속성에 연결하는 바인딩을 업데이트 할시기를 알 수 있도록 이러한 종속성을 나열해야합니다. 종속성을 변경하면 계산 된 속성의 업데이트가 즉시 트리거되지 않지만 대신 캐시에서 다음 &lt;code&gt;get&lt;/code&gt; 이 호출 될 때 업데이트되도록 캐시 가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="d867490c5d6df24c478defa0929214c97994571f" translate="yes" xml:space="preserve">
          <source>Makes a method available via an additional name.</source>
          <target state="translated">추가 이름을 통해 메소드를 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="3487405a3a6c3407ed3b749706a0532a845dd11f" translate="yes" xml:space="preserve">
          <source>Making API Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c324510651548eb44cd83c2afb3351e2d31a161e" translate="yes" xml:space="preserve">
          <source>Making Google Maps Available</source>
          <target state="translated">Google지도 사용 가능</target>
        </trans-unit>
        <trans-unit id="6b2c35fea089f0887b25b17735fb5a1d326a2654" translate="yes" xml:space="preserve">
          <source>Making Updates to the Rendered DOM with &lt;code&gt;didRender&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;didRender&lt;/code&gt; 를 사용하여 렌더링 된 DOM 업데이트</target>
        </trans-unit>
        <trans-unit id="3ee78f1c46ac57067254648d0604355f4a4b3d6f" translate="yes" xml:space="preserve">
          <source>Making a &lt;code&gt;total&lt;/code&gt; getter that computed the total from the &lt;code&gt;amount&lt;/code&gt; and &lt;code&gt;multiple&lt;/code&gt; properties was more &lt;strong&gt;declarative&lt;/strong&gt; than setting &lt;code&gt;total&lt;/code&gt; in all of the places that could have affected it. If you had changed &lt;code&gt;total&lt;/code&gt; directly, you would have taken the &lt;em&gt;&quot;imperative&quot; approach&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bfaf1566829005270d36f38f0ffe1bc5723469" translate="yes" xml:space="preserve">
          <source>Making changes to Ember Data records is as simple as setting the attribute you want to change:</source>
          <target state="translated">Ember Data 레코드를 변경하는 것은 변경하려는 속성을 설정하는 것만 큼 간단합니다.</target>
        </trans-unit>
        <trans-unit id="dcaec0425116cb667caf4bac2560e1cc169c5402" translate="yes" xml:space="preserve">
          <source>Managing Dependencies</source>
          <target state="translated">종속성 관리</target>
        </trans-unit>
        <trans-unit id="0a1dce3afa2a758b324278c128ff58ba9875d011" translate="yes" xml:space="preserve">
          <source>Managing deprecations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca16ccf270ae26f38a156a8a5a7b3bfdacf3b81" translate="yes" xml:space="preserve">
          <source>Manipulating Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578d011ae11ac68c304425259e305f8848813dbd" translate="yes" xml:space="preserve">
          <source>Manipulating Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea6cfff41839850339191f450697e9fedb83e60" translate="yes" xml:space="preserve">
          <source>Manually adds errors to the record. This will trigger the &lt;code&gt;becameInvalid&lt;/code&gt; event/ lifecycle method on the record and transition the record into an &lt;code&gt;invalid&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06165faf9421be47fa5477e4f73a5b94550f21bd" translate="yes" xml:space="preserve">
          <source>Manually removes all errors for a given member from the record. This will transition the record into a &lt;code&gt;valid&lt;/code&gt; state, and triggers the &lt;code&gt;becameValid&lt;/code&gt; event and lifecycle method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3335d8589b2cf86792d8aa4d8111f37f0f18ca" translate="yes" xml:space="preserve">
          <source>Many applications will find writing their own adapter to be allow greater flexibility, customization, and maintenance than attempting to override methods in these adapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4230443301dc86b1d32977a2e578432f3a726a" translate="yes" xml:space="preserve">
          <source>Many applications will find writing their own serializer to be more performant and less complex than extending these classes even when their API format is very close to that expected by these serializers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5b5bc4db6b9a07519c515c5725d7ebc1a458e9" translate="yes" xml:space="preserve">
          <source>Many computed properties have dependencies on other properties. For example, in the above example, the &lt;code&gt;fullName&lt;/code&gt; property depends on &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; to determine its value. You can tell Ember about these dependencies like this:</source>
          <target state="translated">많은 계산 속성이 다른 속성에 종속됩니다. 예를 들어 위 예제에서 &lt;code&gt;fullName&lt;/code&gt; 속성은 &lt;code&gt;firstName&lt;/code&gt; 및 &lt;code&gt;lastName&lt;/code&gt; 에 따라 값을 결정합니다. 다음과 같은 종속성에 대해 Ember에 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d0ee43547443c4294da0d576f7c7accbdb68cf6" translate="yes" xml:space="preserve">
          <source>Many of Ember's built-in helpers (as well as your custom helpers) can be used in nested form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b31bc269a60f245ce759ee19932b6d67fae66e" translate="yes" xml:space="preserve">
          <source>Many of the common HTML properties you would want to use like &lt;code&gt;class&lt;/code&gt;, and &lt;code&gt;rel&lt;/code&gt; will work. When adding class names, Ember will also apply the standard &lt;code&gt;ember-view&lt;/code&gt; and possibly &lt;code&gt;active&lt;/code&gt; class names.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 와 같은 일반적인 HTML 속성 중 많은 것들이 사용 되며 &lt;code&gt;rel&lt;/code&gt; 이 작동합니다. 클래스 이름을 추가 할 때 Ember는 표준 &lt;code&gt;ember-view&lt;/code&gt; 및 가능한 &lt;code&gt;active&lt;/code&gt; 클래스 이름 도 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="6b961b379063852ca79321587bc3a8c0ab661545" translate="yes" xml:space="preserve">
          <source>Many other libraries provide some kind of iterator or enumeration like facility. This is often where the most common API conflicts occur. Ember's API is designed to be as friendly as possible with other libraries by implementing only methods that mostly correspond to the JavaScript 1.8 API.</source>
          <target state="translated">다른 많은 라이브러리는 일종의 반복자 또는 기능과 같은 열거를 제공합니다. 가장 일반적인 API 충돌이 발생하는 경우가 종종 있습니다. Ember의 API는 대부분 JavaScript 1.8 API에 해당하는 메소드 만 구현하여 다른 라이브러리와 최대한 친숙하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="2ca19e6e187118e63e97c39edbdf6a65e72c04c2" translate="yes" xml:space="preserve">
          <source>Many servers, such as Rails and PHP, will automatically convert this URL-encoded array into an Array for you on the server-side. If you want to encode the IDs, differently, just override this (one-line) method.</source>
          <target state="translated">Rails 및 PHP와 같은 많은 서버는이 URL 인코딩 배열을 서버 측 배열로 자동 변환합니다. ID를 다르게 인코딩하려면이 (한 줄) 방법을 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="1bee9fefa75d1483e8070e9750032eef28ff759d" translate="yes" xml:space="preserve">
          <source>Many-To-Many</source>
          <target state="translated">Many-To-Many</target>
        </trans-unit>
        <trans-unit id="c883031b9ab452aff47320db2b5868dd27dd5be3" translate="yes" xml:space="preserve">
          <source>Many-to-Many</source>
          <target state="translated">Many-to-Many</target>
        </trans-unit>
        <trans-unit id="7e1740b176fd4ec2d794dd714d5c355669c05e41" translate="yes" xml:space="preserve">
          <source>ManyArray</source>
          <target state="translated">ManyArray</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="510afa932a8af5b85329d8ebc5ac4856e95f63ef" translate="yes" xml:space="preserve">
          <source>Map a controller's property to a different query param key</source>
          <target state="translated">컨트롤러의 속성을 다른 쿼리 매개 변수 키에 매핑</target>
        </trans-unit>
        <trans-unit id="a89a789ab5fcdfe6e7cedcf5a3677beb9a16fe8f" translate="yes" xml:space="preserve">
          <source>Maps all of the items in the enumeration to another value, returning a new array. This method corresponds to &lt;code&gt;map()&lt;/code&gt; defined in JavaScript 1.6.</source>
          <target state="translated">열거의 모든 항목을 다른 값으로 매핑하여 새 배열을 반환합니다. 이 메소드 는 JavaScript 1.6에 정의 된 &lt;code&gt;map()&lt;/code&gt; 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="fbe8601461d7ed761fcd5a028a86fa5c4bf1934e" translate="yes" xml:space="preserve">
          <source>Mark a string as safe for unescaped output with Ember templates. If you return HTML from a helper, use this function to ensure Ember's rendering layer does not escape the HTML.</source>
          <target state="translated">Ember 템플릿으로 이스케이프되지 않은 출력에 대해 문자열을 안전한 것으로 표시하십시오. 도우미에서 HTML을 반환하는 경우이 함수를 사용하여 Ember의 렌더링 레이어가 HTML을 이스케이프하지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="800694d4e77859d708a0f2d1d4db0de6ce1d5dcb" translate="yes" xml:space="preserve">
          <source>Mark the callback passed to the &lt;code&gt;test&lt;/code&gt; function as asynchronous using the &lt;code&gt;async&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747fbf27d992925e716d2587c746ccbc6bb0aa91" translate="yes" xml:space="preserve">
          <source>Marks a property as tracked. By default, values that are rendered in Ember app templates are &lt;em&gt;static&lt;/em&gt;, meaning that updates to them won't cause the application to rerender. Marking a property as tracked means that when that property changes, any templates that used that property, directly or indirectly, will rerender. For instance, consider this component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8384f3697cae9999b84d6bff001ae61ca3ac5e" translate="yes" xml:space="preserve">
          <source>Marks the record as deleted but does not save it. You must call &lt;code&gt;save&lt;/code&gt; afterwards if you want to persist it. You might use this method if you want to allow the user to still &lt;code&gt;rollbackAttributes()&lt;/code&gt; after a delete was made.</source>
          <target state="translated">레코드를 삭제 된 것으로 표시하지만 저장하지는 않습니다. &lt;code&gt;save&lt;/code&gt; 나중에 저장을 호출해야 합니다. 삭제 후 사용자가 여전히 &lt;code&gt;rollbackAttributes()&lt;/code&gt; 를 허용하도록하려면이 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bac0d3d947e9fdd665ad852998a4db64d1a76ff7" translate="yes" xml:space="preserve">
          <source>May cause the DOM to update in response to those changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef56709ca6a20c8e16b3f6b056dde8c7b15f5b0" translate="yes" xml:space="preserve">
          <source>Measure performance from the beginning, and keep testing as your app develops.</source>
          <target state="translated">처음부터 성능을 측정하고 앱이 개발됨에 따라 테스트를 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="8c2479a17e803025649242a9474178042dc135a9" translate="yes" xml:space="preserve">
          <source>Merge the contents of two objects together into the first object.</source>
          <target state="translated">두 객체의 내용을 첫 번째 객체로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="ea9fc818037e4c1eb523043b8c97a427dff9ed43" translate="yes" xml:space="preserve">
          <source>Metadata associated with the request for async hasMany relationships.</source>
          <target state="translated">비동기 요청과 관련된 메타 데이터에는 많은 관계가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdd0b54a13118c5e57a4f231ed1e30a46262760c" translate="yes" xml:space="preserve">
          <source>Method Implementation</source>
          <target state="translated">방법 구현</target>
        </trans-unit>
        <trans-unit id="fb4e599fda756443d7e1a45a5e3f433bc0cffb30" translate="yes" xml:space="preserve">
          <source>Method to call to remove all observers</source>
          <target state="translated">모든 관찰자를 제거하기 위해 호출하는 메소드</target>
        </trans-unit>
        <trans-unit id="f3f9a4f8e75f8f8fc949764d8a4323ec811afdd7" translate="yes" xml:space="preserve">
          <source>Method to call to remove all observers.</source>
          <target state="translated">모든 관찰자를 제거하기 위해 호출하는 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="3382975c2f98c7ed302504a43959793238b27e2b" translate="yes" xml:space="preserve">
          <source>Method to invoke. May be a function or a string. If you pass a string then it will be looked up on the passed target.</source>
          <target state="translated">호출 할 메소드입니다. 함수 또는 문자열 일 수 있습니다. 문자열을 전달하면 전달 된 대상에서 문자열을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="d7f2aa5d844a7d20b0ac4b11ff062bfb951fd83a" translate="yes" xml:space="preserve">
          <source>Methods are functions that are defined on the class, and usable by instances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc2fcd890cd277d98508a80f5492f9bedc901d9" translate="yes" xml:space="preserve">
          <source>Methods do &lt;em&gt;not&lt;/em&gt; exist on the class itself by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ca4738eb1e085d3f357b6f856f35804b2659cd" translate="yes" xml:space="preserve">
          <source>Migrating Away from and disabling Ember jQuery integration APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e368c31ca4e229bccd1936d3d2ac041a2dbd1f4" translate="yes" xml:space="preserve">
          <source>MinimumAdapterInterface</source>
          <target state="translated">MinimumAdapterInterface</target>
        </trans-unit>
        <trans-unit id="86cc63803add02279814c96bc1aea3ef848f5024" translate="yes" xml:space="preserve">
          <source>MinimumSerializerInterface</source>
          <target state="translated">MinimumSerializerInterface</target>
        </trans-unit>
        <trans-unit id="16e8c90b05ca8f10c04dfc691ff732fb574a0479" translate="yes" xml:space="preserve">
          <source>Mirage works by overriding the JavaScript code that makes network requests and instead returns the JSON you specify. We should note that this means you will not see any network requests in your development tools but will instead see the JSON logged in your console. Our update to &lt;code&gt;mirage/config.js&lt;/code&gt; configures Mirage so that whenever Ember Data makes a GET request to &lt;code&gt;/api/rentals&lt;/code&gt;, Mirage will return this JavaScript object as JSON and no network request is actually made. We also specified a &lt;code&gt;namespace&lt;/code&gt; of &lt;code&gt;/api&lt;/code&gt; in our mirage configuration. Without this change, navigation to &lt;code&gt;/rentals&lt;/code&gt; in our application would conflict with Mirage.</source>
          <target state="translated">Mirage는 네트워크 요청을하는 JavaScript 코드를 재정 의하여 지정한 JSON을 반환합니다. 이는 개발 도구에 네트워크 요청이 표시되지 않고 콘솔에 JSON이 기록되어 있음을 의미합니다. &lt;code&gt;mirage/config.js&lt;/code&gt; 에 대한 업데이트는 Mirage를 구성하여 Ember Data가 &lt;code&gt;/api/rentals&lt;/code&gt; 에 GET 요청을 할 때마다 Mirage가이 JavaScript 객체를 JSON으로 반환하고 실제로 네트워크 요청이 이루어지지 않도록합니다. 또한 Mirage 구성에서 &lt;code&gt;/api&lt;/code&gt; 라는 &lt;code&gt;namespace&lt;/code&gt; 를 지정했습니다 . 이 변경이 없으면 응용 프로그램에서 &lt;code&gt;/rentals&lt;/code&gt; 로 이동하면 Mirage와 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="1d21f12330d03b94dcb1cd6e01f79b79236abc39" translate="yes" xml:space="preserve">
          <source>Missing Promises</source>
          <target state="translated">약속 누락</target>
        </trans-unit>
        <trans-unit id="c0dcb865ad81a32e522b11fd1e33bae685e88709" translate="yes" xml:space="preserve">
          <source>Mixed</source>
          <target state="translated">Mixed</target>
        </trans-unit>
        <trans-unit id="8acb4f1a53ad0e32454267c61a794bb3188be2c6" translate="yes" xml:space="preserve">
          <source>Mixin</source>
          <target state="translated">Mixin</target>
        </trans-unit>
        <trans-unit id="d634308003ff858f289d2833f637dfc9bee3fc78" translate="yes" xml:space="preserve">
          <source>Mixins</source>
          <target state="translated">Mixins</target>
        </trans-unit>
        <trans-unit id="7f1fa61246876b33a612f1bb51874527379a609d" translate="yes" xml:space="preserve">
          <source>Mobile Devices</source>
          <target state="translated">모바일 기기</target>
        </trans-unit>
        <trans-unit id="6d1fcce437a84ebef9860637bee876319510f888" translate="yes" xml:space="preserve">
          <source>Mocha, Chai DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="817f9d67353c530f2c6d64063a80813debd1618f" translate="yes" xml:space="preserve">
          <source>Model Relationships</source>
          <target state="translated">모델 관계</target>
        </trans-unit>
        <trans-unit id="631fcdbb4433fd9a49c55ac2973f6d77e0d68f1d" translate="yes" xml:space="preserve">
          <source>Model-specific adapters can be created by putting your adapter class in an &lt;code&gt;app/adapters/&lt;/code&gt; + &lt;code&gt;model-name&lt;/code&gt; + &lt;code&gt;.js&lt;/code&gt; file of the application.</source>
          <target state="translated">어댑터 클래스를 &lt;code&gt;app/adapters/&lt;/code&gt; 의 app / adapters / + &lt;code&gt;model-name&lt;/code&gt; + &lt;code&gt;.js&lt;/code&gt; 파일 에 넣어 모델 별 어댑터를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5db1f719d035d2f86dd53bc73b31dd5d8068fa4" translate="yes" xml:space="preserve">
          <source>ModelSchema</source>
          <target state="translated">ModelSchema</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="aa3797a25b7cc382220d5723004f9b4aa101aa91" translate="yes" xml:space="preserve">
          <source>Models are objects that represent the underlying data that your application presents to the user. Different apps will have very different models, depending on what problems they're trying to solve.</source>
          <target state="translated">모델은 응용 프로그램이 사용자에게 제공하는 기본 데이터를 나타내는 개체입니다. 해결하려는 문제에 따라 앱마다 모델이 매우 다릅니다.</target>
        </trans-unit>
        <trans-unit id="019afea3eb207ecfb59621840f4278d323f8e988" translate="yes" xml:space="preserve">
          <source>Models define the type of data that will be provided by your server. For example, a &lt;code&gt;Person&lt;/code&gt; model might have a &lt;code&gt;firstName&lt;/code&gt; attribute that is a string, and a &lt;code&gt;birthday&lt;/code&gt; attribute that is a date:</source>
          <target state="translated">모델은 서버에서 제공 할 데이터 유형을 정의합니다. 예를 들어, &lt;code&gt;Person&lt;/code&gt; 모델 에는 문자열 인 &lt;code&gt;firstName&lt;/code&gt; 속성과 날짜 인 &lt;code&gt;birthday&lt;/code&gt; 속성이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f351f49194af39b99d5e23e032e724d4800c10b" translate="yes" xml:space="preserve">
          <source>Models define the type of data that will be provided by your server. For example, a &lt;code&gt;Person&lt;/code&gt; model might have a &lt;code&gt;name&lt;/code&gt; attribute that is a string, and a &lt;code&gt;birthday&lt;/code&gt; attribute that is a date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8840b4d964096eecdc906427cdbaf361ea0eb171" translate="yes" xml:space="preserve">
          <source>Models don't have any data themselves, they define the attributes, relationships and behavior of specific instances, which are called &lt;strong&gt;records&lt;/strong&gt;.</source>
          <target state="translated">모델에는 데이터 자체가 없으며, &lt;strong&gt;레코드&lt;/strong&gt; 라고하는 특정 인스턴스의 속성, 관계 및 동작을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="5b1d06fa82763ab47944cd44ffa1f0114d490583" translate="yes" xml:space="preserve">
          <source>Models represent persistent state.</source>
          <target state="translated">모델은 지속적 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="829196320118f53e8a87ca0f181c1208424d33f7" translate="yes" xml:space="preserve">
          <source>Models tend to be &lt;em&gt;persistent&lt;/em&gt;. That means the user does not expect model data to be lost when they close their browser window. To make sure no data is lost, if the user makes changes to a model, you need to store the model data somewhere that it will not be lost.</source>
          <target state="translated">모델은 &lt;em&gt;지속적인&lt;/em&gt; 경향이 있습니다 . 즉, 사용자는 브라우저 창을 닫을 때 모델 데이터가 손실 될 것으로 예상하지 않습니다. 데이터가 손실되지 않도록하려면 사용자가 모델을 변경 한 경우 모델 데이터가 손실되지 않는 위치에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="becbba5666aa6f8e8151efb9c6a064c94e791551" translate="yes" xml:space="preserve">
          <source>Models, records, adapters and the store are the core concepts you should understand to get the most out of Ember Data. The following sections go into more depth about each of these concepts, and how to use them together.</source>
          <target state="translated">모델, 레코드, 어댑터 및 상점은 Ember Data를 최대한 활용하기 위해 이해해야 할 핵심 개념입니다. 다음 섹션에서는 이러한 각 개념과 함께 사용하는 방법에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8efc2a92fc0e7e9befa4f05e38eede16dd20778c" translate="yes" xml:space="preserve">
          <source>Model|null</source>
          <target state="translated">Model|null</target>
        </trans-unit>
        <trans-unit id="e33dda3590ab9e1e10e3d376c68eb2ddf127a98d" translate="yes" xml:space="preserve">
          <source>Modern application asset management (including concatenation, minification, and versioning).</source>
          <target state="translated">최신 애플리케이션 자산 관리 (연결, 축소 및 버전 관리 포함)</target>
        </trans-unit>
        <trans-unit id="3644a06fbf7a02aaf78a1f0cd7792a0656d4a0f2" translate="yes" xml:space="preserve">
          <source>Modern features via Babel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293fdf2f6c9ce4fc5d6c4b3e15244497cea322f2" translate="yes" xml:space="preserve">
          <source>Modifiers and &lt;code&gt;...attributes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3fe5bc89294fafba215f5d55b70a0b0003a9d5" translate="yes" xml:space="preserve">
          <source>Modifiers can also be applied to components, and when they are, they are also passed forward and applied to an element with &lt;code&gt;...attributes&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc51b6f068ce224674bf3d77da2de0c1a9aa6fa" translate="yes" xml:space="preserve">
          <source>Modifying the action's first parameter</source>
          <target state="translated">조치의 첫 번째 매개 변수 수정</target>
        </trans-unit>
        <trans-unit id="d60ceaa995b9a7096628c7dee8145d8ce19d1838" translate="yes" xml:space="preserve">
          <source>Module:</source>
          <target state="translated">Module:</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="39760d15e024ca9e9dbb9f88fa69744a42526bab" translate="yes" xml:space="preserve">
          <source>More documentation about &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; are below.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 에 대한 추가 문서 는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a59199bd069e71ebec2691e36709a71e3b09cb6" translate="yes" xml:space="preserve">
          <source>More general than decamelize. Returns the lower_case_and_underscored form of a string.</source>
          <target state="translated">decamelize보다 더 일반적입니다. lower_case_and_underscored 형식의 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67a53477e760ae4b63cbb7243cbaccc3631f5309" translate="yes" xml:space="preserve">
          <source>More information on configuring the Ember CLI can be found in the &lt;a href=&quot;https://cli.emberjs.com/release/appendix/configuration/&quot;&gt;CLI Guides&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b94960528c0f576fd8beea3d5cb187245ac38c" translate="yes" xml:space="preserve">
          <source>Moreover, you can filter attributes on related models as well. If a &lt;code&gt;post&lt;/code&gt; has a &lt;code&gt;belongsTo&lt;/code&gt; relationship to a user, just include the relationship key and attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eaef687008080e9eb1d319d3e191828e378f2f" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;ObjectProxy&lt;/code&gt; classes have their own &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; method on them, like &lt;code&gt;EmberObject&lt;/code&gt; classes. This means you can use them directly on the class instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55272c5128cb978d842fea14f3de880b35c70fcf" translate="yes" xml:space="preserve">
          <source>Most Ember.js applications will only have a single &lt;code&gt;DS.Store&lt;/code&gt; that is automatically created by their &lt;code&gt;Ember.Application&lt;/code&gt;.</source>
          <target state="translated">대부분의 Ember.js 응용 프로그램은 단일해야합니다 &lt;code&gt;DS.Store&lt;/code&gt; 자동으로 만들어집니다 &lt;code&gt;Ember.Application&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="43ad4a5b784abcbbce3b199f0ed3a3291fc39b60" translate="yes" xml:space="preserve">
          <source>Most browsers support at least ES5, and some even have ES6 (also known as ES2015) support. You can check each browser's support (including yours) here:</source>
          <target state="translated">대부분의 브라우저는 최소한 ES5를 지원하며 일부는 ES6 (ES2015라고도 함) 지원을 제공합니다. 여기에서 각 브라우저의 지원 (귀하의 지원)을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc52d938b60253a9edbee96ca6d9d9be316158ac" translate="yes" xml:space="preserve">
          <source>Most computed properties should be fairly straightforward to convert to tracked properties. It's important to note that in these new components, arguments are automatically tracked, but in classic components they are &lt;em&gt;not&lt;/em&gt;. This is because arguments are put on the &lt;code&gt;args&lt;/code&gt; hash, which is tracked property. Since they are assigned to arbitrary properties on classic components, they can't be instrumented ahead of time, so you must decorate them manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0002894538fccec917916c970257752159953be" translate="yes" xml:space="preserve">
          <source>Most frameworks have some mechanism for adding the missing functionality to an application. In Ember, there is an attempt to address these two specific shortcomings with &lt;a href=&quot;https://github.com/emberjs/rfcs/pull/433&quot;&gt;RFC 433&lt;/a&gt;; in the meantime there are a few addons that exist to help provide page or view-level focus for your application. All options should be evaluated to determine which is the appropriate use case for your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fad09acb74f9134c8dcacc1e03b06faa992405d" translate="yes" xml:space="preserve">
          <source>Most requests in EmberData are made with respect to a particular &lt;code&gt;type&lt;/code&gt; (or &lt;code&gt;modelName&lt;/code&gt;) (e.g., &quot;get me the full collection of &lt;strong&gt;books&lt;/strong&gt;&quot; or &quot;get me the &lt;strong&gt;employee&lt;/strong&gt; whose id is 37&quot;). We refer to this as the &lt;strong&gt;primary&lt;/strong&gt; resource &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be23ccab1061cd0bab7344d8b6ec95b5a61502e" translate="yes" xml:space="preserve">
          <source>Most templates in an Ember codebase are instantly familiar, and look like any fragment of HTML. For example:</source>
          <target state="translated">Ember 코드베이스의 대부분의 템플릿은 즉시 친숙하며 HTML 조각처럼 보입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e640b670a6bf70395bf924c1c54b5e4ad8cb46d5" translate="yes" xml:space="preserve">
          <source>Most traditional REST-like HTTP APIs will not use this method. Instead, the ID of the record will be set by the server, and your adapter will update the store with the new ID when it calls &lt;code&gt;didCreateRecord()&lt;/code&gt;. Only implement this method if you intend to generate record IDs on the client-side.</source>
          <target state="translated">대부분의 기존 REST 유사 HTTP API는이 방법을 사용하지 않습니다. 대신, 레코드의 ID가 서버에 의해 설정되며 어댑터는 &lt;code&gt;didCreateRecord()&lt;/code&gt; 호출 할 때 새 ID로 상점을 업데이트합니다 . 클라이언트 측에서 레코드 ID를 생성하려는 경우에만이 방법을 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="2753760aac10fbaf7e29aa1d23ef61fb7a059dea" translate="yes" xml:space="preserve">
          <source>Mostly the same between native and classic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="ee7f1ca589520f1cb0e1adb76c8c5be4f8dbe4c3" translate="yes" xml:space="preserve">
          <source>Mouse events</source>
          <target state="translated">마우스 이벤트</target>
        </trans-unit>
        <trans-unit id="b96500fb0aaaecea42972538de1579921015f914" translate="yes" xml:space="preserve">
          <source>Mouse events:</source>
          <target state="translated">마우스 이벤트 :</target>
        </trans-unit>
        <trans-unit id="624f9b2fa33d8646c194683a6d7fb00f33f859c5" translate="yes" xml:space="preserve">
          <source>Move jobs from &lt;code&gt;CURRENT_QUEUE&lt;/code&gt; into &lt;code&gt;WORK_QUEUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CURRENT_QUEUE&lt;/code&gt; 에서 &lt;code&gt;WORK_QUEUE&lt;/code&gt; (으) 로 작업 이동</target>
        </trans-unit>
        <trans-unit id="7f1408efe0b6e95b82adc5c6940f59fe1a42275e" translate="yes" xml:space="preserve">
          <source>Move on to the &lt;a href=&quot;../hbs-helper&quot;&gt;next page&lt;/a&gt; for the next feature, or continue on here to test what you just wrote.</source>
          <target state="translated">다음 기능으로 이동하려면 &lt;a href=&quot;../hbs-helper&quot;&gt;다음 페이지&lt;/a&gt; 로 이동 하거나 방금 작성한 내용을 테스트하려면 여기를 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="a5e023c96f99c12b700a944b69a5398f51a87bdf" translate="yes" xml:space="preserve">
          <source>Moving around our site is a bit of a pain right now, so let's make that easier. We'll put a link to the contact page on the about page, and a corresponding link to the about page on the contact page.</source>
          <target state="translated">우리 사이트를 돌아 다니는 것은 지금 약간의 고통이므로, 더 쉽게 만들어 봅시다. 정보 페이지의 연락처 페이지에 대한 링크와 연락처 페이지의 정보 페이지에 대한 해당 링크를 배치합니다.</target>
        </trans-unit>
        <trans-unit id="3d79d467d10ff9f72b3957527d9055f1f2344c6b" translate="yes" xml:space="preserve">
          <source>Much like how our application's &lt;code&gt;index&lt;/code&gt; route doesn't appear in our Router, &lt;code&gt;index&lt;/code&gt; routes on sub-routes won't explicitly appear in the Router either. Ember knows that the default action is to take the user to the &lt;code&gt;index&lt;/code&gt; route. However, you can add the &lt;code&gt;index&lt;/code&gt; route if you want to customize it. For example, you can modify the &lt;code&gt;index&lt;/code&gt; route's path by specifying &lt;code&gt;this.route('index', { path: '/custom-path'})&lt;/code&gt;.</source>
          <target state="translated">애플리케이션의 &lt;code&gt;index&lt;/code&gt; 라우트가 라우터에 나타나지 않는 것과 마찬가지로 서브 라우트의 &lt;code&gt;index&lt;/code&gt; 라우트도 라우터에 명시 적으로 나타나지 않습니다. Ember는 기본 동작이 사용자를 &lt;code&gt;index&lt;/code&gt; 경로 로 이동시키는 것임을 알고 있습니다 . 그러나 &lt;code&gt;index&lt;/code&gt; 경로를 사용자 정의하려는 경우 색인 경로를 추가 할 수 있습니다 . 예를 들어 &lt;code&gt;this.route('index', { path: '/custom-path'})&lt;/code&gt; 를 지정 하여 &lt;code&gt;index&lt;/code&gt; 경로의 경로를 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d0892f97ba890bdd37e0b0d9f6b4dec5bbe6b06" translate="yes" xml:space="preserve">
          <source>Much of the power of promises comes from the fact that they can be chained together to perform sequential asynchronous operations:</source>
          <target state="translated">약속의 힘의 대부분은 순차적 비동기 작업을 수행하기 위해 서로 연결될 수 있다는 사실에서 비롯됩니다.</target>
        </trans-unit>
        <trans-unit id="28a601b1de7007639b3f9e108f2a1ef5c64fd42c" translate="yes" xml:space="preserve">
          <source>Multi-word route names are conventionally dasherized, such as:</source>
          <target state="translated">여러 단어 경로 이름은 일반적으로 다음과 같이 대시 형식입니다.</target>
        </trans-unit>
        <trans-unit id="78340660db0f24ef38760b67cbbddc4412bcd4c1" translate="yes" xml:space="preserve">
          <source>Multi-word route names that break this convention, such as:</source>
          <target state="translated">이 규칙을 위반하는 여러 단어 경로 이름 (예 :</target>
        </trans-unit>
        <trans-unit id="3b38834946b176dd5d95ff88c4d70d97548594fa" translate="yes" xml:space="preserve">
          <source>Multiple Dependent Keys</source>
          <target state="translated">다중 종속 키</target>
        </trans-unit>
        <trans-unit id="582b682a545d855ce32f9d394fadb62ed0fc4bd5" translate="yes" xml:space="preserve">
          <source>Multiple Dynamic Segments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d5b89d2e964353c630f9ded89e04d3e86caaf0" translate="yes" xml:space="preserve">
          <source>Multiple Models</source>
          <target state="translated">여러 모델</target>
        </trans-unit>
        <trans-unit id="12cbb2ffc194012d392a1c4993f0c9984dfd0981" translate="yes" xml:space="preserve">
          <source>Multiple Models Example</source>
          <target state="translated">여러 모델 예</target>
        </trans-unit>
        <trans-unit id="d6553f22af5154a8bd1c4ad52c108a92da650f3c" translate="yes" xml:space="preserve">
          <source>Multiple dependents on the same object</source>
          <target state="translated">동일한 객체에 대한 여러 부양 가족</target>
        </trans-unit>
        <trans-unit id="b28002efa52244d6a64c5269273ba94c4b3d946c" translate="yes" xml:space="preserve">
          <source>Multiple destructors can be associated with a given destroyable, and they can be associated over time, allowing libraries to dynamically add destructors as needed. &lt;code&gt;registerDestructor&lt;/code&gt; also returns the associated destructor function, for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffac1ed7d498ee17123d25a206c3251a5fdeee0f" translate="yes" xml:space="preserve">
          <source>Multiple models can be returned through an &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html#method_hash&quot;&gt;RSVP.hash&lt;/a&gt;. The &lt;code&gt;RSVP.hash&lt;/code&gt; takes parameters that return promises, and when all parameter promises resolve, then the &lt;code&gt;RSVP.hash&lt;/code&gt; promise resolves. For example:</source>
          <target state="translated">&lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html#method_hash&quot;&gt;RSVP.hash를&lt;/a&gt; 통해 여러 모델을 반환 할 수 있습니다 . &lt;code&gt;RSVP.hash&lt;/code&gt; 는 돌려 약속 매개 변수를 때, 그리고 모든 매개 변수의 약속의 해결은 다음 &lt;code&gt;RSVP.hash&lt;/code&gt; 의 약속 해결합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="89e442b9a4406114e485ce49f9c2d6cf6265f9cb" translate="yes" xml:space="preserve">
          <source>Multiple models can be returned through an &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/rsvp/methods#hash&quot;&gt;RSVP.hash&lt;/a&gt;. The &lt;code&gt;RSVP.hash&lt;/code&gt; method takes an object containing multiple promises. If all of the promises resolve, the returned promise will resolve to an object that contains the results of each request. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3482c9f462fff40115cc375f0938294535d352" translate="yes" xml:space="preserve">
          <source>Multiple models will be applied last to first recursively up the route tree.</source>
          <target state="translated">루트 트리에서 재귀 적으로 처음에 여러 모델이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c3b731a0c7c446f06c467954397afe2a1c5ec4f9" translate="yes" xml:space="preserve">
          <source>Multiple operations scheduled with &lt;code&gt;next&lt;/code&gt; will coalesce into the same later run loop, along with any other operations scheduled by &lt;code&gt;later&lt;/code&gt; that expire right around the same time that &lt;code&gt;next&lt;/code&gt; operations will fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe2c0eff1698d461f5e41a286301db51f73fef1" translate="yes" xml:space="preserve">
          <source>Multiple operations scheduled with &lt;code&gt;run.next&lt;/code&gt; will coalesce into the same later run loop, along with any other operations scheduled by &lt;code&gt;run.later&lt;/code&gt; that expire right around the same time that &lt;code&gt;run.next&lt;/code&gt; operations will fire.</source>
          <target state="translated">로 예정 다중 작업 &lt;code&gt;run.next&lt;/code&gt; 은 가 예약 한 다른 작업과 함께 같은 나중에 실행 루프에 병합됩니다 &lt;code&gt;run.later&lt;/code&gt; 바로 주변과 동시에 만료 &lt;code&gt;run.next&lt;/code&gt; 작업이 발사됩니다.</target>
        </trans-unit>
        <trans-unit id="02209f8602f7d7995fe4c193c3f7d7b587ad5ab3" translate="yes" xml:space="preserve">
          <source>Multiple relationships can be requested using an &lt;code&gt;include&lt;/code&gt; parameter consisting of a comma-separated list (without white-space) while nested relationships can be specified using a dot-separated sequence of relationship names. So to request both the post's comments and the authors of those comments the request would look like this:</source>
          <target state="translated">쉼표로 구분 된 목록 (공백없이)으로 구성된 &lt;code&gt;include&lt;/code&gt; 매개 변수를 사용하여 여러 관계를 요청할 수 있으며 , 중첩 된 관계 이름은 점으로 구분 된 관계 이름 시퀀스를 사용하여 지정할 수 있습니다. 따라서 게시물의 의견과 해당 의견의 작성자 모두를 요청하려면 다음과 같이 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="b1257af504d574f79a9e631c64fb0753d98ae623" translate="yes" xml:space="preserve">
          <source>Multiple relationships can be requested using an &lt;code&gt;include&lt;/code&gt; parameter consisting of a comma-separated list (without white-space) while nested relationships can be specified using a dot-separated sequence of relationship names. So to request both the posts' comments and the authors of those comments the request would look like this:</source>
          <target state="translated">쉼표로 구분 된 목록 (공백없이)으로 구성된 &lt;code&gt;include&lt;/code&gt; 매개 변수를 사용하여 여러 관계를 요청할 수 있으며 , 중첩 된 관계 이름은 점으로 구분 된 관계 이름 시퀀스를 사용하여 지정할 수 있습니다. 따라서 게시물의 의견과 해당 의견의 작성자 모두를 요청하려면 요청은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="702d485741e89433e6e857322e216f0b9ae4a268" translate="yes" xml:space="preserve">
          <source>Must be truthy for the assertion to pass. If falsy, an exception will be thrown.</source>
          <target state="translated">주장이 통과하려면 진실해야합니다. 거짓 인 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3d3267ee70dd314e7858273af7bdce38d29cc032" translate="yes" xml:space="preserve">
          <source>MutableArray</source>
          <target state="translated">MutableArray</target>
        </trans-unit>
        <trans-unit id="b34428639511f271396957f0dadabc146059f39f" translate="yes" xml:space="preserve">
          <source>MutableEnumerable</source>
          <target state="translated">MutableEnumerable</target>
        </trans-unit>
        <trans-unit id="444db15bd436aba203a5f5249e2de3679767da5f" translate="yes" xml:space="preserve">
          <source>NOTE: For performance reasons, you cannot declare methods or computed properties during &lt;code&gt;create&lt;/code&gt;. You should instead declare methods and computed properties when using &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">참고 : 성능상의 이유로 &lt;code&gt;create&lt;/code&gt; 동안 메서드 나 계산 된 속성을 선언 할 수 없습니다 . 대신 &lt;code&gt;extend&lt;/code&gt; 사용시 메소드 및 계산 된 특성을 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ed2c15ce1e4710d86ee38c5db874399a5cb566e4" translate="yes" xml:space="preserve">
          <source>NOTE: If you do override &lt;code&gt;init&lt;/code&gt; for a framework class like &lt;code&gt;Component&lt;/code&gt; from &lt;code&gt;@ember/component&lt;/code&gt;, be sure to call &lt;code&gt;this._super(...arguments)&lt;/code&gt; in your &lt;code&gt;init&lt;/code&gt; declaration! If you don't, Ember may not have an opportunity to do important setup work, and you'll see strange behavior in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4154a7358ac4c037dceca9b28d5e787994cdb5" translate="yes" xml:space="preserve">
          <source>NOTE: If you do override &lt;code&gt;init&lt;/code&gt; for a framework class like &lt;code&gt;Ember.View&lt;/code&gt;, be sure to call &lt;code&gt;this._super(...arguments)&lt;/code&gt; in your &lt;code&gt;init&lt;/code&gt; declaration! If you don't, Ember may not have an opportunity to do important setup work, and you'll see strange behavior in your application.</source>
          <target state="translated">참고 : &lt;code&gt;Ember.View&lt;/code&gt; 와 같은 프레임 워크 클래스에 대해 &lt;code&gt;init&lt;/code&gt; 를 재정의하는 경우 &lt;code&gt;init&lt;/code&gt; 선언 에서 &lt;code&gt;this._super(...arguments)&lt;/code&gt; 를 호출하십시오 ! 그렇지 않으면 Ember가 중요한 설정 작업을 수행 할 기회가 없을 수 있으며 응용 프로그램에 이상한 동작이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="f1955b8da16f9aa4c86eaa507166aa1db45a4ada" translate="yes" xml:space="preserve">
          <source>NOTE: The alias should not reuse a name from the bound property path.</source>
          <target state="translated">참고 : 별칭은 바인딩 된 속성 경로의 이름을 재사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="db66b9de9f9c2d02684cfec822b51ca95dd80aa4" translate="yes" xml:space="preserve">
          <source>NOTE: This is a low-level method used by other parts of the API. You almost never want to call this method directly. Instead you should use &lt;code&gt;mixin()&lt;/code&gt; to define new properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009c3bb492d539b0411d2b0aec2055fa05648b7a" translate="yes" xml:space="preserve">
          <source>NVDA, open source software, available for Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bcfc779c681003715d9636b0e6c60bae427655" translate="yes" xml:space="preserve">
          <source>Name of the current route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c28676bf4730e540557e41373c642c036c8142" translate="yes" xml:space="preserve">
          <source>Name of the engine to mount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a1546459fb296b75e903b673f8cc0ad0b7638a" translate="yes" xml:space="preserve">
          <source>Named Arguments</source>
          <target state="translated">명명 된 인수</target>
        </trans-unit>
        <trans-unit id="0cdd03cc7a498569c7e4c14eb09496791ff63e80" translate="yes" xml:space="preserve">
          <source>Named Arguments have a number of benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be190d542a06092cf49483a4b1649c78ec420b47" translate="yes" xml:space="preserve">
          <source>Named arguments always refer to the original value that was passed to the component, so you can also be sure that the value was never mutated by the component's class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="1da3a41b20375b2f1b43865d0bbcd472ab17276d" translate="yes" xml:space="preserve">
          <source>Namespace for injection helper methods.</source>
          <target state="translated">주입 헬퍼 메소드의 네임 스페이스.</target>
        </trans-unit>
        <trans-unit id="447fb7bdde41273609f10df97bcb34cfc64373fe" translate="yes" xml:space="preserve">
          <source>Namespaced attributes (e.g. &lt;code&gt;xlink:href&lt;/code&gt;) are supported, but have to be mapped, since &lt;code&gt;:&lt;/code&gt; is not a valid character for properties in Javascript:</source>
          <target state="translated">네임 스페이스 특성 (예 &lt;code&gt;xlink:href&lt;/code&gt; 이후), 지원되지만 매핑 할 수있다 &lt;code&gt;:&lt;/code&gt; 자바 스크립트의 속성에 대한 유효한 문자가되지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="5363445f56036bd0f60ddb24c8667757092bb1f0" translate="yes" xml:space="preserve">
          <source>Narrator, integrated in Windows products</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcbe113c3b2d9e9887f272858752e2b6ba3ef41" translate="yes" xml:space="preserve">
          <source>Native Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa509cd13a1af3c91c0f1fdce000ed2954bebd7" translate="yes" xml:space="preserve">
          <source>Native Classes In-Depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e94bb9a1b57228218158d5a6794ef1a4b52baf" translate="yes" xml:space="preserve">
          <source>Native Classes for classic component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcaf37c1f723bbb971747d70255217dba207fc3" translate="yes" xml:space="preserve">
          <source>Native Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5217075c158a95763d045258528bd2fc7ccd7b27" translate="yes" xml:space="preserve">
          <source>Native JavaScript &lt;code&gt;class&lt;/code&gt; syntax can be used to extend from any &lt;code&gt;CoreObject&lt;/code&gt; based class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544a8f5bc2fa895491d06f4021b6729f0c3096b4" translate="yes" xml:space="preserve">
          <source>Native JavaScript Classes vs Ember Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53acf5e2c1424b0fbd49dfedde413ac6049b1220" translate="yes" xml:space="preserve">
          <source>Native JavaScript methods like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;. Install &lt;a href=&quot;https://github.com/ember-cli/ember-fetch&quot;&gt;&lt;code&gt;ember-fetch&lt;/code&gt;&lt;/a&gt; in order to provide support for older browsers, and &lt;code&gt;import fetch from 'fetch'&lt;/code&gt; to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0194361330bfd11c031b2f9a21891a7b0c91227e" translate="yes" xml:space="preserve">
          <source>Native arrays will no longer implement the functionality needed to observe them. If you disable prototype extension and attempt to use native arrays with things like a template's &lt;code&gt;{{#each}}&lt;/code&gt; helper, Ember.js will have no way to detect changes to the array and the template will not update as the underlying array changes.</source>
          <target state="translated">기본 배열은 더 이상 관찰에 필요한 기능을 구현하지 않습니다. 프로토 타입 확장을 비활성화하고 템플릿의 &lt;code&gt;{{#each}}&lt;/code&gt; 헬퍼 와 같은 기본 배열을 사용하려고하면 Ember.js는 배열의 변경을 감지 할 방법이 없으며 기본 배열이 변경 될 때 템플릿이 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="246bac7d49f5d0a88b88fe8586cec9d6cff8eb07" translate="yes" xml:space="preserve">
          <source>Native class syntax does not directly have an equivalent for the Ember mixin system. If you want to continue using mixins as you convert, you can do so by mixing classic class extension syntax with native class syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebd06f41fa72f95adf15148833a8c30f5331b0e" translate="yes" xml:space="preserve">
          <source>Native classes are a feature of JavaScript. They are officially supported in Ember Octane for use with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a67391332ccec56fb0ccadfb1820b1241e2216" translate="yes" xml:space="preserve">
          <source>Native classes have &lt;em&gt;fields&lt;/em&gt; instead of properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99226e805b8e28ae36a5d27f1d93310d9eb72e25" translate="yes" xml:space="preserve">
          <source>Native classes have &lt;em&gt;fields&lt;/em&gt;. Fields are created and assigned for every instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ea8e85bd3b906e46c0fd303d08e58e5a242bf8" translate="yes" xml:space="preserve">
          <source>Native classes support using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Constructor&quot;&gt;constructors&lt;/a&gt; to set up newly-created instances. Ember uses these to, among other things, support features that need to retrieve other entities by name, like Service injection and &lt;code&gt;getOwner&lt;/code&gt;. To ensure your custom instance setup logic takes place after this important work is done, avoid using the &lt;code&gt;constructor&lt;/code&gt; in favor of &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33cac0cf5e47ff641c558f9e2931ccaeaefec5a" translate="yes" xml:space="preserve">
          <source>Native classes were first added to JavaScript in ES2015 (also known as ES6). They are defined using the &lt;code&gt;class&lt;/code&gt; keyword, and look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24051231ce03d08a9ec13167230be8e337475977" translate="yes" xml:space="preserve">
          <source>Native decorators are functions that get applied using the &lt;code&gt;@&lt;/code&gt; symbol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def1866b950355457b1ca724370736219cfa1a63" translate="yes" xml:space="preserve">
          <source>Native decorators can be applied to class fields, methods, accessors, or classes themselves. Generally, specific decorators are only meant to be applied to one or two of these types of things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ad1cc0d104518d7f977f6281c3fcd146fbd3d7" translate="yes" xml:space="preserve">
          <source>NativeArray</source>
          <target state="translated">NativeArray</target>
        </trans-unit>
        <trans-unit id="f03a4f8a865506a656451836ba3d745b0e85935f" translate="yes" xml:space="preserve">
          <source>Navigating the Inspector</source>
          <target state="translated">인스펙터 탐색</target>
        </trans-unit>
        <trans-unit id="f5f74a08b7244da0d1e71c555988da0c10984a2a" translate="yes" xml:space="preserve">
          <source>Navigating with Links and the {{link-to}} Helper</source>
          <target state="translated">링크 및 {{link-to}} 도우미를 사용하여 탐색</target>
        </trans-unit>
        <trans-unit id="45a2c37faeeeb983e832c4ad42518b2ae0fad920" translate="yes" xml:space="preserve">
          <source>Nearly all of the helpers for DOM interaction from &lt;code&gt;@ember/test-helpers&lt;/code&gt; return a call to &lt;code&gt;settled&lt;/code&gt; - a function that ensures that any Promises, operations in Ember's &lt;code&gt;run&lt;/code&gt; loop, timers or network requests have already resolved. The &lt;code&gt;settled&lt;/code&gt; function itself returns a Promise that resolves once all async operations have come to an end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b955613b5c7bede930bf0b3d1430d817e286b4" translate="yes" xml:space="preserve">
          <source>Neovim</source>
          <target state="translated">Neovim</target>
        </trans-unit>
        <trans-unit id="fbdea6bea0c2482852e3f2071895d1585ec8e658" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;if&lt;/code&gt;</source>
          <target state="translated">중첩 된 &lt;code&gt;if&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f39bf32df616d09a91ab62108acfaade500b9df8" translate="yes" xml:space="preserve">
          <source>Nested Helpers</source>
          <target state="translated">중첩 된 도우미</target>
        </trans-unit>
        <trans-unit id="d7217f3faabc627d5f38d65ad54b2ccfdec8cc27" translate="yes" xml:space="preserve">
          <source>Nested Route with Query String Example</source>
          <target state="translated">쿼리 문자열이 포함 된 중첩 경로 예</target>
        </trans-unit>
        <trans-unit id="bef32b44309c819256ef91505f3ce46153114806" translate="yes" xml:space="preserve">
          <source>Nested Routes</source>
          <target state="translated">중첩 경로</target>
        </trans-unit>
        <trans-unit id="412558433783fdb3414d06e750eef597720539fc" translate="yes" xml:space="preserve">
          <source>Nested Usage</source>
          <target state="translated">중첩 된 사용법</target>
        </trans-unit>
        <trans-unit id="e165e036879af1052e8bdc5248b80fa0f1e05752" translate="yes" xml:space="preserve">
          <source>Nested relationships can be specified in the &lt;code&gt;include&lt;/code&gt; parameter as a dot-separated sequence of relationship names. So to request both the post's comments and the authors of those comments the request would look like this:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 매개 변수 에 내포 된 관계는 점으로 구분 된 관계 이름 순서로 지정할 수 있습니다 . 따라서 게시물의 의견과 해당 의견의 작성자 모두를 요청하려면 다음과 같이 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="922cf4b90b3d9e6881bf1d5dc12e8a39a5ea6aea" translate="yes" xml:space="preserve">
          <source>Nesting Components in Folders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c887b79e918144869d1815b78826218b269b1e7" translate="yes" xml:space="preserve">
          <source>Nesting built-in helpers</source>
          <target state="translated">중첩 된 내장 헬퍼</target>
        </trans-unit>
        <trans-unit id="04db803117cee98a50a20b0da38e656caa452280" translate="yes" xml:space="preserve">
          <source>Never store API keys or any sensitive data in a front end application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6f6b6b3aa81f4339caf3807d89ac25f55b20e0" translate="yes" xml:space="preserve">
          <source>New CP syntax RFC</source>
          <target state="translated">새로운 CP 구문 RFC</target>
        </trans-unit>
        <trans-unit id="b7923e40f58719cc79ac4b24075ea07f4e514c24" translate="yes" xml:space="preserve">
          <source>New array with specified slice</source>
          <target state="translated">지정된 슬라이스를 가진 새로운 배열</target>
        </trans-unit>
        <trans-unit id="a5f4382c5175715676a78c8e41df763288901e30" translate="yes" xml:space="preserve">
          <source>New components solve this by placing all arguments in an object available as the &lt;code&gt;args&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d942259592ddfbc46880fa0a69c8975fc1398b" translate="yes" xml:space="preserve">
          <source>New computed syntax explained in &quot;Ember 1.12 released&quot;</source>
          <target state="translated">&quot;Ember 1.12 릴리스&quot;에 설명 된 새로운 계산 구문</target>
        </trans-unit>
        <trans-unit id="a6fffbbf5a5a931d1edec274552843e555a9575b" translate="yes" xml:space="preserve">
          <source>New features are added to Ember.js within conditional statements.</source>
          <target state="translated">조건문 내에서 Ember.js에 새로운 기능이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="803ecd92179c0dd3c69731cdda3a859bd14900b2" translate="yes" xml:space="preserve">
          <source>Next let's look at testing logic found within an object's method. In this case the &lt;code&gt;testMethod&lt;/code&gt; method alters some internal state of the object (by updating the &lt;code&gt;foo&lt;/code&gt; property).</source>
          <target state="translated">다음으로 객체의 메소드 내에서 발견 된 테스트 로직을 살펴 보자. 이 경우 &lt;code&gt;testMethod&lt;/code&gt; 메소드는 &lt;code&gt;foo&lt;/code&gt; 특성 을 업데이트하여 오브젝트의 일부 내부 상태를 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef4dee50c1a6328bfc8832f6ac555daa3ec44e" translate="yes" xml:space="preserve">
          <source>Next we can test that changing the component's &lt;code&gt;name&lt;/code&gt; property updates the component's &lt;code&gt;style&lt;/code&gt; attribute and is reflected in the rendered HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d2115d3a8d9cff7fd04e688c7081d086bf8c63" translate="yes" xml:space="preserve">
          <source>Next we use &lt;code&gt;this.subject()&lt;/code&gt; to get an instance of the &lt;code&gt;PostsController&lt;/code&gt; and write a test to check the action. &lt;code&gt;this.subject()&lt;/code&gt; is a helper method from the &lt;code&gt;ember-qunit&lt;/code&gt; library that returns a singleton instance of the module set up using &lt;code&gt;moduleFor&lt;/code&gt;.</source>
          <target state="translated">다음으로 &lt;code&gt;this.subject()&lt;/code&gt; 를 사용 하여 &lt;code&gt;PostsController&lt;/code&gt; 의 인스턴스를 얻고 테스트를 작성하여 동작을 확인합니다. &lt;code&gt;this.subject()&lt;/code&gt; 로부터 헬퍼 메소드 인 &lt;code&gt;ember-qunit&lt;/code&gt; 모듈의 단일 인스턴스를 사용하여 설정 반환 라이브러리 &lt;code&gt;moduleFor&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c16bcf8813d8c82e5f125095cd3e705a106d82fd" translate="yes" xml:space="preserve">
          <source>Next we use the owner API to gain access to the controller we'd like to test. Using the &lt;code&gt;this.owner.lookup&lt;/code&gt; method we get the instance of the &lt;code&gt;PostsController&lt;/code&gt; and can check the action in our test. The &lt;code&gt;this.owner.lookup&lt;/code&gt; helper returns objects generated by the framework in your applications and is also exposed in tests for your usage. Here it will return a singleton instance of the &lt;code&gt;PostsController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037bdfda5ed9f405ddf5f32f37012c2511ffb7cd" translate="yes" xml:space="preserve">
          <source>Next, follow the instructions above to install &lt;code&gt;@ember/optional-features&lt;/code&gt;, and run the following command to change &lt;code&gt;@ember/optional-features&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcc0bdd99f88cb81ef0b1774094121f146d3dd1" translate="yes" xml:space="preserve">
          <source>Next, in the child component we will implement the logic to confirm that the user wants to take the action they indicated by clicking the button:</source>
          <target state="translated">다음으로, 하위 컴포넌트에서 사용자가 버튼을 클릭하여 표시된 조치를 취하고 있는지 확인하는 논리를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="872eb4607a119acc5cb95c4560b19eccc0f15ae0" translate="yes" xml:space="preserve">
          <source>Next, let's add a way for the user to send a new message. First, we need to add an action for creating the new message. We'll add this to the &lt;code&gt;&amp;lt;NewMessageInput /&amp;gt;&lt;/code&gt; component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479afc62575adb4332221eb1533e3b7ed162bd60" translate="yes" xml:space="preserve">
          <source>Next, locate your &lt;code&gt;/dist&lt;/code&gt; folder on your local machine and drag and drop it into this area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40ada7307cf0a9c838ea79345644c54523ae5fb" translate="yes" xml:space="preserve">
          <source>Next, update the component to append the map output to the &lt;code&gt;div&lt;/code&gt; element we created.</source>
          <target state="translated">그런 다음 구성 요소를 업데이트하여 생성 한 &lt;code&gt;div&lt;/code&gt; 요소에 맵 출력을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7d19405fca795913088d60133cbb443100ac674" translate="yes" xml:space="preserve">
          <source>Next, we can update the template for our show route (&lt;code&gt;app/templates/rentals/show.hbs&lt;/code&gt;) and list the information for our rental.</source>
          <target state="translated">다음으로, 쇼 경로 ( &lt;code&gt;app/templates/rentals/show.hbs&lt;/code&gt; ) 의 템플릿을 업데이트하고 대여 정보를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28a08a4b958388c31d91386ad8d22b806a8af378" translate="yes" xml:space="preserve">
          <source>Next, we need to hook up the button to toggle that property. We'll do this with an &lt;em&gt;action&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4983c90fa60bc1ce9b9cbde2c331eec343b491" translate="yes" xml:space="preserve">
          <source>Next, we want to edit our &lt;code&gt;show&lt;/code&gt; route to retrieve the requested rental:</source>
          <target state="translated">다음으로 우리는 &lt;code&gt;show&lt;/code&gt; 요청 된 대여를 검색하기 위해 쇼 경로를 합니다.</target>
        </trans-unit>
        <trans-unit id="814d6548e5f645f9a53ceea2e6f1d41b9c7e4353" translate="yes" xml:space="preserve">
          <source>Next, we want to wire up the buttons. When the user presses &lt;code&gt;+1&lt;/code&gt;, we want &lt;code&gt;this.count&lt;/code&gt; to go up by 1. When the user presses &lt;code&gt;-1&lt;/code&gt;, we want it to go down by 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb92e1d792e18cf5b9e39f3b1be27814a2469e18" translate="yes" xml:space="preserve">
          <source>Next, we will want to create a sub-route that will list information for a specific rental. To do this, we will need to update a couple of files. To find a specific rental, we will want to use Ember Data's &lt;code&gt;findRecord&lt;/code&gt; function &lt;a href=&quot;https://guides.emberjs.com/models/finding-records/&quot;&gt;(see &quot;Finding Records&quot; for more details)&lt;/a&gt;. The &lt;code&gt;findRecord&lt;/code&gt; function requires that we search by a unique key.</source>
          <target state="translated">다음으로 특정 임대에 대한 정보를 나열하는 하위 경로를 만들려고합니다. 이렇게하려면 몇 개의 파일을 업데이트해야합니다. 특정 임대를 찾으려면 Ember Data의 &lt;code&gt;findRecord&lt;/code&gt; 기능 을 사용 하려고 합니다 &lt;a href=&quot;https://guides.emberjs.com/models/finding-records/&quot;&gt;(자세한 내용은 &quot;레코드 찾기&quot;참조)&lt;/a&gt; . 그만큼 &lt;code&gt;findRecord&lt;/code&gt; 의 기능은 우리가 고유 키로 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="72fd14162a8fc6d22cf491834da27111df0b38b5" translate="yes" xml:space="preserve">
          <source>Next, we'll add the call to render the component to show the cities we've provided above.</source>
          <target state="translated">다음으로 위에서 제공 한 도시를 표시하기 위해 구성 요소를 렌더링하는 호출을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="67609e0f68744c3ebfd19a23db1417e451109327" translate="yes" xml:space="preserve">
          <source>Next, we'll update the parent component to use this new argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3339b1b429e27b7af68e350665c92d32c1572c5" translate="yes" xml:space="preserve">
          <source>Next, we'll update the template to turn the click handler into a function that passes an amount (for example, 1 and -1) in as an argument, using the &lt;code&gt;fn&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c121b18448e09b0ec7e3e82982b599fd9f5138e7" translate="yes" xml:space="preserve">
          <source>Next, we'll update the template using the component to use the block form:</source>
          <target state="translated">다음으로 블록 형식을 사용하도록 구성 요소를 사용하여 템플릿을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1d988139d331b04a54bbef1cfa26c015c373ff16" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6238b29303602319e16359dcf2e606b1c95d24d7" translate="yes" xml:space="preserve">
          <source>No documented items</source>
          <target state="translated">문서화 된 항목이 없습니다</target>
        </trans-unit>
        <trans-unit id="9f80f5f1ae4b98a019524e97caf59f7371e4c299" translate="yes" xml:space="preserve">
          <source>No matter how the URL gets set, the first thing that happens is that the Ember router maps the URL to a route handler.</source>
          <target state="translated">URL 설정 방법에 관계없이 가장 먼저 발생하는 일은 Ember 라우터가 URL을 경로 처리기에 매핑하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0858e6b6cdfb4ad64a7b455a0dc424f5b532b52d" translate="yes" xml:space="preserve">
          <source>No single-page application framework provides the appropriate route-level focus for assistive technology in a default manner. This is primarily due to the way &lt;code&gt;pushState&lt;/code&gt; works, and the lack of an event hook for JavaScript frameworks to tell assistive technology that the page content has changed. This &lt;em&gt;also&lt;/em&gt; means that the focus is unchanged on route navigation, which in some cases means that it would be lost entirely (if the element that previously had focus is now gone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d42b52bca7ec360e2ec2fd821e5d1d54eeed7e" translate="yes" xml:space="preserve">
          <source>Node.js and npm</source>
          <target state="translated">Node.js와 npm</target>
        </trans-unit>
        <trans-unit id="0bf1b177f41054dc701a64cbc840b3185281c706" translate="yes" xml:space="preserve">
          <source>NoneLocation</source>
          <target state="translated">NoneLocation</target>
        </trans-unit>
        <trans-unit id="16a988193ca74b30e6463c71d81d46e20c97ad20" translate="yes" xml:space="preserve">
          <source>NoneLocation does not interact with the browser. It is useful for testing, or when you need to manage state with your Router, but temporarily don't want it to muck with the URL (for example when you embed your application in a larger page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b92c9cfcc2262b2f6c3b43f6b3500b694ae1ee6" translate="yes" xml:space="preserve">
          <source>Normal arguments are useful for passing data to be transformed into helper functions. However, because the order in which you pass arguments matters, it is usually best not to have helpers take more than one or two of them.</source>
          <target state="translated">일반 인수는 데이터를 도우미 함수로 변환 할 때 유용합니다. 그러나 인수를 전달하는 순서가 중요하기 때문에 일반적으로 도우미가 한두 가지 이상을 가져 가지 않는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c758641d7044d0875a095185bfa3bfff0989861e" translate="yes" xml:space="preserve">
          <source>Normalize the record and recursively normalize/extract all the embedded records while pushing them into the store as they are encountered</source>
          <target state="translated">레코드를 정규화하고 모든 내장 레코드를 재발 적으로 정규화 / 추출합니다.</target>
        </trans-unit>
        <trans-unit id="507e2c4b6bfe50777b8493cb99f3d2061997fa17" translate="yes" xml:space="preserve">
          <source>Normalizes a part of the JSON payload returned by the server. You should override this method, munge the hash and call super if you have generic normalization to do.</source>
          <target state="translated">서버에서 반환 한 JSON 페이로드의 일부를 정규화합니다. 일반 정규화를 수행하려면이 메소드를 대체하고 해시를 제거하고 super를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="93184070eecd1992aa3ceffecf5d7e446dd037ad" translate="yes" xml:space="preserve">
          <source>Normalizing adapter responses</source>
          <target state="translated">어댑터 응답 정규화</target>
        </trans-unit>
        <trans-unit id="191dcfcc461d761b872ae6bcd11af2bb8137213b" translate="yes" xml:space="preserve">
          <source>Normally this method takes only three parameters. However if you pass an instance of &lt;code&gt;Descriptor&lt;/code&gt; as the third param then you can pass an optional value as the fourth parameter. This is often more efficient than creating new descriptor hashes for each property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36175f91b69faec22cd1a2cefc739e08dcc8e5d5" translate="yes" xml:space="preserve">
          <source>Normally you should not need to invoke this method yourself. However if you are implementing raw event handlers when interfacing with other libraries or plugins, you should probably wrap all of your code inside this call.</source>
          <target state="translated">일반적으로이 메소드를 직접 호출 할 필요는 없습니다. 그러나 다른 라이브러리 또는 플러그인과 인터페이스 할 때 원시 이벤트 핸들러를 구현하는 경우이 호출 내에 모든 코드를 랩핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="4468565835878ef17cd4b55bc5caa9b1777c240f" translate="yes" xml:space="preserve">
          <source>Normally, Ember's component model is &quot;write-only&quot;. The component takes a bunch of attributes that it got passed in, and uses them to render its template.</source>
          <target state="translated">일반적으로 Ember의 컴포넌트 모델은 &quot;쓰기 전용&quot;입니다. 컴포넌트는 전달 된 많은 속성을 가져 와서 템플릿을 렌더링하는 데 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c7e6a52c08a7259c6321ad9e83e1ba7332c71dcf" translate="yes" xml:space="preserve">
          <source>Normally, applications will use the &lt;code&gt;RESTSerializer&lt;/code&gt; by implementing the &lt;code&gt;normalize&lt;/code&gt; method.</source>
          <target state="translated">일반적으로 애플리케이션은 &lt;code&gt;normalize&lt;/code&gt; 메소드 를 구현하여 &lt;code&gt;RESTSerializer&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="fc8af1aedfdbf84e674633bf407822f6539d0133" translate="yes" xml:space="preserve">
          <source>Not all APIs follow the conventions that the &lt;code&gt;JSONAPISerializer&lt;/code&gt; uses with a data namespace and sideloaded relationship records. Some legacy APIs may return a simple JSON payload that is just the requested resource or an array of serialized records. The &lt;code&gt;JSONSerializer&lt;/code&gt; is a serializer that ships with Ember Data that can be used alongside the &lt;code&gt;RESTAdapter&lt;/code&gt; to serialize these simpler APIs.</source>
          <target state="translated">모든 API가 &lt;code&gt;JSONAPISerializer&lt;/code&gt; 가 데이터 네임 스페이스 및 사이드로드 된 관계 레코드와 함께 사용 하는 규칙을 따르는 것은 아닙니다 . 일부 레거시 API는 요청 된 리소스 또는 일련 화 된 레코드 배열 인 간단한 JSON 페이로드를 반환 할 수 있습니다. &lt;code&gt;JSONSerializer&lt;/code&gt; 는 함께 사용할 수있는 엠버 데이터와 함께 제공하는 시리얼입니다 &lt;code&gt;RESTAdapter&lt;/code&gt; 는 이 간단한 API를 직렬화.</target>
        </trans-unit>
        <trans-unit id="ffd864457962b62b613a0cd50865514f98c4dcd6" translate="yes" xml:space="preserve">
          <source>Not all combinations of the supported options are valid. See the documentation on &lt;code&gt;Application#visit&lt;/code&gt; for the supported configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb02f7d9bf0cc53a282a795dbaa82e1fca2c00b" translate="yes" xml:space="preserve">
          <source>Not all combinations of the supported options are valid. See the documentation on &lt;code&gt;Ember.Application#visit&lt;/code&gt; for the supported configurations.</source>
          <target state="translated">지원되는 옵션의 모든 조합이 유효한 것은 아닙니다. 지원되는 구성 에 &lt;code&gt;Ember.Application#visit&lt;/code&gt; 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9023fcc452af3baa532d621308c25e1e7a89cfd0" translate="yes" xml:space="preserve">
          <source>Not all options need to be passed to &lt;code&gt;render&lt;/code&gt;. Default values will be used based on the name of the route specified in the router or the Route's &lt;code&gt;controllerName&lt;/code&gt; and &lt;code&gt;templateName&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 하기 위해 모든 옵션을 전달할 필요는 없습니다 . 라우터에 지정된 경로 이름 또는 경로의 &lt;code&gt;controllerName&lt;/code&gt; 및 &lt;code&gt;templateName&lt;/code&gt; 속성 에 따라 기본값이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee6d1a4556d222478e5c7e5c3a4c6bc4274e41d3" translate="yes" xml:space="preserve">
          <source>Not only did we clean up the original template to be more readable, we now have a &lt;code&gt;&amp;lt;UserProfile&amp;gt;&lt;/code&gt; component that we can reuse whenever we need to render information about a given user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba9a00d7a0449cb290ce3ad1120d3aa3636a895" translate="yes" xml:space="preserve">
          <source>Not to be confused with Shadow DOM. The concept of a virtual DOM means abstracting your code (or in our case, Ember) away from using the browser's DOM in favor of a &quot;virtual&quot; DOM that can easily be accessed for read/writes or even serialized.</source>
          <target state="translated">Shadow DOM과 혼동하지 마십시오. 가상 DOM의 개념은 읽기 / 쓰기 또는 직렬화를 위해 쉽게 액세스 할 수있는 &quot;가상&quot;DOM을 위해 브라우저의 DOM을 사용하지 않도록 코드 (또는이 경우 Ember)를 추상화하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8cdf5c376933ccf1cfee5b424cfd3739a998e8c7" translate="yes" xml:space="preserve">
          <source>Not to be confused with Virtual DOM. Shadow DOM is still a work in progress, but basically a proposed way to have an &quot;isolated&quot; DOM encapsulated within your app's DOM.</source>
          <target state="translated">Virtual DOM과 혼동하지 마십시오. Shadow DOM은 여전히 ​​진행중인 작업이지만 기본적으로 앱의 DOM 내에 &quot;격리 된&quot;DOM을 캡슐화하도록 제안 된 방법입니다.</target>
        </trans-unit>
        <trans-unit id="38deaec67f4fb21704f163c68e4a5ae9e009f3bf" translate="yes" xml:space="preserve">
          <source>NotFoundError</source>
          <target state="translated">NotFoundError</target>
        </trans-unit>
        <trans-unit id="93f84c6f671c143039dfa2bce7125af619bf66c5" translate="yes" xml:space="preserve">
          <source>Note about prop drilling / anti-patterns?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31883872b6f315d0c51752f8b860fd68440db11" translate="yes" xml:space="preserve">
          <source>Note how we make use of the &lt;code&gt;click&lt;/code&gt; helper from &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers&quot;&gt;&lt;code&gt;ember-test-helpers&lt;/code&gt;&lt;/a&gt; to interact with the component DOM to trigger the &lt;code&gt;updateTitle&lt;/code&gt; action. You can find many other helpful helpers for simulating user interaction in rendering tests in the &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md&quot;&gt;API documentation of ember-test-helpers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e207619ed228ed5f64d1d93956ce95d0f0e4129" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;@each&lt;/code&gt; only works one level deep. You cannot use nested forms like &lt;code&gt;todos.@each.owner.name&lt;/code&gt; or &lt;code&gt;todos.@each.owner.@each.name&lt;/code&gt;.</source>
          <target state="translated">참고 것을 &lt;code&gt;@each&lt;/code&gt; 은 단 하나 수준의 깊이를 작동합니다. &lt;code&gt;todos.@each.owner.name&lt;/code&gt; 또는 &lt;code&gt;todos.@each.owner.@each.name&lt;/code&gt; 과 같은 중첩 양식을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f16d119c326701b840aecb156007df6766b5f55b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classNames&lt;/code&gt; and &lt;code&gt;classNameBindings&lt;/code&gt; is in addition to the &lt;code&gt;class&lt;/code&gt; attribute passed with the angle bracket invocation syntax. Therefore, if this component was invoked like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78a2d350219decae3de8dbd9a934a76cc3210ab" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deleteCurrentUser&lt;/code&gt; is no longer in quotes here as opposed to &lt;a href=&quot;#toc_passing-the-action-to-the-component&quot;&gt;previously&lt;/a&gt;. Quotes are used to initially pass the action down the component tree, but at every subsequent level you are instead passing the actual function reference (without quotes) in the action helper.</source>
          <target state="translated">참고 &lt;code&gt;deleteCurrentUser&lt;/code&gt; 는 반대로 여기에 인용 부호로 더 이상 &lt;a href=&quot;#toc_passing-the-action-to-the-component&quot;&gt;이전에&lt;/a&gt; . 따옴표는 처음에 컴포넌트 트리 아래로 조치를 전달하는 데 사용되지만 이후의 모든 레벨에서 조치 도우미의 실제 함수 참조 (따옴표없이)를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="a7aa52b94309022f1e200166fe6b205e8a7d8c5f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deleteCurrentUser&lt;/code&gt; is now prepended with &lt;code&gt;@&lt;/code&gt; as opposed to &lt;code&gt;this.&lt;/code&gt;&lt;a href=&quot;#toc_passing-the-action-to-the-component&quot;&gt;previously&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d657c22ecaee4c7aa7dc607d48a3471b79573dbd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;frozenCopy()&lt;/code&gt; will only work if you also implement &lt;code&gt;Ember.Freezable&lt;/code&gt;.</source>
          <target state="translated">참고 것을 &lt;code&gt;frozenCopy()&lt;/code&gt; 당신은 또한 구현하는 경우에만 작동합니다 &lt;code&gt;Ember.Freezable&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f6e566c79c98a818eb2e7a547fefdc2888a15607" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;species&lt;/code&gt; and &lt;code&gt;createPerson&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; valid on the &lt;code&gt;tom&lt;/code&gt; and &lt;code&gt;yehuda&lt;/code&gt; variables. They are only valid on &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">주의 &lt;code&gt;species&lt;/code&gt; 과 &lt;code&gt;createPerson&lt;/code&gt; 가 있습니다 &lt;em&gt;하지&lt;/em&gt; 상의 유효한 &lt;code&gt;tom&lt;/code&gt; 과 &lt;code&gt;yehuda&lt;/code&gt; 변수. 이들은 &lt;code&gt;Person&lt;/code&gt; 에서만 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="a3175c7127db2c71040aaa164a2c66da4032c275" translate="yes" xml:space="preserve">
          <source>Note that Ember Data also has a feature called a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;, but it's a separate concept from a route's &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06970be1fcab9740b07ebf6451f16d6c3ba5f22e" translate="yes" xml:space="preserve">
          <source>Note that Ember's default &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;JSON API adapter&lt;/a&gt; does not provide the functionality needed to support &lt;code&gt;queryRecord()&lt;/code&gt; directly as it relies on REST request definitions that return result data in the form of an array.</source>
          <target state="translated">Ember의 기본 &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;JSON API 어댑터&lt;/a&gt; 는 배열 형식으로 결과 데이터를 리턴하는 REST 요청 정의에 의존하므로 &lt;code&gt;queryRecord()&lt;/code&gt; 직접 지원하는 데 필요한 기능을 제공하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="29c0404d13cefd299384e17fd4d913c257cb7f34" translate="yes" xml:space="preserve">
          <source>Note that Ember's default &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt;JSON:API adapter&lt;/a&gt; does not provide the functionality needed to support &lt;code&gt;queryRecord()&lt;/code&gt; directly as it relies on REST request definitions that return result data in the form of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f582b0e70af7be068ecb7c92ee2cd1ea0f779d" translate="yes" xml:space="preserve">
          <source>Note that JSON-API also allows for object-level errors to be placed in an object with pointer &lt;code&gt;data&lt;/code&gt;, signifying that the problem cannot be traced to a specific attribute:</source>
          <target state="translated">JSON-API를 사용하면 포인터 수준의 &lt;code&gt;data&lt;/code&gt; 가있는 객체에 객체 수준 오류를 배치 할 수 있으므로 문제를 특정 속성으로 추적 할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="32b55a648a9226930f8a0dc87f4729a007906a54" translate="yes" xml:space="preserve">
          <source>Note that Mixins are created with &lt;code&gt;Ember.Mixin.create&lt;/code&gt;, not &lt;code&gt;Ember.Mixin.extend&lt;/code&gt;.</source>
          <target state="translated">Mixins은 &lt;code&gt;Ember.Mixin.create&lt;/code&gt; 가 아니라 &lt;code&gt;Ember.Mixin.extend&lt;/code&gt; 로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="79ee7b1883f8f390bc140d1c35f3d3cada3d86fb" translate="yes" xml:space="preserve">
          <source>Note that Mixins are created with &lt;code&gt;Mixin.create&lt;/code&gt;, not &lt;code&gt;Mixin.extend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b757d1d62e955259b537c65a5b0f0df274acce" translate="yes" xml:space="preserve">
          <source>Note that actions may be attached to any element of the DOM, but not all respond to the &lt;code&gt;click&lt;/code&gt; event. For example, if an action is attached to an &lt;code&gt;a&lt;/code&gt; link without an &lt;code&gt;href&lt;/code&gt; attribute, or to a &lt;code&gt;div&lt;/code&gt;, some browsers won't execute the associated function. If it's really needed to define actions over such elements, a CSS workaround exists to make them clickable, &lt;code&gt;cursor: pointer&lt;/code&gt;. For example:</source>
          <target state="translated">액션은 DOM의 모든 요소에 첨부 될 수 있지만 &lt;code&gt;click&lt;/code&gt; 이벤트에 모두 응답하는 것은 아닙니다 . 조치가 부착되는 경우, 예를 들어 없이 링크 &lt;code&gt;href&lt;/code&gt; 특성, 또는에 &lt;code&gt;div&lt;/code&gt; 일부 브라우저 연관된 기능을 실행하지 않을 것이다. 이러한 요소에 대한 조치를 정의해야하는 경우 CSS 조치가 존재하여 해당 요소를 클릭 가능하게 만들 수 있습니다 . &lt;code&gt;cursor: pointer&lt;/code&gt; . 예를 들면 다음과 같습니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e6cdf5e195bb9b233c0037678ccb4b71a62dca" translate="yes" xml:space="preserve">
          <source>Note that although you can pass optional arguments these will not be considered when looking for duplicates. New arguments will replace previous calls.</source>
          <target state="translated">선택적 인수를 전달할 수 있지만 중복을 찾을 때는 고려되지 않습니다. 새로운 주장은 이전의 전화를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="c9855a05b5c5c77b57064406fd84a06bcd0a8dc0" translate="yes" xml:space="preserve">
          <source>Note that an Array can change even if it does not implement this mixin. For example, one might implement a SparseArray that cannot be directly modified, but if its underlying enumerable changes, it will change also.</source>
          <target state="translated">이 믹스 인을 구현하지 않아도 Array는 변경 될 수 있습니다. 예를 들어 직접 수정할 수없는 SparseArray를 구현할 수 있지만 기본 열거 가능한 변경 사항도 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="3521e07c4a5492836c834d2874a2f36b14039567" translate="yes" xml:space="preserve">
          <source>Note that an Enumerable can change even if it does not implement this mixin. For example, a MappedEnumerable cannot be directly modified but if its underlying enumerable changes, it will change also.</source>
          <target state="translated">Enumerable은이 믹스 인을 구현하지 않더라도 변경할 수 있습니다. 예를 들어 MappedEnumerable은 직접 수정할 수 없지만 기본 열거 가능한 변경 사항이 있으면 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="924886ebe747f409911384465b52739f93291a0f" translate="yes" xml:space="preserve">
          <source>Note that an optional parameter can be sent to a record's &lt;code&gt;send()&lt;/code&gt; method, which will be passed as the second parameter to the event handler.</source>
          <target state="translated">선택적 매개 변수는 레코드의 &lt;code&gt;send()&lt;/code&gt; 메소드 로 전송 될 수 있으며 ,이 매개 변수는 두 번째 매개 변수로 이벤트 핸들러에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="33c0dee324e64567f69ae25ca1d96c1e702d98c2" translate="yes" xml:space="preserve">
          <source>Note that at this point of the tutorial, the data is still provided by the &lt;code&gt;app/routes/rentals.js&lt;/code&gt; file. We will make use of the mirage data we set up here in the upcoming section called &lt;a href=&quot;../ember-data&quot;&gt;Using Ember Data&lt;/a&gt;.</source>
          <target state="translated">학습서의 현재 시점에서 데이터는 여전히 &lt;code&gt;app/routes/rentals.js&lt;/code&gt; 파일에 의해 제공됩니다 . 다음에 &lt;a href=&quot;../ember-data&quot;&gt;Ember Data 사용하기&lt;/a&gt; 섹션에서 설정 한 mirage 데이터를 사용할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="4f4d294aca00174f3144afecf57b40f5c3cfa104" translate="yes" xml:space="preserve">
          <source>Note that because arguments are prefixed with &lt;code&gt;@&lt;/code&gt; in templates, and placed on &lt;code&gt;args&lt;/code&gt; in the component definition, we can use the same name for our &lt;code&gt;icon&lt;/code&gt; and &lt;code&gt;tooltipClass&lt;/code&gt; getters, which is pretty convenient. We can also tell clearly when we look at the template for the tooltip that &lt;code&gt;this.tooltipClass&lt;/code&gt; and &lt;code&gt;this.icon&lt;/code&gt; are values that come from the class definition, and that means they probably have been used in some kind of dynamic code (in this case, our defaulting logic).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9fe44fe234ff341d449b15a171ed9251b8aad4" translate="yes" xml:space="preserve">
          <source>Note that because it's just a filter, the result will contain any locally created records of the type, however, it will not make a request to the backend to retrieve additional records. If you would like to request all the records from the backend please use &lt;a href=&quot;#method_findAll&quot;&gt;store.findAll&lt;/a&gt;.</source>
          <target state="translated">필터 일 뿐이므로 결과적으로 로컬로 생성 된 유형의 레코드가 포함되지만 백엔드에 추가 레코드를 검색하도록 요청하지는 않습니다. 백엔드에서 모든 레코드를 요청하려면 &lt;a href=&quot;#method_findAll&quot;&gt;store.findAll을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="69bcb0cedc1629cdc53fe09ae616018fed0383c2" translate="yes" xml:space="preserve">
          <source>Note that because it's just a filter, the result will contain any locally created records of the type, however, it will not make a request to the backend to retrieve additional records. If you would like to request all the records from the backend please use &lt;a href=&quot;../classes/store/methods#findAll&quot;&gt;store.findAll&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0838905b21f58bd42b79e4b1f7728fbd5f10b750" translate="yes" xml:space="preserve">
          <source>Note that bindings don't update immediately. Ember waits until all of your application code has finished running before synchronizing changes, so you can change a bound property as many times as you'd like without worrying about the overhead of syncing bindings when values are transient.</source>
          <target state="translated">바인딩은 즉시 업데이트되지 않습니다. Ember는 변경 사항을 동기화하기 전에 모든 응용 프로그램 코드의 실행이 끝날 때까지 대기하므로 값이 일시적 일 때 바인딩 동기화의 오버 헤드에 대해 걱정하지 않고 원하는만큼 바인딩 된 속성을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbbf2504b1812767ba76187f7645a62965a6b701" translate="yes" xml:space="preserve">
          <source>Note that component names are capitalized here in order to distinguish them from regular HTML elements, but they are dasherized in the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958456bed5d43bbdc211b8f3e852be80e1eafc1d" translate="yes" xml:space="preserve">
          <source>Note that destruction is scheduled for the end of the run loop and does not happen immediately. It will set an isDestroying flag immediately.</source>
          <target state="translated">소멸은 실행 루프의 끝으로 예정되어 있으며 즉시 발생하지 않습니다. isDestroying 플래그를 즉시 설정합니다.</target>
        </trans-unit>
        <trans-unit id="02fedd1822a65dfaf8b470cacfe5d1ddfd042c45" translate="yes" xml:space="preserve">
          <source>Note that embedded records will serialize with the serializer for their model instead of the serializer in which they are defined.</source>
          <target state="translated">임베드 된 레코드는 모델이 정의 된 직렬 변환기 대신 직렬 변환기와 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="bdf60f3cfbf501d3dcffb7089a351e863fd21b98" translate="yes" xml:space="preserve">
          <source>Note that for curly components (&lt;code&gt;{{my-component}}&lt;/code&gt;) the bindings are already mutable, making the &lt;code&gt;mut&lt;/code&gt; unnecessary.</source>
          <target state="translated">곱슬 컴포넌트 ( &lt;code&gt;{{my-component}}&lt;/code&gt; )의 경우 바인딩이 이미 변경 가능하므로 &lt;code&gt;mut&lt;/code&gt; 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="8fa797c14ae391330eeeed89571db0017aff4300" translate="yes" xml:space="preserve">
          <source>Note that for performance reasons, while calling &lt;code&gt;create()&lt;/code&gt; you cannot redefine an instance's computed properties and should not redefine existing or define new methods. You should only set simple properties when calling &lt;code&gt;create()&lt;/code&gt;. If you need to define or redefine methods or computed properties, create a new subclass and instantiate that.</source>
          <target state="translated">성능상의 이유로 &lt;code&gt;create()&lt;/code&gt; 를 호출하는 동안 인스턴스의 계산 된 속성을 재정의 할 수 없으며 기존 메서드를 재정의하거나 새 메서드를 정의해서는 안됩니다. &lt;code&gt;create()&lt;/code&gt; 호출 할 때 간단한 속성 만 설정해야합니다 . 메소드 또는 계산 된 특성을 정의하거나 재정의해야하는 경우 새 서브 클래스를 작성하고 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="3fce3689a0766225ec48133f04e1b60a1d8c9390" translate="yes" xml:space="preserve">
          <source>Note that for routes with dynamic segments, this hook is not always executed. If the route is entered through a transition (e.g. when using the &lt;code&gt;link-to&lt;/code&gt; Handlebars helper or the &lt;code&gt;transitionTo&lt;/code&gt; method of routes), and a model context is already provided this hook is not called.</source>
          <target state="translated">동적 세그먼트가있는 경로의 경우이 후크가 항상 실행되는 것은 아닙니다. 경로가 전환을 통해 입력 된 경우 (예 : &lt;code&gt;link-to&lt;/code&gt; 핸들 핸들 도우미 또는 경로 의 &lt;code&gt;transitionTo&lt;/code&gt; 메소드를 사용하는 경우) 모델 컨텍스트가 이미 제공된 경우이 후크가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40e020d503512efc885004b76ea4846ffd6830fc" translate="yes" xml:space="preserve">
          <source>Note that here, we are using the ES6 shorthand method definition syntax: &lt;code&gt;model()&lt;/code&gt; is the same as writing &lt;code&gt;model: function()&lt;/code&gt;.</source>
          <target state="translated">여기서는 ES6 속기 메소드 정의 구문을 사용합니다. &lt;code&gt;model()&lt;/code&gt; 은 &lt;code&gt;model: function()&lt;/code&gt; 작성과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="afeb106af344e9d52a516511d31b13a986723101" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;propertyKey&lt;/code&gt; is a computed property, the observer will be called when any of the property dependencies are changed, even if the resulting value of the computed property is unchanged. This is necessary because computed properties are not computed until &lt;code&gt;get&lt;/code&gt; is called.</source>
          <target state="translated">경우 유의 &lt;code&gt;propertyKey&lt;/code&gt; 가 계산 속성 인 속성 종속성 중 하나가 변경 될 때, 관찰자가 계산 된 특성의 결과 값이 변하지 않더라도, 호출된다. &lt;code&gt;get&lt;/code&gt; 이 호출 될 때까지 계산 된 속성이 계산되지 않기 때문에이 작업이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="3feff379f3ec37882e3c4043a045e926ad0b8051" translate="yes" xml:space="preserve">
          <source>Note that if the object itself is &lt;code&gt;undefined&lt;/code&gt;, this method will throw an error.</source>
          <target state="translated">객체 자체가 &lt;code&gt;undefined&lt;/code&gt; 인 경우이 메소드는 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="12599119857f7413215eb5b8997c4a07e5079fbd" translate="yes" xml:space="preserve">
          <source>Note that if you disable these APIs, then all addons you use must also work without them, as they will not be available at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd2f0b215301baef1df99d6b1c051668ddf77dc" translate="yes" xml:space="preserve">
          <source>Note that if you want to manually transition to this wildcard route, you need to pass an arbitrary (not empty) argument. For example, using Ember Data to find a record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540f116cbff565163df0174c504c06f99d5cfbf7" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &quot;this&quot; on the context. This is a good way to give your iterator function access to the current object.</source>
          <target state="translated">콜백 외에도 컨텍스트에서 &quot;this&quot;로 설정 될 선택적 대상 객체를 전달할 수도 있습니다. 이것은 iterator 함수에 현재 객체에 대한 액세스 권한을 부여하는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5c955a4684ca89b99f35640968f2c4ee63c05c39" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context.</source>
          <target state="translated">콜백 이외에, 당신은 또한로 설정됩니다 옵션 대상 객체 통과 할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 상황에 있습니다.</target>
        </trans-unit>
        <trans-unit id="054c853509d2ba97918ff9018b0466f2556e9077" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context. It can be a good way to give your iterator function access to an object in cases where an ES6 arrow function would not be appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43847d45892775735670813b1ca175dda47767b" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can also pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context. This is a good way to give your iterator function access to the current object.</source>
          <target state="translated">콜백 이외에, 당신은 또한로 설정됩니다 옵션 대상 객체 통과 할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 상황에 있습니다. 이것은 iterator 함수에 현재 객체에 대한 액세스 권한을 부여하는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="7e6e0ad340380ddba0e8abf0f11ed7ec90c21696" translate="yes" xml:space="preserve">
          <source>Note that in addition to a callback, you can pass an optional target object that will be set as &lt;code&gt;this&lt;/code&gt; on the context. This is a good way to give your iterator function access to the current object. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e78eacf4a6f2eb923292be3495f30dd476f1f2" translate="yes" xml:space="preserve">
          <source>Note that it is traditional but not required to prefix localized string keys with an underscore or other character so you can easily identify localized strings.</source>
          <target state="translated">현지화 된 문자열 키 앞에 밑줄이나 다른 문자를 붙이는 것이 일반적이지만 필수는 아니므로 현지화 된 문자열을 쉽게 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0570de2e6671b34e42fe3bc1220035f85d5b655e" translate="yes" xml:space="preserve">
          <source>Note that like the native &lt;code&gt;Array.every&lt;/code&gt;, &lt;code&gt;isEvery&lt;/code&gt; will return true when called on any empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a511380c7d51e6b8aa92a6d9dbd7dd96985267fc" translate="yes" xml:space="preserve">
          <source>Note that like the native &lt;code&gt;Array.every&lt;/code&gt;, &lt;code&gt;isEvery&lt;/code&gt; will return true when called on any empty enumerable.</source>
          <target state="translated">네이티브 같은 것을 참고 &lt;code&gt;Array.every&lt;/code&gt; , &lt;code&gt;isEvery&lt;/code&gt; 는 빈 열거 호출 할 때 true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="3cbb28c77f6e351fc1928e6220e782dc362a1b2a" translate="yes" xml:space="preserve">
          <source>Note that mixins extend a constructor's prototype so arrays and object literals defined as properties will be shared amongst objects that implement the mixin. If you want to define a property in a mixin that is not shared, you can define it either as a computed property or have it be created on initialization of the object.</source>
          <target state="translated">믹스 인은 생성자의 프로토 타입을 확장하므로 속성으로 정의 된 배열과 객체 리터럴은 믹스 인을 구현하는 객체간에 공유됩니다. 공유되지 않은 믹스 인에서 속성을 정의하려는 경우 계산 된 속성으로 정의하거나 객체를 초기화 할 때 속성을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0915ee7945263956963defb8eed8d82042531b8" translate="yes" xml:space="preserve">
          <source>Note that ordering only applies to initializers of the same type (i.e. application or application instance). Application initializers will always run before application instance initializers.</source>
          <target state="translated">순서는 같은 유형 (예 : 응용 프로그램 또는 응용 프로그램 인스턴스)의 이니셜 라이저에만 적용됩니다. 응용 프로그램 이니셜 라이저는 항상 응용 프로그램 인스턴스 이니셜 라이저보다 먼저 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="cd481def60b39fb5cb1c89acadb42052522a4f36" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt; component uses the element's &lt;code&gt;id&lt;/code&gt; HTML attribute internally for event dispatching purposes. For that reason, if you would like to customize its HTML &lt;code&gt;id&lt;/code&gt;, you must pass it as the &lt;code&gt;@id&lt;/code&gt; argument instead. Overriding the components &lt;code&gt;id&lt;/code&gt; attribute directly will stop the link from functioning correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01853252476693e8ba50c063c6d95f4b2768ee1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;admin&lt;/code&gt; is now not included in the payload.</source>
          <target state="translated">점을 유의 &lt;code&gt;admin&lt;/code&gt; 이제 페이로드에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7f362d5350f1a714f3fb4f83101f5404f48bb4c4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;href&lt;/code&gt; attribute is ultimately set to &lt;code&gt;http://bing.com&lt;/code&gt;, despite it having attribute binidng to the &lt;code&gt;url&lt;/code&gt; property, which was set to &lt;code&gt;http://google.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e181bf43f632a621775995506d04b89a64308a3a" translate="yes" xml:space="preserve">
          <source>Note that the Ember.Array mixin also incorporates the &lt;code&gt;Ember.Enumerable&lt;/code&gt; mixin. All &lt;code&gt;Ember.Array&lt;/code&gt;-like objects are also enumerable.</source>
          <target state="translated">Ember.Array 믹스 인에는 &lt;code&gt;Ember.Enumerable&lt;/code&gt; 믹스 인도 포함되어 있습니다. 모든 &lt;code&gt;Ember.Array&lt;/code&gt; 와 유사한 객체도 열거 가능합니다.</target>
        </trans-unit>
        <trans-unit id="464a4e1a39f9e9d238321f795ebad418f97d241c" translate="yes" xml:space="preserve">
          <source>Note that the hash is an empty object with no prototype chain, therefore common methods like &lt;code&gt;toString&lt;/code&gt; are not available in the resulting hash. If you need to use such a method, you can use the &lt;code&gt;call&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; approach:</source>
          <target state="translated">해시는 프로토 타입 체인이없는 빈 객체이므로 결과 해시에서는 &lt;code&gt;toString&lt;/code&gt; 과 같은 일반적인 방법을 사용할 수 없습니다. 이러한 방법을 사용해야하는 경우 &lt;code&gt;call&lt;/code&gt; 또는 &lt;code&gt;apply&lt;/code&gt; 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc9566b0898e72178820bea560bb816fc27b12cd" translate="yes" xml:space="preserve">
          <source>Note that the object root can be pluralized for both a single-object response and an array response: the REST adapter is not strict on this. Further, if the HTTP server responds to a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/posts/1&lt;/code&gt; (e.g. the response to a &lt;code&gt;findRecord&lt;/code&gt; query) with more than one object in the array, Ember Data will only display the object with the matching ID.</source>
          <target state="translated">단일 오브젝트 응답 및 배열 응답 모두에 대해 오브젝트 루트를 복수화 할 수 있습니다. REST 어댑터는 이에 엄격하지 않습니다. 또한 HTTP 서버 가 배열에서 둘 이상의 객체 로 &lt;code&gt;/posts/1&lt;/code&gt; 에 대한 &lt;code&gt;GET&lt;/code&gt; 요청 (예 : &lt;code&gt;findRecord&lt;/code&gt; 쿼리에 대한 응답)에 응답하면 Ember Data는 일치하는 ID를 가진 객체 만 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7279e9a3c8ff0311e3ca69d4c929ddaff389ce17" translate="yes" xml:space="preserve">
          <source>Note that the type is &lt;code&gt;&quot;post&quot;&lt;/code&gt; to match the post model and the &lt;code&gt;relatedPosts&lt;/code&gt; relationship in the document matches the &lt;code&gt;relatedPosts: hasMany('post')&lt;/code&gt; on the model.</source>
          <target state="translated">형식은 게시 모델과 일치하는 &lt;code&gt;&quot;post&quot;&lt;/code&gt; 이며 문서 의 &lt;code&gt;relatedPosts&lt;/code&gt; 관계는 모델 의 &lt;code&gt;relatedPosts: hasMany('post')&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="f4eb0b1efdb39f3ebca0f7e635c310baf3798944" translate="yes" xml:space="preserve">
          <source>Note that the unique page title is first. This is because it is the most important piece of information from a contextual perspective. Since a user with a screen reader can interrupt the screen reader as they wish, it introduces less fatigue when the unique page title is first, but provides the additional guidance if it is desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eff6f06d820fba4c333176986e17975b086782" translate="yes" xml:space="preserve">
          <source>Note that there are often alternatives to using &lt;code&gt;next&lt;/code&gt;. For instance, if you'd like to schedule an operation to happen after all DOM element operations have completed within the current run loop, you can make use of the &lt;code&gt;afterRender&lt;/code&gt; run loop queue (added by the &lt;code&gt;ember-views&lt;/code&gt; package, along with the preceding &lt;code&gt;render&lt;/code&gt; queue where all the DOM element operations happen).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651d898d00f66933a50a90cbb6374067806121e6" translate="yes" xml:space="preserve">
          <source>Note that there are often alternatives to using &lt;code&gt;run.next&lt;/code&gt;. For instance, if you'd like to schedule an operation to happen after all DOM element operations have completed within the current run loop, you can make use of the &lt;code&gt;afterRender&lt;/code&gt; run loop queue (added by the &lt;code&gt;ember-views&lt;/code&gt; package, along with the preceding &lt;code&gt;render&lt;/code&gt; queue where all the DOM element operations happen).</source>
          <target state="translated">&lt;code&gt;run.next&lt;/code&gt; 사용에 대한 대안이 종종 있습니다. 예를 들어, 모든 DOM 요소 작업이 현재 실행 루프 내에서 완료된 후 작업이 발생하도록 예약하려면 &lt;code&gt;afterRender&lt;/code&gt; 실행 루프 큐 ( &lt;code&gt;ember-views&lt;/code&gt; 패키지 에 의해 추가됨 )와 모든 DOM 요소 작업이 발생하는 &lt;code&gt;render&lt;/code&gt; 대기열).</target>
        </trans-unit>
        <trans-unit id="1a2908061b0e5261ac4ab461e91d0df54a7b2c9e" translate="yes" xml:space="preserve">
          <source>Note that this method is expected to validate the type(s) of objects that it expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378ebd8cb4393b5003287ca8dc8a822623b4efce" translate="yes" xml:space="preserve">
          <source>Note that this use of &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; is unrelated to the &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; that is defined as an option on &lt;code&gt;DS.attr&lt;/code&gt; as part of defining a model while working with the &lt;code&gt;ActiveModelSerializer&lt;/code&gt;. Nevertheless, using &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; as an option to &lt;code&gt;DS.attr&lt;/code&gt; is not a valid way to setup embedded records.</source>
          <target state="translated">의 사용은주의 &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; 받는 관련이 &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; 에 옵션으로 정의되는 &lt;code&gt;DS.attr&lt;/code&gt; 와 함께 작업하는 동안 모델을 정의의 일부로서 &lt;code&gt;ActiveModelSerializer&lt;/code&gt; . 그럼에도 불구하고 &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; 를 &lt;code&gt;DS.attr&lt;/code&gt; 에 대한 옵션으로 사용하는 것은 임베디드 레코드를 설정하는 올바른 방법이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f0d39521c8d3386b3a34e9ced91037feeb0a7b2a" translate="yes" xml:space="preserve">
          <source>Note that this will cause &lt;code&gt;model&lt;/code&gt; hooks to fire even on routes that were provided a model object when the route was initially entered.</source>
          <target state="translated">이로 인해 경로를 처음 입력했을 때 모델 객체가 제공된 경로에서도 &lt;code&gt;model&lt;/code&gt; 후크가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="3ad6b52ecb990cca8134262cdb224e497f1a00b0" translate="yes" xml:space="preserve">
          <source>Note that unlike the other methods, this method does not allow you to pass a target object to set as this for the callback. It's part of the spec. Sorry.</source>
          <target state="translated">다른 메소드와 달리이 메소드를 사용하면 콜백에 대해 대상 오브젝트를 전달하여이를 설정할 수 없습니다. 사양의 일부입니다. 죄송합니다.</target>
        </trans-unit>
        <trans-unit id="26447af188841d48c0710f264d1255e8f15f8449" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;getValue()&lt;/code&gt; on helpers that have scheduled effects will not trigger the effect early. Effects will continue to run at their scheduled time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371ce8ef529dace1e8d2c2203e1f4f3802472483" translate="yes" xml:space="preserve">
          <source>Note that we've changed the title from a hard-coded string (&quot;List of Scientists&quot;) to &lt;code&gt;{{@title}}&lt;/code&gt;. The &lt;code&gt;@&lt;/code&gt; indicates that &lt;code&gt;@title&lt;/code&gt; is an argument that will be passed into the component, which makes it easier to reuse the same component in other parts of the app we are building.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8695c270f1bbdd1d483514b31345a7b00a6573" translate="yes" xml:space="preserve">
          <source>Note that we've changed the title from a hard-coded string (&quot;List of Scientists&quot;) to a dynamic property (&lt;code&gt;{{title}}&lt;/code&gt;). We've also renamed &lt;code&gt;scientist&lt;/code&gt; to the more-generic &lt;code&gt;person&lt;/code&gt;, decreasing the coupling of our component to where it's used.</source>
          <target state="translated">제목이 하드 코딩 된 문자열 ( &quot;List of Scientists&quot;)에서 동적 속성 ( &lt;code&gt;{{title}}&lt;/code&gt; )으로 변경되었습니다. 또한 &lt;code&gt;scientist&lt;/code&gt; 를보다 일반적인 &lt;code&gt;person&lt;/code&gt; 개명 하여 구성 요소의 사용 위치를 줄였습니다.</target>
        </trans-unit>
        <trans-unit id="0ed074944de72e05c208bff026941dc6e4b90338" translate="yes" xml:space="preserve">
          <source>Note that when defined this way, getters and setters receive the &lt;em&gt;key&lt;/em&gt; of the property they are decorating as the first argument. Setters receive the value they are setting to as the second argument instead. Additionally, setters must &lt;em&gt;return&lt;/em&gt; the value that should be cached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b30820f06c406c555007384a49ae0eb6eff9ff" translate="yes" xml:space="preserve">
          <source>Note that while &lt;code&gt;:comment_id&lt;/code&gt; is populated with each comment's &lt;code&gt;id&lt;/code&gt; (based on the &lt;code&gt;@model&lt;/code&gt; argument), the &lt;code&gt;:photo_id&lt;/code&gt; segment is automatically assumed to be the same as the corresponding segment in current URL, i.e. &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f09fc9f990588b5d80fc487a42b8ac473c1564" translate="yes" xml:space="preserve">
          <source>Note that with this syntax, you use dashes in the component name and arguments are passed without the &lt;code&gt;@&lt;/code&gt; sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bce60538daed2815d21c307bbe23abc78831ea" translate="yes" xml:space="preserve">
          <source>Note that you cannot use &lt;code&gt;attr&lt;/code&gt; to define an attribute of &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attr&lt;/code&gt; 을 사용하여 &lt;code&gt;id&lt;/code&gt; 속성을 정의 할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7bb46a8ed0ed5ba9c5b246982b813cc010e7976e" translate="yes" xml:space="preserve">
          <source>Note that you will not generally apply this mixin to classes yourself, but you will use the features provided by this module frequently, so it is important to understand how to use it.</source>
          <target state="translated">일반적으로이 믹스 인을 클래스에 직접 적용하지는 않지만이 모듈에서 제공하는 기능을 자주 사용하므로 사용 방법을 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="b0597a69e13b4e14adaa25db22b7f0f4898ba79d" translate="yes" xml:space="preserve">
          <source>Note that, for polymorphism to work, Ember Data expects a &quot;type&quot; declaration polymorphic type via the reserved &lt;code&gt;type&lt;/code&gt; property on the model. Confused? See the API response below.</source>
          <target state="translated">다형성이 작동하기 위해 Ember Data는 모델 의 예약 된 &lt;code&gt;type&lt;/code&gt; 속성을 통해 &quot;유형&quot;선언 다형성 유형을 예상합니다 . 혼란 스러운가? 아래 API 응답을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e1de6c308dc4f6fc162197eb2bbe65e4c36374d2" translate="yes" xml:space="preserve">
          <source>Note that, with default settings, &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; will always re-fetch all the records in the background even if &lt;code&gt;shouldReloadAll&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. You can override &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; if this does not suit your use case.</source>
          <target state="translated">그 참고 기본 설정으로, &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; 은 항상 경우에도 백그라운드에서 모든 레코드를 다시 가져옵니다 &lt;code&gt;shouldReloadAll&lt;/code&gt; 가 반환 &lt;code&gt;false&lt;/code&gt; . 사용 사례에 맞지 않으면 &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; 을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d35e47cdfb2862962cfbd80e030c1179e5271e2" translate="yes" xml:space="preserve">
          <source>Note that, with default settings, &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; will always re-fetch the records in the background even if &lt;code&gt;shouldReloadRecord&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. You can override &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; if this does not suit your use case.</source>
          <target state="translated">그 참고 기본 설정으로, &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; 은 항상 경우에도 백그라운드에서 기록을 다시 가져옵니다 &lt;code&gt;shouldReloadRecord&lt;/code&gt; 가 반환 &lt;code&gt;false&lt;/code&gt; . 사용 사례에 맞지 않으면 &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; 를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3e7b0d071a0586986d448b602cae0e1b1e36d11b" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;defaultSerializer&lt;/code&gt; serializer has a lower priority than a model specific serializer (i.e. &lt;code&gt;PostSerializer&lt;/code&gt;) or the &lt;code&gt;application&lt;/code&gt; serializer.</source>
          <target state="translated">메모 &lt;code&gt;defaultSerializer&lt;/code&gt; 의 시리얼이 모델 특정 시리얼 라이저 (즉,보다 낮은 우선 순위가 &lt;code&gt;PostSerializer&lt;/code&gt; ) 또는 &lt;code&gt;application&lt;/code&gt; 시리얼을.</target>
        </trans-unit>
        <trans-unit id="c2834cf6bbd94ed6aef8e6013e999bc135d0fb13" translate="yes" xml:space="preserve">
          <source>Note, each property is preceded by a letter icon to help you distinguish its type. For example, the letter G for a getter and the letter T for a tracked property. You can hover over the letter icon to learn more about the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f4506fb3a05447ab14f565fb6e2b842cf11a48" translate="yes" xml:space="preserve">
          <source>Note, however, that if you want to use a getter as a dependent key, you will need to use the &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Fobject%2Fcompat/dependentKeyCompat&quot;&gt;&lt;code&gt;dependentKeyCompat&lt;/code&gt;&lt;/a&gt; decorator. This allows you to refactor existing computed properties into getters without breaking existing code that observes them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb647930b09774d9a7d1f2c7dba4f9718af79971" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;keydown&lt;/code&gt; event was used for &lt;code&gt;Escape&lt;/code&gt; because &lt;code&gt;keypress&lt;/code&gt; is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989821bd9cf3dc50ca706636304ea7dba6f31cc4" translate="yes" xml:space="preserve">
          <source>Note, we imported &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; from &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md&quot;&gt;@ember/test-helpers&lt;/a&gt; to show and interact with the component. We also imported &lt;code&gt;hbs&lt;/code&gt; from &lt;a href=&quot;https://github.com/ember-cli/ember-cli-htmlbars&quot;&gt;ember-cli-htmlbars&lt;/a&gt; to help with inline template definitions. With these methods, we can check if clicking on the component correctly updates its output to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3144527b655b44606d8569bfa2bcdc4d0881bcce" translate="yes" xml:space="preserve">
          <source>Note, when disabled (the default configuration for Ember Addons), you will instead have to access all methods and functions from the Ember namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13732d909df101e35972d2b3cbd4c7562e4548f7" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;role=&quot;presentation&quot;&lt;/code&gt; or &lt;code&gt;aria-hidden=&quot;true&quot;&lt;/code&gt; should not be used on a focusable element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6d28dc5630809cf305ce67605b5bd4a3c6f88f" translate="yes" xml:space="preserve">
          <source>Note: A route with a dynamic segment will always have its &lt;code&gt;model&lt;/code&gt; hook called when it is entered via the URL. If the route is entered through a transition (e.g. when using the &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;link-to&lt;/a&gt; Handlebars helper), and a model context is provided (second argument to &lt;code&gt;link-to&lt;/code&gt;), then the hook is not executed. If an identifier (such as an id or slug) is provided instead then the model hook will be executed.</source>
          <target state="translated">참고 : 동적 세그먼트가있는 경로 는 URL을 통해 입력 될 때 항상 &lt;code&gt;model&lt;/code&gt; 후크가 호출됩니다. 경로가 전환을 통해 입력되고 (예 : &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;링크&lt;/a&gt; 핸들 핸들 도우미 를 사용하는 경우 ) 모델 컨텍스트가 제공되는 경우 ( &lt;code&gt;link-to&lt;/code&gt; 두 번째 인수 ) 후크가 실행되지 않습니다. 식별자 (예 : 아이디 또는 슬러그)가 대신 제공되면 모델 후크가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3702f2df2efc5cbf72a1cc1e1abb9bfc0930161f" translate="yes" xml:space="preserve">
          <source>Note: Although an &lt;code&gt;Application&lt;/code&gt; serves as the primary registry for an app, each &lt;code&gt;ApplicationInstance&lt;/code&gt; can also serve as a registry. Instance-level registrations are useful for providing instance-level customizations, such as A/B testing of a feature.</source>
          <target state="translated">참고 : &lt;code&gt;Application&lt;/code&gt; 은 앱의 기본 레지스트리 역할을 하지만 각 &lt;code&gt;ApplicationInstance&lt;/code&gt; 는 레지스트리 역할을 할 수도 있습니다. 인스턴스 레벨 등록은 기능의 A / B 테스트와 같은 인스턴스 레벨 사용자 정의를 제공하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8059e5b3e533d7d14c47254ab156f12f711ad42c" translate="yes" xml:space="preserve">
          <source>Note: Decorators are still being actively developed in JavaScript, which means that there may be small changes in the future. The decorators provided by Ember should remain stable through these changes, but it is recommended that you exercise caution if using any external decorator libraries which may not have the same stability guarantees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecc03da2a0a560ac7c30c7b597fc46f4cada8d2" translate="yes" xml:space="preserve">
          <source>Note: If using ember-cli, this value is defaulted to &lt;code&gt;auto&lt;/code&gt; by the &lt;code&gt;locationType&lt;/code&gt; setting of &lt;code&gt;/config/environment.js&lt;/code&gt;</source>
          <target state="translated">참고 : ember-cli를 사용하는 경우이 값은 &lt;code&gt;/config/environment.js&lt;/code&gt; 의 &lt;code&gt;locationType&lt;/code&gt; 설정에 의해 기본값이 &lt;code&gt;auto&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1fc38f1739cc87bba2c00f6bf3794881604d09be" translate="yes" xml:space="preserve">
          <source>Note: Object Oriented Programming is a fundamental part of JavaScript, but it's not the only part - JavaScript is a multi-paradigm language, and supports Object Oriented Programming patterns along with Functional Programming, Event Driven programming, and imperative programming. You may see strong adherents to different styles both inside and outside of the Ember ecosystem, and that's OK! JavaScript is flexible, and allows you to choose the patterns that work well for you, so don't feel like all of your code needs to be written in a class, and likewise, don't feel like everything needs to be a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f5b5d130fcc7f35759471b87f796a64ba0bf18" translate="yes" xml:space="preserve">
          <source>Note: Requests coalescing rely on URL building strategy. So if you override &lt;code&gt;buildURL&lt;/code&gt; in your app &lt;code&gt;groupRecordsForFindMany&lt;/code&gt; more likely should be overridden as well in order for coalescing to work.</source>
          <target state="translated">참고 : 통합 요청은 URL 작성 전략에 의존합니다. 따라서 앱 &lt;code&gt;buildURL&lt;/code&gt; 에서 buildURL 을 재정의하면 통합이 작동하기 위해 &lt;code&gt;groupRecordsForFindMany&lt;/code&gt; 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="018e0a8f6879143bee9400b95adfa316a624f537" translate="yes" xml:space="preserve">
          <source>Note: Some features require you to &lt;a href=&quot;https://github.com/babel/ember-cli-babel#polyfill&quot;&gt;enable the Babel polyfill&lt;/a&gt;. This adds some extra weight to your application, but ensures you'll be compatible with any new features that are added to JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988c673c243966a02e208a24ee8b7c370c3a4b44" translate="yes" xml:space="preserve">
          <source>Note: The above sample uses Glimmer components - we'll be covering these in detail later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5419d831a5b54735c8bbd6553f83149c2ff908fd" translate="yes" xml:space="preserve">
          <source>Note: This means that arguments which are not &lt;em&gt;consumed&lt;/em&gt; within the hook will not trigger updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855ed88d13b422515a3bdb028bbb0822265999aa" translate="yes" xml:space="preserve">
          <source>Note: When creating a new record using any of the above methods Ember Data will update &lt;code&gt;DS.RecordArray&lt;/code&gt;s such as those returned by &lt;code&gt;store#peekAll()&lt;/code&gt; or &lt;code&gt;store#findAll()&lt;/code&gt;. This means any data bindings or computed properties that depend on the RecordArray will automatically be synced to include the new or updated record values.</source>
          <target state="translated">참고 : 위의 방법 중 하나를 사용하여 새 레코드를 만들면 Ember Data는 &lt;code&gt;store#peekAll()&lt;/code&gt; 또는 &lt;code&gt;store#findAll()&lt;/code&gt; 반환 한 것과 같은 &lt;code&gt;DS.RecordArray&lt;/code&gt; 를 업데이트 합니다. 이는 RecordArray에 의존하는 모든 데이터 바인딩 또는 계산 된 속성이 자동으로 동기화되어 새로운 또는 업데이트 된 레코드 값을 포함 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0819f4c8d49da2fc844d7e2085af535105bd9961" translate="yes" xml:space="preserve">
          <source>Note: When creating a new record using any of the above methods Ember Data will update &lt;code&gt;RecordArray&lt;/code&gt;s such as those returned by &lt;code&gt;store#peekAll()&lt;/code&gt; or &lt;code&gt;store#findAll()&lt;/code&gt;. This means any data bindings or computed properties that depend on the RecordArray will automatically be synced to include the new or updated record values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474e88279cc080ad5d1134fe588f50cbfe683726" translate="yes" xml:space="preserve">
          <source>Note: if you don't know what a &quot;prototype&quot; is, don't worry - it's how JavaScript does inheritance. Most of the details of prototypes are made simpler by native class syntax, and while it's useful to know, you don't need to dig into them to continue learning Ember or to be productive. If you are curious about them, you can check out the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;MDN docs for more details&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e53ceae790c87c34b500088ffe50803e3f3beb7" translate="yes" xml:space="preserve">
          <source>Note: the Promise returned by &lt;code&gt;store.findAll&lt;/code&gt; resolves to the same RecordArray instance returned by &lt;code&gt;store.peekAll&lt;/code&gt; for that type, and will include all records in the store for the given type, including any previously existing records not returned by the reload request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce211ff969df1a3d4d36731e89acfcb795675c6" translate="yes" xml:space="preserve">
          <source>Note: the primary use case for &lt;code&gt;store.queryRecord&lt;/code&gt; is when a single record is queried and the &lt;code&gt;id&lt;/code&gt; is not known beforehand. In all other cases &lt;code&gt;store.query&lt;/code&gt; and using the first item of the array is likely the preferred way:</source>
          <target state="translated">참고 : &lt;code&gt;store.queryRecord&lt;/code&gt; 의 기본 사용 사례 는 단일 레코드를 쿼리하고 &lt;code&gt;id&lt;/code&gt; 를 미리 알 수없는 경우입니다. 다른 모든 경우 &lt;code&gt;store.query&lt;/code&gt; 와 배열의 첫 번째 항목을 사용하는 것이 선호되는 방법 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87532f3b71d053ee5afc10661c96eb5671d8c231" translate="yes" xml:space="preserve">
          <source>Notice how &lt;code&gt;aspectRatio&lt;/code&gt; doesn't require &lt;em&gt;any&lt;/em&gt; annotation at all - it's a plain old native getter, and it'll still work and invalidate if it's used anywhere in a template, directly or indirectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b77c95127ffd9e6be6868e4c407f5b44e322798" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;user.loading&lt;/code&gt;, &lt;code&gt;user-loading&lt;/code&gt;, &lt;code&gt;loading&lt;/code&gt;, and &lt;code&gt;application-loading&lt;/code&gt; are not included here, Since &lt;code&gt;about&lt;/code&gt; is the common parent for &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;slow-model&lt;/code&gt;. This means we'll need to handle loading at every level within the route hierarchy where loading feedback is important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac43534a384c67ff6a3d194bed22cd1673c95c8" translate="yes" xml:space="preserve">
          <source>Notice that below we &quot;wrap&quot; our rentals markup inside the open and closing mentions of &lt;code&gt;list-filter&lt;/code&gt; on lines 12 and 20. This is an example of the &lt;a href=&quot;https://guides.emberjs.com/components/wrapping-content-in-a-component&quot;&gt;&lt;strong&gt;block form&lt;/strong&gt;&lt;/a&gt; of a component, which allows a Handlebars template to be rendered &lt;em&gt;inside&lt;/em&gt; the component's template wherever the &lt;code&gt;{{yield}}&lt;/code&gt; expression appears.</source>
          <target state="translated">우리는 &quot;랩&quot;우리 렌털 열기 내부 마크 업과 폐쇄 중 언급 이하 알 &lt;code&gt;list-filter&lt;/code&gt; 라인 (12)과 (20)이의 예는 &lt;a href=&quot;https://guides.emberjs.com/components/wrapping-content-in-a-component&quot;&gt;&lt;strong&gt;블록 형태&lt;/strong&gt;&lt;/a&gt; 핸들 바 템플릿을 렌더링 할 수있는 구성 요소의 &lt;em&gt;내부&lt;/em&gt; 구성 요소의 템플릿 &lt;code&gt;{{yield}}&lt;/code&gt; 식이 나타나는 곳에</target>
        </trans-unit>
        <trans-unit id="ba2989c0bbd0d56ad53f312f0472d002b5558820" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;positionalParams&lt;/code&gt; property is added to the class as a static variable via &lt;code&gt;reopenClass&lt;/code&gt;. Positional params are always declared on the component class and cannot be changed while an application runs.</source>
          <target state="translated">알 &lt;code&gt;positionalParams&lt;/code&gt; 재산권 통해 정적 변수로 클래스 추가 &lt;code&gt;reopenClass&lt;/code&gt; . 위치 매개 변수는 항상 구성 요소 클래스에서 선언되며 응용 프로그램이 실행되는 동안 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="47ae1a22189c6b27fe43d5fc147a82348020ac05" translate="yes" xml:space="preserve">
          <source>Notice that we used triple curly brackets around &lt;code&gt;{{{message.content}}}&lt;/code&gt;. This is how Ember knows to insert the content directly as HTML, rather than directly as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b6cd631c31d938ab1dfb8443bf55a4e3ee2782" translate="yes" xml:space="preserve">
          <source>Notice that you don't need to pass in the &lt;code&gt;get&lt;/code&gt; function to the decorator itself. Instead, the decorator gets &lt;em&gt;applied&lt;/em&gt; to the getter function, modifying it in place. Existing computed properties and computed property macros, including custom ones you've defined, can be used with this new syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e1e0dd72c3b66a39bb942d9e6c86134bfd19d0" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;then&lt;/code&gt; function called on the result of calling the &lt;code&gt;filter&lt;/code&gt; function. The code expects the &lt;code&gt;filter&lt;/code&gt; function to return a promise. A &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html&quot;&gt;promise&lt;/a&gt; is a JavaScript object that represents the result of an asynchronous function. A promise may or may not be executed at the time you receive it. To account for this, it provides functions, like &lt;code&gt;then&lt;/code&gt; that let you give it code it will run when it eventually does receive a result.</source>
          <target state="translated">통지 &lt;code&gt;then&lt;/code&gt; 호출의 결과에 호출 된 함수 &lt;code&gt;filter&lt;/code&gt; 기능을. 이 코드는 &lt;code&gt;filter&lt;/code&gt; 함수가 약속을 반환 할 것으로 예상합니다 . &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html&quot;&gt;약속은&lt;/a&gt; 비동기 함수의 결과를 나타내는 JavaScript 객체입니다. 약속을받을 때 약속이 실행되거나 실행되지 않을 수 있습니다. 이를 설명하기 위해 결과를 수신 할 때 실행될 코드 &lt;code&gt;then&lt;/code&gt; 제공하는 기능 을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="302b7bd68ccfc79054b14a436309958906384f30" translate="yes" xml:space="preserve">
          <source>Notify the observer system that a property has just changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9730ce26ccf4f5b2837b3367e2458b83d31d5800" translate="yes" xml:space="preserve">
          <source>Now a malicious user simply needs to set their &lt;code&gt;firstName&lt;/code&gt; to a string containing HTML (like a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that sends private customer data to their server, for example) and every user in that chat room has been compromised.</source>
          <target state="translated">이제 악의적 인 사용자는 &lt;code&gt;firstName&lt;/code&gt; 을 HTML (예 : 개인 고객 데이터를 서버로 보내는 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그)이 포함 된 문자열 로 설정하기 만하면 해당 채팅방의 모든 사용자가 손상되었습니다.</target>
        </trans-unit>
        <trans-unit id="4cf908d9b56fb80e26b7ee5719ee53b74bea12a4" translate="yes" xml:space="preserve">
          <source>Now add the functionality to focus the element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed6bbb86311e08883196ef682fc7e18211c1a0d" translate="yes" xml:space="preserve">
          <source>Now both integration test scenarios should pass. You can verify this by starting up our test suite by typing &lt;code&gt;ember t -s&lt;/code&gt; at the command line.</source>
          <target state="translated">이제 두 통합 테스트 시나리오를 모두 통과해야합니다. 명령 행에 &lt;code&gt;ember t -s&lt;/code&gt; 를 입력하여 테스트 스위트를 시작하여이를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f599c9023b4f51e1268c2391d3d70cb4d82d8142" translate="yes" xml:space="preserve">
          <source>Now browse to &lt;code&gt;localhost:4200/rentals/grand-old-mansion&lt;/code&gt; and you should see the information listed for that specific rental.</source>
          <target state="translated">이제 &lt;code&gt;localhost:4200/rentals/grand-old-mansion&lt;/code&gt; 으로 이동하면 해당 특정 임대에 대한 정보가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cbbb6a2542ab8e3b0d3ca09f8e5c7b585a14bd45" translate="yes" xml:space="preserve">
          <source>Now if we click the button, it will show the confirmation dialog - our first interactive component! We'll also want the modal to close when we click either of the modal buttons, so we can add a couple more actions to handle that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c097506f308ce3211348990a741b341f9e9c584" translate="yes" xml:space="preserve">
          <source>Now imagine we have the following template and route:</source>
          <target state="translated">이제 다음과 같은 템플릿과 경로가 있다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="f2091523f465fab3ba86b01fc47f04eb9b8fc8b8" translate="yes" xml:space="preserve">
          <source>Now implement the service as follows. Note that we check if a map already exists for the given location and use that one, otherwise we call a Google Maps utility to create one.</source>
          <target state="translated">이제 다음과 같이 서비스를 구현하십시오. 지정된 위치에 대해지도가 이미 있는지 확인하고 해당 위치를 사용합니다. 그렇지 않으면 Google지도 유틸리티를 호출하여지도를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d5f166005bc10a443ff98a919b8aa3d2fcc4e964" translate="yes" xml:space="preserve">
          <source>Now in our &lt;code&gt;rentals.hbs&lt;/code&gt; template, let's replace the old HTML markup within our &lt;code&gt;{{#each}}&lt;/code&gt; loop with our new &lt;code&gt;rental-listing&lt;/code&gt; component:</source>
          <target state="translated">이제 &lt;code&gt;rentals.hbs&lt;/code&gt; 템플릿에서 &lt;code&gt;{{#each}}&lt;/code&gt; 루프 내의 기존 HTML 마크 업을 새로운 &lt;code&gt;rental-listing&lt;/code&gt; 구성 요소로 바꾸겠습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
