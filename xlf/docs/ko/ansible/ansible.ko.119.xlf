<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ansible">
    <body>
      <group id="ansible">
        <trans-unit id="3b58eda87a31514e6ac569594f0f4174e0c96957" translate="yes" xml:space="preserve">
          <source>Xpath to select the node or nodes to operate on.</source>
          <target state="translated">작동 할 노드를 선택하는 Xpath</target>
        </trans-unit>
        <trans-unit id="3d59734cbe985cad10903965c69654e291cdae24" translate="yes" xml:space="preserve">
          <source>Y axis coordinate.</source>
          <target state="translated">Y 축 좌표.</target>
        </trans-unit>
        <trans-unit id="c0c9e470f65bce4647044b7b341f76325072ff77" translate="yes" xml:space="preserve">
          <source>Y component of an EC public key.</source>
          <target state="translated">EC 공개 키의 Y 구성 요소</target>
        </trans-unit>
        <trans-unit id="45712f54c032c040d7df24693060e5a31df3395d" translate="yes" xml:space="preserve">
          <source>Y position.</source>
          <target state="translated">Y 위치.</target>
        </trans-unit>
        <trans-unit id="32994f2a492002f4f11ce294ca25042d2584d6b8" translate="yes" xml:space="preserve">
          <source>Y-m-d H:M</source>
          <target state="translated">Ymd H : M</target>
        </trans-unit>
        <trans-unit id="7ed762097be1ff0e0a4f2a3007dd637cf7779dc7" translate="yes" xml:space="preserve">
          <source>Y-series caption font size.</source>
          <target state="translated">Y 시리즈 캡션 글꼴 크기</target>
        </trans-unit>
        <trans-unit id="6ea21803f4dca42e81f2a87c61566f52eb9345c5" translate="yes" xml:space="preserve">
          <source>Y-series caption.</source>
          <target state="translated">Y 시리즈 캡션.</target>
        </trans-unit>
        <trans-unit id="9a0bf6977a6771f667d34b4072968ba43ddf518b" translate="yes" xml:space="preserve">
          <source>Y-series group option.</source>
          <target state="translated">Y 시리즈 그룹 옵션.</target>
        </trans-unit>
        <trans-unit id="687ee7f5fccff6ccd372ce696ea3962f87b64bc3" translate="yes" xml:space="preserve">
          <source>Y-series label angle.</source>
          <target state="translated">Y- 시리즈 라벨 각도.</target>
        </trans-unit>
        <trans-unit id="1c3cb8559dcf79276b9fd9d9ef5f14da4b0118c3" translate="yes" xml:space="preserve">
          <source>Y-series label font size.</source>
          <target state="translated">Y 시리즈 레이블 글꼴 크기.</target>
        </trans-unit>
        <trans-unit id="531dedf71a3a291e958dcb97ad7a6ef6ef12b3ff" translate="yes" xml:space="preserve">
          <source>Y-series of chart.</source>
          <target state="translated">Y- 시리즈 차트.</target>
        </trans-unit>
        <trans-unit id="ecc85e552d24bfa73146afe761b1aa37dccc508b" translate="yes" xml:space="preserve">
          <source>Y-series unit.</source>
          <target state="translated">Y 시리즈 유닛.</target>
        </trans-unit>
        <trans-unit id="c42c70b46f21152bdb17f6410cd4139b99f2d579" translate="yes" xml:space="preserve">
          <source>Y-series value expression.</source>
          <target state="translated">Y- 시리즈 값 표현.</target>
        </trans-unit>
        <trans-unit id="1263543d1853b7fcfa58dea8dac9bc7b5e8cf863" translate="yes" xml:space="preserve">
          <source>YAML 1.1 Specification</source>
          <target state="translated">YAML 1.1 사양</target>
        </trans-unit>
        <trans-unit id="ffbf278648d45679310c8d5603b2745453aedc70" translate="yes" xml:space="preserve">
          <source>YAML 1.2 Specification</source>
          <target state="translated">YAML 1.2 사양</target>
        </trans-unit>
        <trans-unit id="87a41b980587c20e2a29d6a0beb1a2d9f18c449e" translate="yes" xml:space="preserve">
          <source>YAML Basics</source>
          <target state="translated">YAML 기초</target>
        </trans-unit>
        <trans-unit id="cb5270555d3c9cf0b194fb3711ecc39694292fe1" translate="yes" xml:space="preserve">
          <source>YAML Lint (online) helps you debug YAML syntax if you are having problems</source>
          <target state="translated">YAML Lint (온라인)를 사용하면 문제가있는 경우 YAML 구문을 디버깅 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9d3a5ed547aed6598c10069755dcf7c1d0a97f39" translate="yes" xml:space="preserve">
          <source>YAML Style</source>
          <target state="translated">YAML 스타일</target>
        </trans-unit>
        <trans-unit id="6484f33f1e223d7ed74da84fccf2caf89a96d41b" translate="yes" xml:space="preserve">
          <source>YAML Syntax</source>
          <target state="translated">YAML 구문</target>
        </trans-unit>
        <trans-unit id="b11c0ababe729a8f16e9a90df9ebbbbcbdafb696" translate="yes" xml:space="preserve">
          <source>YAML also supports dictionaries which map keys to values. For instance:</source>
          <target state="translated">YAML은 키를 값에 매핑하는 사전도 지원합니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="830244bdd6b8581c5d4542a4dfca201557139c69" translate="yes" xml:space="preserve">
          <source>YAML anchors and aliases: sharing variable values</source>
          <target state="translated">YAML 앵커 및 별칭 : 변수 값 공유</target>
        </trans-unit>
        <trans-unit id="a7c97e2e92aedf135d5eadde446c028015269bfe" translate="yes" xml:space="preserve">
          <source>YAML converts certain strings into floating-point values, such as the string &lt;code&gt;1.0&lt;/code&gt;. If you need to specify a version number (in a requirements.yml file, for example), you will need to quote the value if it looks like a floating-point value:</source>
          <target state="translated">YAML은 특정 문자열을 문자열 &lt;code&gt;1.0&lt;/code&gt; 과 같은 부동 소수점 값으로 변환합니다 . 예를 들어 requirements.yml 파일에서 버전 번호를 지정해야하는 경우 부동 소수점 값처럼 보이는 경우 값을 인용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9a898f905d76dae221ad63d3efaa6e13c4f26ef" translate="yes" xml:space="preserve">
          <source>YAML syntax requires that if you start a value with &lt;code&gt;{{ foo }}&lt;/code&gt; you quote the whole line, since it wants to be sure you aren&amp;rsquo;t trying to start a YAML dictionary. This is covered on the &lt;a href=&quot;../reference_appendices/yamlsyntax#yaml-syntax&quot;&gt;YAML Syntax&lt;/a&gt; documentation.</source>
          <target state="translated">YAML 구문에서는 &lt;code&gt;{{ foo }}&lt;/code&gt; 로 값 을 시작하면 YAML 사전을 시작하려고하지 않기 때문에 전체 줄을 인용해야합니다. 이에 대해서는 &lt;a href=&quot;../reference_appendices/yamlsyntax#yaml-syntax&quot;&gt;YAML 구문&lt;/a&gt; 설명서 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="920a10a2b40b4d9fc8ad07582cb367beefbe741a" translate="yes" xml:space="preserve">
          <source>YAML-based inventory, should start with the &lt;code&gt;all&lt;/code&gt; group and contain hosts/vars/children entries.</source>
          <target state="translated">YAML 기반 인벤토리는 &lt;code&gt;all&lt;/code&gt; 그룹으로 시작해야하며 호스트 / var / children 항목을 포함 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="12c6b5bc6d8aa17864d73edd081b54acbb8d2eca" translate="yes" xml:space="preserve">
          <source>YAMLLint</source>
          <target state="translated">YAMLLint</target>
        </trans-unit>
        <trans-unit id="5e52b9cf9a308049e8cbbc0a97e4d5102f8f90f9" translate="yes" xml:space="preserve">
          <source>YAML_FILENAME_EXTENSIONS</source>
          <target state="translated">YAML_FILENAME_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="590bbad66e5c1a716f4805eec9868860e2065bf3" translate="yes" xml:space="preserve">
          <source>YANG</source>
          <target state="translated">YANG</target>
        </trans-unit>
        <trans-unit id="a73efd5cbae67668d47545069212828de7cb29ee" translate="yes" xml:space="preserve">
          <source>YE</source>
          <target state="translated">YE</target>
        </trans-unit>
        <trans-unit id="2857a6a7d922a20f4e8b76ba0339ead374f1165d" translate="yes" xml:space="preserve">
          <source>YYYY</source>
          <target state="translated">YYYY</target>
        </trans-unit>
        <trans-unit id="3c97063b7e85ccc8a30e98335b2b02bd38a09fde" translate="yes" xml:space="preserve">
          <source>YYYY-MM</source>
          <target state="translated">YYYY-MM</target>
        </trans-unit>
        <trans-unit id="d3f8f7b810c4b08f0b4ac4e47fdf8d265a10d869" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD</source>
          <target state="translated">YYYY-MM-DD</target>
        </trans-unit>
        <trans-unit id="c101c152903d609e594f1cce78f3a7820efc4377" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD HH</source>
          <target state="translated">YYYY-MM-DD HH</target>
        </trans-unit>
        <trans-unit id="0cb2168343eec867fc7f82c6cdab396f9c5a9fa6" translate="yes" xml:space="preserve">
          <source>YYYY-MM-DD-HH-MM</source>
          <target state="translated">YYYY-MM-DD-HH-MM</target>
        </trans-unit>
        <trans-unit id="1d5287b3b9e3facf062e9efd7e2786c3844be0e7" translate="yes" xml:space="preserve">
          <source>Yaakov Kuperman (@yaakov-github)</source>
          <target state="translated">Yaakov Kuperman (@ yaakov-github)</target>
        </trans-unit>
        <trans-unit id="4f792a4101b1ae00a883257ec70425a77e01031b" translate="yes" xml:space="preserve">
          <source>Yaegashi Takeshi (@yaegashi)</source>
          <target state="translated">야에가시 타케시 (@yaegashi)</target>
        </trans-unit>
        <trans-unit id="fa419b4f6f26f48e7bd3d143431476c06cb2a9c6" translate="yes" xml:space="preserve">
          <source>Yahoo! Mail.</source>
          <target state="translated">야후! 우편.</target>
        </trans-unit>
        <trans-unit id="0613e23b051c707b3ab556f4425af82ceecb6744" translate="yes" xml:space="preserve">
          <source>Yakutsk</source>
          <target state="translated">Yakutsk</target>
        </trans-unit>
        <trans-unit id="f292d60f8ef44af41007ec6e9fcab56e877e9d3d" translate="yes" xml:space="preserve">
          <source>Yaml list consisting of the replicaset members.</source>
          <target state="translated">Yaml list consisting of the replicaset members.</target>
        </trans-unit>
        <trans-unit id="413661a207685c747ffa1b3a5f75679287e7ce03" translate="yes" xml:space="preserve">
          <source>Yang path to be configured.</source>
          <target state="translated">구성 할 Yang 경로.</target>
        </trans-unit>
        <trans-unit id="23832daa6b432477bbf5b276ffd7a7e1d0d14932" translate="yes" xml:space="preserve">
          <source>Yang yang (@QijunPan)</source>
          <target state="translated">양양 (@yang_yang)</target>
        </trans-unit>
        <trans-unit id="66270594dc7725c0d3b223d8ea52065a9e9d1eb0" translate="yes" xml:space="preserve">
          <source>YangYang (@QijunPan)</source>
          <target state="translated">양양 (@yang_yang)</target>
        </trans-unit>
        <trans-unit id="098da8c078d0824d114dec7f4f47c955a9c39125" translate="yes" xml:space="preserve">
          <source>Yanis Guenane (@Spredzy)</source>
          <target state="translated">Yanis Guenane (@Spredzy) 님</target>
        </trans-unit>
        <trans-unit id="7b3d0738c30fe554ac15f656b92813cb5c2412d2" translate="yes" xml:space="preserve">
          <source>Yannig Perre &amp;lt;yannig.perre(at)gmail.com&amp;gt;</source>
          <target state="translated">Yannig Perre &amp;lt;yannig.perre (at) gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c5e710e153210fa35a21c8024162d7d8085ed2f3" translate="yes" xml:space="preserve">
          <source>Yannig Perre (!UNKNOWN) &amp;lt;yannig.perre(at)gmail.com&amp;gt;</source>
          <target state="translated">Yannig Perre (!UNKNOWN) &amp;lt;yannig.perre(at)gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="83873f1c8a627b53a8124020a836cb3d0b597cb1" translate="yes" xml:space="preserve">
          <source>Yap Sok Ann (@sayap)</source>
          <target state="translated">So 속 앤 (@Yap Sok Ann)</target>
        </trans-unit>
        <trans-unit id="5bb476e1209c9d0f52c0d3aeae0a4eae77bff117" translate="yes" xml:space="preserve">
          <source>Yarn installed in bin path (typically /usr/local/bin)</source>
          <target state="translated">bin 경로에 설치된 원사 (일반적으로 / usr / local / bin)</target>
        </trans-unit>
        <trans-unit id="809b6e453455b82e0097cb0edca21930a162b02f" translate="yes" xml:space="preserve">
          <source>Yarn will ignore any dependencies under devDependencies in package.json</source>
          <target state="translated">Yarn은 package.json의 devDependencies 아래의 모든 종속성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f14ed0021333d3bac107938a8d9a38e3da890456" translate="yes" xml:space="preserve">
          <source>Yawei Wang (@yaweiw)</source>
          <target state="translated">야 와이 (@yawaiw)</target>
        </trans-unit>
        <trans-unit id="879e32326c5217968ac8e3a14e4a8a5214957264" translate="yes" xml:space="preserve">
          <source>Year</source>
          <target state="translated">Year</target>
        </trans-unit>
        <trans-unit id="7622eb5aa42dee6ea6c65f47b2410246c3c3da7d" translate="yes" xml:space="preserve">
          <source>Yearly</source>
          <target state="translated">Yearly</target>
        </trans-unit>
        <trans-unit id="27ecc33fffcc9bbfb1f5e3247c557279f469756f" translate="yes" xml:space="preserve">
          <source>Yerevan</source>
          <target state="translated">Yerevan</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="1c7a2d4cdf9195676b22926949ed4eec3094e240" translate="yes" xml:space="preserve">
          <source>Yes, 4G/LTE</source>
          <target state="translated">Yes, 4G/LTE</target>
        </trans-unit>
        <trans-unit id="349166d708990b11dd3cdba0a840722a158263b9" translate="yes" xml:space="preserve">
          <source>Yes, Yes</source>
          <target state="translated">Yes, Yes</target>
        </trans-unit>
        <trans-unit id="941e59a985a28411001b49ddba2454b6f0e5578e" translate="yes" xml:space="preserve">
          <source>Yes. &lt;code&gt;vmware_guest&lt;/code&gt; can deploy a virtual machine with required settings on a standalone ESXi server.</source>
          <target state="translated">예. &lt;code&gt;vmware_guest&lt;/code&gt; 는 독립형 ESXi 서버에서 필요한 설정을 가진 가상 머신을 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6bb82e49bd6199c6c93209207b380dff6d1e073" translate="yes" xml:space="preserve">
          <source>Yes. &lt;code&gt;vmware_guest&lt;/code&gt; can deploy a virtual machine with required settings on a standalone ESXi server. However, you must have a paid license to deploy virtual machines this way. If you are using the free version, the API is read-only.</source>
          <target state="translated">Yes. &lt;code&gt;vmware_guest&lt;/code&gt; can deploy a virtual machine with required settings on a standalone ESXi server. However, you must have a paid license to deploy virtual machines this way. If you are using the free version, the API is read-only.</target>
        </trans-unit>
        <trans-unit id="14d55f9b6228d56d646b5cdc3a2ea12b072544ea" translate="yes" xml:space="preserve">
          <source>Yeukhon Wong (@yeukhon)</source>
          <target state="translated">예 유콘 (@Yehooon)</target>
        </trans-unit>
        <trans-unit id="6fc614b2805954d0e11635ee988b8679114da12f" translate="yes" xml:space="preserve">
          <source>You add tags to includes the same way you add tags to any other task:</source>
          <target state="translated">You add tags to includes the same way you add tags to any other task:</target>
        </trans-unit>
        <trans-unit id="fa48c973b25854433d3c035d6a547620b83513c2" translate="yes" xml:space="preserve">
          <source>You also need to configure other settings specific to each plugin. Consult the individual plugin documentation or the Ansible &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt; for more details.</source>
          <target state="translated">You also need to configure other settings specific to each plugin. Consult the individual plugin documentation or the Ansible &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="d5cf12606ea05423e8d8cc3987d09ce798236057" translate="yes" xml:space="preserve">
          <source>You are advised to pass XML structure matching the structure used by your version of Zabbix server.</source>
          <target state="translated">Zabbix 서버 버전에서 사용하는 구조와 일치하는 XML 구조를 전달하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9d3a636519236abc9677b93f636a8aff1a41155b" translate="yes" xml:space="preserve">
          <source>You are still able overwrite the environment variables using the module arguments, e.g. &lt;code&gt;zone: sf-2&lt;/code&gt;</source>
          <target state="translated">모듈 인수를 사용하여 환경 변수를 여전히 덮어 쓸 수 있습니다 (예 : &lt;code&gt;zone: sf-2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c1985e57356125a1387932a852909644bbf5eba" translate="yes" xml:space="preserve">
          <source>You are still able overwrite the environment variables using the module arguments, for example &lt;code&gt;zone: sf-2&lt;/code&gt;</source>
          <target state="translated">You are still able overwrite the environment variables using the module arguments, for example &lt;code&gt;zone: sf-2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65d32e30ad9d1685bed8fb7fe3cd892fc7b299f6" translate="yes" xml:space="preserve">
          <source>You can (and probably will) put each host in more than one group. For example a production webserver in a datacenter in Atlanta might be included in groups called [prod] and [atlanta] and [webservers]. You can create groups that track:</source>
          <target state="translated">각 호스트를 둘 이상의 그룹에 넣을 수 있습니다. 예를 들어 애틀랜타의 데이터 센터에있는 프로덕션 웹 서버는 [prod] 및 [atlanta] 및 [webservers]라는 그룹에 포함될 수 있습니다. 다음을 추적하는 그룹을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd8b0938d21a13453836f49f05adbb3b1f5c09be" translate="yes" xml:space="preserve">
          <source>You can access information about Ansible operations, including the python version being used, the hosts and groups in inventory, and the directories for playbooks and roles, using &amp;ldquo;magic&amp;rdquo; variables. Like connection variables, magic variables are &lt;a href=&quot;../reference_appendices/special_variables#special-variables&quot;&gt;Special Variables&lt;/a&gt;. Magic variable names are reserved - do not set variables with these names. The variable &lt;code&gt;environment&lt;/code&gt; is also reserved.</source>
          <target state="translated">You can access information about Ansible operations, including the python version being used, the hosts and groups in inventory, and the directories for playbooks and roles, using &amp;ldquo;magic&amp;rdquo; variables. Like connection variables, magic variables are &lt;a href=&quot;../reference_appendices/special_variables#special-variables&quot;&gt;Special Variables&lt;/a&gt;. Magic variable names are reserved - do not set variables with these names. The variable &lt;code&gt;environment&lt;/code&gt; is also reserved.</target>
        </trans-unit>
        <trans-unit id="794a9bc2fc8337676d8ca9d228664b7eb4c681df" translate="yes" xml:space="preserve">
          <source>You can access the documentation for each module from the command line with the ansible-doc tool:</source>
          <target state="translated">You can access the documentation for each module from the command line with the ansible-doc tool:</target>
        </trans-unit>
        <trans-unit id="8927e850eba69f3bd150c23c5365cb1cc3bc4fb2" translate="yes" xml:space="preserve">
          <source>You can access these playbooks at &lt;a href=&quot;https://github.com/network-automation/infoblox_ansible/tree/master/lookup_playbooks&quot;&gt;Infoblox lookup playbooks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/network-automation/infoblox_ansible/tree/master/lookup_playbooks&quot;&gt;Infoblox 조회 플레이 북&lt;/a&gt; 에서이 플레이 북에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d042db3723a266dabafb748f5bfed2a908c0dbf" translate="yes" xml:space="preserve">
          <source>You can achieve similar results to the pre-2.8 behavior, by using an explicit &lt;code&gt;gather_facts&lt;/code&gt; task in your &lt;code&gt;tasks&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;tasks&lt;/code&gt; 목록 에서 명시적인 &lt;code&gt;gather_facts&lt;/code&gt; 작업 을 사용하여 2.8 이전 동작과 유사한 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4e52e9bdbe5f675314ea8247e835259bd5d2c469" translate="yes" xml:space="preserve">
          <source>You can activate a custom callback by either dropping it into a &lt;code&gt;callback_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the callback directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="translated">커스텀 콜백을 재생에 인접한 &lt;code&gt;callback_plugins&lt;/code&gt; 디렉토리, 역할 내에서 삭제하거나 &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg에&lt;/a&gt; 구성된 콜백 디렉토리 소스 중 하나에 배치하여 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b6593ed2c8493eda1ef69795d5d15d732d67867" translate="yes" xml:space="preserve">
          <source>You can activate a custom lookup by either dropping it into a &lt;code&gt;lookup_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the lookup directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="translated">커스텀 룩업을 플레이에 인접한 &lt;code&gt;lookup_plugins&lt;/code&gt; 디렉토리에, 역할 내에서 &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;드롭하거나 ansible.cfg에&lt;/a&gt; 구성된 룩업 디렉토리 소스 중 하나에 배치 하여 커스텀 룩업을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc0c6d776c704841f9e38fcca4f9ccd11b901d94" translate="yes" xml:space="preserve">
          <source>You can activate a custom vars plugin by either dropping it into a &lt;code&gt;vars_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 vars 플러그인을 역할 옆의 재생에 인접한 &lt;code&gt;vars_plugins&lt;/code&gt; 디렉토리에 &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;놓거나 ansible.cfg에&lt;/a&gt; 구성된 디렉토리 소스 중 하나에 배치하여 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="879dc88626187f73280d988fd429b107a494c806" translate="yes" xml:space="preserve">
          <source>You can add a custom shell plugin by dropping it into a &lt;code&gt;shell_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the shell plugin directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 셸 플러그인을 역할 옆의 재생에 인접한 &lt;code&gt;shell_plugins&lt;/code&gt; 디렉토리에 &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;놓거나 ansible.cfg에&lt;/a&gt; 구성된 셸 플러그인 디렉토리 소스 중 하나에 넣어서 플러그인을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f97ead63bea4ad86ef657db009894d56e4e47b5" translate="yes" xml:space="preserve">
          <source>You can add a tag only to the dynamic include of a role. In this example, the &lt;code&gt;foo&lt;/code&gt; tag will &lt;code&gt;not&lt;/code&gt; apply to tasks inside the &lt;code&gt;bar&lt;/code&gt; role:</source>
          <target state="translated">You can add a tag only to the dynamic include of a role. In this example, the &lt;code&gt;foo&lt;/code&gt; tag will &lt;code&gt;not&lt;/code&gt; apply to tasks inside the &lt;code&gt;bar&lt;/code&gt; role:</target>
        </trans-unit>
        <trans-unit id="0f9333376de30bb2882351200f79ae00e74cc092" translate="yes" xml:space="preserve">
          <source>You can add other YAML files in some directories. For example, you can place platform-specific tasks in separate files and refer to them in the &lt;code&gt;tasks/main.yml&lt;/code&gt; file:</source>
          <target state="translated">You can add other YAML files in some directories. For example, you can place platform-specific tasks in separate files and refer to them in the &lt;code&gt;tasks/main.yml&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="56f78b2794a959c5ce2f27ae48559a81a8514e57" translate="yes" xml:space="preserve">
          <source>You can add static custom facts by adding static files to facts.d, or add dynamic facts by adding executable scripts to facts.d. For example, you can add a list of all users on a host to your facts by creating and running a script in facts.d.</source>
          <target state="translated">You can add static custom facts by adding static files to facts.d, or add dynamic facts by adding executable scripts to facts.d. For example, you can add a list of all users on a host to your facts by creating and running a script in facts.d.</target>
        </trans-unit>
        <trans-unit id="2b24ff72ee374ef85d2fccb60c2404aaa50e55c0" translate="yes" xml:space="preserve">
          <source>You can add tags to a single task or include. You can also add tags to multiple tasks by defining them at the level of a block, play, role, or import. The keyword &lt;code&gt;tags&lt;/code&gt; addresses all these use cases. The &lt;code&gt;tags&lt;/code&gt; keyword always defines tags and adds them to tasks; it does not select or skip tasks for execution. You can only select or skip tasks based on tags at the command line when you run a playbook. See &lt;a href=&quot;#using-tags&quot;&gt;Selecting or skipping tags when you run a playbook&lt;/a&gt; for more details.</source>
          <target state="translated">You can add tags to a single task or include. You can also add tags to multiple tasks by defining them at the level of a block, play, role, or import. The keyword &lt;code&gt;tags&lt;/code&gt; addresses all these use cases. The &lt;code&gt;tags&lt;/code&gt; keyword always defines tags and adds them to tasks; it does not select or skip tasks for execution. You can only select or skip tasks based on tags at the command line when you run a playbook. See &lt;a href=&quot;#using-tags&quot;&gt;Selecting or skipping tags when you run a playbook&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="d0393fc51225de3bd8271294eac2fd3c236d3250" translate="yes" xml:space="preserve">
          <source>You can add the output from any of the examples above to any playbook, variables file, or role for future use. Encrypted variables are larger than plain-text variables, but they protect your sensitive content while leaving the rest of the playbook, variables file, or role in plain text so you can easily read it.</source>
          <target state="translated">You can add the output from any of the examples above to any playbook, variables file, or role for future use. Encrypted variables are larger than plain-text variables, but they protect your sensitive content while leaving the rest of the playbook, variables file, or role in plain text so you can easily read it.</target>
        </trans-unit>
        <trans-unit id="02a9a3aa67481c559913fac4a92eb324be06c497" translate="yes" xml:space="preserve">
          <source>You can adjust this option to be smaller to avoid 414 errors, or larger for a reduced number of requests.</source>
          <target state="translated">You can adjust this option to be smaller to avoid 414 errors, or larger for a reduced number of requests.</target>
        </trans-unit>
        <trans-unit id="8b86a105bc39a74da9b727a1dd693ba92fcd7ee6" translate="yes" xml:space="preserve">
          <source>You can also add &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; directories to your playbook directory. The &lt;code&gt;ansible-playbook&lt;/code&gt; command looks for these directories in the current working directory by default. Other Ansible commands (for example, &lt;code&gt;ansible&lt;/code&gt;, &lt;code&gt;ansible-console&lt;/code&gt;, and so on) will only look for &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; in the inventory directory. If you want other commands to load group and host variables from a playbook directory, you must provide the &lt;code&gt;--playbook-dir&lt;/code&gt; option on the command line. If you load inventory files from both the playbook directory and the inventory directory, variables in the playbook directory will override variables set in the inventory directory.</source>
          <target state="translated">You can also add &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; directories to your playbook directory. The &lt;code&gt;ansible-playbook&lt;/code&gt; command looks for these directories in the current working directory by default. Other Ansible commands (for example, &lt;code&gt;ansible&lt;/code&gt; , &lt;code&gt;ansible-console&lt;/code&gt; , and so on) will only look for &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; in the inventory directory. If you want other commands to load group and host variables from a playbook directory, you must provide the &lt;code&gt;--playbook-dir&lt;/code&gt; option on the command line. If you load inventory files from both the playbook directory and the inventory directory, variables in the playbook directory will override variables set in the inventory directory.</target>
        </trans-unit>
        <trans-unit id="1c4e855d515bff6ed265d40a01c95a8a34e7403a" translate="yes" xml:space="preserve">
          <source>You can also add &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; directories to your playbook directory. The &lt;code&gt;ansible-playbook&lt;/code&gt; command looks for these directories in the current working directory by default. Other Ansible commands (for example, &lt;code&gt;ansible&lt;/code&gt;, &lt;code&gt;ansible-console&lt;/code&gt;, etc.) will only look for &lt;code&gt;group_vars/&lt;/code&gt; and &lt;code&gt;host_vars/&lt;/code&gt; in the inventory directory. If you want other commands to load group and host variables from a playbook directory, you must provide the &lt;code&gt;--playbook-dir&lt;/code&gt; option on the command line. If you load inventory files from both the playbook directory and the inventory directory, variables in the playbook directory will override variables set in the inventory directory.</source>
          <target state="translated">playbook 디렉토리 에 &lt;code&gt;group_vars/&lt;/code&gt; 및 &lt;code&gt;host_vars/&lt;/code&gt; 디렉토리를 추가 할 수도 있습니다 . &lt;code&gt;ansible-playbook&lt;/code&gt; 기본적으로 현재 작업 디렉토리에서이 디렉토리에 대한 명령 보인다. 다른 Ansible 명령 (예 : &lt;code&gt;ansible&lt;/code&gt; , &lt;code&gt;ansible-console&lt;/code&gt; 등)은 인벤토리 디렉토리에서 &lt;code&gt;group_vars/&lt;/code&gt; 및 &lt;code&gt;host_vars/&lt;/code&gt; 만 찾습니다 . 다른 명령으로 플레이 북 디렉토리에서 그룹 및 호스트 변수를로드하려면 &lt;code&gt;--playbook-dir&lt;/code&gt; 을 제공해야합니다.명령 행에서 옵션. 플레이 북 디렉토리와 인벤토리 디렉토리 모두에서 인벤토리 파일을로드하면 플레이 북 디렉토리의 변수가 인벤토리 디렉토리에 설정된 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="cc06cc4faa72c711daf531512c1be6d1024d8819" translate="yes" xml:space="preserve">
          <source>You can also add an &lt;code&gt;always&lt;/code&gt; section to a block. Tasks in the &lt;code&gt;always&lt;/code&gt; section run no matter what the task status of the previous block is.</source>
          <target state="translated">You can also add an &lt;code&gt;always&lt;/code&gt; section to a block. Tasks in the &lt;code&gt;always&lt;/code&gt; section run no matter what the task status of the previous block is.</target>
        </trans-unit>
        <trans-unit id="675f8e852bf504996b19a96e32130df85095eae0" translate="yes" xml:space="preserve">
          <source>You can also add special local accounts like SYSTEM and others.</source>
          <target state="translated">SYSTEM 및 기타와 같은 특수 로컬 계정을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1799b38eada7156dfde11e9dc50d418317fb5d1e" translate="yes" xml:space="preserve">
          <source>You can also apply a tag or tags to all the tasks imported by the static &lt;code&gt;import_role&lt;/code&gt; and &lt;code&gt;import_tasks&lt;/code&gt; statements:</source>
          <target state="translated">You can also apply a tag or tags to all the tasks imported by the static &lt;code&gt;import_role&lt;/code&gt; and &lt;code&gt;import_tasks&lt;/code&gt; statements:</target>
        </trans-unit>
        <trans-unit id="0c196721e5aa2b4a434446b8a3cb9ef0e8312877" translate="yes" xml:space="preserve">
          <source>You can also build an RPM yourself. From the root of a checkout or tarball, use the &lt;code&gt;make rpm&lt;/code&gt; command to build an RPM you can distribute and install.</source>
          <target state="translated">RPM을 직접 만들 수도 있습니다. 체크 아웃 또는 tarball의 루트에서 &lt;code&gt;make rpm&lt;/code&gt; 명령을 사용하여 분배 및 설치할 수있는 RPM을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="b5241613cf756dffa887caaddf2bc92aec11e842" translate="yes" xml:space="preserve">
          <source>You can also check how many IP addresses can be in a certain range:</source>
          <target state="translated">특정 범위에있을 수있는 IP 주소 수를 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="17decd58d2e11a972bad694231bd1ae5a285a2ee" translate="yes" xml:space="preserve">
          <source>You can also choose a specific version, for example &lt;code&gt;ansible25&lt;/code&gt;.</source>
          <target state="translated">You can also choose a specific version, for example &lt;code&gt;ansible25&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0db22efd51492320bef7a2314241d2a627ba848" translate="yes" xml:space="preserve">
          <source>You can also choose a specific version, i.e &lt;code&gt;ansible25&lt;/code&gt;.</source>
          <target state="translated">특정 버전 (예 : &lt;code&gt;ansible25&lt;/code&gt; )을 선택할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b55661256edeead5836e563875a9a1f1848f4bf" translate="yes" xml:space="preserve">
          <source>You can also combine multiple conditions for failure. This task will fail if both conditions are true:</source>
          <target state="translated">여러 조건을 결합하여 실패 할 수도 있습니다. 두 조건이 모두 충족되면이 작업이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="9c3fb61e13f5632d3c4d247e8b42c1dd06210813" translate="yes" xml:space="preserve">
          <source>You can also combine multiple conditions to override &amp;ldquo;changed&amp;rdquo; result:</source>
          <target state="translated">여러 조건을 결합하여 &quot;변경된&quot;결과를 무시할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="750be288488af0a7177ab22546a0026843c59b37" translate="yes" xml:space="preserve">
          <source>You can also control the order in which hosts are run. The default is to follow the order supplied by the inventory:</source>
          <target state="translated">호스트가 실행되는 순서를 제어 할 수도 있습니다. 기본값은 인벤토리에서 제공 한 주문을 따르는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4285c61982e6ec4c8bb738461c45066c5b1b1769" translate="yes" xml:space="preserve">
          <source>You can also control vars plugin execution on a per-plugin basis for vars plugins that support the &lt;code&gt;stage&lt;/code&gt; option. To run the &lt;a href=&quot;../collections/ansible/builtin/host_group_vars_vars#host-group-vars-vars&quot;&gt;host_group_vars&lt;/a&gt; plugin after importing inventory you can add the following to &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;:</source>
          <target state="translated">You can also control vars plugin execution on a per-plugin basis for vars plugins that support the &lt;code&gt;stage&lt;/code&gt; option. To run the &lt;a href=&quot;../collections/ansible/builtin/host_group_vars_vars#host-group-vars-vars&quot;&gt;host_group_vars&lt;/a&gt; plugin after importing inventory you can add the following to &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="1e497e1715b8c404f22b68ea1f60ee87b910bae6" translate="yes" xml:space="preserve">
          <source>You can also create &lt;em&gt;directories&lt;/em&gt; named after your groups or hosts. Ansible will read all the files in these directories in lexicographical order. An example with the &amp;lsquo;raleigh&amp;rsquo; group:</source>
          <target state="translated">그룹이나 호스트의 이름을 딴 &lt;em&gt;디렉토리&lt;/em&gt; 를 만들 수도 있습니다 . Ansible은이 디렉토리의 모든 파일을 사전 순서대로 읽습니다. 'raleigh'그룹의 예 :</target>
        </trans-unit>
        <trans-unit id="3ee1546b5225eba66027077c7e7f9e28e37a37d5" translate="yes" xml:space="preserve">
          <source>You can also create an inventory by combining multiple inventory sources and source types under a directory. This can be useful for combining static and dynamic hosts and managing them as one inventory. The following inventory combines an inventory plugin source, a dynamic inventory script, and a file with static hosts:</source>
          <target state="translated">디렉토리 아래에 여러 인벤토리 소스와 소스 유형을 결합하여 인벤토리를 생성 할 수도 있습니다. 이는 정적 및 동적 호스트를 결합하고이를 하나의 인벤토리로 관리하는 데 유용 할 수 있습니다. 다음 인벤토리는 인벤토리 플러그인 소스, 동적 인벤토리 스크립트 및 정적 호스트가있는 파일을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="0d213b7e3925531c5a55495fc9418fe5ec5506fc" translate="yes" xml:space="preserve">
          <source>You can also create conditionals based on variables defined in the playbooks or inventory. Because conditionals require boolean input (a test must evaluate as True to trigger the condition), you must apply the &lt;code&gt;| bool&lt;/code&gt; filter to non boolean variables, such as string variables with content like &amp;lsquo;yes&amp;rsquo;, &amp;lsquo;on&amp;rsquo;, &amp;lsquo;1&amp;rsquo;, or &amp;lsquo;true&amp;rsquo;. You can define variables like this:</source>
          <target state="translated">You can also create conditionals based on variables defined in the playbooks or inventory. Because conditionals require boolean input (a test must evaluate as True to trigger the condition), you must apply the &lt;code&gt;| bool&lt;/code&gt; filter to non boolean variables, such as string variables with content like &amp;lsquo;yes&amp;rsquo;, &amp;lsquo;on&amp;rsquo;, &amp;lsquo;1&amp;rsquo;, or &amp;lsquo;true&amp;rsquo;. You can define variables like this:</target>
        </trans-unit>
        <trans-unit id="56569ea14ea2cee84a65e1a50c8031429322bac2" translate="yes" xml:space="preserve">
          <source>You can also create this same inventory in INI format.</source>
          <target state="translated">You can also create this same inventory in INI format.</target>
        </trans-unit>
        <trans-unit id="5410ae77f6281f79f3340fe7ec13bb750f18de78" translate="yes" xml:space="preserve">
          <source>You can also define aliases in your inventory:</source>
          <target state="translated">인벤토리에서 별칭을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="076c90f02c54343abd9fc07d283c71aeb16efbbb" translate="yes" xml:space="preserve">
          <source>You can also directly run Ansible in &lt;a href=&quot;https://shell.azure.com&quot;&gt;Azure Cloud Shell&lt;/a&gt;, where Ansible is pre-installed.</source>
          <target state="translated">Ansible이 사전 설치되어 있는 &lt;a href=&quot;https://shell.azure.com&quot;&gt;Azure Cloud Shell&lt;/a&gt; 에서 Ansible을 직접 실행할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb80bf09922009b16f60ecb5fcaf676296074edc" translate="yes" xml:space="preserve">
          <source>You can also directly use the tarball from your build:</source>
          <target state="translated">빌드에서 tarball을 직접 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7532fc5932200e39bdb4b9bea5dc576d13a09aa1" translate="yes" xml:space="preserve">
          <source>You can also filter this output to display only certain facts, see the &lt;a href=&quot;../collections/ansible/builtin/setup_module#setup-module&quot;&gt;ansible.builtin.setup&lt;/a&gt; module documentation for details.</source>
          <target state="translated">You can also filter this output to display only certain facts, see the &lt;a href=&quot;../collections/ansible/builtin/setup_module#setup-module&quot;&gt;ansible.builtin.setup&lt;/a&gt; module documentation for details.</target>
        </trans-unit>
        <trans-unit id="c8ff69ae44e5d7fefa75cc9cefaf1f336303ff3b" translate="yes" xml:space="preserve">
          <source>You can also filter this output to display only certain facts, see the &lt;a href=&quot;../modules/setup_module#setup-module&quot;&gt;setup&lt;/a&gt; module documentation for details.</source>
          <target state="translated">특정 사실 만 표시하도록이 출력을 필터링 할 수도 있습니다 . 자세한 내용은 &lt;a href=&quot;../modules/setup_module#setup-module&quot;&gt;설치&lt;/a&gt; 모듈 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="447950a05c7e416856e4c3e1955689ebbe3ca8e1" translate="yes" xml:space="preserve">
          <source>You can also identify specific Packet devices with the &amp;lsquo;device_ids&amp;rsquo; parameter. The device&amp;rsquo;s UUID can be found in the &lt;a href=&quot;https://app.packet.net/portal&quot;&gt;Packet Portal&lt;/a&gt; or by using a &lt;a href=&quot;https://www.packet.net/developers/integrations/&quot;&gt;CLI&lt;/a&gt;. The following playbook removes a Packet device using the &amp;lsquo;device_ids&amp;rsquo; field:</source>
          <target state="translated">'device_ids'매개 변수를 사용하여 특정 패킷 장치를 식별 할 수도 있습니다. 장치의 UUID는 &lt;a href=&quot;https://app.packet.net/portal&quot;&gt;패킷 포털에서&lt;/a&gt; 또는 &lt;a href=&quot;https://www.packet.net/developers/integrations/&quot;&gt;CLI&lt;/a&gt; 를 사용하여 찾을 수 있습니다 . 다음 플레이 북은 'device_ids'필드를 사용하여 패킷 장치를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e4c16eb4f542500b224841fd9e1d97babecd5df1" translate="yes" xml:space="preserve">
          <source>You can also implicitly use the Infoblox dynamic inventory script by including it in your inventory directory (&lt;code&gt;etc/ansible/hosts&lt;/code&gt; by default). See &lt;a href=&quot;../user_guide/intro_dynamic_inventory#dynamic-inventory&quot;&gt;Working with dynamic inventory&lt;/a&gt; for more details.</source>
          <target state="translated">또한 Infoblox 동적 인벤토리 스크립트를 인벤토리 디렉토리 ( 기본적으로 &lt;code&gt;etc/ansible/hosts&lt;/code&gt; ) 에 포함시켜 암시 적으로 사용할 수 있습니다 . 자세한 내용 &lt;a href=&quot;../user_guide/intro_dynamic_inventory#dynamic-inventory&quot;&gt;은 동적 인벤토리 작업&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="559277171bd037232e2fab4c642a8342a6cfcca7" translate="yes" xml:space="preserve">
          <source>You can also keep a collection adjacent to the current playbook, under a &lt;code&gt;collections/ansible_collections/&lt;/code&gt; directory structure.</source>
          <target state="translated">&lt;code&gt;collections/ansible_collections/&lt;/code&gt; 디렉토리 구조 에서 현재 플레이 북에 인접한 컬렉션을 유지할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41b95cf23dbc17ede8a779ee4ccffe4512126381" translate="yes" xml:space="preserve">
          <source>You can also login as you, and then become a user different than root:</source>
          <target state="translated">또한 로그인 한 다음 root와 다른 사용자가 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a149f7e7f291ecf1ae65860f58528abe7a9982b8" translate="yes" xml:space="preserve">
          <source>You can also look at the backup files:</source>
          <target state="translated">백업 파일을 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cccb26c0afac3755e65a97eb26af3476febbbd7" translate="yes" xml:space="preserve">
          <source>You can also mix and match the values:</source>
          <target state="translated">값을 혼합하여 일치시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbb01ed0389d5b0529769bfb05c096c0367f118d" translate="yes" xml:space="preserve">
          <source>You can also navigate directly to the role using the /&amp;lt;namespace&amp;gt;/&amp;lt;role name&amp;gt;. For example, to view the role geerlingguy.apache, go to &lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/apache&quot;&gt;https://galaxy.ansible.com/geerlingguy/apache&lt;/a&gt;.</source>
          <target state="translated">/ &amp;lt;namespace&amp;gt; / &amp;lt;role name&amp;gt;을 사용하여 역할을 직접 탐색 할 수도 있습니다. 예를 들어 geerlingguy.apache 역할을 &lt;a href=&quot;https://galaxy.ansible.com/geerlingguy/apache&quot;&gt;보려면 https://galaxy.ansible.com/geerlingguy/apache&lt;/a&gt; 로 이동 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7a3b9cdf5728282e666cc985a63250b132117c9" translate="yes" xml:space="preserve">
          <source>You can also optionally force a Refresh of the Storage System in vCenter/ESXi Web Client.</source>
          <target state="translated">선택적으로 vCenter / ESXi 웹 클라이언트에서 스토리지 시스템을 강제로 새로 고칠 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3299a66dfa0718b7621b2542da2af10bcc5e660b" translate="yes" xml:space="preserve">
          <source>You can also override as a normal variable in a play:</source>
          <target state="translated">연극에서 일반 변수로 재정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ab8d2aef6a5df65ab053dc72be431f2880215b8" translate="yes" xml:space="preserve">
          <source>You can also override the default name of the script by defining DOCKER_CONFIG_FILE in the environment.</source>
          <target state="translated">환경에서 DOCKER_CONFIG_FILE을 정의하여 스크립트의 기본 이름을 대체 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec64733feb7fa01563ed089349f8553b6e39aea9" translate="yes" xml:space="preserve">
          <source>You can also pass a url or a local path to a rpm file (using state=present). To operate on several packages this can accept a comma separated string of packages or (as of 2.0) a list of packages.</source>
          <target state="translated">URL 또는 로컬 경로를 rpm 파일에 전달할 수도 있습니다 (state = present 사용). 여러 패키지에서 작동하려면 쉼표로 구분 된 패키지 문자열 또는 패키지 목록 (2.0)을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53854b69c10d1e1c8a77f8d63d7f65f7195d1768" translate="yes" xml:space="preserve">
          <source>You can also pass a url or a local path to a rpm file.</source>
          <target state="translated">URL 또는 로컬 경로를 rpm 파일로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bb13a6676dd55cafa729b9d6bbbe9063f3340c6" translate="yes" xml:space="preserve">
          <source>You can also pass the values as variables:</source>
          <target state="translated">값을 변수로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="68b708d0fe5c10d956149301619328f4c044aa4b" translate="yes" xml:space="preserve">
          <source>You can also pass variables into imports and includes:</source>
          <target state="translated">변수를 가져 오기로 전달할 수 있으며 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="06584456505d1de9b3632f7b6ce8f2fe9eb6d67b" translate="yes" xml:space="preserve">
          <source>You can also read a property file which - in this case - does not contain section.</source>
          <target state="translated">이 경우 섹션이 포함되어 있지 않은 속성 파일을 읽을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf8d1f30aee6fc166b6d3cff832357b519069045" translate="yes" xml:space="preserve">
          <source>You can also require a specific IP protocol version:</source>
          <target state="translated">특정 IP 프로토콜 버전이 필요할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2921d463b7216b21cac77ba51bcc1ae0b4210537" translate="yes" xml:space="preserve">
          <source>You can also run &lt;code&gt;SecEdit.exe /export /cfg C:\temp\output.ini&lt;/code&gt; to view the current policies set on your system.</source>
          <target state="translated">또한 실행할 수 있습니다 &lt;code&gt;SecEdit.exe /export /cfg C:\temp\output.ini&lt;/code&gt; 시스템에 설정된 현재의 정책을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58a495d11205d77e13d5163e17e6b1ff190411d2" translate="yes" xml:space="preserve">
          <source>You can also select IP addresses from a range by their index, from the start or end of the range:</source>
          <target state="translated">범위의 시작 또는 끝에서 색인별로 범위에서 IP 주소를 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="068f1c9e4037fcacfd966f71e4463ee2ff0f34f2" translate="yes" xml:space="preserve">
          <source>You can also set &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_VAULT_PASSWORD_FILE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE&lt;/code&gt;&lt;/a&gt; environment variable, e.g. &lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE=~/.vault_pass.txt&lt;/code&gt; and Ansible will automatically search for the password in that file.</source>
          <target state="translated">또한 설정할 수 있습니다 &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_VAULT_PASSWORD_FILE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE&lt;/code&gt; 의&lt;/a&gt; 환경 변수, 예를 들어 &lt;code&gt;ANSIBLE_VAULT_PASSWORD_FILE=~/.vault_pass.txt&lt;/code&gt; 을 하고 Ansible 자동으로 해당 파일의 암호를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="e613b6f1c724c66c1f444875588f2f86f670df95" translate="yes" xml:space="preserve">
          <source>You can also set the attributes of child elements like cpu and processModel, see the examples to see how it is done.</source>
          <target state="translated">cpu 및 processModel과 같은 하위 요소의 속성을 설정할 수도 있습니다. 예제를 참조하여 수행 방법을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="09519a8169040af7459b3c744d8c300cd485f114" translate="yes" xml:space="preserve">
          <source>You can also set the proxy target for all hosts by using environment variables.</source>
          <target state="translated">환경 변수를 사용하여 모든 호스트의 프록시 대상을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b2f27853dae8349666167136992ccad8591888b" translate="yes" xml:space="preserve">
          <source>You can also set this as an environment variable:</source>
          <target state="translated">이것을 환경 변수로 설정할 수도 있습니다 :</target>
        </trans-unit>
        <trans-unit id="3333d96aa899111037a4c6f18a9b2ae6b16c0ee6" translate="yes" xml:space="preserve">
          <source>You can also setup a &lt;code&gt;requirements.yml&lt;/code&gt; file to install multiple collections in one command. This file is a YAML file in the format:</source>
          <target state="translated">&lt;code&gt;requirements.yml&lt;/code&gt; 파일을 설정하여 하나의 명령으로 여러 컬렉션을 설치할 수도 있습니다 . 이 파일은 다음 형식의 YAML 파일입니다.</target>
        </trans-unit>
        <trans-unit id="cd22e4972af35ca616a0cfe26623e64d090e1ab1" translate="yes" xml:space="preserve">
          <source>You can also specify a percentage with the &lt;code&gt;serial&lt;/code&gt; keyword. Ansible applies the percentage to the total number of hosts in a play to determine the number of hosts per pass:</source>
          <target state="translated">You can also specify a percentage with the &lt;code&gt;serial&lt;/code&gt; keyword. Ansible applies the percentage to the total number of hosts in a play to determine the number of hosts per pass:</target>
        </trans-unit>
        <trans-unit id="59302d9df322827ff1d8378e60441d89e3d8b100" translate="yes" xml:space="preserve">
          <source>You can also specify an arbitrary ICMP message.</source>
          <target state="translated">임의 ICMP 메시지를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="007ac8dc80cd44526d058c09a09e27a8d79135ed" translate="yes" xml:space="preserve">
          <source>You can also specify an arbitrary code.</source>
          <target state="translated">임의 코드를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b79f5e2d69681af6763f1788b789376cb28baf3" translate="yes" xml:space="preserve">
          <source>You can also specify batch sizes as a list. For example:</source>
          <target state="translated">You can also specify batch sizes as a list. For example:</target>
        </trans-unit>
        <trans-unit id="4e18a69e891cda9e6dcad7302fe4eba2acc9b826" translate="yes" xml:space="preserve">
          <source>You can also specify category name by specifying colon separated value. For example, &quot;category_name:tag_name&quot;.</source>
          <target state="translated">콜론으로 구분 된 값을 지정하여 카테고리 이름을 지정할 수도 있습니다. 예를 들어 &quot;category_name : tag_name&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="6f42373cdb3a38a2e723b0c15a898c26cbd84625" translate="yes" xml:space="preserve">
          <source>You can also specify datastore storage cluster. version_added: 2.9</source>
          <target state="translated">데이터 스토어 스토리지 클러스터를 지정할 수도 있습니다. version_added : 2.9</target>
        </trans-unit>
        <trans-unit id="21e65a1eaf5a48519a7aa1375f1d11dba9363add" translate="yes" xml:space="preserve">
          <source>You can also specify template or VM UUID for identifying source. version_added 2.8. Use &lt;code&gt;hw_product_uuid&lt;/code&gt; from vmware_guest_facts as UUID value.</source>
          <target state="translated">소스를 식별하기 위해 템플릿 또는 VM UUID를 지정할 수도 있습니다. version_added 2.8. &lt;code&gt;hw_product_uuid&lt;/code&gt; 의 hw_product_uuid를 UUID 값으로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="216fc002b1a63cc55fc922ab4121e114073e908e" translate="yes" xml:space="preserve">
          <source>You can also specify the environment at the task level:</source>
          <target state="translated">You can also specify the environment at the task level:</target>
        </trans-unit>
        <trans-unit id="0a99571d72502e9ddc1942cfa69cc021a2446de0" translate="yes" xml:space="preserve">
          <source>You can also specify the strategy plugin in the play via the &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;strategy keyword&lt;/a&gt; in a play:</source>
          <target state="translated">극중 &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;전략 키워드&lt;/a&gt; 를 통해 극중 전략 플러그인을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9015f54847c0ad5c36adfedbc4f309b9034cd562" translate="yes" xml:space="preserve">
          <source>You can also use &amp;ldquo;sudo make install&amp;rdquo;.</source>
          <target state="translated">&quot;sudo make install&quot;을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5bdd94bd1b3dc1df19c9d393be406805f197b9d" translate="yes" xml:space="preserve">
          <source>You can also use blocks to define responses to task errors. This approach is similar to exception handling in many programming languages. See &lt;a href=&quot;playbooks_blocks#block-error-handling&quot;&gt;Handling errors with blocks&lt;/a&gt; for details and examples.</source>
          <target state="translated">You can also use blocks to define responses to task errors. This approach is similar to exception handling in many programming languages. See &lt;a href=&quot;playbooks_blocks#block-error-handling&quot;&gt;Handling errors with blocks&lt;/a&gt; for details and examples.</target>
        </trans-unit>
        <trans-unit id="07d744d0bdd9cd50aef52e6f68f4b68382b634fc" translate="yes" xml:space="preserve">
          <source>You can also use facts.d to execute a script on the remote host, generating dynamic custom facts to the ansible_local namespace. For example, you can generate a list of all users that exist on a remote host as a fact about that host. To generate dynamic custom facts using facts.d:</source>
          <target state="translated">You can also use facts.d to execute a script on the remote host, generating dynamic custom facts to the ansible_local namespace. For example, you can generate a list of all users that exist on a remote host as a fact about that host. To generate dynamic custom facts using facts.d:</target>
        </trans-unit>
        <trans-unit id="e876c101cc1465b1bbb6d512c46d5c184ee55660" translate="yes" xml:space="preserve">
          <source>You can also use includes and imports in the &lt;a href=&quot;playbooks_handlers#handlers&quot;&gt;Handlers: running operations on change&lt;/a&gt; section of a playbook. For instance, if you want to define how to restart Apache, you only have to do that once for all of your playbooks. You might make a &lt;code&gt;restarts.yml&lt;/code&gt; file that looks like:</source>
          <target state="translated">You can also use includes and imports in the &lt;a href=&quot;playbooks_handlers#handlers&quot;&gt;Handlers: running operations on change&lt;/a&gt; section of a playbook. For instance, if you want to define how to restart Apache, you only have to do that once for all of your playbooks. You might make a &lt;code&gt;restarts.yml&lt;/code&gt; file that looks like:</target>
        </trans-unit>
        <trans-unit id="460803a3b5850bdf5f0f48ce2c3361809f8bffb9" translate="yes" xml:space="preserve">
          <source>You can also use it at a play level:</source>
          <target state="translated">플레이 레벨에서 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="760a6501e9c0cc1f2f3836f9a9c55eff257f3368" translate="yes" xml:space="preserve">
          <source>You can also use it to grant or revoke user&amp;rsquo;s privileges in a particular database.</source>
          <target state="translated">You can also use it to grant or revoke user&amp;rsquo;s privileges in a particular database.</target>
        </trans-unit>
        <trans-unit id="e9ad22534ff9e874fa5ea4a44baef09fd7cf9cca" translate="yes" xml:space="preserve">
          <source>You can also use keyword &lt;code&gt;become&lt;/code&gt; on a particular task instead of the whole play:</source>
          <target state="translated">전체 플레이 대신 특정 작업에서 키워드 &lt;code&gt;become&lt;/code&gt; 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="007f2242d45f1dabd6a04b7bc5ca254f0bf87d98" translate="yes" xml:space="preserve">
          <source>You can also use keywords &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;samehost&lt;/code&gt;, and &lt;code&gt;samenet&lt;/code&gt;.</source>
          <target state="translated">키워드 &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;samehost&lt;/code&gt; 및 &lt;code&gt;samenet&lt;/code&gt; 을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfee03acd543412429b6f9fc6b48f5bb138dab69" translate="yes" xml:space="preserve">
          <source>You can also use nested groups to simplify &lt;code&gt;prod&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; in this inventory, for the same result:</source>
          <target state="translated">동일한 결과 를 위해 중첩 그룹을 사용 하여이 인벤토리에서 &lt;code&gt;prod&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; 를 단순화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf3263fa79cda0eaf8cb459198cbe4a354fb952" translate="yes" xml:space="preserve">
          <source>You can also use other privilege escalation methods, like su:</source>
          <target state="translated">su와 같은 다른 권한 에스컬레이션 방법을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="335cb83f8086c32bbeda0efac486ce66fd92e5a6" translate="yes" xml:space="preserve">
          <source>You can also use parentheses to group conditions:</source>
          <target state="translated">괄호를 사용하여 조건을 그룹화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b1c3f244296252a5460e63726c30cbc7df7e699" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;../../collections/ansible/netcommon/cli_command_module#ansible-collections-ansible-netcommon-cli-command-module&quot;&gt;ansible.netcommon.cli_command&lt;/a&gt; to handle multiple prompts.</source>
          <target state="translated">You can also use the &lt;a href=&quot;../../collections/ansible/netcommon/cli_command_module#ansible-collections-ansible-netcommon-cli-command-module&quot;&gt;ansible.netcommon.cli_command&lt;/a&gt; to handle multiple prompts.</target>
        </trans-unit>
        <trans-unit id="3d728de15b8fac5073fc867819b2109f9cff3356" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;../cli/ansible-playbook#cmdoption-ansible-playbook-vault-id&quot;&gt;&lt;code&gt;--vault-id&lt;/code&gt;&lt;/a&gt; option to pass a single password with its vault label. This approach is clearer when multiple vaults are used within a single inventory.</source>
          <target state="translated">You can also use the &lt;a href=&quot;../cli/ansible-playbook#cmdoption-ansible-playbook-vault-id&quot;&gt; &lt;code&gt;--vault-id&lt;/code&gt; &lt;/a&gt; option to pass a single password with its vault label. This approach is clearer when multiple vaults are used within a single inventory.</target>
        </trans-unit>
        <trans-unit id="65672b61338c3e4165f0729c328e5b1f429dc9d9" translate="yes" xml:space="preserve">
          <source>You can also use the native parser to run commands and parse output from Linux hosts.</source>
          <target state="translated">You can also use the native parser to run commands and parse output from Linux hosts.</target>
        </trans-unit>
        <trans-unit id="27297ff9561c922b6bfd005278779f4335f14591" translate="yes" xml:space="preserve">
          <source>You can also use the new &lt;code&gt;gather_network_resources&lt;/code&gt; parameter with the network &lt;code&gt;*_facts&lt;/code&gt; modules (such as &lt;a href=&quot;../../collections/arista/eos/eos_facts_module#ansible-collections-arista-eos-eos-facts-module&quot;&gt;arista.eos.eos_facts&lt;/a&gt;) to return just a subset of the device configuration, as shown below.</source>
          <target state="translated">You can also use the new &lt;code&gt;gather_network_resources&lt;/code&gt; parameter with the network &lt;code&gt;*_facts&lt;/code&gt; modules (such as &lt;a href=&quot;../../collections/arista/eos/eos_facts_module#ansible-collections-arista-eos-eos-facts-module&quot;&gt;arista.eos.eos_facts&lt;/a&gt;) to return just a subset of the device configuration, as shown below.</target>
        </trans-unit>
        <trans-unit id="2c684c3297312d8232318857ee41755ba0e8c32a" translate="yes" xml:space="preserve">
          <source>You can also use these groups with &amp;lsquo;group_vars&amp;rsquo; to set variables that are automatically applied to matching instances. See &lt;a href=&quot;../user_guide/intro_inventory#splitting-out-vars&quot;&gt;Organizing host and group variables&lt;/a&gt;.</source>
          <target state="translated">You can also use these groups with &amp;lsquo;group_vars&amp;rsquo; to set variables that are automatically applied to matching instances. See &lt;a href=&quot;../user_guide/intro_inventory#splitting-out-vars&quot;&gt;Organizing host and group variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6d1dd10cf38baf340d8b6fdd9b3bb9cc7203e078" translate="yes" xml:space="preserve">
          <source>You can also use these variables in templates, like this, in &lt;code&gt;roles/common/templates/ntp.conf.j2&lt;/code&gt;:</source>
          <target state="translated">또한 &lt;code&gt;roles/common/templates/ntp.conf.j2&lt;/code&gt; 에서 이러한 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96927dd3e77a759717d2e8bb9a67ea9af32f9671" translate="yes" xml:space="preserve">
          <source>You can apply conditions to &lt;code&gt;import_playbook&lt;/code&gt; as well as to the other &lt;code&gt;import_*&lt;/code&gt; statements. When you use this approach, Ansible returns a &amp;lsquo;skipped&amp;rsquo; message for every task on every host that does not match the criteria, creating repetitive output. In many cases the &lt;a href=&quot;../collections/ansible/builtin/group_by_module#group-by-module&quot;&gt;group_by module&lt;/a&gt; can be a more streamlined way to accomplish the same objective; see &lt;a href=&quot;playbooks_best_practices#os-variance&quot;&gt;Handling OS and distro differences&lt;/a&gt;.</source>
          <target state="translated">You can apply conditions to &lt;code&gt;import_playbook&lt;/code&gt; as well as to the other &lt;code&gt;import_*&lt;/code&gt; statements. When you use this approach, Ansible returns a &amp;lsquo;skipped&amp;rsquo; message for every task on every host that does not match the criteria, creating repetitive output. In many cases the &lt;a href=&quot;../collections/ansible/builtin/group_by_module#group-by-module&quot;&gt;group_by module&lt;/a&gt; can be a more streamlined way to accomplish the same objective; see &lt;a href=&quot;playbooks_best_practices#os-variance&quot;&gt;Handling OS and distro differences&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="916e3c8beff845b4b0c8db760c8c57b7eb5e6022" translate="yes" xml:space="preserve">
          <source>You can apply tags to dynamic includes in a playbook. As with tags on an individual task, tags on an &lt;code&gt;include_*&lt;/code&gt; task apply only to the include itself, not to any tasks within the included file or role. If you add &lt;code&gt;mytag&lt;/code&gt; to a dynamic include, then run that playbook with &lt;code&gt;--tags mytag&lt;/code&gt;, Ansible runs the include itself, runs any tasks within the included file or role tagged with &lt;code&gt;mytag&lt;/code&gt;, and skips any tasks within the included file or role without that tag. See &lt;a href=&quot;#selective-reuse&quot;&gt;Selectively running tagged tasks in re-usable files&lt;/a&gt; for more details.</source>
          <target state="translated">You can apply tags to dynamic includes in a playbook. As with tags on an individual task, tags on an &lt;code&gt;include_*&lt;/code&gt; task apply only to the include itself, not to any tasks within the included file or role. If you add &lt;code&gt;mytag&lt;/code&gt; to a dynamic include, then run that playbook with &lt;code&gt;--tags mytag&lt;/code&gt; , Ansible runs the include itself, runs any tasks within the included file or role tagged with &lt;code&gt;mytag&lt;/code&gt; , and skips any tasks within the included file or role without that tag. See &lt;a href=&quot;#selective-reuse&quot;&gt;Selectively running tagged tasks in re-usable files&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="cb83ee5e5fd1d73031dceffefa7f3b236a880d93" translate="yes" xml:space="preserve">
          <source>You can apply the same tag to more than one individual task. This example tags several tasks with the same tag, &amp;ldquo;ntp&amp;rdquo;:</source>
          <target state="translated">You can apply the same tag to more than one individual task. This example tags several tasks with the same tag, &amp;ldquo;ntp&amp;rdquo;:</target>
        </trans-unit>
        <trans-unit id="0efca774acc46ddf364ed5b8ade214618a9cf532" translate="yes" xml:space="preserve">
          <source>You can apply the same tag to more than one task. When a play is run using the &lt;code&gt;--tags&lt;/code&gt; command-line option, all tasks with that tag name will be run.</source>
          <target state="translated">동일한 태그를 둘 이상의 작업에 적용 할 수 있습니다. &lt;code&gt;--tags&lt;/code&gt; 명령 줄 옵션을 사용하여 재생을 실행하면 해당 태그 이름을 가진 모든 작업이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e055192f7f6a49f618b6372851f7e314498484fe" translate="yes" xml:space="preserve">
          <source>You can automate this by using the following Ansible task:</source>
          <target state="translated">다음 Ansible 태스크를 사용하여이를 자동화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="476662daf7b2f2a5039a7eba3ddb64aa85e03306" translate="yes" xml:space="preserve">
          <source>You can calculate logs, powers, and roots of numbers with Ansible filters. Jinja2 provides other mathematical functions like abs() and round().</source>
          <target state="translated">You can calculate logs, powers, and roots of numbers with Ansible filters. Jinja2 provides other mathematical functions like abs() and round().</target>
        </trans-unit>
        <trans-unit id="1c13c2035628fb60fd15a72baa6e5c412171fa72" translate="yes" xml:space="preserve">
          <source>You can cast values as certain types. For example, if you expect the input &amp;ldquo;True&amp;rdquo; from a &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;vars_prompt&lt;/a&gt; and you want Ansible to recognize it as a boolean value instead of a string:</source>
          <target state="translated">You can cast values as certain types. For example, if you expect the input &amp;ldquo;True&amp;rdquo; from a &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;vars_prompt&lt;/a&gt; and you want Ansible to recognize it as a boolean value instead of a string:</target>
        </trans-unit>
        <trans-unit id="441e87186a1d429b7c07390fb3a96348c1d95903" translate="yes" xml:space="preserve">
          <source>You can change the behavior of the patterns defined in playbooks using command-line options. For example, you can run a playbook that defines &lt;code&gt;hosts: all&lt;/code&gt; on a single host by specifying &lt;code&gt;-i 127.0.0.2,&lt;/code&gt; (note the trailing comma). This works even if the host you target is not defined in your inventory. You can also limit the hosts you target on a particular run with the &lt;code&gt;--limit&lt;/code&gt; flag:</source>
          <target state="translated">You can change the behavior of the patterns defined in playbooks using command-line options. For example, you can run a playbook that defines &lt;code&gt;hosts: all&lt;/code&gt; on a single host by specifying &lt;code&gt;-i 127.0.0.2,&lt;/code&gt; (note the trailing comma). This works even if the host you target is not defined in your inventory. You can also limit the hosts you target on a particular run with the &lt;code&gt;--limit&lt;/code&gt; flag:</target>
        </trans-unit>
        <trans-unit id="fa0b895b18168d8767fc2ab37d31b94eda09bf84" translate="yes" xml:space="preserve">
          <source>You can change the behavior of the patterns defined in playbooks using command-line options. For example, you can run a playbook that defines &lt;code&gt;hosts: all&lt;/code&gt; on a single host by specifying &lt;code&gt;-i 127.0.0.2,&lt;/code&gt;. This works even if the host you target is not defined in your inventory. You can also limit the hosts you target on a particular run with the &lt;code&gt;--limit&lt;/code&gt; flag:</source>
          <target state="translated">명령 줄 옵션을 사용하여 플레이 북에 정의 된 패턴의 동작을 변경할 수 있습니다. 예를 들어 &lt;code&gt;-i 127.0.0.2,&lt;/code&gt; 를 지정하여 단일 호스트에서 &lt;code&gt;hosts: all&lt;/code&gt; 를 정의하는 플레이 북을 실행할 수 있습니다 . 대상 호스트가 인벤토리에 정의되어 있지 않은 경우에도 작동합니다. &lt;code&gt;--limit&lt;/code&gt; 플래그를 사용하여 특정 실행에서 대상으로하는 호스트를 제한 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd256d5e1dd077e8f930e4fbe2941b985d618e23" translate="yes" xml:space="preserve">
          <source>You can change the indentation of either format:</source>
          <target state="translated">You can change the indentation of either format:</target>
        </trans-unit>
        <trans-unit id="2ae9401508e71476f1b3b014b943f93a50fcd0f1" translate="yes" xml:space="preserve">
          <source>You can change this behavior by setting the group variable &lt;code&gt;ansible_group_priority&lt;/code&gt; to change the merge order for groups of the same level (after the parent/child order is resolved). The larger the number, the later it will be merged, giving it higher priority. This variable defaults to &lt;code&gt;1&lt;/code&gt; if not set. For example:</source>
          <target state="translated">그룹 변수 &lt;code&gt;ansible_group_priority&lt;/code&gt; 를 설정하여 동일한 수준의 그룹에 대한 병합 순서를 변경하도록 (부모 / 자식 순서가 해결 된 후) 이 동작을 변경할 수 있습니다 . 숫자가 클수록 나중에 병합되어 우선 순위가 높아집니다. 설정하지 않은 경우이 변수의 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="69ba5778122cb51d5a176131a33d8bc85c6f4116" translate="yes" xml:space="preserve">
          <source>You can change this behavior with the &lt;code&gt;--force-handlers&lt;/code&gt; command-line option, by including &lt;code&gt;force_handlers: True&lt;/code&gt; in a play, or by adding &lt;code&gt;force_handlers = True&lt;/code&gt; to ansible.cfg. When handlers are forced, Ansible will run all notified handlers on all hosts, even hosts with failed tasks. (Note that certain errors could still prevent the handler from running, such as a host becoming unreachable.)</source>
          <target state="translated">You can change this behavior with the &lt;code&gt;--force-handlers&lt;/code&gt; command-line option, by including &lt;code&gt;force_handlers: True&lt;/code&gt; in a play, or by adding &lt;code&gt;force_handlers = True&lt;/code&gt; to ansible.cfg. When handlers are forced, Ansible will run all notified handlers on all hosts, even hosts with failed tasks. (Note that certain errors could still prevent the handler from running, such as a host becoming unreachable.)</target>
        </trans-unit>
        <trans-unit id="62b65a032ab187dc3c8887b72e1a1dc10520234f" translate="yes" xml:space="preserve">
          <source>You can change this behavior with the &lt;code&gt;--force-handlers&lt;/code&gt; command-line option, or by including &lt;code&gt;force_handlers: True&lt;/code&gt; in a play, or &lt;code&gt;force_handlers = True&lt;/code&gt; in ansible.cfg. When handlers are forced, they will run when notified even if a task fails on that host. (Note that certain errors could still prevent the handler from running, such as a host becoming unreachable.)</source>
          <target state="translated">&lt;code&gt;--force-handlers&lt;/code&gt; 명령 줄 옵션을 사용하거나 &lt;code&gt;force_handlers: True&lt;/code&gt; play에 &lt;code&gt;force_handlers = True&lt;/code&gt; 또는 ansible.cfg에 force_handlers = True 를 포함 하여이 동작을 변경할 수 있습니다 . 처리기가 강제되면 해당 호스트에서 작업이 실패하더라도 알림을 받으면 실행됩니다. (호스트에 도달 할 수 없게되는 등의 특정 오류로 인해 처리기가 계속 실행되지 않을 수 있습니다.)</target>
        </trans-unit>
        <trans-unit id="55a0fe96a37a201aae6be86cd7f37df38d153c02" translate="yes" xml:space="preserve">
          <source>You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second.</source>
          <target state="translated">이 숫자를 원하는 숫자로 변경할 수 있지만 간격 수 (초)의 3 배에 1 초를 더한 값이어야합니다.</target>
        </trans-unit>
        <trans-unit id="df6c540892200e7d7be856de45920a9bb9130ef6" translate="yes" xml:space="preserve">
          <source>You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.</source>
          <target state="translated">You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.</target>
        </trans-unit>
        <trans-unit id="0b0cc60cfb1cd4231f9264eadd7db3ae15478264" translate="yes" xml:space="preserve">
          <source>You can check all allowed properties for filters for the given virtual machine at &lt;a href=&quot;vmware_inventory_vm_attributes#vmware-inventory-vm-attributes&quot;&gt;Using Virtual machine attributes in VMware dynamic inventory plugin&lt;/a&gt;.</source>
          <target state="translated">You can check all allowed properties for filters for the given virtual machine at &lt;a href=&quot;vmware_inventory_vm_attributes#vmware-inventory-vm-attributes&quot;&gt;Using Virtual machine attributes in VMware dynamic inventory plugin&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="340e2e3de9dde2db76250917619b94f9e8bf0a3c" translate="yes" xml:space="preserve">
          <source>You can check all allowed properties for the given virtual machine at &lt;a href=&quot;vmware_inventory_vm_attributes#vmware-inventory-vm-attributes&quot;&gt;Using Virtual machine attributes in VMware dynamic inventory plugin&lt;/a&gt;.</source>
          <target state="translated">You can check all allowed properties for the given virtual machine at &lt;a href=&quot;vmware_inventory_vm_attributes#vmware-inventory-vm-attributes&quot;&gt;Using Virtual machine attributes in VMware dynamic inventory plugin&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="274e104816ebfa68cf86bfe51ebd97d9082c46b0" translate="yes" xml:space="preserve">
          <source>You can check if IP addresses or network ranges are accessible on a public Internet, or if they are in private networks:</source>
          <target state="translated">공용 인터넷에서 IP 주소 또는 네트워크 범위에 액세스 할 수 있는지 또는 사설 네트워크에 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbbbd3f68cee2e3c5606b317e1b330a49e383cd0" translate="yes" xml:space="preserve">
          <source>You can check list of available models here: &lt;a href=&quot;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&quot;&gt;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&quot;&gt;https://github.com/libvirt/libvirt/blob/master/src/cpu_map/index.xml&lt;/a&gt; 에서 사용 가능한 모델 목록을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1bbb2d63bb07291e2c00ceb302d0e3e32d88f31f" translate="yes" xml:space="preserve">
          <source>You can check which values are specifically network ranges:</source>
          <target state="translated">네트워크 범위에 해당하는 값을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb0b33b60ddda87823b63c78dc883bbfec52463c" translate="yes" xml:space="preserve">
          <source>You can choose seconds, minutes, hours, days or weeks by specifying the first letter of an of those words (e.g., &quot;2s&quot;, &quot;10d&quot;, 1w&quot;).</source>
          <target state="translated">해당 단어의 첫 글자 (예 : &quot;2s&quot;, &quot;10d&quot;, 1w &quot;)를 지정하여 초, 분, 시간, 일 또는 주를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68a25e398d242ea37c2f21149b6a627bc1e48ee5" translate="yes" xml:space="preserve">
          <source>You can choose seconds, minutes, hours, days, or weeks by specifying the first letter of any of those words (e.g., &quot;1w&quot;).</source>
          <target state="translated">해당 단어의 첫 글자 (예 : &quot;1w&quot;)를 지정하여 초, 분, 시간, 일 또는 주를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0566907594a621255aed97290d52ec7c5407f31c" translate="yes" xml:space="preserve">
          <source>You can collate multiple IMC XML fragments and they will be processed sequentially in a single stream, the Cisco IMC output is subsequently merged.</source>
          <target state="translated">여러 IMC XML 조각을 한 부씩 수집 할 수 있으며 단일 스트림으로 순차적으로 처리되고 Cisco IMC 출력이 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="be9c147fa6ad897cfb11b1ada873fd379c5d29d3" translate="yes" xml:space="preserve">
          <source>You can combine data from multiple sources and types, and select values from large data structures, giving you precise control over complex data.</source>
          <target state="translated">You can combine data from multiple sources and types, and select values from large data structures, giving you precise control over complex data.</target>
        </trans-unit>
        <trans-unit id="2d42fb1f12497222bc0c83c254d0474bc62b1a90" translate="yes" xml:space="preserve">
          <source>You can combine lookups with &lt;a href=&quot;../user_guide/playbooks_filters#playbooks-filters&quot;&gt;Filters&lt;/a&gt;, &lt;a href=&quot;../user_guide/playbooks_tests#playbooks-tests&quot;&gt;Tests&lt;/a&gt; and even each other to do some complex data generation and manipulation. For example:</source>
          <target state="translated">조회를 &lt;a href=&quot;../user_guide/playbooks_filters#playbooks-filters&quot;&gt;필터&lt;/a&gt; , &lt;a href=&quot;../user_guide/playbooks_tests#playbooks-tests&quot;&gt;테스트&lt;/a&gt; 및 서로 결합하여 복잡한 데이터 생성 및 조작을 수행 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6228e4dc6427f6dc6419bcc282725b6ea22b41b8" translate="yes" xml:space="preserve">
          <source>You can combine lookups with &lt;a href=&quot;../user_guide/playbooks_filters#playbooks-filters&quot;&gt;filters&lt;/a&gt;, &lt;a href=&quot;../user_guide/playbooks_tests#playbooks-tests&quot;&gt;tests&lt;/a&gt; and even each other to do some complex data generation and manipulation. For example:</source>
          <target state="translated">You can combine lookups with &lt;a href=&quot;../user_guide/playbooks_filters#playbooks-filters&quot;&gt;filters&lt;/a&gt;, &lt;a href=&quot;../user_guide/playbooks_tests#playbooks-tests&quot;&gt;tests&lt;/a&gt; and even each other to do some complex data generation and manipulation. For example:</target>
        </trans-unit>
        <trans-unit id="3e5b16142f3e879071c5c88e44c561165c355f12" translate="yes" xml:space="preserve">
          <source>You can combine to set order.</source>
          <target state="translated">조합하여 순서를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a856576d7dc174e19b4e85d87881b5868ec6d65" translate="yes" xml:space="preserve">
          <source>You can conditionally import a role and execute its tasks:</source>
          <target state="translated">조건부로 역할을 가져 와서 해당 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f9af56e65d60e6765fcb97a294e6f649903547a" translate="yes" xml:space="preserve">
          <source>You can conditionally include a role:</source>
          <target state="translated">You can conditionally include a role:</target>
        </trans-unit>
        <trans-unit id="5ad5ff451ba4e5ac458285f9c43f1789269cee6b" translate="yes" xml:space="preserve">
          <source>You can configure other settings in this file such as the default domain. See &lt;a href=&quot;https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html&quot;&gt;krb5.conf&lt;/a&gt; for more details.</source>
          <target state="translated">이 파일에서 기본 도메인과 같은 다른 설정을 구성 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html&quot;&gt;krb5.conf&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="68b75bb76d86af880881c280bb49158e9e864946" translate="yes" xml:space="preserve">
          <source>You can configure this to use other servers (such as Red Hat Automation Hub or a custom Galaxy server) as follows:</source>
          <target state="translated">다음과 같이 다른 서버 (예 : Red Hat Automation Hub 또는 사용자 정의 Galaxy 서버)를 사용하도록이를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9005ecd669af94fb5dbd0862ced8bba8b05bc22" translate="yes" xml:space="preserve">
          <source>You can confirm the file has been successfully sourced by running a simple command, such as &lt;code&gt;nova list&lt;/code&gt; and ensuring it return no errors.</source>
          <target state="translated">&lt;code&gt;nova list&lt;/code&gt; 와 같은 간단한 명령을 실행하고 파일이 오류를 리턴하지 않도록 하여 파일이 성공적으로 소스 화되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63c35a592a4382b7637868e37f1f7b5cddf5ca2d" translate="yes" xml:space="preserve">
          <source>You can confirm the file has been successfully sourced by running a simple command, such as &lt;code&gt;nova list&lt;/code&gt; and ensuring it returns no errors.</source>
          <target state="translated">You can confirm the file has been successfully sourced by running a simple command, such as &lt;code&gt;nova list&lt;/code&gt; and ensuring it returns no errors.</target>
        </trans-unit>
        <trans-unit id="b397aa16318bc416603b12e8f3da666108090cff" translate="yes" xml:space="preserve">
          <source>You can connect to a local or remote API using parameters passed to each task or by setting environment variables. The order of precedence is command line parameters and then environment variables. If neither a command line option or an environment variable is found, a default value will be used. The default values are provided under &lt;a href=&quot;#parameters&quot;&gt;Parameters&lt;/a&gt;</source>
          <target state="translated">각 작업에 전달 된 매개 변수를 사용하거나 환경 변수를 설정하여 로컬 또는 원격 API에 연결할 수 있습니다. 우선 순위는 명령 행 매개 변수와 환경 변수입니다. 명령 행 옵션이나 환경 변수가 없으면 기본값이 사용됩니다. 기본값은 &lt;a href=&quot;#parameters&quot;&gt;매개 변수&lt;/a&gt; 아래에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5cebc0916f00e0a388f3c1d1b51c1413b928fb04" translate="yes" xml:space="preserve">
          <source>You can control host groupings and host selection by either defining environment variables or creating an azure_rm.ini file in your current working directory.</source>
          <target state="translated">환경 변수를 정의하거나 현재 작업 디렉토리에 azure_rm.ini 파일을 작성하여 호스트 그룹화 및 호스트 선택을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d78f12e4a2f156086fa5d8028dd30f30000e184" translate="yes" xml:space="preserve">
          <source>You can control how Ansible responds to task errors using blocks with &lt;code&gt;rescue&lt;/code&gt; and &lt;code&gt;always&lt;/code&gt; sections.</source>
          <target state="translated">You can control how Ansible responds to task errors using blocks with &lt;code&gt;rescue&lt;/code&gt; and &lt;code&gt;always&lt;/code&gt; sections.</target>
        </trans-unit>
        <trans-unit id="30e77ebb99c2c86ebe891a82507f2858e2a3b4b9" translate="yes" xml:space="preserve">
          <source>You can control how errors behave in all lookup plugins by setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, or &lt;code&gt;strict&lt;/code&gt;. The default setting is &lt;code&gt;strict&lt;/code&gt;, which causes the task to fail if the lookup returns an error. For example:</source>
          <target state="translated">You can control how errors behave in all lookup plugins by setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;ignore&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; , or &lt;code&gt;strict&lt;/code&gt; . The default setting is &lt;code&gt;strict&lt;/code&gt; , which causes the task to fail if the lookup returns an error. For example:</target>
        </trans-unit>
        <trans-unit id="af3cb53dd5720012009fd06e66bf9f44222fe7a1" translate="yes" xml:space="preserve">
          <source>You can control the behavior of the inventory script by defining environment variables, or creating a docker.yml file (sample provided in &lt;a href=&quot;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/docker.py&quot;&gt;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/docker.py&lt;/a&gt;). The order of precedence is the docker.yml file and then environment variables.</source>
          <target state="translated">You can control the behavior of the inventory script by defining environment variables, or creating a docker.yml file (sample provided in &lt;a href=&quot;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/docker.py&quot;&gt;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/docker.py&lt;/a&gt;). The order of precedence is the docker.yml file and then environment variables.</target>
        </trans-unit>
        <trans-unit id="ba74e33695b2b261335de89052318701219620b5" translate="yes" xml:space="preserve">
          <source>You can control the behavior of the inventory script by defining environment variables, or creating a docker.yml file (sample provided in ansible/contrib/inventory). The order of precedence is the docker.yml file and then environment variables.</source>
          <target state="translated">환경 변수를 정의하거나 docker.yml 파일 (ansible / contrib / inventory에서 제공되는 샘플)을 작성하여 인벤토리 스크립트의 동작을 제어 할 수 있습니다. 우선 순위는 docker.yml 파일과 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="5f16743fc76b868e32f93e38bb496acdaf406473" translate="yes" xml:space="preserve">
          <source>You can control the use of &lt;code&gt;become&lt;/code&gt; with play or task directives, connection variables, or at the command line. If you set privilege escalation properties in multiple ways, review the &lt;a href=&quot;../reference_appendices/general_precedence#general-precedence-rules&quot;&gt;general precedence rules&lt;/a&gt; to understand which settings will be used.</source>
          <target state="translated">당신의 사용을 제어 할 수 있습니다 &lt;code&gt;become&lt;/code&gt; , 또는 명령 줄에서 재생 또는 작업 지시, 연결 변수를. 여러 가지 방법으로 권한 에스컬레이션 특성을 설정하는 경우 &lt;a href=&quot;../reference_appendices/general_precedence#general-precedence-rules&quot;&gt;일반 우선 순위 규칙&lt;/a&gt; 을 검토하여 사용할 설정을 이해하십시오.</target>
        </trans-unit>
        <trans-unit id="e1d9ca5b0b37de7e5e7ed054936964a2cb6e5469" translate="yes" xml:space="preserve">
          <source>You can convert IP addresses to PTR records:</source>
          <target state="translated">IP 주소를 PTR 레코드로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="156e9de25cc4f4e1151733d02608bfb8d6a2368f" translate="yes" xml:space="preserve">
          <source>You can convert IP addresses to integers, the same way that you can convert integers into IP addresses:</source>
          <target state="translated">정수를 IP 주소로 변환하는 것과 같은 방법으로 IP 주소를 정수로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="174507a818256e58764e073d9f998ccbbaa81148" translate="yes" xml:space="preserve">
          <source>You can convert IPv4 address to &lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;Hexadecimal notation&lt;/a&gt; with optional delimiter:</source>
          <target state="translated">선택적 구분 기호를 &lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;사용&lt;/a&gt; 하여 IPv4 주소를 16 진 표기법 으로 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df8e954248a1ff779b7487b3869e05c7a633e019" translate="yes" xml:space="preserve">
          <source>You can convert IPv4 addresses into IPv6 addresses:</source>
          <target state="translated">IPv4 주소를 IPv6 주소로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dc45feb3ed05d8a74efb4ae409a6d5430cf9315" translate="yes" xml:space="preserve">
          <source>You can copy a file from the host to the container with the Ansible &lt;a href=&quot;../../ansible/builtin/copy_module#ansible-collections-ansible-builtin-copy-module&quot;&gt;ansible.builtin.copy&lt;/a&gt; and &lt;a href=&quot;../../ansible/builtin/template_module#ansible-collections-ansible-builtin-template-module&quot;&gt;ansible.builtin.template&lt;/a&gt; module and the &lt;code&gt;lxd&lt;/code&gt; connection plugin. See the example below.</source>
          <target state="translated">You can copy a file from the host to the container with the Ansible &lt;a href=&quot;../../ansible/builtin/copy_module#ansible-collections-ansible-builtin-copy-module&quot;&gt;ansible.builtin.copy&lt;/a&gt; and &lt;a href=&quot;../../ansible/builtin/template_module#ansible-collections-ansible-builtin-template-module&quot;&gt;ansible.builtin.template&lt;/a&gt; module and the &lt;code&gt;lxd&lt;/code&gt; connection plugin. See the example below.</target>
        </trans-unit>
        <trans-unit id="baf6ca46136dc0be333a5c2b0ea36c11cc289e56" translate="yes" xml:space="preserve">
          <source>You can copy a file from the host to the container with the Ansible &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; and &lt;a href=&quot;template_module#template-module&quot;&gt;template&lt;/a&gt; module and the &lt;code&gt;lxd&lt;/code&gt; connection plugin. See the example below.</source>
          <target state="translated">Ansible &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; and &lt;a href=&quot;template_module#template-module&quot;&gt;template&lt;/a&gt; 모듈과 &lt;code&gt;lxd&lt;/code&gt; 연결 플러그인 을 사용하여 호스트에서 컨테이너로 파일을 복사 할 수 있습니다 . 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="23b600e54dd252d633246667cc6f30c5f2ebbf2b" translate="yes" xml:space="preserve">
          <source>You can copy a file in the created container to the localhost with &lt;code&gt;command=lxc file pull container_name/dir/filename filename&lt;/code&gt;. See the first example below.</source>
          <target state="translated">&lt;code&gt;command=lxc file pull container_name/dir/filename filename&lt;/code&gt; 을 사용하여 작성된 컨테이너의 파일을 로컬 호스트로 복사 할 수 있습니다 . 아래 첫 번째 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="14d19d9ed210fdc1d672ff2387b87ca0865e0605" translate="yes" xml:space="preserve">
          <source>You can create a playbook that works on multiple platforms and OS versions with a minimum of syntax by placing your variable values in vars files and conditionally importing them. If you want to install Apache on some CentOS and some Debian servers, create variables files with YAML keys and values. For example:</source>
          <target state="translated">You can create a playbook that works on multiple platforms and OS versions with a minimum of syntax by placing your variable values in vars files and conditionally importing them. If you want to install Apache on some CentOS and some Debian servers, create variables files with YAML keys and values. For example:</target>
        </trans-unit>
        <trans-unit id="c95e4612ac518639f235b90429a3d0fdc38cd3b8" translate="yes" xml:space="preserve">
          <source>You can create a test, then define one value to use when the test returns true and another when the test returns false (new in version 1.9):</source>
          <target state="translated">You can create a test, then define one value to use when the test returns true and another when the test returns false (new in version 1.9):</target>
        </trans-unit>
        <trans-unit id="a753b49c7d470efff3d94c190f612840f178136e" translate="yes" xml:space="preserve">
          <source>You can create an integration or connection between a role in Galaxy and &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis&lt;/a&gt;. Once the connection is established, a build in Travis will automatically trigger an import in Galaxy, updating the search index with the latest information about the role.</source>
          <target state="translated">Galaxy의 역할과 &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis&lt;/a&gt; 사이에 통합 또는 연결을 만들 수 있습니다 . 연결이 설정되면 Travis의 빌드가 Galaxy에서 가져 오기를 자동으로 트리거하여 역할에 대한 최신 정보로 검색 색인을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0d2e0b0fe60da30fe5bbb94add1e3ba8a08f7b9e" translate="yes" xml:space="preserve">
          <source>You can create dynamic groups using host variables with the constructed &lt;code&gt;keyed_groups&lt;/code&gt; option. The option &lt;code&gt;groups&lt;/code&gt; can also be used to create groups and &lt;code&gt;compose&lt;/code&gt; creates and modifies host variables. Here is an aws_ec2 example utilizing constructed features:</source>
          <target state="translated">구성된 &lt;code&gt;keyed_groups&lt;/code&gt; 옵션 과 함께 호스트 변수를 사용하여 동적 그룹을 작성할 수 있습니다 . 옵션 &lt;code&gt;groups&lt;/code&gt; 은 그룹을 &lt;code&gt;compose&lt;/code&gt; 하고 호스트 변수를 작성 및 수정 하는 데에도 사용할 수 있습니다 . 다음은 생성 된 기능을 사용하는 aws_ec2 예제입니다.</target>
        </trans-unit>
        <trans-unit id="b2f0ff0650824e60b51582c8c4eeecff87b540bd" translate="yes" xml:space="preserve">
          <source>You can create nodes first, and link them afterwards, and not worry about ordering. For failsafe referencing of a node, specify identifier, WFJT, and organization. With those specified, you can choose to modify or not modify any other parameter.</source>
          <target state="translated">You can create nodes first, and link them afterwards, and not worry about ordering. For failsafe referencing of a node, specify identifier, WFJT, and organization. With those specified, you can choose to modify or not modify any other parameter.</target>
        </trans-unit>
        <trans-unit id="c775ed5c9583e4dd8f402982087459f605872c7f" translate="yes" xml:space="preserve">
          <source>You can create the file &lt;code&gt;meta/requirements.yml&lt;/code&gt; and define dependencies in the same format used for &lt;code&gt;requirements.yml&lt;/code&gt; described in the &lt;a href=&quot;#installing-multiple-roles-from-a-file&quot;&gt;Installing multiple roles from a file&lt;/a&gt; section.</source>
          <target state="translated">You can create the file &lt;code&gt;meta/requirements.yml&lt;/code&gt; and define dependencies in the same format used for &lt;code&gt;requirements.yml&lt;/code&gt; described in the &lt;a href=&quot;#installing-multiple-roles-from-a-file&quot;&gt;Installing multiple roles from a file&lt;/a&gt; section.</target>
        </trans-unit>
        <trans-unit id="207c242454279fb24ae7336d938a1db841f83aa6" translate="yes" xml:space="preserve">
          <source>You can create variables from the output of an Ansible task with the task keyword &lt;code&gt;register&lt;/code&gt;. You can use registered variables in any later tasks in your play. For example:</source>
          <target state="translated">You can create variables from the output of an Ansible task with the task keyword &lt;code&gt;register&lt;/code&gt; . You can use registered variables in any later tasks in your play. For example:</target>
        </trans-unit>
        <trans-unit id="73cec34b779acf0ebd9cd2d69ee84f6cc8493210" translate="yes" xml:space="preserve">
          <source>You can create, manage, and remove user accounts on your managed nodes with ad-hoc tasks:</source>
          <target state="translated">임시 작업을 통해 관리 노드에서 사용자 계정을 생성, 관리 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6eefa7e27e1ee939afa51fc90198dbf464d9aaca" translate="yes" xml:space="preserve">
          <source>You can decide where to set a variable based on the scope you want that value to have. Ansible has three main scopes:</source>
          <target state="translated">해당 값에 원하는 범위에 따라 변수를 설정할 위치를 결정할 수 있습니다. Ansible에는 세 가지 주요 범위가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f79a996be6f3a55b060cfddfa7061f267d6ff878" translate="yes" xml:space="preserve">
          <source>You can define a custom comment character. This filter:</source>
          <target state="translated">사용자 정의 주석 문자를 정의 할 수 있습니다. 이 필터 :</target>
        </trans-unit>
        <trans-unit id="32d1295504cc2bd1db58c5b1d3de56dc36adde31" translate="yes" xml:space="preserve">
          <source>You can define a host or subset of hosts by its position in a group. For example, given the following group:</source>
          <target state="translated">그룹에서의 위치에 따라 호스트 또는 호스트의 하위 집합을 정의 할 수 있습니다. 예를 들어 다음과 같은 그룹이 주어집니다.</target>
        </trans-unit>
        <trans-unit id="c2ffa1b47e1e4343fffc821c902b8f8db9b5079e" translate="yes" xml:space="preserve">
          <source>You can define a simple variable using standard YAML syntax. For example:</source>
          <target state="translated">표준 YAML 구문을 사용하여 간단한 변수를 정의 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="4b7a7c945f42b47d25845d610bb9e3abbc9e8cf4" translate="yes" xml:space="preserve">
          <source>You can define different &lt;code&gt;become&lt;/code&gt; options for each managed node or group. You can define these variables in inventory or use them as normal variables.</source>
          <target state="translated">서로 다른 정의 할 수 있습니다 &lt;code&gt;become&lt;/code&gt; 각 관리 노드 또는 그룹에 대한 옵션을. 이러한 변수를 인벤토리에서 정의하거나 일반 변수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a335b393e70b2e6a39ebab2b2238224627c6872a" translate="yes" xml:space="preserve">
          <source>You can define different variables for each individual host, or set shared variables for a group of hosts in your inventory. For example, if all machines in the &lt;code&gt;[Boston]&lt;/code&gt; group use &amp;lsquo;boston.ntp.example.com&amp;rsquo; as an NTP server, you can set a group variable. The &lt;a href=&quot;intro_inventory#intro-inventory&quot;&gt;How to build your inventory&lt;/a&gt; page has details on setting &lt;a href=&quot;intro_inventory#host-variables&quot;&gt;host variables&lt;/a&gt; and &lt;a href=&quot;intro_inventory#group-variables&quot;&gt;group variables&lt;/a&gt; in inventory.</source>
          <target state="translated">각 개별 호스트에 대해 서로 다른 변수를 정의하거나 인벤토리의 호스트 그룹에 대해 공유 변수를 설정할 수 있습니다. 예를 들어 &lt;code&gt;[Boston]&lt;/code&gt; 그룹 의 모든 시스템이 'boston.ntp.example.com'을 NTP 서버로 사용하는 경우 그룹 변수를 설정할 수 있습니다. &lt;a href=&quot;intro_inventory#intro-inventory&quot;&gt;인벤토리를 구축하는 방법&lt;/a&gt; 페이지 설정에 대한 자세한 내용이 &lt;a href=&quot;intro_inventory#host-variables&quot;&gt;호스트 변수&lt;/a&gt; 및 &lt;a href=&quot;intro_inventory#group-variables&quot;&gt;그룹 변수를&lt;/a&gt; 재고있다.</target>
        </trans-unit>
        <trans-unit id="5a4596d768830a768b899dcc1388b68c296cf4e4" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a member does not meet the resource threshold limit requirement, the system marks the member as unavailable and directs load balancing traffic to another resource.</source>
          <target state="translated">제한 설정의 일부 또는 전부에 대한 제한을 정의 할 수 있습니다. 그러나 구성원이 리소스 임계 값 제한 요구 사항을 충족하지 않으면 시스템은 해당 구성원을 사용할 수없는 것으로 표시하고 부하 분산 트래픽을 다른 리소스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f6c2168b8b4b33990ed01b896f74c27947548bae" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a member does not meet the resource threshold limit requirement, the system marks the member as unavailable and directs load-balancing traffic to another resource.</source>
          <target state="translated">한계 설정의 일부 또는 전부에 대한 한계를 정의 할 수 있습니다. 그러나 멤버가 리소스 임계 값 제한 요구 사항을 충족하지 않으면 시스템은 멤버를 사용할 수없는 것으로 표시하고로드 균형 조정 트래픽을 다른 리소스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="afdf2f81bafb19ba3f5546e519d4fbcb3b442366" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a server does not meet the resource threshold limit requirement, the system marks the entire server as unavailable and directs load balancing traffic to another resource.</source>
          <target state="translated">제한 설정의 일부 또는 전부에 대한 제한을 정의 할 수 있습니다. 그러나 서버가 리소스 임계 값 제한 요구 사항을 충족하지 않으면 시스템은 전체 서버를 사용할 수없는 것으로 표시하고 부하 분산 트래픽을 다른 리소스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b90e2cef25a37dc7963e98c5d70419dc8f25c0a0" translate="yes" xml:space="preserve">
          <source>You can define limits for any or all of the limit settings. However, when a server does not meet the resource threshold limit requirement, the system marks the entire server as unavailable and directs load-balancing traffic to another resource.</source>
          <target state="translated">한계 설정의 일부 또는 전부에 대한 한계를 정의 할 수 있습니다. 그러나 서버가 리소스 임계 값 제한 요구 사항을 충족하지 않으면 시스템은 전체 서버를 사용할 수없는 것으로 표시하고로드 균형 조정 트래픽을 다른 리소스로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b7f518542372b2d94a1bc1a813cdf88e180ccf8c" translate="yes" xml:space="preserve">
          <source>You can define more complex variables using YAML dictionaries. A YAML dictionary maps keys to values. For example:</source>
          <target state="translated">YAML 사전을 사용하여 더 복잡한 변수를 정의 할 수 있습니다. YAML 사전은 키를 값에 매핑합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="da2b76478e4fc21271e09e1ad49596da7def0880" translate="yes" xml:space="preserve">
          <source>You can define the list in a variables file, or in the &amp;lsquo;vars&amp;rsquo; section of your play, then refer to the name of the list in the task:</source>
          <target state="translated">변수 파일 또는 플레이의 'vars'섹션에서 목록을 정의한 다음 작업에서 목록 이름을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="029680af4d6c8f5ff60ec15b308ce299d029d407" translate="yes" xml:space="preserve">
          <source>You can define variables directly in a playbook:</source>
          <target state="translated">플레이 북에서 직접 변수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5649009485afb6b99a12c0e078e8bf42502c4aa2" translate="yes" xml:space="preserve">
          <source>You can define variables in a variety of places, such as in inventory, in playbooks, in reusable files, in roles, and at the command line. Ansible loads every possible variable it finds, then chooses the variable to apply based on &lt;a href=&quot;#ansible-variable-precedence&quot;&gt;variable precedence rules&lt;/a&gt;.</source>
          <target state="translated">인벤토리, 플레이 북, 재사용 가능한 파일, 역할 및 명령 줄과 같은 다양한 위치에서 변수를 정의 할 수 있습니다. Ansible은 찾은 모든 가능한 변수를로드 한 다음 &lt;a href=&quot;#ansible-variable-precedence&quot;&gt;변수 우선 순위 규칙&lt;/a&gt; 에 따라 적용 할 변수를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="1d685e887ad46de5e5089f83be3bc15569375305" translate="yes" xml:space="preserve">
          <source>You can define variables in reusable variables files and/or in reusable roles. When you define variables in reusable variable files, the sensitive variables are separated from playbooks. This separation enables you to store your playbooks in a source control software and even share the playbooks, without the risk of exposing passwords or other sensitive and personal data. For information about creating reusable files and roles, see &lt;a href=&quot;playbooks_reuse#playbooks-reuse&quot;&gt;Re-using Ansible artifacts&lt;/a&gt;.</source>
          <target state="translated">재사용 가능한 변수 파일 및 / 또는 재사용 가능한 역할에서 변수를 정의 할 수 있습니다. 재사용 가능한 변수 파일에 변수를 정의하면 민감한 변수가 플레이 북과 분리됩니다. 이러한 분리를 통해 소스 제어 소프트웨어에 플레이 북을 저장하고 비밀번호 나 기타 민감한 개인 데이터를 노출 할 위험없이 플레이 북을 공유 할 수도 있습니다. 재사용 가능한 파일 및 역할 생성에 대한 정보는 &lt;a href=&quot;playbooks_reuse#playbooks-reuse&quot;&gt;Ansible 아티팩트&lt;/a&gt; 재사용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5ffed0df54705117fdbf7faa9870cd49596baef" translate="yes" xml:space="preserve">
          <source>You can define variables when you run your playbook by passing variables at the command line using the &lt;code&gt;--extra-vars&lt;/code&gt; (or &lt;code&gt;-e&lt;/code&gt;) argument. You can also request user input with a &lt;code&gt;vars_prompt&lt;/code&gt; (see &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;Interactive input: prompts&lt;/a&gt;). When you pass variables at the command line, use a single quoted string, that contains one or more variables, in one of the formats below.</source>
          <target state="translated">&lt;code&gt;--extra-vars&lt;/code&gt; (또는 &lt;code&gt;-e&lt;/code&gt; ) 인수를 사용하여 명령 줄에서 변수를 전달하여 플레이 북을 실행할 때 변수를 정의 할 수 있습니다 . &lt;code&gt;vars_prompt&lt;/code&gt; 를 사용하여 사용자 입력을 요청할 수도 있습니다 ( &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;대화 형 입력 : prompts&lt;/a&gt; 참조 ). 명령 줄에서 변수를 전달할 때 아래 형식 중 하나로 하나 이상의 변수를 포함하는 작은 따옴표로 묶인 문자열을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="47070b0daed9cc7319414bd6449fc4626f7d8a33" translate="yes" xml:space="preserve">
          <source>You can define variables with multiple values using YAML lists. For example:</source>
          <target state="translated">YAML 목록을 사용하여 여러 값으로 변수를 정의 할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="6cd3bb01c8e6c50d5b8510776eece19e91d7c3c5" translate="yes" xml:space="preserve">
          <source>You can determine this value by numbering the iSCSI ports left to right on the controller you wish to modify starting with one.</source>
          <target state="translated">수정하려는 컨트롤러의 왼쪽에서 오른쪽으로 iSCSI 포트에 번호를 지정하여이 값을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1abfd083441a2dbcc4d373851dcd40bf62c3715e" translate="yes" xml:space="preserve">
          <source>You can disable fair-scheduler configuration by setting this to 0</source>
          <target state="translated">이것을 0으로 설정하여 공정 스케줄러 구성을 비활성화 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="efe898f24aec12b77157d197aad75d28cb25e6bc" translate="yes" xml:space="preserve">
          <source>You can do the same thing when looping over a dict:</source>
          <target state="translated">dict를 반복 할 때 동일한 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dc14bbdde4fb80879032be7eeecb04bb0d753a3" translate="yes" xml:space="preserve">
          <source>You can do this by using an external variables file, or files, just like this:</source>
          <target state="translated">다음과 같이 외부 변수 파일을 사용하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="895ccc34453cbca921584c2b4d20ac544231a3c0" translate="yes" xml:space="preserve">
          <source>You can download collections from Automation Hub at the command line. Automation Hub content is available to subscribers only, so you must download an API token and configure your local environment to provide it before you can you download collections. To download a collection from Automation Hub with the &lt;code&gt;ansible-galaxy&lt;/code&gt; command:</source>
          <target state="translated">명령 줄에서 Automation Hub의 컬렉션을 다운로드 할 수 있습니다. Automation Hub 콘텐츠는 구독자 만 사용할 수 있으므로 컬렉션을 다운로드하기 전에 API 토큰을 다운로드하고이를 제공하도록 로컬 환경을 구성해야합니다. &lt;code&gt;ansible-galaxy&lt;/code&gt; 명령을 사용하여 Automation Hub에서 컬렉션을 다운로드하려면 :</target>
        </trans-unit>
        <trans-unit id="b3de207d08f7dbf03a4122ddacc5a56ca533b362" translate="yes" xml:space="preserve">
          <source>You can download hotfixes from &lt;a href=&quot;https://www.catalog.update.microsoft.com/Home.aspx&quot;&gt;https://www.catalog.update.microsoft.com/Home.aspx&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.catalog.update.microsoft.com/Home.aspx&quot;&gt;https://www.catalog.update.microsoft.com/Home.aspx&lt;/a&gt; 에서 핫픽스를 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caaf75a95d78931ac97f3ff4e9cd3ebf91c104b6" translate="yes" xml:space="preserve">
          <source>You can download the latest version of the OpenStack inventory script &lt;a href=&quot;https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/openstack_inventory.py&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">OpenStack 인벤토리 스크립트의 최신 버전을 &lt;a href=&quot;https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/openstack_inventory.py&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab0907e3ece50db996169748e1635ff5d15fe406" translate="yes" xml:space="preserve">
          <source>You can download the latest version of the OpenStack inventory script &lt;a href=&quot;https://raw.githubusercontent.com/openstack/ansible-collections-openstack/master/scripts/inventory/openstack_inventory.py&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/openstack/ansible-collections-openstack/master/scripts/inventory/openstack_inventory.py&quot;&gt;여기&lt;/a&gt; 에서 OpenStack 인벤토리 스크립트의 최신 버전을 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05d9f3be62afa95fac735e8950c9f95922893956" translate="yes" xml:space="preserve">
          <source>You can download the object, upload the object, or delete it.</source>
          <target state="translated">개체를 다운로드하거나 업로드하거나 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="045dec4ee516dc7f0a92d119f9bc5070af99f932" translate="yes" xml:space="preserve">
          <source>You can download the releases from &lt;a href=&quot;https://releases.ansible.com/ansible/&quot;&gt;https://releases.ansible.com/ansible/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://releases.ansible.com/ansible/&quot;&gt;https://releases.ansible.com/ansible/&lt;/a&gt; 에서 릴리스를 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e4ca88f13f9c4c54967da0177cd8fb0784d61c2" translate="yes" xml:space="preserve">
          <source>You can easily assign a variable to a single host, then use it later in playbooks. In INI:</source>
          <target state="translated">단일 호스트에 변수를 쉽게 할당 한 다음 나중에 플레이 북에서 사용할 수 있습니다. INI에서 :</target>
        </trans-unit>
        <trans-unit id="1dd45e0ccaed07c2fe8c491872b5e47402ba85c6" translate="yes" xml:space="preserve">
          <source>You can either copy the inventory and ini config out from the cloned git repo, or you can download it to your working directory like so:</source>
          <target state="translated">복제 된 git repo에서 인벤토리와 ini config를 복사하거나 다음과 같이 작업 디렉토리로 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b79b7adf9534449d6852e53c283fe8a9d1c978e" translate="yes" xml:space="preserve">
          <source>You can either specify the private key used in the SSH config file:</source>
          <target state="translated">SSH 구성 파일에 사용 된 개인 키를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81745520e283106fc7f639724c20cb69741f2bab" translate="yes" xml:space="preserve">
          <source>You can enable a cache plugin in the Ansible configuration, either via environment variable:</source>
          <target state="translated">환경 변수를 통해 Ansible 구성에서 캐시 플러그인을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="339e35d3ae83a63b734ee8906094fb60710d4df4" translate="yes" xml:space="preserve">
          <source>You can enable a custom action plugin by either dropping it into the &lt;code&gt;action_plugins&lt;/code&gt; directory adjacent to your play, inside a role, or by putting it in one of the action plugin directory sources configured in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;.</source>
          <target state="translated">커스텀 액션 플러그인 을 여러분의 플레이에 인접한 &lt;code&gt;action_plugins&lt;/code&gt; 디렉토리에, 역할 내에서 드롭 하거나, &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg에&lt;/a&gt; 구성된 액션 플러그인 디렉토리 소스 중 하나에 놓아 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23791aa7ce8a739fffda100818d58b0e0b2d558d" translate="yes" xml:space="preserve">
          <source>You can enable the task debugger globally with a setting in ansible.cfg or with an environment variable. The only options are &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. If you set the configuration option or environment variable to &lt;code&gt;True&lt;/code&gt;, Ansible runs the debugger on failed tasks by default.</source>
          <target state="translated">ansible.cfg의 설정 또는 환경 변수를 사용하여 작업 디버거를 전역 적으로 활성화 할 수 있습니다. 유일한 옵션은 &lt;code&gt;True&lt;/code&gt; 또는 &lt;code&gt;False&lt;/code&gt; 입니다. 구성 옵션 또는 환경 변수를 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 Ansible은 기본적으로 실패한 작업에서 디버거를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="f8b089fcc68061f7034cad0e511f6da28c44015c" translate="yes" xml:space="preserve">
          <source>You can encrypt a valid inventory configuration file as follows:</source>
          <target state="translated">다음과 같이 유효한 인벤토리 구성 파일을 암호화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0bdeeeac9fbf9a7101c205179b0178b4141e436" translate="yes" xml:space="preserve">
          <source>You can encrypt single values inside a YAML file using the &lt;a href=&quot;../cli/ansible-vault#ansible-vault-encrypt-string&quot;&gt;ansible-vault encrypt_string&lt;/a&gt; command. For one way to keep your vaulted variables safely visible, see &lt;a href=&quot;playbooks_best_practices#tip-for-variables-and-vaults&quot;&gt;Keep vaulted variables safely visible&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../cli/ansible-vault#ansible-vault-encrypt-string&quot;&gt;ansible-vault encrypt_string&lt;/a&gt; 명령을 사용하여 YAML 파일 내의 단일 값을 암호화 할 수 있습니다 . 저장된 변수를 안전하게 표시하는 한 가지 방법은 저장된 변수를 안전하게 표시를 참조 &lt;a href=&quot;playbooks_best_practices#tip-for-variables-and-vaults&quot;&gt;하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3783c6e1d516d99bfad09d8748fa5b764c8fc88" translate="yes" xml:space="preserve">
          <source>You can encrypt the entered value so you can use it, for instance, with the user module to define a password:</source>
          <target state="translated">입력 된 값을 암호화하여 예를 들어 사용자 모듈과 함께 암호를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a292a5dfe023737520cd22b8f3e38c47fa115bed" translate="yes" xml:space="preserve">
          <source>You can even combine these simple examples with other filters and lookups to create a dictionary dynamically by matching patterns to variable names:</source>
          <target state="translated">이러한 간단한 예제를 다른 필터 및 조회와 결합하여 패턴을 변수 이름과 일치시켜 동적으로 사전을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b476d5312285fff967d94ec5eacbc6d97b7d8f" translate="yes" xml:space="preserve">
          <source>You can execute long-running operations in the background with &lt;a href=&quot;intro_adhoc#intro-adhoc&quot;&gt;ad-hoc tasks&lt;/a&gt;. For example, to execute &lt;code&gt;long_running_operation&lt;/code&gt; asynchronously in the background, with a timeout (&lt;code&gt;-B&lt;/code&gt;) of 3600 seconds, and without polling (&lt;code&gt;-P&lt;/code&gt;):</source>
          <target state="translated">&lt;a href=&quot;intro_adhoc#intro-adhoc&quot;&gt;임시 작업&lt;/a&gt; 을 사용하여 백그라운드에서 장기 실행 작업을 실행할 수 있습니다 . 예를 들어, 타임 아웃 ( &lt;code&gt;-B&lt;/code&gt; )이 3600 초이고 폴링없이 ( &lt;code&gt;-P&lt;/code&gt; ) 백그라운드에서 비동기 적으로 &lt;code&gt;long_running_operation&lt;/code&gt; 을 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="f26701e0567f7234642c9d3448f6e25936d79e53" translate="yes" xml:space="preserve">
          <source>You can execute modules from the command line:</source>
          <target state="translated">명령 행에서 모듈을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47332555b27ffcb10df828e64492ef81786c0d2c" translate="yes" xml:space="preserve">
          <source>You can execute the playbook with something like:</source>
          <target state="translated">다음과 같은 방법으로 플레이 북을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d8a816aaa666054ca9ed5eea192609e0eea86cb" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other APIs by dropping a custom plugin into the &lt;code&gt;httpapi_plugins&lt;/code&gt; directory. See &lt;a href=&quot;../network/dev_guide/developing_plugins_network#developing-plugins-httpapi&quot;&gt;Developing httpapi plugins&lt;/a&gt; for details.</source>
          <target state="translated">사용자 정의 플러그인을 &lt;code&gt;httpapi_plugins&lt;/code&gt; 디렉토리 에 놓아 다른 API를 지원하도록 Ansible을 확장 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;../network/dev_guide/developing_plugins_network#developing-plugins-httpapi&quot;&gt;httpapi 플러그인 개발&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1dce19c166bfaa74fd35b871567f8beb94bf53c1" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other network devices by dropping a custom plugin into the &lt;code&gt;cliconf_plugins&lt;/code&gt; directory.</source>
          <target state="translated">사용자 정의 플러그인을 &lt;code&gt;cliconf_plugins&lt;/code&gt; 디렉토리 에 놓아 다른 네트워크 장치를 지원하도록 Ansible을 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f70152b4c93d0c49236939d43e62ac6c60f4a641" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other network devices by dropping a custom plugin into the &lt;code&gt;netconf_plugins&lt;/code&gt; directory.</source>
          <target state="translated">사용자 정의 플러그인을 &lt;code&gt;netconf_plugins&lt;/code&gt; 디렉토리 에 드롭하여 다른 네트워크 장치를 지원하도록 Ansible을 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47b3c8d291ae357172288e7c0500df95b80694be" translate="yes" xml:space="preserve">
          <source>You can extend Ansible to support other transports (such as SNMP or message bus) by dropping a custom plugin into the &lt;code&gt;connection_plugins&lt;/code&gt; directory.</source>
          <target state="translated">사용자 정의 플러그인을 &lt;code&gt;connection_plugins&lt;/code&gt; 디렉토리 에 놓아 다른 전송 (예 : SNMP 또는 메시지 버스)을 지원하도록 Ansible을 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b24069e4217e75384b28ffd185c9ade1f9d9c5f1" translate="yes" xml:space="preserve">
          <source>You can extend the existing network modules with custom plugins in your collection.</source>
          <target state="translated">컬렉션의 사용자 지정 플러그인을 사용하여 기존 네트워크 모듈을 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5b6b58b1acabc81784eabc583062dd31c31d486" translate="yes" xml:space="preserve">
          <source>You can filter entire lists - &lt;code&gt;ipaddr()&lt;/code&gt; will return a list with values valid for a particular query:</source>
          <target state="translated">전체 목록을 필터링 할 수 있습니다. &lt;code&gt;ipaddr()&lt;/code&gt; 은 특정 쿼리에 유효한 값을 가진 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1da395bad3f79a38ece4637de095596da69a61d" translate="yes" xml:space="preserve">
          <source>You can find all included inventory scripts in the &lt;a href=&quot;https://github.com/ansible/ansible/tree/devel/contrib/inventory&quot;&gt;contrib/inventory directory&lt;/a&gt;. General usage is similar across all inventory scripts. You can also &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_inventory.html#developing-inventory&quot;&gt;write your own inventory script&lt;/a&gt;.</source>
          <target state="translated">포함 된 모든 인벤토리 스크립트는 &lt;a href=&quot;https://github.com/ansible/ansible/tree/devel/contrib/inventory&quot;&gt;contrib / inventory 디렉토리&lt;/a&gt; 에서 찾을 수 있습니다 . 일반적인 사용법은 모든 인벤토리 스크립트에서 비슷합니다. &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_inventory.html#developing-inventory&quot;&gt;자신의 인벤토리 스크립트를 작성할&lt;/a&gt; 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16f1fab39bd6d24dd943b0833c80676e354dcc5e" translate="yes" xml:space="preserve">
          <source>You can find it in Ansible Community General Collection&amp;rsquo;s git repo at &lt;a href=&quot;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/packet_net.py&quot;&gt;scripts/inventory/packet_net.py&lt;/a&gt;.</source>
          <target state="translated">Ansible Community General Collection의 git repo ( &lt;a href=&quot;https://raw.githubusercontent.com/ansible-collections/community.general/main/scripts/inventory/packet_net.py&quot;&gt;scripts / inventory / packet_net.py)&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a79ac866c8b0e86dc2d8544b3cdfe0d2b517258" translate="yes" xml:space="preserve">
          <source>You can find many examples in &lt;code&gt;./test/legacy/roles/scaleway_s3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;./test/legacy/roles/scaleway_s3&lt;/code&gt; 에서 많은 예제를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99e38ca1ff8bf990f3db9694fc5e96812e3073c5" translate="yes" xml:space="preserve">
          <source>You can find many examples in the &lt;a href=&quot;https://github.com/ansible/ansible-legacy-tests/tree/devel/test/legacy/roles/scaleway_s3&quot;&gt;scaleway_s3 integration tests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ansible/ansible-legacy-tests/tree/devel/test/legacy/roles/scaleway_s3&quot;&gt;scaleway_s3 통합 테스트&lt;/a&gt; 에서 많은 예를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d04b7e75389d3b384d3a51ae4e8acf320c065dce" translate="yes" xml:space="preserve">
          <source>You can find more examples here: &lt;a href=&quot;https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/ansiblesamples.htm&quot;&gt;Sample Ansible Playbooks&lt;/a&gt;.</source>
          <target state="translated">여기에서 더 많은 예제를 찾을 수 있습니다 : &lt;a href=&quot;https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/ansiblesamples.htm&quot;&gt;샘플 Ansible Playbooks&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f928b86b85c1dc2adb52a9d0c24bc7e2be516488" translate="yes" xml:space="preserve">
          <source>You can find more examples on how to organize your inventories and group your hosts in &lt;a href=&quot;#inventory-setup-examples&quot;&gt;Inventory setup examples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#inventory-setup-examples&quot;&gt;인벤토리 설정 예&lt;/a&gt; 에서 인벤토리 를 구성하고 호스트를 그룹화하는 방법에 대한 추가 예를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fad66a274db1b3a34fefd31080605eb7829fc269" translate="yes" xml:space="preserve">
          <source>You can find more options for enabling HTTP/HTTPS connections in the &lt;a href=&quot;../../collections/arista/eos/eos_eapi_module#ansible-collections-arista-eos-eos-eapi-module&quot;&gt;arista.eos.eos_eapi&lt;/a&gt; module documentation.</source>
          <target state="translated">&lt;a href=&quot;../../collections/arista/eos/eos_eapi_module#ansible-collections-arista-eos-eos-eapi-module&quot;&gt;arista.eos.eos_eapi&lt;/a&gt; 모듈 문서 에서 HTTP / HTTPS 연결 활성화에 대한 추가 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6abe13c0e66718acda107444b10ca95140fdfa66" translate="yes" xml:space="preserve">
          <source>You can find more options for enabling HTTP/HTTPS connections in the &lt;a href=&quot;../../modules/eos_eapi_module#eos-eapi-module&quot;&gt;eos_eapi&lt;/a&gt; module documentation.</source>
          <target state="translated">&lt;a href=&quot;../../modules/eos_eapi_module#eos-eapi-module&quot;&gt;eos_eapi&lt;/a&gt; 모듈 설명서 에서 HTTP / HTTPS 연결을 활성화하기위한 추가 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2008b0bdfb6ffd6cab4017abc7939ab0a47810d9" translate="yes" xml:space="preserve">
          <source>You can find product ids for installed programs in the Windows registry editor either at &lt;code&gt;HKLM:Software\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt; or for 32 bit programs at &lt;code&gt;HKLM:Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt;.</source>
          <target state="translated">Windows 레지스트리 편집기에서 &lt;code&gt;HKLM:Software\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt; 또는 32 비트 프로그램 ( &lt;code&gt;HKLM:Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall&lt;/code&gt; 에서 설치된 프로그램의 제품 ID를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de121a1558de40b945d153ac5a0f51df1503ce05" translate="yes" xml:space="preserve">
          <source>You can find some example playbooks illustrating these best practices in our &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;ansible-examples repository&lt;/a&gt;. (NOTE: These may not use all of the features in the latest release, but are still an excellent reference!).</source>
          <target state="translated">이러한 모범 사례를 보여주는 플레이 북 &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;예제는 ansible-examples 저장소&lt;/a&gt; 에서 찾을 수 있습니다 . (참고 : 최신 릴리스의 모든 기능을 사용하지는 않지만 여전히 훌륭한 참조 자료입니다!).</target>
        </trans-unit>
        <trans-unit id="1c388a2d30a7ffdce799936302ad6a300573322c" translate="yes" xml:space="preserve">
          <source>You can find some quick start templates in GitHub here &lt;a href=&quot;https://github.com/azure/azure-quickstart-templates&quot;&gt;https://github.com/azure/azure-quickstart-templates&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/azure/azure-quickstart-templates&quot;&gt;https://github.com/azure/azure-quickstart-templates&lt;/a&gt; 에서 GitHub에서 빠른 시작 템플릿을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8ab6fcee9488a9dd5dec27f9985951a7bd01feb" translate="yes" xml:space="preserve">
          <source>You can force &lt;code&gt;lookup&lt;/code&gt; to return a list to &lt;code&gt;loop&lt;/code&gt; by using &lt;code&gt;wantlist=True&lt;/code&gt;, or you can use &lt;code&gt;query&lt;/code&gt; instead.</source>
          <target state="translated">당신은 강제로 &lt;code&gt;lookup&lt;/code&gt; 에 목록을 반환하는 &lt;code&gt;loop&lt;/code&gt; 사용하여 &lt;code&gt;wantlist=True&lt;/code&gt; , 또는 당신이 사용할 수있는 &lt;code&gt;query&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="d4bc8c3591357e322432d14f33234ca7a1ae0834" translate="yes" xml:space="preserve">
          <source>You can fully customize the comment style:</source>
          <target state="translated">주석 스타일을 완전히 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d33907ab87b5716c6198e2130c3d86ecdec866e3" translate="yes" xml:space="preserve">
          <source>You can further control the settings for each plugin via other configuration options detailed in the plugin themselves (linked below).</source>
          <target state="translated">플러그인 자체에 자세히 설명 된 다른 구성 옵션 (아래 링크)을 통해 각 플러그인의 설정을 추가로 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f08c3797e94768a42e0051a25c9ad86fbef9a9d" translate="yes" xml:space="preserve">
          <source>You can get a full listing of available environment variables from &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;Ansible Configuration Settings&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;Ansible Configuration Settings&lt;/a&gt; 에서 사용 가능한 환경 변수의 전체 목록을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c91bbbb5fc6d2052fbdbe29d87168ae66f4b61a" translate="yes" xml:space="preserve">
          <source>You can get the identifier by running 'Get-WindowsPackage -Online -PackagePath path-to-cab-in-msu' after expanding the msu file.</source>
          <target state="translated">msu 파일을 확장 한 후 'Get-WindowsPackage -Online -PackagePath path-to-cab-in-msu'를 실행하여 식별자를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d10747ce5885f5c4f81a8dc7ede3dcc92febc2a2" translate="yes" xml:space="preserve">
          <source>You can host collections and roles on Galaxy to share with the Ansible community. Galaxy content is formated in pre-packaged units of work such as &lt;a href=&quot;playbooks_reuse_roles&quot;&gt;roles&lt;/a&gt;, and new in Galaxy 3.2, &lt;a href=&quot;collections&quot;&gt;collections&lt;/a&gt;. You can create roles for provisioning infrastructure, deploying applications, and all of the tasks you do everyday. Taking this a step further, you can create collections which provide a comprehensive package of automation that may include multiple playbooks, roles, modules, and plugins.</source>
          <target state="translated">Galaxy에서 컬렉션과 역할을 호스팅하여 Ansible 커뮤니티와 공유 할 수 있습니다. Galaxy 컨텐츠는 &lt;a href=&quot;playbooks_reuse_roles&quot;&gt;역할&lt;/a&gt; 과 같은 사전 패키지 된 작업 단위로 구성 되며 Galaxy 3.2의 새로운 &lt;a href=&quot;collections&quot;&gt;컬렉션&lt;/a&gt; 입니다. 인프라 프로비저닝, 응용 프로그램 배포 및 일상적인 모든 작업에 대한 역할을 만들 수 있습니다. 한 단계 더 나아가 여러 플레이 북, 역할, 모듈 및 플러그인을 포함 할 수있는 포괄적 인 자동화 패키지를 제공하는 컬렉션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbb204584d245aedbafa8236ad51a7fbf1f7acd8" translate="yes" xml:space="preserve">
          <source>You can host collections and roles on Galaxy to share with the Ansible community. Galaxy content is formatted in pre-packaged units of work such as &lt;a href=&quot;../user_guide/playbooks_reuse_roles#playbooks-reuse-roles&quot;&gt;roles&lt;/a&gt;, and new in Galaxy 3.2, &lt;a href=&quot;../user_guide/collections_using#collections&quot;&gt;collections&lt;/a&gt;. You can create roles for provisioning infrastructure, deploying applications, and all of the tasks you do everyday. Taking this a step further, you can create collections which provide a comprehensive package of automation that may include multiple playbooks, roles, modules, and plugins.</source>
          <target state="translated">Ansible 커뮤니티와 공유하기 위해 Galaxy에서 컬렉션 및 역할을 호스팅 할 수 있습니다. Galaxy 콘텐츠는 &lt;a href=&quot;../user_guide/playbooks_reuse_roles#playbooks-reuse-roles&quot;&gt;역할&lt;/a&gt; 과 같은 미리 패키지 된 작업 단위로 형식이 지정 되고 Galaxy 3.2의 새로운 기능인 &lt;a href=&quot;../user_guide/collections_using#collections&quot;&gt;컬렉션&lt;/a&gt; . 인프라 프로비저닝, 애플리케이션 배포 및 매일 수행하는 모든 작업에 대한 역할을 만들 수 있습니다. 한 단계 더 나아가 여러 플레이 북, 역할, 모듈 및 플러그인을 포함 할 수있는 포괄적 인 자동화 패키지를 제공하는 컬렉션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62a6d54713023abfbfcc3f6b5094a8756357c0bb" translate="yes" xml:space="preserve">
          <source>You can ignore a task failure due to the host instance being &amp;lsquo;UNREACHABLE&amp;rsquo; with the &lt;code&gt;ignore_unreachable&lt;/code&gt; keyword. Ansible ignores the task errors, but continues to execute future tasks against the unreachable host. For example, at the task level:</source>
          <target state="translated">&lt;code&gt;ignore_unreachable&lt;/code&gt; 키워드 를 사용하여 호스트 인스턴스가 'UNREACHABLE'이기 때문에 태스크 실패를 무시할 수 있습니다 . Ansible은 작업 오류를 무시하지만 연결할 수없는 호스트에 대해 향후 작업을 계속 실행합니다. 예를 들어 작업 수준에서 :</target>
        </trans-unit>
        <trans-unit id="934ddd4ce587bb4c9dd24ca82d3dc9a5f8b60f97" translate="yes" xml:space="preserve">
          <source>You can include up to five CorsRule elements in the request.</source>
          <target state="translated">요청에 최대 5 개의 CorsRule 요소를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a557c43314f7a355227a9a345807a3fd7f5989e" translate="yes" xml:space="preserve">
          <source>You can incorporate multiple playbooks into a master playbook. However, you can only use imports to re-use playbooks. For example:</source>
          <target state="translated">여러 플레이 북을 마스터 플레이 북에 통합 할 수 있습니다. 그러나 가져 오기는 플레이 북을 재사용하는 데만 사용할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5acb62826046eaa2b75b82595e607e550c13e038" translate="yes" xml:space="preserve">
          <source>You can initialize the random number generator from a seed to create random-but-idempotent numbers:</source>
          <target state="translated">시드에서 난수 생성기를 초기화하여 난수이지만 멱등 수를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="013c831f0c050f694732f1f0f4bb04abd30691af" translate="yes" xml:space="preserve">
          <source>You can initialize the shuffle generator from a seed to generate a random-but-idempotent order:</source>
          <target state="translated">시드에서 셔플 생성기를 초기화하여 무작위이지만 멱등 한 순서를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd51b2307e11936205ebcfbf60980c69e7e58345" translate="yes" xml:space="preserve">
          <source>You can install &lt;code&gt;python-argcomplete&lt;/code&gt; from EPEL on Red Hat Enterprise based distributions, and or from the standard OS repositories for many other distributions.</source>
          <target state="translated">Red Hat Enterprise 기반 배포판의 EPEL 및 기타 여러 배포판의 경우 표준 OS 저장소에서 &lt;code&gt;python-argcomplete&lt;/code&gt; 를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3915fcd55627cecdd75da9e31039f6d82e086eb9" translate="yes" xml:space="preserve">
          <source>You can install a certain package only when the operating system is a particular version.</source>
          <target state="translated">운영 체제가 특정 버전 인 경우에만 특정 패키지를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6da8a9ea1d5c4bcf15b1915bb100f96b1c52fe4" translate="yes" xml:space="preserve">
          <source>You can install a collection in a git repository by providing the URI to the repository instead of a collection name or path to a &lt;code&gt;tar.gz&lt;/code&gt; file. The collection must contain a &lt;code&gt;galaxy.yml&lt;/code&gt; file, which will be used to generate the would-be collection artifact data from the directory. The URI should be prefixed with &lt;code&gt;git+&lt;/code&gt; (or with &lt;code&gt;git@&lt;/code&gt; to use a private repository with ssh authentication) and optionally supports a comma-separated &lt;a href=&quot;https://git-scm.com/docs/gitglossary#def_commit-ish&quot;&gt;git commit-ish&lt;/a&gt; version (for example, a commit or tag).</source>
          <target state="translated">컬렉션 이름이나 &lt;code&gt;tar.gz&lt;/code&gt; 파일의 경로 대신 저장소에 URI를 제공하여 git 저장소에 컬렉션을 설치할 수 있습니다 . 컬렉션에는 &lt;code&gt;galaxy.yml&lt;/code&gt; 에서 예정된 컬렉션 아티팩트 데이터를 생성하는 데 사용되는 galaxy.yml 파일이 포함되어야합니다 . URI는 &lt;code&gt;git+&lt;/code&gt; (또는 ssh 인증이있는 개인 저장소를 사용하려면 &lt;code&gt;git@&lt;/code&gt; 접두사)로 시작해야하며 선택적으로 쉼표로 구분 된 &lt;a href=&quot;https://git-scm.com/docs/gitglossary#def_commit-ish&quot;&gt;git commit-ish&lt;/a&gt; 버전 (예 : 커밋 또는 태그)을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e2103ce28f240c9fdddbe20a853c97f933df8194" translate="yes" xml:space="preserve">
          <source>You can install and use collections through &lt;a href=&quot;https://galaxy.ansible.com&quot;&gt;Ansible Galaxy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://galaxy.ansible.com&quot;&gt;Ansible Galaxy를&lt;/a&gt; 통해 컬렉션을 설치하고 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="131a17cda78123bfee17213db3a991579ab50976" translate="yes" xml:space="preserve">
          <source>You can install multiple roles by including the roles in a &lt;code&gt;requirements.yml&lt;/code&gt; file. The format of the file is YAML, and the file extension must be either &lt;em&gt;.yml&lt;/em&gt; or &lt;em&gt;.yaml&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;requirements.yml&lt;/code&gt; 파일 에 역할을 포함시켜 여러 역할을 설치할 수 있습니다 . 파일 형식은 YAML이며 파일 확장자는 &lt;em&gt;.yml&lt;/em&gt; 또는 &lt;em&gt;.yaml&lt;/em&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="95dd86e566d3e45705d65fdba8d839eb8513259b" translate="yes" xml:space="preserve">
          <source>You can install pyVmomi using pip:</source>
          <target state="translated">pip를 사용하여 pyVmomi를 설치할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d95c2fb08faba17c1c0d0a99deba4fc5367b7e30" translate="yes" xml:space="preserve">
          <source>You can install roles and collections from the same requirements files, with some caveats.</source>
          <target state="translated">동일한 요구 사항 파일에서 역할과 컬렉션을 몇 가지 경고와 함께 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18fc1501f954efc442a15f66fb5a841afbacc4ec" translate="yes" xml:space="preserve">
          <source>You can install the development version of &lt;code&gt;ansible-base&lt;/code&gt; directly from GitHub with pip.</source>
          <target state="translated">pip를 사용하여 GitHub에서 직접 &lt;code&gt;ansible-base&lt;/code&gt; 의 개발 버전을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29403496def14439bd4df0204a9c5c61e81ee569" translate="yes" xml:space="preserve">
          <source>You can install vSphere Automation Python SDK using pip:</source>
          <target state="translated">pip를 사용하여 vSphere Automation Python SDK를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaee020e99c8dce2c204ecc8df3e69bbe5e850c3" translate="yes" xml:space="preserve">
          <source>You can keep per-host and per-group variables in similar files. To learn about organizing your variables, see &lt;a href=&quot;intro_inventory#splitting-out-vars&quot;&gt;Organizing host and group variables&lt;/a&gt;.</source>
          <target state="translated">호스트 별 및 그룹 별 변수를 유사한 파일에 보관할 수 있습니다. 변수 구성에 대한 자세한 내용은 &lt;a href=&quot;intro_inventory#splitting-out-vars&quot;&gt;호스트 및 그룹 변수 구성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68929bab0817e16c3da9a9a625df6303ff37124f" translate="yes" xml:space="preserve">
          <source>You can keep your production environment separate from development, test, and staging environments by using separate inventory files or directories for each environment. This way you pick with -i what you are targeting. Keeping all your environments in one file can lead to surprises!</source>
          <target state="translated">각 환경에 대해 별도의 인벤토리 파일 또는 디렉토리를 사용하여 프로덕션 환경을 개발, 테스트 및 스테이징 환경과 별도로 유지할 수 있습니다. 이런 식으로 -i를 사용하여 대상을 선택합니다. 모든 환경을 하나의 파일에 보관하면 놀라운 결과를 얻을 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="81bdb77a1c12fc38326578478172576a9b425f18" translate="yes" xml:space="preserve">
          <source>You can learn a lot more about Jinja2 and its capabilities &lt;a href=&quot;http://jinja.pocoo.org/docs/&quot;&gt;here&lt;/a&gt;, and you can read more about Ansible variables in general in the &lt;a href=&quot;playbooks_variables#playbooks-variables&quot;&gt;Using Variables&lt;/a&gt; section.</source>
          <target state="translated">당신은 더 많은 Jinja2과 그 기능에 대한 배울 수 있습니다 &lt;a href=&quot;http://jinja.pocoo.org/docs/&quot;&gt;여기에&lt;/a&gt; , 당신은에 일반적으로 Ansible 변수에 대한 자세한 내용을보실 수 있습니다 &lt;a href=&quot;playbooks_variables#playbooks-variables&quot;&gt;사용 변수&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4c637c1b7da68c728fe60641069711044cc6fd7e" translate="yes" xml:space="preserve">
          <source>You can learn more about &lt;a href=&quot;intro_patterns#intro-patterns&quot;&gt;patterns&lt;/a&gt; and &lt;a href=&quot;modules#working-with-modules&quot;&gt;modules&lt;/a&gt; on other pages.</source>
          <target state="translated">다른 페이지에서 &lt;a href=&quot;intro_patterns#intro-patterns&quot;&gt;패턴&lt;/a&gt; 및 &lt;a href=&quot;modules#working-with-modules&quot;&gt;모듈&lt;/a&gt; 에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2162c6506f07fb3a8bce6c5dd0481bb6061907" translate="yes" xml:space="preserve">
          <source>You can learn more at &lt;a href=&quot;https://www.ansible.com/ansiblefest&quot;&gt;AnsibleFest&lt;/a&gt;, the annual event for all Ansible contributors, users, and customers hosted by Red Hat. AnsibleFest is the place to connect with others, learn new skills, and find a new friend to automate with.</source>
          <target state="translated">Red Hat에서 호스팅하는 모든 Ansible 기여자, 사용자 및 고객을위한 연례 행사 인 &lt;a href=&quot;https://www.ansible.com/ansiblefest&quot;&gt;AnsibleFest&lt;/a&gt; 에서 자세히 알아볼 수 있습니다 . AnsibleFest는 다른 사람들과 연결하고, 새로운 기술을 배우고, 자동화 할 새로운 친구를 찾을 수있는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="37747fc31ae37f426a46d9db9e264a1b7f2515e9" translate="yes" xml:space="preserve">
          <source>You can list multiple batch sizes as percentages:</source>
          <target state="translated">여러 배치 크기를 백분율로 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0f7b8568cfb7f714cbf9fdad93b8519fcbd2e51" translate="yes" xml:space="preserve">
          <source>You can make groups of groups using the &lt;code&gt;:children&lt;/code&gt; suffix in INI or the &lt;code&gt;children:&lt;/code&gt; entry in YAML. You can apply variables to these groups of groups using &lt;code&gt;:vars&lt;/code&gt; or &lt;code&gt;vars:&lt;/code&gt;:</source>
          <target state="translated">INI 의 &lt;code&gt;:children&lt;/code&gt; 접미사 또는 YAML 의 &lt;code&gt;children:&lt;/code&gt; 항목을 사용하여 그룹 그룹을 만들 수 있습니다 . &lt;code&gt;:vars&lt;/code&gt; 또는 &lt;code&gt;vars:&lt;/code&gt; 사용하여 이러한 그룹 그룹에 변수를 적용 할 수 있습니다 . :</target>
        </trans-unit>
        <trans-unit id="1b921cf3dd361f6fe3e513f84ec01f890dd1cc88" translate="yes" xml:space="preserve">
          <source>You can manually install this module on Windows 7 and Server 2008 R2 by installing the Windows ADK &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&quot;&gt;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&lt;/a&gt;, see examples to see how to do it with chocolatey.</source>
          <target state="translated">Windows ADK &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&quot;&gt;https://developer.microsoft.com/en-us/windows/hardware/windows-assessment-deployment-kit&lt;/a&gt; 을 설치하여 Windows 7 및 Server 2008 R2에이 모듈을 수동으로 설치할 수 있습니다 ( 예제 참조). 초콜릿으로하세요.</target>
        </trans-unit>
        <trans-unit id="5dba93a80c84c0e52a768e24f326db55facc9370" translate="yes" xml:space="preserve">
          <source>You can memorize your vault password, or manually copy vault passwords from any source and paste them at a command-line prompt, but most users store them securely and access them as needed from within Ansible. You have two options for storing vault passwords that work from within Ansible: in files, or in a third-party tool such as the system keyring or a secret manager. If you store your passwords in a third-party tool, you need a vault password client script to retrieve them from within Ansible.</source>
          <target state="translated">볼트 암호를 기억하거나 소스에서 볼트 암호를 수동으로 복사하여 명령 줄 프롬프트에 붙여 넣을 수 있지만 대부분의 사용자는 안전하게 저장하고 필요에 따라 Ansible 내에서 액세스합니다. Ansible 내에서 작동하는 볼트 암호를 저장하기위한 두 가지 옵션이 있습니다. 파일 또는 시스템 키링 또는 비밀 관리자와 같은 타사 도구에서. 타사 도구에 비밀번호를 저장하는 경우 Ansible 내에서 비밀번호를 검색하려면 볼트 비밀번호 클라이언트 스크립트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="038eb541c94443e9964b405bf9dcd82dc1f1e896" translate="yes" xml:space="preserve">
          <source>You can mix in includes along with your regular non-included tasks and handlers.</source>
          <target state="translated">포함되지 않은 일반 작업 및 처리기와 함께 포함을 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c1f1290f875f504b41db8d3e507cf22bb628591" translate="yes" xml:space="preserve">
          <source>You can mix vaulted and non vaulted variables in the same file, even inline in a play or role.</source>
          <target state="translated">놀이 또는 역할의 인라인조차도 같은 파일에서 아치형 변수와 아치형이 아닌 변수를 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="027b66cb5b1f13758e2f16c21b68ecdec918cf4d" translate="yes" xml:space="preserve">
          <source>You can mix wildcard patterns and groups at the same time:</source>
          <target state="translated">와일드 카드 패턴과 그룹을 동시에 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3b7872834b594f918232a76f2f6354b43c6f53c" translate="yes" xml:space="preserve">
          <source>You can mock the device connection and output from the device as follows:</source>
          <target state="translated">다음과 같이 장치 연결 및 출력을 모의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04fc5c1dc79a73759cb7863577c9eca1bfd8ad71" translate="yes" xml:space="preserve">
          <source>You can nest two looping tasks using &lt;code&gt;include_tasks&lt;/code&gt;. However, by default Ansible sets the loop variable &lt;code&gt;item&lt;/code&gt; for each loop. This means the inner, nested loop will overwrite the value of &lt;code&gt;item&lt;/code&gt; from the outer loop. You can specify the name of the variable for each loop using &lt;code&gt;loop_var&lt;/code&gt; with &lt;code&gt;loop_control&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;include_tasks&lt;/code&gt; 를 사용하여 두 개의 루핑 작업을 중첩 할 수 있습니다 . 그러나 기본적으로 Ansible은 각 루프에 대해 루프 변수 &lt;code&gt;item&lt;/code&gt; 을 설정합니다 . 이는 내부의 중첩 루프가 외부 루프 의 &lt;code&gt;item&lt;/code&gt; 값을 덮어 씁니다 . &lt;code&gt;loop_var&lt;/code&gt; 과 함께 &lt;code&gt;loop_control&lt;/code&gt; 사용하여 각 루프에 대한 변수 이름을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae63d6c92987691dc3644c7e71e739dfa27ad7c6" translate="yes" xml:space="preserve">
          <source>You can not use &lt;code&gt;win_psrepository&lt;/code&gt; to re-register (add) removed PSGallery, use the command &lt;code&gt;Register-PSRepository -Default&lt;/code&gt; instead.</source>
          <target state="translated">win_psrepository를 사용하여 제거 된 &lt;code&gt;win_psrepository&lt;/code&gt; 를 다시 등록 (추가) 할 수 없습니다 . 대신 &lt;code&gt;Register-PSRepository -Default&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d7b49707404a17d19923dc245fa65871dfc77fd" translate="yes" xml:space="preserve">
          <source>You can notify a handler defined inside a static include.</source>
          <target state="translated">정적 포함 내부에 정의 된 핸들러에 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88886026bd678a1851209e3cbe314633c09fee04" translate="yes" xml:space="preserve">
          <source>You can now control how errors behave in all lookup plugins by setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;ignore&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt;, or &lt;code&gt;strict&lt;/code&gt;. The default setting is &lt;code&gt;strict&lt;/code&gt;, which causes the task to fail. For example:</source>
          <target state="translated">이제 &lt;code&gt;ignore&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; 또는 &lt;code&gt;strict&lt;/code&gt; 로 &lt;code&gt;errors&lt;/code&gt; 를 설정하여 모든 조회 플러그인에서 오류의 작동 방식을 제어 할 수 있습니다 . 기본 설정은 &lt;code&gt;strict&lt;/code&gt; 이므로 작업이 실패합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6b27993a8895db7d1a375b49805f535202e9c6e" translate="yes" xml:space="preserve">
          <source>You can now target groups in playbooks! The following playbook will install a role that supplies resources for an Ansible target into all devices in the &amp;ldquo;coreos_beta&amp;rdquo; group:</source>
          <target state="translated">이제 플레이 북에서 그룹을 타겟팅 할 수 있습니다! 다음 플레이 북은 Ansible 대상에 대한 리소스를 &quot;coreos_beta&quot;그룹의 모든 장치에 제공하는 역할을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="9c2bb251659137ac5f45cc19368aef85aff8842d" translate="yes" xml:space="preserve">
          <source>You can obtain your API key from the bottom of the Cloudflare 'My Account' page, found here: &lt;a href=&quot;https://dash.cloudflare.com/&quot;&gt;https://dash.cloudflare.com/&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://dash.cloudflare.com/&quot;&gt;https://dash.cloudflare.com/&lt;/a&gt; 에있는 Cloudflare '내 계정'페이지 하단에서 API 키를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66f5cc25a1546cc1b6a570cfd2045775f86fd3a6" translate="yes" xml:space="preserve">
          <source>You can obtain your API token from the bottom of the Cloudflare 'My Account' page, found here: &lt;a href=&quot;https://dash.cloudflare.com/&quot;&gt;https://dash.cloudflare.com/&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://dash.cloudflare.com/&quot;&gt;https://dash.cloudflare.com/&lt;/a&gt; 에있는 Cloudflare '내 계정'페이지 하단에서 API 토큰을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac6b9dec1764d9449b5ed80698de730252aa8e87" translate="yes" xml:space="preserve">
          <source>You can omit the version part as long as you only have one operating system by that name.</source>
          <target state="translated">해당 이름으로 운영 체제가 하나만있는 경우 버전 부분을 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32c0428c5a500f0cbc17961a6aba94ffffbe77ad" translate="yes" xml:space="preserve">
          <source>You can only change from DHCP to static, and vSS to vDS, or vice versa, in one step, without creating a new device, with &lt;code&gt;device&lt;/code&gt; specified.</source>
          <target state="translated">한 번에 &lt;code&gt;device&lt;/code&gt; 지정된 새 장치를 만들지 않고 DHCP에서 정적으로, vSS에서 vDS로 또는 그 반대로 만 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a4bea52cdaa164fdfb0aa1f2330a7f915453155" translate="yes" xml:space="preserve">
          <source>You can only create the VMKernel adapter on a vDS if authenticated to vCenter and not if authenticated to ESXi.</source>
          <target state="translated">vCenter로 인증 된 경우 ESXi로 인증 된 경우가 아닌 vDS에서만 VMKernel 어댑터를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ce317899136b59663ef5c8f1d1bb14b95b947f4" translate="yes" xml:space="preserve">
          <source>You can only have one plugin be the main manager of your console output. If you want to replace the default, you should define CALLBACK_TYPE = stdout in the subclass and then configure the stdout plugin in &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt;. For example:</source>
          <target state="translated">콘솔 출력의 기본 관리자는 하나의 플러그인 만 가질 수 있습니다. 기본값을 바꾸려면 서브 클래스에서 CALLBACK_TYPE = stdout을 정의한 후 &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;ansible.cfg&lt;/a&gt; 에서 stdout 플러그인을 구성해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="88199c44638deaa04103d926f960c410c2047a77" translate="yes" xml:space="preserve">
          <source>You can only have one version of a collection installed at a time. By default &lt;code&gt;ansible-galaxy&lt;/code&gt; installs the latest available version. If you want to install a specific version, you can add a version range identifier. For example, to install the 1.0.0-beta.1 version of the collection:</source>
          <target state="translated">한 번에 하나의 컬렉션 버전 만 설치할 수 있습니다. 기본적으로 &lt;code&gt;ansible-galaxy&lt;/code&gt; 는 사용 가능한 최신 버전을 설치합니다. 특정 버전을 설치하려는 경우 버전 범위 식별자를 추가 할 수 있습니다. 예를 들어 컬렉션의 1.0.0-beta.1 버전을 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="bfbc61a3b83f9eb5e6eac63cfd1b032bcc8c4b55" translate="yes" xml:space="preserve">
          <source>You can only pause a service that is already started.</source>
          <target state="translated">이미 시작된 서비스 만 일시 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4fe4647bb0806cdacb99775e944dc2502ec275e" translate="yes" xml:space="preserve">
          <source>You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.</source>
          <target state="translated">표준 인스턴스에 대해서만 자동 재시작 옵션을 설정할 수 있습니다. 선점 형 인스턴스는 자동으로 다시 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c64966905849b6795eafd947bc4573fdd4256dda" translate="yes" xml:space="preserve">
          <source>You can only specify a remote array, ie you cannot unstretch a pod from the current array and then restretch back to the current array.</source>
          <target state="translated">원격 배열 만 지정할 수 있습니다. 즉, 현재 배열에서 pod를 확장 해제 한 다음 현재 배열로 다시 재개 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bbca5871696515ca84443cfe8d36098b3d6d1a9" translate="yes" xml:space="preserve">
          <source>You can only specify the forwarding rule as a partial or full URL. For example, the following are all valid URLs: &lt;a href=&quot;https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule&quot;&gt;https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule&lt;/a&gt; regions/region/forwardingRules/forwardingRule Note that this can only be used when the destinationRange is a public (non-RFC 1918) IP CIDR range.</source>
          <target state="translated">전달 규칙은 부분 또는 전체 URL로만 지정할 수 있습니다. 예를 들어 다음은 모두 유효한 URL입니다. &lt;a href=&quot;https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule&quot;&gt;https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule&lt;/a&gt; regions / region / forwardingRules / forwardingRule 이는 다음 경우에만 사용할 수 있습니다. destinationRange는 공용 (비 RFC 1918) IP CIDR 범위입니다.</target>
        </trans-unit>
        <trans-unit id="80542ee65724310cbafaafd89ee6ad105285e748" translate="yes" xml:space="preserve">
          <source>You can optionally add these settings in &lt;code&gt;.vimrc&lt;/code&gt; for all files, or just specific paths or extensions. See the &lt;code&gt;vim&lt;/code&gt; manual for details.</source>
          <target state="translated">선택적 으로 모든 파일 또는 특정 경로 또는 확장자에 대해 &lt;code&gt;.vimrc&lt;/code&gt; 에 이러한 설정을 추가 할 수 있습니다 . 자세한 내용은 &lt;code&gt;vim&lt;/code&gt; 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="67b6ff4c72bb0e18e03248e4d7b822380daac6ec" translate="yes" xml:space="preserve">
          <source>You can optionally use &lt;code&gt;./infoblox.py --list&lt;/code&gt; to test the script. After a few minutes, you should see your Infoblox inventory in JSON format. You can explicitly use the Infoblox dynamic inventory script as follows:</source>
          <target state="translated">선택적으로 &lt;code&gt;./infoblox.py --list&lt;/code&gt; 를 사용하여 스크립트를 테스트 할 수 있습니다 . 몇 분 후에 Infoblox 인벤토리가 JSON 형식으로 표시됩니다. 다음과 같이 Infoblox 동적 인벤토리 스크립트를 명시 적으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8facfbb646a163838e18bce07e77001ebbacd991" translate="yes" xml:space="preserve">
          <source>You can optionnally specify an answer to any question in the list.</source>
          <target state="translated">선택적으로 목록의 질문에 대한 답변을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f443d0fa82e56f9ca9735f706085b57194234ae0" translate="yes" xml:space="preserve">
          <source>You can override all other settings from all other sources in all other precedence categories at the command line by &lt;a href=&quot;#general-precedence-extra-vars&quot;&gt;Using -e extra variables at the command line&lt;/a&gt;, but that is not a command-line option, it is a way of passing a &lt;a href=&quot;#general-precedence-variables&quot;&gt;variable&lt;/a&gt;.</source>
          <target state="translated">명령 행에서 &lt;a href=&quot;#general-precedence-extra-vars&quot;&gt;-e 추가 변수를 사용하여&lt;/a&gt; 명령 행에서 다른 모든 우선 순위 카테고리에있는 다른 모든 소스의 다른 모든 설정을 대체 할 수 있지만 명령 행 옵션이 아니라 &lt;a href=&quot;#general-precedence-variables&quot;&gt;변수&lt;/a&gt; 를 전달하는 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="32620d406bc2e66269f5d9f246168a4dd9665552" translate="yes" xml:space="preserve">
          <source>You can override the default remote user name in several ways, including:</source>
          <target state="translated">다음과 같은 여러 가지 방법으로 기본 원격 사용자 이름을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c98eda0613c16ba0e91e4825d4ed3fc3c5d774a2" translate="yes" xml:space="preserve">
          <source>You can override the default remote user name in several ways, including: * passing the &lt;code&gt;-u&lt;/code&gt; parameter at the command line * setting user information in your inventory file * setting user information in your configuration file * setting environment variables</source>
          <target state="translated">다음을 포함하여 여러 가지 방법으로 기본 원격 사용자 이름을 대체 할 수 있습니다. * 명령 행에서 &lt;code&gt;-u&lt;/code&gt; 매개 변수 전달 * 인벤토리 파일에서 사용자 정보 설정 * 구성 파일에서 사용자 정보 설정 * 환경 변수 설정</target>
        </trans-unit>
        <trans-unit id="72b5ceb20f3675d8025fc52528a1cff8c187a746" translate="yes" xml:space="preserve">
          <source>You can override this with one of the following options:</source>
          <target state="translated">다음 옵션 중 하나로이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0d3f4ad15393717ff28d96a83ff32ee0b471b52" translate="yes" xml:space="preserve">
          <source>You can pass a list directly to a parameter for some plugins. Most of the packaging modules, like &lt;a href=&quot;../collections/ansible/builtin/yum_module#yum-module&quot;&gt;yum&lt;/a&gt; and &lt;a href=&quot;../collections/ansible/builtin/apt_module#apt-module&quot;&gt;apt&lt;/a&gt;, have this capability. When available, passing the list to a parameter is better than looping over the task. For example:</source>
          <target state="translated">일부 플러그인의 경우 매개 변수에 목록을 직접 전달할 수 있습니다. &lt;a href=&quot;../collections/ansible/builtin/yum_module#yum-module&quot;&gt;yum&lt;/a&gt; 및 &lt;a href=&quot;../collections/ansible/builtin/apt_module#apt-module&quot;&gt;apt&lt;/a&gt; 와 같은 대부분의 패키징 모듈 에는이 기능이 있습니다. 가능한 경우 목록을 매개 변수에 전달하는 것이 태스크를 반복하는 것보다 낫습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="3c696915f23430a3cc655e0164f983c4a0142122" translate="yes" xml:space="preserve">
          <source>You can pass a list directly to a parameter for some plugins. Most of the packaging modules, like &lt;a href=&quot;../modules/yum_module#yum-module&quot;&gt;yum &amp;ndash; Manages packages with the yum package manager&lt;/a&gt; and &lt;a href=&quot;../modules/apt_module#apt-module&quot;&gt;apt &amp;ndash; Manages apt-packages&lt;/a&gt;, have this capability. When available, passing the list to a parameter is better than looping over the task. For example:</source>
          <target state="translated">일부 플러그인의 매개 변수에 직접 목록을 전달할 수 있습니다. &lt;a href=&quot;../modules/yum_module#yum-module&quot;&gt;yum &amp;ndash; yum 패키지 관리자를 사용하여 패키지를 관리&lt;/a&gt; 하고 &lt;a href=&quot;../modules/apt_module#apt-module&quot;&gt;apt &amp;ndash; apt-package를 관리&lt;/a&gt; 하는 대부분의 패키징 모듈 에는이 기능이 있습니다. 가능한 경우 목록을 매개 변수에 전달하는 것이 작업을 반복하는 것보다 낫습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1b7ea2ae909b4657381f6002c4f62daf3094132f" translate="yes" xml:space="preserve">
          <source>You can pass credentials and the endpoint of your cloud as module arguments, however in most cases it is a far less work to store your credentials in the cloudstack.ini file.</source>
          <target state="translated">자격 증명과 클라우드의 끝점을 모듈 인수로 전달할 수 있지만 대부분의 경우 자격 증명을 cloudstack.ini 파일에 저장하는 것이 훨씬 덜합니다.</target>
        </trans-unit>
        <trans-unit id="df22d3abc1686a4c2d0450ed0a63ef0fd4265901" translate="yes" xml:space="preserve">
          <source>You can pass different parameters in each role definition as:</source>
          <target state="translated">각 역할 정의에서 다음과 같이 다른 매개 변수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="019729b1488865c410ea7d38f602f929e0f569c3" translate="yes" xml:space="preserve">
          <source>You can pass other keywords to the &lt;code&gt;roles&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;roles&lt;/code&gt; 옵션에 다른 키워드를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d2e117599aea9f8be973a8f03ab22c951ae67e3" translate="yes" xml:space="preserve">
          <source>You can pass other keywords, including variables and tags, when importing roles:</source>
          <target state="translated">역할을 가져올 때 변수 및 태그를 포함한 다른 키워드를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f11fd4ecd709cd554166505eb00a3ed42846e33" translate="yes" xml:space="preserve">
          <source>You can pass other keywords, including variables and tags, when including roles:</source>
          <target state="translated">역할을 포함 할 때 변수 및 태그를 포함한 다른 키워드를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ece63e386ff6044ea5c404fe8b1a5c47298a7a3d" translate="yes" xml:space="preserve">
          <source>You can pass variables into includes. See &lt;a href=&quot;playbooks_variables#ansible-variable-precedence&quot;&gt;Variable precedence: Where should I put a variable?&lt;/a&gt; for more details on variable inheritance and precedence.</source>
          <target state="translated">포함에 변수를 전달할 수 있습니다. &lt;a href=&quot;playbooks_variables#ansible-variable-precedence&quot;&gt;변수 우선 순위 : 변수를 어디에 넣어야합니까?를&lt;/a&gt; 참조하십시오 . 변수 상속 및 우선 순위에 대한 자세한 내용은</target>
        </trans-unit>
        <trans-unit id="f3dbcc4679c39231dd72b7da6fd36e70ee3a1c93" translate="yes" xml:space="preserve">
          <source>You can pass variables to imports. You must pass variables if you want to run an imported file more than once in a playbook. For example:</source>
          <target state="translated">가져 오기에 변수를 전달할 수 있습니다. 플레이 북에서 가져온 파일을 두 번 이상 실행하려면 변수를 전달해야합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="854178d5cd2548071c5558f75f885856bfe0865e" translate="yes" xml:space="preserve">
          <source>You can pass wantlist=True to lookups to use in jinja2 template &amp;ldquo;for&amp;rdquo; loops.</source>
          <target state="translated">jinja2 템플릿&amp;ldquo;for&amp;rdquo;루프에서 사용할 looklists에 wantlist = True를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14633bfc11094e454e978e09f0fb3bb0b88fbce6" translate="yes" xml:space="preserve">
          <source>You can perform cleanup tasks only when a filesystem is getting full.</source>
          <target state="translated">파일 시스템이 가득 찬 경우에만 정리 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fd8e303a38606f06f69fbcd5280e0727b4b0a2d" translate="yes" xml:space="preserve">
          <source>You can populate variables using lookups. Ansible evaluates the value each time it is executed in a task (or template):</source>
          <target state="translated">조회를 사용하여 변수를 채울 수 있습니다. Ansible은 작업 (또는 템플릿)에서 실행될 때마다 값을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="c9a0c748ef2dc4255d38b71d8625e8f26f1b8b19" translate="yes" xml:space="preserve">
          <source>You can provide a list containing items with or without answer.</source>
          <target state="translated">답변이 있거나없는 항목이 포함 된 목록을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17b7929d912d05cdab805531beb74b92ef05418c" translate="yes" xml:space="preserve">
          <source>You can provide a single argument to each &lt;code&gt;ipaddr()&lt;/code&gt; filter. The filter will then treat it as a query and return values modified by that query. Lists will contain only values that you are querying for.</source>
          <target state="translated">각 &lt;code&gt;ipaddr()&lt;/code&gt; 필터에 단일 인수를 제공 할 수 있습니다 . 그런 다음 필터는 필터를 쿼리로 취급하고 해당 쿼리에 의해 수정 된 값을 반환합니다. 목록에는 쿼리하려는 값만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="70032bc98277152dd693bb99128421895b9cab39" translate="yes" xml:space="preserve">
          <source>You can provide default values for variables directly in your templates using the Jinja2 &amp;lsquo;default&amp;rsquo; filter. This is often a better approach than failing if a variable is not defined:</source>
          <target state="translated">Jinja2 'default'필터를 사용하여 템플릿에서 직접 변수에 대한 기본값을 제공 할 수 있습니다. 이것은 변수가 정의되지 않은 경우 실패하는 것보다 더 나은 접근 방식입니다.</target>
        </trans-unit>
        <trans-unit id="312c9474946a937144d9726f65749b173af737a2" translate="yes" xml:space="preserve">
          <source>You can provide your own facts, as described in &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/developing_modules.html#developing-modules&quot;&gt;Should you develop a module?&lt;/a&gt;. To run them, just make a call to your own custom fact gathering module at the top of your list of tasks, and variables returned there will be accessible to future tasks:</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/developing_modules.html#developing-modules&quot;&gt;모듈을 개발해야합니까?에&lt;/a&gt; 설명 된대로 자신의 사실을 제공 할 수 있습니다 . . 이를 실행하려면 작업 목록 맨 위에있는 사용자 지정 팩트 수집 모듈을 호출하면됩니다. 그러면 여기에서 반환 된 변수를 향후 작업에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfd2cebb0e1844d3834fbfcc5fe8e2c4c9f1ddac" translate="yes" xml:space="preserve">
          <source>You can re-use environment settings by defining them as variables in your play and accessing them in a task as you would access any stored Ansible variable:</source>
          <target state="translated">환경 설정을 플레이에서 변수로 정의하고 저장된 Ansible 변수에 액세스하는 것처럼 작업에서 액세스하여 환경 설정을 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15b76c3ee954efeef78192567df296d37ae40411" translate="yes" xml:space="preserve">
          <source>You can read more about privilege escalation in &lt;a href=&quot;become#become&quot;&gt;Understanding privilege escalation: become&lt;/a&gt;.</source>
          <target state="translated">권한 에스컬레이션에 &lt;a href=&quot;become#become&quot;&gt;대한&lt;/a&gt; 자세한 내용은 권한 에스컬레이션 이해 :를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a64ecac52a251056338f7bdd955c1260e0e9d2b" translate="yes" xml:space="preserve">
          <source>You can read more about the inventory file at &lt;a href=&quot;../user_guide/intro_inventory#inventory&quot;&gt;How to build your inventory&lt;/a&gt;.</source>
          <target state="translated">인벤토리 파일에 대한 자세한 내용은 인벤토리 &lt;a href=&quot;../user_guide/intro_inventory#inventory&quot;&gt;구축 방법에서 확인할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30fe0926df38091b2dfdf4d10b496691b30b0058" translate="yes" xml:space="preserve">
          <source>You can read more about the inventory file in later parts of the manual.</source>
          <target state="translated">설명서의 뒷부분에서 인벤토리 파일에 대한 자세한 내용을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b45b64ea168fa1560366f1775e448c6d58aa523" translate="yes" xml:space="preserve">
          <source>You can refer to the &lt;a href=&quot;../porting_guides/porting_guides#porting-guides&quot;&gt;porting guides&lt;/a&gt; for tips on updating your Ansible playbooks to run on newer versions.</source>
          <target state="translated">최신 버전에서 실행되도록 Ansible 플레이 북 업데이트에 대한 팁 은 &lt;a href=&quot;../porting_guides/porting_guides#porting-guides&quot;&gt;포팅 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8cf0bd95bf832f2f4c5698faee46a0f0adcfb99" translate="yes" xml:space="preserve">
          <source>You can reference the model of the first disk in the facts shown above in a template or playbook as:</source>
          <target state="translated">템플릿 또는 플레이 북에서 위에 표시된 사실에서 첫 번째 디스크의 모델을 다음과 같이 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbe686e206f25048e42aa13f1be5a1c25c536453" translate="yes" xml:space="preserve">
          <source>You can register the output of a loop as a variable. For example:</source>
          <target state="translated">루프의 출력을 변수로 등록 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ea8a4c37e1f5b3cfa16a78b3a8f9ad83922684b7" translate="yes" xml:space="preserve">
          <source>You can remove a description by either specifying an empty string, or by specifying the special value &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">빈 문자열을 지정하거나 특수 값 &lt;code&gt;none&lt;/code&gt; 을 지정하여 설명을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28691272c6c06bf07935f504fa41b8ed4279f18e" translate="yes" xml:space="preserve">
          <source>You can remove all allowed addresses by either providing the word &lt;code&gt;none&lt;/code&gt;, or by providing the empty string &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 단어 를 제공하거나 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 을 제공하여 허용 된 모든 주소를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="840b663abd4f6bd0b3d4b1249b53d799428ed0bc" translate="yes" xml:space="preserve">
          <source>You can remove any previously established defaults for a module by specifying an empty dict:</source>
          <target state="translated">빈 dict를 지정하여 모듈에 대해 이전에 설정 한 기본값을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8e54e17033faa23da12b60f4f8773ef945314cb" translate="yes" xml:space="preserve">
          <source>You can replace these platform-specific modules with the network agnostic &lt;code&gt;ansible.netcommon.cli_command&lt;/code&gt; module as follows:</source>
          <target state="translated">다음과 같이 이러한 플랫폼 별 모듈을 네트워크에 구애받지 않는 &lt;code&gt;ansible.netcommon.cli_command&lt;/code&gt; 모듈로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7e50f1295358ea732b3920a16781dca49fb14b0" translate="yes" xml:space="preserve">
          <source>You can replace these platform-specific modules with the network agnostic &lt;code&gt;cli_command&lt;/code&gt; module as follows:</source>
          <target state="translated">다음과 같이 이러한 플랫폼 별 모듈을 네트워크 독립적 &lt;code&gt;cli_command&lt;/code&gt; 모듈로 교체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b12d87f0a1298adeda28d498531a7a636ffdf7dc" translate="yes" xml:space="preserve">
          <source>You can replace this list with your own selection by configuring an &lt;code&gt;inventory_ignore_extensions&lt;/code&gt; list in &lt;code&gt;ansible.cfg&lt;/code&gt;, or setting the &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY_IGNORE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY_IGNORE&lt;/code&gt;&lt;/a&gt; environment variable. The value in either case must be a comma-separated list of patterns, as shown above.</source>
          <target state="translated">&lt;code&gt;ansible.cfg&lt;/code&gt; 에서 &lt;code&gt;inventory_ignore_extensions&lt;/code&gt; 목록 을 구성 하거나 &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY_IGNORE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;ANSIBLE_INVENTORY_IGNORE&lt;/code&gt; &lt;/a&gt; 환경 변수를 설정 하여이 목록을 사용자가 선택한 목록으로 바꿀 수 있습니다 . 두 경우 모두 값은 위에 표시된대로 쉼표로 구분 된 패턴 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e4b8999ddfb0300f2c8848453ff60e291132f1bd" translate="yes" xml:space="preserve">
          <source>You can replace this list with your own selection by configuring an &lt;code&gt;inventory_ignore_extensions&lt;/code&gt; list in ansible.cfg, or setting the &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY_IGNORE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY_IGNORE&lt;/code&gt;&lt;/a&gt; environment variable. The value in either case should be a comma-separated list of patterns, as shown above.</source>
          <target state="translated">ansible.cfg에서 &lt;code&gt;inventory_ignore_extensions&lt;/code&gt; 목록 을 구성 하거나 &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY_IGNORE&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;ANSIBLE_INVENTORY_IGNORE&lt;/code&gt; &lt;/a&gt; 환경 변수를 설정 하여이 목록을 사용자가 선택한 항목으로 바꿀 수 있습니다 . 두 경우 모두 위와 같이 쉼표로 구분 된 패턴 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="db08807bfd277cf9971af24605fcd54818655cbe" translate="yes" xml:space="preserve">
          <source>You can retrieve most of the example playbooks used in this guide from the &lt;a href=&quot;https://github.com/network-automation/infoblox_ansible&quot;&gt;network-automation/infoblox_ansible&lt;/a&gt; GitHub repository.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/network-automation/infoblox_ansible&quot;&gt;network-automation / infoblox_ansible&lt;/a&gt; GitHub 리포지토리 에서이 가이드에 사용 된 대부분의 예제 플레이 북을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09b2d5aae6fa1b4c06a99d88807272db1e0cae40" translate="yes" xml:space="preserve">
          <source>You can reuse roles dynamically anywhere in the &lt;code&gt;tasks&lt;/code&gt; section of a play using &lt;code&gt;include_role&lt;/code&gt;. While roles added in a &lt;code&gt;roles&lt;/code&gt; section run before any other tasks in a playbook, included roles run in the order they are defined. If there are other tasks before an &lt;code&gt;include_role&lt;/code&gt; task, the other tasks will run first.</source>
          <target state="translated">&lt;code&gt;include_role&lt;/code&gt; 을 사용하여 연극 의 &lt;code&gt;tasks&lt;/code&gt; 섹션 에서 역할을 동적으로 재사용 할 수 있습니다 . &lt;code&gt;roles&lt;/code&gt; 섹션에 추가 된 역할 은 플레이 북의 다른 작업보다 먼저 실행되지만 포함 된 역할은 정의 된 순서대로 실행됩니다. &lt;code&gt;include_role&lt;/code&gt; 작업 전에 다른 작업이 있으면 다른 작업이 먼저 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="95d47c0b89494e37cbdedd36e1d8bfd5a38b5ee8" translate="yes" xml:space="preserve">
          <source>You can reuse roles statically anywhere in the &lt;code&gt;tasks&lt;/code&gt; section of a play using &lt;code&gt;import_role&lt;/code&gt;. The behavior is the same as using the &lt;code&gt;roles&lt;/code&gt; keyword. For example:</source>
          <target state="translated">&lt;code&gt;import_role&lt;/code&gt; 을 사용하여 연극 의 &lt;code&gt;tasks&lt;/code&gt; 섹션 에서 역할을 정적으로 재사용 할 수 있습니다 . 동작은 &lt;code&gt;roles&lt;/code&gt; 키워드 를 사용하는 것과 동일 합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="a0b341fe85b45af1888635d94fc2a1059f9edc87" translate="yes" xml:space="preserve">
          <source>You can review simple example tasks in the documentation for any of the &lt;a href=&quot;../modules/list_of_net_tools_modules#nios-net-tools-modules&quot;&gt;NIOS modules&lt;/a&gt; or look at the &lt;a href=&quot;#use-cases-with-modules&quot;&gt;Use cases with modules&lt;/a&gt; section for more elaborate examples. See the &lt;a href=&quot;https://www.infoblox.com/&quot;&gt;Infoblox&lt;/a&gt; website for more information on the Infoblox product.</source>
          <target state="translated">&lt;a href=&quot;../modules/list_of_net_tools_modules#nios-net-tools-modules&quot;&gt;NIOS 모듈&lt;/a&gt; 에 대한 문서에서 간단한 예제 태스크를 검토 하거나 보다 자세한 예제 &lt;a href=&quot;#use-cases-with-modules&quot;&gt;는 모듈이&lt;/a&gt; 있는 사용 사례 섹션을 참조하십시오. Infoblox 제품에 대한 자세한 정보 는 &lt;a href=&quot;https://www.infoblox.com/&quot;&gt;Infoblox&lt;/a&gt; 웹 사이트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="951af07d8245f606df1bc0a755486d51138850cd" translate="yes" xml:space="preserve">
          <source>You can review simple example tasks in the documentation for any of the &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/modules/list_of_net_tools_modules.html#nios-net-tools-modules&quot;&gt;NIOS modules&lt;/a&gt; or look at the &lt;a href=&quot;#use-cases-with-modules&quot;&gt;Use cases with modules&lt;/a&gt; section for more elaborate examples. See the &lt;a href=&quot;https://www.infoblox.com/&quot;&gt;Infoblox&lt;/a&gt; website for more information on the Infoblox product.</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/2.9/modules/list_of_net_tools_modules.html#nios-net-tools-modules&quot;&gt;NIOS 모듈&lt;/a&gt; 에 대한 문서에서 간단한 예제 태스크를 검토 하거나 더 정교한 예제를 보려면 &lt;a href=&quot;#use-cases-with-modules&quot;&gt;모듈이&lt;/a&gt; 있는 사용 사례 섹션을 참조하십시오. Infoblox 제품에 대한 자세한 정보 는 &lt;a href=&quot;https://www.infoblox.com/&quot;&gt;Infoblox&lt;/a&gt; 웹 사이트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0d53e61e58fda26c0b4178724778dc7fea5deab7" translate="yes" xml:space="preserve">
          <source>You can run commands against the control node by using &amp;ldquo;localhost&amp;rdquo; or &amp;ldquo;127.0.0.1&amp;rdquo; for the server name:</source>
          <target state="translated">서버 이름으로 &quot;localhost&quot;또는 &quot;127.0.0.1&quot;을 사용하여 제어 노드에 대해 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72f355f3f2b81549e72239349887b2bed669a16" translate="yes" xml:space="preserve">
          <source>You can run long-running operations in the background and check their status later. For example, to execute &lt;code&gt;long_running_operation&lt;/code&gt; asynchronously in the background, with a timeout of 3600 seconds (&lt;code&gt;-B&lt;/code&gt;), and without polling (&lt;code&gt;-P&lt;/code&gt;):</source>
          <target state="translated">백그라운드에서 장기 실행 작업을 실행하고 나중에 상태를 확인할 수 있습니다. 예를 들어, 백그라운드에서 시간 초과가 3600 초 ( &lt;code&gt;-B&lt;/code&gt; )이고 폴링 ( &lt;code&gt;-P&lt;/code&gt; ) 없이 &lt;code&gt;long_running_operation&lt;/code&gt; 을 비동기 적 으로 실행하려면 다음 을 수행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f507cdde95ce535e768ba0b91be9288dba29017c" translate="yes" xml:space="preserve">
          <source>You can run playbooks that use this on a local machine, or on a Webfaction host, or elsewhere, since the scripts use the remote webfaction API. The location is not important. However, running them on multiple hosts &lt;em&gt;simultaneously&lt;/em&gt; is best avoided. If you don&amp;rsquo;t specify &lt;em&gt;localhost&lt;/em&gt; as your host, you may want to add &lt;code&gt;serial: 1&lt;/code&gt; to the plays.</source>
          <target state="translated">스크립트가 원격 webfaction API를 사용하기 때문에 로컬 컴퓨터 나 Webfaction 호스트 또는 다른 곳에서 이것을 사용하는 플레이 북을 실행할 수 있습니다. 위치는 중요하지 않습니다. 그러나 여러 호스트에서 &lt;em&gt;동시에&lt;/em&gt; 실행 하지 않는 것이 가장 좋습니다. &lt;em&gt;localhost&lt;/em&gt; 를 호스트로 지정하지 않으면 &lt;code&gt;serial: 1&lt;/code&gt; 을 재생 에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50dc2621b2bb88093fb4c9a875aa3bb7fd51e787" translate="yes" xml:space="preserve">
          <source>You can run the script interactively from the command line or pass it as the inventory to a playbook. Here are few examples to get you started:</source>
          <target state="translated">명령 줄에서 대화 형으로 스크립트를 실행하거나 인벤토리로 플레이 북에 전달할 수 있습니다. 다음은 시작하기위한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="92fd8090a5808ec1d19ab3aac05a756119c6f35d" translate="yes" xml:space="preserve">
          <source>You can run these modules against another server that would then connect to the API if localhost does not have access to vCenter. If so, the required Python modules will need to be installed on that target server. We recommend installing the latest version with pip: &lt;code&gt;pip install Pyvmomi&lt;/code&gt; (as the OS packages are usually out of date and incompatible).</source>
          <target state="translated">localhost가 vCenter에 액세스 할 수없는 경우 다른 서버에 대해 이러한 모듈을 실행 한 다음 API에 연결할 수 있습니다. 그렇다면 필요한 Python 모듈을 해당 대상 서버에 설치해야합니다. pip를 사용하여 최신 버전을 설치하는 것이 좋습니다. &lt;code&gt;pip install Pyvmomi&lt;/code&gt; (OS 패키지는 일반적으로 최신 버전이 아니며 호환되지 않으므로).</target>
        </trans-unit>
        <trans-unit id="7f3c3026f18c191e155ed8249096789132bdf679" translate="yes" xml:space="preserve">
          <source>You can search for the minimum or maximum value in a list, or flatten a multi-level list.</source>
          <target state="translated">목록에서 최소값 또는 최대 값을 검색하거나 다단계 목록을 병합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45d95e68512c98e738d984f393de896f831e5a70" translate="yes" xml:space="preserve">
          <source>You can see a full example of this using group_vars and also a configuration backup example at &lt;a href=&quot;https://github.com/network-automation/agnostic_example&quot;&gt;Network agnostic examples&lt;/a&gt;.</source>
          <target state="translated">group_vars를 사용하여 이에 대한 전체 예제와 &lt;a href=&quot;https://github.com/network-automation/agnostic_example&quot;&gt;Network agnostic examples&lt;/a&gt; 에서 구성 백업 예제를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2684f0d182bc0fa2cf457271d1aa8c90db37dd0a" translate="yes" xml:space="preserve">
          <source>You can see that &lt;code&gt;one.example.com&lt;/code&gt; exists in the &lt;code&gt;dbservers&lt;/code&gt;, &lt;code&gt;east&lt;/code&gt;, and &lt;code&gt;prod&lt;/code&gt; groups.</source>
          <target state="translated">당신은 것을 볼 수 있습니다 &lt;code&gt;one.example.com&lt;/code&gt; 이 에 존재 &lt;code&gt;dbservers&lt;/code&gt; , &lt;code&gt;east&lt;/code&gt; , 그리고 &lt;code&gt;prod&lt;/code&gt; 그룹.</target>
        </trans-unit>
        <trans-unit id="58ab6fbaff08608b45f4915e83bf71c91372a980" translate="yes" xml:space="preserve">
          <source>You can see that the variable substitution syntax of {{ and }} is the same for both templates and variables. The syntax inside the curly braces is Jinja2, and you can do all sorts of operations and apply different filters to the data inside. In templates, you can also use for loops and if statements to handle more complex situations, like this, in &lt;code&gt;roles/common/templates/iptables.j2&lt;/code&gt;:</source>
          <target state="translated">{{및}}의 변수 대체 구문이 템플리트 및 변수 모두에서 동일하다는 것을 알 수 있습니다. 중괄호 안의 구문은 Jinja2이며 모든 종류의 작업을 수행하고 내부 데이터에 다른 필터를 적용 할 수 있습니다. 템플리트에서 &lt;code&gt;roles/common/templates/iptables.j2&lt;/code&gt; 에서 for 루프 및 if 문을 사용하여 이와 같이보다 복잡한 상황을 처리 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="790c0b9fedc6c9d2dfa498e9ed1b01ce1368ba38" translate="yes" xml:space="preserve">
          <source>You can see which tags are applied to tasks, roles, and static imports by running &lt;code&gt;ansible-playbook&lt;/code&gt; with the &lt;code&gt;--list-tasks&lt;/code&gt; option. You can display all tags available with the &lt;code&gt;--list-tags&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--list-tasks&lt;/code&gt; 옵션으로 &lt;code&gt;ansible-playbook&lt;/code&gt; 을 실행하여 작업, 역할 및 정적 가져 오기에 적용되는 태그를 확인할 수 있습니다 . &lt;code&gt;--list-tags&lt;/code&gt; 옵션으로 사용 가능한 모든 태그를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd133dd6d432bd7ec3f27c75ddc8c078ea262fd1" translate="yes" xml:space="preserve">
          <source>You can see which tasks will be executed with &lt;code&gt;--tags&lt;/code&gt; or &lt;code&gt;--skip-tags&lt;/code&gt; by combining it with &lt;code&gt;--list-tasks&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--list-tasks&lt;/code&gt; 와 결합 하여 &lt;code&gt;--tags&lt;/code&gt; 또는 &lt;code&gt;--skip-tags&lt;/code&gt; 로 실행할 작업을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbb4889b92ec4ae2971a4de7e0f4c2c72fb1d78b" translate="yes" xml:space="preserve">
          <source>You can select a different strategy for each play as shown above, or set your preferred strategy globally in &lt;code&gt;ansible.cfg&lt;/code&gt;, under the &lt;code&gt;defaults&lt;/code&gt; stanza:</source>
          <target state="translated">위에 표시된대로 각 플레이에 대해 다른 전략을 선택하거나 &lt;code&gt;defaults&lt;/code&gt; 스탠자 아래 &lt;code&gt;ansible.cfg&lt;/code&gt; 에서 전역 적으로 선호하는 전략을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d85bd0fad0595c998d3f716b6c9d90357bb6d1c" translate="yes" xml:space="preserve">
          <source>You can select or combine items from sets or lists.</source>
          <target state="translated">세트 또는 목록에서 항목을 선택하거나 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80efa974de1d6a903e89e76ae8f6cb9c39b24f4f" translate="yes" xml:space="preserve">
          <source>You can set multiple variables with the same name in many different places. When you do this, Ansible loads every possible variable it finds, then chooses the variable to apply based on variable precedence. In other words, the different variables will override each other in a certain order.</source>
          <target state="translated">여러 위치에서 동일한 이름으로 여러 변수를 설정할 수 있습니다. 이렇게하면 Ansible은 찾은 가능한 모든 변수를로드 한 다음 변수 우선 순위에 따라 적용 할 변수를 선택합니다. 즉, 서로 다른 변수가 특정 순서로 서로를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="295b4c2d9402c10b5f6fa4021c4657ff782fd28c" translate="yes" xml:space="preserve">
          <source>You can set the connection plugin globally via &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt;, at the command line (&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--connection&lt;/code&gt;), as a &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;keyword&lt;/a&gt; in your play, or by setting a &lt;a href=&quot;../user_guide/intro_inventory#behavioral-parameters&quot;&gt;variable&lt;/a&gt;, most often in your inventory. For example, for Windows machines you might want to set the &lt;a href=&quot;../collections/ansible/builtin/winrm_connection#winrm-connection&quot;&gt;winrm&lt;/a&gt; plugin as an inventory variable.</source>
          <target state="translated">&lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt; , 명령 줄 ( &lt;code&gt;-c&lt;/code&gt; , &lt;code&gt;--connection&lt;/code&gt; )에서, 플레이 의 &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;키워드&lt;/a&gt; 로 또는 대부분 인벤토리에서 &lt;a href=&quot;../user_guide/intro_inventory#behavioral-parameters&quot;&gt;변수&lt;/a&gt; 를 설정하여 전역 적으로 연결 플러그인을 설정할 수 있습니다 . 예를 들어 Windows 시스템의 경우 &lt;a href=&quot;../collections/ansible/builtin/winrm_connection#winrm-connection&quot;&gt;winrm&lt;/a&gt; 플러그인을 인벤토리 변수로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f00b08facc04a6b8aead1514cf7b3712fc9c793c" translate="yes" xml:space="preserve">
          <source>You can set the connection plugin globally via &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt;, at the command line (&lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;--connection&lt;/code&gt;), as a &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;keyword&lt;/a&gt; in your play, or by setting a &lt;a href=&quot;../user_guide/intro_inventory#behavioral-parameters&quot;&gt;variable&lt;/a&gt;, most often in your inventory. For example, for Windows machines you might want to set the &lt;a href=&quot;connection/winrm#winrm-connection&quot;&gt;winrm&lt;/a&gt; plugin as an inventory variable.</source>
          <target state="translated">&lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;구성&lt;/a&gt; , 명령 줄 ( &lt;code&gt;-c&lt;/code&gt; , &lt;code&gt;--connection&lt;/code&gt; ) 을 통해 플레이에서 &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;키워드&lt;/a&gt; 로 연결 플러그인을 전역 적으로 설정하거나 가장 자주 인벤토리에서 &lt;a href=&quot;../user_guide/intro_inventory#behavioral-parameters&quot;&gt;변수를&lt;/a&gt; 설정하여 연결 플러그인을 설정할 수 있습니다 . 예를 들어, Windows 시스템의 경우 &lt;a href=&quot;connection/winrm#winrm-connection&quot;&gt;winrm&lt;/a&gt; 플러그인을 인벤토리 변수로 설정하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf46aef1457f496724a593452003c1bc4e1ece40" translate="yes" xml:space="preserve">
          <source>You can set the default inventory path (via &lt;code&gt;inventory&lt;/code&gt; in the &lt;code&gt;ansible.cfg&lt;/code&gt; [defaults] section or the &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt;&lt;/a&gt; environment variable) to your inventory source(s). Now running &lt;code&gt;ansible-inventory --graph&lt;/code&gt; should yield the same output as when you passed your YAML configuration source(s) directly. You can add custom inventory plugins to your plugin path to use in the same way.</source>
          <target state="translated">&lt;code&gt;ansible.cfg&lt;/code&gt; 의 &lt;code&gt;inventory&lt;/code&gt; 를 통해 기본 인벤토리 경로를 설정할 수 있습니다. [기본 설정] 섹션 또는 &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt; 의&lt;/a&gt; 인벤토리 소스 (들) 환경 변수). 이제 &lt;code&gt;ansible-inventory --graph&lt;/code&gt; 를 실행 하면 YAML 구성 소스를 직접 전달했을 때와 동일한 결과가 산출됩니다. 플러그인 경로에 맞춤 인벤토리 플러그인을 추가하여 동일한 방식으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a7014764b7fcd2aad3ccecdb399238029fe2a31" translate="yes" xml:space="preserve">
          <source>You can set the directives that control &lt;code&gt;become&lt;/code&gt; at the play or task level. You can override these by setting connection variables, which often differ from one host to another. These variables and directives are independent. For example, setting &lt;code&gt;become_user&lt;/code&gt; does not set &lt;code&gt;become&lt;/code&gt;.</source>
          <target state="translated">제어 &lt;code&gt;become&lt;/code&gt; 되는 지시문을 설정할 수 있습니다 재생 또는 작업 수준 . 호스트마다 다른 연결 변수를 설정하여이를 대체 할 수 있습니다. 이러한 변수와 지시문은 독립적입니다. 예를 들어, 설정 &lt;code&gt;become_user&lt;/code&gt; 는 설정하지 않습니다 &lt;code&gt;become&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77f40ba7af04f8f906fd4f00781ab0950eafcdd" translate="yes" xml:space="preserve">
          <source>You can set the environment directly at the task level:</source>
          <target state="translated">작업 수준에서 직접 환경을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7b2f61c2d89e65d5e2e9b13163ca3866239fd7c" translate="yes" xml:space="preserve">
          <source>You can set the following &lt;code&gt;vim&lt;/code&gt; options in command mode to avoid cases of disclosure. There may be more settings you need to modify to ensure security, especially when using plugins, so consult the &lt;code&gt;vim&lt;/code&gt; documentation.</source>
          <target state="translated">명령 모드에서 다음 &lt;code&gt;vim&lt;/code&gt; 옵션을 설정하여 공개 사례를 방지 할 수 있습니다 . 특히 플러그인을 사용할 때 보안을 보장하기 위해 수정해야하는 설정이 더있을 수 있으므로 &lt;code&gt;vim&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd1eb08b35527370bf2039d4a8968d823d351209" translate="yes" xml:space="preserve">
          <source>You can set the following Emacs options to avoid cases of disclosure. There may be more settings you need to modify to ensure security, especially when using plugins, so consult the Emacs documentation.</source>
          <target state="translated">공개 사례를 피하기 위해 다음 Emacs 옵션을 설정할 수 있습니다. 특히 플러그인을 사용할 때 보안을 보장하기 위해 수정해야하는 설정이 더있을 수 있으므로 Emacs 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e46e19782b8694796754aa1201e532c37c3ce9b7" translate="yes" xml:space="preserve">
          <source>You can set the remote environment at the play level:</source>
          <target state="translated">플레이 레벨에서 원격 환경을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e2caf97b50b2ccf63c7baf95bccc28c075984b" translate="yes" xml:space="preserve">
          <source>You can set this option to False in the inventory config file which will allow 403 errors to be gracefully skipped.</source>
          <target state="translated">인벤토리 구성 파일에서이 옵션을 False로 설정하면 403 오류를 정상적으로 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06b0beb8495b2a4ef7d37100d42e596cbfe8eea8" translate="yes" xml:space="preserve">
          <source>You can set user rights for both local and domain accounts.</source>
          <target state="translated">로컬 계정과 도메인 계정 모두에 대한 사용자 권한을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79f023081cd401d8ba52a177926d6beee94f63d6" translate="yes" xml:space="preserve">
          <source>You can set/remove password only if a VTP domain already exist.</source>
          <target state="translated">VTP 도메인이 이미 존재하는 경우에만 비밀번호를 설정 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86951bcef1a9acc2baec735d9e7445c0f4e0d16a" translate="yes" xml:space="preserve">
          <source>You can skip category name if you have unique tag names.</source>
          <target state="translated">고유 한 태그 이름이있는 경우 카테고리 이름을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31aab4672927482f420488535dc4950e5590edf4" translate="yes" xml:space="preserve">
          <source>You can skip configuring a firewall on hosts with internal IP addresses.</source>
          <target state="translated">내부 IP 주소가있는 호스트에서 방화벽 구성을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7278596c4a253acd975c809baff3274aba341cde" translate="yes" xml:space="preserve">
          <source>You can specify a function name (for example, Thumbnail ) or you can specify Amazon Resource Name (ARN) of the</source>
          <target state="translated">함수 이름 (예 : Thumbnail)을 지정하거나 시스템 이름의 Amazon 리소스 이름 (ARN)을 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="946cd94868b1a2fa5722397b2f0dbf51e415a312" translate="yes" xml:space="preserve">
          <source>You can specify a list of values to include a larger subset.</source>
          <target state="translated">더 큰 하위 집합을 포함하도록 값 목록을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5ef0ee68a94a3e19c183b0a33979503b4b97ce0" translate="yes" xml:space="preserve">
          <source>You can specify a mix of different types of items for the source address.</source>
          <target state="translated">소스 주소에 다른 유형의 항목을 혼합하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7a7f491aa6daf3698e6bb92dea22c9d8a148bcb" translate="yes" xml:space="preserve">
          <source>You can specify a number between 0 (lowest priority) and 7 (highest priority).</source>
          <target state="translated">0 (가장 낮은 우선 순위)에서 7 (가장 높은 우선 순위) 사이의 숫자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08bff358d9ddf7d7a9b60078c327107c70b96161" translate="yes" xml:space="preserve">
          <source>You can specify a pattern as a regular expression by starting the pattern with &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 로 패턴을 시작하여 패턴을 정규식으로 지정할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="e316669f19e54956e8593fa60126aaa834d15c4d" translate="yes" xml:space="preserve">
          <source>You can specify a relative path for many configuration options. In most of those cases the path used will be relative to the &lt;code&gt;ansible.cfg&lt;/code&gt; file used for the current execution. If you need a path relative to your current working directory (CWD) you can use the &lt;code&gt;{{CWD}}&lt;/code&gt; macro to specify it. We do not recommend this approach, as using your CWD as the root of relative paths can be a security risk. For example: &lt;code&gt;cd /tmp; secureinfo=./newrootpassword ansible-playbook ~/safestuff/change_root_pwd.yml&lt;/code&gt;.</source>
          <target state="translated">많은 구성 옵션에 대한 상대 경로를 지정할 수 있습니다. 대부분의 경우 사용 된 경로 는 현재 실행에 사용 된 &lt;code&gt;ansible.cfg&lt;/code&gt; 파일을 기준으로합니다 . 현재 작업 디렉토리 (CWD)에 상대적인 경로가 필요한 경우 &lt;code&gt;{{CWD}}&lt;/code&gt; 매크로를 사용하여 지정할 수 있습니다. CWD를 상대 경로의 루트로 사용하는 것이 보안 상 위험 할 수 있으므로이 방법을 사용하지 않는 것이 좋습니다. 예를 들면 다음과 같습니다. &lt;code&gt;cd /tmp; secureinfo=./newrootpassword ansible-playbook ~/safestuff/change_root_pwd.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62dcc51020f71bcbf8a0cd12defa73c098669b67" translate="yes" xml:space="preserve">
          <source>You can specify a stride (increments between sequence numbers) when defining a numeric range of hosts:</source>
          <target state="translated">호스트의 숫자 범위를 정의 할 때 스트라이드 (시퀀스 번호 간 증가)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d1804bc9a81b96b76a8475457d93d597aa310c8" translate="yes" xml:space="preserve">
          <source>You can specify an IP address or any value that resolves to an IP address, such as a fully qualified domain name (FQDN), host name, or NETBIOS name.</source>
          <target state="translated">FQDN (정규화 된 도메인 이름), 호스트 이름 또는 NETBIOS 이름과 같이 IP 주소 또는 IP 주소로 확인되는 값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae761e54b297e14f7e258f4ec280dee7ce5d8e6" translate="yes" xml:space="preserve">
          <source>You can specify an unhashed password, and PostgreSQL ensures the stored password is hashed when &lt;em&gt;encrypted=yes&lt;/em&gt; is set. If you specify a hashed password, the module uses it as-is, regardless of the setting of &lt;em&gt;encrypted&lt;/em&gt;.</source>
          <target state="translated">해시되지 않은 암호를 지정할 수 있으며, PostgreSQL은 &lt;em&gt;encrypted = yes&lt;/em&gt; 가 설정된 경우 저장된 암호가 해시되도록합니다 . 당신이 해시 암호를 지정하면 설정과 관계없이,있는 그대로, 모듈을 사용하여 &lt;em&gt;암호화&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="330d7375d4f2b0a1f52957a4e35f0d7ec3f95474" translate="yes" xml:space="preserve">
          <source>You can specify codes, each set appropriate to the associated type, such as No Code (0) (associated with Echo Reply (0)) and Host Unreachable (1) (associated with Destination Unreachable (3)), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate that the system applies the rule for all codes in response to that specific ICMP message.</source>
          <target state="translated">No Code (0) (Echo Reply (0)와 관련) 및 Host Unreachable (1) (Destination Unreachable (3)과 관련)과 같이 관련 유형에 적합한 코드를 각각 지정 &lt;code&gt;any&lt;/code&gt; 시스템이 특정 ICMP 메시지에 대한 응답으로 모든 코드에 대해 규칙을 적용 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bfdc98a91e4170937f302cef757b107c30ec861f" translate="yes" xml:space="preserve">
          <source>You can specify codes, each set appropriate to the associated type, such as No Code (0) (associated with Echo Reply (0)) and Host Unreachable (1) (associated with Destination Unreachable (3)), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate the system applies the rule for all codes in response to that specific ICMP message.</source>
          <target state="translated">코드 없음 (0) (에코 응답 (0)과 연결됨) 및 호스트에 연결할 수 없음 (1) (연결할 수 없음 (3)과 연결됨)과 같이 연결된 유형에 적합한 코드를 지정하거나 다음 중 하나를 지정할 &lt;code&gt;any&lt;/code&gt; 시스템이 특정 ICMP 메시지에 대한 응답으로 모든 코드에 규칙을 적용 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="584ec7778c0933e7188040ef02a41b8e309d38ce" translate="yes" xml:space="preserve">
          <source>You can specify control messages, such as Echo Reply (0) and Destination Unreachable (3), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate that the system applies the rule for all ICMP messages.</source>
          <target state="translated">Echo Reply (0) 및 Destination Unreachable (3)과 같은 제어 메시지를 지정 &lt;code&gt;any&lt;/code&gt; 시스템이 모든 ICMP 메시지 규칙을 적용 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3e5aa1ba35dccc012d1c838680dddfd244fd2895" translate="yes" xml:space="preserve">
          <source>You can specify control messages, such as Echo Reply (0) and Destination Unreachable (3), or you can specify &lt;code&gt;any&lt;/code&gt; to indicate the system applies the rule for all ICMP messages.</source>
          <target state="translated">Echo Reply (0) 및 Destination Unreachable (3)과 같은 제어 메시지를 지정하거나 &lt;code&gt;any&lt;/code&gt; 를 지정하여 시스템이 모든 ICMP 메시지에 대한 규칙을 적용 함을 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="15d04ce6a5462fef04bf61fd909564eaf0bcd0e1" translate="yes" xml:space="preserve">
          <source>You can specify localhost explicitly by adding this to your inventory file:</source>
          <target state="translated">인벤토리 파일에이를 추가하여 localhost를 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bc80002e79000acedf4f914ab196f61193b075f" translate="yes" xml:space="preserve">
          <source>You can specify multiple range identifiers separated by &lt;code&gt;,&lt;/code&gt;. Use single quotes so the shell passes the entire command, including &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, and other operators, along. For example, to install the most recent version that is greater than or equal to 1.0.0 and less than 2.0.0:</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; 로 구분 된 여러 범위 식별자를 지정할 수 있습니다 . 쉘을 포함하여 전체 명령을 전달 있도록 작은 따옴표를 사용하여 &lt;code&gt;&amp;gt;&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , 및 기타 연산자. 예를 들어 1.0.0보다 크거나 같고 2.0.0보다 작은 최신 버전을 설치하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="464677b4ee1e1ce132ff38638bb05ad6b8f86bc3" translate="yes" xml:space="preserve">
          <source>You can specify multiple range identifiers which are split by &lt;code&gt;,&lt;/code&gt;. You can use the following range identifiers:</source>
          <target state="translated">로 분할 된 여러 범위 식별자를 지정할 수 있습니다 &lt;code&gt;,&lt;/code&gt; . 다음 범위 식별자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cf02e34ba03127e46a959b2d6cadaaa7b216053" translate="yes" xml:space="preserve">
          <source>You can specify multiple services at once by separating them with commas, .e.g., &lt;code&gt;services=httpd,nfs,puppet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;services=httpd,nfs,puppet&lt;/code&gt; 과 같이 쉼표로 구분하여 여러 서비스를 한 번에 지정할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="70eae6554caf06478f1dcb217b98abe534b3c334" translate="yes" xml:space="preserve">
          <source>You can specify one or more NAT policies to use.</source>
          <target state="translated">사용할 하나 이상의 NAT 정책을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e879e6e39f19ba01ead7f67ae523db6548e42f9e" translate="yes" xml:space="preserve">
          <source>You can specify only one of &lt;em&gt;cidr_ip&lt;/em&gt;, &lt;em&gt;cidr_ipv6&lt;/em&gt;, &lt;em&gt;ip_prefix&lt;/em&gt;, &lt;em&gt;group_id&lt;/em&gt; and &lt;em&gt;group_name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;cidr_ip&lt;/em&gt; , &lt;em&gt;cidr_ipv6&lt;/em&gt; , &lt;em&gt;ip_prefix&lt;/em&gt; , &lt;em&gt;group_id&lt;/em&gt; 및 &lt;em&gt;group_name&lt;/em&gt; 중 하나만 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd512a0a4d43c01cfaf16d5dacf87dc104c8eda4" translate="yes" xml:space="preserve">
          <source>You can specify the following destination items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.</source>
          <target state="translated">다음 대상 항목을 지정할 수 있습니다. IPv4 또는 IPv6 주소, IPv4 또는 IPv6 주소 범위, 지리적 위치, VLAN, 주소 목록, 포트, 포트 범위, 포트 목록 또는 주소 목록.</target>
        </trans-unit>
        <trans-unit id="44dcd9b655cc6692596e7dc422bc189a592f480e" translate="yes" xml:space="preserve">
          <source>You can specify the following source items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.</source>
          <target state="translated">다음과 같은 소스 항목을 지정할 수 있습니다. IPv4 또는 IPv6 주소, IPv4 또는 IPv6 주소 범위, 지리적 위치, VLAN, 주소 목록, 포트, 포트 범위, 포트 목록 또는 주소 목록.</target>
        </trans-unit>
        <trans-unit id="84242c65bedc9f745cd912e21b3ab36fc25b5b54" translate="yes" xml:space="preserve">
          <source>You can specify the size with a suffix of the byte type i.e. kilo = k, mega = m...</source>
          <target state="translated">바이트 유형의 접미사로 크기를 지정할 수 있습니다. 즉 kilo = k, mega = m ...</target>
        </trans-unit>
        <trans-unit id="568eaf85c64e59d8c5269e206d586ab337b2a9f4" translate="yes" xml:space="preserve">
          <source>You can specify this as a full or partial URL. For example: * &lt;a href=&quot;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&quot;&gt;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&lt;/a&gt; instances/instance * projects/project/zones/zone/instances/instance * zones/zone/instances/instance .</source>
          <target state="translated">이 URL을 전체 또는 부분 URL로 지정할 수 있습니다. 예를 들면 다음과 같습니다. * &lt;a href=&quot;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&quot;&gt;https://www.googleapis.com/compute/v1/projects/project/zones/zone/&lt;/a&gt; instance / instance * projects / project / zones / zone / instances / instance * zones / zone / instances / instance.</target>
        </trans-unit>
        <trans-unit id="3784f43a310f2be4463b06fe67162c9f4ab764b3" translate="yes" xml:space="preserve">
          <source>You can specify your Alicloud authentication credentials (access key and secret key) by passing them as environment variables or by storing them in a vars file.</source>
          <target state="translated">Alicloud 인증 자격 증명 (액세스 키 및 비밀 키)을 환경 변수로 전달하거나 vars 파일에 저장하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ac064d4b6a26de403c4fb87c8b0347f90101f59" translate="yes" xml:space="preserve">
          <source>You can still issue it via the sensu api</source>
          <target state="translated">여전히 sensu api를 통해 발행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="97550e0254e797edc33dce68bd727f1f2443bfec" translate="yes" xml:space="preserve">
          <source>You can still set &lt;code&gt;ansible_python_interpreter&lt;/code&gt; to a specific path at any variable level (as a host variable, in vars files, in playbooks, etc.). If you prefer to use the Python interpreter discovery behavior, use one of the four new values for &lt;code&gt;ansible_python_interpreter&lt;/code&gt; introduced in Ansible 2.8:</source>
          <target state="translated">변수 수준에서 호스트 변수, vars 파일, 플레이 북 등의 특정 경로로 &lt;code&gt;ansible_python_interpreter&lt;/code&gt; 를 계속 설정할 수 있습니다 . Python 인터프리터 검색 동작을 사용하려면 Ansible 2.8에 도입 된 &lt;code&gt;ansible_python_interpreter&lt;/code&gt; 에 대해 네 가지 새로운 값 중 하나를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c91783829c8772ab12a230f5392db8c63895d62" translate="yes" xml:space="preserve">
          <source>You can still set &lt;code&gt;ansible_python_interpreter&lt;/code&gt; to a specific path at any variable level (for example, in host_vars, in vars files, in playbooks, and so on). Setting a specific path completely disables automatic interpreter discovery; Ansible always uses the path specified.</source>
          <target state="translated">여전히 &lt;code&gt;ansible_python_interpreter&lt;/code&gt; 를 모든 변수 수준 (예 : host_vars, vars 파일, 플레이 북 등)에서 특정 경로로 설정할 수 있습니다 . 특정 경로를 설정하면 자동 인터프리터 검색이 완전히 비활성화됩니다. Ansible은 항상 지정된 경로를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ddeaef29c25597741603a6616de034c5c3a8c05a" translate="yes" xml:space="preserve">
          <source>You can still set &lt;code&gt;ansible_python_interpreter&lt;/code&gt; to a specific path at any variable level (for example, in host_vars, in vars files, in playbooks, etc.). Setting a specific path completely disables automatic interpreter discovery; Ansible always uses the path specified.</source>
          <target state="translated">여전히 &lt;code&gt;ansible_python_interpreter&lt;/code&gt; 를 설정할 수 있습니다변수 수준 (예 : host_vars, vars 파일, 플레이 북 등)에서 를 특정 경로로 . 특정 경로를 설정하면 자동 인터프리터 검색이 완전히 비활성화됩니다. Ansible은 항상 지정된 경로를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b7e89e13568dcb5c13f49528f316be3e12503f58" translate="yes" xml:space="preserve">
          <source>You can still use inventory scripts if you choose. When we implemented inventory plugins, we ensured backwards compatibility through the script inventory plugin. The examples below illustrate how to use inventory scripts.</source>
          <target state="translated">원하는 경우 인벤토리 스크립트를 계속 사용할 수 있습니다. 인벤토리 플러그인을 구현할 때 스크립트 인벤토리 플러그인을 통해 이전 버전과의 호환성을 보장했습니다. 아래 예는 인벤토리 스크립트를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="52edc7ecaf575e589f230702604374cfd3b4a732" translate="yes" xml:space="preserve">
          <source>You can still use inventory scripts if you choose. When we implemented inventory plugins, we ensured backwards compatibility via the script inventory plugin. The examples below illustrate how to use inventory scripts.</source>
          <target state="translated">원하는 경우 인벤토리 스크립트를 계속 사용할 수 있습니다. 인벤토리 플러그인을 구현할 때 스크립트 인벤토리 플러그인을 통해 이전 버전과의 호환성을 보장했습니다. 아래 예제는 인벤토리 스크립트를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1cd0504d174b7076a679711f1262868c52a105c3" translate="yes" xml:space="preserve">
          <source>You can still use the bare &lt;a href=&quot;playbooks_reuse_roles#roles-keyword&quot;&gt;roles&lt;/a&gt; keyword at the play level to incorporate a role in a playbook statically. However, the bare &lt;a href=&quot;../collections/ansible/builtin/include_module#include-module&quot;&gt;include&lt;/a&gt; keyword, once used for both task files and playbook-level includes, is now deprecated.</source>
          <target state="translated">플레이 레벨에서 베어 &lt;a href=&quot;playbooks_reuse_roles#roles-keyword&quot;&gt;역할&lt;/a&gt; 키워드를 사용하여 플레이 북에 역할을 정적으로 통합 할 수 있습니다 . 그러나 작업 파일과 플레이 북 수준 포함에 모두 사용되었던 베어 &lt;a href=&quot;../collections/ansible/builtin/include_module#include-module&quot;&gt;include&lt;/a&gt; 키워드는 이제 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5ac3c8d28b3cd4e48f6094a80d1fd1931a9b790" translate="yes" xml:space="preserve">
          <source>You can store environment settings for re-use in multiple playbooks by defining them in a group_vars file:</source>
          <target state="translated">group_vars 파일에 정의하여 여러 플레이 북에서 재사용 할 수 있도록 환경 설정을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50aaf5dc444d12806e7742ddb957d8d541cb47ee" translate="yes" xml:space="preserve">
          <source>You can store these facts and use them directly in another task, such as with the &lt;a href=&quot;../../collections/arista/eos/eos_interfaces_module#ansible-collections-arista-eos-eos-interfaces-module&quot;&gt;eos_interfaces&lt;/a&gt; resource module.</source>
          <target state="translated">이러한 사실을 저장하고 &lt;a href=&quot;../../collections/arista/eos/eos_interfaces_module#ansible-collections-arista-eos-eos-interfaces-module&quot;&gt;eos_interfaces&lt;/a&gt; 리소스 모듈 과 같은 다른 작업에서 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4eb43518a6a7e1fefaa4ef62ab101609f8b12af6" translate="yes" xml:space="preserve">
          <source>You can store variable values that relate to a specific host or group in inventory. To start with, you may add variables directly to the hosts and groups in your main inventory file. As you add more and more managed nodes to your Ansible inventory, however, you will likely want to store variables in separate host and group variable files.</source>
          <target state="translated">인벤토리의 특정 호스트 또는 그룹과 관련된 변수 값을 저장할 수 있습니다. 우선 기본 인벤토리 파일의 호스트 및 그룹에 변수를 직접 추가 할 수 있습니다. 그러나 Ansible 인벤토리에 더 많은 관리 노드를 추가함에 따라 변수를 별도의 호스트 및 그룹 변수 파일에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a425f66187cf18c0d2c4b07880d9e5cbac0a47d5" translate="yes" xml:space="preserve">
          <source>You can store variable values that relate to a specific host or group in inventory. To start with, you may add variables directly to the hosts and groups in your main inventory file. As you add more and more managed nodes to your Ansible inventory, however, you will likely want to store variables in separate host and group variable files. See &lt;a href=&quot;playbooks_variables#define-variables-in-inventory&quot;&gt;Defining variables in inventory&lt;/a&gt; for details.</source>
          <target state="translated">인벤토리의 특정 호스트 또는 그룹과 관련된 변수 값을 저장할 수 있습니다. 우선 기본 인벤토리 파일의 호스트 및 그룹에 변수를 직접 추가 할 수 있습니다. 그러나 Ansible 인벤토리에 더 많은 관리 노드를 추가함에 따라 별도의 호스트 및 그룹 변수 파일에 변수를 저장하고자 할 수 있습니다. 자세한 내용 &lt;a href=&quot;playbooks_variables#define-variables-in-inventory&quot;&gt;은 인벤토리에서 변수 정의&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b47d86f4c1a9e5b108ec17f03f1a638e96158447" translate="yes" xml:space="preserve">
          <source>You can store your vault passwords on the system keyring, in a database, or in a secret manager and retrieve them from within Ansible using a vault password client script. Enter the password as a string on a single line. If your password has a vault ID, store it in a way that works with your password storage tool.</source>
          <target state="translated">볼트 암호를 시스템 키링, 데이터베이스 또는 비밀 관리자에 저장하고 볼트 암호 클라이언트 스크립트를 사용하여 Ansible 내에서 검색 할 수 있습니다. 한 줄에 문자열로 비밀번호를 입력합니다. 암호에 볼트 ID가있는 경우 암호 저장 도구에서 작동하는 방식으로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="cc38d1c27e6865057e810af006cbe03e724038c0" translate="yes" xml:space="preserve">
          <source>You can supply an esxi_hostname or a cluster_name</source>
          <target state="translated">esxi_hostname 또는 cluster_name을 제공 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8936f700e8c4c108070d49e98aa28ec7e8b13a60" translate="yes" xml:space="preserve">
          <source>You can switch a data structure in a template from or to JSON or YAML format, with options for formatting, indenting, and loading data. The basic filters are occasionally useful for debugging:</source>
          <target state="translated">데이터 형식 지정, 들여 쓰기 및로드 옵션을 사용하여 템플릿의 데이터 구조를 JSON 또는 YAML 형식간에 전환 할 수 있습니다. 기본 필터는 때때로 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fe7670a78e6a29ac315b360f67d06e7a869755a0" translate="yes" xml:space="preserve">
          <source>You can target multiple inventory sources (directories, dynamic inventory scripts or files supported by inventory plugins) at the same time by giving multiple inventory parameters from the command line or by configuring &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt;&lt;/a&gt;. This can be useful when you want to target normally separate environments, like staging and production, at the same time for a specific action.</source>
          <target state="translated">명령 행에서 여러 인벤토리 매개 변수를 제공하거나 &lt;a href=&quot;../reference_appendices/config#envvar-ANSIBLE_INVENTORY&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;ANSIBLE_INVENTORY&lt;/code&gt; &lt;/a&gt; 를 구성하여 여러 인벤토리 소스 (디렉토리, 동적 인벤토리 스크립트 또는 인벤토리 플러그인이 지원하는 파일)를 동시에 대상으로 지정할 수 있습니다. 이는 특정 작업에 대해 준비 및 프로덕션과 같이 일반적으로 별도의 환경을 동시에 대상으로하려는 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f7f4ae022d467700301bce0557307e5d077196a" translate="yes" xml:space="preserve">
          <source>You can target this inventory directory simply like this:</source>
          <target state="translated">이 인벤토리 디렉토리를 다음과 같이 간단하게 타겟팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9da6cc29658de4a6411a68b81b070584b132428d" translate="yes" xml:space="preserve">
          <source>You can tell Ansible to automatically accept the keys</source>
          <target state="translated">Ansible에게 자동으로 키를 수락하도록 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cd3fe0086ebf788680c4a0dbae0126bfc051340c" translate="yes" xml:space="preserve">
          <source>You can test that your inventory is working by running:</source>
          <target state="translated">다음을 실행하여 인벤토리가 작동하는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc1c499bfd345a135cd8274f7094625521a529fc" translate="yes" xml:space="preserve">
          <source>You can test the OpenStack dynamic inventory script manually to confirm it is working as expected:</source>
          <target state="translated">OpenStack 동적 인벤토리 스크립트를 수동으로 테스트하여 예상대로 작동하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a380a77888290e00300222c06f84db13e95c1732" translate="yes" xml:space="preserve">
          <source>You can test the script by itself to make sure your config is correct:</source>
          <target state="translated">스크립트 자체를 테스트하여 구성이 올바른지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01d3284344cc4fca0e04df2ce4b3355ce70bec05" translate="yes" xml:space="preserve">
          <source>You can test whether a variable is an inline single vault encrypted value using the &lt;code&gt;vault_encrypted&lt;/code&gt; test.</source>
          <target state="translated">&lt;code&gt;vault_encrypted&lt;/code&gt; 테스트를 사용하여 변수가 인라인 단일 볼트 암호화 값인지 여부를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0feab1b7fbdb38e223d1e0687ae8f6091881bea0" translate="yes" xml:space="preserve">
          <source>You can then reference a specific field in the dictionary using either bracket notation or dot notation:</source>
          <target state="translated">그런 다음 대괄호 표기법 또는 점 표기법을 사용하여 사전에서 특정 필드를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2dff226b9361ebe936ecefc7fd95e3b1e7af1d7" translate="yes" xml:space="preserve">
          <source>You can then run &lt;code&gt;ec2.py --profile prod&lt;/code&gt; to get the inventory for the prod account, although this option is not supported by &lt;code&gt;ansible-playbook&lt;/code&gt;. You can also use the &lt;code&gt;AWS_PROFILE&lt;/code&gt; variable - for example: &lt;code&gt;AWS_PROFILE=prod ansible-playbook -i ec2.py myplaybook.yml&lt;/code&gt;</source>
          <target state="translated">그런 다음 &lt;code&gt;ec2.py --profile prod&lt;/code&gt; 를 실행 하여 prod 계정의 인벤토리를 가져올 수 있지만이 옵션은 &lt;code&gt;ansible-playbook&lt;/code&gt; 에서 지원되지 않습니다 . &lt;code&gt;AWS_PROFILE&lt;/code&gt; 변수를 사용할 수도 있습니다 ( 예 : &lt;code&gt;AWS_PROFILE=prod ansible-playbook -i ec2.py myplaybook.yml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="976c671467767089319497f50fe025960e18e385" translate="yes" xml:space="preserve">
          <source>You can then target all instances with a &amp;ldquo;class&amp;rdquo; tag where the value is &amp;ldquo;webserver&amp;rdquo; in a play:</source>
          <target state="translated">그런 다음 연극에서 값이 &quot;webserver&quot;인 &quot;class&quot;태그로 모든 인스턴스를 대상으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6263544aa3f4e820bad56c15f0c09e1aeaf76f79" translate="yes" xml:space="preserve">
          <source>You can then use &lt;code&gt;import_tasks&lt;/code&gt; or &lt;code&gt;include_tasks&lt;/code&gt; to execute the tasks in a file in the main task list:</source>
          <target state="translated">그런 다음 &lt;code&gt;import_tasks&lt;/code&gt; 또는 &lt;code&gt;include_tasks&lt;/code&gt; 를 사용 하여 기본 태스크 목록의 파일에서 태스크를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab3a0cf2ccfeca252773549af8e672890604e76e" translate="yes" xml:space="preserve">
          <source>You can trigger handlers from either an import or an include, but the procedure is different for each method of re-use. If you include the file, you must notify the include itself, which triggers all the tasks in &lt;code&gt;restarts.yml&lt;/code&gt;. If you import the file, you must notify the individual task(s) within &lt;code&gt;restarts.yml&lt;/code&gt;. You can mix direct tasks and handlers with included or imported tasks and handlers.</source>
          <target state="translated">가져 오기 또는 포함에서 핸들러를 트리거 할 수 있지만 절차는 재사용 방법마다 다릅니다. 파일을 포함하는 경우, &lt;code&gt;restarts.yml&lt;/code&gt; 의 모든 작업을 트리거하는 포함 자체에 알려야합니다 . 파일을 가져 오는 경우 &lt;code&gt;restarts.yml&lt;/code&gt; 내의 개별 작업에 알려야합니다 . 직접 작업 및 처리기를 포함되거나 가져온 작업 및 처리기와 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fedf4586a39fb4793168a361a1600b6a11dc0c3" translate="yes" xml:space="preserve">
          <source>You can update the allocation method to &lt;code&gt;Static&lt;/code&gt; after a dynamic private IP address has been assigned.</source>
          <target state="translated">동적 개인 IP 주소가 할당 된 후 할당 방법을 &lt;code&gt;Static&lt;/code&gt; 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a9674aa152334a7bb016286eadb9d506327c205" translate="yes" xml:space="preserve">
          <source>You can use '!' before value (for example, &lt;code&gt;!settings&lt;/code&gt;) to exclude it from the information.</source>
          <target state="translated">당신이 사용할 수있는 '!' 값 에서 제외하려면 (예 : &lt;code&gt;!settings&lt;/code&gt; ) 정보에서 제외하십시오.</target>
        </trans-unit>
        <trans-unit id="138888412d4a6f8aa49ead6ebf7187f556ace597" translate="yes" xml:space="preserve">
          <source>You can use '!' before value (for example, &lt;code&gt;!users&lt;/code&gt;) to exclude it from the information.</source>
          <target state="translated">당신이 사용할 수있는 '!' 정보에서 제외하려면 값 앞에 (예 : &lt;code&gt;!users&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a07a65de648d9f1578645e13964751c0c3a0a583" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://docs.ansible.com/ansible-lint/index.html&quot;&gt;ansible-lint&lt;/a&gt; for detailed, Ansible-specific feedback on your playbooks before you execute them. For example, if you run &lt;code&gt;ansible-lint&lt;/code&gt; on the playbook called &lt;code&gt;verify-apache.yml&lt;/code&gt; near the top of this page, you should get the following results:</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible-lint/index.html&quot;&gt;ansible-lint&lt;/a&gt; 를 사용 하여 실행하기 전에 플레이 북에 대한 자세한 Ansible 관련 피드백을 얻을 수 있습니다. 예를 &lt;code&gt;ansible-lint&lt;/code&gt; 페이지 상단에있는 &lt;code&gt;verify-apache.yml&lt;/code&gt; 이라는 플레이 북에서 ansible-lint 를 실행 하면 다음과 같은 결과가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="93f7f19abbc12319c8cdd5fac31d661666388550" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://docs.ansible.com/ansible-lint/index.html&quot;&gt;ansible-lint&lt;/a&gt; to run a detail check of your playbooks before you execute them.</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible-lint/index.html&quot;&gt;린트 린트&lt;/a&gt; 를 사용 하여 플레이 북을 실행하기 전에 세부 사항 확인을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5097c716fe6e270fc195c70f59698466a0f4e025" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://jinja.palletsprojects.com/en/master/templates/#logic&quot;&gt;logical operators&lt;/a&gt; to combine conditions. When you have multiple conditions that all need to be true (that is, a logical &lt;code&gt;and&lt;/code&gt;), you can specify them as a list:</source>
          <target state="translated">&lt;a href=&quot;https://jinja.palletsprojects.com/en/master/templates/#logic&quot;&gt;논리 연산자&lt;/a&gt; 를 사용하여 조건을 결합 할 수 있습니다 . 모두 참이어야하는 여러 조건 (즉, 논리 &lt;code&gt;and&lt;/code&gt; )이있는 경우 목록으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ccb95b6e7cdc921af2f9feaf6bd1f44c86aed7f" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;reboot_module#reboot-module&quot;&gt;reboot&lt;/a&gt; or &lt;a href=&quot;vmware_host_powerstate_module#vmware-host-powerstate-module&quot;&gt;vmware_host_powerstate&lt;/a&gt; module to reboot all ESXi host systems.</source>
          <target state="translated">&lt;a href=&quot;reboot_module#reboot-module&quot;&gt;reboot&lt;/a&gt; 또는 &lt;a href=&quot;vmware_host_powerstate_module#vmware-host-powerstate-module&quot;&gt;vmware_host_powerstate&lt;/a&gt; 모듈을 사용 하여 모든 ESXi 호스트 시스템을 재부팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="998fee3c48a01b34cceb79ad2ddfeaa083c8f2eb" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;PROXMOX_PASSWORD&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;PROXMOX_PASSWORD&lt;/code&gt; 환경 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4e400e4b497da3724c77d15b446f00bfc161173" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-config list&lt;/code&gt; to see all available settings.</source>
          <target state="translated">사용 &lt;code&gt;ansible-config list&lt;/code&gt; 을 사용하여 사용 가능한 모든 설정을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57c20c78e4e5affe7cac052dc136de36c9772ae6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t become -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t become &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t become -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t become &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 문서와 예제를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b399ff2e9d30da7081136800731ea3c767188ee8" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t cache -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t cache &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t cache -l&lt;/code&gt; 을 사용할 수 있습니다 을 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t cache &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 문서와 예제를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bc7984dc7adf3b12527a9d6f9e409d37509f591" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t callback -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t callback &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documents and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t callback -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용하다 &lt;code&gt;ansible-doc -t callback &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 문서와 예제를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56e686f99a3841304e466e1a002a5d65c3d82f34" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t cliconf -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t cliconf &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t cliconf -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용하다 &lt;code&gt;ansible-doc -t cliconf &amp;lt;plugin name&amp;gt;&lt;/code&gt; 자세한 설명서와 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f4d4d07ebcd8c7532ec597bf2de724032a7b9926" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t connection -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t connection &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t connection -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용하다 &lt;code&gt;ansible-doc -t connection &amp;lt;plugin name&amp;gt;&lt;/code&gt; 자세히 문서와 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d8336e27202090616c445c057b8ed74d9ea5355" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t httpapi -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t httpapi &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see detailed documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t httpapi -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t httpapi &amp;lt;plugin name&amp;gt;&lt;/code&gt; 자세한 설명서와 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8c39973f72c860994e3f6a16a2a05a9460369d3" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t inventory -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t inventory &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see plugin-specific documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t inventory -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t inventory &amp;lt;plugin name&amp;gt;&lt;/code&gt; 플러그인 관련 문서와 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="66d1fe3cdafc531cd6d177dce548b40b073c91ac" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t lookup -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t lookup &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific documents and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t lookup -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t lookup &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 문서와 예제를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52f82b7619fbe85585bb327bfbbedccce93f4d53" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t strategy -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t strategy &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see plugin-specific specific documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t strategy -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t strategy &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 문서와 예제 플러그인 별을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30629122f9e3461c37b9f08ea00d2cbdda8f2cc5" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ansible-doc -t vars -l&lt;/code&gt; to see the list of available plugins. Use &lt;code&gt;ansible-doc -t vars &amp;lt;plugin name&amp;gt;&lt;/code&gt; to see specific plugin-specific documentation and examples.</source>
          <target state="translated">&lt;code&gt;ansible-doc -t vars -l&lt;/code&gt; 을 사용하여 사용 가능한 플러그인 목록을 볼 수 있습니다. 사용 &lt;code&gt;ansible-doc -t vars &amp;lt;plugin name&amp;gt;&lt;/code&gt; 특정 플러그인 관련 문서와 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="94369500c3a2c4438751b304b153b4e707295b34" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;any&lt;/code&gt; and &lt;code&gt;all&lt;/code&gt; to check if any or all elements in a list are true or not:</source>
          <target state="translated">당신이 사용할 수 &lt;code&gt;any&lt;/code&gt; 및 &lt;code&gt;all&lt;/code&gt; 목록에있는 일부 또는 모든 요소가 true 또는이없는 경우 확인 :</target>
        </trans-unit>
        <trans-unit id="340a31cf5856ba13520678295373b7f8c476a60a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;cli_parse&lt;/code&gt; as an entry point for a cli_parser plugin in your own collection.</source>
          <target state="translated">자신의 컬렉션에서 cli_parser 플러그인의 진입 점으로 &lt;code&gt;cli_parse&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0c544d97b8342bb28404c96422b133bcf513203" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ctrl+c&lt;/code&gt; if you wish to advance a pause earlier than it is set to expire or if you need to abort a playbook run entirely. To continue early press &lt;code&gt;ctrl+c&lt;/code&gt; and then &lt;code&gt;c&lt;/code&gt;. To abort a playbook press &lt;code&gt;ctrl+c&lt;/code&gt; and then &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">일시 중지가 만료되도록 설정된 시간보다 빨리 진행하거나 플레이 북 실행을 완전히 중단해야하는 경우 &lt;code&gt;ctrl+c&lt;/code&gt; 를 사용할 수 있습니다 . 일찍 계속하려면 &lt;code&gt;ctrl+c&lt;/code&gt; 를 누른 다음 &lt;code&gt;c&lt;/code&gt; 를 누르십시오 . 플레이 북을 중단하려면 &lt;code&gt;ctrl+c&lt;/code&gt; 를 누른 다음 &lt;code&gt;a&lt;/code&gt; 를 누르십시오 .</target>
        </trans-unit>
        <trans-unit id="ace0a08ddf08da8e8204c62cf54e25ea2492b16b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;groups&lt;/code&gt; and &lt;code&gt;hostvars&lt;/code&gt; together to find all the IP addresses in a group.</source>
          <target state="translated">&lt;code&gt;groups&lt;/code&gt; 과 &lt;code&gt;hostvars&lt;/code&gt; 함께 사용하여 그룹의 모든 IP 주소를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="492b69c12fef44bd2d80b4e30c48ec14bb78f37e" translate="yes" xml:space="preserve">
          <source>You can use Jinja2 expressions to iterate over complex lists. For example, a loop can combine nested lists:</source>
          <target state="translated">Jinja2 표현식을 사용하여 복잡한 목록을 반복 할 수 있습니다. 예를 들어 루프는 중첩 된 목록을 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edccc27fbef6f9ad4c9e20c00c1a7b5ffbc518c4" translate="yes" xml:space="preserve">
          <source>You can use YAML &lt;a href=&quot;https://yaml.org/spec/current.html#id2534365&quot;&gt;single quote escaping&lt;/a&gt;:</source>
          <target state="translated">YAML &lt;a href=&quot;https://yaml.org/spec/current.html#id2534365&quot;&gt;작은 따옴표 이스케이프를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5c75aed20f8ff06d939696a45b47c09fe13ce54" translate="yes" xml:space="preserve">
          <source>You can use a local action to call &amp;lsquo;rsync&amp;rsquo; to recursively copy files to the managed servers:</source>
          <target state="translated">로컬 작업을 사용하여 'rsync'를 호출하여 관리 대상 서버에 파일을 재귀 적으로 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbab6e10b08de5b78e4cd1853838ec7be5b30793" translate="yes" xml:space="preserve">
          <source>You can use a separate cache plugin for inventory and facts. If an inventory-specific cache plugin is not provided and inventory caching is enabled, the fact cache plugin is used for inventory.</source>
          <target state="translated">인벤토리 및 사실에 대해 별도의 캐시 플러그인을 사용할 수 있습니다. 인벤토리 특정 캐시 플러그인이 제공되지 않고 인벤토리 캐싱이 사용 가능한 경우 팩트 캐시 플러그인이 인벤토리에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b40496ec70100f53740eedfdbcdb05a066d4ad97" translate="yes" xml:space="preserve">
          <source>You can use a variable to make the query more readable.</source>
          <target state="translated">변수를 사용하여 쿼리를 더 읽기 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0e47114bb980b1773fcbeb721e9e5027bf2b387" translate="yes" xml:space="preserve">
          <source>You can use any characters or spaces except the following:</source>
          <target state="translated">다음을 제외한 모든 문자 또는 공백을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7b207cdf348e21eedcc9a2bf7102dfb50863ff" translate="yes" xml:space="preserve">
          <source>You can use any crypt scheme supported by &amp;lsquo;Passlib&amp;rsquo;:</source>
          <target state="translated">'Passlib'가 지원하는 모든 암호화 체계를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e3ce0056eeb500ca5b9ed1e14f8011b1bbe2f73" translate="yes" xml:space="preserve">
          <source>You can use blocks with &lt;code&gt;flush_handlers&lt;/code&gt; in a rescue task to ensure that all handlers run even if an error occurs:</source>
          <target state="translated">복구 작업에서 &lt;code&gt;flush_handlers&lt;/code&gt; 와 함께 블록을 사용 하여 오류가 발생하더라도 모든 핸들러가 실행되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04f2e177537c27c5643cdfdb41ae1d5a74a5c91c" translate="yes" xml:space="preserve">
          <source>You can use community.vmware.reboot or &lt;a href=&quot;vmware_host_powerstate_module#ansible-collections-community-vmware-vmware-host-powerstate-module&quot;&gt;community.vmware.vmware_host_powerstate&lt;/a&gt; module to reboot all ESXi host systems.</source>
          <target state="translated">community.vmware.reboot 또는 &lt;a href=&quot;vmware_host_powerstate_module#ansible-collections-community-vmware-vmware-host-powerstate-module&quot;&gt;community.vmware.vmware_host_powerstate&lt;/a&gt; 모듈을 사용 하여 모든 ESXi 호스트 시스템을 재부팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04e0d55cc7e0f0fe3393475fb3a0ebadb155aabe" translate="yes" xml:space="preserve">
          <source>You can use conditionals with re-usable tasks files, playbooks, or roles. Ansible executes these conditional statements differently for dynamic re-use (includes) and for static re-use (imports). See &lt;a href=&quot;playbooks_reuse#playbooks-reuse&quot;&gt;Re-using Ansible artifacts&lt;/a&gt; for more information on re-use in Ansible.</source>
          <target state="translated">재사용 가능한 작업 파일, 플레이 북 또는 역할에 조건을 사용할 수 있습니다. Ansible은 동적 재사용 (포함) 및 정적 재사용 (가져 오기)에 대해 이러한 조건문을 다르게 실행합니다. &lt;a href=&quot;playbooks_reuse#playbooks-reuse&quot;&gt;Ansible&lt;/a&gt; 에서의 재사용에 대한 자세한 내용은 Ansible 아티팩트 재사용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="779510f653ccf7830a6babc48b5b0c1aed01f25b" translate="yes" xml:space="preserve">
          <source>You can use different cache plugins for inventory and facts. If you enable inventory caching without setting an inventory-specific cache plugin, Ansible uses the fact cache plugin for both facts and inventory.</source>
          <target state="translated">인벤토리 및 팩트에 대해 다른 캐시 플러그인을 사용할 수 있습니다. 인벤토리 별 캐시 플러그인을 설정하지 않고 인벤토리 캐싱을 활성화하면 Ansible은 팩트 및 인벤토리 모두에 팩트 캐시 플러그인을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="19ef671ecfb370f4b9c7f6e752e91181ddc7abde" translate="yes" xml:space="preserve">
          <source>You can use either a comma (&lt;code&gt;,&lt;/code&gt;) or a colon (&lt;code&gt;:&lt;/code&gt;) to separate a list of hosts. The comma is preferred when dealing with ranges and IPv6 addresses.</source>
          <target state="translated">쉼표 ( &lt;code&gt;,&lt;/code&gt; ) 또는 콜론 (:)을 사용할 수 있습니다 &lt;code&gt;:&lt;/code&gt; 호스트의 목록을 분리). 범위 및 IPv6 주소를 처리 할 때는 쉼표를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c87a8d467761ede7997baa7c56bfc9ad6b0cd573" translate="yes" xml:space="preserve">
          <source>You can use either option below to configure &lt;code&gt;ansible-galaxy collection&lt;/code&gt; to use other servers (such as Red Hat Automation Hub or a custom Galaxy server):</source>
          <target state="translated">아래 옵션 중 하나 를 사용하여 다른 서버 (예 : Red Hat Automation Hub 또는 사용자 지정 Galaxy 서버)를 사용 하도록 &lt;code&gt;ansible-galaxy collection&lt;/code&gt; 을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2c47acd55fd4f2521879f2f8925a3493c2a549c" translate="yes" xml:space="preserve">
          <source>You can use either the &lt;code&gt;IPTUNNEL&lt;/code&gt; or the &lt;code&gt;TOS&lt;/code&gt; option to implement Direct Server Return (DSR).</source>
          <target state="translated">&lt;code&gt;IPTUNNEL&lt;/code&gt; 또는 &lt;code&gt;TOS&lt;/code&gt; 를 사용할 수 있습니다 옵션을 DSR (Direct Server Return)을 구현할 .</target>
        </trans-unit>
        <trans-unit id="05359c66c6b725e715db954344f55d975f8c4384" translate="yes" xml:space="preserve">
          <source>You can use encrypted variables and files in ad-hoc commands and playbooks by supplying the passwords you used to encrypt them. You can modify your &lt;code&gt;ansible.cfg&lt;/code&gt; file to specify the location of a password file or to always prompt for the password.</source>
          <target state="translated">암호화 된 변수 및 파일을 암호화하는 데 사용한 암호를 제공하여 임시 명령 및 플레이 북에서 사용할 수 있습니다. &lt;code&gt;ansible.cfg&lt;/code&gt; 파일을 수정하여 암호 파일의 위치를 ​​지정하거나 항상 암호를 묻는 메시지를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0211019a4fb9ab33d68359f17691658600e62dec" translate="yes" xml:space="preserve">
          <source>You can use escalated privileges on only the specific tasks that need them, on an entire play, or on all plays. Adding &lt;code&gt;become: yes&lt;/code&gt; and &lt;code&gt;become_method: enable&lt;/code&gt; instructs Ansible to enter &lt;code&gt;enable&lt;/code&gt; mode before executing the task, play, or playbook where those parameters are set.</source>
          <target state="translated">필요한 특정 작업, 전체 재생 또는 모든 재생에 대해 에스컬레이션 된 권한을 사용할 수 있습니다. 다음을 추가합니다 &lt;code&gt;become: yes&lt;/code&gt; 및 &lt;code&gt;become_method: enable&lt;/code&gt; 명령으로 &lt;code&gt;enable&lt;/code&gt; 을 입력 할 수 있습니다. 이러한 매개 변수를 설정하는 작업, 재생, 또는 작전을 실행하기 전에 모드.</target>
        </trans-unit>
        <trans-unit id="f02158a7a9ed3324543b2d5fd1da0232e401882a" translate="yes" xml:space="preserve">
          <source>You can use facts in conditionals (see &lt;a href=&quot;playbooks_conditionals#playbooks-conditionals&quot;&gt;Conditionals&lt;/a&gt;) and also in templates. You can also use facts to create dynamic groups of hosts that match particular criteria, see the &lt;a href=&quot;../collections/ansible/builtin/group_by_module#group-by-module&quot;&gt;group_by module&lt;/a&gt; documentation for details.</source>
          <target state="translated">조건부 ( &lt;a href=&quot;playbooks_conditionals#playbooks-conditionals&quot;&gt;조건부&lt;/a&gt; 참조 ) 및 템플릿에서도 팩트를 사용할 수 있습니다 . 팩트를 사용하여 특정 기준과 일치하는 동적 호스트 그룹을 만들 수도 있습니다 . 자세한 내용은 &lt;a href=&quot;../collections/ansible/builtin/group_by_module#group-by-module&quot;&gt;group_by 모듈&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d54ce751a60326be16ed17f5e49bec6f21e8c3f" translate="yes" xml:space="preserve">
          <source>You can use lookup plugins anywhere you can use templating in Ansible: in a play, in variables file, or in a Jinja2 template for the &lt;a href=&quot;../collections/ansible/builtin/template_module#template-module&quot;&gt;template&lt;/a&gt; module.</source>
          <target state="translated">플레이, 변수 파일 또는 &lt;a href=&quot;../collections/ansible/builtin/template_module#template-module&quot;&gt;템플릿&lt;/a&gt; 모듈 용 Jinja2 템플릿 등 Ansible에서 템플릿을 사용할 수있는 모든 곳에서 조회 플러그인을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="314dc4438ab8e7a59db81d61a9b1a4e8a4520f6e" translate="yes" xml:space="preserve">
          <source>You can use other states like &lt;code&gt;latest&lt;/code&gt; ONLY if they are supported by the underlying package module(s) executed.</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; 과 같은 다른 상태를 사용할 수 있습니다실행되는 기본 패키지 모듈에서 지원하는 경우 만 .</target>
        </trans-unit>
        <trans-unit id="58f5664fe9056720fdf41749573dc2d940eeb9e8" translate="yes" xml:space="preserve">
          <source>You can use property specified in &lt;em&gt;properties&lt;/em&gt; as variables in the template.</source>
          <target state="translated">속성에 지정된 &lt;em&gt;속성&lt;/em&gt; 을 템플릿의 변수로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4feede69bea84b90a78b720ba082c8ebfe580d5" translate="yes" xml:space="preserve">
          <source>You can use registered results in the loop of a task if the variable is a list. If the variable is not a list, you can convert it into a list, with either &lt;code&gt;stdout_lines&lt;/code&gt; or with &lt;code&gt;variable.stdout.split()&lt;/code&gt;. You can also split the lines by other fields:</source>
          <target state="translated">변수가 목록 인 경우 작업 루프에서 등록 된 결과를 사용할 수 있습니다. 변수가 목록이 아닌 경우 &lt;code&gt;stdout_lines&lt;/code&gt; 또는 &lt;code&gt;variable.stdout.split()&lt;/code&gt; 을 사용하여 목록으로 변환 할 수 있습니다 . 다른 필드로 행을 분할 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0156c94b5dfc4a9590e06a7f5aa1fdd1c3ab69a5" translate="yes" xml:space="preserve">
          <source>You can use roles in three ways:</source>
          <target state="translated">세 가지 방법으로 역할을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="338a2fdc100cac0e9604af662af0e12fc1e2dd43" translate="yes" xml:space="preserve">
          <source>You can use shell-style (fnmatch) wildcard to pass groups of values (see Examples).</source>
          <target state="translated">쉘 스타일 (fnmatch) 와일드 카드를 사용하여 값 그룹을 전달할 수 있습니다 (예 참조).</target>
        </trans-unit>
        <trans-unit id="d77f44b3451d34a5ea5f77366b0c00e0fadd55fb" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../../cli/ansible-inventory#ansible-inventory&quot;&gt;ansible-inventory&lt;/a&gt; CLI command to display the inventory as Ansible sees it.</source>
          <target state="translated">&lt;a href=&quot;../../cli/ansible-inventory#ansible-inventory&quot;&gt;ansible-inventory&lt;/a&gt; CLI 명령을 사용하여 Ansible이 보는대로 인벤토리를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2be162920473df3e910fbe6eb4a58e5dd395d9c4" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; module with the &lt;code&gt;content:&lt;/code&gt; option if you prefer the template inline, as part of the playbook.</source>
          <target state="translated">플레이 북의 일부로 템플릿을 인라인으로 선호하는 경우 &lt;a href=&quot;copy_module#copy-module&quot;&gt;copy&lt;/a&gt; 모듈을 &lt;code&gt;content:&lt;/code&gt; 옵션 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94e4faaf9c33b6f9fc144a41c9ddaec28c74dc6f" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PSGallery&lt;/a&gt; to find custom resources, along with documentation on how to install them on a Windows host.</source>
          <target state="translated">&lt;a href=&quot;https://www.powershellgallery.com/&quot;&gt;PSGallery&lt;/a&gt; 를 사용하여 Windows 호스트에 설치하는 방법에 대한 설명서와 함께 사용자 지정 리소스를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb843b0257cb7eb563568dd3d7e32d9c6f850e9b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;win_copy_module#ansible-collections-ansible-windows-win-copy-module&quot;&gt;ansible.windows.win_copy&lt;/a&gt; module with the &lt;code&gt;content:&lt;/code&gt; option if you prefer the template inline, as part of the playbook.</source>
          <target state="translated">플레이 북의 일부로 템플릿 인라인을 선호하는 경우 &lt;code&gt;content:&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;win_copy_module#ansible-collections-ansible-windows-win-copy-module&quot;&gt;ansible.windows.win_copy&lt;/a&gt; 모듈을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4711097d695469c84a17c6e58557826f54c0121e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;win_copy_module#win-copy-module&quot;&gt;win_copy&lt;/a&gt; module with the &lt;code&gt;content:&lt;/code&gt; option if you prefer the template inline, as part of the playbook.</source>
          <target state="translated">플레이 북의 일부로 템플릿을 인라인으로 선호하는 경우 &lt;a href=&quot;win_copy_module#win-copy-module&quot;&gt;win_copy&lt;/a&gt; 모듈을 &lt;code&gt;content:&lt;/code&gt; 옵션 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36d779567396f5bbf699742a36a466e1c593aff9" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--server&lt;/code&gt; command line argument to select an explicit Galaxy server in the &lt;code&gt;server_list&lt;/code&gt; and the value of this argument should match the name of the server. To use a server not in the server list, set the value to the URL to access that server (all servers in the server list will be ignored). Also the &lt;code&gt;--api-key&lt;/code&gt; argument is not applied to any of the predefined servers. It is only applied if no server list is defined or a URL was specified by &lt;code&gt;--server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--server&lt;/code&gt; 명령 줄 인수를 사용하여 &lt;code&gt;server_list&lt;/code&gt; 에서 명시적인 Galaxy 서버를 선택할 수 있으며이 인수의 값은 서버 이름과 일치해야합니다. 서버 목록에없는 서버를 사용하려면 해당 서버에 액세스하기위한 값을 URL로 설정하십시오 (서버 목록의 모든 서버는 무시됩니다). 또한 &lt;code&gt;--api-key&lt;/code&gt; 인수는 사전 정의 된 서버에 적용되지 않습니다. 서버 목록이 정의되지 않았거나 &lt;code&gt;--server&lt;/code&gt; 에 의해 URL이 지정된 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f36d1db35221e6a221ea4a32e829f8bfa5966dc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--server&lt;/code&gt; command line argument to select an explicit Galaxy server in the &lt;code&gt;server_list&lt;/code&gt; and the value of this argument should match the name of the server. To use a server not in the server list, set the value to the URL to access that server (all servers in the server list will be ignored). Also you cannot use the &lt;code&gt;--api-key&lt;/code&gt; argument for any of the predefined servers. You can only use the &lt;code&gt;api_key&lt;/code&gt; argument if you did not define a server list or if you specify a URL in the &lt;code&gt;--server&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;--server&lt;/code&gt; 명령 줄 인수를 사용하여 &lt;code&gt;server_list&lt;/code&gt; 에서 명시적인 Galaxy 서버를 선택할 수 있으며이 인수의 값은 서버 이름과 일치해야합니다. 서버 목록에없는 서버를 사용하려면 해당 서버에 액세스 할 수있는 URL로 값을 설정하십시오 (서버 목록의 모든 서버는 무시 됨). 또한 사전 정의 된 서버에 대해 &lt;code&gt;--api-key&lt;/code&gt; 인수를 사용할 수 없습니다 . 서버 목록을 정의하지 않았거나 &lt;code&gt;--server&lt;/code&gt; 인수에 URL을 지정한 경우 에만 &lt;code&gt;api_key&lt;/code&gt; 인수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36d6fa34f407e338b6976c9a17d96463a7dba7cb" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;-vvv&lt;/code&gt; flag to display additional information, such as the version and path of the installed collection, the URL of the remote collection used for validation, and successful verification output.</source>
          <target state="translated">&lt;code&gt;-vvv&lt;/code&gt; 플래그를 사용하여 설치된 컬렉션의 버전 및 경로, 유효성 검사에 사용되는 원격 컬렉션의 URL 및 성공적인 확인 출력과 같은 추가 정보를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e09a334b938640a113c5f2f31429f6813b0be34b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;ansible-galaxy collection install&lt;/code&gt; command to install a collection on your system.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;code&gt;ansible-galaxy collection install&lt;/code&gt; 시스템에 모음을 설치하는 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6ae79c313ad22aa9d041d622ba8fd5536ef7966c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;count&lt;/code&gt; parameter to control the number of resources you create or terminate. For example, if you want exactly 5 instances tagged &lt;code&gt;NewECS&lt;/code&gt;, set the &lt;code&gt;count&lt;/code&gt; of instances to 5 and the &lt;code&gt;count_tag&lt;/code&gt; to &lt;code&gt;NewECS&lt;/code&gt;, as shown in the last task of the example playbook below. If there are no instances with the tag &lt;code&gt;NewECS&lt;/code&gt;, the task creates 5 new instances. If there are 2 instances with that tag, the task creates 3 more. If there are 8 instances with that tag, the task terminates 3 of those instances.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 매개 변수를 사용하여 작성하거나 종료하는 자원 수를 제어 할 수 있습니다. 당신이 원하는 경우 예를 들어, 정확히 5 인스턴스 태그 &lt;code&gt;NewECS&lt;/code&gt; 을 , 설정된 &lt;code&gt;count&lt;/code&gt; 5 인스턴스와 &lt;code&gt;count_tag&lt;/code&gt; 에 &lt;code&gt;NewECS&lt;/code&gt; 을 아래의 예와 각본의 마지막 작업에서와 같이. &lt;code&gt;NewECS&lt;/code&gt; 태그가있는 인스턴스가 없으면 이 작업은 5 개의 새 인스턴스를 만듭니다. 해당 태그가있는 인스턴스가 2 개 있으면 작업이 3 개를 더 만듭니다. 해당 태그가있는 인스턴스가 8 개이면 작업이 해당 인스턴스 중 3 개를 종료합니다.</target>
        </trans-unit>
        <trans-unit id="4c431876a4bc868eaa9ddf990952e905c34f8fc7" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;debugger&lt;/code&gt; keyword to enable (or disable) the debugger for a specific play, role, block, or task. This option is especially useful when developing or extending playbooks, plays, and roles. You can enable the debugger on new or updated tasks. If they fail, you can fix the errors efficiently. The &lt;code&gt;debugger&lt;/code&gt; keyword accepts five values:</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; 키워드를 사용하여 특정 플레이, 역할, 블록 또는 작업에 대해 디버거 를 활성화 (또는 비활성화) 할 수 있습니다 . 이 옵션은 플레이 북, 연극 및 역할을 개발하거나 확장 할 때 특히 유용합니다. 새 작업이나 업데이트 된 작업에서 디버거를 활성화 할 수 있습니다. 실패하면 오류를 효율적으로 수정할 수 있습니다. &lt;code&gt;debugger&lt;/code&gt; 키워드는 다섯 가지 값을 사용할 수</target>
        </trans-unit>
        <trans-unit id="ddb38c6765109de0ff8881c953c2e12b5bcc34af" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;environment&lt;/code&gt; keyword at the play, block, or task level to set an environment variable for an action on a remote host. With this keyword, you can enable using a proxy for a task that does http requests, set the required environment variables for language-specific version managers, and more.</source>
          <target state="translated">play, block 또는 task 수준에서 &lt;code&gt;environment&lt;/code&gt; 키워드를 사용하여 원격 호스트의 작업에 대한 환경 변수를 설정할 수 있습니다. 이 키워드를 사용하면 http 요청을 수행하는 작업에 프록시 사용을 활성화하고 언어 별 버전 관리자에 필요한 환경 변수를 설정하는 등의 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c8ed746f14b79747aceaaa70e32736487b80cc6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;hwaddr()&lt;/code&gt; filter to check if a given string is a MAC address or convert it between various formats. Examples:</source>
          <target state="translated">&lt;code&gt;hwaddr()&lt;/code&gt; 필터를 사용하여 주어진 문자열이 MAC 주소인지 확인하거나 다양한 형식으로 변환 할 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="7964f1c47c3029bd8d37cc6718b2a2deee06224a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;ipsubnet()&lt;/code&gt; filter with the &lt;code&gt;ipaddr()&lt;/code&gt; filter to, for example, split a given &lt;code&gt;/48&lt;/code&gt; prefix into smaller &lt;code&gt;/64&lt;/code&gt; subnets:</source>
          <target state="translated">사용자는 사용 &lt;code&gt;ipsubnet()&lt;/code&gt; 와 필터 &lt;code&gt;ipaddr()&lt;/code&gt; 에 필터, 예를 들어, 소정의 분할 &lt;code&gt;/48&lt;/code&gt; 작게으로 접두어 &lt;code&gt;/64&lt;/code&gt; 서브넷 :</target>
        </trans-unit>
        <trans-unit id="458c8fc1a0206840187e99ccc7cd289bc44568e8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;nios&lt;/code&gt; modules in tasks to simplify common Infoblox workflows. Be sure to set up your &lt;a href=&quot;#nios-credentials&quot;&gt;NIOS credentials&lt;/a&gt; before following these examples.</source>
          <target state="translated">작업 에서 &lt;code&gt;nios&lt;/code&gt; 모듈을 사용하여 일반적인 Infoblox 워크 플로우를 단순화 할 수 있습니다 . 이 예제를 따르기 전에 &lt;a href=&quot;#nios-credentials&quot;&gt;NIOS 자격 증명&lt;/a&gt; 을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f51f0af30f3500379314862f617e58c8f55b666c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;until&lt;/code&gt; keyword to retry a task until a certain condition is met. Here&amp;rsquo;s an example:</source>
          <target state="translated">당신은을 사용할 수 있습니다 &lt;code&gt;until&lt;/code&gt; 특정 조건이 충족 될 때까지 작업을 다시 시도하는 키워드. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="782292e469e888b0da82843142a3acd8a089f26a" translate="yes" xml:space="preserve">
          <source>You can use the Infoblox dynamic inventory script to import your network node inventory with Infoblox NIOS. To gather the inventory from Infoblox, you need two files:</source>
          <target state="translated">Infoblox 동적 인벤토리 스크립트를 사용하여 Infoblox NIOS로 네트워크 노드 인벤토리를 가져올 수 있습니다. Infoblox에서 인벤토리를 수집하려면 두 개의 파일이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="df17a10702efe53d70b33da933bccd2bf516ea68" translate="yes" xml:space="preserve">
          <source>You can use the apiary API url (&lt;a href=&quot;http://docs.statusio.apiary.io/&quot;&gt;http://docs.statusio.apiary.io/&lt;/a&gt;) to capture API traffic</source>
          <target state="translated">양봉 API URL ( &lt;a href=&quot;http://docs.statusio.apiary.io/&quot;&gt;http://docs.statusio.apiary.io/&lt;/a&gt; )을 사용하여 API 트래픽을 캡처 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="815e30517ce09c221b40d4b7ce4a9821f1d51c3e" translate="yes" xml:space="preserve">
          <source>You can use the below task after you started to build your APICs and configured the cluster to wait until all the APICs have come online. It will wait until the number of controllers equals the number listed in the &lt;code&gt;apic&lt;/code&gt; inventory group.</source>
          <target state="translated">APIC 빌드를 시작하고 모든 APIC가 온라인 상태가 될 때까지 대기하도록 클러스터를 구성한 후 아래 작업을 사용할 수 있습니다. 컨트롤러 수가 &lt;code&gt;apic&lt;/code&gt; 인벤토리 그룹에 나열된 수와 같아 질 때까지 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="917846a3ad62cabaaf3c9a988890793491d6dc95" translate="yes" xml:space="preserve">
          <source>You can use the inventory script explicitly (by passing the &lt;code&gt;-i openstack_inventory.py&lt;/code&gt; argument to Ansible) or implicitly (by placing the script at &lt;code&gt;/etc/ansible/hosts&lt;/code&gt;).</source>
          <target state="translated">인벤토리 스크립트를 명시 적으로 ( &lt;code&gt;-i openstack_inventory.py&lt;/code&gt; 인수를 Ansible 에 전달하여 ) 또는 내재적으로 (스크립트를 &lt;code&gt;/etc/ansible/hosts&lt;/code&gt; 에 배치하여 ) 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79e36dd192bec3e1603355f8816aa43e6e9384b8" translate="yes" xml:space="preserve">
          <source>You can use the magic variable &lt;code&gt;inventory_hostname&lt;/code&gt;, the name of the host as configured in your inventory, as an alternative to &lt;code&gt;ansible_hostname&lt;/code&gt; when fact-gathering is disabled. If you have a long FQDN, you can use &lt;code&gt;inventory_hostname_short&lt;/code&gt;, which contains the part up to the first period, without the rest of the domain.</source>
          <target state="translated">팩트 수집이 비활성화 된 경우 &lt;code&gt;ansible_hostname&lt;/code&gt; 대신 인벤토리에 구성된 호스트 이름 인 매직 변수 &lt;code&gt;inventory_hostname&lt;/code&gt; 을 사용할 수 있습니다 . FQDN이 긴 경우 도메인의 나머지 부분없이 첫 번째 기간까지의 부분을 포함하는 &lt;code&gt;inventory_hostname_short&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="110943ffb4cabd48daa7a72bb11aa42e4399aad3" translate="yes" xml:space="preserve">
          <source>You can use the options specified in &lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options&quot;&gt;http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html#options에&lt;/a&gt; 지정된 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72c6ab154867fb2f9e1fc234a41bd681fe3fcee1" translate="yes" xml:space="preserve">
          <source>You can use the same &lt;code&gt;unsafe&lt;/code&gt; data type in variables you define, to prevent templating errors and information disclosure. You can mark values supplied by &lt;a href=&quot;playbooks_prompts#unsafe-prompts&quot;&gt;vars_prompts&lt;/a&gt; as unsafe. You can also use &lt;code&gt;unsafe&lt;/code&gt; in playbooks. The most common use cases include passwords that allow special characters like &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt;, and JSON arguments that look like templates but should not be templated. For example:</source>
          <target state="translated">정의한 변수에 동일한 &lt;code&gt;unsafe&lt;/code&gt; 데이터 유형을 사용하여 템플릿 오류 및 정보 공개를 방지 할 수 있습니다. &lt;a href=&quot;playbooks_prompts#unsafe-prompts&quot;&gt;vars_prompts&lt;/a&gt; 에서 제공 한 값 을 안전하지 않은 것으로 표시 할 수 있습니다 . 플레이 북에서 &lt;code&gt;unsafe&lt;/code&gt; 것을 사용할 수도 있습니다 . 가장 일반적인 사용 사례에는 &lt;code&gt;{&lt;/code&gt; 또는 &lt;code&gt;%&lt;/code&gt; 와 같은 특수 문자를 허용하는 비밀번호 와 템플릿처럼 보이지만 템플릿 화해서는 안되는 JSON 인수가 포함됩니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="c38a6eb3e7320241bc9e4a4c983a495a5359a9fb" translate="yes" xml:space="preserve">
          <source>You can use the same approach when different OS flavors or versions require different configuration files or templates. Select the appropriate file or template based on the variables assigned to each host. This approach is often much cleaner than putting a lot of conditionals into a single template to cover multiple OS or package versions.</source>
          <target state="translated">서로 다른 OS 버전 또는 버전에 서로 다른 구성 파일 또는 템플릿이 필요한 경우 동일한 접근 방식을 사용할 수 있습니다. 각 호스트에 할당 된 변수에 따라 적절한 파일 또는 템플릿을 선택합니다. 이 접근 방식은 여러 OS 또는 패키지 버전을 처리하기 위해 단일 템플릿에 많은 조건을 넣는 것보다 훨씬 깔끔한 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="34e03659fd8e1cd97310d4502564146b02481c81" translate="yes" xml:space="preserve">
          <source>You can use the same setup with &lt;code&gt;include_vars&lt;/code&gt; when you only need OS-specific variables, not tasks:</source>
          <target state="translated">태스크가 아닌 OS 별 변수 만 필요한 경우 &lt;code&gt;include_vars&lt;/code&gt; 와 동일한 설정을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35d09f9c14ea3c1870daf9018aaa9808506ab34e" translate="yes" xml:space="preserve">
          <source>You can use the same syntax in playbooks. For example:</source>
          <target state="translated">플레이 북에서 동일한 구문을 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a46ab097a3cecbd772dabe073a35ed5220eb8e0b" translate="yes" xml:space="preserve">
          <source>You can use the same wildcard characters for aliases as you can for actual Wide IP names.</source>
          <target state="translated">실제 Wide IP 이름에 사용할 수있는 것처럼 별칭에 동일한 와일드 카드 문자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4df35cea5b96bce9adb103275cef2805ef9a7cd5" translate="yes" xml:space="preserve">
          <source>You can use the same wildcard characters for aliases as you can for actual wide IP names.</source>
          <target state="translated">실제 와이드 IP 이름에서와 동일한 별칭에 동일한 와일드 카드 문자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c252176756d0e17df65535b2975d04ef6270670" translate="yes" xml:space="preserve">
          <source>You can use the transformed data with &lt;code&gt;loop&lt;/code&gt; to iterate over the same subelement for multiple objects:</source>
          <target state="translated">&lt;code&gt;loop&lt;/code&gt; 와 함께 변환 된 데이터를 사용하여 여러 개체에 대해 동일한 하위 요소를 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82f6cdb0d7c334f78d2457e87b17081b6adf0f6e" translate="yes" xml:space="preserve">
          <source>You can use these seven commands at the debug prompt:</source>
          <target state="translated">디버그 프롬프트에서 다음 7 개의 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6456fe8af1b2d009c058918862b53dc24049fb43" translate="yes" xml:space="preserve">
          <source>You can use this approach to point a frontend proxy server to all the hosts in your app servers group, to set up the correct firewall rules between servers, and so on. You must either cache facts or gather facts for those hosts before the task that fills out the template.</source>
          <target state="translated">이 접근 방식을 사용하여 프런트 엔드 프록시 서버가 앱 서버 그룹의 모든 호스트를 가리 키도록하고 서버간에 올바른 방화벽 규칙을 설정하는 등의 작업을 수행 할 수 있습니다. 템플릿을 채우는 작업을 수행하기 전에 해당 호스트에 대한 사실을 캐시하거나 해당 호스트에 대한 사실을 수집해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e9a098ba2c24abbc7c0c337be7ba9bd42e9b1b9" translate="yes" xml:space="preserve">
          <source>You can use this feature when all tasks must be 100% successful to continue playbook execution. For example, if you run a service on machines in multiple data centers with load balancers to pass traffic from users to the service, you want all load balancers to be disabled before you stop the service for maintenance. To ensure that any failure in the task that disables the load balancers will stop all other tasks:</source>
          <target state="translated">플레이 북 실행을 계속하기 위해 모든 작업이 100 % 성공해야하는 경우이 기능을 사용할 수 있습니다. 예를 들어로드 밸런서가있는 여러 데이터 센터의 시스템에서 서비스를 실행하여 사용자의 트래픽을 서비스로 전달하는 경우 유지 관리를 위해 서비스를 중지하기 전에 모든로드 밸런서를 비활성화해야합니다. 로드 밸런서를 비활성화하는 작업에 실패하면 다른 모든 작업이 중지되도록하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="0d9dd3c4f5408e9ecc725f4b5022299503160eb0" translate="yes" xml:space="preserve">
          <source>You can use this idiom to point a frontend proxy server to all of the app servers, to set up the correct firewall rules between servers, etc. You need to make sure that the facts of those hosts have been populated before though, for example by running a play against them if the facts have not been cached recently (fact caching was added in Ansible 1.8).</source>
          <target state="translated">이 관용구를 사용하여 프런트 엔드 프록시 서버를 모든 응용 프로그램 서버로 지정하고 서버간에 올바른 방화벽 규칙을 설정하는 등의 작업을 수행 할 수 있습니다. 예를 들어 팩트가 최근에 캐시되지 않은 경우 해당 팩에 대한 플레이 실행 (팩트 캐싱이 Ansible 1.8에 추가됨).</target>
        </trans-unit>
        <trans-unit id="a055f61925fd7ac601a5484bf0445864e3c7652d" translate="yes" xml:space="preserve">
          <source>You can use this in conjunction with &lt;code&gt;product_id&lt;/code&gt; and other &lt;code&gt;creates_*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;product_id&lt;/code&gt; 및 기타 &lt;code&gt;creates_*&lt;/code&gt; 와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f30fcfe0706f9f360ab38c220e18ff50ebc1be5b" translate="yes" xml:space="preserve">
          <source>You can use this method to switch between the host group you&amp;rsquo;re targeting, the username logging into the remote servers, whether to sudo or not, and so forth. Plays, like tasks, run in the order specified in the playbook: top to bottom.</source>
          <target state="translated">이 방법을 사용하여 대상 호스트 그룹, 원격 서버에 로그인하는 사용자 이름, sudo 여부 등을 전환 할 수 있습니다. 작업은 플레이 북과 같이 플레이 북에 지정된 순서대로 실행됩니다 (위에서 아래로).</target>
        </trans-unit>
        <trans-unit id="8cdb7262d3f7d0dc966a53c47c82fabcc405709e" translate="yes" xml:space="preserve">
          <source>You can use this option when you need to run a command which ignore the console's codepage.</source>
          <target state="translated">콘솔의 코드 페이지를 무시하는 명령을 실행해야 할 때이 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55d5bdd5c75098e793588307a99ac425e1d403c3" translate="yes" xml:space="preserve">
          <source>You can use this script in one of two ways. The easiest is to use Ansible&amp;rsquo;s &lt;code&gt;-i&lt;/code&gt; command line option and specify the path to the script after marking it executable:</source>
          <target state="translated">이 스크립트는 두 가지 방법 중 하나로 사용할 수 있습니다. 가장 쉬운 방법은 Ansible의 &lt;code&gt;-i&lt;/code&gt; 명령 행 옵션을 사용하고 실행 가능으로 표시 한 후 스크립트 경로를 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="add9e242f0edd1da55d479ebe16620b71fa1f079" translate="yes" xml:space="preserve">
          <source>You can use this to keep a local copy of the specification to avoid downloading it every time the module is used.</source>
          <target state="translated">이를 사용하면 모듈을 사용할 때마다 스펙을 ​​다운로드하지 않도록 스펙의 로컬 사본을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="868ac657a615c892728775105df00b44f4ffd14f" translate="yes" xml:space="preserve">
          <source>You can use underscores instead of dashes (-) in the filter keys.</source>
          <target state="translated">필터 키에 대시 (-) 대신 밑줄을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff7db06ef80d61c83e584a04fc3cf3c44270801" translate="yes" xml:space="preserve">
          <source>You can use variables to enable passing group specifiers via the &lt;code&gt;-e&lt;/code&gt; argument to ansible-playbook:</source>
          <target state="translated">변수를 사용하여 &lt;code&gt;-e&lt;/code&gt; 인수를 통해 그룹 지정자를 전달 가능한 플레이 북으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="709cfc0c92bf996e761bc79d9a8c233b56236a7e" translate="yes" xml:space="preserve">
          <source>You can use virtual machine properties which can be used to populate &lt;code&gt;hostvars&lt;/code&gt; for the given virtual machine in a VMware dynamic inventory plugin.</source>
          <target state="translated">VMware 동적 인벤토리 플러그인에서 주어진 가상 머신에 대한 &lt;code&gt;hostvars&lt;/code&gt; 를 채우는 데 사용할 수있는 가상 머신 특성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="562ec59fbbafd776f9629cca444a2df692ba0910" translate="yes" xml:space="preserve">
          <source>You can use wildcard patterns with FQDNs or IP addresses, as long as the hosts are named in your inventory by FQDN or IP address:</source>
          <target state="translated">호스트가 인벤토리에서 FQDN 또는 IP 주소로 이름을 지정하는 한 FQDN 또는 IP 주소와 함께 와일드 카드 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a7c35a58505eef42ce26a7c01a584774cba610d" translate="yes" xml:space="preserve">
          <source>You can view the original value of an encrypted variable using the debug module. You must pass the password that was used to encrypt the variable. For example, if you stored the variable created by the last example above in a file called &amp;lsquo;vars.yml&amp;rsquo;, you could view the unencrypted value of that variable like this:</source>
          <target state="translated">디버그 모듈을 사용하여 암호화 된 변수의 원래 값을 볼 수 있습니다. 변수를 암호화하는 데 사용 된 비밀번호를 전달해야합니다. 예를 들어 위의 마지막 예제에서 생성 한 변수를 'vars.yml'이라는 파일에 저장 한 경우 다음과 같이 해당 변수의 암호화되지 않은 값을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdbc37233ef93aeb4b9d520bcc2fa87d4f59a832" translate="yes" xml:space="preserve">
          <source>You can wait for BIG-IP to be &amp;ldquo;ready&amp;rdquo;. By &amp;ldquo;ready&amp;rdquo;, we mean that BIG-IP is ready to accept configuration.</source>
          <target state="translated">BIG-IP가 &quot;준비&quot;될 때까지 기다릴 수 있습니다. &quot;준비&quot;란 BIG-IP가 구성을 수락 할 준비가되었음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="ab01dc5434d224bef6a4abe29278afab4d0ff5d0" translate="yes" xml:space="preserve">
          <source>You can wait for a file to exist or not exist on the filesystem.</source>
          <target state="translated">파일 시스템에 파일이 존재하거나 존재하지 않을 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7900f0b841d5b2ff53f59b2ec533e2d72df0f24" translate="yes" xml:space="preserve">
          <source>You can wait for a set amount of time &lt;code&gt;timeout&lt;/code&gt;, this is the default if nothing is specified or just &lt;code&gt;timeout&lt;/code&gt; is specified. This does not produce an error.</source>
          <target state="translated">설정된 시간 &lt;code&gt;timeout&lt;/code&gt; 시간 초과를 기다릴 수 있습니다. 아무것도 지정하지 않거나 &lt;code&gt;timeout&lt;/code&gt; 만 지정하면 이것이 기본값 입니다. 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dff7183a84e87368102be0a95170ebd82b38f186" translate="yes" xml:space="preserve">
          <source>You can wait for a set amount of time &lt;code&gt;timeout&lt;/code&gt;, this is the default if nothing is specified.</source>
          <target state="translated">설정된 시간 &lt;code&gt;timeout&lt;/code&gt; 시간 동안 기다릴 수 있습니다 . 아무 것도 지정하지 않으면 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="b9c2d754e2e161f8030b36fcccbe8b45f64f991b" translate="yes" xml:space="preserve">
          <source>You can wait for active connections to be closed before continuing on a local port.</source>
          <target state="translated">로컬 포트에서 계속하기 전에 활성 연결이 닫힐 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="078afec381efe5edd7a0bb78306fa4ac2bda4a89" translate="yes" xml:space="preserve">
          <source>You can write a simple playbook in one very large file, and most users learn the one-file approach first. However, breaking tasks up into different files is an excellent way to organize complex sets of tasks and reuse them. Smaller, more distributed artifacts let you re-use the same variables, tasks, and plays in multiple playbooks to address different use cases. You can use distributed artifacts across multiple parent playbooks or even multiple times within one playbook. For example, you might want to update your customer database as part of several different playbooks. If you put all the tasks related to updating your database in a tasks file, you can re-use them in many playbooks while only maintaining them in one place.</source>
          <target state="translated">하나의 매우 큰 파일에 간단한 플레이 북을 작성할 수 있으며 대부분의 사용자는 먼저 단일 파일 접근 방식을 배웁니다. 그러나 작업을 여러 파일로 나누는 것은 복잡한 작업 집합을 구성하고 재사용 할 수있는 훌륭한 방법입니다. 더 작고 더 분산 된 아티팩트를 통해 동일한 변수, 작업 및 플레이를 여러 플레이 북에서 재사용하여 다양한 사용 사례를 해결할 수 있습니다. 여러 상위 플레이 북에 분산 된 아티팩트를 사용하거나 하나의 플레이 북 내에서 여러 번 사용할 수 있습니다. 예를 들어 여러 다른 플레이 북의 일부로 고객 데이터베이스를 업데이트 할 수 있습니다. 데이터베이스 업데이트와 관련된 모든 작업을 작업 파일에 넣으면 한 곳에서만 유지하면서 여러 플레이 북에서 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed125c6684ef9c4669ed024e1d870258a22b2f74" translate="yes" xml:space="preserve">
          <source>You can't change &lt;em&gt;metric_name&lt;/em&gt; after you create the WebACL.</source>
          <target state="translated">WebACL을 생성 한 후에는 &lt;em&gt;metric_name&lt;/em&gt; 을 변경할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3126b2a0544d462a698c35b6953b74c85ad19751" translate="yes" xml:space="preserve">
          <source>You can't change &lt;em&gt;metric_name&lt;/em&gt; after you create the rule.</source>
          <target state="translated">규칙을 만든 후에는 &lt;em&gt;metric_name&lt;/em&gt; 을 변경할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="9bbadc9f05d54a205b1b5002edd08069bca2d986" translate="yes" xml:space="preserve">
          <source>You can't change metric_name after you create the WebACL</source>
          <target state="translated">WebACL을 생성 한 후에는 metric_name을 변경할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="f60c08e599bff9cd3e689d39c4d876208ae7ffa5" translate="yes" xml:space="preserve">
          <source>You can't change metric_name after you create the rule</source>
          <target state="translated">규칙을 생성 한 후에는 metric_name을 변경할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="507f667617a20c094fc96f09765a51d34b152026" translate="yes" xml:space="preserve">
          <source>You can't rewrite others module parameters using this</source>
          <target state="translated">이것을 사용하여 다른 모듈 매개 변수를 다시 작성할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="fa250f4bbdaf37fc2c95f793840ad59b1210d1f9" translate="yes" xml:space="preserve">
          <source>You cannot blacklist the &lt;code&gt;stat&lt;/code&gt; module, as it is required for Ansible to run.</source>
          <target state="translated">Ansible을 실행하는 데 필요하므로 &lt;code&gt;stat&lt;/code&gt; 모듈을 블랙리스트에 올릴 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="09a22ca15c15235c667a2af917039f99897f531b" translate="yes" xml:space="preserve">
          <source>You cannot change this name after profile is created.</source>
          <target state="translated">프로필을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7d25d6fe070f492867153b55e6e7c82df1e7e36" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the IP address pool is created.</source>
          <target state="translated">IP 주소 풀을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ef2cf5cadac072c694232ce9cf0a2bbbf22255f8" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the MAC pool is created.</source>
          <target state="translated">MAC 풀을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fcd91b3ab05955d1d7f1639b892cbad83f6c2167" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the Server Maintenance Policy is created.</source>
          <target state="translated">서버 유지 관리 정책을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2617181876e5333c31064fed4afd9c0f2ec83889" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the UUID pool is created.</source>
          <target state="translated">UUID 풀을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="95573474e463548aebc255514c1b291c458e5731" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the VLAN is created.</source>
          <target state="translated">VLAN을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9ebf40731b03e7a872edda2fd51557c492bcda9b" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the VSAN is created.</source>
          <target state="translated">Virtual SAN을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6c120bb412bbfdb13897d873a16ee006ee01dd43" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the WWNN or WWPN pool is created.</source>
          <target state="translated">WWNN 또는 WWPN 풀이 작성된 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f0a7004b5ed408c5582d9fb276ce09419ca17a9a" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the policy is created.</source>
          <target state="translated">정책을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="28b8b82eff2ff21eb27cabb9c2843f28874d9669" translate="yes" xml:space="preserve">
          <source>You cannot change this name after the template is created.</source>
          <target state="translated">템플릿을 만든 후에는이 이름을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1dd54eb6bcbc38a2b07b2b171671a9f74c628b21" translate="yes" xml:space="preserve">
          <source>You cannot configure two or more routeRules with the same priority.</source>
          <target state="translated">동일한 우선 순위로 둘 이상의 routeRule을 구성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a98f79129d179c74095c8855d557c128f76ff9a5" translate="yes" xml:space="preserve">
          <source>You cannot create VLANs with IDs from 4030 to 4047. This range of VLAN IDs is reserved.</source>
          <target state="translated">4030에서 4047 사이의 ID로 VLAN을 만들 수 없습니다.이 범위의 VLAN ID는 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="02320441226bda08caf0f2e86911974c35d9687e" translate="yes" xml:space="preserve">
          <source>You cannot create more than one customer gateway with the same IP address. If you run an identical request more than one time, the first request creates the customer gateway, and subsequent requests return information about the existing customer gateway. The subsequent requests do not create new customer gateway resources.</source>
          <target state="translated">동일한 IP 주소로 둘 이상의 고객 게이트웨이를 작성할 수 없습니다. 동일한 요청을 두 번 이상 실행하면 첫 번째 요청이 고객 게이트웨이를 작성하고 후속 요청은 기존 고객 게이트웨이에 대한 정보를 리턴합니다. 후속 요청은 새 고객 게이트웨이 자원을 작성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41420981615b6a4cc0b48c4b38f173af1dbe7493" translate="yes" xml:space="preserve">
          <source>You cannot enable vMotion on an additional adapter if you already have an adapter with the vMotion TCP/IP stack configured.</source>
          <target state="translated">vMotion TCP / IP 스택이 구성된 어댑터가 이미있는 경우 추가 어댑터에서 vMotion을 활성화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e42b49aa1fdce47557558a8d89aa81e0e9ca7439" translate="yes" xml:space="preserve">
          <source>You cannot limit privilege escalation permissions to certain commands. Ansible does not always use a specific command to do something but runs modules (code) from a temporary file name which changes every time. If you have &amp;lsquo;/sbin/service&amp;rsquo; or &amp;lsquo;/bin/chmod&amp;rsquo; as the allowed commands this will fail with ansible as those paths won&amp;rsquo;t match with the temporary file that Ansible creates to run the module. If you have security rules that constrain your sudo/pbrun/doas environment to running specific command paths only, use Ansible from a special account that does not have this constraint, or use &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/reference_appendices/tower.html#ansible-tower&quot;&gt;Red Hat Ansible Tower&lt;/a&gt; to manage indirect access to SSH credentials.</source>
          <target state="translated">특정 명령에 대한 권한 에스컬레이션 권한을 제한 할 수 없습니다. Ansible은 항상 특정 명령을 사용하는 것이 아니라 매번 변경되는 임시 파일 이름에서 모듈 (코드)을 실행합니다. 허용 된 명령으로 '/ sbin / service'또는 '/ bin / chmod'가있는 경우 해당 경로가 Ansible이 모듈을 실행하기 위해 생성 한 임시 파일과 일치하지 않으므로 ansible과 함께 실패합니다. sudo / pbrun / doas 환경을 특정 명령 경로 만 실행하도록 제한하는 보안 규칙이있는 경우이 제약이없는 특수 계정에서 Ansible을 사용하거나 &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/reference_appendices/tower.html#ansible-tower&quot;&gt;Red Hat Ansible Tower&lt;/a&gt; 를 사용하여 SSH 자격 증명에 대한 간접 액세스를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="56b1940279ec6cbff014b32ed1c6ebbce8af8a06" translate="yes" xml:space="preserve">
          <source>You cannot limit privilege escalation permissions to certain commands. Ansible does not always use a specific command to do something but runs modules (code) from a temporary file name which changes every time. If you have &amp;lsquo;/sbin/service&amp;rsquo; or &amp;lsquo;/bin/chmod&amp;rsquo; as the allowed commands this will fail with ansible as those paths won&amp;rsquo;t match with the temporary file that Ansible creates to run the module. If you have security rules that constrain your sudo/pbrun/doas environment to running specific command paths only, use Ansible from a special account that does not have this constraint, or use &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/reference_appendices/tower.html#ansible-tower&quot;&gt;Red Hat Ansible Tower&lt;/a&gt; to manage indirect access to SSH credentials.</source>
          <target state="translated">권한 에스컬레이션 권한을 특정 명령으로 제한 할 수 없습니다. Ansible은 항상 특정 명령을 사용하여 무언가를 수행하는 것이 아니라 매번 변경되는 임시 파일 이름으로 모듈 (코드)을 실행합니다. 허용 된 명령으로 '/ sbin / service'또는 '/ bin / chmod'가있는 경우 해당 경로가 Ansible이 모듈을 실행하기 위해 작성하는 임시 파일과 일치하지 않기 때문에 실패 할 수 있습니다. sudo / pbrun / doas 환경이 특정 명령 경로 만 실행하도록 제한하는 보안 규칙이있는 경우이 제한 조건이없는 특수 계정의 Ansible을 사용하거나 &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/reference_appendices/tower.html#ansible-tower&quot;&gt;Red Hat Ansible Tower&lt;/a&gt; 를 사용하여 SSH 신임 정보에 대한 간접 액세스를 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="abb73e1ac085e5c0a9def5da0e43b4e451c65015" translate="yes" xml:space="preserve">
          <source>You cannot list action plugins directly, they show up as their counterpart modules:</source>
          <target state="translated">액션 플러그인을 직접 나열 할 수 없으며 해당 플러그인이 해당 모듈로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="de1026768eed4f96b9a0533b688470afae3a47ce" translate="yes" xml:space="preserve">
          <source>You cannot notify a handler defined inside a dynamic include.</source>
          <target state="translated">동적 포함 내에 정의 된 핸들러에는 알릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a41a7f6c05e67037c433b68a1993ffc42aa481ae" translate="yes" xml:space="preserve">
          <source>You cannot notify a handler that is defined inside of an include. As of Ansible 2.1, this does work, however the include must be &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="translated">포함 내부에 정의 된 핸들러를 통지 할 수 없습니다. Ansible 2.1부터는 작동하지만 포함은 &lt;code&gt;static&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="015a935070ad4fabd0fc2b2408253f2a772a6b8d" translate="yes" xml:space="preserve">
          <source>You cannot remove a user while it still has any privileges granted to it in any database.</source>
          <target state="translated">데이터베이스에서 권한이 부여 된 사용자는 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dc250fe05e3d927c2cf15aca967db96d1d6b8842" translate="yes" xml:space="preserve">
          <source>You cannot run a process that interacts with &lt;code&gt;DPAPI&lt;/code&gt;, which is used by some installers (like Microsoft SQL Server).</source>
          <target state="translated">&lt;code&gt;DPAPI&lt;/code&gt; 와 상호 작용하는 프로세스는 실행할 수 없습니다.이 API 는 Microsoft SQL Server와 같은 일부 설치 프로그램에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="26d1a545c86cb9dd2ee62654dbc162a660138f7e" translate="yes" xml:space="preserve">
          <source>You cannot set a reverse PTR entry for IPv6 floating networks. Reverse PTR entries are only allowed for single addresses.</source>
          <target state="translated">IPv6 플로팅 네트워크에 대해서는 역방향 PTR 항목을 설정할 수 없습니다. 역 PTR 항목은 단일 주소에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="15a97d87d5da92a68ce0e190e49868f26a2b6c82" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;--start-at-task&lt;/code&gt; to begin execution at a task inside a dynamic include.</source>
          <target state="translated">&lt;code&gt;--start-at-task&lt;/code&gt; 를 사용 하여 동적 포함 내의 작업에서 실행을 시작할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ea20c25bf1278ee524ed53fb12c41c51c723f570" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;gssapi&lt;/code&gt; when either &lt;code&gt;scheme=ldaps&lt;/code&gt; or &lt;code&gt;start_tls=True&lt;/code&gt; is set.</source>
          <target state="translated">&lt;code&gt;scheme=ldaps&lt;/code&gt; 또는 &lt;code&gt;start_tls=True&lt;/code&gt; 가 설정되어 있으면 &lt;code&gt;gssapi&lt;/code&gt; 를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="80ab5263e37d09422f5f195ad84816d637b31eee" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;notify&lt;/code&gt; to trigger a handler name which comes from inside a dynamic include (see note below).</source>
          <target state="translated">&lt;code&gt;notify&lt;/code&gt; 를 사용 하여 동적 포함 내부에서 오는 핸들러 이름을 트리거 할 수 없습니다 (아래 참고 참조).</target>
        </trans-unit>
        <trans-unit id="671b0161a91b6bea95025d7219bf6a15a595d904" translate="yes" xml:space="preserve">
          <source>You cannot use SSH keys with the WinRM or PSRP connection plugins. These connection plugins use X509 certificates for authentication instead of the SSH key pairs that SSH uses.</source>
          <target state="translated">WinRM 또는 PSRP 연결 플러그인과 함께 SSH 키를 사용할 수 없습니다. 이 연결 플러그인은 SSH가 사용하는 SSH 키 쌍 대신 인증을 위해 X509 인증서를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8b341d5273013ce89c85eb8590d22d2ab6602460" translate="yes" xml:space="preserve">
          <source>You cannot use spaces or any special characters other than</source>
          <target state="translated">공백이나 특수 문자 이외의 특수 문자는 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="24a0539a6c99b69bd4af9d857851d5b2727260a6" translate="yes" xml:space="preserve">
          <source>You cannot use spaces or any special characters other than - (hyphen), &quot;_&quot; (underscore), : (colon), and . (period).</source>
          <target state="translated">-(하이픈), &quot;_&quot;(밑줄), :( 콜론) 및 이외의 특수 문자는 공백이나 사용할 수 없습니다. (기간).</target>
        </trans-unit>
        <trans-unit id="f89b9651f3cc6dacf6f8fe0cf2cbe7ba55ce4c30" translate="yes" xml:space="preserve">
          <source>You cannot use this action inside a play.</source>
          <target state="translated">극중에서는이 동작을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dbf7649f552a25e6630b7d50955da87801743c1f" translate="yes" xml:space="preserve">
          <source>You cannot use this module to access a mapped drive in another Ansible task, drives mapped with this module are only accessible when logging in interactively with the user through the console or RDP.</source>
          <target state="translated">이 모듈을 사용하여 다른 Ansible 작업에서 매핑 된 드라이브에 액세스 할 수 없습니다.이 모듈로 매핑 된 드라이브는 콘솔 또는 RDP를 통해 사용자와 대화식으로 로그인 할 때만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10a2dc76a9897f82698fcbc372f3ffd249ca9be9" translate="yes" xml:space="preserve">
          <source>You cannot use this to remove a Content View Version from a Lifecycle environment, you should promote another version first.</source>
          <target state="translated">이를 사용하여 Lifecycle 환경에서 Content View 버전을 제거 할 수 없습니다. 먼저 다른 버전을 승격해야합니다.</target>
        </trans-unit>
        <trans-unit id="563374121261a00f52adcd2817c39ca2ecf6fa32" translate="yes" xml:space="preserve">
          <source>You configure interfaces to vRouter services on a fabric, cluster, standalone switch or virtual network(VNET).</source>
          <target state="translated">패브릭, 클러스터, 독립형 스위치 또는 가상 네트워크 (VNET)에서 vRouter 서비스에 대한 인터페이스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="c6258fa2ec868a2655a16864387d9695dfc905d6" translate="yes" xml:space="preserve">
          <source>You configure schedules to define days and times when the firewall rule is made active.</source>
          <target state="translated">방화벽 규칙이 활성화되는 날짜와 시간을 정의하도록 일정을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="0c6d8b12f83f61c814717120b57e9d2ad5b323e8" translate="yes" xml:space="preserve">
          <source>You could use this before using &lt;a href=&quot;vmware_host_datastore_module#ansible-collections-community-vmware-vmware-host-datastore-module&quot;&gt;community.vmware.vmware_host_datastore&lt;/a&gt; to mount a new datastore to ensure your device/volume is ready.</source>
          <target state="translated">&lt;a href=&quot;vmware_host_datastore_module#ansible-collections-community-vmware-vmware-host-datastore-module&quot;&gt;community.vmware.vmware_host_datastore&lt;/a&gt; 를 사용하기 전에이를 사용하여 새 데이터 스토어를 마운트하여 장치 / 볼륨이 준비되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb5a9f52a57d0251e8ef56529de306cef08ac7b8" translate="yes" xml:space="preserve">
          <source>You could use this before using &lt;a href=&quot;vmware_host_datastore_module#vmware-host-datastore-module&quot;&gt;vmware_host_datastore&lt;/a&gt; to mount a new datastore to ensure your device/volume is ready.</source>
          <target state="translated">&lt;a href=&quot;vmware_host_datastore_module#vmware-host-datastore-module&quot;&gt;vmware_host_datastore&lt;/a&gt; 를 사용 하여 장치 / 볼륨이 준비되도록 새 데이터 스토어를 마운트 하기 전에이를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7cc5738a03fe9404be434558ff28f1859a3a2b59" translate="yes" xml:space="preserve">
          <source>You create the integration using the &lt;code&gt;setup&lt;/code&gt; command, but before an integration can be created, you must first authenticate using the &lt;code&gt;login&lt;/code&gt; command; you will also need an account in Travis, and your Travis token. Once you&amp;rsquo;re ready, use the following command to create the integration:</source>
          <target state="translated">&lt;code&gt;setup&lt;/code&gt; 명령을 사용하여 통합을 작성하지만 통합을 작성 하기 전에 먼저 &lt;code&gt;login&lt;/code&gt; 명령을 사용하여 인증해야합니다 . Travis의 계정과 Travis 토큰도 필요합니다. 준비가되면 다음 명령을 사용하여 통합을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="9bb8007d0f56e77d0dce1be6db6d916089c05c3c" translate="yes" xml:space="preserve">
          <source>You create the name of the registered variable using the &lt;code&gt;register&lt;/code&gt; keyword. A registered variable always contains the status of the task that created it as well as any output that task generated. You can use registered variables in templates and action lines as well as in conditional &lt;code&gt;when&lt;/code&gt; statements. You can access the string contents of the registered variable using &lt;code&gt;variable.stdout&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;register&lt;/code&gt; 키워드를 사용하여 등록 된 변수의 이름을 만듭니다 . 등록 된 변수에는 항상 해당 변수를 생성 한 작업의 상태와 작업이 생성 한 출력이 포함됩니다. 당신은 템플릿과 액션 라인뿐만 아니라 조건에 등록 된 변수를 사용할 수 있습니다 문. 다음을 사용하여 등록 된 변수의 문자열 내용에 액세스 할 수 있습니다 &lt;code&gt;variable.stdout&lt;/code&gt; 을 . 예를 들면 : &lt;code&gt;when&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="396723992d6eeddc8cc44444bf801030354b052f" translate="yes" xml:space="preserve">
          <source>You don't need to wait for Kubernetes cluster autoscaler to deploy VM compute nodes to run the additional pods.</source>
          <target state="translated">Kubernetes 클러스터 오토 스케일러가 추가 포드를 실행하기 위해 VM 계산 노드를 배포 할 때까지 기다릴 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e06bc6b012352cac6e07d3cc41dd39571e6b307a" translate="yes" xml:space="preserve">
          <source>You frequently use a combination of IP addresses and subnet prefixes (&amp;ldquo;CIDR&amp;rdquo;), this is even more common with IPv6. The &lt;code&gt;ansible.netcommon.ipaddr()&lt;/code&gt; filter can extract useful data from these prefixes.</source>
          <target state="translated">IP 주소와 서브넷 접두사 ( &quot;CIDR&quot;)의 조합을 자주 사용합니다. 이는 IPv6에서 훨씬 더 일반적입니다. &lt;code&gt;ansible.netcommon.ipaddr()&lt;/code&gt; 필터가 이러한 프리픽스에서 유용한 데이터를 추출 할 수있다.</target>
        </trans-unit>
        <trans-unit id="031dd31f7bceb5051a44e68fe59acd5de360ea7e" translate="yes" xml:space="preserve">
          <source>You frequently use a combination of IP addresses and subnet prefixes (&amp;ldquo;CIDR&amp;rdquo;), this is even more common with IPv6. The &lt;code&gt;ipaddr()&lt;/code&gt; filter can extract useful data from these prefixes.</source>
          <target state="translated">IP 주소와 서브넷 접두사 ( &quot;CIDR&quot;)를 자주 사용하는 경우가 많으며 이는 IPv6에서 더 일반적입니다. &lt;code&gt;ipaddr()&lt;/code&gt; 필터가 이러한 프리픽스에서 유용한 데이터를 추출 할 수있다.</target>
        </trans-unit>
        <trans-unit id="b694b6f98790b28d03950d70d3594e454d2bab1a" translate="yes" xml:space="preserve">
          <source>You have learned about playbooks, inventory, roles, and variables. This section pulls all those elements together, outlining a sample setup for automating a web service. You can find more example playbooks illustrating these patterns in our &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;ansible-examples repository&lt;/a&gt;. (NOTE: These may not use all of the features in the latest release, but are still an excellent reference!).</source>
          <target state="translated">플레이 북, 인벤토리, 역할 및 변수에 대해 배웠습니다. 이 섹션에서는 이러한 모든 요소를 ​​함께 가져와 웹 서비스 자동화를위한 샘플 설정을 설명합니다. &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;ansible-examples 저장소&lt;/a&gt; 에서 이러한 패턴을 보여주는 더 많은 예제 플레이 북을 찾을 수 있습니다 . (참고 : 최신 릴리스의 모든 기능을 사용하지는 않지만 여전히 훌륭한 참조입니다!).</target>
        </trans-unit>
        <trans-unit id="06209273ea5e91815ec4b0cb95434c072d848152" translate="yes" xml:space="preserve">
          <source>You have to specify &lt;code&gt;snapshot_vm&lt;/code&gt; parameter with virtual machine name of this snapshot.</source>
          <target state="translated">이 스냅 샷의 가상 머신 이름으로 &lt;code&gt;snapshot_vm&lt;/code&gt; 매개 변수 를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="834c4d02d4313c8690442b9656c04015e5112ab5" translate="yes" xml:space="preserve">
          <source>You have two options to force Ansible to run a role more than once.</source>
          <target state="translated">Ansible이 역할을 두 번 이상 실행하도록하는 두 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff068c79a7c5ba705283b404e6677eaefa491430" translate="yes" xml:space="preserve">
          <source>You install Ansible on a control node, which then uses SSH (by default) to communicate with your managed nodes (those end devices you want to automate).</source>
          <target state="translated">Ansible을 제어 노드에 설치하면 SSH (기본적으로)를 사용하여 관리 노드 (자동화하려는 최종 장치)와 통신합니다.</target>
        </trans-unit>
        <trans-unit id="edcabbafd047960f470efc5e6aae6a32f926c1d6" translate="yes" xml:space="preserve">
          <source>You may also apply tags to the tasks imported by &lt;code&gt;roles&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;roles&lt;/code&gt; 가져온 작업에 태그를 적용 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac03beda1e3efe5457325d228f17ab64be0cdcc8" translate="yes" xml:space="preserve">
          <source>You may also need to manually download any dependent collections.</source>
          <target state="translated">종속 컬렉션을 수동으로 다운로드해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6455b3ea45fad670f536ea2cd3e7ffb1eb4f396" translate="yes" xml:space="preserve">
          <source>You may also specify a numeric value. The possible values are from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">숫자 값을 지정할 수도 있습니다. 가능한 값은 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;255&lt;/code&gt; 사이 입니다.</target>
        </trans-unit>
        <trans-unit id="aff2aba2880faede226a62af958ad617c322ede4" translate="yes" xml:space="preserve">
          <source>You may also wish to follow the &lt;a href=&quot;https://github.com/ansible/ansible&quot;&gt;GitHub project&lt;/a&gt; if you have a GitHub account. This is also where we keep the issue tracker for sharing bugs and feature ideas.</source>
          <target state="translated">GitHub 계정이있는 경우 &lt;a href=&quot;https://github.com/ansible/ansible&quot;&gt;GitHub 프로젝트&lt;/a&gt; 를 팔로우 할 수도 있습니다. 버그와 기능 아이디어를 공유하기 위해 이슈 트래커를 유지하는 곳이기도합니다.</target>
        </trans-unit>
        <trans-unit id="898d49c1fd7aef29b7df67060cb8a40196c37207" translate="yes" xml:space="preserve">
          <source>You may also wish to install from ports, run:</source>
          <target state="translated">포트에서 설치하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="dbc6e58ff919fb874a8ed48f2ef7580632308ef8" translate="yes" xml:space="preserve">
          <source>You may also wish to read &lt;a href=&quot;../user_guide/playbooks#working-with-playbooks&quot;&gt;Working With Playbooks&lt;/a&gt; at the same time to see how this is used in practice.</source>
          <target state="translated">&lt;a href=&quot;../user_guide/playbooks#working-with-playbooks&quot;&gt;플레이 북 작업&lt;/a&gt; 을 동시에 읽고 실제로 어떻게 사용되는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1687e11d569bfee9ff4cd1f277ec0a2e9b14d7cc" translate="yes" xml:space="preserve">
          <source>You may also wish to read &lt;a href=&quot;../user_guide/playbooks#working-with-playbooks&quot;&gt;Working with playbooks&lt;/a&gt; at the same time to see how this is used in practice.</source>
          <target state="translated">이 기능이 실제로 어떻게 사용되는지 확인하기 위해 &lt;a href=&quot;../user_guide/playbooks#working-with-playbooks&quot;&gt;플레이 북 작업을&lt;/a&gt; 동시에 읽어 볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a79bc9838e495335ea01b5b47f4d439819903f9" translate="yes" xml:space="preserve">
          <source>You may also wish to run from source to get the development branch, which is covered below.</source>
          <target state="translated">소스에서 실행하여 아래에 설명 된 개발 브랜치를 가져올 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a3d3801dc6b0fc6f33e03c5262eeed0b63ffacf" translate="yes" xml:space="preserve">
          <source>You may also wish to run from source to get the latest, which is covered below.</source>
          <target state="translated">아래에서 다루는 최신 정보를 얻기 위해 소스에서 실행할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f72561fb51ec08cdbfdea3d84ff6ec02a677fb6" translate="yes" xml:space="preserve">
          <source>You may check for failure by searching for a word or phrase in the output of a command:</source>
          <target state="translated">명령 출력에서 ​​단어 나 구를 검색하여 실패를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c0209bc334daa91b37d4a4598eb87d32aaecfb4" translate="yes" xml:space="preserve">
          <source>You may either enter a case-sensitive password in this field for the new or existing user.</source>
          <target state="translated">이 필드에 신규 또는 기존 사용자의 대소 문자 구분 비밀번호를 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6f1d0822ce14cef7514ba6b247071807d13669e" translate="yes" xml:space="preserve">
          <source>You may find the following tips useful:</source>
          <target state="translated">다음 팁이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="006bcdd165a17fd44e800176d186afbfbbb05070" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;ANSIBLE_NET_SSH_KEYFILE&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;ANSIBLE_NET_SSH_KEYFILE&lt;/code&gt; 을 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="370c405e905b1642b31d5c87e32aa3eb6d6be95b" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_PASSWORD&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_PASSWORD&lt;/code&gt; 를 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35704ee0cc772e476fe5c9f83428c42295aea39d" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_SERVER&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_SERVER&lt;/code&gt; 를 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc0cbf46a4780b2703666f6573961efb312a8ee3" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_SERVER_PORT&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_SERVER_PORT&lt;/code&gt; 를 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc6a83c0bb41ca29ea531bb3f7e2e787ed558df2" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_TEEM&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_TEEM&lt;/code&gt; 을 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2df0e1222695d78b4918f5efc4252065e1d2b0cf" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_USER&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_USER&lt;/code&gt; 를 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3da5e0c654b1016ecdeec861ecba8b4397eb96ab" translate="yes" xml:space="preserve">
          <source>You may omit this option by setting the environment variable &lt;code&gt;F5_VALIDATE_CERTS&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;F5_VALIDATE_CERTS&lt;/code&gt; 를 설정하여이 옵션을 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2230d0a3a3adc9bb0879a983992c56349acd274" translate="yes" xml:space="preserve">
          <source>You may provide many filters and they will all be applied, except for &lt;code&gt;id&lt;/code&gt; as that will return only</source>
          <target state="translated">당신은 많은 필터를 제공 할 수 있으며, 그들은 모두 제외하고 적용됩니다 &lt;code&gt;id&lt;/code&gt; 가 만 반환로</target>
        </trans-unit>
        <trans-unit id="5fd7bc61b2385c5043810d97adab4ea63b864434" translate="yes" xml:space="preserve">
          <source>You may provide many filters and they will all be applied, except for &lt;code&gt;id&lt;/code&gt; as that will return only the Rule identified by the unique ID provided.</source>
          <target state="translated">많은 필터를 제공 할 수 있으며 제공된 고유 ID로 식별되는 규칙 만 반환하는 &lt;code&gt;id&lt;/code&gt; 를 제외하고 모두 적용 됩니다.</target>
        </trans-unit>
        <trans-unit id="8ee100c0ce61dac01d40c7c8a0384c0213534c3b" translate="yes" xml:space="preserve">
          <source>You may run a task asynchronously by specifying a poll value of 0:</source>
          <target state="translated">폴링 값 0을 지정하여 작업을 비동기 적으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c4b9aed73fd226b2a045b9c2b618e38bcfcc74c" translate="yes" xml:space="preserve">
          <source>You may see a collection of other GCP modules that do not conform to this naming convention. These are the original modules primarily developed by the Ansible community. You will find some overlapping functionality such as with the &amp;ldquo;gce&amp;rdquo; module and the new &amp;ldquo;gcp_compute_instance&amp;rdquo; module. Either can be used, but you may experience issues trying to use them together.</source>
          <target state="translated">이 명명 규칙을 준수하지 않는 다른 GCP 모듈 모음이 표시 될 수 있습니다. 이들은 Ansible 커뮤니티가 주로 개발 한 원래 모듈입니다. &amp;ldquo;gce&amp;rdquo;모듈 및 새로운&amp;ldquo;gcp_compute_instance&amp;rdquo;모듈과 같은 일부 중복되는 기능을 찾을 수 있습니다. 어느 쪽이든 사용할 수 있지만 함께 사용하려고 할 때 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68856aba575b155cb0fd3086e8bbe9402707651f" translate="yes" xml:space="preserve">
          <source>You may specify a maximum of up to 5 ports.</source>
          <target state="translated">최대 5 개의 포트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="306fa001fbba63361ab4be6654c7b60a4de778aa" translate="yes" xml:space="preserve">
          <source>You may specify a number of seconds for the timeout override.</source>
          <target state="translated">시간 초과 재정의에 대한 시간 (초)을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e9a53e845bec296f65d16abc1a612102da5574c" translate="yes" xml:space="preserve">
          <source>You may specify a single list item of &lt;code&gt;default&lt;/code&gt; to set the value back to the system default of &lt;code&gt;127.0.0.0/8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 단일 목록 항목 을 지정하여 값을 시스템 기본값 인 &lt;code&gt;127.0.0.0/8&lt;/code&gt; 로 다시 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1c15a8dad2eb75c9f377a77232af82c427373a3" translate="yes" xml:space="preserve">
          <source>You may specify a single list item of &lt;code&gt;default&lt;/code&gt; to set the value back to the system's default of &lt;code&gt;127.0.0.0/8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 단일 목록 항목 을 지정하여 값을 시스템의 기본값 인 &lt;code&gt;127.0.0.0/8&lt;/code&gt; 로 다시 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9abfab5035f92afb301a0ba3c84a3e37bd605036" translate="yes" xml:space="preserve">
          <source>You may want to verify your playbooks to catch syntax errors and other problems before you run them. The &lt;a href=&quot;../cli/ansible-playbook#ansible-playbook&quot;&gt;ansible-playbook&lt;/a&gt; command offers several options for verification, including &lt;code&gt;--check&lt;/code&gt;, &lt;code&gt;--diff&lt;/code&gt;, &lt;code&gt;--list-hosts&lt;/code&gt;, &lt;code&gt;list-tasks&lt;/code&gt;, and &lt;code&gt;--syntax-check&lt;/code&gt;. The &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/community/other_tools_and_programs.html#validate-playbook-tools&quot;&gt;Tools for Validating Playbooks&lt;/a&gt; describes other tools for validating and testing playbooks.</source>
          <target state="translated">플레이 북을 실행하기 전에 구문 오류 및 기타 문제를 포착하기 위해 플레이 북을 확인할 수 있습니다. &lt;a href=&quot;../cli/ansible-playbook#ansible-playbook&quot;&gt;ansible - 각본의&lt;/a&gt; 명령 이벤트를 포함하여 검증을위한 몇 가지 옵션, &lt;code&gt;--check&lt;/code&gt; , &lt;code&gt;--diff&lt;/code&gt; , &lt;code&gt;--list-hosts&lt;/code&gt; , &lt;code&gt;list-tasks&lt;/code&gt; 및 &lt;code&gt;--syntax-check&lt;/code&gt; . &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/community/other_tools_and_programs.html#validate-playbook-tools&quot;&gt;검증 플레이 북을위한 도구&lt;/a&gt; 의 유효성을 검사하고 플레이 북을 테스트하기 위해 다른 도구에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cf9ad01e0e73cb4262facff972c081bc3d241e15" translate="yes" xml:space="preserve">
          <source>You may want your Ansible handlers to use variables. For example, if the name of a service varies slightly by distribution, you want your output to show the exact name of the restarted service for each target machine. Avoid placing variables in the name of the handler. Since handler names are templated early on, Ansible may not have a value available for a handler name like this:</source>
          <target state="translated">Ansible 핸들러가 변수를 사용하도록 할 수 있습니다. 예를 들어, 서비스 이름이 배포에 따라 약간 다른 경우 출력에 각 대상 시스템에 대해 다시 시작된 서비스의 정확한 이름이 표시되도록하려고합니다. 핸들러 이름에 변수를 배치하지 마십시오. 핸들러 이름은 초기에 템플릿 화되므로 Ansible은 다음과 같이 핸들러 이름에 사용할 수있는 값을 가지고 있지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fa484f48afe07ea5ec9c159daa19f1e3b555de9" translate="yes" xml:space="preserve">
          <source>You might also use an ad-hoc task to install, update, or remove packages on managed nodes using a package management module like yum. To ensure a package is installed without updating it:</source>
          <target state="translated">yum과 같은 패키지 관리 모듈을 사용하여 임시 작업을 사용하여 관리 노드에서 패키지를 설치, 업데이트 또는 제거 할 수도 있습니다. 패키지를 업데이트하지 않고 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="b962324571629f141c7f02843c6e082e539891de" translate="yes" xml:space="preserve">
          <source>You might also want to simply specify the environment for a single task:</source>
          <target state="translated">단일 작업에 대한 환경을 간단히 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a09c72e811800a8fda1a20f752bf4c59e5567fbf" translate="yes" xml:space="preserve">
          <source>You might need to know, change, or set the data type on a variable. For example, a registered variable might contain a dictionary when your next task needs a list, or a user &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;prompt&lt;/a&gt; might return a string when your playbook needs a boolean value. Use the &lt;code&gt;type_debug&lt;/code&gt;, &lt;code&gt;dict2items&lt;/code&gt;, and &lt;code&gt;items2dict&lt;/code&gt; filters to manage data types. You can also use the data type itself to cast a value as a specific data type.</source>
          <target state="translated">변수의 데이터 유형을 알고, 변경하거나 설정해야 할 수 있습니다. 예를 들어 등록 된 변수는 다음 작업에 목록이 필요할 때 사전을 포함하거나 플레이 북에 부울 값이 필요할 때 사용자 &lt;a href=&quot;playbooks_prompts#playbooks-prompts&quot;&gt;프롬프트&lt;/a&gt; 가 문자열을 반환 할 수 있습니다. 사용 &lt;code&gt;type_debug&lt;/code&gt; , &lt;code&gt;dict2items&lt;/code&gt; 을 하고 &lt;code&gt;items2dict&lt;/code&gt; 는 데이터 유형을 관리하기 위해 필터링합니다. 데이터 유형 자체를 사용하여 값을 특정 데이터 유형으로 캐스트 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d18ea25d5c1a08a267c09f938d52eadafab6e11" translate="yes" xml:space="preserve">
          <source>You must also configure MAC masquerade addresses and disable &lt;code&gt;arp&lt;/code&gt; on the virtual address when Spanning is enabled.</source>
          <target state="translated">또한 스패닝이 활성화되면 MAC 가장 무도회 주소를 구성 하고 가상 주소에서 &lt;code&gt;arp&lt;/code&gt; 를 비활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0787621ab91ff4f78bbf0d9814b30227b9003cf2" translate="yes" xml:space="preserve">
          <source>You must be mindful to name your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not do this, the behavior of the module is undefined and you may end up putting licenses in the wrong registration key pool.</source>
          <target state="translated">등록 풀의 이름을 고유 한 이름으로 지정해야합니다. BIG-IQ는 이것을 요구하지 않지만이 모듈은 이것을 요구합니다. 이렇게하지 않으면 모듈의 동작이 정의되지 않아 잘못된 등록 키 풀에 라이센스가 배치 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="060f62d337f2f73d0cd706903dd3e95d65cd19f5" translate="yes" xml:space="preserve">
          <source>You must create a model for your new resource. The model is the single source of truth for both the argspec and docstring, keeping them in sync. Once your model is approved, you can use the resource module builder to generate three items based on the model:</source>
          <target state="translated">새 리소스에 대한 모델을 만들어야합니다. 이 모델은 argspec과 docstring 모두에 대한 단일 소스이며 동기화 상태를 유지합니다. 모델이 승인되면 리소스 모듈 빌더를 사용하여 모델에 따라 세 가지 항목을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c30ac1b2c3e636c703734c44996c4c9eab0a3e51" translate="yes" xml:space="preserve">
          <source>You must create a model for your new resource. The resource module builder uses this model to create:</source>
          <target state="translated">새 자원에 대한 모델을 작성해야합니다. 자원 모듈 빌더는이 모델을 사용하여 다음을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="cc95ff806a16fccda3ff8b5329b010cf43a5b593" translate="yes" xml:space="preserve">
          <source>You must ensure that &lt;code&gt;psycopg2&lt;/code&gt; is installed on the host before using this module.</source>
          <target state="translated">이 모듈을 사용하기 전에 &lt;code&gt;psycopg2&lt;/code&gt; 가 호스트에 설치되어 있는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="60611420e85c2e847bcff50f233cad6b3d43b3ca" translate="yes" xml:space="preserve">
          <source>You must ensure that psycopg2 is installed on the host before using this module.</source>
          <target state="translated">이 모듈을 사용하기 전에 psycopg2가 호스트에 설치되어 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f78869c0b548dfcb390402a8de750fddebfcd0c" translate="yes" xml:space="preserve">
          <source>You must give your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not, the behavior of the module is undefined and you may end up putting licenses in the wrong registration key pool.</source>
          <target state="translated">등록 풀에 고유 한 이름을 제공해야합니다. BIG-IQ는 이것을 필요로하지 않지만,이 모듈은 필요합니다. 그렇지 않으면 모듈의 동작이 정의되지 않고 잘못된 등록 키 풀에 라이센스를 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0cd24addc678fa41509995d792d982943105d28" translate="yes" xml:space="preserve">
          <source>You must have a correctly configured offload network for offload to work.</source>
          <target state="translated">오프로드가 작동하려면 오프로드 네트워크를 올바르게 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="571f357dcafb5852114c10b1b26588573f23542f" translate="yes" xml:space="preserve">
          <source>You must have a correctly configured remote array or target</source>
          <target state="translated">올바르게 구성된 원격 어레이 또는 대상이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="21507a8b7c7ace9b53ca20763499f434be47b834" translate="yes" xml:space="preserve">
          <source>You must have an existing LogicMonitor account for this module to function.</source>
          <target state="translated">이 모듈이 작동하려면 기존 LogicMonitor 계정이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ac9738b1c5605e2d270a973346eb0ebc709c3367" translate="yes" xml:space="preserve">
          <source>You must list the prompt and the answers in the same order (that is, prompt[0] is answered by answer[0]).</source>
          <target state="translated">프롬프트와 응답을 같은 순서로 나열해야합니다 (즉, prompt [0]은 answer [0]에 의해 응답 됨).</target>
        </trans-unit>
        <trans-unit id="f2e7cc94e866136b882ec64af220d0d01e77d99a" translate="yes" xml:space="preserve">
          <source>You must name your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not, the behavior of the module is undefined, and you may end up putting licenses in the wrong registration key pool.</source>
          <target state="translated">등록 풀의 고유 이름을 지정해야합니다. BIG-IQ는 이것을 필요로하지 않지만,이 모듈은 필요합니다. 그렇지 않으면 모듈의 동작이 정의되지 않고 잘못된 등록 키 풀에 라이센스를 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a599a45a404c7ca74f5975cd224475c9d4aff3fc" translate="yes" xml:space="preserve">
          <source>You must only use one of either &quot;disk-size&quot; or &quot;disk-size-with-unit&quot; parameters.</source>
          <target state="translated">&quot;disk-size&quot;또는 &quot;disk-size-with-unit&quot;매개 변수 중 하나만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="102103ff22729103b9f8da6672f90db4c9a0fbc3" translate="yes" xml:space="preserve">
          <source>You must pass all desired launch permissions if you wish to modify existing launch permissions (passing just groups will remove all users)</source>
          <target state="translated">기존 실행 권한을 수정하려면 원하는 모든 시작 권한을 전달해야합니다 (그룹 만 전달하면 모든 사용자가 제거됨).</target>
        </trans-unit>
        <trans-unit id="2f7bad302363a21b4c84ad2f29dfaa394eb1c01d" translate="yes" xml:space="preserve">
          <source>You must provide either &lt;code&gt;vm&lt;/code&gt; parameter or &lt;code&gt;template&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;vm&lt;/code&gt; 매개 변수 또는 &lt;code&gt;template&lt;/code&gt; 매개 변수를 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="26ab864ab04f4b4f63b86f81250e551ad5999ffd" translate="yes" xml:space="preserve">
          <source>You must provide either this property or the rawDisk.source property but not both to create an image.</source>
          <target state="translated">이미지를 작성하려면이 특성 또는 rawDisk.source 특성을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="c91376cd31935f13766369dc6aee2a0877fe0029" translate="yes" xml:space="preserve">
          <source>You must run the NIOS lookup plugins locally by specifying &lt;code&gt;connection: local&lt;/code&gt;. See &lt;a href=&quot;../plugins/lookup#lookup-plugins&quot;&gt;lookup plugins&lt;/a&gt; for more detail.</source>
          <target state="translated">&lt;code&gt;connection: local&lt;/code&gt; 을 지정하여 NIOS 조회 플러그인을 로컬로 실행해야합니다 . 자세한 내용은 &lt;a href=&quot;../plugins/lookup#lookup-plugins&quot;&gt;검색 플러그인&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0bc6f724d3129b32ccdb986f0805d3e4f4127690" translate="yes" xml:space="preserve">
          <source>You must run this module with async, otherwise it will hang until the expire period has passed.</source>
          <target state="translated">이 모듈을 비동기 적으로 실행해야합니다. 그렇지 않으면 만료 기간이 지날 때까지 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="09edb05aba1e9aa07996561b429450284e002761" translate="yes" xml:space="preserve">
          <source>You must set &lt;code&gt;PUREFA_URL&lt;/code&gt; and &lt;code&gt;PUREFA_API&lt;/code&gt; environment variables if &lt;em&gt;fa_url&lt;/em&gt; and &lt;em&gt;api_token&lt;/em&gt; arguments are not passed to the module directly</source>
          <target state="translated">&lt;em&gt;fa_url&lt;/em&gt; 및 &lt;em&gt;api_token&lt;/em&gt; 인수가 모듈에 직접 전달되지 않으면 &lt;code&gt;PUREFA_URL&lt;/code&gt; 및 &lt;code&gt;PUREFA_API&lt;/code&gt; 환경 변수를 설정해야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9cad5236a7e2bd702f04e0fe823ee94e705a082" translate="yes" xml:space="preserve">
          <source>You must set &lt;code&gt;PUREFB_URL&lt;/code&gt; and &lt;code&gt;PUREFB_API&lt;/code&gt; environment variables if &lt;em&gt;fb_url&lt;/em&gt; and &lt;em&gt;api_token&lt;/em&gt; arguments are not passed to the module directly</source>
          <target state="translated">&lt;em&gt;fb_url&lt;/em&gt; 및 &lt;em&gt;api_token&lt;/em&gt; 인수가 모듈에 직접 전달되지 않으면 &lt;code&gt;PUREFB_URL&lt;/code&gt; 및 &lt;code&gt;PUREFB_API&lt;/code&gt; 환경 변수를 설정해야합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81fce0fbe6d9648ea59d1df36527174427cbddeb" translate="yes" xml:space="preserve">
          <source>You must set INFINIBOX_USER and INFINIBOX_PASSWORD environment variables if user and password arguments are not passed to the module directly</source>
          <target state="translated">사용자 및 비밀번호 인수가 모듈에 직접 전달되지 않으면 INFINIBOX_USER 및 INFINIBOX_PASSWORD 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="90488aac954bfc028dedb9d9ec05ffb6a620c54a" translate="yes" xml:space="preserve">
          <source>You must set the &lt;code&gt;until&lt;/code&gt; parameter if you want a task to retry. If &lt;code&gt;until&lt;/code&gt; is not defined, the value for the &lt;code&gt;retries&lt;/code&gt; parameter is forced to 1.</source>
          <target state="translated">작업을 다시 시도 하려면 &lt;code&gt;until&lt;/code&gt; 매개 변수 를 설정해야합니다 . 경우 &lt;code&gt;until&lt;/code&gt; 정의되지는 값 &lt;code&gt;retries&lt;/code&gt; 매개 변수를 1로 강제된다.</target>
        </trans-unit>
        <trans-unit id="ab07fc52334aa3f17037e06025e5d3f45547393d" translate="yes" xml:space="preserve">
          <source>You must set the connection type to either &lt;code&gt;connection: ansible.netcommon.network_cli&lt;/code&gt; or &lt;code&gt;connection: ansible.netcommon.httpapi&lt;/code&gt; to use &lt;code&gt;become&lt;/code&gt; for privilege escalation on network devices. Check the &lt;a href=&quot;../network/user_guide/platform_index#platform-options&quot;&gt;Platform Options&lt;/a&gt; documentation for details.</source>
          <target state="translated">연결 유형을 &lt;code&gt;connection: ansible.netcommon.network_cli&lt;/code&gt; 또는 &lt;code&gt;connection: ansible.netcommon.httpapi&lt;/code&gt; 로 설정해야 네트워크 장치에서 권한 에스컬레이션에 사용할 &lt;code&gt;become&lt;/code&gt; 있습니다. 자세한 내용 은 &lt;a href=&quot;../network/user_guide/platform_index#platform-options&quot;&gt;플랫폼 옵션&lt;/a&gt; 문서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d0dbdbdc4000768993eaca104640210d267eb6f0" translate="yes" xml:space="preserve">
          <source>You must set the connection type to either &lt;code&gt;connection: network_cli&lt;/code&gt; or &lt;code&gt;connection: httpapi&lt;/code&gt; to use &lt;code&gt;become&lt;/code&gt; for privilege escalation on network devices. Check the &lt;a href=&quot;../network/user_guide/platform_index#platform-options&quot;&gt;Platform Options&lt;/a&gt; and &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;Network modules&lt;/a&gt; documentation for details.</source>
          <target state="translated">당신이 중 하나에 연결 유형을 설정해야합니다 &lt;code&gt;connection: network_cli&lt;/code&gt; 또는 &lt;code&gt;connection: httpapi&lt;/code&gt; 사용하기 &lt;code&gt;become&lt;/code&gt; 네트워크 장치에 권한 상승을 위해. 자세한 내용은 &lt;a href=&quot;../network/user_guide/platform_index#platform-options&quot;&gt;플랫폼 옵션&lt;/a&gt; 및 &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;네트워크 모듈&lt;/a&gt; 설명서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a8e8b0983a33c2516783f63f486c114729a702f" translate="yes" xml:space="preserve">
          <source>You must specify a number in the range of 0 to 65535.</source>
          <target state="translated">0에서 65535 사이의 숫자를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="cb6b62a35dc509c1af90428d888d8b4b57d7552c" translate="yes" xml:space="preserve">
          <source>You must specify an NFS or SMB policy, or both on creation and deletion.</source>
          <target state="translated">NFS 또는 SMB 정책을 지정하거나 생성 및 삭제시 둘 다 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b947a91273c82dacaf84b0a1bd6777df8ac32647" translate="yes" xml:space="preserve">
          <source>You must specify both the variable name and the value with &lt;code&gt;--extra-vars&lt;/code&gt;.</source>
          <target state="translated">변수 이름과 값을 &lt;code&gt;--extra-vars&lt;/code&gt; 로 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="50baaff61e0737d4da991c73700758236c2bfb05" translate="yes" xml:space="preserve">
          <source>You must specify either a &lt;code&gt;datacenter_name&lt;/code&gt; or a &lt;code&gt;folder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;datacenter_name&lt;/code&gt; 또는 &lt;code&gt;folder&lt;/code&gt; 지정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="82154f99c74bcd2ddbd87475e8ece07ca250aee6" translate="yes" xml:space="preserve">
          <source>You must specify either a &lt;code&gt;folder&lt;/code&gt; or a &lt;code&gt;datacenter_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;folder&lt;/code&gt; 또는 &lt;code&gt;datacenter_name&lt;/code&gt; 을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="219f673d4e52097f407a0545d2cb340e97a5f522" translate="yes" xml:space="preserve">
          <source>You must specify lv (when managing the state of logical volumes) or thinpool (when managing a thin provisioned volume).</source>
          <target state="translated">lv (논리 볼륨 상태를 관리 할 때) 또는 thinpool (씬 프로비저닝 된 볼륨을 관리 할 때)을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b987eafec7ce1bee20506ecfabc9886814f10f87" translate="yes" xml:space="preserve">
          <source>You must specify one of &lt;em&gt;fail_count&lt;/em&gt; and &lt;em&gt;fail_percentage&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;fail_count&lt;/em&gt; 및 &lt;em&gt;fail_percentage&lt;/em&gt; 중 하나를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5a1e9b632275da8e5f0420f9046c52893db4e31b" translate="yes" xml:space="preserve">
          <source>You must specify one of &lt;em&gt;parallel_count&lt;/em&gt; and &lt;em&gt;parallel_percentage&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;parallel_count&lt;/em&gt; 및 &lt;em&gt;parallel_percentage&lt;/em&gt; 중 하나를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="555d3b00ff83b7fa3f313ec5711f7c0da968992b" translate="yes" xml:space="preserve">
          <source>You need a working hponcfg on the target system.</source>
          <target state="translated">대상 시스템에서 작동중인 hponcfg가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5288ab9e89758aaac9bd8fff6539207dc7995d1a" translate="yes" xml:space="preserve">
          <source>You need an NIOS account with the WAPI feature enabled to use Ansible with Infoblox.</source>
          <target state="translated">Infoblox와 함께 Ansible을 사용하려면 WAPI 기능이 활성화 된 NIOS 계정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="de1dd52a9f15085486157063aa5ffb75e387cd6b" translate="yes" xml:space="preserve">
          <source>You need at least hcloud-python 1.3.0.</source>
          <target state="translated">hcloud-python 1.3.0 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a863fa4dc820a090e4e259ccddf5e9a54bbceec3" translate="yes" xml:space="preserve">
          <source>You need root rights to read or adjust the inittab with the &lt;code&gt;lsitab&lt;/code&gt;, &lt;code&gt;chitab&lt;/code&gt;, &lt;code&gt;mkitab&lt;/code&gt; or &lt;code&gt;rmitab&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;lsitab&lt;/code&gt; , &lt;code&gt;chitab&lt;/code&gt; , &lt;code&gt;mkitab&lt;/code&gt; 또는 &lt;code&gt;rmitab&lt;/code&gt; 명령을 사용 하여 inittab을 읽거나 조정하려면 루트 권한이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="bc41990a3c8d405bdc35b0f30d6618c07a00b4ee" translate="yes" xml:space="preserve">
          <source>You need the following parameters with your ACI module(s) for it to work:</source>
          <target state="translated">작동하려면 ACI 모듈과 함께 다음 매개 변수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1a4baf621fa1343dfd6e8326525d7722ade690b6" translate="yes" xml:space="preserve">
          <source>You need to install at least one platform provider role for your network user roles, and set &lt;code&gt;ansible_network_provider&lt;/code&gt; to that provider (for example, &lt;code&gt;ansible_network_provider: ansible-network.cisco_ios&lt;/code&gt;). Ansible Galaxy automatically installs any other dependencies listed in the role details on Ansible Galaxy.</source>
          <target state="translated">네트워크 사용자 역할에 대해 하나 이상의 플랫폼 제공자 역할을 설치하고 &lt;code&gt;ansible_network_provider&lt;/code&gt; 를 해당 제공자로 설정 해야 합니다 (예 &lt;code&gt;ansible_network_provider: ansible-network.cisco_ios&lt;/code&gt; ). Ansible Galaxy는 Ansible Galaxy의 역할 세부 정보에 나열된 다른 모든 종속성을 자동으로 설치합니다.</target>
        </trans-unit>
        <trans-unit id="79632b833bec335fc8abfedd90ca7d759981cb13" translate="yes" xml:space="preserve">
          <source>You need to install this Python SDK on host from where you want to invoke VMware automation. For example, if you are using control node then &lt;code&gt;pyVmomi&lt;/code&gt; must be installed on control node.</source>
          <target state="translated">VMware 자동화를 호출하려는 호스트에서이 Python SDK를 설치해야합니다. 예를 들어, 제어 노드를 사용하는 경우 &lt;code&gt;pyVmomi&lt;/code&gt; 가 제어 노드에 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9be6211b5bf25b8a54bdb5a2a8b9f8fa18e5ccf6" translate="yes" xml:space="preserve">
          <source>You need to open an account and log into it before you can get a token. You can find your token at the following page: &lt;a href=&quot;https://console.online.net/en/api/access&quot;&gt;https://console.online.net/en/api/access&lt;/a&gt;</source>
          <target state="translated">토큰을 받으려면 계정을 열고 로그인해야합니다. 다음 페이지에서 토큰을 찾을 수 있습니다. &lt;a href=&quot;https://console.online.net/en/api/access&quot;&gt;https://console.online.net/en/api/access&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd8ea8d71b3e31791c293eee10240ad76168c629" translate="yes" xml:space="preserve">
          <source>You need to provide this to use the &quot;Synced Content&quot; feature.</source>
          <target state="translated">&quot;동기화 된 콘텐츠&quot;기능을 사용하려면이를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="201b679e5713818a39a54c886a4b24b9bea98d88" translate="yes" xml:space="preserve">
          <source>You need to reboot the ESXi host if you change the configuration.</source>
          <target state="translated">구성을 변경하면 ESXi 호스트를 재부팅해야합니다.</target>
        </trans-unit>
        <trans-unit id="de9333d3561e1aa310c2ec2fef6a0264fd497e2e" translate="yes" xml:space="preserve">
          <source>You need to reset the agent (to factory defaults) if you want to clear all community strings, trap targets, or filters</source>
          <target state="translated">모든 커뮤니티 문자열, 트랩 대상 또는 필터를 지우려면 에이전트를 공장 기본값으로 재설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="25e705c6c053d9ba70497d36213eb4828c50f1d5" translate="yes" xml:space="preserve">
          <source>You need to run the task two times if you want to remove all LAGs and change the support mode to &amp;lsquo;basic&amp;rsquo;</source>
          <target state="translated">모든 LAG를 제거하고 지원 모드를 '기본'으로 변경하려면 작업을 두 번 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad18c46f4d9466b5188d294dc8040d3a4ca8ca68" translate="yes" xml:space="preserve">
          <source>You need to set this password on the LXD server before running this module using the following command. lxc config set core.trust_password &amp;lt;some random password&amp;gt; See &lt;a href=&quot;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/&quot;&gt;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/&lt;/a&gt;</source>
          <target state="translated">다음 명령을 사용하여이 모듈을 실행하기 전에 LXD 서버에서이 비밀번호를 설정해야합니다. lxc config set core.trust_password &amp;lt;일부 임의 비밀번호&amp;gt; &lt;a href=&quot;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/&quot;&gt;https://www.stgraber.org/2016/04/18/lxd-api-direct-interaction/ 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e91da18021864ea5f774e7ea1d091cc414f6c9a4" translate="yes" xml:space="preserve">
          <source>You need to use &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, and &lt;code&gt;community&lt;/code&gt; for each trap target.</source>
          <target state="translated">각 트랩 대상에 대해 &lt;code&gt;hostname&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; 및 &lt;code&gt;community&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="9439d2a544e093d5f9ef000e070e999675f4a138" translate="yes" xml:space="preserve">
          <source>You need to use Python 2.7.9 version in order to use &lt;code&gt;validate_certs&lt;/code&gt; option, as this version is capable of changing the SSL verification behaviours</source>
          <target state="translated">&lt;code&gt;validate_certs&lt;/code&gt; 옵션 을 사용하려면 이 버전에서 SSL 확인 동작을 변경할 수 있으므로 Python 2.7.9 버전을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="671291856d0d1f52d999e71c2d72f61d82bf5323" translate="yes" xml:space="preserve">
          <source>You need to use Python 2.7.9 version in order to use &lt;code&gt;validate_certs&lt;/code&gt; option, as this version is capable of changing the SSL verification behaviours.</source>
          <target state="translated">&lt;code&gt;validate_certs&lt;/code&gt; 옵션 을 사용하려면 이 버전에서 SSL 확인 동작을 변경할 수 있으므로 Python 2.7.9 버전을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="598f5e935d0c481d7bae4ba00e6a2340df190458" translate="yes" xml:space="preserve">
          <source>You probably don't want to modifiy this.</source>
          <target state="translated">아마도 이것을 수정하고 싶지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="e8fb540f87e614acfbcf454699c41a1d1a21dd89" translate="yes" xml:space="preserve">
          <source>You should already have documented each module as described in &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/developing_modules_documenting.html#developing-modules-documenting&quot;&gt;Module format and documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/developing_modules_documenting.html#developing-modules-documenting&quot;&gt;모듈 형식 및 문서에&lt;/a&gt; 설명 된대로 각 모듈을 이미 문서화해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="bb5e94a4329161f454bd891622e024628540e593" translate="yes" xml:space="preserve">
          <source>You should already have documented each module as described in &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_modules_documenting.html#developing-modules-documenting&quot;&gt;Module format and documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/2.9/dev_guide/developing_modules_documenting.html#developing-modules-documenting&quot;&gt;모듈 형식 및 설명서에&lt;/a&gt; 설명 된대로 각 모듈을 이미 문서화해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="0e938d6d841cb8cd522e846aa4006061ddb3e352" translate="yes" xml:space="preserve">
          <source>You should also be aware of &lt;code&gt;? : -&lt;/code&gt;. In YAML, they are allowed at the beginning of a string if a non-space character follows, but YAML processor implementations differ, so it&amp;rsquo;s better to use quotes.</source>
          <target state="translated">당신도 알고 있어야 &lt;code&gt;? : -&lt;/code&gt; . YAML에서는 공백이 아닌 문자가 뒤에 오는 경우 문자열의 시작 부분에서 허용되지만 YAML 프로세서 구현이 다르므로 따옴표를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="55f691a5aca0cd2cc35b529211f4d1b49ff05446" translate="yes" xml:space="preserve">
          <source>You should also consult the &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html#modules-by-category&quot;&gt;module documentation&lt;/a&gt; section. Modules like &lt;a href=&quot;../modules/ec2_elb_module#ec2-elb-module&quot;&gt;ec2_elb&lt;/a&gt;, &lt;a href=&quot;../modules/nagios_module#nagios-module&quot;&gt;nagios&lt;/a&gt;, &lt;a href=&quot;../modules/bigip_pool_module#bigip-pool-module&quot;&gt;bigip_pool&lt;/a&gt;, and other &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;Network modules&lt;/a&gt; dovetail neatly with the concepts mentioned here.</source>
          <target state="translated">또한 &lt;a href=&quot;https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html#modules-by-category&quot;&gt;모듈 설명서&lt;/a&gt; 섹션을 참조해야합니다 . 같은 모듈 &lt;a href=&quot;../modules/ec2_elb_module#ec2-elb-module&quot;&gt;ec2_elb&lt;/a&gt; , &lt;a href=&quot;../modules/nagios_module#nagios-module&quot;&gt;Nagios는&lt;/a&gt; , &lt;a href=&quot;../modules/bigip_pool_module#bigip-pool-module&quot;&gt;bigip_pool&lt;/a&gt; 및 기타 &lt;a href=&quot;../modules/list_of_network_modules#network-modules&quot;&gt;네트워크 모듈은&lt;/a&gt; 여기에 언급 된 개념을 깔끔하게 더브 테일.</target>
        </trans-unit>
        <trans-unit id="1019c6e2ca989df12f6a8578414dbc1d288d08cd" translate="yes" xml:space="preserve">
          <source>You should always wrap this value in quotes to prevent Ansible from interpreting the value as a literal hexadecimal number and converting it to an integer.</source>
          <target state="translated">Ansible이 값을 리터럴 16 진 숫자로 해석하여 정수로 변환하지 못하도록하려면 항상이 값을 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="12be60b9ca0a8bf108efa1f6e5f2a0fd10a25a79" translate="yes" xml:space="preserve">
          <source>You should choose where to define a variable based on the kind of control you might want over values.</source>
          <target state="translated">값에 대해 원하는 제어 유형에 따라 변수를 정의 할 위치를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="716f160017a875527e2358c5aeb7f06915473550" translate="yes" xml:space="preserve">
          <source>You should encrypt sensitive or secret variables with Ansible Vault. However, encrypting the variable names as well as the variable values makes it hard to find the source of the values. You can keep the names of your variables accessible (by &lt;code&gt;grep&lt;/code&gt;, for example) without exposing any secrets by adding a layer of indirection:</source>
          <target state="translated">Ansible Vault로 민감한 변수 또는 비밀 변수를 암호화해야합니다. 그러나 변수 이름과 변수 값을 암호화하면 값의 소스를 찾기가 어렵습니다. 간접 계층을 추가하여 비밀을 노출하지 않고 변수 이름에 액세스 할 수 있도록 ( 예 : &lt;code&gt;grep&lt;/code&gt; ) 유지할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="620f8318dbd982fcf567476e8a5df3d559b89d50" translate="yes" xml:space="preserve">
          <source>You should look at &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;Example Playbooks&lt;/a&gt; while reading along with the playbook documentation. These illustrate best practices as well as how to put many of the various concepts together.</source>
          <target state="translated">플레이 북 설명서와 함께 읽는 동안 &lt;a href=&quot;https://github.com/ansible/ansible-examples&quot;&gt;예제 플레이 북&lt;/a&gt; 을 봐야 합니다. 여기에는 모범 사례와 다양한 개념을 결합하는 방법이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ff063838cf096654dfaca81b92393bd62833057" translate="yes" xml:space="preserve">
          <source>You should not alter which plugin is used unless you have a setup in which the default &lt;code&gt;/bin/sh&lt;/code&gt; is not a POSIX compatible shell or is not available for execution.</source>
          <target state="translated">기본 &lt;code&gt;/bin/sh&lt;/code&gt; 가 POSIX 호환 쉘이 아니거나 실행할 수없는 설정이없는 경우 사용되는 플러그인을 변경해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f01ddea41833e883bfe1c0380b62ccd26295c4b" translate="yes" xml:space="preserve">
          <source>You should not parse semi-structured text when:</source>
          <target state="translated">다음과 같은 경우 반 구조화 된 텍스트를 구문 분석해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="dd5591967d4de7847d7cb6a89eeb9de562676a48" translate="yes" xml:space="preserve">
          <source>You should not use this option unless you really know what you are doing.</source>
          <target state="translated">실제로 수행중인 작업을 모르면이 옵션을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="94a363fd7a9b93498db3d5204989179f7889793c" translate="yes" xml:space="preserve">
          <source>You should only consider setting this value in cases where you know exactly what you are doing, &lt;b&gt;or&lt;/b&gt;, you are working with a pre-existing internal data group.</source>
          <target state="translated">수행중인 작업을 정확히 알고 &lt;b&gt;있거나&lt;/b&gt; 기존 내부 데이터 그룹으로 작업 하는 경우에만이 값을 설정하는 것을 고려해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e6b71ee483ce28ee013aa8e65435090a8affe826" translate="yes" xml:space="preserve">
          <source>You should only consider setting this value in cases where you know exactly what you're doing, &lt;b&gt;or&lt;/b&gt;, you are working with a pre-existing internal data group.</source>
          <target state="translated">현재 수행중인 작업을 정확히 알고 &lt;b&gt;있거나&lt;/b&gt; 기존 내부 데이터 그룹으로 작업중인 경우에만이 값을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="deee85f76e3b7864a88db30e64f0e253beb8339d" translate="yes" xml:space="preserve">
          <source>You should only need to use this option in very rare circumstances.</source>
          <target state="translated">매우 드문 경우에만이 옵션을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7fd228a6074789e8d3f95dba4714709e8808fdfb" translate="yes" xml:space="preserve">
          <source>You should only quote strings when it is absolutely necessary or required by YAML, and then use single quotes.</source>
          <target state="translated">YAML에 반드시 필요하거나 필요한 경우에만 문자열을 인용 한 다음 작은 따옴표를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9b2b9b07a713787c3c0a83daeaf2d5caac34827" translate="yes" xml:space="preserve">
          <source>You should only run &lt;code&gt;ansible-base&lt;/code&gt; from &lt;code&gt;devel&lt;/code&gt; if you are modifying &lt;code&gt;ansible-base&lt;/code&gt; or trying out features under development. This is a rapidly changing source of code and can become unstable at any point.</source>
          <target state="translated">당신은 실행해야 &lt;code&gt;ansible-base&lt;/code&gt; 에서 &lt;code&gt;devel&lt;/code&gt; 수정중인 경우 &lt;code&gt;ansible-base&lt;/code&gt; 또는 개발중인 기능을 시도. 이것은 빠르게 변화하는 코드 소스이며 언제든지 불안정해질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f5135e6437ceb9ab9fc1fce07459ea799058464" translate="yes" xml:space="preserve">
          <source>You should only run &lt;code&gt;ansible-base&lt;/code&gt; from &lt;code&gt;devel&lt;/code&gt; if you are modifying &lt;code&gt;ansible-base&lt;/code&gt;, or trying out features under development. This is a rapidly changing source of code and can become unstable at any point.</source>
          <target state="translated">당신은 실행해야 &lt;code&gt;ansible-base&lt;/code&gt; 에서 &lt;code&gt;devel&lt;/code&gt; 수정중인 경우 &lt;code&gt;ansible-base&lt;/code&gt; , 또는 개발중인 기능을 시도. 이것은 빠르게 변화하는 코드 소스이며 언제든지 불안정해질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7631c4ebdb7c031cd87200d1f0cccdb8e89d20ae" translate="yes" xml:space="preserve">
          <source>You should only use this field if the automatic selection is not working for some reason.</source>
          <target state="translated">어떤 이유로 든 자동 선택이 작동하지 않는 경우에만이 필드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="48ef5ef54c8f2e53bb539dd2daec816835cd5361" translate="yes" xml:space="preserve">
          <source>You should place the above commands into your shells profile file such as &lt;code&gt;~/.profile&lt;/code&gt; or &lt;code&gt;~/.bash_profile&lt;/code&gt;.</source>
          <target state="translated">위의 명령을 &lt;code&gt;~/.profile&lt;/code&gt; 또는 &lt;code&gt;~/.bash_profile&lt;/code&gt; 과 같은 쉘 프로파일 파일에 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="229adac789ac7286be2b1b10272a190d148952ea" translate="yes" xml:space="preserve">
          <source>You should provide this parameter when &lt;code&gt;state&lt;/code&gt; is &lt;code&gt;absent&lt;/code&gt;, so the correct community is removed. To remove the &lt;code&gt;public&lt;/code&gt; SNMP community that comes with a BIG-IP, this parameter should be &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 가 &lt;code&gt;absent&lt;/code&gt; 인 경우이 매개 변수를 제공해야 올바른 커뮤니티가 제거됩니다. BIG-IP와 함께 제공 되는 &lt;code&gt;public&lt;/code&gt; SNMP 커뮤니티 를 제거하려면 이 매개 변수가 &lt;code&gt;default&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="05c60535aa4d7b6c2bdc5aab8922ca49d6440e52" translate="yes" xml:space="preserve">
          <source>You should run &lt;code&gt;ansible-test sanity&lt;/code&gt; and &lt;code&gt;tox -elinters&lt;/code&gt; from the collection root directory before pushing your PR to an Ansible-maintained collection. The CI runs both and will fail if these tests fail. See &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/testing.html#developing-testing&quot;&gt;Testing Ansible&lt;/a&gt; for details on &lt;code&gt;ansible-test sanity&lt;/code&gt;.</source>
          <target state="translated">PR을 Ansible이 유지 관리하는 컬렉션으로 푸시하기 전에 컬렉션 루트 디렉터리에서 &lt;code&gt;ansible-test sanity&lt;/code&gt; 및 &lt;code&gt;tox -elinters&lt;/code&gt; 를 실행해야합니다 . CI는 둘 다 실행되며 이러한 테스트가 실패하면 실패합니다. &lt;code&gt;ansible-test sanity&lt;/code&gt; 대한 자세한 내용은 &lt;a href=&quot;https://docs.ansible.com/ansible/2.10/dev_guide/testing.html#developing-testing&quot;&gt;Ansible 테스트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="80653ed9e9b6af9acd314921888997d2e7a76302" translate="yes" xml:space="preserve">
          <source>You should see output for each host in your inventory, similar to this:</source>
          <target state="translated">다음과 같이 인벤토리의 각 호스트에 대한 출력이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="1f118c99f6abec0fd0de2428b67c19c19060ccef" translate="yes" xml:space="preserve">
          <source>You should take into account the transmission and propagation delays for the interface when you set this value.</source>
          <target state="translated">이 값을 설정할 때 인터페이스의 전송 및 전파 지연을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="f016a10351300af45a3dbc86882edfb8e05b7f31" translate="yes" xml:space="preserve">
          <source>You should use this with the wait option. Since you can not release an address while a delete operation is happening.</source>
          <target state="translated">이것을 wait 옵션과 함께 사용해야합니다. 삭제 작업이 진행되는 동안 주소를 해제 할 수 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b142dddebd315ed6ac78806bae7e5c88d817b57b" translate="yes" xml:space="preserve">
          <source>You should use vhost, configure_priv, write_priv, and read_priv options instead if you care about permissions for just some vhosts.</source>
          <target state="translated">일부 vhost에 대한 권한 만 신경 쓰려면 대신 vhost, configure_priv, write_priv 및 read_priv 옵션을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="adf6fcc3f884136e371703c863d1704abbe2241c" translate="yes" xml:space="preserve">
          <source>You shouldn&amp;rsquo;t attempt run a task asynchronously by specifying a poll value of 0 with operations that require exclusive locks (such as yum transactions) if you expect to run other commands later in the playbook against those same resources.</source>
          <target state="translated">플레이 북에서 동일한 리소스에 대해 다른 명령을 나중에 실행하려는 경우 배타적 잠금 (예 : yum 트랜잭션)이 필요한 작업에 폴 값 0을 지정하여 작업을 비동기식으로 실행하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="5187e05884114ce62434411dc709f4d3a2a262f5" translate="yes" xml:space="preserve">
          <source>You specify role dependencies in the &lt;code&gt;meta/main.yml&lt;/code&gt; file by providing a list of roles. If the source of a role is Galaxy, you can simply specify the role in the format &lt;code&gt;namespace.role_name&lt;/code&gt;. You can also use the more complex format in &lt;code&gt;requirements.yml&lt;/code&gt;, allowing you to provide &lt;code&gt;src&lt;/code&gt;, &lt;code&gt;scm&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">역할 목록을 제공 하여 &lt;code&gt;meta/main.yml&lt;/code&gt; 파일 에서 역할 종속성을 지정 하십시오. 역할의 소스가 Galaxy 인 경우 간단히 &lt;code&gt;namespace.role_name&lt;/code&gt; 형식으로 역할을 지정할 수 있습니다 . &lt;code&gt;requirements.yml&lt;/code&gt; 에서 더 복잡한 형식을 사용하여 &lt;code&gt;src&lt;/code&gt; , &lt;code&gt;scm&lt;/code&gt; , &lt;code&gt;version&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; 을 제공 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="078c8f5c7d3da32b93cb9663be369ed7d2aacf08" translate="yes" xml:space="preserve">
          <source>You specify the template as a variable that the system replaces with user-specific information during the logon attempt.</source>
          <target state="translated">로그온 시도 중 시스템이 사용자 별 정보로 대체하는 변수로 템플리트를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="85051188b5747789a3c11f461349c38f15a6bde5" translate="yes" xml:space="preserve">
          <source>You use a pattern almost any time you execute an ad-hoc command or a playbook. The pattern is the only element of an &lt;a href=&quot;intro_adhoc#intro-adhoc&quot;&gt;ad-hoc command&lt;/a&gt; that has no flag. It is usually the second element:</source>
          <target state="translated">거의 모든 명령 또는 플레이 북을 실행할 때마다 패턴을 사용합니다. 패턴은 플래그가없는 &lt;a href=&quot;intro_adhoc#intro-adhoc&quot;&gt;ad-hoc 명령&lt;/a&gt; 의 유일한 요소입니다 . 일반적으로 두 번째 요소입니다.</target>
        </trans-unit>
        <trans-unit id="d768c2fa8b447adea9a0f159fa36a5eb146015f9" translate="yes" xml:space="preserve">
          <source>You use the network resource modules by assigning a state to what you want the module to do. The resource modules support the following states:</source>
          <target state="translated">모듈이 수행 할 작업에 상태를 할당하여 네트워크 리소스 모듈을 사용합니다. 리소스 모듈은 다음 상태를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2b18b1c143005393c979da313f245cbb86202c5f" translate="yes" xml:space="preserve">
          <source>You will also need to configure other settings specific to each plugin. Consult the individual plugin documentation or the Ansible &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;configuration&lt;/a&gt; for more details.</source>
          <target state="translated">또한 각 플러그인마다 다른 설정을 구성해야합니다. 자세한 내용은 개별 플러그인 설명서 또는 Ansible &lt;a href=&quot;../reference_appendices/config#ansible-configuration-settings&quot;&gt;구성&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dafcd87bd65849a99af5f5b254c9d2941ad768ee" translate="yes" xml:space="preserve">
          <source>You will find our roadmap, an overview of open ACI issues and pull-requests, and more information about who we are. If you have an interest in using ACI with Ansible, feel free to join! We occasionally meet online to track progress and prepare for new Ansible releases.</source>
          <target state="translated">로드맵, 공개 ACI 문제 및 풀 요청에 대한 개요, 그리고 우리가 누구인지에 대한 자세한 정보를 찾을 수 있습니다. Ansible과 함께 ACI를 사용하는 데 관심이 있으시면 언제든지 참여하십시오! 때때로 진행 상황을 추적하고 새로운 Ansible 릴리스를 준비하기 위해 온라인으로 회의를합니다.</target>
        </trans-unit>
        <trans-unit id="f0000fdd05ee6065cc44286df6ff1fce67eee7c4" translate="yes" xml:space="preserve">
          <source>You will know how many hosts may run a task, and which of them is actually running.</source>
          <target state="translated">작업을 실행할 수있는 호스트 수와 실제로 실행중인 호스트 수를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="280da90eed86310af3f1ddf279786ac3d893bd7d" translate="yes" xml:space="preserve">
          <source>You will know how many tasks has the playbook to run, and which one is actually running.</source>
          <target state="translated">플레이 북을 실행할 작업 수와 실제로 실행중인 작업 수를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0bdd0b1ec3dfc17045248652fa0447b63e14594" translate="yes" xml:space="preserve">
          <source>You will no longer be able to create a legacy network on Feb 1, 2020.</source>
          <target state="translated">2020 년 2 월 1 일에 더 이상 레거시 네트워크를 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9958e57ff968e45356ccfb0c2e984c0ec246d813" translate="yes" xml:space="preserve">
          <source>You will not see any JSON output after this playbook completes as compared to other operations performed using &lt;code&gt;vmware_guest&lt;/code&gt; module.</source>
          <target state="translated">이 플레이 북이 완료된 후 &lt;code&gt;vmware_guest&lt;/code&gt; 모듈을 사용하여 수행 된 다른 작업과 비교하여 JSON 출력이 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f076d5b74258a4fe8c74d9bda8c38c9166d5a538" translate="yes" xml:space="preserve">
          <source>You will note a lot of &amp;lsquo;skipped&amp;rsquo; output by default in Ansible when using this approach on systems that don&amp;rsquo;t match the criteria. In many cases the &lt;a href=&quot;../modules/group_by_module#group-by-module&quot;&gt;group_by module&lt;/a&gt; can be a more streamlined way to accomplish the same thing; see &lt;a href=&quot;playbooks_best_practices#os-variance&quot;&gt;Operating System and Distribution Variance&lt;/a&gt;.</source>
          <target state="translated">기준과 일치하지 않는 시스템에서이 접근 방식을 사용하는 경우 Ansible에서 기본적으로 많은 '건너 뛰기'출력을 확인할 수 있습니다. 대부분의 경우 &lt;a href=&quot;../modules/group_by_module#group-by-module&quot;&gt;group_by 모듈&lt;/a&gt; 은 동일한 작업을 수행하기 위해보다 간소화 된 방법 일 수 있습니다. &lt;a href=&quot;playbooks_best_practices#os-variance&quot;&gt;운영 체제 및 분포 차이를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="957a892c583efa286b30636eb3faef72b5b9a3d7" translate="yes" xml:space="preserve">
          <source>You will notice that instead of default behavior of representing the hostname as &lt;code&gt;config.name + _ + config.uuid&lt;/code&gt;, the inventory hosts show value as &lt;code&gt;config.name&lt;/code&gt;.</source>
          <target state="translated">호스트 이름을 &lt;code&gt;config.name + _ + config.uuid&lt;/code&gt; 로 나타내는 기본 동작 대신 인벤토리 호스트가 값을 &lt;code&gt;config.name&lt;/code&gt; 으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="f79b70201ed5cef005bcb8d19531f05d5248f77e" translate="yes" xml:space="preserve">
          <source>You will notice that the inventory hosts are filtered depending on your &lt;code&gt;filters&lt;/code&gt; section.</source>
          <target state="translated">인벤토리 호스트는 &lt;code&gt;filters&lt;/code&gt; 섹션 에 따라 필터링 됩니다.</target>
        </trans-unit>
        <trans-unit id="db8be905f84f7dc021255955757cf13b6c5c4b84" translate="yes" xml:space="preserve">
          <source>You will require a pushover.net account to use this module. But no account is required to receive messages.</source>
          <target state="translated">이 모듈을 사용하려면 pushover.net 계정이 필요합니다. 그러나 메시지를받는 데 계정이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d53ad6a104c25f6ff4b9516ee58cbb3f9d7eb40d" translate="yes" xml:space="preserve">
          <source>You will require a telegram account and create telegram bot to use this module.</source>
          <target state="translated">이 모듈을 사용하려면 텔레 그램 계정이 필요하고 텔레 그램 봇을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6595624833d92cd9bc52ca9cf3d8e7d07faaffab" translate="yes" xml:space="preserve">
          <source>You will run into errors because Ansible reads name in this context as a keyword. Beginning in 2.5, if you want to use a variable name that is also a keyword, you must explicitly declare it as a variable for the role:</source>
          <target state="translated">Ansible은이 컨텍스트에서 키워드로 이름을 읽으므로 오류가 발생합니다. 2.5부터 시작하여 키워드이기도 한 변수 이름을 사용하려면 해당 변수를 역할의 변수로 명시 적으로 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="87bb8e56e7e6aa5cb6630b9df99953cb257334ee" translate="yes" xml:space="preserve">
          <source>You will see a bit of JSON output after this playbook completes. This output shows various parameters that are returned from the module and from vCenter about the newly created VM.</source>
          <target state="translated">이 플레이 북이 완료된 후 약간의 JSON 출력이 표시됩니다. 이 출력은 새로 생성 된 VM에 대해 모듈 및 vCenter에서 반환되는 다양한 매개 변수를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d7ec9403c6875f328fce32aef5e9d70442187820" translate="yes" xml:space="preserve">
          <source>You will see: &lt;code&gt;ERROR! Syntax Error while loading YAML.&lt;/code&gt; If you add quotes, Ansible works correctly:</source>
          <target state="translated">다음이 표시됩니다. &lt;code&gt;ERROR! Syntax Error while loading YAML.&lt;/code&gt; 따옴표를 추가하면 Ansible이 올바르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f5e6846d7a72a1c9111ac3e90c11600c1a899664" translate="yes" xml:space="preserve">
          <source>You will want to quote hash values using colons followed by a space or the end of the line:</source>
          <target state="translated">콜론과 공백 또는 행 끝을 사용하여 해시 값을 인용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="4350c320ab8a4e9c0244a1bbb365a44e93d9112e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also want to read up on &lt;a href=&quot;playbooks_reuse_roles#playbooks-reuse-roles&quot;&gt;Roles&lt;/a&gt;, as the &amp;lsquo;pre_task&amp;rsquo; and &amp;lsquo;post_task&amp;rsquo; concepts are the places where you would typically call these modules.</source>
          <target state="translated">'pre_task'및 'post_task'개념은 일반적으로 이러한 모듈을 호출하는 장소이므로 &lt;a href=&quot;playbooks_reuse_roles#playbooks-reuse-roles&quot;&gt;Roles&lt;/a&gt; 에 대해서도 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="579eef1c95a073e86071cfb8e492a82eb5367d18" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need this Python module installed on the execution host, usually your workstation.</source>
          <target state="translated">이 Python 모듈은 실행 호스트, 일반적으로 워크 스테이션에 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="3841fb36d71c3194786244732f5267b11201c390" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to create a single disk using the disks[] parameter and set it to be the boot disk (disks[].boot = true)</source>
          <target state="translated">disks [] 매개 변수를 사용하여 단일 디스크를 작성하고 부트 디스크로 설정해야합니다 (disks []. boot = true)</target>
        </trans-unit>
        <trans-unit id="151a6f484c59e9a09bd5956d5781667c346a46d3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve anchored the value of &lt;code&gt;version&lt;/code&gt; with the &lt;code&gt;&amp;amp;my_version&lt;/code&gt; anchor, and re-used it with the &lt;code&gt;*my_version&lt;/code&gt; alias. Anchors and aliases let you access nested values inside dictionaries.</source>
          <target state="translated">&lt;code&gt;&amp;amp;my_version&lt;/code&gt; 앵커를 사용하여 &lt;code&gt;version&lt;/code&gt; 값을 앵커하고 &lt;code&gt;*my_version&lt;/code&gt; 별명으로 재사용했습니다 . 앵커 및 별칭을 사용하면 사전 내부의 중첩 값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10b133299611b9ce958417e372eab9335d072676" translate="yes" xml:space="preserve">
          <source>YouTube EDU filter level.</source>
          <target state="translated">YouTube EDU 필터 수준.</target>
        </trans-unit>
        <trans-unit id="eda8bf8b1546ca92211de9cad9745d9dcb43e03b" translate="yes" xml:space="preserve">
          <source>YouTube channel ID to be filtered.</source>
          <target state="translated">필터링 할 YouTube 채널 ID입니다.</target>
        </trans-unit>
        <trans-unit id="5c9ed30a47d826a33c28c75f6c7904cdd7910808" translate="yes" xml:space="preserve">
          <source>YouTube channel filter status.</source>
          <target state="translated">YouTube 채널 필터 상태</target>
        </trans-unit>
        <trans-unit id="c7d02c50d2038ec10ed940b8ed8ebd8035145623" translate="yes" xml:space="preserve">
          <source>YouTube channel filter.</source>
          <target state="translated">YouTube 채널 필터.</target>
        </trans-unit>
        <trans-unit id="bc1cdab74bed6d67a4f2125021dc5a0a904887e5" translate="yes" xml:space="preserve">
          <source>Your Azure subscription Id.</source>
          <target state="translated">Azure 구독 ID</target>
        </trans-unit>
        <trans-unit id="188913344f357566625cf0926f7e1ef5f001a909" translate="yes" xml:space="preserve">
          <source>Your Client ID, which is found in the &amp;ldquo;client id&amp;rdquo; box in the &amp;ldquo;Configure&amp;rdquo; page of your application in the Azure portal</source>
          <target state="translated">Azure Portal에서 응용 프로그램의 &quot;구성&quot;페이지에있는 &quot;클라이언트 ID&quot;상자에있는 클라이언트 ID</target>
        </trans-unit>
        <trans-unit id="5ecd08062aa4fdb13319f6d56de6ea8ce66a648d" translate="yes" xml:space="preserve">
          <source>Your DataDog API key.</source>
          <target state="translated">DataDog API 키</target>
        </trans-unit>
        <trans-unit id="2add35d39a13f3059e1013e5ece729c151f981e2" translate="yes" xml:space="preserve">
          <source>Your DataDog app key.</source>
          <target state="translated">DataDog 앱 키.</target>
        </trans-unit>
        <trans-unit id="f15f4bf189551d6be623d8c20de8b27523af31b9" translate="yes" xml:space="preserve">
          <source>Your Datadog API key.</source>
          <target state="translated">Datadog API 키</target>
        </trans-unit>
        <trans-unit id="1ee0f49a12d669c50e40e376494c6dbf669177f7" translate="yes" xml:space="preserve">
          <source>Your Datadog app key.</source>
          <target state="translated">Datadog 앱 키.</target>
        </trans-unit>
        <trans-unit id="b22184395914c93dfcce4ed68807db1d518eee29" translate="yes" xml:space="preserve">
          <source>Your GCE project ID.</source>
          <target state="translated">GCE 프로젝트 ID</target>
        </trans-unit>
        <trans-unit id="f689938ff777b982a366d40baca8babd4364bb53" translate="yes" xml:space="preserve">
          <source>Your GCP project ID</source>
          <target state="translated">GCP 프로젝트 ID</target>
        </trans-unit>
        <trans-unit id="af8ad0cb43a3b6831d0e8578503ef2aa117c6af2" translate="yes" xml:space="preserve">
          <source>Your Secret key, generated when you created the application. You cannot show the key after creation. If you lost the key, you must create a new one in the &amp;ldquo;Configure&amp;rdquo; page of your application.</source>
          <target state="translated">응용 프로그램을 만들 때 생성 된 비밀 키. 생성 후 키를 표시 할 수 없습니다. 키를 분실 한 경우 응용 프로그램의 &quot;구성&quot;페이지에서 새 키를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="9cb0e6138749158524c80b70636d8ff82696ea5d" translate="yes" xml:space="preserve">
          <source>Your account ID</source>
          <target state="translated">귀하의 계정 ID</target>
        </trans-unit>
        <trans-unit id="0102e824a2dbeaa6e358012972dddb63faef113d" translate="yes" xml:space="preserve">
          <source>Your account balance.</source>
          <target state="translated">계정 잔액</target>
        </trans-unit>
        <trans-unit id="b0b30455b4f86787ddde1c49848f97b6b308f951" translate="yes" xml:space="preserve">
          <source>Your configured plugin directory specified in Elasticsearch</source>
          <target state="translated">Elasticsearch에 지정된 구성된 플러그인 디렉토리</target>
        </trans-unit>
        <trans-unit id="ba28159346409cac4c21cb517d4125a36295ae41" translate="yes" xml:space="preserve">
          <source>Your configured plugin directory specified in Kibana.</source>
          <target state="translated">구성된 플러그인 디렉토리가 Kibana에 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d66465f3e113f5a7727041c53935dbf3a86ad28" translate="yes" xml:space="preserve">
          <source>Your floating IP is routed to this IP address.</source>
          <target state="translated">유동 IP는이 IP 주소로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="5274b42e57c713aadd305d083849b544eddac5d6" translate="yes" xml:space="preserve">
          <source>Your fully qualified domain name (for example, yourname.DDNS.com).</source>
          <target state="translated">정규화 된 도메인 이름 (예 : yourname.DDNS.com)</target>
        </trans-unit>
        <trans-unit id="a6789d63cae5f4e047438575ae07e7e2dd88d285" translate="yes" xml:space="preserve">
          <source>Your git version is too old to fully support the depth argument. Falling back to full checkouts.</source>
          <target state="translated">git 버전이 너무 오래되어 깊이 인수를 완전히 지원할 수 없습니다. 전체 체크 아웃으로 폴백.</target>
        </trans-unit>
        <trans-unit id="2bf4552cfa0c3b8e3f84c441076f5f5934d4f4cc" translate="yes" xml:space="preserve">
          <source>Your inventory can store much more than IPs and FQDNs. You can create &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;aliases&lt;/a&gt;, set variable values for a single host with &lt;a href=&quot;intro_inventory#host-variables&quot;&gt;host vars&lt;/a&gt;, or set variable values for multiple hosts with &lt;a href=&quot;intro_inventory#group-variables&quot;&gt;group vars&lt;/a&gt;.</source>
          <target state="translated">인벤토리는 IP 및 FQDN보다 훨씬 많은 것을 저장할 수 있습니다. &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;별명&lt;/a&gt; 을 작성 하고 &lt;a href=&quot;intro_inventory#host-variables&quot;&gt;host vars&lt;/a&gt; 를 사용하여 단일 호스트에 변수 값을 설정하거나 &lt;a href=&quot;intro_inventory#group-variables&quot;&gt;vars 그룹을 사용&lt;/a&gt; 하여 여러 호스트에 변수 값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="427cf3bfe4e403e551e5f49db7ada7733059dc70" translate="yes" xml:space="preserve">
          <source>Your inventory source might be a directory of inventory configuration files. The constructed inventory plugin only operates on those hosts already in inventory, so you may want the constructed inventory configuration parsed at a particular point (such as last). Ansible parses the directory recursively, alphabetically. You cannot configure the parsing approach, so name your files to make it work predictably. Inventory plugins that extend constructed features directly can work around that restriction by adding constructed options in addition to the inventory plugin options. Otherwise, you can use &lt;code&gt;-i&lt;/code&gt; with multiple sources to impose a specific order, e.g. &lt;code&gt;-i demo.aws_ec2.yml -i clouds.yml -i constructed.yml&lt;/code&gt;.</source>
          <target state="translated">인벤토리 소스는 인벤토리 구성 파일의 디렉토리 일 수 있습니다. 생성 된 인벤토리 플러그인은 이미 인벤토리에있는 호스트에서만 작동하므로 생성 된 인벤토리 구성을 특정 시점 (예 : 마지막)에서 구문 분석 할 수 있습니다. Ansible은 디렉토리를 재귀 적으로 알파벳순으로 구문 분석합니다. 구문 분석 방식을 구성 할 수 없으므로 파일 이름을 지정하여 예상대로 작동하도록하십시오. 생성 된 기능을 직접 확장하는 인벤토리 플러그인은 인벤토리 플러그인 옵션 외에 생성 된 옵션을 추가하여 이러한 제한을 해결할 수 있습니다. 그렇지 않으면 &lt;code&gt;-i&lt;/code&gt; 를 여러 소스와 함께 사용 하여 특정 순서를 적용 할 수 있습니다 ( 예 : &lt;code&gt;-i demo.aws_ec2.yml -i clouds.yml -i constructed.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac76525e3c1f6c201e2a085e32c8c89b134a0db0" translate="yes" xml:space="preserve">
          <source>Your inventory source might be a directory of inventory configuration files. The constructed inventory plugin only operates on those hosts already in inventory, so you may want the constructed inventory configuration parsed at a particular point (such as last). Ansible parses the directory recursively, alphabetically. You cannot configure the parsing approach, so name your files to make it work predictably. Inventory plugins that extend constructed features directly can work around that restriction by adding constructed options in addition to the inventory plugin options. Otherwise, you can use &lt;code&gt;-i&lt;/code&gt; with multiple sources to impose a specific order, for example &lt;code&gt;-i demo.aws_ec2.yml -i clouds.yml -i constructed.yml&lt;/code&gt;.</source>
          <target state="translated">인벤토리 소스는 인벤토리 구성 파일의 디렉터리 일 수 있습니다. 구성된 인벤토리 플러그인은 인벤토리에 이미있는 호스트에서만 작동하므로 구성된 인벤토리 구성이 특정 지점 (예 : 마지막)에서 구문 분석되기를 원할 수 있습니다. Ansible은 디렉토리를 알파벳순으로 재귀 적으로 구문 분석합니다. 구문 분석 접근 방식을 구성 할 수 없으므로 예상대로 작동하도록 파일 이름을 지정하십시오. 구성된 기능을 직접 확장하는 인벤토리 플러그인은 인벤토리 플러그인 옵션 외에도 구성된 옵션을 추가하여 이러한 제한을 해결할 수 있습니다. 그렇지 않으면 &lt;code&gt;-i&lt;/code&gt; 를 여러 소스와 함께 사용 하여 특정 순서를 부과 할 수 있습니다 ( 예 : &lt;code&gt;-i demo.aws_ec2.yml -i clouds.yml -i constructed.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c8f2298c1607985f5d30b1dfb289dc68fd9df3c" translate="yes" xml:space="preserve">
          <source>Your key will be used for validation of the &lt;code&gt;type&lt;/code&gt; parameter to this module.</source>
          <target state="translated">키는 이 모듈 에 대한 &lt;code&gt;type&lt;/code&gt; 매개 변수의 유효성을 검증하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ddb216e53113e8475df12551e8113e93c5eab0d2" translate="yes" xml:space="preserve">
          <source>Your pattern must match your inventory syntax. If you define a host as an &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;alias&lt;/a&gt;:</source>
          <target state="translated">패턴은 인벤토리 구문과 일치해야합니다. 호스트를 &lt;a href=&quot;intro_inventory#inventory-aliases&quot;&gt;별명&lt;/a&gt; 으로 정의하는 경우 :</target>
        </trans-unit>
        <trans-unit id="b999dd6708c1ad020f2431a5bc396f5e4dab2b65" translate="yes" xml:space="preserve">
          <source>Your personal access token required to validate the Spark API.</source>
          <target state="translated">Spark API를 확인하려면 개인 액세스 토큰이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cf039b1527c09a024761f80b96428dcd59f13f6b" translate="yes" xml:space="preserve">
          <source>Your personal access token required to validate the Webex Teams API.</source>
          <target state="translated">Webex Teams API를 검증하는 데 필요한 개인 액세스 토큰.</target>
        </trans-unit>
        <trans-unit id="895f73a25e1e899a9ce7435d82ba119b2b1ca264" translate="yes" xml:space="preserve">
          <source>Your platform-specific section should include the following:</source>
          <target state="translated">플랫폼 별 섹션에는 다음이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="73fdb2f4cdabe2d176c57794a9371d9d9948bfce" translate="yes" xml:space="preserve">
          <source>Your playbook can include more than just a hosts line and tasks. For example, the playbook above sets a &lt;code&gt;remote_user&lt;/code&gt; for each play. This is the user account for the SSH connection. You can add other &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;Playbook Keywords&lt;/a&gt; at the playbook, play, or task level to influence how Ansible behaves. Playbook keywords can control the &lt;a href=&quot;../plugins/connection#connection-plugins&quot;&gt;connection plugin&lt;/a&gt;, whether to use &lt;a href=&quot;become#become&quot;&gt;privilege escalation&lt;/a&gt;, how to handle errors, and more. To support a variety of environments, Ansible lets you set many of these parameters as command-line flags, in your Ansible configuration, or in your inventory. Learning the &lt;a href=&quot;../reference_appendices/general_precedence#general-precedence-rules&quot;&gt;precedence rules&lt;/a&gt; for these sources of data will help you as you expand your Ansible ecosystem.</source>
          <target state="translated">플레이 북에는 호스트 라인과 작업 이상의 것이 포함될 수 있습니다. 예를 들어, 위의 플레이 북 은 각 플레이에 대해 &lt;code&gt;remote_user&lt;/code&gt; 를 설정합니다 . SSH 연결을위한 사용자 계정입니다. 플레이 북, 플레이 또는 작업 수준에서 다른 &lt;a href=&quot;../reference_appendices/playbooks_keywords#playbook-keywords&quot;&gt;플레이 북 키워드&lt;/a&gt; 를 추가 하여 Ansible의 작동 방식에 영향을 줄 수 있습니다. 플레이 북 키워드는 &lt;a href=&quot;../plugins/connection#connection-plugins&quot;&gt;연결 플러그인&lt;/a&gt; , &lt;a href=&quot;become#become&quot;&gt;권한 에스컬레이션&lt;/a&gt; 사용 여부 , 오류 처리 방법 등을 제어 할 수 있습니다 . 다양한 환경을 지원하기 위해 Ansible을 사용하면 이러한 많은 매개 변수를 Ansible 구성 또는 인벤토리에서 명령 줄 플래그로 설정할 수 있습니다. 이러한 데이터 소스에 대한 &lt;a href=&quot;../reference_appendices/general_precedence#general-precedence-rules&quot;&gt;우선 순위 규칙&lt;/a&gt; 을 배우 면 Ansible 에코 시스템을 확장하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="0db90a10ea8f793c55c948a8acaf0afe53c0f928" translate="yes" xml:space="preserve">
          <source>Your private token to interact with the GitLab API.</source>
          <target state="translated">GitLab API와 상호 작용하기위한 개인 토큰.</target>
        </trans-unit>
        <trans-unit id="e125448f7dac1cee297acdedea7859de251b97f0" translate="yes" xml:space="preserve">
          <source>Your project access token.</source>
          <target state="translated">프로젝트 액세스 토큰.</target>
        </trans-unit>
        <trans-unit id="2aba5441e56962ec01aa0719885ad85a097637a7" translate="yes" xml:space="preserve">
          <source>Your project's Compute Engine System service account (`service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com`) must have `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.</source>
          <target state="translated">이 기능을 사용하려면 프로젝트의 Compute Engine 시스템 서비스 계정 (`service-{{PROJECT_NUMBER}} @ compute-system.iam.gserviceaccount.com`)에`roles / cloudkms.cryptoKeyEncrypterDecrypter`가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c69b81fbc26d3348da8afc92938dc0c05f4ec432" translate="yes" xml:space="preserve">
          <source>Your tests should detect resources (such as interfaces) at runtime rather than hard-coding them into the test. This allows the test to run on a variety of systems.</source>
          <target state="translated">테스트는 리소스 (예 : 인터페이스)를 테스트에 하드 코딩하는 대신 런타임에 감지해야합니다. 이를 통해 다양한 시스템에서 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f512b5676634dca7dff673871391b4dde73f2c5" translate="yes" xml:space="preserve">
          <source>Your unique API ID from status.io</source>
          <target state="translated">status.io의 고유 API ID</target>
        </trans-unit>
        <trans-unit id="ec0887c790814abaf0d1e19a57968162c45f122b" translate="yes" xml:space="preserve">
          <source>Your unique API Key from status.io</source>
          <target state="translated">status.io의 고유 한 API 키</target>
        </trans-unit>
        <trans-unit id="40e4128f4524c667f8401325ab6aef8ae4a77054" translate="yes" xml:space="preserve">
          <source>Your unique StatusPage ID from status.io</source>
          <target state="translated">status.io의 고유 한 StatusPage ID</target>
        </trans-unit>
        <trans-unit id="af535323529f5bf1ae79d41debe89b7a860b1742" translate="yes" xml:space="preserve">
          <source>Your usage of Ansible should fit your needs, however, not ours, so feel free to modify this approach and organize as you see fit.</source>
          <target state="translated">Ansible을 사용하는 것은 우리의 요구가 아닌 사용자의 요구에 맞아야하므로이 접근 방식을 수정하고 원하는대로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="650a4162b3e0236e01a3d8ff3dbaacb0f4f93473" translate="yes" xml:space="preserve">
          <source>Your workflow may be something like this:</source>
          <target state="translated">워크 플로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c6e733f9e07fa8a76f9c7046d949d5be016df74" translate="yes" xml:space="preserve">
          <source>YourNet</source>
          <target state="translated">YourNet</target>
        </trans-unit>
        <trans-unit id="b6582fafe43d1e088f0cefbac7e4b50cd695aa7a" translate="yes" xml:space="preserve">
          <source>YourOrg</source>
          <target state="translated">YourOrg</target>
        </trans-unit>
        <trans-unit id="53e4f53c9775194f9989274189e035e34745a3ca" translate="yes" xml:space="preserve">
          <source>YourTemplate</source>
          <target state="translated">YourTemplate</target>
        </trans-unit>
        <trans-unit id="64096e025445b9a6ec89d5db4f8203d74e22c447" translate="yes" xml:space="preserve">
          <source>Yum itself has two types of groups. &amp;ldquo;Package groups&amp;rdquo; are specified in the rpm itself while &amp;ldquo;environment groups&amp;rdquo; are specified in a separate file (usually by the distribution). Unfortunately, this division becomes apparent to ansible users because ansible needs to operate on the group of packages in a single transaction and yum requires groups to be specified in different ways when used in that way. Package groups are specified as &amp;ldquo;@development-tools&amp;rdquo; and environment groups are &amp;ldquo;@^gnome-desktop-environment&amp;rdquo;. Use the &amp;ldquo;yum group list hidden ids&amp;rdquo; command to see which category of group the group you want to install falls into.</source>
          <target state="translated">Yum 자체에는 두 가지 유형의 그룹이 있습니다. &quot;패키지 그룹&quot;은 rpm 자체에 지정되고 &quot;환경 그룹&quot;은 별도 파일 (일반적으로 배포에 의해)에 지정됩니다. 불행하게도, 단일 트랜잭션에서 패키지 그룹에 대해 ansible을 조작해야하며 yum은 그룹을 다른 방식으로 사용하도록 그룹을 지정해야하기 때문에이 부서는 asible 사용자에게 명백해집니다. 패키지 그룹은&amp;ldquo;@ development-tools&amp;rdquo;로 지정되고 환경 그룹은&amp;ldquo;@ ^ gnome-desktop-environment&amp;rdquo;입니다. &amp;ldquo;yum group list hidden ids&amp;rdquo;명령을 사용하여 설치하려는 그룹의 그룹 범주를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="18fbebf7a8bb9617c505cd9db5c097d1e294111a" translate="yes" xml:space="preserve">
          <source>Yunfan Zhang (@YunfanZhang42)</source>
          <target state="translated">장윤환 (@ YunfanZhang42)</target>
        </trans-unit>
        <trans-unit id="c9dd1b4e5481fa0e104a73571440e0a4c9301cba" translate="yes" xml:space="preserve">
          <source>Yunge Zhu (@yungezz)</source>
          <target state="translated">Yunge Zhu (@yungezz) 님</target>
        </trans-unit>
        <trans-unit id="74b0423cc7c0875257810025bc669a7c571cddb5" translate="yes" xml:space="preserve">
          <source>Yunge Zhu(@yungezz)</source>
          <target state="translated">Yunge Zhu (@yungezz) 님</target>
        </trans-unit>
        <trans-unit id="bd89a7482327bdfd32fa524c743e46f35f7b64f2" translate="yes" xml:space="preserve">
          <source>Yunge zhu (@yungezz)</source>
          <target state="translated">Yunge Zhu (@yungezz) 아리</target>
        </trans-unit>
        <trans-unit id="310f8df274a5e4b25a768afe652089723a5e074d" translate="yes" xml:space="preserve">
          <source>Yuwei Zhou (@yuwzho)</source>
          <target state="translated">유웨이 저우 (@yuwei_kr)</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="a321b410d30cc3b1abd66c6aa2d83d6166b232af" translate="yes" xml:space="preserve">
          <source>Z100</source>
          <target state="translated">Z100</target>
        </trans-unit>
        <trans-unit id="0584e425b33b3535da8113688a0fb0b546be5ee2" translate="yes" xml:space="preserve">
          <source>Z1PABCD0000000</source>
          <target state="translated">Z1PABCD0000000</target>
        </trans-unit>
        <trans-unit id="b51fd0332b654efc1327173060830c7351581dd8" translate="yes" xml:space="preserve">
          <source>Z6JQG9820BEFMW</source>
          <target state="translated">Z6JQG9820BEFMW</target>
        </trans-unit>
        <trans-unit id="8a63c34c007b1217227e68d4c9aa5c6f7554663c" translate="yes" xml:space="preserve">
          <source>ZA</source>
          <target state="translated">ZA</target>
        </trans-unit>
        <trans-unit id="9951b5af8c586c74337d54aa767888c38895f843" translate="yes" xml:space="preserve">
          <source>ZB</source>
          <target state="translated">ZB</target>
        </trans-unit>
        <trans-unit id="d3fa9f90cdd6c95f785a52a6dea971727000f0e6" translate="yes" xml:space="preserve">
          <source>ZFS boot environment name.</source>
          <target state="translated">ZFS 부트 환경 이름</target>
        </trans-unit>
        <trans-unit id="c59048534eee2868ec2355ed5eba8fa0ff4b4353" translate="yes" xml:space="preserve">
          <source>ZFS dataset facts</source>
          <target state="translated">ZFS 데이터 세트 사실</target>
        </trans-unit>
        <trans-unit id="d6fc356fe7e57f9fa8e374a24d38cd8f52fb3324" translate="yes" xml:space="preserve">
          <source>ZFS dataset name</source>
          <target state="translated">ZFS 데이터 세트 이름</target>
        </trans-unit>
        <trans-unit id="ee5ab8f1b778a1eef3afd1851998bc77fe0d064a" translate="yes" xml:space="preserve">
          <source>ZFS dataset name.</source>
          <target state="translated">ZFS 데이터 세트 이름.</target>
        </trans-unit>
        <trans-unit id="bb8022d37915523b57536b63c34be24ff4958ca6" translate="yes" xml:space="preserve">
          <source>ZFS pool facts</source>
          <target state="translated">ZFS 풀 사실</target>
        </trans-unit>
        <trans-unit id="26fa7123fcfadab4e00a0a45f885ea719ee31880" translate="yes" xml:space="preserve">
          <source>ZFS pool name</source>
          <target state="translated">ZFS 풀 이름</target>
        </trans-unit>
        <trans-unit id="b2c863183b21597a7d0e8743062fe12672b94270" translate="yes" xml:space="preserve">
          <source>ZFS pool name.</source>
          <target state="translated">ZFS 풀 이름</target>
        </trans-unit>
        <trans-unit id="96606b735eccd6acb60225008a31174407f8c836" translate="yes" xml:space="preserve">
          <source>ZFS pool the VM's zone dataset will be created in.</source>
          <target state="translated">VM의 영역 데이터 세트가 생성 될 ZFS 풀</target>
        </trans-unit>
        <trans-unit id="59c942894d5b0d75dc7bb96372ed216cf5563f8a" translate="yes" xml:space="preserve">
          <source>ZFS snapshot to create BE from</source>
          <target state="translated">BE를 생성하는 ZFS 스냅 샷</target>
        </trans-unit>
        <trans-unit id="ccaa31529178b3b782bf956e4b07d89c9903c3bf" translate="yes" xml:space="preserve">
          <source>ZIP_DEFLATED</source>
          <target state="translated">ZIP_DEFLATED</target>
        </trans-unit>
        <trans-unit id="02fd3b8ddeaebdb5d77ff620bb2c9be08bca9fa1" translate="yes" xml:space="preserve">
          <source>ZONE</source>
          <target state="translated">ZONE</target>
        </trans-unit>
        <trans-unit id="21fc1a9460588a3325fb554666be791c961d212d" translate="yes" xml:space="preserve">
          <source>ZTP</source>
          <target state="translated">ZTP</target>
        </trans-unit>
        <trans-unit id="20bc8a089ce4818a14b25ca616cec89b300b5f14" translate="yes" xml:space="preserve">
          <source>ZTR2ITUGPA61AM</source>
          <target state="translated">ZTR2ITUGPA61AM</target>
        </trans-unit>
        <trans-unit id="068b3b30f97458b08228da9b95ec0f950e7e4af2" translate="yes" xml:space="preserve">
          <source>ZW</source>
          <target state="translated">ZW</target>
        </trans-unit>
        <trans-unit id="fd64983e829bafb54a935c9e73c6ec62636cfc17" translate="yes" xml:space="preserve">
          <source>ZXhwb3J0IENMT1VE</source>
          <target state="translated">ZXhwb3J0IENMT1VE</target>
        </trans-unit>
        <trans-unit id="c5f5626c601ce0e7eb4a6acd053708ad45a948af" translate="yes" xml:space="preserve">
          <source>Zabbix</source>
          <target state="translated">Zabbix</target>
        </trans-unit>
        <trans-unit id="1c8b285ccca87af4e367d69fef16f2934b7505f8" translate="yes" xml:space="preserve">
          <source>Zabbix admin</source>
          <target state="translated">Zabbix 관리자</target>
        </trans-unit>
        <trans-unit id="cd76c5a10497f951f2ce5174f957948c30292b71" translate="yes" xml:space="preserve">
          <source>Zabbix severity for search filter</source>
          <target state="translated">검색 필터에 대한 Zabbix 심각도</target>
        </trans-unit>
        <trans-unit id="32b14e912bdf68457f44853b6226f27e2f0ee81e" translate="yes" xml:space="preserve">
          <source>Zabbix super admin</source>
          <target state="translated">Zabbix 최고 관리자</target>
        </trans-unit>
        <trans-unit id="a46cfc38e627c38ff1a3adf7c6b6214636a25ed9" translate="yes" xml:space="preserve">
          <source>Zabbix user name.</source>
          <target state="translated">Zabbix 사용자 이름</target>
        </trans-unit>
        <trans-unit id="7f91d11127cfcb5de7b8a72f94b0712cb32bd109" translate="yes" xml:space="preserve">
          <source>Zabbix user password.</source>
          <target state="translated">Zabbix 사용자 비밀번호.</target>
        </trans-unit>
        <trans-unit id="4e44b2a6638d2d48543c0d4abc1347e15c55318f" translate="yes" xml:space="preserve">
          <source>Zac Blazic (@zacblazic)</source>
          <target state="translated">짤방 백업 봇 (@Gift_bot)</target>
        </trans-unit>
        <trans-unit id="58b6539a177014e7e2fc4ec22ce0e961fcfd204b" translate="yes" xml:space="preserve">
          <source>Zacharie Eakin (@Zeekin)</source>
          <target state="translated">Zacharie Eakin (@Zeekin)</target>
        </trans-unit>
        <trans-unit id="5356442fa1239115238635cad3ef5b9484aaa0ff" translate="yes" xml:space="preserve">
          <source>Zacharie Eakin (@zeekin)</source>
          <target state="translated">자카리 에킨 (@zeekin)</target>
        </trans-unit>
        <trans-unit id="5bd9be779cabee0fcf5824939df5f8d171e60406" translate="yes" xml:space="preserve">
          <source>Zagreb</source>
          <target state="translated">Zagreb</target>
        </trans-unit>
        <trans-unit id="c037895d767f9fc5f8c3f5cba0c714c531e7429c" translate="yes" xml:space="preserve">
          <source>Zainab Alsaffar (@zanssa)</source>
          <target state="translated">자이나 브 알사 파르 (@zanssa)</target>
        </trans-unit>
        <trans-unit id="498ee288ef9fd7ec3a07e0da44636ae5c8533f3e" translate="yes" xml:space="preserve">
          <source>Zero-based index number for SSIDs.</source>
          <target state="translated">SSID의 인덱스 번호 (0부터 시작)입니다.</target>
        </trans-unit>
        <trans-unit id="9b089cf57a873bcf42e15859b2140cde7a578197" translate="yes" xml:space="preserve">
          <source>Zfs</source>
          <target state="translated">Zfs</target>
        </trans-unit>
        <trans-unit id="fd966ecd62f15d7b13988db91a40e6a9c11b7aee" translate="yes" xml:space="preserve">
          <source>Zhijin Zhou (@QijunPan)</source>
          <target state="translated">Zhijin Zhou (@QijunPan)</target>
        </trans-unit>
        <trans-unit id="9e78a4d09701935a93a840ed64d63683aa99f39e" translate="yes" xml:space="preserve">
          <source>Zhou Zhijin (@QijunPan)</source>
          <target state="translated">혜진이 (@jinhyejin)</target>
        </trans-unit>
        <trans-unit id="c74f611bd8e31317b83cd333b51f22dd25fed9dd" translate="yes" xml:space="preserve">
          <source>Zim Kalinowski (@zikalino)</source>
          <target state="translated">짐 칼리 노프 (@zikalino)</target>
        </trans-unit>
        <trans-unit id="03efccb49f3ff5f0055a644eae98835dda00b789" translate="yes" xml:space="preserve">
          <source>Zone</source>
          <target state="translated">Zone</target>
        </trans-unit>
        <trans-unit id="b81e41b3f57bdf224d92f23e687a41b963e991df" translate="yes" xml:space="preserve">
          <source>Zone ID.</source>
          <target state="translated">존 ID.</target>
        </trans-unit>
        <trans-unit id="5e1b118a9a352a132b4664e3b6933aa9c68ac09a" translate="yes" xml:space="preserve">
          <source>Zone TTL value</source>
          <target state="translated">영역 TTL 값</target>
        </trans-unit>
        <trans-unit id="5b4dcc0ab1c7e68322aa37202af680cae0eb1630" translate="yes" xml:space="preserve">
          <source>Zone description</source>
          <target state="translated">영역 설명</target>
        </trans-unit>
        <trans-unit id="2c77f554fdd8a04346112981dd0cf637021ca86f" translate="yes" xml:space="preserve">
          <source>Zone domains can be thought of as a collection of domains, all of which share the same DNS records (i.e. they point to the same IP). An API key generated via the Memset customer control panel is needed with the following minimum scope - &lt;em&gt;dns.zone_domain_create&lt;/em&gt;, &lt;em&gt;dns.zone_domain_delete&lt;/em&gt;, &lt;em&gt;dns.zone_domain_list&lt;/em&gt;.</source>
          <target state="translated">영역 도메인은 도메인 모음으로 생각할 수 있으며, 모든 도메인은 동일한 DNS 레코드를 공유합니다 (즉, 동일한 IP를 가리킴). Memset 고객 제어판을 통해 생성 된 API 키는 다음과 같은 최소 범위 인 &lt;em&gt;dns.zone_domain_create&lt;/em&gt; , &lt;em&gt;dns.zone_domain_delete&lt;/em&gt; , &lt;em&gt;dns.zone_domain_list&lt;/em&gt; 와 함께 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="70f1b19122c77526cca0d724085039c4c3658cb5" translate="yes" xml:space="preserve">
          <source>Zone id</source>
          <target state="translated">존 ID</target>
        </trans-unit>
        <trans-unit id="dd5896c343b4258a9744272503d57ec912a0f64d" translate="yes" xml:space="preserve">
          <source>Zone identifier</source>
          <target state="translated">구역 식별자</target>
        </trans-unit>
        <trans-unit id="63159356c4617ff3087c62a0d7ac4070e69b1d4b" translate="yes" xml:space="preserve">
          <source>Zone in which the server resides (e.g. &lt;code&gt;lgp1&lt;/code&gt; or &lt;code&gt;rma1&lt;/code&gt;).</source>
          <target state="translated">서버가있는 영역 (예 : &lt;code&gt;lgp1&lt;/code&gt; 또는 &lt;code&gt;rma1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="212154dfe5fe55daf714c2aae96456b6785839d1" translate="yes" xml:space="preserve">
          <source>Zone in which the volume resides (e.g. &lt;code&gt;lgp1&lt;/code&gt; or &lt;code&gt;rma1&lt;/code&gt;). Cannot be changed after creating the volume. Defaults to the project default zone.</source>
          <target state="translated">볼륨이있는 영역 (예 : &lt;code&gt;lgp1&lt;/code&gt; 또는 &lt;code&gt;rma1&lt;/code&gt; ). 볼륨을 만든 후에는 변경할 수 없습니다. 기본값은 프로젝트 기본 영역입니다.</target>
        </trans-unit>
        <trans-unit id="3d3d91a7358eef7a19b9c82bc1bd0ecad810c218" translate="yes" xml:space="preserve">
          <source>Zone in which to create the volume, if unset uses the zone the instance is in (if set).</source>
          <target state="translated">볼륨을 생성 할 영역 (설정되지 않은 경우 인스턴스가있는 영역 (설정된 경우))을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a8199fc43232801cf660cde8afc58a489b9c85f5" translate="yes" xml:space="preserve">
          <source>Zone in which to launch MIG.</source>
          <target state="translated">MIG를 시작하는 영역입니다.</target>
        </trans-unit>
        <trans-unit id="db5ae57d0c07ed292aab176b15982aaf3fc7c5d4" translate="yes" xml:space="preserve">
          <source>Zone info from the Memset API</source>
          <target state="translated">Memset API의 영역 정보</target>
        </trans-unit>
        <trans-unit id="b2482278759b7887645f1e8dbbe5a14b95710c2b" translate="yes" xml:space="preserve">
          <source>Zone is a public zone if not set.</source>
          <target state="translated">영역은 설정되지 않은 경우 공용 영역입니다.</target>
        </trans-unit>
        <trans-unit id="ea0dc412f0a01c7c4ac523da20fe1a07b0418fa1" translate="yes" xml:space="preserve">
          <source>Zone managing the recordset</source>
          <target state="translated">레코드 세트를 관리하는 영역</target>
        </trans-unit>
        <trans-unit id="099afe738d5d0e9b6aae760c517f395360544b1d" translate="yes" xml:space="preserve">
          <source>Zone master nameservers</source>
          <target state="translated">영역 마스터 네임 서버</target>
        </trans-unit>
        <trans-unit id="597e227239ad9b6c55cd845a4103f7c7f52caa44" translate="yes" xml:space="preserve">
          <source>Zone name</source>
          <target state="translated">구역 이름</target>
        </trans-unit>
        <trans-unit id="75c49601ea997836e08187c26f032878b62fc7e8" translate="yes" xml:space="preserve">
          <source>Zone name.</source>
          <target state="translated">구역 이름.</target>
        </trans-unit>
        <trans-unit id="618d8e02612b160c49caf9f6db0da48081a8bc7a" translate="yes" xml:space="preserve">
          <source>Zone of the configuration.</source>
          <target state="translated">구성 영역.</target>
        </trans-unit>
        <trans-unit id="3b7657003a0cc343bb72f03d7f0faa8caf06efcd" translate="yes" xml:space="preserve">
          <source>Zone of the host.</source>
          <target state="translated">호스트 영역.</target>
        </trans-unit>
        <trans-unit id="91571a73f8c2ee02898f245e8aede23fee0687cf" translate="yes" xml:space="preserve">
          <source>Zone of your domain name (ex. DDNS.com).</source>
          <target state="translated">도메인 이름의 영역 (예 : DDNS.com)</target>
        </trans-unit>
        <trans-unit id="98fbc11de151909cdb0b0da75caaf2692e19d57e" translate="yes" xml:space="preserve">
          <source>Zone of your domain name (for example, DDNS.com).</source>
          <target state="translated">도메인 이름의 영역 (예 : DDNS.com)</target>
        </trans-unit>
        <trans-unit id="11433b6a5cb110a4b404db9a3c316f29059132c1" translate="yes" xml:space="preserve">
          <source>Zone owner email</source>
          <target state="translated">존 소유자 이메일</target>
        </trans-unit>
        <trans-unit id="4d667da9d0c3e41983aae5a218243883d3eb499b" translate="yes" xml:space="preserve">
          <source>Zone slug of the network (e.g. &lt;code&gt;lgp1&lt;/code&gt; or &lt;code&gt;rma1&lt;/code&gt;).</source>
          <target state="translated">네트워크의 영역 슬러그 (예 : &lt;code&gt;lgp1&lt;/code&gt; 또는 &lt;code&gt;rma1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aa110abc895b9592b9ffd087afdb5fea32c01bd3" translate="yes" xml:space="preserve">
          <source>Zone slug of the server group (e.g. &lt;code&gt;lgp1&lt;/code&gt; or &lt;code&gt;rma1&lt;/code&gt;).</source>
          <target state="translated">서버 그룹의 영역 슬러그 (예 : &lt;code&gt;lgp1&lt;/code&gt; 또는 &lt;code&gt;rma1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="23a3f2d14078888f58e3611c849c6a672f8c0475" translate="yes" xml:space="preserve">
          <source>Zone the VPC is related to.</source>
          <target state="translated">VPC와 관련된 영역입니다.</target>
        </trans-unit>
        <trans-unit id="1f09435f6755661632f6f73bebe2da098516afc8" translate="yes" xml:space="preserve">
          <source>Zone this record set belongs to.</source>
          <target state="translated">이 레코드 모음이 속한 영역입니다.</target>
        </trans-unit>
        <trans-unit id="b71121f44501bfcd61834290943301f0f5abc236" translate="yes" xml:space="preserve">
          <source>Zone token</source>
          <target state="translated">존 토큰</target>
        </trans-unit>
        <trans-unit id="d2ace5b3f6569aee28965360c0c16e568e3d274b" translate="yes" xml:space="preserve">
          <source>Zone transactions (creating, deleting) can be performed by using only the zone and state parameters &amp;ldquo;present&amp;rdquo; or &amp;ldquo;absent&amp;rdquo;. Note that zone transactions must explicitly be permanent. This is a limitation in firewalld. This also means that you will have to reload firewalld after adding a zone that you wish to perform immediate actions on. The module will not take care of this for you implicitly because that would undo any previously performed immediate actions which were not permanent. Therefore, if you require immediate access to a newly created zone it is recommended you reload firewalld immediately after the zone creation returns with a changed state and before you perform any other immediate, non-permanent actions on that zone.</source>
          <target state="translated">영역 및 상태 매개 변수 &quot;present&quot;또는 &quot;absent&quot;만 사용하여 영역 트랜잭션 (작성, 삭제)을 수행 할 수 있습니다. 영역 트랜잭션은 명시 적으로 영구적이어야합니다. 방화벽으로 제한되어 있습니다. 즉, 즉각적인 조치를 수행 할 영역을 추가 한 후 방화벽을 다시로드해야합니다. 영구적이지 않은 이전에 수행 된 즉각적인 작업을 취소하기 때문에 모듈은이를 암시 적으로 처리하지 않습니다. 따라서 새로 만든 영역에 즉시 액세스해야하는 경우 영역 생성이 변경된 상태로 돌아온 직후와 해당 영역에서 다른 비 영구적 인 즉시 작업을 수행하기 전에 방화벽을 다시로드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0608f24ee8a62304d756c2185f50ef2dee4b4260" translate="yes" xml:space="preserve">
          <source>Zone type</source>
          <target state="translated">존 타입</target>
        </trans-unit>
        <trans-unit id="7a4a7ad6cec17b43c084a59b73e236fde206f8b8" translate="yes" xml:space="preserve">
          <source>Zone type (master to manage entries directly, slave to import entries from other zones).</source>
          <target state="translated">영역 유형 (항목을 직접 관리하는 마스터, 다른 영역에서 항목을 가져 오는 슬레이브)</target>
        </trans-unit>
        <trans-unit id="a29873108e454dbdbbac2c9675bb0ff63abb54df" translate="yes" xml:space="preserve">
          <source>Zone view (public to serve public clients, shadow to serve internal clients).</source>
          <target state="translated">영역보기 (공개 클라이언트를 제공하기 위해 공개, 내부 클라이언트를 제공하기 위해 그림자).</target>
        </trans-unit>
        <trans-unit id="12298417825164ca088466974d68034140feeda3" translate="yes" xml:space="preserve">
          <source>Zone where the network endpoint group is located.</source>
          <target state="translated">네트워크 엔드 포인트 그룹이있는 영역입니다.</target>
        </trans-unit>
        <trans-unit id="ede28e0a08523a645fa125ee570ded554a0d76da" translate="yes" xml:space="preserve">
          <source>Zone where this node group is located .</source>
          <target state="translated">이 노드 그룹이있는 영역입니다.</target>
        </trans-unit>
        <trans-unit id="370695fa8446a024513637dc9e8c387325a2c925" translate="yes" xml:space="preserve">
          <source>Zone/VM hostname.</source>
          <target state="translated">영역 / VM 호스트 이름</target>
        </trans-unit>
        <trans-unit id="ed271e3fc95f4a7906a311c0cb3523a77a5eaaf5" translate="yes" xml:space="preserve">
          <source>Zone01</source>
          <target state="translated">Zone01</target>
        </trans-unit>
        <trans-unit id="7f278b0a1584caec44032bc1c54d0d5fc22e32b0" translate="yes" xml:space="preserve">
          <source>Zones can be thought of as a logical group of domains, all of which share the same DNS records (i.e. they point to the same IP). An API key generated via the Memset customer control panel is needed with the following minimum scope - &lt;em&gt;dns.zone_create&lt;/em&gt;, &lt;em&gt;dns.zone_delete&lt;/em&gt;, &lt;em&gt;dns.zone_list&lt;/em&gt;.</source>
          <target state="translated">영역은 논리적 도메인 그룹으로 생각할 수 있으며, 모두 동일한 DNS 레코드를 공유합니다 (즉, 동일한 IP를 가리킴). Memset 고객 제어판을 통해 생성 된 API 키는 다음과 같은 최소 범위 인 &lt;em&gt;dns.zone_create&lt;/em&gt; , &lt;em&gt;dns.zone_delete&lt;/em&gt; , &lt;em&gt;dns.zone_list&lt;/em&gt; 와 함께 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="a686654eef1f23286d4b49c579a636053df4fe6f" translate="yes" xml:space="preserve">
          <source>Zones that are newly created must still be set up with a domain registrar before they can be used.</source>
          <target state="translated">새로 만든 영역은 도메인 등록 기관에서 설정해야 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70cac9967345271604c97ec4e2eb9faa82dfa0d5" translate="yes" xml:space="preserve">
          <source>Zsh or tcsh</source>
          <target state="translated">Zsh 또는 tcsh</target>
        </trans-unit>
        <trans-unit id="be1ac363913afba07be684e70dcbb7b7dcfd2ba1" translate="yes" xml:space="preserve">
          <source>Zurich</source>
          <target state="translated">Zurich</target>
        </trans-unit>
        <trans-unit id="7653aa2610467810fb31bd132e8833ebc653af3f" translate="yes" xml:space="preserve">
          <source>[ &quot;/usr/bin/dpkg-divert --no-rename --remove /etc/foobarrc&quot;, &quot;/usr/bin/dpkg-divert --package ansible --no-rename --add /etc/foobarrc&quot; ]</source>
          <target state="translated">[ &quot;/ usr / bin / dpkg-divert --no-rename --remove / etc / foobarrc&quot;, &quot;/ usr / bin / dpkg-divert --package ansible --no-rename --add / etc / foobarrc&quot; ]</target>
        </trans-unit>
        <trans-unit id="854cec06fa9a51fa79ab82c4db4070b9beeb9556" translate="yes" xml:space="preserve">
          <source>[ &quot;Removing 'local diversion of /etc/foobarrc to /etc/foobarrc.distrib'&quot;, &quot;Adding 'diversion of /etc/foobarrc to /etc/foobarrc.distrib by ansible'&quot; ]</source>
          <target state="translated">[ &quot; 'local diversion of / etc / foobarrc to /etc/foobarrc.distrib'&quot;, &quot; '/ etc / foobarrc를 /etc/foobarrc.distrib by ansible로 전환'추가&quot;]</target>
        </trans-unit>
        <trans-unit id="31a6dc910c738cc4d839d678130f1fbc3cdd7ec8" translate="yes" xml:space="preserve">
          <source>[ &quot;default&quot; ]</source>
          <target state="translated">[ &quot;기본&quot; ]</target>
        </trans-unit>
        <trans-unit id="6e27800b2058fa86aa45b83ab088aaeb9700c16e" translate="yes" xml:space="preserve">
          <source>[ &quot;web01&quot;, &quot;web02&quot; ]</source>
          <target state="translated">[ &quot;web01&quot;, &quot;web02&quot;]</target>
        </trans-unit>
        <trans-unit id="f0605ef1cd812785eeeb94adfbc10010da8c8d0a" translate="yes" xml:space="preserve">
          <source>[ &quot;webservers&quot; ]</source>
          <target state="translated">[ &quot;웹 서버&quot;]</target>
        </trans-unit>
        <trans-unit id="cf690a40abb279a16802b36b34e0c24b711313da" translate="yes" xml:space="preserve">
          <source>[ 'my-healthcheck' ]</source>
          <target state="translated">[ '내 건강 검사']</target>
        </trans-unit>
        <trans-unit id="5d9e00bc05dac0f803c7dff9f7bca84076490e6f" translate="yes" xml:space="preserve">
          <source>[ 'web' ]</source>
          <target state="translated">[ '웹']</target>
        </trans-unit>
        <trans-unit id="e90bb5da94fe25befc081f5b5fad8d6cdcf5934b" translate="yes" xml:space="preserve">
          <source>[ { &quot;key&quot;: &quot;foo&quot;, &quot;value&quot;: &quot;bar&quot; } ]</source>
          <target state="translated">[{ &quot;key&quot;: &quot;foo&quot;, &quot;value&quot;: &quot;bar&quot;}]</target>
        </trans-unit>
        <trans-unit id="59ce059214e59b609b519f34171ccddca897b883" translate="yes" xml:space="preserve">
          <source>[ { &quot;key&quot;: &quot;myCustomID&quot;, &quot;value&quot;: &quot;5510c31a-416e-11e8-9013-02000a6b00bf&quot; } ]</source>
          <target state="translated">[{ &quot;키&quot;: &quot;myCustomID&quot;, &quot;값&quot;: &quot;5510c31a-416e-11e8-9013-02000a6b00bf&quot;}]</target>
        </trans-unit>
        <trans-unit id="0443b0fd376b36a89257969b2176039334a0bf78" translate="yes" xml:space="preserve">
          <source>[ { 'instance_group': 'mig_one', 'zone': 'us-central1-b'} ]</source>
          <target state="translated">[{ 'instance_group': 'mig_one', 'zone': 'us-central1-b'}]]</target>
        </trans-unit>
        <trans-unit id="4936fb088ffe3e824cdad9177232c39cd2e9442f" translate="yes" xml:space="preserve">
          <source>[ { 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1b' }, { 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1c' } ]</source>
          <target state="translated">[{ 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1b'}, { 'messages': [], 'region_name': 'us-west-1', 'state': 'available', 'zone_name': 'us-west-1c'}]</target>
        </trans-unit>
        <trans-unit id="cc452b5ca1a2e02f4206bbb02a9220e682e8050a" translate="yes" xml:space="preserve">
          <source>[ { name: &quot;ROOT-1369&quot;, type: &quot;ROOT&quot;, size: 10737418240 }, { name: &quot;data01, type: &quot;DATADISK&quot;, size: 10737418240 } ]</source>
          <target state="translated">[{이름 : &quot;ROOT-1369&quot;, 유형 : &quot;ROOT&quot;, 크기 : 10737418240}, {이름 : &quot;data01, 유형 :&quot;DATADISK &quot;, 크기 : 10737418240}]</target>
        </trans-unit>
        <trans-unit id="9bd69c3040f699696e241edb04c5d606c9a582e3" translate="yes" xml:space="preserve">
          <source>[&quot;!config&quot;, &quot;!mpls&quot;]</source>
          <target state="translated">[ &quot;! config&quot;, &quot;! mpls&quot;]</target>
        </trans-unit>
        <trans-unit id="02e1bf8bcf793730371dbe4a6ad0e8a8e8a2b2b7" translate="yes" xml:space="preserve">
          <source>[&quot;!config&quot;]</source>
          <target state="translated">[&quot;!config&quot;]</target>
        </trans-unit>
        <trans-unit id="d42f4906ed93ae4e2d4fa0b3c0ef629a5a2082f6" translate="yes" xml:space="preserve">
          <source>[&quot;.yaml&quot;, &quot;.yml&quot;, &quot;.json&quot;]</source>
          <target state="translated">[ &quot;.yaml&quot;, &quot;.yml&quot;, &quot;.json&quot;]</target>
        </trans-unit>
        <trans-unit id="e6afa48bbef4bf3f126958a7dcbb5714b5504b92" translate="yes" xml:space="preserve">
          <source>[&quot;.yml&quot;, &quot;.yaml&quot;, &quot;.json&quot;]</source>
          <target state="translated">[ &quot;.yml&quot;, &quot;.yaml&quot;, &quot;.json&quot;]</target>
        </trans-unit>
        <trans-unit id="6aa7f109fb8e682aa56844c548b5bb68424bdcc0" translate="yes" xml:space="preserve">
          <source>[&quot;/sbin&quot;, &quot;/usr/sbin&quot;, &quot;/usr/local/sbin&quot;]</source>
          <target state="translated">[ &quot;/ sbin&quot;, &quot;/ usr / sbin&quot;, &quot;/ usr / local / sbin&quot;]</target>
        </trans-unit>
        <trans-unit id="0cb4f8660b63eaa4c6c2881ace3809e201386369" translate="yes" xml:space="preserve">
          <source>[&quot;/var/tmp&quot;, &quot;/tmp&quot;]</source>
          <target state="translated">[ &quot;/ var / tmp&quot;, &quot;/ tmp&quot;]</target>
        </trans-unit>
        <trans-unit id="10fdb6ca3cc5b36ea97e9ede8be91850edb33e3c" translate="yes" xml:space="preserve">
          <source>[&quot;CAPABILITY_IAM&quot;, &quot;CAPABILITY_NAMED_IAM&quot;]</source>
          <target state="translated">[ &quot;CAPABILITY_IAM&quot;, &quot;CAPABILITY_NAMED_IAM&quot;]</target>
        </trans-unit>
        <trans-unit id="8a2682ef40824e3879830ef367dda40cf58ed248" translate="yes" xml:space="preserve">
          <source>[&quot;CHANGE MASTER TO MASTER_HOST='master2.example.com',MASTER_PORT=3306&quot;]</source>
          <target state="translated">[ &quot;마스터를 MASTER_HOST = 'master2.example.com', MASTER_PORT = 3306으로 변경&quot;]</target>
        </trans-unit>
        <trans-unit id="63a3b655bc7c21978db93eb6f257d09dcb662f9c" translate="yes" xml:space="preserve">
          <source>[&quot;COPY test_table FROM '/tmp/data_file.txt' (FORMAT csv, DELIMITER ',', NULL 'NULL')&quot;]</source>
          <target state="translated">[ &quot;COPY test_table FROM '/tmp/data_file.txt'(FORMAT csv, DELIMITER ',', NULL 'NULL')&quot;]</target>
        </trans-unit>
        <trans-unit id="1c644e5780ee208e0490019e5cfbc826da8b8c2f" translate="yes" xml:space="preserve">
          <source>[&quot;CREATE TABLESPACE bar LOCATION '/incredible/ssd'&quot;]</source>
          <target state="translated">[ &quot;CREATE TABLESPACE 막대 위치 '/ incredible / ssd'&quot;]</target>
        </trans-unit>
        <trans-unit id="f85078b3a1438a7a198d8f7d65ac235c56d0e81e" translate="yes" xml:space="preserve">
          <source>[&quot;CriticalUpdates&quot;, &quot;SecurityUpdates&quot;, &quot;UpdateRollups&quot;]</source>
          <target state="translated">[ &quot;CriticalUpdates&quot;, &quot;SecurityUpdates&quot;, &quot;UpdateRollups&quot;]</target>
        </trans-unit>
        <trans-unit id="501450348bc7457985ea2b5932b07fb5b679cf74" translate="yes" xml:space="preserve">
          <source>[&quot;DNS:ca.example.org&quot;]</source>
          <target state="translated">[&quot;DNS:ca.example.org&quot;]</target>
        </trans-unit>
        <trans-unit id="fac7b7f96e127a0b56593f9e50000a105e2f18c7" translate="yes" xml:space="preserve">
          <source>[&quot;Domain&quot;, &quot;Private&quot;, &quot;Public&quot;]</source>
          <target state="translated">[ &quot;도메인&quot;, &quot;비공개&quot;, &quot;공개&quot;]</target>
        </trans-unit>
        <trans-unit id="62b75b6dcc60946e38296256ba97862078575f86" translate="yes" xml:space="preserve">
          <source>[&quot;ESTABLISHED&quot;, &quot;FIN_WAIT1&quot;, &quot;FIN_WAIT2&quot;, &quot;SYN_RECV&quot;, &quot;SYN_SENT&quot;, &quot;TIME_WAIT&quot;]</source>
          <target state="translated">[ &quot;ESTABLISHED&quot;, &quot;FIN_WAIT1&quot;, &quot;FIN_WAIT2&quot;, &quot;SYN_RECV&quot;, &quot;SYN_SENT&quot;, &quot;TIME_WAIT&quot;]</target>
        </trans-unit>
        <trans-unit id="d9368fb8b990319c17cf05e953edf2bd8c24033a" translate="yes" xml:space="preserve">
          <source>[&quot;Filename from src and at default directory of user shell on network_os.&quot;]</source>
          <target state="translated">[ &quot;src의 파일 이름 및 network_os에있는 사용자 쉘의 기본 디렉토리&quot;]</target>
        </trans-unit>
        <trans-unit id="428732546567399533f5a7f05eb564576dcbc49d" translate="yes" xml:space="preserve">
          <source>[&quot;GroupMinSize&quot;, &quot;GroupMaxSize&quot;, &quot;GroupDesiredCapacity&quot;, &quot;GroupInServiceInstances&quot;, &quot;GroupPendingInstances&quot;, &quot;GroupStandbyInstances&quot;, &quot;GroupTerminatingInstances&quot;, &quot;GroupTotalInstances&quot;]</source>
          <target state="translated">[ &quot;GroupMinSize&quot;, &quot;GroupMaxSize&quot;, &quot;GroupDesiredCapacity&quot;, &quot;GroupInServiceInstances&quot;, &quot;GroupPendingInstances&quot;, &quot;GroupStandbyInstances&quot;, &quot;GroupTerminatingInstances&quot;, &quot;GroupTotalInstances&quot;]</target>
        </trans-unit>
        <trans-unit id="235c89d0dd14cac1363eac1efef8f7aee4aeecea" translate="yes" xml:space="preserve">
          <source>[&quot;Perform operation 'Invoke CimMethod' with the following parameters, &quot;, '[SERVER]: LCM: [Start Set ] [[File]DirectResourceAccess]', &quot;Operation 'Invoke CimMethod' complete.&quot;]</source>
          <target state="translated">[ &quot;&quot;, &quot;[SERVER] 매개 변수를 사용하여 'Inim CimMethod'작업을 수행하십시오. LCM : [Start Set] [[File] DirectResourceAccess] ',&quot;'CimMethod 호출 '작업 완료 &quot;&quot;</target>
        </trans-unit>
        <trans-unit id="dcb88e3a0e8a9f8fd9fc6f43545e66d3e3b7a740" translate="yes" xml:space="preserve">
          <source>[&quot;Perform operation 'Invoke CimMethod' with the following parameters, &quot;, '[SERVER]: LCM: [Start Test ] [[File]DirectResourceAccess]', &quot;Operation 'Invoke CimMethod' complete.&quot;]</source>
          <target state="translated">[ &quot;&quot;, &quot;[SERVER] 매개 변수를 사용하여 'Inim CimMethod'작업을 수행하십시오. LCM : [Start Test] [[File] DirectResourceAccess] ',&quot;'CimMethod 호출 '작업 완료 &quot;&quot;</target>
        </trans-unit>
        <trans-unit id="d10ee6cdd059a23f94b6039faeb351d6d45879ad" translate="yes" xml:space="preserve">
          <source>[&quot;REF_NetworkAny&quot;]</source>
          <target state="translated">[&quot;REF_NetworkAny&quot;]</target>
        </trans-unit>
        <trans-unit id="f7fc1714c66ca81c1cb3eab1cc5924a246efcf81" translate="yes" xml:space="preserve">
          <source>[&quot;SELECT pg_create_physical_replication_slot('physical_one', False, False)&quot;]</source>
          <target state="translated">[ &quot;SELECT pg_create_physical_replication_slot ( 'physical_one', False, False)&quot;]</target>
        </trans-unit>
        <trans-unit id="cd488cc4ddc0111971c9e6aba38ff187e9c4ae95" translate="yes" xml:space="preserve">
          <source>[&quot;Same filename as specified in I(src). The path will be playbook root or role root directory if playbook is part of a role.&quot;]</source>
          <target state="translated">[ &quot;I (src)에 지정된 것과 동일한 파일 이름. 플레이 북이 역할의 일부인 경우 경로는 플레이 북 루트 또는 역할 루트 디렉토리입니다.&quot;]</target>
        </trans-unit>
        <trans-unit id="b40fc88019b6e71681f442d3b8876a6b1aad8262" translate="yes" xml:space="preserve">
          <source>[&quot;System:Base&quot;, &quot;System:CoreDumps&quot;, &quot;System:EsxImage&quot;, &quot;System:IOFilter&quot;, &quot;System:LoadESX&quot;, &quot;System:Modules&quot;, &quot;System:RDMA&quot;, &quot;System:ResourceGroups&quot;, &quot;System:TPM&quot;, &quot;System:VFlash&quot;, &quot;System:VMTools&quot;, &quot;System:VmiofPlugins&quot;, &quot;System:ntp&quot;, &quot;System:uwstats&quot;, &quot;Fcd:Catalog&quot;, &quot;VirtualMachines:CoreDumps&quot;, &quot;VirtualMachines:VirtualMachineStats&quot;, &quot;VirtualMachines:base&quot;, &quot;VirtualMachines:base&quot;, &quot;VirtualMachines:diskinfo&quot;, &quot;VirtualMachines:logs&quot;, &quot;Storage:FCoE&quot;, &quot;Storage:Multipathing&quot;, &quot;Storage:NAS&quot;, &quot;Storage:VSAN&quot;, &quot;Storage:VSANHealth&quot;, &quot;Storage:VSANIscsiTarget&quot;, &quot;Storage:VSANPerfStats&quot;, &quot;Storage:VSANPerfSvc&quot;, &quot;Storage:VSANTraces&quot;, &quot;Storage:VVOL&quot;, &quot;Storage:base&quot;, &quot;Storage:iodm&quot;, &quot;Storage:iscsi&quot;, &quot;FeatureStateSwitch:FeatureStateSwitch&quot;, &quot;Userworld:HostAgent&quot;, &quot;Userworld:ProcessInformation&quot;, &quot;Configuration:System&quot;, &quot;Logs:System&quot;, &quot;hostProfiles:SystemImageCacheHostProfile&quot;, &quot;hostProfiles:hostProfiles&quot;, &quot;FileSystem:VMFSDiskDump&quot;, &quot;FileSystem:base&quot;, &quot;ActiveDirectory:base&quot;, &quot;CIM:base&quot;, &quot;Hardware:base&quot;, &quot;Hardware:usb&quot;, &quot;Installer:base&quot;, &quot;Network:base&quot;, &quot;Network:dvs&quot;, &quot;Network:lacp&quot;, &quot;Network:nscd&quot;, &quot;Network:tcpip&quot;, &quot;IntegrityChecks:md5sums&quot;]</source>
          <target state="translated">[ &quot;System : Base&quot;, &quot;System : CoreDumps&quot;, &quot;System : EsxImage&quot;, &quot;System : IOFilter&quot;, &quot;System : LoadESX&quot;, &quot;System : Modules&quot;, &quot;System : RDMA&quot;, &quot;System : ResourceGroups&quot;, &quot; System : TPM &quot;,&quot;System : VFlash &quot;,&quot;System : VMTools &quot;,&quot;System : VmiofPlugins &quot;,&quot;System : ntp &quot;,&quot;System : uwstats &quot;,&quot;Fcd : Catalog &quot;,&quot;VirtualMachines : CoreDumps &quot;,&quot;VirtualMachines : VirtualMachineStats &quot;,&quot;VirtualMachines : base &quot;,&quot;VirtualMachines : base &quot;,&quot;VirtualMachines : diskinfo &quot;,&quot;VirtualMachines : logs &quot;,&quot;스토리지 : FCoE &quot;,&quot;스토리지 : 다중 경로 &quot;,&quot;스토리지 : NAS &quot;,&quot;스토리지 : VSAN &quot; , &quot;스토리지 : VSANHealth&quot;, &quot;스토리지 : VSANIscsiTarget&quot;, &quot;스토리지 : VSANPerfStats&quot;, &quot;Storage : VSANPerfSvc&quot;, &quot;Storage : VSANTraces&quot;, &quot;Storage : VVOL&quot;, &quot;Storage : base&quot;, &quot;Storage : iodm&quot;, &quot;Storage : iscsi&quot;, &quot;FeatureStateSwitch : FeatureStateSwitch&quot;, &quot;Userworld : HostAgent&quot;, &quot; Userworld : ProcessInformation &quot;,&quot;Configuration : System &quot;,&quot;Logs : System &quot;,&quot;hostProfiles : SystemImageCacheHostProfile &quot;,&quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot;,&quot;Hardware : base &quot;,&quot;Hardware : usb &quot;,&quot;Installer : base &quot;,&quot;Network : base &quot;,&quot;Network : dvs &quot;,&quot;Network : lacp &quot;,&quot;Network : nscd &quot;,&quot;Network : tcpip &quot; , &quot;IntegrityChecks : md5sums&quot;]Storage : VSANTraces &quot;,&quot;Storage : VVOL &quot;,&quot;Storage : base &quot;,&quot;Storage : iodm &quot;,&quot;Storage : iscsi &quot;,&quot;FeatureStateSwitch : FeatureStateSwitch &quot;,&quot;Userworld : HostAgent &quot;,&quot;Userworld : ProcessInformation &quot;,&quot;구성 : System &quot;,&quot;Logs : System &quot;,&quot;hostProfiles : SystemImageCacheHostProfile &quot;,&quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot;,&quot;Hardware : base &quot; , &quot;Hardware : usb&quot;, &quot;Installer : base&quot;, &quot;Network : base&quot;, &quot;Network : dvs&quot;, &quot;Network : lacp&quot;, &quot;Network : nscd&quot;, &quot;Network : tcpip&quot;, &quot;IntegrityChecks : md5sums&quot;]Storage : VSANTraces &quot;,&quot;Storage : VVOL &quot;,&quot;Storage : base &quot;,&quot;Storage : iodm &quot;,&quot;Storage : iscsi &quot;,&quot;FeatureStateSwitch : FeatureStateSwitch &quot;,&quot;Userworld : HostAgent &quot;,&quot;Userworld : ProcessInformation &quot;,&quot;구성 : System &quot;,&quot;Logs : System &quot;,&quot;hostProfiles : SystemImageCacheHostProfile &quot;,&quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot;,&quot;Hardware : base &quot; , &quot;Hardware : usb&quot;, &quot;Installer : base&quot;, &quot;Network : base&quot;, &quot;Network : dvs&quot;, &quot;Network : lacp&quot;, &quot;Network : nscd&quot;, &quot;Network : tcpip&quot;, &quot;IntegrityChecks : md5sums&quot;]&quot;Storage : iodm&quot;, &quot;Storage : iscsi&quot;, &quot;FeatureStateSwitch : FeatureStateSwitch&quot;, &quot;Userworld : HostAgent&quot;, &quot;Userworld : ProcessInformation&quot;, &quot;Configuration : System&quot;, &quot;Logs : System&quot;, &quot;hostProfiles : SystemImageCacheHostProfile&quot;, &quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot;,&quot;Hardware : base &quot;,&quot;Hardware : usb &quot;,&quot;Installer : base &quot;,&quot;Network : base &quot;,&quot;네트워크 : dvs &quot;,&quot;네트워크 : lacp &quot;,&quot;네트워크 : nscd &quot;,&quot;네트워크 : tcpip &quot;,&quot;IntegrityChecks : md5sums &quot;]&quot;Storage : iodm&quot;, &quot;Storage : iscsi&quot;, &quot;FeatureStateSwitch : FeatureStateSwitch&quot;, &quot;Userworld : HostAgent&quot;, &quot;Userworld : ProcessInformation&quot;, &quot;Configuration : System&quot;, &quot;Logs : System&quot;, &quot;hostProfiles : SystemImageCacheHostProfile&quot;, &quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot;,&quot;Hardware : base &quot;,&quot;Hardware : usb &quot;,&quot;Installer : base &quot;,&quot;Network : base &quot;,&quot;네트워크 : dvs &quot;,&quot;네트워크 : lacp &quot;,&quot;네트워크 : nscd &quot;,&quot;네트워크 : tcpip &quot;,&quot;IntegrityChecks : md5sums &quot;]ProcessInformation &quot;,&quot;Configuration : System &quot;,&quot;Logs : System &quot;,&quot;hostProfiles : SystemImageCacheHostProfile &quot;,&quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot; , &quot;Hardware : base&quot;, &quot;Hardware : usb&quot;, &quot;Installer : base&quot;, &quot;Network : base&quot;, &quot;Network : dvs&quot;, &quot;Network : lacp&quot;, &quot;Network : nscd&quot;, &quot;Network : tcpip&quot;, &quot; IntegrityChecks : md5sums &quot;]ProcessInformation &quot;,&quot;Configuration : System &quot;,&quot;Logs : System &quot;,&quot;hostProfiles : SystemImageCacheHostProfile &quot;,&quot;hostProfiles : hostProfiles &quot;,&quot;FileSystem : VMFSDiskDump &quot;,&quot;FileSystem : base &quot;,&quot;ActiveDirectory : base &quot;,&quot;CIM : base &quot; , &quot;Hardware : base&quot;, &quot;Hardware : usb&quot;, &quot;Installer : base&quot;, &quot;Network : base&quot;, &quot;Network : dvs&quot;, &quot;Network : lacp&quot;, &quot;Network : nscd&quot;, &quot;Network : tcpip&quot;, &quot; IntegrityChecks : md5sums &quot;]base &quot;,&quot;Hardware : usb &quot;,&quot;Installer : base &quot;,&quot;Network : base &quot;,&quot;Network : dvs &quot;,&quot;Network : lacp &quot;,&quot;Network : nscd &quot;,&quot;Network : tcpip &quot;,&quot;IntegrityChecks : md5sums &quot; ]base &quot;,&quot;Hardware : usb &quot;,&quot;Installer : base &quot;,&quot;Network : base &quot;,&quot;Network : dvs &quot;,&quot;Network : lacp &quot;,&quot;Network : nscd &quot;,&quot;Network : tcpip &quot;,&quot;IntegrityChecks : md5sums &quot; ]</target>
        </trans-unit>
        <trans-unit id="bb452a08abdf124835b898f3fc045b1da0f41df0" translate="yes" xml:space="preserve">
          <source>[&quot;Systems&quot;]</source>
          <target state="translated">[&quot;Systems&quot;]</target>
        </trans-unit>
        <trans-unit id="30c598c2275dd6b76ba4fd3ddc72dcb4952be677" translate="yes" xml:space="preserve">
          <source>[&quot;all&quot;]</source>
          <target state="translated">[&quot;all&quot;]</target>
        </trans-unit>
        <trans-unit id="2a83dcb8f44b869d7aa739148a589acb8ae86edb" translate="yes" xml:space="preserve">
          <source>[&quot;ams1&quot;, &quot;par1&quot;]</source>
          <target state="translated">[ &quot;ams1&quot;, &quot;par1&quot;]</target>
        </trans-unit>
        <trans-unit id="cdb9570d8435afa52a5624320c5236afa7bf6d1d" translate="yes" xml:space="preserve">
          <source>[&quot;any&quot;]</source>
          <target state="translated">[&quot;any&quot;]</target>
        </trans-unit>
        <trans-unit id="f4d3e7b988d76573772469e490dff61c0a5587e2" translate="yes" xml:space="preserve">
          <source>[&quot;auditLog&quot;]</source>
          <target state="translated">[&quot;auditLog&quot;]</target>
        </trans-unit>
        <trans-unit id="0ac14db0b2ea6a08c139698d00e86f68eface230" translate="yes" xml:space="preserve">
          <source>[&quot;auto&quot;]</source>
          <target state="translated">[&quot;auto&quot;]</target>
        </trans-unit>
        <trans-unit id="9be9e509567a807d9856af96f18187404b301fab" translate="yes" xml:space="preserve">
          <source>[&quot;autoscaling:EC2_INSTANCE_LAUNCH&quot;, &quot;autoscaling:EC2_INSTANCE_LAUNCH_ERROR&quot;, &quot;autoscaling:EC2_INSTANCE_TERMINATE&quot;, &quot;autoscaling:EC2_INSTANCE_TERMINATE_ERROR&quot;]</source>
          <target state="translated">[ &quot;자동 스케일링 : EC2_INSTANCE_LAUNCH&quot;, &quot;자동 스케일링 : EC2_INSTANCE_LAUNCH_ERROR&quot;, &quot;자동 스케일링 : EC2_INSTANCE_TERMINATE&quot;, &quot;자동 스케일링 : EC2_INSTANCE_TERMINATE_ERROR&quot;]</target>
        </trans-unit>
        <trans-unit id="4681e436bd1d8bd667f951671af95587bc250544" translate="yes" xml:space="preserve">
          <source>[&quot;bugfix&quot;, &quot;enhancement&quot;, &quot;security&quot;]</source>
          <target state="translated">[ &quot;버그 수정&quot;, &quot;향상&quot;, &quot;보안&quot;]</target>
        </trans-unit>
        <trans-unit id="1b3b2f641bb14afc0b3aca2bd71965208bdc2a90" translate="yes" xml:space="preserve">
          <source>[&quot;channel subscription was absent and state is `present'&quot;]</source>
          <target state="translated">[ &quot;채널 구독이없고 상태가 '현재'입니다.&quot;]</target>
        </trans-unit>
        <trans-unit id="80da64df211a92aee4d7e25e244b22d960b4874f" translate="yes" xml:space="preserve">
          <source>[&quot;config.name + \&quot;_\&quot; + config.uuid&quot;]</source>
          <target state="translated">[ &quot;config.name + \&quot;_ \ &quot;+ config.uuid&quot;]</target>
        </trans-unit>
        <trans-unit id="67bcd270c1362e6b61fb46048029feb6f1ad479f" translate="yes" xml:space="preserve">
          <source>[&quot;create&quot;, &quot;start&quot;]</source>
          <target state="translated">[ &quot;만들기&quot;, &quot;시작&quot;]</target>
        </trans-unit>
        <trans-unit id="13e33dd5a507d2eb44bc06b85ec160727a396021" translate="yes" xml:space="preserve">
          <source>[&quot;create&quot;]</source>
          <target state="translated">[&quot;create&quot;]</target>
        </trans-unit>
        <trans-unit id="8ba99692c840235d6e89200215cad091b9611ce2" translate="yes" xml:space="preserve">
          <source>[&quot;creating&quot;, &quot;available&quot;]</source>
          <target state="translated">[ &quot;만들기&quot;, &quot;사용 가능&quot;]</target>
        </trans-unit>
        <trans-unit id="bcb1058b0e7dfde1fc9eb998fbe378e32ef12eaf" translate="yes" xml:space="preserve">
          <source>[&quot;default&quot;]</source>
          <target state="translated">[&quot;default&quot;]</target>
        </trans-unit>
        <trans-unit id="bf2a04455f47ad1e9dec1cd6082c692a3671c380" translate="yes" xml:space="preserve">
          <source>[&quot;device&quot;, &quot;ltm&quot;]</source>
          <target state="translated">[ &quot;장치&quot;, &quot;ltm&quot;]</target>
        </trans-unit>
        <trans-unit id="59888bb127bc85ab30ca98065289c5c6d9025c9a" translate="yes" xml:space="preserve">
          <source>[&quot;external&quot;]</source>
          <target state="translated">[&quot;external&quot;]</target>
        </trans-unit>
        <trans-unit id="7b40593d60f6be0915b7840a1ea287fe492fef7f" translate="yes" xml:space="preserve">
          <source>[&quot;fqdn&quot;, &quot;name&quot;]</source>
          <target state="translated">[ &quot;fqdn&quot;, &quot;이름&quot;]</target>
        </trans-unit>
        <trans-unit id="4e8e93d946c6b79e25de355b28821943f7242703" translate="yes" xml:space="preserve">
          <source>[&quot;guid&quot;, &quot;author&quot;, &quot;company_name&quot;, &quot;copyright&quot;, &quot;description&quot;]</source>
          <target state="translated">[ &quot;guid&quot;, &quot;author&quot;, &quot;company_name&quot;, &quot;copyright&quot;, &quot;description&quot;]</target>
        </trans-unit>
        <trans-unit id="55cf319b7f693068f4fca2fc7d03f5a41d971f53" translate="yes" xml:space="preserve">
          <source>[&quot;hd&quot;, &quot;network&quot;]</source>
          <target state="translated">[ &quot;hd&quot;, &quot;네트워크&quot;]</target>
        </trans-unit>
        <trans-unit id="0d2c09056768ddff4efecd7e69e9fb884bfe25d4" translate="yes" xml:space="preserve">
          <source>[&quot;https://www.googleapis.com/auth/compute&quot;]</source>
          <target state="translated">[&quot;https://www.googleapis.com/auth/compute&quot;]</target>
        </trans-unit>
        <trans-unit id="c2a179401f55c29dfd07af29d81da88b4057f01d" translate="yes" xml:space="preserve">
          <source>[&quot;import-security&quot;]</source>
          <target state="translated">[&quot;import-security&quot;]</target>
        </trans-unit>
        <trans-unit id="10304da2cd17b420dea394e5d85afa0a567c226d" translate="yes" xml:space="preserve">
          <source>[&quot;json&quot;, &quot;yaml&quot;, &quot;yml&quot;]</source>
          <target state="translated">[ &quot;json&quot;, &quot;yaml&quot;, &quot;yml&quot;]</target>
        </trans-unit>
        <trans-unit id="2866581fca844ce039a272a9047ae805f6485686" translate="yes" xml:space="preserve">
          <source>[&quot;memberOf&quot;]</source>
          <target state="translated">[&quot;memberOf&quot;]</target>
        </trans-unit>
        <trans-unit id="0f3a1a0740fc927978ac9c8bca5bc286f5a9c732" translate="yes" xml:space="preserve">
          <source>[&quot;mgmt_classes&quot;, &quot;owners&quot;, &quot;status&quot;]</source>
          <target state="translated">[ &quot;mgmt_classes&quot;, &quot;소유자&quot;, &quot;상태&quot;]</target>
        </trans-unit>
        <trans-unit id="bb4f27fc4725aed6e62e9c989132cb3b1bbd78e2" translate="yes" xml:space="preserve">
          <source>[&quot;name&quot;, &quot;config.cpuHotAddEnabled&quot;, &quot;config.cpuHotRemoveEnabled&quot;, &quot;config.instanceUuid&quot;, &quot;config.hardware.numCPU&quot;, &quot;config.template&quot;, &quot;config.name&quot;, &quot;config.uuid&quot;, &quot;guest.hostName&quot;, &quot;guest.ipAddress&quot;, &quot;guest.guestId&quot;, &quot;guest.guestState&quot;, &quot;runtime.maxMemoryUsage&quot;, &quot;customValue&quot;, &quot;summary.runtime.powerState&quot;, &quot;config.guestId&quot;]</source>
          <target state="translated">[ &quot;name&quot;, &quot;config.cpuHotAddEnabled&quot;, &quot;config.cpuHotRemoveEnabled&quot;, &quot;config.instanceUuid&quot;, &quot;config.hardware.numCPU&quot;, &quot;config.template&quot;, &quot;config.name&quot;, &quot;config.uuid&quot;, &quot; guest.hostName &quot;,&quot;guest.ipAddress &quot;,&quot;guest.guestId &quot;,&quot;guest.guestState &quot;,&quot;runtime.maxMemoryUsage &quot;,&quot;customValue &quot;,&quot;summary.runtime.powerState &quot;,&quot;config.guestId &quot;]</target>
        </trans-unit>
        <trans-unit id="e8378c5eee575d888a8bfa10ffd46efab6e5cf4a" translate="yes" xml:space="preserve">
          <source>[&quot;name&quot;, &quot;config.cpuHotAddEnabled&quot;, &quot;config.cpuHotRemoveEnabled&quot;, &quot;config.instanceUuid&quot;, &quot;config.hardware.numCPU&quot;, &quot;config.template&quot;, &quot;config.name&quot;, &quot;guest.hostName&quot;, &quot;guest.ipAddress&quot;, &quot;guest.guestId&quot;, &quot;guest.guestState&quot;, &quot;runtime.maxMemoryUsage&quot;, &quot;customValue&quot;]</source>
          <target state="translated">[ &quot;이름&quot;, &quot;config.cpuHotAddEnabled&quot;, &quot;config.cpuHotRemoveEnabled&quot;, &quot;config.instanceUuid&quot;, &quot;config.hardware.numCPU&quot;, &quot;config.template&quot;, &quot;config.name&quot;, &quot;guest.hostName&quot;, &quot; guest.ipAddress &quot;,&quot;guest.guestId &quot;,&quot;guest.guestState &quot;,&quot;runtime.maxMemoryUsage &quot;,&quot;customValue &quot;]</target>
        </trans-unit>
        <trans-unit id="cda37bb9cfed82da7a65ffe30cb227384de06700" translate="yes" xml:space="preserve">
          <source>[&quot;pip&quot;]</source>
          <target state="translated">[&quot;pip&quot;]</target>
        </trans-unit>
        <trans-unit id="6f4345f776778a9198dbbf2418d349748b97f025" translate="yes" xml:space="preserve">
          <source>[&quot;powerstate != \&quot;running\&quot;&quot;, &quot;provisioning_state != \&quot;succeeded\&quot;&quot;]</source>
          <target state="translated">[ &quot;powerstate! = \&quot;실행 중 \ &quot;&quot;, &quot;provisioning_state! = \&quot;성공 \ &quot;&quot;]</target>
        </trans-unit>
        <trans-unit id="ce40469debb66d345da026b18321a23f6b17b87e" translate="yes" xml:space="preserve">
          <source>[&quot;private&quot;]</source>
          <target state="translated">[&quot;private&quot;]</target>
        </trans-unit>
        <trans-unit id="cae0f67e01d79eca05306260b9df8fe3e34f7a7f" translate="yes" xml:space="preserve">
          <source>[&quot;public&quot;, &quot;private&quot;]</source>
          <target state="translated">[ &quot;공개&quot;, &quot;개인&quot;]</target>
        </trans-unit>
        <trans-unit id="b14ca2f1bf3fc8f15dbad8d92cc9d5b69aa43f5e" translate="yes" xml:space="preserve">
          <source>[&quot;public_ip&quot;, &quot;private_ip&quot;, &quot;name&quot;]</source>
          <target state="translated">[ &quot;public_ip&quot;, &quot;private_ip&quot;, &quot;이름&quot;]</target>
        </trans-unit>
        <trans-unit id="5849b6939a400a603780d350e46bcb218f59f5b2" translate="yes" xml:space="preserve">
          <source>[&quot;public_ipv4&quot;]</source>
          <target state="translated">[&quot;public_ipv4&quot;]</target>
        </trans-unit>
        <trans-unit id="677acdac843e2827c610b8b433264a3427c1958a" translate="yes" xml:space="preserve">
          <source>[&quot;root&quot;, &quot;toor&quot;]</source>
          <target state="translated">[ &quot;root&quot;, &quot;toor&quot;]</target>
        </trans-unit>
        <trans-unit id="2ea106acb61819e9be32c69e00f78a3316f5f753" translate="yes" xml:space="preserve">
          <source>[&quot;set firewall name Downlink default-action 'accept'&quot;, &quot;set firewall name Downlink description 'IPv4 INBOUND rule set'&quot;, &quot;set firewall name Downlink rule 501 action 'accept'&quot;, &quot;set firewall name Downlink rule 502 description 'Rule 502 is configured by Ansible'&quot;, &quot;set firewall name Downlink rule 502 ipsec 'match-ipsec'&quot;]</source>
          <target state="translated">[ &quot;set firewall name Downlink default-action 'accept'&quot;, &quot;set firewall name Downlink description 'IPv4 INBOUND rule set'&quot;, &quot;set firewall name Downlink rule 501 action 'accept'&quot;, &quot;set firewall name Downlink rule 502 description ' 규칙 502는 Ansible에 의해 구성됨 ' &quot;,&quot;방화벽 이름 설정 다운 링크 규칙 502 ipsec'match-ipsec ' &quot;]</target>
        </trans-unit>
        <trans-unit id="abdf8af020d59ee1ff1378e64c5c80e7c47a6468" translate="yes" xml:space="preserve">
          <source>[&quot;set interfaces ethernet eth0 address '192.168.0.1/24'&quot;]</source>
          <target state="translated">[ &quot;인터페이스 이더넷 eth0 주소 '192.168.0.1/24'설정&quot;]</target>
        </trans-unit>
        <trans-unit id="e8e1ecf80be832d0d53f5f2234932e78518bd40e" translate="yes" xml:space="preserve">
          <source>[&quot;set interfaces ethernet eth1 firewall local ipv6-name 'V6-LOCAL'&quot;, &quot;set interfaces ethernet eth3 firewall in name 'INBOUND'&quot;]</source>
          <target state="translated">[ &quot;set interfaces ethernet eth1 firewall local ipv6-name 'V6-LOCAL'&quot;, &quot;set interfaces ethernet eth3 firewall in name 'INBOUND'&quot;]</target>
        </trans-unit>
        <trans-unit id="ff342c9448be7f32eae76d90d8e362878b43870a" translate="yes" xml:space="preserve">
          <source>[&quot;set protocols static route 192.0.2.32/28 next-hop '192.0.2.6'&quot;, &quot;set protocols static route 192.0.2.32/28 'blackhole'&quot;]</source>
          <target state="translated">[ &quot;set protocols static route 192.0.2.32/28 next-hop '192.0.2.6'&quot;, &quot;set protocols static route 192.0.2.32/28 'blackhole'&quot;]</target>
        </trans-unit>
        <trans-unit id="8df9461b82e08ab34c9adb38a1946c5ddbdf9e14" translate="yes" xml:space="preserve">
          <source>[&quot;set service lldp interface eth2 'disable'&quot;, 'delete service lldp interface eth1 location']</source>
          <target state="translated">[ &quot;서비스 lldp 인터페이스 eth2 '비활성화'&quot;, '서비스 lldp 인터페이스 eth1 위치 삭제']</target>
        </trans-unit>
        <trans-unit id="6c11b8f018b2cca7ccd67e68ed80a475501a03cd" translate="yes" xml:space="preserve">
          <source>[&quot;src&quot;, &quot;dest&quot;, &quot;dvc&quot;, &quot;orig_host&quot;]</source>
          <target state="translated">[ &quot;src&quot;, &quot;dest&quot;, &quot;dvc&quot;, &quot;orig_host&quot;]</target>
        </trans-unit>
        <trans-unit id="fba08615c967c9edf32249f2fead763114469a86" translate="yes" xml:space="preserve">
          <source>[&quot;u'Clustering node rabbit@slave1 with rabbit@main ...'&quot;]</source>
          <target state="translated">[ &quot;u'klustering node rabbit @ slave1 with rabbit @ main ... '&quot;]</target>
        </trans-unit>
        <trans-unit id="e5a5dda27b2f23afc50318cab14c011a1b286dd6" translate="yes" xml:space="preserve">
          <source>[&quot;u'Clustering node rabbit@slave1 with rabbit@master &amp;hellip;'&quot;]</source>
          <target state="translated">[ &quot;u'klustering node rabbit @ slave1 with rabbit @ master&amp;hellip; '&quot;]</target>
        </trans-unit>
        <trans-unit id="45d8b01854fbd1e7fa35fec5b4b2dbfaa9989334" translate="yes" xml:space="preserve">
          <source>[&quot;u'Clustering node rabbit@slave1 with rabbit@master ...'&quot;]</source>
          <target state="translated">[ &quot;u '토끼 @master와 함께 클러스터 노드 rabbit @ slave1 ...'&quot;]</target>
        </trans-unit>
        <trans-unit id="d7256a056be61db105b3897d4ac71f2cc15f32f2" translate="yes" xml:space="preserve">
          <source>[&quot;user&quot;, &quot;src_user&quot;]</source>
          <target state="translated">[ &quot;사용자&quot;, &quot;src_user&quot;]</target>
        </trans-unit>
        <trans-unit id="51fc523a3f63652a4d5602cbaad1e014db396cd0" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;.yml&amp;rsquo;, &amp;lsquo;.yaml&amp;rsquo;, &amp;lsquo;.json&amp;rsquo;]</source>
          <target state="translated">[ '.yml', '.yaml', '.json']</target>
        </trans-unit>
        <trans-unit id="4a1f8fc94305e669af1a9c268fd94ae39a46bf3a" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;/usr/bin/python&amp;rsquo;, &amp;lsquo;python3.7&amp;rsquo;, &amp;lsquo;python3.6&amp;rsquo;, &amp;lsquo;python3.5&amp;rsquo;, &amp;lsquo;python2.7&amp;rsquo;, &amp;lsquo;python2.6&amp;rsquo;, &amp;lsquo;/usr/libexec/platform-python&amp;rsquo;, &amp;lsquo;/usr/bin/python3&amp;rsquo;, &amp;lsquo;python&amp;rsquo;]</source>
          <target state="translated">[ '/ usr / bin / python', 'python3.7', 'python3.6', 'python3.5', 'python2.7', 'python2.6', '/ usr / libexec / platform-python' , '/ usr / bin / python3', 'python']</target>
        </trans-unit>
        <trans-unit id="215b4f168f852a61f3d1eba0b9e3366e99a04f05" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;^.git$&amp;rsquo;, &amp;lsquo;^.*/.git_keep$&amp;rsquo;]</source>
          <target state="translated">[ '^ .git $', '^. * /. git_keep $']</target>
        </trans-unit>
        <trans-unit id="8eea696fe3991230e7107f743561869767ba5682" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;all&amp;rsquo;]</source>
          <target state="translated">[&amp;lsquo;all&amp;rsquo;]</target>
        </trans-unit>
        <trans-unit id="edd6390a4962d7aee737a1423f7f160d5f94d825" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;all_inventory&amp;rsquo;, &amp;lsquo;groups_inventory&amp;rsquo;, &amp;lsquo;all_plugins_inventory&amp;rsquo;, &amp;lsquo;all_plugins_play&amp;rsquo;, &amp;lsquo;groups_plugins_inventory&amp;rsquo;, &amp;lsquo;groups_plugins_play&amp;rsquo;]</source>
          <target state="translated">[ 'all_inventory', 'groups_inventory', 'all_plugins_inventory', 'all_plugins_play', 'groups_plugins_inventory', 'groups_plugins_play']</target>
        </trans-unit>
        <trans-unit id="2c673308d4bf1880fe2ab1c46e0738e675193858" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;bud-frogs&amp;rsquo;, &amp;lsquo;bunny&amp;rsquo;, &amp;lsquo;cheese&amp;rsquo;, &amp;lsquo;daemon&amp;rsquo;, &amp;lsquo;default&amp;rsquo;, &amp;lsquo;dragon&amp;rsquo;, &amp;lsquo;elephant-in-snake&amp;rsquo;, &amp;lsquo;elephant&amp;rsquo;, &amp;lsquo;eyes&amp;rsquo;, &amp;lsquo;hellokitty&amp;rsquo;, &amp;lsquo;kitty&amp;rsquo;, &amp;lsquo;luke-koala&amp;rsquo;, &amp;lsquo;meow&amp;rsquo;, &amp;lsquo;milk&amp;rsquo;, &amp;lsquo;moofasa&amp;rsquo;, &amp;lsquo;moose&amp;rsquo;, &amp;lsquo;ren&amp;rsquo;, &amp;lsquo;sheep&amp;rsquo;, &amp;lsquo;small&amp;rsquo;, &amp;lsquo;stegosaurus&amp;rsquo;, &amp;lsquo;stimpy&amp;rsquo;, &amp;lsquo;supermilker&amp;rsquo;, &amp;lsquo;three-eyes&amp;rsquo;, &amp;lsquo;turkey&amp;rsquo;, &amp;lsquo;turtle&amp;rsquo;, &amp;lsquo;tux&amp;rsquo;, &amp;lsquo;udder&amp;rsquo;, &amp;lsquo;vader-koala&amp;rsquo;, &amp;lsquo;vader&amp;rsquo;, &amp;lsquo;www&amp;rsquo;]</source>
          <target state="translated">[ 'bud-frogs', 'bunny', 'cheese', 'daemon', 'default', 'dragon', 'snake-in-snake', 'elephant', 'eyes', 'hellokitty', 'kitty' , 'luke-koala', 'meow', 'milk', 'moofasa', 'moose', 'ren', 'sheep', 'small', 'stegosaurus', 'stimpy', 'supermilker', 'three- 눈 ','터키 ','거북이 ','턱시도 ','허더 ','베이더-코알라 ','베이더 ','www ']</target>
        </trans-unit>
        <trans-unit id="536492b902c24eb23ee322e9941c7564955a286c" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;eos&amp;rsquo;, &amp;lsquo;nxos&amp;rsquo;, &amp;lsquo;ios&amp;rsquo;, &amp;lsquo;iosxr&amp;rsquo;, &amp;lsquo;junos&amp;rsquo;, &amp;lsquo;enos&amp;rsquo;, &amp;lsquo;ce&amp;rsquo;, &amp;lsquo;vyos&amp;rsquo;, &amp;lsquo;sros&amp;rsquo;, &amp;lsquo;dellos9&amp;rsquo;, &amp;lsquo;dellos10&amp;rsquo;, &amp;lsquo;dellos6&amp;rsquo;, &amp;lsquo;asa&amp;rsquo;, &amp;lsquo;aruba&amp;rsquo;, &amp;lsquo;aireos&amp;rsquo;, &amp;lsquo;bigip&amp;rsquo;, &amp;lsquo;ironware&amp;rsquo;, &amp;lsquo;onyx&amp;rsquo;, &amp;lsquo;netconf&amp;rsquo;, &amp;lsquo;exos&amp;rsquo;, &amp;lsquo;voss&amp;rsquo;, &amp;lsquo;slxos&amp;rsquo;]</source>
          <target state="translated">[ 'eos', 'nxos', 'ios', 'iosxr', 'junos', 'enos', 'ce', 'vyos', 'sros', 'dellos9', 'dellos10', 'dellos6', ' asa ','aruba ','aireos ','bigip ','ironware ','onyx ','netconf ','exos ','voss ','slxos ']</target>
        </trans-unit>
        <trans-unit id="82d9ab957751b97cbd6f624ba886a004f5b766bb" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;eos&amp;rsquo;, &amp;lsquo;nxos&amp;rsquo;, &amp;lsquo;ios&amp;rsquo;, &amp;lsquo;iosxr&amp;rsquo;, &amp;lsquo;junos&amp;rsquo;, &amp;lsquo;enos&amp;rsquo;, &amp;lsquo;ce&amp;rsquo;, &amp;lsquo;vyos&amp;rsquo;, &amp;lsquo;sros&amp;rsquo;, &amp;lsquo;dellos9&amp;rsquo;, &amp;lsquo;dellos10&amp;rsquo;, &amp;lsquo;dellos6&amp;rsquo;, &amp;lsquo;asa&amp;rsquo;, &amp;lsquo;aruba&amp;rsquo;, &amp;lsquo;aireos&amp;rsquo;, &amp;lsquo;bigip&amp;rsquo;, &amp;lsquo;ironware&amp;rsquo;, &amp;lsquo;onyx&amp;rsquo;, &amp;lsquo;netconf&amp;rsquo;]</source>
          <target state="translated">[ 'eos', 'nxos', 'ios', 'iosxr', 'junos', 'enos', 'ce', 'vyos', 'sros', 'dellos9', 'dellos10', 'dellos6', ' asa ','aruba ','aireos ','bigip ','ironware ','onyx ','netconf ']</target>
        </trans-unit>
        <trans-unit id="11e407717d15aff141366b5dec082421bd151b74" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;host_group_vars&amp;rsquo;]</source>
          <target state="translated">[&amp;lsquo;host_group_vars&amp;rsquo;]</target>
        </trans-unit>
        <trans-unit id="3310d52f2dbc06162c22042af151d1ddbc0ef2d2" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;host_list&amp;rsquo;, &amp;lsquo;script&amp;rsquo;, &amp;lsquo;auto&amp;rsquo;, &amp;lsquo;yaml&amp;rsquo;, &amp;lsquo;ini&amp;rsquo;, &amp;lsquo;toml&amp;rsquo;]</source>
          <target state="translated">[ 'host_list', 'script', 'auto', 'yaml', 'ini', 'toml']</target>
        </trans-unit>
        <trans-unit id="833735e3358b5ad7c58eb3fe6c90975032b86302" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;smart&amp;rsquo;]</source>
          <target state="translated">[&amp;lsquo;smart&amp;rsquo;]</target>
        </trans-unit>
        <trans-unit id="c9dc0aa0fb5717bebd6a29a18444334a9c4e5106" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;string&amp;rsquo;, &amp;lsquo;to_json&amp;rsquo;, &amp;lsquo;to_nice_json&amp;rsquo;, &amp;lsquo;to_yaml&amp;rsquo;, &amp;lsquo;ppretty&amp;rsquo;, &amp;lsquo;json&amp;rsquo;]</source>
          <target state="translated">[ 'string', 'to_json', 'to_nice_json', 'to_yaml', 'ppretty', 'json']</target>
        </trans-unit>
        <trans-unit id="3adb9942ca142dbb0464e5c5f1b4583334f52b97" translate="yes" xml:space="preserve">
          <source>[&amp;lsquo;string&amp;rsquo;, &amp;lsquo;to_json&amp;rsquo;, &amp;lsquo;to_nice_json&amp;rsquo;, &amp;lsquo;to_yaml&amp;rsquo;, &amp;lsquo;to_nice_yaml&amp;rsquo;, &amp;lsquo;ppretty&amp;rsquo;, &amp;lsquo;json&amp;rsquo;]</source>
          <target state="translated">[ 'string', 'to_json', 'to_nice_json', 'to_yaml', 'to_nice_yaml', 'ppretty', 'json']</target>
        </trans-unit>
        <trans-unit id="c83920dd8226416f82fd1ff9ced666cad3c279ca" translate="yes" xml:space="preserve">
          <source>['&quot;public&quot;.&quot;prices&quot;', '&quot;public&quot;.&quot;vehicles&quot;']</source>
          <target state="translated">[ ' &quot;public&quot;. &quot;prices&quot;', &quot;&quot;public &quot;.&quot;차량 &quot; ']</target>
        </trans-unit>
        <trans-unit id="c18523980df7093e78762fcf39bd910ca5092e66" translate="yes" xml:space="preserve">
          <source>['# Generated by xtables-save v1.8.2', '*filter', ':INPUT ACCEPT [0:0]', ':FORWARD ACCEPT [0:0]', ':OUTPUT ACCEPT [0:0]', 'COMMIT', '# Completed']</source>
          <target state="translated">[ '# 생성 : xtables-save v1.8.2', '* filter', ': INPUT ACCEPT [0 : 0]', ': FORWARD ACCEPT [0 : 0]', ': OUTPUT ACCEPT [0 : 0]' , 'COMMIT', '# 완료 됨']</target>
        </trans-unit>
        <trans-unit id="9632185944ad024f9590eb89d0f9eb43f8440cea" translate="yes" xml:space="preserve">
          <source>['# Generated by xtables-save v1.8.2', '*filter', ':INPUT ACCEPT [0:0]', ':FORWARD DROP [0:0]', ':OUTPUT ACCEPT [0:0]', 'COMMIT', '# Completed']</source>
          <target state="translated">[ '# 생성 : xtables-save v1.8.2', '* filter', ': INPUT ACCEPT [0 : 0]', ': FORWARD DROP [0 : 0]', ': OUTPUT ACCEPT [0 : 0]' , 'COMMIT', '# 완료 됨']</target>
        </trans-unit>
        <trans-unit id="45efe19995f6a688ca3bb715f085fae3fdfd2213" translate="yes" xml:space="preserve">
          <source>['# Generated by xtables-save v1.8.2', '*filter', ':INPUT DROP [0:0]', ':FORWARD DROP [0:0]', ':OUTPUT ACCEPT [0:0]', '-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT', '-A INPUT -m conntrack --ctstate INVALID -j DROP', '-A INPUT -i lo -j ACCEPT', '-A INPUT -p icmp -j ACCEPT', '-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT', 'COMMIT', '# Completed']</source>
          <target state="translated">[ '# xtables-save v1.8.2에서 생성됨', '* filter', ': INPUT DROP [0 : 0]', ': FORWARD DROP [0 : 0]', ': OUTPUT ACCEPT [0 : 0]' , '-A INPUT -m conntrack --ctstate RELATED, ESTABLISHED -j ACCEPT', '-A INPUT -m conntrack --ctstate INVALID -j DROP', '-A INPUT -i lo -j ACCEPT', '-A INPUT -p icmp -j ACCEPT ','-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT ','COMMIT ','# Completed ']</target>
        </trans-unit>
        <trans-unit id="a782d6066ce7f0bfba641e3ad1c10651a09f8ab4" translate="yes" xml:space="preserve">
          <source>['&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt; &amp;lt;rpc-reply message-id=&quot;urn:uuid:0cadb4e8-5bba-47f4-986e-72906227007f&quot;&amp;gt; &amp;lt;configuration changed-seconds=&quot;1590139550&quot; changed-localtime=&quot;2020-05-22 09:25:50 UTC&quot;&amp;gt; &amp;lt;interfaces&amp;gt; &amp;lt;interface&amp;gt; &amp;lt;name&amp;gt;ge-0/0/1&amp;lt;/name&amp;gt; &amp;lt;description&amp;gt;Configured by Ansible&amp;lt;/description&amp;gt; &amp;lt;disable/&amp;gt; &amp;lt;speed&amp;gt;100m&amp;lt;/speed&amp;gt; &amp;lt;mtu&amp;gt;1024&amp;lt;/mtu&amp;gt; &amp;lt;hold-time&amp;gt; &amp;lt;up&amp;gt;2000&amp;lt;/up&amp;gt; &amp;lt;down&amp;gt;2200&amp;lt;/down&amp;gt; &amp;lt;/hold-time&amp;gt; &amp;lt;link-mode&amp;gt;full-duplex&amp;lt;/link-mode&amp;gt; &amp;lt;unit&amp;gt; &amp;lt;name&amp;gt;0&amp;lt;/name&amp;gt; &amp;lt;family&amp;gt; &amp;lt;ethernet-switching&amp;gt; &amp;lt;interface-mode&amp;gt;access&amp;lt;/interface-mode&amp;gt; &amp;lt;vlan&amp;gt; &amp;lt;members&amp;gt;vlan100&amp;lt;/members&amp;gt; &amp;lt;/vlan&amp;gt; &amp;lt;/ethernet-switching&amp;gt; &amp;lt;/family&amp;gt; &amp;lt;/unit&amp;gt; &amp;lt;/interface&amp;gt; &amp;lt;/interfaces&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/rpc-reply&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;? xml version = &quot;1.0&quot;encoding = &quot;UTF-8&quot;?&amp;gt; &amp;lt;rpc-reply message-id = &quot;urn : uuid : 0cadb4e8-5bba-47f4-986e-72906227007f&quot;&amp;gt; &amp;lt;configuration changed-seconds = &quot; 1590139550 &quot;changed-localtime =&quot;2020-05-22 09:25:50 UTC &quot;&amp;gt; &amp;lt;interfaces&amp;gt; &amp;lt;interface&amp;gt; &amp;lt;name&amp;gt; ge-0 / 0 / 1 &amp;lt;/ name&amp;gt; &amp;lt;description&amp;gt; Configured by Ansible &amp;lt;/ description&amp;gt; &amp;lt;disable /&amp;gt; &amp;lt;speed&amp;gt; 100m &amp;lt;/ speed&amp;gt; &amp;lt;mtu&amp;gt; 1024 &amp;lt;/ mtu&amp;gt; &amp;lt;hold-time&amp;gt; &amp;lt;up&amp;gt; 2000 &amp;lt;/ up&amp;gt; &amp;lt;down&amp;gt; 2200 &amp;lt;/ down&amp;gt; &amp;lt;/ hold-time&amp;gt; &amp;lt;link- mode&amp;gt; 전이중 &amp;lt;/ link-mode&amp;gt; &amp;lt;unit&amp;gt; &amp;lt;name&amp;gt; 0 &amp;lt;/ name&amp;gt; &amp;lt;family&amp;gt; &amp;lt;ethernet-switching&amp;gt; &amp;lt;interface-mode&amp;gt; access &amp;lt;/ interface-mode&amp;gt; &amp;lt;vlan&amp;gt; &amp;lt;members&amp;gt; vlan100 &amp;lt; / members&amp;gt; &amp;lt;/ vlan&amp;gt; &amp;lt;/ ethernet-switching&amp;gt; &amp;lt;/ family&amp;gt; &amp;lt;/ unit&amp;gt; &amp;lt;/ interface&amp;gt; &amp;lt;/ interfaces&amp;gt; &amp;lt;/ configuration&amp;gt; &amp;lt;/ rpc-reply&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="854749d3e55661da4be6b9ddb4c3c41db083f97c" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;aaa xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-lib-cfg&quot;&amp;gt; &amp;lt;usernames xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-locald-cfg&quot;&amp;gt; &amp;lt;username xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;name&amp;gt;test7&amp;lt;/name&amp;gt; &amp;lt;usergroup-under-usernames&amp;gt; &amp;lt;usergroup-under-username&amp;gt; &amp;lt;name&amp;gt;sysadmin&amp;lt;/name&amp;gt; &amp;lt;/usergroup-under-username&amp;gt; &amp;lt;/usergroup-under-usernames&amp;gt; &amp;lt;secret&amp;gt;$1$ZsXC$zZ50wqhDC543ZWQkkAHLW0&amp;lt;/secret&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;/usernames&amp;gt; &amp;lt;/aaa&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="translated">[ '&amp;lt;config xmlns : xc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;aaa xmlns = &quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa -lib-cfg &quot;&amp;gt; &amp;lt;사용자 이름 xmlns =&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-aaa-locald-cfg &quot;&amp;gt; &amp;lt;사용자 이름 xc : operation =&quot;merge &quot;&amp;gt; &amp;lt;name&amp;gt; test7 &amp;lt;/ name&amp;gt; &amp;lt;user-under-usernames&amp;gt; &amp;lt;usergroup-under-username&amp;gt; &amp;lt;name&amp;gt; sysadmin &amp;lt;/ name&amp;gt; &amp;lt;/ usergroup-under-username&amp;gt; &amp;lt;secret&amp;gt; $ 1 $ ZsXC $ zZ50wqhDC543ZWQkkAHLW0 &amp;lt;/ secret&amp;gt; &amp;lt;/ username&amp;gt; &amp;lt;/ usernames&amp;gt; &amp;lt;/ aaa&amp;gt; &amp;lt;/ config&amp;gt; ']</target>
        </trans-unit>
        <trans-unit id="1e37da361e61320e9cda4729ff99b24b597a7b9f" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;banners xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra-infra-cfg&quot;&amp;gt; &amp;lt;banner xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;banner-name&amp;gt;motd&amp;lt;/banner-name&amp;gt; &amp;lt;banner-text&amp;gt;Ansible banner example&amp;lt;/banner-text&amp;gt; &amp;lt;/banner&amp;gt; &amp;lt;/banners&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="translated">[ '&amp;lt;config xmlns : xc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;banners xmlns = &quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra -infra-cfg &quot;&amp;gt; &amp;lt;banner xc : operation =&quot;merge &quot;&amp;gt; &amp;lt;banner-name&amp;gt; motd &amp;lt;/ banner-name&amp;gt; &amp;lt;banner-text&amp;gt; 사용 가능한 배너 예 &amp;lt;/ banner-text&amp;gt; &amp;lt;/ banner&amp;gt; &amp;lt;/ banners&amp;gt; &amp;lt;/ config&amp;gt; ']</target>
        </trans-unit>
        <trans-unit id="fc5bd32d43be85449964ede2932e53e79f3e4e75" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;interface-configurations xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-ifmgr-cfg&quot;&amp;gt; &amp;lt;interface-configuration xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;active&amp;gt;act&amp;lt;/active&amp;gt; &amp;lt;interface-name&amp;gt;GigabitEthernet0/0/0/0&amp;lt;/interface-name&amp;gt; &amp;lt;description&amp;gt;test-interface-0&amp;lt;/description&amp;gt; &amp;lt;mtus&amp;gt;&amp;lt;mtu&amp;gt; &amp;lt;owner&amp;gt;GigabitEthernet&amp;lt;/owner&amp;gt; &amp;lt;mtu&amp;gt;512&amp;lt;/mtu&amp;gt; &amp;lt;/mtu&amp;gt;&amp;lt;/mtus&amp;gt; &amp;lt;ethernet xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-drivers-media-eth-cfg&quot;&amp;gt; &amp;lt;speed&amp;gt;100&amp;lt;/speed&amp;gt; &amp;lt;duplex&amp;gt;half&amp;lt;/duplex&amp;gt; &amp;lt;/ethernet&amp;gt; &amp;lt;/interface-configuration&amp;gt; &amp;lt;/interface-configurations&amp;gt;&amp;lt;/config&amp;gt;']</source>
          <target state="translated">[ '&amp;lt;config xmlns : xc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;interface-configurations xmlns = &quot;http://cisco.com/ns/yang/Cisco-IOS-XR -ifmgr-cfg &quot;&amp;gt; &amp;lt;interface-configuration xc : operation =&quot;merge &quot;&amp;gt; &amp;lt;active&amp;gt; act &amp;lt;/ active&amp;gt; &amp;lt;interface-name&amp;gt; GigabitEthernet0 / 0 / 0 / 0 &amp;lt;/ interface-name&amp;gt; &amp;lt;description&amp;gt; test-interface -0 &amp;lt;/ description&amp;gt; &amp;lt;mtus&amp;gt; &amp;lt;mtu&amp;gt; &amp;lt;owner&amp;gt; GigabitEthernet &amp;lt;/ owner&amp;gt; &amp;lt;mtu&amp;gt; 512 &amp;lt;/ mtu&amp;gt; &amp;lt;/ mtu&amp;gt; &amp;lt;/ mtus&amp;gt; &amp;lt;ethernet xmlns = &quot;http://cisco.com/ns / yang / Cisco-IOS-XR-drivers-media-eth-cfg &quot;&amp;gt; &amp;lt;speed&amp;gt; 100 &amp;lt;/ speed&amp;gt; &amp;lt;duplex&amp;gt; half &amp;lt;/ duplex&amp;gt; &amp;lt;/ ethernet&amp;gt; &amp;lt;/ interface-configuration&amp;gt; &amp;lt;/ interface-configurations&amp;gt; &amp;lt;/ config&amp;gt; ']</target>
        </trans-unit>
        <trans-unit id="c6dbbbc7f815bfe34525076d0405a706a867825b" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;ip-domain xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-ip-domain-cfg&quot;&amp;gt; &amp;lt;vrfs&amp;gt; &amp;lt;vrf&amp;gt; &amp;lt;vrf-name&amp;gt;default&amp;lt;/vrf-name&amp;gt; &amp;lt;lists&amp;gt; &amp;lt;list xc:operation=&quot;merge&quot;&amp;gt; &amp;lt;order&amp;gt;0&amp;lt;/order&amp;gt; &amp;lt;list-name&amp;gt;redhat.com&amp;lt;/list-name&amp;gt; &amp;lt;/list&amp;gt; &amp;lt;/lists&amp;gt; &amp;lt;/vrf&amp;gt; &amp;lt;/vrfs&amp;gt; &amp;lt;/ip-domain&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="translated">[ '&amp;lt;config xmlns : xc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;ip-domain xmlns = &quot;http://cisco.com/ns/yang/Cisco-IOS-XR -ip-domain-cfg &quot;&amp;gt; &amp;lt;vrfs&amp;gt; &amp;lt;vrf&amp;gt; &amp;lt;vrf-name&amp;gt; default &amp;lt;/ vrf-name&amp;gt; &amp;lt;lists&amp;gt; &amp;lt;list xc : operation =&quot;merge &quot;&amp;gt; &amp;lt;order&amp;gt; 0 &amp;lt;/ order&amp;gt; &amp;lt;list- name&amp;gt; redhat.com &amp;lt;/ list-name&amp;gt; &amp;lt;/ list&amp;gt; &amp;lt;/ lists&amp;gt; &amp;lt;/ vrf&amp;gt; &amp;lt;/ vrfs&amp;gt; &amp;lt;/ ip-domain&amp;gt; &amp;lt;/ config&amp;gt; ']]</target>
        </trans-unit>
        <trans-unit id="e4f9ebcffc20847f216a35b894a8d514779b14b3" translate="yes" xml:space="preserve">
          <source>['&amp;lt;config xmlns:xc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;syslog xmlns=&quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra-syslog-cfg&quot;&amp;gt; &amp;lt;files&amp;gt; &amp;lt;file xc:operation=&quot;delete&quot;&amp;gt; &amp;lt;file-name&amp;gt;file1&amp;lt;/file-name&amp;gt; &amp;lt;file-log-attributes&amp;gt; &amp;lt;max-file-size&amp;gt;2097152&amp;lt;/max-file-size&amp;gt; &amp;lt;severity&amp;gt;2&amp;lt;/severity&amp;gt; &amp;lt;/file-log-attributes&amp;gt; &amp;lt;/file&amp;gt; &amp;lt;/files&amp;gt; &amp;lt;/syslog&amp;gt; &amp;lt;/config&amp;gt;']</source>
          <target state="translated">[ '&amp;lt;config xmlns : xc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;syslog xmlns = &quot;http://cisco.com/ns/yang/Cisco-IOS-XR-infra -syslog-cfg &quot;&amp;gt; &amp;lt;files&amp;gt; &amp;lt;file xc : operation =&quot;delete &quot;&amp;gt; &amp;lt;file-name&amp;gt; file1 &amp;lt;/ file-name&amp;gt; &amp;lt;file-log-attributes&amp;gt; &amp;lt;max-file-size&amp;gt; 2097152 &amp;lt;/ max- file-size&amp;gt; &amp;lt;severity&amp;gt; 2 &amp;lt;/ severity&amp;gt; &amp;lt;/ file-log-attributes&amp;gt; &amp;lt;/ file&amp;gt; &amp;lt;/ files&amp;gt; &amp;lt;/ syslog&amp;gt; &amp;lt;/ config&amp;gt; ']]</target>
        </trans-unit>
        <trans-unit id="5fa06be50d3304f9bd5d5c3889346ca1e68024c4" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:chassis xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:aggregated-devices&amp;gt; &amp;lt;nc:ethernet&amp;gt; &amp;lt;nc:lacp&amp;gt; &amp;lt;nc:system-priority&amp;gt;63&amp;lt;/nc:system-priority&amp;gt; &amp;lt;nc:link-protection&amp;gt; &amp;lt;nc:non-revertive delete=&quot;delete&quot;/&amp;gt; &amp;lt;/nc:link-protection&amp;gt; &amp;lt;/nc:lacp&amp;gt; &amp;lt;/nc:ethernet&amp;gt; &amp;lt;/nc:aggregated-devices&amp;gt; &amp;lt;/nc:chassis&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : chassis xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : aggregated-devices&amp;gt; &amp;lt;nc : ethernet&amp;gt; &amp;lt;nc : lacp&amp;gt; &amp;lt;nc : system- priority&amp;gt; 63 &amp;lt;/ nc : system-priority&amp;gt; &amp;lt;nc : link-protection&amp;gt; &amp;lt;nc : non-revertive delete = &quot;delete&quot;/&amp;gt; &amp;lt;/ nc : link-protection&amp;gt; &amp;lt;/ nc : lacp&amp;gt; &amp;lt;/ nc : ethernet &amp;gt; &amp;lt;/ nc : aggregated-devices&amp;gt; &amp;lt;/ nc : chassis&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="5d48a41fa963ed452630864ebedeb569cc38724b" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:interfaces xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ae1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:aggregated-ether-options&amp;gt; &amp;lt;nc:lacp&amp;gt; &amp;lt;nc:active/&amp;gt; &amp;lt;/nc:lacp&amp;gt; &amp;lt;/nc:aggregated-ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:ether-options&amp;gt; &amp;lt;nc:ieee-802.3ad&amp;gt; &amp;lt;nc:bundle&amp;gt;ae1&amp;lt;/nc:bundle&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/nc:ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/2&amp;lt;/nc:name&amp;gt; &amp;lt;nc:ether-options&amp;gt; &amp;lt;nc:ieee-802.3ad&amp;gt; &amp;lt;nc:bundle&amp;gt;ae1&amp;lt;/nc:bundle&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/nc:ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ae2&amp;lt;/nc:name&amp;gt; &amp;lt;nc:aggregated-ether-options&amp;gt; &amp;lt;nc:lacp&amp;gt; &amp;lt;nc:passive/&amp;gt; &amp;lt;/nc:lacp&amp;gt; &amp;lt;nc:link-protection/&amp;gt; &amp;lt;/nc:aggregated-ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/3&amp;lt;/nc:name&amp;gt; &amp;lt;nc:ether-options&amp;gt; &amp;lt;nc:ieee-802.3ad&amp;gt; &amp;lt;nc:bundle&amp;gt;ae2&amp;lt;/nc:bundle&amp;gt; &amp;lt;nc:primary/&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/nc:ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/4&amp;lt;/nc:name&amp;gt; &amp;lt;nc:ether-options&amp;gt; &amp;lt;nc:ieee-802.3ad&amp;gt; &amp;lt;nc:bundle&amp;gt;ae2&amp;lt;/nc:bundle&amp;gt; &amp;lt;nc:backup/&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/nc:ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;/nc:interfaces&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : 인터페이스 xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ae1 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : aggregated- ether-options&amp;gt; &amp;lt;nc : lacp&amp;gt; &amp;lt;nc : active /&amp;gt; &amp;lt;/ nc : lacp&amp;gt; &amp;lt;/ nc : aggregated-ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 1 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae1 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 2 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae1 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ae2 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : 집계 에테르 옵션&amp;gt; &amp;lt;nc : lacp&amp;gt; &amp;lt;nc :수동 /&amp;gt; &amp;lt;/ nc : lacp&amp;gt; &amp;lt;nc : link-protection /&amp;gt; &amp;lt;/ nc : aggregated-ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 3 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : primary /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 4 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : backup /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;/ nc : interfaces&amp;gt; ',' xml 2 ','xml 3 ']nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : primary /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 4 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : backup /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;/ nc : interfaces&amp;gt; ','xml 2 ','xml 3 ']nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : primary /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 4 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : bundle&amp;gt; ae2 &amp;lt;/ nc : bundle&amp;gt; &amp;lt;nc : backup /&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;/ nc : interfaces&amp;gt; ','xml 2 ','xml 3 ']인터페이스&amp;gt; ','xml 2 ','xml 3 ']인터페이스&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="c8da324dde678117d65b4ed53acd596941666d64" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:interfaces xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ae1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:aggregated-ether-options&amp;gt; &amp;lt;nc:lacp&amp;gt; &amp;lt;nc:periodic&amp;gt;fast&amp;lt;/nc:periodic&amp;gt; &amp;lt;nc:sync-reset&amp;gt;enable&amp;lt;/nc:sync-reset&amp;gt; &amp;lt;nc:system-id&amp;gt;00:00:00:00:00:02&amp;lt;/nc:system-id&amp;gt; &amp;lt;nc:system-priority&amp;gt;100&amp;lt;/nc:system-priority&amp;gt; &amp;lt;/nc:lacp&amp;gt; &amp;lt;/nc:aggregated-ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:ether-options&amp;gt; &amp;lt;nc:ieee-802.3ad&amp;gt; &amp;lt;nc:lacp&amp;gt; &amp;lt;nc:port-priority&amp;gt;100&amp;lt;/nc:port-priority&amp;gt; &amp;lt;nc:force-up/&amp;gt; &amp;lt;/nc:lacp&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/nc:ether-options&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;/nc:interfaces&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : 인터페이스 xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ae1 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : aggregated- ether-options&amp;gt; &amp;lt;nc : lacp&amp;gt; &amp;lt;nc : periodic&amp;gt; fast &amp;lt;/ nc : periodic&amp;gt; &amp;lt;nc : sync-reset&amp;gt; 활성화 &amp;lt;/ nc : sync-reset&amp;gt; &amp;lt;nc : system-id&amp;gt; 00:00:00 : 00:00:02 &amp;lt;/ nc : system-id&amp;gt; &amp;lt;nc : system-priority&amp;gt; 100 &amp;lt;/ nc : system-priority&amp;gt; &amp;lt;/ nc : lacp&amp;gt; &amp;lt;/ nc : aggregated-ether-options&amp;gt; &amp;lt;/ nc : interface &amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 1 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : ether-options&amp;gt; &amp;lt;nc : ieee-802.3ad&amp;gt; &amp;lt;nc : lacp&amp;gt; &amp;lt;nc : port-priority &amp;gt; 100 &amp;lt;/ nc : port-priority&amp;gt; &amp;lt;nc : force-up /&amp;gt; &amp;lt;/ nc : lacp&amp;gt; &amp;lt;/nc:ieee-802.3ad&amp;gt; &amp;lt;/ nc : ether-options&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;/ nc : 인터페이스&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="ddd564a9c60b42dd1886aa0b10e7995f3edfacda" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:interfaces xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:unit&amp;gt; &amp;lt;nc:name&amp;gt;0&amp;lt;/nc:name&amp;gt; &amp;lt;nc:family&amp;gt; &amp;lt;nc:ethernet-switching&amp;gt; &amp;lt;nc:interface-mode&amp;gt;access&amp;lt;/nc:interface-mode&amp;gt; &amp;lt;nc:vlan&amp;gt; &amp;lt;nc:members&amp;gt;vlan100&amp;lt;/nc:members&amp;gt; &amp;lt;/nc:vlan&amp;gt; &amp;lt;/nc:ethernet-switching&amp;gt; &amp;lt;/nc:family&amp;gt; &amp;lt;/nc:unit&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/2&amp;lt;/nc:name&amp;gt; &amp;lt;nc:unit&amp;gt; &amp;lt;nc:name&amp;gt;0&amp;lt;/nc:name&amp;gt; &amp;lt;nc:family&amp;gt; &amp;lt;nc:ethernet-switching&amp;gt; &amp;lt;nc:interface-mode&amp;gt;trunk&amp;lt;/nc:interface-mode&amp;gt; &amp;lt;nc:vlan&amp;gt; &amp;lt;nc:members&amp;gt;vlan200&amp;lt;/nc:members&amp;gt; &amp;lt;nc:members&amp;gt;vlan300&amp;lt;/nc:members&amp;gt; &amp;lt;/nc:vlan&amp;gt; &amp;lt;/nc:ethernet-switching&amp;gt; &amp;lt;/nc:family&amp;gt; &amp;lt;/nc:unit&amp;gt; &amp;lt;nc:native-vlan-id&amp;gt;400&amp;lt;/nc:native-vlan-id&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;/nc:interfaces&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : 인터페이스 xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 1 &amp;lt;/ nc : name &amp;gt; &amp;lt;nc : unit&amp;gt; &amp;lt;nc : name&amp;gt; 0 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : family&amp;gt; &amp;lt;nc : ethernet-switching&amp;gt; &amp;lt;nc : interface-mode&amp;gt; access &amp;lt;/ nc : interface-mode&amp;gt; &amp;lt;nc : vlan &amp;gt; &amp;lt;nc : members&amp;gt; vlan100 &amp;lt;/ nc : members&amp;gt; &amp;lt;/ nc : vlan&amp;gt; &amp;lt;/ nc : ethernet-switching&amp;gt; &amp;lt;/ nc : family&amp;gt; &amp;lt;/ nc : unit&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 2 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : unit&amp;gt; &amp;lt;nc : name&amp;gt; 0 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : family&amp;gt; &amp;lt;nc : ethernet-switching&amp;gt; &amp;lt;nc : 인터페이스 모드&amp;gt; 트렁크 &amp;lt;/ nc : 인터페이스 모드&amp;gt; &amp;lt;nc : vlan&amp;gt; &amp;lt;nc : members&amp;gt; vlan200 &amp;lt;/ nc : members&amp;gt; &amp;lt;nc : members&amp;gt; vlan300 &amp;lt;/ nc : members&amp;gt; &amp;lt;/ nc : vlan&amp;gt; &amp;lt;/ nc : 이더넷 전환&amp;gt; &amp;lt;/ nc : family&amp;gt;&amp;lt;/ nc : unit&amp;gt; &amp;lt;nc : native-vlan-id&amp;gt; 400 &amp;lt;/ nc : native-vlan-id&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;/ nc : interfaces&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="bf1e6142454d7c51221e25050c7e552a192602d8" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:interfaces xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-1/0/0&amp;lt;/nc:name&amp;gt; &amp;lt;nc:unit&amp;gt; &amp;lt;nc:name&amp;gt;0&amp;lt;/nc:name&amp;gt; &amp;lt;nc:family&amp;gt; &amp;lt;nc:inet&amp;gt; &amp;lt;nc:address&amp;gt; &amp;lt;nc:name&amp;gt;192.168.100.1/24&amp;lt;/nc:name&amp;gt; &amp;lt;/nc:address&amp;gt; &amp;lt;nc:address&amp;gt; &amp;lt;nc:name&amp;gt;10.200.16.20/24&amp;lt;/nc:name&amp;gt; &amp;lt;/nc:address&amp;gt; &amp;lt;/nc:inet&amp;gt; &amp;lt;/nc:family&amp;gt; &amp;lt;/nc:unit&amp;gt; &amp;lt;/nc:interfaces&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : 인터페이스 xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-1 / 0 / 0 &amp;lt;/ nc : name &amp;gt; &amp;lt;nc : unit&amp;gt; &amp;lt;nc : name&amp;gt; 0 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : family&amp;gt; &amp;lt;nc : inet&amp;gt; &amp;lt;nc : address&amp;gt; &amp;lt;nc : name&amp;gt; 192.168.100.1/24 &amp;lt;/ nc : name&amp;gt; &amp;lt; / nc : address&amp;gt; &amp;lt;nc : address&amp;gt; &amp;lt;nc : name&amp;gt; 10.200.16.20/24 &amp;lt;/ nc : name&amp;gt; &amp;lt;/ nc : address&amp;gt; &amp;lt;/ nc : inet&amp;gt; &amp;lt;/ nc : family&amp;gt; &amp;lt;/ nc : unit&amp;gt; &amp;lt;/ nc : 인터페이스&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="d973f6ca4afd42d9bcd2c394b0e7be0c31a4f58d" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:protocols xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:lldp&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/1&amp;lt;/nc:name&amp;gt; &amp;lt;nc:disable delete=&quot;delete&quot;/&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-0/0/2&amp;lt;/nc:name&amp;gt; &amp;lt;nc:disable/&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;/nc:lldp&amp;gt; &amp;lt;/nc:protocols&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : protocols xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : lldp&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 1 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : disable delete = &quot;delete&quot;/&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-0 / 0 / 2 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : disable /&amp;gt; &amp;lt;/ nc : 인터페이스&amp;gt; &amp;lt;/ nc : lldp&amp;gt; &amp;lt;/ nc : 프로토콜&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="594b947960e0b644280c99d538d10a3dfa66a4d4" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:protocols xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:lldp&amp;gt; &amp;lt;nc:management-address&amp;gt;10.1.1.1&amp;lt;/nc:management-address&amp;gt; &amp;lt;nc:advertisement-interval&amp;gt;10000&amp;lt;/nc:advertisement-interval&amp;gt; &amp;lt;nc:transmit-delay&amp;gt;400&amp;lt;/nc:transmit-delay&amp;gt; &amp;lt;nc:hold-multiplier&amp;gt;10&amp;lt;/nc:hold-multiplier&amp;gt; &amp;lt;nc:disable delete=&quot;delete&quot;/&amp;gt; &amp;lt;/nc:lldp&amp;gt; &amp;lt;/nc:protocols&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : protocols xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : lldp&amp;gt; &amp;lt;nc : management-address&amp;gt; 10.1.1.1 &amp;lt;/ nc : management-address &amp;gt; &amp;lt;nc : advertisement-interval&amp;gt; 10000 &amp;lt;/ nc : advertisement-interval&amp;gt; &amp;lt;nc : transmit-delay&amp;gt; 400 &amp;lt;/ nc : transmit-delay&amp;gt; &amp;lt;nc : hold-multiplier&amp;gt; 10 &amp;lt;/ nc : hold-multiplier&amp;gt; &amp;lt; nc : disable delete = &quot;delete&quot;/&amp;gt; &amp;lt;/ nc : lldp&amp;gt; &amp;lt;/ nc : protocols&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="3f5007163e3ab5b508f28f3d9d6fd495de0e25a0" translate="yes" xml:space="preserve">
          <source>['&amp;lt;nc:protocols xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:ospf3 delete=&quot;delete&quot;/&amp;gt; &amp;lt;nc:ospf3&amp;gt; &amp;lt;nc:area&amp;gt; &amp;lt;nc:name&amp;gt;0.0.0.100&amp;lt;/nc:name&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;so-0/0/0.0&amp;lt;/nc:name&amp;gt; &amp;lt;nc:priority&amp;gt;3&amp;lt;/nc:priority&amp;gt; &amp;lt;nc:flood-reduction/&amp;gt; &amp;lt;nc:metric&amp;gt;5&amp;lt;/nc:metric&amp;gt; &amp;lt;nc:passive/&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:stub&amp;gt; &amp;lt;nc:default-metric&amp;gt;200&amp;lt;/nc:default-metric&amp;gt; &amp;lt;/nc:stub&amp;gt; &amp;lt;/nc:area&amp;gt; &amp;lt;nc:area&amp;gt; &amp;lt;nc:name&amp;gt;0.0.0.200&amp;lt;/nc:name&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-1/1/0.0&amp;lt;/nc:name&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;nc:interface&amp;gt; &amp;lt;nc:name&amp;gt;ge-2/2/0.0&amp;lt;/nc:name&amp;gt; &amp;lt;/nc:interface&amp;gt; &amp;lt;/nc:area&amp;gt; &amp;lt;/nc:ospf3&amp;gt; &amp;lt;/nc:protocols&amp;gt;&quot;, &quot; &amp;lt;nc:routing-options xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&amp;gt; &amp;lt;nc:router-id delete=&quot;delete&quot;/&amp;gt; &amp;lt;nc:router-id&amp;gt;10.200.16.75&amp;lt;/nc:router-id&amp;gt; &amp;lt;/nc:routing-options&amp;gt;', 'xml 2', 'xml 3']</source>
          <target state="translated">[ '&amp;lt;nc : protocols xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0&quot;&amp;gt; &amp;lt;nc : ospf3 delete = &quot;delete&quot;/&amp;gt; &amp;lt;nc : ospf3&amp;gt; &amp;lt;nc : area&amp;gt; &amp;lt; nc : name&amp;gt; 0.0.0.100 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; so-0 / 0 / 0.0 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : priority&amp;gt; 3 &amp;lt;/ nc : priority&amp;gt; &amp;lt;nc : flood-reduction /&amp;gt; &amp;lt;nc : metric&amp;gt; 5 &amp;lt;/ nc : metric&amp;gt; &amp;lt;nc : passive /&amp;gt; &amp;lt;/ nc : interface&amp;gt; &amp;lt;nc : stub&amp;gt; &amp;lt;nc : default-metric&amp;gt; 200 &amp;lt;/ nc : default-metric &amp;gt; &amp;lt;/ nc : stub&amp;gt; &amp;lt;/ nc : area&amp;gt; &amp;lt;nc : area&amp;gt; &amp;lt;nc : name&amp;gt; 0.0.0.200 &amp;lt;/ nc : name&amp;gt; &amp;lt;nc : interface&amp;gt; &amp;lt;nc : name&amp;gt; ge-1 / 1 / 0.0 &amp;lt; / nc : 이름&amp;gt; &amp;lt;/ nc : 인터페이스&amp;gt; &amp;lt;nc : 인터페이스&amp;gt; &amp;lt;nc : name&amp;gt; ge-2 / 2 / 0.0 &amp;lt;/ nc : name&amp;gt; &amp;lt;/ nc : 인터페이스&amp;gt; &amp;lt;/ nc : area&amp;gt; &amp;lt;/ nc : ospf3&amp;gt; &amp;lt;/ nc : 프로토콜&amp;gt; &quot;,&quot;&amp;lt;nc : routing-options xmlns : nc = &quot;urn : ietf : params : xml : ns : netconf : base : 1.0 &quot;&amp;gt; &amp;lt;nc : router-id delete =&quot;delete &quot;/&amp;gt; &amp;lt;nc : router-id&amp;gt; 10.200.16.75 &amp;lt;/ nc : router-id&amp;gt; &amp;lt;/ nc : routing-options&amp;gt; ','xml 2 ','xml 3 ']</target>
        </trans-unit>
        <trans-unit id="94e3cf182ba55cf51a646c1ee467ee46ecaaf22c" translate="yes" xml:space="preserve">
          <source>['*.example.com']</source>
          <target state="translated">['*.example.com']</target>
        </trans-unit>
        <trans-unit id="61eec88b3c5d661502eefb8e433efaf1dc6846af" translate="yes" xml:space="preserve">
          <source>['*.m.wikiquote.org', '*.wikipedia.org']</source>
          <target state="translated">[ '* .m.wikiquote.org', '* .wikipedia.org']</target>
        </trans-unit>
        <trans-unit id="fb0677c7a9e75fcfd3f26ac68e4f32acc5f4b498" translate="yes" xml:space="preserve">
          <source>['...', '...']</source>
          <target state="translated">[ '...', '...']</target>
        </trans-unit>
        <trans-unit id="2dcf0c58e7fb48e333dcfb2957bb3ca4c817bc34" translate="yes" xml:space="preserve">
          <source>['/Common/10.10.10.0/24', '/Common/11.11.11.0/25']</source>
          <target state="translated">[ '/Common/10.10.10.0/24', '/Common/11.11.11.0/25']</target>
        </trans-unit>
        <trans-unit id="7925ba7a9a32a281db06fdc3986b4d9574206b44" translate="yes" xml:space="preserve">
          <source>['/Common/bigip02.internal']</source>
          <target state="translated">['/Common/bigip02.internal']</target>
        </trans-unit>
        <trans-unit id="bd7613c7268d9587141e2a11a959956a2853dd29" translate="yes" xml:space="preserve">
          <source>['/Common/bigip1', '/Common/bigip2']</source>
          <target state="translated">[ '/ Common / bigip1', '/ Common / bigip2']</target>
        </trans-unit>
        <trans-unit id="9d71278647e06f1b02c40d8fdfad7059422a8a9f" translate="yes" xml:space="preserve">
          <source>['/Common/cert1.crt', '/Common/cert2.crt']</source>
          <target state="translated">[ '/Common/cert1.crt', '/Common/cert2.crt']</target>
        </trans-unit>
        <trans-unit id="23c326b64200c791463fb1a4dc7ed13bf2c28bf6" translate="yes" xml:space="preserve">
          <source>['/Common/destination1', '/Common/destination2']</source>
          <target state="translated">[ '/ 공통 / 대상 1', '/ 공통 / 대상 2']</target>
        </trans-unit>
        <trans-unit id="d309b2db34ddd2b075335ae1a4ef2512599f2153" translate="yes" xml:space="preserve">
          <source>['/Common/device1', '/Common/device2']</source>
          <target state="translated">[ '/ Common / device1', '/ Common / device2']</target>
        </trans-unit>
        <trans-unit id="a03cfd2d9ebca25fbebd386512521e39e5b7ac37" translate="yes" xml:space="preserve">
          <source>['/Common/foo_VS/']</source>
          <target state="translated">['/Common/foo_VS/']</target>
        </trans-unit>
        <trans-unit id="37e1b04aa5c2c2a1d7641a485c617572ac75dcb1" translate="yes" xml:space="preserve">
          <source>['/Common/global-network', '/Common/local-dos']</source>
          <target state="translated">[ '/ Common / global-network', '/ Common / local-dos']</target>
        </trans-unit>
        <trans-unit id="d6745f63f6aa9e96afc4494c2b296e03047afa4f" translate="yes" xml:space="preserve">
          <source>['/Common/http', '/Common/gateway_icmp']</source>
          <target state="translated">[ '/ Common / http', '/ Common / gateway_icmp']</target>
        </trans-unit>
        <trans-unit id="d20012a7a6ffc74183d70a9188dc1cb2302e20fa" translate="yes" xml:space="preserve">
          <source>['/Common/http']</source>
          <target state="translated">['/Common/http']</target>
        </trans-unit>
        <trans-unit id="eec92e4214fb01fed98511817ab9f994c9195c34" translate="yes" xml:space="preserve">
          <source>['/Common/http-tunnel', '/Common/socks-tunnel']</source>
          <target state="translated">[ '/ Common / http-tunnel', '/ Common / socks-tunnel']</target>
        </trans-unit>
        <trans-unit id="0f6b90d0bd087551eb4426797796ed99d01599b8" translate="yes" xml:space="preserve">
          <source>['/Common/https_443', '/Common/icmp']</source>
          <target state="translated">[ '/ Common / https_443', '/ Common / icmp']</target>
        </trans-unit>
        <trans-unit id="44681aafb9aee553ceb8d87eed1c1da35a6ac2ea" translate="yes" xml:space="preserve">
          <source>['/Common/irule1', '/Common/irule2']</source>
          <target state="translated">[ '/ Common / irule1', '/ Common / irule2']</target>
        </trans-unit>
        <trans-unit id="aa9612361cf47d24bd609ae92129fa73e4cf1561" translate="yes" xml:space="preserve">
          <source>['/Common/list1', '/Common/list2']</source>
          <target state="translated">[ '/ Common / list1', '/ Common / list2']</target>
        </trans-unit>
        <trans-unit id="1f79ee11b83baa9f37e0f22e3bc2bcd875db74ab" translate="yes" xml:space="preserve">
          <source>['/Common/monitor1', '/Common/monitor2']</source>
          <target state="translated">[ '/ Common / monitor1', '/ Common / monitor2']</target>
        </trans-unit>
        <trans-unit id="0a177e1d73d060650f1ec5ab02daf401d9dbb4bc" translate="yes" xml:space="preserve">
          <source>['/Common/peer1', '/Common/peer2']</source>
          <target state="translated">[ '/ Common / peer1', '/ Common / peer2']</target>
        </trans-unit>
        <trans-unit id="8ab674800173347da4b79d9060a757d385f93736" translate="yes" xml:space="preserve">
          <source>['/Common/policy1', &quot;/Common/policy2'&quot;]</source>
          <target state="translated">[ '/ Common / policy1', &quot;/ Common / policy2 '&quot;]</target>
        </trans-unit>
        <trans-unit id="a7faab76464cc1bdf0174843229587d5b92143ad" translate="yes" xml:space="preserve">
          <source>['/Common/policy1', '/Common/policy2']</source>
          <target state="translated">[ '/ Common / policy1', '/ Common / policy2']</target>
        </trans-unit>
        <trans-unit id="e6a4c09cf402200408dcd9fe4c185efc90cace53" translate="yes" xml:space="preserve">
          <source>['/Common/profile1', '/Common/profile2']</source>
          <target state="translated">[ '/ Common / profile1', '/ Common / profile2']</target>
        </trans-unit>
        <trans-unit id="f9ac73f208d3bc0be5158a6f5f9a130582c7b0c6" translate="yes" xml:space="preserve">
          <source>['/Common/route1', '/Common/route2']</source>
          <target state="translated">[ '/ Common / route1', '/ Common / route2']</target>
        </trans-unit>
        <trans-unit id="313b844fceb247a6fef371e30b73d16761c6e833" translate="yes" xml:space="preserve">
          <source>['/Common/rule1', &quot;/Common/rule2'&quot;]</source>
          <target state="translated">[ '/ Common / rule1', &quot;/ Common / rule2 '&quot;]</target>
        </trans-unit>
        <trans-unit id="30820fb40214423d08e12fdada650e5720f274cf" translate="yes" xml:space="preserve">
          <source>['/Common/rule1', '/Common/rule2']</source>
          <target state="translated">[ '/ Common / rule1', '/ Common / rule2']</target>
        </trans-unit>
        <trans-unit id="8852da6b7f8e425354f5f5662d9de540e4f365e7" translate="yes" xml:space="preserve">
          <source>['/Common/server1', '/Common/server2']</source>
          <target state="translated">[ '/ Common / server1', '/ Common / server2']</target>
        </trans-unit>
        <trans-unit id="8e5d36b344fcf1ca27b628d2cee7016383771cf4" translate="yes" xml:space="preserve">
          <source>['/Common/ssl_drldp']</source>
          <target state="translated">['/Common/ssl_drldp']</target>
        </trans-unit>
        <trans-unit id="3bf15b867656394e4cad8f28eea0b2e90ac43d30" translate="yes" xml:space="preserve">
          <source>['/Common/tunnel1', '/Common/tunnel2']</source>
          <target state="translated">[ '/ Common / tunnel1', '/ Common / tunnel2']</target>
        </trans-unit>
        <trans-unit id="96adaf4a5465fd43476b62a77aabd14c8462e99c" translate="yes" xml:space="preserve">
          <source>['/Common/vlan1', '/Common/vlan2']</source>
          <target state="translated">[ '/ Common / vlan1', '/ Common / vlan2']</target>
        </trans-unit>
        <trans-unit id="97f338e3a979267a9f9e18c23aecb363339e765b" translate="yes" xml:space="preserve">
          <source>['/Common/vlan5', '/Common/vlan6']</source>
          <target state="translated">[ '/ Common / vlan5', '/ Common / vlan6']</target>
        </trans-unit>
        <trans-unit id="f399274ff3ac6eb0647f4b32907b31e9401613bb" translate="yes" xml:space="preserve">
          <source>['/Common/vs1', '/Common/vs2']</source>
          <target state="translated">[ '/ Common / vs1', '/ Common / vs2']</target>
        </trans-unit>
        <trans-unit id="889c51f1e6c677bfa4d3596754ad71bd8dc6e713" translate="yes" xml:space="preserve">
          <source>['/DC0/vm']</source>
          <target state="translated">['/DC0/vm']</target>
        </trans-unit>
        <trans-unit id="6b496f698a3ffacf7aaae4ad40e63bb4f8b9043b" translate="yes" xml:space="preserve">
          <source>['/avatar/a7440323a684ea47406313a33156e5e9']</source>
          <target state="translated">['/avatar/a7440323a684ea47406313a33156e5e9']</target>
        </trans-unit>
        <trans-unit id="26eaf903dbc90c4c90a9a594841e51518d785fa1" translate="yes" xml:space="preserve">
          <source>['/dashboards/f/nErXDvCkzz/department-abc']</source>
          <target state="translated">['/dashboards/f/nErXDvCkzz/department-abc']</target>
        </trans-unit>
        <trans-unit id="a4c30072abf56d6617fc005245ba7ef3fd33f278" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/basic', '../sshdgenkeys', 'log']</source>
          <target state="translated">[ '/ etc / service-bundles / targets / basic', '../sshdgenkeys', 'log']</target>
        </trans-unit>
        <trans-unit id="47b42fd13870e76ef2ef618e1cad64f2827d8df3" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/basic', '../sshdgenkeys']</source>
          <target state="translated">[ '/ etc / service-bundles / targets / basic', '../sshdgenkeys']</target>
        </trans-unit>
        <trans-unit id="ca26f65f01c52f217ed1b9c08f21378f7bbe7b35" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/server', '/etc/service-bundles/targets/sockets']</source>
          <target state="translated">[ '/ etc / service-bundles / targets / server', '/ etc / service-bundles / targets / sockets']</target>
        </trans-unit>
        <trans-unit id="648b658c40fcbfb2a9886d192947050c91c0ce70" translate="yes" xml:space="preserve">
          <source>['/etc/service-bundles/targets/shutdown']</source>
          <target state="translated">['/etc/service-bundles/targets/shutdown']</target>
        </trans-unit>
        <trans-unit id="561db8c9c088e17d6eb79dc5437f07e87866711a" translate="yes" xml:space="preserve">
          <source>['/exclude.html', '/exclude2.html']</source>
          <target state="translated">[ '/exclude.html', '/exclude2.html']</target>
        </trans-unit>
        <trans-unit id="b8234ac20fb9c46250beffcf3de406aea1609a64" translate="yes" xml:space="preserve">
          <source>['/foo.html']</source>
          <target state="translated">['/foo.html']</target>
        </trans-unit>
        <trans-unit id="f17d7c36cfcb34156fa87ec7c3d753b77ffc4001" translate="yes" xml:space="preserve">
          <source>['/path/to/file.json', '/path/to/file.yaml']</source>
          <target state="translated">[ '/path/to/file.json', '/path/to/file.yaml']</target>
        </trans-unit>
        <trans-unit id="b696a9de3901947c71d39f3464d386589a4fa4d9" translate="yes" xml:space="preserve">
          <source>['/path/to/file.txt', '/path/to/folder']</source>
          <target state="translated">[ '/path/to/file.txt', '/ path / to / folder']</target>
        </trans-unit>
        <trans-unit id="c207e79fb5f50a4b5cd7327af0ec262d927d0db3" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGropup/providers/Microsoft.Network/virtualNet works/myVirtualNetwork']</source>
          <target state="translated">[ '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGropup/providers/Microsoft.Network/virtualNet works / myVirtualNetwork']</target>
        </trans-unit>
        <trans-unit id="c804125608027328d5be5a7c716aac25d4de62c3" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup']</source>
          <target state="translated">['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup']</target>
        </trans-unit>
        <trans-unit id="d2676b2662135cdc6cbf9d2574f73262f02eae94" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/Microsoft.Network/VirtualNetworks/myVirtualNetwo rk/subnets/mySubnet']</source>
          <target state="translated">[ '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/Microsoft.Network/VirtualNetworks/myVirtualNetwo rk / subnets / mySubnet']</target>
        </trans-unit>
        <trans-unit id="2810bf3295e1456689cacb4d72c100af95884caf" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/bar']</source>
          <target state="translated">['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/bar']</target>
        </trans-unit>
        <trans-unit id="cd13ceabee7c22e32f21aba1568137b1b8c1813b" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/deadbeef']</source>
          <target state="translated">['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/deadbeef']</target>
        </trans-unit>
        <trans-unit id="ec70c19ac1ea766cde12042194501b3f545badda" translate="yes" xml:space="preserve">
          <source>['/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints/e2', '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints/e1']</source>
          <target state="translated">[ '/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints / e2', '/ subscriptions / xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxxx / 리소스 그룹 /tmt/providers/Microsoft.Network/trafficManagerProfiles/tm049b1ae293/exter nalEndpoints / e1 ']</target>
        </trans-unit>
        <trans-unit id="8c31776a7c191caf13d9487c6f89bc67a7fc9066" translate="yes" xml:space="preserve">
          <source>['/testpathtwo/test2.js', '/testpathone/test1.css', '/testpaththree/test3.ss']</source>
          <target state="translated">[ '/testpathtwo/test2.js', '/testpathone/test1.css', '/testpaththree/test3.ss']</target>
        </trans-unit>
        <trans-unit id="8311afb8a145f291e3e295fbad86a81bdde5af03" translate="yes" xml:space="preserve">
          <source>['/usr/local/opt/python@2/site-packages/', '/usr/lib/python/site-packages/', '/usr/lib/python/site-packages/']</source>
          <target state="translated">[ '/ usr / local / opt / python @ 2 / site-packages /', '/ usr / lib / python / site-packages /', '/ usr / lib / python / site-packages /']</target>
        </trans-unit>
        <trans-unit id="cfa7920e74db7db3192dcbf87cc7e38a8d12882d" translate="yes" xml:space="preserve">
          <source>['0', '1']</source>
          <target state="translated">[ '0', '1']</target>
        </trans-unit>
        <trans-unit id="01cec50dd0f8e9d349c36c2a28f6c97a13f845f5" translate="yes" xml:space="preserve">
          <source>['1', '2', '3', '4', '5', '20', '100']</source>
          <target state="translated">[ '1', '2', '3', '4', '5', '20', '100']</target>
        </trans-unit>
        <trans-unit id="06bd2cbbe71562bd018fde2d80997daa91506f32" translate="yes" xml:space="preserve">
          <source>['1', '2', '3', '4', '5', '20']</source>
          <target state="translated">[ '1', '2', '3', '4', '5', '20']</target>
        </trans-unit>
        <trans-unit id="74cc866765fb1f61578945235891b25173884dfe" translate="yes" xml:space="preserve">
          <source>['1.1', '1.2']</source>
          <target state="translated">[ '1.1', '1.2']</target>
        </trans-unit>
        <trans-unit id="572c022ddf698a448a3be25a3932ba3c39273822" translate="yes" xml:space="preserve">
          <source>['1.1.1.1', '2.2.2.2']</source>
          <target state="translated">[ '1.1.1.1', '2.2.2.2']</target>
        </trans-unit>
        <trans-unit id="387e9c56e633c1b0bf31da319652ef89ee932dc8" translate="yes" xml:space="preserve">
          <source>['1.1.1.1-2.2.2.2', '3.3.3.3-4.4.4.4']</source>
          <target state="translated">[ '1.1.1.1-2.2.2.2', '3.3.3.3-4.4.4.4']</target>
        </trans-unit>
        <trans-unit id="5af220c40a3b33f83c37ea3754085145bb0c4240" translate="yes" xml:space="preserve">
          <source>['1.2', '1.3']</source>
          <target state="translated">[ '1.2', '1.3']</target>
        </trans-unit>
        <trans-unit id="bf774740d2064642f04ea6e5310cd812f418f7ef" translate="yes" xml:space="preserve">
          <source>['1.2.2.1', '4.5.5.4']</source>
          <target state="translated">[ '1.2.2.1', '4.5.5.4']</target>
        </trans-unit>
        <trans-unit id="eb89a7d5c1b4d4ef702b13284951a4f7ec42dd5b" translate="yes" xml:space="preserve">
          <source>['10.1.0.0/16', '172.100.0.0/16']</source>
          <target state="translated">['10 .1.0.0 / 16 ','172.100.0.0/16 ']</target>
        </trans-unit>
        <trans-unit id="96139ab5665abbc2b98e6848982df04f0952035e" translate="yes" xml:space="preserve">
          <source>['10.1.0.0/16', 'fdda:e69b:2547:485e::/64']</source>
          <target state="translated">['10 .1.0.0 / 16 ','fdda : e69b : 2547 : 485e :: / 64 ']</target>
        </trans-unit>
        <trans-unit id="1c8111f48356bbaeaf6bef7c76a311f3aff353a3" translate="yes" xml:space="preserve">
          <source>['10.1.0.1', '...']</source>
          <target state="translated">['10 .1.0.1 ','... ']</target>
        </trans-unit>
        <trans-unit id="04f790aac04e85cccce8761d0a9938f6771d256d" translate="yes" xml:space="preserve">
          <source>['10.2.0.0/24', 'fdda:e69b:1587:495e::/64']</source>
          <target state="translated">['10 .2.0.0 / 24 ','fdda : e69b : 1587 : 495e :: / 64 ']</target>
        </trans-unit>
        <trans-unit id="a0ebf0dd4c23fee92b93a0c3684fb929bd12a707" translate="yes" xml:space="preserve">
          <source>['10GE1/0/22', 'port default vlan 20']</source>
          <target state="translated">[ '10GE1 / 0 / 22', '포트 기본 VLAN 20']</target>
        </trans-unit>
        <trans-unit id="8fd5f504c27d9fb932940c03fdc54669f3cb6bf4" translate="yes" xml:space="preserve">
          <source>['127.0.0.0/8', 'foo.bar.com', '10.10.10.10']</source>
          <target state="translated">[ '127.0.0.0/8', 'foo.bar.com', '10 .10.10.10 ']</target>
        </trans-unit>
        <trans-unit id="234a4bc67319594fca9427447a4034b085a1f139" translate="yes" xml:space="preserve">
          <source>['127.0.0.1', '127.0.0.3']</source>
          <target state="translated">[ '127.0.0.1', '127.0.0.3']</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
