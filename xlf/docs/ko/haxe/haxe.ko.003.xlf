<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haxe">
    <body>
      <group id="haxe">
        <trans-unit id="3e58c025e885e3ff91de9d7071ae43660af2ae59" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#remove&quot;&gt;Map.remove&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../map#remove&quot;&gt;Map.remove&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e5919e52a8dfdcc94f6807ac71b0224c15e35ef" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#set&quot;&gt;Map.set&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../map#set&quot;&gt;Map.set&lt;/a&gt;&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="7a4a35deb83bef16131537f009b9c226961162e4" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../../map#toString&quot;&gt;Map.toString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../map#toString&quot;&gt;Map.toString&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bb1ca1c8095e68e59b59e7a529d9036e002fc29" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;exprtools#iter&quot;&gt;haxe.macro.ExprTools.iter&lt;/a&gt;&lt;/code&gt; for details on iterating expressions in general. This function works the same way, but with a different data structure.</source>
          <target state="translated">일반적인 식 반복에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;exprtools#iter&quot;&gt;haxe.macro.ExprTools.iter&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 이 함수는 동일한 방식으로 작동하지만 데이터 구조가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="15a29961367aec34686a2f900162de8f678f04e5" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;exprtools#map&quot;&gt;haxe.macro.ExprTools.map&lt;/a&gt;&lt;/code&gt; for details on expression mapping in general. This function works the same way, but with a different data structure.</source>
          <target state="translated">일반적으로 식 매핑에 대한 자세한 내용 은 &lt;code&gt;&lt;a href=&quot;exprtools#map&quot;&gt;haxe.macro.ExprTools.map&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . 이 함수는 동일한 방식으로 작동하지만 데이터 구조가 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e48a27daa7903a518277b11aa6e6abd345c7a034" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; for the Haxe Reflection API.</source>
          <target state="translated">Haxe Reflection API &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc9dd29dd1d25b3ab0e4be3c7a42dad178762271" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#follow&quot;&gt;haxe.macro.TypeTools.follow&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;typetools#follow&quot;&gt;haxe.macro.TypeTools.follow&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="44f974d45c26d48e2e5862f01746ed32a0af4620" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#followWithAbstracts&quot;&gt;haxe.macro.TypeTools.followWithAbstracts&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;typetools#followWithAbstracts&quot;&gt;haxe.macro.TypeTools.followWithAbstracts&lt;/a&gt;&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a4aea6f64693fb2fadefe2e4710e1d793c3fc4c3" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;typetools#toComplexType&quot;&gt;haxe.macro.TypeTools.toComplexType&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;&lt;a href=&quot;typetools#toComplexType&quot;&gt;haxe.macro.TypeTools.toComplexType&lt;/a&gt;&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fe6277542f110280657fa548b03a3b8462079278" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;DEFAULT_RESOLVER&lt;/code&gt; for more information on type resolvers.</source>
          <target state="translated">유형 리졸버에 대한 자세한 정보는 &lt;code&gt;DEFAULT_RESOLVER&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4740c31644f2fbf5c5d030e8bd09bea210721574" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;USE_CACHE&lt;/code&gt; for a complete description.</source>
          <target state="translated">See &lt;code&gt;USE_CACHE&lt;/code&gt; for a complete description.</target>
        </trans-unit>
        <trans-unit id="46190bb34767da9c7588e208f6dc7fa40de24006" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;USE_ENUM_INDEX&lt;/code&gt; for a complete description.</source>
          <target state="translated">See &lt;code&gt;USE_ENUM_INDEX&lt;/code&gt; for a complete description.</target>
        </trans-unit>
        <trans-unit id="bb1585ad345b3a213d2ab8632717cc9801580018" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;readFullBytes&lt;/code&gt; that tries to read the exact amount of specified bytes.</source>
          <target state="translated">지정된 바이트의 정확한 양을 읽으려고하는 &lt;code&gt;readFullBytes&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="de577dbf81d3b7446c18920b9f677747a8fd9ac6" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;writeFullBytes&lt;/code&gt; that tries to write the exact amount of specified bytes.</source>
          <target state="translated">지정된 양의 정확한 바이트를 쓰려고 시도하는 &lt;code&gt;writeFullBytes&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b0ef69cc25fa14f79654ba57ea5df04910bc466" translate="yes" xml:space="preserve">
          <source>See USE_CACHE for a complete description.</source>
          <target state="translated">자세한 설명은 USE_CACHE를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9cdbce152fe8cfdbb0636eb6ea283e8853252904" translate="yes" xml:space="preserve">
          <source>See USE_ENUM_INDEX for a complete description.</source>
          <target state="translated">자세한 설명은 USE_ENUM_INDEX를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="ddecf6c27d9e9b00891ab1556c3da8f2e5917668" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;this&lt;/code&gt; Http request to the Url specified by &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Http 요청을 &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt; 의해 지정된 URL로 보냅니다 . url .</target>
        </trans-unit>
        <trans-unit id="418b43758063220f4630e269ee64079d485cace5" translate="yes" xml:space="preserve">
          <source>Separate a date-time into several components</source>
          <target state="translated">날짜-시간을 여러 구성 요소로 분리</target>
        </trans-unit>
        <trans-unit id="bef67beca4c63b5c4848eac728905cca68816ec3" translate="yes" xml:space="preserve">
          <source>Serialization is guaranteed to work for all haxe-defined classes, but may or may not work for instances of external/native classes.</source>
          <target state="translated">직렬화는 모든 haxe 정의 클래스에서 작동하도록 보장되지만 외부 / 네이티브 클래스의 인스턴스에서는 작동하거나 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="37ab87d27ac3fc6aff97de4899cf111dbc93119e" translate="yes" xml:space="preserve">
          <source>Serializer.USE_CACHE()</source>
          <target state="translated">Serializer.USE_CACHE()</target>
        </trans-unit>
        <trans-unit id="8c47c32f4753490883aa7f2da42b9237e91dd631" translate="yes" xml:space="preserve">
          <source>Serializer.USE_ENUM_INDEX()</source>
          <target state="translated">Serializer.USE_ENUM_INDEX()</target>
        </trans-unit>
        <trans-unit id="7334929471113570ab0df0cde901e126c19cfac2" translate="yes" xml:space="preserve">
          <source>Serializer.run()</source>
          <target state="translated">Serializer.run()</target>
        </trans-unit>
        <trans-unit id="d1d6929bc6ae78c0192436d99ce11dad76611222" translate="yes" xml:space="preserve">
          <source>Serializer.serialize()</source>
          <target state="translated">Serializer.serialize()</target>
        </trans-unit>
        <trans-unit id="47e3d6df905a599900c2674b7bbdf809e98a6f0a" translate="yes" xml:space="preserve">
          <source>Serializer.serializeException()</source>
          <target state="translated">Serializer.serializeException()</target>
        </trans-unit>
        <trans-unit id="77ca718da7643515b5a4b69896142c7cff21a637" translate="yes" xml:space="preserve">
          <source>Serializer.toString()</source>
          <target state="translated">Serializer.toString()</target>
        </trans-unit>
        <trans-unit id="75e52bd72a908119d7ef59f2290e8e0c3362041b" translate="yes" xml:space="preserve">
          <source>Serializer.useCache</source>
          <target state="translated">Serializer.useCache</target>
        </trans-unit>
        <trans-unit id="c3148282cbb22645d0901abe7b3884eff5c9168b" translate="yes" xml:space="preserve">
          <source>Serializer.useEnumIndex</source>
          <target state="translated">Serializer.useEnumIndex</target>
        </trans-unit>
        <trans-unit id="772cf6b5e7f38afd909a1198d97163e2ef545f0b" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;v&lt;/code&gt; and returns the String representation.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 를 직렬화 하고 문자열 표현을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="18edd5905d31173d899f6372b8578e30304bb279" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 를 직렬화 합니다.</target>
        </trans-unit>
        <trans-unit id="df28c0c79904cb74759cc80ed424274ed5afae63" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;pretty&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; to prettify the result.</source>
          <target state="translated">결과를 확인하려면 &lt;code&gt;pretty&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="ece63fce080f97be8b5de1ada601cacf30b6cf93" translate="yes" xml:space="preserve">
          <source>Set a conditional compiler flag.</source>
          <target state="translated">조건부 컴파일러 플래그를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6d8d3994b1f9ee8de92e04557b343aa72ff0e0cf" translate="yes" xml:space="preserve">
          <source>Set the given attribute value for an Element node. Attributes are case-sensitive.</source>
          <target state="translated">요소 노드에 제공된 속성 값을 설정하십시오. 속성은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="e79006b8c806ae1f3a7d0d65b41b5bd11b770e40" translate="yes" xml:space="preserve">
          <source>Set the length of the Array.</source>
          <target state="translated">Set the length of the Array.</target>
        </trans-unit>
        <trans-unit id="df5667554b1d17e46e8630f29f00a69f74ee140d" translate="yes" xml:space="preserve">
          <source>Set the type of a (static) field at a given class by name. An error is thrown when &lt;code&gt;className&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; is invalid.</source>
          <target state="translated">주어진 클래스에서 (정적) 필드의 유형을 이름으로 설정하십시오. &lt;code&gt;className&lt;/code&gt; 또는 &lt;code&gt;field&lt;/code&gt; 가 유효하지 않은 경우 오류가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="2058e1a8c0d653e4de6f94f3fd60d79972d7cc93" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;len&lt;/code&gt; consecutive bytes starting from index &lt;code&gt;pos&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; instance to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Sets &lt;code&gt;len&lt;/code&gt; consecutive bytes starting from index &lt;code&gt;pos&lt;/code&gt; of &lt;code&gt;this&lt;/code&gt; instance to &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e17f5fca6b7ef88d4b8ed5224060e6333194857" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;value&lt;/code&gt; for a specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;key&lt;/code&gt; 의 &lt;code&gt;value&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7a27860485d6fe61ba5f7ac598bc95e455dceb77" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;modulecheckpolicy#ModuleCheckPolicy&quot;&gt;ModuleCheckPolicy&lt;/a&gt;&lt;/code&gt; of all files whose dot-path matches an element of &lt;code&gt;pathFilters&lt;/code&gt;.</source>
          <target state="translated">dot-path가 &lt;code&gt;pathFilters&lt;/code&gt; 요소와 일치하는 모든 파일 의 &lt;code&gt;&lt;a href=&quot;modulecheckpolicy#ModuleCheckPolicy&quot;&gt;ModuleCheckPolicy&lt;/a&gt;&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="84372b944bb3690629343ac656b346c11f6feabb" translate="yes" xml:space="preserve">
          <source>Sets the color of the trace output to &lt;code&gt;rgb&lt;/code&gt;.</source>
          <target state="translated">추적 출력의 색상을 &lt;code&gt;rgb&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="db0c82cb4109537384b1a5c03061b1c370667f9c" translate="yes" xml:space="preserve">
          <source>Sets the field named &lt;code&gt;field&lt;/code&gt; of object &lt;code&gt;o&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;, taking property setter functions into account.</source>
          <target state="translated">속성 설정 기 함수를 고려 하여 object &lt;code&gt;o&lt;/code&gt; 의 field라는 &lt;code&gt;field&lt;/code&gt; 를 value &lt;code&gt;value&lt;/code&gt; 로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b2872b22ffc494a4070ae02a75538187ecb35343" translate="yes" xml:space="preserve">
          <source>Sets the field named &lt;code&gt;field&lt;/code&gt; of object &lt;code&gt;o&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">object &lt;code&gt;o&lt;/code&gt; 의 field라는 &lt;code&gt;field&lt;/code&gt; 를 value &lt;code&gt;value&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="c74d67451e2fa3aaef2f3a983804d3a443d0eacb" translate="yes" xml:space="preserve">
          <source>Sets the header identified as &lt;code&gt;header&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">헤더로 식별 된 &lt;code&gt;header&lt;/code&gt; 를 value &lt;code&gt;value&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="f217841658d3e9ca990f280b51fdba594c81d58a" translate="yes" xml:space="preserve">
          <source>Sets the index of enum instance &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">열거 형 인스턴스 &lt;code&gt;v&lt;/code&gt; 의 인덱스를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="cb8ec662d036ba9fa517be001ffa1fb2e7cf3f41" translate="yes" xml:space="preserve">
          <source>Sets the parameter identified as &lt;code&gt;param&lt;/code&gt; to value &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;param&lt;/code&gt; 으로 식별 된 매개 변수 를 value &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66b2b0f565720f8e413f7c5a583e282382bea02c" translate="yes" xml:space="preserve">
          <source>Sets the post data of &lt;code&gt;this&lt;/code&gt; Http request to &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">설정의 포스트 데이터를 &lt;code&gt;this&lt;/code&gt; 에 대한 HTTP 요청 &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70e955f007ed5200df8e4b8703b73782c2686c26" translate="yes" xml:space="preserve">
          <source>Sets the type resolver of &lt;code&gt;this&lt;/code&gt; Unserializer instance to &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Unserializer 인스턴스 의 형태 결정자 를 &lt;code&gt;r&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="08522b503f7e528b9c648e4f03360912495d6ab8" translate="yes" xml:space="preserve">
          <source>Sets the value at index &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">인덱스 &lt;code&gt;index&lt;/code&gt; 의 값 을 &lt;code&gt;val&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2ed9204b3f3aa707aebab739471ee7f5a8f25641" translate="yes" xml:space="preserve">
          <source>Sha1</source>
          <target state="translated">Sha1</target>
        </trans-unit>
        <trans-unit id="3a8ec862ad8ee003a306031418c488e4f63f62ca" translate="yes" xml:space="preserve">
          <source>Sha224</source>
          <target state="translated">Sha224</target>
        </trans-unit>
        <trans-unit id="6d5db0e686f6ba298ef37be6e0c44dea3cbf70dd" translate="yes" xml:space="preserve">
          <source>Sha256</source>
          <target state="translated">Sha256</target>
        </trans-unit>
        <trans-unit id="833eec462913c05720b68fac476ead3589719ad7" translate="yes" xml:space="preserve">
          <source>Should be used as a type for the last argument of an extern method, representing that arbitrary number of arguments of given type can be passed to that method.</source>
          <target state="translated">주어진 유형의 임의의 수의 인수가 해당 메소드에 전달 될 수 있음을 나타내는 extern 메소드의 마지막 인수에 대한 유형으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="088a0a746bda84afb6e52a0529a17bbcc29a0664" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;&lt;/code&gt; but uses the UTF8 character position.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;&lt;/code&gt; 와 비슷 하지만 UTF8 문자 위치를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e2b754bbbc1ec7de2b50ee1a3b70ad0661dfc3f1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;getLocalVars&lt;/code&gt;, but returns elements of type &lt;code&gt;&lt;a href=&quot;tvar#TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;../../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getLocalVars&lt;/code&gt; 와 유사 하지만 &lt;code&gt;&lt;a href=&quot;../../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 대신 &lt;code&gt;&lt;a href=&quot;tvar#TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 유형의 요소를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="154b4ece272befa90d771cf7fce0c392dd4d0120" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;parse&lt;/code&gt;, but error positions are reported within the provided String &lt;code&gt;expr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parse&lt;/code&gt; 와 유사 하지만 제공된 문자열 &lt;code&gt;expr&lt;/code&gt; 내에 오류 위치가보고됩니다. .</target>
        </trans-unit>
        <trans-unit id="a330300c09f7389d0781eed513ed24b13b44d3b1" translate="yes" xml:space="preserve">
          <source>Similar to fold, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">Similar to fold, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f27efaf8c47e6fad92609fb8ff97047e287656" translate="yes" xml:space="preserve">
          <source>Similar to map, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">map과 유사하지만 각 요소의 인덱스를 &lt;code&gt;f&lt;/code&gt; 로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="629d0c69d86f28d729f45dce09893321fdbecf89" translate="yes" xml:space="preserve">
          <source>Similar to map, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt;. The order of elements is preserved. If &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">Similar to map, but also passes the index of each element to &lt;code&gt;f&lt;/code&gt; . The order of elements is preserved. If &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</target>
        </trans-unit>
        <trans-unit id="52aaa93e9fd18f190378e95968016b9fb7865dc6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;data&lt;/code&gt; is the internal representation of Vector, this is a no-op.</source>
          <target state="translated">이후 &lt;code&gt;data&lt;/code&gt; 벡터의 내부 표현이며, 이는 무 조작 없다.</target>
        </trans-unit>
        <trans-unit id="7d8402a9baafad7b2c07760534b81e992db65ebd" translate="yes" xml:space="preserve">
          <source>Since not all platforms guarantee that &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; always uses UTF-8 encoding, you can use this cross-platform API to perform operations on such strings.</source>
          <target state="translated">모든 플랫폼에서 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 이 항상 UTF-8 인코딩을 사용 하도록 보장하는 것은 아니므 로이 크로스 플랫폼 API를 사용하여 해당 문자열에 대한 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="972dff2e71ca7560ec0b2ff72d5f32ae8e19d0bd" translate="yes" xml:space="preserve">
          <source>Since the closure is in strict-mode, there may be run-time error if the input is not strict-mode-compatible.</source>
          <target state="translated">클로저가 엄격 모드에 있기 때문에 입력이 엄격 모드와 호환되지 않으면 런타임 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd1186892a2f5c2bd17cd7d41f90482e39bd02c5" translate="yes" xml:space="preserve">
          <source>Single</source>
          <target state="translated">Single</target>
        </trans-unit>
        <trans-unit id="e9d07248d7339a00f41d4a2651e3f227cbb5162b" translate="yes" xml:space="preserve">
          <source>Single-precision IEEE 32bit float (4-byte).</source>
          <target state="translated">단 정밀도 IEEE 32 비트 부동 (4 바이트).</target>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="ab9a72ff408669ff32588ef8dccccdfc274f27e7" translate="yes" xml:space="preserve">
          <source>SocketConnection</source>
          <target state="translated">SocketConnection</target>
        </trans-unit>
        <trans-unit id="ead21ae2917edb34d045aeb124a3fa5e9351c871" translate="yes" xml:space="preserve">
          <source>SocketProtocol</source>
          <target state="translated">SocketProtocol</target>
        </trans-unit>
        <trans-unit id="7f035d1c14c708217397b6cbe06a051d9bbd2ca3" translate="yes" xml:space="preserve">
          <source>SocketWrapper</source>
          <target state="translated">SocketWrapper</target>
        </trans-unit>
        <trans-unit id="536e52c4f92e3654731e2d3ead0b53b48dc9c15f" translate="yes" xml:space="preserve">
          <source>Sorts &lt;code&gt;this&lt;/code&gt; Array according to the comparison function &lt;code&gt;f&lt;/code&gt;, where &lt;code&gt;f(x,y)&lt;/code&gt; returns 0 if x == y, a positive Int if x &amp;gt; y and a negative Int if x &amp;lt; y.</source>
          <target state="translated">정렬 &lt;code&gt;this&lt;/code&gt; 비교 기능에 따라 배열 &lt;code&gt;f&lt;/code&gt; , &lt;code&gt;f(x,y)&lt;/code&gt; 0 X == Y를 반환하는 경우, 양의 지능 x&amp;gt; Y와 음극 Int 인 경우, X &amp;lt;Y 경우.</target>
        </trans-unit>
        <trans-unit id="f6f9397d146a462975c732b4337b247b3adf6bdd" translate="yes" xml:space="preserve">
          <source>Sorts &lt;code&gt;this&lt;/code&gt; Vector according to the comparison function &lt;code&gt;f&lt;/code&gt;, where &lt;code&gt;f(x,y)&lt;/code&gt; returns 0 if x == y, a positive Int if x &amp;gt; y and a negative Int if x &amp;lt; y.</source>
          <target state="translated">정렬 &lt;code&gt;this&lt;/code&gt; 비교 기능에 따른 벡터를 &lt;code&gt;f&lt;/code&gt; , &lt;code&gt;f(x,y)&lt;/code&gt; 0 X == Y를 반환하는 경우, 양의 지능 x&amp;gt; Y와 음극 Int 인 경우, X &amp;lt;Y 경우.</target>
        </trans-unit>
        <trans-unit id="a15072ed76b3e67aac5415baed65dff7fb49434a" translate="yes" xml:space="preserve">
          <source>Sorts Array &lt;code&gt;a&lt;/code&gt; according to the comparison function &lt;code&gt;cmp&lt;/code&gt;, where &lt;code&gt;cmp(x,y)&lt;/code&gt; returns 0 if &lt;code&gt;x == y&lt;/code&gt;, a positive Int if &lt;code&gt;x &amp;gt; y&lt;/code&gt; and a negative Int if &lt;code&gt;x &amp;lt; y&lt;/code&gt;.</source>
          <target state="translated">비교 함수 &lt;code&gt;cmp&lt;/code&gt; 에 따라 배열 &lt;code&gt;a&lt;/code&gt; 를 정렬합니다 . 여기서 &lt;code&gt;cmp(x,y)&lt;/code&gt; 는 &lt;code&gt;x == y&lt;/code&gt; 인 경우 0을 , &lt;code&gt;x &amp;gt; y&lt;/code&gt; 인 경우 양의 Int, &lt;code&gt;x &amp;lt; y&lt;/code&gt; 경우 음의 Int를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="79b1351e4364aa20c08b37dbf3ed07832e9ee128" translate="yes" xml:space="preserve">
          <source>Sorts List &lt;code&gt;lst&lt;/code&gt; according to the comparison function &lt;code&gt;cmp&lt;/code&gt;, where &lt;code&gt;cmp(x,y)&lt;/code&gt; returns 0 if &lt;code&gt;x == y&lt;/code&gt;, a positive Int if &lt;code&gt;x &amp;gt; y&lt;/code&gt; and a negative Int if &lt;code&gt;x &amp;lt; y&lt;/code&gt;.</source>
          <target state="translated">비교 함수 &lt;code&gt;cmp&lt;/code&gt; 에 따라 List &lt;code&gt;lst&lt;/code&gt; 를 정렬합니다 . 여기서 &lt;code&gt;cmp(x,y)&lt;/code&gt; 는 &lt;code&gt;x == y&lt;/code&gt; 인 경우 0을 , &lt;code&gt;x &amp;gt; y&lt;/code&gt; 인 경우 양의 Int를, &lt;code&gt;x &amp;lt; y&lt;/code&gt; 경우 음의 Int를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="24e8b16f95204366cc84c6eb99ba631dd671fa70" translate="yes" xml:space="preserve">
          <source>Source &lt;code&gt;&lt;a href=&quot;bytes#Bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; instance from which to copy bytes.</source>
          <target state="translated">Source &lt;code&gt;&lt;a href=&quot;bytes#Bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; instance from which to copy bytes.</target>
        </trans-unit>
        <trans-unit id="c91f84b3f7980df3d2f80311fd051df5e3086e1b" translate="yes" xml:space="preserve">
          <source>Special information which is internally used to keep track of closure. information</source>
          <target state="translated">폐쇄를 추적하기 위해 내부적으로 사용되는 특수 정보. 정보</target>
        </trans-unit>
        <trans-unit id="7a5be4393103e59256181184a4f80be8e0548d7a" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;this&lt;/code&gt; String at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; 발생할 때 마다이 문자열을 분할 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11216a1f7c902849f81fb76e4741092ff61e8bf3" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;this&lt;/code&gt; Ucs2 at each occurrence of &lt;code&gt;delimiter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delimiter&lt;/code&gt; 가 발생할 때마다이 Ucs2를 분할 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3094fbe0e0dbd12f5d47e0d107d7ef3e9061f4da" translate="yes" xml:space="preserve">
          <source>Splits String &lt;code&gt;s&lt;/code&gt; at all substrings &lt;code&gt;this&lt;/code&gt; EReg matches.</source>
          <target state="translated">분할 문자열 &lt;code&gt;s&lt;/code&gt; 모든 문자열에서 &lt;code&gt;this&lt;/code&gt; EREG이 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8e19ba7355ecca575e829eb5f8c23445d4b223c5" translate="yes" xml:space="preserve">
          <source>StackItem</source>
          <target state="translated">StackItem</target>
        </trans-unit>
        <trans-unit id="01e8bf4a606093cd4b3714a5b0bcf48538998a8f" translate="yes" xml:space="preserve">
          <source>StackItem.CFunction</source>
          <target state="translated">StackItem.CFunction</target>
        </trans-unit>
        <trans-unit id="c6c144570a6c59268309d0e49ce5404f3a31a88c" translate="yes" xml:space="preserve">
          <source>StackItem.FilePos()</source>
          <target state="translated">StackItem.FilePos()</target>
        </trans-unit>
        <trans-unit id="0fc3a50091254f821b836b6320b0f7fbeb7fda13" translate="yes" xml:space="preserve">
          <source>StackItem.LocalFunction()</source>
          <target state="translated">StackItem.LocalFunction()</target>
        </trans-unit>
        <trans-unit id="29266c08eca7b89ab562c2de1297cfa2029730cf" translate="yes" xml:space="preserve">
          <source>StackItem.Method()</source>
          <target state="translated">StackItem.Method()</target>
        </trans-unit>
        <trans-unit id="b9d6f4fc5447a387066238859c60682e98f24bc4" translate="yes" xml:space="preserve">
          <source>StackItem.Module()</source>
          <target state="translated">StackItem.Module()</target>
        </trans-unit>
        <trans-unit id="a199c834c4355abdd01dfe7eb3b38b5ec2d5ed37" translate="yes" xml:space="preserve">
          <source>Start the main loop. Depending on the platform, this can return immediately or will only return when the application exits.</source>
          <target state="translated">메인 루프를 시작하십시오. 플랫폼에 따라 즉시 반환되거나 응용 프로그램이 종료 될 때만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9940879bb90ee666e075dbf3aa81feaa3bbd4d2a" translate="yes" xml:space="preserve">
          <source>Static access modifier.</source>
          <target state="translated">정적 액세스 수정 자.</target>
        </trans-unit>
        <trans-unit id="ccdc494b62ce12568d812e3742eabaaa377383a0" translate="yes" xml:space="preserve">
          <source>Static access of a field &lt;code&gt;cf&lt;/code&gt; on a class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">필드의 정적 접근 &lt;code&gt;cf&lt;/code&gt; 클래스에 &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">정적 메소드</target>
        </trans-unit>
        <trans-unit id="a7a1e24cb37c5326f36226124c89932ddcdd79d9" translate="yes" xml:space="preserve">
          <source>Static variables</source>
          <target state="translated">정적 변수</target>
        </trans-unit>
        <trans-unit id="c45b18c0f0f4b3cf24da66312054a56ccf27d9c5" translate="yes" xml:space="preserve">
          <source>Std</source>
          <target state="translated">Std</target>
        </trans-unit>
        <trans-unit id="c2ff3fce1f4cff6a6cfd9b17685f610f23425afa" translate="yes" xml:space="preserve">
          <source>Std.instance()</source>
          <target state="translated">Std.instance()</target>
        </trans-unit>
        <trans-unit id="9c20258b926c52a97bfe4dbca52836d251671080" translate="yes" xml:space="preserve">
          <source>Std.int()</source>
          <target state="translated">Std.int()</target>
        </trans-unit>
        <trans-unit id="aac19e0e9f73facc51474f6499a4f8da634eb2fa" translate="yes" xml:space="preserve">
          <source>Std.is()</source>
          <target state="translated">Std.is()</target>
        </trans-unit>
        <trans-unit id="397e388b01b486009591b311680c351a483bd85d" translate="yes" xml:space="preserve">
          <source>Std.parseFloat()</source>
          <target state="translated">Std.parseFloat()</target>
        </trans-unit>
        <trans-unit id="d784ad78a1d558596b9ff9c5203b65d0c4eafa07" translate="yes" xml:space="preserve">
          <source>Std.parseInt()</source>
          <target state="translated">Std.parseInt()</target>
        </trans-unit>
        <trans-unit id="8afb79b45e71a7fe831b233c276af2aeaf132937" translate="yes" xml:space="preserve">
          <source>Std.random()</source>
          <target state="translated">Std.random()</target>
        </trans-unit>
        <trans-unit id="689d74fcb26d627d6bf253589bb62c3cdb3288e7" translate="yes" xml:space="preserve">
          <source>Std.string()</source>
          <target state="translated">Std.string()</target>
        </trans-unit>
        <trans-unit id="e4d7d7293668ffbef258370bd8c610c8b365dfb0" translate="yes" xml:space="preserve">
          <source>Stop the event from firing anymore.</source>
          <target state="translated">더 이상 이벤트 발생을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="522e60728305fa639db7bdfdaba0bfde6913c865" translate="yes" xml:space="preserve">
          <source>Stops &lt;code&gt;this&lt;/code&gt; Timer.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 타이머를 중지 합니다 .</target>
        </trans-unit>
        <trans-unit id="ae6cc8fce810b126d71a76900c310d7421863118" translate="yes" xml:space="preserve">
          <source>Store the 16 bit unsigned integer at given position (in low endian encoding).</source>
          <target state="translated">16 비트 부호없는 정수를 주어진 위치 (낮은 엔디안 인코딩)에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="9098804d80469b0635a7451d9dc3f2497345977d" translate="yes" xml:space="preserve">
          <source>Store the 32 bit integer at given position (in low endian encoding).</source>
          <target state="translated">주어진 위치 (낮은 엔디안 인코딩)에 32 비트 정수를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="d9bdd00b40a4d48f5de84f5dbe943382f42fe0f1" translate="yes" xml:space="preserve">
          <source>Store the 64 bit integer at given position (in low endian encoding).</source>
          <target state="translated">주어진 위치 (낮은 엔디안 인코딩)에 64 비트 정수를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="4f95bb05ae6408a810e814b4f27d929b0a37e4ce" translate="yes" xml:space="preserve">
          <source>Store the IEEE double precision value at given position in low endian encoding. Result is unspecified if writing outside of the bounds.</source>
          <target state="translated">주어진 위치에서 IEEE 배정도 값을 낮은 엔디안 인코딩으로 저장하십시오. 범위를 벗어나면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8320fc8344c5e1b5bd6aa55b4c822e0637d40078" translate="yes" xml:space="preserve">
          <source>Store the IEEE single precision value at given position in low endian encoding. Result is unspecified if writing outside of the bounds.</source>
          <target state="translated">주어진 위치에서 IEEE 단 정밀도 값을 낮은 엔디안 인코딩으로 저장하십시오. 범위를 벗어나면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8caa81f168b2a457e31b637033460600698e4506" translate="yes" xml:space="preserve">
          <source>Store typed expression &lt;code&gt;t&lt;/code&gt; internally and give a syntax-level expression that can be returned from a macro and will be replaced by the stored typed expression.</source>
          <target state="translated">유형이 지정된 표현식 &lt;code&gt;t&lt;/code&gt; 를 내부에 저장 하고 매크로에서 리턴 될 수있는 구문 레벨 표현식을 제공하고 저장된 유형이 지정된 표현식으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="cc066028e0a9f215f4172fd3596cfce605cf6759" translate="yes" xml:space="preserve">
          <source>Stores the given 16-bit unsigned integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</source>
          <target state="translated">Stores the given 16-bit unsigned integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</target>
        </trans-unit>
        <trans-unit id="7d8eae7ab35759ecba4737b1fb63700cdb1fcb43" translate="yes" xml:space="preserve">
          <source>Stores the given 32-bit integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</source>
          <target state="translated">Stores the given 32-bit integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</target>
        </trans-unit>
        <trans-unit id="7e39935c03f347176d9abaa43de8acfc7024dcf8" translate="yes" xml:space="preserve">
          <source>Stores the given 64-bit integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</source>
          <target state="translated">Stores the given 64-bit integer &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; (in little-endian encoding).</target>
        </trans-unit>
        <trans-unit id="3b20c1d032c647f219c7329716a6251c60d07b5e" translate="yes" xml:space="preserve">
          <source>Stores the given IEEE double-precision value &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; in little-endian encoding. Result is unspecified if writing outside of bounds.</source>
          <target state="translated">Stores the given IEEE double-precision value &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; in little-endian encoding. Result is unspecified if writing outside of bounds.</target>
        </trans-unit>
        <trans-unit id="62a97f575dd5909cb721700fd2c769337c9ba31d" translate="yes" xml:space="preserve">
          <source>Stores the given IEEE single-precision value &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; in little-endian encoding. Result is unspecified if writing outside of bounds.</source>
          <target state="translated">Stores the given IEEE single-precision value &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; in little-endian encoding. Result is unspecified if writing outside of bounds.</target>
        </trans-unit>
        <trans-unit id="719ed7f5092ffb88288af64568281f296a67c37b" translate="yes" xml:space="preserve">
          <source>Stores the given byte &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">Stores the given byte &lt;code&gt;v&lt;/code&gt; at the given position &lt;code&gt;pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="60c11f43f3015181e3b65d07af2da7197d0f9069" translate="yes" xml:space="preserve">
          <source>String can be concatenated by using the &lt;code&gt;+&lt;/code&gt; operator. If an operand is not a String, it is passed through &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; first.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 연산자 를 사용하여 문자열을 연결할 수 있습니다 . 피연산자가 문자열이 아닌 경우 먼저 &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="14108186841d9779e94cf989088527076f2fc154" translate="yes" xml:space="preserve">
          <source>String interpolation of single quote strings within &lt;code&gt;expr&lt;/code&gt; is not supported.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 내의 작은 따옴표 문자열의 문자열 보간은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfa5ee344c22c0b243b04aa9644ff9a8a7b6a174" translate="yes" xml:space="preserve">
          <source>String representation from the result of the unit test.</source>
          <target state="translated">단위 테스트 결과에서 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="c637ead74346c866f0960b72f372813307712470" translate="yes" xml:space="preserve">
          <source>String.charAt()</source>
          <target state="translated">String.charAt()</target>
        </trans-unit>
        <trans-unit id="a242836a6071cd7499111977f7d5e7f2c703e276" translate="yes" xml:space="preserve">
          <source>String.charCodeAt()</source>
          <target state="translated">String.charCodeAt()</target>
        </trans-unit>
        <trans-unit id="660a36e0e4772c20a4ecfca38e4206d391d98e89" translate="yes" xml:space="preserve">
          <source>String.fromCharCode()</source>
          <target state="translated">String.fromCharCode()</target>
        </trans-unit>
        <trans-unit id="57cdfc28612baa44d9b801ecdd9786648969ade8" translate="yes" xml:space="preserve">
          <source>String.indexOf()</source>
          <target state="translated">String.indexOf()</target>
        </trans-unit>
        <trans-unit id="3c71d20886551d61cad75b8b861093ecf093951e" translate="yes" xml:space="preserve">
          <source>String.lastIndexOf()</source>
          <target state="translated">String.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="43f86903d36d048c8634a0d3efec8e4d2a2b6670" translate="yes" xml:space="preserve">
          <source>String.length</source>
          <target state="translated">String.length</target>
        </trans-unit>
        <trans-unit id="ac4175c194775f4bc4a29cc540d6eb829722928a" translate="yes" xml:space="preserve">
          <source>String.split()</source>
          <target state="translated">String.split()</target>
        </trans-unit>
        <trans-unit id="8247af16fde986c7d4e4dcc1235575e5764100fc" translate="yes" xml:space="preserve">
          <source>String.substr()</source>
          <target state="translated">String.substr()</target>
        </trans-unit>
        <trans-unit id="778c766f0211155295dacfdcfe2cfd89e1516b97" translate="yes" xml:space="preserve">
          <source>String.substring()</source>
          <target state="translated">String.substring()</target>
        </trans-unit>
        <trans-unit id="9f3e5777bde2c321e3646d9333930d022069936b" translate="yes" xml:space="preserve">
          <source>String.toLowerCase()</source>
          <target state="translated">String.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="302b23bd707c0a79fe8cf9a19faf8fc4777fd369" translate="yes" xml:space="preserve">
          <source>String.toString()</source>
          <target state="translated">String.toString()</target>
        </trans-unit>
        <trans-unit id="751fea106399bd9d2e73e1e2b8d24bf176e4da8c" translate="yes" xml:space="preserve">
          <source>String.toUpperCase()</source>
          <target state="translated">String.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="4af867646404217d7a643be333857ebe7ed14777" translate="yes" xml:space="preserve">
          <source>String: a is lexicographically less than b</source>
          <target state="translated">문자열 : a는 사전 순으로 b보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="cce5288eecd589d87724840446678fd320dd0922" translate="yes" xml:space="preserve">
          <source>StringBuf</source>
          <target state="translated">StringBuf</target>
        </trans-unit>
        <trans-unit id="d52634d4323e4a257700858ef08d29a6f3f3621c" translate="yes" xml:space="preserve">
          <source>StringBuf.add()</source>
          <target state="translated">StringBuf.add()</target>
        </trans-unit>
        <trans-unit id="5b40e1b56c9b5af54deaec42a99d4b22626b0784" translate="yes" xml:space="preserve">
          <source>StringBuf.addChar()</source>
          <target state="translated">StringBuf.addChar()</target>
        </trans-unit>
        <trans-unit id="55a61f580bf1a5126d9663982961a321ba2a194f" translate="yes" xml:space="preserve">
          <source>StringBuf.addSub()</source>
          <target state="translated">StringBuf.addSub()</target>
        </trans-unit>
        <trans-unit id="325aa5d4306b280e3f7d56df34a832795e94ce0f" translate="yes" xml:space="preserve">
          <source>StringBuf.length</source>
          <target state="translated">StringBuf.length</target>
        </trans-unit>
        <trans-unit id="4eebd5bac90b8edc0d2f15671e9bb0117e935d93" translate="yes" xml:space="preserve">
          <source>StringBuf.toString()</source>
          <target state="translated">StringBuf.toString()</target>
        </trans-unit>
        <trans-unit id="9894336d87778661629ae35f1f8fe91d036d0a97" translate="yes" xml:space="preserve">
          <source>StringInput</source>
          <target state="translated">StringInput</target>
        </trans-unit>
        <trans-unit id="22c80d2b5fdaa8cf4f33bc57659e755edaaac4e6" translate="yes" xml:space="preserve">
          <source>StringMap allows mapping of String keys to arbitrary values.</source>
          <target state="translated">StringMap을 사용하면 문자열 키를 임의의 값으로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fbec8c36f6a0a8eea2c029d8eb3d39f12dd7bfe" translate="yes" xml:space="preserve">
          <source>StringMap&amp;lt;T&amp;gt;</source>
          <target state="translated">StringMap&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e789cfea6961f46f9c02914ab7112ce66cd3139a" translate="yes" xml:space="preserve">
          <source>StringTools</source>
          <target state="translated">StringTools</target>
        </trans-unit>
        <trans-unit id="a5648da944ebcf25fd39c46c4ba676b241894206" translate="yes" xml:space="preserve">
          <source>StringTools.endsWith()</source>
          <target state="translated">StringTools.endsWith()</target>
        </trans-unit>
        <trans-unit id="6bedde3147b1d7ee75cacd3e4f6be2263ef802e8" translate="yes" xml:space="preserve">
          <source>StringTools.fastCodeAt()</source>
          <target state="translated">StringTools.fastCodeAt()</target>
        </trans-unit>
        <trans-unit id="89d14e1fa30f5d38fe676fef35798506c808486d" translate="yes" xml:space="preserve">
          <source>StringTools.hex()</source>
          <target state="translated">StringTools.hex()</target>
        </trans-unit>
        <trans-unit id="ff88737c750c5776ee1924063c75cca982883e3f" translate="yes" xml:space="preserve">
          <source>StringTools.htmlEscape()</source>
          <target state="translated">StringTools.htmlEscape()</target>
        </trans-unit>
        <trans-unit id="0031cc48010c119e88b96acf17d3c53f7cc0b0fb" translate="yes" xml:space="preserve">
          <source>StringTools.htmlUnescape()</source>
          <target state="translated">StringTools.htmlUnescape()</target>
        </trans-unit>
        <trans-unit id="3d83674595529ceb28118a641db3c63035f72b8e" translate="yes" xml:space="preserve">
          <source>StringTools.isEof()</source>
          <target state="translated">StringTools.isEof()</target>
        </trans-unit>
        <trans-unit id="3278b0215963e56cb63635cf50d09b69685780ef" translate="yes" xml:space="preserve">
          <source>StringTools.isSpace()</source>
          <target state="translated">StringTools.isSpace()</target>
        </trans-unit>
        <trans-unit id="f9fdd143a3b3afd978ee3bed9c8f0a7658f760d0" translate="yes" xml:space="preserve">
          <source>StringTools.lpad()</source>
          <target state="translated">StringTools.lpad()</target>
        </trans-unit>
        <trans-unit id="e81620c50e815483885f4e201fe4d0f8c18d0130" translate="yes" xml:space="preserve">
          <source>StringTools.ltrim()</source>
          <target state="translated">StringTools.ltrim()</target>
        </trans-unit>
        <trans-unit id="dd8aaa3894975c37507cf31142975bbca7061559" translate="yes" xml:space="preserve">
          <source>StringTools.quoteUnixArg()</source>
          <target state="translated">StringTools.quoteUnixArg()</target>
        </trans-unit>
        <trans-unit id="9a48eadfdd3cd5b0d5aa7df62ca5d0b79869d4f3" translate="yes" xml:space="preserve">
          <source>StringTools.quoteWinArg()</source>
          <target state="translated">StringTools.quoteWinArg()</target>
        </trans-unit>
        <trans-unit id="ad86cabd3e325fcca7c648e38661e557967f5ba5" translate="yes" xml:space="preserve">
          <source>StringTools.replace()</source>
          <target state="translated">StringTools.replace()</target>
        </trans-unit>
        <trans-unit id="90afb456c93d7a758e9fac27b8e158a129fb81a6" translate="yes" xml:space="preserve">
          <source>StringTools.rpad()</source>
          <target state="translated">StringTools.rpad()</target>
        </trans-unit>
        <trans-unit id="53d2d6671fb64947c9f7a829ec4150d4abd78f6c" translate="yes" xml:space="preserve">
          <source>StringTools.rtrim()</source>
          <target state="translated">StringTools.rtrim()</target>
        </trans-unit>
        <trans-unit id="701efdd85e43587f394bb025622a8b535636ea93" translate="yes" xml:space="preserve">
          <source>StringTools.startsWith()</source>
          <target state="translated">StringTools.startsWith()</target>
        </trans-unit>
        <trans-unit id="6603f0379d349e74bc2aff1fdbae6ed0e9a1c50d" translate="yes" xml:space="preserve">
          <source>StringTools.trim()</source>
          <target state="translated">StringTools.trim()</target>
        </trans-unit>
        <trans-unit id="1fae0d26cbf9084834cf577973cfecbf8f3b365e" translate="yes" xml:space="preserve">
          <source>StringTools.urlDecode()</source>
          <target state="translated">StringTools.urlDecode()</target>
        </trans-unit>
        <trans-unit id="396b64f793577d79696f85546523d8335d5a05e3" translate="yes" xml:space="preserve">
          <source>StringTools.urlEncode()</source>
          <target state="translated">StringTools.urlEncode()</target>
        </trans-unit>
        <trans-unit id="1e4575afd68788540c1587144193b89bd80ad0c0" translate="yes" xml:space="preserve">
          <source>StringTools.winMetaCharacters()</source>
          <target state="translated">StringTools.winMetaCharacters()</target>
        </trans-unit>
        <trans-unit id="3451ec778827dd14d24ea3b9f88b60a5392772bf" translate="yes" xml:space="preserve">
          <source>Strings can be constructed using the String literal syntax &lt;code&gt;&quot;string value&quot;&lt;/code&gt;.</source>
          <target state="translated">문자열은 문자열 리터럴 구문 &lt;code&gt;&quot;string value&quot;&lt;/code&gt; 를 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0faf70bd1dc8b4a4ebf5ffb799c4fd33c25c3565" translate="yes" xml:space="preserve">
          <source>Sub is set on module sub-type access: &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cpp/cppia/Module.html#Type&quot;&gt;pack.Module.Type&lt;/a&gt;&lt;/code&gt; has name = Module, sub = Type, if available.</source>
          <target state="translated">하위는 모듈 하위 유형 액세스에서 설정됩니다. &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cpp/cppia/Module.html#Type&quot;&gt;pack.Module.Type&lt;/a&gt;&lt;/code&gt; 에는 이름 = 모듈, 하위 = 유형 (사용 가능한 경우)이 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb47772816e76cd125457149a116fdf7b1d4400f" translate="yes" xml:space="preserve">
          <source>Sub is set on module sub-type access: `pack.Module.Type` has `name = &quot;Module&quot;`, `sub = &quot;Type&quot;`, if available.</source>
          <target state="translated">Sub is set on module sub-type access: `pack.Module.Type` has `name = &quot;Module&quot;`, `sub = &quot;Type&quot;`, if available.</target>
        </trans-unit>
        <trans-unit id="13bc93825413e6a2ce0a0cf3dbac4ddae7d831a8" translate="yes" xml:space="preserve">
          <source>Subsequent calls to &lt;code&gt;this.&lt;a href=&quot;#serialize&quot;&gt;serialize&lt;/a&gt;&lt;/code&gt; will append values to the internal buffer of this String. Once complete, the contents can be retrieved through a call to &lt;code&gt;this.&lt;a href=&quot;#toString&quot;&gt;toString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이것에 대한 후속 호출 &lt;code&gt;this.&lt;a href=&quot;#serialize&quot;&gt;serialize&lt;/a&gt;&lt;/code&gt; 는이 문자열의 내부 버퍼에 값을 추가합니다. 완료되면 컨텐츠를 호출하여 컨텐츠를 검색 할 수 있습니다 &lt;code&gt;this.&lt;a href=&quot;#toString&quot;&gt;toString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13e3107bfc3f52ee43f89b12d3c782f7973dc0ba" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 이면 성공합니다 .</target>
        </trans-unit>
        <trans-unit id="34097280e1c036a3e6ff4132d8facb22f4b655ea" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 이면 성공 합니다 .</target>
        </trans-unit>
        <trans-unit id="6466ce697321b0027fd2b023a6daab956c3788fe" translate="yes" xml:space="preserve">
          <source>Succeeds if &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 과 &lt;code&gt;actual&lt;/code&gt; 가 같으면 성공합니다 .</target>
        </trans-unit>
        <trans-unit id="e94a865493df7964a8209d4a3fb321d17e966ff2" translate="yes" xml:space="preserve">
          <source>Supported expressions are:</source>
          <target state="translated">지원되는 표현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9fb8a2cced6aa3d749241342ff3b54f2291714c" translate="yes" xml:space="preserve">
          <source>Supported range</source>
          <target state="translated">Supported range</target>
        </trans-unit>
        <trans-unit id="bf9314dc4349bfb2624e481889017abe1beb1298" translate="yes" xml:space="preserve">
          <source>SyncSocketConnection</source>
          <target state="translated">SyncSocketConnection</target>
        </trans-unit>
        <trans-unit id="b709bfe0901af77e59588feb42157ebb8a6da866" translate="yes" xml:space="preserve">
          <source>Synchronous communications between Flash and Javascript.</source>
          <target state="translated">Flash와 Javascript 간의 동기 통신</target>
        </trans-unit>
        <trans-unit id="eea5f6535cf1464538bf913c29432e06b44c8a00" translate="yes" xml:space="preserve">
          <source>Sys</source>
          <target state="translated">Sys</target>
        </trans-unit>
        <trans-unit id="6ad14368795511a22ee1d3233f23e4d0ca6d404f" translate="yes" xml:space="preserve">
          <source>SysError</source>
          <target state="translated">SysError</target>
        </trans-unit>
        <trans-unit id="f8faecd1b83759cd76df0b250cd9f0ce3d94ae67" translate="yes" xml:space="preserve">
          <source>TConstant</source>
          <target state="translated">TConstant</target>
        </trans-unit>
        <trans-unit id="c5b9f165e9450db15ca2b4ad6805c393ad43956a" translate="yes" xml:space="preserve">
          <source>TFunc</source>
          <target state="translated">TFunc</target>
        </trans-unit>
        <trans-unit id="4464b8e4a039bf6559ad424da8e3e745adcd64af" translate="yes" xml:space="preserve">
          <source>TVar</source>
          <target state="translated">TVar</target>
        </trans-unit>
        <trans-unit id="5f659ddc7f84d614a3867cfb3c11be9c8ea16d0d" translate="yes" xml:space="preserve">
          <source>Take a look at our &lt;a href=&quot;https://haxe.org/documentation/introduction/&quot;&gt;introduction&lt;/a&gt;</source>
          <target state="translated">우리의 &lt;a href=&quot;https://haxe.org/documentation/introduction/&quot;&gt;소개를보십시오&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38741dd02b84e0f54bddd0737c628ba91b6e6bc4" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;c&lt;/code&gt; has runtime type information.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 에 런타임 유형 정보가 있는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="56baeb6e55e6356e195b15a458d0e2108d0f0a18" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;c&lt;/code&gt; represents the end-of-file (EOF) character.</source>
          <target state="translated">Tells if &lt;code&gt;c&lt;/code&gt; represents the end-of-file (EOF) character.</target>
        </trans-unit>
        <trans-unit id="52f5ae1ced766c937c14fb35de48cee8878876ea" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;e&lt;/code&gt; is a format string, i.e. uses single quotes &lt;code&gt;'&lt;/code&gt; as delimiters.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 가 형식 문자열 인지 여부 를 나타냅니다. 즉, 작은 따옴표 &lt;code&gt;'&lt;/code&gt; 를 구분 기호로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="54d16ff44a03f9f5a266ad4aac7027d1b6709fa6" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is a finite number.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 유한 수 인지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="8a98b3204ac00893fd6e5099e9c967cd24019fbc" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is not a valid number.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 유효한 숫자가 아닌지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="eef02b7df1c1a301528181cfbe9569640d2cff4e" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;f&lt;/code&gt; is true for all elements of &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">경우에 지시 &lt;code&gt;f&lt;/code&gt; 는 모든 요소에 대한 사실 &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f516b714e34a92568adf9fff1c7b045722549a7" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;it&lt;/code&gt; contains &lt;code&gt;elt&lt;/code&gt;.</source>
          <target state="translated">경우에 지시 &lt;code&gt;it&lt;/code&gt; 포함 &lt;code&gt;elt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2189405f46381eb5633f148bc5154cc2ae925c3" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;it&lt;/code&gt; contains an element for which &lt;code&gt;f&lt;/code&gt; is true.</source>
          <target state="translated">경우에 지시 &lt;code&gt;it&lt;/code&gt; 있는 원소가 포함 &lt;code&gt;f&lt;/code&gt; 는 사실이다.</target>
        </trans-unit>
        <trans-unit id="b5c158a00c221a58b48358ce524da90646bdcf3a" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;key&lt;/code&gt; is bound to a value.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 값에 바인딩되어 있는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="6e05fb414d512ea0bfc754d3af2ca3d559f8baf9" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; List is empty.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 목록이 비어 있는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="b41ff8c559301e17c051b597460860f9e832e521" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; regular expression matches String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">경우 알려줍니다 &lt;code&gt;this&lt;/code&gt; 정규 표현식은 문자열과 일치 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2974fb6bd6155b1c93ea87fadedba06d64c3a49f" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;this&lt;/code&gt; regular expression matches a substring of String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 정규 표현식 이 String &lt;code&gt;s&lt;/code&gt; 하위 문자열과 일치 하는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="b98e84272fc251d4f16e364353946ca646e906f4" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;v&lt;/code&gt; is an enum value.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 가 열거 형 값 인지를 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="2cb30437beebf6a2792bcb224f760d7921c62583" translate="yes" xml:space="preserve">
          <source>Tells if &lt;code&gt;v&lt;/code&gt; is an object.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 가 객체 인지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="634f9981ed1a651baf02a637d1948481b3ed5e5f" translate="yes" xml:space="preserve">
          <source>Tells if Iterable &lt;code&gt;it&lt;/code&gt; does not contain any element.</source>
          <target state="translated">의 Iterable 경우 알려줍니다 &lt;code&gt;it&lt;/code&gt; 모든 요소가 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ff0f00ad90cdeb4989ab13b4e7b54d9ad5bbe09" translate="yes" xml:space="preserve">
          <source>Tells if a value &lt;code&gt;v&lt;/code&gt; is of the type &lt;code&gt;t&lt;/code&gt;. Returns &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;v&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; are null.</source>
          <target state="translated">값 &lt;code&gt;v&lt;/code&gt; 가 &lt;code&gt;t&lt;/code&gt; 유형 인지 여부를 알려줍니다 . &lt;code&gt;v&lt;/code&gt; 또는 &lt;code&gt;t&lt;/code&gt; 가 null 인 경우 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d9da2bf3c0320c56f4164dbb3c46621b976a9bfc" translate="yes" xml:space="preserve">
          <source>Tells if compiler directive &lt;code&gt;s&lt;/code&gt; has been set.</source>
          <target state="translated">컴파일러 지시문 경우에 지시 &lt;code&gt;s&lt;/code&gt; 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="91957c73ecdacd8fd94442b78fac8967000439a2" translate="yes" xml:space="preserve">
          <source>Tells if structure &lt;code&gt;o&lt;/code&gt; has a field named &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">구조체 &lt;code&gt;o&lt;/code&gt; 에 field라는 &lt;code&gt;field&lt;/code&gt; 가 있는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="c401ee8ffde4356549052944e113f8c86c30551d" translate="yes" xml:space="preserve">
          <source>Tells if the Element node has a given attribute. Attributes are case-sensitive.</source>
          <target state="translated">요소 노드에 지정된 속성이 있는지 알려줍니다. 속성은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="7b5baab970a5856eeeaa0e3842fbc216b118b3fa" translate="yes" xml:space="preserve">
          <source>Tells if the String is correctly encoded as UTF8.</source>
          <target state="translated">문자열이 UTF8로 올바르게 인코딩되었는지 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="dd6ab23292dacd4065fd616248cdc0f0f76031fa" translate="yes" xml:space="preserve">
          <source>Tells if the character in the string &lt;code&gt;s&lt;/code&gt; at position &lt;code&gt;pos&lt;/code&gt; is a space.</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; 위치 에있는 문자열 &lt;code&gt;s&lt;/code&gt; 의 문자 가 공백 인지 여부를 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="411958aaad10a9249a9ba13b76fab3e9707caed3" translate="yes" xml:space="preserve">
          <source>Tells if the conditional compilation flag &lt;code&gt;s&lt;/code&gt; has been set.</source>
          <target state="translated">Tells if the conditional compilation flag &lt;code&gt;s&lt;/code&gt; has been set.</target>
        </trans-unit>
        <trans-unit id="8d7388cef8ac557114d43ec2efa90ae544842d66" translate="yes" xml:space="preserve">
          <source>Tells if the event can lock the process from exiting (default:true)</source>
          <target state="translated">Tells if the event can lock the process from exiting (default:true)</target>
        </trans-unit>
        <trans-unit id="29f3ae6b152e6643bceeb5604b6c73c014a376be" translate="yes" xml:space="preserve">
          <source>Tells if the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess has a &lt;code&gt;name&lt;/code&gt; metadata entry.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; MetaAccess 의 출처에 &lt;code&gt;name&lt;/code&gt; 메타 데이터 항목 이 있는지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="a2d7805e58c09cc35852fbd7b235edad25d31ca2" translate="yes" xml:space="preserve">
          <source>Tells if the origin of `this` MetaAccess has a `name` metadata entry. If `name` is null, compilation fails with an error.</source>
          <target state="translated">Tells if the origin of `this` MetaAccess has a `name` metadata entry. If `name` is null, compilation fails with an error.</target>
        </trans-unit>
        <trans-unit id="0aedaa3d4b85b1e06c03e58055bed36d9ee66545" translate="yes" xml:space="preserve">
          <source>Tells if the stack is empty.</source>
          <target state="translated">스택이 비어 있는지 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="4099474bf49d1325acdc370308d20ed5003f018f" translate="yes" xml:space="preserve">
          <source>Tells if the string &lt;code&gt;s&lt;/code&gt; ends with the string &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 가 문자열 &lt;code&gt;end&lt;/code&gt; 로 끝나는 지 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="cb06c1b3d5fa84003a9d0cf31339c8e9b8135bcd" translate="yes" xml:space="preserve">
          <source>Tells if the string &lt;code&gt;s&lt;/code&gt; starts with the string &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 가 문자열 &lt;code&gt;start&lt;/code&gt; 로 시작 하는지 여부를 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="72f264888e24e6adca753088925731e94ace0a9f" translate="yes" xml:space="preserve">
          <source>Tells if the structure contains a specified &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">구조체에 지정된 &lt;code&gt;key&lt;/code&gt; 가 포함되어 있는지 여부를 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="8824a03e8121a11b9190b67db94e93c1d15b0ce5" translate="yes" xml:space="preserve">
          <source>Template provides a basic templating mechanism to replace values in a source String, and to have some basic logic.</source>
          <target state="translated">템플릿은 소스 문자열의 값을 바꾸고 기본 논리를 갖도록 기본 템플릿 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="42454697730a1cbc9b75add5b56b3203b80b82f1" translate="yes" xml:space="preserve">
          <source>Template.execute()</source>
          <target state="translated">Template.execute()</target>
        </trans-unit>
        <trans-unit id="95c0c942d96a22c63bac7f3c8e753a09c011dc29" translate="yes" xml:space="preserve">
          <source>Template.globals()</source>
          <target state="translated">Template.globals()</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="10e93232f5ee13cde5c73ae6c73ca6a57a250ad6" translate="yes" xml:space="preserve">
          <source>TestResult</source>
          <target state="translated">TestResult</target>
        </trans-unit>
        <trans-unit id="5771978534ec9caac4c84541cc3f1c7a393abd6e" translate="yes" xml:space="preserve">
          <source>TestResult contains the result of the executed unit tests.</source>
          <target state="translated">TestResult에는 실행 된 단위 테스트 결과가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cf0713b4982e6a2f0170adb1f8c9579ad0d6fb95" translate="yes" xml:space="preserve">
          <source>TestRunner</source>
          <target state="translated">TestRunner</target>
        </trans-unit>
        <trans-unit id="44320de3e55bad908ec4a22b4067142b26237ec3" translate="yes" xml:space="preserve">
          <source>TestStatus</source>
          <target state="translated">TestStatus</target>
        </trans-unit>
        <trans-unit id="250d75267bda967811751f8a8fd083b64d9099c0" translate="yes" xml:space="preserve">
          <source>The (dot-)path of the runtime type.</source>
          <target state="translated">런타임 유형의 (도트) 경로입니다.</target>
        </trans-unit>
        <trans-unit id="8e6d9d90603ab1d3e84d7718d9979a5975425aa0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-read-access&quot;&gt;read access&lt;/a&gt; behavior of the field.</source>
          <target state="translated">필드 의 &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-read-access&quot;&gt;읽기 액세스&lt;/a&gt; 동작</target>
        </trans-unit>
        <trans-unit id="7890cb80813ef3c3a878fcae0a1ffcdc3b27a257" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-write-access&quot;&gt;write access&lt;/a&gt; behavior of the field.</source>
          <target state="translated">필드 의 &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-write-access&quot;&gt;쓰기 액세스&lt;/a&gt; 동작</target>
        </trans-unit>
        <trans-unit id="79307e746e84759212afca4cad12d03a0e7a2997" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://haxe.org/manual/lf-metadata.html&quot;&gt;metadata&lt;/a&gt; the type was annotated with.</source>
          <target state="translated">&lt;a href=&quot;https://haxe.org/manual/lf-metadata.html&quot;&gt;메타&lt;/a&gt; 타입 주석 하였다.</target>
        </trans-unit>
        <trans-unit id="fe040650e3b461c3be6f95215b5abbe23ca5848d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ctypetools#CTypeTools&quot;&gt;CTypeTools&lt;/a&gt;&lt;/code&gt; class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;ctypetools#CTypeTools&quot;&gt;CTypeTools&lt;/a&gt;&lt;/code&gt; class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</target>
        </trans-unit>
        <trans-unit id="0330477b732a5996249467f988d74cb3dfce27c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;fast#Fast&quot;&gt;haxe.xml.Fast&lt;/a&gt;&lt;/code&gt; API helps providing a fast dot-syntax access to the most common &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fast#Fast&quot;&gt;haxe.xml.Fast&lt;/a&gt;&lt;/code&gt; 의 API는 가장 일반적인 빠르고 도트 구문 액세스를 제공하는 데 도움이 &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="e6e242ad80cb4378eec3c918a590c5945fd9e7c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; class is a collection of methods to support functional programming. It is ideally used with &lt;code&gt;using &lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; and then acts as an extension to Iterable types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; 클래스는 프로그래밍 기능을 지원하기위한 방법의 집합이다. &lt;code&gt;using &lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; 를 사용 하는 데 이상적 이며 Iterable 유형의 확장으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="53a56aeee262dcd7e40fb58085f7ab9f247d0af4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt; class allows you to create asynchronous timers on platforms that support events.</source>
          <target state="translated">The &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt; class allows you to create asynchronous timers on platforms that support events.</target>
        </trans-unit>
        <trans-unit id="401b89e8665cf56021aa83ea248b8ef19fe0cd7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; class is the complement to the &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; class. It parses a serialization &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and creates objects from the contained data.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; 의 클래스는에 보완 &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; 클래스입니다. 직렬화 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 구문 분석 하고 포함 된 데이터에서 오브젝트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f667ca07a1b1e65a642d0dfcc791a103a96fd35b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__init__&lt;/code&gt; expression of the class, if available.</source>
          <target state="translated">사용 가능한 경우 클래스 의 &lt;code&gt;__init__&lt;/code&gt; 표현식.</target>
        </trans-unit>
        <trans-unit id="01e0ac1778780942ea34d581f3b1d4eb5b5388f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufsize&lt;/code&gt; optional argument specifies the size of chunks by which data is read and written. Its default value is 4096.</source>
          <target state="translated">&lt;code&gt;bufsize&lt;/code&gt; 선택적 인수는 데이터를 읽고 기록하는 덩어리의 크기를 지정합니다. 기본값은 4096입니다.</target>
        </trans-unit>
        <trans-unit id="767ce0e5a3e1f8a4b7fa5056c83d59c748024f1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bufsize&lt;/code&gt; optional argument specifies the size of chunks by which data is read. Its default value is target-specific.</source>
          <target state="translated">&lt;code&gt;bufsize&lt;/code&gt; 선택적 인수는 데이터를 읽을하는 덩어리의 크기를 지정합니다. 기본값은 대상에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c94673dec5d2b7439dd7831863ec7f1127aa5180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;f&lt;/code&gt; function takes &lt;code&gt;this&lt;/code&gt; EReg object as its first argument and should return a replacement string for the substring matched.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 기능은 얻어 &lt;code&gt;this&lt;/code&gt; 첫 번째 인수로서 EREG 객체와 일치하는 문자열을 대체 문자열을 반환한다.</target>
        </trans-unit>
        <trans-unit id="9cbad905814888ed8c2b34d936b54db9d3ad8ad3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macroCall&lt;/code&gt; should be a String containing valid Haxe expression, similar to &lt;code&gt;--init&lt;/code&gt; macros (see https://haxe.org/manual/macro-initialization.html). Multiple calls with the exact same &lt;code&gt;macroCall&lt;/code&gt; value will only register the callback once.</source>
          <target state="translated">&lt;code&gt;macroCall&lt;/code&gt; 이 유사 유효한 Haxe 표현식을 포함하는 문자열이어야한다 &lt;code&gt;--init&lt;/code&gt; 매크로 (https://haxe.org/manual/macro-initialization.html 참조). 정확히 동일한 &lt;code&gt;macroCall&lt;/code&gt; 값을 가진 여러 호출 은 콜백을 한 번만 등록합니다.</target>
        </trans-unit>
        <trans-unit id="4c46831d15d6107bc7adc67b6ebaff4aacfb1141" translate="yes" xml:space="preserve">
          <source>The CR/LF characters are not included in the resulting string.</source>
          <target state="translated">CR / LF 문자는 결과 문자열에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6efa97f2e182625f315bc29d2bb7b9812ffe4e70" translate="yes" xml:space="preserve">
          <source>The CTypeTools class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">CTypeTools 클래스에는 &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; 인스턴스 를 처리하기위한 몇 가지 추가 기능이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b4b14b4d7f1c12777b14be99fc980520cb4a44aa" translate="yes" xml:space="preserve">
          <source>The Date class provides a basic structure for date and time related information. Date instances can be created by</source>
          <target state="translated">Date 클래스는 날짜 및 시간 관련 정보의 기본 구조를 제공합니다. 날짜 인스턴스는</target>
        </trans-unit>
        <trans-unit id="b1e7197ad8615ffd350d87ca082820cb5db126c7" translate="yes" xml:space="preserve">
          <source>The DateTools class contains some extra functionalities for handling &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt; instances and timestamps.</source>
          <target state="translated">DateTools 클래스에는 &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt; 인스턴스 및 타임 스탬프 를 처리하기위한 몇 가지 추가 기능이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ac3629ccafe086dc62306a399e2accfdebe3c46" translate="yes" xml:space="preserve">
          <source>The EReg class represents regular expressions.</source>
          <target state="translated">EReg 클래스는 정규식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="38f29b5d9b47077010b7fe8b4236f1341f17ca22" translate="yes" xml:space="preserve">
          <source>The Haxe Reflection API allows retrieval of type information at runtime.</source>
          <target state="translated">Haxe Reflection API를 사용하면 런타임시 유형 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ffb2f82c51fcf81c3f94157ffc90b6ec3287d42" translate="yes" xml:space="preserve">
          <source>The Haxe Remoting Socket Protocol is composed of serialized string exchanges. Each string is prefixed with a 2-chars header encoding the string size (up to 4KB) and postfixed with the &lt;code&gt;\0&lt;/code&gt; message delimiting char.</source>
          <target state="translated">Haxe Remoting Socket Protocol은 직렬화 된 문자열 교환으로 구성됩니다. 각 문자열은 문자열 크기 (최대 4KB)를 인코딩하는 2 문자 헤더로 시작하고 &lt;code&gt;\0&lt;/code&gt; 메시지 구분 문자로 접미사가 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa92a35513b710778cdf4db69a995ad4b2bf30a" translate="yes" xml:space="preserve">
          <source>The IO is set into nonblocking mode and some data cannot be read or written</source>
          <target state="translated">IO가 비 차단 모드로 설정되어 일부 데이터를 읽거나 쓸 수 없음</target>
        </trans-unit>
        <trans-unit id="ac9f9ebf78d2dd299115d673459cee9939e73524" translate="yes" xml:space="preserve">
          <source>The Reflect API is a way to manipulate values dynamically through an abstract interface in an untyped manner. Use with care.</source>
          <target state="translated">Reflect API는 형식화되지 않은 방식으로 추상 인터페이스를 통해 동적으로 값을 조작하는 방법입니다. 주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c0cbc7ec2ff1f35d67992c58ee30318b8ac804d3" translate="yes" xml:space="preserve">
          <source>The Serializer class can be used to encode values and objects into a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, from which the &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; class can recreate the original representation.</source>
          <target state="translated">시리얼 클래스는 값으로 인코딩 및 개체에 사용될 수있는 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 있는, &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; 의 클래스가 원래의 표현을 재현 할 수있다.</target>
        </trans-unit>
        <trans-unit id="8bb8fc14263503d4a0ef89c1bc97f59281f073a6" translate="yes" xml:space="preserve">
          <source>The Std class provides standard methods for manipulating basic types.</source>
          <target state="translated">Std 클래스는 기본 유형을 조작하기위한 표준 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="df1e050dc3b7f7cc004539f97a0127fde439f0ae" translate="yes" xml:space="preserve">
          <source>The TestCase can be tested using &lt;code&gt;&lt;a href=&quot;testrunner#TestRunner&quot;&gt;TestRunner&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">TestCase는 &lt;code&gt;&lt;a href=&quot;testrunner#TestRunner&quot;&gt;TestRunner&lt;/a&gt;&lt;/code&gt; 를 사용하여 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e161946c0bbe0310a7b3e27d9139fbf387b3ed2" translate="yes" xml:space="preserve">
          <source>The Timer class allows you to create asynchronous timers on platforms that support events.</source>
          <target state="translated">Timer 클래스를 사용하면 이벤트를 지원하는 플랫폼에서 비동기 타이머를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a3969b55f4af09fa755caed6df48e400a3e558b" translate="yes" xml:space="preserve">
          <source>The XML string built with all the sub nodes, excluding the current one.</source>
          <target state="translated">현재 하위 노드를 제외한 모든 하위 노드로 작성된 XML 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9a884d9acbe4d995cb867332aafb0904dac92ee3" translate="yes" xml:space="preserve">
          <source>The [metadata](https://haxe.org/manual/lf-metadata.html) the type was annotated with.</source>
          <target state="translated">유형에 주석이 추가 된 [메타 데이터] (https://haxe.org/manual/lf-metadata.html)</target>
        </trans-unit>
        <trans-unit id="86c9be5b155dec48c856fb6eedf8118bf522d0e8" translate="yes" xml:space="preserve">
          <source>The [read access](https://haxe.org/manual/class-field-property.html#define-read-access) behavior of the field.</source>
          <target state="translated">필드의 [읽기 액세스] (https://haxe.org/manual/class-field-property.html#define-read-access) 동작입니다.</target>
        </trans-unit>
        <trans-unit id="6ef19b13c3826579dcb4d3db996d2df7ebd8d7a0" translate="yes" xml:space="preserve">
          <source>The [write access](https://haxe.org/manual/class-field-property.html#define-write-access) behavior of the field.</source>
          <target state="translated">필드의 [쓰기 액세스] (https://haxe.org/manual/class-field-property.html#define-write-access) 동작입니다.</target>
        </trans-unit>
        <trans-unit id="04362d0001208be4f88279be594d552ebf6f8eba" translate="yes" xml:space="preserve">
          <source>The `__init__` expression of the class, if available.</source>
          <target state="translated">가능한 경우 클래스의`__init__` 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="76eb7e246eeacc1df76682ed86eb7f501ea77659" translate="yes" xml:space="preserve">
          <source>The abstract type runtime information.</source>
          <target state="translated">추상 타입 런타임 정보.</target>
        </trans-unit>
        <trans-unit id="33b1c192c874cad2d4b7ee8f99fdf0cb24b467ce" translate="yes" xml:space="preserve">
          <source>The access modifiers of the field. By default fields have private access.</source>
          <target state="translated">필드의 액세스 수정 자 기본적으로 필드에는 개인 액세스 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c5e56a23699b3f43aa551bb6832a8bdbea36218" translate="yes" xml:space="preserve">
          <source>The access modifiers of the field. By default fields have private access. @see https://haxe.org/manual/class-field-access-modifier.html</source>
          <target state="translated">필드의 액세스 수정 자입니다. 기본적으로 필드에는 비공개 액세스 권한이 있습니다. @see https://haxe.org/manual/class-field-access-modifier.html</target>
        </trans-unit>
        <trans-unit id="5455b5901b3bddcea67f54880f0e3be5ee319f6a" translate="yes" xml:space="preserve">
          <source>The accuracy of this may be platform-dependent.</source>
          <target state="translated">이것의 정확성은 플랫폼에 따라 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a21a48351bcabb62d7fb25d9e1ff70a186df45a" translate="yes" xml:space="preserve">
          <source>The actual expression of the field or &lt;code&gt;null&lt;/code&gt; if there is no expression.</source>
          <target state="translated">필드의 실제 표현식이거나 표현식이없는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bfab03f0df5c7b7f63e965abb62c82ba332db49e" translate="yes" xml:space="preserve">
          <source>The actual expression of the field or `null` if there is no expression.</source>
          <target state="translated">필드의 실제 표현식 또는 표현식이없는 경우 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="f0d5a6d1eeb9c334a915606298ab6166fe409819" translate="yes" xml:space="preserve">
          <source>The actual macro implemented for Std.format</source>
          <target state="translated">Std.format을 위해 구현 된 실제 매크로</target>
        </trans-unit>
        <trans-unit id="207a2e0bbbb519a33a869447fd6df78234be31ec" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;contextOptions&lt;/code&gt; determines which context (normal, macro or both) this affects.</source>
          <target state="translated">&lt;code&gt;contextOptions&lt;/code&gt; 인수는 이것이 영향을 미치는 컨텍스트 (일반, 매크로 또는 둘 다)를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="b414fc316d9c9e0932966ef92c7ea183b9a70279" translate="yes" xml:space="preserve">
          <source>The array of parameters types.</source>
          <target state="translated">매개 변수 유형의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2f6c5bfa8cd922eaeeceec09a200f17a603a6eb2" translate="yes" xml:space="preserve">
          <source>The associated documentation of the class field.</source>
          <target state="translated">클래스 필드의 관련 문서</target>
        </trans-unit>
        <trans-unit id="243881ddac02cf6c56f8d62a647676930d77b8b9" translate="yes" xml:space="preserve">
          <source>The associated documentation of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 관련 설명서</target>
        </trans-unit>
        <trans-unit id="a394ceefae87e128a968c804c5d10d3f2c37295e" translate="yes" xml:space="preserve">
          <source>The available enum constructors.</source>
          <target state="translated">사용 가능한 열거 형 생성자</target>
        </trans-unit>
        <trans-unit id="a3bdba3abbede096a765ff7e5ba57dc717c2342e" translate="yes" xml:space="preserve">
          <source>The available implicit from-casts of the abstract.</source>
          <target state="translated">초록의 사용 가능한 암시 적 캐스트.</target>
        </trans-unit>
        <trans-unit id="5a785e639b65a633101af41f7a5369f9e7d401e1" translate="yes" xml:space="preserve">
          <source>The available implicit from-casts of the abstract. @see https://haxe.org/manual/types-abstract-implicit-casts.html</source>
          <target state="translated">추상의 사용 가능한 암시 적 From- 캐스트입니다. @see https://haxe.org/manual/types-abstract-implicit-casts.html</target>
        </trans-unit>
        <trans-unit id="1adb5f46f1cc7d240da10a3b8280de9dcd6e6717" translate="yes" xml:space="preserve">
          <source>The available implicit to-casts of the abstract.</source>
          <target state="translated">초록의 사용 가능한 암시 적 캐스트.</target>
        </trans-unit>
        <trans-unit id="0770f3b6754af7fe1e873889af485a4a439187dc" translate="yes" xml:space="preserve">
          <source>The available implicit to-casts of the abstract. @see https://haxe.org/manual/types-abstract-implicit-casts.html</source>
          <target state="translated">추상의 사용 가능한 암시 적 to-cast입니다. @see https://haxe.org/manual/types-abstract-implicit-casts.html</target>
        </trans-unit>
        <trans-unit id="e61c59e9c725a644203b8dc40287991c5375dea6" translate="yes" xml:space="preserve">
          <source>The basic String class.</source>
          <target state="translated">기본 문자열 클래스</target>
        </trans-unit>
        <trans-unit id="8aad5843d06b7ebf8bbca7fde6cc9105c376d2dd" translate="yes" xml:space="preserve">
          <source>The behaviour of a Date instance is only consistent across platforms if the the arguments describe a valid date.</source>
          <target state="translated">Date 인스턴스의 동작은 인수가 유효한 날짜를 설명하는 경우에만 플랫폼간에 일관됩니다.</target>
        </trans-unit>
        <trans-unit id="7bd50bc432fd2dcf904e83a7b5c7783aba0bf893" translate="yes" xml:space="preserve">
          <source>The buffer is not emptied by this operation.</source>
          <target state="translated">이 조작으로 버퍼를 비우지 않습니다.</target>
        </trans-unit>
        <trans-unit id="af720d5c8314e0ce624108bf39f4153d0508a890" translate="yes" xml:space="preserve">
          <source>The callback may return a type definition, which is then used for the expected type. If it returns &lt;code&gt;null&lt;/code&gt;, the type is considered to still not exist.</source>
          <target state="translated">콜백은 유형 정의를 반환 할 수 있으며, 이는 예상 유형에 사용됩니다. &lt;code&gt;null&lt;/code&gt; 을 반환 하면 유형이 아직 존재하지 않는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e4f6bc42f146966dadda56e6b9626e2984ce393b" translate="yes" xml:space="preserve">
          <source>The callback may return a type definition, which is then used for the expected type. If it returns null, the type is considered to still not exist.</source>
          <target state="translated">콜백은 타입 정의를 반환 할 수 있으며, 그런 다음 예상 타입에 사용됩니다. null을 반환하면 형식이 여전히 존재하지 않는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="0269409f600377c04a93d4694fa0b82212959363" translate="yes" xml:space="preserve">
          <source>The callback receives an &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; containing all types which are about to be generated. Modifications are limited to metadata, it is mainly intended to obtain information.</source>
          <target state="translated">콜백은 생성 될 모든 유형을 포함 하는 &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 을 받습니다 . 수정은 메타 데이터로 제한되며 주로 정보를 얻기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="43e2d28c783a6065f165a4b9db928372d4b7af86" translate="yes" xml:space="preserve">
          <source>The class field kind.</source>
          <target state="translated">클래스 필드 종류.</target>
        </trans-unit>
        <trans-unit id="3c329817953f539a35aec1ad738645c7b43f9d7e" translate="yes" xml:space="preserve">
          <source>The class fields of the structure.</source>
          <target state="translated">구조의 클래스 필드</target>
        </trans-unit>
        <trans-unit id="3085c9d10478fbf85c11f20192831c5c0d0f5163" translate="yes" xml:space="preserve">
          <source>The class name does not include any type parameters.</source>
          <target state="translated">클래스 이름에는 유형 매개 변수가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="218ec9c2a230410bf07f05a266fd2f92e8347697" translate="yes" xml:space="preserve">
          <source>The class name must not include any type parameters.</source>
          <target state="translated">클래스 이름에는 유형 매개 변수가 포함되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="1427aa8f0a9d99efaeef1f7ddb8a76550aeaefae" translate="yes" xml:space="preserve">
          <source>The class name of the unit test.</source>
          <target state="translated">단위 테스트의 클래스 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fc9b23521af273b06a648a577d50b535b71cc002" translate="yes" xml:space="preserve">
          <source>The class' parent class defined by its type path and list of type parameters.</source>
          <target state="translated">형식 경로와 형식 매개 변수 목록으로 정의 된 클래스의 부모 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f4b55b4ccd61ba7b3f2a5aaddba9ab773131ad9b" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">상수의 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a13a88443d63ce0d7fb8d8c88a734295fda6f2c8" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">상수 &lt;code&gt;super&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="031879354dec4dadc92c3eed8446ac587551b36a" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">상수 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb1ea03411d9e01c422c3aaefb5c8ee45658baf3" translate="yes" xml:space="preserve">
          <source>The constructor indices are preserved from Haxe syntax, so the first declared is index 0, the next index 1 etc.</source>
          <target state="translated">생성자 인덱스는 Haxe 구문에서 유지되므로 선언 된 첫 번째는 인덱스 0, 다음 인덱스 1 등입니다.</target>
        </trans-unit>
        <trans-unit id="b18b174951d2df9bb3829229554fa2795f18444a" translate="yes" xml:space="preserve">
          <source>The constructor of the class, if available.</source>
          <target state="translated">사용 가능한 경우 클래스의 생성자.</target>
        </trans-unit>
        <trans-unit id="bc57ecc42c0662c15c6701504941ae2395b84f25" translate="yes" xml:space="preserve">
          <source>The corresponding enum instance type is &lt;code&gt;&lt;a href=&quot;enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">해당 열거 형 인스턴스 유형은 &lt;code&gt;&lt;a href=&quot;enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2d1363bbbd9083b5fec877ad1029a02c13f11aa4" translate="yes" xml:space="preserve">
          <source>The current corresponding &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; node.</source>
          <target state="translated">현재 해당 &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; 노드</target>
        </trans-unit>
        <trans-unit id="ec9d3d504d258cafb20a658cb8c5fd36ac98066f" translate="yes" xml:space="preserve">
          <source>The current position in the stream in bytes.</source>
          <target state="translated">스트림의 현재 위치 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="3dd974852708a1e584e643f015ee9a38b950fda7" translate="yes" xml:space="preserve">
          <source>The current test status of the TestRunner.</source>
          <target state="translated">TestRunner의 현재 테스트 상태입니다.</target>
        </trans-unit>
        <trans-unit id="feb73a86a60c4e5b9998b325d9593fe4ccb6c4d5" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;1&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f417e72b255ca37088c68c509fbf9484ab353d21" translate="yes" xml:space="preserve">
          <source>The defined array-access fields of the abstract.</source>
          <target state="translated">초록의 정의 된 배열 액세스 필드</target>
        </trans-unit>
        <trans-unit id="1ca0f6042af8c243ca94edb36584a92b4b58fca5" translate="yes" xml:space="preserve">
          <source>The defined binary operators of the abstract.</source>
          <target state="translated">초록의 정의 된 이진 연산자.</target>
        </trans-unit>
        <trans-unit id="be2d08d568b995572b03bdeea09beb8b0a524c8c" translate="yes" xml:space="preserve">
          <source>The defined unary operators of the abstract.</source>
          <target state="translated">초록의 정의 된 단항 연산자.</target>
        </trans-unit>
        <trans-unit id="9454873ae6ba3d398f0d05bea045bfcd833bc858" translate="yes" xml:space="preserve">
          <source>The difference is passed as argument to &lt;code&gt;&lt;a href=&quot;log#trace&quot;&gt;Log.trace&lt;/a&gt;()&lt;/code&gt;, with &lt;code&gt;&quot;s&quot;&lt;/code&gt; appended to denote the unit. The optional &lt;code&gt;pos&lt;/code&gt; argument is passed through.</source>
          <target state="translated">차이점은에 인수로 전달 &lt;code&gt;&lt;a href=&quot;log#trace&quot;&gt;Log.trace&lt;/a&gt;()&lt;/code&gt; 와 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 유닛을 나타 내기 위해 첨부. 선택적 &lt;code&gt;pos&lt;/code&gt; 인수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="34b1953579ebedfaf3c7716c60fe86c37e63221a" translate="yes" xml:space="preserve">
          <source>The difference is passed as argument to Log.trace(), with &quot;s&quot; appended to denote the unit. The optional &lt;code&gt;pos&lt;/code&gt; argument is passed through.</source>
          <target state="translated">차이는 Log.trace ()에 인수로 전달되며 단위를 나타 내기 위해 &quot;s&quot;가 추가됩니다. 선택적 &lt;code&gt;pos&lt;/code&gt; 인수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="765d59014c9da019c33de93794c6fe04f7d7afb1" translate="yes" xml:space="preserve">
          <source>The different possible runtime types of a value.</source>
          <target state="translated">다른 가능한 런타임 유형의 값입니다.</target>
        </trans-unit>
        <trans-unit id="4154e46fdff4fa4556678c9723d0158bc0379eb2" translate="yes" xml:space="preserve">
          <source>The directory.</source>
          <target state="translated">디렉토리.</target>
        </trans-unit>
        <trans-unit id="c42406de1a6c84f08fe6eb21a12ea6c786ebf630" translate="yes" xml:space="preserve">
          <source>The documentation of the constructor. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the constructor has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">생성자의 문서. 이 정보는 컴파일러 플래그 &lt;code&gt;-D use_rtti_doc&lt;/code&gt; 가있는 경우에만 사용할 수 있습니다 . 그렇지 않은 경우 또는 생성자에 문서가없는 경우 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2731dd4a281a144f3bcb32713ebc75a9faf0d474" translate="yes" xml:space="preserve">
          <source>The documentation of the constructor. This information is only available if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if the constructor has no documentation, the value is `null`.</source>
          <target state="translated">생성자의 문서. 이 정보는 컴파일러 플래그`-D use_rtti_doc`가있는 경우에만 사용할 수 있습니다. 그렇지 않은 경우 또는 생성자에 문서가없는 경우 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="2e72f68a8da4b3447510cfc78e7e70ec233cf33b" translate="yes" xml:space="preserve">
          <source>The documentation of the field, if available. If the field has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 경우 현장 문서. 필드에 문서가없는 경우 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d5736637252ef4fb373549f2944b2a0a86b04797" translate="yes" xml:space="preserve">
          <source>The documentation of the field, if available. If the field has no documentation, the value is `null`.</source>
          <target state="translated">필드의 문서 (사용 가능한 경우). 필드에 문서가없는 경우 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="50ba8d2f599030c6ab747357e428c66148f55352" translate="yes" xml:space="preserve">
          <source>The documentation of the field. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the field has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">현장 문서. 이 정보는 컴파일러 플래그 &lt;code&gt;-D use_rtti_doc&lt;/code&gt; 가있는 경우에만 사용할 수 있습니다 . 그렇지 않은 경우 또는 필드에 문서가없는 경우 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d18460dd9aa997637c7a86d99e8d68b2d86b3162" translate="yes" xml:space="preserve">
          <source>The documentation of the field. This information is only available if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if the field has no documentation, the value is `null`.</source>
          <target state="translated">현장의 문서. 이 정보는 컴파일러 플래그`-D use_rtti_doc`가있는 경우에만 사용할 수 있습니다. 그렇지 않은 경우 또는 필드에 문서가없는 경우 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="89d900407fd84567fc2aa24ea1dec8f0812dfad9" translate="yes" xml:space="preserve">
          <source>The documentation of the type, if available. If the type has no documentation, the value is `null`.</source>
          <target state="translated">가능한 경우 유형의 문서입니다. 유형에 문서가없는 경우 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="f82a1a1f0545aa788f5ea197fc6057b9086b05ef" translate="yes" xml:space="preserve">
          <source>The documentation of the type. This information is only available if the compiler flag &lt;code&gt;-D use_rtti_doc&lt;/code&gt; was in place. Otherwise, or if the constructor has no documentation, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">유형의 문서. 이 정보는 컴파일러 플래그 &lt;code&gt;-D use_rtti_doc&lt;/code&gt; 가있는 경우에만 사용할 수 있습니다 . 그렇지 않은 경우 또는 생성자에 문서가없는 경우 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c74179ae3850dc18d040708c8ac0f85591aaa9cd" translate="yes" xml:space="preserve">
          <source>The documentation of the type. This information is only available if the compiler flag `-D use_rtti_doc` was in place. Otherwise, or if the constructor has no documentation, the value is `null`.</source>
          <target state="translated">유형의 문서입니다. 이 정보는 컴파일러 플래그`-D use_rtti_doc`가있는 경우에만 사용할 수 있습니다. 그렇지 않은 경우 또는 생성자에 문서가없는 경우 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="113e97df707d6edf762a990d110a86f46c941a51" translate="yes" xml:space="preserve">
          <source>The element is removed from &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">요소 &lt;code&gt;this&lt;/code&gt; 목록 에서 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="d568350142de9f873e778a54dd2025807c7fe322" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity, so &lt;code&gt;a[i] == &lt;a href=&quot;vector#fromArrayCopy&quot;&gt;Vector.fromArrayCopy&lt;/a&gt;(a).get(i)&lt;/code&gt; is true for any valid i.</source>
          <target state="translated">요소는 복사되지 않고 ID를 유지하므로 유효한 i에 대해 &lt;code&gt;a[i] == &lt;a href=&quot;vector#fromArrayCopy&quot;&gt;Vector.fromArrayCopy&lt;/a&gt;(a).get(i)&lt;/code&gt; 가 true입니다.</target>
        </trans-unit>
        <trans-unit id="768209c3b451ade65ad765e0a6193f958a2edc27" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity, so &lt;code&gt;a[i] == a.copy()[i]&lt;/code&gt; is true for any valid &lt;code&gt;i&lt;/code&gt;. However, &lt;code&gt;a == a.copy()&lt;/code&gt; is always false.</source>
          <target state="translated">요소는 복사되지 않고 ID를 유지하므로 유효한 &lt;code&gt;i&lt;/code&gt; 에 대해 &lt;code&gt;a[i] == a.copy()[i]&lt;/code&gt; 가 true입니다 . 그러나 &lt;code&gt;a == a.copy()&lt;/code&gt; 는 항상 false입니다.</target>
        </trans-unit>
        <trans-unit id="1ace532b99be5d83f22918ae674b67c269a5907c" translate="yes" xml:space="preserve">
          <source>The elements are not copied and retain their identity.</source>
          <target state="translated">요소는 복사되지 않으며 ID를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="2d9567b2fdf21e62a947b8ff5a22c759aac7a259" translate="yes" xml:space="preserve">
          <source>The enum name does not include any type parameters.</source>
          <target state="translated">열거 형 이름에는 형식 매개 변수가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30f47e462cf376a4d16cc80b60671cb45073f3c1" translate="yes" xml:space="preserve">
          <source>The enum name must not include any type parameters.</source>
          <target state="translated">열거 형 이름에는 형식 매개 변수가 포함되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="8ae4c569d5ce598b18334663a129cd3aafc5e7df" translate="yes" xml:space="preserve">
          <source>The enum runtime type information.</source>
          <target state="translated">열거 형 런타임 유형 정보입니다.</target>
        </trans-unit>
        <trans-unit id="725c0f05348b5b773c05f4d9a43dc1ef68710aa7" translate="yes" xml:space="preserve">
          <source>The error message of the unit test method.</source>
          <target state="translated">단위 테스트 방법의 오류 메시지.</target>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="64f9e2c9637f49f4e0ed50c047efae396d8daf72" translate="yes" xml:space="preserve">
          <source>The exact format specification can be found here: https://haxe.org/manual/serialization/format</source>
          <target state="translated">정확한 형식 사양은 https://haxe.org/manual/serialization/format에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20be7daf9f1c1f383dd53eaf23ab51ee2fd3f22e" translate="yes" xml:space="preserve">
          <source>The exact representation depends on the platform and key-type.</source>
          <target state="translated">정확한 표현은 플랫폼과 키 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2102190701ac70dee7a32f957265e47f140ac2ec" translate="yes" xml:space="preserve">
          <source>The exact representation of &lt;code&gt;x&lt;/code&gt; may vary per platform. To get more consistent behavior, this function should be called with Std.string(x).</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 정확한 표현은 플랫폼마다 다를 수 있습니다. 보다 일관된 동작을 얻으려면 Std.string (x)을 사용하여이 함수를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="26feec8f5ec8c3799b70b86a08297d9cfdb19559" translate="yes" xml:space="preserve">
          <source>The expression kind.</source>
          <target state="translated">표현 종류.</target>
        </trans-unit>
        <trans-unit id="b64aa494f19d09a69d9d61be6771b6329aca7799" translate="yes" xml:space="preserve">
          <source>The expression of the case, if available.</source>
          <target state="translated">가능한 경우 케이스의 표현.</target>
        </trans-unit>
        <trans-unit id="35b3d05474226b50168c712dae1afa6fe86804a5" translate="yes" xml:space="preserve">
          <source>The expression of the catch.</source>
          <target state="translated">캐치의 표현.</target>
        </trans-unit>
        <trans-unit id="718d2d0a761f68dce6f830fd44ae82785e1b4cab" translate="yes" xml:space="preserve">
          <source>The expression of the function body, if available.</source>
          <target state="translated">사용 가능한 경우 함수 본문의 표현입니다.</target>
        </trans-unit>
        <trans-unit id="a73c97109e4013a82b8199321546b0c0dca45268" translate="yes" xml:space="preserve">
          <source>The expression of the function body.</source>
          <target state="translated">함수 본문의 표현.</target>
        </trans-unit>
        <trans-unit id="e2bc03d778dc6529545d0f6c5de457282bb36f3d" translate="yes" xml:space="preserve">
          <source>The expression of the variable, if available.</source>
          <target state="translated">사용 가능한 경우 변수의 표현.</target>
        </trans-unit>
        <trans-unit id="612a79bfc8f73484a2d8ff1e536ee51a52fb93b0" translate="yes" xml:space="preserve">
          <source>The fields of the type definition.</source>
          <target state="translated">유형 정의의 필드</target>
        </trans-unit>
        <trans-unit id="78e4813edd411db97295525bc672ab0cae480132" translate="yes" xml:space="preserve">
          <source>The file extension.</source>
          <target state="translated">파일 확장자입니다.</target>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="19bb1935623ea3eb5deac517ee415f826ee95051" translate="yes" xml:space="preserve">
          <source>The final character is not included in the resulting string.</source>
          <target state="translated">최종 문자는 결과 문자열에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31eccb2b671fe0bf07355f897f944bf0c5c2be78" translate="yes" xml:space="preserve">
          <source>The first argument &lt;code&gt;haxe&lt;/code&gt; is a string with regular expression pattern.</source>
          <target state="translated">첫 번째 인수 &lt;code&gt;haxe&lt;/code&gt; 는 정규식 패턴이있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="755ce70352f84be96ec285060b43aaf1bf0ebc63" translate="yes" xml:space="preserve">
          <source>The first invocation occurs after &lt;code&gt;time_ms&lt;/code&gt; milliseconds, not immediately.</source>
          <target state="translated">첫 번째 호출은 즉시가 아니라 &lt;code&gt;time_ms&lt;/code&gt; 밀리 초 후에 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="55094cde8d47075c999cb003e416ab35b9017b99" translate="yes" xml:space="preserve">
          <source>The first two formats are expressed in local time, the third in UTC Epoch.</source>
          <target state="translated">처음 두 형식은 현지 시간으로 표시되며 세 번째 형식은 UTC Epoch입니다.</target>
        </trans-unit>
        <trans-unit id="f0b6d5cfe92d03e0dce61c3919255c1437e3fea6" translate="yes" xml:space="preserve">
          <source>The first two formats expressed a date in local time. The third is a time relative to the UTC epoch.</source>
          <target state="translated">처음 두 형식은 날짜를 현지 시간으로 표현했습니다. 세 번째는 UTC 시대에 상대적인 시간입니다.</target>
        </trans-unit>
        <trans-unit id="60ce8db39472eb2302e7637a11a401e574af1f49" translate="yes" xml:space="preserve">
          <source>The following replacements are made:</source>
          <target state="translated">다음과 같이 교체됩니다.</target>
        </trans-unit>
        <trans-unit id="4391ed5de7c6f85557ebb7e719b38621406e36be" translate="yes" xml:space="preserve">
          <source>The following types are considered compound:</source>
          <target state="translated">다음 유형은 복합으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="720a9053eee85ae44276dd0e42c81c7fa73e45ef" translate="yes" xml:space="preserve">
          <source>The full slash path of the .hx file containing the type. This might be &lt;code&gt;null&lt;/code&gt; in case there is no such file, e.g. if the type is defined through a macro.</source>
          <target state="translated">유형을 포함하는 .hx 파일의 전체 슬래시 경로입니다. 이러한 파일이없는 경우 (예 : 유형이 매크로를 통해 정의 된 경우) &lt;code&gt;null&lt;/code&gt; 이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae2398b1d159946e13e42217442f94e5ae30cfd8" translate="yes" xml:space="preserve">
          <source>The full slash path of the .hx file containing the type. This might be `null` in case there is no such file, e.g. if the type is defined through a macro.</source>
          <target state="translated">유형이 포함 된 .hx 파일의 전체 슬래시 경로입니다. 이러한 파일이없는 경우 (예 : 매크로를 통해 유형이 정의 된 경우) 'null'일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28d5319267b752b1b474126d5a20dbb4ac9e1365" translate="yes" xml:space="preserve">
          <source>The function argument runtime type information.</source>
          <target state="translated">함수 인수 런타임 유형 정보.</target>
        </trans-unit>
        <trans-unit id="79d4270dbe8f1054f70d00dc00aeec7e70230753" translate="yes" xml:space="preserve">
          <source>The general runtime type information.</source>
          <target state="translated">일반 런타임 유형 정보</target>
        </trans-unit>
        <trans-unit id="e5477604c5e73f4cf1e3141d1029764f52d81568" translate="yes" xml:space="preserve">
          <source>The generated name is an implementation detail and should not be relied upon.</source>
          <target state="translated">생성 된 이름은 구현 세부 사항이며 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="77c71e43109222f6e47f059494ae3c99f62647de" translate="yes" xml:space="preserve">
          <source>The implementation class of the abstract, if available.</source>
          <target state="translated">가능한 경우 초록의 구현 클래스.</target>
        </trans-unit>
        <trans-unit id="535cf539bd22ec409949f430e1c6c857d65f4199" translate="yes" xml:space="preserve">
          <source>The implemented interfaces and their type parameters.</source>
          <target state="translated">구현 된 인터페이스 및 해당 유형 매개 변수</target>
        </trans-unit>
        <trans-unit id="3207e26d3d01eab37cc7493bf943dd4ba0d9353d" translate="yes" xml:space="preserve">
          <source>The index &lt;code&gt;n&lt;/code&gt; corresponds to the n-th set of parentheses in the pattern of &lt;code&gt;this&lt;/code&gt; EReg. If no such sub-group exists, an exception is thrown.</source>
          <target state="translated">인덱스 &lt;code&gt;n&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; EReg 패턴에서 n 번째 괄호 세트에 해당합니다 . 그러한 하위 그룹이 존재하지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="40fb745f1fe6cb8af31fd0337dfabcc6388c6b3d" translate="yes" xml:space="preserve">
          <source>The index &lt;code&gt;n&lt;/code&gt; corresponds to the n-th set of parentheses in the pattern of &lt;code&gt;this&lt;/code&gt; EReg. If no such sub-group exists, the result is unspecified.</source>
          <target state="translated">인덱스 &lt;code&gt;n&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; EReg 패턴의 n 번째 괄호 집합에 해당합니다 . 그러한 하위 그룹이 없으면 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="733d8fd642c28707705a88cc5d48a8893efbb71a" translate="yes" xml:space="preserve">
          <source>The index of the enum constructor, i.e. in which position it appears in the syntax.</source>
          <target state="translated">열거 형 생성자의 색인, 즉 구문에 표시되는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="63d38994d797295978802c7ac7d9b8aad4f054f6" translate="yes" xml:space="preserve">
          <source>The individual &lt;code&gt;types&lt;/code&gt; can reference each other and any identifier respects the &lt;code&gt;imports&lt;/code&gt; and &lt;code&gt;usings&lt;/code&gt; as usual, expect that imports are not allowed to have &lt;code&gt;.*&lt;/code&gt; wildcards or &lt;code&gt;as s&lt;/code&gt; shorthands.</source>
          <target state="translated">각각의 &lt;code&gt;types&lt;/code&gt; 각각의 다른 어떤 식별자면 참조 할 &lt;code&gt;imports&lt;/code&gt; 과 &lt;code&gt;usings&lt;/code&gt; 평소처럼 그 수입을 가질 수 없다 예상 &lt;code&gt;.*&lt;/code&gt; 와일드 카드 또는 &lt;code&gt;as s&lt;/code&gt; shorthands.</target>
        </trans-unit>
        <trans-unit id="029abef2b12a92956e4bb40ff87e82b4e9f97037" translate="yes" xml:space="preserve">
          <source>The individual &lt;code&gt;types&lt;/code&gt; can reference each other and any identifier respects the &lt;code&gt;imports&lt;/code&gt; and &lt;code&gt;usings&lt;/code&gt; as usual, expect that imports are not allowed to have &lt;code&gt;.*&lt;/code&gt; wildcards or &lt;code&gt;in s&lt;/code&gt; shorthands.</source>
          <target state="translated">각각의 &lt;code&gt;types&lt;/code&gt; 각각의 다른 어떤 식별자면 참조 할 &lt;code&gt;imports&lt;/code&gt; 과 &lt;code&gt;usings&lt;/code&gt; 평소처럼 그 수입을 가질 수 없다 예상 &lt;code&gt;.*&lt;/code&gt; 와일드 카드 또는 &lt;code&gt;in s&lt;/code&gt; shorthands.</target>
        </trans-unit>
        <trans-unit id="19127d38c1cf26a3b7badf31df96e6dfb6d4fbcf" translate="yes" xml:space="preserve">
          <source>The individual cache setting for &lt;code&gt;this&lt;/code&gt; Serializer instance.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Serializer 인스턴스 의 개별 캐시 설정입니다 .</target>
        </trans-unit>
        <trans-unit id="e484922f2adc7b170c48f96ee69e2dd7b8f1b924" translate="yes" xml:space="preserve">
          <source>The individual elements are not duplicated and retain their identity.</source>
          <target state="translated">개별 요소는 복제되지 않으며 자신의 정체성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="39b13e1036ae02c700a2939aa45c6b244a3572bb" translate="yes" xml:space="preserve">
          <source>The individual enum index setting for &lt;code&gt;this&lt;/code&gt; Serializer instance.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Serializer 인스턴스 의 개별 열거 인덱스 설정입니다 .</target>
        </trans-unit>
        <trans-unit id="7e4128faf7af403e5bcef679b827d7377c8079a6" translate="yes" xml:space="preserve">
          <source>The information that all types (&lt;code&gt;&lt;a href=&quot;classtype#ClassType&quot;&gt;ClassType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;enumtype#EnumType&quot;&gt;EnumType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deftype#DefType&quot;&gt;DefType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;abstracttype#AbstractType&quot;&gt;AbstractType&lt;/a&gt;&lt;/code&gt;) have in common.</source>
          <target state="translated">모든 유형 ( &lt;code&gt;&lt;a href=&quot;classtype#ClassType&quot;&gt;ClassType&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;enumtype#EnumType&quot;&gt;EnumType&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;deftype#DefType&quot;&gt;DefType&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;abstracttype#AbstractType&quot;&gt;AbstractType&lt;/a&gt;&lt;/code&gt; )이 공통적으로 가지고있는 정보입니다.</target>
        </trans-unit>
        <trans-unit id="6de0c2264459ecc7421afacb0767933dbb6ae9e2" translate="yes" xml:space="preserve">
          <source>The inner PCDATA or CDATA of the node.</source>
          <target state="translated">노드의 내부 PCDATA 또는 CDATA</target>
        </trans-unit>
        <trans-unit id="7a56ad88457359bbe2f05b2a3297b67d0a78ce0d" translate="yes" xml:space="preserve">
          <source>The intended usage is to bind it to a custom function:</source>
          <target state="translated">의도 된 사용법은이를 사용자 정의 함수에 바인딩하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7657fed19e1481e97233dc04c0d105b3fecababe" translate="yes" xml:space="preserve">
          <source>The intended usage is to create an instance of the &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt; class with a given interval, set its &lt;code&gt;run()&lt;/code&gt; method to a custom function to be invoked and eventually call &lt;code&gt;stop()&lt;/code&gt; to stop the &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">의도 된 사용법은 주어진 간격으로 &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt; 클래스 의 인스턴스를 만들고 &lt;code&gt;run()&lt;/code&gt; 메서드를 호출 할 사용자 정의 함수로 설정 한 다음 결국 &lt;code&gt;stop()&lt;/code&gt; 을 호출 하여 &lt;code&gt;&lt;a href=&quot;timer#Timer&quot;&gt;Timer&lt;/a&gt;&lt;/code&gt; 를 중지하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4d6af3bc4f201dd4ca4bc9c195877a46fc256a74" translate="yes" xml:space="preserve">
          <source>The intended usage is to create an instance of the Timer class with a given interval, set its run() method to a custom function to be invoked and eventually call stop() to stop the Timer.</source>
          <target state="translated">지정된 사용법은 주어진 간격으로 Timer 클래스의 인스턴스를 만들고 run () 메서드를 호출 할 사용자 지정 함수로 설정 한 다음 stop ()을 호출하여 타이머를 중지하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="29be66df4dc4b34fe996599025af21f3f29c133b" translate="yes" xml:space="preserve">
          <source>The keys are considered to be weak references on static targets.</source>
          <target state="translated">키는 정적 대상에서 약한 참조로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="7aa646f1577fccf0b4a5f0b456fa12235842ad2f" translate="yes" xml:space="preserve">
          <source>The keys of the returned map are the variable names, the values are their types.</source>
          <target state="translated">리턴 된 맵의 키는 변수 이름이고 값은 유형입니다.</target>
        </trans-unit>
        <trans-unit id="4cbfb8ccb520fd7f85895c1497294b28b638a0b5" translate="yes" xml:space="preserve">
          <source>The kind of the class.</source>
          <target state="translated">수업의 종류.</target>
        </trans-unit>
        <trans-unit id="eb9d84313ba7ced153700765addddc2c7aa55c37" translate="yes" xml:space="preserve">
          <source>The kind of the field.</source>
          <target state="translated">현장의 종류.</target>
        </trans-unit>
        <trans-unit id="5e5fa62e1341352b4baad73052c0fc57c71a0096" translate="yes" xml:space="preserve">
          <source>The kind of the type definition.</source>
          <target state="translated">타입 정의의 종류.</target>
        </trans-unit>
        <trans-unit id="e0297b018588f8c800635bf072a5d7f21e737035" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 배열 의 길이입니다 .</target>
        </trans-unit>
        <trans-unit id="d8a9254762e53a32c11e5b46d7b39fe8bfda8fc9" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">의 길이 &lt;code&gt;this&lt;/code&gt; 목록.</target>
        </trans-unit>
        <trans-unit id="bb0d6770b7799358f407959d3eb1e9e858e38592" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; StringBuf in characters.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; StringBuf 의 길이 ( 문자)입니다.</target>
        </trans-unit>
        <trans-unit id="b0db95f8917abe015336018854026613818aa850" translate="yes" xml:space="preserve">
          <source>The length of the buffer in bytes.</source>
          <target state="translated">버퍼 길이 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="641c8398d6587f25fc2d391b7f164ebef28556b8" translate="yes" xml:space="preserve">
          <source>The length of the returned Array is equal to the new length of &lt;code&gt;this&lt;/code&gt; Array subtracted from the original length of &lt;code&gt;this&lt;/code&gt; Array. In other words, each element of the original &lt;code&gt;this&lt;/code&gt; Array either remains in &lt;code&gt;this&lt;/code&gt; Array or becomes an element of the returned Array.</source>
          <target state="translated">반환 된 배열의 길이의 새로운 길이 같다 &lt;code&gt;this&lt;/code&gt; 원래 길이로부터 감산 배열 &lt;code&gt;this&lt;/code&gt; 배열. 즉, 원래의 각 요소는 &lt;code&gt;this&lt;/code&gt; 어레이 중 남는 &lt;code&gt;this&lt;/code&gt; 배열 또는 반환 된 배열의 요소가된다.</target>
        </trans-unit>
        <trans-unit id="6cfc02c2f39838b1847a840cb81f048c22933d94" translate="yes" xml:space="preserve">
          <source>The length of the returned Array is equal to the sum of &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;a.length&lt;/code&gt;.</source>
          <target state="translated">반환 된 Array의 길이는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 합계와 같습니다. length 및 &lt;code&gt;a.length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f112efcb5c0db7e3c3fb0af40e1586e66e879182" translate="yes" xml:space="preserve">
          <source>The length of the stream in bytes.</source>
          <target state="translated">스트림 길이 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="da4c65f2560a6390e72c40e9a64165d72c3843b5" translate="yes" xml:space="preserve">
          <source>The length of this stack.</source>
          <target state="translated">이 스택의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="80756e6910c8ea018c3e3ee5e541e9a1c2ae2906" translate="yes" xml:space="preserve">
          <source>The line number where the field is defined. This information is only available if the field has an expression. Otherwise the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">필드가 정의 된 줄 번호입니다. 이 정보는 필드에 표현식이있는 경우에만 사용 가능합니다. 그렇지 않으면 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15150a76c82c8a440e62cb801189b600a8d8bce0" translate="yes" xml:space="preserve">
          <source>The line number where the field is defined. This information is only available if the field has an expression. Otherwise the value is `null`.</source>
          <target state="translated">필드가 정의 된 줄 번호입니다. 이 정보는 필드에 표현식이있는 경우에만 사용할 수 있습니다. 그렇지 않으면 값은 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="cfe2db0fb75d393cd88588eae831e3b7aa2b6cd3" translate="yes" xml:space="preserve">
          <source>The list of all sub-elements which are the nodes with type &lt;code&gt;&lt;a href=&quot;../../xml#Element&quot;&gt;Xml.Element&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../xml#Element&quot;&gt;Xml.Element&lt;/a&gt;&lt;/code&gt; 유형의 노드 인 모든 하위 요소 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="7a5e1e984c16e04448fd23c5fe971bcf3fd5c48b" translate="yes" xml:space="preserve">
          <source>The list of arguments the constructor has or &lt;code&gt;null&lt;/code&gt; if no arguments are available.</source>
          <target state="translated">생성자가 가진 인수 목록 . 사용할 수있는 인수가 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c185004754f3c68b823e43bf67a167e14e69d28a" translate="yes" xml:space="preserve">
          <source>The list of arguments the constructor has or `null` if no arguments are available.</source>
          <target state="translated">생성자가 가지고있는 인수 목록 또는 사용 가능한 인수가없는 경우 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="7d349618f13f9ee0327e04d18b88a8a5af8787c3" translate="yes" xml:space="preserve">
          <source>The list of available overloads for the fields or &lt;code&gt;null&lt;/code&gt; if no overloads exists.</source>
          <target state="translated">필드에 사용 가능한 오버로드 목록입니다 . 오버로드가 &lt;code&gt;null&lt;/code&gt; 경우 null 입니다.</target>
        </trans-unit>
        <trans-unit id="19359b4b12d895c359cc0502b690aeb53f6ecb1b" translate="yes" xml:space="preserve">
          <source>The list of available overloads for the fields or `null` if no overloads exists.</source>
          <target state="translated">필드에 사용 가능한 오버로드 목록 또는 오버로드가없는 경우 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="51d5c5f8b6cc6dc0acb923af6b4d109f07d11dd1" translate="yes" xml:space="preserve">
          <source>The list of enum constructors.</source>
          <target state="translated">열거 형 생성자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="18212e7b866f4524d18db6a5d6936e5bd98cc8cc" translate="yes" xml:space="preserve">
          <source>The list of fields that have override status.</source>
          <target state="translated">재정의 상태가있는 필드 목록입니다.</target>
        </trans-unit>
        <trans-unit id="ca5c5d8201c42b04e95279a5fca035fe7d95e302" translate="yes" xml:space="preserve">
          <source>The list of interfaces defined by their type path and list of type parameters.</source>
          <target state="translated">유형 경로 및 유형 매개 변수 목록으로 정의 된 인터페이스 목록.</target>
        </trans-unit>
        <trans-unit id="23125fca446c2046383aa55efab069de99292c0a" translate="yes" xml:space="preserve">
          <source>The list of member &lt;a href=&quot;https://haxe.org/manual/class-field.html&quot;&gt;class fields&lt;/a&gt;.</source>
          <target state="translated">멤버 &lt;a href=&quot;https://haxe.org/manual/class-field.html&quot;&gt;클래스 필드&lt;/a&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c345335bd3cebbea7e677b55f932c11e7adc1ffc" translate="yes" xml:space="preserve">
          <source>The list of member [class fields](https://haxe.org/manual/class-field.html).</source>
          <target state="translated">멤버 [클래스 필드] (https://haxe.org/manual/class-field.html) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6db1fbbd8967966a9e2e978fc9d283b9f08d93f2" translate="yes" xml:space="preserve">
          <source>The list of parameters types.</source>
          <target state="translated">매개 변수 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5fbe4bf209091b95812fada8758469ddff30833b" translate="yes" xml:space="preserve">
          <source>The list of runtime metadata.</source>
          <target state="translated">런타임 메타 데이터 목록.</target>
        </trans-unit>
        <trans-unit id="a8f16070baf511dad690276b1ec365c31565a088" translate="yes" xml:space="preserve">
          <source>The list of static class fields.</source>
          <target state="translated">정적 클래스 필드 목록</target>
        </trans-unit>
        <trans-unit id="c2f8920cf74b2db295e76b11b2a84ddc5e126c1a" translate="yes" xml:space="preserve">
          <source>The member fields of the class.</source>
          <target state="translated">클래스의 멤버 필드</target>
        </trans-unit>
        <trans-unit id="f9271bb119e6547e7b49540d641977a92a69b51e" translate="yes" xml:space="preserve">
          <source>The meta data the constructor was annotated with.</source>
          <target state="translated">생성자에 주석이 달린 메타 데이터.</target>
        </trans-unit>
        <trans-unit id="c282c3ed204b37068803f2d14560627ab87a4d16" translate="yes" xml:space="preserve">
          <source>The meta data the field was annotated with.</source>
          <target state="translated">필드에 주석이 달린 메타 데이터.</target>
        </trans-unit>
        <trans-unit id="02e62cfbc4b6104c4fe26839e7de79340fdd12ae" translate="yes" xml:space="preserve">
          <source>The metadata of the class field.</source>
          <target state="translated">클래스 필드의 메타 데이터</target>
        </trans-unit>
        <trans-unit id="19d0df0eb4a0f8c7803e56e927090e7346c40ca2" translate="yes" xml:space="preserve">
          <source>The metadata of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 메타 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="01fe15dddd49de7f8314e26f51a2ddf4ac699075" translate="yes" xml:space="preserve">
          <source>The metadata of the function argument.</source>
          <target state="translated">함수 인수의 메타 데이터</target>
        </trans-unit>
        <trans-unit id="75bd6aaaf0aa75b7fcce8ee3eaed13e058ad5484" translate="yes" xml:space="preserve">
          <source>The metadata of the type parameter.</source>
          <target state="translated">type 매개 변수의 메타 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="43bcc6985dc296531a44c8c626dfdab5432f2546" translate="yes" xml:space="preserve">
          <source>The metadata of the type.</source>
          <target state="translated">유형의 메타 데이터</target>
        </trans-unit>
        <trans-unit id="dcebcd037d6384a31f268c91bda717920e19c806" translate="yes" xml:space="preserve">
          <source>The metadata of the variable.</source>
          <target state="translated">변수의 메타 데이터</target>
        </trans-unit>
        <trans-unit id="10387a03bcb1ccf9576d13bf0eecf2e37c9da6c1" translate="yes" xml:space="preserve">
          <source>The method name of the unit test.</source>
          <target state="translated">단위 테스트의 메소드 이름입니다.</target>
        </trans-unit>
        <trans-unit id="091fafd3c178e60d4876c512c8e6ad9d03342cff" translate="yes" xml:space="preserve">
          <source>The method used for resolving unknown field access, if available.</source>
          <target state="translated">사용 가능한 경우 알 수없는 필드 액세스를 해결하는 데 사용되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="e143d19f9d2410dc54311c4f18a9d32fd44a5392" translate="yes" xml:space="preserve">
          <source>The mode of the import expression.</source>
          <target state="translated">가져 오기 표현식의 모드입니다.</target>
        </trans-unit>
        <trans-unit id="0b326fad6d2acb336f379dd8922428b05bd436c8" translate="yes" xml:space="preserve">
          <source>The module name of the type, which might be different.</source>
          <target state="translated">유형의 모듈 이름이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ff787b56a421d4cf69aee32a804515556b220cd" translate="yes" xml:space="preserve">
          <source>The name of the catch variable.</source>
          <target state="translated">catch 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8dc1e2ed86710397e5aa5e558eec1b9186ec4866" translate="yes" xml:space="preserve">
          <source>The name of the class field.</source>
          <target state="translated">클래스 필드의 이름</target>
        </trans-unit>
        <trans-unit id="8a289cfe5963a5570920181dbc7431a8529816d3" translate="yes" xml:space="preserve">
          <source>The name of the constructor.</source>
          <target state="translated">생성자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="29c291519507b7a4b0c2576631904ed538b51fca" translate="yes" xml:space="preserve">
          <source>The name of the current element. This is the same as &lt;code&gt;&lt;a href=&quot;../../xml#nodeName&quot;&gt;Xml.nodeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 요소의 이름 이것은 &lt;code&gt;&lt;a href=&quot;../../xml#nodeName&quot;&gt;Xml.nodeName&lt;/a&gt;&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="85d1e8fa03ad94c351414bcac7f914fe0480fe24" translate="yes" xml:space="preserve">
          <source>The name of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="603c0a5d2c15b9cea557f9daa63c49955d94d328" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">필드의 이름</target>
        </trans-unit>
        <trans-unit id="4c4224784d5c3a1b437b9210ff6c915596d8794c" translate="yes" xml:space="preserve">
          <source>The name of the function argument.</source>
          <target state="translated">함수 인수의 이름</target>
        </trans-unit>
        <trans-unit id="199b6ba70a9dc7ba92f4b749d2b80a7a3e927638" translate="yes" xml:space="preserve">
          <source>The name of the metadata entry.</source>
          <target state="translated">메타 데이터 항목의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="47d12a9f186497ec8ab7ba108f95e2cf7d1902ef" translate="yes" xml:space="preserve">
          <source>The name of the type definition.</source>
          <target state="translated">유형 정의의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c04d7acc23cb7f1c3edd70910118e5bac0a58836" translate="yes" xml:space="preserve">
          <source>The name of the type parameter.</source>
          <target state="translated">유형 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="bee01b2a46df67ca1813e8ebd9683c9563b5a32e" translate="yes" xml:space="preserve">
          <source>The name of the type path.</source>
          <target state="translated">유형 경로의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="006863f5e94e06237f4603476e3ecce5078ae3ee" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
          <target state="translated">유형의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8f5c171e470acee77d3e646d7c9294e8b30feb42" translate="yes" xml:space="preserve">
          <source>The name of the variable.</source>
          <target state="translated">변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2ae71a48432d1fc191f1f2f0fe7976ef722933cc" translate="yes" xml:space="preserve">
          <source>The number of characters in &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 문자열 의 문자 수입니다 .</target>
        </trans-unit>
        <trans-unit id="b11e2622c46f21b44da47deb01d44dd28d6b0e5e" translate="yes" xml:space="preserve">
          <source>The object &lt;code&gt;o&lt;/code&gt; is ignored in most cases. It serves as the &lt;code&gt;this&lt;/code&gt;-context in the following situations:</source>
          <target state="translated">객체 &lt;code&gt;o&lt;/code&gt; 는 대부분의 경우 무시됩니다. 그것은 역할 &lt;code&gt;this&lt;/code&gt; 다음과 같은 상황에서 -context :</target>
        </trans-unit>
        <trans-unit id="ced3dbe5d6ea0bf28b15d4cb208fbcbc9d8eae89" translate="yes" xml:space="preserve">
          <source>The offset is calculated like so:</source>
          <target state="translated">오프셋은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="033f2218e097d05a444bf281866f7e7c4fb0bba3" translate="yes" xml:space="preserve">
          <source>The optional constraints of the type parameter.</source>
          <target state="translated">유형 매개 변수의 선택적 제한 조건입니다.</target>
        </trans-unit>
        <trans-unit id="a3676acd9da1d63396da624ef57cc388acd43371" translate="yes" xml:space="preserve">
          <source>The optional guard expressions of the case, if available.</source>
          <target state="translated">가능한 경우 케이스의 가드 표현 (선택 사항).</target>
        </trans-unit>
        <trans-unit id="25e8504fd003149cf51bd88894671fdec5c5ef91" translate="yes" xml:space="preserve">
          <source>The optional metadata of the field.</source>
          <target state="translated">필드의 선택적 메타 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="ef06a91ae1f37dcb9e2a440608a4e40ec91146f6" translate="yes" xml:space="preserve">
          <source>The optional metadata of the type definition.</source>
          <target state="translated">유형 정의의 선택적 메타 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="29eca9f349f9b1932a87196f3e565eec408342e3" translate="yes" xml:space="preserve">
          <source>The optional parameters of the metadata entry.</source>
          <target state="translated">메타 데이터 항목의 선택적 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="734ad047566231373724b914efc65a73f6f0d4f9" translate="yes" xml:space="preserve">
          <source>The optional parameters of the type parameter.</source>
          <target state="translated">유형 매개 변수의 선택적 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="10fa63196c452e8d727d2b03c499cf88404e1195" translate="yes" xml:space="preserve">
          <source>The optional value of the function argument, if available.</source>
          <target state="translated">사용 가능한 경우 함수 인수의 선택적 값입니다.</target>
        </trans-unit>
        <trans-unit id="5fe5a7980d2360f5529649fb000c0220bf02961a" translate="yes" xml:space="preserve">
          <source>The order of elements is preserved.</source>
          <target state="translated">요소의 순서가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="404ece50d31fbb87ec3d1c8e06b169bf658e5a1b" translate="yes" xml:space="preserve">
          <source>The order of keys is undefined.</source>
          <target state="translated">키의 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bfd7bde21cf6efbf5df4511a0312d1e125f06d8d" translate="yes" xml:space="preserve">
          <source>The order of the constructor names in the returned Array is preserved from the original syntax.</source>
          <target state="translated">반환 된 Array의 생성자 이름 순서는 원래 구문에서 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="53c14cce49c25a82da90a54386e66fa02201244e" translate="yes" xml:space="preserve">
          <source>The order of the fields in the returned Array is unspecified.</source>
          <target state="translated">반환 된 배열의 필드 순서는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9f3845e9d9eaf3a9eeacc6da56e61f2d93454464" translate="yes" xml:space="preserve">
          <source>The order of values is undefined.</source>
          <target state="translated">값의 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9361c7b02e7a3d9173e7a10cbf91b4208062c86a" translate="yes" xml:space="preserve">
          <source>The overload fields of the class field.</source>
          <target state="translated">클래스 필드의 오버로드 필드</target>
        </trans-unit>
        <trans-unit id="fcda8584191851fd5c08a7410db1954eaaa50500" translate="yes" xml:space="preserve">
          <source>The package of the type definition.</source>
          <target state="translated">타입 정의의 패키지.</target>
        </trans-unit>
        <trans-unit id="ffa65277e83d8223f39f18743ff6b383751579e1" translate="yes" xml:space="preserve">
          <source>The package of the type.</source>
          <target state="translated">유형의 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="07aed11053323d8c68dee74dd147e8751ffd4265" translate="yes" xml:space="preserve">
          <source>The parameter type declarations of the type definition.</source>
          <target state="translated">타입 정의의 파라미터 타입 선언.</target>
        </trans-unit>
        <trans-unit id="95638ca48aded620e5d5b5016120d4b0e91188c8" translate="yes" xml:space="preserve">
          <source>The parent class and its type parameters, if available.</source>
          <target state="translated">사용 가능한 경우 상위 클래스 및 해당 유형 매개 변수</target>
        </trans-unit>
        <trans-unit id="2f12cc7396b2300717e1ec0b0d99449a2256a7c9" translate="yes" xml:space="preserve">
          <source>The parsing rules for &lt;code&gt;parseInt&lt;/code&gt; apply here as well, with the exception of invalid input resulting in a &lt;code&gt;NaN&lt;/code&gt; value instead of null.</source>
          <target state="translated">유효하지 않은 입력을 제외하고 는 null 대신 &lt;code&gt;NaN&lt;/code&gt; 값을 생성하는 경우를 제외하고 &lt;code&gt;parseInt&lt;/code&gt; 에 대한 구문 분석 규칙도 여기에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e1ce3892f9edf3fb9fda839c5ce25fb43f173c0" translate="yes" xml:space="preserve">
          <source>The path of the type.</source>
          <target state="translated">유형의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="1f58989f07ed48f1c2005bfa98f1624cd145bf5b" translate="yes" xml:space="preserve">
          <source>The path to the import expression.</source>
          <target state="translated">가져 오기 표현식의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="feba8269f75d6e6d27ce6bade48750e778f1bc55" translate="yes" xml:space="preserve">
          <source>The position information of the unit test.</source>
          <target state="translated">단위 테스트의 위치 정보.</target>
        </trans-unit>
        <trans-unit id="734fa4cb4ce24c9ec9a345e5aa8051478e3c829f" translate="yes" xml:space="preserve">
          <source>The position of the class field.</source>
          <target state="translated">클래스 필드의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="c431b0977914bd68fbfa0e9cc6592b12f467c081" translate="yes" xml:space="preserve">
          <source>The position of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="5ac5eb2507c7b0deb3e3d77f77a96b0a7640f9b8" translate="yes" xml:space="preserve">
          <source>The position of the error.</source>
          <target state="translated">오류의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="73230f81b7067187fb817dbc2bad02fcf977d8ae" translate="yes" xml:space="preserve">
          <source>The position of the expression.</source>
          <target state="translated">식의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="ec40a6ef5ea16ed96c5a98337c90d7f98b176062" translate="yes" xml:space="preserve">
          <source>The position of the field.</source>
          <target state="translated">필드의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="2072656054b0d7528d2549c4cce4199d182f7342" translate="yes" xml:space="preserve">
          <source>The position of the metadata entry.</source>
          <target state="translated">메타 데이터 항목의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="1aedb8c6f4c01aee3b3f5a84ecb12db5710ab79b" translate="yes" xml:space="preserve">
          <source>The position of the type.</source>
          <target state="translated">유형의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="cd335e23e658f177fd282b4b62d3d98faa877ae9" translate="yes" xml:space="preserve">
          <source>The position to the type definition.</source>
          <target state="translated">유형 정의의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="488bef4f573ad1c8ca5ae907d453eb5bd9922f16" translate="yes" xml:space="preserve">
          <source>The possible IO errors that can occur</source>
          <target state="translated">발생할 수있는 IO 오류</target>
        </trans-unit>
        <trans-unit id="42a418238cdcef03380043e5df9cef237d55fecd" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; is used for all generated inner AST nodes.</source>
          <target state="translated">제공된 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 는 생성 된 모든 내부 AST 노드에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f725a1c2fde14ebda42a6e230d79a8878274992" translate="yes" xml:space="preserve">
          <source>The replacements follow:</source>
          <target state="translated">교체는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="21d933258bb32d55733627be8e39efd1312e0698" translate="yes" xml:space="preserve">
          <source>The representation of the stack exception.</source>
          <target state="translated">스택 예외의 표현</target>
        </trans-unit>
        <trans-unit id="b64d16d58cd764f82202d8c8e12b98db5068dac2" translate="yes" xml:space="preserve">
          <source>The resolution follows the usual class path rules where the last declared class path has priority.</source>
          <target state="translated">해결 방법은 마지막으로 선언 된 클래스 경로가 우선 순위를 갖는 일반적인 클래스 경로 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="cf99a04f0339af5f6f818d8d215acb7bc04bb5ea" translate="yes" xml:space="preserve">
          <source>The resource is then available using the &lt;code&gt;&lt;a href=&quot;../resource#Resource&quot;&gt;haxe.macro.Resource&lt;/a&gt;&lt;/code&gt; API.</source>
          <target state="translated">그런 다음 &lt;code&gt;&lt;a href=&quot;../resource#Resource&quot;&gt;haxe.macro.Resource&lt;/a&gt;&lt;/code&gt; API 를 사용하여 자원을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47b1ba19282aecb23c861b4406ec7186ce9db263" translate="yes" xml:space="preserve">
          <source>The result String does not contain any constructor arguments.</source>
          <target state="translated">결과 문자열에는 생성자 인수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c1053ad930408238d17baa3f09eb4facc039c7a" translate="yes" xml:space="preserve">
          <source>The result corresponds to the type &lt;code&gt;v&lt;/code&gt; has at runtime, which may vary per platform. Assumptions regarding this should be minimized to avoid surprises.</source>
          <target state="translated">결과 는 런타임에 &lt;code&gt;v&lt;/code&gt; 유형 이 플랫폼에 따라 다를 수 있는 유형 v에 해당합니다 . 놀라움을 피하기 위해 이와 관련된 가정을 최소화해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2ecba669eea18d7d51b885042a11acfd93ecd2f" translate="yes" xml:space="preserve">
          <source>The result does not include the matched part.</source>
          <target state="translated">결과는 일치하는 부분을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19cfdc8e4f24c8f4bbe8a112a06f4252b1951bac" translate="yes" xml:space="preserve">
          <source>The result is enclosed in { } with the individual elements being separated by a comma.</source>
          <target state="translated">결과는 {}로 묶고 개별 요소는 쉼표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="f7b1406efda6250f355316e307c8e858b42e435b" translate="yes" xml:space="preserve">
          <source>The result is guaranteed to be valid Haxe code, but there may be differences from the original lexical syntax.</source>
          <target state="translated">결과는 유효한 Haxe 코드임을 보장하지만 원래 어휘 구문과 차이가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c67513b200dc97957b8399515a96b75f4031a329" translate="yes" xml:space="preserve">
          <source>The result is true if &lt;code&gt;v&lt;/code&gt; is of type EnumValue, i.e. an enum constructor.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 가 EnumValue 유형, 즉 열거 형 생성자 인 경우 결과는 true 입니다.</target>
        </trans-unit>
        <trans-unit id="d696f64cc2efe18df233537dc719b261186b9071" translate="yes" xml:space="preserve">
          <source>The result is true if &lt;code&gt;v&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 가 다음 중 하나 인 경우 결과는 true입니다 .</target>
        </trans-unit>
        <trans-unit id="f1ba31076026aca7ea22470c099cab466d0e0a7d" translate="yes" xml:space="preserve">
          <source>The result of this operation is equal to &lt;code&gt;&lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</source>
          <target state="translated">이 연산의 결과는 &lt;code&gt;&lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98ff2e8674bca759ed2a588546559242f1dc8cd7" translate="yes" xml:space="preserve">
          <source>The result of this operation is equal to &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</source>
          <target state="translated">이 연산의 결과는 &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3015ddb32c9de6a975e6dde639c0cf5a53cb0ceb" translate="yes" xml:space="preserve">
          <source>The result will include the individual elements' String representations separated by comma. The enclosing [ ] may be missing on some platforms, use &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; to get a String representation that is consistent across platforms.</source>
          <target state="translated">결과에는 개별 요소의 문자열 표현이 쉼표로 구분되어 포함됩니다. 일부 플랫폼에서는 둘러싸는 []가 누락 될 수 있습니다. &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; 을 사용 하여 플랫폼간에 일관된 문자열 표현을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="aae8d014577b6b1c1287a75b507fce287cf149f5" translate="yes" xml:space="preserve">
          <source>The results are unspecified if &lt;code&gt;length&lt;/code&gt; results in out-of-bounds access, or if &lt;code&gt;src&lt;/code&gt; or &lt;code&gt;dest&lt;/code&gt; are null</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 인해 범위를 벗어난 액세스가 발생하거나 &lt;code&gt;src&lt;/code&gt; 또는 &lt;code&gt;dest&lt;/code&gt; 가 널인 경우 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a7705addba1dd448a489800874655b3cde1b21ea" translate="yes" xml:space="preserve">
          <source>The return type of the function.</source>
          <target state="translated">함수의 반환 타입.</target>
        </trans-unit>
        <trans-unit id="0e18ef7268908f503c9f300bd27587c170c33d63" translate="yes" xml:space="preserve">
          <source>The return type-hint of the function, if available.</source>
          <target state="translated">사용 가능한 경우 함수의 리턴 유형 힌트.</target>
        </trans-unit>
        <trans-unit id="15bb2daf003c3286c47e223c31873a04858134e9" translate="yes" xml:space="preserve">
          <source>The returned expression is a concatenation of string parts and escaped elements.</source>
          <target state="translated">리턴 된 표현식은 문자열 부분과 이스케이프 된 요소를 연결 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9cfb83f12e1202577e430f350d7f38e6bb5af21b" translate="yes" xml:space="preserve">
          <source>The runtime class definition information.</source>
          <target state="translated">런타임 클래스 정의 정보</target>
        </trans-unit>
        <trans-unit id="0a3014067f3c9a35fef46fcdf4d89883762aa12c" translate="yes" xml:space="preserve">
          <source>The runtime class field information.</source>
          <target state="translated">런타임 클래스 필드 정보</target>
        </trans-unit>
        <trans-unit id="1e16f71c84286d92238a8ed2585d79630d94cacf" translate="yes" xml:space="preserve">
          <source>The runtime enum constructor information.</source>
          <target state="translated">런타임 열거 자 생성자 정보.</target>
        </trans-unit>
        <trans-unit id="1fb0e86144ed01963939947cd0828b50deb2d69f" translate="yes" xml:space="preserve">
          <source>The runtime member types.</source>
          <target state="translated">런타임 멤버 유형</target>
        </trans-unit>
        <trans-unit id="c6f60e08679616691872bb8c2f4182e31a164946" translate="yes" xml:space="preserve">
          <source>The second argument &lt;code&gt;i&lt;/code&gt; is a string with regular expression flags.</source>
          <target state="translated">두 번째 인수 &lt;code&gt;i&lt;/code&gt; 는 정규식 플래그가있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="51a3c0d5ba161f7c1dde59fb8cf8d664c8124d3f" translate="yes" xml:space="preserve">
          <source>The second parameter &lt;code&gt;infos&lt;/code&gt; is injected by the compiler and contains information about the position where the &lt;code&gt;trace()&lt;/code&gt; call was made.</source>
          <target state="translated">두 번째 매개 변수 &lt;code&gt;infos&lt;/code&gt; 는 컴파일러에 의해 주입되며 &lt;code&gt;trace()&lt;/code&gt; 호출이 이루어진 위치에 대한 정보를 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="f8170d735c05012b741db4cbe8fccbfa1168cd28" translate="yes" xml:space="preserve">
          <source>The sort operation is not guaranteed to be stable, which means that the order of equal elements may not be retained.</source>
          <target state="translated">정렬 작업이 안정적으로 보장되지 않으므로 동일한 요소의 순서가 유지되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49a9302ad52c85769dfecf6035946dca38ee6e0b" translate="yes" xml:space="preserve">
          <source>The sort operation is not guaranteed to be stable, which means that the order of equal elements may not be retained. For a stable Array sorting algorithm, &lt;code&gt;&lt;a href=&quot;haxe/ds/arraysort#sort&quot;&gt;haxe.ds.ArraySort.sort&lt;/a&gt;()&lt;/code&gt; can be used instead.</source>
          <target state="translated">정렬 작업이 안정적으로 보장되지 않으므로 동일한 요소의 순서가 유지되지 않을 수 있습니다. 안정적인 배열 정렬 알고리즘의 경우 &lt;code&gt;&lt;a href=&quot;haxe/ds/arraysort#sort&quot;&gt;haxe.ds.ArraySort.sort&lt;/a&gt;()&lt;/code&gt; 를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e503e864664b30668663887bc8639050534dff74" translate="yes" xml:space="preserve">
          <source>The specification of the serialization format can be found here: &lt;a href=&quot;https://haxe.org/manual/serialization/format&quot;&gt;https://haxe.org/manual/serialization/format&lt;/a&gt;</source>
          <target state="translated">직렬화 형식의 사양은 &lt;a href=&quot;https://haxe.org/manual/serialization/format&quot;&gt;https://haxe.org/manual/serialization/format&lt;/a&gt; 에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85490c31d116f3bb69ad85f6f24beecb6cd7f48b" translate="yes" xml:space="preserve">
          <source>The specification of the serialization format can be found here: &lt;a href=&quot;https://haxe.org/manual/std-serialization-format.html&quot;&gt;https://haxe.org/manual/std-serialization-format.html&lt;/a&gt;</source>
          <target state="translated">직렬화 형식의 사양은 &lt;a href=&quot;https://haxe.org/manual/std-serialization-format.html&quot;&gt;https://haxe.org/manual/std-serialization-format.html&lt;/a&gt; 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63fb36f14ec226c36657a33ba556012dd9582463" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; type, this is a double-precision IEEE 64bit float.</source>
          <target state="translated">표준 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 유형은 배정도 IEEE 64 비트 부동 소수점입니다.</target>
        </trans-unit>
        <trans-unit id="6c0e73b5acc43a846196f2f1b6eecf691605c7ae" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; type. Its precision depends on the platform.</source>
          <target state="translated">표준 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 유형입니다. 정밀도는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="37e9a5b3081a30ee39e8d268c4e3586996350585" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; type. Only &lt;code&gt;null&lt;/code&gt; values can be of the type &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">표준 &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 유형. 만 &lt;code&gt;null&lt;/code&gt; 값은 유형이 될 수 있습니다 &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5d0430428f4de1e33d500811eb6b76be274abcd" translate="yes" xml:space="preserve">
          <source>The standard Boolean type, which can either be &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">표준 부울 형식으로, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14a1806594ff2ac943a45c87ecf953ac180c2b5c" translate="yes" xml:space="preserve">
          <source>The static fields of the class.</source>
          <target state="translated">클래스의 정적 필드</target>
        </trans-unit>
        <trans-unit id="fb3fbf2e842b7d58772fb1bdd53fdbb2d8abe123" translate="yes" xml:space="preserve">
          <source>The status information of a unit test case method.</source>
          <target state="translated">단위 테스트 사례 방법의 상태 정보입니다.</target>
        </trans-unit>
        <trans-unit id="38e0781777165d416f6174ef31e9e3f68de28f3a" translate="yes" xml:space="preserve">
          <source>The status/kind of the structure.</source>
          <target state="translated">구조의 상태 / 종류.</target>
        </trans-unit>
        <trans-unit id="be670a2b999ec19d7db167136e60836b52fea3b7" translate="yes" xml:space="preserve">
          <source>The target type of the typedef.</source>
          <target state="translated">typedef의 대상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="7027d1bbe0616a6471ec6f1c70265f8d0af9bab7" translate="yes" xml:space="preserve">
          <source>The tree types of the runtime type.</source>
          <target state="translated">런타임 유형의 트리 유형.</target>
        </trans-unit>
        <trans-unit id="68bb415ebae9f2bdb8e570d781cfb6cbf9ce43f0" translate="yes" xml:space="preserve">
          <source>The type of the catch.</source>
          <target state="translated">캐치의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="cd33aec1b5bb805e3500dfd484d149a65546907b" translate="yes" xml:space="preserve">
          <source>The type of the class field.</source>
          <target state="translated">클래스 필드의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2ecf9ea77d8a48637aa3d51e97434adb03bc1b26" translate="yes" xml:space="preserve">
          <source>The type of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d37e2aaad386c1ac5e9f0016c42e7b609226d289" translate="yes" xml:space="preserve">
          <source>The type of the expression.</source>
          <target state="translated">표현식의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="dd4ade17a8b0d3869f7eae7c21662c0c62a9eaac" translate="yes" xml:space="preserve">
          <source>The type of the field.</source>
          <target state="translated">필드의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e30a38f76b995d47f643979d630720d963312d9e" translate="yes" xml:space="preserve">
          <source>The type of the type parameter. It is guaranteed to be a &lt;code&gt;TInst&lt;/code&gt; with a &lt;code&gt;KTypeParameter&lt;/code&gt; kind.</source>
          <target state="translated">유형 매개 변수의 유형입니다. 이 보장되는 &lt;code&gt;TInst&lt;/code&gt; A를 &lt;code&gt;KTypeParameter&lt;/code&gt; 의 종류.</target>
        </trans-unit>
        <trans-unit id="78f4e412801136db377838d2b24f6aaba426f040" translate="yes" xml:space="preserve">
          <source>The type of the type parameter. It is guaranteed to be a `TInst` with a `KTypeParameter` kind.</source>
          <target state="translated">유형 매개 변수의 유형입니다. `KTypeParameter` 종류의`TInst`가 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="a9217dac1aa4cfd6ea552760e2743d5f3f13d59f" translate="yes" xml:space="preserve">
          <source>The type of the typedef.</source>
          <target state="translated">typedef의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="8f57797b4b6f287fc75de0cb30d904cad8dd9628" translate="yes" xml:space="preserve">
          <source>The type of the variable.</source>
          <target state="translated">변수의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2ca3230222bcac6ec4968f4152534e0585858ef0" translate="yes" xml:space="preserve">
          <source>The type parameters in the runtime type information.</source>
          <target state="translated">런타임 유형 정보의 유형 매개 변수.</target>
        </trans-unit>
        <trans-unit id="45a7390688c817b0ffed008da38aebb428d1f71a" translate="yes" xml:space="preserve">
          <source>The type parameters of the class field.</source>
          <target state="translated">클래스 필드의 유형 매개 변수.</target>
        </trans-unit>
        <trans-unit id="22142e447aa37ab89f555cb44aaaeb0ad0d9a1cf" translate="yes" xml:space="preserve">
          <source>The type parameters of the enum constructor.</source>
          <target state="translated">열거 형 생성자의 형식 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="77ee8c9db25f7a9cc927924aa5e5bf6fc3006652" translate="yes" xml:space="preserve">
          <source>The type parameters of the type.</source>
          <target state="translated">유형의 유형 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="18ee37f4a9f3946d48e5e58f705844d38d6ef58e" translate="yes" xml:space="preserve">
          <source>The type path of the module containing the type.</source>
          <target state="translated">유형을 포함하는 모듈의 유형 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b2946d252f29e49ab99ab12f2732eefc71d66764" translate="yes" xml:space="preserve">
          <source>The type path of the type.</source>
          <target state="translated">유형의 유형 경로입니다.</target>
        </trans-unit>
        <trans-unit id="220d02146ca728c92b2e9bb8b0b06e8699f7a7e0" translate="yes" xml:space="preserve">
          <source>The type which is dynamically implemented by the class or &lt;code&gt;null&lt;/code&gt; if no such type exists.</source>
          <target state="translated">클래스에 의해 동적으로 구현되는 타입. 존재하지 않는 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32231e4993ce471877c97e438e1636591a606883" translate="yes" xml:space="preserve">
          <source>The type which is dynamically implemented by the class or `null` if no such type exists.</source>
          <target state="translated">클래스에 의해 동적으로 구현되는 유형 또는 해당 유형이없는 경우 'null'입니다.</target>
        </trans-unit>
        <trans-unit id="df2ea27e3b251b2d732afba9cd93b1fa0f72ecb8" translate="yes" xml:space="preserve">
          <source>The type-hint of the function argument, if available.</source>
          <target state="translated">사용 가능한 경우 함수 인수의 유형 힌트</target>
        </trans-unit>
        <trans-unit id="9a40b30442808fdae368c21a733b82e61a65cb55" translate="yes" xml:space="preserve">
          <source>The type-hint of the variable, if available.</source>
          <target state="translated">사용 가능한 경우 변수의 유형 힌트</target>
        </trans-unit>
        <trans-unit id="6f2d65adb0d58236e0d83340364aa79e8e6b6f09" translate="yes" xml:space="preserve">
          <source>The typedef runtime information.</source>
          <target state="translated">typedef 런타임 정보</target>
        </trans-unit>
        <trans-unit id="71fbdb70544454354b713ba673757aa2428a7ffe" translate="yes" xml:space="preserve">
          <source>The types of the typedef, by platform.</source>
          <target state="translated">플랫폼 별 typedef의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e81fb8048bfdf181cb1977a2d58ae0720eab3242" translate="yes" xml:space="preserve">
          <source>The underlying implementation can allocate proper working space depending on this information, or simply ignore it. This is not a mandatory call but a tip and is only used in some specific cases.</source>
          <target state="translated">기본 구현은이 정보에 따라 적절한 작업 공간을 할당하거나 간단히 무시할 수 있습니다. 이것은 필수 전화가 아니라 팁이며 일부 특정 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a3fbd20e8b8d96c3e2fac8b9ac30c43c91a37dd" translate="yes" xml:space="preserve">
          <source>The underlying type of the abstract.</source>
          <target state="translated">초록의 기본 유형.</target>
        </trans-unit>
        <trans-unit id="bf128cf17ee4dcc688072500314a624fb2cfcc96" translate="yes" xml:space="preserve">
          <source>The unique ID of the variable.</source>
          <target state="translated">변수의 고유 ID</target>
        </trans-unit>
        <trans-unit id="c3a77105bf30beebf86a1cdc9ba040b44718b851" translate="yes" xml:space="preserve">
          <source>The unit test results. Available after the &lt;code&gt;run()&lt;/code&gt; is called.</source>
          <target state="translated">단위 테스트 결과. &lt;code&gt;run()&lt;/code&gt; 이 호출 된 후 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="dc04b56b4c78724ea740235b09464b5d1802120b" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; type is only defined for Flash and C#. Simulate it for other platforms.</source>
          <target state="translated">부호없는 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 유형은 Flash 및 C #에 대해서만 정의됩니다. 다른 플랫폼에서도 시뮬레이션하십시오.</target>
        </trans-unit>
        <trans-unit id="0b8793e84a115b59305603e3eb72c2ddc9808828" translate="yes" xml:space="preserve">
          <source>The url of &lt;code&gt;this&lt;/code&gt; request. It is used only by the &lt;code&gt;request()&lt;/code&gt; method and can be changed in order to send the same request to different target Urls.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 요청 의 URL입니다 . &lt;code&gt;request()&lt;/code&gt; 메소드 에서만 사용되며 다른 요청 Urls에 동일한 요청을 보내기 위해 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9a5a9e3ef625d5c9eb9a18ab988d0c522ec2cbb" translate="yes" xml:space="preserve">
          <source>The value expressions of the case.</source>
          <target state="translated">케이스의 값 표현.</target>
        </trans-unit>
        <trans-unit id="017b5bd3c8eabeb3b0d638af18849f246408bc23" translate="yes" xml:space="preserve">
          <source>The value itself might differ depending on platforms, only differences between two values make sense.</source>
          <target state="translated">값 자체는 플랫폼에 따라 다를 수 있지만 두 값의 차이 만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d4c7b658826880273753f5947d632b9e0d3b04f" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;this.&lt;a href=&quot;#useCache&quot;&gt;useCache&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;this.&lt;a href=&quot;#useEnumIndex&quot;&gt;useEnumIndex&lt;/a&gt;&lt;/code&gt; may affect serialization output.</source>
          <target state="translated">이것의 가치 &lt;code&gt;this.&lt;a href=&quot;#useCache&quot;&gt;useCache&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;this.&lt;a href=&quot;#useEnumIndex&quot;&gt;useEnumIndex&lt;/a&gt;&lt;/code&gt; 는 직렬화 출력에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60d3338723b775c36772a1b2f4b2e15a4cec1cd5" translate="yes" xml:space="preserve">
          <source>There are some extra functions available in the &lt;code&gt;&lt;a href=&quot;datetools&quot;&gt;DateTools&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;datetools&quot;&gt;DateTools&lt;/a&gt;&lt;/code&gt; 클래스 에는 몇 가지 추가 기능이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ded431814b40c985c6bdda001b2f4c626947f413" translate="yes" xml:space="preserve">
          <source>There can only be one post data per request. Subsequent calls overwrite the previously set value.</source>
          <target state="translated">요청 당 하나의 게시물 데이터 만있을 수 있습니다. 후속 호출은 이전에 설정된 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="5a94415bee1985847c77a40dd1b52e81d2e76b56" translate="yes" xml:space="preserve">
          <source>These test methods should call the assertion methods:</source>
          <target state="translated">이 테스트 메소드는 어설 션 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="fdcbabf3386945b6138d4ab4815300e5437a3356" translate="yes" xml:space="preserve">
          <source>This abstract provides consistent cross-target unicode support.</source>
          <target state="translated">이 요약은 일관된 교차 대상 유니 코드 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2168b13d43d9ed994c68137b2f1696270f1bdf5d" translate="yes" xml:space="preserve">
          <source>This affects the compilation cache, causing the module to be typed if &lt;code&gt;externFile&lt;/code&gt; has changed.</source>
          <target state="translated">이는 컴파일 캐시에 영향을 &lt;code&gt;externFile&lt;/code&gt; 이 변경된 경우 모듈이 입력되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="51b4922dd38cbeeba51f8878ce82405ee56d0089" translate="yes" xml:space="preserve">
          <source>This affects usages such as &lt;code&gt;var x:&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; = macroCall()&lt;/code&gt;, where the expected type will be reported as &lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 같은 용도에 영향을 &lt;code&gt;var x:&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; = macroCall()&lt;/code&gt; , 예상되는 유형으로보고 할 위치를 &lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 인 .</target>
        </trans-unit>
        <trans-unit id="d5d123a6e6e497b2f476dfad850f4e4d0e39afae" translate="yes" xml:space="preserve">
          <source>This affects usages such as &lt;code&gt;var x:&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; = macroCall()&lt;/code&gt;, where the expected type will be reported as Int.</source>
          <target state="translated">이는 &lt;code&gt;var x:&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; = macroCall()&lt;/code&gt; 과 같은 사용에 영향을 미치며 예상되는 유형은 Int로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="6c2ff620bf791460fee598b6dc6482ad9d711f45" translate="yes" xml:space="preserve">
          <source>This also extends to the sub-types of resolved modules.</source>
          <target state="translated">이것은 또한 해결 된 모듈의 하위 유형으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="afc0679a27a04c7f8b28b5042d0e6234959e89b3" translate="yes" xml:space="preserve">
          <source>This also triggers loading of given module and its dependencies, if it's not yet loaded, but given macro call will not be called on the first module load.</source>
          <target state="translated">또한 아직로드되지 않은 경우 지정된 모듈 및 해당 종속성의로드를 트리거하지만 지정된 매크로 호출은 첫 번째 모듈로드에서 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="809b22c05753275b540bd711d7a1fdf31f7f9a04" translate="yes" xml:space="preserve">
          <source>This always creates a copy, even on platforms where the internal representation is Array.</source>
          <target state="translated">내부 표현이 Array 인 플랫폼에서도 항상 사본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5014fe6f70160b23aa534d9a0f28622b35dad0a3" translate="yes" xml:space="preserve">
          <source>This becomes a constructor call to one of the specialization types in the output. The rules for that are as follows:</source>
          <target state="translated">이것은 출력에서 ​​특수화 유형 중 하나에 대한 생성자 호출이됩니다. 이에 대한 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="334837b71383260ae2021a83b1ae653c71643eb6" translate="yes" xml:space="preserve">
          <source>This can be used to track positions of calls in e.g. a unit testing framework.</source>
          <target state="translated">예를 들어 단위 테스트 프레임 워크에서 호출 위치를 추적하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f2472565641c21238cedcf59c561c066247b365" translate="yes" xml:space="preserve">
          <source>This class can be used in two ways:</source>
          <target state="translated">이 클래스는 두 가지 방법으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba5eeae6560da61722937d144217bd3dd56ee931" translate="yes" xml:space="preserve">
          <source>This class can be used to handle Http requests consistently across platforms. There are two intended usages:</source>
          <target state="translated">이 클래스는 플랫폼에서 HTTP 요청을 일관되게 처리하는 데 사용할 수 있습니다. 두 가지 용도가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1d47826abf04e871d2a6c4deb7709da11b53f940" translate="yes" xml:space="preserve">
          <source>This class complements the more lightweight Reflect class, with a focus on class and enum instances.</source>
          <target state="translated">이 클래스는 클래스 및 열거 형 인스턴스에 중점을 둔 더 가벼운 Reflect 클래스를 보완합니다.</target>
        </trans-unit>
        <trans-unit id="fb07d0fb130ae612cb49ea04a6a70089378a13ff" translate="yes" xml:space="preserve">
          <source>This class defines mathematical functions and constants.</source>
          <target state="translated">이 클래스는 수학 함수와 상수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="611f8e6221470bffc6fe307c5005275aa31977b5" translate="yes" xml:space="preserve">
          <source>This class gives you access to many base functionalities of system platforms. Looks in &lt;code&gt;sys&lt;/code&gt; sub packages for more system APIs.</source>
          <target state="translated">이 클래스에서는 시스템 플랫폼의 여러 기본 기능에 액세스 할 수 있습니다. 더 많은 시스템 API 는 &lt;code&gt;sys&lt;/code&gt; 하위 패키지를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="2fd20366796ce669283a7f96c35c64fedcc3e11f" translate="yes" xml:space="preserve">
          <source>This class is generic, which means one type is generated for each type parameter T on static targets. For example:</source>
          <target state="translated">이 클래스는 일반이므로 정적 대상에서 각 유형 매개 변수 T에 대해 하나의 유형이 생성됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a158ce4096351b5d5393c90f44d0130dc1b74897" translate="yes" xml:space="preserve">
          <source>This class is magic. When you extend it with a class C, it will automaticaly create a stub class with all public methods forwarding remoting messages over the connection.</source>
          <target state="translated">이 수업은 마법입니다. 클래스 C를 사용하여 클래스를 확장하면 연결을 통해 원격 메시지를 전달하는 모든 공용 메소드로 스텁 클래스가 자동으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="8bec1e7ca9e1261a211deb993f5a3c775a5747b6" translate="yes" xml:space="preserve">
          <source>This class is used by &lt;code&gt;&lt;a href=&quot;../json#Json&quot;&gt;haxe.Json&lt;/a&gt;&lt;/code&gt; when native JSON implementation is not available.</source>
          <target state="translated">이 클래스는 기본 JSON 구현을 사용할 수없는 경우 &lt;code&gt;&lt;a href=&quot;../json#Json&quot;&gt;haxe.Json&lt;/a&gt;&lt;/code&gt; 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a0c8444c54391b2aebb18c68e4df270d0888524" translate="yes" xml:space="preserve">
          <source>This class provides a convenient way of working with paths. It supports the common path formats:</source>
          <target state="translated">이 클래스는 경로를 사용하는 편리한 방법을 제공합니다. 일반적인 경로 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="98d5f3c170ef3211acab376ec249ba94b00f83d5" translate="yes" xml:space="preserve">
          <source>This class provides access to various base functions of system platforms. Look in the &lt;code&gt;sys&lt;/code&gt; package for more system APIs.</source>
          <target state="translated">이 클래스는 시스템 플랫폼의 다양한 기본 기능에 대한 액세스를 제공합니다. 더 많은 시스템 API 는 &lt;code&gt;sys&lt;/code&gt; 패키지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7137962bceb10627ee074014c48b76c96e8812f5" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on Strings. It is ideally used with &lt;code&gt;using &lt;a href=&quot;stringtools&quot;&gt;StringTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">이 클래스는 문자열에 대한 고급 메소드를 제공합니다. 그것은 이상적으로 사용됩니다 &lt;code&gt;using &lt;a href=&quot;stringtools&quot;&gt;StringTools&lt;/a&gt;&lt;/code&gt; 한 다음 역할을 &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;확장&lt;/a&gt; 받는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3013818020dddedea1529800702b7bfa65ce178e" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on enum values. It is ideally used with &lt;code&gt;using &lt;a href=&quot;enumvaluetools#EnumValueTools&quot;&gt;EnumValueTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;../enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt; types.</source>
          <target state="translated">이 클래스는 열거 형 값에 대한 고급 메소드를 제공합니다. &lt;code&gt;using &lt;a href=&quot;enumvaluetools#EnumValueTools&quot;&gt;EnumValueTools&lt;/a&gt;&lt;/code&gt; 를 사용 하는 데 이상적 이며 &lt;code&gt;&lt;a href=&quot;../enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt; 유형 의 &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;확장&lt;/a&gt; 으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="1174754923e2dcacbf5f86f3a5464e893770d3ff" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on enums. It is ideally used with &lt;code&gt;using &lt;a href=&quot;enumtools#EnumTools&quot;&gt;EnumTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;enum&lt;/code&gt; types.</source>
          <target state="translated">이 클래스는 열거 형에 대한 고급 메소드를 제공합니다. &lt;code&gt;using &lt;a href=&quot;enumtools#EnumTools&quot;&gt;EnumTools&lt;/a&gt;&lt;/code&gt; 를 사용 하는 데 이상적 이며 &lt;code&gt;enum&lt;/code&gt; 의 &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;확장&lt;/a&gt; 으로 작동합니다. 타입.</target>
        </trans-unit>
        <trans-unit id="4a2cff56bafe0c8c1b2f181a95a9ee605f6eb2aa" translate="yes" xml:space="preserve">
          <source>This class provides functions on expression arrays for convenience. For a detailed reference on each method, see the documentation of ExprTools.</source>
          <target state="translated">이 클래스는 편의를 위해 식 배열에 함수를 제공합니다. 각 방법에 대한 자세한 내용은 ExprTools 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="270ba2dc81d56d1a6ec3c7244ee2d7fe03fc6958" translate="yes" xml:space="preserve">
          <source>This class provides some methods which can be invoked from command line using &lt;code&gt;--macro server.field(args)&lt;/code&gt;.</source>
          <target state="translated">이 클래스는 &lt;code&gt;--macro server.field(args)&lt;/code&gt; 사용하여 명령 행에서 호출 할 수있는 몇 가지 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="df2d013415a0ba51ecce02f23f9e8317ad0a8b8a" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to convert elements from the macro context to a human-readable String representation.</source>
          <target state="translated">이 클래스는 요소를 매크로 컨텍스트에서 사람이 읽을 수있는 String 표현으로 변환하는 유틸리티 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8ca2a2b31a3ace836fb5ca95ea780e1131e640e9" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with AST-level types. It is best used through &lt;code&gt;using &lt;a href=&quot;complextypetools#ComplexTypeTools&quot;&gt;haxe.macro.ComplexTypeTools&lt;/a&gt;&lt;/code&gt; syntax and then provides additional methods on &lt;code&gt;&lt;a href=&quot;complextype#ComplexType&quot;&gt;haxe.macro.ComplexType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">이 클래스는 AST 레벨 유형에 사용할 수있는 유틸리티 메소드를 제공합니다. 그것은 최선을 사용 &lt;code&gt;using &lt;a href=&quot;complextypetools#ComplexTypeTools&quot;&gt;haxe.macro.ComplexTypeTools&lt;/a&gt;&lt;/code&gt; 구문을 다음에 대한 자세한 방법을 제공합니다 &lt;code&gt;&lt;a href=&quot;complextype#ComplexType&quot;&gt;haxe.macro.ComplexType&lt;/a&gt;&lt;/code&gt; 을 인스턴스 합니다.</target>
        </trans-unit>
        <trans-unit id="ce6186a75f7314123487ea057b86acce3bdde783" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with expressions. It is best used through 'using haxe.macro.ExprTools' syntax and then provides additional methods on haxe.macro.Expr instances.</source>
          <target state="translated">이 클래스는 표현식 작업에 유용한 유틸리티 메소드를 제공합니다. 'haxe.macro.ExprTools 사용'구문을 통해 가장 잘 사용되며 haxe.macro.Expr 인스턴스에 대한 추가 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9153321ae1931deb8e0b4e33bdf4d76cc177fe61" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with strings in macro context.</source>
          <target state="translated">이 클래스는 매크로 컨텍스트에서 문자열로 작업하기위한 일부 유틸리티 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d0cfa554f02c2e3b8a7a4c5ea1211eacff647d48" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with typed expressions. It is best used through 'using haxe.macro.TypedExprTools' syntax and then provides additional methods on &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;haxe.macro.TypedExpr&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">이 클래스는 유형이 지정된 표현식으로 작업하기위한 유틸리티 메소드를 제공합니다. 'haxe.macro.TypedExprTools 사용'구문을 통해 가장 잘 사용되며 &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;haxe.macro.TypedExpr&lt;/a&gt;&lt;/code&gt; 인스턴스 에 추가 메소드를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="9bad97f173508bdc3b4b730e52294643414e9ccc" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with types. It is best used through 'using haxe.macro.TypeTools' syntax and then provides additional methods on haxe.macro.Type instances.</source>
          <target state="translated">이 클래스는 유형에 대한 몇 가지 유틸리티 메소드를 제공합니다. 'haxe.macro.TypeTools 사용'구문을 통해 가장 잘 사용되며 haxe.macro.Type 인스턴스에 대한 추가 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5fbd2b2cb53735c6f3f9f8137294743b30a164b8" translate="yes" xml:space="preserve">
          <source>This class provides utility methods to convert Xml instances to String representation.</source>
          <target state="translated">이 클래스는 Xml 인스턴스를 String 표현으로 변환하는 유틸리티 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d160c2bac620ae30631a38d547a6b97e3f61b861" translate="yes" xml:space="preserve">
          <source>This class runs unit test cases and prints the result.</source>
          <target state="translated">이 클래스는 단위 테스트 사례를 실행하고 결과를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="d29af5193ee23c06255e939cb9724591d6e9afff" translate="yes" xml:space="preserve">
          <source>This corresponds to the original syntactic position of &lt;code&gt;e&lt;/code&gt;. The index of the first declared constructor is 0, the next one is 1 etc.</source>
          <target state="translated">이것은 &lt;code&gt;e&lt;/code&gt; 의 원래 구문 위치에 해당합니다 . 첫 번째 선언 된 생성자의 색인은 0이고 다음은 1입니다.</target>
        </trans-unit>
        <trans-unit id="143cfb8a49926328ff87f8afb00ce1c29fdeb0b9" translate="yes" xml:space="preserve">
          <source>This creates a new Http instance and makes a GET request by calling its &lt;code&gt;request(&lt;a href=&quot;../bool&quot;&gt;false&lt;/a&gt;)&lt;/code&gt; method.</source>
          <target state="translated">새 Http 인스턴스를 만들고 &lt;code&gt;request(&lt;a href=&quot;../bool&quot;&gt;false&lt;/a&gt;)&lt;/code&gt; 메서드를 호출하여 GET 요청을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c64987f5b234076d3efed10be6d0034a3b9aa19d" translate="yes" xml:space="preserve">
          <source>This does not do a request until &lt;code&gt;request()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;request()&lt;/code&gt; 가 호출 될 때까지 요청을 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="430cc46b0eb0bfa57bc14a484f6fe0b58fbe8c8c" translate="yes" xml:space="preserve">
          <source>This does not include static fields of parent classes.</source>
          <target state="translated">여기에는 부모 클래스의 정적 필드가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b38f684c505616c20bcc717ec27f4d5d2a9e5da7" translate="yes" xml:space="preserve">
          <source>This does not parse &lt;code&gt;buf&lt;/code&gt; immediately. It is parsed only when calls to &lt;code&gt;this.&lt;a href=&quot;#unserialize&quot;&gt;unserialize&lt;/a&gt;&lt;/code&gt; are made.</source>
          <target state="translated">이것은 &lt;code&gt;buf&lt;/code&gt; 를 즉시 구문 분석하지 않습니다 . &lt;code&gt;this.&lt;a href=&quot;#unserialize&quot;&gt;unserialize&lt;/a&gt;&lt;/code&gt; 호출 할 때만 구문 분석됩니다 . &lt;a href=&quot;#unserialize&quot;&gt;직렬화 해제&lt;/a&gt; 가 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="0c63c2fa92200fc4a4b3c035337f2185b0542696" translate="yes" xml:space="preserve">
          <source>This error can be used to handle or produce compilation errors in macros.</source>
          <target state="translated">이 오류는 매크로에서 컴파일 오류를 처리하거나 생성하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fd68f6c1815da9acce9b759c6a2a1af9d4ec28b" translate="yes" xml:space="preserve">
          <source>This exception is raised when reading while data is no longer available in the &lt;code&gt;&lt;a href=&quot;input#Input&quot;&gt;haxe.io.Input&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;input#Input&quot;&gt;haxe.io.Input&lt;/a&gt;&lt;/code&gt; 에서 데이터를 더 이상 사용할 수없는 동안 읽을 때이 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="cc8ffd843732b44fb8af7e87a6b295d9a775cc89" translate="yes" xml:space="preserve">
          <source>This function does not modify &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">이 기능은 &lt;code&gt;this&lt;/code&gt; 목록을 수정하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a438994aa4116fc82ea3e056af65ad1980adeaaa" translate="yes" xml:space="preserve">
          <source>This function does not traverse the elements, but simply sets the internal references to null and &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; to 0.</source>
          <target state="translated">이 함수는 요소를 순회하지 않고 내부 참조를 null로 설정합니다 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 는 0입니다.</target>
        </trans-unit>
        <trans-unit id="c5758ab2e37559e50d889774c1267eacd1d2bb85" translate="yes" xml:space="preserve">
          <source>This function expects &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; to describe a valid substring of &lt;code&gt;s&lt;/code&gt;, or else the result is unspecified. To get more robust behavior, &lt;code&gt;this.&lt;a href=&quot;#add&quot;&gt;add&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; can be used instead.</source>
          <target state="translated">이 함수는 &lt;code&gt;pos&lt;/code&gt; 와 &lt;code&gt;len&lt;/code&gt; 이 &lt;code&gt;s&lt;/code&gt; 의 유효한 하위 문자열을 설명 할 것으로 예상 하거나 그렇지 않으면 결과가 지정되지 않습니다. ,보다 강력한 행동을 얻으려면 &lt;code&gt;this.&lt;a href=&quot;#add&quot;&gt;add&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcb8846d0c859d6306b57a0ad72f2a11c6a6e72c" translate="yes" xml:space="preserve">
          <source>This function expects &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; to describe a valid substring of &lt;code&gt;s&lt;/code&gt;, or else the result is unspecified. To get more robust behavior, &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; can be used instead.</source>
          <target state="translated">이 함수는 &lt;code&gt;pos&lt;/code&gt; 와 &lt;code&gt;len&lt;/code&gt; 이 &lt;code&gt;s&lt;/code&gt; 의 유효한 하위 문자열을 설명 할 것으로 예상 하거나 그렇지 않으면 결과가 지정되지 않습니다. ,보다 강력한 행동을 얻으려면 &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8f511175188b2d99e36953a70f3b2421fe76d2c" translate="yes" xml:space="preserve">
          <source>This function guarantees that the class constructor is called.</source>
          <target state="translated">이 함수는 클래스 생성자가 호출되도록합니다.</target>
        </trans-unit>
        <trans-unit id="6774f4f7d54047d8c56b22d5312b1f0bc285345b" translate="yes" xml:space="preserve">
          <source>This function guarantees that the class constructor is not called.</source>
          <target state="translated">이 함수는 클래스 생성자가 호출되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="8dc115a814f0feff1a73a8cfd8dfe4809511f6f3" translate="yes" xml:space="preserve">
          <source>This function internally calls &lt;code&gt;isSpace()&lt;/code&gt; to decide which characters to remove.</source>
          <target state="translated">이 함수는 내부적으로 &lt;code&gt;isSpace()&lt;/code&gt; 를 호출 하여 제거 할 문자를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c63d0e1ebb3d6cd0f48014677bf29191e7c1b167" translate="yes" xml:space="preserve">
          <source>This function is mostly inverse to &lt;code&gt;&lt;a href=&quot;complextypetools#toType&quot;&gt;ComplexTypeTools.toType&lt;/a&gt;&lt;/code&gt;, but may lose some information on types that do not have a corresponding syntax version, such as monomorphs. In these cases, the result is null.</source>
          <target state="translated">이 함수는 대부분 &lt;code&gt;&lt;a href=&quot;complextypetools#toType&quot;&gt;ComplexTypeTools.toType&lt;/a&gt;&lt;/code&gt; 에 반비례 하지만 monomorphs와 같이 해당 구문 버전이없는 유형에 대한 일부 정보가 손실 될 수 있습니다. 이 경우 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="e0a2506b49cb4b37d812e18c54c04b6e22717152" translate="yes" xml:space="preserve">
          <source>This function is only defined if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are of the same type.</source>
          <target state="translated">이 함수는 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 같은 유형 인 경우에만 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="5db1de37ba729131f5888cc639fb798f1bbcfb78" translate="yes" xml:space="preserve">
          <source>This function may call &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveClass&lt;/code&gt; to determine a Class from a String, and &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveEnum&lt;/code&gt; to determine an Enum from a String.</source>
          <target state="translated">이 함수는 &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveClass&lt;/code&gt; 호출 할 수 있습니다 . resolver .resolveClass 는 문자열에서 클래스를 결정합니다 &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveEnum&lt;/code&gt; 은 문자열에서 열거 형 을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="66babd745461df8ad2b058452c35619cc9a897af" translate="yes" xml:space="preserve">
          <source>This function replaces occurrences of type parameters in &lt;code&gt;t&lt;/code&gt; if they are part of &lt;code&gt;typeParameters&lt;/code&gt;. The array index of such a type parameter is then used to lookup the concrete type in &lt;code&gt;concreteTypes&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;typeParameters&lt;/code&gt; 의 일부인 경우 &lt;code&gt;t&lt;/code&gt; 에서 유형 매개 변수의 발생을 대체합니다 . 그런 다음 이러한 유형 매개 변수의 배열 색인을 사용하여 concreteTypes에서 &lt;code&gt;concreteTypes&lt;/code&gt; 유형을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="210de59f0ddfd2be0d2bcf3fc0346b564903e841" translate="yes" xml:space="preserve">
          <source>This function returns as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns true.</source>
          <target state="translated">이 함수는 &lt;code&gt;f&lt;/code&gt; 에 대한 호출이 true를 리턴 하는 요소가 발견되는 즉시 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bad5c292b32ba52b5a375686e7c88a2a51f36bbe" translate="yes" xml:space="preserve">
          <source>This function returns false as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns false.</source>
          <target state="translated">이 함수는 &lt;code&gt;f&lt;/code&gt; 에 대한 호출이 false를 리턴하는 요소가 발견되는 즉시 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ee7f540c07eb69db96680cabccc4b3afa788be83" translate="yes" xml:space="preserve">
          <source>This function returns true as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns true.</source>
          <target state="translated">이 함수는 &lt;code&gt;f&lt;/code&gt; 에 대한 호출이 true를 리턴하는 요소가 발견되는 즉시 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7b518f0b02723369d8d3901f8c68301934b0ffe5" translate="yes" xml:space="preserve">
          <source>This function returns true as soon as an element is found which is equal to &lt;code&gt;elt&lt;/code&gt; according to the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">이 함수는 &lt;code&gt;==&lt;/code&gt; 연산자 에 따라 &lt;code&gt;elt&lt;/code&gt; 와 같은 요소를 찾 자마자 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2795a181a4ec573a9ef2e750858139586eb8cf76" translate="yes" xml:space="preserve">
          <source>This function should not be called more than once on a given &lt;code&gt;&lt;a href=&quot;bytesoutput#BytesOutput&quot;&gt;BytesOutput&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">지정된 &lt;code&gt;&lt;a href=&quot;bytesoutput#BytesOutput&quot;&gt;BytesOutput&lt;/a&gt;&lt;/code&gt; 인스턴스 에서이 함수를 두 번 이상 호출하면 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="6cceb7d8907bd25f999d5f411b15fe16ce6bc0aa" translate="yes" xml:space="preserve">
          <source>This function traverses all elements.</source>
          <target state="translated">이 함수는 모든 요소를 ​​순회합니다.</target>
        </trans-unit>
        <trans-unit id="9adca71a2e69db0f24bd7370e5d5c0c452096b3f" translate="yes" xml:space="preserve">
          <source>This function uses operator &lt;code&gt;==&lt;/code&gt; to check for equality.</source>
          <target state="translated">이 함수는 operator &lt;code&gt;==&lt;/code&gt; 를 사용 하여 동등성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="724ec37ad5a6c11574123667b3ceba94ab8580be" translate="yes" xml:space="preserve">
          <source>This interface should be used for externs only. Haxe does not support custom array access on classes. However, array access can be implemented for abstract types.</source>
          <target state="translated">이 인터페이스는 extern에만 사용해야합니다. Haxe는 클래스에서 사용자 정의 배열 액세스를 지원하지 않습니다. 그러나 추상 유형에 대해서는 배열 액세스를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9549ca6dd29bf4a8bbdefff3749e0236f253aa49" translate="yes" xml:space="preserve">
          <source>This is a convenience function for &lt;code&gt;ltrim(rtrim(s))&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;ltrim(rtrim(s))&lt;/code&gt; 편의 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="b1e809bd3717ce9ec3ef41aff438cf69205924f3" translate="yes" xml:space="preserve">
          <source>This is a convenience function for &lt;code&gt;s.split(sub).join(by)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s.split(sub).join(by)&lt;/code&gt; 의 편의 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="8575ab5fa2557f8ecfdce478923f5d0e365f8778" translate="yes" xml:space="preserve">
          <source>This is a convenience function for calculating the difference between &lt;code&gt;&lt;a href=&quot;timer#stamp&quot;&gt;Timer.stamp&lt;/a&gt;()&lt;/code&gt; before and after the invocation of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;f&lt;/code&gt; 호출 전후의 &lt;code&gt;&lt;a href=&quot;timer#stamp&quot;&gt;Timer.stamp&lt;/a&gt;()&lt;/code&gt; 차이를 계산하는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="4b2e83d8d13625d7e368d24ff50dace3e37cbbd7" translate="yes" xml:space="preserve">
          <source>This is a convenience function for calculating the difference between Timer.stamp() before and after the invocation of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;f&lt;/code&gt; 호출 전후의 Timer.stamp () 사이의 차이를 계산하기위한 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="59ee4a148535a6f0e83cc3fcaf8ca6e2e857c57a" translate="yes" xml:space="preserve">
          <source>This is a convenience function for calling &lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;(d.getTime() + t)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;(d.getTime() + t)&lt;/code&gt; 호출을위한 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="6c0dd01961e55c76a114e141b773ccaa74a97206" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new Timer instance with &lt;code&gt;time_ms&lt;/code&gt; as argument, binding its &lt;code&gt;run()&lt;/code&gt; method to &lt;code&gt;f&lt;/code&gt; and then stopping &lt;code&gt;this&lt;/code&gt; Timer upon the first invocation.</source>
          <target state="translated">이것은 &lt;code&gt;time_ms&lt;/code&gt; 를 인수로 사용하여 새 Timer 인스턴스를 만들고 해당 &lt;code&gt;run()&lt;/code&gt; 메서드를 &lt;code&gt;f&lt;/code&gt; 에 바인딩 한 다음 첫 번째 호출 &lt;code&gt;this&lt;/code&gt; Timer 를 중지 하는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="36f6df51dc22fd8778edbeaa3c76bf097f6bc101" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new Timer instance with &lt;code&gt;time_ms&lt;/code&gt; as argument, binding its run() method to &lt;code&gt;f&lt;/code&gt; and then stopping &lt;code&gt;this&lt;/code&gt; Timer upon the first invocation.</source>
          <target state="translated">이렇게하여 새로운 타이머 인스턴스를 생성하는 편리한 기능이다 &lt;code&gt;time_ms&lt;/code&gt; , 인수로서 그것의 run () 메소드 결합 &lt;code&gt;f&lt;/code&gt; 다음 중단 &lt;code&gt;this&lt;/code&gt; 처음에 호출 타이머.</target>
        </trans-unit>
        <trans-unit id="3e4c23d5dd90968ac6bb948743c6d3fd859e5e8e" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Serializer, serialize &lt;code&gt;v&lt;/code&gt; into it and obtain the result through a call to &lt;code&gt;toString()&lt;/code&gt;.</source>
          <target state="translated">이것은 Serializer의 새 인스턴스를 만들고 &lt;code&gt;v&lt;/code&gt; 를 직렬화 하고 &lt;code&gt;toString()&lt;/code&gt; 호출을 통해 결과를 얻는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="48153eb9578e4a18821dcb3ddcdbbc28a67601cc" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Serializer, serialize &lt;code&gt;v&lt;/code&gt; into it and obtain the result through a call to toString().</source>
          <target state="translated">이것은 Serializer의 새 인스턴스를 만들고 &lt;code&gt;v&lt;/code&gt; 를 직렬화 하고 toString ()을 호출하여 결과를 얻는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="10e790f4e49938eea37d511bfce5a12e59ed302e" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Unserializer with &lt;code&gt;v&lt;/code&gt; as buffer and calling its &lt;code&gt;unserialize()&lt;/code&gt; method once.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 를 버퍼로 사용 하여 Unserializer의 새 인스턴스를 만들고 해당 &lt;code&gt;unserialize()&lt;/code&gt; 메서드를 한 번 호출 하는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="c19ade9b59a6e1013858111850c37e33a460b78c" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Unserializer with &lt;code&gt;v&lt;/code&gt; as buffer and calling its unserialize() method once.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 를 버퍼로 하여 Unserializer의 새 인스턴스를 만들고 unserialize () 메서드를 한 번 호출 하는 편리한 함수입니다 .</target>
        </trans-unit>
        <trans-unit id="aca763690a3fec280e3b33d017dc8233580ccc66" translate="yes" xml:space="preserve">
          <source>This is a multi-type abstract, it is instantiated as one of its specialization types depending on its type parameters.</source>
          <target state="translated">이것은 다중 유형 초록이며 유형 매개 변수에 따라 전문화 유형 중 하나로 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">이것은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7c224da170a76eecc396ff8c5fc695b28e9760a" translate="yes" xml:space="preserve">
          <source>This is equivalent to the shorthand syntax &lt;code&gt;~/r/opt&lt;/code&gt;</source>
          <target state="translated">이것은 약식 구문 &lt;code&gt;~/r/opt&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="be3712d370c54734fb8773f44c846374c044e0ba" translate="yes" xml:space="preserve">
          <source>This is only defined for &lt;code&gt;@:build/@:autoBuild&lt;/code&gt; macros.</source>
          <target state="translated">이것은 &lt;code&gt;@:build/@:autoBuild&lt;/code&gt; 매크로 에만 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="977cb6100e94159ea1107b9382b80edf0dea91c8" translate="yes" xml:space="preserve">
          <source>This is only guaranteed to work for anonymous structures. Refer to &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; for a function supporting class instances.</source>
          <target state="translated">이것은 익명 구조에서만 작동합니다. 클래스 인스턴스를 지원하는 함수 는 &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29322d36f24e9b972b21a5639c9decddd7ed499d" translate="yes" xml:space="preserve">
          <source>This is only guaranteed to work on anonymous structures.</source>
          <target state="translated">이것은 익명 구조에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ef00397b7be63eb2d4060f8832932dfd1db5823f" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;../string#substr&quot;&gt;String.substr&lt;/a&gt;&lt;/code&gt; but the &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; parts are considering UTF8 characters.</source>
          <target state="translated">이것은 &lt;code&gt;&lt;a href=&quot;../string#substr&quot;&gt;String.substr&lt;/a&gt;&lt;/code&gt; 과 비슷 하지만 &lt;code&gt;pos&lt;/code&gt; 및 &lt;code&gt;len&lt;/code&gt; 부분은 UTF8 문자를 고려하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="2608e20a2582c1544e95e4aee8845e70fd812f9a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;stringmap#StringMap&quot;&gt;StringMap&lt;/a&gt;&lt;/code&gt; excepts that it does not sanitize the keys. As a result, it will be faster to access the map for reading, but it might fail with some reserved keys such as &lt;code&gt;constructor&lt;/code&gt; or &lt;code&gt;prototype&lt;/code&gt;.</source>
          <target state="translated">이것은 키를 살균하지 않는다는 점을 제외 하면 &lt;code&gt;&lt;a href=&quot;stringmap#StringMap&quot;&gt;StringMap&lt;/a&gt;&lt;/code&gt; 과 유사 합니다. 결과적으로, 읽기 위해 맵에 액세스하는 것이 더 빠르지 만 &lt;code&gt;constructor&lt;/code&gt; 또는 &lt;code&gt;prototype&lt;/code&gt; 과 같은 일부 예약 된 키로 인해 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92cba053fdd39d99c4d8f781b7805aafad22a0f9" translate="yes" xml:space="preserve">
          <source>This is the api that is passed to the custom JS generator.</source>
          <target state="translated">이것은 사용자 정의 JS 생성기로 전달되는 API입니다.</target>
        </trans-unit>
        <trans-unit id="00612c7c1510f712bac51db4e79ef978c2d11686" translate="yes" xml:space="preserve">
          <source>This is the inverse operation to htmlEscape, i.e. the following always holds: &lt;code&gt;htmlUnescape(htmlEscape(s)) == s&lt;/code&gt;</source>
          <target state="translated">이것은 htmlEscape에 대한 역 연산입니다. 즉, 다음은 항상 유지됩니다. &lt;code&gt;htmlUnescape(htmlEscape(s)) == s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47b6268477b997096047c153823695fc5dfb1479" translate="yes" xml:space="preserve">
          <source>This is the leading part of the path that is not part of the file name and the extension.</source>
          <target state="translated">이것은 파일 이름과 확장자의 일부가 아닌 경로의 앞 부분입니다.</target>
        </trans-unit>
        <trans-unit id="cad385727c236768f60af07c06f075b19025eb06" translate="yes" xml:space="preserve">
          <source>This is the mathematical inverse operation of exp, i.e. &lt;code&gt;log(exp(v)) == v&lt;/code&gt; always holds.</source>
          <target state="translated">이것은 exp의 수학적 역 연산입니다. 즉 &lt;code&gt;log(exp(v)) == v&lt;/code&gt; 항상 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="be9bc9ee7606985619612f5b37b160cfbb8a5dba" translate="yes" xml:space="preserve">
          <source>This is the part of the part between the directory and the extension.</source>
          <target state="translated">이것은 디렉토리와 확장자 사이의 부분입니다.</target>
        </trans-unit>
        <trans-unit id="7271f92d7b05c788971e26fb2f9cd01687da6fae" translate="yes" xml:space="preserve">
          <source>This may also reduce the size of serialization Strings at the expense of performance.</source>
          <target state="translated">또한 성능을 희생하여 직렬화 문자열의 크기를 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bbb1fc21ba602499dc8abd14192b139958b9860" translate="yes" xml:space="preserve">
          <source>This may involve initialization of the internal buffer.</source>
          <target state="translated">내부 버퍼 초기화가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7888b892b42ba4ab109f31027de691b2f4850a1" translate="yes" xml:space="preserve">
          <source>This may reduce the size of serialization Strings, but makes them less suited for long-term storage: If constructors are removed or added from the enum, the indices may no longer match.</source>
          <target state="translated">직렬화 문자열의 크기는 줄어들지 만 장기 저장에 적합하지 않습니다. 생성자가 열거 형에서 제거되거나 추가되면 인덱스가 더 이상 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="111c8da522ac61a48460b07084e5427c0ea8ed27" translate="yes" xml:space="preserve">
          <source>This may return the empty Array &lt;code&gt;[]&lt;/code&gt; if all constructors of &lt;code&gt;e&lt;/code&gt; require arguments.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 의 모든 생성자에 인수가 필요한 경우 빈 배열 &lt;code&gt;[]&lt;/code&gt; 을 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0103ae6e047d80d64ba94fae2a542e4725f91ccf" translate="yes" xml:space="preserve">
          <source>This means that a value of any type can be assigned to &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, and vice-versa, a value of &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; type can be assigned to any other type.</source>
          <target state="translated">즉, 모든 유형의 값을 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; 에 할당 할 수 있고 , 반대로 &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; 유형 의 값을 다른 유형에 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28de51ba6c0f81ebff797ff81eddc7e656c4406e" translate="yes" xml:space="preserve">
          <source>This method can be rebound to a custom function:</source>
          <target state="translated">이 메소드는 사용자 정의 함수로 리 바인드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f03bf1bb69ef5b8c2c5caaeb23dd538a44489e25" translate="yes" xml:space="preserve">
          <source>This method checks if a downcast is possible. That is, if the runtime type of &lt;code&gt;value&lt;/code&gt; is assignable to the class specified by &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; is returned. Otherwise null is returned.</source>
          <target state="translated">이 방법은 다운 캐스트가 가능한지 확인합니다. 즉, 런타임 유형의 &lt;code&gt;value&lt;/code&gt; 이 &lt;code&gt;c&lt;/code&gt; 로 지정된 클래스에 지정 가능한 경우 &lt;code&gt;value&lt;/code&gt; 가 리턴됩니다. 그렇지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4e8d7f1f3e5da7105714c5148fe115f289edc950" translate="yes" xml:space="preserve">
          <source>This method checks if a downcast is possible. That is, if the runtime type of &lt;code&gt;value&lt;/code&gt; is assignable to the type specified by &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; is returned. Otherwise null is returned.</source>
          <target state="translated">이 방법은 다운 캐스트가 가능한지 확인합니다. 의 실행 입력하면 즉, &lt;code&gt;value&lt;/code&gt; 에 지정된 타입에 할당 인 &lt;code&gt;c&lt;/code&gt; , &lt;code&gt;value&lt;/code&gt; 반환된다. 그렇지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="69d28f18019e4cee9f5d2c2b7ecf7a8a0637d7b0" translate="yes" xml:space="preserve">
          <source>This method does not call itself recursively. It should instead be used in a recursive function which handles the expression nodes of interest.</source>
          <target state="translated">이 메소드는 재귀 적으로 호출되지 않습니다. 대신 관심 표현 노드를 처리하는 재귀 함수에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="16de304def6f081540a27177b539be3d4ca38a92" translate="yes" xml:space="preserve">
          <source>This method generates AST nodes depending on the macro-runtime value of &lt;code&gt;v&lt;/code&gt;. As such, only basic types and enums are supported and the behavior for other types is undefined.</source>
          <target state="translated">이 방법은 매크로 런타임 값 &lt;code&gt;v&lt;/code&gt; 에 따라 AST 노드를 생성 합니다. 따라서 기본 형식과 열거 형 만 지원되며 다른 형식의 동작은 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="592bf71cefa725fbc6aab968ad50b4503f194e06" translate="yes" xml:space="preserve">
          <source>This method handles leap years.</source>
          <target state="translated">이 방법은 윤년을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="6784033e89e5a5faf06cbafe68be0578f46e7ea7" translate="yes" xml:space="preserve">
          <source>This method immediately starts a timer and returns a function to stop it:</source>
          <target state="translated">이 메서드는 즉시 타이머를 시작하고 중지하는 함수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fbe6304b5348ddfdb4ff0b9427f1ebe1adec1546" translate="yes" xml:space="preserve">
          <source>This method is called upon a Http status change, with &lt;code&gt;status&lt;/code&gt; being the new status.</source>
          <target state="translated">이 메소드는 Http 상태 변경시 호출되며 &lt;code&gt;status&lt;/code&gt; 는 새로운 상태입니다.</target>
        </trans-unit>
        <trans-unit id="71553280198745c8f8257ae1076ff3eb29d61386" translate="yes" xml:space="preserve">
          <source>This method is called upon a request error, with &lt;code&gt;msg&lt;/code&gt; containing the error description.</source>
          <target state="translated">이 메소드는 요청 설명에 오류 설명이 포함 된 &lt;code&gt;msg&lt;/code&gt; 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b7d1c6163e7dacf2bd7522b745f9271c2424f20" translate="yes" xml:space="preserve">
          <source>This method is called upon a successful request, with &lt;code&gt;data&lt;/code&gt; containing the result String.</source>
          <target state="translated">이 메서드는 요청이 성공 하면 결과 문자열이 포함 된 &lt;code&gt;data&lt;/code&gt; 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffc8310203c9ff5523fad47493911af0c8524571" translate="yes" xml:space="preserve">
          <source>This method is faster than &lt;code&gt;&lt;a href=&quot;string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;()&lt;/code&gt; on some platforms, but the result is unspecified if &lt;code&gt;index&lt;/code&gt; is negative or greater than &lt;code&gt;s.length&lt;/code&gt;.</source>
          <target state="translated">이 방법은 일부 플랫폼에서 &lt;code&gt;&lt;a href=&quot;string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;()&lt;/code&gt; 보다 빠르지 만 &lt;code&gt;index&lt;/code&gt; 가 음수이거나 &lt;code&gt;s.length&lt;/code&gt; 보다 큰 경우 결과가 지정되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4f69298485f4636a0fae2bc7516db01a60274f26" translate="yes" xml:space="preserve">
          <source>This method is implemented in the compiler. This definition exists only for documentation.</source>
          <target state="translated">이 메소드는 컴파일러에서 구현됩니다. 이 정의는 문서 용으로 만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1fba886274a8ffa551b2997a9acb8bf1d569a0fd" translate="yes" xml:space="preserve">
          <source>This method is invoked repeatedly on &lt;code&gt;this&lt;/code&gt; Timer.</source>
          <target state="translated">이 메소드는 &lt;code&gt;this&lt;/code&gt; 타이머에서 반복적으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a359b7d591c332147c67e4aae76da8079f9b97b1" translate="yes" xml:space="preserve">
          <source>This method is not guaranteed to work with core types such as &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt; 와 같은 핵심 유형에서 작동한다고 보장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="353812b0955f9a565f0a371dd9044469afaa30d2" translate="yes" xml:space="preserve">
          <source>This method is not guaranteed to work with interfaces or core types such as &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 인터페이스 , &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt; 와 같은 코어 유형에서 작동하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f7c3c8e67367f1b46be53f404107e9c66677046" translate="yes" xml:space="preserve">
          <source>This method is not required to check &lt;code&gt;hasNext()&lt;/code&gt; first. A call to this method while &lt;code&gt;hasNext()&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; yields unspecified behavior.</source>
          <target state="translated">이 메소드는 &lt;code&gt;hasNext()&lt;/code&gt; 먼저 확인할 필요는 없습니다 . &lt;code&gt;hasNext()&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 인 동안이 메소드를 호출 하면 지정되지 않은 동작이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c7348ed21aeda95b8e72d6f66638bd2dbcd7f535" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to work on anonymous structures.</source>
          <target state="translated">이 방법은 익명 구조에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d95534aaa4e843469216f492d3d14226e3c5e4d3" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to work on anonymous structures. Refer to &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; for a function supporting class instances.</source>
          <target state="translated">이 방법은 익명 구조에서만 작동합니다. 클래스 인스턴스를 지원하는 함수 는 &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6ec955528df1ea9e997bf8a3a2ae089ad061815" translate="yes" xml:space="preserve">
          <source>This method is optimized if &lt;code&gt;v&lt;/code&gt; is an enum instance expression such as &lt;code&gt;SomeEnum.SomeCtor&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;v&lt;/code&gt; 가 &lt;code&gt;SomeEnum.SomeCtor&lt;/code&gt; 와 같은 열거 형 인스턴스 표현식 인 경우 최적화됩니다 .</target>
        </trans-unit>
        <trans-unit id="96b7b9fd0997e0b5fdd6aa15fc29524f86b1f3b8" translate="yes" xml:space="preserve">
          <source>This method is optimized if &lt;code&gt;v&lt;/code&gt; is an enum instance expression such as SomeEnum.SomeCtor.</source>
          <target state="translated">이 방법은 &lt;code&gt;v&lt;/code&gt; 가 SomeEnum.SomeCtor와 같은 열거 형 인스턴스 식인 경우 최적화됩니다 .</target>
        </trans-unit>
        <trans-unit id="7cbe3b12f9586cfe5200330c037787e8a1078996" translate="yes" xml:space="preserve">
          <source>This method might clear several metadata entries of the same name.</source>
          <target state="translated">이 방법은 동일한 이름의 여러 메타 데이터 항목을 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c5d6c2a65f93e5d2ac234a9310da7c59265d098" translate="yes" xml:space="preserve">
          <source>This method modifies the internal state.</source>
          <target state="translated">이 방법은 내부 상태를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="0cb8979a918fcee65731b49554f7f7149939002b" translate="yes" xml:space="preserve">
          <source>This method provides a fluent interface.</source>
          <target state="translated">이 방법은 유연한 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="006f63344b6dbeb41f53b140f3c87688709ec322" translate="yes" xml:space="preserve">
          <source>This method returns true even if &lt;code&gt;key&lt;/code&gt; is bound to null.</source>
          <target state="translated">이 메소드는 &lt;code&gt;key&lt;/code&gt; 가 널에 바인드 되어도 true 를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2ed42d44534a1e6c0b1dee0caf74ecbb9415fdd1" translate="yes" xml:space="preserve">
          <source>This method should be considered experimental.</source>
          <target state="translated">이 방법은 실험적인 것으로 간주해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f143f24ffe108282e7b85fd62a9c09870db843f" translate="yes" xml:space="preserve">
          <source>This method should only be called after &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt;, and then operates on the String of that operation.</source>
          <target state="translated">이 메소드는 &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; 후에 만 호출해야합니다 . 일치 또는 &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt; 를 입력 한 다음 해당 오퍼레이션의 문자열에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="77f65256e817e52e8bfce68d4e4fa929f56f7932" translate="yes" xml:space="preserve">
          <source>This method traverses the stack until it finds a matching element and unlinks it, returning true.</source>
          <target state="translated">이 메소드는 일치하는 요소를 찾을 때까지 스택을 순회하고 링크를 해제하여 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1f4b4b4c8d1eb7e1ba13719fe7a6fc0c26ade742" translate="yes" xml:space="preserve">
          <source>This only includes fields which are known at compile-time. In particular, using &lt;code&gt;getInstanceFields(getClass(obj))&lt;/code&gt; will not include any fields which were added to &lt;code&gt;obj&lt;/code&gt; at runtime.</source>
          <target state="translated">여기에는 컴파일 타임에 알려진 필드 만 포함됩니다. 특히 &lt;code&gt;getInstanceFields(getClass(obj))&lt;/code&gt; 하면 런타임 에 &lt;code&gt;obj&lt;/code&gt; 에 추가 된 필드가 포함되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f41ccd35985e8452b3b6ecd84a2546e275e916e6" translate="yes" xml:space="preserve">
          <source>This only includes fields which are known at compile-time. In particular, using getInstanceFields(getClass(obj)) will not include any fields which were added to obj at runtime.</source>
          <target state="translated">여기에는 컴파일 타임에 알려진 필드 만 포함됩니다. 특히 getInstanceFields (getClass (obj))를 사용하면 런타임에 obj에 추가 된 필드가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="613150d9ce5e3480a3a4a1927679151ee7cbed2c" translate="yes" xml:space="preserve">
          <source>This only works if &lt;code&gt;e&lt;/code&gt; has a position which the compiler can find. While this is true for any expressions appearing in real Haxe code (i.e. some .hx file), it might not work for expressions generated by macros.</source>
          <target state="translated">이것은 &lt;code&gt;e&lt;/code&gt; 에 컴파일러가 찾을 수있는 위치가있는 경우에만 작동합니다 . 실제 Haxe 코드 (예 : 일부 .hx 파일)에 나타나는 표현식의 경우에는 해당되지만 매크로로 생성 된 표현식에는 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa14467fe8049852a596a6f63d71250329d8dcab" translate="yes" xml:space="preserve">
          <source>This operation depends on the position of &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">이 작업은 &lt;code&gt;e&lt;/code&gt; 의 위치에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="ca2ee2c4ad63796e9b105ce47355643a02b5fd0a" translate="yes" xml:space="preserve">
          <source>This operation does not modify &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">이 작업은 &lt;code&gt;this&lt;/code&gt; 배열을 수정하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ff4173e3adf5b496dd4cccc080d39ea2384eb314" translate="yes" xml:space="preserve">
          <source>This operation has no effect if the type has already been loaded, e.g. through &lt;code&gt;&lt;a href=&quot;context#getType&quot;&gt;Context.getType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유형이 이미로드 된 경우 (예 : &lt;code&gt;&lt;a href=&quot;context#getType&quot;&gt;Context.getType&lt;/a&gt;&lt;/code&gt; ) 이 조작은 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3520ed805531b7a442c3b7ef6fe59ce0ee1aa33b" translate="yes" xml:space="preserve">
          <source>This operation is not guaranteed to work if &lt;code&gt;s&lt;/code&gt; contains the &lt;code&gt;\0&lt;/code&gt; character.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 에 &lt;code&gt;\0&lt;/code&gt; 문자 가 포함되어 있으면이 작업이 작동하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e377b4d43f335386b3d9d3898dc94dc2f843a1d4" translate="yes" xml:space="preserve">
          <source>This operation is performed in-order.</source>
          <target state="translated">이 작업은 순서대로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f2f6b1dfe8108ff9fb08f60ddaa4f67b33e8c8aa" translate="yes" xml:space="preserve">
          <source>This operation is stable: The order of equal elements is preserved.</source>
          <target state="translated">이 작업은 안정적입니다. 동일한 요소의 순서가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="73db165c10b920dec0e1ac0f6dd8ccbbffd22df1" translate="yes" xml:space="preserve">
          <source>This operation may fail on structurally valid data if a type cannot be resolved or if a field cannot be set. This can happen when unserializing Strings that were serialized on a different Haxe target, in which the serialization side has to make sure not to include platform-specific data.</source>
          <target state="translated">유형을 확인할 수 없거나 필드를 설정할 수없는 경우 구조적으로 유효한 데이터에서이 작업이 실패 할 수 있습니다. 직렬화 측에서 플랫폼 별 데이터를 포함하지 않아야하는 다른 Haxe 대상에서 직렬화 된 문자열을 직렬화 해제 할 때 이러한 상황이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f4da95d73be830eec5c1a0e64ebb0391fa81769" translate="yes" xml:space="preserve">
          <source>This operation modifies &lt;code&gt;this&lt;/code&gt; Array in place.</source>
          <target state="translated">이 작업은 &lt;code&gt;this&lt;/code&gt; 배열을 제자리에 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="dd897fb8fbea36571390143ba22035d00c353828" translate="yes" xml:space="preserve">
          <source>This operation modifies &lt;code&gt;this&lt;/code&gt; Vector in place.</source>
          <target state="translated">이 작업은 &lt;code&gt;this&lt;/code&gt; Vector를 제자리에 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="cdc8beafd28f66bdb793c1404e9d58d0be9e3be2" translate="yes" xml:space="preserve">
          <source>This operation modifies Array &lt;code&gt;a&lt;/code&gt; in place.</source>
          <target state="translated">이 작업은 Array &lt;code&gt;a&lt;/code&gt; 를 제자리에서 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="33381c555198f72a06bbc769c60342da948e39cd" translate="yes" xml:space="preserve">
          <source>This operation modifies List &lt;code&gt;a&lt;/code&gt; in place and returns its head once modified. The &lt;code&gt;prev&lt;/code&gt; of the head is set to the tail of the sorted list.</source>
          <target state="translated">이 작업은 List &lt;code&gt;a&lt;/code&gt; 를 수정 하고 수정 된 헤드를 반환합니다. 머리 의 &lt;code&gt;prev&lt;/code&gt; 는 정렬 된 목록의 꼬리로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ad897bd4d6c146bd06cff36f265f38cfaa4134e6" translate="yes" xml:space="preserve">
          <source>This operation requires the source file the be known to the Haxe lexer in order to determine line breaks. It is thus only available in macro context.</source>
          <target state="translated">이 작업을 수행하려면 줄 바꿈을 결정하기 위해 Haxe 렉서에 알려진 소스 파일이 필요합니다. 따라서 매크로 컨텍스트에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efbc0ff29908c78f454caa3182c486db68295337" translate="yes" xml:space="preserve">
          <source>This process may lose some information.</source>
          <target state="translated">이 과정에서 일부 정보가 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5268cf6ca8cf4f647926de09d54b11fc325647c2" translate="yes" xml:space="preserve">
          <source>This proxy can be inherited with an XML file name parameter. It will only allow access to fields which corresponds to an &quot;id&quot; attribute value in the XML file :</source>
          <target state="translated">이 프록시는 XML 파일 이름 매개 변수로 상속 될 수 있습니다. XML 파일의 &quot;id&quot;속성 값에 해당하는 필드에만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71634ca54e2233289c01f38a2c8cc998780713a0" translate="yes" xml:space="preserve">
          <source>This returns the internal representation type.</source>
          <target state="translated">내부 표현 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df92fd176b9b33bbf469c06b03e12dc20de81483" translate="yes" xml:space="preserve">
          <source>This should only be used for modules that don't depend on any module that might change. It is effectively a promise to the compiler that the module is unaffected by changes made to other modules. If that promise is broken, the compiler is sad and things probably stop working.</source>
          <target state="translated">변경 될 수있는 모듈에 의존하지 않는 모듈에만 사용해야합니다. 모듈이 다른 모듈의 변경 사항에 영향을받지 않는다는 것은 컴파일러에게 사실상 약속입니다. 그 약속이 깨지면 컴파일러는 슬프고 일이 작동을 멈출 것입니다.</target>
        </trans-unit>
        <trans-unit id="20d5303f7bb568ab25a0c241cf7f9cdaca88f752" translate="yes" xml:space="preserve">
          <source>This type is meant to be used to generate custom types using a macro. For instance by doing MacroType&amp;lt;[my.Class.myMacro(55)]&amp;gt;</source>
          <target state="translated">이 유형은 매크로를 사용하여 사용자 정의 유형을 생성하는 데 사용됩니다. 예를 들어 MacroType &amp;lt;[my.Class.myMacro (55)]&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d29708d9f4ef4a991becb66c02fe4e3c4a298b10" translate="yes" xml:space="preserve">
          <source>This type unifies with an enum instance if all constructors of the enum require no arguments.</source>
          <target state="translated">열거 형의 모든 생성자가 인수가 필요없는 경우이 형식은 열거 형 인스턴스와 통합됩니다.</target>
        </trans-unit>
        <trans-unit id="d4cea3cf360ee3f6d9d810a41389abb1ab9f527d" translate="yes" xml:space="preserve">
          <source>This type unifies with any function type.</source>
          <target state="translated">이 유형은 모든 기능 유형과 통합됩니다.</target>
        </trans-unit>
        <trans-unit id="391b291f690ab93c086cd265f7716470e2f46604" translate="yes" xml:space="preserve">
          <source>This type unifies with any instance of classes that have a constructor which</source>
          <target state="translated">이 유형은 생성자를 가진 클래스의 인스턴스와 통합됩니다.</target>
        </trans-unit>
        <trans-unit id="b4638a7368155899d5edd8d4326e95326077cc32" translate="yes" xml:space="preserve">
          <source>This unit test class should be extended to create test cases. Each test method created in this extended class should start with the name &quot;test&quot;.</source>
          <target state="translated">테스트 단위를 작성하려면이 단위 테스트 클래스를 확장해야합니다. 이 확장 클래스에서 작성된 각 테스트 메소드는 &quot;test&quot;라는 이름으로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="0ab9fc6e86d81f6c9b91cbf2080397e3e76ab1f3" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; by setting their &lt;code&gt;useCache&lt;/code&gt; field.</source>
          <target state="translated">이 값은 &lt;code&gt;useCache&lt;/code&gt; 필드 를 설정하여 &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; 의 개별 인스턴스에 대해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdd3cf4625970422ca71850812d299f2a8139424" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; by setting their &lt;code&gt;useEnumIndex&lt;/code&gt; field.</source>
          <target state="translated">이 값은 &lt;code&gt;useEnumIndex&lt;/code&gt; 필드 를 설정하여 &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; 의 개별 인스턴스에 대해 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6742478f6673861cfff62d2e58a5ac48d29b856b" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of Serializer by setting their useCache field.</source>
          <target state="translated">useCache 필드를 설정하여 Serializer의 개별 인스턴스에 대해이 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc1cc612170b53321be79240d9208a7618242edd" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of Serializer by setting their useEnumIndex field.</source>
          <target state="translated">이 값은 useEnumIndex 필드를 설정하여 Serializer의 개별 인스턴스에 대해 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b957c2e22d4a6ffccb41a7171fed7d59fef381b" translate="yes" xml:space="preserve">
          <source>This value can be set to use custom type resolvers.</source>
          <target state="translated">이 값은 사용자 정의 유형 확인자를 사용하도록 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55815a62b96eb33f07c1055ea89c0bcd4c52f0f8" translate="yes" xml:space="preserve">
          <source>This value is applied when a new &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; instance is created. Changing it afterwards has no effect on previously created instances.</source>
          <target state="translated">이 값은 새 &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; 인스턴스가 생성 될 때 적용됩니다 . 나중에 변경해도 이전에 생성 된 인스턴스에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="819b086930722fc1b5ea7fdd55d95e855f41c98c" translate="yes" xml:space="preserve">
          <source>Ties are rounded up, so that &lt;code&gt;0.5&lt;/code&gt; becomes &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;-0.5&lt;/code&gt; becomes &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">타이는 반올림되므로 &lt;code&gt;0.5&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 이 되고 &lt;code&gt;-0.5&lt;/code&gt; 는 &lt;code&gt;0&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="548a6f52203a7bc451ae1096ee468877c75afce0" translate="yes" xml:space="preserve">
          <source>Timer.delay()</source>
          <target state="translated">Timer.delay()</target>
        </trans-unit>
        <trans-unit id="3f8fdbcd0d2c175590f0c6303ffb81a517cf1d86" translate="yes" xml:space="preserve">
          <source>Timer.measure()</source>
          <target state="translated">Timer.measure()</target>
        </trans-unit>
        <trans-unit id="71a6d9e9756be1dbacf26a94c89f9ed929b0f1f5" translate="yes" xml:space="preserve">
          <source>Timer.run()</source>
          <target state="translated">Timer.run()</target>
        </trans-unit>
        <trans-unit id="56cd81893a62c4a4e38b9bc1f4b9eb13e9f820f7" translate="yes" xml:space="preserve">
          <source>Timer.stamp()</source>
          <target state="translated">Timer.stamp()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="3ceed213111d545ed9352fab76f3ad832c427084" translate="yes" xml:space="preserve">
          <source>To obtain the character code of a single character, &quot;x&quot;.code can be used instead to @:extern public inline the character code at compile time. Note that this only works on Ucs2 literals of length 1.</source>
          <target state="translated">단일 문자의 문자 코드를 얻기 위해 컴파일 타임에 @ : extern public 인라인 문자 문자 대신 &quot;x&quot;.code를 사용할 수 있습니다. 이것은 길이가 1 인 Ucs2 리터럴에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d28ce9296855449d9c95a49d124a472208dcf5a5" translate="yes" xml:space="preserve">
          <source>To obtain the character code of a single character, &lt;code&gt;&quot;x&quot;.code&lt;/code&gt; can be used instead to extern public inline the character code at compile time. Note that this only works on Ucs2 literals of length 1.</source>
          <target state="translated">단일 문자의 문자 코드를 얻으려면 &lt;code&gt;&quot;x&quot;.code&lt;/code&gt; 를 대신 사용하여 컴파일 타임에 문자 코드를 공용 인라인으로 변환 할 수 있습니다. 이것은 길이가 1 인 Ucs2 리터럴에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a83971cfd5af89459044b79116496017a0e6e8a3" translate="yes" xml:space="preserve">
          <source>To obtain the character code of a single character, &lt;code&gt;&quot;x&quot;.code&lt;/code&gt; can be used instead to inline the character code at compile time. Note that this only works on String literals of length 1.</source>
          <target state="translated">단일 문자의 문자 코드를 얻기 위해 컴파일 타임에 문자 코드를 인라인하는 데 &lt;code&gt;&quot;x&quot;.code&lt;/code&gt; 를 사용할 수 있습니다. 이것은 길이가 1 인 문자열 리터럴에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e8467bf807316f1b02c82b0af1c421a4bdcf04fa" translate="yes" xml:space="preserve">
          <source>To run code before or after the test, override the functions &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;tearDown&lt;/code&gt;.</source>
          <target state="translated">테스트 전후에 코드를 실행하려면 &lt;code&gt;setup&lt;/code&gt; 및 &lt;code&gt;tearDown&lt;/code&gt; 함수를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="7b46de558b0cf37cc3f5e64c7755fbad5d9535cf" translate="yes" xml:space="preserve">
          <source>Top Level</source>
          <target state="translated">최상위</target>
        </trans-unit>
        <trans-unit id="9d33b40c21bbdaf81c2714c34b7afc33ece9d229" translate="yes" xml:space="preserve">
          <source>Transform a function taking an array of arguments into a function that can be called with any number of arguments.</source>
          <target state="translated">인수 배열을 사용하는 함수를 원하는 수의 인수로 호출 할 수있는 함수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="9b55ba7f81b8ddce034e70016d43cf7bcb3a541f" translate="yes" xml:space="preserve">
          <source>Transforms &lt;code&gt;t&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of its subtypes.</source>
          <target state="translated">각 부속 유형에서 &lt;code&gt;f&lt;/code&gt; 를 호출하여 &lt;code&gt;t&lt;/code&gt; 를 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="7033a528e360829c6a8a25a1b3e98e050b972e61" translate="yes" xml:space="preserve">
          <source>Transforms the sub-expressions of &lt;code&gt;e&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of them.</source>
          <target state="translated">각각의 &lt;code&gt;f&lt;/code&gt; 를 호출 하여 &lt;code&gt;e&lt;/code&gt; 의 하위 표현식을 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="e434b118e10401aba6508bddbff2700c2f1bcf74" translate="yes" xml:space="preserve">
          <source>Transforms the sub-expressions of &lt;code&gt;e&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of them. Additionally, types are mapped using &lt;code&gt;ft&lt;/code&gt; and variables are mapped using &lt;code&gt;fv&lt;/code&gt;.</source>
          <target state="translated">각각의 &lt;code&gt;f&lt;/code&gt; 를 호출 하여 &lt;code&gt;e&lt;/code&gt; 의 하위 표현식을 변환 합니다. 또한 유형은 &lt;code&gt;ft&lt;/code&gt; 를 사용하여 매핑 되고 변수는 &lt;code&gt;fv&lt;/code&gt; 를 사용하여 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="555aca844f8ecfdffc5f75cf88cc25f1c6a2a9af" translate="yes" xml:space="preserve">
          <source>TreeNode&amp;lt;K, V&amp;gt;</source>
          <target state="translated">TreeNode &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9485a1dc129a15edfc273bb827ed184f5342ba1c" translate="yes" xml:space="preserve">
          <source>Tries to extract the class instance stored inside &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 안에 저장된 클래스 인스턴스를 추출하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="538646bec5e3ad4eb52fd5ed4937c26af9a08c1d" translate="yes" xml:space="preserve">
          <source>Tries to extract the enum instance stored inside &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 안에 저장된 열거 형 인스턴스를 추출하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="3bfa7a8d975605765490812b33faf3687bf87679" translate="yes" xml:space="preserve">
          <source>Tries to unify &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; and returns &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if successful.</source>
          <target state="translated">&lt;code&gt;t1&lt;/code&gt; 과 &lt;code&gt;t2&lt;/code&gt; 를 통합하려고 시도하고 성공하면 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="d8810441b86b52ffbbe6795ca220e1b75acaced7" translate="yes" xml:space="preserve">
          <source>True if the last directory separator is a backslash, false otherwise.</source>
          <target state="translated">마지막 디렉토리 구분자가 백 슬래시이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="4eb84fa83f6f10fc50d04c9301d91cf1801c81f6" translate="yes" xml:space="preserve">
          <source>Type.allEnums()</source>
          <target state="translated">Type.allEnums()</target>
        </trans-unit>
        <trans-unit id="bd111fee1341542f42aac02dfd0c393ca6965d9c" translate="yes" xml:space="preserve">
          <source>Type.createEmptyInstance()</source>
          <target state="translated">Type.createEmptyInstance()</target>
        </trans-unit>
        <trans-unit id="11517f76cdec2a11c2a52925ec3f654e3a396fb5" translate="yes" xml:space="preserve">
          <source>Type.createEnum()</source>
          <target state="translated">Type.createEnum()</target>
        </trans-unit>
        <trans-unit id="150bf42d81ce9039fd7377f3e31bad0374ad627d" translate="yes" xml:space="preserve">
          <source>Type.createEnumIndex()</source>
          <target state="translated">Type.createEnumIndex()</target>
        </trans-unit>
        <trans-unit id="c6f8851eb6229423ccace9e3bfa089a56ca66109" translate="yes" xml:space="preserve">
          <source>Type.createInstance()</source>
          <target state="translated">Type.createInstance()</target>
        </trans-unit>
        <trans-unit id="e5f3f50ad37608a8549f852222f7bebe45a22031" translate="yes" xml:space="preserve">
          <source>Type.enumConstructor()</source>
          <target state="translated">Type.enumConstructor()</target>
        </trans-unit>
        <trans-unit id="fbfcaf4f2f0b03a607f26f629809ac119970a4e0" translate="yes" xml:space="preserve">
          <source>Type.enumEq()</source>
          <target state="translated">Type.enumEq()</target>
        </trans-unit>
        <trans-unit id="f503ece5a3fa51aa4baf9d83478f6b9b338e1063" translate="yes" xml:space="preserve">
          <source>Type.enumIndex()</source>
          <target state="translated">Type.enumIndex()</target>
        </trans-unit>
        <trans-unit id="3b728951e8d791558fc909b1a6a817d31be1e99b" translate="yes" xml:space="preserve">
          <source>Type.enumParameters()</source>
          <target state="translated">Type.enumParameters()</target>
        </trans-unit>
        <trans-unit id="7caf67ad9c090a87298299ef6aad22816121c3cb" translate="yes" xml:space="preserve">
          <source>Type.getClass()</source>
          <target state="translated">Type.getClass()</target>
        </trans-unit>
        <trans-unit id="8fa14078d669088a01f2fd9aa3c929337e560ac1" translate="yes" xml:space="preserve">
          <source>Type.getClassFields()</source>
          <target state="translated">Type.getClassFields()</target>
        </trans-unit>
        <trans-unit id="5da57ed136a4ba90958cc2c544b66ebffe6535bc" translate="yes" xml:space="preserve">
          <source>Type.getClassName()</source>
          <target state="translated">Type.getClassName()</target>
        </trans-unit>
        <trans-unit id="3c71f778acd7c18ef298e94528dc2bc770f31b09" translate="yes" xml:space="preserve">
          <source>Type.getEnum()</source>
          <target state="translated">Type.getEnum()</target>
        </trans-unit>
        <trans-unit id="ab3e8345be65c37b76f90bc23936a2724758302f" translate="yes" xml:space="preserve">
          <source>Type.getEnumConstructs()</source>
          <target state="translated">Type.getEnumConstructs()</target>
        </trans-unit>
        <trans-unit id="899ca45230d4036b6d703af2727ce86d306cad15" translate="yes" xml:space="preserve">
          <source>Type.getEnumName()</source>
          <target state="translated">Type.getEnumName()</target>
        </trans-unit>
        <trans-unit id="61a0945997a58e393873b5ea034a08510392384c" translate="yes" xml:space="preserve">
          <source>Type.getInstanceFields()</source>
          <target state="translated">Type.getInstanceFields()</target>
        </trans-unit>
        <trans-unit id="27f82f80bf96f57288ba02353cbc9d79636d3ac9" translate="yes" xml:space="preserve">
          <source>Type.getSuperClass()</source>
          <target state="translated">Type.getSuperClass()</target>
        </trans-unit>
        <trans-unit id="f4f1e99af31b2cc4130bda57fdbda3e2e5a184a0" translate="yes" xml:space="preserve">
          <source>Type.resolveClass()</source>
          <target state="translated">Type.resolveClass()</target>
        </trans-unit>
        <trans-unit id="43aa3cfd72c4fa4ec9d83dbae5dd8912936bb9e6" translate="yes" xml:space="preserve">
          <source>Type.resolveEnum()</source>
          <target state="translated">Type.resolveEnum()</target>
        </trans-unit>
        <trans-unit id="ae254f0b9699d8dfb576930fb0dfd9e4cf6fd0a9" translate="yes" xml:space="preserve">
          <source>Type.typeof()</source>
          <target state="translated">Type.typeof()</target>
        </trans-unit>
        <trans-unit id="0dfde39f15f6b983bca17055dba3b336d84804ce" translate="yes" xml:space="preserve">
          <source>TypeApi</source>
          <target state="translated">TypeApi</target>
        </trans-unit>
        <trans-unit id="ed32066b1b312f4299a27fb3ce2502f5f6f98ecb" translate="yes" xml:space="preserve">
          <source>TypeDefKind</source>
          <target state="translated">TypeDefKind</target>
        </trans-unit>
        <trans-unit id="9a241630edbac84596f8d9708400c4a1ea7522a7" translate="yes" xml:space="preserve">
          <source>TypeDefinition</source>
          <target state="translated">TypeDefinition</target>
        </trans-unit>
        <trans-unit id="0d24aa1772e66ff639befb801acbeb8110dfefc9" translate="yes" xml:space="preserve">
          <source>TypeInfos</source>
          <target state="translated">TypeInfos</target>
        </trans-unit>
        <trans-unit id="22bbff6de3409630e8cf8d7c2d18b76ecf0326f4" translate="yes" xml:space="preserve">
          <source>TypeParam</source>
          <target state="translated">TypeParam</target>
        </trans-unit>
        <trans-unit id="fcee3d44311c1a013882139196a3714350d66cac" translate="yes" xml:space="preserve">
          <source>TypeParamDecl</source>
          <target state="translated">TypeParamDecl</target>
        </trans-unit>
        <trans-unit id="49b4855e1f3319a01df03868e40b1c47270047c9" translate="yes" xml:space="preserve">
          <source>TypeParameter</source>
          <target state="translated">TypeParameter</target>
        </trans-unit>
        <trans-unit id="2725fc6232072bdec271765b73a6baff8aeef2f5" translate="yes" xml:space="preserve">
          <source>TypeParams</source>
          <target state="translated">TypeParams</target>
        </trans-unit>
        <trans-unit id="3357a1e0c404885fffaf41ea3154dc9ba27d4224" translate="yes" xml:space="preserve">
          <source>TypePath</source>
          <target state="translated">TypePath</target>
        </trans-unit>
        <trans-unit id="f2088b4971fe21181ff638435138d2648a39f3fd" translate="yes" xml:space="preserve">
          <source>TypeRoot</source>
          <target state="translated">TypeRoot</target>
        </trans-unit>
        <trans-unit id="1f19d8a72bf0fd7c1dd6b63a4eabcb32503cb12e" translate="yes" xml:space="preserve">
          <source>TypeTools</source>
          <target state="translated">TypeTools</target>
        </trans-unit>
        <trans-unit id="536a4cbc9c77e61d97215fc5c6be35e0b5ef949e" translate="yes" xml:space="preserve">
          <source>TypeTree</source>
          <target state="translated">TypeTree</target>
        </trans-unit>
        <trans-unit id="49bebbb5c0ba9d5cc24e7e2a1f71c629379d11c4" translate="yes" xml:space="preserve">
          <source>TypedExpr</source>
          <target state="translated">TypedExpr</target>
        </trans-unit>
        <trans-unit id="6470e34bca77d339df91367ca0ee2718bfb7de3b" translate="yes" xml:space="preserve">
          <source>TypedExprDef</source>
          <target state="translated">TypedExprDef</target>
        </trans-unit>
        <trans-unit id="1adb5ce6fd3cd92353b479984e4e8f94a4f1e2dc" translate="yes" xml:space="preserve">
          <source>TypedExprTools</source>
          <target state="translated">TypedExprTools</target>
        </trans-unit>
        <trans-unit id="9bf31d5bb5e8f193a6afc85b45a2520994093217" translate="yes" xml:space="preserve">
          <source>Typedef</source>
          <target state="translated">Typedef</target>
        </trans-unit>
        <trans-unit id="32b206f85d0409b4849a746c24066cb65dc55428" translate="yes" xml:space="preserve">
          <source>Types expression &lt;code&gt;e&lt;/code&gt; and returns its type.</source>
          <target state="translated">표현식 &lt;code&gt;e&lt;/code&gt; 를 입력하고 해당 유형을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="152b7323963f7b4149a8399c20a9d2aa1c3e697f" translate="yes" xml:space="preserve">
          <source>Types expression &lt;code&gt;e&lt;/code&gt; and returns the corresponding &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;TypedExpr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">식 &lt;code&gt;e&lt;/code&gt; 를 입력 하고 해당 &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;TypedExpr&lt;/a&gt;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="08e5992256d659bfee29297eccd3c21978f33722" translate="yes" xml:space="preserve">
          <source>Types expression &lt;code&gt;e&lt;/code&gt;, stores the resulting typed expression internally and returns a syntax-level expression that can be returned from a macro and will be replaced by the stored typed expression.</source>
          <target state="translated">type expression &lt;code&gt;e&lt;/code&gt; 는 결과 형식화 된 식을 내부적으로 저장하고 매크로에서 반환 될 수 있고 저장된 형식화 된 식으로 대체 될 구문 수준 식을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d66b410a7e04327a3f87f5a8fabf5a18bdfd7b3" translate="yes" xml:space="preserve">
          <source>Typing the expression may result in a compiler error which can be caught using &lt;code&gt;try ... catch&lt;/code&gt;.</source>
          <target state="translated">표현식을 입력하면 &lt;code&gt;try ... catch&lt;/code&gt; 사용하여 컴파일러 오류가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="translated">UInt</target>
        </trans-unit>
        <trans-unit id="e1e17b0550e78cb7a985971b93e2d11cfb394576" translate="yes" xml:space="preserve">
          <source>UInt(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">UInt(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="df3b455f07e3c7118094f958e1ca744d9507912d" translate="yes" xml:space="preserve">
          <source>UInt16Array(&lt;a href=&quot;uint16arraydata&quot;&gt;UInt16ArrayData&lt;/a&gt;)</source>
          <target state="translated">UInt16Array(&lt;a href=&quot;uint16arraydata&quot;&gt;UInt16ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="bbab666493698dee333f06d22beb9b9662eb99fd" translate="yes" xml:space="preserve">
          <source>UInt16ArrayData</source>
          <target state="translated">UInt16ArrayData</target>
        </trans-unit>
        <trans-unit id="1ec47d7b247f3bae413ad38ae0f135dd30f21bd7" translate="yes" xml:space="preserve">
          <source>UInt32Array(&lt;a href=&quot;uint32arraydata&quot;&gt;UInt32ArrayData&lt;/a&gt;)</source>
          <target state="translated">UInt32Array(&lt;a href=&quot;uint32arraydata&quot;&gt;UInt32ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b66d3d594feaf1f013532b03f6bbf3a847706d52" translate="yes" xml:space="preserve">
          <source>UInt32ArrayData</source>
          <target state="translated">UInt32ArrayData</target>
        </trans-unit>
        <trans-unit id="ebeb465f5e41c7b27b4d896832ae077694a5072b" translate="yes" xml:space="preserve">
          <source>UInt8Array(&lt;a href=&quot;uint8arraydata&quot;&gt;UInt8ArrayData&lt;/a&gt;)</source>
          <target state="translated">UInt8Array(&lt;a href=&quot;uint8arraydata&quot;&gt;UInt8ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="aa85b64d29c01fb292ad4f2c3bc059f6fa9a45fe" translate="yes" xml:space="preserve">
          <source>UInt8ArrayData</source>
          <target state="translated">UInt8ArrayData</target>
        </trans-unit>
        <trans-unit id="7d43851fd0bf29f1272c481001b45891c97b8000" translate="yes" xml:space="preserve">
          <source>Ucs2</source>
          <target state="translated">Ucs2</target>
        </trans-unit>
        <trans-unit id="a8e6dc50f522e9e8450bc9b45777f2861f780621" translate="yes" xml:space="preserve">
          <source>Ucs2(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">Ucs2(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5b00c19bfb704875acbf3cb41653d98913adae8a" translate="yes" xml:space="preserve">
          <source>Ucs2.charAt()</source>
          <target state="translated">Ucs2.charAt()</target>
        </trans-unit>
        <trans-unit id="c2c484b8a436a8a025ce043399c3c2b02871c39f" translate="yes" xml:space="preserve">
          <source>Ucs2.charCodeAt()</source>
          <target state="translated">Ucs2.charCodeAt()</target>
        </trans-unit>
        <trans-unit id="dcc4083b5ad8991ecdc23ec2a7c5cf07dcbdd3dd" translate="yes" xml:space="preserve">
          <source>Ucs2.fromCharCode()</source>
          <target state="translated">Ucs2.fromCharCode()</target>
        </trans-unit>
        <trans-unit id="acc73e2cea760a2603c6533c434fe4f328714b96" translate="yes" xml:space="preserve">
          <source>Ucs2.indexOf()</source>
          <target state="translated">Ucs2.indexOf()</target>
        </trans-unit>
        <trans-unit id="729b6d20c5c27e652e9dc576dd07415bf3de9917" translate="yes" xml:space="preserve">
          <source>Ucs2.lastIndexOf()</source>
          <target state="translated">Ucs2.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="30ff2bbe5e9be913cb3e344975c11fe3234bc3d3" translate="yes" xml:space="preserve">
          <source>Ucs2.length</source>
          <target state="translated">Ucs2.length</target>
        </trans-unit>
        <trans-unit id="d3f56b6198c4e8449a76bcc471a815e90ae4b13d" translate="yes" xml:space="preserve">
          <source>Ucs2.split()</source>
          <target state="translated">Ucs2.split()</target>
        </trans-unit>
        <trans-unit id="140f45c0148fcd82d9eee8fda6245a9c608068cf" translate="yes" xml:space="preserve">
          <source>Ucs2.substr()</source>
          <target state="translated">Ucs2.substr()</target>
        </trans-unit>
        <trans-unit id="dce53b36b0d0eab14493238ff5228ab73bd4ce53" translate="yes" xml:space="preserve">
          <source>Ucs2.substring()</source>
          <target state="translated">Ucs2.substring()</target>
        </trans-unit>
        <trans-unit id="ed338415f77f0d940caab915c416de5ae3298a83" translate="yes" xml:space="preserve">
          <source>Ucs2.toLowerCase()</source>
          <target state="translated">Ucs2.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="541d9e9a738f09962c7ac12e2c03232030b52beb" translate="yes" xml:space="preserve">
          <source>Ucs2.toNativeString()</source>
          <target state="translated">Ucs2.toNativeString()</target>
        </trans-unit>
        <trans-unit id="5e77c112c6853c3887dfee26c117d1d6b98b73e2" translate="yes" xml:space="preserve">
          <source>Ucs2.toUpperCase()</source>
          <target state="translated">Ucs2.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="83c0d48976f5f137e5bdda9c79782802e08a1394" translate="yes" xml:space="preserve">
          <source>Uncompress</source>
          <target state="translated">Uncompress</target>
        </trans-unit>
        <trans-unit id="d2b11181fe46b7795740173232c82bcc21d14ada" translate="yes" xml:space="preserve">
          <source>Unescapes HTML special characters of the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 의 HTML 특수 문자를 이스케이프 처리 합니다 .</target>
        </trans-unit>
        <trans-unit id="096b9f7d7a0feacb398e6ff2730e1542ff6633ed" translate="yes" xml:space="preserve">
          <source>UnicodeString</source>
          <target state="translated">UnicodeString</target>
        </trans-unit>
        <trans-unit id="3bfd6d6beac3a32222e6d1e773e89d4ea5b8818d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;a == b&lt;/code&gt;, this function performs a deep equality check on the arguments of the constructors (if there are any).</source>
          <target state="translated">&lt;code&gt;a == b&lt;/code&gt; 와 달리이 함수는 생성자의 인수 (있는 경우)에 대해 동등성 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f05e0c1cfae992d4a505015f3180a69c4c9a6a3b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;a == b&lt;/code&gt;, this function performs a deep equality check on the arguments of the constructors, if exists.</source>
          <target state="translated">&lt;code&gt;a == b&lt;/code&gt; 와는 달리이 함수는 생성자의 인수에 대해 동등성 검사를 수행합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="0036583c9fa9ab035d0462bdb0f40cc112776662" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;c1 == c2&lt;/code&gt;, this function performs a deep equality check on the arguments of the enum constructors, if exists.</source>
          <target state="translated">&lt;code&gt;c1 == c2&lt;/code&gt; 와 달리이 함수는 열거 생성자 인수가 존재하는 경우 동등 동등성 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0b496c3b1c2a4535b84f7399774967c7af93428c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;f1 == f2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;classfield#ClassField&quot;&gt;ClassField&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;f1 == f2&lt;/code&gt; 와 달리 ,이 함수는 주어진 &lt;code&gt;&lt;a href=&quot;classfield#ClassField&quot;&gt;ClassField&lt;/a&gt;&lt;/code&gt; 인스턴스 에서 심도 평등 검사를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="63f681c9d7c00cfb9868c3f4bc242eed10b1ce67" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;r1 == r2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;rights#Rights&quot;&gt;Rights&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;r1 == r2&lt;/code&gt; 와 달리이 함수는 주어진 &lt;code&gt;&lt;a href=&quot;rights#Rights&quot;&gt;Rights&lt;/a&gt;&lt;/code&gt; 인스턴스 에서 심도 평등 검사를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="b8810011eff1b1cebf63eda7ae72c9caf75a5caf" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;readBytes&lt;/code&gt;, this method tries to read the exact &lt;code&gt;len&lt;/code&gt; amount of bytes.</source>
          <target state="translated">&lt;code&gt;readBytes&lt;/code&gt; 와 달리이 메소드는 정확한 &lt;code&gt;len&lt;/code&gt; 양의 바이트 를 읽으려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="beab7d0bc28a45a702ce26de7755eea82d4d5aa9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;t1 == t2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;t1 == t2&lt;/code&gt; 와 달리이 함수는 지정된 &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; 인스턴스 에서 심도 평등 검사를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="08eaec1e1f5b101e4b48818115c5eaf159c18381" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;writeBytes&lt;/code&gt;, this method tries to write the exact &lt;code&gt;len&lt;/code&gt; amount of bytes.</source>
          <target state="translated">&lt;code&gt;writeBytes&lt;/code&gt; 와 달리이 메소드는 정확한 &lt;code&gt;len&lt;/code&gt; 양의 바이트 를 쓰려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="95b37964c870d2d1281e3329883970b8b7b0da31" translate="yes" xml:space="preserve">
          <source>Unlike String, an instance of StringBuf is not immutable in the sense that it can be passed as argument to functions which modify it by appending more values.</source>
          <target state="translated">String과 달리 StringBuf의 인스턴스는 더 많은 값을 추가하여 수정하는 함수에 인수로 전달할 수 있다는 점에서 불변하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0114e326a36f4df45f07febf6dc5117b87dbbe48" translate="yes" xml:space="preserve">
          <source>Unlike String, an instance of StringBuf is not immutable in the sense that it can be passed as argument to functions which modify it by appending more values. However, the internal buffer cannot be modified.</source>
          <target state="translated">String과 달리 StringBuf의 인스턴스는 더 많은 값을 추가하여 수정하는 함수에 인수로 전달 될 수 있다는 점에서 변경할 수 없습니다. 그러나 내부 버퍼는 수정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d6ae293ded1c6fb9866ad7e767682fded0fa74b2" translate="yes" xml:space="preserve">
          <source>Unop</source>
          <target state="translated">Unop</target>
        </trans-unit>
        <trans-unit id="98518b66439ea58bba199b7eca2e079ec9f5d7e4" translate="yes" xml:space="preserve">
          <source>UnsafeStringMap&amp;lt;T&amp;gt;</source>
          <target state="translated">UnsafeStringMap&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c3dbe2af56241451943d304b8ba757e49b27e53e" translate="yes" xml:space="preserve">
          <source>Unserializer</source>
          <target state="translated">Unserializer</target>
        </trans-unit>
        <trans-unit id="787a9c0a21c2daea4b320f1ef5abdfb4450fb99d" translate="yes" xml:space="preserve">
          <source>Unserializer.DEFAULT_RESOLVER()</source>
          <target state="translated">Unserializer.DEFAULT_RESOLVER()</target>
        </trans-unit>
        <trans-unit id="7a85718c9ef1c3a19c92c610de6865911f356656" translate="yes" xml:space="preserve">
          <source>Unserializer.getResolver()</source>
          <target state="translated">Unserializer.getResolver()</target>
        </trans-unit>
        <trans-unit id="629574824b5e9825712419f875b0ec04c44d9ae2" translate="yes" xml:space="preserve">
          <source>Unserializer.run()</source>
          <target state="translated">Unserializer.run()</target>
        </trans-unit>
        <trans-unit id="7216c858f436af5b1e0d26e67e0e594eb4c17cf4" translate="yes" xml:space="preserve">
          <source>Unserializer.setResolver()</source>
          <target state="translated">Unserializer.setResolver()</target>
        </trans-unit>
        <trans-unit id="bda1c6221aef2275ee8797c1b21c7c450ae644c6" translate="yes" xml:space="preserve">
          <source>Unserializer.unserialize()</source>
          <target state="translated">Unserializer.unserialize()</target>
        </trans-unit>
        <trans-unit id="aa99e2caf43038f5d0e1882f80d1f9352020208f" translate="yes" xml:space="preserve">
          <source>Unserializes &lt;code&gt;v&lt;/code&gt; and returns the according value.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 를 직렬화 해제 하고 해당 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="142ab4e4ef473b226a155e7999c912e12b433cc0" translate="yes" xml:space="preserve">
          <source>Unserializes the next part of &lt;code&gt;this&lt;/code&gt; Unserializer instance and returns the according value.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Unserializer 인스턴스 의 다음 부분을 직렬화 해제하고 그에 따라 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b0551c0595911ad3ee0df06b2bebf9a713469137" translate="yes" xml:space="preserve">
          <source>Unsets the index of enum instance &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">열거 형 인스턴스 &lt;code&gt;v&lt;/code&gt; 의 인덱스를 설정 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="f13be7738e1389f72c0f88aa84d17719f746bf4a" translate="yes" xml:space="preserve">
          <source>Unused.</source>
          <target state="translated">Unused.</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="8253a9cba5c055623154511d78ab0f285129ff75" translate="yes" xml:space="preserve">
          <source>Usage of this function outside of initialization macros is deprecated and may cause compilation server issues.</source>
          <target state="translated">초기화 매크로 외부에서이 함수를 사용하는 것은 더 이상 사용되지 않으며 컴파일 서버 문제를 일으킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdcb8ca44e9b844a8875efc061aa91ba58c8bc18" translate="yes" xml:space="preserve">
          <source>Use constructor indexes for enums instead of names.</source>
          <target state="translated">이름 대신 열거 자에 생성자 색인을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="33a7f0eade0e6b07396034e5126f8316e2d522c1" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; should be minimized as it prevents several compiler checks and optimizations. See &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; type for a safer alternative for representing values of any type.</source>
          <target state="translated">여러 컴파일러 확인 및 최적화를 방해하므로 &lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 사용을 최소화해야합니다. &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; 유형의 값을 나타내는보다 안전한 대안 은 모든 유형을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c966967a0a7e99243186dc67cd68b5fcd6ac2284" translate="yes" xml:space="preserve">
          <source>Used internally by the compiler to delay some typing.</source>
          <target state="translated">컴파일러에서 내부적으로 사용하여 일부 입력을 지연시킵니다.</target>
        </trans-unit>
        <trans-unit id="c37c9276b35bdf98ce2fcbe3a10475f6bec431f8" translate="yes" xml:space="preserve">
          <source>Used internally to provide completion.</source>
          <target state="translated">완료를 제공하기 위해 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e02a8a313fe67235efa1c276b098e64b7edbaeb4" translate="yes" xml:space="preserve">
          <source>Usually iteration is considered to be complete if all elements of the underlying data structure were handled through calls to &lt;code&gt;next()&lt;/code&gt;. However, in custom iterators any logic may be used to determine the completion state.</source>
          <target state="translated">기본 데이터 구조의 모든 요소가 &lt;code&gt;next()&lt;/code&gt; 호출을 통해 처리 된 경우 일반적으로 반복이 완료된 것으로 간주됩니다 . 그러나, 커스텀 이터레이터에서 완료 상태를 결정하기 위해 임의의 로직이 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="011fca5c2a7f33c8e2800679272e51b42926fb80" translate="yes" xml:space="preserve">
          <source>Utf8</source>
          <target state="translated">Utf8</target>
        </trans-unit>
        <trans-unit id="9c58c3754dcb96959ee6394e8db1d9e9bc3ad0a9" translate="yes" xml:space="preserve">
          <source>Utf8.addChar()</source>
          <target state="translated">Utf8.addChar()</target>
        </trans-unit>
        <trans-unit id="c98b1b0607cc23dfbc6da929977aa532a4d86bc2" translate="yes" xml:space="preserve">
          <source>Utf8.char()</source>
          <target state="translated">Utf8.char()</target>
        </trans-unit>
        <trans-unit id="6915ed12043803e691d5da23c22e3d3d7ae719a9" translate="yes" xml:space="preserve">
          <source>Utf8.charCodeAt()</source>
          <target state="translated">Utf8.charCodeAt()</target>
        </trans-unit>
        <trans-unit id="2f5896817a7086d227b8fa9c5e889be8dcb37f20" translate="yes" xml:space="preserve">
          <source>Utf8.compare()</source>
          <target state="translated">Utf8.compare()</target>
        </trans-unit>
        <trans-unit id="5308158bf37f7082cb5b449d42fdb6d47ee81aba" translate="yes" xml:space="preserve">
          <source>Utf8.decode()</source>
          <target state="translated">Utf8.decode()</target>
        </trans-unit>
        <trans-unit id="3f06be627f08ac97406545d7081c2113dbeb7466" translate="yes" xml:space="preserve">
          <source>Utf8.encode()</source>
          <target state="translated">Utf8.encode()</target>
        </trans-unit>
        <trans-unit id="c257ca6bc3258bff786018724cdeab61e0b8dad4" translate="yes" xml:space="preserve">
          <source>Utf8.iter()</source>
          <target state="translated">Utf8.iter()</target>
        </trans-unit>
        <trans-unit id="94f295a1a0c306938024371b2b6576012b4f09b1" translate="yes" xml:space="preserve">
          <source>Utf8.length()</source>
          <target state="translated">Utf8.length()</target>
        </trans-unit>
        <trans-unit id="78f5770ee0cad841e7b9cc03b0c4c829018eea71" translate="yes" xml:space="preserve">
          <source>Utf8.sub()</source>
          <target state="translated">Utf8.sub()</target>
        </trans-unit>
        <trans-unit id="36570547e998724b06448a194e26fccffc4e86bd" translate="yes" xml:space="preserve">
          <source>Utf8.toString()</source>
          <target state="translated">Utf8.toString()</target>
        </trans-unit>
        <trans-unit id="b72c5afdded269792a56940bbfb707dda286ccd7" translate="yes" xml:space="preserve">
          <source>Utf8.validate()</source>
          <target state="translated">Utf8.validate()</target>
        </trans-unit>
        <trans-unit id="5cfdbdef621053e4c2adb3e5800cfd3510d6d549" translate="yes" xml:space="preserve">
          <source>ValueType</source>
          <target state="translated">ValueType</target>
        </trans-unit>
        <trans-unit id="2a09e11e3922b456e6280f3eb4544e4686caef24" translate="yes" xml:space="preserve">
          <source>ValueType.TBool</source>
          <target state="translated">ValueType.TBool</target>
        </trans-unit>
        <trans-unit id="b8d856478f8dad08b842ebf53f17517f516ef5b6" translate="yes" xml:space="preserve">
          <source>ValueType.TClass()</source>
          <target state="translated">ValueType.TClass()</target>
        </trans-unit>
        <trans-unit id="e82e747589c1dfc49a66bde213acac48aec51b30" translate="yes" xml:space="preserve">
          <source>ValueType.TEnum()</source>
          <target state="translated">ValueType.TEnum()</target>
        </trans-unit>
        <trans-unit id="5e7eb845ce62800235a56c4d986e86c2549e103e" translate="yes" xml:space="preserve">
          <source>ValueType.TFloat</source>
          <target state="translated">ValueType.TFloat</target>
        </trans-unit>
        <trans-unit id="d57f8548fc4dff62e6cf867ffc232451356fef0d" translate="yes" xml:space="preserve">
          <source>ValueType.TFunction</source>
          <target state="translated">ValueType.TFunction</target>
        </trans-unit>
        <trans-unit id="b316af29c5f9aab2057c6fbcdf2ea7e68535f0d6" translate="yes" xml:space="preserve">
          <source>ValueType.TInt</source>
          <target state="translated">ValueType.TInt</target>
        </trans-unit>
        <trans-unit id="04aa470d746056b7985b83262d1a5a7b6cbb6995" translate="yes" xml:space="preserve">
          <source>ValueType.TNull</source>
          <target state="translated">ValueType.TNull</target>
        </trans-unit>
        <trans-unit id="2ac3dac296bd1a0547143c52a228e06e165ca416" translate="yes" xml:space="preserve">
          <source>ValueType.TObject</source>
          <target state="translated">ValueType.TObject</target>
        </trans-unit>
        <trans-unit id="de17cb19c20ffadc046f9cbba0cdbd0fcc7ab00b" translate="yes" xml:space="preserve">
          <source>ValueType.TUnknown</source>
          <target state="translated">ValueType.TUnknown</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="5cea87cf757286518e1e5c257fb70591a7aa6af7" translate="yes" xml:space="preserve">
          <source>Var</source>
          <target state="translated">Var</target>
        </trans-unit>
        <trans-unit id="f8db74f9e4bb7d51ef7d5cf443eb581283740449" translate="yes" xml:space="preserve">
          <source>VarAccess</source>
          <target state="translated">VarAccess</target>
        </trans-unit>
        <trans-unit id="47d42df752ce7fb579dd67e29cf86586ed07b296" translate="yes" xml:space="preserve">
          <source>Variable declarations.</source>
          <target state="translated">변수 선언.</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="a2327b6f9b091e308c676a657d93ef420af35f29" translate="yes" xml:space="preserve">
          <source>Vector&amp;lt;T&amp;gt;(VectorData&amp;lt;T&amp;gt;)</source>
          <target state="translated">Vector&amp;lt;T&amp;gt;(VectorData&amp;lt;T&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="207c7c00630b836d3afb46848bdb24a92023331d" translate="yes" xml:space="preserve">
          <source>Void</source>
          <target state="translated">Void</target>
        </trans-unit>
        <trans-unit id="1981c88a12098886ea846e1e6d193022ea1a06d9" translate="yes" xml:space="preserve">
          <source>Wakeup a sleeping &lt;code&gt;run()&lt;/code&gt;</source>
          <target state="translated">수면 &lt;code&gt;run()&lt;/code&gt; 깨우기 ()</target>
        </trans-unit>
        <trans-unit id="babba0dbddbb7c680636caf6ac8a7584901bd20f" translate="yes" xml:space="preserve">
          <source>Wakeup a sleeping run()</source>
          <target state="translated">수면을 깨우기 ()</target>
        </trans-unit>
        <trans-unit id="f186e028e81984a5783c456e8aafb98e6fcdca3d" translate="yes" xml:space="preserve">
          <source>WeakMap allows mapping of object keys to arbitrary values.</source>
          <target state="translated">WeakMap을 사용하면 객체 키를 임의의 값으로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="446f5ce958480e0ec4d65317342d8f05b58a5339" translate="yes" xml:space="preserve">
          <source>WeakMap&amp;lt;K, V&amp;gt;</source>
          <target state="translated">약한지도 &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b771bd98ee22757e80fd503e9cff4440841557c1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;normalWhile&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; it is &lt;code&gt;do {...} while (...)&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;normalWhile&lt;/code&gt; 이 있다 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 그 것이다 &lt;code&gt;do {...} while (...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28662bfb023be8a049767f8a749407d794463531" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;normalWhile&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; it is &lt;code&gt;while (...)&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;normalWhile&lt;/code&gt; 가 있다 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 그 것이다 &lt;code&gt;while (...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15d6b7efd1ae8ec5c41cc1e3882b26ee472c0d8d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">되면 &lt;code&gt;value&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="c936db9b0e660f2f4ff239da03718200521d81da" translate="yes" xml:space="preserve">
          <source>When you extend it with a class C, it will automatically create a stub class with all public methods forwarding remoting messages over the connection.</source>
          <target state="translated">클래스 C를 사용하여 클래스를 확장하면 연결을 통해 원격 메시지를 전달하는 모든 공용 메소드가 포함 된 스텁 클래스가 자동으로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="5d9a02943cbae634a6acf6082a58972d4271c29e" translate="yes" xml:space="preserve">
          <source>Whether or not the class field is extern.</source>
          <target state="translated">클래스 필드가 extern인지 여부.</target>
        </trans-unit>
        <trans-unit id="2c659fbf2470b34a7c6a182e9357291b361c521a" translate="yes" xml:space="preserve">
          <source>Whether or not the class field is final.</source>
          <target state="translated">클래스 필드가 최종인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6e7871be2cbfca4586dc8324dc30024e78000e20" translate="yes" xml:space="preserve">
          <source>Whether or not the class field is public.</source>
          <target state="translated">수업 분야가 공개인지 여부</target>
        </trans-unit>
        <trans-unit id="b1c27f426b94da259f5b60456e57d8a2eb8db3cb" translate="yes" xml:space="preserve">
          <source>Whether or not the class is &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;extern&lt;/a&gt;.</source>
          <target state="translated">클래스가 &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;extern&lt;/a&gt; 인지 아닌지 .</target>
        </trans-unit>
        <trans-unit id="d936afcab6e2b97954b7cb346dbda0721caebe25" translate="yes" xml:space="preserve">
          <source>Whether or not the class is [extern](https://haxe.org/manual/lf-externs.html).</source>
          <target state="translated">수업이 [extern] (https://haxe.org/manual/lf-externs.html)인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="d04b33bc42223dd8ff75a2e5b4247f10fa4f7674" translate="yes" xml:space="preserve">
          <source>Whether or not the class is `final`.</source>
          <target state="translated">클래스가 '최종'인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="5a5ad735546e443dd215f2284a32adfc9c7644e2" translate="yes" xml:space="preserve">
          <source>Whether or not the class is actually an &lt;a href=&quot;https://haxe.org/manual/types-interfaces.html&quot;&gt;interface&lt;/a&gt;.</source>
          <target state="translated">클래스가 실제로 &lt;a href=&quot;https://haxe.org/manual/types-interfaces.html&quot;&gt;인터페이스&lt;/a&gt; 인지 여부 .</target>
        </trans-unit>
        <trans-unit id="14de2b4508f63f08081562a611befd97b9fcbaaf" translate="yes" xml:space="preserve">
          <source>Whether or not the class is actually an [interface](https://haxe.org/manual/types-interfaces.html).</source>
          <target state="translated">클래스가 실제로 [인터페이스] (https://haxe.org/manual/types-interfaces.html)인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="2275c156dc7de024b6a0643d867194cea162dd4c" translate="yes" xml:space="preserve">
          <source>Whether or not the enum is &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;extern&lt;/a&gt;.</source>
          <target state="translated">여부 열거입니다 &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;통근&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c64b58a3265a032a4d298754609a22d9ff2f292" translate="yes" xml:space="preserve">
          <source>Whether or not the enum is [extern](https://haxe.org/manual/lf-externs.html).</source>
          <target state="translated">열거 형이 [extern] (https://haxe.org/manual/lf-externs.html)인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="52e3dcc7884ea2236cc89ae06dd6fbf7f9e3a2d0" translate="yes" xml:space="preserve">
          <source>Whether or not the field is `final`.</source>
          <target state="translated">필드가 '최종'인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="b202b1841cf6551580acca16c39c85148932bb48" translate="yes" xml:space="preserve">
          <source>Whether or not the field is `public`.</source>
          <target state="translated">필드가 '공개'인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="442fccfba190f01547b7c47d36d28ddfa7d51617" translate="yes" xml:space="preserve">
          <source>Whether or not the field is public.</source>
          <target state="translated">현장이 공개인지 여부.</target>
        </trans-unit>
        <trans-unit id="851289fd77c84e148bcf2e8f761196e3bcb21dab" translate="yes" xml:space="preserve">
          <source>Whether or not the field overrides another field.</source>
          <target state="translated">필드가 다른 필드를 대체하는지 여부</target>
        </trans-unit>
        <trans-unit id="08ce8ac36c614ee0c1d5bd54bc02eb04468f39e0" translate="yes" xml:space="preserve">
          <source>Whether or not the function argument is optional.</source>
          <target state="translated">함수 인수가 선택적인지 여부.</target>
        </trans-unit>
        <trans-unit id="e6c9e3aebbd7a1133338d60e89fb8f189d897459" translate="yes" xml:space="preserve">
          <source>Whether or not the type is &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-private-type&quot;&gt;private&lt;/a&gt;.</source>
          <target state="translated">유형이 &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-private-type&quot;&gt;개인용&lt;/a&gt; 인지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="f0caff4ba40713f33b21f59b1ee62cf2e46535cb" translate="yes" xml:space="preserve">
          <source>Whether or not the type is [`private`](https://haxe.org/manual/type-system-module-sub-types.html#define-private-type).</source>
          <target state="translated">유형이 [`private`] (https://haxe.org/manual/type-system-module-sub-types.html#define-private-type)인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="3b0bfe8279a5fd5e617622b7306ced9c09708e75" translate="yes" xml:space="preserve">
          <source>Whether or not the type is extern.</source>
          <target state="translated">유형이 extern인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="39b96a9ebf83964d6f3e10dc1a4e40659ca6ebb8" translate="yes" xml:space="preserve">
          <source>Whether or not the type is private.</source>
          <target state="translated">유형이 개인용인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="5ee69a8cd93f619117677877c86cadc15c991789" translate="yes" xml:space="preserve">
          <source>Whether or not the variable can be assigned to.</source>
          <target state="translated">변수를 할당 할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="14b57fef7dc30b2659e1fbd66e5e75ab44a371cc" translate="yes" xml:space="preserve">
          <source>Whether or not the variable has been captured by a closure.</source>
          <target state="translated">변수가 클로저에 의해 캡처되었는지 여부</target>
        </trans-unit>
        <trans-unit id="1b4d205272273f7092eef5824445fb53cdb08f7f" translate="yes" xml:space="preserve">
          <source>While basic usage and patterns consistently work across platforms, some more complex operations may yield different results. This is a necessary trade- off to retain a certain level of performance.</source>
          <target state="translated">기본 사용법과 패턴이 여러 플랫폼에서 일관되게 작동하지만 좀 더 복잡한 작업은 다른 결과를 낳을 수 있습니다. 이는 특정 수준의 성능을 유지하기 위해 필요한 절충안입니다.</target>
        </trans-unit>
        <trans-unit id="2c9a65d7658fcb454c6b871c2b8a4593b62181dc" translate="yes" xml:space="preserve">
          <source>While it is possible to assign an instance of IntIterator to a variable or field, it is worth noting that IntIterator does not reset after being used in a for-loop. Subsequent uses of the same instance will then have no effect.</source>
          <target state="translated">IntIterator 인스턴스를 변수 또는 필드에 할당 할 수 있지만 for-loop에서 사용한 후에 IntIterator가 재설정되지 않는다는 점에 주목할 가치가 있습니다. 동일한 인스턴스의 후속 사용은 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de8deac9eb4e92c6352a1b91dd86b5aab507297b" translate="yes" xml:space="preserve">
          <source>While mainly intended to be used in macros, it works in non-macro code as well.</source>
          <target state="translated">매크로에서 주로 사용되지만 매크로가 아닌 코드에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4e74612bc90558af0a0b6bc796cbe14f193fed09" translate="yes" xml:space="preserve">
          <source>Will however follow also abstracts to their underlying implementation, if they are not a @:coreType abstract</source>
          <target state="translated">그러나 @ : coreType 추상이 아닌 경우 기본 구현에 대한 추상도 따릅니다.</target>
        </trans-unit>
        <trans-unit id="b92b26e4e39d44726f4332fbe5bf7b15b0872873" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;s&lt;/code&gt; starting by position specified by &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">쓰기 &lt;code&gt;len&lt;/code&gt; 바이트 &lt;code&gt;s&lt;/code&gt; 에 의해 지정된 위치에서 시작하여 &lt;code&gt;pos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c172371f036d5fc83a93da34f0ee81f0043b0e8f" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;s&lt;/code&gt; string.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 문자열을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8672fd33984728ba3ebe811bed6989cb7a0b7ee" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 16-bit signed integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 16 비트 부호있는 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="52c27f8ee597a0952eb932ab5e8bf3149371b3cd" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 16-bit unsigned integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 부호없는 16 비트 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7eba1bdd7d775c3179d0f46092ccada1932113cf" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 24-bit signed integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 24 비트 부호있는 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="31fd666cf3c32a99f8022eaa0f6373bb98a1ca4b" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 24-bit unsigned integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 부호없는 24 비트 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="d7f4d1cfa8c6ba7c31e275de1fa3e47896af6354" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 32-bit floating point number.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 32 비트 부동 소수점 숫자로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="cd4c35866dddf0191b365abd0917bc9075ef2aee" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 32-bit signed integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 부호있는 32 비트 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="74b251f71587421a3b086464ed090fb28cac9a1f" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 64-bit double-precision floating point number.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 64 비트 배정 밀도 부동 소수점 숫자로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="4ff53b13915b3f366e076ce1b7923943bb291b7b" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 8-bit signed integer.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 8 비트 부호있는 정수로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="c64fc4c6f78d5089449488c08698f5486dd2abd1" translate="yes" xml:space="preserve">
          <source>Write all bytes stored in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">에 저장된 모든 바이트 기록 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb24984bb307106bd26340b8daf806362b3a7ecd" translate="yes" xml:space="preserve">
          <source>Write one byte.</source>
          <target state="translated">1 바이트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="6da1ebb3a3c65f44e1250e922542a6f81e7ef536" translate="yes" xml:space="preserve">
          <source>XML character data type.</source>
          <target state="translated">XML 문자 데이터 형식</target>
        </trans-unit>
        <trans-unit id="396e1ca34a808f9f2b298b6e1d4a168b370e0dae" translate="yes" xml:space="preserve">
          <source>XML comment type.</source>
          <target state="translated">XML 주석 유형.</target>
        </trans-unit>
        <trans-unit id="2294290ea977ddb805d03e6528337fb5a5cb8d72" translate="yes" xml:space="preserve">
          <source>XML doctype element type.</source>
          <target state="translated">XML doctype 요소 유형</target>
        </trans-unit>
        <trans-unit id="f89e9148fe41194e529bc06604c7a668369a3d39" translate="yes" xml:space="preserve">
          <source>XML document type.</source>
          <target state="translated">XML 문서 유형.</target>
        </trans-unit>
        <trans-unit id="76bb6cb6e5d1859e01ebe34395d9a336259fefa1" translate="yes" xml:space="preserve">
          <source>XML element type.</source>
          <target state="translated">XML 요소 유형</target>
        </trans-unit>
        <trans-unit id="a77ffc0d861d34784a4699952ba9e8a1352bc1b3" translate="yes" xml:space="preserve">
          <source>XML parsed character data type.</source>
          <target state="translated">XML 구문 분석 된 문자 데이터 유형</target>
        </trans-unit>
        <trans-unit id="7bc051292066a5afc43db9ca056a6931aefc6838" translate="yes" xml:space="preserve">
          <source>XML processing instruction type.</source>
          <target state="translated">XML 처리 명령 유형.</target>
        </trans-unit>
        <trans-unit id="3d8a993ceb8c1707c00289c58d54eb50df175cee" translate="yes" xml:space="preserve">
          <source>Xml</source>
          <target state="translated">Xml</target>
        </trans-unit>
        <trans-unit id="44ea3b73455df8bbdbf8f0b35feb87e1996ca34c" translate="yes" xml:space="preserve">
          <source>Xml node types.</source>
          <target state="translated">Xml 노드 유형</target>
        </trans-unit>
        <trans-unit id="dc47b955a40ab7202938616d001184bb08a0d941" translate="yes" xml:space="preserve">
          <source>Xml.CData()</source>
          <target state="translated">Xml.CData()</target>
        </trans-unit>
        <trans-unit id="4c3159503d75f6cee2d4b5c3c378374831dbbda6" translate="yes" xml:space="preserve">
          <source>Xml.Comment()</source>
          <target state="translated">Xml.Comment()</target>
        </trans-unit>
        <trans-unit id="02620d40c24a0e9ba2b2e54b18aef7b93714674f" translate="yes" xml:space="preserve">
          <source>Xml.DocType()</source>
          <target state="translated">Xml.DocType()</target>
        </trans-unit>
        <trans-unit id="61b6fa56e83cddd659652c7185bda04c484d82b4" translate="yes" xml:space="preserve">
          <source>Xml.Document()</source>
          <target state="translated">Xml.Document()</target>
        </trans-unit>
        <trans-unit id="976feeb507a1f1bb07f6e4c7b73f8e9a8a2f51cd" translate="yes" xml:space="preserve">
          <source>Xml.Element()</source>
          <target state="translated">Xml.Element()</target>
        </trans-unit>
        <trans-unit id="5ae77a4641c35d4e75fcc18b4744a06a60ca9e9c" translate="yes" xml:space="preserve">
          <source>Xml.PCData()</source>
          <target state="translated">Xml.PCData()</target>
        </trans-unit>
        <trans-unit id="03f09d25ae664e3ad10cb94b75dcfd5a796ad847" translate="yes" xml:space="preserve">
          <source>Xml.ProcessingInstruction()</source>
          <target state="translated">Xml.ProcessingInstruction()</target>
        </trans-unit>
        <trans-unit id="0d77cac327bc12731c5f3a19306cdbb733ad6601" translate="yes" xml:space="preserve">
          <source>Xml.addChild()</source>
          <target state="translated">Xml.addChild()</target>
        </trans-unit>
        <trans-unit id="a2dd61ac022d0e4c99f72498a04e3bfe338f7e70" translate="yes" xml:space="preserve">
          <source>Xml.attributes()</source>
          <target state="translated">Xml.attributes()</target>
        </trans-unit>
        <trans-unit id="5865c404ea6a1e5aef353150b6c88edb50354972" translate="yes" xml:space="preserve">
          <source>Xml.createCData()</source>
          <target state="translated">Xml.createCData()</target>
        </trans-unit>
        <trans-unit id="beaea70fe769829e5dea6e66fe58edc747045034" translate="yes" xml:space="preserve">
          <source>Xml.createComment()</source>
          <target state="translated">Xml.createComment()</target>
        </trans-unit>
        <trans-unit id="730dcf708f14669ab67f6bcf3dfdd2971b5088ab" translate="yes" xml:space="preserve">
          <source>Xml.createDocType()</source>
          <target state="translated">Xml.createDocType()</target>
        </trans-unit>
        <trans-unit id="22c3399af8d48ac4df63f0d373f7f50cd43a29d9" translate="yes" xml:space="preserve">
          <source>Xml.createDocument()</source>
          <target state="translated">Xml.createDocument()</target>
        </trans-unit>
        <trans-unit id="267a4ddb6a10c2b0618c3898c7ee931368e6403c" translate="yes" xml:space="preserve">
          <source>Xml.createElement()</source>
          <target state="translated">Xml.createElement()</target>
        </trans-unit>
        <trans-unit id="be16bfc4bff5e6b3639be6fba4b775f63c90d187" translate="yes" xml:space="preserve">
          <source>Xml.createPCData()</source>
          <target state="translated">Xml.createPCData()</target>
        </trans-unit>
        <trans-unit id="5438d234751d3bcd72e40c3146c197a2c2ee2c15" translate="yes" xml:space="preserve">
          <source>Xml.createProcessingInstruction()</source>
          <target state="translated">Xml.createProcessingInstruction()</target>
        </trans-unit>
        <trans-unit id="c29892711dc5c52688ea9e8cad446db71b9a084d" translate="yes" xml:space="preserve">
          <source>Xml.elements()</source>
          <target state="translated">Xml.elements()</target>
        </trans-unit>
        <trans-unit id="f3344514b4021d704bdede74a0c75051c2dd9095" translate="yes" xml:space="preserve">
          <source>Xml.elementsNamed()</source>
          <target state="translated">Xml.elementsNamed()</target>
        </trans-unit>
        <trans-unit id="df80a52bc73a86fdfc96cf631525881215afba36" translate="yes" xml:space="preserve">
          <source>Xml.exists()</source>
          <target state="translated">Xml.exists()</target>
        </trans-unit>
        <trans-unit id="777d6ad3ae923d7141973171915290918700ea85" translate="yes" xml:space="preserve">
          <source>Xml.firstChild()</source>
          <target state="translated">Xml.firstChild()</target>
        </trans-unit>
        <trans-unit id="1750d0136212ab37868de0a7a61373b28b465b30" translate="yes" xml:space="preserve">
          <source>Xml.firstElement()</source>
          <target state="translated">Xml.firstElement()</target>
        </trans-unit>
        <trans-unit id="8a4aa35da925335f60261974d2322c66890dd37d" translate="yes" xml:space="preserve">
          <source>Xml.get()</source>
          <target state="translated">Xml.get()</target>
        </trans-unit>
        <trans-unit id="e467f3a372aacc3b571c8136ee47583d7468b2e3" translate="yes" xml:space="preserve">
          <source>Xml.insertChild()</source>
          <target state="translated">Xml.insertChild()</target>
        </trans-unit>
        <trans-unit id="283011bd598f978efbe76ccd73806fbf94d28d98" translate="yes" xml:space="preserve">
          <source>Xml.iterator()</source>
          <target state="translated">Xml.iterator()</target>
        </trans-unit>
        <trans-unit id="bc35f95e316ab3362eb357afcb2c546768211a5e" translate="yes" xml:space="preserve">
          <source>Xml.nodeName</source>
          <target state="translated">Xml.nodeName</target>
        </trans-unit>
        <trans-unit id="d0fa336fda46d0546ccb7fdef026a1b16ad5bfe1" translate="yes" xml:space="preserve">
          <source>Xml.nodeType</source>
          <target state="translated">Xml.nodeType</target>
        </trans-unit>
        <trans-unit id="aa01ee1d504b88c7e1d3febff80fb51ee6b4a500" translate="yes" xml:space="preserve">
          <source>Xml.nodeValue</source>
          <target state="translated">Xml.nodeValue</target>
        </trans-unit>
        <trans-unit id="5078913da3cc2bffda7c387648b4363add5b30e2" translate="yes" xml:space="preserve">
          <source>Xml.parent</source>
          <target state="translated">Xml.parent</target>
        </trans-unit>
        <trans-unit id="04a49495539c416fed77427fe5fa033d9c764175" translate="yes" xml:space="preserve">
          <source>Xml.parse()</source>
          <target state="translated">Xml.parse()</target>
        </trans-unit>
        <trans-unit id="5bdc2edea18266dd9bc97d162ada5dbf2470f0ae" translate="yes" xml:space="preserve">
          <source>Xml.remove()</source>
          <target state="translated">Xml.remove()</target>
        </trans-unit>
        <trans-unit id="99335c7d626b4ad90c46ba1e6930f0a50ab92d7b" translate="yes" xml:space="preserve">
          <source>Xml.removeChild()</source>
          <target state="translated">Xml.removeChild()</target>
        </trans-unit>
        <trans-unit id="c142b6a7ea3dea41bd9e63d9fc699dfbbcde136c" translate="yes" xml:space="preserve">
          <source>Xml.set()</source>
          <target state="translated">Xml.set()</target>
        </trans-unit>
        <trans-unit id="647bfd5bfeb0190d080cec6b15f739368ce2a015" translate="yes" xml:space="preserve">
          <source>Xml.toString()</source>
          <target state="translated">Xml.toString()</target>
        </trans-unit>
        <trans-unit id="1c89aead603fa44d44fbe3d310288725a856c46f" translate="yes" xml:space="preserve">
          <source>XmlParser</source>
          <target state="translated">XmlParser</target>
        </trans-unit>
        <trans-unit id="0f0c20f2f540d543b1ec2fe399a686de141e3d77" translate="yes" xml:space="preserve">
          <source>XmlParser processes the runtime type information (RTTI) which is stored as a XML string in a static field &lt;code&gt;__rtti&lt;/code&gt;.</source>
          <target state="translated">XmlParser는 정적 필드 &lt;code&gt;__rtti&lt;/code&gt; 에 XML 문자열로 저장된 런타임 유형 정보 (RTTI)를 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="95d7375135f15523e30b08a9f80226b5e76dda7c" translate="yes" xml:space="preserve">
          <source>XmlParserException</source>
          <target state="translated">XmlParserException</target>
        </trans-unit>
        <trans-unit id="001aae531441f3e7a305a5aa1642b48e8bcdf16a" translate="yes" xml:space="preserve">
          <source>XmlType</source>
          <target state="translated">XmlType</target>
        </trans-unit>
        <trans-unit id="2cd20e4736e65cde44e28a1e92aa083053f8bda8" translate="yes" xml:space="preserve">
          <source>XmlType(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">XmlType(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f8c463325e75a1212d5131c65474f8c7747619fa" translate="yes" xml:space="preserve">
          <source>XmlType.CData()</source>
          <target state="translated">XmlType.CData()</target>
        </trans-unit>
        <trans-unit id="168bdfd0891d6a9c8cd122a0f72249845b104c2a" translate="yes" xml:space="preserve">
          <source>XmlType.Comment()</source>
          <target state="translated">XmlType.Comment()</target>
        </trans-unit>
        <trans-unit id="0cd1397488ba6167ceddc7c90098b75f9b65cec7" translate="yes" xml:space="preserve">
          <source>XmlType.DocType()</source>
          <target state="translated">XmlType.DocType()</target>
        </trans-unit>
        <trans-unit id="60ef780e9f8fef98f7be814064f8a2d1815ee8e5" translate="yes" xml:space="preserve">
          <source>XmlType.Document()</source>
          <target state="translated">XmlType.Document()</target>
        </trans-unit>
        <trans-unit id="5a5f94435350782590c6e18a176261947e2ead37" translate="yes" xml:space="preserve">
          <source>XmlType.Element()</source>
          <target state="translated">XmlType.Element()</target>
        </trans-unit>
        <trans-unit id="a63d370dacf46dfa09c5a129f31ea581312c5bb7" translate="yes" xml:space="preserve">
          <source>XmlType.PCData()</source>
          <target state="translated">XmlType.PCData()</target>
        </trans-unit>
        <trans-unit id="4860ca0ff296be1fb41e8747e60e2cbbfe362270" translate="yes" xml:space="preserve">
          <source>XmlType.ProcessingInstruction()</source>
          <target state="translated">XmlType.ProcessingInstruction()</target>
        </trans-unit>
        <trans-unit id="e3e5296623d86f35b3184d5d804624d3f43e540f" translate="yes" xml:space="preserve">
          <source>Zero-based location at &lt;code&gt;src&lt;/code&gt; from which bytes will be copied.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 에서 바이트를 복사 할 위치 (0 부터 시작)입니다.</target>
        </trans-unit>
        <trans-unit id="58a4c10ff042e31deed7b0d80de664c08d9c5821" translate="yes" xml:space="preserve">
          <source>Zero-based location in &lt;code&gt;this&lt;/code&gt; instance at which to start writing bytes.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 인스턴스에서 바이트 쓰기를 시작할 위치 (0 부터 시작)입니다.</target>
        </trans-unit>
        <trans-unit id="cdb0d31ac4e7a43a2def1b59d37b4c888dc7e0b5" translate="yes" xml:space="preserve">
          <source>[js] If &lt;code&gt;this.&lt;a href=&quot;#async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; is false, the callback functions are called before this method returns.</source>
          <target state="translated">[JS 만약, &lt;code&gt;this.&lt;a href=&quot;#async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; 가 false이면이 메소드가 리턴되기 전에 콜백 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="translated">`</target>
        </trans-unit>
        <trans-unit id="48e784aaad66d8d22c73667e1488fffbae1e32d8" translate="yes" xml:space="preserve">
          <source>a serialized value representing the result</source>
          <target state="translated">결과를 나타내는 직렬화 된 값</target>
        </trans-unit>
        <trans-unit id="2944d59e9498907d9d2d4d422795e88639d29bda" translate="yes" xml:space="preserve">
          <source>add a feature</source>
          <target state="translated">기능 추가</target>
        </trans-unit>
        <trans-unit id="3f5e0d974e37c2abd189d6ef96a2dd30e40ecf70" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; &amp;lt; &lt;a href=&quot;../../string&quot;&gt;문자열&lt;/a&gt; &amp;gt;의 별명</target>
        </trans-unit>
        <trans-unit id="9cf7270188eccd0fb402ee35782ee637963647bb" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;UInt8&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../array&quot;&gt;배열의&lt;/a&gt; 별명 &amp;lt; &lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;UInt8&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="70efad98709dfb28b0683f956d27f01680bc0605" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;metadataentry&quot;&gt;MetadataEntry&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; &amp;lt; &lt;a href=&quot;metadataentry&quot;&gt;MetadataEntry&lt;/a&gt; &amp;gt;의 별칭</target>
        </trans-unit>
        <trans-unit id="cd3b04f2fa52389efbb2ab259ccf68f7d3cf56ba" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;typetree&quot;&gt;TypeTree&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; &amp;lt; &lt;a href=&quot;typetree&quot;&gt;TypeTree&lt;/a&gt; &amp;gt;의 별명</target>
        </trans-unit>
        <trans-unit id="aa06eaf1745febe44b4669c98fb71473eaaddaf8" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{params:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, name:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;}&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; &amp;lt;{params : &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; &amp;lt; &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; &amp;gt;, name : &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; }&amp;gt;의 별칭</target>
        </trans-unit>
        <trans-unit id="53611cb5f35fb639a3ef1756fdb1f83a05e82434" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../list&quot;&gt;List&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../../list&quot;&gt;List&lt;/a&gt; &amp;lt; &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; &amp;gt;의 별명</target>
        </trans-unit>
        <trans-unit id="d5566e62fb3595af65d05e4852f9dc72292bb2b4" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../string&quot;&gt;문자열&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="5e81ba34709f6cbac044ab3186fe73208484f405" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="9761b1016d973cafa5a41e64d19602f841e99b46" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;arraybufferviewimpl&quot;&gt;ArrayBufferViewImpl&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;arraybufferviewimpl&quot;&gt;ArrayBufferViewImpl의&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="f20f859df58d5d45aa6f294a90f8e221ee59bd85" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;expr&quot;&gt;Expr&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;expr&quot;&gt;Expr의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="106cc35fb9dd0ec24985870eee1a724987ba9b30" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;https://api.haxe.org/sys/net/Socket.html&quot;&gt;Socket&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://api.haxe.org/sys/net/Socket.html&quot;&gt;소켓&lt;/a&gt; 별명</target>
        </trans-unit>
        <trans-unit id="9f6d2aab4703e2159ed64d6a395b4a42a36171b6" translate="yes" xml:space="preserve">
          <source>alias for T</source>
          <target state="translated">T의 별명</target>
        </trans-unit>
        <trans-unit id="1890a7d8ffcab472c944f0a60f12e117f550d022" translate="yes" xml:space="preserve">
          <source>all the types that were compiled by Haxe</source>
          <target state="translated">Haxe에 의해 컴파일 된 모든 유형</target>
        </trans-unit>
        <trans-unit id="5cb3e762e75a20155da41dbcc1c534315abb62e4" translate="yes" xml:space="preserve">
          <source>always null on dynamic targets</source>
          <target state="translated">동적 타겟에서는 항상 null</target>
        </trans-unit>
        <trans-unit id="b652053c97356e1d2146f13fbb90088111fc11f0" translate="yes" xml:space="preserve">
          <source>an array of parameters</source>
          <target state="translated">파라미터 배열</target>
        </trans-unit>
        <trans-unit id="596da67fb6b3d1b128e6f21cf4a6b6004900a53e" translate="yes" xml:space="preserve">
          <source>an array of strings representing the object+method path</source>
          <target state="translated">객체 + 메소드 경로를 나타내는 문자열 배열</target>
        </trans-unit>
        <trans-unit id="946b55730945907335b07fb5f69fd2e93a0f9093" translate="yes" xml:space="preserve">
          <source>array declarations if all their elements are values</source>
          <target state="translated">모든 요소가 값인 경우 배열 선언</target>
        </trans-unit>
        <trans-unit id="660c659fae364c438e07fe4269de10ff7906281a" translate="yes" xml:space="preserve">
          <source>binary operators except &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt; and assignments</source>
          <target state="translated">&lt;code&gt;=&amp;gt;&lt;/code&gt; , &lt;code&gt;...&lt;/code&gt; 및 할당을 제외한 이진 연산자</target>
        </trans-unit>
        <trans-unit id="37ea2cdf630bb5d86ad97c5371a78308d10ff648" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;http#requestUrl&quot;&gt;haxe.Http.requestUrl&lt;/a&gt;(url)&lt;/code&gt; and receive the result as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; (not available on flash)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http#requestUrl&quot;&gt;haxe.Http.requestUrl&lt;/a&gt;(url)&lt;/code&gt; 호출 하고 결과를 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로 수신 (플래시에서는 사용할 수 없음)</target>
        </trans-unit>
        <trans-unit id="c8c49de68b9a739975b8faf71dda255b46854580" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;serializer#run&quot;&gt;Serializer.run&lt;/a&gt;()&lt;/code&gt; to obtain the serialized representation of a single argument</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;serializer#run&quot;&gt;Serializer.run&lt;/a&gt;()&lt;/code&gt; 을 호출 하여 단일 인수의 직렬화 된 표현을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="11569e91e5ae3e243abf0e5070427f16dbc52818" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;unserializer#run&quot;&gt;Unserializer.run&lt;/a&gt;()&lt;/code&gt; to unserialize a single value from a given String</source>
          <target state="translated">주어진 문자열에서 단일 값을 직렬화 &lt;code&gt;&lt;a href=&quot;unserializer#run&quot;&gt;Unserializer.run&lt;/a&gt;()&lt;/code&gt; 을 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="d7f54a6cc867121c6e9bf458a08fe5ba2c2ff665" translate="yes" xml:space="preserve">
          <source>check if a feature is used</source>
          <target state="translated">기능이 사용되는지 확인</target>
        </trans-unit>
        <trans-unit id="fbe63b365d7f5dcc2a2dc313b7588474a9f14742" translate="yes" xml:space="preserve">
          <source>class instance</source>
          <target state="translated">클래스 인스턴스</target>
        </trans-unit>
        <trans-unit id="edd9a349011f4725e482bc6bc145ec92ab109a82" translate="yes" xml:space="preserve">
          <source>cpp</source>
          <target state="translated">cpp</target>
        </trans-unit>
        <trans-unit id="5bf302763dc7a0de6fb3ec0a4d9b5e451f87b220" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;http#Http&quot;&gt;haxe.Http&lt;/a&gt;(url)&lt;/code&gt;, register your callbacks for &lt;code&gt;onData&lt;/code&gt;, &lt;code&gt;onError&lt;/code&gt; and &lt;code&gt;onStatus&lt;/code&gt;, then call &lt;code&gt;request()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;http#Http&quot;&gt;haxe.Http&lt;/a&gt;(url)&lt;/code&gt; 만들고 &lt;code&gt;onData&lt;/code&gt; , &lt;code&gt;onError&lt;/code&gt; 및 &lt;code&gt;onStatus&lt;/code&gt; 에 대한 콜백을 등록한 다음 &lt;code&gt;request()&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6b4355e3a61265bf94bae7dc27a0605499c2157" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;()&lt;/code&gt; instance, call its &lt;code&gt;serialize()&lt;/code&gt; method with any argument and finally retrieve the String representation from &lt;code&gt;toString()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;()&lt;/code&gt; 인스턴스를 만들고 인수와 함께 &lt;code&gt;serialize()&lt;/code&gt; 메서드를 호출 한 다음 &lt;code&gt;toString()&lt;/code&gt; 에서 String 표현을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="096ad464fc0991cc91f16a92c47b022367831c39" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;()&lt;/code&gt; instance with a given serialization String, then call its &lt;code&gt;unserialize()&lt;/code&gt; method until all values are extracted</source>
          <target state="translated">지정된 직렬화 문자열을 사용하여 &lt;code&gt;new &lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;()&lt;/code&gt; 인스턴스를 만든 다음 모든 값이 추출 될 때까지 &lt;code&gt;unserialize()&lt;/code&gt; 메서드 를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="01e59915e33a92e0ee14d7d24cfa244984121c5c" translate="yes" xml:space="preserve">
          <source>create the metadata expression for the given type</source>
          <target state="translated">주어진 유형에 대한 메타 데이터 표현식을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="372f9c03ba5deea5f598777ffce513974e4924c2" translate="yes" xml:space="preserve">
          <source>crypto.Adler32</source>
          <target state="translated">crypto.Adler32</target>
        </trans-unit>
        <trans-unit id="7183365afa1d8eabec7f204304d8e71d771b82de" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.equals()</source>
          <target state="translated">crypto.Adler32.equals()</target>
        </trans-unit>
        <trans-unit id="9219138ee800a015676d541a508f0135e00bd55d" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.get()</source>
          <target state="translated">crypto.Adler32.get()</target>
        </trans-unit>
        <trans-unit id="173b9531957d9dc56d8e22c15e7eb8d9f3c3d01c" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.make()</source>
          <target state="translated">crypto.Adler32.make()</target>
        </trans-unit>
        <trans-unit id="75e5aeb82b7e8dc93d0102d08cf67a7214eb36c0" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.read()</source>
          <target state="translated">crypto.Adler32.read()</target>
        </trans-unit>
        <trans-unit id="99bd3cfbf58ecdc5702824f1decf04a06163f7ea" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.toString()</source>
          <target state="translated">crypto.Adler32.toString()</target>
        </trans-unit>
        <trans-unit id="d2742ed356141c52073c689b9e174489eb6d6ffe" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.update()</source>
          <target state="translated">crypto.Adler32.update()</target>
        </trans-unit>
        <trans-unit id="5aefda12fe24e04e841c72c3adc94bdfa24293f9" translate="yes" xml:space="preserve">
          <source>crypto.Base64</source>
          <target state="translated">crypto.Base64</target>
        </trans-unit>
        <trans-unit id="5b1d03d2fdddf120176485bccfa0562d7a04dd3f" translate="yes" xml:space="preserve">
          <source>crypto.Base64.BYTES()</source>
          <target state="translated">crypto.Base64.BYTES()</target>
        </trans-unit>
        <trans-unit id="35b7d1bd64549b67af5efabdb23750e571a7977c" translate="yes" xml:space="preserve">
          <source>crypto.Base64.CHARS()</source>
          <target state="translated">crypto.Base64.CHARS()</target>
        </trans-unit>
        <trans-unit id="73cbe4521e0250fb377857033f97d8270defc2af" translate="yes" xml:space="preserve">
          <source>crypto.Base64.decode()</source>
          <target state="translated">crypto.Base64.decode()</target>
        </trans-unit>
        <trans-unit id="c9d6eef33502c8b7b4448a4cd082951b95b9b238" translate="yes" xml:space="preserve">
          <source>crypto.Base64.encode()</source>
          <target state="translated">crypto.Base64.encode()</target>
        </trans-unit>
        <trans-unit id="cb67c2019fb92e0c65698188d04ac2f8ed5c462f" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode</source>
          <target state="translated">crypto.BaseCode</target>
        </trans-unit>
        <trans-unit id="4dac054f6a5a1c5182f89ea0729fb39df195367f" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decode()</source>
          <target state="translated">crypto.BaseCode.decode()</target>
        </trans-unit>
        <trans-unit id="f9335026661943cc8564ca4fc849eab7d9a755f9" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decodeBytes()</source>
          <target state="translated">crypto.BaseCode.decodeBytes()</target>
        </trans-unit>
        <trans-unit id="ebd214a98963ad0617a46bc6af35a4272faf6e80" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decodeString()</source>
          <target state="translated">crypto.BaseCode.decodeString()</target>
        </trans-unit>
        <trans-unit id="5e06def46f422f42a2e3ea6f658d08d22fdefe57" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encode()</source>
          <target state="translated">crypto.BaseCode.encode()</target>
        </trans-unit>
        <trans-unit id="6ad372e32a3f38884cecba2e47968e7e1093adae" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encodeBytes()</source>
          <target state="translated">crypto.BaseCode.encodeBytes()</target>
        </trans-unit>
        <trans-unit id="e7db4a888a02adc4e5c2549a4a64c7da5c1ad9f6" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encodeString()</source>
          <target state="translated">crypto.BaseCode.encodeString()</target>
        </trans-unit>
        <trans-unit id="c75b6098489b149947754b2ba8c3f467fcb84ff5" translate="yes" xml:space="preserve">
          <source>crypto.Crc32</source>
          <target state="translated">crypto.Crc32</target>
        </trans-unit>
        <trans-unit id="47f0d97d55fe54ed4203ef83acb15adf502599bc" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.byte()</source>
          <target state="translated">crypto.Crc32.byte()</target>
        </trans-unit>
        <trans-unit id="46a0582627089d44eda374911864cd70c482d4be" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.get()</source>
          <target state="translated">crypto.Crc32.get()</target>
        </trans-unit>
        <trans-unit id="3051832f32237294023f308bad354e698851b5a3" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.make()</source>
          <target state="translated">crypto.Crc32.make()</target>
        </trans-unit>
        <trans-unit id="106a006eff8af733daec0e2ebb87823672d22792" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.update()</source>
          <target state="translated">crypto.Crc32.update()</target>
        </trans-unit>
        <trans-unit id="8478db8abd3e929a6771e2014fe68bf6ff00e864" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod</source>
          <target state="translated">crypto.HashMethod</target>
        </trans-unit>
        <trans-unit id="245c17acabf8782ee2ed7ede5ceabdd4e55afb8b" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.MD5</source>
          <target state="translated">crypto.HashMethod.MD5</target>
        </trans-unit>
        <trans-unit id="aeda14dcc198a92ad26d4a0a95b7e521e4fc2e68" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.SHA1</source>
          <target state="translated">crypto.HashMethod.SHA1</target>
        </trans-unit>
        <trans-unit id="0140d54242adcdd1b0977097d5ff6a306d4c36e3" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.SHA256</source>
          <target state="translated">crypto.HashMethod.SHA256</target>
        </trans-unit>
        <trans-unit id="c802934d7a93f06487cbbca5fe3b951cf02b8d73" translate="yes" xml:space="preserve">
          <source>crypto.Hmac</source>
          <target state="translated">crypto.Hmac</target>
        </trans-unit>
        <trans-unit id="5b16ab20f8d96c599ffe6bacdb8948f0b25bfd7b" translate="yes" xml:space="preserve">
          <source>crypto.Hmac.make()</source>
          <target state="translated">crypto.Hmac.make()</target>
        </trans-unit>
        <trans-unit id="ac4a10caa34d69718a894ad940cfd7f6bf7dcc89" translate="yes" xml:space="preserve">
          <source>crypto.Md5</source>
          <target state="translated">crypto.Md5</target>
        </trans-unit>
        <trans-unit id="6fdac338649311fc1a94c501b34da7c02b9a3e40" translate="yes" xml:space="preserve">
          <source>crypto.Md5.encode()</source>
          <target state="translated">crypto.Md5.encode()</target>
        </trans-unit>
        <trans-unit id="2aa519b954f70c6fa5aa6061c098223acb762137" translate="yes" xml:space="preserve">
          <source>crypto.Md5.make()</source>
          <target state="translated">crypto.Md5.make()</target>
        </trans-unit>
        <trans-unit id="a5dfccb552c2ef8b3fb9a1b16879153a474f5b10" translate="yes" xml:space="preserve">
          <source>crypto.Sha1</source>
          <target state="translated">crypto.Sha1</target>
        </trans-unit>
        <trans-unit id="22f89ff724408a5c961976d1a4b92505acd6e804" translate="yes" xml:space="preserve">
          <source>crypto.Sha1.encode()</source>
          <target state="translated">crypto.Sha1.encode()</target>
        </trans-unit>
        <trans-unit id="893a1e579a1b5ac230aab70d8e9675c5d6c2c57c" translate="yes" xml:space="preserve">
          <source>crypto.Sha1.make()</source>
          <target state="translated">crypto.Sha1.make()</target>
        </trans-unit>
        <trans-unit id="e55fc33fd89a73d191236bb439586cf6282f67b7" translate="yes" xml:space="preserve">
          <source>crypto.Sha224</source>
          <target state="translated">crypto.Sha224</target>
        </trans-unit>
        <trans-unit id="1feb19f2c75ef9d13989f056752412ccbf440ab8" translate="yes" xml:space="preserve">
          <source>crypto.Sha224.encode()</source>
          <target state="translated">crypto.Sha224.encode()</target>
        </trans-unit>
        <trans-unit id="250f1245c279de815ae303c5a0f919bc88eeffde" translate="yes" xml:space="preserve">
          <source>crypto.Sha224.make()</source>
          <target state="translated">crypto.Sha224.make()</target>
        </trans-unit>
        <trans-unit id="13f2af593542f2795a5b25d301fc403fa998027c" translate="yes" xml:space="preserve">
          <source>crypto.Sha256</source>
          <target state="translated">crypto.Sha256</target>
        </trans-unit>
        <trans-unit id="8d6ba44f091b2b7345cbedc7cc1b48b4fd92d626" translate="yes" xml:space="preserve">
          <source>crypto.Sha256.encode()</source>
          <target state="translated">crypto.Sha256.encode()</target>
        </trans-unit>
        <trans-unit id="42259fc69a5e435dcf71a32dc2685372af0a2566" translate="yes" xml:space="preserve">
          <source>crypto.Sha256.make()</source>
          <target state="translated">crypto.Sha256.make()</target>
        </trans-unit>
        <trans-unit id="67f994533a5d976eed69aeae05e381bf6fa851e8" translate="yes" xml:space="preserve">
          <source>cs</source>
          <target state="translated">cs</target>
        </trans-unit>
        <trans-unit id="f1c8634f3e9572e8f53ded83bb3855cb9d4c2109" translate="yes" xml:space="preserve">
          <source>day: 1 to 31</source>
          <target state="translated">일 : 1 ~ 31</target>
        </trans-unit>
        <trans-unit id="b7b4fc8d04866ec39903c985f684d2cce2f7da8b" translate="yes" xml:space="preserve">
          <source>define the JS code that gets generated when a class or enum is accessed in a typed expression</source>
          <target state="translated">형식화 된 표현식에서 클래스 또는 열거 형에 액세스 할 때 생성되는 JS 코드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="25dc2b8415fbba542f2d3c8bdb3209329dacf488" translate="yes" xml:space="preserve">
          <source>directory1/directory2/filename.extension</source>
          <target state="translated">directory1/directory2/filename.extension</target>
        </trans-unit>
        <trans-unit id="afac0820b31f249dfde5837ac0d2de6bdb691e44" translate="yes" xml:space="preserve">
          <source>directory1\directory2\filename.extension</source>
          <target state="translated">directory1\directory2\filename.extension</target>
        </trans-unit>
        <trans-unit id="f4f5bbecaebe15c3049db1b0f589be7487e9b204" translate="yes" xml:space="preserve">
          <source>ds.ArraySort</source>
          <target state="translated">ds.ArraySort</target>
        </trans-unit>
        <trans-unit id="2fbf31f57ac6e524686ffc06be7fe5d8a634b021" translate="yes" xml:space="preserve">
          <source>ds.ArraySort.sort()</source>
          <target state="translated">ds.ArraySort.sort()</target>
        </trans-unit>
        <trans-unit id="c19743d7a84d468dd289ee73738516b92c489833" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree</source>
          <target state="translated">ds.BalancedTree</target>
        </trans-unit>
        <trans-unit id="519d3973ae745618b84d9ded5dd4254dc304131f" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.exists()</source>
          <target state="translated">ds.BalancedTree.exists()</target>
        </trans-unit>
        <trans-unit id="fcac7b89be02bd6879a59abbf195c0991341ea7d" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.get()</source>
          <target state="translated">ds.BalancedTree.get()</target>
        </trans-unit>
        <trans-unit id="5b65969b997448d09f8e3162dd660eba331f4ae6" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.iterator()</source>
          <target state="translated">ds.BalancedTree.iterator()</target>
        </trans-unit>
        <trans-unit id="1513f2e2b57db85d7797d640c2dde40d6e7f838a" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.keys()</source>
          <target state="translated">ds.BalancedTree.keys()</target>
        </trans-unit>
        <trans-unit id="c8de009d09da30713c3e073b79dbc9cfde387ee5" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.remove()</source>
          <target state="translated">ds.BalancedTree.remove()</target>
        </trans-unit>
        <trans-unit id="9aa8687d7c7e5b37b1788c342474dff4fb50061e" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.set()</source>
          <target state="translated">ds.BalancedTree.set()</target>
        </trans-unit>
        <trans-unit id="e70dc860463d7d57857234443e19e0b5c66d6b30" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.toString()</source>
          <target state="translated">ds.BalancedTree.toString()</target>
        </trans-unit>
        <trans-unit id="819095f4fdd380948ae411f68de39d9b843ace8d" translate="yes" xml:space="preserve">
          <source>ds.Either</source>
          <target state="translated">ds.Either</target>
        </trans-unit>
        <trans-unit id="b20c97f7d27a33324b090c4d6ea17bb58f3f35f4" translate="yes" xml:space="preserve">
          <source>ds.Either.Left()</source>
          <target state="translated">ds.Either.Left()</target>
        </trans-unit>
        <trans-unit id="ffab26b44d4550320182030ac21c94b7a244d4a0" translate="yes" xml:space="preserve">
          <source>ds.Either.Right()</source>
          <target state="translated">ds.Either.Right()</target>
        </trans-unit>
        <trans-unit id="027982a964ae7773c428da59b3d0012d9fecee36" translate="yes" xml:space="preserve">
          <source>ds.EnumValueMap</source>
          <target state="translated">ds.EnumValueMap</target>
        </trans-unit>
        <trans-unit id="75ea304e361e33b5d24d2376bd8374b480f14843" translate="yes" xml:space="preserve">
          <source>ds.GenericCell</source>
          <target state="translated">ds.GenericCell</target>
        </trans-unit>
        <trans-unit id="765ebc2b069a57ca346ac681217ae21dc853c3ca" translate="yes" xml:space="preserve">
          <source>ds.GenericCell.elt</source>
          <target state="translated">ds.GenericCell.elt</target>
        </trans-unit>
        <trans-unit id="b05bd45eab0fade4eb0a5a4b9f00427acbb9e0d4" translate="yes" xml:space="preserve">
          <source>ds.GenericCell.next</source>
          <target state="translated">ds.GenericCell.next</target>
        </trans-unit>
        <trans-unit id="b8bcb36915e2c8b1538d467a935b049c0748b2ec" translate="yes" xml:space="preserve">
          <source>ds.GenericStack</source>
          <target state="translated">ds.GenericStack</target>
        </trans-unit>
        <trans-unit id="a2c17b6d59f36223cd495383f379ea0a2330889e" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.add()</source>
          <target state="translated">ds.GenericStack.add()</target>
        </trans-unit>
        <trans-unit id="6a76615c5a441c1beaabada1034fc47a4179eaff" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.first()</source>
          <target state="translated">ds.GenericStack.first()</target>
        </trans-unit>
        <trans-unit id="c64c2c204c2ff45a432633e572f19391c632a50f" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.head</source>
          <target state="translated">ds.GenericStack.head</target>
        </trans-unit>
        <trans-unit id="ff233168ead7e071c9c9dff150545411155e9324" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.isEmpty()</source>
          <target state="translated">ds.GenericStack.isEmpty()</target>
        </trans-unit>
        <trans-unit id="c4c56cfb9cc4838e5d4470f9d6f8607893dce240" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.iterator()</source>
          <target state="translated">ds.GenericStack.iterator()</target>
        </trans-unit>
        <trans-unit id="fa0920949ae694c0896254110a3368ff62c3b8d9" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.pop()</source>
          <target state="translated">ds.GenericStack.pop()</target>
        </trans-unit>
        <trans-unit id="e932b16a747c36c484307da55f44587ce6722d23" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.remove()</source>
          <target state="translated">ds.GenericStack.remove()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
