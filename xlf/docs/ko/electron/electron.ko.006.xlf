<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="36bdb0c4e95eb235a9dae5ec3bc3c0e50ebb1632" translate="yes" xml:space="preserve">
          <source>External Debuggers</source>
          <target state="translated">외부 디버거</target>
        </trans-unit>
        <trans-unit id="6665ae025d7bfde53cfcf2c9c281e3a277b67fe8" translate="yes" xml:space="preserve">
          <source>Extra Unpacking on Some APIs</source>
          <target state="translated">일부 API에서 추가 압축 풀기</target>
        </trans-unit>
        <trans-unit id="2cb5356088da91c919f5f4dfc2d71f36867990f6" translate="yes" xml:space="preserve">
          <source>Extra steps to run the unit test:</source>
          <target state="translated">단위 테스트를 실행하기위한 추가 단계 :</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="a53ac626975f27602b101ee26086bf28679223ca" translate="yes" xml:space="preserve">
          <source>Fake Stat Information of &lt;code&gt;fs.stat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fs.stat&lt;/code&gt; 의 가짜 통계 정보</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="0e9430a5c15a25c2e0bc6a804e7395a0d585931b" translate="yes" xml:space="preserve">
          <source>Faroese</source>
          <target state="translated">Faroese</target>
        </trans-unit>
        <trans-unit id="ed3bdadf84df50841fa3f667344949be09290c26" translate="yes" xml:space="preserve">
          <source>Fatal internal compiler error: C1001</source>
          <target state="translated">치명적인 내부 컴파일러 오류 : C1001</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">기능 플래그</target>
        </trans-unit>
        <trans-unit id="b2e49793fe93779cb01b8dc38d230ea8124b18f9" translate="yes" xml:space="preserve">
          <source>Feature flags are a common practice in Chromium, and are well-established in the web-development ecosystem. In the context of Electron, a feature flag or &lt;strong&gt;soft branch&lt;/strong&gt; must have the following properties:</source>
          <target state="translated">기능 플래그는 Chromium의 일반적인 관행이며 웹 개발 생태계에서 잘 확립되어 있습니다. Electron과 관련하여 기능 플래그 또는 &lt;strong&gt;소프트 브랜치&lt;/strong&gt; 는 다음 특성을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="d4dcd7fef14f742aac1948cca5e3aa19a6d26619" translate="yes" xml:space="preserve">
          <source>Fedora 21</source>
          <target state="translated">페도라 21</target>
        </trans-unit>
        <trans-unit id="00be6cb96975f9badf5bf139e5ec261f89ee66e7" translate="yes" xml:space="preserve">
          <source>Fedora 24 and newer</source>
          <target state="translated">Fedora 24 이상</target>
        </trans-unit>
        <trans-unit id="68ef9cadad56547c3404ff7d01f699cf1f121a09" translate="yes" xml:space="preserve">
          <source>Feel free to post a comment in the pull request to ping reviewers if you are awaiting an answer on something. If you encounter words or acronyms that seem unfamiliar, refer to this &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;glossary&lt;/a&gt;.</source>
          <target state="translated">무언가에 대한 답변을 기다리는 경우 핑 검토 자에게 풀 요청에 의견을 게시하십시오. 익숙하지 않은 단어 나 머리 글자를 만나면이 &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;용어집을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="175df75ca866a486722893cf48cbe47ba7932e38" translate="yes" xml:space="preserve">
          <source>Fetch the git submodules:</source>
          <target state="translated">자식 서브 모듈을 가져옵니다 :</target>
        </trans-unit>
        <trans-unit id="927b92da1ee917ff26d97054707f38033a5f0818" translate="yes" xml:space="preserve">
          <source>Fetches a path's associated icon.</source>
          <target state="translated">패스의 관련 아이콘을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="246b2f9db7afd4afaa3d5e709533172c78ad8d0e" translate="yes" xml:space="preserve">
          <source>File Object</source>
          <target state="translated">파일 객체</target>
        </trans-unit>
        <trans-unit id="7a3acd779d548299a9f1c4a2da5a38f640685def" translate="yes" xml:space="preserve">
          <source>File names should be concatenated with &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt;, e.g. &lt;code&gt;file-name.js&lt;/code&gt; rather than &lt;code&gt;file_name.js&lt;/code&gt;, because in &lt;a href=&quot;https://github.com/github/atom&quot;&gt;github/atom&lt;/a&gt; module names are usually in the &lt;code&gt;module-name&lt;/code&gt; form. This rule only applies to &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/github/atom&quot;&gt;github / atom&lt;/a&gt; 모듈 이름은 일반적으로 &lt;code&gt;module-name&lt;/code&gt; 형식 이므로 파일 이름은 &lt;code&gt;_&lt;/code&gt; 대신 &lt;code&gt;-&lt;/code&gt; 와 연결해야합니다 ( 예 : &lt;code&gt;file_name.js&lt;/code&gt; 가 아닌 &lt;code&gt;file-name.js&lt;/code&gt; ) . 이 규칙은 &lt;code&gt;.js&lt;/code&gt; 파일 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7af55e1bfa851e12bdbfb75d7450fac19000151a" translate="yes" xml:space="preserve">
          <source>FileFilter</source>
          <target state="translated">FileFilter</target>
        </trans-unit>
        <trans-unit id="f462d97028e01e1f17e34060a7c99429b205e942" translate="yes" xml:space="preserve">
          <source>FileFilter Object</source>
          <target state="translated">FileFilter 객체</target>
        </trans-unit>
        <trans-unit id="67118f22fa22764c32ce2b488d7a7e32e0cf860d" translate="yes" xml:space="preserve">
          <source>FilePathWithHeaders Object</source>
          <target state="translated">FilePathWithHeaders 개체</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="8ded2a18fc7b3c9588e1ef466d67ff6e34da6ebb" translate="yes" xml:space="preserve">
          <source>Filter the &lt;code&gt;remote&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈 필터링</target>
        </trans-unit>
        <trans-unit id="131e90e96326989c97e15eca9aa16fac395ba444" translate="yes" xml:space="preserve">
          <source>Finally the &lt;code&gt;index.html&lt;/code&gt; is the web page you want to show:</source>
          <target state="translated">마지막으로 &lt;code&gt;index.html&lt;/code&gt; 은 표시하려는 웹 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="02b74ef965a4dcee339726db07647fc90cfb8e47" translate="yes" xml:space="preserve">
          <source>Find out filesystem location used by Chrome for storing extensions:</source>
          <target state="translated">확장 프로그램을 저장하기 위해 Chrome에서 사용하는 파일 시스템 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b9648adc5da1390634fe986be70082d1a7314302" translate="yes" xml:space="preserve">
          <source>Find out what version change is needed</source>
          <target state="translated">어떤 버전 변경이 필요한지 알아보십시오</target>
        </trans-unit>
        <trans-unit id="fc3782633b50564c6a87d64da6f78d52af3abfb4" translate="yes" xml:space="preserve">
          <source>Find the image you wish to modify in the build cloud and make note of the &lt;strong&gt;VHD Blob Path&lt;/strong&gt; for that image, which is the value for that corresponding key.</source>
          <target state="translated">빌드 클라우드에서 수정할 이미지를 찾고 해당 키의 값인 해당 이미지 의 &lt;strong&gt;VHD Blob 경로&lt;/strong&gt; 를 기록해 &lt;strong&gt;둡니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f97c03477f029ec97161fb3249f40975f98cb43e" translate="yes" xml:space="preserve">
          <source>Finding Support</source>
          <target state="translated">지원 찾기</target>
        </trans-unit>
        <trans-unit id="57eef27b1643e8b06fcc0444b2a3519d01b2cef8" translate="yes" xml:space="preserve">
          <source>Finnish</source>
          <target state="translated">Finnish</target>
        </trans-unit>
        <trans-unit id="5e52497e1cdbc228ec84c3a498a510d9eb0a9578" translate="yes" xml:space="preserve">
          <source>Fired when a frame has done navigation.</source>
          <target state="translated">프레임 탐색이 완료되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="51a13a5d80380bc539de3421f81e3ce28e63bd46" translate="yes" xml:space="preserve">
          <source>Fired when a load has committed. This includes navigation within the current document as well as subframe document-level loads, but does not include asynchronous resource loads.</source>
          <target state="translated">로드가 커밋되면 시작됩니다. 여기에는 현재 문서 내 탐색 및 서브 프레임 문서 수준로드가 포함되지만 비동기 리소스로드는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="277b75ade0fe25c29d720450d6e66a97fb6cf510" translate="yes" xml:space="preserve">
          <source>Fired when a plugin process is crashed.</source>
          <target state="translated">플러그인 프로세스가 중단되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="6a0ffe5f413971478388bb78716740c0bc854831" translate="yes" xml:space="preserve">
          <source>Fired when a redirect was received while requesting a resource.</source>
          <target state="translated">리소스를 요청하는 동안 리디렉션이 수신되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="6e3ac89d8432eea459401b7b1793621958ef5765" translate="yes" xml:space="preserve">
          <source>Fired when a result is available for &lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt;&lt;code&gt;webview.findInPage&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">&lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt; &lt;code&gt;webview.findInPage&lt;/code&gt; &lt;/a&gt; 요청에 대한 결과를 사용할 수있을 때 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="52d384e722ca2265adbacfacb3b2c4c7da5b36c0" translate="yes" xml:space="preserve">
          <source>Fired when details regarding a requested resource is available. &lt;code&gt;status&lt;/code&gt; indicates socket connection to download the resource.</source>
          <target state="translated">요청 된 리소스에 대한 세부 정보가 제공되면 시작됩니다. &lt;code&gt;status&lt;/code&gt; 는 리소스를 다운로드하기위한 소켓 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4451d0b8ebb6b9a5a3977344345d786b96cc8075" translate="yes" xml:space="preserve">
          <source>Fired when document in the given frame is loaded.</source>
          <target state="translated">주어진 프레임에 문서가로드되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f63f99464becc370d140a795365e8fd6b207381a" translate="yes" xml:space="preserve">
          <source>Fired when page enters fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API에 의해 트리거 된 페이지가 전체 화면으로 들어가면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e2934ed79f57401f01947d5576b783caae267c53" translate="yes" xml:space="preserve">
          <source>Fired when page leaves fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API에 의해 페이지가 전체 화면으로 표시되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="0570c1500c67e1d7aebc65a98a1b7e823f516360" translate="yes" xml:space="preserve">
          <source>Fired when page receives favicon urls.</source>
          <target state="translated">페이지에 파비콘 URL이 수신되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="117e37459607abb65dce79a7c045800ead6888db" translate="yes" xml:space="preserve">
          <source>Fired when page title is set during navigation. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file url.</source>
          <target state="translated">탐색 중에 페이지 제목이 설정되면 시작됩니다. 파일 URL에서 제목을 합성 할 때 &lt;code&gt;explicitSet&lt;/code&gt; 이 false입니다.</target>
        </trans-unit>
        <trans-unit id="be44199f58d36bd4301154b23d0dcb330ea0d875" translate="yes" xml:space="preserve">
          <source>Fired when the WebContents is destroyed.</source>
          <target state="translated">WebContents가 파괴되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4c9f296f1d9e1fa51dbae125c7971829e6c0c607" translate="yes" xml:space="preserve">
          <source>Fired when the gpu process is crashed.</source>
          <target state="translated">GPU 프로세스가 충돌하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="10d97ea48a6bad16b15200e1a9908e3087d0cf68" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to close itself.</source>
          <target state="translated">게스트 페이지 자체를 닫으려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f369a2095107e692ef2ece44e4987543937640cc" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to open a new browser window.</source>
          <target state="translated">게스트 페이지가 새 브라우저 창을 열려고하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f24231d7fc3dfa3fde6a0c2f7d4794cda64c29f8" translate="yes" xml:space="preserve">
          <source>Fired when the guest page has sent an asynchronous message to embedder page.</source>
          <target state="translated">게스트 페이지가 내장 페이지에 비동기 메시지를 보냈을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ec7f3851082921c42a1028ddac2f7bc640c59467" translate="yes" xml:space="preserve">
          <source>Fired when the guest window logs a console message.</source>
          <target state="translated">게스트 창에 콘솔 메시지가 기록되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="dd8723914c8724f48e88e5f7cbd957e9107f2781" translate="yes" xml:space="preserve">
          <source>Fired when the navigation is done, i.e. the spinner of the tab will stop spinning, and the &lt;code&gt;onload&lt;/code&gt; event is dispatched.</source>
          <target state="translated">탐색이 완료되면 시작됩니다. 즉, 탭의 회전자가 회전을 멈추고 &lt;code&gt;onload&lt;/code&gt; 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2129d76f2db58520ccfef9c9d47b3b2327db6bd4" translate="yes" xml:space="preserve">
          <source>Fired when the renderer process is crashed.</source>
          <target state="translated">렌더러 프로세스가 충돌하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="fc1e93fb67c9edaeda6350f0a4f6392669140d9d" translate="yes" xml:space="preserve">
          <source>First please make sure the extension is still being maintained, some extensions can not even work for recent versions of Chrome browser, and we are not able to do anything for them.</source>
          <target state="translated">먼저 확장 프로그램이 계속 유지되고 있는지 확인하세요. 일부 확장 프로그램은 최신 버전의 Chrome 브라우저에서도 작동하지 않으며 확장 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="12a0d3bebd41a47a1ebcd202cc5fd6f469240c5a" translate="yes" xml:space="preserve">
          <source>First you need to download the &lt;code&gt;chromedriver&lt;/code&gt; binary, and run it:</source>
          <target state="translated">먼저 &lt;code&gt;chromedriver&lt;/code&gt; 바이너리 를 다운로드하여 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c97db4162758208ef13df66721f7af8cb0c380b7" translate="yes" xml:space="preserve">
          <source>First, in order to avoid deadlocks, the callbacks passed to the main process are called asynchronously. You should not expect the main process to get the return value of the passed callbacks.</source>
          <target state="translated">먼저 교착 상태를 피하기 위해 기본 프로세스에 전달 된 콜백이 비동기 적으로 호출됩니다. 메인 프로세스가 전달 된 콜백의 반환 값을 얻을 것으로 기 대해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="34b7a02caa86c50def87d171ced86e2b7a6d85dc" translate="yes" xml:space="preserve">
          <source>First, install &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb&lt;/a&gt;. It's a virtual framebuffer, implementing the X11 display server protocol - it performs all graphical operations in memory without showing any screen output, which is exactly what we need.</source>
          <target state="translated">먼저 &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb를&lt;/a&gt; 설치 하십시오 . X11 디스플레이 서버 프로토콜을 구현하는 가상 프레임 버퍼입니다. 화면 출력을 표시하지 않고 메모리에서 모든 그래픽 작업을 수행하므로 정확히 필요한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9be1e7185b5c9d3d7dabfa2ff2d7a828031f3d46" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. Depending on your Linux distribution, the installation steps might differ. Assuming that you normally install software using a package manager like &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt;, use the official &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Node.js guidance on installing on Linux&lt;/a&gt;.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. Linux 배포판에 따라 설치 단계가 다를 수 있습니다. 일반적으로 &lt;code&gt;apt&lt;/code&gt; 또는 &lt;code&gt;pacman&lt;/code&gt; 과 같은 패키지 관리자를 사용하여 소프트웨어를 설치한다고 가정하면 &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Linux에 설치하는 데&lt;/a&gt; 공식 Node.js 지침을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0af76cb4ec629443cfcf87eae3eddbd49728f097" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;Windows Installer&lt;/code&gt;. Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. 사용 가능한 최신 &lt;code&gt;LTS&lt;/code&gt; 또는 &lt;code&gt;Current&lt;/code&gt; 버전 을 설치하는 것이 좋습니다 . &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js 다운로드 페이지를&lt;/a&gt; 방문 하여 &lt;code&gt;Windows Installer&lt;/code&gt; 를 선택하십시오 . 다운로드가 완료되면 설치 관리자를 실행하고 설치 마법사가 설치 과정을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="cc292aedc916ac210a076b2b0186247bdd714b0b" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;macOS Installer&lt;/code&gt;. While Homebrew is an offered option, but we recommend against it - many tools will be incompatible with the way Homebrew installs Node.js.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. 사용 가능한 최신 &lt;code&gt;LTS&lt;/code&gt; 또는 &lt;code&gt;Current&lt;/code&gt; 버전 을 설치하는 것이 좋습니다 . &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js 다운로드 페이지를&lt;/a&gt; 방문 하여 &lt;code&gt;macOS Installer&lt;/code&gt; 선택하십시오 . Homebrew가 제공되는 옵션이지만 권장하지는 않지만 많은 도구는 Homebrew가 Node.js를 설치하는 방식과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5f20133fa49f1f0f7a79e4e6d78d4ee0da8b06b" translate="yes" xml:space="preserve">
          <source>First, let's edit our interface so users can toggle between light and dark modes. This basic UI contains buttons to change the &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; setting and a text element indicating which &lt;code&gt;themeSource&lt;/code&gt; value is selected. By default, Electron follows the system's dark mode preference, so we will hardcode the theme source as &quot;System&quot;.</source>
          <target state="translated">먼저 사용자가 밝은 모드와 어두운 모드 사이를 전환 할 수 있도록 인터페이스를 편집 해 보겠습니다. 이 기본 UI에는 &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; 설정 을 변경하는 버튼 과 선택된 &lt;code&gt;themeSource&lt;/code&gt; 값을 나타내는 텍스트 요소가 포함되어 있습니다. 기본적으로 Electron은 시스템의 다크 모드 기본 설정을 따르므로 테마 소스를 &quot;System&quot;으로 하드 코딩합니다.</target>
        </trans-unit>
        <trans-unit id="aedf37ea270515b99497d91f9406d4da309c9ae7" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as its value:</source>
          <target state="translated">먼저 앱의 &lt;code&gt;Info.plist&lt;/code&gt; 에 &lt;code&gt;ElectronTeamID&lt;/code&gt; 키 를 추가해야합니다.이 키 는 값으로 팀 ID가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d7df8cadd80eb18446994d001ea3461e077d6dd" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as value:</source>
          <target state="translated">먼저 Team ID가 값인 앱의 &lt;code&gt;Info.plist&lt;/code&gt; 에 &lt;code&gt;ElectronTeamID&lt;/code&gt; 키 를 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ca0882e805f3e57f974f180e01085f543e2fb36d" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;*.patch&lt;/code&gt; files in the &lt;code&gt;patches/&lt;/code&gt; and &lt;code&gt;patches-mas/&lt;/code&gt; folders.</source>
          <target state="translated">&lt;code&gt;patches/&lt;/code&gt; 및 &lt;code&gt;patches-mas/&lt;/code&gt; 폴더 에서 &lt;code&gt;*.patch&lt;/code&gt; 파일을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3573878e20013b55583b98e25b25480b5f447544" translate="yes" xml:space="preserve">
          <source>Fix build config errors first</source>
          <target state="translated">먼저 빌드 구성 오류 수정</target>
        </trans-unit>
        <trans-unit id="2fd326b2a55bcce8aaf40e5b205a43586f01e477" translate="yes" xml:space="preserve">
          <source>Fix compilation and linking errors</source>
          <target state="translated">컴파일 및 연결 오류 수정</target>
        </trans-unit>
        <trans-unit id="be472760b1c59aabacb468181805b6d35ea1f4a6" translate="yes" xml:space="preserve">
          <source>Fix fatal errors first, like missing files and errors related to compiler flags or defines</source>
          <target state="translated">누락 된 파일 및 컴파일러 플래그와 관련된 오류 또는 정의와 같은 치명적 오류를 먼저 수정</target>
        </trans-unit>
        <trans-unit id="d1cadd8ae95fff74283ef0e169c388a7747600a6" translate="yes" xml:space="preserve">
          <source>Fix missing binaries of a release manually</source>
          <target state="translated">릴리스의 누락 된 바이너리를 수동으로 수정</target>
        </trans-unit>
        <trans-unit id="ecdbb9113c4d8c2f61653a2c4c861cc1dc00c823" translate="yes" xml:space="preserve">
          <source>Flash Frame</source>
          <target state="translated">플래시 프레임</target>
        </trans-unit>
        <trans-unit id="bd43ec85fdff6518874fb812586a2433706d81d5" translate="yes" xml:space="preserve">
          <source>Focuses on the window.</source>
          <target state="translated">창에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="cee144f2d216cdc7631ba053ba3f05f1965d28a6" translate="yes" xml:space="preserve">
          <source>Focuses the child window (brings the window to front).</source>
          <target state="translated">자식 창에 초점을 맞 춥니 다 (창을 앞으로 가져옵니다).</target>
        </trans-unit>
        <trans-unit id="14c6a7fd821dc867b3d84617a634eef0422b84c7" translate="yes" xml:space="preserve">
          <source>Focuses the web page.</source>
          <target state="translated">웹 페이지를 집중시킵니다.</target>
        </trans-unit>
        <trans-unit id="aecd03a4a4b9d532aa63bf7dc404e53645c982b7" translate="yes" xml:space="preserve">
          <source>Follow all the steps above to fix Electron code on all supported platforms.</source>
          <target state="translated">지원되는 모든 플랫폼에서 Electron 코드를 수정하려면 위의 모든 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1c24b5bf867b6e42c0299f9cc8698367f71b90cc" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Linux.</source>
          <target state="translated">Linux에서 Electron을 빌드하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="5b7fa4ec60b9d247ca93f67ab735d3ef943d7b6a" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Windows.</source>
          <target state="translated">Windows에서 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="fd80cb5d21b263826159e8667626fffe170c3f97" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on macOS.</source>
          <target state="translated">macOS에서 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="7918e53919f3efaa0dfa15fb15011ba6065eb834" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron with the experimental GN build.</source>
          <target state="translated">실험적인 GN 빌드로 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="193e1f0e0c4d19d51ab7ad7331c2dd3a3cb75e35" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron.</source>
          <target state="translated">Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="921acf758984257599ba401c33220ee705e3803f" translate="yes" xml:space="preserve">
          <source>Following &lt;code&gt;gyp&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">다음 &lt;code&gt;gyp&lt;/code&gt; 파일에는 Electron 빌드에 대한 기본 규칙이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="549cb66a7786a536325eec62186f803c70217c72" translate="yes" xml:space="preserve">
          <source>Following platforms are supported by Electron:</source>
          <target state="translated">Electron은 다음 플랫폼을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="c2e6ed1cc1e40ea38253fb9692c1bee87a7a9da6" translate="yes" xml:space="preserve">
          <source>Following suffixes for DPI are also supported:</source>
          <target state="translated">DPI의 다음 접미사도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e7fe0bf347ec209bee8e530d447ba905eaf79ce5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;infoType&lt;/code&gt; equal to &lt;code&gt;basic&lt;/code&gt;: Promise is fulfilled with &lt;code&gt;Object&lt;/code&gt; containing fewer attributes than when requested with &lt;code&gt;complete&lt;/code&gt;. Here's an example of basic response:</source>
          <target state="translated">대한 &lt;code&gt;infoType&lt;/code&gt; 동일한 &lt;code&gt;basic&lt;/code&gt; : 약속이 완수 &lt;code&gt;Object&lt;/code&gt; 와 요청이있을 때보다 적은 수의 속성을 포함하는 &lt;code&gt;complete&lt;/code&gt; . 다음은 기본 응답의 예입니다.</target>
        </trans-unit>
        <trans-unit id="f082cd56fddf46d89a14c8f8668cb2eb08f6b251" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;infoType&lt;/code&gt; equal to &lt;code&gt;complete&lt;/code&gt;: Promise is fulfilled with &lt;code&gt;Object&lt;/code&gt; containing all the GPU Information as in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/4178e190e9da409b055e5dff469911ec6f6b716f/gpu/config/gpu_info.cc&quot;&gt;chromium's GPUInfo object&lt;/a&gt;. This includes the version and driver information that's shown on &lt;code&gt;chrome://gpu&lt;/code&gt; page.</source>
          <target state="translated">대한 &lt;code&gt;infoType&lt;/code&gt; 에 동일 &lt;code&gt;complete&lt;/code&gt; : 약속이 완수 &lt;code&gt;Object&lt;/code&gt; 와 같이 모든 GPU 정보가 포함 된 &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/4178e190e9da409b055e5dff469911ec6f6b716f/gpu/config/gpu_info.cc&quot;&gt;크롬의 GPUInfo 객체&lt;/a&gt; . 여기에는 &lt;code&gt;chrome://gpu&lt;/code&gt; 페이지 에 표시된 버전 및 드라이버 정보가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="9b1856927689f0b70cf48435344dc811e1f0d867" translate="yes" xml:space="preserve">
          <source>For API references, there are exceptions to this rule.</source>
          <target state="translated">API 참조의 경우이 규칙에 대한 예외가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ed62a7bbd3406e1648a659173663fd21604ab49" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">C ++ 및 Python의 경우 Chromium 's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style을&lt;/a&gt; 따릅니다 . &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; 을 사용하여 C ++ 코드를 자동으로 포맷 할 수 있습니다 . 모든 파일이 일치하는지 확인 하는 스크립트 &lt;code&gt;script/cpplint.py&lt;/code&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e74b0c2c245b6a943ac4d87389b49f44dcd696ee" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;development/clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">C ++ 및 Python의 경우 Chromium의 &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;코딩 스타일을&lt;/a&gt; 따릅니다 . &lt;a href=&quot;development/clang-format&quot;&gt;clang-format&lt;/a&gt; 을 사용하여 C ++ 코드를 자동으로 형식화 할 수 있습니다 . 모든 파일이 일치하는지 확인하는 &lt;code&gt;script/cpplint.py&lt;/code&gt; 스크립트도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="524956d4e49580fce3e083c2e746c9cc4ddc290a" translate="yes" xml:space="preserve">
          <source>For Electron 9 and higher the spellchecker is enabled by default. For Electron 8 you need to enable it in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">Electron 9 이상에서는 맞춤법 검사기가 기본적으로 활성화되어 있습니다. Electron 8의 경우 &lt;code&gt;webPreferences&lt;/code&gt; 에서 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1111e6b08b7a2e0ce97ca11efe04cef41bea428e" translate="yes" xml:space="preserve">
          <source>For Jenkins, a &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb plugin is available&lt;/a&gt;.</source>
          <target state="translated">Jenkins의 경우 &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb 플러그인을 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e234ecf902399c6ca2e2168815587789055c246" translate="yes" xml:space="preserve">
          <source>For POST requests the &lt;code&gt;uploadData&lt;/code&gt; object must be provided.</source>
          <target state="translated">POST 요청의 경우 &lt;code&gt;uploadData&lt;/code&gt; 객체를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5c7c488de68864ac20ca5e39bc85e54c5c53cbe" translate="yes" xml:space="preserve">
          <source>For Windows and Linux there are a few Electron APIs you should use to set the languages for the spellchecker.</source>
          <target state="translated">Windows 및 Linux의 경우 맞춤법 검사기의 언어를 설정하는 데 사용해야하는 Electron API가 몇 가지 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e94ed3bd242175238f65cecbea47db530efc30e" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;minor&lt;/code&gt; release, e.g. &lt;code&gt;1.8.0&lt;/code&gt;, use this format:</source>
          <target state="translated">A에 대한 &lt;code&gt;minor&lt;/code&gt; 예 릴리스 &lt;code&gt;1.8.0&lt;/code&gt; 을 ,이 형식을 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="c3aef3c0a78c4ebdda5b31c717e34be096a56311" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;patch&lt;/code&gt; release, use the following format:</source>
          <target state="translated">A에 대한 &lt;code&gt;patch&lt;/code&gt; 릴리스, 다음 형식을 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="fc84c5b30853e927ab61c178eca9058bf3442a18" translate="yes" xml:space="preserve">
          <source>For a complex app, the &lt;code&gt;ready-to-show&lt;/code&gt; event could be emitted too late, making the app feel slow. In this case, it is recommended to show the window immediately, and use a &lt;code&gt;backgroundColor&lt;/code&gt; close to your app's background:</source>
          <target state="translated">복잡한 앱의 경우 &lt;code&gt;ready-to-show&lt;/code&gt; 이벤트가 너무 늦게 발생하여 앱이 느리게 느껴질 수 있습니다. 이 경우 창을 즉시 표시하고 앱의 배경에 가까운 &lt;code&gt;backgroundColor&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="22fe9873a98adb59030dea1269d80e54827cd0a8" translate="yes" xml:space="preserve">
          <source>For a list of boilerplates and tools to kick-start your development process, see the &lt;a href=&quot;boilerplates-and-clis&quot;&gt;Boilerplates and CLIs documentation&lt;/a&gt;.</source>
          <target state="translated">개발 프로세스를 시작하기위한 상용구 및 도구 목록은 상용구 &lt;a href=&quot;boilerplates-and-clis&quot;&gt;및 CLI 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4fdf20b52a54c5c410ee30c1b5961d4d623dae0" translate="yes" xml:space="preserve">
          <source>For a subset of Electron functionality it makes sense to disable certain features for an entire application. For example, 99% of apps don't make use of &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt;, these applications want to be able to ship a binary that is incapable of using that feature. We also don't want Electron consumers building Electron from source as that is both a massive technical challenge and has a high cost of both time and money.</source>
          <target state="translated">Electron 기능의 하위 집합의 경우 전체 애플리케이션에 대해 특정 기능을 비활성화하는 것이 좋습니다. 예를 들어 99 %의 앱이 &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt; 를 사용하지 않는 경우 이러한 애플리케이션은 해당 기능을 사용할 수없는 바이너리를 제공 할 수 있기를 원합니다. 우리는 또한 Electron 소비자가 소스에서 Electron을 구축하는 것을 원하지 않습니다. 이는 엄청난 기술적 과제이고 시간과 비용이 모두 높은 비용이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="956902aa84cfb91f426f18cd11e77e87658eab1e" translate="yes" xml:space="preserve">
          <source>For all other headers, the values are joined together with ', '.</source>
          <target state="translated">다른 모든 헤더의 경우 값은 ','와 함께 결합됩니다.</target>
        </trans-unit>
        <trans-unit id="d588bcee88995a0c7fae3327f86fa8df139ed0a0" translate="yes" xml:space="preserve">
          <source>For an introduction to ProcMon's basic and advanced debugging features, go check out &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;this video tutorial&lt;/a&gt; provided by Microsoft.</source>
          <target state="translated">ProcMon의 기본 및 고급 디버깅 기능에 대한 소개 는 Microsoft에서 제공하는 &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;이 비디오 자습서를&lt;/a&gt; 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="20758183c3e1338dc8a6b93162460ce862ff75d3" translate="yes" xml:space="preserve">
          <source>For any issue, there are fundamentally three ways an individual can contribute:</source>
          <target state="translated">어떤 문제 든 개인이 기여할 수있는 근본적인 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c36476d109a6eac638160d47ed71c4848f206bb8" translate="yes" xml:space="preserve">
          <source>For certain events the &lt;code&gt;listener&lt;/code&gt; is passed with a &lt;code&gt;callback&lt;/code&gt;, which should be called with a &lt;code&gt;response&lt;/code&gt; object when &lt;code&gt;listener&lt;/code&gt; has done its work.</source>
          <target state="translated">특정 이벤트의 경우 &lt;code&gt;listener&lt;/code&gt; 는 &lt;code&gt;callback&lt;/code&gt; 과 함께 전달되며 &lt;code&gt;listener&lt;/code&gt; 는 작업을 수행 했을 때 &lt;code&gt;response&lt;/code&gt; 객체 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="502cf085450be5d6d8a56eda1a567fd820d5644e" translate="yes" xml:space="preserve">
          <source>For certain features (e.g. pinch-zoom) to work properly, you must target the macOS 10.10 SDK.</source>
          <target state="translated">특정 기능 (예 : 핀치 줌)이 제대로 작동하려면 macOS 10.10 SDK를 대상으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="f55316ce3b72dc39959ab1636a82f40fea730083" translate="yes" xml:space="preserve">
          <source>For convenience, you may want to wrap &lt;code&gt;appProcess&lt;/code&gt; in a driver object that provides more high-level functions. Here is an example of how you can do this:</source>
          <target state="translated">편의상 더 높은 수준의 기능을 제공하는 드라이버 객체에 &lt;code&gt;appProcess&lt;/code&gt; 를 래핑 할 수 있습니다. 이를 수행하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c20150042740cb3bd17b581a9f4141df5974afae" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;https://github.com/electron/electron/pull/6986&quot;&gt;6986&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/electron/pull/7189&quot;&gt;7189&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/pull/6986&quot;&gt;6986&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron/electron/pull/7189&quot;&gt;7189를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f4255927b82eac232a3604f861da1b4f744c0e1" translate="yes" xml:space="preserve">
          <source>For duplicate &lt;code&gt;cookie&lt;/code&gt; headers, the values are joined together with '; '.</source>
          <target state="translated">중복 &lt;code&gt;cookie&lt;/code&gt; 헤더의 경우 값은 '; '.</target>
        </trans-unit>
        <trans-unit id="6265093784bd7dbf5e19bb812e72dae142bf8944" translate="yes" xml:space="preserve">
          <source>For each major and minor bump, you should expect to see something like the following:</source>
          <target state="translated">각각의 주 및 부 범프에 대해 다음과 같은 내용이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="58abffa9ea34b3901414814791108b8b1b94cc23" translate="yes" xml:space="preserve">
          <source>For each patch, do:</source>
          <target state="translated">각 패치에 대해 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="83edd08299e575573bc5493f6bc769dea6d6a6c1" translate="yes" xml:space="preserve">
          <source>For each patch:</source>
          <target state="translated">각 패치마다 :</target>
        </trans-unit>
        <trans-unit id="7e1e492e1ff102dacf9ee3206f3207099b0d6167" translate="yes" xml:space="preserve">
          <source>For example building with GCC toolchain:</source>
          <target state="translated">예를 들어 GCC 툴체인으로 구축 :</target>
        </trans-unit>
        <trans-unit id="065f28411e5112140feb1dde5f9794fa00a0584d" translate="yes" xml:space="preserve">
          <source>For example if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">예를 들어 &lt;code&gt;icon.png&lt;/code&gt; 가 표준 해상도의 일반 이미지 인 경우 &lt;code&gt;icon@2x.png&lt;/code&gt; 는 DPI 밀도가 두 배인 고해상도 이미지로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7c473301f00f572dccbc6dcc4c5399d4e0ed0ace" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/user/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;/user/local/bin/clang&lt;/code&gt; 아래에 &lt;code&gt;clang&lt;/code&gt; 을 설치 한 경우 :</target>
        </trans-unit>
        <trans-unit id="26f86631003d6d3b4b82afd422075d9ac2b69188" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/usr/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;/usr/local/bin/clang&lt;/code&gt; 아래에 &lt;code&gt;clang&lt;/code&gt; 을 설치 한 경우 :</target>
        </trans-unit>
        <trans-unit id="ba48d1140902ffdcb02cd8e0d7757e695bd35f62" translate="yes" xml:space="preserve">
          <source>For example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:</source>
          <target state="translated">예를 들어 다음 페이지를 표준 구성표로 등록하지 않고 사용자 지정 프로토콜을 사용하여로드하는 경우 비표준 구성표는 상대 URL을 인식 할 수 없으므로 이미지가로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="493ec61d1e04b47a4387b0ca5addeea25d2a2575" translate="yes" xml:space="preserve">
          <source>For example, Windows Media Player might offer standard media transport controls such as play, pause, mute, and stop.</source>
          <target state="translated">예를 들어 Windows Media Player는 재생, 일시 중지, 음소거 및 중지와 같은 표준 미디어 전송 컨트롤을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3494f8de5fe0b0ecf247fa44514610b6a4b5dc01" translate="yes" xml:space="preserve">
          <source>For example, an API calling A requests for &lt;code&gt;prevent-app-suspension&lt;/code&gt;, and another calling B requests for &lt;code&gt;prevent-display-sleep&lt;/code&gt;. &lt;code&gt;prevent-display-sleep&lt;/code&gt; will be used until B stops its request. After that, &lt;code&gt;prevent-app-suspension&lt;/code&gt; is used.</source>
          <target state="translated">예를 들어 A를 호출하는 API는 &lt;code&gt;prevent-app-suspension&lt;/code&gt; 을 요청하고 다른 호출 B는 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 을 요청합니다 . B가 요청을 중지 할 때까지 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 가 사용됩니다. 그런 다음 &lt;code&gt;prevent-app-suspension&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="03ca657be2d43086ea0314b5c15e030ff5c58672" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">예를 들어, &lt;code&gt;icon.png&lt;/code&gt; 가 표준 해상도의 일반 이미지 인 경우 &lt;code&gt;icon@2x.png&lt;/code&gt; 는 DPI 밀도가 두 배인 고해상도 이미지로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9c1f50d21d4007f1d24f2deda38646ce1693771a" translate="yes" xml:space="preserve">
          <source>For example, suppose we have an &lt;code&gt;example.asar&lt;/code&gt; archive under &lt;code&gt;/path/to&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;/path/to&lt;/code&gt; 아래에 &lt;code&gt;example.asar&lt;/code&gt; 아카이브 가 있다고 가정 합니다 .</target>
        </trans-unit>
        <trans-unit id="e6543b5df66545d392593abae27aaf4d3618aaa2" translate="yes" xml:space="preserve">
          <source>For example, the following code seems innocent at first glance. It installs a callback for the &lt;code&gt;close&lt;/code&gt; event on a remote object:</source>
          <target state="translated">예를 들어, 다음 코드는 언뜻보기에 결백합니다. 원격 객체에 &lt;code&gt;close&lt;/code&gt; 이벤트에 대한 콜백을 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="5987f05877c28042562f9f718a4a4c8e2dec92e0" translate="yes" xml:space="preserve">
          <source>For example, the methods of the &lt;code&gt;Session&lt;/code&gt; class under the &lt;code&gt;session&lt;/code&gt; module must use &lt;code&gt;ses&lt;/code&gt; as the &lt;code&gt;objectName&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;session&lt;/code&gt; 모듈 아래의 &lt;code&gt;Session&lt;/code&gt; 클래스 메서드는 &lt;code&gt;ses&lt;/code&gt; 를 &lt;code&gt;objectName&lt;/code&gt; 으로 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0265d0e5b1761ccffe2ee6e585cbe994b9a3ccbf" translate="yes" xml:space="preserve">
          <source>For example, to access the Electron API in both processes, require its included module:</source>
          <target state="translated">예를 들어 두 프로세스 모두에서 Electron API에 액세스하려면 포함 된 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b2c330e45eb22f06fc0ae8f33da09f6bd6a525e6" translate="yes" xml:space="preserve">
          <source>For example, to get a file with &lt;code&gt;$.get&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;$.get&lt;/code&gt; 파일을 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="6df8cab4c31908f53df67f6b5d786e9e38d009d7" translate="yes" xml:space="preserve">
          <source>For example, to install &lt;code&gt;electron-rebuild&lt;/code&gt; and then rebuild modules with it via the command line:</source>
          <target state="translated">예를 들어, &lt;code&gt;electron-rebuild&lt;/code&gt; 를 설치 한 다음 명령 줄을 통해 모듈을 다시 빌드 하려면 :</target>
        </trans-unit>
        <trans-unit id="b14eac0e28ae773f75d54ad13525d27764aac116" translate="yes" xml:space="preserve">
          <source>For example, to install all dependencies for Electron:</source>
          <target state="translated">예를 들어 Electron에 대한 모든 종속성을 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="49a277e10dfd7299cf73cfb6c1f4de56cad0bbf3" translate="yes" xml:space="preserve">
          <source>For example, when creating a tray or setting a window's icon, you can pass an image file path as a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 트레이를 만들거나 창 아이콘을 설정할 때 이미지 파일 경로를 &lt;code&gt;String&lt;/code&gt; 으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc165346dfd2f10c3f19f087c010877da49b91ef" translate="yes" xml:space="preserve">
          <source>For information on how to properly disclose an Electron vulnerability, see &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;</source>
          <target state="translated">전자 취약점을 올바르게 공개하는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="26000534d32ef52933841a528d4d8361afeb23a6" translate="yes" xml:space="preserve">
          <source>For instance you can't use a function from the renderer process in an &lt;code&gt;Array.map&lt;/code&gt; called in the main process:</source>
          <target state="translated">예를 들어 메인 프로세스에서 호출 된 &lt;code&gt;Array.map&lt;/code&gt; 의 렌더러 프로세스에서 함수를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="21d1e0d87b298c57a74a76988b09ab848fb4f7af" translate="yes" xml:space="preserve">
          <source>For instance, Electron uses Chromium's rendering library rather than all of Chromium. This makes it easier to upgrade Chromium but also means some browser features found in Google Chrome do not exist in Electron.</source>
          <target state="translated">예를 들어 Electron은 모든 Chromium 대신 Chromium의 렌더링 라이브러리를 사용합니다. 이렇게하면 Chromium을 쉽게 업그레이드 할 수 있지만 Chrome에있는 일부 브라우저 기능은 Electron에 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85f3a1e5e439ec3b7f4fca1ecd7c8de55b68620e" translate="yes" xml:space="preserve">
          <source>For instance, the following example quickly shows how the &lt;code&gt;net&lt;/code&gt; API might be used:</source>
          <target state="translated">예를 들어 다음 예제는 &lt;code&gt;net&lt;/code&gt; API 사용 방법을 신속하게 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="aa87bd614d9dce370155a8e065a88a9011399793" translate="yes" xml:space="preserve">
          <source>For instance, to use the China CDN mirror:</source>
          <target state="translated">예를 들어 중국 CDN 미러를 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="248c4264fd961b911b66e5010fd921898cf7d57a" translate="yes" xml:space="preserve">
          <source>For instance, to use the China mirror:</source>
          <target state="translated">예를 들어 차이나 미러를 사용하려면</target>
        </trans-unit>
        <trans-unit id="253f8917506432b3ee4474e59a0b7110f22e5749" translate="yes" xml:space="preserve">
          <source>For instance, we could have created the same request to 'github.com' as follows:</source>
          <target state="translated">예를 들어 다음과 같이 'github.com'에 동일한 요청을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1c45df08669248a19de97849fd5f55d5638340a" translate="yes" xml:space="preserve">
          <source>For instructions on how to acquire a Google API key, visit &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">Google API 키를 얻는 방법에 대한 지침을 보려면 &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;이 페이지를&lt;/a&gt; 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="243e0173737239b628ca89b755eb49cb3a3707d3" translate="yes" xml:space="preserve">
          <source>For keyboard events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">키보드 이벤트의 &lt;code&gt;event&lt;/code&gt; 객체에는 다음과 같은 속성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d013779a88817719fd09fd1a28d823c7cb62d408" translate="yes" xml:space="preserve">
          <source>For macOS, the progress bar will also be indicated for your application when using &lt;a href=&quot;https://support.apple.com/en-us/HT204100&quot;&gt;Mission Control&lt;/a&gt;:</source>
          <target state="translated">macOS의 경우 &lt;a href=&quot;https://support.apple.com/en-us/HT204100&quot;&gt;Mission Control을&lt;/a&gt; 사용할 때 애플리케이션에 대한 진행률 표시 줄도 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3fc23298d85bc89aaf5e8a548d3f5379c0642de" translate="yes" xml:space="preserve">
          <source>For modules that are not classes, their methods and events must be listed under the &lt;code&gt;## Methods&lt;/code&gt; and &lt;code&gt;## Events&lt;/code&gt; chapters.</source>
          <target state="translated">클래스가 아닌 모듈의 경우 해당 메서드와 이벤트는 &lt;code&gt;## Methods&lt;/code&gt; 및 &lt;code&gt;## Events&lt;/code&gt; 장 아래에 나열되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="97f78d47d10950220c612b6122939434b1918061" translate="yes" xml:space="preserve">
          <source>For modules, the &lt;code&gt;objectName&lt;/code&gt; is the module's name. For classes, it must be the name of the instance of the class, and must not be the same as the module's name.</source>
          <target state="translated">모듈의 경우 &lt;code&gt;objectName&lt;/code&gt; 은 모듈의 이름입니다. 클래스의 경우 클래스 인스턴스의 이름이어야하며 모듈의 이름과 동일하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c21531e0b7a208c2ac961ef8759257c43f46a280" translate="yes" xml:space="preserve">
          <source>For more detailed information see &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;#18397&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;# 18397을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a7f01cebc66bde3e43e0b7a5f6ee0627c0752df" translate="yes" xml:space="preserve">
          <source>For more detailed information, see &lt;a href=&quot;https://github.com/electron/electron/pull/23578&quot;&gt;#23578&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/pull/23578&quot;&gt;# 23578을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41d825d9a729036d3726dec181c4a0ca26f90914" translate="yes" xml:space="preserve">
          <source>For more details see: &lt;a href=&quot;https://github.com/electron/electron/issues/23506&quot;&gt;https://github.com/electron/electron/issues/23506&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/issues/23506&quot;&gt;https://github.com/electron/electron/issues/23506을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="12ce8d2e3bf4689b50d95cab569ba2b0adf45656" translate="yes" xml:space="preserve">
          <source>For more info, see the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guide&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store 제출 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72310bb077b7a4aabe4c2bd84e6c77d6e4541848" translate="yes" xml:space="preserve">
          <source>For more information on the available configuration options, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;documentation on the snapcraft syntax&lt;/a&gt;. Let's look at an example:</source>
          <target state="translated">사용 가능한 구성 옵션에 대한 자세한 내용 &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;은 snapcraft 구문에 대한 설명서를&lt;/a&gt; 참조하십시오 . 예를 보자.</target>
        </trans-unit>
        <trans-unit id="1156b44768e791541399e9626467d2fa45aff864" translate="yes" xml:space="preserve">
          <source>For more information on usage and integration with other tools, consult the project's README.</source>
          <target state="translated">사용 및 다른 도구와의 통합에 대한 자세한 내용은 프로젝트의 README를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="662bf66887805cc6f07ab4a9d9987ed6e8a73dad" translate="yes" xml:space="preserve">
          <source>For more information on using &lt;code&gt;MessagePort&lt;/code&gt; and &lt;code&gt;MessageChannel&lt;/code&gt;, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel&quot;&gt;MDN documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MessagePort&lt;/code&gt; 및 &lt;code&gt;MessageChannel&lt;/code&gt; 사용에 대한 자세한 내용 은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel&quot;&gt;MDN 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce256d31a23e00fc1e35c2b76c94dbc91d687a2b" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;contextIsolation&lt;/code&gt; is and how to enable it please see our dedicated &lt;a href=&quot;context-isolation&quot;&gt;Context Isolation&lt;/a&gt; document.</source>
          <target state="translated">&lt;code&gt;contextIsolation&lt;/code&gt; 이 무엇 이며이를 활성화하는 방법 에 대한 자세한 내용 은 전용 &lt;a href=&quot;context-isolation&quot;&gt;컨텍스트 격리&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="854ce0d4cf9c287a66b6b50afecbce3bab18c78c" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;contextIsolation&lt;/code&gt; is and how to enable it please see our dedicated &lt;a href=&quot;tutorial/context-isolation&quot;&gt;Context Isolation&lt;/a&gt; document.</source>
          <target state="translated">&lt;code&gt;contextIsolation&lt;/code&gt; 이 무엇 이며이를 활성화하는 방법 에 대한 자세한 내용 은 전용 &lt;a href=&quot;tutorial/context-isolation&quot;&gt;컨텍스트 격리&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b97ac2424ca35d3d40825b17c00e58c2ad2cf20" translate="yes" xml:space="preserve">
          <source>For more information on what kinds of flags and switches you can use, check out the &lt;a href=&quot;api/command-line-switches&quot;&gt;Command Line Switches&lt;/a&gt; document.</source>
          <target state="translated">사용할 수있는 플래그 및 스위치의 종류에 대한 자세한 내용은 &lt;a href=&quot;api/command-line-switches&quot;&gt;명령 줄 스위치&lt;/a&gt; 문서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d80b3171cdeb075c156fe30fb4ae0b15630792a5" translate="yes" xml:space="preserve">
          <source>For more information on what kinds of flags and switches you can use, check out the &lt;a href=&quot;command-line-switches&quot;&gt;Command Line Switches&lt;/a&gt; document.</source>
          <target state="translated">사용할 수있는 플래그 및 스위치의 종류에 대한 자세한 내용은 &lt;a href=&quot;command-line-switches&quot;&gt;명령 줄 스위치&lt;/a&gt; 문서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a49cdb56dde81924b746254a7f24e97ae73d88e0" translate="yes" xml:space="preserve">
          <source>For more information, please see the &lt;a href=&quot;tutorial/security&quot;&gt;security introduction&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;tutorial/security&quot;&gt;보안 소개&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2af1bafb37e1efc8e25030cb405ee2425e632d82" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 정보 &lt;a href=&quot;debugging-main-process&quot;&gt;는 기본 프로세스 디버깅 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78de7b99a69004cbf5fe0b14086d9a273d74413f" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;Debugging the Main Process 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41cd0116e7dd1d6789182cceddbd7400a085cc79" translate="yes" xml:space="preserve">
          <source>For mouse events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">마우스 이벤트의 &lt;code&gt;event&lt;/code&gt; 객체에는 다음과 같은 속성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="55c6af6d16985648f77a3161d644bf54c2338ed4" translate="yes" xml:space="preserve">
          <source>For other non-module APIs, use natural titles, like &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; or &lt;code&gt;Process Object&lt;/code&gt;.</source>
          <target state="translated">다른 비 모듈 API의 경우 &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; 또는 &lt;code&gt;Process Object&lt;/code&gt; 와 같은 자연 제목을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e8f284ed89eff022fe5d6e59ebdfca883cde645" translate="yes" xml:space="preserve">
          <source>For security and cost reasons, access to Electron's Goma cluster is currently restricted to Electron Maintainers. If you want access please head to &lt;code&gt;#access-requests&lt;/code&gt; in Slack and ping &lt;code&gt;@goma-squad&lt;/code&gt; to ask for access. Please be aware that being a maintainer does not &lt;em&gt;automatically&lt;/em&gt; grant access and access is determined on a case by case basis.</source>
          <target state="translated">보안 및 비용상의 이유로 Electron의 Goma 클러스터에 대한 액세스는 현재 Electron 유지 관리자로 제한됩니다. 액세스하려면 Slack의 &lt;code&gt;#access-requests&lt;/code&gt; 로 이동하고 &lt;code&gt;@goma-squad&lt;/code&gt; 에 핑 하여 액세스를 요청하세요. 관리자가된다고해서 &lt;em&gt;자동으로&lt;/em&gt; 액세스 권한이 부여 되지는 않으며 액세스 권한은 사례별로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="874be508e5c6c8bb81ba63b5d40f3aa79ddc3ebe" translate="yes" xml:space="preserve">
          <source>For setting up a server to accept and process crash reports, you can use following projects:</source>
          <target state="translated">충돌 보고서를 승인하고 처리하도록 서버를 설정하려면 다음 프로젝트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="893021d623407b15b31b3974ad7dd84b9b512520" translate="yes" xml:space="preserve">
          <source>For some cases like verifying the &lt;code&gt;asar&lt;/code&gt; archive's checksum, we need to read the content of an &lt;code&gt;asar&lt;/code&gt; archive as a file. For this purpose you can use the built-in &lt;code&gt;original-fs&lt;/code&gt; module which provides original &lt;code&gt;fs&lt;/code&gt; APIs without &lt;code&gt;asar&lt;/code&gt; support:</source>
          <target state="translated">검증과 같은 경우를 들어 &lt;code&gt;asar&lt;/code&gt; 아카이브의 체크섬을, 우리는의 내용을 읽을 필요가 &lt;code&gt;asar&lt;/code&gt; 파일로 보관합니다. 이 목적을 위해 당신은 내장에서 사용할 수있는 &lt;code&gt;original-fs&lt;/code&gt; 원래 제공 모듈 &lt;code&gt;fs&lt;/code&gt; 없이 API를 &lt;code&gt;asar&lt;/code&gt; 지원 :</target>
        </trans-unit>
        <trans-unit id="b835b6381166067c2c6c297fb53d050596f4659d" translate="yes" xml:space="preserve">
          <source>For some operations, such as streaming media using RTMP, it is necessary to grant wider permissions to players&amp;rsquo; &lt;code&gt;.swf&lt;/code&gt; files. One way of accomplishing this, is to use &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;.</source>
          <target state="translated">RTMP를 사용한 미디어 스트리밍과 같은 일부 작업의 경우 플레이어의 &lt;code&gt;.swf&lt;/code&gt; 파일에 더 넓은 권한을 부여해야 합니다. 이를 달성하는 한 가지 방법은 &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust를 사용하는 것&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4bca33f19785ae50790d03e5e8b8f9fa3f8e8940" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;mouseWheel&lt;/code&gt; event, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">를 들어 &lt;code&gt;mouseWheel&lt;/code&gt; 이벤트는 &lt;code&gt;event&lt;/code&gt; 객체는 다음과 같은 특성을 가지고 :</target>
        </trans-unit>
        <trans-unit id="6b89f521faed3627ceafb1ee77d1aa33c1a76a31" translate="yes" xml:space="preserve">
          <source>For the Renderer process, Electron conveniently allows developers to send notifications with the &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 Notification API&lt;/a&gt;, using the currently running operating system's native notification APIs to display it.</source>
          <target state="translated">Renderer 프로세스의 경우 Electron 은 현재 실행중인 운영 체제의 기본 알림 API를 사용하여 개발자가 &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 알림 API&lt;/a&gt; 로 알림을 편리하게 보낼 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="7fb6776dd36c28d9729c375ab3890832423d6bae" translate="yes" xml:space="preserve">
          <source>For the release configuration:</source>
          <target state="translated">릴리스 구성의 경우 :</target>
        </trans-unit>
        <trans-unit id="e83235f1c87cd602a012533efaf359d9a476b742" translate="yes" xml:space="preserve">
          <source>For the testing configuration:</source>
          <target state="translated">테스트 구성의 경우 :</target>
        </trans-unit>
        <trans-unit id="9a0e094c08e431ed56d092afefc892be387c6c60" translate="yes" xml:space="preserve">
          <source>For those unsure where to acquire this code or how to build it, &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron's Build Tools&lt;/a&gt; automates and explains most of this process. If you wish to manually set up the environment, you can instead use these &lt;a href=&quot;../development/build-instructions-gn&quot;&gt;build instructions&lt;/a&gt;.</source>
          <target state="translated">이 코드를 어디서 획득해야하는지, 어떻게 빌드해야하는지 잘 모르는 사람들을 위해 &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron의 빌드 도구&lt;/a&gt; 는이 프로세스의 대부분을 자동화하고 설명합니다. 환경을 수동으로 설정하려는 경우 대신이 &lt;a href=&quot;../development/build-instructions-gn&quot;&gt;빌드 지침을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fee4a5b3b989d078c41beb68e97f9c4c52aededd" translate="yes" xml:space="preserve">
          <source>For those unsure where to acquire this code or how to build it, &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron's Build Tools&lt;/a&gt; automates and explains most of this process. If you wish to manually set up the environment, you can instead use these &lt;a href=&quot;development/build-instructions-gn&quot;&gt;build instructions&lt;/a&gt;.</source>
          <target state="translated">이 코드를 어디서 획득해야하는지, 어떻게 빌드해야하는지 잘 모르는 사람들을 위해 &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron의 빌드 도구&lt;/a&gt; 는이 프로세스의 대부분을 자동화하고 설명합니다. 환경을 수동으로 설정하려는 경우 대신이 &lt;a href=&quot;development/build-instructions-gn&quot;&gt;빌드 지침을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42cf0bcb717e6e1c5bc2bab69a7555abd5c7050c" translate="yes" xml:space="preserve">
          <source>Force closing the view, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; events won't be emitted for the web page. After you're done with a view, call this function in order to free memory and other resources as soon as possible.</source>
          <target state="translated">보기를 닫는 힘은 &lt;code&gt;unload&lt;/code&gt; 및 &lt;code&gt;beforeunload&lt;/code&gt; 이벤트는 웹 페이지에 대한 방출되지 않습니다. 보기를 완료 한 후 가능한 빨리 메모리 및 기타 자원을 확보하려면이 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="41c34d9172157555e51609e1dd9cdae11457b4a8" translate="yes" xml:space="preserve">
          <source>Force closing the window, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; event won't be emitted for the web page, and &lt;code&gt;close&lt;/code&gt; event will also not be emitted for this window, but it guarantees the &lt;code&gt;closed&lt;/code&gt; event will be emitted.</source>
          <target state="translated">창을 강제로 닫으면 웹 페이지에 대해 &lt;code&gt;unload&lt;/code&gt; 및 &lt;code&gt;beforeunload&lt;/code&gt; 이벤트가 생성되지 않으며이 창에 대해서도 &lt;code&gt;close&lt;/code&gt; 이벤트가 생성되지 않지만 &lt;code&gt;closed&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5a606dcde8ee92bc944b2d682a973d2fa5471fb8" translate="yes" xml:space="preserve">
          <source>Force using discrete GPU when there are multiple GPUs available.</source>
          <target state="translated">여러 GPU를 사용할 수있는 경우 개별 GPU를 강제로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="23ae0ea8dd8e7096384ac7c6d644c6bfbff518dc" translate="yes" xml:space="preserve">
          <source>Force using integrated GPU when there are multiple GPUs available.</source>
          <target state="translated">여러 GPU를 사용할 수있는 경우 통합 GPU를 강제로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8a6a94c0656419d75d09c1f47735e377b3dc71eb" translate="yes" xml:space="preserve">
          <source>Forcefully closes the child window without calling its unload event.</source>
          <target state="translated">unload 이벤트를 호출하지 않고 자식 창을 강제로 닫습니다.</target>
        </trans-unit>
        <trans-unit id="b171aa0f99529c72056aab7a831c7f98c02499aa" translate="yes" xml:space="preserve">
          <source>Forcefully terminates the renderer process that is currently hosting this &lt;code&gt;webContents&lt;/code&gt;. This will cause the &lt;code&gt;render-process-gone&lt;/code&gt; event to be emitted with the &lt;code&gt;reason=killed || reason=crashed&lt;/code&gt;. Please note that some webContents share renderer processes and therefore calling this method may also crash the host process for other webContents as well.</source>
          <target state="translated">&lt;code&gt;webContents&lt;/code&gt; 호스팅하고있는 렌더러 프로세스를 강제 종료합니다 . 이것은 &lt;code&gt;render-process-gone&lt;/code&gt; 이벤트가 &lt;code&gt;reason=killed || reason=crashed&lt;/code&gt; . 일부 webContents는 렌더러 프로세스를 공유하므로이 메서드를 호출하면 다른 webContents에 대한 호스트 프로세스도 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11ec4772862b480bc0d4330e63394f4c0dd82ef7" translate="yes" xml:space="preserve">
          <source>Forces the maximum disk space to be used by the disk cache, in bytes.</source>
          <target state="translated">디스크 캐시가 사용하는 최대 디스크 공간을 바이트 단위로 강제합니다.</target>
        </trans-unit>
        <trans-unit id="e3dbab8791e9c1d7fca1b6bb2e6c3d88b5142281" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;a ready-to-use template&lt;/a&gt; using Webpack as a bundler. It includes an example typescript configuration and provides two configuration files to enable easy customization. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forge는 Webpack &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;을 번&lt;/a&gt; 들러로 사용하는 즉시 사용 가능한 템플릿 과 함께 제공됩니다 . 여기에는 예제 typescript 구성이 포함되어 있으며 쉽게 사용자 정의 할 수 있도록 두 개의 구성 파일을 제공합니다. Electron 커뮤니티에서 사용하는 것과 동일한 핵심 모듈 ( &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; 등&lt;/a&gt; )을 사용합니다. Electron 관리자 (예 : Slack)가 변경 한 사항은 Forge 사용자에게도 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="ffda46761bf18cf0dd922e7a16c1a3454103fb87" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;ready-to-use templates&lt;/a&gt; for popular frameworks like React, Vue, or Angular. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forge에는 React, Vue 또는 Angular와 같은 널리 &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;사용&lt;/a&gt; 되는 프레임 워크를위한 즉시 사용 가능한 템플릿 이 제공됩니다 . &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; 와 같은 더 큰 Electron 커뮤니티에서 사용하는 것과 동일한 코어 모듈을 사용합니다. Slack과 같은 Electron 관리자가 변경 한 사항은 Forge 사용자에게도 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="a640134df49a1d7ac759c390662f71687021a130" translate="yes" xml:space="preserve">
          <source>Fork the project &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;on GitHub&lt;/a&gt; and clone your fork locally.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron&quot;&gt;GitHub&lt;/a&gt; 에서 프로젝트 를 포크하고 로컬로 포크를 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="translated">Forwarding</target>
        </trans-unit>
        <trans-unit id="048394d7b70f10b345e72c4c9fdb7401b26faee6" translate="yes" xml:space="preserve">
          <source>Frameless Window</source>
          <target state="translated">프레임리스 창</target>
        </trans-unit>
        <trans-unit id="17a56f23cb49369abb90876a7fc79db233cbec85" translate="yes" xml:space="preserve">
          <source>Frameless window</source>
          <target state="translated">프레임리스 창</target>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="33f0ca3b78634f70f34727200cfe101d4f639b17" translate="yes" xml:space="preserve">
          <source>French (Canada)</source>
          <target state="translated">프랑스어 (캐나다)</target>
        </trans-unit>
        <trans-unit id="950e3b8444abd67e768a641c20181ffe0042529b" translate="yes" xml:space="preserve">
          <source>French (France)</source>
          <target state="translated">프랑스어 (프랑스)</target>
        </trans-unit>
        <trans-unit id="d4e7895fbc7b89b31127508cafb2663fdb083fa2" translate="yes" xml:space="preserve">
          <source>French (Switzerland)</source>
          <target state="translated">프랑스어 (스위스)</target>
        </trans-unit>
        <trans-unit id="6f09db2793c736909bd6c37b71f7a0bc8a0f19ae" translate="yes" xml:space="preserve">
          <source>Frisian</source>
          <target state="translated">Frisian</target>
        </trans-unit>
        <trans-unit id="0ff10501f7e66c9f19bf9c4babdd10ca579ce254" translate="yes" xml:space="preserve">
          <source>From 2.0 onward, Electron will follow semver.</source>
          <target state="translated">2.0 이후부터 Electron은 semver를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="c3a8674a8d599ddfc6957634e4c486efbfebd3ff" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver - WebDriver for Chrome&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver&lt;/a&gt; 에서 -Chrome 용 WebDriver :</target>
        </trans-unit>
        <trans-unit id="10fb85a843ef18824df96f590580867cf985b2c6" translate="yes" xml:space="preserve">
          <source>From Electron 12, it will be enabled by default. For lower versions it is an option in the &lt;code&gt;webPreferences&lt;/code&gt; option when constructing &lt;code&gt;new BrowserWindow&lt;/code&gt;'s.</source>
          <target state="translated">Electron 12부터는 기본적으로 활성화됩니다. 낮은 버전의 경우 &lt;code&gt;new BrowserWindow&lt;/code&gt; 구성 할 때 &lt;code&gt;webPreferences&lt;/code&gt; 옵션의 옵션 입니다.</target>
        </trans-unit>
        <trans-unit id="2913aab19780bda8d7bb89f9e9bccc9c50a55e58" translate="yes" xml:space="preserve">
          <source>From Electron 2.0 on, developers will see warnings and recommendations printed to the developer console. They only show up when the binary's name is Electron, indicating that a developer is currently looking at the console.</source>
          <target state="translated">Electron 2.0부터 개발자는 개발자 콘솔에 경고 및 권장 사항이 인쇄됩니다. 바이너리 이름이 Electron 인 경우에만 표시되며 개발자가 현재 콘솔을보고 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4a3e35689697ec190cd2fb0c4be0d315bd4c2251" translate="yes" xml:space="preserve">
          <source>From Electron root's root, run &lt;code&gt;script/update.py&lt;/code&gt;</source>
          <target state="translated">Electron 루트의 루트에서 &lt;code&gt;script/update.py&lt;/code&gt; 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4c958b0e9d4b9e2e2a54c9e8c8cd51e301fc6448" translate="yes" xml:space="preserve">
          <source>From MSDN, it's illustrated:</source>
          <target state="translated">MSDN에서는 다음과 같이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="293e001db2bc6c3edac85f89a102d08d11b1b8f6" translate="yes" xml:space="preserve">
          <source>From PowerShell, execute &lt;code&gt;ps1&lt;/code&gt; file with &lt;code&gt;./create_master_vm_from_vhd.ps1&lt;/code&gt;</source>
          <target state="translated">PowerShell에서 &lt;code&gt;./create_master_vm_from_vhd.ps1&lt;/code&gt; 을 사용 하여 &lt;code&gt;ps1&lt;/code&gt; 파일을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="a8c830c74e35a88a338f5bb276b585128de8b31c" translate="yes" xml:space="preserve">
          <source>From a development perspective, an Electron application is essentially a Node.js application. This means that the starting point of your Electron application will be a &lt;code&gt;package.json&lt;/code&gt; file like in any other Node.js application. A minimal Electron application has the following structure:</source>
          <target state="translated">개발 관점에서 Electron 애플리케이션은 본질적으로 Node.js 애플리케이션입니다. 이는 Electron 애플리케이션의 시작점이 다른 Node.js 애플리케이션과 마찬가지로 &lt;code&gt;package.json&lt;/code&gt; 파일 이라는 것을 의미합니다 . 최소 Electron 애플리케이션은 다음과 같은 구조를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a4394da6bd07f1ee0042ce07dda3d202ffb90075" translate="yes" xml:space="preserve">
          <source>From a terminal that has &lt;code&gt;snapcraft&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;, run &lt;code&gt;electron-installer-snap&lt;/code&gt; with the only required parameter &lt;code&gt;--src&lt;/code&gt;, which is the location of your packaged Electron application created in the first step.</source>
          <target state="translated">이 터미널에서 &lt;code&gt;snapcraft&lt;/code&gt; 을 자사에서 &lt;code&gt;PATH&lt;/code&gt; 실행 &lt;code&gt;electron-installer-snap&lt;/code&gt; 유일한 필수 매개 변수로 &lt;code&gt;--src&lt;/code&gt; 첫 번째 단계에서 만든 패키지 전자 응용 프로그램의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e5b99d0a24b6837e0fdb16a7b9dadc5b38ac1363" translate="yes" xml:space="preserve">
          <source>From an elevated PowerShell (run it &quot;as Administrator&quot;), run &lt;code&gt;electron-windows-store&lt;/code&gt; with the required parameters, passing both the input and output directories, the app's name and version, and confirmation that &lt;code&gt;node_modules&lt;/code&gt; should be flattened.</source>
          <target state="translated">승격 된 PowerShell ( &quot;관리자&quot;로 실행) 에서 필수 매개 변수를 사용하여 &lt;code&gt;electron-windows-store&lt;/code&gt; 를 실행 하고 입력 및 출력 디렉토리, 앱 이름 및 버전을 &lt;code&gt;node_modules&lt;/code&gt; 하고 node_modules의 병합 여부를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="734f49b3b8a88010f69b244bff01621f449f9ac4" translate="yes" xml:space="preserve">
          <source>From within GitHub, opening a new pull request will present you with a template that should be filled out:</source>
          <target state="translated">GitHub에서 새 풀 요청을 열면 템플릿을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="3c5d7a65a8198b0252fff09bfd52a41eca42cbfa" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the Node.js &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">Electron 앱 내에서 Node.js &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;프로세스&lt;/a&gt; API를 사용하여 메시지를 수신하고 응답을 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2131cc39138eced8836ed354bc7b8c3289d46bc7" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">Electron 앱 내에서 nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;프로세스&lt;/a&gt; API를 사용하여 메시지를 듣고 답장을 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">추가 자료</target>
        </trans-unit>
        <trans-unit id="5bdf7278fcea3b5007a7f31401ae7da8c28c2e82" translate="yes" xml:space="preserve">
          <source>Furthermore, in Windows 8, the maximum length for the notification body is 250 characters, with the Windows team recommending that notifications should be kept to 200 characters. That said, that limitation has been removed in Windows 10, with the Windows team asking developers to be reasonable. Attempting to send gigantic amounts of text to the API (thousands of characters) might result in instability.</source>
          <target state="translated">또한 Windows 8의 경우 알림 본문의 최대 길이는 250 자이며 Windows 팀은 알림을 200 자로 유지하도록 권장합니다. 즉, Windows 팀에서는 개발자에게 합리적인 수준을 요구하면서 Windows 10에서 이러한 제한이 제거되었습니다. 엄청난 양의 텍스트를 API (수천 개의 문자)에 보내려고하면 불안정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c248b36041d438fc46a4d75feaf8db587e389a3" translate="yes" xml:space="preserve">
          <source>Fuses are the solution to this problem, at a high level they are &quot;magic bits&quot; in the Electron binary that can be flipped when packaging your Electron app to enable / disable certain features / restrictions. Because they are flipped at package time before you code sign your app the OS becomes responsible for ensuring those bits aren't flipped back via OS level code signing validation (Gatekeeper / App Locker).</source>
          <target state="translated">퓨즈는이 문제에 대한 해결책이며, 높은 수준에서 Electron 앱을 패키징하여 특정 기능 / 제한을 활성화 / 비활성화 할 때 뒤집을 수있는 Electron 바이너리의 &quot;마법의 비트&quot;입니다. 앱에 코드 서명을하기 전에 패키지 타임에 뒤집기 때문에 OS는 OS 수준 코드 서명 유효성 검사 (Gatekeeper / App Locker)를 통해 해당 비트가 뒤집 히지 않도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="6a9e32ab99cab709bd6ba82b9aa8fbf0350b16d2" translate="yes" xml:space="preserve">
          <source>GN Files</source>
          <target state="translated">GN 파일</target>
        </trans-unit>
        <trans-unit id="5d979da1e00ef42608b0265200caf848fb7c79fc" translate="yes" xml:space="preserve">
          <source>GN prerequisites</source>
          <target state="translated">GN 전제 조건</target>
        </trans-unit>
        <trans-unit id="1db4aba2bc9d400d5e75f5473ff811cd819a436d" translate="yes" xml:space="preserve">
          <source>GOOGLE_API_KEY</source>
          <target state="translated">GOOGLE_API_KEY</target>
        </trans-unit>
        <trans-unit id="3ee288cccc04fc78b1de48dba8362ca4f281d5e7" translate="yes" xml:space="preserve">
          <source>GPU accelerated</source>
          <target state="translated">GPU 가속</target>
        </trans-unit>
        <trans-unit id="4a539dd2d84c22ed68a37ed7e9d7601dc94bdf7f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode is that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPU 가속 렌더링은 GPU가 합성에 사용됨을 의미합니다. 그 때문에 더 많은 성능이 필요한 GPU에서 프레임을 복사해야하기 때문에이 모드는 다른 모드보다 상당히 느립니다. 이 모드의 장점은 WebGL 및 3D CSS 애니메이션이 지원된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="63e7c142f025c95ec8531acfd0d122a163cb6b1f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPU 가속 렌더링은 GPU가 컴포지션에 사용됨을 의미합니다. 이 때문에 더 많은 성능이 필요한 GPU에서 프레임을 복사해야하므로이 모드는 다른 모드보다 약간 느립니다. WebGL 및 3D CSS 애니메이션이 지원되는이 모드의 이점.</target>
        </trans-unit>
        <trans-unit id="27e0642d3d0283fa0d1d5b490eeb105437323129" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus</source>
          <target state="translated">GPUFeatureStatus</target>
        </trans-unit>
        <trans-unit id="1fae790cf35d61c88e97f17c988718c8de99c880" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus Object</source>
          <target state="translated">GPUFeatureStatus 객체</target>
        </trans-unit>
        <trans-unit id="ccece2966ff8b4cb279897a70ef4ca32da17c0cd" translate="yes" xml:space="preserve">
          <source>Galician</source>
          <target state="translated">Galician</target>
        </trans-unit>
        <trans-unit id="63f15e2cad489c7f65563ae7617fe47ac16f9b26" translate="yes" xml:space="preserve">
          <source>General Code</source>
          <target state="translated">일반 코드</target>
        </trans-unit>
        <trans-unit id="c6fd7bce8f72bd46f1133e18bc9aeb61522b29be" translate="yes" xml:space="preserve">
          <source>General considerations</source>
          <target state="translated">일반적인 고려 사항</target>
        </trans-unit>
        <trans-unit id="3c5d21815e853ee353943f1b16ccdedddafbb86a" translate="yes" xml:space="preserve">
          <source>Generally speaking, Electron supports Ubuntu 12.04, Fedora 21, Debian 8 and later.</source>
          <target state="translated">일반적으로 Electron은 Ubuntu 12.04, Fedora 21, Debian 8 이상을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a0586638574b9f7ba5670b689a6ecc29e679e895" translate="yes" xml:space="preserve">
          <source>Generally speaking, all advice for building performant web apps for modern browsers apply to Electron's renderers, too. The two primary tools at your disposal are currently &lt;code&gt;requestIdleCallback()&lt;/code&gt; for small operations and &lt;code&gt;Web Workers&lt;/code&gt; for long-running operations.</source>
          <target state="translated">일반적으로 현대 브라우저 용 고성능 웹 앱을 구축하기위한 모든 조언은 Electron의 렌더러에도 적용됩니다. 현재 사용 가능한 두 가지 기본 도구는 소규모 작업을위한 &lt;code&gt;requestIdleCallback()&lt;/code&gt; 과 장기 실행 작업을위한 &lt;code&gt;Web Workers&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90b6f5d52bf8b14dce89eab99bf56fc36ee3ce58" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is easier to completely disable &lt;code&gt;eval()&lt;/code&gt; than to make it bulletproof. Thus, if you do not need it, it is a good idea to disable it.</source>
          <target state="translated">일반적으로 말해서 &lt;code&gt;eval()&lt;/code&gt; 을 완전히 비활성화 하는 것이 방탄을 만드는 것보다 쉽습니다 . 따라서 필요하지 않은 경우 비활성화하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="13f9f22123ed9e158e8f29705aa35590736ffaba" translate="yes" xml:space="preserve">
          <source>Generally speaking, setting the parameter to a value below zero (like &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar while setting it to a value higher than one (like &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to intermediate mode.</source>
          <target state="translated">일반적으로, 매개 변수를 0 이하의 값 (예 : &lt;code&gt;-1&lt;/code&gt; )으로 설정하면 진행률 표시 줄이 제거되고 &lt;code&gt;2&lt;/code&gt; 보다 큰 값으로 설정 하면 진행률 표시 줄이 중간 모드로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a1b685e55f4b94987ef88208f8882ad9106ba1c" translate="yes" xml:space="preserve">
          <source>Generally speaking, shortcuts are added by providing a &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; property for each entry in the shortcuts menu. Unity will execute the &lt;code&gt;Exec&lt;/code&gt; field once clicked by the user. The format is as follows:</source>
          <target state="translated">일반적으로, 바로 가기 메뉴의 각 항목에 대한 &lt;code&gt;Name&lt;/code&gt; 및 &lt;code&gt;Exec&lt;/code&gt; 속성을 제공하여 바로 가기가 추가됩니다 . Unity는 사용자가 클릭하면 &lt;code&gt;Exec&lt;/code&gt; 필드 를 실행합니다 . 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1538647f42f7d3d79050cbefe208f89d3f10ca55" translate="yes" xml:space="preserve">
          <source>Generally speaking, there are likely good reasons if a feature was not enabled by default. Legitimate use cases for enabling specific features exist. As a developer, you should know exactly why you need to enable a feature, what the ramifications are, and how it impacts the security of your application. Under no circumstances should you enable features speculatively.</source>
          <target state="translated">일반적으로 기능이 기본적으로 활성화되어 있지 않은 경우에는 적절한 이유가 있습니다. 특정 기능을 활성화하기위한 합법적 인 사용 사례가 존재합니다. 개발자는 기능을 사용해야하는 이유, 결과, 응용 프로그램의 보안에 어떤 영향을 미치는지 정확하게 알고 있어야합니다. 어떤 상황에서도 기능을 추론 적으로 활성화해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2729a90cd6cab76c61d94de18b8caf7262113dcf" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">일반적으로 &lt;code&gt;template&lt;/code&gt; 은 &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt; 을 구성하기위한 &lt;code&gt;options&lt;/code&gt; 배열입니다 . 사용법은 위에서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df13bde07a0723acaab7f213d04b6cfcb3082ad5" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">일반적으로 &lt;code&gt;template&lt;/code&gt; 은 &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt; 을 구성하기위한 &lt;code&gt;options&lt;/code&gt; 배열입니다 . 사용법은 위에서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3169e818304c83f7b1d25d45a63a2afbec618473" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is just an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">일반적으로 &lt;code&gt;template&lt;/code&gt; 은 &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt; 구성 &lt;code&gt;options&lt;/code&gt; 의 배열 일뿐 입니다. 사용법은 위에서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e016c4e6c4388b4fdc614cd782c50dda7199bee" translate="yes" xml:space="preserve">
          <source>Generate xcode project for debugging sources (cannot build code from xcode)</source>
          <target state="translated">소스 디버깅을위한 xcode 프로젝트 생성 (xcode에서 코드를 빌드 할 수 없음)</target>
        </trans-unit>
        <trans-unit id="0afb4a7756056519dfbd37bafb195e85a8b71d1c" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;서명 인증서&lt;/a&gt; 생성, 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="844e1ad2301336675d91d14f5d54415f71da466b" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;서명 인증서&lt;/a&gt; 생성, 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="a3d952d915882776a804ebcb451b68280f150a03" translate="yes" xml:space="preserve">
          <source>Generating &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브 생성</target>
        </trans-unit>
        <trans-unit id="7585e74bae56fdc23c3110b7a00c699530461cc8" translate="yes" xml:space="preserve">
          <source>Generating a CPU profile and a heap memory profile for loading a module can be done with a single command on the command line. In the example below, we're looking at the popular module &lt;code&gt;request&lt;/code&gt;.</source>
          <target state="translated">모듈로드를위한 CPU 프로필 및 힙 메모리 프로필 생성은 명령 줄에서 단일 명령으로 수행 할 수 있습니다. 아래 예에서는 인기있는 모듈 &lt;code&gt;request&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e4e031d86d0110b37d71551b28614ffdcf68aee" translate="yes" xml:space="preserve">
          <source>Generating asar Archives</source>
          <target state="translated">asar 아카이브 생성</target>
        </trans-unit>
        <trans-unit id="308d823eb2f5ba3ab75d3a7c08e661aeae1e790e" translate="yes" xml:space="preserve">
          <source>Geolocation support in Electron requires the use of Google Cloud Platform's geolocation webservice. To enable this feature, acquire a &lt;a href=&quot;https://developers.google.com/maps/documentation/geolocation/get-api-key&quot;&gt;Google API key&lt;/a&gt; and place the following code in your main process file, before opening any browser windows that will make geolocation requests:</source>
          <target state="translated">Electron의 지리적 위치 지원을 위해서는 Google Cloud Platform의 지리적 위치 웹 서비스를 사용해야합니다. 이 기능을 활성화하려면 &lt;a href=&quot;https://developers.google.com/maps/documentation/geolocation/get-api-key&quot;&gt;Google API 키를&lt;/a&gt; 획득하고 지리적 위치 요청을 수행 할 브라우저 창을 열기 전에 다음 코드를 기본 프로세스 파일에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="078c5c2d83171c5c9230eb9470f612f005a42c2d" translate="yes" xml:space="preserve">
          <source>German (Austria)</source>
          <target state="translated">독일어 (오스트리아)</target>
        </trans-unit>
        <trans-unit id="9c71d86768bbc4160407ef4ed71ede2d112003c0" translate="yes" xml:space="preserve">
          <source>German (Germany)</source>
          <target state="translated">독일어 (독일)</target>
        </trans-unit>
        <trans-unit id="09e6c204b1cd8e89c8f7fe995a77b7e2feb3c179" translate="yes" xml:space="preserve">
          <source>German (Switzerland)</source>
          <target state="translated">독일어 (스위스)</target>
        </trans-unit>
        <trans-unit id="9a96c736087dc403a036da96c29f464627719640" translate="yes" xml:space="preserve">
          <source>Get Certificate</source>
          <target state="translated">인증서 받기</target>
        </trans-unit>
        <trans-unit id="56403cae91f81004fd95e821f0aef26fe73c0765" translate="yes" xml:space="preserve">
          <source>Get Started With Analyzing Runtime Performance</source>
          <target state="translated">런타임 성능 분석 시작</target>
        </trans-unit>
        <trans-unit id="97902b12593780ddf28d3457dbb261e2b807323d" translate="yes" xml:space="preserve">
          <source>Get Team ID</source>
          <target state="translated">팀 ID 받기</target>
        </trans-unit>
        <trans-unit id="1d751cd6f2223c387565d489fdaf84c5a57d5ce2" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate</source>
          <target state="translated">Windows Authenticode 코드 서명 인증서 받기</target>
        </trans-unit>
        <trans-unit id="b7a7fa4d410be0b8db57dbbf12974ffa93e61b0b" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate (requires an annual fee)</source>
          <target state="translated">Windows Authenticode 코드 서명 인증서 받기 (연간 요금 필요)</target>
        </trans-unit>
        <trans-unit id="b9b7985f4cabac6df8ab0ce7316af20136bc9a96" translate="yes" xml:space="preserve">
          <source>Get a copy of Electron's libcc fork</source>
          <target state="translated">Electron의 libcc 포크 사본을 구하십시오</target>
        </trans-unit>
        <trans-unit id="3dfdaa9a34c13df1a4918f14dbd278dbcb6ad6d1" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached.</source>
          <target state="translated">카테고리 그룹 세트를 가져옵니다. 새 코드 경로에 도달하면 카테고리 그룹이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f4bf81de63a424d3021097f2e716b1a8865357f" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached. See also the &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/base/trace_event/builtin_categories.h&quot;&gt;list of built-in tracing categories&lt;/a&gt;.</source>
          <target state="translated">카테고리 그룹 세트를 가져옵니다. 새 코드 경로에 도달하면 카테고리 그룹이 변경 될 수 있습니다. &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/base/trace_event/builtin_categories.h&quot;&gt;기본 제공 추적 범주 목록&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b31590d49ba6cc9bd37661826a0e210780ebf287" translate="yes" xml:space="preserve">
          <source>Get and set properties of a session.</source>
          <target state="translated">세션의 속성을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4651f3efda204499e94165cf4e7980b1e52540ef" translate="yes" xml:space="preserve">
          <source>Get system preferences.</source>
          <target state="translated">시스템 환경 설정을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0843d0855d06f634a18af84e43b73a0cdbbb035d" translate="yes" xml:space="preserve">
          <source>Get the Azure storage account key</source>
          <target state="translated">Azure Storage 계정 키 가져 오기</target>
        </trans-unit>
        <trans-unit id="f8a9296dea080088611ff14ad0eae0f5c7d1c3c8" translate="yes" xml:space="preserve">
          <source>Get the code and initialize the project:</source>
          <target state="translated">코드를 가져 와서 프로젝트를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="42e39f6d0cb0eadebb6a9541f6e152c7e729a7f1" translate="yes" xml:space="preserve">
          <source>Get the code:</source>
          <target state="translated">코드를 얻으십시오 :</target>
        </trans-unit>
        <trans-unit id="6e09fde08da990083e9a1d35f798afb7b2e02572" translate="yes" xml:space="preserve">
          <source>Get the current monitoring traced data.</source>
          <target state="translated">현재 모니터링 추적 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ab030a93caed07ab74219faedeff57c5ef6b6ba1" translate="yes" xml:space="preserve">
          <source>Get the full virtual machine image URI from Azure</source>
          <target state="translated">Azure에서 전체 가상 머신 이미지 URI 가져 오기</target>
        </trans-unit>
        <trans-unit id="708a06cd5805e6920aca6e92df00bcc5ff1e8017" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state.</source>
          <target state="translated">전체 상태의 백분율로 추적 버퍼의 프로세스 전체에서 최대 사용량을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="af84e9850a364806c20ee98a9f19df0ba5a1b68f" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state. When the TraceBufferUsage value is determined the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">전체 상태의 백분율로 추적 버퍼 프로세스 전체에서 최대 사용량을 가져옵니다. TraceBufferUsage 값이 결정되면 &lt;code&gt;callback&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f0e6b1c9b8b0f68211223759203e1903246b8a61" translate="yes" xml:space="preserve">
          <source>Get the system printer list.</source>
          <target state="translated">시스템 프린터 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7c8c41f61ee8c8b61ef31de98aef8618369ead6d" translate="yes" xml:space="preserve">
          <source>Get the version of crashpad that we're going to use.</source>
          <target state="translated">우리가 사용할 크래시 패드의 버전을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="fe46d111db1537c8fb76f549a57af34807d5dc12" translate="yes" xml:space="preserve">
          <source>Gets the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</source>
          <target state="translated">현재 애플리케이션에 적용된 macOS 모양 설정을 가져 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;오고 NSApplication.effectiveAppearance에&lt;/a&gt; 매핑합니다.</target>
        </trans-unit>
        <trans-unit id="fb615fb195390346d9d0144db8bc845911c0ed59" translate="yes" xml:space="preserve">
          <source>Gets the macOS appearance setting that you have declared you want for your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;NSApplication.appearance&lt;/a&gt;. You can use the &lt;code&gt;setAppLevelAppearance&lt;/code&gt; API to set this value.</source>
          <target state="translated">애플리케이션에 대해 원하는 것으로 선언 한 macOS 모양 설정을 가져 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;오고 NSApplication.appearance에&lt;/a&gt; 매핑합니다 . &lt;code&gt;setAppLevelAppearance&lt;/code&gt; API를 사용하여이 값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efdcb676f7e4576e5bad658605652f36207e9edd" translate="yes" xml:space="preserve">
          <source>Getting Support</source>
          <target state="translated">지원 받기</target>
        </trans-unit>
        <trans-unit id="f49bca71c706c74f9f8e17cb3d8f3dfd4b2d9817" translate="yes" xml:space="preserve">
          <source>Getting additional help</source>
          <target state="translated">추가 도움 받기</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">도움을 받다</target>
        </trans-unit>
        <trans-unit id="774b49b5b98b5374e54d194a189001e6997ca6b2" translate="yes" xml:space="preserve">
          <source>Getting the Code</source>
          <target state="translated">코드 얻기</target>
        </trans-unit>
        <trans-unit id="325db80c1b58c07e66e7df993a652a63302c152d" translate="yes" xml:space="preserve">
          <source>Getting the code</source>
          <target state="translated">코드 얻기</target>
        </trans-unit>
        <trans-unit id="68de8000c7168871fa3b06a000cc52b36c447b72" translate="yes" xml:space="preserve">
          <source>Getting the library</source>
          <target state="translated">도서관 구하기</target>
        </trans-unit>
        <trans-unit id="1f5fe669e18521007ce5a8aa2cce9d3c3fa007a4" translate="yes" xml:space="preserve">
          <source>Getting the plugin</source>
          <target state="translated">플러그인 얻기</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="31a9c72c1cf9aa2b3749a61100d0110a62a633e0" translate="yes" xml:space="preserve">
          <source>GitHub's Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">GitHub의 Electron 팀 은 Electron 앱이 자체 업데이트에 사용할 수있는 무료 오픈 소스 웹 서비스 인 &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org를&lt;/a&gt; 유지 관리 합니다. 이 서비스는 다음 기준을 충족하는 Electron 앱을 위해 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="99e4e21466cd569957ff19180668d99a6399bbd0" translate="yes" xml:space="preserve">
          <source>Given that hardware manufacturers, Microsoft, Chromium, and Node.js haven't released even critical security updates for that system, we have to warn you that using Windows XP is wildly insecure and outright irresponsible.</source>
          <target state="translated">하드웨어 제조업체, Microsoft, Chromium 및 Node.js가 해당 시스템에 대한 중요한 보안 업데이트도 출시하지 않았기 때문에 Windows XP를 사용하는 것은 매우 안전하지 않으며 무책임하다는 점을 경고해야합니다.</target>
        </trans-unit>
        <trans-unit id="74fe7d567bf71c112291a363a3d9b39b53cc1350" translate="yes" xml:space="preserve">
          <source>Gives the default maximal active V-logging level; 0 is the default. Normally positive values are used for V-logging levels.</source>
          <target state="translated">기본 최대 활성 V 로깅 수준을 제공합니다. 0이 기본값입니다. 일반적으로 V 로깅 수준에는 양수 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="04622ff2db8ee08e5e23ba617b529878c0062cd3" translate="yes" xml:space="preserve">
          <source>Gives the per-module maximal V-logging levels to override the value given by &lt;code&gt;--v&lt;/code&gt;. E.g. &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; would change the logging level for all code in source files &lt;code&gt;my_module.*&lt;/code&gt; and &lt;code&gt;foo*.*&lt;/code&gt;.</source>
          <target state="translated">모듈 당 최대 V 로깅 수준을 지정하여 &lt;code&gt;--v&lt;/code&gt; 로 지정된 값을 재정의합니다 . 예를 들어 &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; 은 소스 파일 &lt;code&gt;my_module.*&lt;/code&gt; 및 &lt;code&gt;foo*.*&lt;/code&gt; 모든 코드에 대한 로깅 수준을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">글로벌 설치</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">글로벌 바로 가기</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="47ba3bd2a5c6aeb3e8cad3b83d7b5602dbe77429" translate="yes" xml:space="preserve">
          <source>Glossary of Terms</source>
          <target state="translated">용어집</target>
        </trans-unit>
        <trans-unit id="d692e9d7a0982826f6b9d2c6fb8fe74bb5d32c6d" translate="yes" xml:space="preserve">
          <source>Go into Azure and get the URI for the newly created image as described in a previous step</source>
          <target state="translated">Azure로 이동하여 이전 단계에서 설명한대로 새로 만든 이미지의 URI를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c476992f33540e23daa401c4e60e99186e563a56" translate="yes" xml:space="preserve">
          <source>GoDaddy</source>
          <target state="translated">GoDaddy</target>
        </trans-unit>
        <trans-unit id="00292eece64f295067fc39740fb3a0128f087df2" translate="yes" xml:space="preserve">
          <source>Goma</source>
          <target state="translated">Goma</target>
        </trans-unit>
        <trans-unit id="cef072c554ff5a0c22c00cafb210950bdf7d3505" translate="yes" xml:space="preserve">
          <source>Goma is a distributed compiler service for open-source projects such as Chromium and Android.</source>
          <target state="translated">Goma는 Chromium 및 Android와 같은 오픈 소스 프로젝트를위한 분산 컴파일러 서비스입니다.</target>
        </trans-unit>
        <trans-unit id="28732829f3eca4da96a693af0bb508a19d3ecbdf" translate="yes" xml:space="preserve">
          <source>Google offers &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;excellent documentation for their developer tools&lt;/a&gt;. We recommend that you make yourself familiar with them - they are usually one of the most powerful utilities in any Electron Developer's tool belt.</source>
          <target state="translated">Google은 &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;개발자 도구에 대한 훌륭한 문서를&lt;/a&gt; 제공 합니다 . 우리는 당신이 그들에게 익숙해 지길 권장합니다. 그것들은 보통 Electron Developer의 툴 벨트에서 가장 강력한 유틸리티 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="e96b7da2918127b11fa0a0e9eee6e9a1c10a65ca" translate="yes" xml:space="preserve">
          <source>Guarani</source>
          <target state="translated">Guarani</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">가이드 및 튜토리얼</target>
        </trans-unit>
        <trans-unit id="7d874f5abb3950680f297babc41172373fdc4c32" translate="yes" xml:space="preserve">
          <source>Guides: Development</source>
          <target state="translated">가이드 : 개발</target>
        </trans-unit>
        <trans-unit id="905d38c755a96138170302a7c56baed9094e1527" translate="yes" xml:space="preserve">
          <source>Guides: Getting Started with Electron</source>
          <target state="translated">가이드 : Electron 시작하기</target>
        </trans-unit>
        <trans-unit id="c06c55a5bcd005bf56c5234eb953099ffc1de3f1" translate="yes" xml:space="preserve">
          <source>Gujarati</source>
          <target state="translated">Gujarati</target>
        </trans-unit>
        <trans-unit id="12b4aa2e03f9d0d04893ebd755d57aa21da50f87" translate="yes" xml:space="preserve">
          <source>Gyp Files</source>
          <target state="translated">Gyp 파일</target>
        </trans-unit>
        <trans-unit id="6ab64c2c4cbe25df11defa0cabb6e1d056d0b05d" translate="yes" xml:space="preserve">
          <source>HKDF - &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</source>
          <target state="translated">HKDF- &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96aef50bf3aade35f7355d1a4921a735889e4d65" translate="yes" xml:space="preserve">
          <source>HMAC - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</source>
          <target state="translated">HMAC- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec65432dccf7be3dd348b42b4845c542f32d36e" translate="yes" xml:space="preserve">
          <source>Handle responses to HTTP/HTTPS requests.</source>
          <target state="translated">HTTP / HTTPS 요청에 대한 응답을 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="0bdcb3359e0bc7193184a50e6c4ff8c1c1fef02a" translate="yes" xml:space="preserve">
          <source>Handles a single &lt;code&gt;invoke&lt;/code&gt;able IPC message, then removes the listener. See &lt;code&gt;ipcMain.handle(channel, listener)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;invoke&lt;/code&gt; 가능한 단일 IPC 메시지를 처리 한 다음 리스너를 제거합니다. &lt;code&gt;ipcMain.handle(channel, listener)&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e34b76c18492cbccb6cd816eb3e1a919459421f5" translate="yes" xml:space="preserve">
          <source>Handling Updates Manually</source>
          <target state="translated">수동으로 업데이트 처리</target>
        </trans-unit>
        <trans-unit id="c6198e10656789bfc9a2ce6cde36df2a0803c265" translate="yes" xml:space="preserve">
          <source>Hausa</source>
          <target state="translated">Hausa</target>
        </trans-unit>
        <trans-unit id="cd7668c561bd17eb1bdc17551d90f80f2444fe05" translate="yes" xml:space="preserve">
          <source>Hawaiian</source>
          <target state="translated">Hawaiian</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="dad314e6fa5d85b60cfa86c8054b26586b2695a7" translate="yes" xml:space="preserve">
          <source>Here are some things to consider before rendering untrusted content:</source>
          <target state="translated">신뢰할 수없는 콘텐츠를 렌더링하기 전에 고려해야 할 몇 가지 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="32e9448bc4ec32f0e45beaffa974dfcc238350cc" translate="yes" xml:space="preserve">
          <source>Here is a pre-configured project that you can download and directly debug in VSCode: &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</source>
          <target state="translated">다음은 VSCode에서 다운로드하여 직접 디버깅 할 수있는 사전 구성된 프로젝트입니다. &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7511063de052867ece2aea3d8c3eafd004df2d88" translate="yes" xml:space="preserve">
          <source>Here is an example of the 1.x strategy:</source>
          <target state="translated">1.x 전략의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="536ab89c6edf5aadcd8667b06d61bfd9d8b1c469" translate="yes" xml:space="preserve">
          <source>Here is an example that shows how to use In-App Purchases in Electron. You'll have to replace the product ids by the identifiers of the products created with iTunes Connect (the identifier of &lt;code&gt;com.example.app.product1&lt;/code&gt; is &lt;code&gt;product1&lt;/code&gt;). Note that you have to listen to the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible in your app.</source>
          <target state="translated">다음은 Electron에서 인앱 구매를 사용하는 방법을 보여주는 예입니다. iTunes Connect로 생성 한 제품의 식별자 ( &lt;code&gt;com.example.app.product1&lt;/code&gt; 의 식별자 는 &lt;code&gt;product1&lt;/code&gt; )로 제품 ID를 교체해야합니다 . 앱에서 가능한 빨리 &lt;code&gt;transactions-updated&lt;/code&gt; 이벤트 를 수신 해야합니다.</target>
        </trans-unit>
        <trans-unit id="6d95a763e8b803427825f074147dbb618bb8baf8" translate="yes" xml:space="preserve">
          <source>Here's a very simple example of creating a custom Jump List:</source>
          <target state="translated">다음은 사용자 정의 점프 목록을 만드는 매우 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="a2e3007d0832120c6f9a0f910d309296102f99f4" translate="yes" xml:space="preserve">
          <source>Hides all application windows without minimizing them.</source>
          <target state="translated">모든 응용 프로그램 창을 최소화하지 않고 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="c6b1b93e545fd554605800d785e996e3dc0eb5ee" translate="yes" xml:space="preserve">
          <source>Hides the dock icon.</source>
          <target state="translated">독 아이콘을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="5a43dc7f2f465c2745f7cb820f2abef02d340442" translate="yes" xml:space="preserve">
          <source>Hides the window.</source>
          <target state="translated">창을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="ef8f36f42eba0b8668da702476cc74241114add9" translate="yes" xml:space="preserve">
          <source>High Resolution Image</source>
          <target state="translated">고해상도 이미지</target>
        </trans-unit>
        <trans-unit id="c9e6b253fc34a7155f97dc0aab1c389d34cafdad" translate="yes" xml:space="preserve">
          <source>Hindi</source>
          <target state="translated">Hindi</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="9b0ec9db7c0e86a129f9fa1bab0da6d3e2b91722" translate="yes" xml:space="preserve">
          <source>Hooks a windows message. The &lt;code&gt;callback&lt;/code&gt; is called when the message is received in the WndProc.</source>
          <target state="translated">Windows 메시지를 연결합니다. &lt;code&gt;callback&lt;/code&gt; 메시지가의 WndProc에 수신 될 때 호출된다.</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="32db97527de21c253684c122aa8c360cbda6c820" translate="yes" xml:space="preserve">
          <source>How do I enable it?</source>
          <target state="translated">어떻게 활성화합니까?</target>
        </trans-unit>
        <trans-unit id="119099b76d7b39cb325429aae09a037d7d8aaba2" translate="yes" xml:space="preserve">
          <source>How do I flip the fuses?</source>
          <target state="translated">퓨즈를 어떻게 뒤집습니까?</target>
        </trans-unit>
        <trans-unit id="0e9ab2e20e4caad9a56c772925e1cc937d765a03" translate="yes" xml:space="preserve">
          <source>How do I put the results of the spellchecker in my context menu?</source>
          <target state="translated">내 상황에 맞는 메뉴에 맞춤법 검사기의 결과를 어떻게 넣습니까?</target>
        </trans-unit>
        <trans-unit id="e31334bebb7eaceff6fb89067353d34e43f8191c" translate="yes" xml:space="preserve">
          <source>How to Contribute in Issues</source>
          <target state="translated">이슈에 참여하는 방법</target>
        </trans-unit>
        <trans-unit id="d430e9707eeeb4d553faa161d543b89fb53d8001" translate="yes" xml:space="preserve">
          <source>How to Contribute to Issues</source>
          <target state="translated">문제에 기여하는 방법</target>
        </trans-unit>
        <trans-unit id="5a8e3da66fa923f0ece07325d1e26b9f23216424" translate="yes" xml:space="preserve">
          <source>How to Submit Your App</source>
          <target state="translated">앱을 제출하는 방법</target>
        </trans-unit>
        <trans-unit id="5d6d0e6a86f87e3c9dad5af1e78f722b2a0eddbd" translate="yes" xml:space="preserve">
          <source>How to enable the spellchecker?</source>
          <target state="translated">맞춤법 검사기를 활성화하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="77a4a1a408e307fcb086698bb67fe202442adacb" translate="yes" xml:space="preserve">
          <source>How to install native modules</source>
          <target state="translated">기본 모듈을 설치하는 방법</target>
        </trans-unit>
        <trans-unit id="e219f690385e428b335d5c1debc806bb7f162143" translate="yes" xml:space="preserve">
          <source>How to load a DevTools Extension</source>
          <target state="translated">DevTools Extension을로드하는 방법</target>
        </trans-unit>
        <trans-unit id="7ef7dc5d8fc5fe32ebda37262b6105258e86dfac" translate="yes" xml:space="preserve">
          <source>How to remove a DevTools Extension</source>
          <target state="translated">DevTools 확장을 제거하는 방법</target>
        </trans-unit>
        <trans-unit id="015aa1fe4ce333a7a911acd12759ad11420c4555" translate="yes" xml:space="preserve">
          <source>How to set the languages the spellchecker uses?</source>
          <target state="translated">맞춤법 검사기가 사용하는 언어를 설정하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="42990de13e12a6f3fe14f015c9fa5f168409cf6f" translate="yes" xml:space="preserve">
          <source>How to share data between web pages?</source>
          <target state="translated">웹 페이지간에 데이터를 공유하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="006cb42291b4d2a8b6209f1743122eaed8f3b45c" translate="yes" xml:space="preserve">
          <source>How to use Node.js and Electron APIs.</source>
          <target state="translated">Node.js 및 Electron API 사용 방법</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="3dd7ebb42cfd90c92c21fd773d0d3b2eaa35204b" translate="yes" xml:space="preserve">
          <source>However if you are using the built-in module but still getting this error, it is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">그러나 내장 모듈을 사용하고 있지만이 오류가 계속 발생하면 잘못된 프로세스에서 모듈을 사용하고있을 가능성이 큽니다. 예를 들어 &lt;code&gt;electron.app&lt;/code&gt; 는 기본 프로세스 에서만 사용할 수있는 반면 &lt;code&gt;electron.webFrame&lt;/code&gt; 은 렌더러 프로세스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b7b787445f7ea095e630d9e3c933f0698df2d83" translate="yes" xml:space="preserve">
          <source>However, if your app can run untrusted content and even if you &lt;a href=&quot;../api/sandbox-option&quot;&gt;sandbox&lt;/a&gt; your renderer processes accordingly, the &lt;code&gt;remote&lt;/code&gt; module makes it easy for malicious code to escape the sandbox and have access to system resources via the higher privileges of the main process. Therefore, it should be disabled in such circumstances.</source>
          <target state="translated">그러나 앱이 신뢰할 수없는 콘텐츠를 실행할 수 있고 그에 따라 렌더러 프로세스 를 &lt;a href=&quot;../api/sandbox-option&quot;&gt;샌드 박스&lt;/a&gt; 하더라도 &lt;code&gt;remote&lt;/code&gt; 모듈을 사용하면 악성 코드가 샌드 박스를 쉽게 벗어날 수 있고 기본 프로세스의 더 높은 권한을 통해 시스템 리소스에 액세스 할 수 있습니다. 따라서 이러한 상황에서는 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="27e5f816b5ffe68e25d9539e555bfe6e858dff61" translate="yes" xml:space="preserve">
          <source>However, if your app can run untrusted content and even if you &lt;a href=&quot;api/sandbox-option&quot;&gt;sandbox&lt;/a&gt; your renderer processes accordingly, the &lt;code&gt;remote&lt;/code&gt; module makes it easy for malicious code to escape the sandbox and have access to system resources via the higher privileges of the main process. Therefore, it should be disabled in such circumstances.</source>
          <target state="translated">그러나 앱이 신뢰할 수없는 콘텐츠를 실행할 수 있고 그에 따라 렌더러 프로세스 를 &lt;a href=&quot;api/sandbox-option&quot;&gt;샌드 박스&lt;/a&gt; 하더라도 &lt;code&gt;remote&lt;/code&gt; 모듈을 사용하면 악성 코드가 샌드 박스를 쉽게 벗어날 수 있고 기본 프로세스의 더 높은 권한을 통해 시스템 리소스에 액세스 할 수 있습니다. 따라서 이러한 상황에서는 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="de558fe6876f5a554a359adecff730a0c6725485" translate="yes" xml:space="preserve">
          <source>However, it is recommended to avoid using the &lt;code&gt;remote&lt;/code&gt; module altogether.</source>
          <target state="translated">그러나 &lt;code&gt;remote&lt;/code&gt; 모듈을 아예 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="20ce304447aa2efbe1f8ace27ad4da722ab8973b" translate="yes" xml:space="preserve">
          <source>However, we understand that requirements outside our wildest imagination may exist, so if you're looking for something like Electron that runs on Windows XP, the NW.js legacy release might be the right fit for you.</source>
          <target state="translated">그러나 우리는 상상할 수없는 요구 사항이 존재할 수 있다는 것을 알고 있으므로 Windows XP에서 실행되는 Electron과 같은 것을 찾고 있다면 NW.js 레거시 릴리스가 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80cb96f852d1ce7ae9b00c59c13912122674f7ce" translate="yes" xml:space="preserve">
          <source>Hungarian</source>
          <target state="translated">Hungarian</target>
        </trans-unit>
        <trans-unit id="4663bd433a3403bb10d42d1a6d961eb823a20381" translate="yes" xml:space="preserve">
          <source>I can not use jQuery/RequireJS/Meteor/AngularJS in Electron.</source>
          <target state="translated">Electron에서 jQuery / RequireJS / Meteor / AngularJS를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2fff4c2349e41985a187ff34f8c6f944604a97df" translate="yes" xml:space="preserve">
          <source>I used to provide APIs from my preload script using &lt;code&gt;window.X = apiObject&lt;/code&gt; now what?</source>
          <target state="translated">&lt;code&gt;window.X = apiObject&lt;/code&gt; 사용하여 프리 로드 스크립트에서 API를 제공 했습니다. 이제 어떻게됩니까?</target>
        </trans-unit>
        <trans-unit id="d16e7df7f833569127024b8ec6cd77f88623e120" translate="yes" xml:space="preserve">
          <source>I'm being asked for a username/password for chromium-internal.googlesource.com</source>
          <target state="translated">chromium-internal.googlesource.com의 사용자 이름 / 비밀번호를 입력하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="aa130cab90e070fea7cd0266d20e2823a9c3cc5b" translate="yes" xml:space="preserve">
          <source>I.e. This method returns &lt;code&gt;true&lt;/code&gt; if your process is the primary instance of your application and your app should continue loading. It returns &lt;code&gt;false&lt;/code&gt; if your process should immediately quit as it has sent its parameters to another instance that has already acquired the lock.</source>
          <target state="translated">즉 , 프로세스가 애플리케이션의 기본 인스턴스이고 앱이 계속로드되어야하는 경우이 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이미 잠금을 획득 한 다른 인스턴스로 매개 변수를 보냈기 때문에 프로세스가 즉시 종료되어야하는 경우 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f6443e9e80d7ff5014bd87a1c30a8be0edfc3cec" translate="yes" xml:space="preserve">
          <source>IDEA - &quot;On the Design and Security of Block Ciphers&quot; book by X. Lai</source>
          <target state="translated">IDEA-X. Lai의 &quot;블록 암호의 디자인 및 보안&quot;책</target>
        </trans-unit>
        <trans-unit id="2d2784b01eb1135581b7a56e053cc184e7b456aa" translate="yes" xml:space="preserve">
          <source>IDL</source>
          <target state="translated">IDL</target>
        </trans-unit>
        <trans-unit id="d0f99dc7f22f9fd48a428327fd8c96820f8a762f" translate="yes" xml:space="preserve">
          <source>IME</source>
          <target state="translated">IME</target>
        </trans-unit>
        <trans-unit id="7c68728ac018ddf5a25a386395b4b5962be1aaf6" translate="yes" xml:space="preserve">
          <source>IOCounters</source>
          <target state="translated">IOCounters</target>
        </trans-unit>
        <trans-unit id="1fd209e564e2f820f91ecf2931819f28bad1b99c" translate="yes" xml:space="preserve">
          <source>IOCounters Object</source>
          <target state="translated">IOCounters 객체</target>
        </trans-unit>
        <trans-unit id="f4aa7e6cdf843e01253be3fd2becaee731842f78" translate="yes" xml:space="preserve">
          <source>IPC</source>
          <target state="translated">IPC</target>
        </trans-unit>
        <trans-unit id="890a7404cde81122526f825a731ae1012afa8fc4" translate="yes" xml:space="preserve">
          <source>IPC stands for Inter-Process Communication. Electron uses IPC to send serialized JSON messages between the &lt;a href=&quot;#main-process&quot;&gt;main&lt;/a&gt; and &lt;a href=&quot;#renderer-process&quot;&gt;renderer&lt;/a&gt; processes.</source>
          <target state="translated">IPC는 프로세스 간 통신을 의미합니다. Electron은 IPC를 사용하여 &lt;a href=&quot;#main-process&quot;&gt;기본&lt;/a&gt; 프로세스 와 &lt;a href=&quot;#renderer-process&quot;&gt;렌더러&lt;/a&gt; 프로세스 간에 직렬화 된 JSON 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="b1faf3607f00a15313ffe083e5f26329c2c9887b" translate="yes" xml:space="preserve">
          <source>Icon Overlays in Taskbar</source>
          <target state="translated">작업 표시 줄의 아이콘 오버레이</target>
        </trans-unit>
        <trans-unit id="4b58f92cb05655184beba35216e41c88e52c8808" translate="yes" xml:space="preserve">
          <source>Icon overlays serve as a contextual notification of status, and are intended to negate the need for a separate notification area status icon to communicate that information to the user. For instance, the new mail status in Microsoft Outlook, currently shown in the notification area, can now be indicated through an overlay on the taskbar button. Again, you must decide during your development cycle which method is best for your application. Overlay icons are intended to supply important, long-standing status or notifications such as network status, messenger status, or new mail. The user should not be presented with constantly changing overlays or animations.</source>
          <target state="translated">아이콘 오버레이는 상황에 대한 상황 알림으로 사용되며, 해당 정보를 사용자에게 전달하기 위해 별도의 알림 영역 상태 아이콘이 필요하지 않습니다. 예를 들어, 현재 알림 영역에 표시된 Microsoft Outlook의 새 메일 상태를 작업 표시 줄 단추의 오버레이를 통해 표시 할 수 있습니다. 다시 한 번, 개발주기 동안 응용 프로그램에 가장 적합한 방법을 결정해야합니다. 오버레이 아이콘은 네트워크 상태, 메신저 상태 또는 새 메일과 같은 중요하고 오랜 상태 또는 알림을 제공하기위한 것입니다. 사용자에게 끊임없이 변화하는 오버레이 또는 애니메이션이 표시되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1431424e0aa0d00794b34d04eefeac90cc58d9b8" translate="yes" xml:space="preserve">
          <source>Icons associated with certain file extensions, like &lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, etc.</source>
          <target state="translated">같은 특정 파일 확장자와 관련된 아이콘 &lt;code&gt;.mp3&lt;/code&gt; , &lt;code&gt;.png&lt;/code&gt; 등,</target>
        </trans-unit>
        <trans-unit id="b87b9c7cefbb13a341bb1187e3a49551471edda0" translate="yes" xml:space="preserve">
          <source>Icons inside the file itself, like &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt;, &lt;code&gt;.ico&lt;/code&gt;.</source>
          <target state="translated">파일 자체, 같은 내부 아이콘 &lt;code&gt;.exe&lt;/code&gt; , &lt;code&gt;.dll&lt;/code&gt; , &lt;code&gt;.ico&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="186bfe94308b4c8b9444f82e3fabdd4996e0d6b2" translate="yes" xml:space="preserve">
          <source>Ideally, the pull request will pass (&quot;be green&quot;) on all of CI's platforms. This means that all tests pass and there are no linting errors. However, it is not uncommon for the CI infrastructure itself to fail on specific platforms or for so-called &quot;flaky&quot; tests to fail (&quot;be red&quot;). Each CI failure must be manually inspected to determine the cause.</source>
          <target state="translated">이상적으로는 모든 CI 플랫폼에서 풀 요청이 통과 ( &quot;녹색&quot;)됩니다. 이것은 모든 테스트가 통과되고 보푸라기 오류가 없음을 의미합니다. 그러나 CI 인프라 자체가 특정 플랫폼에서 실패하거나 소위 &quot;정상적인&quot;테스트가 실패하는 경우 ( &quot;빨간색&quot;)는 드문 일이 아닙니다. 원인을 판별하려면 각 CI 장애를 수동으로 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="c950e5fcb340b66b792a98a1b860f73128a02acd" translate="yes" xml:space="preserve">
          <source>Identify the image you wish to modify.</source>
          <target state="translated">수정할 이미지를 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="9daef1fc4f2699e1ced9a8bca6a46f684613c300" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://alienryderflex.com/sub_pixel/&quot;&gt;sub-pixel anti-aliasing&lt;/a&gt; is deactivated, then fonts on LCD screens can look blurry. Example:</source>
          <target state="translated">경우 &lt;a href=&quot;https://alienryderflex.com/sub_pixel/&quot;&gt;서브 픽셀 안티 앨리어싱을&lt;/a&gt; 비활성화 한 후 LCD 화면에 글꼴이 흐릿하게 보일 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="e3388f8c3e24c8f4cfd0feb826cdf4bd66d6bb3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;app.getPath('logs')&lt;/code&gt; is called without called &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; being called first, a default log directory will be created equivalent to calling &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; without a &lt;code&gt;path&lt;/code&gt; parameter.</source>
          <target state="translated">경우 &lt;code&gt;app.getPath('logs')&lt;/code&gt; 라는없이 호출 &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; 먼저 호출되고, 기본 로그 디렉토리는 호출하는 것과 생성됩니다 &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; 없이 &lt;code&gt;path&lt;/code&gt; 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="9241deb084a6d5babf2886e1ab3012b3abf8b22b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;backgroundThrottling&lt;/code&gt; is disabled, the visibility state will remain &lt;code&gt;visible&lt;/code&gt; even if the window is minimized, occluded, or hidden.</source>
          <target state="translated">경우 &lt;code&gt;backgroundThrottling&lt;/code&gt; 가 비활성화되어, 가시성 상태가 유지됩니다 &lt;code&gt;visible&lt;/code&gt; 창이 최소화 폐색, 또는 숨겨진 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="2ab64bd4fbc9f13434f020a4d72f5c0bab58107c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is called without a username or password, the authentication request will be cancelled and the authentication error will be returned to the page.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 사용자 이름이나 암호없이 호출, 인증 요청이 취소되고 인증 오류 페이지로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="271d04a59e510c2f17aaa6bc0a410f5e69008aa0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;categories&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; the previously set custom Jump List (if any) will be replaced by the standard Jump List for the app (managed by Windows).</source>
          <target state="translated">경우 &lt;code&gt;categories&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 이전에 설정 한 사용자 지정 점프 목록 (있는 경우) (Windows에서 관리) 응용 프로그램의 표준 점프 목록으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="d7d5f50e7e236c4c3873874792fb7811f4c1a44b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;gclient sync&lt;/code&gt; is interrupted the git tree may be left in a bad state, leading to a cryptic message when running &lt;code&gt;gclient sync&lt;/code&gt; in the future:</source>
          <target state="translated">경우 &lt;code&gt;gclient sync&lt;/code&gt; 중단 된 자식 트리를 실행할 때 비밀 메시지로 이어지는 나쁜 상태로 남아있을 수 있습니다 &lt;code&gt;gclient sync&lt;/code&gt; 미래 :</target>
        </trans-unit>
        <trans-unit id="36c123521ae2817ad24173691362787c56b44843" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git-import-patches -3&lt;/code&gt; encounters a merge conflict that it can't resolve automatically, it will pause and allow you to resolve the conflict manually. Once you have resolved the conflict, &lt;code&gt;git add&lt;/code&gt; the resolved files and continue to apply the rest of the patches by running &lt;code&gt;git am --continue&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;git-import-patches -3&lt;/code&gt; 자동으로 해결할 수없는 병합 충돌이 발생, 그것은 일시 정지 및 수동으로 충돌을 해결 할 수 있습니다. 충돌을 해결했으면 &lt;code&gt;git add&lt;/code&gt; 은 해결 된 파일을 추가 하고 &lt;code&gt;git am --continue&lt;/code&gt; 를 실행하여 나머지 패치를 계속 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="8a0633c123f77fc0c055ad23664ec2cd171adc37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;listener&lt;/code&gt; returns a Promise, the eventual result of the promise will be returned as a reply to the remote caller. Otherwise, the return value of the listener will be used as the value of the reply.</source>
          <target state="translated">경우 &lt;code&gt;listener&lt;/code&gt; 약속을 반환 약속의 최종 결과는 원격 호출에 대한 응답으로 반환됩니다. 그렇지 않으면 리스너의 반환 값이 응답 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="556f915b2e5f20804107a01cb875b2dc9074fb1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. If the &lt;code&gt;partition&lt;/code&gt; is empty then default session of the app will be returned.</source>
          <target state="translated">경우 &lt;code&gt;partition&lt;/code&gt; 과 시작이 &lt;code&gt;persist:&lt;/code&gt; 페이지가 같은과 응용 프로그램의 모든 페이지에 사용할 수있는 지속적인 세션을 사용하는 &lt;code&gt;partition&lt;/code&gt; . &lt;code&gt;persist:&lt;/code&gt; 접두사 가 없으면 페이지는 메모리 내 세션을 사용합니다. 경우 &lt;code&gt;partition&lt;/code&gt; 있는 응용 프로그램의 빈 다음 기본 세션이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a67226ca7a777cfee22c5e1499e50c2b4b369ea4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;scaleFactor&lt;/code&gt; is passed, this will return the aspect ratio corresponding to the image representation most closely matching the passed value.</source>
          <target state="translated">경우 &lt;code&gt;scaleFactor&lt;/code&gt; 와이 전달되고이 가장 가깝게 통과 값과 일치하는 이미지 표현에 대응하는 종횡비를 반환한다.</target>
        </trans-unit>
        <trans-unit id="ef9a1b0a2183ac9ff1b8bccaa4dea34f40d8277c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;scaleFactor&lt;/code&gt; is passed, this will return the size corresponding to the image representation most closely matching the passed value.</source>
          <target state="translated">경우 &lt;code&gt;scaleFactor&lt;/code&gt; 와이 전달되고이 가장 가깝게 통과 값과 일치하는 이미지 표현에 대응하는 크기를 리턴한다.</target>
        </trans-unit>
        <trans-unit id="06b1dcac461294816a12b307466803637f810c1d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeoutType&lt;/code&gt; is set to 'never', the notification never expires. It stays open until closed by the calling API or the user.</source>
          <target state="translated">경우 &lt;code&gt;timeoutType&lt;/code&gt; 는 '결코'으로 설정, 알림이 만료되지 않습니다. 호출 API 또는 사용자가 닫을 때까지 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="159278b031266e4365b8e89cb754ee1575e08111" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and not painting, start painting.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 가능하고 그림되지 않고, 그림 시작합니다.</target>
        </trans-unit>
        <trans-unit id="727cf6c7299aabc319e19a37a009db3233858a37" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and painting, stop painting.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 활성화되어 그림, 정지 그림.</target>
        </trans-unit>
        <trans-unit id="0341ea0a3b398358cb52497946e862feaf676cae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled invalidates the frame and generates a new one through the &lt;code&gt;'paint'&lt;/code&gt; event.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링을&lt;/em&gt; 무효화에게 프레임을 활성화하고를 통해 새로운 생성되는 &lt;code&gt;'paint'&lt;/code&gt; 이벤트를.</target>
        </trans-unit>
        <trans-unit id="71adc365e97dd03614eb0aaea1310a81945c3c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링&lt;/em&gt; 설정을 지정한 번호로 프레임 속도를 사용할 수 있습니다. 1에서 60 사이의 값만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4722ea2a3cf0c60dab14c9eaa28ad6f7054a8910" translate="yes" xml:space="preserve">
          <source>If Electron is running under a different user account, select the &lt;code&gt;Show processes from all users&lt;/code&gt; check box. Notice that depending on how many BrowserWindows your app opened, you will see multiple processes. A typical one-window app will result in Visual Studio presenting you with two &lt;code&gt;Electron.exe&lt;/code&gt; entries - one for the main process and one for the renderer process. Since the list only gives you names, there's currently no reliable way of figuring out which is which.</source>
          <target state="translated">Electron이 다른 사용자 계정으로 실행중인 경우 &lt;code&gt;Show processes from all users&lt;/code&gt; 확인란을 선택하십시오 . 앱이 몇 개의 BrowserWindows를 열 었는지에 따라 여러 프로세스가 표시됩니다. 일반적인 단일 창 응용 프로그램을 사용하면 Visual Studio에서 두 개의 &lt;code&gt;Electron.exe&lt;/code&gt; 항목 (주 프로세스 및 렌더러 프로세스)을 제공합니다. 이 목록은 이름 만 제공하기 때문에 현재 어느 것이 어떤 것인지 알아낼 수있는 확실한 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="dfa45c90a49b752076cafae378cbfb0fc75ef031" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;BrowserWindow&lt;/code&gt; is created with &lt;code&gt;show: false&lt;/code&gt;, the initial visibility state will be &lt;code&gt;visible&lt;/code&gt; despite the window actually being hidden.</source>
          <target state="translated">경우 &lt;code&gt;BrowserWindow&lt;/code&gt; 가 만들어집니다 &lt;code&gt;show: false&lt;/code&gt; , 초기 가시성 상태가 될 것입니다 &lt;code&gt;visible&lt;/code&gt; 실제로 숨겨진 된 창에도 불구하고.</target>
        </trans-unit>
        <trans-unit id="e0338bcfcb4104ead00fe9414b0bc6c798aebd82" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filename)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 통과되면, API 호출은 비동기 될 것이며, 그 결과를 통해 전달되는 &lt;code&gt;callback(filename)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71e356d72e9973e91887cd4f40f232a75076438d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filenames)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 통과되면, API 호출은 비동기 될 것이며, 그 결과를 통해 전달되는 &lt;code&gt;callback(filenames)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3791cf12a77a8315d2f8d2c28114944e087288f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the dialog will not block the process. The API call will be asynchronous and the result will be passed via &lt;code&gt;callback(response)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 전달되는 대화 과정을 차단하지 않습니다. API 호출은 비동기 적이며 결과는 &lt;code&gt;callback(response)&lt;/code&gt; 를 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="933de00af7bd0e61f4522a7eb8447733c9fb6a06" translate="yes" xml:space="preserve">
          <source>If a diff section has no instances of &lt;code&gt;deps/V8&lt;/code&gt;, remove it altogether.</source>
          <target state="translated">diff 섹션에 &lt;code&gt;deps/V8&lt;/code&gt; 인스턴스가 없으면 완전히 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ce51a26435dc6c860dd5b7261fd1da0add0d6ab9" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">특정 베타 릴리스가 &lt;em&gt;일반적&lt;/em&gt; 으로 안정적인 &lt;em&gt;것으로 간주&lt;/em&gt; 되면 버전 정보 만 변경하여 안정적인 빌드로 다시 릴리스됩니다. 예를 들어 &lt;code&gt;2.0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3381ab7d07ff7f44a23923b82111564a74ce1259" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;. After the first stable, all changes must be backwards-compatible bug or security fixes.</source>
          <target state="translated">특정 베타 릴리스가 &lt;em&gt;일반적&lt;/em&gt; 으로 안정적인 &lt;em&gt;것으로 간주&lt;/em&gt; 되면 버전 정보 만 변경하여 안정적인 빌드로 다시 릴리스됩니다. 예 : &lt;code&gt;2.0.0&lt;/code&gt; . 첫 번째 안정 이후 모든 변경 사항은 이전 버전과 호환되는 버그 또는 보안 수정이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9cbb2f79307ba23d0b161591cc6814a5de337e7d" translate="yes" xml:space="preserve">
          <source>If a recording is already running, the promise will be immediately resolved, as only one trace operation can be in progress at a time.</source>
          <target state="translated">기록이 이미 실행중인 경우 한 번에 하나의 추적 작업 만 진행될 수 있으므로 promise가 즉시 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="1a3c6692afccf3587e8e76384b39c2f121c66aaa" translate="yes" xml:space="preserve">
          <source>If allowed changes need to be made once a release is beta, they are applied and the prerelease tag is incremented, e.g. &lt;code&gt;2.0.0-beta.2&lt;/code&gt;.</source>
          <target state="translated">출시가 베타 버전 일 때 허용 된 변경이 필요한 경우 적용되고 출시 전 태그가 증분됩니다 (예 : &lt;code&gt;2.0.0-beta.2&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="62a428d1aa74808bcd0676cdc2f0ecc3426101a5" translate="yes" xml:space="preserve">
          <source>If an application has exceptional circumstances and needs to stay on an unsupported series of Electron, developers can silence the end-of-support warning by omitting the final release from the app's &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;devDependencies&lt;/code&gt;. For example, since the 1-6-x series ended with an end-of-support 1.6.18 release, developers could choose to stay in the 1-6-x series without warnings with &lt;code&gt;devDependency&lt;/code&gt; of &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램에 예외적 인 상황이 발생하고 지원되지 않는 Electron 시리즈를 유지해야하는 경우 개발자는 앱의 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;devDependencies&lt;/code&gt; 에서 최종 릴리스를 생략하여 지원 종료 경고를 무시할 수 있습니다. 예를 들어, 1-6-x 시리즈는 지원 종료 1.6.18 릴리스로 종료되었으므로 개발자 는 &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt; &lt;code&gt;devDependency&lt;/code&gt; 와 함께 경고없이 1-6-x 시리즈를 유지하도록 선택할 수 있습니다. 1.6.0- 1.6.17 .</target>
        </trans-unit>
        <trans-unit id="227ed419db90b65ed7017e1ab78195d8ce8a48ed" translate="yes" xml:space="preserve">
          <source>If an argument or a method is unique to certain platforms, those platforms are denoted using a space-delimited italicized list following the datatype. Values can be &lt;code&gt;macOS&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt; or &lt;code&gt;Linux&lt;/code&gt;.</source>
          <target state="translated">인수 또는 메서드가 특정 플랫폼에 고유 한 경우 해당 플랫폼은 데이터 유형 다음에 공백으로 구분 된 기울임 꼴 목록을 사용하여 표시됩니다. 값은 &lt;code&gt;macOS&lt;/code&gt; , &lt;code&gt;Windows&lt;/code&gt; 또는 &lt;code&gt;Linux&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3b63c9e15d16c79e73b80be24bb123149539714" translate="yes" xml:space="preserve">
          <source>If both commands printed a version number, you are all set! Before you get started, you might want to install a &lt;a href=&quot;#a-good-editor&quot;&gt;code editor&lt;/a&gt; suited for JavaScript development.</source>
          <target state="translated">두 명령 모두 버전 번호를 인쇄하면 모든 설정이 완료된 것입니다! 시작하기 전에 JavaScript 개발에 적합한 &lt;a href=&quot;#a-good-editor&quot;&gt;코드 편집기&lt;/a&gt; 를 설치하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bb932b3c9db14b7bf8934cd43d3008c15bd7ef5" translate="yes" xml:space="preserve">
          <source>If building under Cygwin, you may see &lt;code&gt;bootstrap.py&lt;/code&gt; failed with following error:</source>
          <target state="translated">Cygwin에서 빌드하는 경우 &lt;code&gt;bootstrap.py&lt;/code&gt; 가 다음 오류와 함께 실패한 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3293c5bdfae6887ec9205c0f094060db05923daa" translate="yes" xml:space="preserve">
          <source>If done successfully, the command prompt should print something similar to this on startup:</source>
          <target state="translated">성공적으로 완료되면 명령 프롬프트는 시작시 다음과 유사한 내용을 인쇄해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c921c76717bc0c31716bfb5e7e1d21ffd8545b4" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button simply won't appear.</source>
          <target state="translated">이러한 요구 사항 중 하나가 충족되지 않으면 버튼이 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="24c200fa42489448d0578157380e7ed444fcfa81" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button won't appear.</source>
          <target state="translated">이러한 요구 사항 중 하나라도 충족되지 않으면 버튼이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f7cf0c5d1b5e702650badf2be6e09235ead62c0" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented accordingly e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">릴리스가 안정되면 향후 버그 수정 또는 보안 패치를 작성해야하는 경우 적용되며 &lt;em&gt;패치&lt;/em&gt; 버전은 예를 들어 &lt;code&gt;2.0.1&lt;/code&gt; 과 같이 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="2e630a63128205fbb59eba620d0c310d7bc845d6" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">릴리스가 안정된 후 향후 버그 수정 또는 보안 패치를 만들어야하는 경우 해당 &lt;em&gt;패치&lt;/em&gt; 가 적용되고 &lt;em&gt;패치&lt;/em&gt; 버전이 증가됩니다 (예 : &lt;code&gt;2.0.1&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="44ed5688e741dfaf087bcb72ad97d72432431f8e" translate="yes" xml:space="preserve">
          <source>If installation fails with an &lt;code&gt;EACCESS&lt;/code&gt; error you may need to &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;fix your npm permissions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EACCESS&lt;/code&gt; 오류 와 함께 설치가 실패하면 &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;npm 권한&lt;/a&gt; 을 수정 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="815eb8dd187b8fd58d929aed602225532bb831cc" translate="yes" xml:space="preserve">
          <source>If it is something like &lt;code&gt;node_modules/electron/index.js&lt;/code&gt;, then you have to either remove the npm &lt;code&gt;electron&lt;/code&gt; module, or rename it.</source>
          <target state="translated">&lt;code&gt;node_modules/electron/index.js&lt;/code&gt; 와 같은 경우 npm &lt;code&gt;electron&lt;/code&gt; 모듈을 제거 하거나 이름을 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="a859a4ddd12f0e153e138787f8b6dc0429da67f2" translate="yes" xml:space="preserve">
          <source>If modules provide binaries for the usage in Electron, make sure to omit &lt;code&gt;--build-from-source&lt;/code&gt; and the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable in order to take full advantage of the prebuilt binaries.</source>
          <target state="translated">모듈이 Electron에서 사용할 바이너리를 제공하는 경우 사전 빌드 된 바이너리를 최대한 활용하려면 &lt;code&gt;--build-from-source&lt;/code&gt; 및 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 환경 변수 를 생략하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a7fc7f45e66e5f0ebd9efc56a7fc45a306be368" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;height&lt;/code&gt; or the &lt;code&gt;width&lt;/code&gt; are specified then the current aspect ratio will be preserved in the resized image.</source>
          <target state="translated">만하면 &lt;code&gt;height&lt;/code&gt; 또는 &lt;code&gt;width&lt;/code&gt; 다음 지정된 현재 종횡비 해상도 변경에 보존한다.</target>
        </trans-unit>
        <trans-unit id="9d9162a12eb8774afee04e7764955db85194d35b" translate="yes" xml:space="preserve">
          <source>If running the above command prompts you for a reboot, please restart your machine and run the above command again after a successful restart.</source>
          <target state="translated">위 명령을 실행하면 재부팅하라는 메시지가 표시되면 컴퓨터를 다시 시작하고 성공적으로 다시 시작한 후 위 명령을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="036a6278d7e573afe9f50df254cc0f6f441e101f" translate="yes" xml:space="preserve">
          <source>If some patches are no longer compatible with the Chromium code, fix compilation errors.</source>
          <target state="translated">일부 패치가 더 이상 Chromium 코드와 호환되지 않으면 컴파일 오류를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="7804d7554a30dcbd8e8d5d5a73b45bb44515f84f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;api/native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">는 IF &lt;code&gt;type&lt;/code&gt; 매개 변수가 &lt;code&gt;custom&lt;/code&gt; 의 &lt;code&gt;image&lt;/code&gt; 매개 변수는에 사용자 정의 커서 이미지를 개최한다 &lt;a href=&quot;api/native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;scale&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;hotspot&lt;/code&gt; 사용자 정의 커서에 대한 추가 정보를 개최한다.</target>
        </trans-unit>
        <trans-unit id="45e3367833fa240b813e722d92da74d613a9b625" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">는 IF &lt;code&gt;type&lt;/code&gt; 매개 변수가 &lt;code&gt;custom&lt;/code&gt; 의 &lt;code&gt;image&lt;/code&gt; 매개 변수는에 사용자 정의 커서 이미지를 개최한다 &lt;a href=&quot;native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;scale&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;hotspot&lt;/code&gt; 사용자 정의 커서에 대한 추가 정보를 개최한다.</target>
        </trans-unit>
        <trans-unit id="3ff219d7e6ae5dba72d0fde282805fcedb6155cd" translate="yes" xml:space="preserve">
          <source>If the V8 context crashes, the DevTools will display this message.</source>
          <target state="translated">V8 컨텍스트가 충돌하면 DevTools가이 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3074d076d9db7915861fa0e3b33bf85ee60ae69e" translate="yes" xml:space="preserve">
          <source>If the above error persists, the &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; flag may need to be set to true:</source>
          <target state="translated">위의 오류가 지속되면 &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; 플래그를 true로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2d265f7d654fec2f7394cb9d7e334abf7e454fc" translate="yes" xml:space="preserve">
          <source>If the bootstrap script is interrupted while using the git cache, it will leave the cache locked. To remove the lock, delete the files ending in &lt;code&gt;.lock&lt;/code&gt;:</source>
          <target state="translated">git 캐시를 사용하는 동안 부트 스트랩 스크립트가 중단되면 캐시가 잠긴 상태로 유지됩니다. 잠금을 제거하려면 &lt;code&gt;.lock&lt;/code&gt; 으로 끝나는 파일을 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="227b7a1a4062e4eb30d21b7dd3febec236df7570" translate="yes" xml:space="preserve">
          <source>If the files present in &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; are available at &lt;code&gt;https://example.com/dictionaries/language-code.bdic&lt;/code&gt; then you should call this api with &lt;code&gt;ses.setSpellCheckerDictionaryDownloadURL('https://example.com/dictionaries/')&lt;/code&gt;. Please note the trailing slash. The URL to the dictionaries is formed as &lt;code&gt;${url}${filename}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; 에 있는 파일이 &lt;code&gt;https://example.com/dictionaries/language-code.bdic&lt;/code&gt; 에서 사용 가능한 경우 &lt;code&gt;ses.setSpellCheckerDictionaryDownloadURL('https://example.com/dictionaries/')&lt;/code&gt; 을 사용 하여이 API를 호출해야합니다. . 후행 슬래시에 유의하십시오. 사전에 대한 URL은 &lt;code&gt;${url}${filename}&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d777a0bd454d49b73cbb2b36d2133d3780f64fba" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, calling &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">메뉴 막대가 이미 표시되어 &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; 호출 해도 즉시 숨겨지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4d7bfe662ffcc3a7190fd9aa6a772d7dca99a41" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, setting this property to &lt;code&gt;true&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">메뉴 모음이 이미 표시되어있는 경우이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정해 도 즉시 숨겨지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1445a9cf2dc0e174a88f6508636dd9e681cc9bbe" translate="yes" xml:space="preserve">
          <source>If the method returns an &lt;code&gt;Object&lt;/code&gt;, its structure can be specified using a colon followed by a newline then an unordered list of properties in the same style as function parameters.</source>
          <target state="translated">메서드가 &lt;code&gt;Object&lt;/code&gt; 를 반환하면 콜론과 줄 바꿈, 함수 매개 변수와 같은 스타일의 순서없는 속성 목록을 사용하여 구조를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d81ef85e9492d93d3361d1faa21f3536481d645" translate="yes" xml:space="preserve">
          <source>If the notification has been shown before, this method will dismiss the previously shown notification and create a new one with identical properties.</source>
          <target state="translated">알림이 이전에 표시된 경우이 방법은 이전에 표시된 알림을 닫고 동일한 속성을 가진 새 알림을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="46d9109487375980a467e3475b5025f5fb361e14" translate="yes" xml:space="preserve">
          <source>If the remote object is leaked in the renderer process (e.g. stored in a map but never freed), the corresponding object in the main process will also be leaked, so you should be very careful not to leak remote objects.</source>
          <target state="translated">렌더러 프로세스에서 원격 객체가 누출 된 경우 (예 : 맵에 저장되었지만 해제되지 않은 경우) 기본 프로세스의 해당 객체도 유출되므로 원격 객체가 누출되지 않도록 매우주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e6949fb4346277bbe7db3c64a65fcba98095e0f" translate="yes" xml:space="preserve">
          <source>If the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.</source>
          <target state="translated">실행 된 코드의 결과가 약속이면 콜백 결과는 약속의 해결 된 값이됩니다. 반환 된 Promise를 사용하여 Promise를 생성하는 코드를 처리하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d826471e04a7d4fc05bf0a83dfdd02e0fb722702" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, use your system's package manager to update Python to the latest version in the 2.7.x branch. Alternatively, visit &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; for detailed instructions.</source>
          <target state="translated">스크립트가 구성에서 오래된 보안 프로토콜을 사용하고 있다고 반환하면 시스템의 패키지 관리자를 사용하여 Python을 2.7.x 분기의 최신 버전으로 업데이트하십시오. 자세한 내용 은 &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; 를 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4adbc188f4d1ddc4f11150ad0b6625adc75ae52" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, you can either update macOS to High Sierra or install a new version of Python 2.7.x. To upgrade Python, use &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:</source>
          <target state="translated">스크립트가 구성에서 오래된 보안 프로토콜을 사용하고 있다고 반환하면 macOS를 High Sierra로 업데이트하거나 새 버전의 Python 2.7.x를 설치할 수 있습니다. Python을 업그레이드하려면 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bc366f85878aed74d84170109b09f689d2913c9" translate="yes" xml:space="preserve">
          <source>If the service worker does not exist or is not running this method will throw an exception.</source>
          <target state="translated">서비스 워커가 존재하지 않거나 실행되지 않는 경우이 메서드는 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="07e786051fa4107bbbfff765db6fcd965cc9e749" translate="yes" xml:space="preserve">
          <source>If the size is unknown, it returns 0.</source>
          <target state="translated">크기를 알 수 없으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a6fe5b89f2dabed06a3aea1db923c81989e03ac" translate="yes" xml:space="preserve">
          <source>If the type you care about is not in the above table, it is probably not supported.</source>
          <target state="translated">관심있는 유형이 위 표에 없으면 지원되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6400f1ceae84e75b1798da7ac8f97b4940146c9" translate="yes" xml:space="preserve">
          <source>If there are any compilation errors related to the Crashpad, it probably means you need to update the fork to a newer revision. See &lt;a href=&quot;upgrading-crashpad&quot;&gt;Upgrading Crashpad&lt;/a&gt; for instructions on how to do that.</source>
          <target state="translated">크래시 패드와 관련된 컴파일 오류가있는 경우 포크를 최신 버전으로 업데이트해야 할 수도 있습니다. 이를 수행하는 방법에 대한 지시 사항은 &lt;a href=&quot;upgrading-crashpad&quot;&gt;Crashpad 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7288c9fc494492fc851891528f5ac380e8879e56" translate="yes" xml:space="preserve">
          <source>If there are no git conflicts or rebases in &lt;code&gt;src/electron&lt;/code&gt;, you may need to abort a &lt;code&gt;git am&lt;/code&gt; in &lt;code&gt;src&lt;/code&gt;:</source>
          <target state="translated">어떤 자식 충돌이나 rebases에서이없는 경우 &lt;code&gt;src/electron&lt;/code&gt; , 당신이해야 할 수도 있습니다에 중단 &lt;code&gt;git am&lt;/code&gt; 에 &lt;code&gt;src&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41adaaf7621b67f42d66ba786ca7f6d40a727edc" translate="yes" xml:space="preserve">
          <source>If these are not present in your app's entitlements when you invoke, for example:</source>
          <target state="translated">호출 할 때 앱의 권한에 이러한 항목이없는 경우 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e029bfb7f6d5d31d74119f5385dfc1876480404" translate="yes" xml:space="preserve">
          <source>If this impacts you, you can temporarily set &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to revert to the old behavior. This flag will only be an option until Electron 11 so you should plan to update your native modules to be context aware.</source>
          <target state="translated">이로 인해 영향을받는 경우 일시적으로 &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하여 이전 동작으로 되돌릴 수 있습니다. 이 플래그는 Electron 11까지만 옵션이 될 것이므로 컨텍스트를 인식하도록 네이티브 모듈을 업데이트 할 계획을 세워야합니다.</target>
        </trans-unit>
        <trans-unit id="45e7ea50ccb6720b475c6d32018899d97fd8d406" translate="yes" xml:space="preserve">
          <source>If you access &lt;a href=&quot;http://localhost:8088&quot;&gt;http://localhost:8088&lt;/a&gt; on your local machine you can monitor compile jobs as they flow through the goma system.</source>
          <target state="translated">로컬 컴퓨터에서 &lt;a href=&quot;http://localhost:8088&quot;&gt;http : // localhost : 8088&lt;/a&gt; 에 액세스 하면 goma 시스템을 통과하는 컴파일 작업을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6f86e7d6a316512c338668077a47aabdfb66578" translate="yes" xml:space="preserve">
          <source>If you are a developer developing a native module and want to test it against Electron, you might want to rebuild the module for Electron manually. You can use &lt;code&gt;node-gyp&lt;/code&gt; directly to build for Electron:</source>
          <target state="translated">기본 모듈을 개발하는 개발자이고 Electron에 대해 테스트하려는 경우 Electron 용 모듈을 수동으로 재구성 할 수 있습니다. &lt;code&gt;node-gyp&lt;/code&gt; 를 직접 사용하여 Electron을 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49115902c75aef7b53bdb1f21224aac236275b01" translate="yes" xml:space="preserve">
          <source>If you are a maintainer and have access to our cluster, please ensure that you run &lt;code&gt;e init&lt;/code&gt; with &lt;code&gt;--goma=cluster&lt;/code&gt; in order to configure &lt;code&gt;build-tools&lt;/code&gt; to use the Goma cluster. If you have an existing config, you can just set &lt;code&gt;&quot;goma&quot;: &quot;cluster&quot;&lt;/code&gt; in your config file.</source>
          <target state="translated">당신이 메인테이너하고 우리의 클러스터에 액세스 할 수있는 경우, 당신이 실행하는 것이 확인하십시오 &lt;code&gt;e init&lt;/code&gt; 와 &lt;code&gt;--goma=cluster&lt;/code&gt; 구성하기 위해 &lt;code&gt;build-tools&lt;/code&gt; 고마 클러스터를 사용합니다. 기존 구성이있는 경우 구성 파일에서 &lt;code&gt;&quot;goma&quot;: &quot;cluster&quot;&lt;/code&gt; 를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3546e0934a49c0841002196b0423ec133b58edb9" translate="yes" xml:space="preserve">
          <source>If you are an experienced NW.js user, you should be familiar with the concept of Node context and web context. These concepts were invented because of how NW.js was implemented.</source>
          <target state="translated">숙련 된 NW.js 사용자 인 경우 노드 컨텍스트 및 웹 컨텍스트 개념에 익숙해야합니다. 이러한 개념은 NW.js가 구현 된 방식으로 개발되었습니다.</target>
        </trans-unit>
        <trans-unit id="f518771fd5cfe4822af6e39ccae8294353675f7b" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code signed. The Mac and Windows app stores do not allow unsigned apps.</source>
          <target state="translated">패키지 및 배포하려는 Electron 앱을 빌드하는 경우 코드 서명되어야합니다. Mac 및 Windows 앱 스토어는 서명되지 않은 앱을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="97f0e081f738233e6a12d3e89dc6709d9705e577" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code-signed.</source>
          <target state="translated">패키징 및 배포하려는 Electron 앱을 빌드하는 경우 코드 서명을 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="372e64afe8410fe3d2465d66f766d65bf0c095de" translate="yes" xml:space="preserve">
          <source>If you are following the &lt;code&gt;npm&lt;/code&gt; way of installing modules, then this is done by default, if not, you have to pass &lt;code&gt;--build-from-source&lt;/code&gt; to &lt;code&gt;npm&lt;/code&gt;, or set the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable.</source>
          <target state="translated">모듈을 설치 하는 &lt;code&gt;npm&lt;/code&gt; 방식을 따르는 경우 기본적으로 수행되며 그렇지 않은 경우 &lt;code&gt;--build-from-source&lt;/code&gt; 를 &lt;code&gt;npm&lt;/code&gt; 으로 전달하거나 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 환경 변수를 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2cfb529b6f7d16f1e4b79765a55450d85ee67a59" translate="yes" xml:space="preserve">
          <source>If you are new to app sandboxing under macOS, you should also read through Apple's &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; to have a basic idea, then add keys for the permissions needed by your app to the entitlements files.</source>
          <target state="translated">macOS에서 앱 샌드 박싱을 처음 사용하는 경우 Apple의 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; 를 읽고 기본적인 아이디어를 얻은 다음 앱에 필요한 권한의 키를 자격 파일에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0b3f8b9ad9918ed70820f49feece7ddb02cf731" translate="yes" xml:space="preserve">
          <source>If you are not using &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;build-tools&lt;/a&gt;, ensure that that name you have configured for your local build of Electron is one of &lt;code&gt;Testing&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt;, &lt;code&gt;Default&lt;/code&gt;, &lt;code&gt;Debug&lt;/code&gt;, or you have set &lt;code&gt;process.env.ELECTRON_OUT_DIR&lt;/code&gt;. Without these set, Electron will fail to perform some pre-testing steps.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;build-tools를&lt;/a&gt; 사용하지 않는 경우 Electron의 로컬 빌드에 대해 구성한 이름이 &lt;code&gt;Testing&lt;/code&gt; , &lt;code&gt;Release&lt;/code&gt; , &lt;code&gt;Default&lt;/code&gt; , &lt;code&gt;Debug&lt;/code&gt; 중 하나 인지 확인하거나 &lt;code&gt;process.env.ELECTRON_OUT_DIR&lt;/code&gt; 을 설정 했는지 확인합니다 . 이러한 설정이 없으면 Electron은 일부 사전 테스트 단계를 수행하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="03cf4ab71384adf8e5e662d0d5afa5788d1fca8c" translate="yes" xml:space="preserve">
          <source>If you are one of the many developers with a strong preference, know that virtually all code editors and IDEs these days support JavaScript.</source>
          <target state="translated">선호도가 높은 많은 개발자 중 한 사람이라면 요즘에는 거의 모든 코드 편집기와 IDE가 JavaScript를 지원한다는 것을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="511ece18190383d8648593fd41d94edf88da2d63" translate="yes" xml:space="preserve">
          <source>If you are unable to access GitHub or you need to provide a custom build, you can do so by either providing a mirror or an existing cache directory.</source>
          <target state="translated">GitHub에 액세스 할 수 없거나 사용자 정의 빌드를 제공해야하는 경우 미러 또는 기존 캐시 디렉토리를 제공하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b718a7b2269d6aeeadc157ddb6619fbdfb0c4120" translate="yes" xml:space="preserve">
          <source>If you are updating tests and want to run a single spec to check it:</source>
          <target state="translated">테스트를 업데이트하고 단일 스펙을 실행하여 테스트하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="74e0ec616a5f2db0a595e964d3bee0948512b949" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;WebViews&lt;/code&gt; are otherwise not allowed to create new windows.</source>
          <target state="translated">&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt; 를 사용하는 경우 새 창을 열려면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그에 로드 된 페이지와 스크립트가 필요할 수 있습니다 . &lt;code&gt;allowpopups&lt;/code&gt; 의 속성은 그들에게 새로운 만들 수 있습니다 &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;window.open()&lt;/code&gt; 메소드를. 그렇지 않으면 &lt;code&gt;WebViews&lt;/code&gt; 에서 새 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b28d1a471531e27a0e67beca8afcb797c46bf343" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags are otherwise not allowed to create new windows.</source>
          <target state="translated">&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 를&lt;/a&gt; 사용하는 경우 새 창을 열려면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그에 로드 된 페이지 및 스크립트가 필요할 수 있습니다 . &lt;code&gt;allowpopups&lt;/code&gt; 의 속성은 그들에게 새로운 만들 수 있습니다 &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;window.open()&lt;/code&gt; 메소드를. 그렇지 않으면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그는 새 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5161903d562f174b719944298b3ecbac6a1c316" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags are otherwise not allowed to create new windows.</source>
          <target state="translated">&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 를&lt;/a&gt; 사용하는 경우 새 창을 열려면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그에 로드 된 페이지 및 스크립트가 필요할 수 있습니다 . &lt;code&gt;allowpopups&lt;/code&gt; 의 속성은 그들에게 새로운 만들 수 있습니다 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;window.open()&lt;/code&gt; 메소드를. 그렇지 않으면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그는 새 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="debc2e94eac4ca97e2e31778bad9a6ac9e1e229c" translate="yes" xml:space="preserve">
          <source>If you are using Python as provided by Homebrew, you also need to install the following Python modules:</source>
          <target state="translated">Homebrew에서 제공 한대로 Python을 사용하는 경우 다음 Python 모듈도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="80fc6f9726825bf77f66d4a114a758748f0e0bf6" translate="yes" xml:space="preserve">
          <source>If you are using editor supports &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON compilation database&lt;/a&gt; based language server, you can generate it:</source>
          <target state="translated">편집기를 사용하여 &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON 컴파일 데이터베이스&lt;/a&gt; 기반 언어 서버를 지원 하는 경우이를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e963bbebca819cdbe96d82ab1123fe0801d2967" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out the template to the best of your ability.</source>
          <target state="translated">Electron에서 버그를 발견했다고 생각되면 최선을 다해 템플릿을 작성해주십시오.</target>
        </trans-unit>
        <trans-unit id="f0743e84e5a23466f35691c6aa8c710c8f0896bd" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out this form to the best of your ability.</source>
          <target state="translated">Electron에서 버그를 발견했다고 생각되면이 양식을 최대한 활용하십시오.</target>
        </trans-unit>
        <trans-unit id="0d1f21c92cfe0a6c7ef64ca363457616064abf36" translate="yes" xml:space="preserve">
          <source>If you cannot disable the &lt;code&gt;remote&lt;/code&gt; module, you should filter the globals, Node, and Electron modules (so-called built-ins) accessible via &lt;code&gt;remote&lt;/code&gt; that your application does not require. This can be done by blocking certain modules entirely and by replacing others with proxies that expose only the functionality that your app needs.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈을 비활성화 할 수없는 경우 응용 프로그램에 필요하지 않은 &lt;code&gt;remote&lt;/code&gt; 을 통해 액세스 할 수있는 전역, 노드 및 Electron 모듈 (소위 내장 모듈)을 필터링해야 합니다. 특정 모듈을 완전히 차단하고 다른 모듈을 앱에 필요한 기능 만 노출하는 프록시로 대체하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c464ba2442537db7f0883a14d30c8fd64d00801" translate="yes" xml:space="preserve">
          <source>If you click &lt;code&gt;Help&lt;/code&gt; or press the defined accelerator and then open the terminal that you ran your Electron application from, you will see the message that was generated after triggering the &lt;code&gt;click&lt;/code&gt; event: &quot;Electron rocks!&quot;.</source>
          <target state="translated">&lt;code&gt;Help&lt;/code&gt; 을 클릭 하거나 정의 된 가속기를 누른 다음 Electron 응용 프로그램을 실행 한 터미널을 열면 &lt;code&gt;click&lt;/code&gt; 이벤트를 트리거 한 후 생성 된 &quot;Electron rocks!&quot; 라는 메시지가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="04ed95949f9fc3a03f546e9a18f26b5b78dac1cb" translate="yes" xml:space="preserve">
          <source>If you do not already have a &lt;code&gt;.deb&lt;/code&gt; package, using &lt;code&gt;electron-installer-snap&lt;/code&gt; might be an easier path to create snap packages. However, multiple solutions for creating Debian packages exist, including &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt;&lt;code&gt;electron-installer-debian&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.deb&lt;/code&gt; 패키지 가없는 경우 &lt;code&gt;electron-installer-snap&lt;/code&gt; 을 사용하면 스냅 패키지를 만드는 것이 더 쉬울 수 있습니다. 그러나 &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt; &lt;code&gt;electron-installer-debian&lt;/code&gt; 을&lt;/a&gt; 포함하여 데비안 패키지를 만들기위한 여러 가지 솔루션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="61c4fcc639c2347d0ac3c19e17cd07322003d4c5" translate="yes" xml:space="preserve">
          <source>If you do not need a response to the message, consider using &lt;a href=&quot;#ipcrenderersendchannel-args&quot;&gt;&lt;code&gt;ipcRenderer.send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메시지에 대한 응답이 필요하지 않은 경우 &lt;a href=&quot;#ipcrenderersendchannel-args&quot;&gt; &lt;code&gt;ipcRenderer.send&lt;/code&gt; &lt;/a&gt; 사용을 고려 하십시오 .</target>
        </trans-unit>
        <trans-unit id="dae223953c408d185a172c63bf31851f299204f8" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">팝업이 필요하지 않은 경우 기본적 으로 새 &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 를 만들지 않는 것이 좋습니다 . 이것은 최소한으로 필요한 액세스 원칙을 따릅니다. 웹 사이트에서 해당 기능이 필요하다는 것을 알지 못하면 새 팝업을 만들지 마십시오.</target>
        </trans-unit>
        <trans-unit id="1787986385964b5b499de8bb40a5580e8c570902" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">팝업이 필요하지 않은 경우 기본적 으로 새 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 생성을 허용하지 않는 것이 좋습니다 . 이는 최소한으로 필요한 액세스 원칙을 따릅니다. 해당 기능이 필요하다는 것을 알지 못하는 한 웹 사이트에서 새 팝업을 만들지 마십시오.</target>
        </trans-unit>
        <trans-unit id="17ca2154e7a651f9f4580eef9e3684e7990f9e09" translate="yes" xml:space="preserve">
          <source>If you do not set &lt;code&gt;credits&lt;/code&gt; but still wish to surface them in your app, AppKit will look for a file named &quot;Credits.html&quot;, &quot;Credits.rtf&quot;, and &quot;Credits.rtfd&quot;, in that order, in the bundle returned by the NSBundle class method main. The first file found is used, and if none is found, the info area is left blank. See Apple &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaboutpaneloptioncredits?language=objc&quot;&gt;documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;credits&lt;/code&gt; 설정하지 않았지만 여전히 앱에 표시하려는 경우 AppKit은 반환 된 번들에서 &quot;Credits.html&quot;, &quot;Credits.rtf&quot;및 &quot;Credits.rtfd&quot;라는 이름의 파일을 순서대로 찾습니다. NSBundle 클래스 메소드 main에 의해. 발견 된 첫 번째 파일이 사용되며, 아무것도 발견되지 않으면 정보 영역이 비어 있습니다. 자세한 내용은 Apple &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaboutpaneloptioncredits?language=objc&quot;&gt;설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="75e742cb1e3b85a399839264fcadf6ad1ed680a7" translate="yes" xml:space="preserve">
          <source>If you do not subscribe to this event and all windows are closed, the default behavior is to quit the app; however, if you subscribe, you control whether the app quits or not. If the user pressed &lt;code&gt;Cmd + Q&lt;/code&gt;, or the developer called &lt;code&gt;app.quit()&lt;/code&gt;, Electron will first try to close all the windows and then emit the &lt;code&gt;will-quit&lt;/code&gt; event, and in this case the &lt;code&gt;window-all-closed&lt;/code&gt; event would not be emitted.</source>
          <target state="translated">이 이벤트에 가입하지 않고 모든 창이 닫히면 기본 동작은 앱을 종료하는 것입니다. 그러나 구독하면 앱이 종료되는지 여부를 제어합니다. 사용자가 &lt;code&gt;Cmd + Q&lt;/code&gt; 누르 거나 개발자가 &lt;code&gt;app.quit()&lt;/code&gt; 누르면 Electron은 먼저 모든 창을 닫으려고 시도한 다음 &lt;code&gt;will-quit&lt;/code&gt; 이벤트를 발생시킵니다.이 경우 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트는 발생하지 않습니다. 방출.</target>
        </trans-unit>
        <trans-unit id="5d0f3f38792a28a4c020dd49aaa3a70bf46349b1" translate="yes" xml:space="preserve">
          <source>If you don't currently have a Windows installation, &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; has timebombed versions of Windows that you can use to build Electron.</source>
          <target state="translated">현재 Windows가 설치되어 있지 않은 경우 &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; 에는 Electron을 빌드하는 데 사용할 수있는 시한이 지난 버전의 Windows가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c78880b2801eaeed7ce1f2cc4299bfdc75ef332" translate="yes" xml:space="preserve">
          <source>If you don't want any tools but only a solid boilerplate to build from, CT Lin's &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt;&lt;code&gt;electron-react-boilerplate&lt;/code&gt;&lt;/a&gt; might be worth a look. It's quite popular in the community and uses &lt;code&gt;electron-builder&lt;/code&gt; internally.</source>
          <target state="translated">도구를 원하지 않고 단단한 상용구 만 만들려면 CT Lin의 &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt; &lt;code&gt;electron-react-boilerplate&lt;/code&gt; &lt;/a&gt; 하는 것이 좋습니다. 그것은 커뮤니티에서 꽤 인기가 있으며 내부에서 &lt;code&gt;electron-builder&lt;/code&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c2d2d4069ba374557cc5e36c5e853eb18c112d2e" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing there are libraries that do advanced key detection such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;.</source>
          <target state="translated">수동 바로 가기 구문 분석을 원하지 않는 경우 &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt; 과 같은 고급 키 감지를 수행하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="730a8bacfbbaf464f8c72e5cc1b5310549e38196" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing, there are libraries that do advanced key detection, such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;. Below are examples of usage of the &lt;code&gt;mousetrap&lt;/code&gt; running in the Renderer process:</source>
          <target state="translated">수동 단축키 구문 분석을 원하지 않는 경우 &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt; 과 같은 고급 키 감지를 수행하는 라이브러리가 있습니다. 다음은 렌더러 프로세스에서 실행 되는 &lt;code&gt;mousetrap&lt;/code&gt; 의 사용 예입니다 .</target>
        </trans-unit>
        <trans-unit id="6e2c37f59119cfb703651a8895ab5775e299cf90" translate="yes" xml:space="preserve">
          <source>If you encounter a problem with this documentation, or if your app works when compiled for x86 but not for arm64, please &lt;a href=&quot;../development/issues&quot;&gt;file an issue&lt;/a&gt; with &quot;Windows on Arm&quot; in the title.</source>
          <target state="translated">이 문서에서 문제가 발생하거나 앱이 x86 용으로 컴파일되었지만 arm64 용으로는 작동하지 않는 경우 제목에 &quot;Windows on Arm&quot; &lt;a href=&quot;../development/issues&quot;&gt;문제&lt;/a&gt; 를 신고하세요 .</target>
        </trans-unit>
        <trans-unit id="23760b9083d657587a0a29a01b29a3fef89834ea" translate="yes" xml:space="preserve">
          <source>If you encounter a problem with this documentation, or if your app works when compiled for x86 but not for arm64, please &lt;a href=&quot;development/issues&quot;&gt;file an issue&lt;/a&gt; with &quot;Windows on Arm&quot; in the title.</source>
          <target state="translated">이 문서에서 문제가 발생하거나 앱이 x86 용으로 컴파일되었지만 arm64 용으로는 작동하지 않는 경우 제목에 &quot;Windows on Arm&quot; &lt;a href=&quot;development/issues&quot;&gt;문제&lt;/a&gt; 를 신고하세요 .</target>
        </trans-unit>
        <trans-unit id="1634a77e4ab54136589ef244b5dfae0ea6e1af51" translate="yes" xml:space="preserve">
          <source>If you encounter this problem, the following articles may prove helpful:</source>
          <target state="translated">이 문제가 발생하면 다음 문서가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d3538dfb360b356c09289f91591872a5d74f7fc" translate="yes" xml:space="preserve">
          <source>If you encountered an error like &lt;code&gt;Command xxxx not found&lt;/code&gt;, you may try to use the &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; console to execute the build scripts.</source>
          <target state="translated">당신과 같은 오류가 발생하면 &lt;code&gt;Command xxxx not found&lt;/code&gt; , 당신이 사용하려고 할 수 있습니다 &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; 빌드 스크립트를 실행하는 콘솔.</target>
        </trans-unit>
        <trans-unit id="3595e2ec6842f8df110a7a6f959fa86d9077fff8" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, Electron's hosted Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">Electron에서 JavaScript 애플리케이션이 아니라 Electron 자체로 인해 발생한 충돌이나 문제가 발생하는 경우 디버깅이 약간 까다로울 수 있습니다. 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자에게는 더욱 그렇습니다. 그러나 Visual Studio, Electron의 호스팅 된 Symbol Server 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내에서 중단 점을 사용하여 단계별 디버깅을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76da07e932527a6117c3a56371ba3e3878b1de65" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, GitHub's hosted Electron Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">Electron에서 JavaScript 응용 프로그램이 아니라 Electron 자체에 의한 것으로 생각되는 충돌이나 문제가 발생하는 경우 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자의 경우 디버깅이 약간 까다로울 수 있습니다. 그러나 Visual Studio, GitHub에서 호스팅하는 Electron Symbol Server 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내부에서 중단 점을 사용하여 단계별 디버깅을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea02dd04609c3e21d8286b42c8f5b437dc845f82" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">Electron에서 JavaScript 응용 프로그램이 아니라 Electron 자체에 의한 것으로 생각되는 충돌 또는 문제가 발생하는 경우 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자의 경우 디버깅이 약간 까다로울 수 있습니다. 그러나 lldb 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내에서 중단 점을 사용하여 단계별 디버깅을 사용할 수 있습니다. 그래픽 인터페이스를 선호하는 경우 &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;디버깅에 XCode를&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e36764f2b3bedf628cf3e94d4618a408cd75d8ad" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;development/debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">Electron에서 JavaScript 애플리케이션이 아니라 Electron 자체로 인해 발생한 충돌이나 문제가 발생하는 경우 디버깅이 약간 까다로울 수 있습니다. 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자에게는 더욱 그렇습니다. 그러나 lldb 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내에서 중단 점을 사용하여 단계별 디버깅을 활성화 할 수 있습니다. 그래픽 인터페이스를 선호하는 경우 &lt;a href=&quot;development/debugging-instructions-macos-xcode&quot;&gt;디버깅에 XCode를&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1171b325559215ec56cc0828283ad57319637d7" translate="yes" xml:space="preserve">
          <source>If you find yourself in the unfortunate position of having to make a change which can only be made through patching an upstream project, you'll need to know how to manage patches in Electron.</source>
          <target state="translated">업스트림 프로젝트를 패치해야만 할 수있는 변경을해야하는 불행한 입장에 처해 있다면 Electron에서 패치를 관리하는 방법을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="fda1e9a41486e8e36fc4cac6397fc3739cf7ace7" translate="yes" xml:space="preserve">
          <source>If you find yourself running this command often, you can create an alias for it in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">이 명령을 자주 실행하는 경우 &lt;code&gt;~/.gitconfig&lt;/code&gt; 파일 에서 해당 별칭을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="729626f04053461aa92f6cfc4ef0e70943479a8f" translate="yes" xml:space="preserve">
          <source>If you get an error like &lt;code&gt;Module did not self-register&lt;/code&gt;, or &lt;code&gt;The specified procedure could not be found&lt;/code&gt;, it may mean that the module you're trying to use did not correctly include the delay-load hook. If the module is built with node-gyp, ensure that the &lt;code&gt;win_delay_load_hook&lt;/code&gt; variable is set to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;binding.gyp&lt;/code&gt; file, and isn't getting overridden anywhere. If the module is built with another system, you'll need to ensure that you build with a delay-load hook installed in the main &lt;code&gt;.node&lt;/code&gt; file. Your &lt;code&gt;link.exe&lt;/code&gt; invocation should look like this:</source>
          <target state="translated">&lt;code&gt;Module did not self-register&lt;/code&gt; 또는 &lt;code&gt;The specified procedure could not be found&lt;/code&gt; 와 같은 오류가 발생 하면 사용하려는 모듈에 지연로드 후크가 올바르게 포함되지 않았 음을 의미 할 수 있습니다. 모듈이 node-gyp로 빌드 된 경우 &lt;code&gt;binding.gyp&lt;/code&gt; 파일 에서 &lt;code&gt;win_delay_load_hook&lt;/code&gt; 변수가 &lt;code&gt;true&lt;/code&gt; 로 설정되어 있고 어디에서나 재정의되지 않는지 확인합니다. 모듈이 다른 시스템으로 빌드 된 경우 기본 &lt;code&gt;.node&lt;/code&gt; 파일에 설치된 지연로드 후크를 사용하여 빌드하는지 확인해야 합니다. 귀하의 &lt;code&gt;link.exe&lt;/code&gt; 호출은 다음과 같이한다 :</target>
        </trans-unit>
        <trans-unit id="6caaa6701c1bb5c365b0ebd072bb25957e2e71a2" translate="yes" xml:space="preserve">
          <source>If you have a known set of windows, it's a good idea to limit the creation of additional windows in your app.</source>
          <target state="translated">알려진 창 세트가있는 경우 앱에서 추가 창 생성을 제한하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="977cfcf861c658c441dcec6fe519ad85a7fcbd6c" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">보안 문제가있는 경우 &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;보안 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e244a06f0d682e212b64b6fdbe33b66b8cc2cd2f" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">보안 문제가있는 경우 &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;보안 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="90986c2e6ef30ce59319ba1048589dd7c4ace399" translate="yes" xml:space="preserve">
          <source>If you have an existing build pipeline, you can use &lt;code&gt;electron-installer-snap&lt;/code&gt; programmatically. For more information, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs&lt;/a&gt;.</source>
          <target state="translated">기존 빌드 파이프 라인이 있으면 &lt;code&gt;electron-installer-snap&lt;/code&gt; 프로그래밍 방식으로 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6f88582221de280004c045b340f35f801e9a46e" translate="yes" xml:space="preserve">
          <source>If you have expensive setup operations, consider deferring those. Inspect all the work being executed right after the application starts. Instead of firing off all operations right away, consider staggering them in a sequence more closely aligned with the user's journey.</source>
          <target state="translated">값 비싼 설정 작업이있는 경우이를 연기하는 것이 좋습니다. 응용 프로그램이 시작된 직후 실행중인 모든 작업을 검사합니다. 모든 작업을 즉시 시작하는 대신 사용자의 여정과 더 밀접하게 일치하는 순서로 시차를 두는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e9dd61e326667f41af614721259e6dba815d5abe" translate="yes" xml:space="preserve">
          <source>If you have libcc built on your machine in its own repo, tell Electron to use it:</source>
          <target state="translated">시스템에 자체 저장소로 libcc를 빌드 한 경우 Electron에게 다음을 사용하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="b9451ff4b171f5e826b90ddca819cb5ae01298c9" translate="yes" xml:space="preserve">
          <source>If you have no need to create windows in addition to the ones you know you'll need to create, disabling the creation buys you a little bit of extra security at no cost. This is commonly the case for apps that open one &lt;code&gt;BrowserWindow&lt;/code&gt; and do not need to open an arbitrary number of additional windows at runtime.</source>
          <target state="translated">만들 필요가있는 창 외에 창을 만들 필요가없는 경우 창을 사용하지 않도록 설정하면 무료로 약간의 추가 보안을 구매할 수 있습니다. 이것은 일반적으로 하나의 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 열고 런타임에 임의의 수의 추가 창을 열 필요가없는 앱의 경우입니다 .</target>
        </trans-unit>
        <trans-unit id="eccf94d9d65934fc068a168b1624f831893d9ff6" translate="yes" xml:space="preserve">
          <source>If you haven't already, you&amp;rsquo;ll need to sign the Paid Applications Agreement and set up your banking and tax information in iTunes Connect.</source>
          <target state="translated">아직 지불하지 않은 경우 유료 응용 프로그램 계약에 서명하고 iTunes Connect에서 은행 및 세금 정보를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6edde71923d9748cba71b225bd9e64e0b494c180" translate="yes" xml:space="preserve">
          <source>If you haven't yet built libcc but it's already supposed to be upgraded to a new Chromium, bootstrap Electron as usual &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</source>
          <target state="translated">libcc를 아직 구축하지 않았지만 이미 새로운 Chromium으로 업그레이드해야하는 경우 평상시와 같이 부트 스트랩 Electron &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="085847f31a461d6e1ddd1ea7a20e15c8719731d9" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check following things:</source>
          <target state="translated">기본 모듈을 설치했는데 작동하지 않는 경우 다음 사항을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="744fad50f9edce40f3137bc907446af3946e2d7a" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check the following things:</source>
          <target state="translated">네이티브 모듈을 설치했는데 작동하지 않는 경우 다음 사항을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="862fd233566c698b5d3c7d3252812c38e06fbc82" translate="yes" xml:space="preserve">
          <source>If you intend to &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git push&lt;/code&gt; from the official &lt;code&gt;electron&lt;/code&gt; repository in the future, you now need to update the respective folder's origin URLs.</source>
          <target state="translated">향후 공식 &lt;code&gt;electron&lt;/code&gt; 저장소에서 &lt;code&gt;git pull&lt;/code&gt; 또는 &lt;code&gt;git push&lt;/code&gt; 를하려는 경우 이제 해당 폴더의 원본 URL을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="7118d24a866d3a9a6e79ed6be1e457ffad2d3d88" translate="yes" xml:space="preserve">
          <source>If you know of other great accessibility tools for Electron, add them to the accessibility documentation with a pull request.</source>
          <target state="translated">Electron을위한 다른 훌륭한 접근성 도구를 알고 있다면, 풀 요청으로 접근성 문서에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="52d812014ac06ca7d290314b0daf6918fd02d885" translate="yes" xml:space="preserve">
          <source>If you need the entire &lt;code&gt;electron&lt;/code&gt; module, you can require it and then using destructuring to access the individual modules from &lt;code&gt;electron&lt;/code&gt;.</source>
          <target state="translated">전체 &lt;code&gt;electron&lt;/code&gt; 모듈 이 필요한 경우 전자 모듈을 요구 한 다음 &lt;code&gt;electron&lt;/code&gt; 통해 개별 모듈에 액세스하기 위해 구조화를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13f9e4e0c8e8e4ed90e08b42600091d977f0e2ed" translate="yes" xml:space="preserve">
          <source>If you need to customize your configuration, you can &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;pass options to &lt;code&gt;update-electron-app&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;use the update service directly&lt;/a&gt;.</source>
          <target state="translated">구성을 사용자 정의해야하는 경우 &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;옵션을 &lt;code&gt;update-electron-app&lt;/code&gt; 로 전달&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;업데이트 서비스를 직접 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="476bf4b37d10e866176315b603d648667b556ae6" translate="yes" xml:space="preserve">
          <source>If you need to force a re-download of the asset and the SHASUM file set the &lt;code&gt;force_no_cache&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">자산 및 SHASUM 파일을 강제로 다시 다운로드해야하는 경우 &lt;code&gt;force_no_cache&lt;/code&gt; 환경 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5862300ccd0c3e98db2dcc5d2da273c4be2b2485" translate="yes" xml:space="preserve">
          <source>If you need to mix sandboxed and non-sandboxed renderers in one application, simply omit the &lt;code&gt;--enable-sandbox&lt;/code&gt; argument. Without this argument, windows created with &lt;code&gt;sandbox: true&lt;/code&gt; will still have node.js disabled and communicate only via IPC, which by itself is already a gain from security POV.</source>
          <target state="translated">하나의 응용 프로그램에서 샌드 박스 및 비 샌드 박스 렌더러를 혼합해야하는 경우 &lt;code&gt;--enable-sandbox&lt;/code&gt; 인수 를 생략하십시오 . 이 인수가 없으면 &lt;code&gt;sandbox: true&lt;/code&gt; 생성 된 창 은 여전히 ​​node.js를 비활성화하고 IPC를 통해서만 통신하며, 그 자체로는 이미 보안 POV를 통해 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e5d3e00b1acf57a3dfb7ccb824bbb30a89ca407" translate="yes" xml:space="preserve">
          <source>If you need to transfer a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; to the main process, use &lt;a href=&quot;#ipcrendererpostmessagechannel-message-transfer&quot;&gt;&lt;code&gt;ipcRenderer.postMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 를 기본 프로세스 로 전송해야하는 경우 &lt;a href=&quot;#ipcrendererpostmessagechannel-message-transfer&quot;&gt; &lt;code&gt;ipcRenderer.postMessage&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="629e945de9624fcccddb1992beb1d4c29daab014" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy you can &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;set these environment variables&lt;/a&gt;.</source>
          <target state="translated">HTTP 프록시를 사용해야하는 경우 &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;이러한 환경 변수를 설정할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="916072759272af9ebfcc73cf18bfe5d4af43e141" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy, you need to set the &lt;code&gt;ELECTRON_GET_USE_PROXY&lt;/code&gt; variable to any value, plus additional environment variables depending on your host system's Node version:</source>
          <target state="translated">HTTP 프록시를 사용해야하는 경우 &lt;code&gt;ELECTRON_GET_USE_PROXY&lt;/code&gt; 변수를 임의의 값 으로 설정하고 호스트 시스템의 노드 버전에 따라 추가 환경 변수 를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="792716b5a2b850708663c8f195d92cab5976c508" translate="yes" xml:space="preserve">
          <source>If you only want to build Electron quickly for testing or development, you can download the shared library versions by passing the &lt;code&gt;--dev&lt;/code&gt; parameter:</source>
          <target state="translated">테스트 또는 개발을 위해 Electron을 빠르게 빌드하려는 경우 &lt;code&gt;--dev&lt;/code&gt; 매개 변수 를 전달하여 공유 라이브러리 버전을 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a0675074e37c9f1201aade7c2b3243a6fbfeea2" translate="yes" xml:space="preserve">
          <source>If you open the Console and then click the notification, you will see the message that was generated after triggering the &lt;code&gt;onclick&lt;/code&gt; event:</source>
          <target state="translated">콘솔을 연 다음 알림을 클릭하면 &lt;code&gt;onclick&lt;/code&gt; 이벤트를 트리거 한 후 생성 된 메시지가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="c91705c98998332219bba13da150b72386da10cf" translate="yes" xml:space="preserve">
          <source>If you plan on checking out Electron more than once (for example, to have multiple parallel directories checked out to different branches), using the git cache will speed up subsequent calls to &lt;code&gt;gclient&lt;/code&gt;. To do this, set a &lt;code&gt;GIT_CACHE_PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">Electron을 두 번 이상 체크 아웃하려는 경우 (예 : 여러 개의 병렬 디렉토리를 다른 브랜치로 체크 아웃하려는 경우) git 캐시를 사용하면 &lt;code&gt;gclient&lt;/code&gt; 에 대한 후속 호출 속도가 빨라집니다 . 이를 수행하려면 &lt;code&gt;GIT_CACHE_PATH&lt;/code&gt; 환경 변수를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="31e865bf17672f9c0bcddb4825f65867f344cad4" translate="yes" xml:space="preserve">
          <source>If you plan to access the microphone or camera within your app using Electron's APIs, you'll also need to add the following entitlements:</source>
          <target state="translated">Electron의 API를 사용하여 앱 내에서 마이크 또는 카메라에 액세스하려는 경우 다음 권한도 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d7d40dcd0ee25b28e3d79e5292f1b6c52000d40" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">&lt;code&gt;app.setLoginItemSettings&lt;/code&gt; 에 &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;args&lt;/code&gt; 옵션을 제공 한 경우 &lt;code&gt;openAtLogin&lt;/code&gt; 을 올바르게 설정하려면 여기에 동일한 인수를 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="9cdbfca2d06cca9079a13a154e2b80fd157b62f0" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt;, then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">&lt;code&gt;app.setLoginItemSettings&lt;/code&gt; 에 &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;args&lt;/code&gt; 옵션을 제공 한 경우 &lt;code&gt;openAtLogin&lt;/code&gt; 이 올바르게 설정되도록 여기에 동일한 인수를 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6a4e5f7678d709e4dcef1c6fdccd006e98d7006a" translate="yes" xml:space="preserve">
          <source>If you run your code at this point, you'll see that your buttons don't do anything just yet, and your Main process will output an error like this when you click on your buttons: &lt;code&gt;Error occurred in handler for 'dark-mode:toggle': No handler registered for 'dark-mode:toggle'&lt;/code&gt; This is expected &amp;mdash; we haven't actually touched any &lt;code&gt;nativeTheme&lt;/code&gt; code yet.</source>
          <target state="translated">이 시점에서 코드를 실행하면 버튼이 아직 아무 작업도 수행하지 않고 버튼을 클릭 할 때 Main 프로세스가 다음과 같은 오류를 출력합니다. &lt;code&gt;Error occurred in handler for 'dark-mode:toggle': No handler registered for 'dark-mode:toggle'&lt;/code&gt; 가 없습니다. 이것은 예상 됩니다. 실제로 &lt;code&gt;nativeTheme&lt;/code&gt; 코드는 아직 건드리지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="972e0678e759d22802056c49f486c83c9f92bec0" translate="yes" xml:space="preserve">
          <source>If you see a prompt for &lt;code&gt;Username for 'https://chrome-internal.googlesource.com':&lt;/code&gt; when running &lt;code&gt;gclient sync&lt;/code&gt; on Windows, it's probably because the &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; environment variable is not set to 0. Open &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; and add a system variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt;. This tells &lt;code&gt;depot_tools&lt;/code&gt; to use your locally installed version of Visual Studio (by default, &lt;code&gt;depot_tools&lt;/code&gt; will try to download a Google-internal version that only Googlers have access to).</source>
          <target state="translated">&lt;code&gt;Username for 'https://chrome-internal.googlesource.com':&lt;/code&gt; 대한 사용자 이름 프롬프트가 표시되는 경우 : Windows 에서 &lt;code&gt;gclient sync&lt;/code&gt; 를 실행할 때 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; 환경 변수가 0으로 설정되지 않았기 때문일 수 있습니다. &lt;code&gt;Control Panel&lt;/code&gt; 열기 &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; 하고 값이 &lt;code&gt;0&lt;/code&gt; 인 시스템 변수 DEPOT_TOOLS_WIN_TOOLCHAIN 을 추가합니다 . 이렇게하면 &lt;code&gt;depot_tools&lt;/code&gt; 가 로컬에 설치된 Visual Studio 버전을 사용하도록 지시 합니다 (기본적으로 &lt;code&gt;depot_tools&lt;/code&gt; 는 Google 직원 만 액세스 할 수있는 Google 내부 버전을 다운로드하려고합니다).</target>
        </trans-unit>
        <trans-unit id="5b348b4f0d8865286aaee0ce01c2c9e1a6f5a402" translate="yes" xml:space="preserve">
          <source>If you test other combinations and find them to work, please update this document :)</source>
          <target state="translated">다른 조합을 테스트하고 제대로 작동하는 경우이 문서를 업데이트하십시오. :)</target>
        </trans-unit>
        <trans-unit id="a41b590466efc05fff264e1613e0e6f4820c05b4" translate="yes" xml:space="preserve">
          <source>If you use native modules, you must make sure that they compile against v142 of the MSVC compiler (provided in Visual Studio 2017). You must also check that any pre-built &lt;code&gt;.dll&lt;/code&gt; or &lt;code&gt;.lib&lt;/code&gt; files provided or referenced by the native module are available for Windows on Arm.</source>
          <target state="translated">네이티브 모듈을 사용하는 경우 MSVC 컴파일러 (Visual Studio 2017에서 제공)의 v142에 대해 컴파일되는지 확인해야합니다. 또한 기본 모듈에서 제공하거나 참조 하는 사전 빌드 된 &lt;code&gt;.dll&lt;/code&gt; 또는 &lt;code&gt;.lib&lt;/code&gt; 파일이 Windows on Arm에서 사용 가능한지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f1e57d4cd3f8005ef706f6a418f0bd254fc0428" translate="yes" xml:space="preserve">
          <source>If you want a quick fix, you can make the variables global by changing your code from this:</source>
          <target state="translated">빠른 수정이 필요한 경우 코드를 다음과 같이 변경하여 전역 변수를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba62b7d30bbee706fa722a552d79a60b4d164e0c" translate="yes" xml:space="preserve">
          <source>If you want to apply this example to an existing project:</source>
          <target state="translated">이 예제를 기존 프로젝트에 적용하려면 :</target>
        </trans-unit>
        <trans-unit id="7fff812835a9064675286d186c1511b936ffb7a0" translate="yes" xml:space="preserve">
          <source>If you want to build Electron from source and modify the native Electron codebase, this section will help you in testing your modifications.</source>
          <target state="translated">소스에서 Electron을 빌드하고 기본 Electron 코드베이스를 수정하려는 경우이 섹션이 수정 사항을 테스트하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="c9335e6d51d50f1c8319d8890f1068dd36a905ea" translate="yes" xml:space="preserve">
          <source>If you want to build for an &lt;code&gt;arm&lt;/code&gt; target you should also install the following dependencies:</source>
          <target state="translated">&lt;code&gt;arm&lt;/code&gt; 대상 을 빌드 하려면 다음 종속성도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c1e6dc0c9b9cafd7d68ef3e780b5817a75fc949" translate="yes" xml:space="preserve">
          <source>If you want to change the architecture that is downloaded (e.g., &lt;code&gt;ia32&lt;/code&gt; on an &lt;code&gt;x64&lt;/code&gt; machine), you can use the &lt;code&gt;--arch&lt;/code&gt; flag with npm install or set the &lt;code&gt;npm_config_arch&lt;/code&gt; environment variable:</source>
          <target state="translated">당신이 다운로드되는 구조를 변경하려는 경우 (예를 들어, &lt;code&gt;ia32&lt;/code&gt; 온 &lt;code&gt;x64&lt;/code&gt; 기계), 당신은 사용할 수 있습니다 &lt;code&gt;--arch&lt;/code&gt; 설치 NPM과 플래그를하거나 설정 &lt;code&gt;npm_config_arch&lt;/code&gt; 환경 변수를 :</target>
        </trans-unit>
        <trans-unit id="5201d3612d4e2d0860bad7ca51a07c78c1f45c88" translate="yes" xml:space="preserve">
          <source>If you want to control the guest content in any way, you can write JavaScript that listens for &lt;code&gt;webview&lt;/code&gt; events and responds to those events using the &lt;code&gt;webview&lt;/code&gt; methods. Here's sample code with two event listeners: one that listens for the web page to start loading, the other for the web page to stop loading, and displays a &quot;loading...&quot; message during the load time:</source>
          <target state="translated">어떤 방식 으로든 게스트 컨텐츠를 제어하려면 &lt;code&gt;webview&lt;/code&gt; 이벤트 를 수신 하고 &lt;code&gt;webview&lt;/code&gt; 메소드를 사용하여 해당 이벤트에 응답하는 JavaScript를 작성할 수 있습니다 . 다음은 두 개의 이벤트 리스너가있는 샘플 코드입니다. 하나는로드를 시작하기 위해 웹 페이지를 수신 대기하고 다른 하나는로드를 중지하기 위해 웹 페이지 수신을 대기하고로드 시간 동안 &quot;로드 중 ...&quot;메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4fb4f89f45ce1db939f58b3755053c11fd6862aa" translate="yes" xml:space="preserve">
          <source>If you want to debug and step through libchromiumcontent, you will have to run the bootsrap script with the &lt;code&gt;--build_debug_libcc&lt;/code&gt; argument.</source>
          <target state="translated">libchromiumcontent를 디버그하고 단계별로 실행하려면 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 인수로 부트 스트랩 스크립트를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ecec29786835d37d6116231acec6106da9970502" translate="yes" xml:space="preserve">
          <source>If you want to develop your application directly on a Windows on Arm device, substitute &lt;code&gt;vcvarsx86_arm64.bat&lt;/code&gt; in &lt;em&gt;Target&lt;/em&gt; so that cross-compilation can happen with the device's x86 emulation.</source>
          <target state="translated">Arm 장치의 Windows에서 직접 응용 프로그램을 개발하려면 &lt;em&gt;Target&lt;/em&gt; 에서 &lt;code&gt;vcvarsx86_arm64.bat&lt;/code&gt; 를 대체 하여 장치의 x86 에뮬레이션에서 교차 컴파일이 발생할 수 있도록합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="139a966830264531c65ccf48a0c89b2a2d904cf1" translate="yes" xml:space="preserve">
          <source>If you want to embed (third-party) web content in an Electron &lt;code&gt;BrowserWindow&lt;/code&gt;, there are three options available to you: &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tags, &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags, and &lt;code&gt;BrowserViews&lt;/code&gt;. Each one offers slightly different functionality and is useful in different situations. To help you choose between these, this guide explains the differences and capabilities of each option.</source>
          <target state="translated">Electron &lt;code&gt;BrowserWindow&lt;/code&gt; 에 (타사) 웹 콘텐츠를 포함하려면 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 태그, &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그 및 &lt;code&gt;BrowserViews&lt;/code&gt; 의 세 가지 옵션을 사용할 수 있습니다 . 각각은 약간 다른 기능을 제공하며 다양한 상황에서 유용합니다. 이 중에서 선택하는 데 도움이되도록이 가이드에서는 각 옵션의 차이점과 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="70bc54ee6a7f8f0d7dd27d707f8b8f93a407e696" translate="yes" xml:space="preserve">
          <source>If you want to format the changed code on your latest git commit (HEAD), you can run &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt;. See &lt;code&gt;git-clang-format -h&lt;/code&gt; for more details.</source>
          <target state="translated">최신 git commit (HEAD)에서 변경된 코드를 포맷하려면 &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt; 실행할 수 있습니다 . 자세한 내용은 &lt;code&gt;git-clang-format -h&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb463cc6beabb5e19f505e5b54b8aa6bc4bd08f4" translate="yes" xml:space="preserve">
          <source>If you want to get the &lt;code&gt;frameId&lt;/code&gt; of a given renderer context you should use the &lt;code&gt;webFrame.routingId&lt;/code&gt; value. E.g.</source>
          <target state="translated">주어진 렌더러 컨텍스트 의 &lt;code&gt;frameId&lt;/code&gt; 를 얻으려면 &lt;code&gt;webFrame.routingId&lt;/code&gt; 값을 사용해야합니다 . 예</target>
        </trans-unit>
        <trans-unit id="1a26518fe1e613b5d3ff699a348197b25272e778" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts for a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can use the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt; event listeners on the window object inside the renderer process.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow의&lt;/a&gt; 키보드 단축키를 처리하려는 경우 렌더러 프로세스 내의 window 객체 에서 &lt;code&gt;keyup&lt;/code&gt; 및 &lt;code&gt;keydown&lt;/code&gt; 이벤트 리스너를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9619991e707dfdaa233a6ea6e854f6efa95ba2e" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts within a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can listen for the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM events&lt;/a&gt; inside the renderer process using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener() API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 내에서 키보드 단축키를 처리 하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener () API를&lt;/a&gt; 사용하여 렌더러 프로세스 내에서 &lt;code&gt;keyup&lt;/code&gt; 및 &lt;code&gt;keydown&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM 이벤트를&lt;/a&gt; 수신 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7af87528df4c89f426fca0b97e3d514b6cc4fe4" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts within a &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can listen for the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM events&lt;/a&gt; inside the renderer process using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener() API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 내에서 키보드 단축키를 처리 하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener () API를&lt;/a&gt; 사용하여 렌더러 프로세스 내에서 &lt;code&gt;keyup&lt;/code&gt; 및 &lt;code&gt;keydown&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM 이벤트를&lt;/a&gt; 수신 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e23f9ec8d6d374e4f11ab44cabacc757c58d8152" translate="yes" xml:space="preserve">
          <source>If you want to keep exact same behaviors on all platforms, you should not rely on the &lt;code&gt;click&lt;/code&gt; event and always attach a context menu to the tray icon.</source>
          <target state="translated">모든 플랫폼에서 정확히 동일한 동작을 유지하려면 &lt;code&gt;click&lt;/code&gt; 이벤트 에 의존하지 말고 항상 상황에 맞는 메뉴를 트레이 아이콘에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="16fa7c70fe6bf74886856fb7d0c2c3ec2dc12b2c" translate="yes" xml:space="preserve">
          <source>If you want to manually switch between light/dark modes, you can do this by setting the desired mode in the &lt;a href=&quot;../api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; property of the &lt;code&gt;nativeTheme&lt;/code&gt; module. This property's value will be propagated to your Renderer process. Any CSS rules related to &lt;code&gt;prefers-color-scheme&lt;/code&gt; will be updated accordingly.</source>
          <target state="translated">라이트 / 다크 모드 사이를 수동으로 전환 하려면 &lt;code&gt;nativeTheme&lt;/code&gt; 모듈 의 &lt;a href=&quot;../api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; 속성 에서 원하는 모드를 설정하면됩니다 . 이 속성의 값은 렌더러 프로세스로 전파됩니다. &lt;code&gt;prefers-color-scheme&lt;/code&gt; 과 관련된 모든 CSS 규칙이 그에 따라 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="08abf6625066282c15d1acd36b4977905bbaab83" translate="yes" xml:space="preserve">
          <source>If you want to manually switch between light/dark modes, you can do this by setting the desired mode in the &lt;a href=&quot;api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; property of the &lt;code&gt;nativeTheme&lt;/code&gt; module. This property's value will be propagated to your Renderer process. Any CSS rules related to &lt;code&gt;prefers-color-scheme&lt;/code&gt; will be updated accordingly.</source>
          <target state="translated">라이트 / 다크 모드 사이를 수동으로 전환 하려면 &lt;code&gt;nativeTheme&lt;/code&gt; 모듈 의 &lt;a href=&quot;api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; 속성 에서 원하는 모드를 설정하면됩니다 . 이 속성의 값은 렌더러 프로세스로 전파됩니다. &lt;code&gt;prefers-color-scheme&lt;/code&gt; 과 관련된 모든 CSS 규칙이 그에 따라 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="42b6556ac745af25c9b3f90c599d87788c581b57" translate="yes" xml:space="preserve">
          <source>If you want to receive a single response from the main process, like the result of a method call, consider using &lt;a href=&quot;#ipcrendererinvokechannel-args&quot;&gt;&lt;code&gt;ipcRenderer.invoke&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메서드 호출의 결과와 같이 기본 프로세스에서 단일 응답을 받으려면 &lt;a href=&quot;#ipcrendererinvokechannel-args&quot;&gt; &lt;code&gt;ipcRenderer.invoke&lt;/code&gt; &lt;/a&gt; 사용을 고려 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f18bc349ad3d428e75b99e3c156715cfcda822c2" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">렌더러 프로세스에서 알림을 표시하려면 &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 알림 API를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b100d63742c1396902bd80576437573757e38c1" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">렌더러 프로세스에서 알림을 표시하려면 &lt;a href=&quot;tutorial/notifications&quot;&gt;HTML5 알림 API를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9767f677f83eca842bdd0bf0ecee26c0ee37f559" translate="yes" xml:space="preserve">
          <source>If you want to support displays with different DPI densities at the same time, you can put images with different sizes in the same folder and use the filename without DPI suffixes. For example:</source>
          <target state="translated">다른 DPI 밀도를 가진 디스플레이를 동시에 지원하려면 같은 폴더에 다른 크기의 이미지를 넣고 DPI 접미사없이 파일 이름을 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="328af310b89d96317c74ea0727ffffa163478fcf" translate="yes" xml:space="preserve">
          <source>If you want to target arm64, logic like this will typically select the wrong architecture, so carefully check your application and build scripts for conditions like this. In custom build and packaging scripts, you should always check the value of &lt;code&gt;npm_config_arch&lt;/code&gt; in the environment, rather than relying on the current process arch.</source>
          <target state="translated">arm64를 대상으로하려는 경우 이와 같은 로직은 일반적으로 잘못된 아키텍처를 선택하므로 애플리케이션을주의 깊게 확인하고 이와 같은 조건에 대한 스크립트를 빌드하십시오. 사용자 정의 빌드 및 패키징 스크립트 에서 현재 프로세스 아치에 의존하지 않고 항상 환경에서 &lt;code&gt;npm_config_arch&lt;/code&gt; 의 값을 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8e9880ad441ad45f30eca80c7b9d8eefd5e0f74c" translate="yes" xml:space="preserve">
          <source>If you want to use Chrome's built-in &lt;code&gt;window.open()&lt;/code&gt; implementation, set &lt;code&gt;nativeWindowOpen&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;webPreferences&lt;/code&gt; options object.</source>
          <target state="translated">Chrome의 내장 &lt;code&gt;window.open()&lt;/code&gt; 구현 을 사용하려면 &lt;code&gt;webPreferences&lt;/code&gt; 옵션 객체 에서 &lt;code&gt;nativeWindowOpen&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba8fa6ac102805baeacc0c51622c2c757699c321" translate="yes" xml:space="preserve">
          <source>If you want to use this method you must disable the builtin spellchecker when you construct the window.</source>
          <target state="translated">이 방법을 사용하려면 창을 구성 할 때 내장 된 맞춤법 검사기를 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="d493f1aaab9516cf7e42fb75df751b76f3dfd6bc" translate="yes" xml:space="preserve">
          <source>If you wish to opt-out while using Electron &amp;gt; 8.0.0, you must set the &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; key in the &lt;code&gt;Info.plist&lt;/code&gt; file to &lt;code&gt;true&lt;/code&gt;. Please note that Electron 8.0.0 and above will not let you opt-out of this theming, due to the use of the macOS 10.14 SDK.</source>
          <target state="translated">Electron&amp;gt; 8.0.0을 사용하는 동안 옵트 아웃 하려면 &lt;code&gt;Info.plist&lt;/code&gt; 파일 에서 &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; 키 를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다 . Electron 8.0.0 이상에서는 macOS 10.14 SDK를 사용하기 때문에이 테마를 옵트 아웃 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="aaffc18ff167e6c5dc5030e5cecc520f958918d9" translate="yes" xml:space="preserve">
          <source>If you would like to build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 대상을 모두 빌드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f79f8a39f57cfbd50d711f9530442b82349e7cfe" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">Electron에 &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;기고&lt;/a&gt; 하려면 기고 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0b8132204e1892fbd05ed0f66b5b9d20f26559e" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">Electron에 기여하고 싶다면 &lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;기여 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d108f8272b951fb453c00cf7b7e332e6d5ee6191" translate="yes" xml:space="preserve">
          <source>If you're appending an argument like &lt;code&gt;--switch=value&lt;/code&gt;, consider using &lt;code&gt;appendSwitch('switch', 'value')&lt;/code&gt; instead.</source>
          <target state="translated">이 같은 인수 추가하는 경우 &lt;code&gt;--switch=value&lt;/code&gt; 사용하여 고려 &lt;code&gt;appendSwitch('switch', 'value')&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="2aead26dae48a464ea0fe8f7ce84ef9144a991e3" translate="yes" xml:space="preserve">
          <source>If you're debugging something, it can be helpful to pass some extra flags to the Electron binary:</source>
          <target state="translated">무언가를 디버깅하는 경우 Electron 바이너리에 추가 플래그를 전달하는 것이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f5e9e99ea82483efec97ab08ba1a5f91453255c" translate="yes" xml:space="preserve">
          <source>If you're developing Electron and don't plan to redistribute your custom Electron build, you may skip this section.</source>
          <target state="translated">Electron을 개발 중이고 사용자 정의 Electron 빌드를 재배포하지 않으려는 경우이 섹션을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c161dc98d83657640db26ca7b021acbcc3a9d819" translate="yes" xml:space="preserve">
          <source>If you're developing a private Electron application, or if you're not publishing releases to GitHub Releases, it may be necessary to run your own update server.</source>
          <target state="translated">비공개 Electron 응용 프로그램을 개발 중이거나 GitHub 릴리스에 릴리스를 게시하지 않는 경우 자체 업데이트 서버를 실행해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b9eaf73429dbe46c500b2d1339d9d43d1c25e98" translate="yes" xml:space="preserve">
          <source>If you're looking for programming help, for answers to questions, or to join in discussion with other developers who use Electron, you can interact with the community in these locations:</source>
          <target state="translated">프로그래밍 도움말, 질문에 대한 답변 또는 Electron을 사용하는 다른 개발자와 토론에 참여하려는 경우 다음 위치에서 커뮤니티와 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="816aa1e52dc040306cac74231f09035756d3b3b4" translate="yes" xml:space="preserve">
          <source>If you're not using an integrated build pipeline like Forge or Builder, you are likely using &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, which includes &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;&lt;code&gt;electron-osx-sign&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt;&lt;code&gt;electron-notarize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Forge 또는 Builder와 같은 통합 빌드 파이프 라인을 사용하지 않는 경우 &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt; &lt;code&gt;electron-osx-sign&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt; &lt;code&gt;electron-notarize&lt;/code&gt; &lt;/a&gt; 를 포함 하는 &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; 를&lt;/a&gt; 사용하고있을 가능성 이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e4347e1c3003343233b5246cca112a5cc44df4e" translate="yes" xml:space="preserve">
          <source>If you're only setting a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">사용자 지정 제목 표시 줄을 드래그 가능으로 만 설정하는 경우 제목 표시 줄의 모든 버튼도 드래그 할 수 없도록 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="af25fd84a5e354fae9ce7065072bc6d204e2a1e1" translate="yes" xml:space="preserve">
          <source>If you're setting just a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">사용자 정의 제목 표시 줄 만 드래그 가능으로 설정하는 경우 제목 표시 줄의 모든 단추를 드래그 할 수 없도록 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="f919888e2af1bbd22b248b54264d8e7a6875359e" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;build-tools&lt;/code&gt;, appropriate &lt;code&gt;-j&lt;/code&gt; values will automatically be used for you.</source>
          <target state="translated">&lt;code&gt;build-tools&lt;/code&gt; 를 사용 하는 경우 적절한 &lt;code&gt;-j&lt;/code&gt; 값이 자동으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8bf0ecf05bfb15e4c20cec629ef1066e38a05a6f" translate="yes" xml:space="preserve">
          <source>If you're using Electron's favorite build tool, getting your application signed and notarized requires a few additions to your configuration. &lt;a href=&quot;https://electronforge.io&quot;&gt;Forge&lt;/a&gt; is a collection of the official Electron tools, using &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;&lt;code&gt;electron-osx-sign&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt;&lt;code&gt;electron-notarize&lt;/code&gt;&lt;/a&gt; under the hood.</source>
          <target state="translated">Electron이 선호하는 빌드 도구를 사용하는 경우 애플리케이션에 서명하고 공증을 받으려면 구성에 몇 가지 추가 작업이 필요합니다. &lt;a href=&quot;https://electronforge.io&quot;&gt;Forge&lt;/a&gt; 는 &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt; &lt;code&gt;electron-osx-sign&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt; &lt;code&gt;electron-notarize&lt;/code&gt; &lt;/a&gt; 사용하는 공식 전자 도구 모음입니다 .</target>
        </trans-unit>
        <trans-unit id="dfb91461f3270851f4aabc5259ff9b378e4a6391" translate="yes" xml:space="preserve">
          <source>If you're using Packager's API, you can pass &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html&quot;&gt;in configuration that both signs and notarizes your application&lt;/a&gt;.</source>
          <target state="translated">Packager의 API를 사용하는 경우 &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html&quot;&gt;애플리케이션에 서명하고 공증하는 구성을&lt;/a&gt; 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d4152d746ef76603ca3b1bace3cae203a001696" translate="yes" xml:space="preserve">
          <source>If you're using a transpiler/compiler like TypeScript, examine its configuration and ensure that you're targeting the latest ECMAScript version supported by Electron.</source>
          <target state="translated">TypeScript와 같은 트랜스 파일러 / 컴파일러를 사용하는 경우 구성을 검토하고 Electron에서 지원하는 최신 ECMAScript 버전을 대상으로하고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e6b3c3654b5d12a62eae18258917bf4a22841276" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;../development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#supported-versions&quot;&gt;지원되는&lt;/a&gt; Electron 버전 에서 버그를 발견 한 경우 &lt;a href=&quot;../development/issues&quot;&gt;이슈 트래커&lt;/a&gt; 로 버그 를 신고하십시오 .</target>
        </trans-unit>
        <trans-unit id="317fd2ed19d313febf9709098ba52a3d10a1546c" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#supported-versions&quot;&gt;지원되는&lt;/a&gt; Electron 버전 에서 버그를 발견 한 경우 &lt;a href=&quot;development/issues&quot;&gt;문제 추적기로&lt;/a&gt; 신고 해주세요 .</target>
        </trans-unit>
        <trans-unit id="83cde1678e22555cea50d9dba022038c0481c357" translate="yes" xml:space="preserve">
          <source>If your Visual Studio is installed in a directory other than the default, you'll need to set a few environment variables to point the toolchains to your installation path.</source>
          <target state="translated">Visual Studio가 기본값이 아닌 다른 디렉터리에 설치된 경우 도구 체인이 설치 경로를 가리 키도록 몇 가지 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="ac034e9dd471eb0680d3bb87436c2f1c385f1f31" translate="yes" xml:space="preserve">
          <source>If your app doesn't use any native modules, then it's really easy to create an Arm version of your app.</source>
          <target state="translated">앱에서 네이티브 모듈을 사용하지 않는 경우 앱의 Arm 버전을 만드는 것은 정말 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="a96ddbc042e498571c8e2d0224cc23cdef0e2780" translate="yes" xml:space="preserve">
          <source>If your app has its own dark mode, you should toggle it on and off in sync with the system's dark mode setting. You can do this by using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefer-color-scheme&lt;/a&gt; CSS media query.</source>
          <target state="translated">앱에 자체 다크 모드가있는 경우 시스템의 다크 모드 설정과 동기화하여 켜고 꺼야합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefer-color-scheme&lt;/a&gt; CSS 미디어 쿼리 를 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e97395a97ab0d83dd8253148219bda14c139d633" translate="yes" xml:space="preserve">
          <source>If your app has no need for navigation, you can call &lt;code&gt;event.preventDefault()&lt;/code&gt; in a &lt;a href=&quot;../api/web-contents#event-will-navigate&quot;&gt;&lt;code&gt;will-navigate&lt;/code&gt;&lt;/a&gt; handler. If you know which pages your app might navigate to, check the URL in the event handler and only let navigation occur if it matches the URLs you're expecting.</source>
          <target state="translated">앱에 탐색이 필요하지 않은 경우 &lt;a href=&quot;../api/web-contents#event-will-navigate&quot;&gt; &lt;code&gt;will-navigate&lt;/code&gt; &lt;/a&gt; 핸들러 에서 &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 할 수 있습니다 . 앱에서 탐색 할 수있는 페이지를 알고있는 경우 이벤트 핸들러에서 URL을 확인하고 예상 URL과 일치하는 경우에만 탐색이 발생하도록합니다.</target>
        </trans-unit>
        <trans-unit id="a2062767040e060b8a328bc1c68dec44cdbcfede" translate="yes" xml:space="preserve">
          <source>If your app has no need for navigation, you can call &lt;code&gt;event.preventDefault()&lt;/code&gt; in a &lt;a href=&quot;api/web-contents#event-will-navigate&quot;&gt;&lt;code&gt;will-navigate&lt;/code&gt;&lt;/a&gt; handler. If you know which pages your app might navigate to, check the URL in the event handler and only let navigation occur if it matches the URLs you're expecting.</source>
          <target state="translated">앱에 탐색이 필요하지 않은 경우 &lt;a href=&quot;api/web-contents#event-will-navigate&quot;&gt; &lt;code&gt;will-navigate&lt;/code&gt; &lt;/a&gt; 핸들러 에서 &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 할 수 있습니다 . 앱에서 탐색 할 수있는 페이지를 알고있는 경우 이벤트 핸들러에서 URL을 확인하고 예상 URL과 일치하는 경우에만 탐색이 발생하도록합니다.</target>
        </trans-unit>
        <trans-unit id="0a8670c9b3e2d32026da8aaa4611925534a8a5f6" translate="yes" xml:space="preserve">
          <source>If your app has no need to navigate or only needs to navigate to known pages, it is a good idea to limit navigation outright to that known scope, disallowing any other kinds of navigation.</source>
          <target state="translated">앱에서 탐색 할 필요가 없거나 알려진 페이지로만 탐색해야하는 경우 탐색을 알려진 범위로 완전히 제한하여 다른 종류의 탐색을 허용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="51aa10ea3c1c92e6ecacb529aa885236faf8f979" translate="yes" xml:space="preserve">
          <source>If your app is packaged with &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; you can use the &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; module, which does not require a server and allows for updates from S3, GitHub or any other static file host. This sidesteps Electron's built-in update mechanism, meaning that the rest of this documentation will not apply to &lt;code&gt;electron-builder&lt;/code&gt;'s updater.</source>
          <target state="translated">앱이 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt; 와 함께 제공 되는 경우 서버가 필요없고 S3, GitHub 또는 기타 정적 파일 호스트의 업데이트를 허용 하는 &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; 모듈을 사용할 수 있습니다 . 이것은 Electron의 내장 업데이트 메커니즘을 회피합니다. 즉,이 문서의 나머지 부분은 &lt;code&gt;electron-builder&lt;/code&gt; 의 업데이터 에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4c91aa3550c425c5f42a685ca2ce387079dc10f8" translate="yes" xml:space="preserve">
          <source>If your app runs with Electron 6.0.8 or later, you can now build it for Windows 10 on Arm. This considerably improves performance, but requires recompilation of any native modules used in your app. It may also require small fixups to your build and packaging scripts.</source>
          <target state="translated">앱이 Electron 6.0.8 이상에서 실행되는 경우 이제 Arm에서 Windows 10 용으로 빌드 할 수 있습니다. 이렇게하면 성능이 크게 향상되지만 앱에서 사용되는 모든 네이티브 모듈을 다시 컴파일해야합니다. 또한 빌드 및 패키징 스크립트를 약간 수정해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5db399cb506fdf95ca39ff6d372b347df9a8b96" translate="yes" xml:space="preserve">
          <source>If your crash ingestion server does not support compressed payloads, you can turn off compression by specifying &lt;code&gt;{ compress: false }&lt;/code&gt; in the crash reporter options.</source>
          <target state="translated">크래시 수집 서버가 압축 된 페이로드를 지원하지 않는 경우 크래시보고 옵션에서 &lt;code&gt;{ compress: false }&lt;/code&gt; 를 지정하여 압축을 끌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afeba0f50d830551f87d523923c509fa4098940d" translate="yes" xml:space="preserve">
          <source>Iframes</source>
          <target state="translated">Iframes</target>
        </trans-unit>
        <trans-unit id="25818d994b9714bdeb509e88b48c3d68d9c085b6" translate="yes" xml:space="preserve">
          <source>Iframes in Electron behave like iframes in regular browsers. An &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element in your page can show external web pages, provided that their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;Content Security Policy&lt;/a&gt; allows it. To limit the number of capabilities of a site in an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tag, it is recommended to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt;&lt;code&gt;sandbox&lt;/code&gt; attribute&lt;/a&gt; and only allow the capabilities you want to support.</source>
          <target state="translated">Electron의 Iframe은 일반 브라우저의 iframe처럼 작동합니다. 페이지의 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 요소는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;콘텐츠 보안 정책에서&lt;/a&gt; 허용하는 경우 외부 웹 페이지를 표시 할 수 있습니다. &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 태그 에서 사이트의 기능 수를 제한하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt; &lt;code&gt;sandbox&lt;/code&gt; 속성&lt;/a&gt; 을 사용하고 지원하려는 기능 만 허용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="892280c67a78254c94b3aa2e961496a6129be496" translate="yes" xml:space="preserve">
          <source>Ignore application menu shortcuts while this web contents is focused.</source>
          <target state="translated">이 웹 컨텐츠에 초점을 맞추는 동안 애플리케이션 메뉴 바로 가기를 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="424100d46b3ab239a3c2ec5d1347f13d4479a06e" translate="yes" xml:space="preserve">
          <source>Ignore the connections limit for &lt;code&gt;domains&lt;/code&gt; list separated by &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; 로 구분 된 &lt;code&gt;domains&lt;/code&gt; 목록 의 연결 제한을 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5fcbfbdcdfee026e6182c4343823188f45b893e" translate="yes" xml:space="preserve">
          <source>Ignores certificate related errors.</source>
          <target state="translated">인증서 관련 오류를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="5044799f824f27630de93bd0f1eb314c6bd530a3" translate="yes" xml:space="preserve">
          <source>Ignoring Above Advice</source>
          <target state="translated">위의 조언을 무시</target>
        </trans-unit>
        <trans-unit id="a063d213139ef01259fb2e1362319e9b85ed8247" translate="yes" xml:space="preserve">
          <source>Ignoring mouse messages makes the web page oblivious to mouse movement, meaning that mouse movement events will not be emitted. On Windows operating systems an optional parameter can be used to forward mouse move messages to the web page, allowing events such as &lt;code&gt;mouseleave&lt;/code&gt; to be emitted:</source>
          <target state="translated">마우스 메시지를 무시하면 웹 페이지가 마우스 움직임을 잊게되어 마우스 움직임 이벤트가 발생하지 않습니다. Windows 운영 체제에서 선택적 매개 변수를 사용하여 마우스 이동 메시지를 웹 페이지로 전달하여 마우스 &lt;code&gt;mouseleave&lt;/code&gt; 와 같은 이벤트를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d61395e15170593395436a90303b589946ad7e24" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">사용자에게 알림을 즉시 표시합니다. 이는 HTML5 알림 구현과 달리 &lt;code&gt;new Notification&lt;/code&gt; 인스턴스화 해도 사용자에게 즉시 표시되지 않으며 OS가 표시하기 전에이 메서드를 호출해야 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3ca349de6e383b65bb6d1144f63a50efd179453b" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, simply instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">사용자에게 알림을 즉시 표시합니다. HTML5 알림 구현과 달리 &lt;code&gt;new Notification&lt;/code&gt; 인스턴스화 해도 즉시 사용자에게 알림 이 표시되지 않으므로 OS에서 알림 을 표시하기 전에이 메서드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="ebb90ad1916e70a7d909dacfe5051f48aa4dd948" translate="yes" xml:space="preserve">
          <source>Implementing Updates in Your App</source>
          <target state="translated">앱에서 업데이트 구현</target>
        </trans-unit>
        <trans-unit id="3ac28996909d61694a5d92238b0257784c34868e" translate="yes" xml:space="preserve">
          <source>Import Electron Forge to your app folder:</source>
          <target state="translated">Electron Forge를 앱 폴더로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="35256a74cd327e48afb44264e126538252574d13" translate="yes" xml:space="preserve">
          <source>ImportError: No module named win32file</source>
          <target state="translated">ImportError : win32file이라는 모듈이 없습니다.</target>
        </trans-unit>
        <trans-unit id="80a2156ead1464481656033b2bec2df99e3e0ae6" translate="yes" xml:space="preserve">
          <source>Important Note: &lt;a href=&quot;../api/webview-tag#warning&quot;&gt;we do not recommend you to use use WebViews&lt;/a&gt;, as this tag undergoes dramatic architectural changes that may affect stability of your application. Consider switching to alternatives, like &lt;code&gt;iframe&lt;/code&gt; and Electron's &lt;code&gt;BrowserView&lt;/code&gt;, or an architecture that avoids embedded content by design.</source>
          <target state="translated">중요 참고 사항 : 이 태그는 애플리케이션의 안정성에 영향을 미칠 수있는 극적인 아키텍처 변경을 겪으므로 &lt;a href=&quot;../api/webview-tag#warning&quot;&gt;WebViews 사용을 권장하지 않습니다&lt;/a&gt; . &lt;code&gt;iframe&lt;/code&gt; 및 Electron의 &lt;code&gt;BrowserView&lt;/code&gt; 와 같은 대안 또는 디자인에 따라 포함 된 콘텐츠를 피하는 아키텍처로 전환하는 것을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="74e63e1abcc3e42be0673213a26dae4874c870fb" translate="yes" xml:space="preserve">
          <source>Important Note: &lt;a href=&quot;api/webview-tag#warning&quot;&gt;we do not recommend you to use use WebViews&lt;/a&gt;, as this tag undergoes dramatic architectural changes that may affect stability of your application. Consider switching to alternatives, like &lt;code&gt;iframe&lt;/code&gt; and Electron's &lt;code&gt;BrowserView&lt;/code&gt;, or an architecture that avoids embedded content by design.</source>
          <target state="translated">중요 참고 사항 : 이 태그는 애플리케이션의 안정성에 영향을 미칠 수있는 극적인 아키텍처 변경을 겪으므로 &lt;a href=&quot;api/webview-tag#warning&quot;&gt;WebViews 사용을 권장하지 않습니다&lt;/a&gt; . &lt;code&gt;iframe&lt;/code&gt; 및 Electron의 &lt;code&gt;BrowserView&lt;/code&gt; 와 같은 대안 또는 디자인에 따라 포함 된 콘텐츠를 피하는 아키텍처로 전환하는 것을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebcfb4906925f0491b8dbb88fb357667615aabaa" translate="yes" xml:space="preserve">
          <source>Important things to notice in the preload script:</source>
          <target state="translated">사전로드 스크립트에서 유의해야 할 사항 :</target>
        </trans-unit>
        <trans-unit id="ee896cf9660d981f601a64d656271d3fb2ecc95f" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to Chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">pkcs12 형식의 인증서를 플랫폼 인증서 저장소로 가져옵니다. &lt;code&gt;callback&lt;/code&gt; 은 가져 오기 작업 의 &lt;code&gt;result&lt;/code&gt; 로 호출되며 값 &lt;code&gt;0&lt;/code&gt; 은 성공을 나타내고 다른 값은 Chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt; 에 따라 실패를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="aeebb2ee44266da25bb466aa24666f88aee9acbf" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">pkcs12 형식의 인증서를 플랫폼 인증서 저장소로 가져옵니다. 가져 오기 작업 의 &lt;code&gt;result&lt;/code&gt; 로 &lt;code&gt;callback&lt;/code&gt; 이 호출되며, 값 &lt;code&gt;0&lt;/code&gt; 은 성공을 나타내고 다른 값은 크롬 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt; 에 따라 실패를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="80975bcad8a865f0024bd74f52d8e3210a0d2b90" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; can be leveraged to compromise the user's host. When openExternal is used with untrusted content, it can be leveraged to execute arbitrary commands.</source>
          <target state="translated">&lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; 을&lt;/a&gt; 부적절하게 사용 하면 사용자의 호스트가 손상 될 수 있습니다. openExternal을 신뢰할 수없는 콘텐츠와 함께 사용하면 임의의 명령을 실행하는 데 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9affe9f4f1f91678197560baa0de8f251f819c94" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; can be leveraged to compromise the user's host. When openExternal is used with untrusted content, it can be leveraged to execute arbitrary commands.</source>
          <target state="translated">&lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; 을&lt;/a&gt; 부적절하게 사용 하면 사용자의 호스트가 손상 될 수 있습니다. openExternal을 신뢰할 수없는 콘텐츠와 함께 사용하면 임의의 명령을 실행하는 데 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93eb2d382a0cf31181d40b8e56752440dc849dc7" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/electron/electron/blob/master/appveyor.yml&quot;&gt;appveyor.yml&lt;/a&gt;, the image is identified by the property &lt;em&gt;image&lt;/em&gt;.</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/electron/electron/blob/master/appveyor.yml&quot;&gt;appveyor.yml&lt;/a&gt; , 이미지는 속성으로 식별되는 &lt;em&gt;이미지&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="54d043d66902b54dc09febe87486b632a9ed7082" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt;, cherry-pick the patch's checksum</source>
          <target state="translated">에서 &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt; , 패치의 체크섬을 체리 - 선택</target>
        </trans-unit>
        <trans-unit id="2c0a5b221735fd5165fe6a72b7dd95e84d476107" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;script/upload.py&lt;/code&gt;, you &lt;em&gt;must&lt;/em&gt; set &lt;code&gt;ELECTRON_REPO&lt;/code&gt; to your fork (&lt;code&gt;MYORG/electron&lt;/code&gt;), especially if you are a contributor to Electron proper.</source>
          <target state="translated">에서 &lt;code&gt;script/upload.py&lt;/code&gt; , 당신은 &lt;em&gt;해야한다&lt;/em&gt; 설정 &lt;code&gt;ELECTRON_REPO&lt;/code&gt; 을 (포크에 &lt;code&gt;MYORG/electron&lt;/code&gt; 당신이 적절한 전자에 기여 특히 경우).</target>
        </trans-unit>
        <trans-unit id="21e0f6f2ce9e10de95c77dbb8d73d89c7bd736b0" translate="yes" xml:space="preserve">
          <source>In Chromium, this process is referred to as the &quot;browser process&quot;. It is renamed in Electron to avoid confusion with renderer processes.</source>
          <target state="translated">Chromium에서는이 프로세스를 &quot;브라우저 프로세스&quot;라고합니다. 렌더러 프로세스와의 혼동을 피하기 위해 Electron에서 이름이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="0ab2e606ea24062674776c9630ae58f479fc3332" translate="yes" xml:space="preserve">
          <source>In Detail</source>
          <target state="translated">상세히</target>
        </trans-unit>
        <trans-unit id="f1437a264a3475229aede1c4942b00e775cc3256" translate="yes" xml:space="preserve">
          <source>In Detail: Electron's Versioning Scheme</source>
          <target state="translated">세부 사항 : Electron의 버전 관리 체계</target>
        </trans-unit>
        <trans-unit id="48a32c72dc62cc33ed97d937cb01ff3252d0a200" translate="yes" xml:space="preserve">
          <source>In Detail: Installing Electron</source>
          <target state="translated">자세히 : 전자 설치</target>
        </trans-unit>
        <trans-unit id="f1e68e5a8bcc9c028bebf7a43fc653e2a4ab4f00" translate="yes" xml:space="preserve">
          <source>In Detail: Packaging App Source Code with asar</source>
          <target state="translated">자세히 : asar로 앱 소스 코드 패키징</target>
        </trans-unit>
        <trans-unit id="cad4f214e72fcc9d3a93d8052858e48edb7b60be" translate="yes" xml:space="preserve">
          <source>In Detail: Using Pepper Flash Plugin</source>
          <target state="translated">자세히 : Pepper Flash 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="7fada1074b55085e8425e24c9b5cdb61ea84c1ba" translate="yes" xml:space="preserve">
          <source>In Detail: Using Widevine CDM Plugin</source>
          <target state="translated">상세 : Widevine CDM 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="6cff52c011bfed815b8af07ca624dea395e580f9" translate="yes" xml:space="preserve">
          <source>In Devtron, there is a new accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">Devtron에는 앱의 페이지를 감사하고 결과를 정렬 및 필터링 할 수있는 새로운 접근성 탭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a51a157251fd6774edf5dfa74f615531dbb4aca" translate="yes" xml:space="preserve">
          <source>In Devtron, there is an accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">Devtron에는 앱의 페이지를 감사하고 결과를 정렬 및 필터링 할 수있는 접근성 탭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d0a705d0d8940c67fb021afdcf78a9ef8a67315" translate="yes" xml:space="preserve">
          <source>In Electron &amp;lt;=6, this would return a &lt;code&gt;FileList&lt;/code&gt; with a &lt;code&gt;File&lt;/code&gt; object for:</source>
          <target state="translated">Electron &amp;lt;= 6에서 이것은 다음 에 대한 &lt;code&gt;File&lt;/code&gt; 객체가 있는 &lt;code&gt;FileList&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="aaf225b3428e50bd33b903dbe40e005dff21a519" translate="yes" xml:space="preserve">
          <source>In Electron 12, &lt;code&gt;contextIsolation&lt;/code&gt; will be enabled by default. To restore the previous behavior, &lt;code&gt;contextIsolation: false&lt;/code&gt; must be specified in WebPreferences.</source>
          <target state="translated">Electron 12에서는 &lt;code&gt;contextIsolation&lt;/code&gt; 이 기본적으로 활성화됩니다. 이전 동작을 복원하려면 &lt;code&gt;contextIsolation: false&lt;/code&gt; 가 WebPreferences에 지정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="843d56141e607369d152c0036082a52a6b00e934" translate="yes" xml:space="preserve">
          <source>In Electron 7, this now returns a &lt;code&gt;FileList&lt;/code&gt; with a &lt;code&gt;File&lt;/code&gt; object for:</source>
          <target state="translated">Electron 7에서는 이제 다음 을위한 &lt;code&gt;File&lt;/code&gt; 객체 가있는 &lt;code&gt;FileList&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c2ca90c6c6031612b73199be39fe9042b1e0b8a" translate="yes" xml:space="preserve">
          <source>In Electron 8.0, IPC was changed to use the Structured Clone Algorithm, bringing significant performance improvements. To help ease the transition, the old IPC serialization algorithm was kept and used for some objects that aren't serializable with Structured Clone. In particular, DOM objects (e.g. &lt;code&gt;Element&lt;/code&gt;, &lt;code&gt;Location&lt;/code&gt; and &lt;code&gt;DOMMatrix&lt;/code&gt;), Node.js objects backed by C++ classes (e.g. &lt;code&gt;process.env&lt;/code&gt;, some members of &lt;code&gt;Stream&lt;/code&gt;), and Electron objects backed by C++ classes (e.g. &lt;code&gt;WebContents&lt;/code&gt;, &lt;code&gt;BrowserWindow&lt;/code&gt; and &lt;code&gt;WebFrame&lt;/code&gt;) are not serializable with Structured Clone. Whenever the old algorithm was invoked, a deprecation warning was printed.</source>
          <target state="translated">Electron 8.0에서 IPC는 Structured Clone Algorithm을 사용하도록 변경되어 성능이 크게 향상되었습니다. 쉽게 전환 할 수 있도록 이전 IPC 직렬화 알고리즘이 유지되고 구조화 된 클론으로 직렬화 할 수없는 일부 개체에 사용되었습니다. 특히 DOM 객체 (예 : &lt;code&gt;Element&lt;/code&gt; , &lt;code&gt;Location&lt;/code&gt; 및 &lt;code&gt;DOMMatrix&lt;/code&gt; ), C ++ 클래스 (예 : &lt;code&gt;process.env&lt;/code&gt; , &lt;code&gt;Stream&lt;/code&gt; 의 일부 멤버)에 의해 지원되는 Node.js 객체 및 C ++ 클래스 (예 : &lt;code&gt;WebContents&lt;/code&gt; , &lt;code&gt;BrowserWindow&lt;/code&gt; 및 &lt;code&gt;WebFrame&lt;/code&gt; )에 의해 지원되는 Electron 객체 는 구조적 클론으로 직렬화 할 수 없습니다. 이전 알고리즘이 호출 될 때마다 사용 중단 경고가 인쇄되었습니다.</target>
        </trans-unit>
        <trans-unit id="0014b5b3fddf891600080a2d855b30f8fff38d83" translate="yes" xml:space="preserve">
          <source>In Electron 9, using the remote module without explicitly enabling it via the &lt;code&gt;enableRemoteModule&lt;/code&gt; WebPreferences option began emitting a warning. In Electron 10, the remote module is now disabled by default. To use the remote module, &lt;code&gt;enableRemoteModule: true&lt;/code&gt; must be specified in WebPreferences:</source>
          <target state="translated">Electron 9에서 &lt;code&gt;enableRemoteModule&lt;/code&gt; WebPreferences 옵션을 통해 명시 적으로 활성화하지 않고 원격 모듈을 사용하면 경고가 발생하기 시작했습니다. Electron 10에서는 원격 모듈이 기본적으로 비활성화되어 있습니다. 원격 모듈을 사용하려면 &lt;code&gt;enableRemoteModule: true&lt;/code&gt; 를 WebPreferences에 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3e8c29e8bef6ac53ceaa6086d444a6d8b05a4dd" translate="yes" xml:space="preserve">
          <source>In Electron 9.0, the old serialization algorithm has been removed, and sending such non-serializable objects will now throw an &quot;object could not be cloned&quot; error.</source>
          <target state="translated">Electron 9.0에서는 이전 직렬화 알고리즘이 제거되었으며, 이러한 직렬화 불가능한 객체를 전송하면 &quot;객체를 복제 할 수 없습니다&quot;오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9d9c3ade67add20f1f2811f5e2457d94c8480632" translate="yes" xml:space="preserve">
          <source>In Electron there are two sets of APIs: Node APIs provided by Node.js and Web APIs provided by Chromium. Both APIs support reading files from &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">Electron에는 Node.js에서 제공하는 Node API와 Chromium에서 제공하는 Web API의 두 가지 API 세트가 있습니다. 두 API 모두 &lt;code&gt;asar&lt;/code&gt; 아카이브 에서 파일 읽기를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="0b42fd03fbe33fd66fe7eccfe82548b3608207c4" translate="yes" xml:space="preserve">
          <source>In Electron we took a very similar approach: for &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</source>
          <target state="translated">Electron에서는 매우 유사한 접근 방식을 취했습니다. &lt;code&gt;Debug&lt;/code&gt; 빌드의 경우 바이너리는 Chromium 구성 요소의 공유 라이브러리 버전에 연결되어 빠른 연결 시간을 달성합니다. 대한 &lt;code&gt;Release&lt;/code&gt; 빌드 우리가 최선의 진 크기와 성능을 가질 수 있도록 바이너리, 정적 라이브러리 버전으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="621b692306e5cced167a10f5fe89210f064bd7fd" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM library shipped with Chrome browser.</source>
          <target state="translated">Electron에서는 Chrome 브라우저와 함께 제공되는 Widevine CDM 라이브러리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="625f5fe9d865e659c090177d284e16759fd6bea9" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM plugin shipped with Chrome browser.</source>
          <target state="translated">Electron에서는 Chrome 브라우저와 함께 제공된 Widevine CDM 플러그인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1e890d94f8d23d7f8fadfe52d2a05946a4ed8db" translate="yes" xml:space="preserve">
          <source>In Electron, GUI-related modules (such as &lt;code&gt;dialog&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt; etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the &lt;code&gt;ipc&lt;/code&gt; module is necessary to send inter-process messages to the main process. With the &lt;code&gt;remote&lt;/code&gt; module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java's &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt;. An example of creating a browser window from a renderer process:</source>
          <target state="translated">Electron에서 GUI 관련 모듈 (예 : &lt;code&gt;dialog&lt;/code&gt; , &lt;code&gt;menu&lt;/code&gt; 등)은 렌더러 프로세스가 아닌 기본 프로세스에서만 사용할 수 있습니다. 렌더러 프로세스에서 이들을 사용하려면 프로세스 간 메시지를 기본 프로세스로 전송하기 위해 &lt;code&gt;ipc&lt;/code&gt; 모듈이 필요합니다. &lt;code&gt;remote&lt;/code&gt; 모듈을 사용하면 Java의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt; 와 유사한 프로세스 간 메시지를 명시 적으로 보내지 않고도 기본 프로세스 객체의 메소드를 호출 할 수 있습니다 . 렌더러 프로세스에서 브라우저 창을 만드는 예 :</target>
        </trans-unit>
        <trans-unit id="1202e6b2d57c7ee8995daa820672658a3e0badef" translate="yes" xml:space="preserve">
          <source>In Electron, Node.js and Chromium share a single V8 instance&amp;mdash;usually the version that Chromium is using. Most of the time this &lt;em&gt;just works&lt;/em&gt; but sometimes it means patching Node.js.</source>
          <target state="translated">Electron에서 Node.js와 Chromium은 단일 V8 인스턴스 (일반적으로 Chromium이 사용하는 버전)를 공유합니다. 대부분의 경우 이것이 &lt;em&gt;작동&lt;/em&gt; 하지만 때로는 Node.js 패치를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3034223aae286e52538a3884619c4b3277a74c70" translate="yes" xml:space="preserve">
          <source>In Electron, for the APIs that take images, you can pass either file paths or &lt;code&gt;NativeImage&lt;/code&gt; instances. An empty image will be used when &lt;code&gt;null&lt;/code&gt; is passed.</source>
          <target state="translated">Electron에서 이미지를 가져 오는 API의 경우 파일 경로 또는 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 전달할 수 있습니다 . &lt;code&gt;null&lt;/code&gt; 이 전달 되면 빈 이미지가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b349f269ed56f6dd1e5062315e66fa6cb87823e6" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">Electron에서 진입 점은 JavaScript 스크립트입니다. URL을 직접 제공하는 대신 브라우저 창을 수동으로 작성하고 API를 사용하여 HTML 파일을로드하십시오. 또한 응용 프로그램을 종료 할시기를 결정하려면 창 이벤트를 수신해야합니다.</target>
        </trans-unit>
        <trans-unit id="14187e1fe61b244be8f4e80375b8a9c8e7433f8a" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is always a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">Electron에서 진입 점은 항상 JavaScript 스크립트입니다. URL을 직접 제공하는 대신 수동으로 브라우저 창을 만들고 API를 사용하여 HTML 파일을로드합니다. 또한 응용 프로그램을 종료 할시기를 결정하기 위해 창 이벤트를 수신해야합니다.</target>
        </trans-unit>
        <trans-unit id="63df86282942316da6f7f2debaa8b9d3f7f75671" translate="yes" xml:space="preserve">
          <source>In Electron, the process that runs &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;main&lt;/code&gt; script is called &lt;strong&gt;the main process&lt;/strong&gt;. The script that runs in the main process can display a GUI by creating web pages. An Electron app always has one main process, but never more.</source>
          <target state="translated">Electron에서는 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;main&lt;/code&gt; 스크립트 를 실행하는 프로세스를 &lt;strong&gt;기본 프로세스&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; . 기본 프로세스에서 실행되는 스크립트는 웹 페이지를 작성하여 GUI를 표시 할 수 있습니다. Electron 앱에는 항상 하나의 주요 프로세스가 있지만 더 이상은 없습니다.</target>
        </trans-unit>
        <trans-unit id="37b502635f1118a89c49c89684115bf4576afe89" translate="yes" xml:space="preserve">
          <source>In Electron, we have several ways to communicate between the main process and renderer processes. Like &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; modules for sending messages, and the &lt;a href=&quot;../api/remote&quot;&gt;remote&lt;/a&gt; module for RPC style communication. There is also an FAQ entry on &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;how to share data between web pages&lt;/a&gt;.</source>
          <target state="translated">Electron에는 메인 프로세스와 렌더러 프로세스간에 통신하는 여러 가지 방법이 있습니다. 마찬가지로 &lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; 의&lt;/a&gt; 메시지를 보내는 모듈 및 &lt;a href=&quot;../api/remote&quot;&gt;원격&lt;/a&gt; RPC 스타일 통신을위한 모듈. &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;웹 페이지간에 데이터를 공유하는 방법&lt;/a&gt; 에 대한 FAQ 항목도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a0df57b98ac115921f2ce0f52c5cef0f577cce5" translate="yes" xml:space="preserve">
          <source>In NW.js the main entry point of an application is a web page or a JS script. You specify a html or js file in the &lt;code&gt;package.json&lt;/code&gt; and it is opened in a browser window as the application's main window (in case of an html entrypoint) or the script is executed.</source>
          <target state="translated">NW.js에서 응용 프로그램의 주요 진입 점은 웹 페이지 또는 JS 스크립트입니다. &lt;code&gt;package.json&lt;/code&gt; 에 html 또는 js 파일을 지정 하면 응용 프로그램의 기본 창 (html 진입 점의 경우)으로 스크립트 창이 열리거나 스크립트가 실행될 때 브라우저 창에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="3b25c7d6b9167a18b1209e7e736a5bf9ae9c224f" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the &lt;code&gt;libuv&lt;/code&gt; loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/lib/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">NW.js에서 웹 페이지의 노드 통합은 작동을 위해 Chromium 패치가 필요하지만 Electron에서는 Chromium 해킹을 피하기 위해 &lt;code&gt;libuv&lt;/code&gt; 루프를 각 플랫폼의 메시지 루프와 통합하는 다른 방법을 선택했습니다 . 그 방법 은 &lt;a href=&quot;https://github.com/electron/electron/tree/master/lib/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt; 코드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8afc68a42dc2274d210dd3bcb2dc90a34aef201" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the libuv loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">NW.js에서 웹 페이지의 노드 통합에는 Chromium 패치가 필요하지만 Electron에서는 Chromium 해킹을 피하기 위해 libuv 루프를 각 플랫폼의 메시지 루프와 통합하는 다른 방법을 선택했습니다. 그 방법에 대해서는 &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt; 코드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89e76feba5d7bd3189916cba504f396c76fbbd79" translate="yes" xml:space="preserve">
          <source>In NW.js, the main entry point of an application can be an HTML web page. In that case, NW.js will open the given entry point in a browser window.</source>
          <target state="translated">NW.js에서 애플리케이션의 주요 진입 점은 HTML 웹 페이지가 될 수 있습니다. 이 경우 NW.js는 브라우저 창에서 주어진 진입 점을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="ef45d1cc4d48650ae9b6257f804949f11c64aa48" translate="yes" xml:space="preserve">
          <source>In Node.js and Electron, each running process has a &lt;code&gt;process&lt;/code&gt; object. This object is a global that provides information about, and control over, the current process. As a global, it is always available to applications without using require().</source>
          <target state="translated">Node.js 및 Electron에서 실행중인 각 프로세스에는 &lt;code&gt;process&lt;/code&gt; 객체가 있습니다. 이 객체는 현재 프로세스에 대한 정보를 제공하고 현재 프로세스를 제어하는 ​​글로벌입니다. 전역 적으로 require ()를 사용하지 않고도 응용 프로그램에서 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06a2578fe47cfb3fe4a65aa1152d38d6988feb9c" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behavior may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">프레임이없는 창에서는 드래그 동작이 텍스트 선택과 충돌 할 수 있습니다. 예를 들어 제목 표시 줄을 끌 때 실수로 제목 표시 줄의 텍스트를 선택할 수 있습니다. 이를 방지하려면 다음과 같이 드래그 가능한 영역 내에서 텍스트 선택을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="fd36a9edb29970d52de8da21b0c6a4fa6aa74ad9" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behaviour may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">프레임이없는 창에서 드래그 동작은 텍스트 선택과 충돌 할 수 있습니다. 예를 들어 제목 표시 줄을 끌 때 실수로 제목 표시 줄에서 텍스트를 선택할 수 있습니다. 이를 방지하려면 다음과 같이 드래그 가능한 영역 내에서 텍스트 선택을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0993be2098f3d2d823e3f842cc460f60cc7dc51f" translate="yes" xml:space="preserve">
          <source>In a web page, files in an archive can be requested with the &lt;code&gt;file:&lt;/code&gt; protocol. Like the Node API, &lt;code&gt;asar&lt;/code&gt; archives are treated as directories.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;file:&lt;/code&gt; protocol을 사용하여 아카이브의 파일을 요청할 수 있습니다 . Node API와 마찬가지로 &lt;code&gt;asar&lt;/code&gt; 아카이브는 디렉토리로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="4ebbe08fb4030b6ca8614a5b9c6fc5a297df17c6" translate="yes" xml:space="preserve">
          <source>In addition to changing the architecture, you can also specify the platform (e.g., &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, etc.) using the &lt;code&gt;--platform&lt;/code&gt; flag:</source>
          <target state="translated">아키텍처를 변경하는 것 외에도 &lt;code&gt;--platform&lt;/code&gt; 플래그를 사용하여 플랫폼 (예 : &lt;code&gt;win32&lt;/code&gt; , &lt;code&gt;linux&lt;/code&gt; 등)을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad38744a2cd250359b7a0139989ab544e5c30bfd" translate="yes" xml:space="preserve">
          <source>In addition to these methods, the child window implements &lt;code&gt;window.opener&lt;/code&gt; object with no properties and a single method.</source>
          <target state="translated">이러한 메서드 외에도 자식 창은 속성과 단일 메서드없이 &lt;code&gt;window.opener&lt;/code&gt; 객체를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="af93f2d22fd400e353ce8610b9a34ece6504c189" translate="yes" xml:space="preserve">
          <source>In addition, carefully examine the libraries you use. Are they really necessary? &lt;code&gt;jQuery&lt;/code&gt;, for example, was such a success that many of its features are now part of the &lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;standard JavaScript feature set available&lt;/a&gt;.</source>
          <target state="translated">또한 사용하는 라이브러리를주의 깊게 검토하십시오. 정말 필요한가요? 예를 들어, &lt;code&gt;jQuery&lt;/code&gt; 는 많은 기능이 현재 &lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;사용 가능한 표준 JavaScript 기능 세트의&lt;/a&gt; 일부가 될 정도로 성공했습니다 .</target>
        </trans-unit>
        <trans-unit id="eb6b63b8a09f8385b54d78c9291e4e4e947d73b7" translate="yes" xml:space="preserve">
          <source>In addition, the exe is launched inside the appx model - meaning that it can use many of the APIs available to the Universal Windows Platform. To gain even more capabilities, an Electron app can pair up with an invisible UWP background task launched together with the &lt;code&gt;exe&lt;/code&gt; - sort of launched as a sidekick to run tasks in the background, receive push notifications, or to communicate with other UWP applications.</source>
          <target state="translated">또한 exe는 appx 모델 내에서 시작되므로 Universal Windows 플랫폼에서 사용할 수있는 많은 API를 사용할 수 있습니다. 훨씬 더 많은 기능을 얻기 위해 Electron 앱은 백그라운드에서 작업 을 실행하거나 푸시 알림을 받거나 다른 UWP 응용 프로그램과 통신하기위한 조수로 시작된 일종의 &lt;code&gt;exe&lt;/code&gt; 와 함께 시작된 보이지 않는 UWP 백그라운드 작업과 쌍을 이룰 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f65725b617730ca820bb32d3b898b98d459f50d" translate="yes" xml:space="preserve">
          <source>In addition, there are some subtle differences on each platform:</source>
          <target state="translated">또한 각 플랫폼마다 약간의 차이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2fa843ea25b67d9f9124439c22087532ac27ad" translate="yes" xml:space="preserve">
          <source>In all cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. We recommend building on Ubuntu 16.04 (or the current LTS).</source>
          <target state="translated">모든 경우에 &lt;code&gt;snapcraft&lt;/code&gt; 도구가 설치되어 있어야합니다. Ubuntu 16.04 (또는 현재 LTS)를 빌드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88eb93dee96b67a7045b74d8bbad7d7a85a57f79" translate="yes" xml:space="preserve">
          <source>In almost all cases, these errors are the result of network problems and not actual issues with the &lt;code&gt;electron&lt;/code&gt; npm package. Errors like &lt;code&gt;ELIFECYCLE&lt;/code&gt;, &lt;code&gt;EAI_AGAIN&lt;/code&gt;, &lt;code&gt;ECONNRESET&lt;/code&gt;, and &lt;code&gt;ETIMEDOUT&lt;/code&gt; are all indications of such network problems. The best resolution is to try switching networks, or wait a bit and try installing again.</source>
          <target state="translated">거의 모든 경우에 이러한 오류는 &lt;code&gt;electron&lt;/code&gt; npm 패키지 의 실제 문제가 아니라 네트워크 문제의 결과입니다 . &lt;code&gt;ELIFECYCLE&lt;/code&gt; , &lt;code&gt;EAI_AGAIN&lt;/code&gt; , &lt;code&gt;ECONNRESET&lt;/code&gt; 및 &lt;code&gt;ETIMEDOUT&lt;/code&gt; 과 같은 오류 는 모두 해당 네트워크 문제를 나타냅니다. 가장 좋은 해결책은 네트워크 전환을 시도하거나 잠시 기다렸다가 다시 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6ad054ebef9c59dced1a818e17f21ba9bc619b06" translate="yes" xml:space="preserve">
          <source>In an ideal world, your application wouldn't need the network to operate at all. To get there, you must understand what resources your app is downloading - and how large those resources are.</source>
          <target state="translated">이상적인 세상에서는 애플리케이션이 작동하는 데 네트워크가 전혀 필요하지 않습니다. 여기에 도달하려면 앱에서 다운로드하는 리소스와 해당 리소스의 크기를 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d02c9a4ff99b3ea1cc26fddc98762a6d30daa6e" translate="yes" xml:space="preserve">
          <source>In general, all the upstream projects we work with are friendly folks and are often happy to accept refactorings that allow the code in question to be compatible with both Electron and the upstream project. (See e.g. &lt;a href=&quot;https://chromium-review.googlesource.com/c/chromium/src/+/1637040&quot;&gt;this&lt;/a&gt; change in Chromium, which allowed us to remove a patch that did the same thing, or &lt;a href=&quot;https://github.com/nodejs/node/pull/22110&quot;&gt;this&lt;/a&gt; change in Node, which was a no-op for Node but fixed a bug in Electron.) &lt;strong&gt;We should aim to upstream changes whenever we can, and avoid indefinite-lifetime patches&lt;/strong&gt;.</source>
          <target state="translated">일반적으로 우리가 작업하는 모든 업스트림 프로젝트는 친근한 사람들이며 문제의 코드가 Electron 및 업스트림 프로젝트와 모두 호환 될 수 있도록하는 리팩토링을 받아들이는 것을 좋아합니다. (참조 예 : &lt;a href=&quot;https://chromium-review.googlesource.com/c/chromium/src/+/1637040&quot;&gt;이&lt;/a&gt; 같은 일을했다 패치, 또는 삭제 해 허용 크롬의 변화, &lt;a href=&quot;https://github.com/nodejs/node/pull/22110&quot;&gt;이&lt;/a&gt; 노드의 어떤 조합 없었다 노드의 변화를하지만, 전자의 버그가 수정되었습니다.) &lt;strong&gt;우리는 변화 할 때마다 상류하는 것을 목표로한다 우리는 무기한 패치를 피할 수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d0732649820524d2f9b56ebe8bdbd3d628fa8ed9" translate="yes" xml:space="preserve">
          <source>In macOS 10.14 Mojave, Apple introduced a new &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;system-wide dark mode&lt;/a&gt; for all macOS computers. If your Electron app has a dark mode, you can make it follow the system-wide dark mode setting using &lt;a href=&quot;../api/native-theme&quot;&gt;the &lt;code&gt;nativeTheme&lt;/code&gt; api&lt;/a&gt;.</source>
          <target state="translated">macOS 10.14 Mojave에서 Apple 은 모든 macOS 컴퓨터에 대해 새로운 &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;시스템 차원의 다크 모드&lt;/a&gt; 를 도입했습니다 . Electron 앱에 다크 모드가있는 &lt;a href=&quot;../api/native-theme&quot;&gt;경우 &lt;code&gt;nativeTheme&lt;/code&gt; api를&lt;/a&gt; 사용하여 시스템 전체의 다크 모드 설정을 따르도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98a90ed219735fb98579fd275bd2b96c22bda9fd" translate="yes" xml:space="preserve">
          <source>In macOS 10.14 Mojave, Apple introduced a new &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;system-wide dark mode&lt;/a&gt; for all macOS computers. If your Electron app has a dark mode, you can make it follow the system-wide dark mode setting using &lt;a href=&quot;api/native-theme&quot;&gt;the &lt;code&gt;nativeTheme&lt;/code&gt; api&lt;/a&gt;.</source>
          <target state="translated">macOS 10.14 Mojave에서 Apple 은 모든 macOS 컴퓨터에 대해 새로운 &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;시스템 차원의 다크 모드&lt;/a&gt; 를 도입했습니다 . Electron 앱에 다크 모드가있는 &lt;a href=&quot;api/native-theme&quot;&gt;경우 &lt;code&gt;nativeTheme&lt;/code&gt; api를&lt;/a&gt; 사용하여 시스템 전체의 다크 모드 설정을 따르도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4d458bea96941dcf11682801623ac1a7fcc8de1d" translate="yes" xml:space="preserve">
          <source>In macOS 10.15 Catalina, Apple introduced a new &quot;automatic&quot; dark mode option for all macOS computers. In order for the &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; and &lt;code&gt;Tray&lt;/code&gt; APIs to work correctly in this mode on Catalina, you need to use Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt;, or set &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your &lt;code&gt;Info.plist&lt;/code&gt; file for older versions. Both &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;Electron Packager&lt;/a&gt; and &lt;a href=&quot;https://www.electronforge.io/&quot;&gt;Electron Forge&lt;/a&gt; have a &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#darwindarkmodesupport&quot;&gt;&lt;code&gt;darwinDarkModeSupport&lt;/code&gt; option&lt;/a&gt; to automate the &lt;code&gt;Info.plist&lt;/code&gt; changes during app build time.</source>
          <target state="translated">macOS 10.15 Catalina에서 Apple은 모든 macOS 컴퓨터에 대한 새로운 &quot;자동&quot;다크 모드 옵션을 도입했습니다. 위해서는 &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; 및 &lt;code&gt;Tray&lt;/code&gt; 카탈리나에이 모드에서 제대로 작동하려면 API를, 당신은 전자 사용해야 &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt; , 또는 설정 &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; 을 에 &lt;code&gt;false&lt;/code&gt; 당신에 &lt;code&gt;Info.plist&lt;/code&gt; 이전 버전에 대한 파일. 모두 &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;전자 포장기&lt;/a&gt; 및 &lt;a href=&quot;https://www.electronforge.io/&quot;&gt;전자 포지&lt;/a&gt; 이 &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#darwindarkmodesupport&quot;&gt; &lt;code&gt;darwinDarkModeSupport&lt;/code&gt; 의 옵션&lt;/a&gt; 자동화 &lt;code&gt;Info.plist&lt;/code&gt; 응용 프로그램 빌드 시간 동안 변경.</target>
        </trans-unit>
        <trans-unit id="9fdc7b529c347177c59ced6d1fe81f09d890e189" translate="yes" xml:space="preserve">
          <source>In many server contexts, startup time is virtually irrelevant. A Node.js server that requires information about all ports is likely actually &quot;more performant&quot; if it loads all required information into memory whenever the server boots at the benefit of serving requests faster. The module discussed in this example is not a &quot;bad&quot; module. Electron apps, however, should not be loading, parsing, and storing in memory information that it does not actually need.</source>
          <target state="translated">많은 서버 컨텍스트에서 시작 시간은 사실상 관련이 없습니다. 모든 포트에 대한 정보를 필요로하는 Node.js 서버는 요청을 더 빨리 처리 할 수 ​​있다는 이점으로 서버가 부팅 될 때마다 필요한 모든 정보를 메모리에로드하면 실제로 &quot;더 나은 성능&quot;을 발휘할 수 있습니다. 이 예제에서 설명하는 모듈은 &quot;불량&quot;모듈이 아닙니다. 그러나 Electron 앱은 실제로 필요하지 않은 정보를 메모리에로드, 파싱 및 저장해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="5ae6c186beda7cc6d08d8d308468631bd4cc4a2f" translate="yes" xml:space="preserve">
          <source>In most cases, you should do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;ready&lt;/code&gt; 이벤트 핸들러 에서 모든 작업을 수행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="195f1e249de6eef85e19604ad6504295fedc65f1" translate="yes" xml:space="preserve">
          <source>In most cases, you should just do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;ready&lt;/code&gt; 이벤트 핸들러 에서 모든 작업을 수행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1c30404658bd31cd20bc5c1bc6d71f1b96198591" translate="yes" xml:space="preserve">
          <source>In normal browsers, web pages usually run in a sandboxed environment and are not allowed access to native resources. Electron users, however, have the power to use Node.js APIs in web pages allowing lower level operating system interactions.</source>
          <target state="translated">일반 브라우저에서 웹 페이지는 일반적으로 샌드 박스 환경에서 실행되며 기본 리소스에 액세스 할 수 없습니다. 그러나 전자 사용자는 웹 페이지에서 Node.js API를 사용하여 더 낮은 수준의 운영 체제 상호 작용을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fc60981dde25a35adbe4ec9983a99588cfe1f9d" translate="yes" xml:space="preserve">
          <source>In opposition to traditional UWP apps, packaged apps currently need to undergo a manual verification process, for which you can apply &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;here&lt;/a&gt;. In the meantime, all users will be able to install your package by double-clicking it, so a submission to the store might not be necessary if you're looking for an easier installation method. In managed environments (usually enterprises), the &lt;code&gt;Add-AppxPackage&lt;/code&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet can be used to install it in an automated fashion&lt;/a&gt;.</source>
          <target state="translated">기존 UWP 앱과 달리 패키지 앱은 현재 수동 확인 프로세스를 거쳐야하며 &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;여기에서&lt;/a&gt; 신청할 수 있습니다 . 그 동안 모든 사용자가 패키지를 두 번 클릭하여 패키지를 설치할 수 있으므로보다 쉬운 설치 방법을 찾고 있다면 상점에 제출하지 않아도됩니다. 관리되는 환경 (일반적으로 기업)에서 &lt;code&gt;Add-AppxPackage&lt;/code&gt; &lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet을 사용하여 자동화 된 방식으로 설치할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17b33efa1e685afd83e922c98be3ad7481f7164a" translate="yes" xml:space="preserve">
          <source>In order for extra notification buttons to work on macOS your app must meet the following criteria.</source>
          <target state="translated">macOS에서 추가 알림 단추가 작동하려면 앱이 다음 기준을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="f6e38a957812e9a29ac5c2d2a05f0c16dc841b4a" translate="yes" xml:space="preserve">
          <source>In order to avoid the complexity of building all of Chromium, Electron uses &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt;&lt;code&gt;libchromiumcontent&lt;/code&gt;&lt;/a&gt; to access Chromium's Content API. &lt;code&gt;libchromiumcontent&lt;/code&gt; is a single shared library that includes the Chromium Content module and all of its dependencies. Users don't need a powerful machine to build Electron.</source>
          <target state="translated">Electron은 모든 Chromium을 구축하는 복잡성을 피하기 위해 &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt; &lt;code&gt;libchromiumcontent&lt;/code&gt; &lt;/a&gt; 를 사용 하여 Chromium의 Content API에 액세스합니다. &lt;code&gt;libchromiumcontent&lt;/code&gt; 는 Chromium Content 모듈 및 모든 해당 종속성을 포함하는 단일 공유 라이브러리입니다. 사용자는 Electron을 구축하기 위해 강력한 기계가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="002692fd3df32049bef10d52e5d3b2dc239a4e1a" translate="yes" xml:space="preserve">
          <source>In order to be able to use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">Windows에서이 기능을 사용하려면 응용 프로그램을 문서 파일 형식의 처리기로 등록해야합니다. 그렇지 않으면 파일을 추가 한 후에도 파일이 JumpList에 나타나지 않습니다. &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;응용 프로그램 등록&lt;/a&gt; 에서 모든 응용 프로그램 등록 에 대한 정보를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6017616527bbb59b4e2288b1e97e6e007923f3e5" translate="yes" xml:space="preserve">
          <source>In order to keep Electron small (file size) and sustainable (the spread of dependencies and APIs) the project limits the scope of the core project.</source>
          <target state="translated">Electron을 작게 (파일 크기) 유지하고 지속 가능 (종속성 및 API의 확산)을 유지하기 위해 프로젝트는 핵심 프로젝트의 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="9e93969c6ab6312de3ab1b1363ee597f5e3607f7" translate="yes" xml:space="preserve">
          <source>In order to land, a pull request needs to be reviewed and approved by at least one Electron Code Owner and pass CI. After that, if there are no objections from other contributors, the pull request can be merged.</source>
          <target state="translated">착륙하기 위해서는 최소 한 명의 전자 코드 소유자가 풀 요청을 검토하고 승인하고 CI를 통과해야합니다. 그런 다음 다른 기고자로부터 이의가 없으면 풀 요청을 병합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5038620daa1de28b5745b004ae182c0ced6a13fd" translate="yes" xml:space="preserve">
          <source>In order to run your package, your users will need Windows 10 with the so-called &quot;Anniversary Update&quot; - details on how to update Windows can be found &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">패키지를 실행하려면 사용자에게 소위 &quot;기념일 업데이트&quot;가 포함 된 Windows 10이 필요합니다. Windows 업데이트 방법에 대한 자세한 내용은 &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c6f45a1b0186062309a1e7bd6d2d0cdccc0365" translate="yes" xml:space="preserve">
          <source>In order to satisfy all requirements for app sandboxing, the following modules have been disabled in the MAS build:</source>
          <target state="translated">앱 샌드 박싱에 대한 모든 요구 사항을 충족하기 위해 MAS 빌드에서 다음 모듈이 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="2aa9e4b60cc508d244b171006423246637a0b33f" translate="yes" xml:space="preserve">
          <source>In other words, when the sandbox is enabled, the renderers can only make changes to the system by delegating tasks to the main process via IPC. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;Here's&lt;/a&gt; more information about the sandbox.</source>
          <target state="translated">즉, 샌드 박스가 활성화되면 렌더러는 IPC를 통해 작업을 주 프로세스에 위임하여 시스템을 변경할 수만 있습니다. 샌드 박스에 대한 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;다음과 같습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd975f4fa62673732c3cd8653b8c7c96a7c5a05e" translate="yes" xml:space="preserve">
          <source>In particular, it's important that:</source>
          <target state="translated">특히 다음 사항이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="3c4a5f97c64371ef090e35ab1c804d051479e9b8" translate="yes" xml:space="preserve">
          <source>In sandboxed renderers the &lt;code&gt;process&lt;/code&gt; object contains only a subset of the APIs:</source>
          <target state="translated">샌드 박스 렌더러에서 &lt;code&gt;process&lt;/code&gt; 객체는 API의 하위 집합 만 포함합니다.</target>
        </trans-unit>
        <trans-unit id="96067b815c9925760b852202bccc2c19a357cb7a" translate="yes" xml:space="preserve">
          <source>In short, a seemingly excellent module written primarily for Node.js servers running Linux might be bad news for your app's performance. In this particular example, the correct solution was to use no module at all, and to instead use connectivity checks included in later versions of Chromium.</source>
          <target state="translated">간단히 말해, Linux를 실행하는 Node.js 서버를 위해 주로 작성된 겉보기에 뛰어난 모듈은 앱 성능에 나쁜 소식 일 수 있습니다. 이 특정 예에서 올바른 해결책은 모듈을 전혀 사용하지 않고 대신 Chromium의 이후 버전에 포함 된 연결 확인을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ca822e94dc51a45c6a07d596e0cce39c754e99f4" translate="yes" xml:space="preserve">
          <source>In short, allocate resources &quot;just in time&quot; rather than allocating them all when your app starts.</source>
          <target state="translated">간단히 말해, 앱이 시작될 때 리소스를 모두 할당하는 대신 &quot;적시에&quot;리소스를 할당하십시오.</target>
        </trans-unit>
        <trans-unit id="3ac12e0a1bc0bd8fd393384502411912c0f8b64c" translate="yes" xml:space="preserve">
          <source>In some cases, the &lt;code&gt;NSImageName&lt;/code&gt; doesn't match its string representation; one example of this is &lt;code&gt;NSFolderImageName&lt;/code&gt;, whose string representation would actually be &lt;code&gt;NSFolder&lt;/code&gt;. Therefore, you'll need to determine the correct string representation for your image before passing it in. This can be done with the following:</source>
          <target state="translated">어떤 경우에는 &lt;code&gt;NSImageName&lt;/code&gt; 이 문자열 표현과 일치하지 않습니다. 이에 대한 한 가지 예는 &lt;code&gt;NSFolderImageName&lt;/code&gt; 이며, 문자열 표현은 실제로 &lt;code&gt;NSFolder&lt;/code&gt; 입니다. 따라서 이미지를 전달하기 전에 이미지에 대한 올바른 문자열 표현을 결정해야합니다. 다음을 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c2cd704ac091728bfdf7057438f3689c7afa99c" translate="yes" xml:space="preserve">
          <source>In some cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. Instructions to install &lt;code&gt;snapcraft&lt;/code&gt; for your particular distribution are available &lt;a href=&quot;https://snapcraft.io/docs/installing-snapcraft&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">어떤 경우에는 &lt;code&gt;snapcraft&lt;/code&gt; 도구를 설치해야합니다. 특정 배포판을위한 &lt;code&gt;snapcraft&lt;/code&gt; 설치 지침 은 &lt;a href=&quot;https://snapcraft.io/docs/installing-snapcraft&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="add54ea319b290d6512f35724ac20b939ad3c263" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;release&lt;/code&gt; branch, verify that the release's files have been created:</source>
          <target state="translated">에서 &lt;code&gt;release&lt;/code&gt; 지점, 릴리스의 파일이 생성되었는지 확인합니다 :</target>
        </trans-unit>
        <trans-unit id="7c0c7f9705ecc67c5757806bf976f1d5c21275cc" translate="yes" xml:space="preserve">
          <source>In the Main process(&lt;code&gt;main.js&lt;/code&gt; file), expand the received event with a path to the file that is being dragged and an icon:</source>
          <target state="translated">메인 프로세스 ( &lt;code&gt;main.js&lt;/code&gt; 파일)에서 드래그되는 파일의 경로와 아이콘으로 수신 된 이벤트를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="1b05098558dc728fe3efe959d2682edcea24e265" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has Node.js disabled and can communicate only via IPC. The use of this option stops Electron from creating a Node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behavior (by default Electron creates a &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">위 코드에서 생성 된 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 는 Node.js가 비활성화되어 있으며 IPC를 통해서만 통신 할 수 있습니다. 이 옵션을 사용하면 Electron이 렌더러에서 Node.js 런타임을 생성하지 못합니다. 또한이 새 창 내에서 &lt;code&gt;window.open&lt;/code&gt; 은 기본 동작을 따릅니다 (기본적으로 Electron은 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 를&lt;/a&gt; 만들고 &lt;code&gt;window.open&lt;/code&gt; 을 통해 이에 대한 프록시를 반환합니다 ).</target>
        </trans-unit>
        <trans-unit id="7dfe6082e8695706fcfeace5667ec9a145a1ae11" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has Node.js disabled and can communicate only via IPC. The use of this option stops Electron from creating a Node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behavior (by default Electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">위 코드에서 생성 된 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 는 Node.js가 비활성화되어 있으며 IPC를 통해서만 통신 할 수 있습니다. 이 옵션을 사용하면 Electron이 렌더러에서 Node.js 런타임을 생성하지 못합니다. 또한이 새 창에서 &lt;code&gt;window.open&lt;/code&gt; 은 기본 동작을 따릅니다 (기본적으로 Electron은 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 를&lt;/a&gt; 만들고 &lt;code&gt;window.open&lt;/code&gt; 을 통해 이에 대한 프록시를 반환합니다 ).</target>
        </trans-unit>
        <trans-unit id="af7489da9de75d590f13f01cdc9c2b48b8b1b424" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has node.js disabled and can communicate only via IPC. The use of this option stops electron from creating a node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behaviour (by default electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">위 코드에서 생성 된 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 는 node.js가 비활성화되어 있으며 IPC를 통해서만 통신 할 수 있습니다. 이 옵션을 사용하면 전자가 렌더러에서 node.js 런타임을 작성하지 못하게됩니다. 또한이 새 창 &lt;code&gt;window.open&lt;/code&gt; 내 에서 기본 동작을 따릅니다 (기본적으로 전자는 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 를&lt;/a&gt; 만들고 &lt;code&gt;window.open&lt;/code&gt; 통해 프록시를 반환합니다 ).</target>
        </trans-unit>
        <trans-unit id="b6ba7cf42dca8a64f3fe2f70864af6cff82eb338" translate="yes" xml:space="preserve">
          <source>In the above example, we're doing a lot of work that's being executed as soon as the file is loaded. Do we need to get parsed files right away? Could we do this work a little later, when &lt;code&gt;getParsedFiles()&lt;/code&gt; is actually called?</source>
          <target state="translated">위의 예에서는 파일이로드되는 즉시 실행되는 많은 작업을 수행하고 있습니다. 파싱 ​​된 파일을 즉시 가져와야합니까? 나중에 &lt;code&gt;getParsedFiles()&lt;/code&gt; 가 실제로 호출 될 때이 작업을 수행 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="dd8a333887f050bcaedb3788895a13b656bcd030" translate="yes" xml:space="preserve">
          <source>In the app, you'd need to write a simple handler for the RPC calls:</source>
          <target state="translated">앱에서 RPC 호출을위한 간단한 핸들러를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="8caa74ae2f7b42454248de05b842fae89740cc2b" translate="yes" xml:space="preserve">
          <source>In the browser window some HTML APIs like &lt;code&gt;requestFullScreen&lt;/code&gt; can only be invoked by a gesture from the user. Setting &lt;code&gt;userGesture&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will remove this limitation.</source>
          <target state="translated">브라우저 창에서 &lt;code&gt;requestFullScreen&lt;/code&gt; 과 같은 일부 HTML API 는 사용자의 제스처로만 호출 할 수 있습니다. &lt;code&gt;userGesture&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 이 제한이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="db52ca544e2d57543b2ade9a5da326a4317aad0a" translate="yes" xml:space="preserve">
          <source>In the case of a corrupted release with broken CI machines, we might have to re-upload the binaries for an already published release.</source>
          <target state="translated">CI 시스템이 손상된 손상된 릴리스의 경우 이미 게시 된 릴리스의 바이너리를 다시 업로드해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="65aff7f4d7a69e63a0aa2edd13236128f00b4935" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">위의 예에서 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;win&lt;/code&gt; 은 모두 원격 개체 였고 &lt;code&gt;new BrowserWindow&lt;/code&gt; 는 렌더러 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 개체를 만들지 않았습니다 . 대신 메인 프로세스에 &lt;code&gt;BrowserWindow&lt;/code&gt; 개체를 만들고 렌더러 프로세스에 해당 원격 개체, 즉 &lt;code&gt;win&lt;/code&gt; 개체를 반환했습니다 .</target>
        </trans-unit>
        <trans-unit id="b49bd272eea5595d87ad5e2fe5c9c9b77041719c" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">위의 예제에서 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;win&lt;/code&gt; 은 모두 원격 객체였으며 &lt;code&gt;new BrowserWindow&lt;/code&gt; 는 렌더러 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 객체를 만들지 않았습니다 . 대신 기본 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 객체를 만들고 렌더러 프로세스에서 해당 원격 객체, 즉 &lt;code&gt;win&lt;/code&gt; 객체를 반환했습니다 .</target>
        </trans-unit>
        <trans-unit id="5074e68733d141bd5c5268004d80f2dacb17e13e" translate="yes" xml:space="preserve">
          <source>In the following example preload script, the later loaded website will have access to a &lt;code&gt;window.readConfig()&lt;/code&gt; method, but no Node.js features.</source>
          <target state="translated">다음 예제 사전로드 스크립트에서 나중에로드 된 웹 사이트는 &lt;code&gt;window.readConfig()&lt;/code&gt; 메소드에 액세스 할 수 있지만 Node.js 기능은 없습니다.</target>
        </trans-unit>
        <trans-unit id="414aa2ce159660a2aa729cc43d3da5d88f9d1618" translate="yes" xml:space="preserve">
          <source>In the following list, look for the VHD path name you got from Appveyor and then click on it.</source>
          <target state="translated">다음 목록에서 Appveyor에서 가져온 VHD 경로 이름을 찾은 다음 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="51b18288d03cd733f92b99f7141ed513739578d6" translate="yes" xml:space="preserve">
          <source>In the testing framework Spectron, you can now audit each window and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag in your application. For example:</source>
          <target state="translated">테스트 프레임 워크 Spectron에서 이제 응용 프로그램의 각 창과 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그를 감사 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1870f312bcf3ffda327f15732c46a2c3d4906421" translate="yes" xml:space="preserve">
          <source>In this example, on the author's machine, we saw that loading &lt;code&gt;request&lt;/code&gt; took almost half a second, whereas &lt;code&gt;node-fetch&lt;/code&gt; took dramatically less memory and less than 50ms.</source>
          <target state="translated">이 예에서는 작성자의 컴퓨터에서로드 &lt;code&gt;request&lt;/code&gt; 에 거의 0.5 초가 소요 되는 반면 &lt;code&gt;node-fetch&lt;/code&gt; 는 메모리와 50ms 미만을 극적으로 적게 사용하는 것을 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="0428ea8dae54fd10d81ecab5e1a0475b4a54689c" translate="yes" xml:space="preserve">
          <source>In this mode, you will be able to pass &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;cli options&lt;/a&gt; to Node.js as you would when running the normal Node.js executable, with the exception of the following flags:</source>
          <target state="translated">이 모드에서는 다음 플래그를 제외하고 일반 Node.js 실행 파일을 실행할 때처럼 &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;cli 옵션&lt;/a&gt; 을 Node.js 에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e109cb7fec054143478442624f3e7c73d3fd7ca9" translate="yes" xml:space="preserve">
          <source>In traditional Node.js development, we're used to putting all our &lt;code&gt;require()&lt;/code&gt; statements at the top. If you're currently writing your Electron application using the same strategy &lt;em&gt;and&lt;/em&gt; are using sizable modules that you do not immediately need, apply the same strategy and defer loading to a more opportune time.</source>
          <target state="translated">전통적인 Node.js 개발에서는 모든 &lt;code&gt;require()&lt;/code&gt; 문을 맨 위에 두는 데 익숙합니다 . 현재 동일한 전략을 사용하여 Electron 애플리케이션을 작성 &lt;em&gt;하고&lt;/em&gt; 있고 즉시 필요하지 않은 크기가 큰 모듈을 사용 &lt;em&gt;하고&lt;/em&gt; 있다면 동일한 전략을 적용하고 더 적절한 시간에 로딩을 연기하십시오.</target>
        </trans-unit>
        <trans-unit id="1afa241f36d4217397dfec694d2d1215891c4684" translate="yes" xml:space="preserve">
          <source>In web pages, calling native GUI related APIs is not allowed because managing native GUI resources in web pages is very dangerous and it is easy to leak resources. If you want to perform GUI operations in a web page, the renderer process of the web page must communicate with the main process to request that the main process perform those operations.</source>
          <target state="translated">웹 페이지에서 네이티브 GUI 관련 API를 호출하는 것은 허용되지 않습니다. 웹 페이지에서 네이티브 GUI 리소스를 관리하는 것은 매우 위험하고 리소스를 유출하기 쉽습니다. 웹 페이지에서 GUI 작업을 수행하려면 웹 페이지의 렌더러 프로세스가 기본 프로세스와 통신하여 기본 프로세스가 해당 작업을 수행하도록 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4d0e6c3e076cd6a699c60ad2b55fac7991337f3" translate="yes" xml:space="preserve">
          <source>In your renderer process, handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to your main process.</source>
          <target state="translated">렌더러 프로세스에서 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트를 처리 하고 정보를 기본 프로세스로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="fdaff53585816691fa4fe5c4dfd5b6e20360de51" translate="yes" xml:space="preserve">
          <source>In-App Purchase (macOS)</source>
          <target state="translated">인앱 구매 (macOS)</target>
        </trans-unit>
        <trans-unit id="fcd33c35409267d26cf472bd170c7b44220760a0" translate="yes" xml:space="preserve">
          <source>In-app purchases on Mac App Store.</source>
          <target state="translated">Mac App Store에서 인앱 구매.</target>
        </trans-unit>
        <trans-unit id="01b9ecc39af8da56d7570c19b704feba4523b1b2" translate="yes" xml:space="preserve">
          <source>IncomingMessage</source>
          <target state="translated">IncomingMessage</target>
        </trans-unit>
        <trans-unit id="8ae7bbd6069f22c66e50f126098e0615acb15d2b" translate="yes" xml:space="preserve">
          <source>Increase the capturer count by one. The page is considered visible when its browser window is hidden and the capturer count is non-zero. If you would like the page to stay hidden, you should ensure that &lt;code&gt;stayHidden&lt;/code&gt; is set to true.</source>
          <target state="translated">포획 자 수를 하나씩 늘립니다. 페이지는 브라우저 창이 숨겨져 있고 캡처 프로그램 수가 0이 아닌 경우 보이는 것으로 간주됩니다. 페이지를 숨긴 상태로 유지하려면 &lt;code&gt;stayHidden&lt;/code&gt; 이 true로 설정되어 있는지 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="13e9abca83628630f255579050b5c29afcf1c1f8" translate="yes" xml:space="preserve">
          <source>Indicates that response body has ended.</source>
          <target state="translated">응답 본문이 종료되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="52427cb53936c651c26d729f75fb470f91b58cab" translate="yes" xml:space="preserve">
          <source>Indicates the creation time of the application. The time is represented as number of milliseconds since epoch. It returns null if it is unable to get the process creation time.</source>
          <target state="translated">응용 프로그램의 생성 시간을 나타냅니다. 시간은 epoch 이후의 밀리 초 수로 표시됩니다. 프로세스 생성 시간을 가져올 수없는 경우 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2339b8ad3625abec50c5fec9ccfe1b4c0adb5b6e" translate="yes" xml:space="preserve">
          <source>Indonesian</source>
          <target state="translated">Indonesian</target>
        </trans-unit>
        <trans-unit id="41081854a1a02c1d897267422d71fc0bdd712cd1" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating.</source>
          <target state="translated">탐색하지 않고 &lt;code&gt;url&lt;/code&gt; 에서 리소스 다운로드를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="56476d27ce24389481bda3f5413b884651cdc573" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating. The &lt;code&gt;will-download&lt;/code&gt; event of &lt;code&gt;session&lt;/code&gt; will be triggered.</source>
          <target state="translated">탐색하지 않고 &lt;code&gt;url&lt;/code&gt; 에서 리소스 다운로드를 시작합니다 . &lt;code&gt;session&lt;/code&gt; 의 &lt;code&gt;will-download&lt;/code&gt; 이벤트 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="a9d29bf7f006a5266a616bc9d1b7d546179c25a2" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt;. The API will generate a &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 에서 리소스 다운로드를 시작합니다 . API는 &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; 이벤트 로 액세스 할 수 있는 &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="4377654b3e841e66a0e4552cf5bb0040f9de006d" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt;. The API will generate a &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 에서 리소스 다운로드를 시작합니다 . API는 &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; 이벤트 로 액세스 할 수 있는 &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="e5e155b477fc18106c133eb62ec3dc25ba846ec1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page and returns a unique key for the inserted stylesheet.</source>
          <target state="translated">CSS를 현재 웹 페이지에 삽입하고 삽입 된 스타일 시트에 대한 고유 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f0dfd5f0e298aa47a48b7d8cbced854e9d4e2a6d" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page.</source>
          <target state="translated">현재 웹 페이지에 CSS를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="b7e359bfdb20491c11d50453bcef336f0fdfbaf1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the guest page.</source>
          <target state="translated">게스트 페이지에 CSS를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="0c476f7fcf5175b2a06fb617a213f4c2f93acbb8" translate="yes" xml:space="preserve">
          <source>Input Method Editor. A program that allows users to enter characters and symbols not found on their keyboard. For example, this allows users of Latin keyboards to input Chinese, Japanese, Korean and Indic characters.</source>
          <target state="translated">입력기 편집기. 사용자가 키보드에서 찾을 수없는 문자와 기호를 입력 할 수있는 프로그램입니다. 예를 들어 라틴 키보드 사용자는 중국어, 일본어, 한국어 및 인도 문자를 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eae9d550a0ef49777e521e2538dd1118f800cf8" translate="yes" xml:space="preserve">
          <source>InputEvent Object</source>
          <target state="translated">InputEvent 객체</target>
        </trans-unit>
        <trans-unit id="24599b3c6ab1eb1b9bce61098d2b77a02aba0f64" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;text&lt;/code&gt; to the focused element.</source>
          <target state="translated">포커스가있는 요소에 &lt;code&gt;text&lt;/code&gt; 를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="d8520f87c739aa4e579f6880a74b33685e460efb" translate="yes" xml:space="preserve">
          <source>Inserts the &lt;code&gt;menuItem&lt;/code&gt; to the &lt;code&gt;pos&lt;/code&gt; position of the menu.</source>
          <target state="translated">&lt;code&gt;menuItem&lt;/code&gt; 을 메뉴 의 &lt;code&gt;pos&lt;/code&gt; 위치에 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="b18ed5b223e999f64c1ccaea33926bea7922e4c2" translate="yes" xml:space="preserve">
          <source>Inside Application</source>
          <target state="translated">내부 응용</target>
        </trans-unit>
        <trans-unit id="67efb1af030003bc2e370e914ca924f2de6b7ff4" translate="yes" xml:space="preserve">
          <source>Inspect Node &lt;a href=&quot;https://github.com/electron/node&quot;&gt;repo&lt;/a&gt; to see what patches upstream Node used with their v8 after bumping its version</source>
          <target state="translated">노드 &lt;a href=&quot;https://github.com/electron/node&quot;&gt;리포지토리&lt;/a&gt; 를 검사 하여 업스트림 노드가 v8에 어떤 패치를 사용했는지 확인한 후</target>
        </trans-unit>
        <trans-unit id="fc94ce67e51fa7ea969dbaee7bf90130edb770e8" translate="yes" xml:space="preserve">
          <source>Inspects the shared worker based on its ID.</source>
          <target state="translated">ID를 기반으로 공유 작업자를 검사합니다.</target>
        </trans-unit>
        <trans-unit id="a092085f2c9866b83b7573ea43eba27961c12c78" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="9ddc5636813d8d39f423ad830592f346531bb89f" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;additional build dependencies&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;추가 빌드 종속성&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="c751bdc0defb0bcc2e0fb38801b511d7b20b126b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;, via npm: &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</source>
          <target state="translated">npm을 통해 &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt; 설치 : &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c86a288868b37cbc3c18d110b12eb7f17faf0a40" translate="yes" xml:space="preserve">
          <source>Install Electron</source>
          <target state="translated">Electron 설치</target>
        </trans-unit>
        <trans-unit id="af7e1eda11eb3ba6c4a6534ba4973cba0e85d446" translate="yes" xml:space="preserve">
          <source>Install Electron via &lt;code&gt;npm install electron&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm install electron&lt;/code&gt; 을 통해 Electron 설치</target>
        </trans-unit>
        <trans-unit id="59def4f4c416f5ec11a55b89f42f9c04dda49d4c" translate="yes" xml:space="preserve">
          <source>Install Visual Studio 2015/2017 (to get the signing utility)</source>
          <target state="translated">서명 유틸리티를 얻으려면 Visual Studio 2015/2017을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="60f4317addf48a766ff06d21d0528f663490057f" translate="yes" xml:space="preserve">
          <source>Install Visual Studio to get the signing utility (the free &lt;a href=&quot;https://visualstudio.microsoft.com/vs/community/&quot;&gt;Community Edition&lt;/a&gt; is enough)</source>
          <target state="translated">서명 유틸리티를 얻으려면 Visual Studio를 설치하십시오 (무료 &lt;a href=&quot;https://visualstudio.microsoft.com/vs/community/&quot;&gt;Community Edition&lt;/a&gt; 이면 충분 함).</target>
        </trans-unit>
        <trans-unit id="b0a08fb068315f0e1c7ff6b9951586a86d940581" translate="yes" xml:space="preserve">
          <source>Install it in Chrome browser.</source>
          <target state="translated">Chrome 브라우저에 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="c1cf7ea58fe26587ea330bcf3383edd9081a470a" translate="yes" xml:space="preserve">
          <source>Install the module:</source>
          <target state="translated">모듈을 설치하십시오 :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="49badac7f3152085c3ccdfbd4aec9ad26474d44b" translate="yes" xml:space="preserve">
          <source>Installing Electron</source>
          <target state="translated">전자 설치</target>
        </trans-unit>
        <trans-unit id="01530047c3eb49aada2802a1ac3a4c313f6cdb3e" translate="yes" xml:space="preserve">
          <source>Installing modules and rebuilding for Electron</source>
          <target state="translated">Electron을위한 모듈 설치 및 재 구축</target>
        </trans-unit>
        <trans-unit id="93e1f66298d41be94ea2442fc257bf8bcd4c056b" translate="yes" xml:space="preserve">
          <source>Instance Events</source>
          <target state="translated">인스턴스 이벤트</target>
        </trans-unit>
        <trans-unit id="061c23b642f541c97df74623e463e371a73cf5e7" translate="yes" xml:space="preserve">
          <source>Instance Events must be listed under an &lt;code&gt;### Instance Events&lt;/code&gt; chapter.</source>
          <target state="translated">인스턴스 이벤트는 &lt;code&gt;### Instance Events&lt;/code&gt; 장 아래에 나열되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="227bff69876b172aeee6752f9b003b6b9627ce6c" translate="yes" xml:space="preserve">
          <source>Instance Properties</source>
          <target state="translated">인스턴스 속성</target>
        </trans-unit>
        <trans-unit id="61916ab2e3433d6ffbb8ce1a774ea4d4be15cff4" translate="yes" xml:space="preserve">
          <source>Instance Properties must be listed under an &lt;code&gt;### Instance Properties&lt;/code&gt; chapter.</source>
          <target state="translated">인스턴스 속성은 &lt;code&gt;### Instance Properties&lt;/code&gt; 장 아래에 나열되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8362b73eb793173f5bd3a1f478b69e06eecb033b" translate="yes" xml:space="preserve">
          <source>Instance methods and properties</source>
          <target state="translated">인스턴스 메소드 및 속성</target>
        </trans-unit>
        <trans-unit id="d7bdfca8d5860d3e348d16366e2d6d47432a9a96" translate="yes" xml:space="preserve">
          <source>Instance properties must start with &quot;A [Property Type] ...&quot;</source>
          <target state="translated">인스턴스 속성은 &quot;A [Property Type] ...&quot;으로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="20d33549668c4d09ea6ef7d6c02f07fdfb9c25a1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;Cookies&lt;/code&gt; class are accessed by using &lt;code&gt;cookies&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 클래스의 인스턴스는 &lt;code&gt;Session&lt;/code&gt; 의 &lt;code&gt;cookies&lt;/code&gt; 속성을 사용하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="11b9e088e579b4a97a72bdefa7d3eb659ab722d1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;ServiceWorkers&lt;/code&gt; class are accessed by using &lt;code&gt;serviceWorkers&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceWorkers&lt;/code&gt; 클래스의 인스턴스는 &lt;code&gt;Session&lt;/code&gt; 의 &lt;code&gt;serviceWorkers&lt;/code&gt; 속성을 사용하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="ba9374c6843f9596e1f6431ed4d21e4162f669de" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;WebRequest&lt;/code&gt; class are accessed by using the &lt;code&gt;webRequest&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 클래스의 인스턴스는 &lt;code&gt;Session&lt;/code&gt; 의 &lt;code&gt;webRequest&lt;/code&gt; 속성을 사용하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="554911029299375829269fa9162db763e8344c4b" translate="yes" xml:space="preserve">
          <source>Instantiates a special &quot;other items proxy&quot;, which nests TouchBar elements inherited from Chromium at the space indicated by the proxy. By default, this proxy is added to each TouchBar at the end of the input. For more information, see the AppKit docs on &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nstouchbaritemidentifierotheritemsproxy&quot;&gt;NSTouchBarItemIdentifierOtherItemsProxy&lt;/a&gt;</source>
          <target state="translated">프록시가 나타내는 공간에 Chromium에서 상속 된 TouchBar 요소를 중첩하는 특수 &quot;기타 항목 프록시&quot;를 인스턴스화합니다. 기본적으로이 프록시는 입력 끝에있는 각 TouchBar에 추가됩니다. 자세한 내용은 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nstouchbaritemidentifierotheritemsproxy&quot;&gt;NSTouchBarItemIdentifierOtherItemsProxy&lt;/a&gt; 에 대한 AppKit 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fda6d9fe352fc67e7751222e8711cad163e6c057" translate="yes" xml:space="preserve">
          <source>Instantiates a special &quot;other items proxy&quot;, which nests TouchBar elements inherited from Chromium at the space indicated by the proxy. By default, this proxy is added to each TouchBar at the end of the input. For more information, see the AppKit docs on NSTouchBarItemIdentifierOtherItemsProxy Note: Only one instance of this class can be added per TouchBar.</source>
          <target state="translated">프록시가 나타내는 공간에 Chromium에서 상속 된 TouchBar 요소를 중첩하는 특수 &quot;기타 항목 프록시&quot;를 인스턴스화합니다. 기본적으로이 프록시는 입력 끝에있는 각 TouchBar에 추가됩니다. 자세한 내용은 NSTouchBarItemIdentifierOtherItemsProxy의 AppKit 문서를 참조하십시오. 참고 :이 클래스의 인스턴스는 TouchBar 당 하나만 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d001b3aa791829d21434a552dac73a8360b747df" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;https://github.com/electron/electron&lt;/code&gt;, you can use your own fork here (something like &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/electron&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;https://github.com/electron/electron&lt;/code&gt; 대신 여기에서 자신의 포크를 사용할 수 있습니다 ( &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/electron&lt;/code&gt; 과 같은 것 ).</target>
        </trans-unit>
        <trans-unit id="16270f869f551f34445155955c881cfa37616466" translate="yes" xml:space="preserve">
          <source>Instructs Electron to bypass the proxy server for the given semi-colon-separated list of hosts. This flag has an effect only if used in tandem with &lt;code&gt;--proxy-server&lt;/code&gt;.</source>
          <target state="translated">주어진 세미콜론으로 구분 된 호스트 목록에 대해 프록시 서버를 무시하도록 Electron에 지시합니다. 이 플래그는 &lt;code&gt;--proxy-server&lt;/code&gt; 와 함께 사용하는 경우에만 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6d2d7b468b24a48b35ded8843a5bd10903effd" translate="yes" xml:space="preserve">
          <source>Intercept and modify the contents of a request at various stages of its lifetime.</source>
          <target state="translated">수명주기의 다양한 단계에서 요청 내용을 가로 채고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="ec8f8e0bfb9aa904007cb6480a58a60f41047d71" translate="yes" xml:space="preserve">
          <source>Intercepting events in the main process</source>
          <target state="translated">메인 프로세스에서 이벤트 가로 채기</target>
        </trans-unit>
        <trans-unit id="ee6f75429405860b71bcefde477ecaf5969a2348" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새로운 처리기로 사용하여 &lt;code&gt;Buffer&lt;/code&gt; 를 응답으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="be11c9050ebdb78d8293caf5907f221e92288ad5" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새로운 처리기로 사용하여 &lt;code&gt;String&lt;/code&gt; 을 응답으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="637ab926f95aaf76690f739533e2ba5eb9714a4e" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a file as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새 핸들러로 사용하여 파일을 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c92f450a734d695eb0e09f842f66dc4c08221e1d" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a new HTTP request as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 handler를 새로운 HTTP 요청을 응답으로 보내는 프로토콜의 새로운 &lt;code&gt;handler&lt;/code&gt; 로 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="afee89207b5b63f5ec244d5599398760f821a96d" translate="yes" xml:space="preserve">
          <source>Interface description language. Write function signatures and data types in a format that can be used to generate interfaces in Java, C++, JavaScript, etc.</source>
          <target state="translated">인터페이스 설명 언어. Java, C ++, JavaScript 등의 인터페이스를 생성하는 데 사용할 수있는 형식으로 함수 서명 및 데이터 유형을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="06fac3d23961645b440211045f3413e391d15637" translate="yes" xml:space="preserve">
          <source>Interlingua</source>
          <target state="translated">Interlingua</target>
        </trans-unit>
        <trans-unit id="f9ce090f6b4e6812a2a33054e170fe0befa25fea" translate="yes" xml:space="preserve">
          <source>Internal implementation</source>
          <target state="translated">내부 구현</target>
        </trans-unit>
        <trans-unit id="2b7835ef37ebd3e0fc33cd0b04741ea8f2f7dedf" translate="yes" xml:space="preserve">
          <source>Introduction of &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;conventional commit messages&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;기존 커밋 메시지&lt;/a&gt; 소개</target>
        </trans-unit>
        <trans-unit id="41573236e6fbc505575a3621ccf0f5fca3ab0ac6" translate="yes" xml:space="preserve">
          <source>Introduction of semver-compliant &lt;code&gt;-beta&lt;/code&gt; tags</source>
          <target state="translated">semver 준수의 소개 &lt;code&gt;-beta&lt;/code&gt; 태그</target>
        </trans-unit>
        <trans-unit id="c9bc3dddf21efcfe1e523f2f2860c73024488699" translate="yes" xml:space="preserve">
          <source>Invalidates the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity.</source>
          <target state="translated">현재 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 사용자 활동을 무효화합니다 .</target>
        </trans-unit>
        <trans-unit id="8b99998c625d0b440d99f2fb14b8c59a1c9c7445" translate="yes" xml:space="preserve">
          <source>Invoke the updater from your app's main process file:</source>
          <target state="translated">앱의 기본 프로세스 파일에서 업데이터를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="98e37149c6765bae15ead855a09f4ad812f8e179" translate="yes" xml:space="preserve">
          <source>Invokes the print dialog on the child window.</source>
          <target state="translated">자식 창에서 인쇄 대화 상자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5d8e0045883199ce732e034c1958412c32625a78" translate="yes" xml:space="preserve">
          <source>IpcMainEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcMainEvent 객체는 &lt;code&gt;Event&lt;/code&gt; 확장합니다.</target>
        </trans-unit>
        <trans-unit id="07e9fbe62dfb276d54579222fc7b60502c07078a" translate="yes" xml:space="preserve">
          <source>IpcMainEvent Object extends Event</source>
          <target state="translated">IpcMainEvent 객체는 이벤트를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="2c4c5f35a2c2e47174a786858d499c7cf486975b" translate="yes" xml:space="preserve">
          <source>IpcMainEvent object</source>
          <target state="translated">IpcMainEvent 객체</target>
        </trans-unit>
        <trans-unit id="fec4a5c254373af96ba79d5ba125dc5218f3bf78" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcMainInvokeEvent 개체가 &lt;code&gt;Event&lt;/code&gt; 확장합니다.</target>
        </trans-unit>
        <trans-unit id="a90d910c9b70f6a833226a55d5b513419289fdec" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent Object extends Event</source>
          <target state="translated">IpcMainInvokeEvent 개체가 이벤트를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="cccc257b87213115e00c47772ffb89e407aacaaf" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent object</source>
          <target state="translated">IpcMainInvokeEvent 객체</target>
        </trans-unit>
        <trans-unit id="b62ba674eed713d7e230008a90a92bced392a498" translate="yes" xml:space="preserve">
          <source>IpcRendererEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcRendererEvent 객체는 &lt;code&gt;Event&lt;/code&gt; 확장합니다.</target>
        </trans-unit>
        <trans-unit id="311c42a75f9b891c26d9c8973c9fbfa247e7fb33" translate="yes" xml:space="preserve">
          <source>IpcRendererEvent Object extends Event</source>
          <target state="translated">IpcRendererEvent 객체는 이벤트를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="2bddaea174340270be5a83fe7aed2e32aa628eba" translate="yes" xml:space="preserve">
          <source>Irish</source>
          <target state="translated">Irish</target>
        </trans-unit>
        <trans-unit id="bb860a8fb79ef836fe43c8401ef19b5d319dfdc3" translate="yes" xml:space="preserve">
          <source>Is anyone using the API?</source>
          <target state="translated">API를 사용하는 사람이 있습니까?</target>
        </trans-unit>
        <trans-unit id="d72f416aa575437886003d40111c597233a5b888" translate="yes" xml:space="preserve">
          <source>Is the API fulfilling the original proposed usecases, does it have any gaps?</source>
          <target state="translated">API가 원래 제안 된 사용 사례를 충족합니까? 공백이 있습니까?</target>
        </trans-unit>
        <trans-unit id="db50cd83394f392eeb9b4f8789ad0a098bcbaebd" translate="yes" xml:space="preserve">
          <source>Isolated World</source>
          <target state="translated">고립 된 세계</target>
        </trans-unit>
        <trans-unit id="56403f13c63fe5f09bf79f86c5ea1a90addc46f8" translate="yes" xml:space="preserve">
          <source>Isolation For Untrusted Content</source>
          <target state="translated">신뢰할 수없는 콘텐츠 격리</target>
        </trans-unit>
        <trans-unit id="3a83c1973a29789e42e9e79148e2ce42769de102" translate="yes" xml:space="preserve">
          <source>Issue HTTP/HTTPS requests using Chromium's native networking library</source>
          <target state="translated">Chromium의 기본 네트워킹 라이브러리를 사용하여 HTTP / HTTPS 요청 발행</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="6cd8dd2ee0aacb1c1c58c1806551c4e2b82b59a5" translate="yes" xml:space="preserve">
          <source>Issues In Electron</source>
          <target state="translated">전자 문제</target>
        </trans-unit>
        <trans-unit id="71df46d765d8779ff3c19865c5451195c37e4d80" translate="yes" xml:space="preserve">
          <source>It can be used by the preload script to add removed Node global symbols back to the global scope when node integration is turned off:</source>
          <target state="translated">노드 통합이 해제 된 경우 사전로드 스크립트에서이를 사용하여 제거 된 노드 글로벌 기호를 글로벌 범위에 다시 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5496611a4bb2d2ad0c6f82becb4734760e9dc457" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;BrowserWindow&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에서 설정 한 기본 속성으로 새 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7391d87c0a1a2fe7c0ab00835f38a129f96ed5e0" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;Notification&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 으로 설정된 고유 속성으로 새 &lt;code&gt;Notification&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e93ddd5bab35c5101381bb6a00ab5c7573470386" translate="yes" xml:space="preserve">
          <source>It directly exposes a powerful API without any kind of argument filtering. This would allow any website to send arbitrary IPC messages which you do not want to be possible. The correct way to expose IPC-based APIs would instead be to provide one method per IPC message.</source>
          <target state="translated">어떤 종류의 인수 필터링없이 강력한 API를 직접 노출합니다. 이렇게하면 모든 웹 사이트에서 사용자가 원하지 않는 임의의 IPC 메시지를 보낼 수 있습니다. IPC 기반 API를 노출하는 올바른 방법은 대신 IPC 메시지 당 하나의 방법을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9172bf0f438712c9c3dd7ca8795d16a4bee8eaa8" translate="yes" xml:space="preserve">
          <source>It has since become a popular tool used by open source developers, startups, and established companies. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;See who is building on Electron&lt;/a&gt;.</source>
          <target state="translated">이후 오픈 소스 개발자, 신생 기업 및 기존 회사에서 널리 사용되는 도구가되었습니다. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;Electron에서 누가 구축하고 있는지 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f85d3bf8bcd7441256bc10040e9eefdc09d6b25" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt; from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">기본 프로세스에서 새 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt; 작성을 제어하고 해당 webPreferences가 보안 기능을 사용하지 않는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bb8febdeb30c9ebc1be10f82081b038fbe9cfab2" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tags from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">기본 프로세스에서 새 &lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그 생성을 제어하고 해당 webPreferences가 보안 기능을 비활성화하지 않는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9e8b236e77dcb919d04a3d3457a47a0fc9adfff6" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tags from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">기본 프로세스에서 새 &lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그 생성을 제어하고 해당 webPreferences가 보안 기능을 비활성화하지 않는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="964da9fea4bbafe96ef1db6a86f52b43e7414473" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as a later commit in the same pull request contains a meaningful encompassing semantic message.</source>
          <target state="translated">동일한 풀 요청의 이후의 커밋에 의미있는 포괄적 인 의미 론적 메시지가 포함되어있는 경우, 풀 요청의 일부 커밋이 시맨틱 접두사를 포함하지 않는 것이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="99e6b0fd7f9cb07760e0c7a12bf305b87ded1292" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as the pull request title contains a meaningful encompassing semantic message.</source>
          <target state="translated">풀 리퀘스트 제목에 의미있는 포괄 시맨틱 메시지가 포함되어있는 한, 풀 리퀘스트의 일부 커밋은 시맨틱 접두사를 포함하지 않는 것이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6513c3b2261075b5414276dd4b7c570732e84c37" translate="yes" xml:space="preserve">
          <source>It is also not emitted during in-page navigation, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 탐색 중에도 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="3c815f956f73b5874b39eadfd911308e44d74e4a" translate="yes" xml:space="preserve">
          <source>It is also not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 내비게이션에서도 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="f8da655fcd87f5210eafad0aaf91c55a5fb6c0b3" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to modify the &lt;code&gt;atom.gyp&lt;/code&gt; file and have a clean rebuild.</source>
          <target state="translated">제품 이름을 변경하고 소스에서 빌드하여 Electron의 브랜드를 변경할 수도 있습니다. 이렇게하려면 &lt;code&gt;atom.gyp&lt;/code&gt; 파일 을 수정하고 새로 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2ff743cbfcce9aa6f420e40188018854b31b03d" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to set the build argument corresponding to the product name (&lt;code&gt;electron_product_name = &quot;YourProductName&quot;&lt;/code&gt;) in the &lt;code&gt;args.gn&lt;/code&gt; file and rebuild.</source>
          <target state="translated">제품 이름을 변경하고 소스에서 빌드하여 Electron을 리 브랜딩 할 수도 있습니다. 이렇게하려면 &lt;code&gt;args.gn&lt;/code&gt; 파일 에서 제품 이름 ( &lt;code&gt;electron_product_name = &quot;YourProductName&quot;&lt;/code&gt; )에 해당하는 빌드 인수를 설정 하고 다시 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2c2d0778e9b8a7250b6f58b96b6a278aba4e5f2" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">메인 프로세스에서 렌더러 프로세스로 메시지를 보낼 수도 있습니다 . 자세한 내용 은 &lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d8df1867931cc05780a7151ac1bb5b025a291ead" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">메인 프로세스에서 렌더러 프로세스로 메시지를 보낼 수도 있습니다 . 자세한 내용 은 &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4b32930b704c36912af4b6b8a8b75fd0314d1679" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">기본 프로세스에서 렌더러 프로세스로 메시지를 보낼 수도 있습니다 . 자세한 내용 은 &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0b91cede13154f320e8b22c673ef890bdace73b6" translate="yes" xml:space="preserve">
          <source>It is best to specify &lt;code&gt;role&lt;/code&gt; for any menu item that matches a standard role, rather than trying to manually implement the behavior in a &lt;code&gt;click&lt;/code&gt; function. The built-in &lt;code&gt;role&lt;/code&gt; behavior will give the best native experience.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 기능 에서 동작을 수동으로 구현하지 않고 표준 역할과 일치하는 모든 메뉴 항목에 대한 &lt;code&gt;role&lt;/code&gt; 을 지정하는 것이 가장 좋습니다 . 기본 제공 &lt;code&gt;role&lt;/code&gt; 동작은 최상의 기본 경험을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dd1e1c98b6db6cc4fd46785c694a1841f6fdf1e7" translate="yes" xml:space="preserve">
          <source>It is essential to copy the VM because if you spin up a VM against an image that image cannot at the same time be used by AppVeyor.</source>
          <target state="translated">이미지에 대해 VM을 스핀 업하면 해당 이미지를 AppVeyor에서 동시에 사용할 수 없으므로 VM을 복사해야합니다.</target>
        </trans-unit>
        <trans-unit id="70390302435eeaafda262133a9e687cdd3b70aea" translate="yes" xml:space="preserve">
          <source>It is highly recommended to format your changed C++ code before opening pull requests, which will save you and the reviewers' time.</source>
          <target state="translated">풀 요청을 열기 전에 변경된 C ++ 코드를 포맷하여 사용자와 검토 자의 시간을 절약하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7830172c1d0f8fe69e4f504337f2d2af361b31bd" translate="yes" xml:space="preserve">
          <source>It is important to note that this option alone won't enable the OS-enforced sandbox. To enable this feature, the &lt;code&gt;--enable-sandbox&lt;/code&gt; command-line argument must be passed to electron, which will force &lt;code&gt;sandbox: true&lt;/code&gt; for all &lt;code&gt;BrowserWindow&lt;/code&gt; instances.</source>
          <target state="translated">이 옵션만으로는 OS 적용 샌드 박스를 사용할 수 없습니다. 이 기능을 사용하려면 &lt;code&gt;--enable-sandbox&lt;/code&gt; 명령 줄 인수를 전자에 전달해야합니다 . &lt;code&gt;BrowserWindow&lt;/code&gt; 모든 BrowserWindow 인스턴스에 대해 &lt;code&gt;sandbox: true&lt;/code&gt; 가됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc521905c727fd3e0d69803c031fa725b88fa0cf" translate="yes" xml:space="preserve">
          <source>It is important to remember that the security of your Electron application is the result of the overall security of the framework foundation (&lt;em&gt;Chromium&lt;/em&gt;, &lt;em&gt;Node.js&lt;/em&gt;), Electron itself, all NPM dependencies and your code. As such, it is your responsibility to follow a few important best practices:</source>
          <target state="translated">Electron 애플리케이션의 보안은 프레임 워크 기반 ( &lt;em&gt;Chromium&lt;/em&gt; , &lt;em&gt;Node.js&lt;/em&gt; ), Electron 자체, 모든 NPM 종속성 및 코드 의 전반적인 보안의 결과라는 점을 기억하는 것이 중요 합니다. 따라서 몇 가지 중요한 모범 사례를 따르는 것은 귀하의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="06b0757ae0de67fc7189e624df8530d408b9ad1e" translate="yes" xml:space="preserve">
          <source>It is not possible to have the OS sandbox active only for some renderers, if &lt;code&gt;--enable-sandbox&lt;/code&gt; is enabled, normal electron windows cannot be created.</source>
          <target state="translated">일부 렌더러에 대해서만 OS 샌드 박스를 활성화 할 수 없습니다. &lt;code&gt;--enable-sandbox&lt;/code&gt; 를 활성화하면 일반 전자 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="26eccb2be6647f437eee41fc998f1735f2fdfb59" translate="yes" xml:space="preserve">
          <source>It is paramount that you disable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">원격 컨텐츠를로드 하는 렌더러 ( &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt; ) 에서 Node.js 통합을 사용하지 않는 것이 가장 중요합니다 . 목표는 원격 콘텐츠에 부여하는 권한을 제한하여 공격자가 웹 사이트에서 JavaScript를 실행할 수있는 능력을 얻는 사용자에게 해를 입히는 것을 더욱 어렵게 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d86d6d8cd3673155bb33cd4fc8e7c4f37210ae45" translate="yes" xml:space="preserve">
          <source>It is paramount that you do not enable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">원격 콘텐츠를로드 하는 렌더러 ( &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; ) 에서 Node.js 통합을 활성화하지 않는 것이 가장 중요합니다 . 목표는 원격 콘텐츠에 부여하는 권한을 제한하여 공격자가 웹 사이트에서 JavaScript를 실행할 수있는 능력을 확보 한 경우 공격자가 사용자에게 해를 끼치는 것을 극적으로 어렵게 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9dfa7db15ad481f737f1498bb63baa10067bc005" translate="yes" xml:space="preserve">
          <source>It is paramount that you do not enable Node.js integration in any renderer (&lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">원격 콘텐츠를로드 하는 렌더러 ( &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; ) 에서 Node.js 통합을 활성화하지 않는 것이 가장 중요합니다 . 목표는 원격 콘텐츠에 부여하는 권한을 제한하여 공격자가 웹 사이트에서 JavaScript를 실행할 수있는 능력을 확보 한 경우 공격자가 사용자에게 해를 끼치는 것을 극적으로 어렵게 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1d2c153e62eb4f6c67c3c1fd908c8f60efcdd975" translate="yes" xml:space="preserve">
          <source>It is possible to circumvent this limitation by capturing system audio with another macOS app like Soundflower and passing it through a virtual audio input device. This virtual device can then be queried with &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;.</source>
          <target state="translated">Soundflower와 같은 다른 macOS 앱으로 시스템 오디오를 캡처하고 가상 오디오 입력 장치를 통해 전달하여 이러한 제한을 피할 수 있습니다. 이 가상 장치는 &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; 로 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="199273e0544a82108bdacc659f2b6ad6ccf8c086" translate="yes" xml:space="preserve">
          <source>It is possible to debug Chromium with Electron by passing &lt;code&gt;--build_debug_libcc&lt;/code&gt; to the bootstrap script:</source>
          <target state="translated">부트 스트랩 스크립트에 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 를 전달하여 Electron으로 Chromium을 디버깅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89660d837d9b5fa4be0177ad642c3c4194a2b505" translate="yes" xml:space="preserve">
          <source>It is possible to pass any object that implements the readable stream API (emits &lt;code&gt;data&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;/&lt;code&gt;error&lt;/code&gt; events). For example, here's how a file could be returned:</source>
          <target state="translated">읽을 수있는 스트림 API를 구현하는 모든 객체를 전달할 수 있습니다 ( &lt;code&gt;data&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; / &lt;code&gt;error&lt;/code&gt; 이벤트 발생). 예를 들어 파일을 반환하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="01838a541d27cddb64533a95704c1d80412cb073" translate="yes" xml:space="preserve">
          <source>It is possible to share the gclient git cache with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">gclient git 캐시를 Linux에서 SMB 공유로 내보내 다른 시스템과 공유 할 수 있지만 한 번에 하나의 프로세스 / 시스템 만 캐시를 사용할 수 있습니다. git-cache 스크립트에 의해 생성 된 잠금은이를 방지하려고하지만 네트워크에서 완벽하게 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e711e87900ad11545fe6d11f0b1dd6baa4c2a7bf" translate="yes" xml:space="preserve">
          <source>It is possible to share this directory with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">Linux에서 SMB 공유로 내 보내서이 디렉토리를 다른 컴퓨터와 공유 할 수 있지만 한 번에 하나의 프로세스 / 기계 만 캐시를 사용할 수 있습니다. git-cache 스크립트로 작성된 잠금은이를 방지하려고 시도하지만 네트워크에서 완벽하게 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="729b1792b3971af4760afa3ec670d4bd463f68ae" translate="yes" xml:space="preserve">
          <source>It is possible to use Node.js features in Electron's Web Workers, to do so the &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; option should be set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">Node.js를가 이렇게하려면 전자의 웹 노동자의 기능을 사용할 수 있습니다 &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; 의 옵션을 설정해야합니다 &lt;code&gt;true&lt;/code&gt; 에 &lt;code&gt;webPreferences&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eed923b3a2d0655e7d02fcfeb29a9b888b89a69" translate="yes" xml:space="preserve">
          <source>It is rare for a JavaScript-based polyfill to be faster than the equivalent native feature in Electron. Do not slow down your Electron app by shipping your own version of standard web platform features.</source>
          <target state="translated">JavaScript 기반 polyfill이 Electron의 동등한 기본 기능보다 빠른 경우는 드뭅니다. 표준 웹 플랫폼 기능의 자체 버전을 제공하여 Electron 앱의 속도를 늦추지 마십시오.</target>
        </trans-unit>
        <trans-unit id="60e41f92d43dd7cb52a699ea13c91a702e3b522b" translate="yes" xml:space="preserve">
          <source>It is recommended that you pause expensive operations when the visibility state is &lt;code&gt;hidden&lt;/code&gt; in order to minimize power consumption.</source>
          <target state="translated">전력 소비를 최소화하기 위해 가시성 상태가 &lt;code&gt;hidden&lt;/code&gt; 있으면 값 비싼 작업을 일시 중지하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="af7b492c8cb4914e87549f09be97fa5754d25b6e" translate="yes" xml:space="preserve">
          <source>It is recommended to keep your changes grouped logically within individual commits. Many contributors find it easier to review changes that are split across multiple commits. There is no limit to the number of commits in a pull request.</source>
          <target state="translated">개별 커밋 내에서 변경 사항을 논리적으로 그룹화하는 것이 좋습니다. 많은 기고자들이 여러 커밋으로 분할 된 변경 사항을 쉽게 검토 할 수 있다고 생각합니다. 풀 요청의 커밋 수에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e1cf52e7ed40575673e4cacbc143a8a1d2a41a19" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the task list be static. It should remain the same regardless of the state or status of the application. While it is possible to vary the list dynamically, you should consider that this could confuse the user who does not expect that portion of the destination list to change.</source>
          <target state="translated">작업 목록은 정적 인 것이 좋습니다. 응용 프로그램의 상태 나 상태에 관계없이 동일하게 유지되어야합니다. 목록을 동적으로 변경할 수 있지만 대상 목록의 해당 부분이 변경 될 것으로 예상하지 않는 사용자를 혼동시킬 수 있다는 점을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f0fdd38eb013530dfda0e785c93fb1ed05e3eee" translate="yes" xml:space="preserve">
          <source>It is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">잘못된 프로세스에서 모듈을 사용하고있을 가능성이 큽니다. 예를 들어 &lt;code&gt;electron.app&lt;/code&gt; 은 메인 프로세스 에서만 사용할 수있는 반면, &lt;code&gt;electron.webFrame&lt;/code&gt; 은 렌더러 프로세스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06810b9a24cd224beebc872577e421af21ac01c7" translate="yes" xml:space="preserve">
          <source>It will create a &lt;code&gt;dist/main&lt;/code&gt; folder in the libcc repo's root. You will need this to build Electron.</source>
          <target state="translated">libcc 저장소의 루트에 &lt;code&gt;dist/main&lt;/code&gt; 폴더 가 생성됩니다 . Electron을 빌드하려면 이것이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3647db27602728c98ee2a2301c17868327282d6d" translate="yes" xml:space="preserve">
          <source>It will probably fail applying patches.</source>
          <target state="translated">패치를 적용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3343764ed4d8b21d498c1a44d6f90876c8454213" translate="yes" xml:space="preserve">
          <source>It's common for open issues to involve discussion. Some contributors may have differing opinions, including whether the behavior is a bug or feature. This discussion is part of the process and should be kept focused, helpful, and professional.</source>
          <target state="translated">공개 된 이슈가 토론을하는 것이 일반적입니다. 일부 기고자들은 행동이 버그인지 기능인지를 포함하여 의견이 다를 수 있습니다. 이 토론은 프로세스의 일부이며 집중되고 도움이되고 전문적인 태도를 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="485b57adcc80650a0f376fe516e0ea35fef68007" translate="yes" xml:space="preserve">
          <source>Italian</source>
          <target state="translated">Italian</target>
        </trans-unit>
        <trans-unit id="b9bc30a5feae532b939b0112f6162a8c1d64ca9e" translate="yes" xml:space="preserve">
          <source>Italian (Italy)</source>
          <target state="translated">이탈리아어 (이탈리아)</target>
        </trans-unit>
        <trans-unit id="9b542a61893cf94c6b2aa33589915292aa185c08" translate="yes" xml:space="preserve">
          <source>Italian (Switzerland)</source>
          <target state="translated">이탈리아어 (스위스)</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="6910a0b5a00af25b7ba39985cfb9347d8203a0a2" translate="yes" xml:space="preserve">
          <source>JavaScript will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">부모 창 에서 JavaScript를 비활성화하면 열린 &lt;code&gt;window&lt;/code&gt; 에서 JavaScript가 항상 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d3bb51ea74dbb54d8ffaf04425ff843127f10a5" translate="yes" xml:space="preserve">
          <source>Javanese</source>
          <target state="translated">Javanese</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="2023379a50fddc81cf53bdb2ea7da27bdc589b20" translate="yes" xml:space="preserve">
          <source>JumpList</source>
          <target state="translated">JumpList</target>
        </trans-unit>
        <trans-unit id="6298a2509790f8ae562a533cfb770f6ee7778f71" translate="yes" xml:space="preserve">
          <source>JumpListCategory</source>
          <target state="translated">JumpListCategory</target>
        </trans-unit>
        <trans-unit id="0ff8418a0fc25bab796d47849f1222ead79fc898" translate="yes" xml:space="preserve">
          <source>JumpListCategory Object</source>
          <target state="translated">JumpListCategory 객체</target>
        </trans-unit>
        <trans-unit id="94afa3adf74d2a4329032ec8d8dda74daa3c70b5" translate="yes" xml:space="preserve">
          <source>JumpListItem</source>
          <target state="translated">JumpListItem</target>
        </trans-unit>
        <trans-unit id="46eed83a18817455ede51e512cb72e4bd08a77a3" translate="yes" xml:space="preserve">
          <source>JumpListItem Object</source>
          <target state="translated">JumpListItem 객체</target>
        </trans-unit>
        <trans-unit id="bf8afa3e80d6f2c0bd4db91bcae008d7f7118b98" translate="yes" xml:space="preserve">
          <source>Just enabling &lt;code&gt;contextIsolation&lt;/code&gt; and using &lt;code&gt;contextBridge&lt;/code&gt; does not automatically mean that everything you do is safe. For instance this code is &lt;strong&gt;unsafe&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;contextIsolation&lt;/code&gt; 을 활성화 하고 &lt;code&gt;contextBridge&lt;/code&gt; 를 사용 한다고해서 수행하는 모든 작업이 자동으로 안전하다는 의미는 아닙니다. 예를 &lt;strong&gt;들어이&lt;/strong&gt; 코드는 &lt;strong&gt;안전하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c3ed665577f91f82c451742a0c8875950d42b19f" translate="yes" xml:space="preserve">
          <source>Kannada</source>
          <target state="translated">Kannada</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="bae6d59bf391c6b00cbe84e270764a5b277dd65c" translate="yes" xml:space="preserve">
          <source>Keep the second line blank.</source>
          <target state="translated">두 번째 줄은 비워 두십시오.</target>
        </trans-unit>
        <trans-unit id="3aed4e511b017fafe9de3e6cb5aa57466d57dfaa" translate="yes" xml:space="preserve">
          <source>Keeping Git Submodules Up to Date</source>
          <target state="translated">Git 서브 모듈을 최신 상태로 유지</target>
        </trans-unit>
        <trans-unit id="b465751c05fbc426234f552a5d95e9103bd3e6dc" translate="yes" xml:space="preserve">
          <source>Keyboard Shortcuts</source>
          <target state="translated">키보드 단축키</target>
        </trans-unit>
        <trans-unit id="b1b8ca52391c49152b6bb1826b475ea8eaddc867" translate="yes" xml:space="preserve">
          <source>KeyboardEvent Object</source>
          <target state="translated">KeyboardEvent 객체</target>
        </trans-unit>
        <trans-unit id="ab497ec0dfa486f643cc63c8cb71f2bd88ad7f78" translate="yes" xml:space="preserve">
          <source>KeyboardInputEvent Object extends &lt;code&gt;InputEvent&lt;/code&gt;</source>
          <target state="translated">KeyboardInputEvent 객체는 &lt;code&gt;InputEvent&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="289268ce605211f8219bfb3814ba2cbd96f76d4c" translate="yes" xml:space="preserve">
          <source>KeyboardInputEvent Object extends InputEvent</source>
          <target state="translated">KeyboardInputEvent 객체는 InputEvent를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="492d599f268d2b9c10e44ddc75a00f1af51f075b" translate="yes" xml:space="preserve">
          <source>Keys must be supported using only &quot;Simple&quot; types in this table. Values must be supported in this table. Prototype modifications are dropped. Sending custom classes will copy values but not the prototype.</source>
          <target state="translated">이 표에서 &quot;단순&quot;유형 만 사용하여 키를 지원해야합니다. 이 표에서 값이 지원되어야합니다. 프로토 타입 수정이 삭제됩니다. 사용자 정의 클래스를 보내면 값이 복사되지만 프로토 타입은 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">알려진 문제</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="a06efeaf4455fbbc03855e222511ad582f621f28" translate="yes" xml:space="preserve">
          <source>Kurdish</source>
          <target state="translated">Kurdish</target>
        </trans-unit>
        <trans-unit id="5aea8700748f6946f70240cab14148a2c449ed9c" translate="yes" xml:space="preserve">
          <source>Kyrgyz</source>
          <target state="translated">Kyrgyz</target>
        </trans-unit>
        <trans-unit id="843195acc182eab1aff0d0e1f754451a5eccd288" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool and supports multiple strategies for code inspection. For this basic introduction, let's assume that you're calling a command from JavaScript that isn't behaving correctly - so you'd like to break on that command's C++ counterpart inside the Electron source.</source>
          <target state="translated">LLDB는 강력한 도구이며 코드 검사를위한 여러 전략을 지원합니다. 이 기본 소개에서는 올바르게 동작하지 않는 JavaScript에서 명령을 호출한다고 가정합니다. 따라서 Electron 소스 내에서 해당 명령의 C ++ 대응 항목을 중단하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="7d3d95ffa3f81f91f71534d6dadf0dec108ea6c6" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool with a great documentation. To learn more about it, consider Apple's debugging documentation, for instance the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB Command Structure Reference&lt;/a&gt; or the introduction to &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;Using LLDB as a Standalone Debugger&lt;/a&gt;.</source>
          <target state="translated">LLDB는 훌륭한 문서가있는 강력한 도구입니다. 이에 대한 자세한 내용은 Apple의 디버깅 설명서 (예 : &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB 명령 구조 참조)&lt;/a&gt; 또는 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;LLDB를 독립형 디버거로 사용&lt;/a&gt; 소개를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d19a4be135980e5ef4a065ac5b4d796f7207e00d" translate="yes" xml:space="preserve">
          <source>LNK1181: cannot open input file 'kernel32.lib'</source>
          <target state="translated">LNK1181 : 입력 파일 'kernel32.lib'을 열 수 없습니다</target>
        </trans-unit>
        <trans-unit id="80fea83804bf0e1f73c7272f7a19c26bc52d63ef" translate="yes" xml:space="preserve">
          <source>LTS</source>
          <target state="translated">LTS</target>
        </trans-unit>
        <trans-unit id="800734d40ea8493c3a8bf4b7794c379316a3df97" translate="yes" xml:space="preserve">
          <source>Language Code</source>
          <target state="translated">언어 코드</target>
        </trans-unit>
        <trans-unit id="2ccd20b6dbc9562a28819fbf7ff0129d89476dcb" translate="yes" xml:space="preserve">
          <source>Language Name</source>
          <target state="translated">언어 이름</target>
        </trans-unit>
        <trans-unit id="535cdb9bf5c901974567357abde733d39ad34291" translate="yes" xml:space="preserve">
          <source>Laothian</source>
          <target state="translated">Laothian</target>
        </trans-unit>
        <trans-unit id="d110f1435e34b27515c30f3be3bcd2bfb2388e70" translate="yes" xml:space="preserve">
          <source>Large icon</source>
          <target state="translated">큰 아이콘</target>
        </trans-unit>
        <trans-unit id="e05f92ac1b16cc7edb8d43150b49e59e79895476" translate="yes" xml:space="preserve">
          <source>Later versions of Windows allow for advanced notifications, with custom templates, images, and other flexible elements. To send those notifications (from either the main process or the renderer process), use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt;, which uses native Node addons to send &lt;code&gt;ToastNotification&lt;/code&gt; and &lt;code&gt;TileNotification&lt;/code&gt; objects.</source>
          <target state="translated">이후 버전의 Windows에서는 사용자 지정 템플릿, 이미지 및 기타 유연한 요소와 함께 고급 알림을 사용할 수 있습니다. 기본 프로세스 또는 렌더러 프로세스에서 해당 알림을 보내려면 기본 노드 애드온을 사용하여 &lt;code&gt;ToastNotification&lt;/code&gt; 및 &lt;code&gt;TileNotification&lt;/code&gt; 객체 를 보내는 userland 모듈 &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1728312ad64b08dc2b1876cfbbf9262bc117c354" translate="yes" xml:space="preserve">
          <source>Later versions of macOS allow for notifications with an input field, allowing the user to quickly reply to a notification. In order to send notifications with an input field, use the userland module &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier&lt;/a&gt;.</source>
          <target state="translated">이후 버전의 macOS에서는 입력 필드를 사용하여 알림을 허용하므로 사용자가 알림에 빠르게 회신 할 수 있습니다. 입력 필드와 함께 알림을 보내려면 userland 모듈 &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79102e50ec1470cd9d985bb97a7ee168aea5c9fa" translate="yes" xml:space="preserve">
          <source>Later, a zero-day exploit is revealed and a fix is applied to master. We backport the fix to the &lt;code&gt;2-0-x&lt;/code&gt; line and release &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">나중에 제로 데이 익스플로잇이 공개되고 수정 사항이 마스터에 적용됩니다. 수정 사항을 &lt;code&gt;2-0-x&lt;/code&gt; 행 으로 백 포트하고 &lt;code&gt;2.0.1&lt;/code&gt; 을 릴리스 합니다.</target>
        </trans-unit>
        <trans-unit id="9bde795b72be44b343c829314d764282997de688" translate="yes" xml:space="preserve">
          <source>Latin</source>
          <target state="translated">Latin</target>
        </trans-unit>
        <trans-unit id="9ed6ae997b1668915a9529a0889d5ac9735b0c4b" translate="yes" xml:space="preserve">
          <source>Latvian</source>
          <target state="translated">Latvian</target>
        </trans-unit>
        <trans-unit id="f24a5193238f86b2d3d254301b3c323f9785e36d" translate="yes" xml:space="preserve">
          <source>Launch Electron app after build. You can now open the xcode workspace created above and attach to the Electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">빌드 후 Electron 앱을 시작합니다. 이제 위에서 만든 xcode 작업 공간을 열고 디버그&amp;gt; 프로세스에 연결&amp;gt; Electron 디버그 메뉴를 통해 Electron 프로세스에 연결할 수 있습니다. [참고 : 렌더러 프로세스를 디버깅하려면 Electron Helper에도 연결해야합니다.]</target>
        </trans-unit>
        <trans-unit id="76482ebb939485aeaa736d61937bc8887f92fd1e" translate="yes" xml:space="preserve">
          <source>Launch Visual Studio 2017 on your development machine.</source>
          <target state="translated">개발 컴퓨터에서 Visual Studio 2017을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="12c9e11f89aca32c500a6c6be3bcd67a6e93e727" translate="yes" xml:space="preserve">
          <source>Launch electron app after build. You can now open the xcode workspace created above and attach to the electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">빌드 후 전자 앱을 시작하십시오. 이제 위에서 만든 xcode 작업 공간을 열고 디버그&amp;gt; 프로세스에 연결&amp;gt; 전자 디버그 메뉴를 통해 전자 프로세스에 연결할 수 있습니다. [참고 : 렌더러 프로세스를 디버그하려면 Electron Helper도 연결해야합니다.]</target>
        </trans-unit>
        <trans-unit id="a5303f1d5313a1be24a844d73befd4f8a1111c34" translate="yes" xml:space="preserve">
          <source>Launch your app &lt;code&gt;.exe&lt;/code&gt; on the target device via the &lt;em&gt;Command Prompt&lt;/em&gt; (passing &lt;code&gt;--inspect-brk&lt;/code&gt; to pause it before any native modules are loaded).</source>
          <target state="translated">&lt;em&gt;명령 프롬프트&lt;/em&gt; 를 통해 대상 장치에서 앱 &lt;code&gt;.exe&lt;/code&gt; 를 시작합니다 ( 기본 모듈이로드되기 전에 일시 중지하려면 &lt;code&gt;--inspect-brk&lt;/code&gt; 전달 ).&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbd9b1b900b29e1c4c6b76c3752bba04afcef68e" translate="yes" xml:space="preserve">
          <source>Learning the basics</source>
          <target state="translated">기본 사항 배우기</target>
        </trans-unit>
        <trans-unit id="edb627b677bb2e85eb500bda16bcdd868b84eb44" translate="yes" xml:space="preserve">
          <source>Legitimate use cases exist, but unless you know what you are doing, you should not enable this property.</source>
          <target state="translated">합법적 인 사용 사례가 존재하지만 수행중인 작업을 모르는 경우이 속성을 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e5416149c06382c28af60fb1dc625ea79a1e2812" translate="yes" xml:space="preserve">
          <source>Let's assume that you want to debug &lt;code&gt;app.setName()&lt;/code&gt;, which is defined in &lt;code&gt;browser.cc&lt;/code&gt; as &lt;code&gt;Browser::SetName()&lt;/code&gt;. Set the breakpoint using the &lt;code&gt;breakpoint&lt;/code&gt; command, specifying file and line to break on:</source>
          <target state="translated">&lt;code&gt;browser.cc&lt;/code&gt; 에 &lt;code&gt;Browser::SetName()&lt;/code&gt; 으로 정의 된 &lt;code&gt;app.setName()&lt;/code&gt; 을 디버그한다고 가정합니다 . 중단 점을 설정할 파일 및 행을 지정 하여 &lt;code&gt;breakpoint&lt;/code&gt; 명령을 사용하여 중단 점을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a080ac531dcc73a8c207eaedd84e7f44ba1ebf68" translate="yes" xml:space="preserve">
          <source>Let's consider Visual Studio Code as an example. When you open a file, it will immediately display the file to you without any code highlighting, prioritizing your ability to interact with the text. Once it has done that work, it will move on to code highlighting.</source>
          <target state="translated">Visual Studio Code를 예로 들어 보겠습니다. 파일을 열면 코드 강조 표시없이 즉시 파일이 표시되어 텍스트와 상호 작용할 수있는 우선 순위가 지정됩니다. 작업이 완료되면 코드 강조 표시로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="10cfd7be6b4c87dffec0c382114913cacbf312a7" translate="yes" xml:space="preserve">
          <source>Let's consider an example and assume that your application is parsing files in the fictitious &lt;code&gt;.foo&lt;/code&gt; format. In order to do that, it relies on the equally fictitious &lt;code&gt;foo-parser&lt;/code&gt; module. In traditional Node.js development, you might write code that eagerly loads dependencies:</source>
          <target state="translated">예제를 고려하고 응용 프로그램이 가상의 &lt;code&gt;.foo&lt;/code&gt; 형식으로 파일을 구문 분석하고 있다고 가정 해 보겠습니다 . 이를 위해 똑같이 가상의 &lt;code&gt;foo-parser&lt;/code&gt; 모듈 에 의존 합니다. 기존 Node.js 개발에서는 종속성을 열심히로드하는 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a89f07ae8bf8f667f4acbbda19c42b285c948799" translate="yes" xml:space="preserve">
          <source>Let's create a basic application based on the structure above.</source>
          <target state="translated">위의 구조를 기반으로 기본 애플리케이션을 만들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="bd60bf81eb78f217cd0f5886c23198c274578a36" translate="yes" xml:space="preserve">
          <source>Let's take a look at an example configuration with all required fields. Not all of them are required: the tools will be clever enough to automatically find a suitable &lt;code&gt;identity&lt;/code&gt;, for instance, but we recommend that you are explicit.</source>
          <target state="translated">모든 필수 필드가있는 예제 구성을 살펴 보겠습니다. 모든 도구가 필요한 것은 아닙니다. 예를 들어 도구는 적절한 &lt;code&gt;identity&lt;/code&gt; 를 자동으로 찾을 수있을만큼 영리 하지만 명시 적일 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="2685bc981621da79d2600fee575db7b305064b8d" translate="yes" xml:space="preserve">
          <source>Lifetime of Remote Objects</source>
          <target state="translated">원격 객체의 수명</target>
        </trans-unit>
        <trans-unit id="7ca3b9cea4395aa3b2fc28c2e8bca789ab8d4c2a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://nwjs.io/&quot;&gt;NW.js&lt;/a&gt;, Electron provides a platform to write desktop applications with web technologies. Both platforms enable developers to utilize HTML, JavaScript, and Node.js. On the surface, they seem very similar.</source>
          <target state="translated">&lt;a href=&quot;https://nwjs.io/&quot;&gt;NW.js&lt;/a&gt; 와 마찬가지로 Electron은 웹 기술로 데스크톱 애플리케이션을 작성할 수있는 플랫폼을 제공합니다. 두 플랫폼 모두 개발자가 HTML, JavaScript 및 Node.js를 활용할 수 있도록합니다. 표면적으로는 매우 비슷해 보입니다.</target>
        </trans-unit>
        <trans-unit id="5e9ffa6ffac7ebf299d8829cf9d9d0fbcc4082a7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--host-rules&lt;/code&gt; but these &lt;code&gt;rules&lt;/code&gt; only apply to the host resolver.</source>
          <target state="translated">&lt;code&gt;--host-rules&lt;/code&gt; 와 유사 하지만 이러한 &lt;code&gt;rules&lt;/code&gt; 은 호스트 확인자에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf07f03f4c10e887c4ab3647d44403ccb8dab3d1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--inspect&lt;/code&gt; but pauses execution on the first line of JavaScript.</source>
          <target state="translated">&lt;code&gt;--inspect&lt;/code&gt; 와 유사 하지만 JavaScript의 첫 번째 행에서 실행을 일시 중지합니다.</target>
        </trans-unit>
        <trans-unit id="f2c530a19bd62e37e3a792fa8bf53464fa79e244" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ipcRenderer.send&lt;/code&gt; but the event will be sent to the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element in the host page instead of the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer.send&lt;/code&gt; 와 유사 하지만 이벤트는 기본 프로세스 대신 호스트 페이지 의 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 요소 로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="94b0ded4d60e2107d4aeb10a52dcd568cfff0aed" translate="yes" xml:space="preserve">
          <source>Like NW.js, Electron provides a platform to write desktop applications with JavaScript and HTML and has Node integration to grant access to the low level system from web pages.</source>
          <target state="translated">Electron은 NW.js와 마찬가지로 JavaScript 및 HTML로 데스크탑 애플리케이션을 작성하는 플랫폼을 제공하며 웹 페이지에서 저수준 시스템에 액세스 할 수 있도록 노드 통합 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="71c3e236560dfd383eb6c25132ec2f90fb850124" translate="yes" xml:space="preserve">
          <source>Like Node, Electron is focused on having a small set of APIs that provide all the necessary primitives for developing multi-platform desktop applications. This design philosophy allows Electron to remain a flexible tool without being overly prescriptive about how it should be used. Userland enables users to create and share tools that provide additional functionality on top of what is available in &quot;core&quot;.</source>
          <target state="translated">Node와 마찬가지로 Electron은 다중 플랫폼 데스크톱 응용 프로그램 개발에 필요한 모든 기본 요소를 제공하는 작은 API 집합에 중점을 둡니다. 이 디자인 철학을 통해 Electron은 어떻게 사용해야하는지에 대해 지나치게 규정하지 않고도 유연한 도구를 유지할 수 있습니다. Userland를 통해 사용자는 &quot;핵심&quot;에서 제공되는 기능 외에 추가 기능을 제공하는 도구를 작성하고 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="3c46b62eb65be1e5fd1cb89afd7c2ec725817824" translate="yes" xml:space="preserve">
          <source>Limitations of MAS Build</source>
          <target state="translated">MAS 빌드의 한계</target>
        </trans-unit>
        <trans-unit id="b62ec0042a445f3138737f83a1b75da7db12a301" translate="yes" xml:space="preserve">
          <source>Limitations of the Node API</source>
          <target state="translated">노드 API의 한계</target>
        </trans-unit>
        <trans-unit id="67964fcdb98b346ac7601e97da9b492079aa1c15" translate="yes" xml:space="preserve">
          <source>Line 16: You create a new browser window by invoking the &lt;code&gt;createWindow&lt;/code&gt; function once the Electron application &lt;a href=&quot;../api/app#appwhenready&quot;&gt;is initialized&lt;/a&gt;.</source>
          <target state="translated">16 행 : Electron 애플리케이션 &lt;a href=&quot;../api/app#appwhenready&quot;&gt;이 초기화&lt;/a&gt; 되면 &lt;code&gt;createWindow&lt;/code&gt; 함수 를 호출하여 새 브라우저 창을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="a88ed512c2ab4ebdd6420edb4b33272a2726586f" translate="yes" xml:space="preserve">
          <source>Line 16: You create a new browser window by invoking the &lt;code&gt;createWindow&lt;/code&gt; function once the Electron application &lt;a href=&quot;api/app#appwhenready&quot;&gt;is initialized&lt;/a&gt;.</source>
          <target state="translated">16 행 : Electron 애플리케이션 &lt;a href=&quot;api/app#appwhenready&quot;&gt;이 초기화&lt;/a&gt; 되면 &lt;code&gt;createWindow&lt;/code&gt; 함수 를 호출하여 새 브라우저 창을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b82ae7014f179dacfeeb04d5514ba216aa8d105a" translate="yes" xml:space="preserve">
          <source>Line 18: You add a new listener that tries to quit the application when it no longer has any open windows. This listener is a no-op on macOS due to the operating system's &lt;a href=&quot;https://support.apple.com/en-ca/guide/mac-help/mchlp2469/mac&quot;&gt;window management behavior&lt;/a&gt;.</source>
          <target state="translated">18 행 : 열려있는 창이 더 이상 없을 때 응용 프로그램을 종료하려는 새 리스너를 추가합니다. 이 리스너는 운영 체제의 &lt;a href=&quot;https://support.apple.com/en-ca/guide/mac-help/mchlp2469/mac&quot;&gt;창 관리 동작&lt;/a&gt; 으로 인해 macOS에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="514c6823cc622ec82d28d3773b74d33fdd425c8f" translate="yes" xml:space="preserve">
          <source>Line 1: First, you import the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;BrowserWindow&lt;/code&gt; modules of the &lt;code&gt;electron&lt;/code&gt; package to be able to manage your application's lifecycle events, as well as create and control browser windows.</source>
          <target state="translated">1 행 : 먼저 &lt;code&gt;electron&lt;/code&gt; 패키지 의 &lt;code&gt;app&lt;/code&gt; 및 &lt;code&gt;BrowserWindow&lt;/code&gt; 모듈 을 가져 와서 애플리케이션의 수명주기 이벤트를 관리하고 브라우저 창을 만들고 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87894685915c49b65290bf0dd9f036412ff8ca7f" translate="yes" xml:space="preserve">
          <source>Line 24: You add a new listener that creates a new browser window only if when the application has no visible windows after being activated. For example, after launching the application for the first time, or re-launching the already running application.</source>
          <target state="translated">24 행 : 애플리케이션이 활성화 된 후 보이는 창이없는 경우에만 새 브라우저 창을 만드는 새 리스너를 추가합니다. 예를 들어, 처음으로 응용 프로그램을 시작한 후 또는 이미 실행중인 응용 프로그램을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="0006eded6f8f03a487d831ba07231bf4c16dcf29" translate="yes" xml:space="preserve">
          <source>Line 3: After that, you define a function that creates a &lt;a href=&quot;../api/browser-window#new-browserwindowoptions&quot;&gt;new browser window&lt;/a&gt; with node integration enabled, loads &lt;code&gt;index.html&lt;/code&gt; file into this window (line 12, we will discuss the file later) and opens Developer Tools (line 13).</source>
          <target state="translated">3 행 : 그런 다음 노드 통합이 활성화 된 &lt;a href=&quot;../api/browser-window#new-browserwindowoptions&quot;&gt;새 브라우저 창&lt;/a&gt; 을 만들고 &lt;code&gt;index.html&lt;/code&gt; 파일을이 창에 로드 (12 행, 나중에 파일에 대해 설명 함)하고 개발자 도구 (13 행)를 여는 함수를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="54cbd6299a0d2407338028c41e7bee838f2ff1bb" translate="yes" xml:space="preserve">
          <source>Line 3: After that, you define a function that creates a &lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;new browser window&lt;/a&gt; with node integration enabled, loads &lt;code&gt;index.html&lt;/code&gt; file into this window (line 12, we will discuss the file later) and opens Developer Tools (line 13).</source>
          <target state="translated">3 행 : 그런 다음 노드 통합이 활성화 된 &lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;새 브라우저 창&lt;/a&gt; 을 만들고 &lt;code&gt;index.html&lt;/code&gt; 파일을이 창에 로드 (12 행, 나중에 파일에 대해 설명 함)하고 개발자 도구 (13 행)를 여는 함수를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="cb66995abb74e805e53169314b54331289ce47c8" translate="yes" xml:space="preserve">
          <source>Lines should be wrapped at 80 columns.</source>
          <target state="translated">행은 80 개 열로 둘러싸여 야합니다.</target>
        </trans-unit>
        <trans-unit id="bdf581cc1c81ea3b5fa1a390925a643afcab19e5" translate="yes" xml:space="preserve">
          <source>Lingala</source>
          <target state="translated">Lingala</target>
        </trans-unit>
        <trans-unit id="be34399d2ade8873f3c53335c4fca0fc637ac2c0" translate="yes" xml:space="preserve">
          <source>Linking against the correct &lt;code&gt;node.lib&lt;/code&gt;</source>
          <target state="translated">올바른 &lt;code&gt;node.lib&lt;/code&gt; 에 대한 링크</target>
        </trans-unit>
        <trans-unit id="8740f6b1646315b108f5a7b7630739c109bdee42" translate="yes" xml:space="preserve">
          <source>Linting</source>
          <target state="translated">Linting</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="18777160cf1a72270b7936a6a4eaee0e6afd8fc1" translate="yes" xml:space="preserve">
          <source>Linux x64</source>
          <target state="translated">Linux x64</target>
        </trans-unit>
        <trans-unit id="cbbe22f2550a73a1a46fffc9f1b0fb85f17d128b" translate="yes" xml:space="preserve">
          <source>Linux x86</source>
          <target state="translated">Linux x86</target>
        </trans-unit>
        <trans-unit id="7f370089b00f31b78935318c07ce7b050337cf2a" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; or &lt;code&gt;~/.cache/electron/&lt;/code&gt;</source>
          <target state="translated">Linux : &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; 또는 &lt;code&gt;~/.cache/electron/&lt;/code&gt; .cache / electron /</target>
        </trans-unit>
        <trans-unit id="20cb29cb8daab844a02a18f0ac83d7c62fbad7dc" translate="yes" xml:space="preserve">
          <source>List all files under the root of the archive:</source>
          <target state="translated">아카이브의 루트 아래에있는 모든 파일을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="ebd312c54c59e660e8a804202db75a55093c1d92" translate="yes" xml:space="preserve">
          <source>Listens to &lt;code&gt;channel&lt;/code&gt;, when a new message arrives &lt;code&gt;listener&lt;/code&gt; would be called with &lt;code&gt;listener(event, args...)&lt;/code&gt;.</source>
          <target state="translated">수신 대기를하는 &lt;code&gt;channel&lt;/code&gt; 새 메시지가 도착하면, &lt;code&gt;listener&lt;/code&gt; 호출 될 것이다 &lt;code&gt;listener(event, args...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="553c519c9addc3f4dad41b4a23238251692354b7" translate="yes" xml:space="preserve">
          <source>Lithuanian</source>
          <target state="translated">Lithuanian</target>
        </trans-unit>
        <trans-unit id="c195f338511e5c39daf33da048f7d8fc20adcba4" translate="yes" xml:space="preserve">
          <source>Loaded extensions will not be automatically remembered across exits; if you do not call &lt;code&gt;loadExtension&lt;/code&gt; when the app runs, the extension will not be loaded.</source>
          <target state="translated">로드 된 확장은 이탈에서 자동으로 기억되지 않습니다. 앱이 실행될 때 &lt;code&gt;loadExtension&lt;/code&gt; 을 호출하지 않으면 확장이로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7276725d40e1b9cf349327a4ce3aafa60e776c3" translate="yes" xml:space="preserve">
          <source>Loading and running code too soon</source>
          <target state="translated">너무 빨리 코드로드 및 실행</target>
        </trans-unit>
        <trans-unit id="ef941bb9afb25b349511256cc034b5e38d94c79b" translate="yes" xml:space="preserve">
          <source>Loading content over &lt;code&gt;HTTPS&lt;/code&gt; assures the authenticity and integrity of the loaded resources while encrypting the traffic itself. See the section on &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;only displaying secure content&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 를 통해 콘텐츠를 로드하면 트래픽 자체를 암호화하면서로드 된 리소스의 신뢰성과 무결성을 보장합니다. 자세한 내용은 &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;보안 컨텐트 만 표시&lt;/a&gt; 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a7adf5ab6dcd5fe2a6411597ecf86d181fec9ea" translate="yes" xml:space="preserve">
          <source>Loading extensions</source>
          <target state="translated">확장로드</target>
        </trans-unit>
        <trans-unit id="b68cad196571ec704765f46bcf228bf7fe3b4e20" translate="yes" xml:space="preserve">
          <source>Loading modules is a surprisingly expensive operation, especially on Windows. When your app starts, it should not make users wait for operations that are currently not necessary.</source>
          <target state="translated">모듈로드는 특히 Windows에서 놀랍도록 비용이 많이 드는 작업입니다. 앱이 시작될 때 현재 필요하지 않은 작업을 사용자가 기다리게해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="fc079f52aed3f3417e23c1f910ecdea48460cc9f" translate="yes" xml:space="preserve">
          <source>Loading the initial HTML of a website over &lt;code&gt;HTTPS&lt;/code&gt; and attempting to load subsequent resources via &lt;code&gt;HTTP&lt;/code&gt; is also known as &quot;mixed content&quot;.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 를 통해 웹 사이트의 초기 HTML을로드하고 &lt;code&gt;HTTP&lt;/code&gt; 를 통해 후속 리소스를로드하는 것을 &quot;혼합 컨텐츠&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="30a1a104adb3f5e456c05c2a32c27218b68a7f56" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the webview, the &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;.</source>
          <target state="translated">로드는 &lt;code&gt;url&lt;/code&gt; 웹보기에서의 &lt;code&gt;url&lt;/code&gt; 예, 프로토콜 접두사를 포함해야 &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;file://&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be93699ca87035f9fc36269481c3bdb20862991d" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the window. The &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;. If the load should bypass http cache then use the &lt;code&gt;pragma&lt;/code&gt; header to achieve it.</source>
          <target state="translated">창에 &lt;code&gt;url&lt;/code&gt; 을 로드합니다 . &lt;code&gt;url&lt;/code&gt; 예, 프로토콜 접두사를 포함해야 &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;file://&lt;/code&gt; . 로드가 http 캐시를 우회해야하는 경우 &lt;code&gt;pragma&lt;/code&gt; 헤더를 사용하여 이를 달성하십시오.</target>
        </trans-unit>
        <trans-unit id="49f3107176240c3484499f42d4ea3791ab0eb6ce" translate="yes" xml:space="preserve">
          <source>Loads the given file in the window, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. For instance an app structure like this:</source>
          <target state="translated">주어진 파일을 창에로드합니다. &lt;code&gt;filePath&lt;/code&gt; 는 응용 프로그램의 루트에 상대적인 HTML 파일의 경로 여야합니다. 예를 들어 다음과 같은 앱 구조 :</target>
        </trans-unit>
        <trans-unit id="9ee0cb93b5814acea6da884dc9bf6b78f5602f71" translate="yes" xml:space="preserve">
          <source>Local Modules (using relative paths)</source>
          <target state="translated">로컬 모듈 (상대 경로 사용)</target>
        </trans-unit>
        <trans-unit id="bf7c326f8217d8d073a4c87dc6c0c16e9df63e9f" translate="yes" xml:space="preserve">
          <source>Local Shortcuts</source>
          <target state="translated">지역 바로 가기</target>
        </trans-unit>
        <trans-unit id="e3905b29d9bf54a33a15a18b60c1dcaf0efa3336" translate="yes" xml:space="preserve">
          <source>Local keyboard shortcuts are triggered only when the application is focused. To configure a local keyboard shortcut, you need to specify an &lt;a href=&quot;../api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem&lt;/a&gt; within the &lt;a href=&quot;../api/menu&quot;&gt;Menu&lt;/a&gt; module.</source>
          <target state="translated">로컬 키보드 단축키는 응용 프로그램에 포커스가있을 때만 트리거됩니다. 로컬 키보드 바로 가기를 구성하려면 &lt;a href=&quot;../api/menu&quot;&gt;메뉴&lt;/a&gt; 모듈 내에서 &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem을&lt;/a&gt; 만들 때 &lt;a href=&quot;../api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt; 속성 을 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4a729b9929af80edd77447c2518d36e70780a5d1" translate="yes" xml:space="preserve">
          <source>Local keyboard shortcuts are triggered only when the application is focused. To configure a local keyboard shortcut, you need to specify an &lt;a href=&quot;api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt; within the &lt;a href=&quot;api/menu&quot;&gt;Menu&lt;/a&gt; module.</source>
          <target state="translated">로컬 키보드 단축키는 응용 프로그램에 포커스가있을 때만 트리거됩니다. 로컬 키보드 바로 가기를 구성하려면 &lt;a href=&quot;api/menu&quot;&gt;메뉴&lt;/a&gt; 모듈 내에서 &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem을&lt;/a&gt; 만들 때 &lt;a href=&quot;api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt; 속성 을 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="031b11f4c0cdf5c68d2539db1248bf550f65668e" translate="yes" xml:space="preserve">
          <source>Locale values returned by &lt;code&gt;app.getLocale()&lt;/code&gt;.</source>
          <target state="translated">로케일에 의해 반환 된 값 &lt;code&gt;app.getLocale()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a621b0da3425ea2613fe09c377400e16b011ee6" translate="yes" xml:space="preserve">
          <source>Locale values returned by app.getLocale().</source>
          <target state="translated">app.getLocale ()에 의해 리턴 된 로케일 값.</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="e101dd7d36fcf91f4a7562468263eaf821e410bf" translate="yes" xml:space="preserve">
          <source>Located in &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</source>
          <target state="translated">에 위치한 &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e10fb5f8bb5cc4a40661ba94d0a1e8704aee55b0" translate="yes" xml:space="preserve">
          <source>Location use &lt;code&gt;East US&lt;/code&gt;</source>
          <target state="translated">위치 사용 &lt;code&gt;East US&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d792990f936b88d205256443e175e2497e70039" translate="yes" xml:space="preserve">
          <source>Log back into Azure and find the VM you just created in Home &amp;lt; Virtual Machines &amp;lt; &lt;code&gt;$YOUR_NEW_VM&lt;/code&gt;</source>
          <target state="translated">Azure에 다시 로그인하고 Home &amp;lt;Virtual Machines &amp;lt; &lt;code&gt;$YOUR_NEW_VM&lt;/code&gt; 에서 방금 만든 VM을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="f11d5438ffd1df7b05d1d8c7d640c31e01f85aa7" translate="yes" xml:space="preserve">
          <source>Log into Azure using credentials stored in LastPass (under Azure Enterprise) and then find the storage account corresponding to the name found in AppVeyor.</source>
          <target state="translated">LastPass (Azure Enterprise 아래)에 저장된 자격 증명을 사용하여 Azure에 로그인 한 다음 AppVeyor에서 찾은 이름에 해당하는 스토리지 계정을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="040cec91903a1472149963d35b391790f775f3b7" translate="yes" xml:space="preserve">
          <source>Logging network events for a session.</source>
          <target state="translated">세션에 대한 네트워크 이벤트 로깅.</target>
        </trans-unit>
        <trans-unit id="857d812e97fcac1b5c82d2064588db4e5ddd72d4" translate="yes" xml:space="preserve">
          <source>Long term support of older versions of Electron does not currently exist. If your current version of Electron works for you, you can stay on it for as long as you'd like. If you want to make use of new features as they come in you should upgrade to a newer version.</source>
          <target state="translated">이전 버전의 Electron에 대한 장기 지원은 현재 존재하지 않습니다. 현재 버전의 Electron이 효과가 있으면 원하는 기간 동안 계속 사용할 수 있습니다. 새로운 기능이 제공 될 때 새로운 기능을 사용하려면 최신 버전으로 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="3a0bc0281fd3595d7a2edb4b0727d10f9458d490" translate="yes" xml:space="preserve">
          <source>Lots of Windows-specific code contains if... else logic that selects between either the x64 or x86 architectures.</source>
          <target state="translated">많은 Windows 관련 코드에는 x64 또는 x86 아키텍처 중에서 선택하는 if ... else 논리가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc77b5d76eb28a6a1071f43293da2ad44963802d" translate="yes" xml:space="preserve">
          <source>M61</source>
          <target state="translated">M61</target>
        </trans-unit>
        <trans-unit id="bd601302ae1022e3c587ef6ff9f36d99c05033a2" translate="yes" xml:space="preserve">
          <source>M66</source>
          <target state="translated">M66</target>
        </trans-unit>
        <trans-unit id="570fd89a6a1e3d247f91e4b98c64316550cc23fe" translate="yes" xml:space="preserve">
          <source>M69</source>
          <target state="translated">M69</target>
        </trans-unit>
        <trans-unit id="67e8ecdb180a8b9e10f32fc21f30fce4b4b43d88" translate="yes" xml:space="preserve">
          <source>M73</source>
          <target state="translated">M73</target>
        </trans-unit>
        <trans-unit id="ec5b1178518609c1bf685a6f309f5dde452c774d" translate="yes" xml:space="preserve">
          <source>M76</source>
          <target state="translated">M76</target>
        </trans-unit>
        <trans-unit id="f3c13bb155162fb5b8a51b2f09ad8ab39460bd6b" translate="yes" xml:space="preserve">
          <source>M78</source>
          <target state="translated">M78</target>
        </trans-unit>
        <trans-unit id="bdc2f0a5b17b29b5cbf1cbeed4c49ef4fe9d4d45" translate="yes" xml:space="preserve">
          <source>M80</source>
          <target state="translated">M80</target>
        </trans-unit>
        <trans-unit id="f9973645a0bf87e6405e445fd1eb4a38f408d8ff" translate="yes" xml:space="preserve">
          <source>M83</source>
          <target state="translated">M83</target>
        </trans-unit>
        <trans-unit id="da7293df79dccd7586a8aa6f59fec17cb41f9954" translate="yes" xml:space="preserve">
          <source>M85</source>
          <target state="translated">M85</target>
        </trans-unit>
        <trans-unit id="96e50765184ecbab70a9259abc6bc3b814072569" translate="yes" xml:space="preserve">
          <source>M87</source>
          <target state="translated">M87</target>
        </trans-unit>
        <trans-unit id="735728986e2d4027455f0815374e51ec5e662523" translate="yes" xml:space="preserve">
          <source>M89</source>
          <target state="translated">M89</target>
        </trans-unit>
        <trans-unit id="68af66810bb202c8b75471176a3f65b13ff42f73" translate="yes" xml:space="preserve">
          <source>MAS</source>
          <target state="translated">MAS</target>
        </trans-unit>
        <trans-unit id="87622d875bec8a4daf829da2f6e6a4da0aa5935c" translate="yes" xml:space="preserve">
          <source>MD2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</source>
          <target state="translated">MD2- &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c7fdf5c55534c6ded90e9795080da11821105c" translate="yes" xml:space="preserve">
          <source>MD4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</source>
          <target state="translated">MD4- &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2779c17e43e24356f84eb01a1a814532502f63" translate="yes" xml:space="preserve">
          <source>MD5 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</source>
          <target state="translated">MD5- &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eb4ebbec5df5de4887b468de43d79bcbae01a9d" translate="yes" xml:space="preserve">
          <source>MDC2 - &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO/IEC 10118-2&lt;/a&gt;</source>
          <target state="translated">MDC2- &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO / IEC 10118-2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764c9b488881944bdd8aa802a90466c19b07913" translate="yes" xml:space="preserve">
          <source>Mac App Store</source>
          <target state="translated">맥 앱 스토어</target>
        </trans-unit>
        <trans-unit id="780c258bc4ad975884ac6bdcaf6f0e1e3b380a9d" translate="yes" xml:space="preserve">
          <source>Mac App Store Submission Guide</source>
          <target state="translated">Mac App Store 제출 안내서</target>
        </trans-unit>
        <trans-unit id="e1147b6f453aa3574afe7faf01df8f4f43a25471" translate="yes" xml:space="preserve">
          <source>MacOS Dock</source>
          <target state="translated">맥 OS 독</target>
        </trans-unit>
        <trans-unit id="55d8cae81f999b148f7f11049a80625438104669" translate="yes" xml:space="preserve">
          <source>MacOS: &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</source>
          <target state="translated">MacOS : &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3fe571f349f4b42daacd19bf3d1a708f4bec7cd" translate="yes" xml:space="preserve">
          <source>Macedonian</source>
          <target state="translated">Macedonian</target>
        </trans-unit>
        <trans-unit id="62bce9422ff2d14f69ab80a154510232fc8a9afd" translate="yes" xml:space="preserve">
          <source>Main</source>
          <target state="translated">Main</target>
        </trans-unit>
        <trans-unit id="99effeb4610a03a43d98c6d679f8583dca53d6ac" translate="yes" xml:space="preserve">
          <source>Main Menu's Name</source>
          <target state="translated">메인 메뉴 이름</target>
        </trans-unit>
        <trans-unit id="e49b821b2c7b6714f350a8dd1146a21a18871a8c" translate="yes" xml:space="preserve">
          <source>Main Process</source>
          <target state="translated">주요 프로세스</target>
        </trans-unit>
        <trans-unit id="95836e91069265d349e4b4e0509d813110335b7c" translate="yes" xml:space="preserve">
          <source>Main Process Modules</source>
          <target state="translated">주요 프로세스 모듈</target>
        </trans-unit>
        <trans-unit id="ff42ca890ec61938ef6f2eb4ad8fb33f2d2c8439" translate="yes" xml:space="preserve">
          <source>Main World</source>
          <target state="translated">메인 월드</target>
        </trans-unit>
        <trans-unit id="9efa37270cf8257d0ec596934c9bc2db502ebdcd" translate="yes" xml:space="preserve">
          <source>Main and Renderer</source>
          <target state="translated">메인과 렌더러</target>
        </trans-unit>
        <trans-unit id="b53208d488815855dd895906ff829adc9ff78cea" translate="yes" xml:space="preserve">
          <source>Main and Renderer Processes</source>
          <target state="translated">메인 및 렌더러 프로세스</target>
        </trans-unit>
        <trans-unit id="bd28ae81bb664c783b6f9a050e87f13629f673d6" translate="yes" xml:space="preserve">
          <source>Main process</source>
          <target state="translated">주요 과정</target>
        </trans-unit>
        <trans-unit id="e92739bf5eb177cbc20df5d923a76a756209a14d" translate="yes" xml:space="preserve">
          <source>Major Version Increments</source>
          <target state="translated">주요 버전 증가</target>
        </trans-unit>
        <trans-unit id="15658f56ce81f1e448f2ea894b48e7e0a98dfaa8" translate="yes" xml:space="preserve">
          <source>Major releases</source>
          <target state="translated">주요 릴리스</target>
        </trans-unit>
        <trans-unit id="538d8b92993a68dce392ee56fb0fb80b9f6b4060" translate="yes" xml:space="preserve">
          <source>Major version change</source>
          <target state="translated">주요 버전 변경</target>
        </trans-unit>
        <trans-unit id="6304d1caf7f16f9be785c9c328a018b0d5156b1d" translate="yes" xml:space="preserve">
          <source>Make Electron code compatible with the new libcc</source>
          <target state="translated">Electron 코드를 새로운 libcc와 호환 가능하게하십시오</target>
        </trans-unit>
        <trans-unit id="123ebe43cb0ceb7111bbb2d0db8366fa969b4407" translate="yes" xml:space="preserve">
          <source>Make HTTP/HTTPS requests.</source>
          <target state="translated">HTTP / HTTPS 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="78ccfead62fd93ae7a93727e70b96ebb1a1ca6c1" translate="yes" xml:space="preserve">
          <source>Make a checklist of the Electron patches that need to be applied with &lt;code&gt;git log --oneline&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git log --oneline&lt;/code&gt; 을 적용해야하는 Electron 패치 체크리스트 작성</target>
        </trans-unit>
        <trans-unit id="fb9d214a8c3a813ca4f40f1248f0fa923e2c259d" translate="yes" xml:space="preserve">
          <source>Make codes changes in Electron repository.</source>
          <target state="translated">Electron 저장소에서 코드를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="20990824044b34a54949bd84530966fc5cb788ea" translate="yes" xml:space="preserve">
          <source>Make internal builds of libcc and electron</source>
          <target state="translated">libcc와 전자의 내부 빌드</target>
        </trans-unit>
        <trans-unit id="6c3892045c656f1e659c81949a277d7e8a795831" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;win_delay_load_hook&lt;/code&gt; is not set to &lt;code&gt;false&lt;/code&gt; in the module's &lt;code&gt;binding.gyp&lt;/code&gt;.</source>
          <target state="translated">모듈의 &lt;code&gt;binding.gyp&lt;/code&gt; 에서 &lt;code&gt;win_delay_load_hook&lt;/code&gt; 이 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않았는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="22a93996cb9b35166bec2f617cb93d4e0a0ce26d" translate="yes" xml:space="preserve">
          <source>Make sure it builds then add, commit, and push work to electron's crashpad fork</source>
          <target state="translated">빌드하고 전자의 크래쉬 패드 포크에 작업을 추가, 커밋 및 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="0abed7d5a480fac5cef7a4545cb0d29ba466f6cf" translate="yes" xml:space="preserve">
          <source>Make sure that your app's &lt;code&gt;node_modules&lt;/code&gt; directory is empty.</source>
          <target state="translated">앱의 &lt;code&gt;node_modules&lt;/code&gt; 디렉토리가 비어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce695f6c79213567b657ab0ab0a20b729a1495b1" translate="yes" xml:space="preserve">
          <source>Make sure the linter does not report any issues and that all tests pass. Please do not submit patches that fail either check.</source>
          <target state="translated">린터가 문제를보고하지 않고 모든 테스트에 합격했는지 확인하십시오. 확인에 실패한 패치는 제출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="01a4bd30b0fc35971b3145968b1e61859627562f" translate="yes" xml:space="preserve">
          <source>Make sure the native module is compatible with the target platform and architecture for your Electron app.</source>
          <target state="translated">네이티브 모듈이 Electron 앱의 대상 플랫폼 및 아키텍처와 호환되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8719c0f428cd1e89411827eefee5c4f8bba44fef" translate="yes" xml:space="preserve">
          <source>Make sure you have installed &lt;code&gt;pywin32&lt;/code&gt; with &lt;code&gt;pip install pywin32&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pip install pywin32&lt;/code&gt; 로 &lt;code&gt;pywin32&lt;/code&gt; 를 설치했는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="971665255c9f7514f0fb7340e444b4ea708018ac" translate="yes" xml:space="preserve">
          <source>Make sure you have the latest Visual Studio update installed.</source>
          <target state="translated">최신 Visual Studio 업데이트가 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bd200749e96183e292d7ffb6a2e24e6e794542ea" translate="yes" xml:space="preserve">
          <source>Makes the browser go back a web page.</source>
          <target state="translated">브라우저가 웹 페이지로 돌아가도록합니다.</target>
        </trans-unit>
        <trans-unit id="fb33f8c8468b4ef03b24447c1b467fe21bdd8e7f" translate="yes" xml:space="preserve">
          <source>Makes the browser go forward a web page.</source>
          <target state="translated">브라우저가 웹 페이지를 앞으로 이동하게합니다.</target>
        </trans-unit>
        <trans-unit id="3598715e580b14a7b0457c42b72ca9d527ffe21e" translate="yes" xml:space="preserve">
          <source>Makes the guest page go back.</source>
          <target state="translated">손님 페이지를 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="8fecea1ee7ec37d488b674dfe0c96e2d98ff2179" translate="yes" xml:space="preserve">
          <source>Makes the guest page go forward.</source>
          <target state="translated">손님 페이지를 앞으로 이동시킵니다.</target>
        </trans-unit>
        <trans-unit id="267a0d8700d17b6e1c1981abe6b4204bfac85631" translate="yes" xml:space="preserve">
          <source>Makes the window ignore all mouse events.</source>
          <target state="translated">창에서 모든 마우스 이벤트를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="6dd49a56260ae56c79b5cb939972481551eeff57" translate="yes" xml:space="preserve">
          <source>Makes the window not show in the taskbar.</source>
          <target state="translated">창을 작업 표시 줄에 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="671c4a1a00d83c053d9d4fc465a563ed8e1f7e2c" translate="yes" xml:space="preserve">
          <source>Making Changes</source>
          <target state="translated">변경</target>
        </trans-unit>
        <trans-unit id="046dd363a2869c372fd92b4d7fc805573323a713" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to introduce new functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">액세스 가능한 응용 프로그램을 만드는 것이 중요하며 개발자가 모든 사람에게 더 나은 앱을 만들 수있는 기회를 제공 하는 &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; 및 &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron에&lt;/a&gt; 새로운 기능을 도입하게되어 기쁩니다 .</target>
        </trans-unit>
        <trans-unit id="2e08aa5ea347df43acdfe2f0439c979d90b654c1" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to provide functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">액세스 가능한 애플리케이션을 만드는 것이 중요하며 개발자에게 모든 사람을 위해 더 나은 앱을 만들 수있는 기회를 제공하는 기능을 &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; 및 &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; 에 제공하게 되어 기쁩니다 .</target>
        </trans-unit>
        <trans-unit id="08f0c0cf51888a42175c6e62922d9b9e24579a11" translate="yes" xml:space="preserve">
          <source>Malay</source>
          <target state="translated">Malay</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="cfb5310c4958ed16357aa5406e541fbeec602420" translate="yes" xml:space="preserve">
          <source>Maltese</source>
          <target state="translated">Maltese</target>
        </trans-unit>
        <trans-unit id="64ee1d8049f251ea9cde4c5ba76bbc0737728e80" translate="yes" xml:space="preserve">
          <source>Manage browser sessions, cookies, cache, proxy settings, etc.</source>
          <target state="translated">브라우저 세션, 쿠키, 캐시, 프록시 설정 등을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="dec209aaca99776ec018cbb9ee0ec7a9b32b56e6" translate="yes" xml:space="preserve">
          <source>Manage files and URLs using their default applications.</source>
          <target state="translated">기본 응용 프로그램을 사용하여 파일과 URL을 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="c14e21aaec4b77e9b50c210353d726630a69b1b8" translate="yes" xml:space="preserve">
          <source>Manipulate the child browser window</source>
          <target state="translated">자식 브라우저 창을 조작</target>
        </trans-unit>
        <trans-unit id="a4ec06ac844939e1ccc621aa0ad111fd5f89f005" translate="yes" xml:space="preserve">
          <source>Manipulate the command line arguments for your app that Chromium reads</source>
          <target state="translated">Chromium이 읽는 앱의 명령 줄 인수 조작</target>
        </trans-unit>
        <trans-unit id="fb1bd8fdc6e94ec7a627151e90abe08525adced7" translate="yes" xml:space="preserve">
          <source>Manual distribution</source>
          <target state="translated">수동 배포</target>
        </trans-unit>
        <trans-unit id="5821968c0c33922eaabe477fa49fcd35619ff03e" translate="yes" xml:space="preserve">
          <source>Manually Enabling Accessibility Features</source>
          <target state="translated">수동으로 접근성 기능 활성화</target>
        </trans-unit>
        <trans-unit id="a0ba40e77497397867a1a3dd6568cf58eee5431d" translate="yes" xml:space="preserve">
          <source>Manually building for Electron</source>
          <target state="translated">전자를위한 수동 구축</target>
        </trans-unit>
        <trans-unit id="bb6cefe0d60d1a577573bd69f97f78669acd2fbc" translate="yes" xml:space="preserve">
          <source>Manually building for a custom build of Electron</source>
          <target state="translated">Electron의 맞춤형 빌드를위한 수동 빌드</target>
        </trans-unit>
        <trans-unit id="568e03bb96ad8f988e60a033c47bd9714368a07a" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">Chrome의 접근성 지원을 수동으로 사용 설정하여 애플리케이션 설정에서 접근성 스위치를 사용자에게 노출 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; 를 참조하십시오. 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="836ee840bea7373db0e0cc4f531370bb5b60dcbe" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">Chrome의 접근성 지원을 수동으로 활성화하여 애플리케이션 설정에서 사용자에게 접근성 스위치를 노출 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium의 접근성 문서&lt;/a&gt; 를 참조하세요. 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1265c5ec1ee3a59d7960f4a72261d97be1d0e0b9" translate="yes" xml:space="preserve">
          <source>Manually enabling accessibility features</source>
          <target state="translated">접근성 기능을 수동으로 활성화</target>
        </trans-unit>
        <trans-unit id="c54a6216905d7535196708b7c1d5030973af5032" translate="yes" xml:space="preserve">
          <source>Manually flipping fuses requires editing the Electron binary and modifying the fuse wire to be the sequence of bytes that represent the state of the fuses you want.</source>
          <target state="translated">퓨즈를 수동으로 뒤집으려면 Electron 바이너리를 편집하고 퓨즈 와이어를 원하는 퓨즈의 상태를 나타내는 바이트 시퀀스로 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="62e5d6a3d84b993e435e90eb7d2198758109e5ef" translate="yes" xml:space="preserve">
          <source>Manually update your own interfaces</source>
          <target state="translated">자신의 인터페이스를 수동으로 업데이트</target>
        </trans-unit>
        <trans-unit id="f04f90a6b4ac5544979ae8b2d057dc2a6dc802bf" translate="yes" xml:space="preserve">
          <source>Many users of Electron start with an entirely web-based app that they're turning into a desktop application. As web developers, we are used to loading resources from a variety of content delivery networks. Now that you are shipping a proper desktop application, attempt to &quot;cut the cord&quot; where possible and avoid letting your users wait for resources that never change and could easily be included in your app.</source>
          <target state="translated">Electron의 많은 사용자는 데스크톱 애플리케이션으로 전환하는 완전히 웹 기반 앱으로 시작합니다. 웹 개발자로서 우리는 다양한 콘텐츠 전송 네트워크에서 리소스를로드하는 데 익숙합니다. 이제 적절한 데스크톱 애플리케이션을 제공하고 있으므로 가능한 경우 &quot;코드를 잘라&quot;사용자가 변경되지 않고 앱에 쉽게 포함될 수있는 리소스를 기다리지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="6bb4b981fc369f78634393c244cc62dcb75bb23c" translate="yes" xml:space="preserve">
          <source>Marathi</source>
          <target state="translated">Marathi</target>
        </trans-unit>
        <trans-unit id="6877b22121257272b4fb1ebd67b0539d5fb26baf" translate="yes" xml:space="preserve">
          <source>Markdown rules</source>
          <target state="translated">마크 다운 규칙</target>
        </trans-unit>
        <trans-unit id="d28e529f4c8df657c79a8c2500e90ad8459e8c57" translate="yes" xml:space="preserve">
          <source>Marks the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity as inactive without invalidating it.</source>
          <target state="translated">현재 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; 사용자 활동을 무효화하지 않고 비활성으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="e8ceadd643faeb0bb54502b73c425647ff136a31" translate="yes" xml:space="preserve">
          <source>Marks the image as a template image.</source>
          <target state="translated">이미지를 템플릿 이미지로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6faf97cbf665d5c18d8d5f1fd4f3406005bc9b9a" translate="yes" xml:space="preserve">
          <source>Master VHD URI - use URI obtained @ end of previous step</source>
          <target state="translated">마스터 VHD URI-이전 단계 끝에서 얻은 URI 사용</target>
        </trans-unit>
        <trans-unit id="1576e95f7c9ece7c3cbadabe664fd458e0dba654" translate="yes" xml:space="preserve">
          <source>Master VM name - just a unique name to identify the temporary VM</source>
          <target state="translated">마스터 VM 이름-임시 VM을 식별하기위한 고유 한 이름</target>
        </trans-unit>
        <trans-unit id="9893692afa63ac13cae95202fe36b917b133c42c" translate="yes" xml:space="preserve">
          <source>Master VM size - use &lt;code&gt;Standard_F32s_v2&lt;/code&gt;</source>
          <target state="translated">마스터 VM 크기 - 사용 &lt;code&gt;Standard_F32s_v2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4cb68450d6ee60729f8e6bf50c6178cacca48e3" translate="yes" xml:space="preserve">
          <source>Match URLs which are IP address literals.</source>
          <target state="translated">IP 주소 리터럴 인 URL을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="33ab1c88001bf081442d8776abcc8ae32ce1b8a6" translate="yes" xml:space="preserve">
          <source>Match a particular domain suffix.</source>
          <target state="translated">특정 도메인 접미사와 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="7ef5c8e655993c05557e9aa0674b43d038556da1" translate="yes" xml:space="preserve">
          <source>Match all hostnames that match the pattern HOSTNAME_PATTERN.</source>
          <target state="translated">HOSTNAME_PATTERN 패턴과 일치하는 모든 호스트 이름을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="a6ab65cfe6eda9c382fe697344f8af846c1bc900" translate="yes" xml:space="preserve">
          <source>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</source>
          <target state="translated">주어진 범위 사이에있는 IP 리터럴에 대한 URL을 일치시킵니다. IP 범위는 CIDR 표기법을 사용하여 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="66b5a35f9ebfbc106121468ab684462bb4780f8a" translate="yes" xml:space="preserve">
          <source>Match local addresses. The meaning of &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; is whether the host matches one of: &quot;127.0.0.1&quot;, &quot;::1&quot;, &quot;localhost&quot;.</source>
          <target state="translated">지역 주소와 일치합니다. &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; 의 의미는 호스트가 &quot;127.0.0.1&quot;, &quot;:: 1&quot;, &quot;localhost&quot;중 하나와 일치하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="bc1970136ab27583ccea13cbf7161d7e25b69a5e" translate="yes" xml:space="preserve">
          <source>Maximizes the window. This will also show (but not focus) the window if it isn't being displayed already.</source>
          <target state="translated">창을 최대화합니다. 창이 아직 표시되지 않은 경우 창에 표시되지만 초점이 맞지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="44d7922eadbe45b1774995d2449a5359ea62d9a2" translate="yes" xml:space="preserve">
          <source>Measure, Measure, Measure</source>
          <target state="translated">측정, 측정, 측정</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">메모리 관리</target>
        </trans-unit>
        <trans-unit id="a39a2691f8ac63df7fcbe6ae7ece40b10d717679" translate="yes" xml:space="preserve">
          <source>MemoryInfo</source>
          <target state="translated">MemoryInfo</target>
        </trans-unit>
        <trans-unit id="d2f3ea8610a8148842353371965b406006ea2e95" translate="yes" xml:space="preserve">
          <source>MemoryInfo Object</source>
          <target state="translated">MemoryInfo 객체</target>
        </trans-unit>
        <trans-unit id="b6f34e962df288485f4a23a96a69701e9811a805" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails</source>
          <target state="translated">MemoryUsageDetails</target>
        </trans-unit>
        <trans-unit id="6b8e378b13b324bf2719d56f05d2a76e1fdca001" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails Object</source>
          <target state="translated">MemoryUsageDetails 객체</target>
        </trans-unit>
        <trans-unit id="57f5f5efbc5990f5230aa95359042338b856707b" translate="yes" xml:space="preserve">
          <source>Menu</source>
          <target state="translated">Menu</target>
        </trans-unit>
        <trans-unit id="ac638b6bd0a0e2ae3936b49675084e959e08498d" translate="yes" xml:space="preserve">
          <source>Menu Item Position</source>
          <target state="translated">메뉴 항목 위치</target>
        </trans-unit>
        <trans-unit id="c80d07f2f5248a4d681913d75eca7a816c2ab9da" translate="yes" xml:space="preserve">
          <source>Menu()</source>
          <target state="translated">Menu()</target>
        </trans-unit>
        <trans-unit id="6c4aea89b61f6d70b9afb61efa7ba962a76cb7a1" translate="yes" xml:space="preserve">
          <source>Menu:</source>
          <target state="translated">Menu:</target>
        </trans-unit>
        <trans-unit id="fd0b0b8f9535c21f5c697415e34da8e008d26d26" translate="yes" xml:space="preserve">
          <source>MenuItem</source>
          <target state="translated">MenuItem</target>
        </trans-unit>
        <trans-unit id="7cc9eb5ad4b43fe57d0aef498e053f33d8a9c732" translate="yes" xml:space="preserve">
          <source>MenuItem()</source>
          <target state="translated">MenuItem()</target>
        </trans-unit>
        <trans-unit id="79343f29f5723f9f94c0038b7028cb8a494caeb2" translate="yes" xml:space="preserve">
          <source>Merge temporary branch (pre-2-0-x branches only)</source>
          <target state="translated">임시 브랜치 병합 (-2-0-x 브랜치 만 해당)</target>
        </trans-unit>
        <trans-unit id="edbc4cdf49b60f12acfba715eaa71dd0dc3b31f8" translate="yes" xml:space="preserve">
          <source>Merges all windows into one window with multiple tabs when native tabs are enabled and there is more than one open window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 둘 이상의 열린 창이있는 경우 모든 창을 여러 개의 탭이있는 하나의 창으로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="f62e9e3e46d782563d406255ceb97e4d191cd710" translate="yes" xml:space="preserve">
          <source>Merging back into master</source>
          <target state="translated">마스터로 다시 병합</target>
        </trans-unit>
        <trans-unit id="b8b0b3aac0d6933ac642e6939867daa972acb2a1" translate="yes" xml:space="preserve">
          <source>Merging back into old release branch</source>
          <target state="translated">이전 릴리스 지점으로 다시 병합</target>
        </trans-unit>
        <trans-unit id="e631ac93f56429496650cc40344c0ce91e67133d" translate="yes" xml:space="preserve">
          <source>MessageChannelMain</source>
          <target state="translated">MessageChannelMain</target>
        </trans-unit>
        <trans-unit id="5dbc81c87b66b57c3100916624cb280e2d838912" translate="yes" xml:space="preserve">
          <source>MessagePortMain</source>
          <target state="translated">MessagePortMain</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="37d18b76453fed3e678a25bf44af7335d8a1f834" translate="yes" xml:space="preserve">
          <source>Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;developed a tool that compiles Electron apps as &lt;code&gt;.appx&lt;/code&gt; packages&lt;/a&gt;, enabling developers to use some of the goodies found in the new application model. This guide explains how to use it - and what the capabilities and limitations of an Electron AppX package are.</source>
          <target state="translated">Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;는 Electron 앱을 &lt;code&gt;.appx&lt;/code&gt; 패키지 로 컴파일하는 도구를&lt;/a&gt; 개발하여 개발자가 새로운 애플리케이션 모델에서 찾은 장점 중 일부를 사용할 수 있도록했습니다. 이 안내서는 사용 방법 및 Electron AppX 패키지의 기능 및 제한 사항에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6e458173eef4a800366eeb68965cf8f147c4756b" translate="yes" xml:space="preserve">
          <source>Migration</source>
          <target state="translated">Migration</target>
        </trans-unit>
        <trans-unit id="28128d38fad00ed20714cff948ab05f77479d1e6" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer</source>
          <target state="translated">MimeTypedBuffer</target>
        </trans-unit>
        <trans-unit id="d6b317ab061a8236f4adc5d7739f52a26b4e8122" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer Object</source>
          <target state="translated">MimeTypedBuffer 객체</target>
        </trans-unit>
        <trans-unit id="5c250802ed4e299671bafdfe26fbd5c52d2f174a" translate="yes" xml:space="preserve">
          <source>Minimal Bootstrapping</source>
          <target state="translated">최소 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="59d44ab0c473a6e50cdb5fc05dcae565d64d32c4" translate="yes" xml:space="preserve">
          <source>Minimizes the window. On some platforms the minimized window will be shown in the Dock.</source>
          <target state="translated">창을 최소화합니다. 일부 플랫폼에서는 최소화 된 창이 Dock에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="822d8a4f24b72b15bce76b88a8306344b595b682" translate="yes" xml:space="preserve">
          <source>Minor Version Increments</source>
          <target state="translated">부 버전 증가</target>
        </trans-unit>
        <trans-unit id="f00051475cd7040e49b1165a98e0ececdb494a4c" translate="yes" xml:space="preserve">
          <source>Minor releases</source>
          <target state="translated">부 릴리스</target>
        </trans-unit>
        <trans-unit id="187790ce114a2fd84cf44bc5850252f1405fdd09" translate="yes" xml:space="preserve">
          <source>Minor version change</source>
          <target state="translated">부 버전 변경</target>
        </trans-unit>
        <trans-unit id="74adc5789ce92de7bbb5e3d84a287a1ce6d3e7f5" translate="yes" xml:space="preserve">
          <source>Mirror</source>
          <target state="translated">Mirror</target>
        </trans-unit>
        <trans-unit id="8d568b1b4b206e88208849821e5c0a4c26cb45cd" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas</source>
          <target state="translated">누락 된 기능 : 알파</target>
        </trans-unit>
        <trans-unit id="50b753b77904c96a7fe67edc0e7799140807aeb3" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas, and Nightly</source>
          <target state="translated">누락 된 기능 : 알파 및 야간</target>
        </trans-unit>
        <trans-unit id="a12f39102ef88d1b1648a3b25092a5d22a170662" translate="yes" xml:space="preserve">
          <source>Missing fonts</source>
          <target state="translated">누락 된 글꼴</target>
        </trans-unit>
        <trans-unit id="40ce4ab635954d17098ad98dd6d97891a6b2d6fa" translate="yes" xml:space="preserve">
          <source>Mixed-sandbox mode is now enabled by default.</source>
          <target state="translated">이제 혼합 샌드 박스 모드가 기본적으로 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="aa608f50164ae4468eca5f7a4828180613e032b7" translate="yes" xml:space="preserve">
          <source>MobX Developer Tools</source>
          <target state="translated">MobX 개발자 도구</target>
        </trans-unit>
        <trans-unit id="901b00eb5476b91a74e2f260fe55be50affcee6d" translate="yes" xml:space="preserve">
          <source>Modal windows</source>
          <target state="translated">모달 창</target>
        </trans-unit>
        <trans-unit id="7a2466ce49a31d04da530301ef401489d60d7cc3" translate="yes" xml:space="preserve">
          <source>Modern JavaScript development usually involves many files and modules. While that's perfectly fine for developing with Electron, we heavily recommend that you bundle all your code into one single file to ensure that the overhead included in calling &lt;code&gt;require()&lt;/code&gt; is only paid once when your application loads.</source>
          <target state="translated">최신 JavaScript 개발에는 일반적으로 많은 파일과 모듈이 포함됩니다. Electron을 사용하여 개발하는 데는 완벽 하긴하지만, &lt;code&gt;require()&lt;/code&gt; 호출에 포함 된 오버 헤드 가 애플리케이션이로드 될 때 한 번만 지불 되도록 모든 코드를 하나의 파일로 묶는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5f063682df9993294db724b001ca80ba840abcb8" translate="yes" xml:space="preserve">
          <source>Modernization</source>
          <target state="translated">Modernization</target>
        </trans-unit>
        <trans-unit id="9c08142f037420f3dd892cd9f96c1c768041be72" translate="yes" xml:space="preserve">
          <source>Modify the VM as required.</source>
          <target state="translated">필요에 따라 VM을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="5233ddfcb825a01b152dd312db82205b9ff31f04" translate="yes" xml:space="preserve">
          <source>Modify your package.json file</source>
          <target state="translated">package.json 파일 수정</target>
        </trans-unit>
        <trans-unit id="141fcfc0a89ae99212603bd3aa8017d60a94f035" translate="yes" xml:space="preserve">
          <source>Module methods and events</source>
          <target state="translated">모듈 방법 및 이벤트</target>
        </trans-unit>
        <trans-unit id="ac43823e76d4446a8b140446f86e9cf10a49045a" translate="yes" xml:space="preserve">
          <source>Modules for Both Process Types</source>
          <target state="translated">두 프로세스 유형에 대한 모듈</target>
        </trans-unit>
        <trans-unit id="0655e943f357853a23dbc1fca9b8b8b74187fed0" translate="yes" xml:space="preserve">
          <source>Modules for Both Processes:</source>
          <target state="translated">두 프로세스를위한 모듈 :</target>
        </trans-unit>
        <trans-unit id="fad485f2b0513e07b52567a6f2a346d73ddbc539" translate="yes" xml:space="preserve">
          <source>Modules for the Main Process:</source>
          <target state="translated">주요 프로세스를위한 모듈 :</target>
        </trans-unit>
        <trans-unit id="dfc2146f5598a75fa9da745d85433f8c014cba38" translate="yes" xml:space="preserve">
          <source>Modules for the Renderer Process (Web Page):</source>
          <target state="translated">렌더러 프로세스 (웹 페이지) 용 모듈 :</target>
        </trans-unit>
        <trans-unit id="859556f94b13fc510ff5085b5fb29e88a587fc7b" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;node-pre-gyp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node-pre-gyp&lt;/code&gt; 에 의존하는 모듈</target>
        </trans-unit>
        <trans-unit id="9e6cb54b92e776ea4523222c80634966b1a25f1c" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;prebuild&lt;/code&gt;</source>
          <target state="translated">사전 &lt;code&gt;prebuild&lt;/code&gt; 의존하는 모듈</target>
        </trans-unit>
        <trans-unit id="977ca71334b90aac52382878a5bc9c5fe2dc63d2" translate="yes" xml:space="preserve">
          <source>Mojo</source>
          <target state="translated">Mojo</target>
        </trans-unit>
        <trans-unit id="981fb1a731db18be7ffbc618830d04ecbc60cd90" translate="yes" xml:space="preserve">
          <source>Moldavian</source>
          <target state="translated">Moldavian</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="ad3be9da0333f2d86e25caf5c419702d7e211450" translate="yes" xml:space="preserve">
          <source>Monitor power state changes.</source>
          <target state="translated">전원 상태 변경을 모니터링합니다.</target>
        </trans-unit>
        <trans-unit id="044cb6085769f286e24b4d2a84f4981677f5f54c" translate="yes" xml:space="preserve">
          <source>Monitoring Goma</source>
          <target state="translated">Goma 모니터링</target>
        </trans-unit>
        <trans-unit id="0d6772c17c36f0f8030e0a6c6baa2bec775c05de" translate="yes" xml:space="preserve">
          <source>Monitoring begins immediately locally and asynchronously on child processes as soon as they receive the &lt;code&gt;startMonitoring&lt;/code&gt; request.</source>
          <target state="translated">모니터링은 &lt;code&gt;startMonitoring&lt;/code&gt; 요청 을받는 즉시 하위 프로세스에서 로컬 및 비동기 적으로 즉시 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="5eaa209d8dce0c8c489a3d027ee8e07c8703eb01" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;application-packaging&quot;&gt;응용 프로그램 패키징&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f03c38003a057a3ee024bb1cd2b981c5d824af4a" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;tutorial/application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;tutorial/application-packaging&quot;&gt;애플리케이션 패키징&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac12df785b0417cadd38f4b76e9fd5ed4a671464" translate="yes" xml:space="preserve">
          <source>More information can be found in the &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL docs&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL 문서&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="00e06820ccf492f1a47ae5ceded61952a3d977ee" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more Electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">샌드 박스에 더 많은 Electron API를 노출하기 위해 필요에 따라 더 추가 할 수 있지만, 기본 프로세스의 모든 모듈은 이미 &lt;code&gt;electron.remote.require&lt;/code&gt; 를 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="381a4f2cdda5a922f71425e63e4ead748c557260" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">샌드 박스에서 더 많은 전자 API를 노출하는 데 필요한만큼 더 추가 할 수 있지만 기본 프로세스의 모든 모듈은 &lt;code&gt;electron.remote.require&lt;/code&gt; 를 통해 이미 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a6c5a476bf196391c786e8d65652ebdf2f0edbe" translate="yes" xml:space="preserve">
          <source>More precisely the format is &lt;code&gt;window:id:other_id&lt;/code&gt; where &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;CGWindowID&lt;/code&gt; (&lt;code&gt;uint64_t&lt;/code&gt;) on macOS and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux. &lt;code&gt;other_id&lt;/code&gt; is used to identify web contents (tabs) so within the same top level window.</source>
          <target state="translated">보다 정확하게 형식은 &lt;code&gt;window:id:other_id&lt;/code&gt; 이며 여기서 &lt;code&gt;id&lt;/code&gt; 는 Windows의 경우 &lt;code&gt;HWND&lt;/code&gt; , macOS의 경우 &lt;code&gt;CGWindowID&lt;/code&gt; ( &lt;code&gt;uint64_t&lt;/code&gt; ) , Linux의 경우 &lt;code&gt;Window&lt;/code&gt; ( &lt;code&gt;unsigned long&lt;/code&gt; )입니다. &lt;code&gt;other_id&lt;/code&gt; 는 동일한 최상위 창 내에서 웹 콘텐츠 (탭)를 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="91ad2fc5f8c51939d84c8988f4bdd7e13db85699" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;fs&lt;/code&gt; APIs can read a file or get a file's information from &lt;code&gt;asar&lt;/code&gt; archives without unpacking, but for some APIs that rely on passing the real file path to underlying system calls, Electron will extract the needed file into a temporary file and pass the path of the temporary file to the APIs to make them work. This adds a little overhead for those APIs.</source>
          <target state="translated">대부분의 &lt;code&gt;fs&lt;/code&gt; API는 압축 을 &lt;code&gt;asar&lt;/code&gt; 않고 파일을 읽거나 asar 아카이브 에서 파일 정보를 얻을 수 있지만 실제 파일 경로를 기본 시스템 호출에 전달하는 데 의존하는 일부 API의 경우 Electron은 필요한 파일을 임시 파일로 추출하여 경로를 전달합니다. 임시 파일을 API에 적용하여 작동시킵니다. 이는 해당 API에 약간의 오버 헤드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="24df657906e0a9ff5dd9d380b688073ddd400cbe" translate="yes" xml:space="preserve">
          <source>Most issues are resolved by opening a pull request. The process for opening and reviewing a pull request is similar to that of opening and triaging issues, but carries with it a necessary review and approval workflow that ensures that the proposed changes meet the minimal quality and functional guidelines of the Electron project.</source>
          <target state="translated">풀 요청을 열면 대부분의 문제가 해결됩니다. 끌어 오기 요청을 열고 검토하는 프로세스는 열기 및 심사 문제와 유사하지만 제안 된 변경 사항이 Electron 프로젝트의 최소 품질 및 기능 지침을 충족시키는 데 필요한 검토 및 승인 워크 플로우와 함께 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1963afbf0297022503035c708168c89e69e8dc93" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;atom/&lt;/code&gt; or &lt;code&gt;brightray/&lt;/code&gt; folders, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; 저장소 에 대해 열린 대부분의 풀 요청 에는 &lt;code&gt;atom/&lt;/code&gt; 또는 &lt;code&gt;brightray/&lt;/code&gt; 폴더 의 C / C ++ 코드 , &lt;code&gt;lib/&lt;/code&gt; 폴더 의 JavaScript 코드 , &lt;code&gt;docs/api/&lt;/code&gt; 의 문서 또는 &lt;code&gt;spec/&lt;/code&gt; 테스트의 변경 사항이 포함됩니다. 폴더.</target>
        </trans-unit>
        <trans-unit id="d310017fd52c36bba769938ed4541a96183334c5" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;shell/&lt;/code&gt; folder, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; 저장소 에 대해 열린 대부분의 pull 요청 에는 &lt;code&gt;shell/&lt;/code&gt; 폴더 의 C / C ++ 코드 , &lt;code&gt;lib/&lt;/code&gt; 폴더 의 JavaScript 코드 , &lt;code&gt;docs/api/&lt;/code&gt; 의 문서 또는 &lt;code&gt;spec/&lt;/code&gt; 폴더의 테스트에 대한 변경 사항이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="61d68b3e3473c488df7dd74b03100ff56229d822" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; 가&lt;/a&gt;기본적으로 지원하므로 대부분의 사용자는이 기능을 무료로 이용할 수 있습니다. 이러한 도구를 사용하지 않는 경우 계속 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="550338b96f962abd43f9d50834137ff2cdbf04df" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; 에&lt;/a&gt; 의해 즉시 지원되므로 대부분의 사용자는이 기능을 무료로 사용할 수 있습니다. 이러한 도구를 사용하지 않는 경우 계속 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="5c866bf8f9578a06c6fde85ef022e9042d1aa154" translate="yes" xml:space="preserve">
          <source>MouseInputEvent Object extends &lt;code&gt;InputEvent&lt;/code&gt;</source>
          <target state="translated">MouseInputEvent 객체는 &lt;code&gt;InputEvent&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="1e274257075c36c67ce2efd3b62de41253ca1f8d" translate="yes" xml:space="preserve">
          <source>MouseInputEvent Object extends InputEvent</source>
          <target state="translated">MouseInputEvent 객체는 InputEvent를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="5a253abd6c7677d413a48e9e5d28d6651416e2c3" translate="yes" xml:space="preserve">
          <source>MouseWheelInputEvent Object extends &lt;code&gt;MouseInputEvent&lt;/code&gt;</source>
          <target state="translated">MouseWheelInputEvent 객체는 &lt;code&gt;MouseInputEvent&lt;/code&gt; 를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="379690624a74e4217623302bebdd5a2c8a92a873" translate="yes" xml:space="preserve">
          <source>MouseWheelInputEvent Object extends MouseInputEvent</source>
          <target state="translated">MouseWheelInputEvent 객체는 MouseInputEvent를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="b1e64e060fa9046354b956496a4b20d4ea90d4ac" translate="yes" xml:space="preserve">
          <source>Move it to &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache\6.0.9\arm64\node.lib&lt;/code&gt;</source>
          <target state="translated">그것을 이동에 &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache\6.0.9\arm64\node.lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6950455d237806d5d93ac0532b6858342225fe4" translate="yes" xml:space="preserve">
          <source>Move the given file to trash and returns a boolean status for the operation.</source>
          <target state="translated">주어진 파일을 휴지통으로 옮기고 작업에 대한 부울 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a3875c81017814140fd6c2816640edc744cfd83" translate="yes" xml:space="preserve">
          <source>Moves the current tab into a new window if native tabs are enabled and there is more than one tab in the current window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 현재 창에 둘 이상의 탭이있는 경우 현재 탭을 새 창으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e5660e1f2cd10cda0a29aeade3256c592f8b18ef" translate="yes" xml:space="preserve">
          <source>Moves window above the source window in the sense of z-order. If the &lt;code&gt;mediaSourceId&lt;/code&gt; is not of type window or if the window does not exist then this method throws an error.</source>
          <target state="translated">z 순서의 의미에서 소스 창 위로 창을 이동합니다. 는 IF &lt;code&gt;mediaSourceId&lt;/code&gt; 는 형 창의 아니거나 윈도우가 존재하지 않는 경우,이 메서드에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2151334426d72b39234474a7474182d61ff5ba8c" translate="yes" xml:space="preserve">
          <source>Moves window to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">윈도우를 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="a9fd7b0bda50a6a5e59d1f13795eb4c168f24976" translate="yes" xml:space="preserve">
          <source>Moves window to the center of the screen.</source>
          <target state="translated">창을 화면 중앙으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="7ecadb0cd9f622532810aec703f5a1a3c4801173" translate="yes" xml:space="preserve">
          <source>Moves window to top(z-order) regardless of focus</source>
          <target state="translated">초점에 관계없이 창을 맨 위로 (z 순서) 이동</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
