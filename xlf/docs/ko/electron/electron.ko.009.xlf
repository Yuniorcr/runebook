<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="329f1b3458e5654003587ba829f6203f03eae44d" translate="yes" xml:space="preserve">
          <source>There are however fundamental differences between the two projects that make Electron a completely separate product from NW.js.</source>
          <target state="translated">그러나 Electron을 NW.js와 완전히 별개의 제품으로 만드는 두 프로젝트 사이에는 근본적인 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad08bdb5eb867f6f6d0e34b09e8ccaccad6477c4" translate="yes" xml:space="preserve">
          <source>There are numerous JavaScript bundlers out there and we know better than to anger the community by recommending one tool over another. We do however recommend that you use a bundler that is able to handle Electron's unique environment that needs to handle both Node.js and browser environments.</source>
          <target state="translated">수많은 자바 스크립트 번 들러가 있으며 한 도구를 다른 도구보다 추천하여 커뮤니티를 화나게하는 것보다 더 잘 알고 있습니다. 그러나 Node.js와 브라우저 환경을 모두 처리해야하는 Electron의 고유 한 환경을 처리 할 수있는 번 들러를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="daab325a6ad493b1e0ed384084d9ec64b56745d1" translate="yes" xml:space="preserve">
          <source>There are numerous differences in the amount of supported features. Electron has a bigger community, more production apps using it, and &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;a large amount of userland modules available on npm&lt;/a&gt;.</source>
          <target state="translated">지원되는 기능의 양에는 많은 차이가 있습니다. Electron에는 더 큰 커뮤니티, 더 많은 프로덕션 앱이 &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;있으며 npm에서 사용할 수있는 많은 사용자 영역 모듈이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="004aab477cea089e16c90111f185db2c7a87f6e9" translate="yes" xml:space="preserve">
          <source>There are questions that are asked quite often. Check this out before creating an issue:</source>
          <target state="translated">자주 묻는 질문이 있습니다. 문제를 만들기 전에이를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="be1bdaab0da3f14ef03597a90453c56457e443e0" translate="yes" xml:space="preserve">
          <source>There are several different ways to install native modules:</source>
          <target state="translated">네이티브 모듈을 설치하는 방법에는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3594ebce627515e92051d5777e5ec1d0dd0b473" translate="yes" xml:space="preserve">
          <source>There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.</source>
          <target state="translated">아래에 요약 된 1.x 전략에는 몇 가지 주요 변경 사항이 있습니다. 각 변경 사항은 개발자 / 유지 업체 및 앱 개발자의 요구와 우선 순위를 충족시키기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6a9ff1589bd15784761ca923818d0727ca501089" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electron 응용 프로그램을 업데이트하는 방법에는 여러 가지가 있습니다. 가장 쉽고 공식적으로 지원되는 것은 내장 &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;다람쥐&lt;/a&gt; 프레임 워크와 Electron의 &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; 모듈 을 이용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="1243fa7e8438e871f179890a16545848371e675e" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electron 애플리케이션을 업데이트하는 방법에는 여러 가지가 있습니다. 가장 쉽고 공식적으로 지원되는 것은 내장 &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; 프레임 워크와 Electron의 &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; 모듈 을 이용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="de8a36bc5c6e7059274d4fd4661f84f4dc105cfb" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;code&gt;.snap&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.snap&lt;/code&gt; 파일 을 만드는 세 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d95bb8a7dee45320eb44fe7853039108a4a1741" translate="yes" xml:space="preserve">
          <source>There is a second script, &lt;code&gt;script/patch.py&lt;/code&gt; that may be useful. Read &lt;code&gt;./script/patch.py -h&lt;/code&gt; for more information.</source>
          <target state="translated">유용 할 수 있는 두 번째 스크립트 인 &lt;code&gt;script/patch.py&lt;/code&gt; 가 있습니다. 자세한 내용은 &lt;code&gt;./script/patch.py -h&lt;/code&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="a8ee2e2a678feae54ac5c2aa26213901010f7d5c" translate="yes" xml:space="preserve">
          <source>There is not a lot of Python in this repository, but it too is governed by coding style rules. &lt;code&gt;npm run lint-py&lt;/code&gt; will check all Python, using &lt;code&gt;pylint&lt;/code&gt; to do so.</source>
          <target state="translated">이 저장소에는 많은 Python이 없지만 코딩 스타일 규칙에 의해 제어됩니다. &lt;code&gt;npm run lint-py&lt;/code&gt; 는 &lt;code&gt;pylint&lt;/code&gt; 를 사용하여 모든 Python을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="f1bb9ca43ae7748f326896a6ab75ed4d14280b8e" translate="yes" xml:space="preserve">
          <source>There is one important caveat: Native Node.js modules (that is, modules that require compilation of native code before they can be used) will need to be compiled to be used with Electron.</source>
          <target state="translated">한 가지 중요한주의 사항이 있습니다. Native Node.js 모듈 (즉, 네이티브 코드를 컴파일하기 전에 컴파일해야하는 모듈)을 Electron과 함께 사용하려면 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0bd2b272dfa5053fccdd984e4187c6a3d7ac780" translate="yes" xml:space="preserve">
          <source>There is only one Chromium, whereas there are many thousands of apps built on Electron, all of which behave slightly differently. Accounting for those differences can yield a huge possibility space, and make it challenging to ensure the security of the platform in unusual use cases.</source>
          <target state="translated">Chromium은 하나 뿐인 반면 Electron을 기반으로하는 수천 개의 앱이 있으며 모두 약간 다르게 작동합니다. 이러한 차이를 고려하면 엄청난 가능성의 여지가 생기고 비정상적인 사용 사례에서 플랫폼의 보안을 보장하기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a0e9dc372e0c40d38d2958352a0d648c5040d89" translate="yes" xml:space="preserve">
          <source>There may be instances where you want to respond to these events in the main process as well. The main process however does not have a &lt;code&gt;navigator&lt;/code&gt; object and thus cannot detect these events directly. Using Electron's inter-process communication utilities, the events can be forwarded to the main process and handled as needed, as shown in the following example.</source>
          <target state="translated">기본 프로세스에서 이러한 이벤트에 응답하려는 경우가있을 수도 있습니다. 그러나 기본 프로세스에는 &lt;code&gt;navigator&lt;/code&gt; 오브젝트가 없으므로 이러한 이벤트를 직접 감지 할 수 없습니다. Electron의 프로세스 간 통신 유틸리티를 사용하여 다음 예제와 같이 이벤트를 기본 프로세스로 전달하고 필요에 따라 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="0b31b2b1a36a2dcc19bb4b18ad6ce9ec661dac6b" translate="yes" xml:space="preserve">
          <source>There may be situations when you want to respond to online/offline events in the Main process as well. The Main process, however, does not have a &lt;code&gt;navigator&lt;/code&gt; object and cannot detect these events directly. In this case, you need to forward the events to the Main process using Electron's inter-process communication (IPC) utilities.</source>
          <target state="translated">Main 프로세스에서도 온라인 / 오프라인 이벤트에 대응하고 싶은 상황이있을 수 있습니다. 그러나 Main 프로세스에는 &lt;code&gt;navigator&lt;/code&gt; 개체가 없으며 이러한 이벤트를 직접 감지 할 수 없습니다. 이 경우 Electron의 IPC (프로세스 간 통신) 유틸리티를 사용하여 이벤트를 메인 프로세스로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="c76908a4e62bf35d62ab8daa6831ef2e371fa76d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a chance we need to change our build configuration to match the build flags that node wants in &lt;code&gt;node/common.gypi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node/common.gypi&lt;/code&gt; 에서 노드 가 원하는 빌드 플래그와 일치하도록 빌드 구성을 변경해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b0624f0c2d738520fefdcf3df7e9a83cea2bac5" translate="yes" xml:space="preserve">
          <source>There's an alternative way to specify a chromeless window. Instead of setting &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; which disables both the titlebar and window controls, you may want to have the title bar hidden and your content extend to the full window size, yet still preserve the window controls (&quot;traffic lights&quot;) for standard window actions. You can do so by specifying the &lt;code&gt;titleBarStyle&lt;/code&gt; option:</source>
          <target state="translated">크롬없는 창을 지정하는 다른 방법이 있습니다. 제목 표시 줄과 창 컨트롤을 모두 비활성화하는 &lt;code&gt;frame&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하는 대신 제목 표시 줄을 숨기고 콘텐츠를 전체 창 크기로 확장하면서 표준 창 동작을 위해 창 컨트롤 ( &quot;신호등&quot;)을 유지하는 것이 좋습니다. . &lt;code&gt;titleBarStyle&lt;/code&gt; 옵션 을 지정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="0ef3f0f83bb8cfbb28cb6dcf1d9c9e5d34f976bb" translate="yes" xml:space="preserve">
          <source>These are the guidelines for writing Electron documentation.</source>
          <target state="translated">Electron 문서 작성을위한 지침입니다.</target>
        </trans-unit>
        <trans-unit id="9d6027584eb7ad264155776e956f099186c67b37" translate="yes" xml:space="preserve">
          <source>These are the style guidelines for coding in Electron.</source>
          <target state="translated">Electron에서의 코딩을위한 스타일 가이드 라인입니다.</target>
        </trans-unit>
        <trans-unit id="b7d5fb044e65547b9059dc8dcca315472066a56d" translate="yes" xml:space="preserve">
          <source>These features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">이러한 기능은 감사 도구를 Electron 앱에 제공합니다. Spectron을 사용하여 테스트에 감사를 추가하거나 Devtron과 함께 DevTools 내에서 사용하도록 선택할 수 있습니다. 도구 요약을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="fd2128f3e70339d724cc007edf289f70837ab2c9" translate="yes" xml:space="preserve">
          <source>These flags are disabled owing to the fact that Electron uses BoringSSL instead of OpenSSL when building Node.js' &lt;code&gt;crypto&lt;/code&gt; module, and so will not work as designed.</source>
          <target state="translated">이러한 플래그는 Electron이 Node.js의 &lt;code&gt;crypto&lt;/code&gt; 모듈을 빌드 할 때 OpenSSL 대신 BoringSSL을 사용하기 때문에 비활성화 되므로 설계된대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0d8c7951f5bc627a70a99d0271644e93dc97b85" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">이 안내서는 Electron 프로젝트 자체에서 작업하는 사람들을위한 것입니다. Electron 앱 개발에 대한 지침은 &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d3108b4bf017db862027e0deae0b1a07984ba16" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">이 가이드는 Electron 프로젝트 자체에서 작업하는 사람들을위한 것입니다. Electron 앱 개발에 대한 가이드는 &lt;a href=&quot;readme#guides-and-tutorials&quot;&gt;/docs/README.md를&lt;/a&gt; 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="37c441683da7e488d5912c3b7aea3e8a75035f9f" translate="yes" xml:space="preserve">
          <source>These individual tutorials expand on topics discussed in the guide above.</source>
          <target state="translated">이 개별 자습서는 위 가이드에서 논의 된 주제를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="db666ef559d2fa34de4bff16e1c88aed612ebb1e" translate="yes" xml:space="preserve">
          <source>These mappings apply to the endpoint host in a net request (the TCP connect and host resolver in a direct connection, and the &lt;code&gt;CONNECT&lt;/code&gt; in an HTTP proxy connection, and the endpoint host in a &lt;code&gt;SOCKS&lt;/code&gt; proxy connection).</source>
          <target state="translated">이러한 맵핑은 순 요청의 엔드 포인트 호스트 (직접 연결의 TCP 연결 및 호스트 해석기 , HTTP 프록시 연결 의 &lt;code&gt;CONNECT&lt;/code&gt; 및 &lt;code&gt;SOCKS&lt;/code&gt; 프록시 연결 의 엔드 포인트 호스트 )에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5959f576697cc4d5a5e88b90052ec389f612923a" translate="yes" xml:space="preserve">
          <source>These methods can be accessed from the &lt;code&gt;webContents&lt;/code&gt; module:</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;webContents&lt;/code&gt; 모듈 에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="630557d884064039ed6c85e2f5ccbb60cf40eb54" translate="yes" xml:space="preserve">
          <source>These new features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">이러한 새로운 기능은 이러한 감사 도구를 Electron 앱에 제공합니다. Spectron을 사용하여 테스트에 감사를 추가하거나 Devtron과 함께 DevTools 내에서 감사를 사용할 수 있습니다. 도구 요약을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="d50011daa060d619340c176124cf64eb2f14b2ad" translate="yes" xml:space="preserve">
          <source>These steps are to help app developers learn when a branch they're using becomes unsupported, but without being excessively intrusive to end users.</source>
          <target state="translated">이 단계는 앱 개발자가 사용중인 브랜치가 지원되지 않지만 최종 사용자에게 지나치게 방해받지 않을 때 배우는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="6939e39778ca1f214b49200414bf0041255de666" translate="yes" xml:space="preserve">
          <source>These tools will take care of all the steps you need to take to end up with a distributable Electron applications, such as packaging your application, rebranding the executable, setting the right icons and optionally creating installers.</source>
          <target state="translated">이러한 도구는 응용 프로그램 패키징, 실행 파일 브랜드 변경, 올바른 아이콘 설정 및 선택적으로 설치 프로그램 생성과 같이 배포 가능한 Electron 응용 프로그램으로 끝나는 데 필요한 모든 단계를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="fa7a3b8057245a9a53616fa5a39e6151d07de38f" translate="yes" xml:space="preserve">
          <source>They backport a small amount of things as needed</source>
          <target state="translated">필요에 따라 소량의 물건을 백 포트</target>
        </trans-unit>
        <trans-unit id="2af9e4d561565d39f2dc7fde06124c3762b7daf9" translate="yes" xml:space="preserve">
          <source>They should be called only from the main process.</source>
          <target state="translated">주 프로세스에서만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d9ab6ef4734e8487306b0dcfa5fcac840dc24915" translate="yes" xml:space="preserve">
          <source>This API allows the user to set custom options for the save dialog that opens for the download item by default. The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function.</source>
          <target state="translated">이 API를 통해 사용자는 기본적으로 다운로드 항목에 대해 열리는 저장 대화 상자에 대한 사용자 정의 옵션을 설정할 수 있습니다. API는 세션의 &lt;code&gt;will-download&lt;/code&gt; 콜백 함수 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="925561daf4358b3834107004f7ee8e98e9571064" translate="yes" xml:space="preserve">
          <source>This API can be called safely before the &lt;code&gt;ready&lt;/code&gt; event the &lt;code&gt;app&lt;/code&gt; module emits, it is usually used to report errors in early stage of startup. If called before the app &lt;code&gt;ready&lt;/code&gt;event on Linux, the message will be emitted to stderr, and no GUI dialog will appear.</source>
          <target state="translated">이 API는 &lt;code&gt;app&lt;/code&gt; 모듈이 생성하는 &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 안전하게 호출 할 수 있으며 일반적으로 시작 초기 단계에서 오류를보고하는 데 사용됩니다. Linux 에서 앱 &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 호출 되면 메시지가 stderr로 생성되고 GUI 대화 상자가 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2402b140cb533396d2bbc56ab34f5b0b2e678306" translate="yes" xml:space="preserve">
          <source>This API does not support loading packed (.crx) extensions.</source>
          <target state="translated">이 API는 패킹 된 (.crx) 확장자로드를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c529d1c9cab6bf80d5b59619ec9fc0c3d353e55" translate="yes" xml:space="preserve">
          <source>This API is deprecated and users should use &lt;code&gt;protocol.isProtocolRegistered&lt;/code&gt; and &lt;code&gt;protocol.isProtocolIntercepted&lt;/code&gt; instead.</source>
          <target state="translated">이 API는 더 이상 사용되지 않으며 사용자는 대신 &lt;code&gt;protocol.isProtocolRegistered&lt;/code&gt; 및 &lt;code&gt;protocol.isProtocolIntercepted&lt;/code&gt; 를 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="71f803218a1d5d291dc1b96a5e9df5dc5d8a73e2" translate="yes" xml:space="preserve">
          <source>This API is implemented using the &lt;code&gt;remote&lt;/code&gt; module, which has both performance and security implications. Therefore its usage should be explicit.</source>
          <target state="translated">이 API는 성능 및 보안에 영향을 미치는 &lt;code&gt;remote&lt;/code&gt; 모듈을 사용하여 구현됩니다 . 그러므로 그 사용법은 분명해야합니다.</target>
        </trans-unit>
        <trans-unit id="ccce43948a3464a22a6b4489bf6c58e6939da711" translate="yes" xml:space="preserve">
          <source>This API is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">이 API는 macOS 10.14 Mojave 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5401090fcbe4d15f1aaf9a83475bad4f5adaeb4c" translate="yes" xml:space="preserve">
          <source>This API itself will not protect your user data; rather, it is a mechanism to allow you to do so. Native apps will need to set &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;Access Control Constants&lt;/a&gt; like &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt;&lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt;&lt;/a&gt; on their keychain entry so that reading it would auto-prompt for Touch ID biometric consent. This could be done with &lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt;&lt;code&gt;node-keytar&lt;/code&gt;&lt;/a&gt;, such that one would store an encryption key with &lt;code&gt;node-keytar&lt;/code&gt; and only fetch it if &lt;code&gt;promptTouchID()&lt;/code&gt; resolves.</source>
          <target state="translated">이 API 자체는 사용자 데이터를 보호하지 않습니다. 오히려 그렇게 할 수있는 메커니즘입니다. 네이티브 앱은 키 체인 항목에 &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags/ksecaccesscontroluserpresence?language=objc&quot;&gt; &lt;code&gt;kSecAccessControlUserPresence&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;a href=&quot;https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc&quot;&gt;액세스 제어 상수&lt;/a&gt; 를 설정 하여이를 읽으면 Touch ID 생체 인식 동의를 자동으로 요청합니다. 이 작업은 함께 할 수있는 &lt;a href=&quot;https://github.com/atom/node-keytar&quot;&gt; &lt;code&gt;node-keytar&lt;/code&gt; &lt;/a&gt; 하나와 암호화 키를 저장하는 것 같은 것을, &lt;code&gt;node-keytar&lt;/code&gt; 하고 경우에만 그것을 가져 &lt;code&gt;promptTouchID()&lt;/code&gt; 해결합니다.</target>
        </trans-unit>
        <trans-unit id="6f39198b0fa0d282f88937fb4cc331794e79a4d2" translate="yes" xml:space="preserve">
          <source>This API must be called after the &lt;code&gt;ready&lt;/code&gt; event is emitted.</source>
          <target state="translated">이 API는 &lt;code&gt;ready&lt;/code&gt; 이벤트가 생성 된 후에 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6ec73ae12bfc5ede319746c97b2c04f4bda600f4" translate="yes" xml:space="preserve">
          <source>This API, which was deprecated in Electron 8.0, is now removed.</source>
          <target state="translated">Electron 8.0에서 더 이상 사용되지 않는이 API는 이제 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="340c45f7f9a661e9ecd6ebb65818f8f2c652ab5b" translate="yes" xml:space="preserve">
          <source>This allows you to determine ahead of time whether or not Windows will silently throw the notification away.</source>
          <target state="translated">이를 통해 Windows가 자동으로 알림을 버릴지 여부를 미리 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b7e21637e7c965f48eb977557f27a7eb53b3d40" translate="yes" xml:space="preserve">
          <source>This also affects the Page Visibility API.</source>
          <target state="translated">이는 페이지 가시성 API에도 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="b6a4200d449e3b3057da0734f19cfb37176483d7" translate="yes" xml:space="preserve">
          <source>This bug is a &quot;feature&quot; of Windows' command prompt. It happens when clicking inside the prompt window with &lt;code&gt;QuickEdit&lt;/code&gt; enabled and is intended to allow selecting and copying output text easily. Since each accidental click will pause the build process, you might want to disable this feature in the command prompt properties.</source>
          <target state="translated">이 버그는 Windows 명령 프롬프트의 &quot;기능&quot;입니다. &lt;code&gt;QuickEdit&lt;/code&gt; 활성화 된 프롬프트 창 내부를 클릭 할 때 발생 하며 출력 텍스트를 쉽게 선택하고 복사 할 수 있도록하기위한 것입니다. 실수로 클릭 할 때마다 빌드 프로세스가 일시 중지되므로 명령 프롬프트 속성에서이 기능을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f46f0abdadcedbe72ac0adb70eeb03055c2be70" translate="yes" xml:space="preserve">
          <source>This can be done manually by visiting OmahaProxy in a browser, or automatically:</source>
          <target state="translated">브라우저에서 OmahaProxy를 방문하여 수동으로 수행하거나 자동으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="470ea6e43dab4d99846613ea1d79d2843778af70" translate="yes" xml:space="preserve">
          <source>This can be set quickly in powershell (ran as administrator):</source>
          <target state="translated">이는 powershell에서 빠르게 설정할 수 있습니다 (관리자 권한으로 실행).</target>
        </trans-unit>
        <trans-unit id="e19abaa13d0dba98679bd7418a20016c22238a79" translate="yes" xml:space="preserve">
          <source>This can be used in combination with &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt;&lt;code&gt;webContents.setSize&lt;/code&gt;&lt;/a&gt; to manually resize the webview contents in reaction to a window size change. This can make resizing faster compared to relying on the webview element bounds to automatically resize the contents.</source>
          <target state="translated">이것은 &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt; &lt;code&gt;webContents.setSize&lt;/code&gt; &lt;/a&gt; 와 함께 사용 하여 창 크기 변경에 대한 반응으로 webview 컨텐츠의 크기를 수동으로 조정할 수 있습니다. 그러면 webview 요소 경계를 사용하여 내용의 크기를 자동으로 조정하는 것보다 크기를 더 빠르게 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbe1af3b7fc7582107cc5d1b42a1f06116c01e40" translate="yes" xml:space="preserve">
          <source>This can happen during build, when Debugging Tools for Windows has been installed with Windows Driver Kit. Uninstall Windows Driver Kit and install Debugging Tools with steps described above.</source>
          <target state="translated">이는 빌드 중에 Windows 용 디버깅 도구가 Windows 드라이버 키트와 함께 설치된 경우 발생할 수 있습니다. 위에서 설명한 단계에 따라 Windows Driver Kit를 제거하고 디버깅 도구를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="cd6adbf27331cd50211951125f78609fbec2754f" translate="yes" xml:space="preserve">
          <source>This can sometimes be unnecessary, e.g. in a CI environment, when testing another component.</source>
          <target state="translated">예를 들어 CI 환경에서 다른 구성 요소를 테스트 할 때 필요하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d95071d9f0757b88558f8b1d59a4ba138589a4" translate="yes" xml:space="preserve">
          <source>This can take a significant amount of time depending on build machine as it has to build all of the libchromium source.</source>
          <target state="translated">모든 libchromium 소스를 빌드해야하므로 빌드 시스템에 따라 상당한 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ff35d4856557718c3a973fc186ad965641af82d" translate="yes" xml:space="preserve">
          <source>This cannot be called when &lt;code&gt;titleBarStyle&lt;/code&gt; is set to &lt;code&gt;customButtonsOnHover&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;titleBarStyle&lt;/code&gt; 이 &lt;code&gt;customButtonsOnHover&lt;/code&gt; 로 설정된 경우 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d48a5b7971571cec838785e96b3a7db7f89a3176" translate="yes" xml:space="preserve">
          <source>This document and its child documents will be updated to reflect the latest status of our API changes.</source>
          <target state="translated">이 문서와 하위 문서는 API 변경의 최신 상태를 반영하도록 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="85a949ce4a405bc3ce050a428eb09e1fccb5184d" translate="yes" xml:space="preserve">
          <source>This document describes the process for releasing a new version of Electron.</source>
          <target state="translated">이 문서는 새로운 버전의 Electron을 출시하는 과정을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2b08ebef74426ddb6ada26f318d5041f72ce60d2" translate="yes" xml:space="preserve">
          <source>This document outlines the process for manually loading an extension. You may also try &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer&lt;/a&gt;, a third-party tool that downloads extensions directly from the Chrome WebStore.</source>
          <target state="translated">이 문서는 확장을 수동으로로드하는 프로세스를 간략하게 설명합니다. Chrome 웹 스토어에서 직접 확장 프로그램을 다운로드하는 타사 도구 인 &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer를&lt;/a&gt; 사용해 볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1eca9d2a46807bf5aa40feb415b04fabc79e0911" translate="yes" xml:space="preserve">
          <source>This document uses the following convention to categorize breaking changes:</source>
          <target state="translated">이 문서에서는 다음 규칙을 사용하여 주요 변경 사항을 분류합니다.</target>
        </trans-unit>
        <trans-unit id="dd9bda8f3bea4fa30568a20bc89b0c284f32afe4" translate="yes" xml:space="preserve">
          <source>This doesn't affect existing &lt;code&gt;WebContents&lt;/code&gt;, and each &lt;code&gt;WebContents&lt;/code&gt; can use &lt;code&gt;webContents.setUserAgent&lt;/code&gt; to override the session-wide user agent.</source>
          <target state="translated">이는 기존 &lt;code&gt;WebContents&lt;/code&gt; 에 영향을 미치지 않으며 각 &lt;code&gt;WebContents&lt;/code&gt; 는 &lt;code&gt;webContents.setUserAgent&lt;/code&gt; 를 사용 하여 세션 전체 사용자 에이전트를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="305bb661633e2bd54b8cde837bb1530865ff1b43" translate="yes" xml:space="preserve">
          <source>This doesn't mean Electron is a JavaScript binding to graphical user interface (GUI) libraries. Instead, Electron uses web pages as its GUI, so you could also see it as a minimal Chromium browser, controlled by JavaScript.</source>
          <target state="translated">이는 Electron이 GUI (그래픽 사용자 인터페이스) 라이브러리에 대한 JavaScript 바인딩을 의미하지는 않습니다. 대신 Electron은 웹 페이지를 GUI로 사용하므로 JavaScript로 제어되는 최소 Chromium 브라우저로 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="27dcdff876f06b48e0909172d36571d4132749c8" translate="yes" xml:space="preserve">
          <source>This ensures that your working branch has the latest changes from &lt;code&gt;electron/electron&lt;/code&gt; master.</source>
          <target state="translated">이를 통해 작업 지점에 &lt;code&gt;electron/electron&lt;/code&gt; 마스터 에서 최신 변경 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="735aff75680f019b5b2eef8d283ba1c664d12844" translate="yes" xml:space="preserve">
          <source>This environment variable will not work if the &lt;code&gt;crashReporter&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; 가 시작 되면이 환경 변수가 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c53962e4beb1ce1eb5a88e924f00d58d0735bdc2" translate="yes" xml:space="preserve">
          <source>This event can be used to configure &lt;code&gt;webPreferences&lt;/code&gt; for the &lt;code&gt;webContents&lt;/code&gt; of a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; before it's loaded, and provides the ability to set settings that can't be set via &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; attributes.</source>
          <target state="translated">이 이벤트는 로드되기 전에 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 의 &lt;code&gt;webPreferences&lt;/code&gt; 에 대한 &lt;code&gt;webContents&lt;/code&gt; 를 구성하는 데 사용될 수 있으며 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 속성을 통해 설정할 수없는 설정을 설정하는 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="41906b2e4c0450c0c3063aeee9df7cc4ec746748" translate="yes" xml:space="preserve">
          <source>This event cannot be prevented, if you want to prevent redirects you should checkout out the &lt;code&gt;will-redirect&lt;/code&gt; event above.</source>
          <target state="translated">이 이벤트는 방지 할 수 없습니다. 리디렉션을 방지하려면 위 의 &lt;code&gt;will-redirect&lt;/code&gt; 이벤트를 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6bc76560bddb9d70b3ca30a5a355ba8b21fda8f7" translate="yes" xml:space="preserve">
          <source>This event is emitted after a user calls &lt;code&gt;quitAndInstall()&lt;/code&gt;.</source>
          <target state="translated">이 이벤트는 사용자가 &lt;code&gt;quitAndInstall()&lt;/code&gt; 호출 한 후에 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="70c04a1a73e4503c5b82edc3f66cd4701b39a5de" translate="yes" xml:space="preserve">
          <source>This event is guaranteed to be emitted after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;app&lt;/code&gt; 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 발생한 후에 반드시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0dcc17c4aef24a3104fdff9f4011974b0c8831ae" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-fail-load&lt;/code&gt; but emitted when the load was cancelled (e.g. &lt;code&gt;window.stop()&lt;/code&gt; was invoked).</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-fail-load&lt;/code&gt; 와 비슷하지만로드가 취소 될 때 발생합니다 (예 : &lt;code&gt;window.stop()&lt;/code&gt; 호출).</target>
        </trans-unit>
        <trans-unit id="534c78030b6fb5c4bb033d9366092911a59d6437" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-finish-load&lt;/code&gt; 와 유사 하지만로드가 실패하거나 취소 될 때 생성됩니다 &lt;code&gt;window.stop()&lt;/code&gt; 예 : window.stop () 호출). 오류 코드의 전체 목록과 의미는 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c72781b8974049a02755f7581656d7b25400e2c7" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-finish-load&lt;/code&gt; 와 유사 하지만로드가 실패 할 때 발생합니다. 오류 코드 및 그 의미의 전체 목록은 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebc14d8e2cd1b5d75f2d9ca245ca5574d93e3694" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt;, but fired when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-finish-load&lt;/code&gt; 와 비슷하지만로드가 실패하거나 취소 된 경우 발생합니다 &lt;code&gt;window.stop()&lt;/code&gt; 예 : window.stop () 호출).</target>
        </trans-unit>
        <trans-unit id="16cd81301f3901898ca383be2a9937686fea4f1b" translate="yes" xml:space="preserve">
          <source>This event is not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">이 이벤트는 앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 내비게이션에서는 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="43532412863a913d8fd70d6050dfc6b00fea2882" translate="yes" xml:space="preserve">
          <source>This event is not guaranteed to be emitted in all cases where the notification is closed.</source>
          <target state="translated">이 이벤트는 알림이 닫힌 모든 경우에 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daef2593fd9388d64158392d015f2a866d5cba6f" translate="yes" xml:space="preserve">
          <source>This event is usually emitted after the &lt;code&gt;did-finish-load&lt;/code&gt; event, but for pages with many remote resources, it may be emitted before the &lt;code&gt;did-finish-load&lt;/code&gt; event.</source>
          <target state="translated">이 이벤트는 일반적으로 &lt;code&gt;did-finish-load&lt;/code&gt; 이벤트 후에 생성되지만 원격 리소스가 많은 페이지의 경우 &lt;code&gt;did-finish-load&lt;/code&gt; 이벤트 전에 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38ab97caaab13790598e628158d115924d8e2ab7" translate="yes" xml:space="preserve">
          <source>This event will be emitted after &lt;code&gt;did-start-navigation&lt;/code&gt; and always before the &lt;code&gt;did-redirect-navigation&lt;/code&gt; event for the same navigation.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-start-navigation&lt;/code&gt; 후 항상 동일한 탐색에 대해 &lt;code&gt;did-redirect-navigation&lt;/code&gt; 이벤트 전에 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="cf65ac6c2ed2c392b3301215269f6f680440c2f0" translate="yes" xml:space="preserve">
          <source>This event will be emitted inside the primary instance of your application when a second instance has been executed and calls &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt;.</source>
          <target state="translated">이 이벤트는 두 번째 인스턴스가 실행되고 &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; 호출 할 때 애플리케이션의 기본 인스턴스 내에서 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="adc211e73307119fcd816d42f8b4a9ab15005889" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; 및 &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt; .back 과 같은 API를 사용하여 프로그래밍 방식으로 탐색이 시작되면이 이벤트가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ba25365ba095998aa9f6d8616d04d7760dce95d3" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;webContents.loadURL&lt;/code&gt; and &lt;code&gt;webContents.back&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.loadURL&lt;/code&gt; 및 &lt;code&gt;webContents.back&lt;/code&gt; 과 같은 API를 사용하여 프로그래밍 방식으로 탐색을 시작하면이 이벤트가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="525b90f00912dd424f3358c279badc2539a3f98d" translate="yes" xml:space="preserve">
          <source>This feature allows you to configure local and global keyboard shortcuts for your Electron application.</source>
          <target state="translated">이 기능을 사용하면 Electron 애플리케이션에 대한 로컬 및 글로벌 키보드 단축키를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ce3421f7d7f0f139f1c0fc738d83adefc9eead4" translate="yes" xml:space="preserve">
          <source>This flag is global to all renderer processes, if you only want to disable throttling in one window, you can take the hack of &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;playing silent audio&lt;/a&gt;.</source>
          <target state="translated">이 플래그는 모든 렌더러 프로세스에 대해 전역 적이며, 하나의 창에서만 제한을 사용하지 않으려면 &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;자동 오디오 재생을&lt;/a&gt; 해킹 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59739245235d20d9bd2627de64d6feb1f1353c69" translate="yes" xml:space="preserve">
          <source>This guide explains how to integrate your application into those desktop environments with Electron APIs.</source>
          <target state="translated">이 안내서는 Electron API를 사용하여 애플리케이션을 해당 데스크탑 환경에 통합하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ad84ff3b9616eb014f26b6ec18673000ba80c051" translate="yes" xml:space="preserve">
          <source>This guide goes over how to set up VSCode debugging for both your own Electron project as well as the native Electron codebase.</source>
          <target state="translated">이 가이드에서는 자체 Electron 프로젝트와 기본 Electron 코드베이스 모두에 대해 VSCode 디버깅을 설정하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2ae7cd976045436112f7fa0b340e654a51d5286c" translate="yes" xml:space="preserve">
          <source>This guide provides information on how to package your Electron application for any Snapcraft environment, including the Ubuntu Software Center.</source>
          <target state="translated">이 안내서는 Ubuntu Software Center를 포함하여 Snapcraft 환경을 위해 Electron 응용 프로그램을 패키지화하는 방법에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="122f36d1230fa874c547ba466f15a7fac7906c60" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the tray gets garbage collected.</source>
          <target state="translated">이것은 트레이를 저장하는 데 사용되는 변수가 가비지 수집 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bd12afa1587b8243c8bdd506b686e1935e49b3f7" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the window/tray gets garbage collected.</source>
          <target state="translated">이것은 창 / 트레이를 저장하는 데 사용되는 변수가 가비지 수집 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="090dad24206e677cf8b595f373c722e7ad11cf36" translate="yes" xml:space="preserve">
          <source>This includes:</source>
          <target state="translated">여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="53ddae2e4ad6d22bd6d864ba578a7a1b81d8dd78" translate="yes" xml:space="preserve">
          <source>This is an overview of the steps needed to upgrade Chromium in Electron.</source>
          <target state="translated">다음은 Electron에서 Chromium을 업그레이드하는 데 필요한 단계에 대한 개요입니다.</target>
        </trans-unit>
        <trans-unit id="48fd1ce46ca3f75a8fcf1a2738bb79a6e11234ae" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; accept &lt;code&gt;command&lt;/code&gt; instead of &lt;code&gt;file&lt;/code&gt; as input, and &lt;code&gt;command&lt;/code&gt;s are executed under shell. There is no reliable way to determine whether a command uses a file in asar archive, and even if we do, we can not be sure whether we can replace the path in command without side effects.</source>
          <target state="translated">이는이다 &lt;code&gt;exec&lt;/code&gt; 및 &lt;code&gt;spawn&lt;/code&gt; 동의 &lt;code&gt;command&lt;/code&gt; 대신 &lt;code&gt;file&lt;/code&gt; 입력으로하고, &lt;code&gt;command&lt;/code&gt; 의 쉘에서 실행됩니다. 명령이 asar 아카이브에서 파일을 사용하는지 여부를 결정하는 신뢰할 수있는 방법은 없으며, 그렇게해도 부작용없이 명령에서 경로를 바꿀 수 있는지 여부를 확신 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c91f0b5809499b2aac2c817187db2006a90e9d9c" translate="yes" xml:space="preserve">
          <source>This is because you have the &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; module&lt;/a&gt; installed either locally or globally, which overrides Electron's built-in module.</source>
          <target state="translated">이는 &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; 모듈&lt;/a&gt; 이 로컬 또는 전역으로 설치되어 Electron의 내장 모듈보다 우선하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5a3986c71d0e4c78e6cd21bb0ce8b7a2f2efbb87" translate="yes" xml:space="preserve">
          <source>This is caused by a bug when using Cygwin Python and Win32 Node together. The solution is to use the Win32 Python to execute the bootstrap script (assuming you have installed Python under &lt;code&gt;C:\Python27&lt;/code&gt;):</source>
          <target state="translated">Cygwin Python과 Win32 Node를 함께 사용할 때 발생하는 버그로 인해 발생합니다. 해결책은 Win32 Python을 사용하여 부트 스트랩 스크립트를 실행하는 것입니다 ( &lt;code&gt;C:\Python27&lt;/code&gt; 아래에 Python을 설치했다고 가정 ).</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">이것은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fe1df8532e63229df92d06cf43d9987ae371204" translate="yes" xml:space="preserve">
          <source>This is needed because the first patch has Node commit checksums that we don't want</source>
          <target state="translated">첫 번째 패치에는 원하지 않는 노드 커밋 체크섬이 있기 때문에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e8aca70cc5480516ee291e9bca8a4cd91b7eaa92" translate="yes" xml:space="preserve">
          <source>This is needed because upstream Node keeps its V8 files in a subdirectory</source>
          <target state="translated">이것은 업스트림 노드가 V8 파일을 서브 디렉토리에 보관하기 때문에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="91aef02790b0da10b0da3faa252a645dace7a8f0" translate="yes" xml:space="preserve">
          <source>This is not bulletproof, but at the least, you should follow these steps to improve the security of your application.</source>
          <target state="translated">이것은 방탄은 아니지만 최소한 다음 단계를 따라 응용 프로그램의 보안을 향상시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="54c3472d0175293fd7823639dea364b2691ddfa5" translate="yes" xml:space="preserve">
          <source>This is the URL specified as &lt;code&gt;disturl&lt;/code&gt; in a &lt;code&gt;.npmrc&lt;/code&gt; file or as the &lt;code&gt;--dist-url&lt;/code&gt; command line flag when building native Node modules.</source>
          <target state="translated">이것은로 지정된 URL입니다 &lt;code&gt;disturl&lt;/code&gt; A의 &lt;code&gt;.npmrc&lt;/code&gt; 의 파일 또는으로 &lt;code&gt;--dist-url&lt;/code&gt; 기본 노드 모듈을 구축 할 때 명령 줄 플래그.</target>
        </trans-unit>
        <trans-unit id="f3ada38d3db56942812acd5c4a0d6d6e37ebe834" translate="yes" xml:space="preserve">
          <source>This is the URL specified as &lt;code&gt;disturl&lt;/code&gt; in a &lt;code&gt;.npmrc&lt;/code&gt; file or as the &lt;code&gt;--dist-url&lt;/code&gt; command line flag when building native Node modules. Both will be supported for the foreseeable future but it is recommended that you switch.</source>
          <target state="translated">이것은로 지정된 URL입니다 &lt;code&gt;disturl&lt;/code&gt; A의 &lt;code&gt;.npmrc&lt;/code&gt; 의 파일 또는으로 &lt;code&gt;--dist-url&lt;/code&gt; 기본 노드 모듈을 구축 할 때 명령 줄 플래그. 둘 다 가까운 시일 내에 지원되지만 전환하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="60511cadfa0774991a3378ebc6d71c9622419d57" translate="yes" xml:space="preserve">
          <source>This is the user agent that will be used when no user agent is set at the &lt;code&gt;webContents&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt; level. It is useful for ensuring that your entire app has the same user agent. Set to a custom value as early as possible in your app's initialization to ensure that your overridden value is used.</source>
          <target state="translated">&lt;code&gt;webContents&lt;/code&gt; 또는 &lt;code&gt;session&lt;/code&gt; 레벨 에서 사용자 에이전트가 설정되지 않은 경우 사용되는 사용자 에이전트입니다 . 전체 앱에 동일한 사용자 에이전트가 있는지 확인하는 데 유용합니다. 재정의 된 값이 사용되도록 앱 초기화에서 가능한 한 빨리 사용자 지정 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6eb6b6464df6140e25cae9feeee33f0637c70d2f" translate="yes" xml:space="preserve">
          <source>This is the web page you want to display once the application is initialized. This web page represents the Renderer process. You can create multiple browser windows, where each window uses its own independent Renderer. Each window can optionally be granted with full access to Node.js API through the &lt;code&gt;nodeIntegration&lt;/code&gt; preference.</source>
          <target state="translated">애플리케이션이 초기화되면 표시하려는 웹 페이지입니다. 이 웹 페이지는 렌더러 프로세스를 나타냅니다. 여러 브라우저 창을 만들 수 있으며 각 창은 자체 독립 렌더러를 사용합니다. 각 창은 &lt;code&gt;nodeIntegration&lt;/code&gt; 환경 설정을 통해 Node.js API에 대한 전체 액세스 권한을 선택적으로 부여 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d503ac5c21d388b20a1d855b2f3fc6328cf37a6" translate="yes" xml:space="preserve">
          <source>This is usually emitted when the window has been resized manually. On macOS, resizing the window with &lt;code&gt;setBounds&lt;/code&gt;/&lt;code&gt;setSize&lt;/code&gt; and setting the &lt;code&gt;animate&lt;/code&gt; parameter to &lt;code&gt;true&lt;/code&gt; will also emit this event once resizing has finished.</source>
          <target state="translated">일반적으로 창 크기를 수동으로 조정할 때 발생합니다. macOS에서 &lt;code&gt;setBounds&lt;/code&gt; / &lt;code&gt;setSize&lt;/code&gt; 로 창 크기를 조정하고 &lt;code&gt;animate&lt;/code&gt; 매개 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 크기 조정이 완료되면이 이벤트도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6ce540b607105f2ab510762e21fa5b7df27b2a8c" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.</source>
          <target state="translated">이 목록은 OS에서 관리합니다. Windows에서는 작업 표시 줄에서 목록을 방문하고 macOS에서는 도크 메뉴에서 목록을 방문 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ac828a9f6321051dc2115a8ae134347cd9028e8" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows, you can visit the list from the task bar, and on macOS, you can visit it from dock menu.</source>
          <target state="translated">이 목록은 OS에서 관리합니다. Windows에서는 작업 표시 줄에서 목록을 방문 할 수 있으며 macOS에서는 Dock 메뉴에서 방문 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f69ea8009dd547e24998978ad42da52663e01793" translate="yes" xml:space="preserve">
          <source>This list is provided for your convenience &amp;ndash; and is, much like our &lt;a href=&quot;security&quot;&gt;security checklist&lt;/a&gt; &amp;ndash; not meant to exhaustive. It is probably possible to build a slow Electron app that follows all the steps outlined below. Electron is a powerful development platform that enables you, the developer, to do more or less whatever you want. All that freedom means that performance is largely your responsibility.</source>
          <target state="translated">이 목록은 사용자의 편의를 위해 제공되며, &lt;a href=&quot;security&quot;&gt;보안 체크리스트&lt;/a&gt; 와 매우 유사합니다 . 아래에 설명 된 모든 단계를 따르는 느린 Electron 앱을 빌드하는 것이 가능할 것입니다. Electron은 개발자 인 여러분이 원하는 것을 더 많이 또는 적게 할 수있게 해주는 강력한 개발 플랫폼입니다. 그 모든 자유는 성능이 주로 귀하의 책임임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c2760976c801ec4c4b14597333f99619dfdb17cb" translate="yes" xml:space="preserve">
          <source>This list is provided for your convenience &amp;ndash; and is, much like our &lt;a href=&quot;tutorial/security&quot;&gt;security checklist&lt;/a&gt; &amp;ndash; not meant to exhaustive. It is probably possible to build a slow Electron app that follows all the steps outlined below. Electron is a powerful development platform that enables you, the developer, to do more or less whatever you want. All that freedom means that performance is largely your responsibility.</source>
          <target state="translated">이 목록은 사용자의 편의를 위해 제공되며, &lt;a href=&quot;tutorial/security&quot;&gt;보안 체크리스트&lt;/a&gt; 와 매우 유사합니다 . 아래에 설명 된 모든 단계를 따르는 느린 Electron 앱을 빌드하는 것이 가능할 것입니다. Electron은 개발자 인 여러분이 원하는 것을 더 많이 또는 적게 할 수있게 해주는 강력한 개발 플랫폼입니다. 그 모든 자유는 성능이 주로 귀하의 책임임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="21b8fbf53205cd07ff1caf5968650d4e51e33e22" translate="yes" xml:space="preserve">
          <source>This makes the web page click-through when over &lt;code&gt;el&lt;/code&gt;, and returns to normal outside it.</source>
          <target state="translated">이렇게하면 &lt;code&gt;el&lt;/code&gt; 위에있을 때 웹 페이지를 클릭 연결 하여 외부의 일반 페이지로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="b38119f44b494dd0bb6f6f9163b806e1c7ab1524" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;[-1, 0, 1]&lt;/code&gt; will make the image completely white and &lt;code&gt;[-1, 1, 0]&lt;/code&gt; will make the image completely black.</source>
          <target state="translated">즉, &lt;code&gt;[-1, 0, 1]&lt;/code&gt; 은 이미지를 완전히 흰색으로 만들고 &lt;code&gt;[-1, 1, 0]&lt;/code&gt; 은 이미지를 완전히 검정색으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4bf6f2234c7f48df1b61dea3dc70f88d5b88cd5a" translate="yes" xml:space="preserve">
          <source>This means that the &lt;code&gt;window&lt;/code&gt; object that your preload script has access to is actually a &lt;strong&gt;different&lt;/strong&gt; object than the website would have access to. For example, if you set &lt;code&gt;window.hello = 'wave'&lt;/code&gt; in your preload script and context isolation is enabled &lt;code&gt;window.hello&lt;/code&gt; will be undefined if the website tries to access it.</source>
          <target state="translated">즉, 사전로드 스크립트가 액세스 할 수 있는 &lt;code&gt;window&lt;/code&gt; 개체는 실제로 웹 사이트에서 액세스 할 수 있는 &lt;strong&gt;것과 다른&lt;/strong&gt; 개체입니다. 예를 들어 사전로드 스크립트에서 &lt;code&gt;window.hello = 'wave'&lt;/code&gt; 를 설정 하고 컨텍스트 격리가 활성화 된 경우 웹 사이트에서 액세스를 시도하면 &lt;code&gt;window.hello&lt;/code&gt; 가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67a355799483968abe863664dade8bc4d946b24a" translate="yes" xml:space="preserve">
          <source>This method can only be called before app is ready.</source>
          <target state="translated">이 메소드는 앱이 준비되기 전에 만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f90ad39418944444e5ae54b4ab541a29f5479860" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.</source>
          <target state="translated">이 메소드는 현재 실행 파일이 프로토콜의 기본 핸들러 (일명 URI 체계)인지 확인합니다. 그렇다면 앱을 기본 처리기로 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3c819fac6bfe7e98002d421c14d1dc5a3975abd6" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.</source>
          <target state="translated">이 메소드는 현재 실행 파일이 프로토콜 (일명 URI 스킴)의 기본 핸들러인지 확인합니다. 그렇다면 true를 반환합니다. 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77a9284738b6a5154a2e369ad66253b0849a1915" translate="yes" xml:space="preserve">
          <source>This method guarantees that all &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; event handlers are correctly executed. It is possible that a window cancels the quitting by returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeunload&lt;/code&gt; event handler.</source>
          <target state="translated">이 메소드는 모든 &lt;code&gt;beforeunload&lt;/code&gt; 및 &lt;code&gt;unload&lt;/code&gt; 이벤트 핸들러가 올바르게 실행되도록합니다. &lt;code&gt;beforeunload&lt;/code&gt; 이벤트 핸들러 에서 &lt;code&gt;false&lt;/code&gt; 를 반환하여 창이 종료를 취소 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecd46eba6601163296f629d7617bddef184d9505" translate="yes" xml:space="preserve">
          <source>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</source>
          <target state="translated">이 방법을 사용하면 응용 프로그램을 단일 인스턴스 응용 프로그램으로 만들 수 있습니다. 즉, 여러 응용 프로그램 인스턴스를 실행하는 대신 단일 응용 프로그램 인스턴스 만 실행되고 다른 인스턴스는이 인스턴스에 신호를 보내고 종료합니다.</target>
        </trans-unit>
        <trans-unit id="28d1fe6936a7648fea4c7be0eb7a172011a79b28" translate="yes" xml:space="preserve">
          <source>This method must be called before using any other &lt;code&gt;crashReporter&lt;/code&gt; APIs. Once initialized this way, the crashpad handler collects crashes from all subsequently created processes. The crash reporter cannot be disabled once started.</source>
          <target state="translated">이 메소드는 다른 &lt;code&gt;crashReporter&lt;/code&gt; API를 사용하기 전에 호출해야합니다 . 이 방식으로 초기화되면 크래시 패드 핸들러는 이후에 생성되는 모든 프로세스에서 크래시를 수집합니다. 일단 시작되면 크래시 리포터를 비활성화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="128082992770bd52e00e31ab2c7ee17b1d861f36" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if your process is the primary instance of the application and your app should continue loading. And returns &lt;code&gt;true&lt;/code&gt; if your process has sent its parameters to another instance, and you should immediately quit.</source>
          <target state="translated">프로세스가 애플리케이션의 기본 인스턴스이고 앱이 계속로드되어야하는 경우이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 프로세스가 매개 변수를 다른 인스턴스로 보낸 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고 즉시 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="739e544be60345b642bd939f658c0911c645a403" translate="yes" xml:space="preserve">
          <source>This method returns a promise that contains the application name, icon and path of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">이 메서드는 URL의 프로토콜 (일명 URI 스킴)에 대한 기본 처리기의 응용 프로그램 이름, 아이콘 및 경로를 포함하는 promise를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02e5aa4e173f76b7b923d304c52337cd65ccb52d" translate="yes" xml:space="preserve">
          <source>This method returns the application name of the default handler for the protocol (aka URI scheme) of a URL.</source>
          <target state="translated">이 메서드는 URL 프로토콜 (일명 URI 체계)에 대한 기본 처리기의 응용 프로그램 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="38bce716c3b70043c7809602e7a0b3a6910b15fb" translate="yes" xml:space="preserve">
          <source>This method returns whether or not this instance of your app is currently holding the single instance lock. You can request the lock with &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; and release with &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</source>
          <target state="translated">이 메서드는 앱의이 인스턴스가 현재 단일 인스턴스 잠금을 보유하고 있는지 여부를 반환합니다. 당신과 함께 잠금 요청할 수 &lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt; 와 함께 출시 &lt;code&gt;app.releaseSingleInstanceLock()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="576d1f0fde5bf163523a7bf4784d972829571325" translate="yes" xml:space="preserve">
          <source>This method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">이 메소드는 현재 실행 파일을 프로토콜 (일명 URI 체계)의 기본 핸들러로 설정합니다. 앱을 운영 체제에 더 깊이 통합 할 수 있습니다. 등록되면 &lt;code&gt;your-protocol://&lt;/code&gt; 과 의 모든 링크가 현재 실행 파일과 함께 열립니다. 프로토콜을 포함한 전체 링크는 응용 프로그램에 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="4b250ac5d376a8e5bd8322b3a7917c044ec3dc32" translate="yes" xml:space="preserve">
          <source>This method should be called as early as possible in app startup, preferably before &lt;code&gt;app.on('ready')&lt;/code&gt;. If the crash reporter is not initialized at the time a renderer process is created, then that renderer process will not be monitored by the crash reporter.</source>
          <target state="translated">이 메서드는 앱 시작시 가능한 한 빨리, 가급적 &lt;code&gt;app.on('ready')&lt;/code&gt; 전에 호출해야합니다 . 렌더러 프로세스가 생성 될 때 크래시 리포터가 초기화되지 않으면 크래시 리포터가 해당 렌더러 프로세스를 모니터링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5cb007eed7b323075dee5fe0dabfee8ade3ddaa3" translate="yes" xml:space="preserve">
          <source>This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.</source>
          <target state="translated">이 메서드는 렌더러 프로세스에서 호출 될 때 동기 IPC를 사용합니다. 캐시 된 값은 응용 프로그램이 활성화 될 때마다 찾기 대지에서 다시 읽습니다.</target>
        </trans-unit>
        <trans-unit id="f9deb1c010bb57a2f83079f4adf693cecd6efe36" translate="yes" xml:space="preserve">
          <source>This method will raise an exception if the extension could not be loaded. If there are warnings when installing the extension (e.g. if the extension requests an API that Electron does not support) then they will be logged to the console.</source>
          <target state="translated">이 메서드는 확장을로드 할 수없는 경우 예외를 발생시킵니다. 확장을 설치할 때 경고가있는 경우 (예 : 확장이 Electron이 지원하지 않는 API를 요청하는 경우) 콘솔에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="8fb639efa945821052125f6c3839ec8d2cc9bd26" translate="yes" xml:space="preserve">
          <source>This might seem obvious, but many applications tend to do a large amount of work immediately after the app has launched - like checking for updates, downloading content used in a later flow, or performing heavy disk I/O operations.</source>
          <target state="translated">이것은 당연해 보일 수 있지만 많은 애플리케이션은 업데이트 확인, 이후 흐름에서 사용되는 콘텐츠 다운로드 또는 무거운 디스크 I / O 작업 수행과 같이 앱이 시작된 직후에 많은 양의 작업을 수행하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1635376cd173bd570494637f07d70e9a8bc4e7d" translate="yes" xml:space="preserve">
          <source>This mode uses a software output device for rendering in the CPU, so the frame generation is much faster, thus this mode is preferred over the GPU accelerated one.</source>
          <target state="translated">이 모드는 CPU에서 렌더링하기 위해 소프트웨어 출력 장치를 사용하므로 프레임 생성이 훨씬 빠르므로 GPU 가속 모드보다이 모드가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="de978956fa33fc15f57e87473cea48fddee89eb0" translate="yes" xml:space="preserve">
          <source>This module cannot be used until the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">이 모듈은 &lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 방출 될 때까지 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="94190404689a379b97619e82a180839a7032b318" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface so you need to open &lt;code&gt;chrome://tracing/&lt;/code&gt; in a Chrome browser and load the generated file to view the result.</source>
          <target state="translated">이 모듈에는 웹 인터페이스가 포함되어 있지 않으므로 Chrome 브라우저에서 &lt;code&gt;chrome://tracing/&lt;/code&gt; 을 열고 생성 된 파일을로드하여 결과를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef1a68aa3ef7b8318d46de5f281c4c83362c01ca" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface. To view recorded traces, use &lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;trace viewer&lt;/a&gt;, available at &lt;code&gt;chrome://tracing&lt;/code&gt; in Chrome.</source>
          <target state="translated">이 모듈에는 웹 인터페이스가 포함되어 있지 않습니다. 기록 된 트레이스를 보려면 Chrome의 &lt;code&gt;chrome://tracing&lt;/code&gt; 에서 사용할 수있는 &lt;a href=&quot;https://chromium.googlesource.com/catapult/+/HEAD/tracing/README.md&quot;&gt;트레이스 뷰어&lt;/a&gt; 를 사용 하세요.</target>
        </trans-unit>
        <trans-unit id="8f151969ca83729d41c12755b271e4baa545fb6b" translate="yes" xml:space="preserve">
          <source>This only affects developers, if you are building Electron for rebranding you are not affected.</source>
          <target state="translated">브랜딩을 위해 Electron을 빌드하는 경우 개발자에게만 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56607a829de2a1f19d7e738a52d963a4fbb9ddcd" translate="yes" xml:space="preserve">
          <source>This only creates a REPL for the main process. You can use the Console tab of the Dev Tools to get a REPL for the renderer processes.</source>
          <target state="translated">주 프로세스에 대한 REPL 만 작성합니다. 개발자 도구의 콘솔 탭을 사용하여 렌더러 프로세스에 대한 REPL을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="375038a02af1d24b74b5f70b87659606996caf92" translate="yes" xml:space="preserve">
          <source>This option can also be set on &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags as well:</source>
          <target state="translated">이 옵션은 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그 에서도 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79c050b71c61bcff34ea9522fff3873a756c2ae0" translate="yes" xml:space="preserve">
          <source>This page defines some terminology that is commonly used in Electron development.</source>
          <target state="translated">이 페이지는 전자 개발에 일반적으로 사용되는 몇 가지 용어를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="746af70f2203e84c056f0f571559f6bf6c2b478b" translate="yes" xml:space="preserve">
          <source>This property can be dynamically changed.</source>
          <target state="translated">이 속성은 동적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0eaaf72584266e99bdbd6814c744ec69df4ffd2" translate="yes" xml:space="preserve">
          <source>This property is only available on macOS 10.14 Mojave or newer.</source>
          <target state="translated">이 속성은 macOS 10.14 Mojave 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc94307017ba96a6ad072a7991ba9375dbce7f1" translate="yes" xml:space="preserve">
          <source>This property was removed in Chromium 77, and as such is no longer available.</source>
          <target state="translated">이 속성은 Chromium 77에서 제거되었으므로 더 이상 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="22c5e6a1bdbeb5e09af34f1a0b46ccebd975fbc6" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">이 리포지토리에는 JavaScript 및 C ++에 대한 보푸라기 규칙과 단위 및 통합 테스트가 함께 제공됩니다. Electron의 코딩 스타일에 대한 자세한 내용은 &lt;a href=&quot;coding-style&quot;&gt;코딩 스타일&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df5c8c828f7c129755675f748c950d877bf5054f" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;development/coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">이 저장소에는 단위 및 통합 테스트뿐만 아니라 JavaScript 및 C ++에 대한 Linting 규칙이 함께 제공됩니다. Electron의 코딩 스타일에 대한 자세한 내용은 &lt;a href=&quot;development/coding-style&quot;&gt;코딩 스타일&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab2ffd8b47da3913e31fa804ea93f7b5a7a4a6f5" translate="yes" xml:space="preserve">
          <source>This script will cause a very large Electron executable to be placed in the directory &lt;code&gt;out/R&lt;/code&gt;. The file size is in excess of 1.3 gigabytes. This happens because the Release target binary contains debugging symbols. To reduce the file size, run the &lt;code&gt;create-dist.py&lt;/code&gt; script:</source>
          <target state="translated">이 스크립트는 매우 큰 Electron 실행 파일이 &lt;code&gt;out/R&lt;/code&gt; 디렉토리에 위치하게합니다 . 파일 크기가 1.3GB를 초과합니다. 이는 릴리스 대상 바이너리에 디버깅 기호가 포함되어 있기 때문에 발생합니다. 파일 크기를 줄이려면 &lt;code&gt;create-dist.py&lt;/code&gt; 스크립트를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd9fba91487aa44db4a6c689033bee8ef72f3272" translate="yes" xml:space="preserve">
          <source>This section guides you through the basics of how Electron works under the hood. It aims at strengthening knowledge about Electron and the application created earlier in the Quickstart section.</source>
          <target state="translated">이 섹션에서는 Electron이 내부적으로 작동하는 방식에 대한 기본 사항을 안내합니다. Quickstart 섹션의 앞부분에서 만든 Electron 및 애플리케이션에 대한 지식을 강화하는 것을 목표로합니다.</target>
        </trans-unit>
        <trans-unit id="71693d265198cdad88d7bca56b4f1a7f4d1fb418" translate="yes" xml:space="preserve">
          <source>This switch can not be used in &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; since it is parsed earlier than user's app is loaded, but you can set the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable to achieve the same effect.</source>
          <target state="translated">이 스위치는 사용자의 앱이로드되기 전에 구문 분석 &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; 에서 사용할 수 없지만 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 환경 변수를 설정 하여 동일한 효과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbba81275e266bde8685801ca839dd4f9c6b0a34" translate="yes" xml:space="preserve">
          <source>This switch only works when &lt;code&gt;--enable-logging&lt;/code&gt; is also passed.</source>
          <target state="translated">이 스위치는 &lt;code&gt;--enable-logging&lt;/code&gt; 도 전달 될 때만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6846735df161128a67c0582a4de46319858cb9a8" translate="yes" xml:space="preserve">
          <source>This term originated in the Unix community, where &quot;userland&quot; or &quot;userspace&quot; referred to programs that run outside of the operating system kernel. More recently, the term has been popularized in the Node and npm community to distinguish between the features available in &quot;Node core&quot; versus packages published to the npm registry by the much larger &quot;user&quot; community.</source>
          <target state="translated">이 용어는 &quot;userland&quot;또는 &quot;userspace&quot;가 운영 체제 커널 외부에서 실행되는 프로그램을 나타내는 Unix 커뮤니티에서 유래되었습니다. 보다 최근에는 &quot;노드 코어&quot;에서 사용 가능한 기능과 훨씬 더 큰 &quot;사용자&quot;커뮤니티에서 npm 레지스트리에 게시 한 패키지를 구별하기 위해이 용어가 노드 및 npm 커뮤니티에서 널리 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="b99439216edb1f47887775ea8c02567931505db8" translate="yes" xml:space="preserve">
          <source>This toolbar is the familiar standard toolbar common control. It has a maximum of seven buttons. Each button's ID, image, tooltip, and state are defined in a structure, which is then passed to the taskbar. The application can show, enable, disable, or hide buttons from the thumbnail toolbar as required by its current state.</source>
          <target state="translated">이 툴바는 친숙한 표준 툴바 공통 컨트롤입니다. 최대 7 개의 버튼이 있습니다. 각 버튼의 ID, 이미지, 툴팁 및 상태는 구조로 정의 된 다음 작업 표시 줄로 전달됩니다. 응용 프로그램은 현재 상태에 따라 축소판 도구 모음에서 단추를 표시, 활성화, 비활성화 또는 숨길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4769d7198e20dcd89a06f4700b75dcfc03c6133b" translate="yes" xml:space="preserve">
          <source>This user consent was not required on macOS 10.13 High Sierra or lower so this method will always return &lt;code&gt;granted&lt;/code&gt;. macOS 10.14 Mojave or higher requires consent for &lt;code&gt;microphone&lt;/code&gt; and &lt;code&gt;camera&lt;/code&gt; access. macOS 10.15 Catalina or higher requires consent for &lt;code&gt;screen&lt;/code&gt; access.</source>
          <target state="translated">이 사용자 동의는 macOS 10.13 High Sierra 이하에서는 필요하지 않으므로이 방법은 항상 &lt;code&gt;granted&lt;/code&gt; . macOS 10.14 Mojave 이상은 &lt;code&gt;microphone&lt;/code&gt; 및 &lt;code&gt;camera&lt;/code&gt; 액세스에 대한 동의가 필요 합니다. macOS 10.15 Catalina 이상에서는 &lt;code&gt;screen&lt;/code&gt; 액세스에 대한 동의가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="536226b701611389ed2a58db8bec3dc3ea5e66e7" translate="yes" xml:space="preserve">
          <source>This user consent was not required until macOS 10.14 Mojave, so this method will always return &lt;code&gt;true&lt;/code&gt; if your system is running 10.13 High Sierra or lower.</source>
          <target state="translated">이 사용자 동의는 macOS 10.14 Mojave까지 필요하지 않았으므로 시스템이 10.13 High Sierra 이하를 실행하는 경우이 방법은 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="67799efe884534d21c75845d127954a9bb9dfbe7" translate="yes" xml:space="preserve">
          <source>This value can only be modified before the first navigation, since the session of an active renderer process cannot change. Subsequent attempts to modify the value will fail with a DOM exception.</source>
          <target state="translated">활성 렌더러 프로세스의 세션을 변경할 수 없으므로이 값은 첫 번째 탐색 전에 만 수정할 수 있습니다. 이후의 값 수정 시도는 DOM 예외로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="61e64b0ff9adbf4c454caa9353b1d0dd27c8cce5" translate="yes" xml:space="preserve">
          <source>This value is set to false by default.</source>
          <target state="translated">이 값은 기본적으로 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b985083dc6dd4174cf709dc0058ae23f4fe4c0e9" translate="yes" xml:space="preserve">
          <source>This variable is set to the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; that your application originally launched with. Electron sometimes modifies the value of &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; to affect other logic within Chromium so if you want access to the &lt;em&gt;original&lt;/em&gt; value you should look up this environment variable instead.</source>
          <target state="translated">이 변수는 응용 프로그램이 처음에 시작된 &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; 값으로 설정됩니다 . Electron은 때때로 &lt;code&gt;XDG_CURRENT_DESKTOP&lt;/code&gt; 의 값을 수정하여 Chromium 내의 다른 로직에 영향을 미치므로 &lt;em&gt;원래&lt;/em&gt; 값에 액세스하려면 대신이 환경 변수를 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="fbaa6d5fd03f0d67460b559ac4734d32b43188b8" translate="yes" xml:space="preserve">
          <source>This will allow you to detect ahead of time whether or not the notification will be displayed.</source>
          <target state="translated">이를 통해 알림 표시 여부를 미리 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="310772b745c9bd2e5897c31686b366f0ca7a83fe" translate="yes" xml:space="preserve">
          <source>This will be time-consuming</source>
          <target state="translated">시간이 많이 걸릴 것입니다</target>
        </trans-unit>
        <trans-unit id="4ee48038aa020d935bb7ab14bd9b9501be0b6b5c" translate="yes" xml:space="preserve">
          <source>This will build all of what was previously 'libchromiumcontent' (i.e. the &lt;code&gt;content/&lt;/code&gt; directory of &lt;code&gt;chromium&lt;/code&gt; and its dependencies, incl. WebKit and V8), so it will take a while.</source>
          <target state="translated">이것은 이전에 'libchromiumcontent'(즉, WebKit 및 V8을 포함한 &lt;code&gt;chromium&lt;/code&gt; 의 &lt;code&gt;content/&lt;/code&gt; 디렉토리 및 디렉토리) 인 모든 것을 빌드 하므로 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="c1d164648fb645df77aacd2d3406870e9f6529fe" translate="yes" xml:space="preserve">
          <source>This will build debug electron with debug version of libchromiumcontent.</source>
          <target state="translated">libchromiumcontent의 디버그 버전으로 디버그 전자를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="a5ad23d8e2c4bcda5ace9dc6a50d0d65568cc890" translate="yes" xml:space="preserve">
          <source>This will download and build libchromiumcontent locally, similarly to the &lt;code&gt;--build_release_libcc&lt;/code&gt;, but it will create a shared library build of libchromiumcontent and won't strip any symbols, making it ideal for debugging.</source>
          <target state="translated">이것은 --build_release_libcc와 비슷하게 libchromiumcontent를 로컬로 다운로드하여 빌드 하지만 &lt;code&gt;--build_release_libcc&lt;/code&gt; 의 공유 라이브러리 빌드를 만들고 심볼을 제거하지 않으므로 디버깅에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="49e2296dbebe48f43f37289b354787ff74589354" translate="yes" xml:space="preserve">
          <source>This will fail when the app is signed for distribution in the Mac App Store. Subscribe to &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;#9005&lt;/a&gt; for updates.</source>
          <target state="translated">Mac App Store에서 앱을 배포하도록 서명하면 실패합니다. 업데이트 는 &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;# 9005&lt;/a&gt; 를 구독하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ba277587ca5928eb7c3cb8648bc22f46a3781ce" translate="yes" xml:space="preserve">
          <source>This will generate a build directory &lt;code&gt;out/Testing&lt;/code&gt; under &lt;code&gt;src/&lt;/code&gt; with the testing build configuration. You can replace &lt;code&gt;Testing&lt;/code&gt; with another name, but it should be a subdirectory of &lt;code&gt;out&lt;/code&gt;. Also you shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments, you can run &lt;code&gt;gn args out/Testing&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">그러면 테스트 빌드 구성을 사용하여 &lt;code&gt;src/&lt;/code&gt; 아래에 빌드 디렉토리 &lt;code&gt;out/Testing&lt;/code&gt; 이 생성됩니다 . &lt;code&gt;Testing&lt;/code&gt; 을 다른 이름으로 바꿀 수 있지만 &lt;code&gt;out&lt;/code&gt; 의 하위 디렉토리 여야합니다 . 또한 &lt;code&gt;gn gen&lt;/code&gt; 을 다시 실행할 필요가 없습니다 . 빌드 인수를 변경하려면 &lt;code&gt;gn args out/Testing&lt;/code&gt; 을 실행 하여 편집기를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="541c07fe9ee230201344ad82fc5f36ad622cf514" translate="yes" xml:space="preserve">
          <source>This will generate all the ninja files needed for the build. You shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments you can run &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">빌드에 필요한 모든 닌자 파일이 생성됩니다. &lt;code&gt;gn gen&lt;/code&gt; 을 다시 실행할 필요는 없습니다 . 빌드 인수를 변경하려면 &lt;code&gt;gn args out/Default&lt;/code&gt; 를 실행 하여 편집기를 불러올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fa3cd87f75d431b597009f84ee68601a4738e6f" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninja.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">이것은 electron.ninja.xcworkspace를 생성합니다. 중단 점을 설정하고 검사하려면이 작업 공간을 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="ec4cf475c98a6af3a04432e0f82fd5ad81b34a5c" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninjs.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">그러면 electron.ninjs.xcworkspace가 생성됩니다. 중단 점을 설정하고 검사하려면이 작업 공간을 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">이것은 다음을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="e83d3d3598b2797efd7ec8e1d91124cd1b7f8f97" translate="yes" xml:space="preserve">
          <source>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window's size and its content size.</source>
          <target state="translated">이렇게하면 창이 가로 세로 비율을 유지하게됩니다. 추가 크기는 개발자가 가로 세로 비율 계산에 포함되지 않은 픽셀로 지정된 공간을 가질 수 있도록합니다. 이 API는 이미 창의 크기와 내용 크기의 차이를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="ce6ae84ac82058b3c68d240475e22e7867870592" translate="yes" xml:space="preserve">
          <source>This will put a working distribution with much smaller file sizes in the &lt;code&gt;dist&lt;/code&gt; directory. After running the &lt;code&gt;create-dist.py&lt;/code&gt; script, you may want to remove the 1.3+ gigabyte binary which is still in &lt;code&gt;out/R&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 파일 크기가 훨씬 작은 작업 배포가 &lt;code&gt;dist&lt;/code&gt; 디렉토리에 배치됩니다. &lt;code&gt;create-dist.py&lt;/code&gt; 스크립트를 실행 한 후에도 여전히 &lt;code&gt;out/R&lt;/code&gt; 인 1.3+ 기가 바이트 바이너리를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06f1fff384311d54372d57e586748b6d220f83ac" translate="yes" xml:space="preserve">
          <source>This would normally be controlled by user preferences. This has no effect if called before &lt;code&gt;start&lt;/code&gt; is called.</source>
          <target state="translated">이것은 일반적으로 사용자 기본 설정에 의해 제어됩니다. &lt;code&gt;start&lt;/code&gt; 가 호출 되기 전에 호출 된 경우에는 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5d3775183e8f21e56320e67e89e50fc4420ccf2b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;asar&lt;/code&gt; archives are treated as directories, there are no actual directories in the filesystem, so you can never set the working directory to directories in &lt;code&gt;asar&lt;/code&gt; archives. Passing them as the &lt;code&gt;cwd&lt;/code&gt; option of some APIs will also cause errors.</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브는 디렉토리로 취급 되지만 파일 시스템에는 실제 디렉토리가 없으므로 작업 디렉토리를 &lt;code&gt;asar&lt;/code&gt; 아카이브의 디렉토리로 설정할 수 없습니다 . 일부 API 의 &lt;code&gt;cwd&lt;/code&gt; 옵션 으로 전달 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c25fb617132c60aa22b5ad88639757fd795725db" translate="yes" xml:space="preserve">
          <source>Three ways to install native modules:</source>
          <target state="translated">기본 모듈을 설치하는 세 가지 방법 :</target>
        </trans-unit>
        <trans-unit id="018226bcc54ac78679d7e8cd478163dcf8940f27" translate="yes" xml:space="preserve">
          <source>ThumbarButton</source>
          <target state="translated">ThumbarButton</target>
        </trans-unit>
        <trans-unit id="a45fe261e1bd8ea4b2384009627cf81239d42ffe" translate="yes" xml:space="preserve">
          <source>ThumbarButton Object</source>
          <target state="translated">ThumbarButton 객체</target>
        </trans-unit>
        <trans-unit id="68534756f2a43c9ca088bf006a84307cf3d82b08" translate="yes" xml:space="preserve">
          <source>Thumbnail Toolbars</source>
          <target state="translated">썸네일 툴바</target>
        </trans-unit>
        <trans-unit id="671d7b141c957f28935c045970c0c111c71dfb47" translate="yes" xml:space="preserve">
          <source>Tigrinya</source>
          <target state="translated">Tigrinya</target>
        </trans-unit>
        <trans-unit id="11eae5abd19a21b0b726c2e1824d6589497b81e1" translate="yes" xml:space="preserve">
          <source>Time and time again, we have seen that the most successful strategy for building a performant Electron app is to profile the running code, find the most resource-hungry piece of it, and to optimize it. Repeating this seemingly laborious process over and over again will dramatically increase your app's performance. Experience from working with major apps like Visual Studio Code or Slack has shown that this practice is by far the most reliable strategy to improve performance.</source>
          <target state="translated">반복해서 우리는 성능이 뛰어난 Electron 앱을 구축하기위한 가장 성공적인 전략은 실행중인 코드를 프로파일 링하고 리소스가 가장 많이 필요한 부분을 찾아 최적화하는 것임을 확인했습니다. 힘들어 보이는이 프로세스를 반복해서 반복하면 앱 성능이 크게 향상됩니다. Visual Studio Code 또는 Slack과 같은 주요 앱으로 작업 한 경험에 따르면이 방법은 성능 향상을위한 가장 신뢰할 수있는 전략입니다.</target>
        </trans-unit>
        <trans-unit id="2d93bfa0c66a344a9d453793e2a3b275bbe5a889" translate="yes" xml:space="preserve">
          <source>Tip: You can test the new version number before running &lt;code&gt;prepare-release&lt;/code&gt; with a dry run of the &lt;code&gt;bump-version&lt;/code&gt; script with the same major/minor/patch/beta arguments, e.g.:</source>
          <target state="translated">팁 : 동일한 주 / 부 / 패치 / 베타 인수 를 사용하여 &lt;code&gt;bump-version&lt;/code&gt; 스크립트를 건식 실행하여 &lt;code&gt;prepare-release&lt;/code&gt; 를 실행 하기 전에 새 버전 번호를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1a55c0d1792b8d6468a37f479b18279fa043440" translate="yes" xml:space="preserve">
          <source>Tips for fixing compilation errors</source>
          <target state="translated">컴파일 오류 수정을위한 팁</target>
        </trans-unit>
        <trans-unit id="547184d2eb07d1e52c4d74ab23282f7c9977fe1d" translate="yes" xml:space="preserve">
          <source>Tips:</source>
          <target state="translated">Tips:</target>
        </trans-unit>
        <trans-unit id="a116f7255e19431f1fbf68cdd9f4dce3b66e6b04" translate="yes" xml:space="preserve">
          <source>Titles</source>
          <target state="translated">Titles</target>
        </trans-unit>
        <trans-unit id="3eb9cdd5b4908db688ad55e676b92ffa39fa1a7b" translate="yes" xml:space="preserve">
          <source>To achieve this goal, set the background in the constructor for &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;:</source>
          <target state="translated">이 목표를 달성하려면 &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 생성자에서 배경을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="51ccfd339eac71e6278eab9692f5352cf183f4aa" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you can use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API:</source>
          <target state="translated">최근 문서에 파일을 추가하려면 &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c586312664efb5ece0af624ddc50e9b0c5ca982" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you need to use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API.</source>
          <target state="translated">최근 문서에 파일을 추가하려면 &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8af4beaa9d84bda527933ff65e33d9dc9423e763" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you need to use the &lt;a href=&quot;api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API.</source>
          <target state="translated">최근 문서에 파일을 추가하려면 &lt;a href=&quot;api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a187498b241949f135efade54e2d79532e0d2f04" translate="yes" xml:space="preserve">
          <source>To add listeners and handlers, add the following lines to the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">리스너 및 핸들러를 추가하려면 &lt;code&gt;renderer.js&lt;/code&gt; 파일에 다음 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="60bded7d3eba5a2c88ff071b450dd8171a4237a4" translate="yes" xml:space="preserve">
          <source>To automate the detection of misconfigurations and insecure patterns, it is possible to use &lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;electronegativity&lt;/a&gt;. For additional details on potential weaknesses and implementation bugs when developing applications using Electron, please refer to this &lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;guide for developers and auditors&lt;/a&gt;</source>
          <target state="translated">잘못된 구성 및 안전하지 않은 패턴의 감지를 자동화하기 위해 &lt;a href=&quot;https://github.com/doyensec/electronegativity&quot;&gt;전기 음성도&lt;/a&gt; 를 사용할 수 있습니다 . Electron을 사용하여 애플리케이션을 개발할 때 잠재적 인 약점 및 구현 버그에 대한 자세한 내용 &lt;a href=&quot;https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf&quot;&gt;은 개발자 및 감사자를위한&lt;/a&gt; 이 가이드 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="a9664d5f84ea2545060bbee8ef877fd89e837721" translate="yes" xml:space="preserve">
          <source>To automatically format a file according to Electron C++ code style, run &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt;. It should work on macOS/Linux/Windows.</source>
          <target state="translated">Electron C ++ 코드 스타일에 따라 파일을 자동으로 포맷하려면 &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt; 를 실행하십시오 . macOS / Linux / Windows에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fbdd9e0e1f5169f11845d03f9a4b24b8851b4328" translate="yes" xml:space="preserve">
          <source>To avoid this problem, ensure you clean up any references to renderer callbacks passed to the main process. This involves cleaning up event handlers, or ensuring the main process is explicitly told to dereference callbacks that came from a renderer process that is exiting.</source>
          <target state="translated">이 문제를 방지하려면 기본 프로세스에 전달 된 렌더러 콜백에 대한 참조를 정리하십시오. 여기에는 이벤트 처리기를 정리하거나 종료되는 렌더러 프로세스에서 발생한 콜백을 역 참조하도록 기본 프로세스에 명시 적으로 알리는 것이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f729edcee19e3b35f18f931c0af6f8268c97b5d4" translate="yes" xml:space="preserve">
          <source>To avoid using the prebuilt binaries of &lt;code&gt;libchromiumcontent&lt;/code&gt;, you can build &lt;code&gt;libchromiumcontent&lt;/code&gt; locally. To do so, follow these steps:</source>
          <target state="translated">사전 빌드 된 &lt;code&gt;libchromiumcontent&lt;/code&gt; 바이너리를 사용하지 않으려면 &lt;code&gt;libchromiumcontent&lt;/code&gt; 를 로컬로 빌드 할 수 있습니다. 이렇게하려면 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="19976a15788c70fd26ec283fb2a6d554b40bc217" translate="yes" xml:space="preserve">
          <source>To build Electron with compilers like &lt;code&gt;g++&lt;/code&gt;, you first need to disable &lt;code&gt;clang&lt;/code&gt; with &lt;code&gt;--disable_clang&lt;/code&gt; switch first, and then set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; environment variables to the ones you want.</source>
          <target state="translated">같은 컴파일러로 전자를 구축하기 위해 &lt;code&gt;g++&lt;/code&gt; , 당신이 사용하지 않도록 설정하는 첫 번째 필요 &lt;code&gt;clang&lt;/code&gt; 와 &lt;code&gt;--disable_clang&lt;/code&gt; 제 1 스위치, 다음 세트 &lt;code&gt;CC&lt;/code&gt; 와 &lt;code&gt;CXX&lt;/code&gt; 를 원하는 사람에 대한 환경 변수.</target>
        </trans-unit>
        <trans-unit id="d6cd83725cfa73ae4725497beceb7d033c9cce9b" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;--target_arch=ia32&lt;/code&gt; when running the bootstrap script:</source>
          <target state="translated">32 비트 대상을 빌드하려면 부트 스트랩 스크립트를 실행할 때 &lt;code&gt;--target_arch=ia32&lt;/code&gt; 를 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3ce927211b7434e6f4913045507992599779f930" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; as a GN arg. You can build the 32bit target alongside the 64bit target by using a different output directory for GN, e.g. &lt;code&gt;out/Release-x86&lt;/code&gt;, with different arguments.</source>
          <target state="translated">32 비트 타겟 용으로 빌드하려면 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; 을 GN 인수로 전달해야합니다 . GN에 대해 다른 출력 디렉토리 (예 : &lt;code&gt;out/Release-x86&lt;/code&gt; )를 다른 인수와 함께 사용하여 64 비트 타겟과 함께 32 비트 타겟을 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="821a75b76ea57d2ebf97a34d857fed4df2cade15" translate="yes" xml:space="preserve">
          <source>To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron:electron_app&lt;/code&gt; target:</source>
          <target state="translated">빌드하려면 &lt;code&gt;electron:electron_app&lt;/code&gt; 대상으로 &lt;code&gt;ninja&lt;/code&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7686e79d73850d8f8a2318d278bdb52057eef79" translate="yes" xml:space="preserve">
          <source>To call the Main process from the Renderer, use the IPC module:</source>
          <target state="translated">렌더러에서 Main 프로세스를 호출하려면 IPC 모듈을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eb59b218f28d7b858bdf2ed54eeac06e692808d8" translate="yes" xml:space="preserve">
          <source>To capture both audio and video from the entire desktop the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, for both &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;, but should not include a &lt;code&gt;chromeMediaSourceId&lt;/code&gt; constraint.</source>
          <target state="translated">전체 바탕 화면에서 전달 제약 오디오 및 비디오를 캡처하려면 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; &lt;/a&gt; 포함해야 &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; , 모두를위한 &lt;code&gt;audio&lt;/code&gt; 와 &lt;code&gt;video&lt;/code&gt; 하지만, 포함하지 않아야 &lt;code&gt;chromeMediaSourceId&lt;/code&gt; 의 제약 조건을.</target>
        </trans-unit>
        <trans-unit id="ad024e97cbf72e17d0494dc407b356d3cd2d6654" translate="yes" xml:space="preserve">
          <source>To capture video from a source provided by &lt;code&gt;desktopCapturer&lt;/code&gt; the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, and &lt;code&gt;audio: false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;desktopCapturer&lt;/code&gt; 가 제공하는 소스에서 비디오를 캡처하려면 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; 에&lt;/a&gt; 전달 된 제한 조건에 &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 및 &lt;code&gt;audio: false&lt;/code&gt; 가 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c4940cd6896449350d0e22ff6a037fc2012f95be" translate="yes" xml:space="preserve">
          <source>To check if a DevTools extension is installed you can run the following:</source>
          <target state="translated">DevTools 확장이 설치되어 있는지 확인하려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4b0244100e839dce97df084a927399cebf56784" translate="yes" xml:space="preserve">
          <source>To check out how a simple Electron app is built, see &lt;a href=&quot;first-app&quot;&gt;Writing Your First Electron App&lt;/a&gt;</source>
          <target state="translated">간단한 Electron 앱의 구축 방법을 확인하려면 &lt;a href=&quot;first-app&quot;&gt;첫 번째 Electron 앱 작성을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3035d11dba22f59c2a05ae50e84cbd4beacd68c3" translate="yes" xml:space="preserve">
          <source>To check out how an Electron app that uses a background task to send toast notifications and live tiles, &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;check out the Microsoft-provided sample&lt;/a&gt;.</source>
          <target state="translated">백그라운드 작업을 사용하여 토스트 알림 및 라이브 타일을 보내는 Electron 앱을 &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;확인하려면 Microsoft 제공 샘플을 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16073334d646ccfac2edf89e53cff76005d5a9e7" translate="yes" xml:space="preserve">
          <source>To check out the process architecture, see &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;Main and Renderer Processes&lt;/a&gt;.</source>
          <target state="translated">프로세스 아키텍처를 확인하려면 &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;기본 및 렌더러 프로세스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b208f3dbdc3043098fdd288737ea5b6c37c7c27c" translate="yes" xml:space="preserve">
          <source>To check that Node.js was installed correctly, type the following commands in your terminal client:</source>
          <target state="translated">Node.js가 올바르게 설치되었는지 확인하려면 터미널 클라이언트에 다음 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="47fa821b0f83e7586fb85804250c66d0d13ab94c" translate="yes" xml:space="preserve">
          <source>To clean only &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; directories:</source>
          <target state="translated">깨끗하고 &lt;code&gt;out&lt;/code&gt; 및 &lt;code&gt;dist&lt;/code&gt; 디렉토리 :</target>
        </trans-unit>
        <trans-unit id="c3a8e3b3ba3c693c9aa963abbc63ed4672f90e2b" translate="yes" xml:space="preserve">
          <source>To clean the build files:</source>
          <target state="translated">빌드 파일을 정리하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fd19315b5d8b4d48df4ffad2c2078c0ed5d6c4c8" translate="yes" xml:space="preserve">
          <source>To clean thumbnail toolbar buttons, just call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array:</source>
          <target state="translated">축소판 도구 모음 단추를 정리하려면 빈 배열로 &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="535c3ee8e8e2739219eb5319c8cac023145fc1bb" translate="yes" xml:space="preserve">
          <source>To clean your tasks list, call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array:</source>
          <target state="translated">작업 목록을 정리하려면 빈 배열로 &lt;code&gt;app.setUserTasks&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="477e7940dca6fb43c124fbb4278e94e6a9111dbe" translate="yes" xml:space="preserve">
          <source>To clear the list of recent documents, you need to use &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API in the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">최근 문서 목록을 지우려면 &lt;code&gt;main.js&lt;/code&gt; 파일 에서 &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="161e23c281aee75d36fd0808ffb2d229d156ec03" translate="yes" xml:space="preserve">
          <source>To clear the list of recent documents, you need to use &lt;a href=&quot;api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API in the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">최근 문서 목록을 지우려면 &lt;code&gt;main.js&lt;/code&gt; 파일 에서 &lt;a href=&quot;api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ccc514de8c7e5544405f7742ae2de3dacf5465d2" translate="yes" xml:space="preserve">
          <source>To clear thumbnail toolbar buttons, you need to call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">축소판 도구 모음 단추를 지우려면 &lt;code&gt;main.js&lt;/code&gt; 파일 에서 빈 배열을 사용하여 &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bb41e470531e466ff0ed751deb72dffdd4695cc6" translate="yes" xml:space="preserve">
          <source>To clear your tasks list, you need to call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array in the &lt;code&gt;main.js&lt;/code&gt; file.</source>
          <target state="translated">작업 목록을 지우려면 &lt;code&gt;main.js&lt;/code&gt; 파일 에서 빈 배열로 &lt;code&gt;app.setUserTasks&lt;/code&gt; 를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2134ea0ff07c37dd63e847fbf7d7cc6b27be05cb" translate="yes" xml:space="preserve">
          <source>To compile any existing Electron app, ensure that you have the following requirements:</source>
          <target state="translated">기존 Electron 앱을 컴파일하려면 다음 요구 사항이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7e9223540bb1e87d1c72912e683b55dd11b45f0d" translate="yes" xml:space="preserve">
          <source>To compile for a platform that isn't the same as the one you're building on, set the &lt;code&gt;target_cpu&lt;/code&gt; and &lt;code&gt;target_os&lt;/code&gt; GN arguments. For example, to compile an x86 target from an x64 host, specify &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; in &lt;code&gt;gn args&lt;/code&gt;.</source>
          <target state="translated">빌드중인 플랫폼과 동일하지 않은 플랫폼 용으로 컴파일하려면 &lt;code&gt;target_cpu&lt;/code&gt; 및 &lt;code&gt;target_os&lt;/code&gt; GN 인수를 설정하십시오 . 예를 들어 x64 호스트에서 x86 대상을 컴파일하려면 &lt;code&gt;gn args&lt;/code&gt; 에 &lt;code&gt;target_cpu = &quot;x86&quot;&lt;/code&gt; 을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="f5bce627812dc49b506ea519eb6a820ca4f848f8" translate="yes" xml:space="preserve">
          <source>To compile native Node modules against a custom build of Electron that doesn't match a public release, instruct &lt;code&gt;npm&lt;/code&gt; to use the version of Node you have bundled with your custom build.</source>
          <target state="translated">공개 릴리스와 일치하지 않는 Electron의 사용자 지정 빌드에 대해 네이티브 노드 모듈을 컴파일하려면 사용자 지정 빌드 와 함께 번들로 제공 한 Node 버전을 사용 하도록 &lt;code&gt;npm&lt;/code&gt; 에 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="27fca113c2f5999647cb968a39fe14a8e790988d" translate="yes" xml:space="preserve">
          <source>To configure a global keyboard shortcut, you need to use the &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">전역 키보드 바로 가기를 구성하려면 &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; 모듈을 사용 하여 응용 프로그램에 키보드 포커스가없는 경우에도 키보드 이벤트를 감지 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3c2e8e454256165b531737df4ddcc275fac81ee" translate="yes" xml:space="preserve">
          <source>To configure a global keyboard shortcut, you need to use the &lt;a href=&quot;api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">전역 키보드 바로 가기를 구성하려면 &lt;a href=&quot;api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; 모듈을 사용 하여 응용 프로그램에 키보드 포커스가없는 경우에도 키보드 이벤트를 감지 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="63f5bfc5a2539668bb939b4f8f57fd9c22e1c355" translate="yes" xml:space="preserve">
          <source>To configure display scaling:</source>
          <target state="translated">디스플레이 배율을 구성하려면 :</target>
        </trans-unit>
        <trans-unit id="ef5ea456f6758585b278e513aefa5cb807b4ef93" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;Session&lt;/code&gt; with &lt;code&gt;options&lt;/code&gt;, you have to ensure the &lt;code&gt;Session&lt;/code&gt; with the &lt;code&gt;partition&lt;/code&gt; has never been used before. There is no way to change the &lt;code&gt;options&lt;/code&gt; of an existing &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="translated">만들려면 &lt;code&gt;Session&lt;/code&gt; 과 &lt;code&gt;options&lt;/code&gt; , 당신은 확인해야 &lt;code&gt;Session&lt;/code&gt; 와 &lt;code&gt;partition&lt;/code&gt; 이전에 사용 된 적이 없다. 기존 &lt;code&gt;Session&lt;/code&gt; 객체 의 &lt;code&gt;options&lt;/code&gt; 을 변경할 수있는 방법이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="edb532d22f5908482440f8346cec7745e9149b67" translate="yes" xml:space="preserve">
          <source>To create a browserify bundle and use it as a preload script, something like the following should be used:</source>
          <target state="translated">browserify 번들을 만들어 사전로드 스크립트로 사용하려면 다음과 같은 것을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d42528346bd8b4e186070f09e3e0e8630964b395" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;api/browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">클릭-스루 창을 만들려면, 즉 창에서 모든 마우스 이벤트를 &lt;a href=&quot;api/browser-window#winsetignoremouseeventsignore-options&quot;&gt;무시&lt;/a&gt; 하도록하려면 win.setIgnoreMouseEvents (ignore) API를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4504a0a533285a94c124801a9670c64f2a2e1d6" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">클릭 연결 창을 만들려면, 즉 창에서 모든 마우스 이벤트를 &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;무시&lt;/a&gt; 하도록하려면 win.setIgnoreMouseEvents (ignore) API를 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="8b880bc0edc8f8e99eb3746bcafb2671729f2d76" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">클릭-스루 창을 만들려면, 즉 창에서 모든 마우스 이벤트를 &lt;a href=&quot;browser-window#winsetignoremouseeventsignore-options&quot;&gt;무시&lt;/a&gt; 하도록하려면 win.setIgnoreMouseEvents (ignore) API를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="176943a2a565e35770f15d67eca72e8250c98195" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use Node.js' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">커스텀 드라이버를 생성하기 위해 Node.js의 &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API를 사용 합니다. 테스트 스위트는 Electron 프로세스를 생성 한 다음 간단한 메시징 프로토콜을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="772c951591704df38eae61542fd514f0fae11027" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use nodejs' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">커스텀 드라이버를 만들기 위해 nodejs의 &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API를 사용 합니다. 테스트 스위트는 Electron 프로세스를 생성 한 후 간단한 메시징 프로토콜을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="50f26f703d796c1406742b70968ec9d8b38195a7" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">프레임이없는 창을 만들려면 설정해야 &lt;code&gt;frame&lt;/code&gt; 에 &lt;code&gt;false&lt;/code&gt; 의 &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 의 &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="14fa77793c887f131ecab2b39703d63c2fb21efd" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">프레임리스 창을 만들려면 &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 의 &lt;code&gt;options&lt;/code&gt; 에서 &lt;code&gt;frame&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4cf386399c6a736554547f2ae38eba052a608d96" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">샌드 박스 창을 만들려면 &lt;code&gt;sandbox: true&lt;/code&gt; 를 &lt;code&gt;webPreferences&lt;/code&gt; 에 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="1a722dcf46a3cbeaf79a09b4d16ddc687f912186" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, simply pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">샌드 박스 윈도우를 만들려면 간단히 &lt;code&gt;sandbox: true&lt;/code&gt; 를 &lt;code&gt;webPreferences&lt;/code&gt; 에 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="48c5105eef2b37906ef4104ae87b2fc10469145a" translate="yes" xml:space="preserve">
          <source>To create a shortcut, you need to provide &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; properties for the entry you want to add to the shortcut menu. Unity will execute the command defined in the &lt;code&gt;Exec&lt;/code&gt; field after the user clicked the shortcut menu item. An example of the &lt;code&gt;.desktop&lt;/code&gt; file may look as follows:</source>
          <target state="translated">바로 가기를 만들려면 바로 가기 메뉴에 추가 할 항목에 대한 &lt;code&gt;Name&lt;/code&gt; 및 &lt;code&gt;Exec&lt;/code&gt; 속성 을 제공해야 합니다. Unity는 사용자가 바로 가기 메뉴 항목을 클릭 한 후 &lt;code&gt;Exec&lt;/code&gt; 필드에 정의 된 명령을 실행합니다 . &lt;code&gt;.desktop&lt;/code&gt; 파일 의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b51857f3d5af218adeed0217c94ee519b60016d1" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;api/frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">크롬이없는 창이나 임의의 모양의 투명한 창을 만들려면 &lt;a href=&quot;api/frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7168a31db235db73d7406740d08f55b04b316abe" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">크롬이없는 창 또는 임의의 모양의 투명 창을 만들려면 &lt;a href=&quot;frameless-window&quot;&gt;프레임리스 창&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="062b91382d89b8527ab63813aab832b5d260ca7c" translate="yes" xml:space="preserve">
          <source>To create a window, call the &lt;code&gt;BrowserWindow&lt;/code&gt; class, which is only available in the Main process:</source>
          <target state="translated">창을 만들려면 Main 프로세스에서만 사용할 수 있는 &lt;code&gt;BrowserWindow&lt;/code&gt; 클래스를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="faa62213e724034885a6596113bf983a535149bc" translate="yes" xml:space="preserve">
          <source>To cross-compile for Windows on Arm, &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/refs/heads/master/docs/windows_build_instructions.md#Visual-Studio&quot;&gt;follow Chromium's guide&lt;/a&gt; to get the necessary dependencies, SDK and libraries, then build with &lt;code&gt;ELECTRON_BUILDING_WOA=1&lt;/code&gt; in your environment before running &lt;code&gt;gclient sync&lt;/code&gt;.</source>
          <target state="translated">Arm에서 Windows 용으로 크로스 컴파일 &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/refs/heads/master/docs/windows_build_instructions.md#Visual-Studio&quot;&gt;하려면 Chromium 가이드&lt;/a&gt; 에 따라 필요한 종속성, SDK 및 라이브러리를 가져온 다음 &lt;code&gt;gclient sync&lt;/code&gt; 를 실행하기 전에 환경에서 &lt;code&gt;ELECTRON_BUILDING_WOA=1&lt;/code&gt; 로 빌드 합니다 .</target>
        </trans-unit>
        <trans-unit id="2f5e21c0065cc1231645772a60b9ffb4db284f60" translate="yes" xml:space="preserve">
          <source>To detect whether or not you're allowed to send a notification, use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state&lt;/a&gt;.</source>
          <target state="translated">알림을 보낼 수 있는지 여부를 감지하려면 userland 모듈 &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18993c3ec7650af89951a8eb01d2c6f69ddbc0ad" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to download Electron's &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;prebuilt binaries&lt;/a&gt;. Next, the folder containing your app should be named &lt;code&gt;app&lt;/code&gt; and placed in Electron's resources directory as shown in the following examples. Note that the location of Electron's prebuilt binaries is indicated with &lt;code&gt;electron/&lt;/code&gt; in the examples below.</source>
          <target state="translated">Electron과 함께 앱을 배포하려면 Electron의 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;내장 바이너리&lt;/a&gt; 를 다운로드해야 합니다 . 다음으로 앱을 포함하는 폴더의 이름을 &lt;code&gt;app&lt;/code&gt; 으로 지정 하고 다음 예제와 같이 Electron의 resources 디렉토리에 배치 해야합니다 . Electron의 사전 빌드 된 바이너리 위치는 아래 예제에서 &lt;code&gt;electron/&lt;/code&gt; 으로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="162ace7362a9dd1ab360184ea62f6a3b125c37ef" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to package and rebrand it. The easiest way to do this is to use one of the following third party packaging tools:</source>
          <target state="translated">Electron을 사용하여 앱을 배포하려면 패키지를 만들고 리 브랜딩해야합니다. 이를 수행하는 가장 쉬운 방법은 다음 타사 패키징 도구 중 하나를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7f5c2511eb5e2692a8e70be365b110b5b21b368c" translate="yes" xml:space="preserve">
          <source>To do a source level single step in the currently selected thread, execute &lt;code&gt;step&lt;/code&gt; (or &lt;code&gt;s&lt;/code&gt;). This would take you into &lt;code&gt;name_override_.empty()&lt;/code&gt;. To proceed and do a step over, run &lt;code&gt;next&lt;/code&gt; (or &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">현재 선택된 스레드에서 소스 레벨 단일 단계를 수행하려면 &lt;code&gt;step&lt;/code&gt; (또는 &lt;code&gt;s&lt;/code&gt; )를 실행하십시오 . 그러면 &lt;code&gt;name_override_.empty()&lt;/code&gt; 합니다. 계속 진행하고 &lt;code&gt;next&lt;/code&gt; 단계를 수행하려면 다음 (또는 &lt;code&gt;n&lt;/code&gt; )을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4384a7b694374ec145e813a06a8f8fab6f19b6a" translate="yes" xml:space="preserve">
          <source>To do so, open up the developer tools. Navigate to the &lt;code&gt;Network&lt;/code&gt; tab and check the &lt;code&gt;Disable cache&lt;/code&gt; option. Then, reload your renderer. Unless your app prohibits such reloads, you can usually trigger a reload by hitting &lt;code&gt;Cmd + R&lt;/code&gt; or &lt;code&gt;Ctrl + R&lt;/code&gt; with the developer tools in focus.</source>
          <target state="translated">그렇게하려면 개발자 도구를 엽니 다. &lt;code&gt;Network&lt;/code&gt; 탭으로 이동하여 &lt;code&gt;Disable cache&lt;/code&gt; 옵션을 선택하십시오. 그런 다음 렌더러를 다시로드하십시오. 앱에서 이러한 다시로드를 금지하지 않는 한 일반적으로 개발자 도구에 초점을 맞춘 상태에서 &lt;code&gt;Cmd + R&lt;/code&gt; 또는 &lt;code&gt;Ctrl + R&lt;/code&gt; 을 눌러 다시로드를 트리거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94fa16b9d0f4ea3ec28a1d741fb3059be08b5f5e" translate="yes" xml:space="preserve">
          <source>To embed a web page in your app, add the &lt;code&gt;webview&lt;/code&gt; tag to your app's embedder page (this is the app page that will display the guest content). In its simplest form, the &lt;code&gt;webview&lt;/code&gt; tag includes the &lt;code&gt;src&lt;/code&gt; of the web page and css styles that control the appearance of the &lt;code&gt;webview&lt;/code&gt; container:</source>
          <target state="translated">앱에 웹 페이지를 포함 시키려면 &lt;code&gt;webview&lt;/code&gt; 태그를 앱의 임 베더 페이지 (게스트 콘텐츠를 표시 할 앱 페이지)에 추가하십시오. 가장 간단한 형태로 &lt;code&gt;webview&lt;/code&gt; 태그에는 웹 페이지 의 &lt;code&gt;src&lt;/code&gt; 와 &lt;code&gt;webview&lt;/code&gt; 컨테이너 의 모양을 제어하는 ​​CSS 스타일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="74afbad1cd98c17c4f61f99669eab36512f313cb" translate="yes" xml:space="preserve">
          <source>To enable OS-enforced sandbox on &lt;code&gt;BrowserWindow&lt;/code&gt; or &lt;code&gt;webview&lt;/code&gt; process with &lt;code&gt;sandbox:true&lt;/code&gt; without causing entire app to be in sandbox, &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; command-line argument must be passed to electron. This option is currently only supported on macOS and Windows.</source>
          <target state="translated">전체 응용 프로그램을 샌드 박스에 &lt;code&gt;BrowserWindow&lt;/code&gt; 에서 OS 적용 샌드 박스를 활성화 하거나 &lt;code&gt;sandbox:true&lt;/code&gt; &lt;code&gt;webview&lt;/code&gt; 프로세스 를 활성화하려면 &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; 명령 줄 인수를 전자에 전달해야합니다. 이 옵션은 현재 macOS 및 Windows에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7d10111789110c128904cbac5eea80100c463835" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">이 모드를 활성화하려면 &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt; &lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt; &lt;/a&gt; API를 호출하여 GPU 가속을 비활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="da76afea9d33d567b593a66f876aeea04c28d7a5" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">이 모드를 활성화하려면 &lt;a href=&quot;api/app#appdisablehardwareacceleration&quot;&gt; &lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt; &lt;/a&gt; API를 호출하여 GPU 가속을 비활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="376c1f437e3036fdacff2322ea68521dd84c3a14" translate="yes" xml:space="preserve">
          <source>To enable video playback with this new restriction, &lt;a href=&quot;https://castlabs.com/open-source/downstream/&quot;&gt;castLabs&lt;/a&gt; has created a &lt;a href=&quot;https://github.com/castlabs/electron-releases&quot;&gt;fork&lt;/a&gt; that has implemented the necessary changes to enable Widevine to be played in an Electron application if one has obtained the necessary licenses from widevine.</source>
          <target state="translated">이 새로운 제한으로 비디오 재생을 활성화하기 위해 &lt;a href=&quot;https://castlabs.com/open-source/downstream/&quot;&gt;castLabs&lt;/a&gt; 는 Widevine에서 필요한 라이선스를 획득 한 경우 Electron 애플리케이션에서 Widevine을 재생할 수 있도록 필요한 변경 사항을 구현 한 &lt;a href=&quot;https://github.com/castlabs/electron-releases&quot;&gt;포크&lt;/a&gt; 를 만들었 습니다.</target>
        </trans-unit>
        <trans-unit id="eb5bafd8fcceb25769e49c0e2f881eddea2335a3" translate="yes" xml:space="preserve">
          <source>To ensure that file URLs are properly formatted, it is recommended to use Node's &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">파일 URL의 형식이 &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format&lt;/code&gt; &lt;/a&gt; 하려면 Node의 url.format 메소드 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="db09d3bac654dc1b140e3a8525ebc081f1aca261" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="translated">C ++가 Electron 코딩 스타일을 준수하도록하려면 &lt;code&gt;cpplint&lt;/code&gt; 스크립트 를 실행하는 &lt;code&gt;npm run lint-cpp&lt;/code&gt; 를 실행하십시오 . &lt;code&gt;clang-format&lt;/code&gt; 을 사용 &lt;a href=&quot;clang-format&quot;&gt;하고 간단한 자습서를&lt;/a&gt; 준비 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2d8c8013cd5a3c87cce83b20e821993501562853" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;development/clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="translated">C ++가 Electron 코딩 스타일을 준수하는지 확인하려면 &lt;code&gt;cpplint&lt;/code&gt; 스크립트 를 실행하는 &lt;code&gt;npm run lint-cpp&lt;/code&gt; 를 실행하세요 . &lt;code&gt;clang-format&lt;/code&gt; 을 사용 &lt;a href=&quot;development/clang-format&quot;&gt;하고 짧은 자습서를&lt;/a&gt; 준비 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f76a95ae71cef0d386309c3b00dd01a15c7be53c" translate="yes" xml:space="preserve">
          <source>To ensure that your JavaScript is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-js&lt;/code&gt;, which will run &lt;code&gt;standard&lt;/code&gt; against both Electron itself as well as the unit tests. If you are using an editor with a plugin/addon system, you might want to use one of the many &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS addons&lt;/a&gt; to be informed of coding style violations before you ever commit them.</source>
          <target state="translated">JavaScript가 Electron 코딩 스타일을 준수하는지 확인하려면 &lt;code&gt;npm run lint-js&lt;/code&gt; 를 실행 하십시오. 이는 단위 자체 테스트뿐만 아니라 Electron 자체에 대해 &lt;code&gt;standard&lt;/code&gt; 실행됩니다 . 플러그인 / 애도 시스템으로 편집기를 사용하는 경우, 많은 &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS 애드온&lt;/a&gt; 중 하나를 사용하여 커밋하기 전에 코딩 스타일 위반에 대한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f3e67e920081f7bc356db1f791eb16dfb792e39" translate="yes" xml:space="preserve">
          <source>To finish debugging at this point, run &lt;code&gt;process continue&lt;/code&gt;. You can also continue until a certain line is hit in this thread (&lt;code&gt;thread until 100&lt;/code&gt;). This command will run the thread in the current frame till it reaches line 100 in this frame or stops if it leaves the current frame.</source>
          <target state="translated">이 시점에서 디버깅을 마치려면 &lt;code&gt;process continue&lt;/code&gt; 를 실행하십시오 . 이 스레드에서 특정 줄에 도달 할 때까지 계속할 수 있습니다 ( &lt;code&gt;thread until 100&lt;/code&gt; ). 이 명령은이 프레임의 100 행에 도달 할 때까지 현재 프레임에서 스레드를 실행하거나 현재 프레임을 벗어나면 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="db20ed2d7ab5ce6c9ab8108e55b92cdfc30f46ae" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you can use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API:</source>
          <target state="translated">BrowserWindow 작업 표시 줄 단추를 플래시하려면 &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1791f0d0992ff76e4410b34fbde26e609a3bd73" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you need to use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API.</source>
          <target state="translated">BrowserWindow 작업 표시 줄 버튼을 플래시하려면 &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d6bbc481de7271502240a0044d18ae668aa5888a" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you need to use the &lt;a href=&quot;api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API.</source>
          <target state="translated">BrowserWindow 작업 표시 줄 버튼을 플래시하려면 &lt;a href=&quot;api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f34d8007c087fdfa0c2b44b75f27bddfe014f8d9" translate="yes" xml:space="preserve">
          <source>To flip a fuse you find its position in the fuse wire and change it to &quot;0&quot; or &quot;1&quot; depending on the state you'd like.</source>
          <target state="translated">퓨즈를 뒤집으려면 퓨즈 와이어에서 위치를 찾아 원하는 상태에 따라 &quot;0&quot;또는 &quot;1&quot;로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c07abd3bb41bb6ca01026b17e45a131a420f2c6c" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--ide=vs2017&lt;/code&gt; parameter to &lt;code&gt;gn gen&lt;/code&gt;:</source>
          <target state="translated">Visual Studio 프로젝트를 생성하려면 &lt;code&gt;--ide=vs2017&lt;/code&gt; 매개 변수를 &lt;code&gt;gn gen&lt;/code&gt; 에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f9efd08eb76de8870458a9009c7e1a3dfc78bf4" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--msvs&lt;/code&gt; parameter:</source>
          <target state="translated">Visual Studio 프로젝트를 생성하려면 &lt;code&gt;--msvs&lt;/code&gt; 매개 변수를 전달하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="228e463f67c58bcbf5312b15b52c0b0dd1979bdd" translate="yes" xml:space="preserve">
          <source>To generate the AppX package, the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI uses a template that should work for most Electron apps. However, if you are using a custom installer, or should you experience any trouble with the generated package, you can attempt to create a package using compilation with a Windows Container - in that mode, the CLI will install and run your application in blank Windows Container to determine what modifications your application is exactly doing to the operating system.</source>
          <target state="translated">AppX 패키지를 생성하기 위해 &lt;code&gt;electron-windows-store&lt;/code&gt; CLI는 대부분의 Electron 앱에서 작동하는 템플릿을 사용합니다. 그러나 사용자 정의 설치 프로그램을 사용 중이거나 생성 된 패키지에 문제가있는 경우 Windows 컨테이너를 사용하여 컴파일을 사용하여 패키지를 작성하려고 시도 할 수 있습니다. 해당 모드에서 CLI는 빈 Windows에서 애플리케이션을 설치하고 실행합니다. 응용 프로그램이 운영 체제에서 정확히 수행하는 수정 사항을 확인하는 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="38c1633192c5aa4b32359dbf5d5c9f9d8d5d72f6" translate="yes" xml:space="preserve">
          <source>To handle the &lt;code&gt;request&lt;/code&gt;, the &lt;code&gt;callback&lt;/code&gt; should be called with either the file's path or an object that has a &lt;code&gt;path&lt;/code&gt; property, e.g. &lt;code&gt;callback(filePath)&lt;/code&gt; or &lt;code&gt;callback({ path: filePath })&lt;/code&gt;. The &lt;code&gt;filePath&lt;/code&gt; must be an absolute path.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 을 처리하려면 파일의 경로 또는 &lt;code&gt;path&lt;/code&gt; 속성 이있는 객체 &lt;code&gt;callback(filePath)&lt;/code&gt; 예 : callback (filePath) 또는 &lt;code&gt;callback({ path: filePath })&lt;/code&gt; 하여 &lt;code&gt;callback&lt;/code&gt; 해야합니다 . &lt;code&gt;filePath&lt;/code&gt; 절대 경로이어야한다.</target>
        </trans-unit>
        <trans-unit id="90f2a2f292c4289650381baf50f3d8c14da42c1c" translate="yes" xml:space="preserve">
          <source>To handle the &lt;code&gt;request&lt;/code&gt;, the &lt;code&gt;callback&lt;/code&gt; should be called with either the file's path or an object that has a &lt;code&gt;path&lt;/code&gt; property, e.g. &lt;code&gt;callback(filePath)&lt;/code&gt; or &lt;code&gt;callback({path: filePath})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 을 처리하려면 파일의 경로 또는 &lt;code&gt;path&lt;/code&gt; 속성 이있는 객체 &lt;code&gt;callback(filePath)&lt;/code&gt; 예 : callback (filePath) 또는 &lt;code&gt;callback({path: filePath})&lt;/code&gt; 하여 &lt;code&gt;callback&lt;/code&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c1ef937f8c114ec0dbc1bf615805fca67f516bf2" translate="yes" xml:space="preserve">
          <source>To have your custom protocol work in combination with a custom session, you need to register it to that session explicitly.</source>
          <target state="translated">사용자 지정 프로토콜이 사용자 지정 세션과 함께 작동하게하려면 해당 세션에 명시 적으로 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="60aa3969a2505f5ec82cd53b1ca7a9f2cb28cc94" translate="yes" xml:space="preserve">
          <source>To help manage these patch sets, we provide two tools: &lt;code&gt;git-import-patches&lt;/code&gt; and &lt;code&gt;git-export-patches&lt;/code&gt;. &lt;code&gt;git-import-patches&lt;/code&gt; imports a set of patch files into a git repository by applying each patch in the correct order and creating a commit for each one. &lt;code&gt;git-export-patches&lt;/code&gt; does the reverse; it exports a series of git commits in a repository into a set of files in a directory and an accompanying &lt;code&gt;.patches&lt;/code&gt; file.</source>
          <target state="translated">이러한 패치 세트를 관리하기 위해 &lt;code&gt;git-import-patches&lt;/code&gt; 및 &lt;code&gt;git-export-patches&lt;/code&gt; 두 가지 도구를 제공 합니다. &lt;code&gt;git-import-patches&lt;/code&gt; 는 올바른 순서로 각 패치를 적용하고 각 패치에 대한 커밋을 생성하여 패치 파일 세트를 git 저장소로 가져옵니다. &lt;code&gt;git-export-patches&lt;/code&gt; 는 그 반대입니다. 리포지토리에있는 일련의 git 커밋을 디렉터리의 파일 집합과 함께 제공되는 &lt;code&gt;.patches&lt;/code&gt; 파일로 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9f1b99f67d6fac27f5ef7c783b9b5636dfad85e8" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">앱에서이 기능을 구현하려면 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트 에 대한 응답으로 &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; API 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4b6dca3fa9056c6956e42192fd99cff54a88535a" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call the &lt;a href=&quot;../api/web-contents#contentsstartdragitem&quot;&gt;&lt;code&gt;webContents.startDrag(item)&lt;/code&gt;&lt;/a&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">앱에서이 기능을 구현하려면 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트 에 대한 응답으로 &lt;a href=&quot;../api/web-contents#contentsstartdragitem&quot;&gt; &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; &lt;/a&gt; API 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0afb8b6e99de8341818769897169a0df7fe3aafc" translate="yes" xml:space="preserve">
          <source>To implement this feature in your app, you need to call the &lt;a href=&quot;api/web-contents#contentsstartdragitem&quot;&gt;&lt;code&gt;webContents.startDrag(item)&lt;/code&gt;&lt;/a&gt; API in response to the &lt;code&gt;ondragstart&lt;/code&gt; event.</source>
          <target state="translated">앱에서이 기능을 구현하려면 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트 에 대한 응답으로 &lt;a href=&quot;api/web-contents#contentsstartdragitem&quot;&gt; &lt;code&gt;webContents.startDrag(item)&lt;/code&gt; &lt;/a&gt; API 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="885f246a2ca0776749403df61b7950e914ac171c" translate="yes" xml:space="preserve">
          <source>To install prebuilt Electron binaries, use &lt;a href=&quot;https://docs.npmjs.com&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt;. The preferred method is to install Electron as a development dependency in your app:</source>
          <target state="translated">사전 빌드 된 Electron 바이너리를 설치하려면 &lt;a href=&quot;https://docs.npmjs.com&quot;&gt; &lt;code&gt;npm&lt;/code&gt; 을&lt;/a&gt; 사용하십시오 . 선호하는 방법은 Electron을 앱의 개발 의존성으로 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="617f463448947957d7e0c24029af171ad482daeb" translate="yes" xml:space="preserve">
          <source>To keep your development environment organized, create local branches to hold your work. These should be branched directly off of the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">개발 환경을 체계적으로 유지하려면 작업을 보유 할 로컬 브랜치를 작성하십시오. 이들은 &lt;code&gt;master&lt;/code&gt; 브랜치 에서 직접 분기되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ed15e68b5d5ddb1a5eac675c1fa1b7728f73a211" translate="yes" xml:space="preserve">
          <source>To learn more about Electron, check out the &lt;a href=&quot;../index&quot;&gt;official guides&lt;/a&gt;.</source>
          <target state="translated">Electron에 대한 자세한 내용은 &lt;a href=&quot;../index&quot;&gt;공식 안내서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5eb56f09c3545396b2b393c036db839a1eb319a5" translate="yes" xml:space="preserve">
          <source>To learn more about how to profile your app's code, familiarize yourself with the Chrome Developer Tools. For advanced analysis looking at multiple processes at once, consider the &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;Chrome Tracing&lt;/a&gt; tool.</source>
          <target state="translated">앱 코드를 프로파일 링하는 방법에 대해 자세히 알아 보려면 Chrome 개발자 도구를 숙지하세요. 한 번에 여러 프로세스를 살펴 보는 고급 분석의 경우 &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;Chrome 추적&lt;/a&gt; 도구를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="04001b7ea1807aaa75db17fdc8adb329cd137bff" translate="yes" xml:space="preserve">
          <source>To load an extension in Electron, you need to download it in Chrome browser, locate its filesystem path, and then load it by calling the &lt;code&gt;BrowserWindow.addDevToolsExtension(extension)&lt;/code&gt; API.</source>
          <target state="translated">Electron에서 확장을로드하려면 Chrome 브라우저에서 확장을 다운로드하고 파일 시스템 경로를 찾은 다음 &lt;code&gt;BrowserWindow.addDevToolsExtension(extension)&lt;/code&gt; API를 호출하여로드해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b11e1cccba51582071babe69bdb83ad084720bf0" translate="yes" xml:space="preserve">
          <source>To make changes to an existing pull request, make the changes to your local branch, add a new commit with those changes, and push those to your fork. GitHub will automatically update the pull request.</source>
          <target state="translated">기존 풀 요청을 변경하려면 로컬 브랜치를 변경하고 해당 변경 사항으로 새 커밋을 추가 한 다음 포크로 푸시하십시오. GitHub는 풀 요청을 자동으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6cc374466c77bb64066e086d7846917a973bb54a" translate="yes" xml:space="preserve">
          <source>To make the whole window draggable, you can add &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; as &lt;code&gt;body&lt;/code&gt;'s style:</source>
          <target state="translated">전체 창을 드래그 가능하게하려면 &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; &lt;code&gt;body&lt;/code&gt; 스타일 로 드래그하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a22faf7d03a74e4f98b51a02b353bd6dbd352d6" translate="yes" xml:space="preserve">
          <source>To make things worse, since the context of previously installed callbacks has been released, exceptions will be raised in the main process when the &lt;code&gt;close&lt;/code&gt; event is emitted.</source>
          <target state="translated">설상가상으로, 이전에 설치된 콜백 컨텍스트가 해제되었으므로 &lt;code&gt;close&lt;/code&gt; 이벤트가 발생 하면 기본 프로세스에서 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6be6d28efdc52ad1117beb553fe9d81ab0a3642b" translate="yes" xml:space="preserve">
          <source>To mark an image as a template image, its filename should end with the word &lt;code&gt;Template&lt;/code&gt;. For example:</source>
          <target state="translated">이미지를 템플릿 이미지로 표시하려면 파일 이름이 &lt;code&gt;Template&lt;/code&gt; 끝나야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eaaedd2e34a09c107bb5a45d9574cc60a4ab158c" translate="yes" xml:space="preserve">
          <source>To mitigate &lt;a href=&quot;https://github.com/joyent/node/issues/6960&quot;&gt;issues&lt;/a&gt; around long path names on Windows, slightly speed up &lt;code&gt;require&lt;/code&gt; and conceal your source code from cursory inspection, you can choose to package your app into an &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive with little changes to your source code.</source>
          <target state="translated">Windows에서 긴 경로 이름 &lt;a href=&quot;https://github.com/joyent/node/issues/6960&quot;&gt;관련 문제&lt;/a&gt; 를 완화 하고 약간의 속도를 &lt;code&gt;require&lt;/code&gt; 하고 커서 검사에서 소스 코드를 숨기려면 소스 코드를 거의 변경하지 않고 앱을 &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; 아카이브 로 패키징하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e59976da07624b27321e633f5ef547712edea416" translate="yes" xml:space="preserve">
          <source>To only prevent the menu shortcuts, use &lt;a href=&quot;#contentssetignoremenushortcutsignore&quot;&gt;&lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">메뉴 바로 가기 만 방지하려면 &lt;a href=&quot;#contentssetignoremenushortcutsignore&quot;&gt; &lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ae2ef97ad246fd568ca95450776bb3ef862015f" translate="yes" xml:space="preserve">
          <source>To only prevent the menu shortcuts, use &lt;a href=&quot;#contentssetignoremenushortcutsignore-experimental&quot;&gt;&lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">메뉴 바로 가기 만 방지하려면 &lt;a href=&quot;#contentssetignoremenushortcutsignore-experimental&quot;&gt; &lt;code&gt;setIgnoreMenuShortcuts&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="90f0083b5eda825f3490ee81c9de396b40b89071" translate="yes" xml:space="preserve">
          <source>To package the electron build as a distributable zip file:</source>
          <target state="translated">전자 빌드를 배포 가능한 zip 파일로 패키징하려면 :</target>
        </trans-unit>
        <trans-unit id="22c6a4877344517ec16ea540f865b8729592c937" translate="yes" xml:space="preserve">
          <source>To prevent the binary from being downloaded when you install all npm dependencies you can set the environment variable &lt;code&gt;ELECTRON_SKIP_BINARY_DOWNLOAD&lt;/code&gt;. E.g.:</source>
          <target state="translated">모든 npm 종속성을 설치할 때 바이너리가 다운로드되지 않도록하려면 환경 변수 &lt;code&gt;ELECTRON_SKIP_BINARY_DOWNLOAD&lt;/code&gt; 를 설정할 수 있습니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="bb20ff96df7bb87cf4b64d4d68fe70198411e33d" translate="yes" xml:space="preserve">
          <source>To reply to a synchronous message, you need to set &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">동기 메시지에 응답하려면 &lt;code&gt;event.returnValue&lt;/code&gt; 를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="52731de70ab505398e042288f82d22b4b62ea53a" translate="yes" xml:space="preserve">
          <source>To run &lt;code&gt;standard&lt;/code&gt; with parameters, run &lt;code&gt;npm run lint-js --&lt;/code&gt; followed by arguments you want passed to &lt;code&gt;standard&lt;/code&gt;.</source>
          <target state="translated">매개 변수를 사용하여 &lt;code&gt;standard&lt;/code&gt; 을 실행하려면 &lt;code&gt;npm run lint-js --&lt;/code&gt; 다음 &lt;code&gt;standard&lt;/code&gt; 에 전달하려는 인수를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="759b704e28bdbd278a96a850f7b1ef8b04b41207" translate="yes" xml:space="preserve">
          <source>To run all unit tests, run &lt;code&gt;npm run test&lt;/code&gt;. The unit tests are an Electron app (surprise!) that can be found in the &lt;code&gt;spec&lt;/code&gt; folder. Note that it has its own &lt;code&gt;package.json&lt;/code&gt; and that its dependencies are therefore not defined in the top-level &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">모든 단위 테스트를 실행하려면 &lt;code&gt;npm run test&lt;/code&gt; 를 실행하십시오 . 단위 테스트는 &lt;code&gt;spec&lt;/code&gt; 폴더 에서 찾을 수있는 Electron 앱입니다 (서프라이즈!) . 자체 &lt;code&gt;package.json&lt;/code&gt; 가지고 있으므로 해당 종속성이 최상위 레벨 &lt;code&gt;package.json&lt;/code&gt; 에 정의되어 있지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="138c6055d6c73471cf79da84bcdfdc892a907248" translate="yes" xml:space="preserve">
          <source>To run only specific tests matching a pattern, run &lt;code&gt;npm run test -- -g=PATTERN&lt;/code&gt;, replacing the &lt;code&gt;PATTERN&lt;/code&gt; with a regex that matches the tests you would like to run. As an example: If you want to run only IPC tests, you would run &lt;code&gt;npm run test -- -g ipc&lt;/code&gt;.</source>
          <target state="translated">패턴과 일치하는 특정 테스트 만 실행하려면 &lt;code&gt;npm run test -- -g=PATTERN&lt;/code&gt; 하고 &lt;code&gt;PATTERN&lt;/code&gt; 을 실행하려는 테스트와 일치하는 정규식으로 바꾸십시오 . 예를 들어, IPC 테스트 만 실행하려면 &lt;code&gt;npm run test -- -g ipc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51c2435e3a7822307d7e10d8f692cde7f20b73b0" translate="yes" xml:space="preserve">
          <source>To run the example above, you'll need to (assuming you've got a terminal open in the directory you want to run the example):</source>
          <target state="translated">위의 예제를 실행하려면 다음을 수행해야합니다 (예제를 실행하려는 디렉토리에 터미널이 열려 있다고 가정).</target>
        </trans-unit>
        <trans-unit id="f7e7584aabec056898642b189b3afbce2cecca5d" translate="yes" xml:space="preserve">
          <source>To run the tests with the release build use:</source>
          <target state="translated">릴리스 빌드로 테스트를 실행하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8009b90e66db98d88c6daae363a11a712812a402" translate="yes" xml:space="preserve">
          <source>To run the tests, you'll first need to build the test modules against the same version of Node.js that was built as part of the build process. To generate build headers for the modules to compile against, run the following under &lt;code&gt;src/&lt;/code&gt; directory.</source>
          <target state="translated">테스트를 실행하려면 먼저 빌드 프로세스의 일부로 빌드 된 동일한 버전의 Node.js에 대해 테스트 모듈을 빌드해야합니다. 컴파일 할 모듈의 빌드 헤더를 생성하려면 &lt;code&gt;src/&lt;/code&gt; 디렉토리 에서 다음을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9dee6267b4a11d6b3b7ee07a577aa652d682335" translate="yes" xml:space="preserve">
          <source>To run the tests, you'll first need to build the test modules against the same version of node.js that was built as part of the build process.</source>
          <target state="translated">테스트를 실행하려면 먼저 빌드 프로세스의 일부로 빌드 된 동일한 버전의 node.js에 대해 테스트 모듈을 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b2887a93e64f649eae19b06ff8afea5e0f6b6c6" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;../tutorial/first-app#running-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">앱을 실행하려면 앱 &lt;a href=&quot;../tutorial/first-app#running-your-app&quot;&gt;실행을&lt;/a&gt; 읽어 보세요 .</target>
        </trans-unit>
        <trans-unit id="e2b8a31f4c674a8c0e51ed5573bf71e8567479c1" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;../tutorial/quick-start#run-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">앱을 실행하려면 앱 &lt;a href=&quot;../tutorial/quick-start#run-your-app&quot;&gt;실행을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f968f92b95e355e02a1dd7820829d42539dc4405" translate="yes" xml:space="preserve">
          <source>To run your app, read &lt;a href=&quot;tutorial/first-app#running-your-app&quot;&gt;Run your app&lt;/a&gt;.</source>
          <target state="translated">앱을 실행하려면 앱 &lt;a href=&quot;tutorial/first-app#running-your-app&quot;&gt;실행을&lt;/a&gt; 읽어 보세요 .</target>
        </trans-unit>
        <trans-unit id="b32975b2ce04661890aef18c5a9ab35defb6fe1f" translate="yes" xml:space="preserve">
          <source>To see all of this in action, check out Electron Fiddle's source code, &lt;a href=&quot;https://github.com/electron/fiddle/blob/master/forge.config.js&quot;&gt;especially its &lt;code&gt;electron-forge&lt;/code&gt; configuration file&lt;/a&gt;.</source>
          <target state="translated">이 모든 것이 실제로 작동하는지 보려면 Electron Fiddle의 소스 코드, &lt;a href=&quot;https://github.com/electron/fiddle/blob/master/forge.config.js&quot;&gt;특히 &lt;code&gt;electron-forge&lt;/code&gt; 구성 파일을 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ae3943df93a2edc6b67c5200e4420f36f33a41c" translate="yes" xml:space="preserve">
          <source>To see the list of available build configuration options, run &lt;code&gt;gn args out/Testing --list&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 빌드 구성 옵션 목록을 보려면 &lt;code&gt;gn args out/Testing --list&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="37bbe8e5228dc6749fde0cae6154f716f4567ba1" translate="yes" xml:space="preserve">
          <source>To see the version of Chromium, V8, and Node in every version of Electron, visit &lt;a href=&quot;https://atom.io/download/electron/index.json&quot;&gt;atom.io/download/electron/index.json&lt;/a&gt;.</source>
          <target state="translated">모든 Electron 버전에서 Chromium, V8 및 Node 버전을 보려면 &lt;a href=&quot;https://atom.io/download/electron/index.json&quot;&gt;atom.io/download/electron/index.json을&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bd233e19f7025a06604bec2f15d79b3937fd257" translate="yes" xml:space="preserve">
          <source>To send an asynchronous message back to the sender, you can use &lt;code&gt;event.reply(...)&lt;/code&gt;. This helper method will automatically handle messages coming from frames that aren't the main frame (e.g. iframes) whereas &lt;code&gt;event.sender.send(...)&lt;/code&gt; will always send to the main frame.</source>
          <target state="translated">비동기 메시지를 보낸 사람에게 다시 보내려면 &lt;code&gt;event.reply(...)&lt;/code&gt; 사용할 수 있습니다 . 이 도우미 메서드는 메인 프레임 (예 : iframe)이 아닌 프레임에서 오는 메시지를 자동으로 처리하는 반면 &lt;code&gt;event.sender.send(...)&lt;/code&gt; 는 항상 메인 프레임으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="78326a0e3e662b5b7da6627f6ebd436d69be9d63" translate="yes" xml:space="preserve">
          <source>To send an asynchronous message back to the sender, you can use &lt;code&gt;event.sender.send(...)&lt;/code&gt;.</source>
          <target state="translated">보낸 사람에게 비동기 메시지를 다시 보내려면 &lt;code&gt;event.sender.send(...)&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8386e2428fd6948c966d737cf05cf49544a7f4c7" translate="yes" xml:space="preserve">
          <source>To set the locale, you'll want to use a command line switch at app startup, which may be found &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/chrome-command-line-switches.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">로케일을 설정하려면 앱 시작시 명령 행 스위치를 사용 &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/chrome-command-line-switches.md&quot;&gt;하십시오 (여기&lt;/a&gt; 에서 찾을 수 있음) .</target>
        </trans-unit>
        <trans-unit id="707fae82070ef95245ee34a49781b3d477250ac1" translate="yes" xml:space="preserve">
          <source>To set the locale, you'll want to use a command line switch at app startup, which may be found &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/command-line-switches.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">로케일을 설정하려면 앱 시작시 &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/command-line-switches.md&quot;&gt;여기&lt;/a&gt; 에서 찾을 수있는 명령 줄 스위치를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="44732a0693526243610a24679af596ed0afe6e89" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you can use the &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API:</source>
          <target state="translated">창의 오버레이 아이콘을 설정하려면 &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8a1bbc2b74aa5b679f3954780a9c90c88c34e6c" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you need to use the &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API.</source>
          <target state="translated">창의 오버레이 아이콘을 설정하려면 &lt;a href=&quot;../api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1340d6882dfdf3b3b05299450c3543fcee177e66" translate="yes" xml:space="preserve">
          <source>To set the overlay icon for a window, you need to use the &lt;a href=&quot;api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API.</source>
          <target state="translated">창의 오버레이 아이콘을 설정하려면 &lt;a href=&quot;api/browser-window#winsetoverlayiconoverlay-description-windows&quot;&gt;BrowserWindow.setOverlayIcon&lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="43de2852433ec9717112fe92c661c36b0b6c183a" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs.</source>
          <target state="translated">window의 표현 파일을 설정하려면 &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; 및 &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d3134410f655117fd543faac8e5d4e1d1535eb4" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs:</source>
          <target state="translated">표시된 창의 파일을 설정하기 위해 &lt;a href=&quot;../api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; 및 &lt;a href=&quot;../api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="76d84b3dc02f0d0c7ac3e55aa55edd864e41bd99" translate="yes" xml:space="preserve">
          <source>To set the represented file of window, you can use the &lt;a href=&quot;api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; and &lt;a href=&quot;api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; APIs.</source>
          <target state="translated">window의 표현 파일을 설정하려면 &lt;a href=&quot;api/browser-window#winsetrepresentedfilenamefilename-macos&quot;&gt;BrowserWindow.setRepresentedFilename&lt;/a&gt; 및 &lt;a href=&quot;api/browser-window#winsetdocumenteditededited-macos&quot;&gt;BrowserWindow.setDocumentEdited&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53abbd93da29f60e22ddf799c60a02716a35fd22" translate="yes" xml:space="preserve">
          <source>To set thumbnail toolbar in your application, you need to use &lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;</source>
          <target state="translated">응용 프로그램에서 축소판 도구 모음을 설정하려면 &lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d9e61fc82fd97ad899cc6e55e7fa87939ae06702" translate="yes" xml:space="preserve">
          <source>To set thumbnail toolbar in your application, you need to use &lt;a href=&quot;api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt;</source>
          <target state="translated">응용 프로그램에서 축소판 도구 모음을 설정하려면 &lt;a href=&quot;api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0df5d95b16857776caec66f1453ba88b6aea30e8" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API.</source>
          <target state="translated">애플리케이션에 대한 사용자 작업을 설정하려면 &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e7b89714cfd1f9e95379e400b5c9a51b1d0399a" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API:</source>
          <target state="translated">애플리케이션에 대한 사용자 작업을 설정하기 위해 &lt;a href=&quot;../api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5406376f2af9e6a995cae90e6e9a4263420d867" translate="yes" xml:space="preserve">
          <source>To set user tasks for your application, you can use &lt;a href=&quot;api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API.</source>
          <target state="translated">애플리케이션에 대한 사용자 작업을 설정하려면 &lt;a href=&quot;api/app#appsetusertaskstasks-windows&quot;&gt;app.setUserTasks&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a81bd770c7f6f6cdbd653536bb6464061030de2e" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you can use the &lt;code&gt;app.dock.setMenu&lt;/code&gt; API, which is only available on macOS:</source>
          <target state="translated">사용자 정의 독 메뉴를 설정하려면 macOS에서만 사용할 수 있는 &lt;code&gt;app.dock.setMenu&lt;/code&gt; API를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc8c6162f39eccd9e0a2c6c7b4af7f42bc6101f3" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you need to use the &lt;a href=&quot;../api/dock#docksetmenumenu-macos&quot;&gt;&lt;code&gt;app.dock.setMenu&lt;/code&gt;&lt;/a&gt; API, which is only available on macOS.</source>
          <target state="translated">사용자 지정 도크 메뉴를 설정하려면 macOS에서만 사용할 수 있는 &lt;a href=&quot;../api/dock#docksetmenumenu-macos&quot;&gt; &lt;code&gt;app.dock.setMenu&lt;/code&gt; &lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0d7abf3477aa502dfde99503c16908b293c13123" translate="yes" xml:space="preserve">
          <source>To set your custom dock menu, you need to use the &lt;a href=&quot;api/dock#docksetmenumenu-macos&quot;&gt;&lt;code&gt;app.dock.setMenu&lt;/code&gt;&lt;/a&gt; API, which is only available on macOS.</source>
          <target state="translated">사용자 지정 도크 메뉴를 설정하려면 macOS에서만 사용할 수 있는 &lt;a href=&quot;api/dock#docksetmenumenu-macos&quot;&gt; &lt;code&gt;app.dock.setMenu&lt;/code&gt; &lt;/a&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8a666dc29720fb7935c3be8fe07a209272af61f3" translate="yes" xml:space="preserve">
          <source>To share data between web pages (the renderer processes) the simplest way is to use HTML5 APIs which are already available in browsers. Good candidates are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage&quot;&gt;Storage API&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt;&lt;code&gt;sessionStorage&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;.</source>
          <target state="translated">웹 페이지 (렌더러 프로세스)간에 데이터를 공유하는 가장 간단한 방법은 브라우저에서 이미 사용 가능한 HTML5 API를 사용하는 것입니다. 좋은 후보는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage&quot;&gt;Storage API&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage&quot;&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage&quot;&gt; &lt;code&gt;sessionStorage&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d881d9cecc44abbf952278e2ff0f958d75a17eb" translate="yes" xml:space="preserve">
          <source>To show notifications in the Main process, you need to use the &lt;a href=&quot;../api/notification&quot;&gt;Notification&lt;/a&gt; module.</source>
          <target state="translated">기본 프로세스에서 알림을 표시하려면 &lt;a href=&quot;../api/notification&quot;&gt;알림&lt;/a&gt; 모듈 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2294b6f2f82d890554a7c1faf453bfcadb3c5ee0" translate="yes" xml:space="preserve">
          <source>To show notifications in the Main process, you need to use the &lt;a href=&quot;api/notification&quot;&gt;Notification&lt;/a&gt; module.</source>
          <target state="translated">기본 프로세스에서 알림을 표시하려면 &lt;a href=&quot;api/notification&quot;&gt;알림&lt;/a&gt; 모듈 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="80978885a5cca2faa70b28de96dc12416111ed37" translate="yes" xml:space="preserve">
          <source>To show the arguments and local variables for the current frame, run &lt;code&gt;frame variable&lt;/code&gt; (or &lt;code&gt;fr v&lt;/code&gt;), which will show you that the app is currently setting the name to &quot;Electron&quot;.</source>
          <target state="translated">현재 프레임에 대한 인수 및 로컬 변수를 표시하려면 &lt;code&gt;frame variable&lt;/code&gt; (또는 &lt;code&gt;fr v&lt;/code&gt; )를 실행 하면 앱이 현재 이름을 &quot;Electron&quot;으로 설정하고 있음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fddaf77e7ce491807b3aa2c1d85652d19b49d5f1" translate="yes" xml:space="preserve">
          <source>To solve this, you can turn off node integration in Electron:</source>
          <target state="translated">이를 해결하기 위해 Electron에서 노드 통합을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db94cc8aa1602bd9aa33ff256eb11de62cfa9705" translate="yes" xml:space="preserve">
          <source>To speed up subsequent builds, you can use &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;. Add the GN arg &lt;code&gt;cc_wrapper = &quot;sccache&quot;&lt;/code&gt; by running &lt;code&gt;gn args out/Testing&lt;/code&gt; to bring up an editor and adding a line to the end of the file.</source>
          <target state="translated">후속 빌드 속도를 높이기 위해 &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt; 를 사용할 수 있습니다 . &lt;code&gt;gn args out/Testing&lt;/code&gt; 을 실행 하여 편집기를 불러오고 파일 끝에 줄을 추가하여 GN arg &lt;code&gt;cc_wrapper = &quot;sccache&quot;&lt;/code&gt; 를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="018ce00287de800e1bc7a9996bf6fa900c0870b1" translate="yes" xml:space="preserve">
          <source>To speed up subsequent builds, you can use &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt;. Add the GN arg &lt;code&gt;cc_wrapper=&quot;sccache&quot;&lt;/code&gt; by running &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">후속 빌드 속도를 높이기 위해 &lt;a href=&quot;https://github.com/mozilla/sccache&quot;&gt;sccache&lt;/a&gt; 를 사용할 수 있습니다 . 편집기를 불러 오기 위해 &lt;code&gt;gn args out/Default&lt;/code&gt; 를 실행 하여 GN arg &lt;code&gt;cc_wrapper=&quot;sccache&quot;&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="236acba2594374972c395b112e7bcb5d45e8802c" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up PowerShell/CMD and execute your debug build of Electron, using the application to open as a parameter.</source>
          <target state="translated">디버깅 세션을 시작하려면 PowerShell / CMD를 열고 응용 프로그램을 매개 변수로 사용하여 Electron의 디버그 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="5544da53f4bc06710edf2e9e252890e3639c3316" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up Terminal and start &lt;code&gt;lldb&lt;/code&gt;, passing a debug build of Electron as a parameter.</source>
          <target state="translated">디버깅 세션을 시작하려면 터미널을 열고 &lt;code&gt;lldb&lt;/code&gt; 를 시작 하여 Electron의 디버그 빌드를 매개 변수로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="e747539b0630d30d1c58db33b2368f5127045eae" translate="yes" xml:space="preserve">
          <source>To start a debugging session, open up Terminal and start &lt;code&gt;lldb&lt;/code&gt;, passing a non-release build of Electron as a parameter.</source>
          <target state="translated">디버깅 세션을 시작하려면 터미널을 열고 &lt;code&gt;lldb&lt;/code&gt; 를 시작 하여 Electron의 비 릴리스 빌드를 매개 변수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0eb63a04be761f3e87cc275edfda130d469b1440" translate="yes" xml:space="preserve">
          <source>To start the process, ensure that you fulfill the requirements for signing and notarizing your app:</source>
          <target state="translated">프로세스를 시작하려면 앱 서명 및 공증 요구 사항을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="625de64eef7edca92d3a8deb4d77c60a951c81e5" translate="yes" xml:space="preserve">
          <source>To submit a bug report:</source>
          <target state="translated">버그 보고서를 제출하려면 :</target>
        </trans-unit>
        <trans-unit id="78ffac4244e08269a135e721e89ed63e507c1497" translate="yes" xml:space="preserve">
          <source>To submit your app to the Mac App Store, you first must get a certificate from Apple. You can follow these &lt;a href=&quot;https://github.com/nwjs/nw.js/wiki/Mac-App-Store-%28MAS%29-Submission-Guideline#first-steps&quot;&gt;existing guides&lt;/a&gt; on web.</source>
          <target state="translated">Mac App Store에 앱을 제출하려면 먼저 Apple로부터 인증서를 받아야합니다. 웹에서 이러한 &lt;a href=&quot;https://github.com/nwjs/nw.js/wiki/Mac-App-Store-%28MAS%29-Submission-Guideline#first-steps&quot;&gt;기존 가이드&lt;/a&gt; 를 따를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4d200a68b265bf8731b41f173a65599adfffaf2" translate="yes" xml:space="preserve">
          <source>To test In-App Purchase in development with Electron you'll have to change the &lt;code&gt;CFBundleIdentifier&lt;/code&gt; in &lt;code&gt;node_modules/electron/dist/Electron.app/Contents/Info.plist&lt;/code&gt;. You have to replace &lt;code&gt;com.github.electron&lt;/code&gt; by the bundle identifier of the application you created with iTunes Connect.</source>
          <target state="translated">전자와 개발에 앱내 구매 테스트에 당신은 변경해야 할거야 &lt;code&gt;CFBundleIdentifier&lt;/code&gt; 에 &lt;code&gt;node_modules/electron/dist/Electron.app/Contents/Info.plist&lt;/code&gt; . &lt;code&gt;com.github.electron&lt;/code&gt; 을 iTunes Connect로 생성 한 응용 프로그램의 번들 식별자 로 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="f0200b2cf9828f35bb99fcf4bce14c1a27a03302" translate="yes" xml:space="preserve">
          <source>To test your app, use a Windows on Arm device running Windows 10 (version 1903 or later). Make sure that you copy your application over to the target device - Chromium's sandbox will not work correctly when loading your application assets from a network location.</source>
          <target state="translated">앱을 테스트하려면 Windows 10 (버전 1903 이상)을 실행하는 Windows on Arm 장치를 사용하십시오. 애플리케이션을 대상 기기에 복사했는지 확인하세요. 네트워크 위치에서 애플리케이션 자산을로드 할 때 Chromium의 샌드 박스가 제대로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51b0c5981c1aa5f79fb7a3fb544da1122e2b5376" translate="yes" xml:space="preserve">
          <source>To test your application without rebuilding Electron, &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/application-distribution.md&quot;&gt;place&lt;/a&gt; your app source into Electron's resource directory.</source>
          <target state="translated">전자를 다시 작성하지 않고 응용 프로그램을 테스트하려면, &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/application-distribution.md&quot;&gt;배치&lt;/a&gt; 전자의 리소스 디렉토리에 앱 소스를.</target>
        </trans-unit>
        <trans-unit id="df4472e1028687ef284600836e0e0e5f604e7e9d" translate="yes" xml:space="preserve">
          <source>To update an existing project to use the latest stable version:</source>
          <target state="translated">안정적인 최신 버전을 사용하도록 기존 프로젝트를 업데이트하려면</target>
        </trans-unit>
        <trans-unit id="14946c79bea6612f29f09cac40fff40ee35a7f20" translate="yes" xml:space="preserve">
          <source>To update these vendored dependencies, run the following command:</source>
          <target state="translated">이러한 공급 업체 종속성을 업데이트하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="7b33399d6a3a53a5596de14648855fea8eb538ae" translate="yes" xml:space="preserve">
          <source>To use a Node.js module, you first need to install it as a dependency:</source>
          <target state="translated">Node.js 모듈을 사용하려면 먼저 종속성으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="14d273c2dd2c5afa0c5a3e83f844df016da311d8" translate="yes" xml:space="preserve">
          <source>To use an &lt;code&gt;asar&lt;/code&gt; archive to replace the &lt;code&gt;app&lt;/code&gt; folder, you need to rename the archive to &lt;code&gt;app.asar&lt;/code&gt;, and put it under Electron's resources directory like below, and Electron will then try to read the archive and start from it.</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브 를 사용 하여 &lt;code&gt;app&lt;/code&gt; 폴더를 바꾸려면 아카이브 이름을 &lt;code&gt;app.asar&lt;/code&gt; 로 바꾸고 아래와 같이 Electron의 resources 디렉토리에 놓으면 Electron이 아카이브를 읽고 시작합니다.</target>
        </trans-unit>
        <trans-unit id="03c772527450b0386733b6257997ac8c564f6771" translate="yes" xml:space="preserve">
          <source>To use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">Windows에서이 기능을 사용하려면 응용 프로그램을 문서 파일 유형의 처리기로 등록해야합니다. 그렇지 않으면 파일을 추가 한 후에도 JumpList에 파일이 나타나지 않습니다. &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;응용 프로그램 등록&lt;/a&gt; 에서 응용 프로그램 등록 에 대한 모든 것을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a764db62a5aed8e8a91f5505b0f4e66ae5610ea1" translate="yes" xml:space="preserve">
          <source>To verify whether the plugin works, you can use following ways:</source>
          <target state="translated">플러그인이 작동하는지 확인하려면 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6bdbe606f5d198cccc294fd940237813e099447" translate="yes" xml:space="preserve">
          <source>To verify whether widevine works, you can use following ways:</source>
          <target state="translated">widevine이 작동하는지 확인하려면 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="138ee3b70ac9c2ba41cda1b38a449d69c9ab29fb" translate="yes" xml:space="preserve">
          <source>To verify whether you are using the correct built-in module, you can print the path of the &lt;code&gt;electron&lt;/code&gt; module:</source>
          <target state="translated">올바른 내장 모듈을 사용하고 있는지 확인하려면 &lt;code&gt;electron&lt;/code&gt; 모듈 의 경로를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e482f53de830d6be7d4d2e636bf876b8286c63b" translate="yes" xml:space="preserve">
          <source>To work around this Electron uses a &lt;code&gt;gyp&lt;/code&gt; variable &lt;code&gt;libchromiumcontent_component&lt;/code&gt; to control which link settings to use and only generates one target when running &lt;code&gt;gyp&lt;/code&gt;.</source>
          <target state="translated">이 전자 주위 작업에 사용 &lt;code&gt;gyp&lt;/code&gt; 변수 &lt;code&gt;libchromiumcontent_component&lt;/code&gt; 사용 설정을 링크 제어를 실행하는 경우 하나 개의 목표를 생성 &lt;code&gt;gyp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb526b8d3ad35764a32346d65c25890a44d1af38" translate="yes" xml:space="preserve">
          <source>To work with Electron's &lt;code&gt;autoUpdater&lt;/code&gt; on Windows, which uses &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel&lt;/a&gt;, you'll want to set the launch path to Update.exe, and pass arguments that specify your application name. For example:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel&lt;/a&gt; 을 사용하는 Windows에서 Electron의 &lt;code&gt;autoUpdater&lt;/code&gt; 를 사용 하려면 시작 경로를 Update.exe로 설정하고 응용 프로그램 이름을 지정하는 인수를 전달해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3af816e16b0457a9e1d11e58102711f0cb3ed2e3" translate="yes" xml:space="preserve">
          <source>To write automated tests for your Electron app, you will need a way to &quot;drive&quot; your application. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; is a commonly-used solution which lets you emulate user actions via &lt;a href=&quot;http://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;. However, it's also possible to write your own custom driver using node's builtin IPC-over-STDIO. The benefit of a custom driver is that it tends to require less overhead than Spectron, and lets you expose custom methods to your test suite.</source>
          <target state="translated">Electron 앱에 대한 자동 테스트를 작성하려면 애플리케이션을 &quot;구동&quot;하는 방법이 필요합니다. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; 은 일반적으로 사용되는 솔루션으로 &lt;a href=&quot;http://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt; 를 통해 사용자 작업을 에뮬레이트 할 수 있습니다 . 그러나 노드의 내장 IPC-over-STDIO를 사용하여 사용자 정의 드라이버를 작성할 수도 있습니다. 커스텀 드라이버의 장점은 Spectron보다 오버 헤드가 덜 소요되고 커스텀 메소드를 테스트 스위트에 노출시킬 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eb3acee33f73782cfebaf8d5494698943ac82839" translate="yes" xml:space="preserve">
          <source>To write automated tests for your Electron app, you will need a way to &quot;drive&quot; your application. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; is a commonly-used solution which lets you emulate user actions via &lt;a href=&quot;https://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt;. However, it's also possible to write your own custom driver using node's builtin IPC-over-STDIO. The benefit of a custom driver is that it tends to require less overhead than Spectron, and lets you expose custom methods to your test suite.</source>
          <target state="translated">Electron 앱에 대한 자동화 된 테스트를 작성하려면 애플리케이션을 &quot;구동&quot;하는 방법이 필요합니다. &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; 은 &lt;a href=&quot;https://webdriver.io/&quot;&gt;WebDriver&lt;/a&gt; 를 통해 사용자 작업을 에뮬레이션 할 수있는 일반적으로 사용되는 솔루션입니다 . 그러나 노드의 내장 IPC-over-STDIO를 사용하여 사용자 지정 드라이버를 작성할 수도 있습니다. 사용자 지정 드라이버의 이점은 Spectron보다 오버 헤드가 덜 필요하고 사용자 지정 메서드를 테스트 스위트에 노출 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="dc15e82b571ba36cf12acd814afab9275855f8d3" translate="yes" xml:space="preserve">
          <source>Together with the broader Linux community, Canonical aims to fix many of the common software installation problems with the &lt;a href=&quot;https://snapcraft.io/&quot;&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; project. Snaps are containerized software packages that include required dependencies, auto-update, and work on all major Linux distributions without system modification.</source>
          <target state="translated">광범위한 Linux 커뮤니티와 함께 ​​Canonical은 &lt;a href=&quot;https://snapcraft.io/&quot;&gt; &lt;code&gt;snapcraft&lt;/code&gt; &lt;/a&gt; 프로젝트의 많은 일반적인 소프트웨어 설치 문제를 해결하는 것을 목표로합니다 . 스냅은 필수 종속성, 자동 업데이트를 포함하고 시스템 수정없이 모든 주요 Linux 배포에서 작동하는 컨테이너화 된 소프트웨어 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="4c3393e6946ce208ee91b3c6282944582d53deeb" translate="yes" xml:space="preserve">
          <source>Toggles the developer tools.</source>
          <target state="translated">개발자 도구를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="a184a355d96f3b5bb82bdf2bbbe311db60f45275" translate="yes" xml:space="preserve">
          <source>Toggles the visibility of the tab bar if native tabs are enabled and there is only one tab in the current window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 현재 창에 탭이 하나만있는 경우 탭 표시 줄의 가시성을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="e8a1234b8442f09d8965e48d93a16e10fa398baa" translate="yes" xml:space="preserve">
          <source>Tonga</source>
          <target state="translated">Tonga</target>
        </trans-unit>
        <trans-unit id="335493d3f301fe647db78cb561ecdbed66562d95" translate="yes" xml:space="preserve">
          <source>TouchBar</source>
          <target state="translated">TouchBar</target>
        </trans-unit>
        <trans-unit id="0c4d11d98521b9e3a04335843746d0c845e00434" translate="yes" xml:space="preserve">
          <source>TouchBar()</source>
          <target state="translated">TouchBar()</target>
        </trans-unit>
        <trans-unit id="7fa38b05de66f7910a21f4d906f8cc628d90ca28" translate="yes" xml:space="preserve">
          <source>TouchBarButton</source>
          <target state="translated">TouchBarButton</target>
        </trans-unit>
        <trans-unit id="5d516c8d5062d745ca89aca0c0636feef4256e4b" translate="yes" xml:space="preserve">
          <source>TouchBarButton()</source>
          <target state="translated">TouchBarButton()</target>
        </trans-unit>
        <trans-unit id="1e658ca652dc7cf8d1afe67e288e1e431f489a2f" translate="yes" xml:space="preserve">
          <source>TouchBarColorPicker</source>
          <target state="translated">TouchBarColorPicker</target>
        </trans-unit>
        <trans-unit id="e587f05813f29d0ca1a6a67532fecb6dbbaf3045" translate="yes" xml:space="preserve">
          <source>TouchBarColorPicker()</source>
          <target state="translated">TouchBarColorPicker()</target>
        </trans-unit>
        <trans-unit id="8476ad84a3e7647a69a2fa04d2bc2ad0052a7ed6" translate="yes" xml:space="preserve">
          <source>TouchBarGroup</source>
          <target state="translated">TouchBarGroup</target>
        </trans-unit>
        <trans-unit id="8961a19c9732fe688c3b2f08aa96d3e03edbd681" translate="yes" xml:space="preserve">
          <source>TouchBarGroup()</source>
          <target state="translated">TouchBarGroup()</target>
        </trans-unit>
        <trans-unit id="b631ced2bb7a5365f1f90282dea656ec9bdff7a0" translate="yes" xml:space="preserve">
          <source>TouchBarLabel</source>
          <target state="translated">TouchBarLabel</target>
        </trans-unit>
        <trans-unit id="814e42ac235ef886129864e36a49942ec38f3533" translate="yes" xml:space="preserve">
          <source>TouchBarLabel()</source>
          <target state="translated">TouchBarLabel()</target>
        </trans-unit>
        <trans-unit id="96e7a0a02fd3a7b0d25f91ca529bcf5f1a61e028" translate="yes" xml:space="preserve">
          <source>TouchBarOtherItemsProxy</source>
          <target state="translated">TouchBarOtherItemsProxy</target>
        </trans-unit>
        <trans-unit id="1bca3a8cee81209e72702787d88ea1e66521c841" translate="yes" xml:space="preserve">
          <source>TouchBarPopover</source>
          <target state="translated">TouchBarPopover</target>
        </trans-unit>
        <trans-unit id="598a9cdce168be93d906672cf1fee3cd73c9deaa" translate="yes" xml:space="preserve">
          <source>TouchBarPopover()</source>
          <target state="translated">TouchBarPopover()</target>
        </trans-unit>
        <trans-unit id="f2b4219fdb173d37ed9db9bca90085af07318678" translate="yes" xml:space="preserve">
          <source>TouchBarScrubber</source>
          <target state="translated">TouchBarScrubber</target>
        </trans-unit>
        <trans-unit id="ff948832d63cabad8d30a79ac9c548eadb0c1e75" translate="yes" xml:space="preserve">
          <source>TouchBarScrubber()</source>
          <target state="translated">TouchBarScrubber()</target>
        </trans-unit>
        <trans-unit id="aff517aa05d9f47530930183c664e196cc47fb54" translate="yes" xml:space="preserve">
          <source>TouchBarSegmentedControl</source>
          <target state="translated">TouchBarSegmentedControl</target>
        </trans-unit>
        <trans-unit id="22244bd6bc51e3847b14dfd1ff0a38985f8b668b" translate="yes" xml:space="preserve">
          <source>TouchBarSegmentedControl()</source>
          <target state="translated">TouchBarSegmentedControl()</target>
        </trans-unit>
        <trans-unit id="c34377065533da82b98a6571f52025902f468e9c" translate="yes" xml:space="preserve">
          <source>TouchBarSlider</source>
          <target state="translated">TouchBarSlider</target>
        </trans-unit>
        <trans-unit id="c85c4423f99b612b06975db964729d81f8317287" translate="yes" xml:space="preserve">
          <source>TouchBarSlider()</source>
          <target state="translated">TouchBarSlider()</target>
        </trans-unit>
        <trans-unit id="8052a0f622f7e225bb7d929f9c958baca8cc113f" translate="yes" xml:space="preserve">
          <source>TouchBarSpacer</source>
          <target state="translated">TouchBarSpacer</target>
        </trans-unit>
        <trans-unit id="80679ee9452522f3ef41acd219ae925fc972bca0" translate="yes" xml:space="preserve">
          <source>TouchBarSpacer()</source>
          <target state="translated">TouchBarSpacer()</target>
        </trans-unit>
        <trans-unit id="8eb94eb9fb79247bd9f2c92528c7479c3a46b880" translate="yes" xml:space="preserve">
          <source>Trace data will be written into &lt;code&gt;resultFilePath&lt;/code&gt; if it is not empty or into a temporary file. The actual file path will be passed to &lt;code&gt;callback&lt;/code&gt; if it's not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">추적 파일은 비어 있지 않거나 임시 파일에 있으면 &lt;code&gt;resultFilePath&lt;/code&gt; 에 기록 됩니다. 실제 파일 경로가 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 &lt;code&gt;callback&lt;/code&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff4593d1dac1c0e1b04e17867cc922f1b7388c20" translate="yes" xml:space="preserve">
          <source>Trace data will be written into &lt;code&gt;resultFilePath&lt;/code&gt;. If &lt;code&gt;resultFilePath&lt;/code&gt; is empty or not provided, trace data will be written to a temporary file, and the path will be returned in the promise.</source>
          <target state="translated">추적 데이터는 &lt;code&gt;resultFilePath&lt;/code&gt; 에 기록됩니다 . 경우 &lt;code&gt;resultFilePath&lt;/code&gt; 가 제공 비어 있거나 아닌, 추적 데이터는 임시 파일에 기록되며, 경로가 약속에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="189e764bd7a0ba516fa9ffe449a83061f22344f4" translate="yes" xml:space="preserve">
          <source>TraceCategoriesAndOptions Object</source>
          <target state="translated">TraceCategoriesAndOptions 객체</target>
        </trans-unit>
        <trans-unit id="036552ddc0d70ae1f7546f8d3e30783891d06d2e" translate="yes" xml:space="preserve">
          <source>TraceConfig Object</source>
          <target state="translated">TraceConfig 개체</target>
        </trans-unit>
        <trans-unit id="1a7b7c1b33d161f45804730c70b75175dccd9883" translate="yes" xml:space="preserve">
          <source>Transaction</source>
          <target state="translated">Transaction</target>
        </trans-unit>
        <trans-unit id="b6df58ae2c955171f3f63369c3b409ac3f47437a" translate="yes" xml:space="preserve">
          <source>Transaction Object</source>
          <target state="translated">거래 객체</target>
        </trans-unit>
        <trans-unit id="f5d6ceea00cdeff51f69c7425677184ed82a318a" translate="yes" xml:space="preserve">
          <source>Transparent window</source>
          <target state="translated">투명한 창</target>
        </trans-unit>
        <trans-unit id="013bb54709f260923e589ffdb661091d24b41c15" translate="yes" xml:space="preserve">
          <source>Transparent windows are not resizable. Setting &lt;code&gt;resizable&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; may make a transparent window stop working on some platforms.</source>
          <target state="translated">투명 창 크기를 조정할 수 없습니다. &lt;code&gt;resizable&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 일부 플랫폼에서 투명한 창이 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">트래비스 CI</target>
        </trans-unit>
        <trans-unit id="633356038eb15022ba73cebe34cd1ee789910ae8" translate="yes" xml:space="preserve">
          <source>Tray</source>
          <target state="translated">Tray</target>
        </trans-unit>
        <trans-unit id="c6bc3a7fadd316ee0e8df47780da2a2e741b2bb4" translate="yes" xml:space="preserve">
          <source>Tray()</source>
          <target state="translated">Tray()</target>
        </trans-unit>
        <trans-unit id="d53787fafd500e2de1869c47328c7f1cdd8c4a56" translate="yes" xml:space="preserve">
          <source>Treating an &lt;code&gt;asar&lt;/code&gt; Archive as a Normal File</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브를 일반 파일로 취급</target>
        </trans-unit>
        <trans-unit id="4049d8199d0e8910ecca4bf26fac606638c4745c" translate="yes" xml:space="preserve">
          <source>Triaging a Bug Report</source>
          <target state="translated">버그 보고서 심사</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="7c9932fde75af54cd79618211ea08d9352211b82" translate="yes" xml:space="preserve">
          <source>Troubleshooting: Symbols will not load</source>
          <target state="translated">문제 해결 : 기호가로드되지 않습니다</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="647772087bb3ffaddf12a39b19b1f3af65cc4f4a" translate="yes" xml:space="preserve">
          <source>Try not to be discouraged. If you feel that a review is unfair, say so or seek the input of another project contributor. Often such comments are the result of a reviewer having taken insufficient time to review and are not ill-intended. Such difficulties can often be resolved with a bit of patience. That said, reviewers should be expected to provide helpful feeback.</source>
          <target state="translated">낙심하지 마십시오. 검토가 불공평하다고 생각되면 말하거나 다른 프로젝트 제공자의 의견을 구하십시오. 이러한 의견은 검토자가 검토 할 시간이 충분하지 않아 의도하지 않은 결과 인 경우가 많습니다. 그러한 어려움은 종종 약간의 인내심으로 해결 될 수 있습니다. 즉, 검토 자들은 유용한 수수료를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="4400e493105bf43a3c960cdaf95219eb3c6135be" translate="yes" xml:space="preserve">
          <source>Try not to be discouraged. If you feel that a review is unfair, say so or seek the input of another project contributor. Often such comments are the result of a reviewer having taken insufficient time to review and are not ill-intended. Such difficulties can often be resolved with a bit of patience. That said, reviewers should be expected to provide helpful feedback.</source>
          <target state="translated">낙담하지 마십시오. 리뷰가 불공평하다고 생각되면 그렇게 말하거나 다른 프로젝트 기여자의 의견을 구하십시오. 종종 그러한 의견은 검토자가 검토하는 데 시간이 충분하지 않아 의도하지 않았기 때문에 발생합니다. 그러한 어려움은 종종 약간의 인내심으로 해결 될 수 있습니다. 즉, 리뷰어는 유용한 피드백을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="2bb8b36fac23fa3979988a718963e7852b71e041" translate="yes" xml:space="preserve">
          <source>Try reinstalling 32bit Node.js.</source>
          <target state="translated">32bit Node.js를 다시 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="081d8985ad85020ad71cd9b3a5927e8da7533a1c" translate="yes" xml:space="preserve">
          <source>Try to build Debug version first: &lt;code&gt;$ ./script/build.py -c D&lt;/code&gt;</source>
          <target state="translated">디버그 버전을 먼저 빌드하십시오 : &lt;code&gt;$ ./script/build.py -c D&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e57e130472b51c44c72a400c7d3be435ac9b4df8" translate="yes" xml:space="preserve">
          <source>Try to close all windows. The &lt;code&gt;before-quit&lt;/code&gt; event will be emitted first. If all windows are successfully closed, the &lt;code&gt;will-quit&lt;/code&gt; event will be emitted and by default the application will terminate.</source>
          <target state="translated">모든 창을 닫으십시오. &lt;code&gt;before-quit&lt;/code&gt; 이벤트는 첫번째 방출됩니다. 모든 창이 성공적으로 닫히면 &lt;code&gt;will-quit&lt;/code&gt; 이벤트가 발생하고 기본적으로 응용 프로그램이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="256563822009fe94811c222969c5e2c6a749538d" translate="yes" xml:space="preserve">
          <source>Try to close the window. This has the same effect as a user manually clicking the close button of the window. The web page may cancel the close though. See the &lt;a href=&quot;#event-close&quot;&gt;close event&lt;/a&gt;.</source>
          <target state="translated">창을 닫으십시오. 이것은 사용자가 창의 닫기 버튼을 수동으로 클릭하는 것과 같은 효과를 갖습니다. 웹 페이지는 닫기를 취소 할 수 있습니다. &lt;a href=&quot;#event-close&quot;&gt;닫기 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbb76ebdc564c9078996dc8c525a72a33d356bb8" translate="yes" xml:space="preserve">
          <source>Try to identify complex errors as soon as possible.</source>
          <target state="translated">가능한 빨리 복잡한 오류를 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="776cb86bacdaaa25efc1728d1eea429b5f47a6aa" translate="yes" xml:space="preserve">
          <source>Trying this Example</source>
          <target state="translated">이 예제를 시도</target>
        </trans-unit>
        <trans-unit id="ab650a1a4b8fdf3a4053ce8d277d335dd82e5447" translate="yes" xml:space="preserve">
          <source>Turkish</source>
          <target state="translated">Turkish</target>
        </trans-unit>
        <trans-unit id="24a49d0317fbd7a414f3e95189f38e30cc5010a7" translate="yes" xml:space="preserve">
          <source>Turkmen</source>
          <target state="translated">Turkmen</target>
        </trans-unit>
        <trans-unit id="bd15c40e964cd2e04e618ee34c723a4dae5d9d4e" translate="yes" xml:space="preserve">
          <source>Turning this Node application into an Electron application is quite simple - we merely replace the &lt;code&gt;node&lt;/code&gt; runtime with the &lt;code&gt;electron&lt;/code&gt; runtime.</source>
          <target state="translated">이 Node 어플리케이션을 Electron 어플리케이션으로 바꾸는 것은 매우 간단 합니다. 단지 우리는 단지 &lt;code&gt;node&lt;/code&gt; 런타임을 &lt;code&gt;electron&lt;/code&gt; 런타임으로 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="f3b5da9c85bc9c8f8d4c6eb947b8c953c70538df" translate="yes" xml:space="preserve">
          <source>Twi</source>
          <target state="translated">Twi</target>
        </trans-unit>
        <trans-unit id="5c157813d6a9d562b35e6141a001d6b665a3e7ae" translate="yes" xml:space="preserve">
          <source>Two modes of rendering can be used and only the dirty area is passed in the &lt;code&gt;'paint'&lt;/code&gt; event to be more efficient. The rendering can be stopped, continued and the frame rate can be set. The specified frame rate is a top limit value, when there is nothing happening on a webpage, no frames are generated. The maximum frame rate is 60, because above that there is no benefit, only performance loss.</source>
          <target state="translated">두 가지 렌더링 모드를 사용할 수 있으며 더 효율적인 영역을 위해 &lt;code&gt;'paint'&lt;/code&gt; 이벤트 에서 더티 영역 만 전달됩니다 . 렌더링을 중지하고 계속할 수 있으며 프레임 속도를 설정할 수 있습니다. 지정된 프레임 속도는 상한값이며, 웹 페이지에 아무 일도 일어나지 않으면 프레임이 생성되지 않습니다. 최대 프레임 속도는 60입니다. 그 이유는 이점이없고 성능 손실 만 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a50e1c16f6c549a02f6bf8bbd72bb525bb1933b3" translate="yes" xml:space="preserve">
          <source>Two-Phase Project Generation</source>
          <target state="translated">2 단계 프로젝트 생성</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="c92613bc1eaaa6bc7c638d86b441dfc1c68a6421" translate="yes" xml:space="preserve">
          <source>Type the following commands in Windbg to print why symbols are not loading:</source>
          <target state="translated">기호가로드되지 않는 이유를 인쇄하려면 Windbg에 다음 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="509b7e5ada7baea26206520cbb4be241d1ec641e" translate="yes" xml:space="preserve">
          <source>Typed Arrays (such as &lt;code&gt;Uint8Array&lt;/code&gt;, &lt;code&gt;Uint16Array&lt;/code&gt;, &lt;code&gt;Uint32Array&lt;/code&gt; and so on) will be transferred as such, instead of being converted to Node.js &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">형식화 된 배열 (예 : &lt;code&gt;Uint8Array&lt;/code&gt; , &lt;code&gt;Uint16Array&lt;/code&gt; , &lt;code&gt;Uint32Array&lt;/code&gt; 등)은 Node.js &lt;code&gt;Buffer&lt;/code&gt; 로 변환되는 대신 그대로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="803b118cfb81a531ff535afb012118cd3a5133f1" translate="yes" xml:space="preserve">
          <source>Types of Breaking Changes</source>
          <target state="translated">브레이킹 체인지의 유형</target>
        </trans-unit>
        <trans-unit id="e7a6dd07f95b4c6f7c4b347a13e6040d694421b6" translate="yes" xml:space="preserve">
          <source>Typically, a window is flashed to inform the user that the window requires attention but that it does not currently have the keyboard focus.</source>
          <target state="translated">일반적으로, 창은주의가 필요하지만 현재 키보드 초점이 없음을 사용자에게 알리기 위해 깜박입니다.</target>
        </trans-unit>
        <trans-unit id="f702986ce89b08277340029f967e398eff5a13e4" translate="yes" xml:space="preserve">
          <source>Typically, you create a desktop application for an operating system (OS) using each operating system's specific native application frameworks. Electron makes it possible to write your application once using technologies that you already know.</source>
          <target state="translated">일반적으로 각 운영 체제의 특정 기본 응용 프로그램 프레임 워크를 사용하여 운영 체제 (OS) 용 데스크톱 응용 프로그램을 만듭니다. Electron을 사용하면 이미 알고있는 기술을 사용하여 애플리케이션을 한 번 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c939d742cd76ccd1b0cf7085be495fe793f85b85" translate="yes" xml:space="preserve">
          <source>Ubuntu 12.04 and newer</source>
          <target state="translated">우분투 12.04 이상</target>
        </trans-unit>
        <trans-unit id="dfeb6378e4eaf7efe811d862650fd7d819e16d0f" translate="yes" xml:space="preserve">
          <source>Ubuntu 14.04 and newer</source>
          <target state="translated">Ubuntu 14.04 이상</target>
        </trans-unit>
        <trans-unit id="4468dbbd88ac1de887a792a10dfd24d7c9748b5f" translate="yes" xml:space="preserve">
          <source>Uighur</source>
          <target state="translated">Uighur</target>
        </trans-unit>
        <trans-unit id="515451058797b204e188dd70f8d20f32dacca327" translate="yes" xml:space="preserve">
          <source>Ukrainian</source>
          <target state="translated">Ukrainian</target>
        </trans-unit>
        <trans-unit id="90eda1ffe8c2bb94c4f6823e592a424f7cca5549" translate="yes" xml:space="preserve">
          <source>Uncheck the &lt;code&gt;prerelease&lt;/code&gt; checkbox if you're publishing a stable release; leave it checked for beta releases.</source>
          <target state="translated">안정적인 릴리스를 게시하는 경우 &lt;code&gt;prerelease&lt;/code&gt; 확인란의 선택을 취소하십시오 . 베타 버전을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="73e0c2b86d9125103bbe82a69fcb0c2879380e80" translate="yes" xml:space="preserve">
          <source>Under &lt;em&gt;Scale and layout&lt;/em&gt;, make sure that the device is set to 100%.</source>
          <target state="translated">아래 &lt;em&gt;스케일과 레이아웃&lt;/em&gt; , 확인 장치가 100 %로 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1d9350a1281eb5e0c8e86eddd456139893c903bb" translate="yes" xml:space="preserve">
          <source>Under macOS Catalina our former Tray implementation breaks. Apple's native substitute doesn't support changing the highlighting behavior.</source>
          <target state="translated">macOS Catalina에서는 이전 트레이 구현이 중단됩니다. Apple의 기본 대체품은 강조 표시 동작 변경을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50f4e4367731738bb8f1d0502cd03a534b0a423c" translate="yes" xml:space="preserve">
          <source>Under no circumstances should you block this process and the UI thread with long-running operations. Blocking the UI thread means that your entire app will freeze until the main process is ready to continue processing.</source>
          <target state="translated">어떤 상황에서도 장기 실행 작업으로이 프로세스와 UI 스레드를 차단해서는 안됩니다. UI 스레드를 차단하면 기본 프로세스가 처리를 계속할 준비가 될 때까지 전체 앱이 정지됩니다.</target>
        </trans-unit>
        <trans-unit id="75d540f4551f2003b4bc89ba987d18f4a0fe4402" translate="yes" xml:space="preserve">
          <source>Under the hood &lt;code&gt;webview&lt;/code&gt; is implemented with &lt;a href=&quot;https://www.chromium.org/developers/design-documents/oop-iframes&quot;&gt;Out-of-Process iframes (OOPIFs)&lt;/a&gt;. The &lt;code&gt;webview&lt;/code&gt; tag is essentially a custom element using shadow DOM to wrap an &lt;code&gt;iframe&lt;/code&gt; element inside it.</source>
          <target state="translated">내부적으로 &lt;code&gt;webview&lt;/code&gt; 는 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/oop-iframes&quot;&gt;Out-of-Process iframe (OOPIF)으로&lt;/a&gt; 구현됩니다 . &lt;code&gt;webview&lt;/code&gt; 태그는 본질적으로 포장 그림자 DOM을 이용하여 사용자 정의 요소 &lt;code&gt;iframe&lt;/code&gt; 안에 소자.</target>
        </trans-unit>
        <trans-unit id="4a74d6474b779c67451ed4d7e2cfbae97f637ab4" translate="yes" xml:space="preserve">
          <source>Under the hood calling &lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; will close all application windows first, and automatically call &lt;code&gt;app.quit()&lt;/code&gt; after all windows have been closed.</source>
          <target state="translated">&lt;code&gt;autoUpdater.quitAndInstall()&lt;/code&gt; 을 호출 하면 먼저 모든 응용 프로그램 창이 닫히고 모든 창이 &lt;code&gt;app.quit()&lt;/code&gt; 자동으로 app.quit ()가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="108846efdc37eba245ec3662341e196d3655c210" translate="yes" xml:space="preserve">
          <source>Under the hood this API subscribes to &lt;code&gt;NSDistributedNotificationCenter&lt;/code&gt;, example values of &lt;code&gt;event&lt;/code&gt; are:</source>
          <target state="translated">이 API는 &lt;code&gt;NSDistributedNotificationCenter&lt;/code&gt; 를 구독하며 &lt;code&gt;event&lt;/code&gt; 예제 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f068d75221578dcdb4243b950f43fb162c4015a" translate="yes" xml:space="preserve">
          <source>Under the page title must be a one-line description starting with &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">페이지 제목 아래에는 &lt;code&gt;&amp;gt;&lt;/code&gt; 로 시작하는 한 줄짜리 설명이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="28fd4910c04739148e6ad8d1ae923e202e3298b1" translate="yes" xml:space="preserve">
          <source>Unhook the window message.</source>
          <target state="translated">창 메시지를 분리하십시오.</target>
        </trans-unit>
        <trans-unit id="b40878aaf41e2e78aae513acca8cc9dec321d473" translate="yes" xml:space="preserve">
          <source>Unhooks all of the window messages.</source>
          <target state="translated">모든 창 메시지를 분리합니다.</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="c3b1ac5c155659b69f20177724bff86b1906db38" translate="yes" xml:space="preserve">
          <source>Unity Launcher</source>
          <target state="translated">유니티 런처</target>
        </trans-unit>
        <trans-unit id="da69b79e01b3821772ba3b0edb40c3e83a7f4075" translate="yes" xml:space="preserve">
          <source>Unity's preferred way of telling your application what to do is to use parameters. You can find these in your app in the global variable &lt;code&gt;process.argv&lt;/code&gt;.</source>
          <target state="translated">애플리케이션에 무엇을해야하는지 알려주는 Unity의 선호 방법은 파라미터를 사용하는 것입니다. 전역 변수 &lt;code&gt;process.argv&lt;/code&gt; 의 앱에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2307dbca6c045be24fb8c7a275e2a0ea94e5143c" translate="yes" xml:space="preserve">
          <source>Unlike Squirrel.Mac, Windows can host updates on S3 or any other static file host. You can read the documents of &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel.Windows&lt;/a&gt; to get more details about how Squirrel.Windows works.</source>
          <target state="translated">Squirrel.Mac과 달리 Windows는 S3 또는 기타 정적 파일 호스트에서 업데이트를 호스팅 할 수 있습니다. &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Windows&quot;&gt;Squirrel.Windows&lt;/a&gt; 의 문서를 읽고 Squirrel.Windows의 작동 방식에 대한 자세한 정보를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1200c597f152169e0b75af503d88ca70f8010072" translate="yes" xml:space="preserve">
          <source>Unlike an &lt;code&gt;iframe&lt;/code&gt;, the &lt;code&gt;webview&lt;/code&gt; runs in a separate process than your app. It doesn't have the same permissions as your web page and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content. &lt;strong&gt;Note:&lt;/strong&gt; Most methods called on the webview from the host page require a synchronous call to the main process.</source>
          <target state="translated">달리 &lt;code&gt;iframe&lt;/code&gt; 대응 의 &lt;code&gt;webview&lt;/code&gt; 앱이 아닌 별도의 프로세스에서 실행됩니다. 웹 페이지와 동일한 권한이 없으며 앱과 포함 된 콘텐츠 간의 모든 상호 작용이 비동기식입니다. 이렇게하면 내장 된 콘텐츠로부터 앱을 안전하게 유지할 수 있습니다. &lt;strong&gt;참고 :&lt;/strong&gt; 호스트 페이지에서 웹뷰에 호출 된 대부분의 메소드에는 기본 프로세스에 대한 동기 호출이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="19f0873ed3db7a1c99ef500734c95e47f28766c2" translate="yes" xml:space="preserve">
          <source>Unlike most projects that use &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; as target names, Electron uses &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; instead. This is because &lt;code&gt;gyp&lt;/code&gt; randomly crashes if there is only one &lt;code&gt;Release&lt;/code&gt; or &lt;code&gt;Debug&lt;/code&gt; build configuration defined, and Electron only has to generate one target at a time as stated above.</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 를 대상 이름으로 사용하는 대부분의 프로젝트와 달리 Electron은 &lt;code&gt;R&lt;/code&gt; 과 &lt;code&gt;D&lt;/code&gt; 를 대신 사용합니다. &lt;code&gt;Release&lt;/code&gt; 또는 &lt;code&gt;Debug&lt;/code&gt; 빌드 구성 이 하나만 정의되어 있고 Electron이 위에서 설명한대로 한 번에 하나의 대상 만 생성 하면 &lt;code&gt;gyp&lt;/code&gt; 가 무작위로 충돌 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="4008cb6ec43b82ad40fbb7adf03f0db639d3a02e" translate="yes" xml:space="preserve">
          <source>Unlike the dock menu in macOS which is a real menu, user tasks in Windows work like application shortcuts such that when user clicks a task, a program will be executed with specified arguments.</source>
          <target state="translated">실제 메뉴 인 macOS의 도크 메뉴와 달리 Windows의 사용자 작업은 응용 프로그램 바로 가기처럼 작동하여 사용자가 작업을 클릭하면 지정된 인수로 프로그램이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="d9e34981d2f2fce3892dc0bb86feff0d855aa798" translate="yes" xml:space="preserve">
          <source>Unlike the dock menu in macOS which is a real menu, user tasks in Windows work like application shortcuts. For example, when a user clicks a task, the program will be executed with specified arguments.</source>
          <target state="translated">실제 메뉴 인 macOS의 Dock 메뉴와 달리 Windows의 사용자 작업은 응용 프로그램 바로 가기처럼 작동합니다. 예를 들어 사용자가 작업을 클릭하면 프로그램이 지정된 인수로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="567bb385b1d2763ff6a935ea9cda9d82b68d876b" translate="yes" xml:space="preserve">
          <source>Unloads an extension.</source>
          <target state="translated">확장을 언로드합니다.</target>
        </trans-unit>
        <trans-unit id="7db0abf33362064713d20a36ff8577b0808f46a7" translate="yes" xml:space="preserve">
          <source>Unmaximizes the window.</source>
          <target state="translated">창을 최대화하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9e1c8d33b2fb218a4c98e5abfaac1c1c22046bef" translate="yes" xml:space="preserve">
          <source>Unnecessary or blocking network requests</source>
          <target state="translated">불필요하거나 차단 된 네트워크 요청</target>
        </trans-unit>
        <trans-unit id="82b18a887466ca5f75f3cfa9738ba368f73344fe" translate="yes" xml:space="preserve">
          <source>Unnecessary polyfills</source>
          <target state="translated">불필요한 폴리 필</target>
        </trans-unit>
        <trans-unit id="44cf60eebc2557dbf1b90656a39b75be20231982" translate="yes" xml:space="preserve">
          <source>Unregisters all of the global shortcuts.</source>
          <target state="translated">모든 글로벌 바로 가기를 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="e8e31e8e898a3bea8b811ea4163212801fb22340" translate="yes" xml:space="preserve">
          <source>Unregisters any ServiceWorker if present and returns a boolean as response to &lt;code&gt;callback&lt;/code&gt; when the JS promise is fulfilled or false when the JS promise is rejected.</source>
          <target state="translated">존재하는 경우 ServiceWorker를 등록 취소 하고 JS 약속이 이행 될 때 &lt;code&gt;callback&lt;/code&gt; 대한 응답으로 부울을 리턴 하거나 JS 약속이 거부되면 false를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="326e4726ee69151e636ea8c1d41dcff316e3fbd4" translate="yes" xml:space="preserve">
          <source>Unregisters the custom protocol of &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 의 사용자 정의 프로토콜을 등록 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="2cd6c69f00f6312aa0612e78f2cd66b8c37b4765" translate="yes" xml:space="preserve">
          <source>Unregisters the global shortcut of &lt;code&gt;accelerator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;accelerator&lt;/code&gt; 의 전체 바로 가기를 등록 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="c41dab5baebbed9be76a98ff3843118b2c6ddb75" translate="yes" xml:space="preserve">
          <source>Unsupported options are:</source>
          <target state="translated">지원되지 않는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f39d115564bf5ed0f634840937da15cee59d647c" translate="yes" xml:space="preserve">
          <source>Unzip &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt;. From an elevated PowerShell (opened with &quot;run as Administrator&quot;, ensure that your systems execution policy allows us to run everything we intend to run by calling &lt;code&gt;Set-ExecutionPolicy bypass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; 을 압축 해제 하십시오 . &quot;관리자 권한으로 실행&quot;으로 열린 고급 PowerShell에서 &lt;code&gt;Set-ExecutionPolicy bypass&lt;/code&gt; 를 호출하여 시스템 실행 정책으로 실행하려는 모든 것을 실행할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c151b4ffba7904c9686d9d64edf46d911405acb5" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;./script/create-dist&lt;/code&gt; in the libcc repo, recreate a &lt;code&gt;dist&lt;/code&gt;, and run Electron bootstrap script once again.</source>
          <target state="translated">libcc 저장소에서 &lt;code&gt;./script/create-dist&lt;/code&gt; 를 업데이트 하고 &lt;code&gt;dist&lt;/code&gt; 를 다시 작성한 후 Electron 부트 스트랩 스크립트를 다시 한 번 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="6c09f59981de69011a908dd962ad681ee00e70ff" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;patches/v8/README.md&lt;/code&gt; with references to all new patches that have been added so that the next person will know which need to be removed.</source>
          <target state="translated">다음 사람이 제거해야 할 사항을 알 수 있도록 추가 된 모든 새 패치에 대한 참조로 &lt;code&gt;patches/v8/README.md&lt;/code&gt; 를 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae874ca79a814080d2848a2f4732d573628b3a7c" translate="yes" xml:space="preserve">
          <source>Update Electron dependencies (crashpad, NodeJS, etc.) if needed</source>
          <target state="translated">필요한 경우 Electron 종속성 (크래시 패드, NodeJS 등) 업데이트</target>
        </trans-unit>
        <trans-unit id="b68d790d085383526e4fe70b927511ff42ac27b8" translate="yes" xml:space="preserve">
          <source>Update Electron docs if necessary</source>
          <target state="translated">필요한 경우 전자 문서 업데이트</target>
        </trans-unit>
        <trans-unit id="7dd802b8ac465ed00335b230a07632379524fb7b" translate="yes" xml:space="preserve">
          <source>Update Electron to build the new crashpad:</source>
          <target state="translated">Electron을 업데이트하여 새 크래시 패드를 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="1b5704258bfe81d4d5494d284734480bd3b5591c" translate="yes" xml:space="preserve">
          <source>Update Electron to use new version of Node</source>
          <target state="translated">새로운 버전의 노드를 사용하도록 Electron 업데이트</target>
        </trans-unit>
        <trans-unit id="89f1cd369f9ccd1b73a732bd0887579b061cd54c" translate="yes" xml:space="preserve">
          <source>Update Electron's Node fork to the desired version</source>
          <target state="translated">Electron 's Node fork를 원하는 버전으로 업데이트</target>
        </trans-unit>
        <trans-unit id="c0963902a6d3c64ea4fa4bd6e1ac11cd27f60a0d" translate="yes" xml:space="preserve">
          <source>Update Electron's code</source>
          <target state="translated">Electron의 코드 업데이트</target>
        </trans-unit>
        <trans-unit id="13930880f3d9ee45b0d0378ec577ced08b7eefd7" translate="yes" xml:space="preserve">
          <source>Update Electron's submodule references:</source>
          <target state="translated">Electron의 서브 모듈 참조 업데이트 :</target>
        </trans-unit>
        <trans-unit id="3f6522cb05792f7b06aae5b657ab0cb682d4fbed" translate="yes" xml:space="preserve">
          <source>Update Node.js build configuration</source>
          <target state="translated">Node.js 빌드 구성 업데이트</target>
        </trans-unit>
        <trans-unit id="d5ad6642c61f43d206b37b7bb0d629fa79378873" translate="yes" xml:space="preserve">
          <source>Update submodules</source>
          <target state="translated">서브 모듈 업데이트</target>
        </trans-unit>
        <trans-unit id="62ba0ef5c933a6cc364aaf59d93b982fe5513bbe" translate="yes" xml:space="preserve">
          <source>Update the Chromium snapshot</source>
          <target state="translated">Chromium 스냅 샷 업데이트</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="25b0c759bba28de3882ad3d2f7f55f54607ecc95" translate="yes" xml:space="preserve">
          <source>Updates the current activity if its type matches &lt;code&gt;type&lt;/code&gt;, merging the entries from &lt;code&gt;userInfo&lt;/code&gt; into its current &lt;code&gt;userInfo&lt;/code&gt; dictionary.</source>
          <target state="translated">그 형태가 일치하는 경우 현재 활동을 업데이트 &lt;code&gt;type&lt;/code&gt; 의 항목을 병합, &lt;code&gt;userInfo&lt;/code&gt; 현재로 &lt;code&gt;userInfo&lt;/code&gt; 사전.</target>
        </trans-unit>
        <trans-unit id="0b75156079e47e4423e694dd8f6ec2bb97a3c0b4" translate="yes" xml:space="preserve">
          <source>Updating Applications</source>
          <target state="translated">응용 프로그램 업데이트</target>
        </trans-unit>
        <trans-unit id="e2efd63db73117b31624864adcdc69ac4565c402" translate="yes" xml:space="preserve">
          <source>Updating Crashpad</source>
          <target state="translated">크래시 패드 업데이트</target>
        </trans-unit>
        <trans-unit id="7df9a4cf600a48f460195272caa546a2cd3708c2" translate="yes" xml:space="preserve">
          <source>Updating Dependencies</source>
          <target state="translated">종속성 업데이트</target>
        </trans-unit>
        <trans-unit id="89eb6c30b10f77e0f178e1abb52ebacc430c839c" translate="yes" xml:space="preserve">
          <source>Updating Electron's Node fork</source>
          <target state="translated">전자의 노드 포크 업데이트</target>
        </trans-unit>
        <trans-unit id="9a81a500d5cf03724e731e808fb6bf0500126ae6" translate="yes" xml:space="preserve">
          <source>Updating NodeJS</source>
          <target state="translated">NodeJS 업데이트</target>
        </trans-unit>
        <trans-unit id="b4e05d2558877418381634b6c035d6e7ab91f135" translate="yes" xml:space="preserve">
          <source>Updating V8 Patches</source>
          <target state="translated">V8 패치 업데이트</target>
        </trans-unit>
        <trans-unit id="e219d0cda9462c23edda98f7c6e06e508ee9e3d3" translate="yes" xml:space="preserve">
          <source>Updating an Appveyor Azure Image</source>
          <target state="translated">Appveyor Azure 이미지 업데이트</target>
        </trans-unit>
        <trans-unit id="5b6da6490d82a5e59b6d9bce413a362293efd586" translate="yes" xml:space="preserve">
          <source>Upgrade &lt;code&gt;libcc&lt;/code&gt; to a new Chromium version</source>
          <target state="translated">&lt;code&gt;libcc&lt;/code&gt; 를 새로운 Chromium 버전으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="11838ab63da7ddf11e05e03a26a221a4b7451db2" translate="yes" xml:space="preserve">
          <source>Upgrade &lt;code&gt;vendor/node&lt;/code&gt; to the Node release that corresponds to the v8 version used in the new Chromium release. See the v8 versions in Node on</source>
          <target state="translated">&lt;code&gt;vendor/node&lt;/code&gt; 를 새 Chromium 릴리스에 사용 된 v8 버전에 해당하는 노드 릴리스로 업그레이드하십시오 . 노드의 v8 버전 확인</target>
        </trans-unit>
        <trans-unit id="05bd7b2591991724533bf052488cd85bf42cb58f" translate="yes" xml:space="preserve">
          <source>Upgrade libcc to a new Chromium version</source>
          <target state="translated">libcc를 새로운 Chromium 버전으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="401981c07c69965b662f4b943801eb3b3786de7c" translate="yes" xml:space="preserve">
          <source>Upgrading Chromium</source>
          <target state="translated">크롬 업그레이드</target>
        </trans-unit>
        <trans-unit id="2a6b5d6211f87abb1f0a301f178f0a2c9decb313" translate="yes" xml:space="preserve">
          <source>Upgrading Crashpad</source>
          <target state="translated">크래시 패드 업그레이드</target>
        </trans-unit>
        <trans-unit id="75f5342d57d3320fa279fff311b701a8db76064c" translate="yes" xml:space="preserve">
          <source>Upgrading Node</source>
          <target state="translated">노드 업그레이드</target>
        </trans-unit>
        <trans-unit id="b8c31d9de2a1da25eced5c138fd5d4771343f121" translate="yes" xml:space="preserve">
          <source>Upgrading Node is much easier than upgrading libchromiumcontent, so fewer conflicts arise if one upgrades libchromiumcontent first, then chooses the upstream Node release whose V8 is closest to it.</source>
          <target state="translated">노드 업그레이드는 libchromiumcontent 업그레이드보다 훨씬 쉬우므로 libchromiumcontent를 먼저 업그레이드 한 다음 V8과 가장 가까운 업스트림 노드 릴리스를 선택하면 충돌이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="323496a6a1ef5c05d6b0e68c4648e0b261e4210e" translate="yes" xml:space="preserve">
          <source>Upload Your App</source>
          <target state="translated">앱 업로드</target>
        </trans-unit>
        <trans-unit id="98fe8bc8da2c1e87fed3aa60b84765927174ee46" translate="yes" xml:space="preserve">
          <source>UploadBlob</source>
          <target state="translated">UploadBlob</target>
        </trans-unit>
        <trans-unit id="76b13d6d44902a5a929278f84f087880e382c5ef" translate="yes" xml:space="preserve">
          <source>UploadBlob Object</source>
          <target state="translated">UploadBlob 객체</target>
        </trans-unit>
        <trans-unit id="d74e88682c89ce518077d337cf39a060ffddd230" translate="yes" xml:space="preserve">
          <source>UploadData</source>
          <target state="translated">UploadData</target>
        </trans-unit>
        <trans-unit id="0e9463a47f14a5983008e7710af6e62c04d07539" translate="yes" xml:space="preserve">
          <source>UploadData Object</source>
          <target state="translated">UploadData 객체</target>
        </trans-unit>
        <trans-unit id="2f1c9ec91d3e0701ec6ef1cf7bc53a282d27a998" translate="yes" xml:space="preserve">
          <source>UploadFile</source>
          <target state="translated">UploadFile</target>
        </trans-unit>
        <trans-unit id="4f98dd3005abae58ee6d31c3d0e4feab9547cf59" translate="yes" xml:space="preserve">
          <source>UploadFile Object</source>
          <target state="translated">UploadFile 객체</target>
        </trans-unit>
        <trans-unit id="f5817a5ce7cda946fe5e88d2a50500643581e67d" translate="yes" xml:space="preserve">
          <source>UploadFileSystem</source>
          <target state="translated">UploadFileSystem</target>
        </trans-unit>
        <trans-unit id="dc893f707805494e41d9e7b0b28e165467191444" translate="yes" xml:space="preserve">
          <source>UploadFileSystem Object</source>
          <target state="translated">UploadFileSystem 객체</target>
        </trans-unit>
        <trans-unit id="546fb7fdeaa210c2a8fa63cb2e491ac966080b15" translate="yes" xml:space="preserve">
          <source>UploadRawData</source>
          <target state="translated">UploadRawData</target>
        </trans-unit>
        <trans-unit id="a1b0988bef072ac86f158bc4be77b24c31f30223" translate="yes" xml:space="preserve">
          <source>UploadRawData Object</source>
          <target state="translated">UploadRawData 객체</target>
        </trans-unit>
        <trans-unit id="9da2267d60241d849ca609a3133cb272ba4cf891" translate="yes" xml:space="preserve">
          <source>Upon receiving &lt;code&gt;dark-mode:system&lt;/code&gt;, we reset the &lt;code&gt;themeSource&lt;/code&gt; to &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dark-mode:system&lt;/code&gt; 을 받으면 &lt;code&gt;themeSource&lt;/code&gt; 를 &lt;code&gt;system&lt;/code&gt; 으로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="43b7d8f2ad1227631dbcb1c50cfff169ef84f310" translate="yes" xml:space="preserve">
          <source>Upon receiving &lt;code&gt;dark-mode:toggle&lt;/code&gt;, we check if the dark theme is currently active using the &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; property, and set the &lt;code&gt;themeSource&lt;/code&gt; to the opposite theme.</source>
          <target state="translated">수신 한 &lt;code&gt;dark-mode:toggle&lt;/code&gt; , 우리는 어두운 테마를 사용하여 현재 활성화되어 있는지 확인 &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; 의 속성을, 그리고 설정 &lt;code&gt;themeSource&lt;/code&gt; 반대 테마로한다.</target>
        </trans-unit>
        <trans-unit id="e5d4ffe94244b55b5a56898ef8056e9e12a92b38" translate="yes" xml:space="preserve">
          <source>Upstream uses multiple repos and so merging into a single repo would result in lost history. So we only update when we&amp;rsquo;re planning a node version bump in electron.</source>
          <target state="translated">업스트림은 여러 저장소를 사용하므로 단일 저장소로 병합하면 기록이 손실됩니다. 따라서 전자에서 노드 버전 충돌을 계획 할 때만 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="d29214004b0c288b4f0b29b4d91cd2fa7e69f56e" translate="yes" xml:space="preserve">
          <source>Uptime / Support</source>
          <target state="translated">가동 시간 / 지원</target>
        </trans-unit>
        <trans-unit id="412e31909b8ad1417c4a39495653fdeba58cd034" translate="yes" xml:space="preserve">
          <source>Urdu</source>
          <target state="translated">Urdu</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="5fcb7086f37e1de0131db574fdec7a805f12c629" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 사용법</target>
        </trans-unit>
        <trans-unit id="80679d1385b6a3a4282a1220f6692230948d4fce" translate="yes" xml:space="preserve">
          <source>Use &quot;will&quot; over &quot;would&quot; when describing outcomes.</source>
          <target state="translated">결과를 설명 할 때 &quot;would&quot;보다 &quot;will&quot;을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fa370f4e8e0de6e1e7fbcdbfbc3d67cc385ff29c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Alt&lt;/code&gt; instead of &lt;code&gt;Option&lt;/code&gt;. The &lt;code&gt;Option&lt;/code&gt; key only exists on macOS, whereas the &lt;code&gt;Alt&lt;/code&gt; key is available on all platforms.</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt; 대신 &lt;code&gt;Alt&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;Option&lt;/code&gt; 반면 키는, 맥 OS에 존재하는 &lt;code&gt;Alt&lt;/code&gt; 키는 모든 플랫폼에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a65f9bab24c9edf15a551990726d9c5ff5e2cd3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;^2.0.0&lt;/code&gt; to admit non-breaking &lt;em&gt;reasonably stable&lt;/em&gt; feature work as well as security and bug fixes.</source>
          <target state="translated">&lt;code&gt;^2.0.0&lt;/code&gt; 을 사용 하여 보안 및 버그 수정뿐만 아니라 중단되지 않는 &lt;em&gt;합리적으로 안정적인&lt;/em&gt; 기능 작업 을 인정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9c32b5bb5dd5d96b5063f39a37f87383ce65a9d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;os.tmpdir()&lt;/code&gt; rather than &lt;code&gt;/tmp&lt;/code&gt; when you need to reference the temporary directory.</source>
          <target state="translated">임시 디렉토리를 참조해야 할 경우 &lt;code&gt;/tmp&lt;/code&gt; 대신 &lt;code&gt;os.tmpdir()&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="05a344a2349faf8abd02a177dc93f2e4f5f197c2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;page-break-before: always; &lt;/code&gt; CSS style to force to print to a new page.</source>
          <target state="translated">사용이 &lt;code&gt;page-break-before: always; &lt;/code&gt; 새 페이지에 강제로 인쇄 할 CSS 스타일입니다.</target>
        </trans-unit>
        <trans-unit id="ea4ee24e829d2c36fb98dea70ef7c80505aaa1ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;page-break-before: always;&lt;/code&gt; CSS style to force to print to a new page.</source>
          <target state="translated">&lt;code&gt;page-break-before: always;&lt;/code&gt; 사용 : 항상; 새 페이지에 강제로 인쇄하는 CSS 스타일.</target>
        </trans-unit>
        <trans-unit id="e95a474007f63ba1306492e9005b3448e6411ffb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;path.join()&lt;/code&gt; to concatenate filenames.</source>
          <target state="translated">&lt;code&gt;path.join()&lt;/code&gt; 을 사용 하여 파일 이름을 연결 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b303818a9ac4d5c86e8c39b16132a859ee44c906" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ses.setPermissionRequestHandler()&lt;/code&gt; in all sessions that load remote content</source>
          <target state="translated">원격 컨텐츠를로드하는 모든 세션에서 &lt;code&gt;ses.setPermissionRequestHandler()&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="88d09d1df12c4f91efe012a101d7291b0ae6856c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sh&lt;/code&gt; instead of &lt;code&gt;cmd&lt;/code&gt; in code blocks (due to the syntax highlighter).</source>
          <target state="translated">코드 블록에서 &lt;code&gt;cmd&lt;/code&gt; 대신 &lt;code&gt;sh&lt;/code&gt; 를 사용하십시오 (구문 형광펜으로 인해).</target>
        </trans-unit>
        <trans-unit id="8a201f1a99c4323d52913b75859b37f4eedf4412" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;~2.0.0&lt;/code&gt; to admit only stability or security related fixes to your &lt;code&gt;2.0.0&lt;/code&gt; release.</source>
          <target state="translated">&lt;code&gt;~2.0.0&lt;/code&gt; 을 사용 하여 &lt;code&gt;2.0.0&lt;/code&gt; 릴리스의 안정성 또는 보안 관련 수정 사항 만 승인하십시오 .</target>
        </trans-unit>
        <trans-unit id="da6e1144d6e775f63a4076487bbe9cde2a96d908" translate="yes" xml:space="preserve">
          <source>Use a current version of Electron</source>
          <target state="translated">최신 버전의 Electron 사용</target>
        </trans-unit>
        <trans-unit id="dbe2a43e8de51a7ab22754c6d4267afd8532bf90" translate="yes" xml:space="preserve">
          <source>Use a module from the archive:</source>
          <target state="translated">아카이브에서 모듈을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="656f588a7a3a22bb068046ce88d0875acbde32d9" translate="yes" xml:space="preserve">
          <source>Use a specified proxy server, which overrides the system setting. This switch only affects requests with HTTP protocol, including HTTPS and WebSocket requests. It is also noteworthy that not all proxy servers support HTTPS and WebSocket requests.</source>
          <target state="translated">시스템 설정을 재정의하는 지정된 프록시 서버를 사용하십시오. 이 스위치는 HTTPS 및 WebSocket 요청을 포함한 HTTP 프로토콜 요청에만 영향을줍니다. 모든 프록시 서버가 HTTPS 및 WebSocket 요청을 지원하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ebd01df0d8b53cfe1a964d7a2dc34073b3358bac" translate="yes" xml:space="preserve">
          <source>Use a specified proxy server, which overrides the system setting. This switch only affects requests with HTTP protocol, including HTTPS and WebSocket requests. It is also noteworthy that not all proxy servers support HTTPS and WebSocket requests. The proxy URL does not support username and password authentication &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615947&quot;&gt;per Chromium issue&lt;/a&gt;.</source>
          <target state="translated">시스템 설정을 재정의하는 지정된 프록시 서버를 사용합니다. 이 스위치는 HTTPS 및 WebSocket 요청을 포함하여 HTTP 프로토콜을 사용하는 요청에만 영향을줍니다. 또한 모든 프록시 서버가 HTTPS 및 WebSocket 요청을 지원하는 것은 아닙니다. 프록시 URL은 &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=615947&quot;&gt;Chromium 문제당&lt;/a&gt; 사용자 이름 및 비밀번호 인증을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e445a48e862ae8973820429a2aca736eb09db364" translate="yes" xml:space="preserve">
          <source>Use default destination container name &lt;code&gt;(images)&lt;/code&gt;</source>
          <target state="translated">기본 대상 컨테이너 이름 &lt;code&gt;(images)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b81ef6491b5d8b0cd55ca98952f2e0e9f1a27fdf" translate="yes" xml:space="preserve">
          <source>Use main process modules from the renderer process.</source>
          <target state="translated">렌더러 프로세스에서 기본 프로세스 모듈을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5922e47216e92c6ebc3175c75d300bb77cfa0c3d" translate="yes" xml:space="preserve">
          <source>Use newer ES6/ES2015 syntax where appropriate</source>
          <target state="translated">적절한 경우 최신 ES6 / ES2015 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="04ca9238d33c5b2c57b311ff5eb34c86f429bc7a" translate="yes" xml:space="preserve">
          <source>Use one of the following command line switches to enable debugging of the main process:</source>
          <target state="translated">다음 명령 행 스위치 중 하나를 사용하여 기본 프로세스를 디버깅하십시오.</target>
        </trans-unit>
        <trans-unit id="5437b69dcce2c66498dd51cc7d79954c6bc5e2cc" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;webview&lt;/code&gt; tag to embed 'guest' content (such as web pages) in your Electron app. The guest content is contained within the &lt;code&gt;webview&lt;/code&gt; container. An embedded page within your app controls how the guest content is laid out and rendered.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그를 사용 하여 Electron 앱에 '게스트'컨텐츠 (예 : 웹 페이지)를 포함하십시오. 게스트 컨텐츠는 &lt;code&gt;webview&lt;/code&gt; 컨테이너 내에 포함되어 있습니다. 앱 내에 임베드 된 페이지는 게스트 컨텐츠의 레이아웃 및 렌더링 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="bf6b8ed48698115e8b516ef1d3227d99ce0aa0f8" translate="yes" xml:space="preserve">
          <source>Use the HTML5 &lt;code&gt;File&lt;/code&gt; API to work natively with files on the filesystem.</source>
          <target state="translated">HTML5 &lt;code&gt;File&lt;/code&gt; API를 사용하여 파일 시스템의 파일에 대해 기본적으로 작업하십시오.</target>
        </trans-unit>
        <trans-unit id="e4815e1fd2bc8cf6057cea7466651c9a70138e2b" translate="yes" xml:space="preserve">
          <source>Use the HTML5 File API to work natively with files on the filesystem.</source>
          <target state="translated">HTML5 파일 API를 사용하여 파일 시스템의 파일에 대해 기본적으로 작업하십시오.</target>
        </trans-unit>
        <trans-unit id="7fb51e40357d6396e014f1b294975a06574194a7" translate="yes" xml:space="preserve">
          <source>Use the same formats as the ones suggested above, but add the following note at the beginning of the changelog:</source>
          <target state="translated">위에서 제안한 형식과 동일한 형식을 사용하지만 변경 로그 시작 부분에 다음 참고 사항을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="17f0034b49ee259e5d3785d98d96dc3107c3645d" translate="yes" xml:space="preserve">
          <source>Use the storage account name, key, and URI obtained from Azure to run this script.</source>
          <target state="translated">이 스크립트를 실행하려면 Azure에서 얻은 스토리지 계정 이름, 키 및 URI를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e5b92985727f851fddce5b71af2aa3680c4e59aa" translate="yes" xml:space="preserve">
          <source>Used as the label for the button</source>
          <target state="translated">버튼의 레이블로 사용</target>
        </trans-unit>
        <trans-unit id="e78050d531fd0de66ee35d7aca40593df5de0d0d" translate="yes" xml:space="preserve">
          <source>Useful links</source>
          <target state="translated">유용한 링크</target>
        </trans-unit>
        <trans-unit id="3c5d2c3ab9658b5e48d270bf506c6a477fb71f79" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;Quick Look&lt;/a&gt; to preview a file at a given path.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;빠른보기&lt;/a&gt; 를 사용 하여 지정된 경로에서 파일을 미리 봅니다 .</target>
        </trans-unit>
        <trans-unit id="e2cf9d44305925b53227db83d7ce3f49c716053f" translate="yes" xml:space="preserve">
          <source>Uses custom drawn close, and miniaturize buttons that display when hovering in the top left of the window. The fullscreen button is not available due to restrictions of frameless windows as they interface with Apple's macOS window masks. These custom buttons prevent issues with mouse events that occur with the standard window toolbar buttons. This option is only applicable for frameless windows.</source>
          <target state="translated">사용자 정의 그린 닫기를 사용하고 창의 왼쪽 상단에 마우스를 올릴 때 표시되는 버튼을 축소합니다. 전체 화면 버튼은 Apple의 macOS 창 마스크와 인터페이스하기 때문에 프레임없는 창 제한으로 인해 사용할 수 없습니다. 이러한 사용자 지정 단추는 표준 창 도구 모음 단추에서 발생하는 마우스 이벤트 문제를 방지합니다. 이 옵션은 프레임없는 창에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5fbecbcc016b7351cba447b20f1c51b039fdcf62" translate="yes" xml:space="preserve">
          <source>Uses custom drawn close, miniaturize, and fullscreen buttons that display when hovering in the top left of the window. These custom buttons prevent issues with mouse events that occur with the standard window toolbar buttons. This option is only applicable for frameless windows.</source>
          <target state="translated">창의 왼쪽 상단에 마우스를 올리면 표시되는 사용자 정의 그리기 닫기, 축소 및 전체 화면 단추를 사용합니다. 이 사용자 정의 단추는 표준 창 도구 모음 단추에서 발생하는 마우스 이벤트 문제를 방지합니다. 이 옵션은 프레임이없는 창에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="13215441a1cfd6bc92002b757895c0da738dea88" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;devToolsWebContents&lt;/code&gt; as the target &lt;code&gt;WebContents&lt;/code&gt; to show devtools.</source>
          <target state="translated">&lt;code&gt;devToolsWebContents&lt;/code&gt; 를 대상 &lt;code&gt;WebContents&lt;/code&gt; 로 사용하여 devtools를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a55c266f9ba0b9f6ac5ccc29ad000dd596d147dd" translate="yes" xml:space="preserve">
          <source>Uses the PAC script at the specified &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;url&lt;/code&gt; 에서 PAC 스크립트를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e2d6c211836ab15b83cd5c809ed6b4de81dd4025" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Quick Start&lt;/code&gt; as example:</source>
          <target state="translated">사용하여 &lt;code&gt;Quick Start&lt;/code&gt; 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="3961607cb8d196c3129c110538b3319b94d7172f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브 사용</target>
        </trans-unit>
        <trans-unit id="7c1d35b3b24ddba15e0248c6817c1956fe4ec8fa" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;autoUpdater&lt;/code&gt; as an example:</source>
          <target state="translated">예를 들어 &lt;code&gt;autoUpdater&lt;/code&gt; 사용 :</target>
        </trans-unit>
        <trans-unit id="107611ec34af23798690927bb0ff748621a5c4c9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;basic&lt;/code&gt; should be preferred if only basic information like &lt;code&gt;vendorId&lt;/code&gt; or &lt;code&gt;driverId&lt;/code&gt; is needed.</source>
          <target state="translated">&lt;code&gt;vendorId&lt;/code&gt; 또는 &lt;code&gt;driverId&lt;/code&gt; 와 같은 기본 정보 만 필요한 경우 &lt;code&gt;basic&lt;/code&gt; 을 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4a103b8e4a108788838501fb5b50882b1640c31d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;electron-builder&lt;/code&gt;</source>
          <target state="translated">사용하여 &lt;code&gt;electron-builder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70ff6fb9cc25e5c5b19579b5ff7ad9e9167f4862" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="translated">사용하여 &lt;code&gt;electron-installer-snap&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdf0eebd10d5c8f7957351b1b9f025e9c9b142fc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="bd0449bdd1cb93af674a23167e59403d36c84a95" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;protocol&lt;/code&gt; with a custom &lt;code&gt;partition&lt;/code&gt; or &lt;code&gt;session&lt;/code&gt;</source>
          <target state="translated">사용자 지정 &lt;code&gt;partition&lt;/code&gt; 또는 &lt;code&gt;session&lt;/code&gt; &lt;code&gt;protocol&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="11ffedb8f2046e2194b6fba548fc37b6cacb8e85" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ready-to-show&lt;/code&gt; event</source>
          <target state="translated">사용 &lt;code&gt;ready-to-show&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="ede7bdc476aff74c239cd5ec3d3b63f9a4c564ef" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;session&lt;/code&gt; as example:</source>
          <target state="translated">사용하여 &lt;code&gt;session&lt;/code&gt; 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="d86fb60786c4938041f439fd51ee82907d4f9227" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;snapcraft&lt;/code&gt; with &lt;code&gt;electron-packager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;electron-packager&lt;/code&gt; 와 함께 &lt;code&gt;snapcraft&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="9a31c2d15756eee8189fba841917b6a59160f5d9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;update.electronjs.org&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;update.electronjs.org&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="6cd597a88dd477e73afcda04978c767c259ae785" translate="yes" xml:space="preserve">
          <source>Using Chrome's &lt;code&gt;window.open()&lt;/code&gt; implementation</source>
          <target state="translated">Chrome의 &lt;code&gt;window.open()&lt;/code&gt; 구현 사용</target>
        </trans-unit>
        <trans-unit id="218af43531f26cc8ecb37ed2f4285b612a913f4c" translate="yes" xml:space="preserve">
          <source>Using Electron APIs</source>
          <target state="translated">전자 API 사용</target>
        </trans-unit>
        <trans-unit id="380e3c16eabfb45cf07dc6c7846133e0ce74bc27" translate="yes" xml:space="preserve">
          <source>Using Electron's API</source>
          <target state="translated">Electron의 API 사용</target>
        </trans-unit>
        <trans-unit id="3389a4a57bee95ffd2325edf6ba255ad953ce5d6" translate="yes" xml:space="preserve">
          <source>Using Electron's APIs</source>
          <target state="translated">Electron의 API 사용</target>
        </trans-unit>
        <trans-unit id="cb8d4c64b129bdacf6f71ce0cc4c9d05235bc761" translate="yes" xml:space="preserve">
          <source>Using Microsoft Remote Desktop, click &lt;code&gt;Connect&lt;/code&gt; to connect to the VM.</source>
          <target state="translated">Microsoft 원격 데스크톱을 사용하여 &lt;code&gt;Connect&lt;/code&gt; 을 클릭 하여 VM에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="80144c41b6e1d82275f2a6018ad34e5cc5ed9302" translate="yes" xml:space="preserve">
          <source>Using Native Node Modules</source>
          <target state="translated">기본 노드 모듈 사용</target>
        </trans-unit>
        <trans-unit id="241557f67d77abc5b2e19328723a9fdfc9bccce2" translate="yes" xml:space="preserve">
          <source>Using Native Node.js Modules</source>
          <target state="translated">Native Node.js 모듈 사용</target>
        </trans-unit>
        <trans-unit id="32863ea99980d27239bdd8f9f2e8b6171c1d8e56" translate="yes" xml:space="preserve">
          <source>Using Node.js APIs</source>
          <target state="translated">Node.js API 사용</target>
        </trans-unit>
        <trans-unit id="e75ffd4b0f1fce64f3d815caf943d7f92a4fb112" translate="yes" xml:space="preserve">
          <source>Using Pepper Flash Plugin</source>
          <target state="translated">Pepper Flash 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="88233d0edbe109345e2206ea51401086b04ff80c" translate="yes" xml:space="preserve">
          <source>Using ProcMon to Observe a Process</source>
          <target state="translated">ProcMon을 사용하여 프로세스 관찰</target>
        </trans-unit>
        <trans-unit id="b6da0be09f19911f96f82e6bba6e5748c3d5011d" translate="yes" xml:space="preserve">
          <source>Using Selenium and WebDriver</source>
          <target state="translated">Selenium 및 WebDriver 사용</target>
        </trans-unit>
        <trans-unit id="e5c8d67cb0a7de85e2b5271f3a20df4efcc2223d" translate="yes" xml:space="preserve">
          <source>Using Widevine CDM Plugin</source>
          <target state="translated">Widevine CDM 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="d83d68130151db5316319419f089d5ec8ba950cc" translate="yes" xml:space="preserve">
          <source>Using a &lt;em&gt;Command Prompt&lt;/em&gt;, run &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt; before running &lt;code&gt;npm install&lt;/code&gt;/&lt;code&gt;yarn install&lt;/code&gt; as usual.</source>
          <target state="translated">사용하여 &lt;em&gt;명령 프롬프트&lt;/em&gt; 를 실행 &lt;code&gt;set npm_config_arch=arm64&lt;/code&gt; 실행하기 전에 &lt;code&gt;npm install&lt;/code&gt; / &lt;code&gt;yarn install&lt;/code&gt; 평소처럼.</target>
        </trans-unit>
        <trans-unit id="4632ddd3ca12d414acb80b57910cb11da2ffb69e" translate="yes" xml:space="preserve">
          <source>Using a plain &lt;code&gt;return&lt;/code&gt; when returning explicitly at the end of a function.</source>
          <target state="translated">함수 끝에서 명시 적으로 &lt;code&gt;return&lt;/code&gt; 할 때 일반 리턴 사용</target>
        </trans-unit>
        <trans-unit id="d05a621726a988ab66487cfa7497d9660e123420" translate="yes" xml:space="preserve">
          <source>Using an Existing Debian Package</source>
          <target state="translated">기존 데비안 패키지 사용</target>
        </trans-unit>
        <trans-unit id="05fbcb8afecf544de9a6a5ae4c3ee295ad0d5da8" translate="yes" xml:space="preserve">
          <source>Using asar Archives</source>
          <target state="translated">asar 아카이브 사용</target>
        </trans-unit>
        <trans-unit id="f1b639f531d8eb1c93db6ceb20a34d6d5054efb6" translate="yes" xml:space="preserve">
          <source>Using chunked encoding is strongly recommended if you need to send a large request body as data will be streamed in small chunks instead of being internally buffered inside Electron process memory.</source>
          <target state="translated">전자 프로세스 메모리 내에서 내부적으로 버퍼링되는 대신 데이터가 작은 청크로 스트리밍되므로 큰 요청 본문을 보내야하는 경우 청크 인코딩을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="20a7b92a76a1d5beca35448b4c294eb424ce4800" translate="yes" xml:space="preserve">
          <source>Using clang-format on C++ Code</source>
          <target state="translated">C ++ 코드에서 clang-format 사용</target>
        </trans-unit>
        <trans-unit id="6b27c1122792c5995e57575567926a9647d9486d" translate="yes" xml:space="preserve">
          <source>Using clang-tidy on C++ Code</source>
          <target state="translated">C ++ 코드에서 clang-tidy 사용</target>
        </trans-unit>
        <trans-unit id="3354239366f9daddc01b86198e2d06abf741c7bb" translate="yes" xml:space="preserve">
          <source>Using compilers other than &lt;code&gt;clang&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;clang&lt;/code&gt; 이외의 컴파일러 사용</target>
        </trans-unit>
        <trans-unit id="bc5b34142dcee890d4144e062a81d6758b0e7b28" translate="yes" xml:space="preserve">
          <source>Using in the renderer process</source>
          <target state="translated">렌더러 프로세스에서 사용</target>
        </trans-unit>
        <trans-unit id="da0d67e894580c2f18c034932de36a56cf68e73d" translate="yes" xml:space="preserve">
          <source>Using system &lt;code&gt;clang&lt;/code&gt; instead of downloaded &lt;code&gt;clang&lt;/code&gt; binaries</source>
          <target state="translated">다운로드 한 &lt;code&gt;clang&lt;/code&gt; 바이너리 대신 시스템 &lt;code&gt;clang&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="ab265dd8585440d657d4d42c5ccf26f1a98a90bf" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;React Developer Tools&lt;/a&gt; as example:</source>
          <target state="translated">(가) 사용하여 &lt;a href=&quot;https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi&quot;&gt;개발자 도구 반응&lt;/a&gt; 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="440754cf65ef083054e104b86398503485de3820" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Session&lt;/code&gt; and &lt;code&gt;Cookies&lt;/code&gt; classes as an example:</source>
          <target state="translated">은 Using &lt;code&gt;Session&lt;/code&gt; 과 &lt;code&gt;Cookies&lt;/code&gt; 예를 들어 클래스를 :</target>
        </trans-unit>
        <trans-unit id="9d4fd55478baf27fe412533b13ef955db9edb013" translate="yes" xml:space="preserve">
          <source>Using the Symbol Server in Windbg</source>
          <target state="translated">Windbg에서 심볼 서버 사용</target>
        </trans-unit>
        <trans-unit id="91f78e5a46222b247e2c4aac20d2add43af3c420" translate="yes" xml:space="preserve">
          <source>Using the library</source>
          <target state="translated">도서관 이용</target>
        </trans-unit>
        <trans-unit id="2c6fee80fec51c3f50145927fcc092febd06703d" translate="yes" xml:space="preserve">
          <source>Using the plugin</source>
          <target state="translated">플러그인 사용</target>
        </trans-unit>
        <trans-unit id="3a07a1b2325faaf7dfc2301de95138c65e5fedcb" translate="yes" xml:space="preserve">
          <source>Using the symbol server in Visual Studio</source>
          <target state="translated">Visual Studio에서 심볼 서버 사용</target>
        </trans-unit>
        <trans-unit id="03c6a347785c41c19c7f026559853e35687e14c1" translate="yes" xml:space="preserve">
          <source>Using third-party libraries</source>
          <target state="translated">타사 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="e063ea4e54b5534dc34388b43493a468e1a12624" translate="yes" xml:space="preserve">
          <source>Using web APIs</source>
          <target state="translated">웹 API 사용</target>
        </trans-unit>
        <trans-unit id="7136192f8e1f36da42d34aa5c75fa7953a1e0d07" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;name&lt;/code&gt; field of &lt;code&gt;package.json&lt;/code&gt; is a short lowercase name, according to the npm modules spec. You should usually also specify a &lt;code&gt;productName&lt;/code&gt; field, which is your application's full capitalized name, and which will be preferred over &lt;code&gt;name&lt;/code&gt; by Electron.</source>
          <target state="translated">일반적 으로 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;name&lt;/code&gt; 필드 는 npm 모듈 사양에 따라 짧은 소문자 이름입니다. 일반적으로 응용 프로그램의 전체 대문자 이름 인 &lt;code&gt;productName&lt;/code&gt; 필드 도 지정해야 하며 Electron 에서 &lt;code&gt;name&lt;/code&gt; 보다 선호 할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="2dd6446c13f54cd5db5e13b156a18ac569137b4e" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;name&lt;/code&gt; field of &lt;code&gt;package.json&lt;/code&gt; is a short lowercased name, according to the npm modules spec. You should usually also specify a &lt;code&gt;productName&lt;/code&gt; field, which is your application's full capitalized name, and which will be preferred over &lt;code&gt;name&lt;/code&gt; by Electron.</source>
          <target state="translated">일반적으로 npm 모듈 사양에 따르면 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;name&lt;/code&gt; 필드 는 짧은 소문자 이름입니다. 일반적으로 응용 프로그램의 전체 대문자 이름이고 Electron에 의해 &lt;code&gt;name&lt;/code&gt; 보다 선호 되는 &lt;code&gt;productName&lt;/code&gt; 필드 도 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="66ac5344085cdccec87bc57d05a4793e144ef65f" translate="yes" xml:space="preserve">
          <source>Usually this is not a problem for desktop applications since the code is always trusted, but it makes Electron less secure than Chromium for displaying untrusted web content. For applications that require more security, the &lt;code&gt;sandbox&lt;/code&gt; flag will force Electron to spawn a classic Chromium renderer that is compatible with the sandbox.</source>
          <target state="translated">일반적으로 이것은 코드가 항상 신뢰할 수 있기 때문에 데스크톱 애플리케이션에서는 문제가되지 않지만, 신뢰할 수없는 웹 콘텐츠를 표시하는 경우 Electron이 Chromium보다 덜 안전합니다. 더 많은 보안이 필요한 애플리케이션의 경우 &lt;code&gt;sandbox&lt;/code&gt; 플래그는 Electron이 샌드 박스와 호환되는 클래식 Chromium 렌더러를 생성하도록합니다.</target>
        </trans-unit>
        <trans-unit id="1a4ef9adec4a4c7e95b812c830a0ddae553eed88" translate="yes" xml:space="preserve">
          <source>Usually this is not a problem for desktop applications since the code is always trusted, but it makes electron less secure than chromium for displaying untrusted web content. For applications that require more security, the &lt;code&gt;sandbox&lt;/code&gt; flag will force electron to spawn a classic chromium renderer that is compatible with the sandbox.</source>
          <target state="translated">일반적으로 코드는 항상 신뢰할 수 있기 때문에 데스크톱 응용 프로그램에는 문제가되지 않지만 신뢰할 수없는 웹 콘텐츠를 표시하기 위해서는 전자가 크롬보다 덜 안전합니다. 더 많은 보안이 필요한 응용 프로그램의 경우 &lt;code&gt;sandbox&lt;/code&gt; 플래그는 전자가 샌드 박스와 호환되는 클래식 크롬 렌더러를 생성하도록합니다.</target>
        </trans-unit>
        <trans-unit id="16bd022f9c9d5223940382bf7326937535b30c13" translate="yes" xml:space="preserve">
          <source>Usually those modules work fine under Electron, but sometimes when Electron uses a newer version of V8 than Node and/or there are ABI changes, bad things may happen. So in general, it is recommended to always build native modules from source code. &lt;code&gt;electron-rebuild&lt;/code&gt; handles this for you automatically.</source>
          <target state="translated">일반적으로 이러한 모듈은 Electron에서 잘 작동하지만 Electron이 Node보다 최신 버전의 V8을 사용하거나 ABI가 변경되면 나쁜 일이 발생할 수 있습니다. 따라서 일반적으로 항상 소스 코드에서 네이티브 모듈을 빌드하는 것이 좋습니다. &lt;code&gt;electron-rebuild&lt;/code&gt; 가이를 자동으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="cdd34d5471fcb2f1740a490ee1eeb555da666893" translate="yes" xml:space="preserve">
          <source>Usually those modules work fine under Electron, but sometimes when Electron uses a newer version of V8 than Node, and there are ABI changes, bad things may happen. So in general it is recommended to always build native modules from source code.</source>
          <target state="translated">일반적으로 이러한 모듈은 Electron에서 제대로 작동하지만 Electron이 Node보다 최신 버전의 V8을 사용하고 ABI 변경이있는 경우 나쁜 일이 발생할 수 있습니다. 따라서 일반적으로 소스 코드에서 기본 모듈을 항상 빌드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="31055adc9f7f0f75d6605d0d6c9669ba34ed7429" translate="yes" xml:space="preserve">
          <source>Usually you would want to use the &lt;code&gt;beforeunload&lt;/code&gt; handler to decide whether the window should be closed, which will also be called when the window is reloaded. In Electron, returning any value other than &lt;code&gt;undefined&lt;/code&gt; would cancel the close. For example:</source>
          <target state="translated">일반적으로 &lt;code&gt;beforeunload&lt;/code&gt; 핸들러 를 사용하여 창을 닫을 지 여부를 결정하고 창을 다시로드 할 때 호출됩니다. Electron에서 &lt;code&gt;undefined&lt;/code&gt; 이외의 값을 반환 하면 닫기가 취소됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d67a39a9d54b774a32fdb91e118929cdbe784c0c" translate="yes" xml:space="preserve">
          <source>Uzbek</source>
          <target state="translated">Uzbek</target>
        </trans-unit>
        <trans-unit id="b8b097d0eea0934533ba237923021e6a341048fe" translate="yes" xml:space="preserve">
          <source>V8</source>
          <target state="translated">V8</target>
        </trans-unit>
        <trans-unit id="9921ada03c20d2226f0abaee2bcee4bd86244551" translate="yes" xml:space="preserve">
          <source>V8 Crashes</source>
          <target state="translated">V8 충돌</target>
        </trans-unit>
        <trans-unit id="cacdf0a0a408fb4d8ac0c220414f5a5c6ca6f7e9" translate="yes" xml:space="preserve">
          <source>V8 Development</source>
          <target state="translated">V8 개발</target>
        </trans-unit>
        <trans-unit id="9a11eb6b78d40f5731916fd88a4c5761170eb4b8" translate="yes" xml:space="preserve">
          <source>V8 GDB Debugging</source>
          <target state="translated">V8 GDB 디버깅</target>
        </trans-unit>
        <trans-unit id="1ba80c5b41162271dcbecd9ea7b1b8da50123136" translate="yes" xml:space="preserve">
          <source>V8 Interpreter Design</source>
          <target state="translated">V8 통역사 디자인</target>
        </trans-unit>
        <trans-unit id="039d88ee1fd277cb43f2af47c899313668b308f4" translate="yes" xml:space="preserve">
          <source>V8 Tracing</source>
          <target state="translated">V8 추적</target>
        </trans-unit>
        <trans-unit id="b1fb6c65d72f96aee773f03297cc68682f14ba92" translate="yes" xml:space="preserve">
          <source>V8 inspector integration allows tools such as Chrome DevTools and IDEs to debug and profile Electron instances. The tools attach to Electron instances via a TCP port and communicate using the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools Protocol&lt;/a&gt;.</source>
          <target state="translated">V8 검사기 통합을 통해 Chrome DevTools 및 IDE와 같은 도구가 Electron 인스턴스를 디버깅하고 프로파일 링 할 수 있습니다. 도구는 TCP 포트를 통해 Electron 인스턴스에 연결되고 &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools 프로토콜을&lt;/a&gt; 사용하여 통신합니다 .</target>
        </trans-unit>
        <trans-unit id="1f8f6a8c1562754d76ab3ec262f4c769dfb50116" translate="yes" xml:space="preserve">
          <source>V8 is Google's open source JavaScript engine. It is written in C++ and is used in Google Chrome. V8 can run standalone, or can be embedded into any C++ application.</source>
          <target state="translated">V8은 Google의 오픈 소스 JavaScript 엔진입니다. C ++로 작성되었으며 Chrome에서 사용됩니다. V8은 독립형으로 실행하거나 모든 C ++ 애플리케이션에 임베드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e95afc4ffcaa8ef4c7707538545210d712b4494f" translate="yes" xml:space="preserve">
          <source>V8's version numbers always correspond to those of Google Chrome. Chrome 59 includes V8 5.9, Chrome 58 includes V8 5.8, etc.</source>
          <target state="translated">V8의 버전 번호는 항상 Chrome의 버전 번호와 일치합니다. Chrome 59에는 V8 5.9가 포함되며 Chrome 58에는 V8 5.8 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b280dc1f4f1b58422609af96e60af9910ffc1aac" translate="yes" xml:space="preserve">
          <source>Variable Scope</source>
          <target state="translated">변수 범위</target>
        </trans-unit>
        <trans-unit id="3e5f43762a8b89ff8b9f18c40b46d4f17c816f60" translate="yes" xml:space="preserve">
          <source>Verify ffmpeg support</source>
          <target state="translated">ffmpeg 지원 확인</target>
        </trans-unit>
        <trans-unit id="02869a10b9651cf7811a58c6401e06f2b0d4e701" translate="yes" xml:space="preserve">
          <source>Verifying Widevine CDM support</source>
          <target state="translated">Widevine CDM 지원 확인</target>
        </trans-unit>
        <trans-unit id="9391bb900fb7f602c1fe53a51505bc8a5dbd2f89" translate="yes" xml:space="preserve">
          <source>Verifying the plugin</source>
          <target state="translated">플러그인 확인</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="534eea8b37ce7c9cbaf6455aa8776cd43c916911" translate="yes" xml:space="preserve">
          <source>Version 1.x</source>
          <target state="translated">버전 1.x</target>
        </trans-unit>
        <trans-unit id="c705d04cd382c1bb8b5c5bcc945dbc82963b3683" translate="yes" xml:space="preserve">
          <source>Version 2.0 and Beyond</source>
          <target state="translated">버전 2.0 이상</target>
        </trans-unit>
        <trans-unit id="5c4ab74468140e87cd48c74f73c29505deaac9a2" translate="yes" xml:space="preserve">
          <source>Versioned &lt;code&gt;master&lt;/code&gt;</source>
          <target state="translated">버전이 지정된 &lt;code&gt;master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">Versioning</target>
        </trans-unit>
        <trans-unit id="cd797cf0fe303d32f5502e0cd652eb3709acf2f2" translate="yes" xml:space="preserve">
          <source>Versioning Policy</source>
          <target state="translated">버전 관리 정책</target>
        </trans-unit>
        <trans-unit id="b1e71a1dfb668e705d02768f62eef610ec51716c" translate="yes" xml:space="preserve">
          <source>Versionless &lt;code&gt;master&lt;/code&gt;</source>
          <target state="translated">무 버전 &lt;code&gt;master&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99135766b4c7d2886327af34477e1869b4a7b652" translate="yes" xml:space="preserve">
          <source>Video capture may not work for some machines.</source>
          <target state="translated">일부 컴퓨터에서는 비디오 캡처가 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d6b8a691f0d907efa971075035a145a937381ac" translate="yes" xml:space="preserve">
          <source>Vietnamese</source>
          <target state="translated">Vietnamese</target>
        </trans-unit>
        <trans-unit id="c18f8cdb4e81b5ec75920d909ba1e32198130cbf" translate="yes" xml:space="preserve">
          <source>Vim &amp;amp; Emacs</source>
          <target state="translated">Vim &amp;amp; Emacs</target>
        </trans-unit>
        <trans-unit id="609f74bee62265b28b51f94f4a7162f60a877ccf" translate="yes" xml:space="preserve">
          <source>Virtual Network</source>
          <target state="translated">가상 네트워크</target>
        </trans-unit>
        <trans-unit id="d09657b376dc17329c2f823990b86b0edfb1e2ee" translate="yes" xml:space="preserve">
          <source>Visit &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;the releases page&lt;/a&gt; and you'll see a new draft release with placeholder release notes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;릴리스 페이지를&lt;/a&gt; 방문 하면 플레이스 홀더 릴리스 정보가 포함 된 새 초안 릴리스가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7d8d8543574b28522162d433588e7655a97347ae" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017</source>
          <target state="translated">비주얼 스튜디오 2017</target>
        </trans-unit>
        <trans-unit id="a7a8daba6a8b9a6cc6452fa0e06affcb40e0d541" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 (any edition) is required for cross-compiling native modules. You can download Visual Studio Community 2017 via Microsoft's &lt;a href=&quot;https://visualstudio.microsoft.com/dev-essentials/&quot;&gt;Visual Studio Dev Essentials program&lt;/a&gt;. After installation, you can add the Arm-specific components by running the following from a &lt;em&gt;Command Prompt&lt;/em&gt;:</source>
          <target state="translated">네이티브 모듈을 크로스 컴파일하려면 Visual Studio 2017 (모든 버전)이 필요합니다. Microsoft의 &lt;a href=&quot;https://visualstudio.microsoft.com/dev-essentials/&quot;&gt;Visual Studio Dev Essentials 프로그램을&lt;/a&gt; 통해 Visual Studio Community 2017을 다운로드 할 수 있습니다 . 설치 후 &lt;em&gt;명령 프롬프트&lt;/em&gt; 에서 다음을 실행하여 Arm 관련 구성 요소를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="355a81a03bbebad7373a648418aa1f2ae94e22c0" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 - &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;download VS 2017 Community Edition for free&lt;/a&gt;</source>
          <target state="translated">Visual Studio 2017- &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;무료 VS 2017 Community Edition 다운로드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1b912200c259ef5c17ce1b13c1be976aa238689" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017 15.7.2 or higher - &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;download VS 2019 Community Edition for free&lt;/a&gt;</source>
          <target state="translated">Visual Studio 2017 15.7.2 이상- &lt;a href=&quot;https://www.visualstudio.com/vs/&quot;&gt;무료로 VS 2019 Community Edition 다운로드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c0b645455c58a521a3f4cc21633cc74c05bcbe3" translate="yes" xml:space="preserve">
          <source>Visual Studio 2019 must be installed.</source>
          <target state="translated">Visual Studio 2019가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="translated">비주얼 스튜디오 코드</target>
        </trans-unit>
        <trans-unit id="4567b38578907a7f2985d31309d56d15c45465c6" translate="yes" xml:space="preserve">
          <source>Visual Studio project</source>
          <target state="translated">Visual Studio 프로젝트</target>
        </trans-unit>
        <trans-unit id="efdd3c0adb18f2edb055d5f16391bf125d2941a9" translate="yes" xml:space="preserve">
          <source>Vue.js devtools</source>
          <target state="translated">Vue.js devtools</target>
        </trans-unit>
        <trans-unit id="e350e4fae7ee25e5f79d481fde95722cdd312f88" translate="yes" xml:space="preserve">
          <source>Wait a very, very long time for the build to complete.</source>
          <target state="translated">빌드가 완료 될 때까지 매우 오래 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="2ce18cbc7c5d93f857a356162978d479ba49c6c2" translate="yes" xml:space="preserve">
          <source>Wait for all builds to pass before proceeding.</source>
          <target state="translated">진행하기 전에 모든 빌드가 통과 할 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="02babf258c5695b3d983c57d3858e4fd692e3741" translate="yes" xml:space="preserve">
          <source>Wait for builds ⏳</source>
          <target state="translated">빌드를 기다립니다 ⏳</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="4d8687e4ebbd53b1c3e7737b3403a1bb9d7b7db3" translate="yes" xml:space="preserve">
          <source>We &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/security.md#3-enable-context-isolation-for-remote-content&quot;&gt;recommend having contextIsolation enabled&lt;/a&gt; for the security of your application.</source>
          <target state="translated">우리는 &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/tutorial/security.md#3-enable-context-isolation-for-remote-content&quot;&gt;contextIsolation이 가능하도록하는 것이 좋습니다&lt;/a&gt; 응용 프로그램의 보안을 위해.</target>
        </trans-unit>
        <trans-unit id="b3e7e880b3050083d9a36eefe140f528826b8830" translate="yes" xml:space="preserve">
          <source>We &lt;a href=&quot;https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31&quot;&gt;recommend moving away from the remote module&lt;/a&gt;.</source>
          <target state="translated">우리는 &lt;a href=&quot;https://medium.com/@nornagon/electrons-remote-module-considered-harmful-70d69500f31&quot;&gt;원격 모듈에서 멀리 이동하는 것이 좋습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="acfbe72ff8739a63ebe5455964a27ea0f34b5bd2" translate="yes" xml:space="preserve">
          <source>We aim to keep the code coverage of Electron high. We ask that all pull request not only pass all existing tests, but ideally also add new tests to cover changed code and new scenarios. Ensuring that we capture as many code paths and use cases of Electron as possible ensures that we all ship apps with fewer bugs.</source>
          <target state="translated">우리는 Electron의 코드 커버리지를 높게 유지하는 것을 목표로합니다. 모든 풀 요청은 기존의 모든 테스트를 통과 할뿐만 아니라 변경된 코드와 새로운 시나리오를 포괄하는 새로운 테스트를 추가하는 것이 이상적입니다. 많은 코드 경로를 캡처하고 Electron의 사용 사례를 최대한 보장하면 버그가 적은 앱을 모두 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31522845e3f0e36035349ce3908a136db3ff871e" translate="yes" xml:space="preserve">
          <source>We allow for multiple stabilization branches to exist simultaneously, and intend to support at least two in parallel at all times, backporting security fixes as necessary.</source>
          <target state="translated">여러 개의 안정화 브랜치가 동시에 존재할 수 있으며 필요에 따라 보안 픽스를 백 포트하여 항상 두 개 이상의 병렬을 동시에 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba6c161133f8a39973b89511cdbe490a55019bb1" translate="yes" xml:space="preserve">
          <source>We allow squashing of commits, provided that the squashed message adheres the the above message format.</source>
          <target state="translated">스쿼시 된 메시지가 위의 메시지 형식을 준수하는 경우 커밋 스쿼시를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="2af7014b51926091273e550e4466aebaf1308f12" translate="yes" xml:space="preserve">
          <source>We allow squashing of commits, provided that the squashed message adheres to the above message format.</source>
          <target state="translated">스쿼시 된 메시지가 위의 메시지 형식을 준수하는 경우 커밋 스 쿼싱을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="1ba19082e7c69d9d94ba0b5d9ae04c39985fd191" translate="yes" xml:space="preserve">
          <source>We can now communicate from the test suite to the Electron app using the &lt;code&gt;appProcess&lt;/code&gt; object.</source>
          <target state="translated">이제 &lt;code&gt;appProcess&lt;/code&gt; 객체를 사용하여 테스트 스위트에서 Electron 앱으로 통신 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5f1007bf3cfdb1ca23be5b06a02254d97db4f7d" translate="yes" xml:space="preserve">
          <source>We can't push security updates to users directly, so we rely on app vendors to upgrade the version of Electron underlying their app in order for security updates to reach users.</source>
          <target state="translated">보안 업데이트를 사용자에게 직접 푸시 할 수 없으므로 보안 업데이트가 사용자에게 전달 될 수 있도록 앱 공급 업체에 의존하여 앱의 기반이되는 Electron 버전을 업그레이드합니다.</target>
        </trans-unit>
        <trans-unit id="546fc0305bbee2d9f6d77477dd56eb961190843e" translate="yes" xml:space="preserve">
          <source>We do not have the dedicated resources or expertise that Chromium has to apply to the security of its product. We do our best to make use of what we have, to inherit everything we can from Chromium, and to respond quickly to security issues, but Electron cannot be as secure as Chromium without the resources that Chromium is able to dedicate.</source>
          <target state="translated">Chromium이 제품 보안에 적용해야하는 전담 리소스 나 전문 지식이 없습니다. 우리는 우리가 가진 것을 최대한 활용하고, Chromium에서 가능한 모든 것을 상속하고, 보안 문제에 신속하게 대응하기 위해 최선을 다하지만, Electron은 Chromium이 할애 할 수있는 리소스 없이는 Chromium만큼 안전 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ed70a6072f9b2619fd32e3dab98357a558f396d" translate="yes" xml:space="preserve">
          <source>We do not provide support for usage of Goma and any issues raised asking for help / having issues will &lt;em&gt;probably&lt;/em&gt; be closed without much reason, we do not have the capacity to handle that kind of support.</source>
          <target state="translated">우리는 Goma 사용에 대한 지원을 제공하지 않으며 도움을 요청하거나 문제가있는 모든 문제는 &lt;em&gt;아마도&lt;/em&gt; 별다른 이유없이 종료 될 &lt;em&gt;것입니다&lt;/em&gt; . 우리는 그러한 종류의 지원을 처리 할 능력이 없습니다.</target>
        </trans-unit>
        <trans-unit id="eedf244f481ddf83bc8dee952576b6f2df6c2388" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t track upstream closely due to logistics:</source>
          <target state="translated">물류로 인해 업스트림을 면밀히 추적하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9eb7c11f6a1dfe7dedc1e06ede609e55b4a43cd3" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t want those patches because we&amp;rsquo;re only patching V8.</source>
          <target state="translated">V8 만 패치하기 때문에 이러한 패치를 원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="646658d3f8feebdbff029418a5e2bad9c9d26fb6" translate="yes" xml:space="preserve">
          <source>We don't want to commit the changes (they're kept in the patchfiles) but need them locally so that they don't show up in subsequent diffs while we iterate through more patches</source>
          <target state="translated">우리는 변경 사항을 커밋하고 싶지 않지만 (패치 파일에 유지됨) 더 많은 패치를 반복하는 동안 후속 diff에 표시되지 않도록 로컬로 변경해야합니다</target>
        </trans-unit>
        <trans-unit id="430877a34faea587705f9ecfc77142d78d587cbd" translate="yes" xml:space="preserve">
          <source>We feel that our current system of updating the Chromium component strikes an appropriate balance between the resources we have available and the needs of the majority of applications built on top of the framework. We definitely are interested in hearing more about specific use cases from the people that build things on top of Electron. Pull requests and contributions supporting this effort are always very welcome.</source>
          <target state="translated">현재 Chromium 구성 요소 업데이트 시스템은 사용 가능한 리소스와 프레임 워크를 기반으로 구축 된 대부분의 응용 프로그램의 요구간에 적절한 균형을 유지한다고 생각합니다. 우리는 Electron을 기반으로 물건을 만드는 사람들의 특정 사용 사례에 대해 더 많이 듣고 싶습니다. 이러한 노력을 지원하는 풀 요청 및 기여는 언제나 환영합니다.</target>
        </trans-unit>
        <trans-unit id="84562fb1da96d50752b29be05b0a716c75343ee9" translate="yes" xml:space="preserve">
          <source>We have automated monitoring of our Goma cluster and cache at &lt;a href=&quot;https://status.notgoma.com&quot;&gt;https://status.notgoma.com&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://status.notgoma.com&quot;&gt;https://status.notgoma.com&lt;/a&gt; 에서 Goma 클러스터 및 캐시를 자동으로 모니터링했습니다.</target>
        </trans-unit>
        <trans-unit id="29dc7a4495bdae54dfd331baae530291131485b9" translate="yes" xml:space="preserve">
          <source>We might suggest two free popular editors built in Electron: GitHub's &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; and Microsoft's &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;. Both of them have excellent JavaScript support.</source>
          <target state="translated">Electron에 내장 된 무료 인기 편집기 인 GitHub의 &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; 과 Microsoft의 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; 두 가지를 제안 할 수 있습니다 . 둘 다 뛰어난 JavaScript 지원 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b72a6779df7508e7ee7a2798055b96ac846c658" translate="yes" xml:space="preserve">
          <source>We need to check out the corresponding branch.</source>
          <target state="translated">해당 지점을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="26a602280f91cf9da8a11382582484956a6e33fc" translate="yes" xml:space="preserve">
          <source>We need to generate a patch file from each patch applied to V8.</source>
          <target state="translated">V8에 적용된 각 패치에서 패치 파일을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a27786c29b05a0b39452fdd40f59270fd4ed081f" translate="yes" xml:space="preserve">
          <source>We recommend that you use Node's parser for URLs. Simple string comparisons can sometimes be fooled - a &lt;code&gt;startsWith('https://example.com')&lt;/code&gt; test would let &lt;code&gt;https://example.com.attacker.com&lt;/code&gt; through.</source>
          <target state="translated">URL에는 Node의 파서를 사용하는 것이 좋습니다. 간단한 문자열 비교는 때때로 속일 수 있습니다. &lt;code&gt;startsWith('https://example.com')&lt;/code&gt; 테스트는 &lt;code&gt;https://example.com.attacker.com&lt;/code&gt; 을 통과하게합니다.</target>
        </trans-unit>
        <trans-unit id="125bb09cd7167954f7cf5fa79d42fbaf1cb28d8f" translate="yes" xml:space="preserve">
          <source>We reconcile flagged code with our versioning strategy as follows:</source>
          <target state="translated">다음과 같이 플래그가 지정된 코드를 버전 관리 전략과 조정합니다.</target>
        </trans-unit>
        <trans-unit id="c543f333dc37656ff3781e800fdc6ac6bbfaa999" translate="yes" xml:space="preserve">
          <source>We seek to increase clarity at all levels of the update and releases process. Starting with &lt;code&gt;2.0.0&lt;/code&gt; we will require pull requests adhere to the &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;Conventional Commits&lt;/a&gt; spec, which can be summarized as follows:</source>
          <target state="translated">모든 수준의 업데이트 및 릴리스 프로세스에서 명확성을 높이려고합니다. &lt;code&gt;2.0.0&lt;/code&gt; 부터 풀 요청은 &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;기존 커밋&lt;/a&gt; 사양을 준수해야하며 , 다음과 같이 요약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12aa8f43abfcba17e4501cbd5862c4e76122d87e" translate="yes" xml:space="preserve">
          <source>We sometimes have to wait for the next periodic Node release because it will sync more closely with the version of V8 in the new libcc</source>
          <target state="translated">새로운 libcc에서 V8 버전과 더 밀접하게 동기화되기 때문에 때때로 다음주기 노드 릴리스를 기다려야합니다.</target>
        </trans-unit>
        <trans-unit id="f45062e893abf8c59e8c1ac2ffe7f387bfbfc7c5" translate="yes" xml:space="preserve">
          <source>We strive for weekly beta releases, however we often release more betas than scheduled.</source>
          <target state="translated">우리는 주간 베타 릴리스를 위해 노력하지만 종종 예정된 것보다 더 많은 베타를 릴리스합니다.</target>
        </trans-unit>
        <trans-unit id="47b2d9b7fb66c7950c32a397de5e65bff3686876" translate="yes" xml:space="preserve">
          <source>We support the following extensions APIs, with some caveats. Other APIs may additionally be supported, but support for any APIs not listed here is provisional and may be removed.</source>
          <target state="translated">몇 가지주의 사항과 함께 다음 확장 API를 지원합니다. 다른 API가 추가로 지원 될 수 있지만 여기에 나열되지 않은 API에 대한 지원은 잠정적이며 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3de9a26accef809c11af3815ccde3a4fba0e61c" translate="yes" xml:space="preserve">
          <source>We update code such that we only use one copy of V8 across all of electron</source>
          <target state="translated">우리는 모든 전자 장치에서 하나의 V8 사본 만 사용하도록 코드를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="4dc39ffbd50411c5022d371ea9ed1c5a2d8bd2c5" translate="yes" xml:space="preserve">
          <source>We will cover in detail how git branching works, how npm tagging works, what developers should expect to see, and how one can backport changes.</source>
          <target state="translated">git 브랜칭 작동 방식, npm 태깅 작동 방식, 개발자가 기대해야 할 사항 및 변경 사항을 백 포트하는 방법에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="70b121256f8eda40e443c1d517fb7e3fbc370cef" translate="yes" xml:space="preserve">
          <source>We'll start with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; and add functionality gradually.</source>
          <target state="translated">&lt;a href=&quot;quick-start&quot;&gt;빠른 시작 가이드&lt;/a&gt; 에서 작동하는 애플리케이션으로 시작하여 점차적으로 기능을 추가 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="65d5f29d68a3683127bc1365335d4191053dbab6" translate="yes" xml:space="preserve">
          <source>We'll start with a working application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; and add functionality gradually.</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;빠른 시작 가이드&lt;/a&gt; 에서 작동하는 애플리케이션으로 시작하여 점차적으로 기능을 추가 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="797bb34784baa677feee355c332686112533e248" translate="yes" xml:space="preserve">
          <source>We've made a handy module &lt;code&gt;@electron/fuses&lt;/code&gt; to make flipping these fuses easy. Check out the README of that module for more details on usage and potential error cases.</source>
          <target state="translated">이 퓨즈를 쉽게 뒤집을 수 있도록 &lt;code&gt;@electron/fuses&lt;/code&gt; 에 편리한 모듈을 만들었습니다 . 사용법 및 잠재적 오류 사례에 대한 자세한 내용은 해당 모듈의 README를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6e31f799234b45824edf7f06671f36a424b55c16" translate="yes" xml:space="preserve">
          <source>Web API</source>
          <target state="translated">웹 API</target>
        </trans-unit>
        <trans-unit id="92fc785aaae1917eb90b8fefe2e08a014003a310" translate="yes" xml:space="preserve">
          <source>Web embeds</source>
          <target state="translated">웹 삽입</target>
        </trans-unit>
        <trans-unit id="1a3e4d6dacc3cb0210cf8c4d1f10eaa3f0fb02fb" translate="yes" xml:space="preserve">
          <source>Web embeds in Electron</source>
          <target state="translated">Electron에 웹 삽입</target>
        </trans-unit>
        <trans-unit id="74d3ee5c1ec7d5e8f52a16fe90e9b99bc291bbc6" translate="yes" xml:space="preserve">
          <source>WebDriver is an open source tool for automated testing of web apps across many browsers. It provides capabilities for navigating to web pages, user input, JavaScript execution, and more. ChromeDriver is a standalone server which implements WebDriver's wire protocol for Chromium. It is being developed by members of the Chromium and WebDriver teams.</source>
          <target state="translated">WebDriver는 많은 브라우저에서 웹 응용 프로그램을 자동으로 테스트하기위한 오픈 소스 도구입니다. 웹 페이지 탐색, 사용자 입력, JavaScript 실행 등의 기능을 제공합니다. ChromeDriver는 Chromium에 대한 WebDriver의 유선 프로토콜을 구현하는 독립형 서버입니다. Chromium 및 WebDriver 팀 구성원이 개발 중입니다.</target>
        </trans-unit>
        <trans-unit id="5ba9f4d31ebeb5fe86939db3211c3a197f6cbe9e" translate="yes" xml:space="preserve">
          <source>WebRequest</source>
          <target state="translated">WebRequest</target>
        </trans-unit>
        <trans-unit id="87c7ad10f80d3afad5fcaadcd5f89deaeb8130b8" translate="yes" xml:space="preserve">
          <source>WebSource</source>
          <target state="translated">WebSource</target>
        </trans-unit>
        <trans-unit id="0b5a8a2280d81b0eb2d7b2d08aa2b7af38826788" translate="yes" xml:space="preserve">
          <source>WebSource Object</source>
          <target state="translated">웹 소스 객체</target>
        </trans-unit>
        <trans-unit id="dd564f49cf69bc23ac4c6cdd969d17dde9d841aa" translate="yes" xml:space="preserve">
          <source>WebView is a custom element (&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;) that will only work inside Electron. They are implemented as an &quot;out-of-process iframe&quot;. This means that all communication with the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; is done asynchronously using IPC. The &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element has many custom methods and events, similar to &lt;code&gt;webContents&lt;/code&gt;, that provide you with greater control over the content.</source>
          <target state="translated">WebView는 Electron 내에서만 작동 하는 사용자 지정 요소 ( &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; )입니다. 이들은 &quot;out-of-process iframe&quot;으로 구현됩니다. 즉, &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 와의 모든 통신 은 IPC를 사용하여 비동기 적으로 수행됩니다. &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 요소는 유사 많은 사용자 정의 방법과 이벤트가 &lt;code&gt;webContents&lt;/code&gt; 내용을보다 컨트롤을 제공.</target>
        </trans-unit>
        <trans-unit id="01f7b830174736fb822a9f404e07f0189cf27d3c" translate="yes" xml:space="preserve">
          <source>WebViews</source>
          <target state="translated">WebViews</target>
        </trans-unit>
        <trans-unit id="c112d5c99a8c8abd050532826bbf719da263a542" translate="yes" xml:space="preserve">
          <source>WebViews: Do not use &lt;code&gt;allowpopups&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allowpopups&lt;/code&gt; : allowpopups를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="23a10ac39f824a13f17ba217824f40bbce9c0368" translate="yes" xml:space="preserve">
          <source>WebViews: Verify the options and params of all &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">WebViews : 모든 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그 의 옵션 및 매개 변수 확인</target>
        </trans-unit>
        <trans-unit id="82a0373f51a51a611eb8211e50702cdb2b58bc74" translate="yes" xml:space="preserve">
          <source>Well-defined stabilization branches</source>
          <target state="translated">잘 정의 된 안정화 지점</target>
        </trans-unit>
        <trans-unit id="e71d224a2fc235cbf569760950b6126725c90016" translate="yes" xml:space="preserve">
          <source>Welsh</source>
          <target state="translated">Welsh</target>
        </trans-unit>
        <trans-unit id="6acef4256ada3cb9ffcdc519a504885b5a8289b5" translate="yes" xml:space="preserve">
          <source>What are fuses?</source>
          <target state="translated">퓨즈는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="16ca6116608ca7e24740b3edd624ffad3c69f41e" translate="yes" xml:space="preserve">
          <source>What is going on above?</source>
          <target state="translated">위에서 무슨 일이 일어나고 있습니까?</target>
        </trans-unit>
        <trans-unit id="89511a76c8cbc174d6fe0018b08443f894e18a4b" translate="yes" xml:space="preserve">
          <source>What is it?</source>
          <target state="translated">뭐야?</target>
        </trans-unit>
        <trans-unit id="a5f3f0c94d6855347f2dad2276f976795ddbfef0" translate="yes" xml:space="preserve">
          <source>What should I do if a DevTools Extension is not working?</source>
          <target state="translated">DevTools Extension이 작동하지 않으면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="c066f772a6aa5ecafa2d0c7507ee487f10d46157" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s important about the second point is that apps using &lt;code&gt;^&lt;/code&gt; should still be able to expect a reasonable level of stability. To accomplish this, semver allows for a &lt;em&gt;pre-release identifier&lt;/em&gt; to indicate a particular version is not yet &lt;em&gt;safe&lt;/em&gt; or &lt;em&gt;stable&lt;/em&gt;.</source>
          <target state="translated">두 번째 요점에서 중요한 것은 &lt;code&gt;^&lt;/code&gt; 를 사용하는 앱 은 여전히 ​​합리적인 수준의 안정성을 기대할 수 있어야한다는 것입니다. 이를 위해 semver는 &lt;em&gt;시험판 식별자&lt;/em&gt; 가 특정 버전이 아직 &lt;em&gt;안전&lt;/em&gt; 하지 않거나 &lt;em&gt;안정적&lt;/em&gt; 이지 않음을 나타낼 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="ace10cc15d258fc4f89fba0951eab3758d341f15" translate="yes" xml:space="preserve">
          <source>Whatever you choose, you will periodically have to bump the version in your &lt;code&gt;package.json&lt;/code&gt; as breaking changes are a fact of Chromium life.</source>
          <target state="translated">당신이 무엇을 선택하든, 변경 사항이 Chromium 수명의 사실이기 때문에 &lt;code&gt;package.json&lt;/code&gt; 의 버전을 주기적으로 충돌시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="b5c9f472f8144133c555ffd35d5a108d9d101d9e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;app.relaunch&lt;/code&gt; is called for multiple times, multiple instances will be started after current instance exited.</source>
          <target state="translated">&lt;code&gt;app.relaunch&lt;/code&gt; 를 여러 번 호출 하면 현재 인스턴스가 종료 된 후 여러 인스턴스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="456f7f444fa36d99a78a498a32530e083c0c1edf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;callback&lt;/code&gt; is called with nothing, a number, or an object that has an &lt;code&gt;error&lt;/code&gt; property, the &lt;code&gt;request&lt;/code&gt; will fail with the &lt;code&gt;error&lt;/code&gt; number you specified. For the available error numbers you can use, please see the &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net error list&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;callback&lt;/code&gt; 아무것도, 숫자, 또는이 객체로 호출 &lt;code&gt;error&lt;/code&gt; 속성을의 &lt;code&gt;request&lt;/code&gt; 실패합니다 &lt;code&gt;error&lt;/code&gt; 가 지정한 번호입니다. 사용 가능한 오류 번호는 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net error list&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="31dff80772f7948cfeb3997ba3f24f7bf5c9a644" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contents&lt;/code&gt; is a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag, the &lt;code&gt;mode&lt;/code&gt; would be &lt;code&gt;detach&lt;/code&gt; by default, explicitly passing an empty &lt;code&gt;mode&lt;/code&gt; can force using last used dock state.</source>
          <target state="translated">때 &lt;code&gt;contents&lt;/code&gt; A는 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그의 &lt;code&gt;mode&lt;/code&gt; 것이다 &lt;code&gt;detach&lt;/code&gt; 명시 적으로 빈 전달 기본적으로 &lt;code&gt;mode&lt;/code&gt; 마지막으로 사용 된 도킹 상태를 사용하여 강제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="192f5d608481464886caca6b87708a5b8e4599c8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contextIsolation&lt;/code&gt; is enabled in your &lt;code&gt;webPreferences&lt;/code&gt;, your &lt;code&gt;preload&lt;/code&gt; scripts run in an &quot;Isolated World&quot;. You can read more about context isolation and what it affects in the &lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;security&lt;/a&gt; docs.</source>
          <target state="translated">때 &lt;code&gt;contextIsolation&lt;/code&gt; 가 당신에 사용할 수 &lt;code&gt;webPreferences&lt;/code&gt; , 당신의 &lt;code&gt;preload&lt;/code&gt; 스크립트는 &quot;격리 된 세계&quot;에서 실행됩니다. &lt;a href=&quot;../tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;보안&lt;/a&gt; 문서 에서 컨텍스트 격리와 그 영향에 대해 자세히 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa9bad17aece834731e448310f31ba38dc468103" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;contextIsolation&lt;/code&gt; is enabled in your &lt;code&gt;webPreferences&lt;/code&gt;, your &lt;code&gt;preload&lt;/code&gt; scripts run in an &quot;Isolated World&quot;. You can read more about context isolation and what it affects in the &lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;security&lt;/a&gt; docs.</source>
          <target state="translated">때 &lt;code&gt;contextIsolation&lt;/code&gt; 가 당신에 사용할 수 &lt;code&gt;webPreferences&lt;/code&gt; , 당신의 &lt;code&gt;preload&lt;/code&gt; 스크립트는 &quot;격리 된 세계&quot;에서 실행됩니다. &lt;a href=&quot;tutorial/security#3-enable-context-isolation-for-remote-content&quot;&gt;보안&lt;/a&gt; 문서 에서 컨텍스트 격리와 그 영향에 대해 자세히 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a569732b401f28d6808fd0b7c6786b84077da6d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;critical&lt;/code&gt; is passed, the dock icon will bounce until either the application becomes active or the request is canceled.</source>
          <target state="translated">&lt;code&gt;critical&lt;/code&gt; 가 전달 되면 응용 프로그램이 활성화되거나 요청이 취소 될 때까지 도크 아이콘이 바운스됩니다.</target>
        </trans-unit>
        <trans-unit id="dd980d90a602eb0751dc1da5ccb8f8adcec09216" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;informational&lt;/code&gt; is passed, the dock icon will bounce for one second. However, the request remains active until either the application becomes active or the request is canceled.</source>
          <target state="translated">때 &lt;code&gt;informational&lt;/code&gt; 전달되고, 도크 아이콘 1 초에 대한 반송됩니다. 그러나 응용 프로그램이 활성화되거나 요청이 취소 될 때까지 요청은 활성 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="6a60883c8376a324af62e40798e08e78df8bc2e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pacScript&lt;/code&gt; and &lt;code&gt;proxyRules&lt;/code&gt; are provided together, the &lt;code&gt;proxyRules&lt;/code&gt; option is ignored and &lt;code&gt;pacScript&lt;/code&gt; configuration is applied.</source>
          <target state="translated">때 &lt;code&gt;pacScript&lt;/code&gt; 및 &lt;code&gt;proxyRules&lt;/code&gt; 가 함께 제공의 &lt;code&gt;proxyRules&lt;/code&gt; 의 옵션은 무시되고 &lt;code&gt;pacScript&lt;/code&gt; 의 구성이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9cd810bfc145fbdfd0c173f59183e7e16bf402a3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;window.open&lt;/code&gt; is called to create a new window in a web page, a new instance of &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; will be created for the &lt;code&gt;url&lt;/code&gt; and a proxy will be returned to &lt;code&gt;window.open&lt;/code&gt; to let the page have limited control over it.</source>
          <target state="translated">웹 페이지에 새 창을 만들기 위해 &lt;code&gt;window.open&lt;/code&gt; 이 호출 되면 &lt;code&gt;url&lt;/code&gt; 에 대한 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 의 새 인스턴스 가 생성 되고 페이지가 제한적으로 제어 할 수 있도록 프록시가 &lt;code&gt;window.open&lt;/code&gt; 에 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="0365519eaa98ae308b22fed639b44c0ae3cdf23b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;window.open&lt;/code&gt; is called to create a new window in a web page, a new instance of &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; will be created for the &lt;code&gt;url&lt;/code&gt; and a proxy will be returned to &lt;code&gt;window.open&lt;/code&gt; to let the page have limited control over it.</source>
          <target state="translated">때 &lt;code&gt;window.open&lt;/code&gt; 이 웹 페이지에서 새 창을 만들라고,의 새로운 인스턴스 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 는&lt;/a&gt; 생성됩니다 &lt;code&gt;url&lt;/code&gt; 과 프록시로 돌아갑니다 &lt;code&gt;window.open&lt;/code&gt; 관리 권한을 제한 한 페이지를 수 있도록.</target>
        </trans-unit>
        <trans-unit id="70c8545dfa1769f6a5287bd816204e2c6bc6117b" translate="yes" xml:space="preserve">
          <source>When Electron reads from an ASAR file, log the read offset and file path to the system &lt;code&gt;tmpdir&lt;/code&gt;. The resulting file can be provided to the ASAR module to optimize file ordering.</source>
          <target state="translated">Electron이 ASAR 파일에서 읽을 때, 읽기 오프셋 및 파일 경로를 시스템 &lt;code&gt;tmpdir&lt;/code&gt; 에 기록하십시오 . 파일 순서를 최적화하기 위해 결과 파일을 ASAR 모듈에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce87af82f66818e490066ecb1c5b223544df1af9" translate="yes" xml:space="preserve">
          <source>When a Debug build of Electron succeeds, run the tests: &lt;code&gt;$ ./script/test.py&lt;/code&gt; Fix the failing tests.</source>
          <target state="translated">Electron의 디버그 빌드가 성공하면 테스트를 실행하십시오. &lt;code&gt;$ ./script/test.py&lt;/code&gt; 실패한 테스트를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="4adabfb0cb0ac9c9488c68a3c922b7abfa2bd000" translate="yes" xml:space="preserve">
          <source>When a custom &lt;code&gt;pageSize&lt;/code&gt; is passed, Chromium attempts to validate platform specific minimum values for &lt;code&gt;width_microns&lt;/code&gt; and &lt;code&gt;height_microns&lt;/code&gt;. Width and height must both be minimum 353 microns but may be higher on some operating systems.</source>
          <target state="translated">맞춤 &lt;code&gt;pageSize&lt;/code&gt; 가 전달되면 Chromium은 &lt;code&gt;width_microns&lt;/code&gt; 및 &lt;code&gt;height_microns&lt;/code&gt; 에 대한 플랫폼 별 최소값의 유효성을 검사합니다 . 너비와 높이는 모두 최소 353 마이크론이어야하지만 일부 운영 체제에서는 더 높을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3ad9d9e5cbef7f19f5304c67b232db6ae404063" translate="yes" xml:space="preserve">
          <source>When a file is requested from the recent documents menu, the &lt;code&gt;open-file&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module will be emitted for it.</source>
          <target state="translated">최근 문서 메뉴에서 파일을 요청하면 &lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;open-file&lt;/code&gt; 이벤트가 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="a0f3736560e59ceb8f06d17010139b0984a33deb" translate="yes" xml:space="preserve">
          <source>When a given accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">다른 응용 프로그램에서 지정된 가속기를 이미 사용하고있는 경우이 호출은 자동으로 실패합니다. 이 동작은 응용 프로그램이 전역 바로 가기를 놓고 싸우는 것을 원하지 않기 때문에 운영 체제에서 의도 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4af129cba0d065057218bcafb47913dc6a00ab79" translate="yes" xml:space="preserve">
          <source>When a new version of Node.js gets released, we usually wait for about a month before upgrading the one in Electron. So we can avoid getting affected by bugs introduced in new Node.js versions, which happens very often.</source>
          <target state="translated">Node.js의 새 버전이 출시되면 보통 Electron에서 한 달 정도 업그레이드하기 전에 한 달 정도 기다립니다. 따라서 새로운 Node.js 버전에서 소개 된 버그의 영향을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e28a9fb3bae4c0f6cfff053af52bf585b5e4e143" translate="yes" xml:space="preserve">
          <source>When a new version of Node.js is released, Electron usually waits about a month before upgrading in order to bring in a more stable version.</source>
          <target state="translated">새로운 버전의 Node.js가 출시되면 Electron은 보통 한 달 정도 기다렸다가보다 안정적인 버전을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c8e841e1c8e5b0e561ab67a71f25e70ae245ec48" translate="yes" xml:space="preserve">
          <source>When a release branch reaches the end of its support cycle, the series will be deprecated in NPM and a final end-of-support release will be made. This release will add a warning to inform that an unsupported version of Electron is in use.</source>
          <target state="translated">릴리스 브랜치가 지원주기의 끝에 도달하면 NPM에서 시리즈가 더 이상 사용되지 않으며 최종 지원 종료 릴리스가 작성됩니다. 이 릴리스에는 지원되지 않는 Electron 버전이 사용 중임을 알리는 경고가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="63c1b5c06b0137db9d7b639a7533a90a1295a092" translate="yes" xml:space="preserve">
          <source>When a user clicks a file from the JumpList, a new instance of your application will be started with the path of the file added as a command line argument.</source>
          <target state="translated">사용자가 JumpList에서 파일을 클릭하면 명령 줄 인수로 추가 된 파일 경로로 응용 프로그램의 새 인스턴스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="150bb10f9dc16c2c06fee885a40307e7b5a20c45" translate="yes" xml:space="preserve">
          <source>When an API is changed or removed in a way that breaks existing functionality, the previous functionality will be supported for a minimum of two major versions when possible before being removed. For example, if a function takes three arguments, and that number is reduced to two in major version 10, the three-argument version would continue to work until, at minimum, major version 12. Past the minimum two-version threshold, we will attempt to support backwards compatibility beyond two versions until the maintainers feel the maintenance burden is too high to continue doing so.</source>
          <target state="translated">기존 기능을 손상시키는 방식으로 API가 변경되거나 제거되면 제거되기 전에 가능하면 최소 두 가지 주요 버전에 대해 이전 기능이 지원됩니다. 예를 들어, 함수가 3 개의 인수를 취하고 그 수가 주 버전 10에서 2 개로 줄어들면 3 개 인수 버전은 최소 주 버전 12까지 계속 작동합니다. 최소 2 개 버전 임계 값을 지나면 유지 관리가 유지 관리 부담이 너무 높아 계속 그렇게 할 수 없다고 느낄 때까지 두 버전 이상의 하위 호환성을 지원하려고 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="41d5941e736fa3119df382edb72f3d3acd3f67f1" translate="yes" xml:space="preserve">
          <source>When an item is positioned, all un-positioned items are inserted after it until a new item is positioned. So if you want to position a group of menu items in the same location you only need to specify a position for the first item.</source>
          <target state="translated">항목을 배치하면 새 항목이 배치 될 때까지 배치되지 않은 모든 항목이 항목 뒤에 삽입됩니다. 따라서 동일한 위치에 메뉴 항목 그룹을 배치하려면 첫 번째 항목의 위치 만 지정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="b0525bb50acf5ae3ee33497ba1fd8c878021f99a" translate="yes" xml:space="preserve">
          <source>When app indicator is used on Linux, the &lt;code&gt;click&lt;/code&gt; event is ignored.</source>
          <target state="translated">Linux에서 앱 표시기가 사용되면 &lt;code&gt;click&lt;/code&gt; 이벤트가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="cc16228cfb7c0d45d4e20bd6343b5761737144cf" translate="yes" xml:space="preserve">
          <source>When building a web application for today's Internet, the oldest environments dictate what features you can and cannot use. Even though Electron supports well-performing CSS filters and animations, an older browser might not. Where you could use WebGL, your developers may have chosen a more resource-hungry solution to support older phones.</source>
          <target state="translated">오늘날의 인터넷을위한 웹 애플리케이션을 구축 할 때 가장 오래된 환경은 사용할 수있는 기능과 사용할 수없는 기능을 지정합니다. Electron이 성능이 좋은 CSS 필터와 애니메이션을 지원하더라도 구형 브라우저는 그렇지 않을 수 있습니다. WebGL을 사용할 수있는 경우 개발자는 구형 전화를 지원하기 위해 리소스를 많이 사용하는 솔루션을 선택했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc56e43eb1dc44b391c45c4f3311046e0a06f658" translate="yes" xml:space="preserve">
          <source>When building an Electron app, your users are better served if you download the fonts and include them in your app's bundle.</source>
          <target state="translated">Electron 앱을 빌드 할 때 글꼴을 다운로드하여 앱 번들에 포함하면 사용자에게 더 나은 서비스를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32c2bca9c19462ede81c7f0c13be5af4e227a9af" translate="yes" xml:space="preserve">
          <source>When building native modules for windows, the &lt;code&gt;win_delay_load_hook&lt;/code&gt; variable in the module's &lt;code&gt;binding.gyp&lt;/code&gt; must be true (which is the default). If this hook is not present, then the native module will fail to load on Windows, with an error message like &lt;code&gt;Cannot find module&lt;/code&gt;. See the &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;native module guide&lt;/a&gt; for more.</source>
          <target state="translated">Windows 용 네이티브 모듈을 빌드 할 때 모듈의 &lt;code&gt;binding.gyp&lt;/code&gt; 에 있는 &lt;code&gt;win_delay_load_hook&lt;/code&gt; 변수는 true (기본값) 여야합니다. 이 후크가 없으면 Windows에서 네이티브 모듈이로드 &lt;code&gt;Cannot find module&lt;/code&gt; 과 같은 오류 메시지가 표시 됩니다. 자세한 내용은 &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;네이티브 모듈 가이드&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="9aeb364bbb13a5d9c76c3a653868a6203155ec29" translate="yes" xml:space="preserve">
          <source>When built like this, you can make changes to files in &lt;code&gt;vendor/libchromiumcontent/src&lt;/code&gt; and rebuild quickly with:</source>
          <target state="translated">이와 같이 빌드하면 &lt;code&gt;vendor/libchromiumcontent/src&lt;/code&gt; 에서 파일을 변경하고 다음을 사용하여 빠르게 다시 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9879d2296d3f5ecf7f44dbcd4cd33c42b3c41b0" translate="yes" xml:space="preserve">
          <source>When clicking into a &lt;code&gt;webview&lt;/code&gt;, the page focus will move from the embedder frame to &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 클릭하면 페이지 포커스가 임 베더 프레임에서 &lt;code&gt;webview&lt;/code&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="a64ac0d7e934d4b15293f19c72721b7f79ead20d" translate="yes" xml:space="preserve">
          <source>When considering a module, we recommend that you check:</source>
          <target state="translated">모듈을 고려할 때 다음 사항을 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1c0c8bf1375eec488a3ed31edd42114167313247" translate="yes" xml:space="preserve">
          <source>When creating a new API, it is preferred to use getters and setters instead of jQuery's one-function style. For example, &lt;code&gt;.getText()&lt;/code&gt; and &lt;code&gt;.setText(text)&lt;/code&gt; are preferred to &lt;code&gt;.text([text])&lt;/code&gt;. There is a &lt;a href=&quot;https://github.com/electron/electron/issues/46&quot;&gt;discussion&lt;/a&gt; on this.</source>
          <target state="translated">새 API를 만들 때는 jQuery의 단일 함수 스타일 대신 게터와 세터를 사용하는 것이 좋습니다. 예를 들어, &lt;code&gt;.getText()&lt;/code&gt; 및 &lt;code&gt;.setText(text)&lt;/code&gt; 가 &lt;code&gt;.text([text])&lt;/code&gt; 보다 선호됩니다 . 이것에 대한 &lt;a href=&quot;https://github.com/electron/electron/issues/46&quot;&gt;토론&lt;/a&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a93d8abc83939aafd2127f83b0e1112bd00cc72d" translate="yes" xml:space="preserve">
          <source>When defining &lt;code&gt;accessibilityLabel&lt;/code&gt;, ensure you have considered macOS &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaccessibilitybutton/1524910-accessibilitylabel?language=objc&quot;&gt;best practices&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;accessibilityLabel&lt;/code&gt; 을 정의 할 때 macOS &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaccessibilitybutton/1524910-accessibilitylabel?language=objc&quot;&gt;모범 사례를&lt;/a&gt; 고려했는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ca45c8b630c74a7810dc81d9be5eaa28c5fd0c2" translate="yes" xml:space="preserve">
          <source>When developing on linux with gdb, it is recommended to add a gdb index to speed up loading symbols. This doesn't need to be executed on every build, but it is recommended to do it at least once to index most shared libraries:</source>
          <target state="translated">gdb를 사용하여 Linux에서 개발할 때는 기호로드 속도를 높이기 위해 gdb 색인을 추가하는 것이 좋습니다. 모든 빌드에서 실행할 필요는 없지만 대부분의 공유 라이브러리를 인덱싱하려면 한 번 이상 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="49d048d8fbcec9966cd7416d678774a21cb11ea0" translate="yes" xml:space="preserve">
          <source>When disabling Node.js integration, you can still expose APIs to your website that do consume Node.js modules or features. Preload scripts continue to have access to &lt;code&gt;require&lt;/code&gt; and other Node.js features, allowing developers to expose a custom API to remotely loaded content.</source>
          <target state="translated">Node.js 통합을 비활성화해도 여전히 Node.js 모듈 또는 기능을 사용하는 웹 사이트에 API를 노출 할 수 있습니다. 사전로드 스크립트는 계속해서 &lt;code&gt;require&lt;/code&gt; 및 기타 Node.js 기능에 액세스 할 수 있으므로 개발자는 사용자 정의 API를 원격으로로드 된 컨텐츠에 노출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e879ee9a3aa69880b74c61d82e2c0298daa892d" translate="yes" xml:space="preserve">
          <source>When in doubt, run &lt;code&gt;electron-rebuild&lt;/code&gt; first.</source>
          <target state="translated">확실치 않은 경우 먼저 &lt;code&gt;electron-rebuild&lt;/code&gt; 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="42cd45d627f4dfff375e983a2953491047ab0647" translate="yes" xml:space="preserve">
          <source>When in-page navigation happens, the page URL changes but does not cause navigation outside of the page. Examples of this occurring are when anchor links are clicked or when the DOM &lt;code&gt;hashchange&lt;/code&gt; event is triggered.</source>
          <target state="translated">인 페이지 탐색이 발생하면 페이지 URL이 변경되지만 페이지 외부를 탐색하지는 않습니다. 이러한 상황의 예로는 앵커 링크를 클릭하거나 DOM &lt;code&gt;hashchange&lt;/code&gt; 이벤트가 트리거되는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cd6c5a62f976c02511cfedcc88830a074fc9650" translate="yes" xml:space="preserve">
          <source>When installing the &lt;code&gt;electron&lt;/code&gt; NPM package, it automatically downloads the electron binary.</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; NPM 패키지를 설치할 때 전자 바이너리를 자동으로 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="c2b81c8283a3b8869917c2f6416d6390b5bd5176" translate="yes" xml:space="preserve">
          <source>When it comes to JavaScript, you may have included toolkit libraries like jQuery for DOM selectors or polyfills like the &lt;code&gt;regenerator-runtime&lt;/code&gt; to support &lt;code&gt;async/await&lt;/code&gt;.</source>
          <target state="translated">자바 스크립트의 경우 DOM 선택 기용 jQuery와 같은 툴킷 라이브러리 또는 &lt;code&gt;async/await&lt;/code&gt; 를 지원 하는 &lt;code&gt;regenerator-runtime&lt;/code&gt; 과 같은 폴리 필을 포함했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffa7ec246b02079f9850e4222849f48e347352eb" translate="yes" xml:space="preserve">
          <source>When loading a page in the window directly, users may see the page load incrementally, which is not a good experience for a native app. To make the window display without visual flash, there are two solutions for different situations.</source>
          <target state="translated">창에서 페이지를 직접로드 할 때 사용자는 페이지가 점차적으로로드되는 것을 볼 수 있으며 이는 기본 앱에는 좋지 않습니다. 시각적 플래시없이 창을 표시하려면 상황에 따라 두 가지 솔루션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e63e94bff708562a23b4df513db393aea02a750a" translate="yes" xml:space="preserve">
          <source>When opening a new issue in the &lt;a href=&quot;https://github.com/electron/electron/issues/new/choose&quot;&gt;&lt;code&gt;electron/electron&lt;/code&gt; issue tracker&lt;/a&gt;, users will be presented with &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/ISSUE_TEMPLATE/Bug_report.md&quot;&gt;a template&lt;/a&gt; that should be filled in.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/issues/new/choose&quot;&gt; &lt;code&gt;electron/electron&lt;/code&gt; 문제 추적기&lt;/a&gt; 에서 새 문제를 열면 사용자에게 입력 해야하는 &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/ISSUE_TEMPLATE/Bug_report.md&quot;&gt;템플릿&lt;/a&gt; 이 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="58e2bd77bbfbc230db536d0c9b42b46cedca98de" translate="yes" xml:space="preserve">
          <source>When opening a new issue in the &lt;code&gt;electron/electron&lt;/code&gt; issue tracker, users will be presented with a template that should be filled in.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; 문제 추적기 에서 새 문제를 열면 사용자에게 채워 져야하는 템플릿이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d63c92a1b4ab30f75510aaef48b73fe1880c77d3" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;npm install electron&lt;/code&gt;, some users occasionally encounter installation errors.</source>
          <target state="translated">&lt;code&gt;npm install electron&lt;/code&gt; 을 실행할 때 일부 사용자는 때때로 설치 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="31bcd3a5bfe5ffc9234145bae66e8e56e5af9350" translate="yes" xml:space="preserve">
          <source>When running from the &lt;code&gt;electron&lt;/code&gt; package, this variable tells the &lt;code&gt;electron&lt;/code&gt; command to use the specified build of Electron instead of the one downloaded by &lt;code&gt;npm install&lt;/code&gt;. Usage:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; 패키지 에서 실행할 때이 변수는 &lt;code&gt;electron&lt;/code&gt; 명령이 &lt;code&gt;npm install&lt;/code&gt; 에서 다운로드 한 것 대신 지정된 Electron 빌드를 사용하도록 지시합니다 . 용법:</target>
        </trans-unit>
        <trans-unit id="fdf46f698812ee35f1390fe0d63b21efa8efe315" translate="yes" xml:space="preserve">
          <source>When sending a message, the event name is the &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">메시지를 보낼 때 이벤트 이름은 &lt;code&gt;channel&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="026cd3c409616b7869503b07d15f0286b73a2a63" translate="yes" xml:space="preserve">
          <source>When setting minimum or maximum window size with &lt;code&gt;minWidth&lt;/code&gt;/&lt;code&gt;maxWidth&lt;/code&gt;/ &lt;code&gt;minHeight&lt;/code&gt;/&lt;code&gt;maxHeight&lt;/code&gt;, it only constrains the users. It won't prevent you from passing a size that does not follow size constraints to &lt;code&gt;setBounds&lt;/code&gt;/&lt;code&gt;setSize&lt;/code&gt; or to the constructor of &lt;code&gt;BrowserWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minWidth&lt;/code&gt; / &lt;code&gt;maxWidth&lt;/code&gt; / &lt;code&gt;minHeight&lt;/code&gt; / &lt;code&gt;maxHeight&lt;/code&gt; 로 최소 또는 최대 창 크기를 설정 하면 사용자 만 제한합니다. 크기 제한을 따르지 않는 크기를 &lt;code&gt;setBounds&lt;/code&gt; / &lt;code&gt;setSize&lt;/code&gt; 또는 &lt;code&gt;BrowserWindow&lt;/code&gt; 생성자로 전달하는 것을 막을 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="90d62066c69168073116631a6384e6a720cd0b99" translate="yes" xml:space="preserve">
          <source>When specifying a &lt;code&gt;role&lt;/code&gt; on macOS, &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; are the only options that will affect the menu item. All other options will be ignored. Lowercase &lt;code&gt;role&lt;/code&gt;, e.g. &lt;code&gt;toggledevtools&lt;/code&gt;, is still supported.</source>
          <target state="translated">macOS에서 &lt;code&gt;role&lt;/code&gt; 을 지정할 때 &lt;code&gt;label&lt;/code&gt; 및 &lt;code&gt;accelerator&lt;/code&gt; 는 메뉴 항목에 영향을주는 유일한 옵션입니다. 다른 모든 옵션은 무시됩니다. &lt;code&gt;toggledevtools&lt;/code&gt; 와 같은 소문자 &lt;code&gt;role&lt;/code&gt; 은 여전히 ​​지원됩니다.</target>
        </trans-unit>
        <trans-unit id="06ffacf9a55aab2f28f18e900e6aece49fef7167" translate="yes" xml:space="preserve">
          <source>When the API is a property of object, and it is complex enough to be in a separate chapter like &lt;code&gt;win.webContents&lt;/code&gt;, use &lt;code&gt;mixedCase&lt;/code&gt;.</source>
          <target state="translated">API가 객체의 속성이고 &lt;code&gt;win.webContents&lt;/code&gt; 와 같은 별도의 장에있을 정도로 복잡 할 경우 &lt;code&gt;mixedCase&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9c152abebe626c6e46178a5a04ade37b38af515" translate="yes" xml:space="preserve">
          <source>When the accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">다른 응용 프로그램에서 가속기를 이미 가져 오면이 호출은 자동으로 실패합니다. 이 동작은 응용 프로그램이 전역 바로 가기를 위해 싸우기를 원하지 않기 때문에 운영 체제에서 의도 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="1d5838ce082306cd4c8181a6d64abbc773f35d78" translate="yes" xml:space="preserve">
          <source>When the accelerator is already taken by other applications, this call will still return &lt;code&gt;false&lt;/code&gt;. This behavior is intended by operating systems, since they don't want applications to fight for global shortcuts.</source>
          <target state="translated">다른 응용 프로그램에서 가속기를 이미 가져와도이 호출은 여전히 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 이 동작은 응용 프로그램이 전역 바로 가기를 위해 싸우기를 원하지 않기 때문에 운영 체제에서 의도 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="32d941bd107ec5badbfb17fcf24236ce65d08f30" translate="yes" xml:space="preserve">
          <source>When the build succeeds, create a &lt;code&gt;dist&lt;/code&gt; for Electron</source>
          <target state="translated">빌드가 성공하면 Electron에 대한 &lt;code&gt;dist&lt;/code&gt; 를 만듭니다</target>
        </trans-unit>
        <trans-unit id="a7c82e0855b7d61f40b4d8e04977013de717f825" translate="yes" xml:space="preserve">
          <source>When the guest page doesn't have node integration this script will still have access to all Node APIs, but global objects injected by Node will be deleted after this script has finished executing.</source>
          <target state="translated">게스트 페이지에 노드 통합이없는 경우이 스크립트는 여전히 모든 노드 API에 액세스 할 수 있지만이 스크립트의 실행이 완료된 후 노드가 삽입 한 전역 객체는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="334e65c0cf0c904209683fd0d549e28f6a7303a7" translate="yes" xml:space="preserve">
          <source>When the module is a set of APIs, like &lt;code&gt;globalShortcut&lt;/code&gt;, use &lt;code&gt;camelCase&lt;/code&gt;.</source>
          <target state="translated">모듈이 &lt;code&gt;globalShortcut&lt;/code&gt; 과 같은 API 세트 인 경우 &lt;code&gt;camelCase&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5448caaac69b12b0b3664bb08a80aedeee75b734" translate="yes" xml:space="preserve">
          <source>When the module itself is a class like &lt;code&gt;BrowserWindow&lt;/code&gt;, use &lt;code&gt;PascalCase&lt;/code&gt;.</source>
          <target state="translated">모듈 자체가 &lt;code&gt;BrowserWindow&lt;/code&gt; 와 같은 클래스 인 경우 &lt;code&gt;PascalCase&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="303b7d0b4b980b8a55487fde8e2b22a30171460c" translate="yes" xml:space="preserve">
          <source>When this API is called, the &lt;code&gt;before-quit&lt;/code&gt; event is not emitted before all windows are closed. As a result you should listen to this event if you wish to perform actions before the windows are closed while a process is quitting, as well as listening to &lt;code&gt;before-quit&lt;/code&gt;.</source>
          <target state="translated">이 API가 호출되면 모든 창이 닫히기 전에 &lt;code&gt;before-quit&lt;/code&gt; 이벤트가 발생하지 않습니다. 결과적으로 프로세스가 종료되는 동안 창이 닫히기 전에 작업을 수행하고 &lt;code&gt;before-quit&lt;/code&gt; 를 수신하려면이 이벤트를 수신해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cab3b6f556851b04e8e55090fa6814c4559ff9da" translate="yes" xml:space="preserve">
          <source>When this attribute is present the &lt;code&gt;webview&lt;/code&gt; container will automatically resize within the bounds specified by the attributes &lt;code&gt;minwidth&lt;/code&gt;, &lt;code&gt;minheight&lt;/code&gt;, &lt;code&gt;maxwidth&lt;/code&gt;, and &lt;code&gt;maxheight&lt;/code&gt;. These constraints do not impact the &lt;code&gt;webview&lt;/code&gt; unless &lt;code&gt;autosize&lt;/code&gt; is enabled. When &lt;code&gt;autosize&lt;/code&gt; is enabled, the &lt;code&gt;webview&lt;/code&gt; container size cannot be less than the minimum values or greater than the maximum.</source>
          <target state="translated">이 속성이 있으면 &lt;code&gt;webview&lt;/code&gt; 컨테이너는 &lt;code&gt;minwidth&lt;/code&gt; , &lt;code&gt;minheight&lt;/code&gt; , &lt;code&gt;maxwidth&lt;/code&gt; 및 &lt;code&gt;maxheight&lt;/code&gt; 속성으로 지정된 범위 내에서 자동으로 크기가 조정됩니다 . &lt;code&gt;autosize&lt;/code&gt; 을 사용 하지 않으면 이러한 제약 조건이 &lt;code&gt;webview&lt;/code&gt; 영향을 미치지 않습니다 . 경우 &lt;code&gt;autosize&lt;/code&gt; 활성화되면, &lt;code&gt;webview&lt;/code&gt; 컨테이너 크기는 이하의 최소 값보다 더 큰 또는 최대 초과 할 수 없다.</target>
        </trans-unit>
        <trans-unit id="bf3a7cc4a51432de841664595d9f417cfed4c267" translate="yes" xml:space="preserve">
          <source>When this attribute is present the &lt;code&gt;webview&lt;/code&gt; contents will be prevented from resizing when the &lt;code&gt;webview&lt;/code&gt; element itself is resized.</source>
          <target state="translated">이 속성이 있으면 &lt;code&gt;webview&lt;/code&gt; 요소 자체의 크기가 조정될 때 &lt;code&gt;webview&lt;/code&gt; 컨텐츠의 크기 가 조정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ccd91f8373c79e62edaf63ffd3e77fd3788a760" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will be able to use browser plugins. Plugins are disabled by default.</source>
          <target state="translated">이 속성이 있으면 &lt;code&gt;webview&lt;/code&gt; 의 게스트 페이지에서 브라우저 플러그인을 사용할 수 있습니다. 플러그인은 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c166798b6dfa01763e657f9e801579c0f5ec5029" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page in &lt;code&gt;webview&lt;/code&gt; will have node integration and can use node APIs like &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;process&lt;/code&gt; to access low level system resources. Node integration is disabled by default in the guest page.</source>
          <target state="translated">이 속성이 존재하면 &lt;code&gt;webview&lt;/code&gt; 의 게스트 페이지에 노드 통합이 있으며 &lt;code&gt;require&lt;/code&gt; 및 &lt;code&gt;process&lt;/code&gt; 와 같은 노드 API를 사용 하여 하위 레벨 시스템 자원에 액세스 할 수 있습니다. 게스트 페이지에서 노드 통합은 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4026a0fe5320731820921d09d7c2b0ff4ab4527b" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page will be allowed to open new windows. Popups are disabled by default.</source>
          <target state="translated">이 속성이 있으면 게스트 페이지에서 새 창을 열 수 있습니다. 팝업은 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cad98fec18b3def3ea6574146acfad2f35d59ea" translate="yes" xml:space="preserve">
          <source>When this attribute is present the guest page will have web security disabled. Web security is enabled by default.</source>
          <target state="translated">이 속성이 있으면 게스트 페이지에서 웹 보안이 비활성화됩니다. 웹 보안은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e3a763e4da6e655f701a386cd29b34907d71eab" translate="yes" xml:space="preserve">
          <source>When updating an upstream dependency, patches may fail to apply cleanly. Often, the conflict can be resolved automatically by git with a 3-way merge. You can instruct &lt;code&gt;git-import-patches&lt;/code&gt; to use the 3-way merge algorithm by passing the &lt;code&gt;-3&lt;/code&gt; argument:</source>
          <target state="translated">업스트림 종속성을 업데이트 할 때 패치가 제대로 적용되지 않을 수 있습니다. 종종 충돌은 3 방향 병합을 사용하여 git에 의해 자동으로 해결 될 수 있습니다. &lt;code&gt;-3&lt;/code&gt; 인수 를 전달하여 3 방향 병합 알고리즘을 사용 하도록 &lt;code&gt;git-import-patches&lt;/code&gt; 에 지시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4769b73e3b434c09dc674c0419173085f791e37a" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge&lt;/a&gt; make sure you do not try to update your app &lt;a href=&quot;https://github.com/electron/windows-installer#handling-squirrel-events&quot;&gt;the first time it runs&lt;/a&gt; (Also see &lt;a href=&quot;https://github.com/electron/electron/issues/7155&quot;&gt;this issue for more info&lt;/a&gt;). It's also recommended to use &lt;a href=&quot;https://github.com/mongodb-js/electron-squirrel-startup&quot;&gt;electron-squirrel-startup&lt;/a&gt; to get desktop shortcuts for your app.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;전자 winstaller&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;전자 단조&lt;/a&gt; 확인 앱 업데이트하려고하지 않는 메이크업을 &lt;a href=&quot;https://github.com/electron/windows-installer#handling-squirrel-events&quot;&gt;처음으로 실행할 때&lt;/a&gt; (또한 참조 &lt;a href=&quot;https://github.com/electron/electron/issues/7155&quot;&gt;추가 정보를 원하시면이 문제를&lt;/a&gt; ). &lt;a href=&quot;https://github.com/mongodb-js/electron-squirrel-startup&quot;&gt;전자 다람쥐 시작&lt;/a&gt; 을 사용 하여 앱의 바탕 화면 바로 가기를 얻는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="25e74dc82902249d38edb1c6669a843d311a64f1" translate="yes" xml:space="preserve">
          <source>When using Electron's built-in module you might encounter an error like this:</source>
          <target state="translated">Electron의 내장 모듈을 사용할 때 다음과 같은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="141b263ff7dbbf3adb2a9bdd1a4baa976917fec9" translate="yes" xml:space="preserve">
          <source>When will Electron upgrade to latest Chrome?</source>
          <target state="translated">Electron은 언제 최신 Chrome으로 업그레이드하나요?</target>
        </trans-unit>
        <trans-unit id="dd0a018dc449c02b4585c1d3bfc398635f53c2a3" translate="yes" xml:space="preserve">
          <source>When will Electron upgrade to latest Node.js?</source>
          <target state="translated">Electron은 언제 최신 Node.js로 업그레이드합니까?</target>
        </trans-unit>
        <trans-unit id="4c447319f3227cf1e5e637ec676465ec2920e3bd" translate="yes" xml:space="preserve">
          <source>When working with Electron, it is important to understand that Electron is not a web browser. It allows you to build feature-rich desktop applications with familiar web technologies, but your code wields much greater power. JavaScript can access the filesystem, user shell, and more. This allows you to build high quality native applications, but the inherent security risks scale with the additional powers granted to your code.</source>
          <target state="translated">Electron으로 작업 할 때 Electron은 웹 브라우저가 아니라는 것을 이해해야합니다. 친숙한 웹 기술로 기능이 풍부한 데스크탑 응용 프로그램을 구축 할 수 있지만 코드의 성능이 훨씬 뛰어납니다. JavaScript는 파일 시스템, 사용자 셸 등에 액세스 할 수 있습니다. 이를 통해 고품질의 기본 애플리케이션을 구축 할 수 있지만 고유 한 보안 위험은 코드에 부여 된 추가 기능으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="2eb5ab70c6dfeb0dcafdde60897e2fc3320e2a08" translate="yes" xml:space="preserve">
          <source>When you are using Goma you can run &lt;code&gt;ninja&lt;/code&gt; with a substantially higher &lt;code&gt;j&lt;/code&gt; value than would normally be supported by your machine.</source>
          <target state="translated">Goma를 사용할 때 일반적으로 컴퓨터에서 지원하는 것보다 훨씬 더 높은 &lt;code&gt;j&lt;/code&gt; 값 으로 &lt;code&gt;ninja&lt;/code&gt; 를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="902e45cab9a8c0513d3f352d52d5f79c91bb854c" translate="yes" xml:space="preserve">
          <source>Whenever you make changes to Electron source code, you'll need to re-run the build before the tests:</source>
          <target state="translated">Electron 소스 코드를 변경할 때마다 테스트 전에 빌드를 다시 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c702e1d705c8ea85e0ef2aa93391701be26f8c6" translate="yes" xml:space="preserve">
          <source>Whenever your Electron application is not behaving the way you wanted it to, an array of debugging tools might help you find coding errors, performance bottlenecks, or optimization opportunities.</source>
          <target state="translated">Electron 응용 프로그램이 원하는 방식으로 작동하지 않을 때마다 다양한 디버깅 도구가 코딩 오류, 성능 병목 현상 또는 최적화 기회를 찾는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3a8fd6b5869b16ab4c16f99eb234faa9be29347" translate="yes" xml:space="preserve">
          <source>Whether the prebuilt binary can run on a distribution depends on whether the distribution includes the libraries that Electron is linked to on the building platform, so only Ubuntu 12.04 is guaranteed to work, but following platforms are also verified to be able to run the prebuilt binaries of Electron:</source>
          <target state="translated">사전 빌드 된 바이너리가 배포판에서 실행될 수 있는지 여부는 배포판에 Electron이 빌딩 플랫폼에 링크 된 라이브러리가 포함되어 있는지 여부에 따라 달라 지므로 Ubuntu 12.04 만 작동하지만 다음 플랫폼에서도 사전 빌드 된 바이너리를 실행할 수 있는지 확인됩니다 전자의 :</target>
        </trans-unit>
        <trans-unit id="2fbd4a88e4f3b445bb4173d274de9ca4504c3527" translate="yes" xml:space="preserve">
          <source>Whether the prebuilt binary can run on a distribution depends on whether the distribution includes the libraries that Electron is linked to on the building platform, so only Ubuntu 18.04 is guaranteed to work, but following platforms are also verified to be able to run the prebuilt binaries of Electron:</source>
          <target state="translated">사전 빌드 된 바이너리가 배포판에서 실행될 수 있는지 여부는 배포판에 Electron이 빌드 플랫폼에 연결된 라이브러리가 포함되어 있는지 여부에 따라 달라 지므로 Ubuntu 18.04 만 작동하도록 보장되지만 다음 플랫폼도 사전 빌드 된 바이너리를 실행할 수 있는지 확인됩니다. 전자의 :</target>
        </trans-unit>
        <trans-unit id="dc2ac02146c42e145d4eb347819c79b5c7f26622" translate="yes" xml:space="preserve">
          <source>Which Process Should I Attach to?</source>
          <target state="translated">어떤 프로세스에 첨부해야합니까?</target>
        </trans-unit>
        <trans-unit id="66ecac3884229beaadc7d5408c7db6b87cd8e328" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;clang-tidy&lt;/code&gt; has a &lt;a href=&quot;https://clang.llvm.org/extra/clang-tidy/checks/list.html&quot;&gt;long list&lt;/a&gt; of possible checks, in Electron only a few are enabled by default. At the moment Electron doesn't have a &lt;code&gt;.clang-tidy&lt;/code&gt; config, so &lt;code&gt;clang-tidy&lt;/code&gt; will find the one from Chromium at &lt;code&gt;src/.clang-tidy&lt;/code&gt; and use the checks which Chromium has enabled. You can change which checks are run by using the &lt;code&gt;--checks=&lt;/code&gt; option. This is passed straight through to &lt;code&gt;clang-tidy&lt;/code&gt;, so see its documentation for full details. Wildcards can be used, and checks can be disabled by prefixing a &lt;code&gt;-&lt;/code&gt;. By default any checks listed are added to those in &lt;code&gt;.clang-tidy&lt;/code&gt;, so if you'd like to limit the checks to specific ones you should first exclude all checks then add back what you want, like &lt;code&gt;--checks=-*,performance*&lt;/code&gt;.</source>
          <target state="translated">하지만 &lt;code&gt;clang-tidy&lt;/code&gt; 가 &lt;a href=&quot;https://clang.llvm.org/extra/clang-tidy/checks/list.html&quot;&gt;긴 목록&lt;/a&gt; 가능한 검사를 전자에 몇 기본적으로 활성화되어 있습니다. 현재 Electron에는 &lt;code&gt;.clang-tidy&lt;/code&gt; 구성이 없으므로 &lt;code&gt;clang-tidy&lt;/code&gt; 는 &lt;code&gt;src/.clang-tidy&lt;/code&gt; 에서 Chromium의 구성을 찾고 Chromium이 활성화 한 검사를 사용합니다. &lt;code&gt;--checks=&lt;/code&gt; 옵션 을 사용하여 실행되는 검사를 변경할 수 있습니다 . 이것은 &lt;code&gt;clang-tidy&lt;/code&gt; 로 직접 전달 되므로 자세한 내용은 설명서를 참조하십시오. 와일드 카드를 사용할 수 있으며 접두사 &lt;code&gt;-&lt;/code&gt; 를 사용하여 검사를 비활성화 할 수 있습니다 . 기본적으로 나열된 모든 검사는 &lt;code&gt;.clang-tidy&lt;/code&gt; 의 검사에 추가됩니다., 따라서 검사를 특정 검사로 제한하려면 먼저 모든 검사를 제외하고 &lt;code&gt;--checks=-*,performance*&lt;/code&gt; 와 같이 원하는 것을 다시 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="60cd049505b0481040968f2f9b26c1ad67d79b98" translate="yes" xml:space="preserve">
          <source>While Electron strives to support new versions of Chromium as soon as possible, developers should be aware that upgrading is a serious undertaking - involving hand-editing dozens or even hundreds of files. Given the resources and contributions available today, Electron will often not be on the very latest version of Chromium, lagging behind by either days or weeks.</source>
          <target state="translated">Electron은 가능한 빨리 새로운 버전의 Chromium을 지원하기 위해 노력하지만, 개발자는 수십 또는 수백 개의 파일을 수동으로 편집하는 업그레이드가 심각한 작업임을 알고 있어야합니다. 오늘날 이용 가능한 자원과 기여를 감안할 때 Electron은 최신 버전의 Chromium에 있지 않아서 며칠 또는 몇 주 뒤쳐 질 것입니다.</target>
        </trans-unit>
        <trans-unit id="8ca3356dd60fb648f919a9b117f6a56a107588e7" translate="yes" xml:space="preserve">
          <source>While Visual Studio is fantastic for inspecting specific code paths, ProcMon's strength is really in observing everything your application is doing with the operating system - it captures File, Registry, Network, Process, and Profiling details of processes. It attempts to log &lt;strong&gt;all&lt;/strong&gt; events occurring and can be quite overwhelming, but if you seek to understand what and how your application is doing to the operating system, it can be a valuable resource.</source>
          <target state="translated">Visual Studio는 특정 코드 경로를 검사하는 데 환상적이지만 ProcMon의 강점은 응용 프로그램이 운영 체제로 수행하는 모든 작업을 관찰하는 데 있습니다. 파일, 레지스트리, 네트워크, 프로세스 및 프로세스의 프로파일 링 세부 정보를 캡처합니다. 그것은 발생하는 &lt;strong&gt;모든&lt;/strong&gt; 이벤트 를 기록하려고 시도하며 압도적 일 수 있지만 응용 프로그램이 운영 체제에서 수행하는 작업과 방법을 이해하려는 경우 귀중한 리소스가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5efae7a4863b54b50a5c7627a3cbf0e1b8dbae26" translate="yes" xml:space="preserve">
          <source>While code and user experience across operating systems are similar, there are subtle differences.</source>
          <target state="translated">운영 체제 전체의 코드 및 사용자 경험은 비슷하지만 미묘한 차이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="79fb2f4661c01ef9414891a60aeac19326f0555e" translate="yes" xml:space="preserve">
          <source>While it &lt;em&gt;is possible&lt;/em&gt; to install &lt;code&gt;snapcraft&lt;/code&gt; on macOS using Homebrew, it is not able to build &lt;code&gt;snap&lt;/code&gt; packages and is focused on managing packages in the store.</source>
          <target state="translated">Homebrew를 사용하여 macOS에 &lt;code&gt;snapcraft&lt;/code&gt; 를 설치할 수 &lt;em&gt;는&lt;/em&gt; 있지만 &lt;code&gt;snap&lt;/code&gt; 패키지 를 작성할 수 없으며 상점의 패키지 관리에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="220283b3c80d6a0ac4503dc976600ec29eb7e24a" translate="yes" xml:space="preserve">
          <source>While it is possible to distribute unsigned apps, it is not recommended. Both Windows and macOS will, by default, prevent either the download or the execution of unsigned applications. Starting with macOS Catalina (version 10.15), users have to go through multiple manual steps to open unsigned applications.</source>
          <target state="translated">서명되지 않은 앱을 배포 할 수 있지만 권장하지 않습니다. 기본적으로 Windows와 macOS는 모두 서명되지 않은 응용 프로그램의 다운로드 또는 실행을 방지합니다. macOS Catalina (버전 10.15)부터 사용자는 서명되지 않은 응용 프로그램을 열려면 여러 수동 단계를 거쳐야합니다.</target>
        </trans-unit>
        <trans-unit id="0d0e9ba968031909bc09b720c66e0f0a84e4b95a" translate="yes" xml:space="preserve">
          <source>While it is possible to distribute unsigned apps, it is not recommended. For example, here's what macOS users see when attempting to start an unsigned app:</source>
          <target state="translated">서명되지 않은 앱을 배포 할 수는 있지만 권장되지는 않습니다. 예를 들어, 서명되지 않은 앱을 시작하려고 할 때 macOS 사용자에게 표시되는 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="33a53300019bb7c1f9ff112f558d93e922bdc881" translate="yes" xml:space="preserve">
          <source>While loading the page, the &lt;code&gt;ready-to-show&lt;/code&gt; event will be emitted when the renderer process has rendered the page for the first time if the window has not been shown yet. Showing the window after this event will have no visual flash:</source>
          <target state="translated">페이지를로드하는 동안 윈도우가 아직 표시되지 않은 경우 렌더러 프로세스가 처음으로 페이지를 렌더링하면 &lt;code&gt;ready-to-show&lt;/code&gt; 이벤트가 생성됩니다. 이 이벤트 후에 창을 표시하면 시각적 플래시가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cd58c44271d1906a0ad7b74ac298f0793f008192" translate="yes" xml:space="preserve">
          <source>While notifications including buttons work with &lt;code&gt;electron-windows-notifications&lt;/code&gt;, handling replies requires the use of &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-interactive-notifications&quot;&gt;&lt;code&gt;electron-windows-interactive-notifications&lt;/code&gt;&lt;/a&gt;, which helps with registering the required COM components and calling your Electron app with the entered user data.</source>
          <target state="translated">버튼을 포함한 알림은 &lt;code&gt;electron-windows-notifications&lt;/code&gt; 과 함께 작동하지만 회신을 처리하려면 &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-interactive-notifications&quot;&gt; &lt;code&gt;electron-windows-interactive-notifications&lt;/code&gt; &lt;/a&gt; 사용해야하는데, 필요한 COM 구성 요소를 등록하고 입력 한 사용자 데이터로 Electron 앱을 호출하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="d26aba7fe0eb35a075a77d317c8091835c77fe8f" translate="yes" xml:space="preserve">
          <source>While still an experimental Electron feature, context isolation adds an additional layer of security. It creates a new JavaScript world for Electron APIs and preload scripts.</source>
          <target state="translated">여전히 실험적인 Electron 기능이지만 컨텍스트 격리는 추가적인 보안 계층을 추가합니다. Electron API 및 사전로드 스크립트를위한 새로운 JavaScript 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dbc2f797c15375e0eef5d01d3d732fb4c832e77f" translate="yes" xml:space="preserve">
          <source>While we make our best effort to backport Chromium security fixes to older versions of Electron, we do not make a guarantee that every fix will be backported. Your best chance at staying secure is to be on the latest stable version of Electron.</source>
          <target state="translated">Chromium 보안 수정 사항을 이전 버전의 Electron으로 백 포트하기 위해 최선을 다하고 있지만 모든 수정 사항이 백 포트된다는 보장은 없습니다. 보안을 유지하는 가장 좋은 기회는 Electron의 최신 안정 버전을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8c6e1711e71c212e285f46131506f42657de4db4" translate="yes" xml:space="preserve">
          <source>Why &amp;amp; How?</source>
          <target state="translated">왜 어떻게?</target>
        </trans-unit>
        <trans-unit id="73317a0cc3fca7989cec5756d5c4e02fa2673cee" translate="yes" xml:space="preserve">
          <source>Why am I having trouble installing Electron?</source>
          <target state="translated">왜 Electron 설치에 문제가 있습니까?</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="c321d4e7b3d7921c4e253b234be1517ab9540f9f" translate="yes" xml:space="preserve">
          <source>Widevine Content Decryption Modules (CDMs) are how streaming services protect content using HTML5 video to web browsers without relying on an NPAPI plugin like Flash or Silverlight. Widevine support is an alternative solution for streaming services that currently rely on Silverlight for playback of DRM-protected video content. It will allow websites to show DRM-protected video content in Firefox without the use of NPAPI plugins. The Widevine CDM runs in an open-source CDM sandbox providing better user security than NPAPI plugins.</source>
          <target state="translated">Widevine Content Decryption Module (CDM)은 스트리밍 서비스가 Flash 또는 Silverlight와 같은 NPAPI 플러그인에 의존하지 않고 HTML5 비디오를 사용하여 웹 브라우저로 콘텐츠를 보호하는 방법입니다. Widevine 지원은 현재 DRM으로 보호 된 비디오 콘텐츠를 재생하기 위해 Silverlight를 사용하는 스트리밍 서비스를위한 대체 솔루션입니다. 웹 사이트에서 NPAPI 플러그인을 사용하지 않고도 Firefox에서 DRM으로 보호 된 비디오 콘텐츠를 표시 할 수 있습니다. Widevine CDM은 NPAPI 플러그인보다 더 나은 사용자 보안을 제공하는 오픈 소스 CDM 샌드 박스에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6467b2754332dd4fdeb9613f876aeb16911698" translate="yes" xml:space="preserve">
          <source>Widevine recommends our browser-based integrations (vendors and browser-based applications) add support for VMP.</source>
          <target state="translated">Widevine은 브라우저 기반 통합 (공급 업체 및 브라우저 기반 애플리케이션)이 VMP 지원을 추가 할 것을 권장합니다.</target>
        </trans-unit>
        <trans-unit id="4f37a25a72973cbeeb64a1d9926a64992946a9ec" translate="yes" xml:space="preserve">
          <source>Will use the proxy server for all hosts except for local addresses (&lt;code&gt;localhost&lt;/code&gt;, &lt;code&gt;127.0.0.1&lt;/code&gt; etc.), &lt;code&gt;google.com&lt;/code&gt; subdomains, hosts that contain the suffix &lt;code&gt;foo.com&lt;/code&gt; and anything at &lt;code&gt;1.2.3.4:5678&lt;/code&gt;.</source>
          <target state="translated">로컬 주소 ( &lt;code&gt;localhost&lt;/code&gt; , &lt;code&gt;127.0.0.1&lt;/code&gt; 등), &lt;code&gt;google.com&lt;/code&gt; 하위 도메인, 접미사 &lt;code&gt;foo.com&lt;/code&gt; 이 포함 된 호스트 및 &lt;code&gt;1.2.3.4:5678&lt;/code&gt; 을 제외한 모든 호스트에 프록시 서버를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="486560c71383e5beb0ed652f6e6b7ff48e996d62" translate="yes" xml:space="preserve">
          <source>Windows &amp;amp; macOS</source>
          <target state="translated">윈도우 및 macOS</target>
        </trans-unit>
        <trans-unit id="f5c27ab76a1e4c1a15e7286184c8ca31392859d8" translate="yes" xml:space="preserve">
          <source>Windows (C++)</source>
          <target state="translated">Windows (C++)</target>
        </trans-unit>
        <trans-unit id="11d23428f7370cd247a07d2abd4fc5c1fd93d443" translate="yes" xml:space="preserve">
          <source>Windows 10 &quot;Anniversary Update&quot; is able to run win32 &lt;code&gt;.exe&lt;/code&gt; binaries by launching them together with a virtualized filesystem and registry. Both are created during compilation by running app and installer inside a Windows Container, allowing Windows to identify exactly which modifications to the operating system are done during installation. Pairing the executable with a virtual filesystem and a virtual registry allows Windows to enable one-click installation and uninstallation.</source>
          <target state="translated">Windows 10 &quot;Anniversary Update&quot;는 가상화 된 파일 시스템 및 레지스트리와 함께 win32 &lt;code&gt;.exe&lt;/code&gt; 바이너리 를 실행하여 실행할 수 있습니다. 둘 다 Windows 컨테이너 내에서 앱과 설치 프로그램을 실행하여 컴파일 중에 작성되므로 Windows는 설치 중에 수행 된 운영 체제 수정 사항을 정확하게 식별 할 수 있습니다. 실행 파일을 가상 파일 시스템 및 가상 레지스트리와 함께 사용하면 Windows에서 한 번의 클릭으로 설치 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35d01b24fe876d766b8f2d9bb6c5c6ef1e129d0f" translate="yes" xml:space="preserve">
          <source>Windows 10 / Server 2012 R2 or higher</source>
          <target state="translated">Windows 10 / Server 2012 R2 이상</target>
        </trans-unit>
        <trans-unit id="6366d0a60cd36482a97adc2ed19d1ac0a2210bb2" translate="yes" xml:space="preserve">
          <source>Windows 10 has a global setting controlling &lt;code&gt;microphone&lt;/code&gt; and &lt;code&gt;camera&lt;/code&gt; access for all win32 applications. It will always return &lt;code&gt;granted&lt;/code&gt; for &lt;code&gt;screen&lt;/code&gt; and for all media types on older versions of Windows.</source>
          <target state="translated">Windows 10에는 모든 win32 응용 프로그램에 대한 &lt;code&gt;microphone&lt;/code&gt; 및 &lt;code&gt;camera&lt;/code&gt; 액세스를 제어하는 전역 설정이 있습니다. 이전 버전의 Windows에서 &lt;code&gt;screen&lt;/code&gt; 및 모든 미디어 유형에 대해 항상 &lt;code&gt;granted&lt;/code&gt; 것으로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ce10e27d33376de09e28a0db5661e561cad5785e" translate="yes" xml:space="preserve">
          <source>Windows 10 on Arm</source>
          <target state="translated">Arm의 Windows 10</target>
        </trans-unit>
        <trans-unit id="dcc00be0ea36fb06bf2213adeaf0325b514dc0b3" translate="yes" xml:space="preserve">
          <source>Windows 10 with Anniversary Update (released August 2nd, 2016)</source>
          <target state="translated">기념일 업데이트가 포함 된 Windows 10 (2016 년 8 월 2 일 릴리스)</target>
        </trans-unit>
        <trans-unit id="4c58bbff259319d82754c22f70e33d70447de6f9" translate="yes" xml:space="preserve">
          <source>Windows 7 / Server 2008 R2 or higher</source>
          <target state="translated">Windows 7 / Server 2008 R2 이상</target>
        </trans-unit>
        <trans-unit id="334b7d1afbc109f119b34e20becc19980ff3fd37" translate="yes" xml:space="preserve">
          <source>Windows 7 and later are supported, older operating systems are not supported (and do not work).</source>
          <target state="translated">Windows 7 이상이 지원되고 이전 운영 체제는 지원되지 않으며 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ee5bbc5871d1c906eadda6091017d0fe8bacb21" translate="yes" xml:space="preserve">
          <source>Windows Notes</source>
          <target state="translated">윈도우 노트</target>
        </trans-unit>
        <trans-unit id="f865270563697d57f2e59f733d48cc9dbadd5ef1" translate="yes" xml:space="preserve">
          <source>Windows Security doesn't like one of the files in the Chromium source code (see &lt;a href=&quot;https://crbug.com/441184&quot;&gt;https://crbug.com/441184&lt;/a&gt;), so it will constantly delete it, causing &lt;code&gt;gclient sync&lt;/code&gt; issues. You can exclude the source tree from being monitored by Windows Security by &lt;a href=&quot;https://support.microsoft.com/en-us/windows/add-an-exclusion-to-windows-security-811816c0-4dfd-af4a-47e4-c301afe13b26&quot;&gt;following these instructions&lt;/a&gt;.</source>
          <target state="translated">Windows 보안은 Chromium 소스 코드 ( &lt;a href=&quot;https://crbug.com/441184&quot;&gt;https://crbug.com/441184 참조&lt;/a&gt; ) 의 파일 중 하나를 좋아하지 않으므로 지속적으로 삭제하여 &lt;code&gt;gclient sync&lt;/code&gt; 문제를 유발 합니다. &lt;a href=&quot;https://support.microsoft.com/en-us/windows/add-an-exclusion-to-windows-security-811816c0-4dfd-af4a-47e4-c301afe13b26&quot;&gt;다음 지침&lt;/a&gt; 에 따라 Windows 보안에서 모니터링되는 소스 트리를 제외 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37f8007d4b7b30af9ebafda2b76b57acc5d7380f" translate="yes" xml:space="preserve">
          <source>Windows Store</source>
          <target state="translated">윈도우 스토어</target>
        </trans-unit>
        <trans-unit id="3184a9e436f78293d8c305cd2743a957389c776e" translate="yes" xml:space="preserve">
          <source>Windows Store Guide</source>
          <target state="translated">Windows 스토어 가이드</target>
        </trans-unit>
        <trans-unit id="694b8f12f921d9dcf2911f7573a6e4baaeb5470c" translate="yes" xml:space="preserve">
          <source>Windows Taskbar</source>
          <target state="translated">Windows 작업 표시 줄</target>
        </trans-unit>
        <trans-unit id="e5cf8cfca1d23e9d9843b8c5476d136e2ea234e4" translate="yes" xml:space="preserve">
          <source>Windows allows apps to define a custom context menu that shows up when users right-click the app's icon in the task bar. That context menu is called &lt;code&gt;JumpList&lt;/code&gt;. You specify custom actions in the &lt;code&gt;Tasks&lt;/code&gt; category of JumpList, as quoted from MSDN:</source>
          <target state="translated">Windows에서는 사용자가 작업 표시 줄에서 앱 아이콘을 마우스 오른쪽 버튼으로 클릭하면 표시되는 사용자 지정 상황에 맞는 메뉴를 앱에서 정의 할 수 있습니다. 해당 컨텍스트 메뉴를 &lt;code&gt;JumpList&lt;/code&gt; 라고 합니다 . MSDN에서 인용 한대로 JumpList 의 &lt;code&gt;Tasks&lt;/code&gt; 범주 에서 사용자 지정 작업을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="ae1a8f17290610745b930cde1c61fe22444792dc" translate="yes" xml:space="preserve">
          <source>Windows allows apps to define a custom context menu that shows up when users right-click the app's icon in the taskbar. That context menu is called &lt;code&gt;JumpList&lt;/code&gt;. You specify custom actions in the &lt;code&gt;Tasks&lt;/code&gt; category of JumpList, as quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#tasks&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">Windows에서는 사용자가 작업 표시 줄에서 앱 아이콘을 마우스 오른쪽 단추로 클릭 할 때 표시되는 사용자 지정 상황에 맞는 메뉴를 앱에서 정의 할 수 있습니다. 컨텍스트 메뉴를 &lt;code&gt;JumpList&lt;/code&gt; 라고 합니다 . &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#tasks&quot;&gt;MSDN&lt;/a&gt; 에서 인용 한대로 JumpList 의 &lt;code&gt;Tasks&lt;/code&gt; 범주 에서 사용자 지정 작업을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="349321ed22626b4b772ef4859b4d372b0da24bff" translate="yes" xml:space="preserve">
          <source>Windows and macOS provide access to a list of recent documents opened by the application via JumpList or dock menu, respectively.</source>
          <target state="translated">Windows와 macOS는 각각 JumpList 또는 dock 메뉴를 통해 응용 프로그램에서 연 최근 문서 목록에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="964ea20e0a793238f705e638741fd19d257698f2" translate="yes" xml:space="preserve">
          <source>Windows arm64</source>
          <target state="translated">Windows arm64</target>
        </trans-unit>
        <trans-unit id="abe9cf24071dba2d0362915c5a532aa82c00e344" translate="yes" xml:space="preserve">
          <source>Windows console example:</source>
          <target state="translated">Windows 콘솔 예 :</target>
        </trans-unit>
        <trans-unit id="734a70675fff03e86e0aa568d3faad3845a4e366" translate="yes" xml:space="preserve">
          <source>Windows on Arm (experimental)</source>
          <target state="translated">Windows on Arm (시험용)</target>
        </trans-unit>
        <trans-unit id="80eca6728491ca1c5717c4542694e2b8d71a494d" translate="yes" xml:space="preserve">
          <source>Windows x64</source>
          <target state="translated">Windows x64</target>
        </trans-unit>
        <trans-unit id="e50be6377e88df26d09f414555afdf325ad726d5" translate="yes" xml:space="preserve">
          <source>Windows x86</source>
          <target state="translated">Windows x86</target>
        </trans-unit>
        <trans-unit id="58c7d8e02f59f93f56f20d7952ddcb5e3903a6ae" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;$LOCALAPPDATA/electron/Cache&lt;/code&gt; or &lt;code&gt;~/AppData/Local/electron/Cache/&lt;/code&gt;</source>
          <target state="translated">Windows : &lt;code&gt;$LOCALAPPDATA/electron/Cache&lt;/code&gt; 또는 &lt;code&gt;~/AppData/Local/electron/Cache/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9045a851aaeccbb4db25cb5597826287bc6349d" translate="yes" xml:space="preserve">
          <source>Wisdom and information about how to build performant websites with JavaScript generally applies to Electron apps, too. To a certain extent, resources discussing how to build performant Node.js applications also apply, but be careful to understand that the term &quot;performance&quot; means different things for a Node.js backend than it does for an application running on a client.</source>
          <target state="translated">JavaScript로 고성능 웹 사이트를 구축하는 방법에 대한 지혜와 정보는 일반적으로 Electron 앱에도 적용됩니다. 성능이 우수한 Node.js 애플리케이션을 빌드하는 방법을 설명하는 리소스도 어느 정도 적용되지만 &quot;성능&quot;이라는 용어는 클라이언트에서 실행되는 애플리케이션과는 다른 Node.js 백엔드를 의미한다는 것을 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="d30c46581aaed5837dc9d7aea25e22f78b2ab681" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Web_Workers_API/Using_web_workers&quot;&gt;Web Workers&lt;/a&gt;, it is possible to run JavaScript in OS-level threads.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Web_Workers_API/Using_web_workers&quot;&gt;Web Workers를&lt;/a&gt; 사용하면 OS 수준 스레드에서 JavaScript를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b04d0f7ea5f0264947afed2f0102b0c6ec08ac4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sendToHost&lt;/code&gt; method and &lt;code&gt;ipc-message&lt;/code&gt; event you can communicate between guest page and embedder page:</source>
          <target state="translated">함께 &lt;code&gt;sendToHost&lt;/code&gt; 의 방법 및 &lt;code&gt;ipc-message&lt;/code&gt; 이벤트는 게스트 페이지 사이 페이지 베더 통신 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2ae7a19a4fc440734d96addea8ee6bc4b8a7b8d4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sendToHost&lt;/code&gt; method and &lt;code&gt;ipc-message&lt;/code&gt; event you can easily communicate between guest page and embedder page:</source>
          <target state="translated">함께 &lt;code&gt;sendToHost&lt;/code&gt; 의 방법 및 &lt;code&gt;ipc-message&lt;/code&gt; 이벤트는 게스트 페이지 및 베더 페이지 사이의 의사 소통을 쉽게 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="88ffe62f17dc37045e37442c6d47e51c4c10429d" translate="yes" xml:space="preserve">
          <source>With Windows 10, the good old win32 executable got a new sibling: The Universal Windows Platform. The new &lt;code&gt;.appx&lt;/code&gt; format does not only enable a number of new powerful APIs like Cortana or Push Notifications, but through the Windows Store, also simplifies installation and updating.</source>
          <target state="translated">Windows 10에서는 이전의 좋은 win32 실행 파일이 새로운 형제 자매 인 Universal Windows Platform을 얻었습니다. 새로운 &lt;code&gt;.appx&lt;/code&gt; 형식은 Cortana 또는 푸시 알림과 같은 여러 가지 강력한 API를 활성화 할뿐만 아니라 Windows 스토어를 통해 설치 및 업데이트를 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="1f198ce5fa64d37fc22581103154daa50000b2a5" translate="yes" xml:space="preserve">
          <source>With no filenames provided, all C/C++/Objective-C files will be checked. You can provide a list of files to be checked by passing the filenames after the options: &lt;code&gt;npm run lint:clang-tiy --out-dir ../out/Testing shell/browser/api/electron_api_app.cc&lt;/code&gt;</source>
          <target state="translated">제공된 파일 이름이 없으면 모든 C / C ++ / Objective-C 파일이 검사됩니다. 다음 옵션 뒤에 파일 이름을 전달하여 확인할 파일 목록을 제공 할 수 있습니다. &lt;code&gt;npm run lint:clang-tiy --out-dir ../out/Testing shell/browser/api/electron_api_app.cc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7444a8fa551527403c33779e3eee6e84e6a0784c" translate="yes" xml:space="preserve">
          <source>With special patches in Electron, Node APIs like &lt;code&gt;fs.readFile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; treat &lt;code&gt;asar&lt;/code&gt; archives as virtual directories, and the files in it as normal files in the filesystem.</source>
          <target state="translated">Electron의 특수 패치를 사용하면 &lt;code&gt;fs.readFile&lt;/code&gt; 과 같은 Node API 는 &lt;code&gt;asar&lt;/code&gt; 아카이브를 가상 디렉토리 &lt;code&gt;require&lt;/code&gt; 취급 하고 파일 시스템의 파일을 일반 파일로 취급해야합니다.</target>
        </trans-unit>
        <trans-unit id="e497fcf7dd15398b1f69d8649a00525472eef952" translate="yes" xml:space="preserve">
          <source>With that in mind, be aware that displaying arbitrary content from untrusted sources poses a severe security risk that Electron is not intended to handle. In fact, the most popular Electron apps (Atom, Slack, Visual Studio Code, etc) display primarily local content (or trusted, secure remote content without Node integration) &amp;ndash; if your application executes code from an online source, it is your responsibility to ensure that the code is not malicious.</source>
          <target state="translated">이를 염두에두고 신뢰할 수없는 출처의 임의의 콘텐츠를 표시하면 Electron이 처리 할 수없는 심각한 보안 위험이 발생할 수 있습니다. 실제로 가장 인기있는 Electron 앱 (Atom, Slack, Visual Studio Code 등)은 주로 로컬 컨텐츠 (또는 노드 통합이없는 신뢰할 수있는 안전한 원격 컨텐츠)를 표시합니다. 응용 프로그램이 온라인 소스에서 코드를 실행하는 경우 사용자의 책임입니다. 코드가 악성이 아닌지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ecd6ffd8a74eeb96b9a6f1e451cdd5fd10b4301" translate="yes" xml:space="preserve">
          <source>Within third-party software</source>
          <target state="translated">타사 소프트웨어 내</target>
        </trans-unit>
        <trans-unit id="aeae44e8927913bd54121fddc9a850b9af8729d6" translate="yes" xml:space="preserve">
          <source>Work like &lt;code&gt;executeJavaScript&lt;/code&gt; but evaluates &lt;code&gt;scripts&lt;/code&gt; in isolated context.</source>
          <target state="translated">&lt;code&gt;executeJavaScript&lt;/code&gt; 와 유사하게 작동 하지만 격리 된 컨텍스트에서 &lt;code&gt;scripts&lt;/code&gt; 를 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="1a79a3d078dd72c4336479de99156512929b127f" translate="yes" xml:space="preserve">
          <source>Workaround</source>
          <target state="translated">Workaround</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="080bff6afac366748a9e8826b023d12e0ae5e58e" translate="yes" xml:space="preserve">
          <source>Working Directory Can Not Be Set to Directories in Archive</source>
          <target state="translated">아카이브에서 작업 디렉토리를 디렉토리로 설정할 수 없음</target>
        </trans-unit>
        <trans-unit id="66d8a082d6bb7a5b98ba1d7770c5e2c191355c20" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;executeJavaScript&lt;/code&gt; but evaluates &lt;code&gt;scripts&lt;/code&gt; in an isolated context.</source>
          <target state="translated">&lt;code&gt;executeJavaScript&lt;/code&gt; 처럼 작동 하지만 격리 된 컨텍스트에서 &lt;code&gt;scripts&lt;/code&gt; 를 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="47e676a5b14ee4c6fc0d4027d39dc491d72f3a03" translate="yes" xml:space="preserve">
          <source>Would mean that if an app already exists in the user directory, if the user chooses to 'Continue Move' then the function would continue with its default behavior and the existing app will be trashed and the active app moved into its place.</source>
          <target state="translated">앱이 사용자 디렉터리에 이미 존재하는 경우 사용자가 '계속 이동'을 선택하면 함수가 기본 동작으로 계속되고 기존 앱이 삭제되고 활성 앱이 제자리로 이동한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="603f6738b229780f6312d653d2719ca8e90fbad8" translate="yes" xml:space="preserve">
          <source>Would require code like this</source>
          <target state="translated">이 같은 코드가 필요합니다</target>
        </trans-unit>
        <trans-unit id="20c2b8ab6754d89ed32e1618e5008372357c1a1b" translate="yes" xml:space="preserve">
          <source>Wrap all other lines at 72 columns.</source>
          <target state="translated">다른 모든 줄은 72 열로 감 쌉니다.</target>
        </trans-unit>
        <trans-unit id="e12e877b8fce199aeedd436214d7a478a8c7e445" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;remark&lt;/a&gt; markdown style</source>
          <target state="translated">&lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;비고&lt;/a&gt; 마크 다운 스타일 작성</target>
        </trans-unit>
        <trans-unit id="a24f7acd965b738562a8925dd3a0056c1559504a" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;remark&lt;/a&gt; markdown style.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/remarkjs/remark&quot;&gt;비고&lt;/a&gt; 마크 다운 스타일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="41e38d35d5df6312940e93e1bfc0d4d0ffa8f2bb" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://npm.im/standard&quot;&gt;standard&lt;/a&gt; JavaScript style.</source>
          <target state="translated">&lt;a href=&quot;https://npm.im/standard&quot;&gt;표준&lt;/a&gt; JavaScript 스타일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d46cafca6386ecc7041846b9ea43c247e89be25" translate="yes" xml:space="preserve">
          <source>Write &lt;a href=&quot;https://www.npmjs.com/package/standard&quot;&gt;standard&lt;/a&gt; JavaScript style.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/standard&quot;&gt;표준&lt;/a&gt; JavaScript 스타일을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f670eb8a4342c7b91aebf05882f35d334e474c5" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;data&lt;/code&gt; to the clipboard.</source>
          <target state="translated">클립 보드에 &lt;code&gt;data&lt;/code&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="bb65681bbed7ce8048aebc293d0f34459c63cfb4" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;image&lt;/code&gt; to the clipboard.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 를 클립 보드에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="da54437162e8a104e186e145268cce134ddc053f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;markup&lt;/code&gt; to the clipboard.</source>
          <target state="translated">클립 보드에 &lt;code&gt;markup&lt;/code&gt; 을 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7c1ac1cebd66e9e8a3fe752d8ee7b645918c3890" translate="yes" xml:space="preserve">
          <source>Writes any unwritten DOMStorage data to disk.</source>
          <target state="translated">쓰지 않은 DOMStorage 데이터를 디스크에 씁니다.</target>
        </trans-unit>
        <trans-unit id="6389daa864759e7d293b20876ac8dd08b550259b" translate="yes" xml:space="preserve">
          <source>Writes any unwritten cookies data to disk.</source>
          <target state="translated">쓰지 않은 쿠키 데이터를 디스크에 씁니다.</target>
        </trans-unit>
        <trans-unit id="75ed034f248f6bd07f37057becf464b71f22dad9" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;buffer&lt;/code&gt; into the clipboard as &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 를 &lt;code&gt;format&lt;/code&gt; 클립 보드에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="6828a9b1f5a570a24ce165ee01f142c478eee997" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the clipboard as plain text.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 를 클립 보드에 일반 텍스트로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="f51b63799e924afe6a523e048271fa5508686a40" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the clipboard in RTF.</source>
          <target state="translated">RTF로 클립 보드에 &lt;code&gt;text&lt;/code&gt; 를 씁니다 .</target>
        </trans-unit>
        <trans-unit id="950161d034b760c637aa0c680a0c480f30107e29" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the find pasteboard (the pasteboard that holds information about the current state of the active application&amp;rsquo;s find panel) as plain text. This method uses synchronous IPC when called from the renderer process.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 를 찾기 대지 (활성 응용 프로그램의 찾기 패널의 현재 상태에 대한 정보를 포함하는 대지)에 일반 텍스트로 씁니다 . 이 메서드는 렌더러 프로세스에서 호출 될 때 동기 IPC를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="57f6663b6f1101e5c0925b32f8a5ba1afed6d245" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;text&lt;/code&gt; into the find pasteboard as plain text. This method uses synchronous IPC when called from the renderer process.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 를 찾기 보드에 일반 텍스트로 씁니다 . 이 메소드는 렌더러 프로세스에서 호출 될 때 동기 IPC를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6318b23e1051f00e01c2d781e9bbc7c6e3e90ae4" translate="yes" xml:space="preserve">
          <source>Writes the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; into the clipboard as a bookmark.</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 과 &lt;code&gt;url&lt;/code&gt; 을 클립 보드에 책갈피로 씁니다 .</target>
        </trans-unit>
        <trans-unit id="2deaea7844ddbbc3c90ece0e68f1369bf008cdd2" translate="yes" xml:space="preserve">
          <source>Writing Your First Electron App</source>
          <target state="translated">첫 전자 앱 작성</target>
        </trans-unit>
        <trans-unit id="59e268145b688915c18fc965e3671f3f8eadcb06" translate="yes" xml:space="preserve">
          <source>Writing release notes is a good way to keep yourself busy while the builds are running. For prior art, see existing releases on &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;the releases page&lt;/a&gt;.</source>
          <target state="translated">릴리스 노트를 작성하면 빌드가 실행되는 동안 바쁘게 지낼 수 있습니다. 선행 기술에 대해서는 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;릴리스 페이지의&lt;/a&gt; 기존 릴리스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97f5bcf8cd359cdc0cc4a3b9d9329c51f7606976" translate="yes" xml:space="preserve">
          <source>Xhosa</source>
          <target state="translated">Xhosa</target>
        </trans-unit>
        <trans-unit id="bc74f22d5bc3094753074502f1c80e3c7e8133d6" translate="yes" xml:space="preserve">
          <source>Yiddish</source>
          <target state="translated">Yiddish</target>
        </trans-unit>
        <trans-unit id="e5a54e6915f59898be35e8933135accabfa3cb89" translate="yes" xml:space="preserve">
          <source>Yoruba</source>
          <target state="translated">Yoruba</target>
        </trans-unit>
        <trans-unit id="3d5ce1aec3a8b67e66a57f5f772730d0b7c02a18" translate="yes" xml:space="preserve">
          <source>You are required to call this method before using any other &lt;code&gt;crashReporter&lt;/code&gt; APIs and in each process (main/renderer) from which you want to collect crash reports. You can pass different options to &lt;code&gt;crashReporter.start&lt;/code&gt; when calling from different processes.</source>
          <target state="translated">다른 &lt;code&gt;crashReporter&lt;/code&gt; API 를 사용하기 전에 충돌 보고서를 수집하려는 각 프로세스 (주 / 렌더러) 에서이 메소드를 호출해야 합니다. 다른 프로세스에서 호출 할 때 다른 옵션을 &lt;code&gt;crashReporter.start&lt;/code&gt; 에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="674533baad5ec5f9a47837f0523748a8125fc712" translate="yes" xml:space="preserve">
          <source>You can add a &lt;code&gt;click&lt;/code&gt; function for additional behavior.</source>
          <target state="translated">추가 동작을 위해 &lt;code&gt;click&lt;/code&gt; 기능을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24a3361f2859ead665330f9d785bfcd1d69a055b" translate="yes" xml:space="preserve">
          <source>You can add menu items to access and clear recent documents by adding the following code snippet to your menu template:</source>
          <target state="translated">메뉴 템플릿에 다음 코드 스 니펫을 추가하여 최근 문서에 액세스하고 삭제할 메뉴 항목을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3357188ae14c581ee4dd006500186765e0f75cb" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;session&lt;/code&gt; of existing pages by using the &lt;code&gt;session&lt;/code&gt; property of &lt;a href=&quot;api/web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt;, or from the &lt;code&gt;session&lt;/code&gt; module.</source>
          <target state="translated">&lt;a href=&quot;api/web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;session&lt;/code&gt; 특성을 사용 하거나 &lt;code&gt;session&lt;/code&gt; 모듈 에서 기존 페이지 의 &lt;code&gt;session&lt;/code&gt; 에 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c44857962108e4e2ff11592e9db509c06445e8dc" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;session&lt;/code&gt; of existing pages by using the &lt;code&gt;session&lt;/code&gt; property of &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt;, or from the &lt;code&gt;session&lt;/code&gt; module.</source>
          <target state="translated">&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;session&lt;/code&gt; 속성을 사용 하거나 &lt;code&gt;session&lt;/code&gt; 모듈 에서 기존 페이지 의 &lt;code&gt;session&lt;/code&gt; 에 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfbffa74e7457bfbd0aca3ec85b73f8557274618" translate="yes" xml:space="preserve">
          <source>You can also attach other fields to the element of the &lt;code&gt;template&lt;/code&gt; and they will become properties of the constructed menu items.</source>
          <target state="translated">또한 &lt;code&gt;template&lt;/code&gt; 의 요소에 다른 필드를 첨부 할 수 있으며 생성 된 메뉴 항목의 속성이됩니다.</target>
        </trans-unit>
        <trans-unit id="8a7fb193c82dfb87208f9cd6f2fe231ae1cccea2" translate="yes" xml:space="preserve">
          <source>You can also attempt to download Electron directly from &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;electron/electron/releases&lt;/a&gt; if installing via &lt;code&gt;npm&lt;/code&gt; is failing.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 을 통한 설치 가 실패한 경우 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;전자 / 전자 / 릴리스&lt;/a&gt; 에서 전자를 직접 다운로드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88d4ff9516463a62640ab86472880e55ac288094" translate="yes" xml:space="preserve">
          <source>You can also build the &lt;code&gt;Debug&lt;/code&gt; target only:</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; 대상 만 빌드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="149ab85a3e2236cce5ca9c64d1c1d0c466e10879" translate="yes" xml:space="preserve">
          <source>You can also check out LLDB's fantastic &lt;a href=&quot;http://lldb.llvm.org/tutorial.html&quot;&gt;manual and tutorial&lt;/a&gt;, which will explain more complex debugging scenarios.</source>
          <target state="translated">더 복잡한 디버깅 시나리오를 설명하는 LLDB의 환상적인 &lt;a href=&quot;http://lldb.llvm.org/tutorial.html&quot;&gt;매뉴얼 및 튜토리얼&lt;/a&gt; 도 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79127c7a7ae453f124aa49599988730a3cf15b77" translate="yes" xml:space="preserve">
          <source>You can also check out LLDB's fantastic &lt;a href=&quot;https://lldb.llvm.org/tutorial.html&quot;&gt;manual and tutorial&lt;/a&gt;, which will explain more complex debugging scenarios.</source>
          <target state="translated">더 복잡한 디버깅 시나리오를 설명하는 LLDB의 환상적인 &lt;a href=&quot;https://lldb.llvm.org/tutorial.html&quot;&gt;매뉴얼과 튜토리얼을&lt;/a&gt; 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="17f2f41538a8ddd36c42f850f00289e5b2b2e99c" translate="yes" xml:space="preserve">
          <source>You can also choose to install modules like other Node projects, and then rebuild the modules for Electron with the &lt;a href=&quot;https://github.com/paulcbetts/electron-rebuild&quot;&gt;&lt;code&gt;electron-rebuild&lt;/code&gt;&lt;/a&gt; package. This module can get the version of Electron and handle the manual steps of downloading headers and building native modules for your app.</source>
          <target state="translated">다른 노드 프로젝트와 같은 모듈을 설치 한 다음 &lt;a href=&quot;https://github.com/paulcbetts/electron-rebuild&quot;&gt; &lt;code&gt;electron-rebuild&lt;/code&gt; &lt;/a&gt; 패키지를 사용하여 Electron 용 모듈을 재구성 할 수도 있습니다 . 이 모듈은 Electron 버전을 가져 와서 헤더를 다운로드하고 앱의 기본 모듈을 작성하는 수동 단계를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="51c0bca819b96d717b0fe1ee63ac132914d7a7b0" translate="yes" xml:space="preserve">
          <source>You can also choose to manually get your app ready for distribution. The steps needed to do this are outlined below.</source>
          <target state="translated">수동으로 앱을 배포 할 준비를하도록 선택할 수도 있습니다. 이를 수행하는 데 필요한 단계는 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="33422c2feb0c4f9fe0cdfebdefc26c9611007394" translate="yes" xml:space="preserve">
          <source>You can also display a web page in an &lt;code&gt;asar&lt;/code&gt; archive with &lt;code&gt;BrowserWindow&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; 를 사용 하여 웹 페이지를 &lt;code&gt;asar&lt;/code&gt; 아카이브 에 표시 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eefd7161ff2de241ca7ce2e52097f5c9df3ed4e0" translate="yes" xml:space="preserve">
          <source>You can also install the &lt;code&gt;electron&lt;/code&gt; command globally in your &lt;code&gt;$PATH&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;$PATH&lt;/code&gt; 에 &lt;code&gt;electron&lt;/code&gt; 명령을 전역 적으로 설치할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="607d2aec976ea2d443563d10651fba01f069e854" translate="yes" xml:space="preserve">
          <source>You can also integrate &lt;code&gt;clang-format&lt;/code&gt; directly into your favorite editors. For further guidance on setting up editor integration, see these pages:</source>
          <target state="translated">&lt;code&gt;clang-format&lt;/code&gt; 선호하는 편집기에 직접 통합 할 수도 있습니다 . 편집기 통합 설정에 대한 추가 지침은 다음 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="352d94a34cea3a3bfcd427896e2f624946ed5945" translate="yes" xml:space="preserve">
          <source>You can also manually toggle these features either within your Electron application or by setting flags in third-party native software.</source>
          <target state="translated">Electron 애플리케이션 내에서 또는 타사 기본 소프트웨어에서 플래그를 설정하여 이러한 기능을 수동으로 전환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="29669981d1e3436e02b3ba7a31b9c5e269cf220e" translate="yes" xml:space="preserve">
          <source>You can also only build the &lt;code&gt;Debug&lt;/code&gt; target:</source>
          <target state="translated">&lt;code&gt;Debug&lt;/code&gt; 대상 만 빌드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5ab297f0f95b207418c4da72e9a1c7bb29f8e43" translate="yes" xml:space="preserve">
          <source>You can also only build the Debug target:</source>
          <target state="translated">디버그 대상 만 빌드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="66bb3347a41e1b9fb0a237679910b2dcf1638937" translate="yes" xml:space="preserve">
          <source>You can also override the local cache location by providing a &lt;code&gt;ELECTRON_CACHE&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;ELECTRON_CACHE&lt;/code&gt; 환경 변수를 제공하여 로컬 캐시 위치를 대체 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35cf77a8616d34eb6709ca16c32d3081d987502c" translate="yes" xml:space="preserve">
          <source>You can also override the local cache location by providing a &lt;code&gt;electron_config_cache&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code&gt;electron_config_cache&lt;/code&gt; 환경 변수를 제공하여 로컬 캐시 위치를 재정의 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="884422854068014fc2a262dfb559ad2619dfb238" translate="yes" xml:space="preserve">
          <source>You can also read &lt;code&gt;frameId&lt;/code&gt; from all incoming IPC messages in the main process.</source>
          <target state="translated">기본 프로세스의 모든 수신 IPC 메시지에서 &lt;code&gt;frameId&lt;/code&gt; 를 읽을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2596ea96c1bbffcf6b0f534d64114e0f0b53f5e8" translate="yes" xml:space="preserve">
          <source>You can also rename the helper app to avoid showing &lt;code&gt;Electron Helper&lt;/code&gt; in the Activity Monitor, but make sure you have renamed the helper app's executable file's name.</source>
          <target state="translated">활동 모니터에 &lt;code&gt;Electron Helper&lt;/code&gt; 가 표시되지 않도록 헬퍼 앱의 이름을 바꿀 수도 있지만 헬퍼 앱의 실행 파일 이름을 변경했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6c048862cb42e282a37a98ccecb852f6068161e2" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;process.noAsar&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to disable the support for &lt;code&gt;asar&lt;/code&gt; in the &lt;code&gt;fs&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;fs&lt;/code&gt; 모듈 에서 &lt;code&gt;asar&lt;/code&gt; 지원을 비활성화하려면 &lt;code&gt;process.noAsar&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5713d12aa1d67d16d27c3c494578de0a5ce489dc" translate="yes" xml:space="preserve">
          <source>You can also set the edited state for a window so that the file icon can indicate whether the document in this window has been modified.</source>
          <target state="translated">또한 파일 아이콘이이 창의 문서가 수정되었는지 여부를 나타낼 수 있도록 창의 편집 상태를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="705058ceae701f430b6d084dc8ffde18f7a95db6" translate="yes" xml:space="preserve">
          <source>You can also set the edited state of a window so that the file icon can indicate whether the document in this window has been modified.</source>
          <target state="translated">파일 아이콘이이 창의 문서가 수정되었는지 여부를 표시 할 수 있도록 창의 편집 상태를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b220d91cb59b1b17b78213208160fd6ef180b59" translate="yes" xml:space="preserve">
          <source>You can also try loading the system wide Pepper Flash plugin instead of shipping the plugins yourself, its path can be received by calling &lt;code&gt;app.getPath('pepperFlashSystemPlugin')&lt;/code&gt;.</source>
          <target state="translated">플러그인을 직접 배송하는 대신 시스템 전체 Pepper Flash 플러그인을로드 할 수도 있습니다. 경로는 &lt;code&gt;app.getPath('pepperFlashSystemPlugin')&lt;/code&gt; 를 호출하여받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7529f85109b29e2b780d777876594cd902fef3a6" translate="yes" xml:space="preserve">
          <source>You can attach the Visual Studio debugger to a running process on a local or remote computer. After the process is running, click Debug / Attach to Process (or press &lt;code&gt;CTRL+ALT+P&lt;/code&gt;) to open the &quot;Attach to Process&quot; dialog box. You can use this capability to debug apps that are running on a local or remote computer, debug multiple processes simultaneously.</source>
          <target state="translated">로컬 또는 원격 컴퓨터에서 실행중인 프로세스에 Visual Studio 디버거를 연결할 수 있습니다. 프로세스가 실행 된 후 프로세스 디버그 / 첨부 (또는 &lt;code&gt;CTRL+ALT+P&lt;/code&gt; 누름 )를 클릭하여 &quot;프로세스에 첨부&quot;대화 상자를여십시오. 이 기능을 사용하여 로컬 또는 원격 컴퓨터에서 실행중인 앱을 디버깅하고 여러 프로세스를 동시에 디버깅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7902864dabc56fde318435eca68e040f8af02183" translate="yes" xml:space="preserve">
          <source>You can be attached to multiple programs when you are debugging, but only one program is active in the debugger at any time. You can set the active program in the &lt;code&gt;Debug Location&lt;/code&gt; toolbar or the &lt;code&gt;Processes window&lt;/code&gt;.</source>
          <target state="translated">디버깅 할 때 여러 프로그램에 연결될 수 있지만 디버거에서 언제든지 하나의 프로그램 만 활성화됩니다. &lt;code&gt;Debug Location&lt;/code&gt; 도구 모음 또는 &lt;code&gt;Processes window&lt;/code&gt; 에서 활성 프로그램을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a350d3e533f07f965cdb43c668f62f67f0546b01" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;BrowserWindow.getCurrentWindow().setSheetOffset(offset)&lt;/code&gt; to change the offset from the window frame where sheets are attached.</source>
          <target state="translated">&lt;code&gt;BrowserWindow.getCurrentWindow().setSheetOffset(offset)&lt;/code&gt; 을 호출 하여 시트가 부착 된 창 프레임에서 오프셋을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2575e99c4414fab2585f584400e51842f37654a5" translate="yes" xml:space="preserve">
          <source>You can check if Pepper Flash plugin was loaded by inspecting &lt;code&gt;navigator.plugins&lt;/code&gt; in the console of devtools (although you can't know if the plugin's path is correct).</source>
          <target state="translated">플러그인의 경로가 정확한지 알 수는 없지만 devtools 콘솔에서 &lt;code&gt;navigator.plugins&lt;/code&gt; 를 검사하여 Pepper Flash 플러그인이로드되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42dc8c0245687efe34adc68c191db5d82c6d60cf" translate="yes" xml:space="preserve">
          <source>You can configure different key combinations based on the user's operating system.</source>
          <target state="translated">사용자 운영 체제에 따라 다른 키 조합을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7878d1b4bdb69bb37382199bb4be7f07987efd6" translate="yes" xml:space="preserve">
          <source>You can create a &lt;code&gt;Session&lt;/code&gt; object in the &lt;code&gt;session&lt;/code&gt; module:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈 에서 &lt;code&gt;Session&lt;/code&gt; 객체를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="691da34d453b6823146e7a41ed89b96511cfbfa2" translate="yes" xml:space="preserve">
          <source>You can create a debug build of electron by following &lt;a href=&quot;build-instructions-osx&quot;&gt;build instructions for macOS&lt;/a&gt;. The bootstrap process will download Release version of libchromiumcontent by default, so you will not be able to step through the chromium source.</source>
          <target state="translated">&lt;a href=&quot;build-instructions-osx&quot;&gt;macOS에 대한 빌드 지시 사항&lt;/a&gt; 에 따라 전자의 디버그 빌드를 작성할 수 있습니다 . 부트 스트랩 프로세스는 기본적으로 릴리스 버전의 libchromiumcontent를 다운로드하므로 크롬 소스를 단계별로 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="011ca56e578c0cb9379817cb9cfba72791cb064e" translate="yes" xml:space="preserve">
          <source>You can directly add &lt;code&gt;--ppapi-flash-path&lt;/code&gt; and &lt;code&gt;--ppapi-flash-version&lt;/code&gt; to the Electron command line or by using the &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; method before the app ready event. Also, turn on &lt;code&gt;plugins&lt;/code&gt; option of &lt;code&gt;BrowserWindow&lt;/code&gt;.</source>
          <target state="translated">Electron 명령 행에 또는 앱 준비 이벤트 전에 &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;--ppapi-flash-path&lt;/code&gt; 및 &lt;code&gt;--ppapi-flash-version&lt;/code&gt; 을 직접 추가 할 수 있습니다 . 또한 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 &lt;code&gt;plugins&lt;/code&gt; 옵션을 켜십시오 .</target>
        </trans-unit>
        <trans-unit id="123a9d29b448655a909099527181ec5843dba849" translate="yes" xml:space="preserve">
          <source>You can download a RDP (Remote Desktop) file to access the VM.</source>
          <target state="translated">RDP (원격 데스크톱) 파일을 다운로드하여 VM에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65b2023e2c0fdab684d49ef119c876e761b7597d" translate="yes" xml:space="preserve">
          <source>You can find more information and documentation in &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;the repository&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;저장소&lt;/a&gt; 에서 자세한 정보와 문서를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="daf9cdabb7d550c6d54c8e55916cf118b232856b" translate="yes" xml:space="preserve">
          <source>You can find more information and documentation on &lt;a href=&quot;https://electronforge.io/&quot;&gt;electronforge.io&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://electronforge.io/&quot;&gt;electronforge.io&lt;/a&gt; 에 대한 자세한 정보 및 문서를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63cfa6015ced471e2df18b0f6c7a6edfc4691ce8" translate="yes" xml:space="preserve">
          <source>You can force-enable or force-disable these warnings by setting &lt;code&gt;ELECTRON_ENABLE_SECURITY_WARNINGS&lt;/code&gt; or &lt;code&gt;ELECTRON_DISABLE_SECURITY_WARNINGS&lt;/code&gt; on either &lt;code&gt;process.env&lt;/code&gt; or the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; 또는 &lt;code&gt;window&lt;/code&gt; 객체 에서 &lt;code&gt;ELECTRON_ENABLE_SECURITY_WARNINGS&lt;/code&gt; 또는 &lt;code&gt;ELECTRON_DISABLE_SECURITY_WARNINGS&lt;/code&gt; 를 설정하여 이러한 경고를 강제로 활성화하거나 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="953d869f7fcf36171aa40fa071f6fd55f8645d44" translate="yes" xml:space="preserve">
          <source>You can get a code signing certificate from a lot of resellers, popular ones include:</source>
          <target state="translated">많은 리셀러로부터 코드 서명 인증서를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d9c2db936d0fbcccd212c6cc235f439d5776d05" translate="yes" xml:space="preserve">
          <source>You can get a code signing certificate from a lot of resellers. Prices vary, so it may be worth your time to shop around. Popular resellers include:</source>
          <target state="translated">많은 리셀러로부터 코드 서명 인증서를받을 수 있습니다. 가격은 다양하므로 시간을내어 쇼핑 할 가치가 있습니다. 인기있는 리셀러는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a7031e39020e97a04c18fa315fca5d2f86392bd5" translate="yes" xml:space="preserve">
          <source>You can install &lt;code&gt;clang-format&lt;/code&gt; and &lt;code&gt;git-clang-format&lt;/code&gt; via &lt;code&gt;npm install -g clang-format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm install -g clang-format&lt;/code&gt; 을 통해 &lt;code&gt;clang-format&lt;/code&gt; 및 &lt;code&gt;git-clang-format&lt;/code&gt; 을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25c54d358ac0f7f630a108746e4da50aeea2bd36" translate="yes" xml:space="preserve">
          <source>You can install modules like other Node projects, and then rebuild the modules for Electron with the &lt;a href=&quot;https://github.com/electron/electron-rebuild&quot;&gt;&lt;code&gt;electron-rebuild&lt;/code&gt;&lt;/a&gt; package. This module can automatically determine the version of Electron and handle the manual steps of downloading headers and rebuilding native modules for your app.</source>
          <target state="translated">다른 Node 프로젝트와 마찬가지로 모듈을 설치 한 다음, &lt;a href=&quot;https://github.com/electron/electron-rebuild&quot;&gt; &lt;code&gt;electron-rebuild&lt;/code&gt; &lt;/a&gt; 패키지로 Electron 용 모듈을 다시 빌드 할 수 있습니다 . 이 모듈은 Electron의 버전을 자동으로 결정하고 헤더를 다운로드하고 앱의 네이티브 모듈을 다시 빌드하는 수동 단계를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f5b5be3f0cde906eb1b152735f5486323a846995" translate="yes" xml:space="preserve">
          <source>You can load a URL using a &lt;code&gt;POST&lt;/code&gt; request with URL-encoded data by doing the following:</source>
          <target state="translated">다음을 수행하여 URL 인코딩 데이터와 함께 &lt;code&gt;POST&lt;/code&gt; 요청을 사용하여 URL을로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd10d83c1f8b415aa26102575f774d29ad21d7c8" translate="yes" xml:space="preserve">
          <source>You can make the test suite run faster by isolating the specific test or block you're currently working on using Mocha's &lt;a href=&quot;https://mochajs.org/#exclusive-tests&quot;&gt;exclusive tests&lt;/a&gt; feature. Append &lt;code&gt;.only&lt;/code&gt; to any &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;it&lt;/code&gt; function call:</source>
          <target state="translated">Mocha의 &lt;a href=&quot;https://mochajs.org/#exclusive-tests&quot;&gt;독점 테스트&lt;/a&gt; 기능 을 사용하여 현재 작업중인 특정 테스트 또는 차단을 격리하여 테스트 스위트를 더 빠르게 실행할 수 있습니다 . 추가] &lt;code&gt;.only&lt;/code&gt; 어떤으로는 &lt;code&gt;describe&lt;/code&gt; 또는 &lt;code&gt;it&lt;/code&gt; 전화 기능 :</target>
        </trans-unit>
        <trans-unit id="c40e436028b76614b34f32db4e107936472ef296" translate="yes" xml:space="preserve">
          <source>You can make use of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;beforeGroupContaining&lt;/code&gt;, &lt;code&gt;afterGroupContaining&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; to control how the item will be placed when building a menu with &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt;.</source>
          <target state="translated">당신은 사용 할 수 있습니다 &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;beforeGroupContaining&lt;/code&gt; , &lt;code&gt;afterGroupContaining&lt;/code&gt; 및 &lt;code&gt;id&lt;/code&gt; 있는 메뉴 만들 때 항목이 배치되는 방식을 제어하는 &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="bd6785b9a3aa2adbe8e3d7b65e17a885374d240d" translate="yes" xml:space="preserve">
          <source>You can make use of &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; to control how the item will be placed when building a menu with &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; 을 사용 하여 메뉴를 만들 때 &lt;code&gt;position&lt;/code&gt; 및 &lt;code&gt;id&lt;/code&gt; 를 사용 하여 항목을 배치하는 방법을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a52d68533d51acdac67e595170dae3e3ce4b371" translate="yes" xml:space="preserve">
          <source>You can not add keyboard, mouse, and scroll event listeners to &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 에 키보드, 마우스 및 스크롤 이벤트 리스너를 추가 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="103d1470c703564b5eac9412b17fd7ba541097af" translate="yes" xml:space="preserve">
          <source>You can not click through the transparent area. We are going to introduce an API to set window shape to solve this, see &lt;a href=&quot;https://github.com/electron/electron/issues/1335&quot;&gt;our issue&lt;/a&gt; for details.</source>
          <target state="translated">투명 영역을 클릭 할 수 없습니다. 이 &lt;a href=&quot;https://github.com/electron/electron/issues/1335&quot;&gt;문제&lt;/a&gt; 를 해결하기 위해 창 모양을 설정하는 API를 소개 하겠습니다 . 자세한 내용 은 문제 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b158860688901c7dea3218deba412af5a62643e3" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;development/testing#unit-tests&quot;&gt;run the tests&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;a href=&quot;development/testing#unit-tests&quot;&gt;테스트를 실행할&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3dfd32605238712584739515d1ad93684c34a67" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;testing#unit-tests&quot;&gt;run the tests&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;a href=&quot;testing#unit-tests&quot;&gt;테스트를 실행할&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43d0fd8d3107a73859ff844de595c6341cdb89c6" translate="yes" xml:space="preserve">
          <source>You can now set breakpoints in any of the indexed files. However, you will not be able to set breakpoints directly in the Chromium source. To set break points in the Chromium source, you can choose Debug &amp;gt; Breakpoints &amp;gt; Create Symbolic Breakpoint and set any function name as the symbol. This will set the breakpoint for all functions with that name, from all the classes if there are more than one. You can also do this step of setting break points prior to attaching the debugger, however, actual breakpoints for symbolic breakpoint functions may not show up until the debugger is attached to the app.</source>
          <target state="translated">이제 인덱싱 된 파일에서 중단 점을 설정할 수 있습니다. 그러나 Chromium 소스에서 직접 중단 점을 설정할 수는 없습니다. Chromium 소스에서 중단 점을 설정하려면 디버그&amp;gt; 중단 점&amp;gt; 기호 중단 점 만들기를 선택하고 함수 이름을 기호로 설정할 수 있습니다. 이것은 둘 이상의 클래스가있는 경우 모든 클래스에서 해당 이름을 가진 모든 함수에 대한 중단 점을 설정합니다. 디버거를 연결하기 전에 중단 점을 설정하는이 단계를 수행 할 수도 있지만 기호 중단 점 함수에 대한 실제 중단 점은 디버거가 앱에 연결될 때까지 표시되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="455952c76ebbeed20b85c8b313c115bc50dd4f3b" translate="yes" xml:space="preserve">
          <source>You can now set breakpoints in any of the indexed files. However, you will not be able to set breakpoints directly in the chromium source. To set break points in the chromium source, you can choose Debug &amp;gt; Breakpoints &amp;gt; Create Symbolic Breakpoint and set any function name as the symbol. This will set the breakpoint for all functions with that name, from all the classes if there are more than one. You can also do this step of setting break points prior to attaching the debugger, however, actual breakpoints for symbolic breakpoint functions may not show up until the debugger is attached to the app.</source>
          <target state="translated">인덱싱 된 파일에서 중단 점을 설정할 수 있습니다. 그러나 크롬 소스에서 직접 중단 점을 설정할 수는 없습니다. 크롬 소스에서 중단 점을 설정하려면 디버그&amp;gt; 중단 점&amp;gt; 심볼릭 중단 점 생성을 선택하고 함수 이름을 심볼로 설정할 수 있습니다. 이것은 하나 이상의 클래스가있는 경우 모든 클래스에서 해당 이름을 가진 모든 함수의 중단 점을 설정합니다. 디버거를 연결하기 전에 중단 점을 설정하는이 단계를 수행 할 수도 있지만 디버거가 앱에 연결될 때까지 기호 브레이크 포인트 기능에 대한 실제 중단 점이 표시되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fc7c2f864522acb02faa43c641450d0e0759652" translate="yes" xml:space="preserve">
          <source>You can only override paths of a &lt;code&gt;name&lt;/code&gt; defined in &lt;code&gt;app.getPath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.getPath&lt;/code&gt; 에 정의 된 &lt;code&gt;name&lt;/code&gt; 경로 만 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d086be4d872211e17cb63f2493c626e54ea1d4cd" translate="yes" xml:space="preserve">
          <source>You can pair your Electron app up with an invisible UWP background task that gets to make full use of Windows 10 features - like push notifications, Cortana integration, or live tiles.</source>
          <target state="translated">Pushn 알림, Cortana 통합 또는 라이브 타일과 같은 Windows 10 기능을 최대한 활용하는 보이지 않는 UWP 백그라운드 작업과 Electron 앱을 페어링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3d04c06d39d93da4ab532e8e4ff54c4a3da33e6" translate="yes" xml:space="preserve">
          <source>You can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to remove it. The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; and you can get the names of all installed DevTools Extensions using the &lt;code&gt;BrowserWindow.getDevToolsExtensions&lt;/code&gt; API.</source>
          <target state="translated">확장의 이름을 &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API에 전달하여 제거 할 수 있습니다. 확장의 이름은 &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; 에 의해 반환되며 &lt;code&gt;BrowserWindow.getDevToolsExtensions&lt;/code&gt; API를 사용하여 설치된 모든 DevTools 확장의 이름을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0632368721c1f00523681b0738f34827edd115e6" translate="yes" xml:space="preserve">
          <source>You can read more about this feature in &lt;a href=&quot;https://github.com/electron/spectron#accessibility-testing&quot;&gt;Spectron's documentation&lt;/a&gt;.</source>
          <target state="translated">이 기능에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/electron/spectron#accessibility-testing&quot;&gt;Spectron의 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf308d85faec62c8e94cc9ac1e71cc6d2201044a" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;Electron.app&lt;/code&gt; to any name you want, and you also have to rename the &lt;code&gt;CFBundleDisplayName&lt;/code&gt;, &lt;code&gt;CFBundleIdentifier&lt;/code&gt; and &lt;code&gt;CFBundleName&lt;/code&gt; fields in the following files:</source>
          <target state="translated">&lt;code&gt;Electron.app&lt;/code&gt; 의 이름을 원하는 이름으로 바꿀 수 있으며 다음 파일에서 &lt;code&gt;CFBundleDisplayName&lt;/code&gt; , &lt;code&gt;CFBundleIdentifier&lt;/code&gt; 및 &lt;code&gt;CFBundleName&lt;/code&gt; 필드의 이름을 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="d6b1806c7fcfb8a31a742627f76667887adaa567" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;electron.exe&lt;/code&gt; to any name you like, and edit its icon and other information with tools like &lt;a href=&quot;https://github.com/atom/rcedit&quot;&gt;rcedit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron.exe&lt;/code&gt; 의 이름을 원하는 이름으로 바꾸고 &lt;a href=&quot;https://github.com/atom/rcedit&quot;&gt;rcedit&lt;/a&gt; 와 같은 도구를 사용하여 아이콘과 기타 정보를 편집 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c29ecd851db335074b30979d04fcab5cb08b1a6a" translate="yes" xml:space="preserve">
          <source>You can rename &lt;code&gt;electron.exe&lt;/code&gt; to any name you like, and edit its icon and other information with tools like &lt;a href=&quot;https://github.com/electron/rcedit&quot;&gt;rcedit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron.exe&lt;/code&gt; 의 이름을 원하는 이름으로 바꾸고 &lt;a href=&quot;https://github.com/electron/rcedit&quot;&gt;rcedit&lt;/a&gt; 와 같은 도구를 사용하여 아이콘 및 기타 정보를 편집 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24329729162bddaa082c5ec4d651c23f548f7973" translate="yes" xml:space="preserve">
          <source>You can rename the &lt;code&gt;electron&lt;/code&gt; executable to any name you like.</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; 실행 파일의 이름을 원하는 이름으로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e7ea65680c746d3f242af3031a92254e55b9662" translate="yes" xml:space="preserve">
          <source>You can request the following paths by the name:</source>
          <target state="translated">이름으로 다음 경로를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3bd22ba5ca9361efa9083963d23ba3b23d9da30" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;npm run lint-docs&lt;/code&gt; to ensure that your documentation changes are formatted correctly.</source>
          <target state="translated">문서 변경 사항이 올바르게 형식화 되도록 &lt;code&gt;npm run lint-docs&lt;/code&gt; 를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5491684e7362dee10f9d0e3039512fc33ce939bb" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;npm run lint&lt;/code&gt; to show any style issues detected by &lt;code&gt;cpplint&lt;/code&gt; and &lt;code&gt;eslint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm run lint&lt;/code&gt; 를 실행 하여 &lt;code&gt;cpplint&lt;/code&gt; 및 &lt;code&gt;eslint&lt;/code&gt; 가 감지 한 모든 스타일 문제를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8347d86718a6e83ce1ce125e67a06e785638cc89" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt; to set thumbnail toolbar in your application:</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window#winsetthumbarbuttonsbuttons-windows&quot;&gt;BrowserWindow.setThumbarButtons&lt;/a&gt; 를 사용 하여 응용 프로그램에서 축소판 도구 모음을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33db9444a53f4fb17238bd1641cc8cdf03e710d3" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;api/app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; to append them in your app's main script before the &lt;a href=&quot;api/app#event-ready&quot;&gt;ready&lt;/a&gt; event of the &lt;a href=&quot;api/app&quot;&gt;app&lt;/a&gt; module is emitted:</source>
          <target state="translated">&lt;a href=&quot;api/app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; 를 사용 하여 &lt;a href=&quot;api/app&quot;&gt;앱&lt;/a&gt; 모듈 의 &lt;a href=&quot;api/app#event-ready&quot;&gt;ready&lt;/a&gt; 이벤트 가 방출 되기 전에 앱의 기본 스크립트에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89141f7800cdb4e9413fbbb1549719ad822e5401" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; to append them in your app's main script before the &lt;a href=&quot;app#event-ready&quot;&gt;ready&lt;/a&gt; event of the &lt;a href=&quot;app&quot;&gt;app&lt;/a&gt; module is emitted:</source>
          <target state="translated">&lt;a href=&quot;app#appcommandlineappendswitchswitch-value&quot;&gt;app.commandLine.appendSwitch&lt;/a&gt; 를 사용 하여 &lt;a href=&quot;app&quot;&gt;app&lt;/a&gt; 모듈 의 &lt;a href=&quot;app#event-ready&quot;&gt;ready&lt;/a&gt; 이벤트 가 발생 하기 전에 app의 기본 스크립트에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcf21cc0d87e5f31370995394a24d4f3274d3678" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;pip&lt;/code&gt; to install it:</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 를 사용 하여 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c9bfef7b6cb014cc46d964754f8eb8d72b0c83c" translate="yes" xml:space="preserve">
          <source>You can use environment variables to override the base URL, the path at which to look for Electron binaries, and the binary filename. The URL used by &lt;code&gt;@electron/get&lt;/code&gt; is composed as follows:</source>
          <target state="translated">환경 변수를 사용하여 기본 URL, Electron 바이너리를 찾을 경로 및 바이너리 파일 이름을 재정의 할 수 있습니다. &lt;code&gt;@electron/get&lt;/code&gt; 사용하는 URL 은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="0055fa44bdb8d2c19ef65f7e2ff8e4f1d2c2e6b7" translate="yes" xml:space="preserve">
          <source>You can use environment variables to override the base URL, the path at which to look for Electron binaries, and the binary filename. The url used by &lt;code&gt;electron-download&lt;/code&gt; is composed as follows:</source>
          <target state="translated">환경 변수를 사용하여 기본 URL, Electron 바이너리를 찾는 경로 및 바이너리 파일 이름을 재정의 할 수 있습니다. &lt;code&gt;electron-download&lt;/code&gt; 사용되는 URL 은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a4c4e60a369679bf8fbad6ee190a02dfc22879a3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; module to detect keyboard events even when the application does not have keyboard focus.</source>
          <target state="translated">응용 프로그램에 키보드 초점이없는 경우에도 &lt;a href=&quot;../api/global-shortcut&quot;&gt;globalShortcut&lt;/a&gt; 모듈을 사용하여 키보드 이벤트를 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7fb299448e01cdbbed2bb67d51243616cbe276c1" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;../api/menu&quot;&gt;Menu&lt;/a&gt; module to configure keyboard shortcuts that will be triggered only when the app is focused. To do so, specify an &lt;a href=&quot;../api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/menu&quot;&gt;메뉴&lt;/a&gt; 모듈을 사용 하여 앱에 포커스가있을 때만 트리거되는 바로 가기 키를 구성 할 수 있습니다. 그렇게하려면 &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem을&lt;/a&gt; 작성할 때 &lt;a href=&quot;../api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt; 특성을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d3d2831735d237c7fb774d6f0a91c2380cd8109" translate="yes" xml:space="preserve">
          <source>You can use this method in conjunction with &lt;code&gt;POST&lt;/code&gt; requests to get the progress of a file upload or other data transfer.</source>
          <target state="translated">이 메서드를 &lt;code&gt;POST&lt;/code&gt; 요청 과 함께 사용 하여 파일 업로드 또는 기타 데이터 전송의 진행률을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1b1b44557c75a0a59b0f5b7b6ce15aede983fe9" translate="yes" xml:space="preserve">
          <source>You can use this property to prompt users to download the arm64 version of your application when they are running the x64 version under Rosetta incorrectly.</source>
          <target state="translated">이 속성을 사용하여 사용자가 Rosetta에서 x64 버전을 잘못 실행하는 경우 응용 프로그램의 arm64 버전을 다운로드하라는 메시지를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9811b52dd0230594469415d465374dd337ddcf2f" translate="yes" xml:space="preserve">
          <source>You can verify Electron's support for multiple &lt;code&gt;ffmpeg&lt;/code&gt; builds by loading the following page. It should work with the default &lt;code&gt;ffmpeg&lt;/code&gt; library distributed with Electron and not work with the &lt;code&gt;ffmpeg&lt;/code&gt; library built without proprietary codecs.</source>
          <target state="translated">다음 페이지를로드하여 Electron의 여러 &lt;code&gt;ffmpeg&lt;/code&gt; 빌드 지원을 확인할 수 있습니다 . Electron과 함께 배포 된 기본 &lt;code&gt;ffmpeg&lt;/code&gt; 라이브러리에서 작동해야하며 독점 코덱없이 빌드 된 &lt;code&gt;ffmpeg&lt;/code&gt; 라이브러리 에서는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0dfae21a241208d0f400d552b5bd94b9b32d51cd" translate="yes" xml:space="preserve">
          <source>You can view the current schema &lt;a href=&quot;https://github.com/electron/electron/blob/master/build/fuses/fuses.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/blob/master/build/fuses/fuses.json&quot;&gt;여기&lt;/a&gt; 에서 현재 스키마를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bac08682e05f25c8217a1c42f655deb84abb9ca2" translate="yes" xml:space="preserve">
          <source>You cannot require or use this module until the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 발생할 때까지이 모듈을 요구하거나 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e8bf13e8245e751b4802f03b07425b2d09adee85" translate="yes" xml:space="preserve">
          <source>You have to replace &lt;code&gt;TEAM_ID&lt;/code&gt; with your Team ID, and replace &lt;code&gt;your.bundle.id&lt;/code&gt; with the Bundle ID of your app.</source>
          <target state="translated">당신은 교체해야 &lt;code&gt;TEAM_ID&lt;/code&gt; 를 당신의 팀 ID로하고, 대체 &lt;code&gt;your.bundle.id&lt;/code&gt; 앱 번들 ID와 함께.</target>
        </trans-unit>
        <trans-unit id="737c32725dc2802f148010342181e212a176f4f9" translate="yes" xml:space="preserve">
          <source>You may get this error if you are using Git Bash for building, you should use PowerShell or VS2015 Command Prompt instead.</source>
          <target state="translated">빌드에 Git Bash를 사용하는 경우이 오류가 발생할 수 있습니다. 대신 PowerShell 또는 VS2015 명령 프롬프트를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec87df6736ceef74f369a1a2b3a325a01f2c94c5" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">렌더러 프로세스 ( &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt; ) 에서 &lt;code&gt;webSecurity&lt;/code&gt; 속성을 비활성화하면 중요한 보안 기능이 비활성화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="809c68eebcbd658bf5a28ebd0d5609d6607416ed" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">렌더러 프로세스 ( &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; ) 에서 &lt;code&gt;webSecurity&lt;/code&gt; 속성을 비활성화하면 중요한 보안 기능 이 비활성화된다는 것을 이미 짐작 하셨을 것 입니다.</target>
        </trans-unit>
        <trans-unit id="16f5f66d65b6cb4033f9b08a6b2e1dc84acccf58" translate="yes" xml:space="preserve">
          <source>You may have already guessed that disabling the &lt;code&gt;webSecurity&lt;/code&gt; property on a renderer process (&lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) disables crucial security features.</source>
          <target state="translated">렌더러 프로세스 ( &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; ) 에서 &lt;code&gt;webSecurity&lt;/code&gt; 속성을 비활성화하면 중요한 보안 기능 이 비활성화된다는 것을 이미 짐작했을 것 입니다.</target>
        </trans-unit>
        <trans-unit id="350523eca5455d9b6069da0060aa3f0cfc950f4e" translate="yes" xml:space="preserve">
          <source>You may have seen permission requests while using Chrome: They pop up whenever the website attempts to use a feature that the user has to manually approve ( like notifications).</source>
          <target state="translated">Chrome을 사용하는 동안 권한 요청이 표시 될 수 있습니다. 웹 사이트에서 사용자가 수동으로 승인해야하는 기능 (예 : 알림)을 사용하려고 할 때마다 팝업이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="67d599e133f6b8bb5259d65510c71eed6af6431a" translate="yes" xml:space="preserve">
          <source>You may need to become familiar with &lt;a href=&quot;https://dev.chromium.org/developers/design-documents/multi-process-architecture&quot;&gt;Chromium's multi-process architecture&lt;/a&gt; to understand the source code better.</source>
          <target state="translated">소스 코드를 더 잘 이해하려면 &lt;a href=&quot;https://dev.chromium.org/developers/design-documents/multi-process-architecture&quot;&gt;Chromium의 다중 프로세스 아키텍처&lt;/a&gt; 에 익숙해 져야 합니다.</target>
        </trans-unit>
        <trans-unit id="5b999e657c521cd8a35442ce167793a09ba65bb9" translate="yes" xml:space="preserve">
          <source>You may need to make sure that any symbols for native modules in your app are loaded correctly. To configure this, head to &lt;em&gt;Debug &amp;gt; Options...&lt;/em&gt; in Visual Studio 2017, and add the folders containing your &lt;code&gt;.pdb&lt;/code&gt; symbols under &lt;em&gt;Debugging &amp;gt; Symbols&lt;/em&gt;.</source>
          <target state="translated">앱의 기본 모듈에 대한 기호가 올바르게로드되었는지 확인해야 할 수 있습니다. 이를 구성하려면 Visual Studio 2017에서 &lt;em&gt;디버그&amp;gt; 옵션 ...&lt;/em&gt; 으로 이동 하고 &lt;em&gt;디버깅&amp;gt; 기호&lt;/em&gt; 아래에 &lt;code&gt;.pdb&lt;/code&gt; 기호가 포함 된 폴더를 추가합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ef5b1357a165876e130f5cbd318a1780624f844" translate="yes" xml:space="preserve">
          <source>You need to fork Electron when you have custom C++ code that you have patched directly into Electron, that either cannot be upstreamed, or has been rejected from the official version. As maintainers of Electron, we very much would like to make your scenario work, so please try as hard as you can to get your changes into the official version of Electron, it will be much much easier on you, and we appreciate your help.</source>
          <target state="translated">Electron에 직접 패치했거나 업스트림 또는 공식 버전에서 거부 된 사용자 지정 C ++ 코드가있는 경우 Electron을 포크해야합니다. Electron의 관리자로서 귀하의 시나리오가 제대로 작동하기를 원하므로 Electron의 공식 버전으로 변경을 가할 수 있도록 최대한 열심히 노력하십시오.</target>
        </trans-unit>
        <trans-unit id="980a43c32430a8925b108d3ba15ede9a7dea3171" translate="yes" xml:space="preserve">
          <source>You should at least follow these steps to improve the security of your application:</source>
          <target state="translated">애플리케이션의 보안을 개선하려면 최소한 다음 단계를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="6eab23de0c0b41bf541250382c2c6b3b81f04a44" translate="yes" xml:space="preserve">
          <source>You should call &lt;code&gt;event.preventDefault()&lt;/code&gt; if you want to handle this event.</source>
          <target state="translated">이 이벤트를 처리하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="599d1f287be39d6874932cae03927eeb8cf260f1" translate="yes" xml:space="preserve">
          <source>You should listen for the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible and certainly before you call &lt;code&gt;purchaseProduct&lt;/code&gt;.</source>
          <target state="translated">가능한 한 빨리 그리고 확실히 &lt;code&gt;purchaseProduct&lt;/code&gt; 를 호출하기 전에 &lt;code&gt;transactions-updated&lt;/code&gt; 이벤트를 수신해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f73fe8be203af225496bda57b697924fb28c527e" translate="yes" xml:space="preserve">
          <source>You should read the &lt;code&gt;contextBridge&lt;/code&gt; documentation linked above to fully understand its limitations. For instance you can't send custom prototypes or symbols over the bridge.</source>
          <target state="translated">제한 사항을 완전히 이해하려면 위에 링크 된 &lt;code&gt;contextBridge&lt;/code&gt; 문서를 읽어야합니다 . 예를 들어 사용자 정의 프로토 타입이나 심볼을 브리지를 통해 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7ce191856aca4e01748d79042799fa5f859e130" translate="yes" xml:space="preserve">
          <source>You should seek to use the &lt;code&gt;steal&lt;/code&gt; option as sparingly as possible.</source>
          <target state="translated">&lt;code&gt;steal&lt;/code&gt; 옵션을 가능한 한 드물게 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7cfafe67fdbe1b85b5f31bd9882e363cbd9092ee" translate="yes" xml:space="preserve">
          <source>You should strive for always using the latest available version of Electron. Whenever a new major version is released, you should attempt to update your app as quickly as possible.</source>
          <target state="translated">항상 최신 버전의 Electron을 사용하도록 노력해야합니다. 새로운 주요 버전이 출시 될 때마다 가능한 한 빨리 앱 업데이트를 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="25022ae46a34743a92d7c60a4644bf7dfe66b5ed" translate="yes" xml:space="preserve">
          <source>You should then see a new Electron window and the app running in your touch bar (or touch bar emulator).</source>
          <target state="translated">그러면 새로운 Electron 창이 나타나고 터치 바 (또는 터치 바 에뮬레이터)에서 앱이 실행되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5d1fe8fbd7545fe8058636f5974778258acd57" translate="yes" xml:space="preserve">
          <source>You will also need the storage account name which is labeled in AppVeyor as the &lt;strong&gt;Disk Storage Account Name&lt;/strong&gt;</source>
          <target state="translated">AppVeyor에서 &lt;strong&gt;디스크 저장소 계정 이름&lt;/strong&gt; 으로 레이블이 지정된 저장소 계정 이름도 필요합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da08e9506f850a29c2bd777d8a4ebe64fca6db4d" translate="yes" xml:space="preserve">
          <source>You will also need to enable Xcode to build against the 10.10 SDK:</source>
          <target state="translated">또한 10.10 SDK에 대해 Xcode를 빌드하도록 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c7da5dfc499fdd4568591cb556a3c9d4088e34d4" translate="yes" xml:space="preserve">
          <source>You will also need to specify</source>
          <target state="translated">또한 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc75557d757d8937c34a0a6db0321d033fea1ffb" translate="yes" xml:space="preserve">
          <source>You will need it to run tests</source>
          <target state="translated">테스트를 실행하려면 필요합니다</target>
        </trans-unit>
        <trans-unit id="eb17188cd12707172ebd4a0d80324f35c7d5472d" translate="yes" xml:space="preserve">
          <source>You will need the credential information available in the AppVeyor build cloud definition.</source>
          <target state="translated">AppVeyor 빌드 클라우드 정의에서 사용할 수있는 자격 증명 정보가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ed14b4eddbd23d9b3c202300dacf0ad37229a156" translate="yes" xml:space="preserve">
          <source>You will need this URI path to copy into a new image.</source>
          <target state="translated">새 이미지로 복사하려면이 URI 경로가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="52881f3453659414c29707380e24217ea2c4eba4" translate="yes" xml:space="preserve">
          <source>You will need to use a debugger that supports the V8 inspector protocol.</source>
          <target state="translated">V8 인스펙터 프로토콜을 지원하는 디버거를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="361946e51d2bc073580e1c501a8c10264494aa8b" translate="yes" xml:space="preserve">
          <source>You will probably get feedback or requests for changes to your pull request. This is a big part of the submission process so don't be discouraged! Some contributors may sign off on the pull request right away. Others may have detailed comments or feedback. This is a necessary part of the process in order to evaluate whether the changes are correct and necessary.</source>
          <target state="translated">풀 요청에 대한 피드백이나 변경 요청이있을 수 있습니다. 이것은 제출 프로세스의 큰 부분이므로 사용하지 마십시오! 일부 기고자는 즉시 풀 요청에서 사인 오프 할 수 있습니다. 다른 사람들은 자세한 의견이나 의견이있을 수 있습니다. 변경 사항이 올 바르고 필요한지 평가하기 위해 프로세스의 필수 부분입니다.</target>
        </trans-unit>
        <trans-unit id="fe0b8d7dbf420b22e6e13eb89352e1aa7f79e37b" translate="yes" xml:space="preserve">
          <source>You'll need Electron S3 credentials in order to create and upload an Electron release. Contact a team member for more information.</source>
          <target state="translated">Electron 릴리스를 생성하고 업로드하려면 Electron S3 자격 증명이 필요합니다. 자세한 내용은 팀원에게 문의하십시오.</target>
        </trans-unit>
        <trans-unit id="ff5efc1a532b42e68ce8aef581250611cf1cebaa" translate="yes" xml:space="preserve">
          <source>You'll need to install &lt;a href=&quot;https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="translated">Chromium 및 해당 종속성을 가져 오는 데 사용되는 도구 세트 인 &lt;a href=&quot;https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt; &lt;code&gt;depot_tools&lt;/code&gt; &lt;/a&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f12c1c6fb7fd133c2004b9c77db021db8e2a1bcc" translate="yes" xml:space="preserve">
          <source>You're running Linux, so you likely already know how to operate a command line client. Open up your favorite client and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available globally:</source>
          <target state="translated">Linux를 실행 중이므로 이미 명령 행 클라이언트를 작동하는 방법을 알고있을 것입니다. 선호하는 클라이언트를 열고 전 세계적으로 &lt;code&gt;node&lt;/code&gt; 및 &lt;code&gt;npm&lt;/code&gt; 을 모두 사용할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0ded77b76a8250eb08d649ea418ad416518dcc2" translate="yes" xml:space="preserve">
          <source>Your Electron application uses the &lt;code&gt;package.json&lt;/code&gt; file as the main entry point (as any other Node.js application). The main script of your application is &lt;code&gt;main.js&lt;/code&gt;, so modify the &lt;code&gt;package.json&lt;/code&gt; file accordingly:</source>
          <target state="translated">Electron 애플리케이션은 &lt;code&gt;package.json&lt;/code&gt; 파일을 기본 진입 점으로 사용합니다 (다른 Node.js 애플리케이션과 마찬가지로). 애플리케이션의 기본 스크립트는 &lt;code&gt;main.js&lt;/code&gt; 이므로 그에 따라 &lt;code&gt;package.json&lt;/code&gt; 파일을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="94546dc238ccb6f10083e4643fccd3987d506629" translate="yes" xml:space="preserve">
          <source>Your app may crash. See the Resource Access section in &lt;a href=&quot;https://developer.apple.com/documentation/security/hardened_runtime&quot;&gt;Hardened Runtime&lt;/a&gt; for more information and entitlements you may need.</source>
          <target state="translated">앱이 충돌 할 수 있습니다. 더 자세한 정보와 필요할 수있는 권한 은 &lt;a href=&quot;https://developer.apple.com/documentation/security/hardened_runtime&quot;&gt;강화 된 런타임&lt;/a&gt; 의 리소스 액세스 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf03b61779d23226860e4d0c72bba57d91839209" translate="yes" xml:space="preserve">
          <source>Your app probably has a lot of JavaScript to run in the renderer process. The trick is to execute operations as quickly as possible without taking away resources needed to keep scrolling smooth, respond to user input, or animations at 60fps.</source>
          <target state="translated">앱에는 렌더러 프로세스에서 실행할 JavaScript가 많이있을 것입니다. 비결은 원활한 스크롤, 사용자 입력 응답 또는 60fps의 애니메이션에 필요한 리소스를 빼앗기지 않고 가능한 한 빨리 작업을 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0ae600b8c0e61b7862ae057aae4f72fc08fe4c86" translate="yes" xml:space="preserve">
          <source>Your application should then always use &lt;code&gt;shouldUseDarkColors&lt;/code&gt; to determine what CSS to apply.</source>
          <target state="translated">그러면 응용 프로그램은 항상 &lt;code&gt;shouldUseDarkColors&lt;/code&gt; 를 사용 하여 적용 할 CSS를 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="88fe7653f8e637e9adb3f29bbf2d709bf1dd6906" translate="yes" xml:space="preserve">
          <source>Your running Electron app should look as follows:</source>
          <target state="translated">실행중인 Electron 앱은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="ea200453e7bf87e19ab051f834d9327c2f973cff" translate="yes" xml:space="preserve">
          <source>Zulu</source>
          <target state="translated">Zulu</target>
        </trans-unit>
        <trans-unit id="a7f16e4a1780885fa9023c094a82d6d8e0a85918" translate="yes" xml:space="preserve">
          <source>[FIXME] something about a Node debugger in Atom that we (e.g. deepak) use and need to confirm doesn't break with the Node upgrade?</source>
          <target state="translated">[FIXME] Atom의 노드 디버거에 대해 (예 : deepak) 사용하고 확인해야하는 노드 업그레이드와 관련이 있습니까?</target>
        </trans-unit>
        <trans-unit id="d1e622507595486ee06db24b1debf11064edd2ba" translate="yes" xml:space="preserve">
          <source>af</source>
          <target state="translated">af</target>
        </trans-unit>
        <trans-unit id="79ffc8beb76bafd8391928a2334fa355c9f171e4" translate="yes" xml:space="preserve">
          <source>alpha releases that have looser stability constraints to betas; for example it would be allowable to admit new features while a stability channel is in &lt;em&gt;alpha&lt;/em&gt;</source>
          <target state="translated">베타에 대한 안정성 제약이 느슨한 알파 릴리스; 예를 들어 안정성 채널에있는 동안 새로운 기능을 인정하는 것이 허용 &lt;em&gt;알파&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96e8155732e8324ae26f64d4516eb6fe696ac84f" translate="yes" xml:space="preserve">
          <source>am</source>
          <target state="translated">am</target>
        </trans-unit>
        <trans-unit id="e8d6e733d567c5bec6368afa56c86475e6aaca13" translate="yes" xml:space="preserve">
          <source>and add the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;renderer.js&lt;/code&gt; 파일을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="bb0bda582005e4e96d78b9b07cb0336e1e0376e6" translate="yes" xml:space="preserve">
          <source>and add the following lines to the &lt;code&gt;renderer.js&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;renderer.js&lt;/code&gt; 파일에 다음 줄을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="3e751165af2ef382a1528cad1fe270c8f561ff9e" translate="yes" xml:space="preserve">
          <source>and preload.js:</source>
          <target state="translated">및 preload.js :</target>
        </trans-unit>
        <trans-unit id="ea6aefc75f681ce5910581960807d4c686c91843" translate="yes" xml:space="preserve">
          <source>and the following behaviors have been changed:</source>
          <target state="translated">다음과 같은 동작이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="0156ce456e2e43579f40f0289b2d7f286eb288a8" translate="yes" xml:space="preserve">
          <source>and then check if it is in the following form:</source>
          <target state="translated">다음 형식인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="7d1043473d55bfa90e8530d35801d4e381bc69f0" translate="yes" xml:space="preserve">
          <source>app</source>
          <target state="translated">app</target>
        </trans-unit>
        <trans-unit id="d8526a79dfe7fef194a2f9f328069a7adfb8c712" translate="yes" xml:space="preserve">
          <source>app.getFileIcon(path[, options], callback)</source>
          <target state="translated">app.getFileIcon (경로 [, 옵션], 콜백)</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="7c35f3e9cde39743aef1bd4868bcde9c7eccd829" translate="yes" xml:space="preserve">
          <source>autoUpdater</source>
          <target state="translated">autoUpdater</target>
        </trans-unit>
        <trans-unit id="90283840d90de49b8e7984bd99b47fee0d4bd50d" translate="yes" xml:space="preserve">
          <source>az</source>
          <target state="translated">az</target>
        </trans-unit>
        <trans-unit id="986b1bc1eb8de89643c50722910f99001c232865" translate="yes" xml:space="preserve">
          <source>be</source>
          <target state="translated">be</target>
        </trans-unit>
        <trans-unit id="d107c0c54600a2d258a0049ae987a2c24eba8c9e" translate="yes" xml:space="preserve">
          <source>be entirely in lowercase with the exception of proper nouns, acronyms, and the words that refer to code, like function/variable names</source>
          <target state="translated">적절한 명사, 두문자어 및 함수 / 변수 이름과 같은 코드를 나타내는 단어를 제외하고는 완전히 소문자로되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="80f87c8847da6c872ce2fc9fec0a98a73ebc578d" translate="yes" xml:space="preserve">
          <source>bg</source>
          <target state="translated">bg</target>
        </trans-unit>
        <trans-unit id="6de8967f3f33cce72fb2858eaa856fcd7fc8d487" translate="yes" xml:space="preserve">
          <source>bh</source>
          <target state="translated">bh</target>
        </trans-unit>
        <trans-unit id="19f38987eafa5d20a236297a8de89ebf546129a0" translate="yes" xml:space="preserve">
          <source>bn</source>
          <target state="translated">bn</target>
        </trans-unit>
        <trans-unit id="3eb65786145ecb71e9dcbb3a09f06a0b3a6c4d2d" translate="yes" xml:space="preserve">
          <source>br</source>
          <target state="translated">br</target>
        </trans-unit>
        <trans-unit id="f33330b10957c582b7110e1dad156a42adeee683" translate="yes" xml:space="preserve">
          <source>bs</source>
          <target state="translated">bs</target>
        </trans-unit>
        <trans-unit id="b48f527a242126660eb562e27dae3f2700ca9a3b" translate="yes" xml:space="preserve">
          <source>build: Changes that affect the build system</source>
          <target state="translated">빌드 : 빌드 시스템에 영향을주는 변경 사항</target>
        </trans-unit>
        <trans-unit id="1c42c72cf95aa1b76609b585b34baf6b501d713e" translate="yes" xml:space="preserve">
          <source>ca</source>
          <target state="translated">ca</target>
        </trans-unit>
        <trans-unit id="9a1150698a42dbd8c0f006210f8304192a85fd06" translate="yes" xml:space="preserve">
          <source>cannot create directory at '...': Filename too long</source>
          <target state="translated">'...'에 디렉토리를 만들 수 없습니다. 파일 이름이 너무 깁니다.</target>
        </trans-unit>
        <trans-unit id="686e00d122df428edeff53d29bf1531490b16b95" translate="yes" xml:space="preserve">
          <source>ci: Changes to our CI configuration files and scripts</source>
          <target state="translated">ci : CI 구성 파일 및 스크립트 변경</target>
        </trans-unit>
        <trans-unit id="e2ab8561c5a8f9967e62486c44211c63bcf7d002" translate="yes" xml:space="preserve">
          <source>clipboard</source>
          <target state="translated">clipboard</target>
        </trans-unit>
        <trans-unit id="87dda20416649f2a6a1b03d4e13d48a80b1a357f" translate="yes" xml:space="preserve">
          <source>co</source>
          <target state="translated">co</target>
        </trans-unit>
        <trans-unit id="e0ffe6d533ae589f2dc2ccc5eea920621aa53fa1" translate="yes" xml:space="preserve">
          <source>commit these removals</source>
          <target state="translated">이 제거를 저 지르다</target>
        </trans-unit>
        <trans-unit id="e8da7d556b502f8541028ab16637e6261eaab7ba" translate="yes" xml:space="preserve">
          <source>contain a short description of the change (preferably 50 characters or less, and no more than 72 characters)</source>
          <target state="translated">변경 사항에 대한 간단한 설명을 포함합니다 (바람직하게는 50 자 이하, 72 자 이하)</target>
        </trans-unit>
        <trans-unit id="c6e8bf1842201de6f642c946baebd04db39926c7" translate="yes" xml:space="preserve">
          <source>contentTracing</source>
          <target state="translated">contentTracing</target>
        </trans-unit>
        <trans-unit id="e207fb0b529defa80d83a2a638203500b3e43a2f" translate="yes" xml:space="preserve">
          <source>contentTracing.getCategories(callback)</source>
          <target state="translated">contentTracing.getCategories(callback)</target>
        </trans-unit>
        <trans-unit id="b1177a88aaa122a06663c845a5c297325703cefb" translate="yes" xml:space="preserve">
          <source>contentTracing.getTraceBufferUsage(callback)</source>
          <target state="translated">contentTracing.getTraceBufferUsage(callback)</target>
        </trans-unit>
        <trans-unit id="da86ef1fee09f8f980c274f71183db735aedc25b" translate="yes" xml:space="preserve">
          <source>contentTracing.startRecording(options, callback)</source>
          <target state="translated">contentTracing.startRecording (옵션, 콜백)</target>
        </trans-unit>
        <trans-unit id="04702090728a799b51ea90dd01d824816baf3578" translate="yes" xml:space="preserve">
          <source>contentTracing.stopRecording(resultFilePath, callback)</source>
          <target state="translated">contentTracing.stopRecording(resultFilePath, callback)</target>
        </trans-unit>
        <trans-unit id="5d34e0ab242b0663cfb2ca448072f35785dfdcb5" translate="yes" xml:space="preserve">
          <source>contents.addWorkSpace()</source>
          <target state="translated">contents.addWorkSpace()</target>
        </trans-unit>
        <trans-unit id="8308c5515f0d23f50e0e844c1a9523dae0ba5b0b" translate="yes" xml:space="preserve">
          <source>contents.beginFrameSubscription()</source>
          <target state="translated">contents.beginFrameSubscription()</target>
        </trans-unit>
        <trans-unit id="e1899c0f3cb1326b4956eb52f735faf8a4245178" translate="yes" xml:space="preserve">
          <source>contents.canGoBack()</source>
          <target state="translated">contents.canGoBack()</target>
        </trans-unit>
        <trans-unit id="706e721f2095c4b482944db72adf69f699724fed" translate="yes" xml:space="preserve">
          <source>contents.canGoForward()</source>
          <target state="translated">contents.canGoForward()</target>
        </trans-unit>
        <trans-unit id="4ec1504b48bb5c0000b806baeab86d4ad9956080" translate="yes" xml:space="preserve">
          <source>contents.canGoToOffset()</source>
          <target state="translated">contents.canGoToOffset()</target>
        </trans-unit>
        <trans-unit id="666daf2ff7f3f0df34b0d5f23814ecd233482b0a" translate="yes" xml:space="preserve">
          <source>contents.capturePage()</source>
          <target state="translated">contents.capturePage()</target>
        </trans-unit>
        <trans-unit id="7587d33f8941b65ce49c12983d38925f812649de" translate="yes" xml:space="preserve">
          <source>contents.capturePage([rect, ]callback)</source>
          <target state="translated">contents.capturePage([rect, ]callback)</target>
        </trans-unit>
        <trans-unit id="23346e43c7b9680a9ba90cf280d1a940744a35e5" translate="yes" xml:space="preserve">
          <source>contents.clearHistory()</source>
          <target state="translated">contents.clearHistory()</target>
        </trans-unit>
        <trans-unit id="8524266890b593106d5deacbb930197ffd101d9d" translate="yes" xml:space="preserve">
          <source>contents.closeDevTools()</source>
          <target state="translated">contents.closeDevTools()</target>
        </trans-unit>
        <trans-unit id="b3ebb734de76776dac43770ff6200c8e5b1b7578" translate="yes" xml:space="preserve">
          <source>contents.copy()</source>
          <target state="translated">contents.copy()</target>
        </trans-unit>
        <trans-unit id="b1e18292a9352c6d0da0a4130dd2e06d1b13b9bc" translate="yes" xml:space="preserve">
          <source>contents.copyImageAt()</source>
          <target state="translated">contents.copyImageAt()</target>
        </trans-unit>
        <trans-unit id="3eab524693a7aca86c96d10a79ddfd3e1a0c0e45" translate="yes" xml:space="preserve">
          <source>contents.cut()</source>
          <target state="translated">contents.cut()</target>
        </trans-unit>
        <trans-unit id="c71574b791e7699dd52221a34c5bce063d1311d3" translate="yes" xml:space="preserve">
          <source>contents.debugger</source>
          <target state="translated">contents.debugger</target>
        </trans-unit>
        <trans-unit id="2d3771c1602bc08d1335faeda63926c4cb7223a2" translate="yes" xml:space="preserve">
          <source>contents.delete()</source>
          <target state="translated">contents.delete()</target>
        </trans-unit>
        <trans-unit id="bf41a35b75f6413c14f7419bd855dac8e7312c78" translate="yes" xml:space="preserve">
          <source>contents.devToolsWebContents</source>
          <target state="translated">contents.devToolsWebContents</target>
        </trans-unit>
        <trans-unit id="944127f66383d12d32699cccf0bb982ab7cae316" translate="yes" xml:space="preserve">
          <source>contents.disableDeviceEmulation()</source>
          <target state="translated">contents.disableDeviceEmulation()</target>
        </trans-unit>
        <trans-unit id="1a27d07570760f582d988280a0a5144475353038" translate="yes" xml:space="preserve">
          <source>contents.downloadURL()</source>
          <target state="translated">contents.downloadURL()</target>
        </trans-unit>
        <trans-unit id="c34c4de57a8a2aac0a45f82d6984c7709f98427f" translate="yes" xml:space="preserve">
          <source>contents.enableDeviceEmulation()</source>
          <target state="translated">contents.enableDeviceEmulation()</target>
        </trans-unit>
        <trans-unit id="8063a4cf8baca58adfd0665d19e2dc9953c7b077" translate="yes" xml:space="preserve">
          <source>contents.endFrameSubscription()</source>
          <target state="translated">contents.endFrameSubscription()</target>
        </trans-unit>
        <trans-unit id="6375425bdf0a950a574bdfdc86dfb5c70e36c71f" translate="yes" xml:space="preserve">
          <source>contents.executeJavaScript()</source>
          <target state="translated">contents.executeJavaScript()</target>
        </trans-unit>
        <trans-unit id="f9d99887421f8b8fe5033f985bd7a05909c8a0d8" translate="yes" xml:space="preserve">
          <source>contents.executeJavaScript(code[, userGesture, callback])</source>
          <target state="translated">contents.executeJavaScript(code[, userGesture, callback])</target>
        </trans-unit>
        <trans-unit id="2c1816b999c0170f9ed8cd4d2b06149162919de2" translate="yes" xml:space="preserve">
          <source>contents.findInPage()</source>
          <target state="translated">contents.findInPage()</target>
        </trans-unit>
        <trans-unit id="ae42566c1f7a2f8e225eb56de15f3cf116d0ce66" translate="yes" xml:space="preserve">
          <source>contents.focus()</source>
          <target state="translated">contents.focus()</target>
        </trans-unit>
        <trans-unit id="bc1e236a0f1b917166ec88b6d6717de8e1a4987f" translate="yes" xml:space="preserve">
          <source>contents.getFrameRate()</source>
          <target state="translated">contents.getFrameRate()</target>
        </trans-unit>
        <trans-unit id="2d3337106dcd094140102bf480c51d02e59293df" translate="yes" xml:space="preserve">
          <source>contents.getOSProcessId()</source>
          <target state="translated">contents.getOSProcessId()</target>
        </trans-unit>
        <trans-unit id="83cfd68594ff24e90e331bdfb02242835c1f5b4c" translate="yes" xml:space="preserve">
          <source>contents.getPrinters()</source>
          <target state="translated">contents.getPrinters()</target>
        </trans-unit>
        <trans-unit id="86d63109b6fd1b73eb2eebb5c1fc06678ac95aa2" translate="yes" xml:space="preserve">
          <source>contents.getTitle()</source>
          <target state="translated">contents.getTitle()</target>
        </trans-unit>
        <trans-unit id="1e867041f04950bdea47bcba2b7855c5083d3128" translate="yes" xml:space="preserve">
          <source>contents.getURL()</source>
          <target state="translated">contents.getURL()</target>
        </trans-unit>
        <trans-unit id="f56534a9a43aac19db2c303a290be444c3b64c77" translate="yes" xml:space="preserve">
          <source>contents.getUserAgent()</source>
          <target state="translated">contents.getUserAgent()</target>
        </trans-unit>
        <trans-unit id="b637d9f2a93c48e9dc8c1759691b421bede8d261" translate="yes" xml:space="preserve">
          <source>contents.getWebRTCIPHandlingPolicy()</source>
          <target state="translated">contents.getWebRTCIPHandlingPolicy()</target>
        </trans-unit>
        <trans-unit id="d11748bb44e05ad77aca5f2e267928801a03dd90" translate="yes" xml:space="preserve">
          <source>contents.getZoomFactor()</source>
          <target state="translated">contents.getZoomFactor()</target>
        </trans-unit>
        <trans-unit id="338f23cb95183ac6315f0107232f4133d27ec6ec" translate="yes" xml:space="preserve">
          <source>contents.getZoomLevel()</source>
          <target state="translated">contents.getZoomLevel()</target>
        </trans-unit>
        <trans-unit id="b71ae4236458ed0eec833f9ec281897b3a5a7a5a" translate="yes" xml:space="preserve">
          <source>contents.goBack()</source>
          <target state="translated">contents.goBack()</target>
        </trans-unit>
        <trans-unit id="e6d794fe68de5ff7a79b9681deef98bfcfe1325f" translate="yes" xml:space="preserve">
          <source>contents.goForward()</source>
          <target state="translated">contents.goForward()</target>
        </trans-unit>
        <trans-unit id="e2f6bf0657a5592b76b687b72fe9e8b04dbd207b" translate="yes" xml:space="preserve">
          <source>contents.goToIndex()</source>
          <target state="translated">contents.goToIndex()</target>
        </trans-unit>
        <trans-unit id="db46192a64951da189460b0859f81f32fc48f591" translate="yes" xml:space="preserve">
          <source>contents.goToOffset()</source>
          <target state="translated">contents.goToOffset()</target>
        </trans-unit>
        <trans-unit id="7e3acba3e9e98e79468d91c954dce088edcd649e" translate="yes" xml:space="preserve">
          <source>contents.hasServiceWorker()</source>
          <target state="translated">contents.hasServiceWorker()</target>
        </trans-unit>
        <trans-unit id="fcbeb4702d13a5c484a3de7ca1b0f074646707d2" translate="yes" xml:space="preserve">
          <source>contents.hostWebContents</source>
          <target state="translated">contents.hostWebContents</target>
        </trans-unit>
        <trans-unit id="37811e7ed82f9143266db0907d9d009b758330c9" translate="yes" xml:space="preserve">
          <source>contents.id</source>
          <target state="translated">contents.id</target>
        </trans-unit>
        <trans-unit id="ec5c48c668850e08653206ee09adfba2948c3b15" translate="yes" xml:space="preserve">
          <source>contents.insertCSS()</source>
          <target state="translated">contents.insertCSS()</target>
        </trans-unit>
        <trans-unit id="34080e44a40509cb4061a55eded32e6e52881af5" translate="yes" xml:space="preserve">
          <source>contents.insertText()</source>
          <target state="translated">contents.insertText()</target>
        </trans-unit>
        <trans-unit id="81ae5edcdd3efd055540b6bf8bc636845d0b998c" translate="yes" xml:space="preserve">
          <source>contents.inspectElement()</source>
          <target state="translated">contents.inspectElement()</target>
        </trans-unit>
        <trans-unit id="51b6c376b85a2c5ef88f36474a001a8f813516cb" translate="yes" xml:space="preserve">
          <source>contents.inspectServiceWorker()</source>
          <target state="translated">contents.inspectServiceWorker()</target>
        </trans-unit>
        <trans-unit id="f2a15a626c65736ca0344ea8e4e09297fcbdc4e8" translate="yes" xml:space="preserve">
          <source>contents.invalidate()</source>
          <target state="translated">contents.invalidate()</target>
        </trans-unit>
        <trans-unit id="80f7f332badc58ac6dd74454864686428eb0017c" translate="yes" xml:space="preserve">
          <source>contents.isAudioMuted()</source>
          <target state="translated">contents.isAudioMuted()</target>
        </trans-unit>
        <trans-unit id="19d94a7e6461355534c08bc14fb3b1ec35be7626" translate="yes" xml:space="preserve">
          <source>contents.isCrashed()</source>
          <target state="translated">contents.isCrashed()</target>
        </trans-unit>
        <trans-unit id="dab5e9622de501c1fd10c2cb0f86482d01e75711" translate="yes" xml:space="preserve">
          <source>contents.isDestroyed()</source>
          <target state="translated">contents.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="96dbb0cf8953a6fc650821361414751ee7929fed" translate="yes" xml:space="preserve">
          <source>contents.isDevToolsFocused()</source>
          <target state="translated">contents.isDevToolsFocused()</target>
        </trans-unit>
        <trans-unit id="3b8c88c2d0665869578e9872731be3c932ded6ac" translate="yes" xml:space="preserve">
          <source>contents.isDevToolsOpened()</source>
          <target state="translated">contents.isDevToolsOpened()</target>
        </trans-unit>
        <trans-unit id="32fee53fd8ae118f772994873fdfb0971e78d898" translate="yes" xml:space="preserve">
          <source>contents.isFocused()</source>
          <target state="translated">contents.isFocused()</target>
        </trans-unit>
        <trans-unit id="795787685cf8cac8beeea5b232d7a2084f6fddeb" translate="yes" xml:space="preserve">
          <source>contents.isLoading()</source>
          <target state="translated">contents.isLoading()</target>
        </trans-unit>
        <trans-unit id="642fe464529ec5c4cca9e1f4b720cc356f49cdf9" translate="yes" xml:space="preserve">
          <source>contents.isLoadingMainFrame()</source>
          <target state="translated">contents.isLoadingMainFrame()</target>
        </trans-unit>
        <trans-unit id="dee8ea12adbe77373351a73e87936bc816ac817f" translate="yes" xml:space="preserve">
          <source>contents.isOffscreen()</source>
          <target state="translated">contents.isOffscreen()</target>
        </trans-unit>
        <trans-unit id="62a9d3ca266bf2afb406773f54d9d8f6c8f1d5b3" translate="yes" xml:space="preserve">
          <source>contents.isPainting()</source>
          <target state="translated">contents.isPainting()</target>
        </trans-unit>
        <trans-unit id="0d56d6662a454291ec57ccf51a78ba7afbc8994e" translate="yes" xml:space="preserve">
          <source>contents.isWaitingForResponse()</source>
          <target state="translated">contents.isWaitingForResponse()</target>
        </trans-unit>
        <trans-unit id="696cfe7a99bd4fa8430ef16a7263236118eba642" translate="yes" xml:space="preserve">
          <source>contents.loadFile()</source>
          <target state="translated">contents.loadFile()</target>
        </trans-unit>
        <trans-unit id="ac74ee46e8e9c66723ffa624dfcd587d48d0ebde" translate="yes" xml:space="preserve">
          <source>contents.loadURL()</source>
          <target state="translated">contents.loadURL()</target>
        </trans-unit>
        <trans-unit id="593ef47136dbbf68040286f5225e333f3437ce23" translate="yes" xml:space="preserve">
          <source>contents.openDevTools()</source>
          <target state="translated">contents.openDevTools()</target>
        </trans-unit>
        <trans-unit id="09c2b75da099f909825615a4e907cc0b7462dfba" translate="yes" xml:space="preserve">
          <source>contents.paste()</source>
          <target state="translated">contents.paste()</target>
        </trans-unit>
        <trans-unit id="4cb96f4c20262a8fff71422c01a2425927d5eeae" translate="yes" xml:space="preserve">
          <source>contents.pasteAndMatchStyle()</source>
          <target state="translated">contents.pasteAndMatchStyle()</target>
        </trans-unit>
        <trans-unit id="81b431b6ec165b46362b0efcdb9334a08fe8a1d1" translate="yes" xml:space="preserve">
          <source>contents.print()</source>
          <target state="translated">contents.print()</target>
        </trans-unit>
        <trans-unit id="d75d7754268a8c53022aba408a84c449fb4d7276" translate="yes" xml:space="preserve">
          <source>contents.printToPDF()</source>
          <target state="translated">contents.printToPDF()</target>
        </trans-unit>
        <trans-unit id="90a43a3b774d0c7fe58ce1d7c086f0f14da3a8e2" translate="yes" xml:space="preserve">
          <source>contents.printToPDF(options, callback)</source>
          <target state="translated">contents.printToPDF (옵션, 콜백)</target>
        </trans-unit>
        <trans-unit id="f726117ef3313d5f0d3d6f882a0abf72ea34b419" translate="yes" xml:space="preserve">
          <source>contents.redo()</source>
          <target state="translated">contents.redo()</target>
        </trans-unit>
        <trans-unit id="d3de54fb454916ffd4d59eb7c43b9046eed8834b" translate="yes" xml:space="preserve">
          <source>contents.reload()</source>
          <target state="translated">contents.reload()</target>
        </trans-unit>
        <trans-unit id="0d9e112f61e440b7054ffe9ee9a63c23f898e8c5" translate="yes" xml:space="preserve">
          <source>contents.reloadIgnoringCache()</source>
          <target state="translated">contents.reloadIgnoringCache()</target>
        </trans-unit>
        <trans-unit id="4ddc6b0390982389df4510d6348305519353f840" translate="yes" xml:space="preserve">
          <source>contents.removeWorkSpace()</source>
          <target state="translated">contents.removeWorkSpace()</target>
        </trans-unit>
        <trans-unit id="ed2c20bd48ac72e47bc4a462729e6466619fbbc1" translate="yes" xml:space="preserve">
          <source>contents.replace()</source>
          <target state="translated">contents.replace()</target>
        </trans-unit>
        <trans-unit id="b9d32c5ed34524d834559dddb981e3ad8a0caed1" translate="yes" xml:space="preserve">
          <source>contents.replaceMisspelling()</source>
          <target state="translated">contents.replaceMisspelling()</target>
        </trans-unit>
        <trans-unit id="144079e827242a88ab63bdc86e1d8f400a9ef51a" translate="yes" xml:space="preserve">
          <source>contents.savePage()</source>
          <target state="translated">contents.savePage()</target>
        </trans-unit>
        <trans-unit id="bfb7889fde9602381ba7111a849da8784f48e5ee" translate="yes" xml:space="preserve">
          <source>contents.savePage(fullPath, saveType, callback)</source>
          <target state="translated">contents.savePage(fullPath, saveType, callback)</target>
        </trans-unit>
        <trans-unit id="6242a8a217cf45a1610040fab88aba413aa8840a" translate="yes" xml:space="preserve">
          <source>contents.selectAll()</source>
          <target state="translated">contents.selectAll()</target>
        </trans-unit>
        <trans-unit id="4184e23683c85a27be747fb8449781d29ec0a347" translate="yes" xml:space="preserve">
          <source>contents.send()</source>
          <target state="translated">contents.send()</target>
        </trans-unit>
        <trans-unit id="2f6085f458745d9abb446eb7ac62d2ac1d07d223" translate="yes" xml:space="preserve">
          <source>contents.sendInputEvent()</source>
          <target state="translated">contents.sendInputEvent()</target>
        </trans-unit>
        <trans-unit id="74bc278a47db1a7eb85bb0c508e761ba030ead6c" translate="yes" xml:space="preserve">
          <source>contents.session</source>
          <target state="translated">contents.session</target>
        </trans-unit>
        <trans-unit id="8091443ce7241e2c63a984cae62b84fc0a1cfbe2" translate="yes" xml:space="preserve">
          <source>contents.setAudioMuted()</source>
          <target state="translated">contents.setAudioMuted()</target>
        </trans-unit>
        <trans-unit id="f1675f29345099c17aef4d65d49e8fb87e705825" translate="yes" xml:space="preserve">
          <source>contents.setDevToolsWebContents()</source>
          <target state="translated">contents.setDevToolsWebContents()</target>
        </trans-unit>
        <trans-unit id="e0e78f520cb9f3243d69e7d031e45a2f5c048fb5" translate="yes" xml:space="preserve">
          <source>contents.setFrameRate()</source>
          <target state="translated">contents.setFrameRate()</target>
        </trans-unit>
        <trans-unit id="0cbf69bf3f32cd489c33b6e51f857cda9f577c04" translate="yes" xml:space="preserve">
          <source>contents.setIgnoreMenuShortcuts()</source>
          <target state="translated">contents.setIgnoreMenuShortcuts()</target>
        </trans-unit>
        <trans-unit id="a7826b430234c7ad974fe01e6d501e7469622d1d" translate="yes" xml:space="preserve">
          <source>contents.setLayoutZoomLevelLimits()</source>
          <target state="translated">contents.setLayoutZoomLevelLimits()</target>
        </trans-unit>
        <trans-unit id="5aae337e979ba637399bc7e42569fc8449614869" translate="yes" xml:space="preserve">
          <source>contents.setSize()</source>
          <target state="translated">contents.setSize()</target>
        </trans-unit>
        <trans-unit id="46af4d461d1c3eeeb40b04c95f68ba68dc7d29ec" translate="yes" xml:space="preserve">
          <source>contents.setUserAgent()</source>
          <target state="translated">contents.setUserAgent()</target>
        </trans-unit>
        <trans-unit id="e8ef7559520e48362d1aa4629dc894c311f7214f" translate="yes" xml:space="preserve">
          <source>contents.setVisualZoomLevelLimits()</source>
          <target state="translated">contents.setVisualZoomLevelLimits()</target>
        </trans-unit>
        <trans-unit id="2e5f323b032427ea4b89d40720f8f3004f824232" translate="yes" xml:space="preserve">
          <source>contents.setWebRTCIPHandlingPolicy()</source>
          <target state="translated">contents.setWebRTCIPHandlingPolicy()</target>
        </trans-unit>
        <trans-unit id="575bb2b721f15802546487ef2bb8952ee31cfe24" translate="yes" xml:space="preserve">
          <source>contents.setZoomFactor()</source>
          <target state="translated">contents.setZoomFactor()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
