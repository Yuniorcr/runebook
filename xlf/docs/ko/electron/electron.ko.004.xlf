<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="bbd01302e42bbab6b2da4d66693069e9db01d42e" translate="yes" xml:space="preserve">
          <source>Adds a handler for an &lt;code&gt;invoke&lt;/code&gt;able IPC. This handler will be called whenever a renderer calls &lt;code&gt;ipcRenderer.invoke(channel, ...args)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;invoke&lt;/code&gt; 가능한 IPC에 대한 핸들러를 추가합니다 . 이 핸들러는 렌더러가 &lt;code&gt;ipcRenderer.invoke(channel, ...args)&lt;/code&gt; 호출 할 때마다 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a92af8f0d3c8b8cae743afb2864899680a4181" translate="yes" xml:space="preserve">
          <source>Adds a one time &lt;code&gt;listener&lt;/code&gt; function for the event. This &lt;code&gt;listener&lt;/code&gt; is invoked only the next time a message is sent to &lt;code&gt;channel&lt;/code&gt;, after which it is removed.</source>
          <target state="translated">이벤트에 대한 일회성 &lt;code&gt;listener&lt;/code&gt; 기능을 추가합니다 . 이 &lt;code&gt;listener&lt;/code&gt; 는 다음에 메시지가 &lt;code&gt;channel&lt;/code&gt; 로 전송 될 때만 호출되며 그 후에 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="bc6198d9faba289f1e74a045ac87b3fdade6df4e" translate="yes" xml:space="preserve">
          <source>Adds a vibrancy effect to the browser window. Passing &lt;code&gt;null&lt;/code&gt; or an empty string will remove the vibrancy effect on the window.</source>
          <target state="translated">브라우저 창에 생동감 효과를 추가합니다. &lt;code&gt;null&lt;/code&gt; 또는 빈 문자열을 전달 하면 창의 진동 효과가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b749ab261a2398b02e2dab844eb8149e5b63a89d" translate="yes" xml:space="preserve">
          <source>Adds a window as a tab on this window, after the tab for the window instance.</source>
          <target state="translated">창 인스턴스의 탭 다음에이 창에 탭으로 창을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b8bfceb78055bc94c469d7bd47fdefb8dd8fa2ab" translate="yes" xml:space="preserve">
          <source>Adds an extra HTTP header. The header name will be issued as-is without lowercasing. It can be called only before first write. Calling this method after the first write will throw an error. If the passed value is not a &lt;code&gt;String&lt;/code&gt;, its &lt;code&gt;toString()&lt;/code&gt; method will be called to obtain the final value.</source>
          <target state="translated">추가 HTTP 헤더를 추가합니다. 헤더 이름은 소문자없이있는 그대로 발급됩니다. 처음 쓰기 전에 만 호출 할 수 있습니다. 첫 번째 쓰기 후에이 메서드를 호출하면 오류가 발생합니다. 전달 된 값이 &lt;code&gt;String&lt;/code&gt; 이 아니면 최종 값을 얻기 위해 &lt;code&gt;toString()&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b8cd316275eb1a4d50f23f64db09483932318787" translate="yes" xml:space="preserve">
          <source>Adds an extra HTTP header. The header name will issued as it is without lowercasing. It can be called only before first write. Calling this method after the first write will throw an error. If the passed value is not a &lt;code&gt;String&lt;/code&gt;, its &lt;code&gt;toString()&lt;/code&gt; method will be called to obtain the final value.</source>
          <target state="translated">추가 HTTP 헤더를 추가합니다. 헤더 이름은 소문자없이 발행됩니다. 처음 쓰기 전에 만 호출 할 수 있습니다. 첫 번째 쓰기 후에이 메소드를 호출하면 오류가 발생합니다. 전달 된 값이 &lt;code&gt;String&lt;/code&gt; 이 아닌 경우 최종 값을 얻기 위해 &lt;code&gt;toString()&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="86196729674362740f63cc4c31199a5fc9a12351" translate="yes" xml:space="preserve">
          <source>Adds scripts that will be executed on ALL web contents that are associated with this session just before normal &lt;code&gt;preload&lt;/code&gt; scripts run.</source>
          <target state="translated">일반 &lt;code&gt;preload&lt;/code&gt; 스크립트가 실행 되기 직전에이 세션과 연관된 모든 웹 컨텐츠에서 실행될 스크립트를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="d9017b4661fc051a41505eb0ff14a7c8795cd113" translate="yes" xml:space="preserve">
          <source>Adds the specified path to DevTools workspace. Must be used after DevTools creation:</source>
          <target state="translated">지정된 경로를 DevTools 작업 공간에 추가합니다. DevTools 작성 후에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fbae89f253b361380c5267e1f6024edf4e51e60a" translate="yes" xml:space="preserve">
          <source>Admitting feature-flagged changes, that do not otherwise alter existing code paths, at most points in the beta cycle is okay. Users can explicitly enable those flags in their apps.</source>
          <target state="translated">베타주기의 대부분의 시점에서 기존 코드 경로를 변경하지 않는 기능 플래그 변경을 인정하는 것은 괜찮습니다. 사용자는 앱에서 이러한 플래그를 명시 적으로 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce38a14cc47c692a0ccb0b16f36a92ff367ac53b" translate="yes" xml:space="preserve">
          <source>Admitting features of any sort after Week 3 in the beta cycle is 👎 without a very good reason.</source>
          <target state="translated">베타 사이클에서 3 주차 이후에 모든 종류의 기능을 인정하는 것은 타당한 이유없이 👎입니다.</target>
        </trans-unit>
        <trans-unit id="c38351c9c34a243924d79693267e4313bf4b7ecd" translate="yes" xml:space="preserve">
          <source>Admitting non-breaking-API changes before Week 3 in the beta cycle is okay, even if those changes have the potential to cause moderate side-effects</source>
          <target state="translated">베타주기의 3 주 이전에 non-breaking-API 변경을 인정하는 것은 괜찮습니다. 이러한 변경이 중간 정도의 부작용을 일으킬 가능성이 있더라도</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="94a0490cf82243ec4f6158415fa60ea4640753cc" translate="yes" xml:space="preserve">
          <source>Advanced Notifications</source>
          <target state="translated">고급 알림</target>
        </trans-unit>
        <trans-unit id="99b0021e8fdff5ec6edaa329da8ecb296223d390" translate="yes" xml:space="preserve">
          <source>Advanced topics</source>
          <target state="translated">고급 주제</target>
        </trans-unit>
        <trans-unit id="2c7500581f9b7d5c12f50dcd84909d7ec1642b7b" translate="yes" xml:space="preserve">
          <source>Advanced users of Electron can enable experimental Chromium features using the &lt;code&gt;experimentalFeatures&lt;/code&gt; and &lt;code&gt;experimentalCanvasFeatures&lt;/code&gt; properties.</source>
          <target state="translated">Electron의 고급 사용자는 &lt;code&gt;experimentalFeatures&lt;/code&gt; 및 &lt;code&gt;experimentalCanvasFeatures&lt;/code&gt; 속성을 사용하여 실험용 Chromium 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fed662a60c5967cc122e9bc13b3045207508a832" translate="yes" xml:space="preserve">
          <source>Advanced users of Electron can enable experimental Chromium features using the &lt;code&gt;experimentalFeatures&lt;/code&gt; property.</source>
          <target state="translated">Electron의 고급 사용자는 &lt;code&gt;experimentalFeatures&lt;/code&gt; 속성을 사용하여 실험 적인 Chromium 기능을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40604522f2257ffe29e86f4f4812290ed9c290b1" translate="yes" xml:space="preserve">
          <source>Afrikaans</source>
          <target state="translated">Afrikaans</target>
        </trans-unit>
        <trans-unit id="7ada54e0b39ac5d2c3cce2c23ae471d0debd2d79" translate="yes" xml:space="preserve">
          <source>After building is done, you can find &lt;code&gt;Electron.app&lt;/code&gt; under &lt;code&gt;out/D&lt;/code&gt;.</source>
          <target state="translated">빌드가 완료되면 &lt;code&gt;Electron.app&lt;/code&gt; 를 &lt;code&gt;out/D&lt;/code&gt; 아래 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a14eec986ffa84c1f0e35d48c2fc609533d80376" translate="yes" xml:space="preserve">
          <source>After building is done, you can find &lt;code&gt;electron.exe&lt;/code&gt; under &lt;code&gt;out\D&lt;/code&gt; (debug target) or under &lt;code&gt;out\R&lt;/code&gt; (release target).</source>
          <target state="translated">빌드가 완료되면 &lt;code&gt;out\D&lt;/code&gt; (디버그 대상) 또는 &lt;code&gt;out\R&lt;/code&gt; (릴리스 대상) 아래 에서 &lt;code&gt;electron.exe&lt;/code&gt; 를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40c6c78f967ed36c5b59b65da87a6fca3ebc154f" translate="yes" xml:space="preserve">
          <source>After building is done, you can find the &lt;code&gt;electron&lt;/code&gt; debug binary under &lt;code&gt;out/D&lt;/code&gt;.</source>
          <target state="translated">빌드가 완료되면 &lt;code&gt;out/D&lt;/code&gt; 아래 에서 &lt;code&gt;electron&lt;/code&gt; 디버그 바이너리를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d89a749caba99422011f1a3f5ba0404c490a178d" translate="yes" xml:space="preserve">
          <source>After bundling your app into Electron, you will want to rebrand Electron before distributing it to users.</source>
          <target state="translated">앱을 Electron에 번들로 묶은 후 Electron을 브랜딩하여 사용자에게 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23fc41d06517812e09946d34b27945c79d822c5d" translate="yes" xml:space="preserve">
          <source>After finishing the preparation work, you can package your app by following &lt;a href=&quot;application-distribution&quot;&gt;Application Distribution&lt;/a&gt;, and then proceed to signing your app.</source>
          <target state="translated">준비 작업을 완료 한 후 &lt;a href=&quot;application-distribution&quot;&gt;Application Distribution&lt;/a&gt; 에 따라 앱을 패키징 한 다음 앱 서명을 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5122a5b327328dfd949b63f4e75b2cfad4b57a9" translate="yes" xml:space="preserve">
          <source>After getting the plugin files, you should pass the &lt;code&gt;widevinecdmadapter&lt;/code&gt;'s path to Electron with &lt;code&gt;--widevine-cdm-path&lt;/code&gt; command line switch, and the plugin's version with &lt;code&gt;--widevine-cdm-version&lt;/code&gt; switch.</source>
          <target state="translated">플러그인 파일을 얻은 후에 는 &lt;code&gt;--widevine-cdm-path&lt;/code&gt; 명령 줄 스위치를 사용 하여 &lt;code&gt;widevinecdmadapter&lt;/code&gt; 경로를 Electron으로 전달 하고 &lt;code&gt;--widevine-cdm-version&lt;/code&gt; 스위치를 사용하여 플러그인 버전을 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="cf8e57db60d19c0828979609d71356561b4f3750" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, click on the title with &lt;code&gt;Command&lt;/code&gt; or &lt;code&gt;Control&lt;/code&gt; key pressed. You should see a popup with the file you just defined:</source>
          <target state="translated">Electron 애플리케이션을 시작한 후 &lt;code&gt;Command&lt;/code&gt; 또는 &lt;code&gt;Control&lt;/code&gt; 키를 눌러 제목을 클릭합니다 . 방금 정의한 파일이있는 팝업이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="99710d96da3dedd7653ced13c4f9e12b3d26712a" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, if you open the terminal that you ran your Electron application from and press &lt;code&gt;Ctrl+I&lt;/code&gt; key combination, you will see that this key combination was successfully intercepted.</source>
          <target state="translated">Electron 애플리케이션을 시작한 후 Electron 애플리케이션을 실행 한 터미널을 열고 &lt;code&gt;Ctrl+I&lt;/code&gt; 키 조합을 누르면 이 키 조합이 성공적으로 가로 챈 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a643132a09724a001a7f1fe289272490c4448ee0" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, if you press the defined key combination then open the terminal that you ran your Electron application from, you will see that Electron loves global shortcuts!</source>
          <target state="translated">Electron 응용 프로그램을 시작한 후 정의 된 키 조합을 누른 다음 Electron 응용 프로그램을 실행 한 터미널을 열면 Electron이 전역 단축키를 좋아한다는 것을 알 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="1b74279d2d50ec900606abee9f62ab2773f49887" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, right click the application icon. You should see the custom menu you just defined:</source>
          <target state="translated">Electron 애플리케이션을 시작한 후 애플리케이션 아이콘을 마우스 오른쪽 버튼으로 클릭합니다. 방금 정의한 사용자 정의 메뉴가 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="16400319f8ca042e1a960d397ccf78b95ce2d4bd" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, right click the application icon. You should see the item you just added. In this guide, the item is a Markdown file located in the root of the project:</source>
          <target state="translated">Electron 애플리케이션을 시작한 후 애플리케이션 아이콘을 마우스 오른쪽 버튼으로 클릭합니다. 방금 추가 한 항목이 표시됩니다. 이 가이드에서 항목은 프로젝트의 루트에있는 Markdown 파일입니다.</target>
        </trans-unit>
        <trans-unit id="16ba42cd55f269ac68c6a5e6161f6d524cb32993" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, try dragging and dropping the item from the BroswerWindow onto your desktop. In this guide, the item is a Markdown file located in the root of the project:</source>
          <target state="translated">Electron 응용 프로그램을 시작한 후 BroswerWindow에서 데스크탑으로 항목을 끌어다 놓으십시오. 이 가이드에서 항목은 프로젝트의 루트에있는 Markdown 파일입니다.</target>
        </trans-unit>
        <trans-unit id="619fa48460af1b0ac3efe5856b03d3f41f43caca" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the application menu along with the local shortcut you just defined:</source>
          <target state="translated">Electron 애플리케이션을 시작하면 방금 정의한 로컬 바로 가기와 함께 애플리케이션 메뉴가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1b899c9af911e66dde420963df004cb3782311bf" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the bar in the dock (macOS) or taskbar (Windows, Unity), indicating the progress percentage you just defined.</source>
          <target state="translated">Electron 응용 프로그램을 실행하면 방금 정의한 진행률을 나타내는 도크 (macOS) 또는 작업 표시 줄 (Windows, Unity)에 막대가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a56e12031d806966c4843cc2ad3464c7ad1e0772" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the notification in the Console:</source>
          <target state="translated">Electron 애플리케이션을 시작한 후 콘솔에 알림이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="cb16424630e23623fef602de9d82be72ccc66be7" translate="yes" xml:space="preserve">
          <source>After launching the Electron application, you should see the notification:</source>
          <target state="translated">Electron 애플리케이션을 실행하면 다음과 같은 알림이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6d78214901e72a116c75023b49c310122c4d913c" translate="yes" xml:space="preserve">
          <source>After re-uploading all distributions, publish again to upload the checksum file:</source>
          <target state="translated">모든 배포를 다시 업로드 한 후 다시 게시하여 체크섬 파일을 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="3d4eb4aea62759f5fc4603bd084f43bdfb67858e" translate="yes" xml:space="preserve">
          <source>After running the command, you will notice that a folder named &lt;code&gt;app.asar.unpacked&lt;/code&gt; was created together with the &lt;code&gt;app.asar&lt;/code&gt; file. It contains the unpacked files and should be shipped together with the &lt;code&gt;app.asar&lt;/code&gt; archive.</source>
          <target state="translated">명령을 실행 한 후 &lt;code&gt;app.asar.unpacked&lt;/code&gt; 라는 폴더 가 &lt;code&gt;app.asar&lt;/code&gt; 파일 과 함께 생성 되었음을 알 수 있습니다. 압축 해제 된 파일이 포함되어 있으며 &lt;code&gt;app.asar&lt;/code&gt; 아카이브 와 함께 제공되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="92f96f68e44a5806fd39a7d059f3ea95e3af35c1" translate="yes" xml:space="preserve">
          <source>After signing your app, you can use Application Loader to upload it to iTunes Connect for processing, making sure you have &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/CreatingiTunesConnectRecord.html&quot;&gt;created a record&lt;/a&gt; before uploading.</source>
          <target state="translated">응용 프로그램에 서명 한 후 Application Loader를 사용하여 iTunes Connect에 업로드하여 처리 하기 위해 업로드하기 전에 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/CreatingiTunesConnectRecord.html&quot;&gt;레코드&lt;/a&gt; 를 만들 었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a293a4ec8e8b6a8a8de2a318e931864f3de3600a" translate="yes" xml:space="preserve">
          <source>After these steps, you can &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/SubmittingTheApp.html&quot;&gt;submit your app for review&lt;/a&gt;.</source>
          <target state="translated">이 단계 후에 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/SubmittingTheApp.html&quot;&gt;검토를 위해 앱을 제출할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d1b4d449657d66a91609e011016b478d31cc850" translate="yes" xml:space="preserve">
          <source>After this, you can grant additional permissions for specific hosts. For example, if you are opening a BrowserWindow pointed at &lt;code&gt;https://example.com/&lt;/code&gt;, you can give that website exactly the abilities it needs, but no more.</source>
          <target state="translated">그런 다음 특정 호스트에 대한 추가 권한을 부여 할 수 있습니다. 예를 들어 &lt;code&gt;https://example.com/&lt;/code&gt; 을 가리키는 BrowserWindow를 여는 경우 해당 웹 사이트에 필요한 기능을 정확히 제공 할 수 있지만 더 이상 제공 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c9c128d48c812c617b1832ef5ebec35e14a36822" translate="yes" xml:space="preserve">
          <source>After this, you can grant additional permissions for specific hosts. For example, if you are opening a BrowserWindow pointed at `&lt;a href=&quot;https://my-website.com/%22&quot;&gt;https://my-website.com/&quot;&lt;/a&gt;, you can give that website exactly the abilities it needs, but no more.</source>
          <target state="translated">그런 다음 특정 호스트에 대한 추가 권한을 부여 할 수 있습니다. 예를 들어, &lt;a href=&quot;https://my-website.com/%22&quot;&gt;https://my-website.com/ &quot;에&lt;/a&gt; 있는 BrowserWindow를 열면 해당 웹 사이트에 필요한 기능을 정확하게 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa14335e51b3aae82783690bd2dff34895454791" translate="yes" xml:space="preserve">
          <source>After you upgrade Electron, you usually need to rebuild the modules.</source>
          <target state="translated">Electron을 업그레이드 한 후에는 일반적으로 모듈을 다시 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd9009b541e96034bf4057607c597ff27dc1054c" translate="yes" xml:space="preserve">
          <source>Again, this list merely minimizes the risk, it does not remove it. If your goal is to display a website, a browser will be a more secure option.</source>
          <target state="translated">이 목록은 위험을 최소화 할뿐 위험을 제거하지는 않습니다. 웹 사이트를 표시하는 것이 목표라면 브라우저가 더 안전한 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="d71c45b3d8a817df46d53626270c2cc92e52793f" translate="yes" xml:space="preserve">
          <source>Albanian</source>
          <target state="translated">Albanian</target>
        </trans-unit>
        <trans-unit id="f104641d0b8e1d36589f7e39b38c4e5533feeb7f" translate="yes" xml:space="preserve">
          <source>All Electron APIs are assigned a process type. Many of them can only be used from the main process, some of them only from a renderer process, some from both. The documentation for each individual API will state which process it can be used from.</source>
          <target state="translated">모든 Electron API에는 프로세스 유형이 지정됩니다. 대부분은 메인 프로세스에서만, 일부는 렌더러 프로세스에서만, 일부는 둘 다에서 사용할 수 있습니다. 각 개별 API에 대한 설명서에는 사용할 수있는 프로세스가 명시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b227ec526de00ad1c4c8781d2a9067d829e005c9" translate="yes" xml:space="preserve">
          <source>All built-in modules of Node.js are supported in Web Workers, and &lt;code&gt;asar&lt;/code&gt; archives can still be read with Node.js APIs. However none of Electron's built-in modules can be used in a multi-threaded environment.</source>
          <target state="translated">Node.js의 모든 내장 모듈은 웹 워커에서 지원되며 &lt;code&gt;asar&lt;/code&gt; 아카이브는 여전히 Node.js API로 읽을 수 있습니다. 그러나 Electron의 내장 모듈은 다중 스레드 환경에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6928bed84aeb5d2e819b4be11bdd09337427e352" translate="yes" xml:space="preserve">
          <source>All header names are lowercased.</source>
          <target state="translated">모든 헤더 이름은 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="36e05c6c19acac23719b4361b8f1b8422c9451d2" translate="yes" xml:space="preserve">
          <source>All level one properties of the &lt;code&gt;extra&lt;/code&gt; object in the &lt;code&gt;crashReporter&lt;/code&gt;&lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; &lt;code&gt;options&lt;/code&gt; 객체 에서 &lt;code&gt;extra&lt;/code&gt; 객체 의 모든 레벨 1 속성 .</target>
        </trans-unit>
        <trans-unit id="1443536b274e69afd6d6111ced964b2b00f9137b" translate="yes" xml:space="preserve">
          <source>All mouse events happened in this window will be passed to the window below this window, but if this window has focus, it will still receive keyboard events.</source>
          <target state="translated">이 창에서 발생한 모든 마우스 이벤트는이 창 아래의 창으로 전달되지만이 창에 포커스가 있으면 키보드 이벤트가 계속 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="fcb20fc0a346d4d4683301d9c6a6b8fdc7cac868" translate="yes" xml:space="preserve">
          <source>All new major and minor releases lines begin with a &lt;code&gt;-beta.N&lt;/code&gt; tag for &lt;code&gt;N &amp;gt;= 1&lt;/code&gt;. At that point, the feature set is &lt;strong&gt;locked&lt;/strong&gt;. That release line admits no further features, and focuses only on security and stability. e.g. &lt;code&gt;2.0.0-beta.1&lt;/code&gt;.</source>
          <target state="translated">모든 새로운 주 및 부 릴리스 라인 은 &lt;code&gt;N &amp;gt;= 1&lt;/code&gt; 대해 &lt;code&gt;-beta.N&lt;/code&gt; 태그로 시작합니다 . 이 시점에서 기능 세트가 &lt;strong&gt;잠겨&lt;/strong&gt; 있습니다. 이 릴리스 라인은 더 이상 기능을 인정하지 않으며 보안과 안정성에만 중점을 둡니다. 예를 들어 &lt;code&gt;2.0.0-beta.1&lt;/code&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec75062b15d704dd0564687e9465e9b2024ce92b" translate="yes" xml:space="preserve">
          <source>All new major and minor releases lines begin with a beta series indicated by semver prerelease tags of &lt;code&gt;beta.N&lt;/code&gt;, e.g. &lt;code&gt;2.0.0-beta.1&lt;/code&gt;. After the first beta, subsequent beta releases must meet all of the following conditions:</source>
          <target state="translated">베타 시리즈의 semver 시험판 태그로 표시와 함께 모든 새로운 메이저와 마이너 릴리스 라인이 시작 &lt;code&gt;beta.N&lt;/code&gt; , 예를 들어 &lt;code&gt;2.0.0-beta.1&lt;/code&gt; . 첫 번째 베타 이후 후속 베타 릴리스는 다음 조건을 모두 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="2fcdc40e74abd1bb0f666bebac40aa513f512287" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.js's built-in modules&lt;/a&gt; are available in Electron and third-party node modules also fully supported as well (including the &lt;a href=&quot;../tutorial/using-native-node-modules&quot;&gt;native modules&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/&quot;&gt;Node.js의&lt;/a&gt; 모든 내장 모듈 은 Electron에서 사용 가능하며 타사 노드 모듈 ( &lt;a href=&quot;../tutorial/using-native-node-modules&quot;&gt;기본 모듈&lt;/a&gt; 포함)도 완벽하게 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e05068eb327d173a9ff2e1b0a54ded3c5094167" translate="yes" xml:space="preserve">
          <source>All of Chromium's prebuilt binaries (&lt;code&gt;libchromiumcontent&lt;/code&gt;) are downloaded when running the bootstrap script. By default both static libraries and shared libraries will be downloaded and the final size should be between 800MB and 2GB depending on the platform.</source>
          <target state="translated">부트 스트랩 스크립트를 실행할 때 Chromium의 사전 빌드 된 모든 바이너리 ( &lt;code&gt;libchromiumcontent&lt;/code&gt; )가 다운로드됩니다. 기본적으로 정적 라이브러리와 공유 라이브러리가 모두 다운로드되며 플랫폼에 따라 최종 크기는 800MB에서 2GB 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c01457a9429a28579ea1097b429ed3dffa9a9276" translate="yes" xml:space="preserve">
          <source>All pull requests require approval from a &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/CODEOWNERS&quot;&gt;Code Owner&lt;/a&gt; of the area you modified in order to land. Whenever a maintainer reviews a pull request they may request changes. These may be small, such as fixing a typo, or may involve substantive changes. Such requests are intended to be helpful, but at times may come across as abrupt or unhelpful, especially if they do not include concrete suggestions on &lt;em&gt;how&lt;/em&gt; to change them.</source>
          <target state="translated">모든 풀 요청은 착륙을 위해 수정 한 지역 의 &lt;a href=&quot;https://github.com/electron/electron/blob/master/.github/CODEOWNERS&quot;&gt;코드 소유자&lt;/a&gt; 의 승인이 필요합니다 . 메인테이너가 풀 리퀘스트를 검토 할 때마다 변경을 요청할 수 있습니다. 오타 수정과 같이 작거나 실질적인 변경이 포함될 수 있습니다. 이러한 요청은 도움이되기위한 것이지만, 특히 변경 &lt;em&gt;방법&lt;/em&gt; 에 &lt;em&gt;대한&lt;/em&gt; 구체적인 제안이 포함되어 있지 않은 경우 갑작 스럽거나 도움이되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f103f99c6bbe4edc2c70d098552b8a1b8b64942" translate="yes" xml:space="preserve">
          <source>All pull requests require approval from a &lt;a href=&quot;https://github.com/orgs/electron/teams/code-owners&quot;&gt;Code Owner&lt;/a&gt; of the area you modified in order to land. Whenever a maintainer reviews a pull request they may request changes. These may be small, such as fixing a typo, or may involve substantive changes. Such requests are intended to be helpful, but at times may come across as abrupt or unhelpful, especially if they do not include concrete suggestions on &lt;em&gt;how&lt;/em&gt; to change them.</source>
          <target state="translated">모든 풀 요청은 착륙하기 위해 수정 한 지역 의 &lt;a href=&quot;https://github.com/orgs/electron/teams/code-owners&quot;&gt;코드 소유자&lt;/a&gt; 의 승인이 필요합니다 . 관리자가 풀 요청을 검토 할 때마다 변경을 요청할 수 있습니다. 이들은 오타 수정과 같이 작거나 실질적인 변경을 포함 할 수 있습니다. 그러한 요청은 도움을주기위한 것이지만, 특히 요청 을 변경하는 &lt;em&gt;방법&lt;/em&gt; 에 &lt;em&gt;대한&lt;/em&gt; 구체적인 제안이 포함되지 않은 경우 때때로 갑작 스럽거나 도움이되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d92d2a76a6c52c24bc20d8a759628a20e603e819" translate="yes" xml:space="preserve">
          <source>All reactions between the embedder frame and &lt;code&gt;webview&lt;/code&gt; are asynchronous.</source>
          <target state="translated">임 베더 프레임과 &lt;code&gt;webview&lt;/code&gt; 사이의 모든 반응 은 비동기 적입니다.</target>
        </trans-unit>
        <trans-unit id="bdce740d38c3c07bba5fc86501e5077cc7f14e63" translate="yes" xml:space="preserve">
          <source>All supported release lines will accept external pull requests to backport fixes previously merged to &lt;code&gt;master&lt;/code&gt;, though this may be on a case-by-case basis for some older supported lines. All contested decisions around release line backports will be resolved by the &lt;a href=&quot;https://github.com/electron/governance/tree/master/wg-releases&quot;&gt;Releases Working Group&lt;/a&gt; as an agenda item at their weekly meeting the week the backport PR is raised.</source>
          <target state="translated">지원되는 모든 릴리스 라인은 이전에 &lt;code&gt;master&lt;/code&gt; 에 병합 된 백 포트 수정에 대한 외부 풀 요청을 수락 하지만 일부 이전 지원 라인의 경우 사례별로 다를 수 있습니다. 릴리스 라인 백 포트에 대한 모든 논쟁의 여지가있는 결정 은 백 포트 PR이 제기되는 주간 회의에서 &lt;a href=&quot;https://github.com/electron/governance/tree/master/wg-releases&quot;&gt;릴리스 작업 그룹&lt;/a&gt; 의 의제 항목 으로 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="12cfc929ee428b893a4858c2bbab08bcfadedcf2" translate="yes" xml:space="preserve">
          <source>All three cases are covered by the same API - the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;&lt;code&gt;setProgressBar()&lt;/code&gt;&lt;/a&gt; method available on an instance of &lt;code&gt;BrowserWindow&lt;/code&gt;. To indicate your progress, call this method with a number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. For example, if you have a long-running task that is currently at 63% towards completion, you would call it as &lt;code&gt;setProgressBar(0.63)&lt;/code&gt;.</source>
          <target state="translated">세 가지 경우 모두 동일한 API, 즉 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스에서 사용할 수 있는 &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt; &lt;code&gt;setProgressBar()&lt;/code&gt; &lt;/a&gt; 메서드로 처리 됩니다. 진행 상황을 표시하려면 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;1&lt;/code&gt; 사이의 숫자로이 메서드를 호출하세요 . 예를 들어, 현재 완료 시점까지 63 % 인 장기 실행 작업이있는 경우이를 &lt;code&gt;setProgressBar(0.63)&lt;/code&gt; 로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="5c9e73b2af8730b73810277c255aba0b91b1e6b9" translate="yes" xml:space="preserve">
          <source>All three cases are covered by the same API - the &lt;code&gt;setProgressBar()&lt;/code&gt; method available on instances of &lt;code&gt;BrowserWindows&lt;/code&gt;. Call it with a number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; to indicate your progress. If you have a long-running task that's currently at 63% towards completion, you'd call it with &lt;code&gt;setProgressBar(0.63)&lt;/code&gt;.</source>
          <target state="translated">세 경우 모두 &lt;code&gt;BrowserWindows&lt;/code&gt; 인스턴스에서 사용할 수 있는 &lt;code&gt;setProgressBar()&lt;/code&gt; 메소드 와 동일한 API가 적용됩니다 . 진행 상황을 나타내려면 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;1&lt;/code&gt; 사이의 숫자로 전화하십시오 . 현재 완료 될 때까지 63 %에 이르는 장기 실행 작업이있는 경우 &lt;code&gt;setProgressBar(0.63)&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4d5a2ab15b33348f2c2afd3d6428028a2208a52c" translate="yes" xml:space="preserve">
          <source>All three operating systems provide means for applications to send notifications to the user. Electron conveniently allows developers to send notifications with the &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 Notification API&lt;/a&gt;, using the currently running operating system's native notification APIs to display it.</source>
          <target state="translated">세 가지 운영 체제 모두 응용 프로그램이 사용자에게 알림을 보낼 수있는 수단을 제공합니다. Electron은 개발자가 현재 실행중인 운영 체제의 기본 알림 API를 사용하여 &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 알림 API&lt;/a&gt; 로 알림을 보낼 수 있도록 편리하게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b392b2c76eb1f16ed0c9ddc9506c2c619a808a0" translate="yes" xml:space="preserve">
          <source>All three operating systems provide means for applications to send notifications to the user. The technique of showing notifications is different for the Main and Renderer processes.</source>
          <target state="translated">세 가지 운영 체제 모두 응용 프로그램이 사용자에게 알림을 보낼 수있는 수단을 제공합니다. 알림을 표시하는 기술은 메인 프로세스와 렌더러 프로세스에서 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b400c91503b6fee795bf4105a53d0d4617d8d213" translate="yes" xml:space="preserve">
          <source>All windows will be closed immediately without asking the user, and the &lt;code&gt;before-quit&lt;/code&gt; and &lt;code&gt;will-quit&lt;/code&gt; events will not be emitted.</source>
          <target state="translated">모든 창은 사용자에게 묻지 않고 즉시 종료됩니다, 그리고 &lt;code&gt;before-quit&lt;/code&gt; 및 &lt;code&gt;will-quit&lt;/code&gt; 이벤트가 방출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="04e4f7c3f87e90e72b1f55f7c791e633fc39a3db" translate="yes" xml:space="preserve">
          <source>All windows will be closed immediately without asking user and the &lt;code&gt;before-quit&lt;/code&gt; and &lt;code&gt;will-quit&lt;/code&gt; events will not be emitted.</source>
          <target state="translated">사용자에게 묻지 않고 모든 창이 즉시 닫히고 &lt;code&gt;before-quit&lt;/code&gt; 및 &lt;code&gt;will-quit&lt;/code&gt; 이벤트가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="99ff7a6d34291f7dfd34538299c2044110426952" translate="yes" xml:space="preserve">
          <source>Allows resuming &lt;code&gt;cancelled&lt;/code&gt; or &lt;code&gt;interrupted&lt;/code&gt; downloads from previous &lt;code&gt;Session&lt;/code&gt;. The API will generate a &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event. The &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; will not have any &lt;code&gt;WebContents&lt;/code&gt; associated with it and the initial state will be &lt;code&gt;interrupted&lt;/code&gt;. The download will start only when the &lt;code&gt;resume&lt;/code&gt; API is called on the &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt;.</source>
          <target state="translated">이전 &lt;code&gt;Session&lt;/code&gt; 에서 &lt;code&gt;cancelled&lt;/code&gt; 되거나 &lt;code&gt;interrupted&lt;/code&gt; 다운로드를 재개 할 수 있습니다 . API는 &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; 이벤트 로 액세스 할 수 있는 &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; 을 생성합니다 . &lt;a href=&quot;download-item&quot;&gt;DownloadItem은&lt;/a&gt; 어떤 필요가 없습니다 &lt;code&gt;WebContents&lt;/code&gt; 이 초기 상태가됩니다과 관련된 &lt;code&gt;interrupted&lt;/code&gt; . 때 다운로드는 시작됩니다 &lt;code&gt;resume&lt;/code&gt; API가 호출됩니다 &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85e266837977f2a150a2af212b5734ad35ab82f3" translate="yes" xml:space="preserve">
          <source>Also make sure that errors are &lt;a href=&quot;../api/auto-updater#event-error&quot;&gt;being handled&lt;/a&gt;. Here's an example for logging them to &lt;code&gt;stderr&lt;/code&gt;:</source>
          <target state="translated">또한 오류가 &lt;a href=&quot;../api/auto-updater#event-error&quot;&gt;처리되고&lt;/a&gt; 있는지 확인하십시오 . 다음은 &lt;code&gt;stderr&lt;/code&gt; 에 로깅하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="e13b36707a48689947a7c7f9875c8f1646984a00" translate="yes" xml:space="preserve">
          <source>Also note that native modules may have intermediate files produced which should not be included (as they would also need to be signed). If you use &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt; before version 8.1.0, add &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; to your build step to ignore these files. Versions 8.1.0 and later ignores those files by default.</source>
          <target state="translated">또한 네이티브 모듈에는 서명하지 않아도되므로 포함하지 않아야하는 중간 파일이 생성 될 수 있습니다. 버전 8.1.0 이전에 &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt; 를 사용하는 경우 빌드 단계에 &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; 를 추가하여 이러한 파일을 무시하십시오. 버전 8.1.0 이상은 기본적으로 해당 파일을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="e4edd8cb7d5b9efb421c4aa4c0f83d0f21a5e90f" translate="yes" xml:space="preserve">
          <source>Also note that native modules may have intermediate files produced which should not be included (as they would also need to be signed). If you use &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;electron-packager&lt;/a&gt; before version 8.1.0, add &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; to your build step to ignore these files. Versions 8.1.0 and later ignore those files by default.</source>
          <target state="translated">또한 네이티브 모듈에는 포함되지 않아야하는 중간 파일이 생성 될 수 있습니다 (서명해야하기 때문에). 버전 8.1.0 이전의 &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;electron-packager&lt;/a&gt; 를 사용하는 경우 빌드 단계에 &lt;code&gt;--ignore=.+\.o$&lt;/code&gt; 를 추가하여 이러한 파일을 무시하십시오. 버전 8.1.0 이상은 기본적으로 이러한 파일을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="03958a876e543617a0084f384c505477292b795c" translate="yes" xml:space="preserve">
          <source>Also on Windows and Linux, you can use a &lt;code&gt;&amp;amp;&lt;/code&gt; in the top-level item name to indicate which letter should get a generated accelerator. For example, using &lt;code&gt;&amp;amp;File&lt;/code&gt; for the file menu would result in a generated &lt;code&gt;Alt-F&lt;/code&gt; accelerator that opens the associated menu. The indicated character in the button label gets an underline. The &lt;code&gt;&amp;amp;&lt;/code&gt; character is not displayed on the button label.</source>
          <target state="translated">또한 Windows 및 Linux에서 최상위 항목 이름에 &lt;code&gt;&amp;amp;&lt;/code&gt; 를 사용 하여 생성 된 가속기를 가져와야하는 문자를 나타낼 수 있습니다. 예를 들어, 파일 메뉴에 &lt;code&gt;&amp;amp;File&lt;/code&gt; 을 사용 하면 연관된 메뉴를 여는 &lt;code&gt;Alt-F&lt;/code&gt; 가속기가 생성됩니다 . 버튼 레이블에 표시된 문자에 밑줄이 표시됩니다. &lt;code&gt;&amp;amp;&lt;/code&gt; 문자는 버튼을 라벨에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b278fef9a440a6b7e1574433d8f76ee3cebdf56" translate="yes" xml:space="preserve">
          <source>Also, due to the usage of app sandboxing, the resources which can be accessed by the app are strictly limited; you can read &lt;a href=&quot;https://developer.apple.com/app-sandboxing/&quot;&gt;App Sandboxing&lt;/a&gt; for more information.</source>
          <target state="translated">또한 앱 샌드 박싱의 사용으로 인해 앱에서 액세스 할 수있는 리소스는 엄격하게 제한됩니다. 자세한 내용은 &lt;a href=&quot;https://developer.apple.com/app-sandboxing/&quot;&gt;App Sandboxing&lt;/a&gt; 을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a12e6ace5357d3d25c75da28f17a8bde0cf765eb" translate="yes" xml:space="preserve">
          <source>Also, on Windows, you'll need to set the environment variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN=0&lt;/code&gt;. To do so, open &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; and add a system variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt;. This tells &lt;code&gt;depot_tools&lt;/code&gt; to use your locally installed version of Visual Studio (by default, &lt;code&gt;depot_tools&lt;/code&gt; will try to download a Google-internal version that only Googlers have access to).</source>
          <target state="translated">또한 Windows에서는 환경 변수 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN=0&lt;/code&gt; 을 설정해야합니다 . 이렇게하려면 &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; 값이 &lt;code&gt;0&lt;/code&gt; 인 시스템 변수 DEPOT_TOOLS_WIN_TOOLCHAIN 을 추가합니다 . 이렇게하면 &lt;code&gt;depot_tools&lt;/code&gt; 가 로컬에 설치된 Visual Studio 버전을 사용하도록 지시 합니다 (기본적으로 &lt;code&gt;depot_tools&lt;/code&gt; 는 Google 직원 만 액세스 할 수있는 Google 내부 버전을 다운로드하려고합니다).</target>
        </trans-unit>
        <trans-unit id="8551811aaf90eef079ad04d8840a6a20c5f389ed" translate="yes" xml:space="preserve">
          <source>Alternatively, if you're building your &lt;code&gt;snap&lt;/code&gt; with &lt;code&gt;strict&lt;/code&gt; confinement, you can use the &lt;code&gt;desktop-launch&lt;/code&gt; command:</source>
          <target state="translated">또는 &lt;code&gt;strict&lt;/code&gt; 제한으로 &lt;code&gt;snap&lt;/code&gt; 을 작성 하는 경우 &lt;code&gt;desktop-launch&lt;/code&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8f4fb5edf49872d23ed7ee64c0609c2e94cd268" translate="yes" xml:space="preserve">
          <source>Alternatively, pass an argument to run with your Electron binary that points to your app's folder. This eliminates the need to copy-paste your app into Electron's resource directory.</source>
          <target state="translated">또는 앱의 폴더를 가리키는 Electron 바이너리로 실행할 인수를 전달합니다. 이렇게하면 앱을 Electron의 리소스 디렉터리에 복사하여 붙여 넣을 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1e26e62e7be1483432f4c52207d368a8d6c40e3d" translate="yes" xml:space="preserve">
          <source>Alternatively, pass an argument to run with your electron binary that points to your app's folder. This eliminates the need to copy-paste your app into Electron's resource directory.</source>
          <target state="translated">또는 앱의 폴더를 가리키는 전자 바이너리로 실행할 인수를 전달하십시오. 이를 통해 앱을 Electron의 리소스 디렉토리에 복사하여 붙여 넣을 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5fca5fecae6dcfec110cc27954f782281b8cfb2b" translate="yes" xml:space="preserve">
          <source>Alternatively, the command line argument &lt;code&gt;--enable-logging&lt;/code&gt; can be passed. More information is available in the &lt;a href=&quot;../api/command-line-switches#--enable-logging&quot;&gt;command line switches documentation&lt;/a&gt;.</source>
          <target state="translated">또는 명령 줄 인수 &lt;code&gt;--enable-logging&lt;/code&gt; 을 전달할 수 있습니다. 자세한 내용은 &lt;a href=&quot;../api/command-line-switches#--enable-logging&quot;&gt;명령 줄 스위치 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fd883b6b649a770514535cbd2d4b48d8202ae9e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can override the local cache. &lt;code&gt;@electron/get&lt;/code&gt; will cache downloaded binaries in a local directory to not stress your network. You can use that cache folder to provide custom builds of Electron or to avoid making contact with the network at all.</source>
          <target state="translated">또는 로컬 캐시를 재정의 할 수 있습니다. &lt;code&gt;@electron/get&lt;/code&gt; 은 네트워크에 부담을주지 않도록 다운로드 한 바이너리를 로컬 디렉토리에 캐시합니다. 이 캐시 폴더를 사용하여 Electron의 사용자 지정 빌드를 제공하거나 네트워크와의 접촉을 전혀 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="999884f872bbb35369f4083e397f030ae4429581" translate="yes" xml:space="preserve">
          <source>Alternatively, you can override the local cache. &lt;code&gt;electron-download&lt;/code&gt; will cache downloaded binaries in a local directory to not stress your network. You can use that cache folder to provide custom builds of Electron or to avoid making contact with the network at all.</source>
          <target state="translated">또는 로컬 캐시를 재정의 할 수 있습니다. &lt;code&gt;electron-download&lt;/code&gt; 는 다운로드 한 바이너리를 로컬 디렉토리에 캐시하여 네트워크에 스트레스를주지 않습니다. 이 캐시 폴더를 사용하여 Electron의 사용자 정의 빌드를 제공하거나 네트워크와의 접촉을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dac34ad0d88986a6b416812fdad22a5218c5bc71" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use mocha's &lt;code&gt;grep&lt;/code&gt; option to only run tests matching the given regular expression pattern:</source>
          <target state="translated">또는 mocha의 &lt;code&gt;grep&lt;/code&gt; 옵션을 사용 하여 주어진 정규식 패턴과 일치하는 테스트 만 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf26fa5135e1ced31b3095aa717e224cf91418e0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the IPC primitives that are provided by Electron. To share data between the main and renderer processes, you can use the &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; modules. To communicate directly between web pages, you can send a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; from one to the other, possibly via the main process using &lt;a href=&quot;api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer&quot;&gt;&lt;code&gt;ipcRenderer.postMessage()&lt;/code&gt;&lt;/a&gt;. Subsequent communication over message ports is direct and does not detour through the main process.</source>
          <target state="translated">또는 Electron에서 제공하는 IPC 프리미티브를 사용할 수 있습니다. 기본 프로세스와 렌더러 프로세스간에 데이터를 공유하려면 &lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈을 사용할 수 있습니다 . 웹 페이지간에 직접 통신하려면 &lt;a href=&quot;api/ipc-renderer#ipcrendererpostmessagechannel-message-transfer&quot;&gt; &lt;code&gt;ipcRenderer.postMessage()&lt;/code&gt; &lt;/a&gt; 사용하는 기본 프로세스를 통해 하나에서 다른 페이지로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 를 보낼 수 있습니다 . 메시지 포트를 통한 후속 통신은 직접적이며 기본 프로세스를 우회하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1426ac5e9f2ee937bdd850a5b3c32bdeb76d62af" translate="yes" xml:space="preserve">
          <source>Alternatives on macOS</source>
          <target state="translated">macOS의 대안</target>
        </trans-unit>
        <trans-unit id="13bf461c74324e0ccb378e9aad8ace8fb01a7d0f" translate="yes" xml:space="preserve">
          <source>Amharic</source>
          <target state="translated">Amharic</target>
        </trans-unit>
        <trans-unit id="a9646b533d95d73ecf65cf886268c16f1916c405" translate="yes" xml:space="preserve">
          <source>Amongst others, please shop around to find one that suits your needs, Google is your friend :)</source>
          <target state="translated">무엇보다도, 당신의 요구에 맞는 것을 찾기 위해 쇼핑하십시오, 구글은 당신의 친구입니다 :)</target>
        </trans-unit>
        <trans-unit id="0d5b948dc809f2e81a6646faaa04bbe7687d23f7" translate="yes" xml:space="preserve">
          <source>Amongst others, please shop around to find one that suits your needs, Google is your friend 😄</source>
          <target state="translated">무엇보다도 귀하의 필요에 맞는 것을 찾기 위해 쇼핑하십시오 .Google은 귀하의 친구입니다 😄</target>
        </trans-unit>
        <trans-unit id="241262941b03222019102e3bae4cb36af2f73958" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive is a simple tar-like format that concatenates files into a single file. Electron can read arbitrary files from it without unpacking the whole file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/asar&quot;&gt;ASAR의&lt;/a&gt; 아카이브는 하나의 파일에 간단한 타르와 같은 형식이 서로 연결하여 파일입니다. Electron은 전체 파일의 압축을 풀지 않고도 임의의 파일을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c495827a36c50c8199477141bd38cc8f6367724" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IncomingMessage&lt;/code&gt; instance has the following readable properties:</source>
          <target state="translated">&lt;code&gt;IncomingMessage&lt;/code&gt; 의 인스턴스는 다음 읽을 수있는 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2fa0e1649b3201d23c500e2d1b1123acfe50fa83" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP protocol major version number.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; HTTP 프로토콜 주 버전 번호를 나타내는.</target>
        </trans-unit>
        <trans-unit id="8b792e8ca253d8a55a3403d8805964e856ee8506" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP protocol minor version number.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; HTTP 프로토콜 마이너 버전 번호를 나타내는.</target>
        </trans-unit>
        <trans-unit id="b8afad54d3b0f900e2298dbafe8eb7771092c9a1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; indicating the HTTP response status code.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; HTTP 응답 상태 코드를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e51cc730c2b6784aaf85ddac820b6f458f8fd4a5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; property that returns the badge count for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="translated">현재 앱의 배지 수를 반환 하는 &lt;code&gt;Integer&lt;/code&gt; 속성입니다. 개수를 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 배지가 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="4999586eba9ee1883d57e47fd10e953b3eb9358d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; property that sets the frame rate of the web contents to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">웹 콘텐츠의 프레임 속도를 지정된 숫자로 설정 하는 &lt;code&gt;Integer&lt;/code&gt; 속성입니다. 1에서 60 사이의 값만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc1699a6a5beb9f594d56a584e1458f7a40a0c79" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; representing the currently selected segment. Changing this value immediately updates the control in the touch bar. User interaction with the touch bar will update this value automatically.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 현재 선택된 세그먼트를 나타내는. 이 값을 변경하면 터치 바의 컨트롤이 즉시 업데이트됩니다. 터치 바와의 사용자 상호 작용은이 값을 자동으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f594f9ad644189119b2ca529658f94e7a47ce197" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Integer&lt;/code&gt; representing the unique frame id in the current renderer process. Distinct WebFrame instances that refer to the same underlying frame will have the same &lt;code&gt;routingId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 현재 렌더러 과정에서 고유의 프레임 ID를 나타내는. 동일한 기본 프레임을 참조하는 고유 한 WebFrame 인스턴스는 동일한 &lt;code&gt;routingId&lt;/code&gt; 를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="3ebd7a143c277afd653d8bf76558d5b32672ca18" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; representing the response HTTP headers. The &lt;code&gt;headers&lt;/code&gt; object is formatted as follows:</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 응답 HTTP 헤더를 나타내는. &lt;code&gt;headers&lt;/code&gt; 는 다음과 같이 객체는 포맷 :</target>
        </trans-unit>
        <trans-unit id="d5cde8eeb7216d2b1ff73e1c6a40e52bffa68205" translate="yes" xml:space="preserve">
          <source>An Apple Disk Image is a packaging format used by macOS. DMG files are commonly used for distributing application &quot;installers&quot;. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; supports &lt;code&gt;dmg&lt;/code&gt; as a build target.</source>
          <target state="translated">Apple Disk Image는 macOS에서 사용되는 패키징 형식입니다. DMG 파일은 일반적으로 응용 프로그램 &quot;설치자&quot;를 배포하는 데 사용됩니다. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; 는 빌드 대상으로 &lt;code&gt;dmg&lt;/code&gt; 를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="297c67e77d1dbd6d9dc4308303aac94439c52bd8" translate="yes" xml:space="preserve">
          <source>An IPC system for communicating intra- or inter-process, and that's important because Chrome is keen on being able to split its work into separate processes or not, depending on memory pressures etc.</source>
          <target state="translated">프로세스 간 또는 프로세스 간 통신을위한 IPC 시스템이며, 이는 메모리 압력 등에 따라 작업을 별도의 프로세스로 분할 할 수 있는지 여부에 관심이 있기 때문에 중요합니다.</target>
        </trans-unit>
        <trans-unit id="21b18e13fa500130080a5c31825571bd36617f9d" translate="yes" xml:space="preserve">
          <source>An alternate transport for Chrome's remote debugging protocol.</source>
          <target state="translated">Chrome의 원격 디버깅 프로토콜을위한 대체 전송입니다.</target>
        </trans-unit>
        <trans-unit id="05beb2abfd438756a288739255c6e36593e65e77" translate="yes" xml:space="preserve">
          <source>An app can make customizations to sandboxed renderers using a preload script. Here's an example:</source>
          <target state="translated">앱은 사전로드 스크립트를 사용하여 샌드 박스 렌더러를 사용자 정의 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcb01e30a815db73859a0232c30b61cd57627815" translate="yes" xml:space="preserve">
          <source>An app developed with &lt;code&gt;1.8.1&lt;/code&gt; cannot take the &lt;code&gt;1.8.3&lt;/code&gt; bug fix without either absorbing the &lt;code&gt;1.8.2&lt;/code&gt; feature, or by backporting the fix and maintaining a new release line.</source>
          <target state="translated">&lt;code&gt;1.8.1&lt;/code&gt; 로 개발 된 앱 은 &lt;code&gt;1.8.2&lt;/code&gt; 기능을 흡수 하거나 수정 프로그램을 백 포트하고 새로운 릴리스 라인을 유지 하지 않으면 서 &lt;code&gt;1.8.3&lt;/code&gt; 버그 수정을 취할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4c914b07abecc2f290522fe40f1b246962bdd05c" translate="yes" xml:space="preserve">
          <source>An application built with an older version of Electron, Chromium, and Node.js is an easier target than an application that is using more recent versions of those components. Generally speaking, security issues and exploits for older versions of Chromium and Node.js are more widely available.</source>
          <target state="translated">Electron, Chromium 및 Node.js의 이전 버전으로 빌드 된 애플리케이션은 해당 구성 요소의 최신 버전을 사용하는 애플리케이션보다 쉬운 대상입니다. 일반적으로 Chromium 및 Node.js의 이전 버전에 대한 보안 문제 및 악용이 더 널리 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4501baf842bcaef9335a520edf13561437b0ac4f" translate="yes" xml:space="preserve">
          <source>An example lifecycle in pictures:</source>
          <target state="translated">사진의 수명주기 예 :</target>
        </trans-unit>
        <trans-unit id="2c69e86fcc7f2460516831c5a5f409ac20aeb053" translate="yes" xml:space="preserve">
          <source>An example of &lt;code&gt;webContents.printToPDF&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;webContents.printToPDF&lt;/code&gt; 의 예 :</target>
        </trans-unit>
        <trans-unit id="372f9205e9f04a68affd6f8fa9db703c0af87185" translate="yes" xml:space="preserve">
          <source>An example of activating the window of primary instance when a second instance starts:</source>
          <target state="translated">두 번째 인스턴스가 시작될 때 기본 인스턴스의 창을 활성화하는 예 :</target>
        </trans-unit>
        <trans-unit id="125d52e07df76f5828edc9392e28e867df507f7c" translate="yes" xml:space="preserve">
          <source>An example of adding &lt;code&gt;User-Agent&lt;/code&gt; header for requests:</source>
          <target state="translated">요청에 &lt;code&gt;User-Agent&lt;/code&gt; 헤더를 추가하는 예 :</target>
        </trans-unit>
        <trans-unit id="01ae8975423781882fad85b5cd3335ac33cea46a" translate="yes" xml:space="preserve">
          <source>An example of creating a window that fills the whole screen:</source>
          <target state="translated">전체 화면을 채우는 창을 만드는 예 :</target>
        </trans-unit>
        <trans-unit id="e715e021203f94c4bbd0567aed48b3427ad66a6d" translate="yes" xml:space="preserve">
          <source>An example of creating the application menu in the main process with the simple template API:</source>
          <target state="translated">간단한 템플릿 API를 사용하여 기본 프로세스에서 애플리케이션 메뉴를 작성하는 예 :</target>
        </trans-unit>
        <trans-unit id="6aac3e50a32db7afb8704094e6e2b859e5be8e90" translate="yes" xml:space="preserve">
          <source>An example of implementing a protocol that has the same effect as the &lt;code&gt;file://&lt;/code&gt; protocol:</source>
          <target state="translated">&lt;code&gt;file://&lt;/code&gt; 프로토콜 과 동일한 효과를 갖는 프로토콜을 구현하는 예 :</target>
        </trans-unit>
        <trans-unit id="3b4b31cb190784d43ab408165c9cb72423338b4d" translate="yes" xml:space="preserve">
          <source>An example of installing &lt;code&gt;electron-rebuild&lt;/code&gt; and then rebuild modules with it:</source>
          <target state="translated">&lt;code&gt;electron-rebuild&lt;/code&gt; 을 설치 한 다음 모듈을 재 구축 하는 예 :</target>
        </trans-unit>
        <trans-unit id="560b8f8ffdd6564b2b8aa249d4f01037951941d0" translate="yes" xml:space="preserve">
          <source>An example of installing all dependencies for Electron:</source>
          <target state="translated">Electron에 대한 모든 종속성을 설치하는 예 :</target>
        </trans-unit>
        <trans-unit id="09a96482269da1747fb5ff526de5c3977a781e44" translate="yes" xml:space="preserve">
          <source>An example of opening a URL in the user's default browser:</source>
          <target state="translated">사용자의 기본 브라우저에서 URL을 여는 예 :</target>
        </trans-unit>
        <trans-unit id="5d35149702adf819df351b6a5b6926d5dd5362ac" translate="yes" xml:space="preserve">
          <source>An example of registering a privileged scheme, that bypasses Content Security Policy:</source>
          <target state="translated">콘텐츠 보안 정책을 우회하는 권한있는 체계를 등록하는 예 :</target>
        </trans-unit>
        <trans-unit id="7afd15f0e62f9c208d8e59272bdef3c58a4c382f" translate="yes" xml:space="preserve">
          <source>An example of restarting current instance immediately and adding a new command line argument to the new instance:</source>
          <target state="translated">현재 인스턴스를 즉시 다시 시작하고 새 명령 행 인수를 새 인스턴스에 추가하는 예 :</target>
        </trans-unit>
        <trans-unit id="a0effeac7279ec45ec56b2d0cf408ee4c27dd4ee" translate="yes" xml:space="preserve">
          <source>An example of sending and handling messages between the render and main processes:</source>
          <target state="translated">렌더 프로세스와 기본 프로세스간에 메시지를 보내고 처리하는 예 :</target>
        </trans-unit>
        <trans-unit id="d988386c9675ffed97d049072d2eb5001c143243" translate="yes" xml:space="preserve">
          <source>An example of sending messages from the main process to the renderer process:</source>
          <target state="translated">메인 프로세스에서 렌더러 프로세스로 메시지를 보내는 예 :</target>
        </trans-unit>
        <trans-unit id="89904be07412bfe338e623beb0e5ff290413d8b9" translate="yes" xml:space="preserve">
          <source>An example of showing a dialog to select multiple files and directories:</source>
          <target state="translated">여러 파일과 디렉토리를 선택하는 대화 상자를 표시하는 예 :</target>
        </trans-unit>
        <trans-unit id="169b71bdf0ad723282e77c70cc24b504dc14e91c" translate="yes" xml:space="preserve">
          <source>An example of showing a dialog to select multiple files:</source>
          <target state="translated">여러 파일을 선택하는 대화 상자를 표시하는 예 :</target>
        </trans-unit>
        <trans-unit id="af4c1c177456a2ada28aa202e0200ae18a139ed4" translate="yes" xml:space="preserve">
          <source>An example of showing devtools in a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그에 devtools를 표시하는 예 :</target>
        </trans-unit>
        <trans-unit id="ae6ad7021328d4ea26e125bf2b8e3ecf625b80db" translate="yes" xml:space="preserve">
          <source>An example of showing devtools in a &lt;code&gt;BrowserWindow&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; 에서 devtools를 보여주는 예제 :</target>
        </trans-unit>
        <trans-unit id="f2648260b19ddc78388add9f7e639951f0ff7cfc" translate="yes" xml:space="preserve">
          <source>An example of using &lt;a href=&quot;https://github.com/atom/node-spellchecker&quot;&gt;node-spellchecker&lt;/a&gt; as provider:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/atom/node-spellchecker&quot;&gt;노드 맞춤법 검사기&lt;/a&gt; 를 공급자로 사용하는 예 :</target>
        </trans-unit>
        <trans-unit id="c7889c92ea7981983efd38f08f90c73ce6f1771a" translate="yes" xml:space="preserve">
          <source>An example of using it to determine if you should create a transparent window or not (transparent windows won't work correctly when DWM composition is disabled):</source>
          <target state="translated">투명 창을 작성해야하는지 여부를 결정하는 데 사용하는 예 (DWM 컴포지션이 비활성화 된 경우 투명 창이 제대로 작동하지 않음) :</target>
        </trans-unit>
        <trans-unit id="491d0cfa31b70a51e8652b15ea666d92424ec66d" translate="yes" xml:space="preserve">
          <source>An example of zooming current page to 200%.</source>
          <target state="translated">현재 페이지를 200 %로 확대하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="b832d173c15f259b6c6dc5a166eb81bb1230a01e" translate="yes" xml:space="preserve">
          <source>An exception will be thrown when any error happens.</source>
          <target state="translated">오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="189b9782252e963660bb174fa18750fc43c05826" translate="yes" xml:space="preserve">
          <source>And more!</source>
          <target state="translated">그리고 더!</target>
        </trans-unit>
        <trans-unit id="50999aab1e4b469f324348b2d8a375542226f1b7" translate="yes" xml:space="preserve">
          <source>And note that if you have made the whole window draggable, you must also mark buttons as non-draggable, otherwise it would be impossible for users to click on them:</source>
          <target state="translated">전체 창을 드래그 할 수 있도록 설정 한 경우 버튼을 드래그 할 수없는 것으로 표시해야합니다. 그렇지 않으면 사용자가 클릭 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="19f0c1968cfab81099646aa90e38339bd9ec003c" translate="yes" xml:space="preserve">
          <source>And then sign your app with the following script:</source>
          <target state="translated">그런 다음 다음 스크립트를 사용하여 앱에 서명하십시오.</target>
        </trans-unit>
        <trans-unit id="4a458c5b952396afd3475927a38fe4f0c9065eb6" translate="yes" xml:space="preserve">
          <source>And to cross-compile for &lt;code&gt;arm&lt;/code&gt; or &lt;code&gt;ia32&lt;/code&gt; targets, you should pass the &lt;code&gt;--target_arch&lt;/code&gt; parameter to the &lt;code&gt;bootstrap.py&lt;/code&gt; script:</source>
          <target state="translated">&lt;code&gt;arm&lt;/code&gt; 또는 &lt;code&gt;ia32&lt;/code&gt; 대상 을 교차 컴파일 하려면 &lt;code&gt;--target_arch&lt;/code&gt; 매개 변수를 &lt;code&gt;bootstrap.py&lt;/code&gt; 스크립트에 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="70c6e4c458977a4896fe6994e9d00c9b74fe99dd" translate="yes" xml:space="preserve">
          <source>And to cross-compile for &lt;code&gt;arm&lt;/code&gt; or &lt;code&gt;ia32&lt;/code&gt; targets, you should pass the &lt;code&gt;target_cpu&lt;/code&gt; parameter to &lt;code&gt;gn gen&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;arm&lt;/code&gt; 또는 &lt;code&gt;ia32&lt;/code&gt; 타겟에 대해 교차 컴파일 하려면 &lt;code&gt;target_cpu&lt;/code&gt; 매개 변수를 &lt;code&gt;gn gen&lt;/code&gt; 에 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="79e81a114f31beafb762175e71a724cde56adec2" translate="yes" xml:space="preserve">
          <source>And you can use &lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API to empty the recent documents list:</source>
          <target state="translated">&lt;a href=&quot;../api/app#appclearrecentdocuments-macos-windows&quot;&gt;app.clearRecentDocuments&lt;/a&gt; API를 사용 하여 최근 문서 목록을 비울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd4d5fe9996570e9cb0447d70870f02f92ec3ce1" translate="yes" xml:space="preserve">
          <source>AngularJS Batarang</source>
          <target state="translated">AngularJS 바타 랑</target>
        </trans-unit>
        <trans-unit id="3b415762bc5be54246695f9630034afefb91b77e" translate="yes" xml:space="preserve">
          <source>Another difference is that sandboxed renderers don't modify any of the default JavaScript APIs. Consequently, some APIs such as &lt;code&gt;window.open&lt;/code&gt; will work as they do in Chromium (i.e. they do not return a &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">또 다른 차이점은 샌드 박스 렌더러가 기본 JavaScript API를 수정하지 않는다는 것입니다. 결과적으로 &lt;code&gt;window.open&lt;/code&gt; 과 같은 일부 API 는 Chromium에서 와 같이 작동합니다 (즉, &lt;a href=&quot;browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; 를&lt;/a&gt; 반환하지 않음 ).</target>
        </trans-unit>
        <trans-unit id="32e8f8aadd3f386128465bd35865f7e34f9e8dcf" translate="yes" xml:space="preserve">
          <source>Another difference is that sandboxed renderers don't modify any of the default JavaScript APIs. Consequently, some APIs such as &lt;code&gt;window.open&lt;/code&gt; will work as they do in chromium (i.e. they do not return a &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">또 다른 차이점은 샌드 박스 렌더러가 기본 JavaScript API를 수정하지 않는다는 것입니다. 결과적으로 &lt;code&gt;window.open&lt;/code&gt; 과 같은 일부 API 는 크롬에서 와 같이 작동합니다 (예 : &lt;a href=&quot;browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; &lt;/a&gt; 반환하지 않음 ).</target>
        </trans-unit>
        <trans-unit id="3b6744420ebaee898d839a22d803f6aceb000f6a" translate="yes" xml:space="preserve">
          <source>Another example of creating a window in the external display:</source>
          <target state="translated">외부 디스플레이에서 창을 만드는 또 다른 예 :</target>
        </trans-unit>
        <trans-unit id="d185a2e61ed2a615d162c4d0d6cf3f1bf3f0acf8" translate="yes" xml:space="preserve">
          <source>Another factor is that the Node project patches its version of V8. As mentioned above, Electron builds everything with a single copy of V8, so Node's V8 patches must be ported to that copy.</source>
          <target state="translated">또 다른 요인은 Node 프로젝트가 V8 버전을 패치한다는 것입니다. 위에서 언급 한 것처럼 Electron은 V8의 단일 사본으로 모든 것을 빌드하므로 Node의 V8 패치를 해당 사본으로 이식해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9fee0469f836ee93931ac0d72e5bb650943154d" translate="yes" xml:space="preserve">
          <source>Another important limitation is that the compiled AppX package still contains a win32 executable - and will therefore not run on Xbox, HoloLens, or Phones.</source>
          <target state="translated">또 다른 중요한 제한 사항은 컴파일 된 AppX 패키지에 여전히 win32 실행 파일이 포함되어 Xbox, HoloLens 또는 전화에서 실행되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9b238fa385e11f259dbfd8a41292735dbcdb04b5" translate="yes" xml:space="preserve">
          <source>Any native Node.js module can be loaded directly in Web Workers, but it is strongly recommended not to do so. Most existing native modules have been written assuming single-threaded environment, using them in Web Workers will lead to crashes and memory corruptions.</source>
          <target state="translated">기본 Node.js 모듈은 웹 워커에 직접로드 할 수 있지만 그렇게하지 않는 것이 좋습니다. 대부분의 기존 기본 모듈은 단일 스레드 환경을 가정하여 작성되었으며 웹 작업자에서 해당 모듈을 사용하면 충돌 및 메모리 손상이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c715be2d6d860c8f654ef3be37f4c0cd3711d9b6" translate="yes" xml:space="preserve">
          <source>Any pattern containing a forward or backward slash will be tested against the whole pathname and not just the module. E.g. &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; would change the logging level for all code in the source files under a &lt;code&gt;foo/bar&lt;/code&gt; directory.</source>
          <target state="translated">슬래시를 포함하는 모든 패턴은 모듈뿐만 아니라 전체 경로 이름에 대해 테스트됩니다. 예를 들어 &lt;code&gt;*/foo/bar/*=2&lt;/code&gt; 는 &lt;code&gt;foo/bar&lt;/code&gt; 디렉토리 에있는 소스 파일의 모든 코드에 대한 로깅 레벨을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="5e5eb79994f9130e9766f363c591b10cb4d12926" translate="yes" xml:space="preserve">
          <source>Any resources not included with your application should be loaded using a secure protocol like &lt;code&gt;HTTPS&lt;/code&gt;. In other words, do not use insecure protocols like &lt;code&gt;HTTP&lt;/code&gt;. Similarly, we recommend the use of &lt;code&gt;WSS&lt;/code&gt; over &lt;code&gt;WS&lt;/code&gt;, &lt;code&gt;FTPS&lt;/code&gt; over &lt;code&gt;FTP&lt;/code&gt;, and so on.</source>
          <target state="translated">응용 프로그램에 포함되지 않은 모든 리소스는 &lt;code&gt;HTTPS&lt;/code&gt; 와 같은 보안 프로토콜을 사용하여로드해야합니다 . 즉, &lt;code&gt;HTTP&lt;/code&gt; 와 같은 안전하지 않은 프로토콜을 사용하지 마십시오 . 마찬가지로 &lt;code&gt;WSS&lt;/code&gt; over &lt;code&gt;WS&lt;/code&gt; , &lt;code&gt;FTPS&lt;/code&gt; over &lt;code&gt;FTP&lt;/code&gt; 등을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c8d592e3d4157a31854aa1957745118868d45be2" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt;, you can also set the following environment variables to customise the build configuration:</source>
          <target state="translated">&lt;code&gt;CC&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; 외에도 다음 환경 변수를 설정하여 빌드 구성을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47b36593dc4ee860107450ffb100accf758bed24" translate="yes" xml:space="preserve">
          <source>Apart from manually signing your app, you can also choose to use the &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;electron-osx-sign&lt;/a&gt; module to do the job.</source>
          <target state="translated">앱에 수동으로 서명하는 것 외에도 &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;electron-osx-sign&lt;/a&gt; 모듈을 사용하여 작업을 수행 하도록 선택할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bbf1922b8f7f4bc7e075363d3d5c60aa27d5d5c5" translate="yes" xml:space="preserve">
          <source>Apart from packaging your app manually, you can also choose to use third party packaging tools to do the work for you:</source>
          <target state="translated">앱을 수동으로 패키징하는 것 외에도 타사 패키징 도구를 사용하여 작업을 수행하도록 선택할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c70ae77c392bfdc65811420076ceef963c018cd8" translate="yes" xml:space="preserve">
          <source>Apart from shipping your app by copying all of its source files, you can also package your app into an &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;asar&lt;/a&gt; archive to avoid exposing your app's source code to users.</source>
          <target state="translated">모든 소스 파일을 복사하여 앱을 제공하는 것 외에도 앱의 소스 코드가 사용자에게 노출되지 않도록 앱을 &lt;a href=&quot;https://github.com/electron/asar&quot;&gt;아아&lt;/a&gt; 아카이브 로 패키지 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23368e571fb55860ff5c5aadcdc49cdab2eaa0ab" translate="yes" xml:space="preserve">
          <source>App can't be opened because it is from an unidentified developer</source>
          <target state="translated">미확인 개발자가 제공 한 앱을 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="049600bbda8e065f0e783f451d9b52f928ea6483" translate="yes" xml:space="preserve">
          <source>App has a public GitHub repository</source>
          <target state="translated">앱에 공개 GitHub 저장소가 있습니다</target>
        </trans-unit>
        <trans-unit id="677eec5b39cf72b0d4bf033868a741628f69f40b" translate="yes" xml:space="preserve">
          <source>App has it's &lt;code&gt;NSUserNotificationAlertStyle&lt;/code&gt; set to &lt;code&gt;alert&lt;/code&gt; in the &lt;code&gt;Info.plist&lt;/code&gt;.</source>
          <target state="translated">앱 에 &lt;code&gt;Info.plist&lt;/code&gt; 에서 &lt;code&gt;alert&lt;/code&gt; 하도록 &lt;code&gt;NSUserNotificationAlertStyle&lt;/code&gt; 이 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="56a94d43f7c47ddae1702557ca2ae2db5049d31f" translate="yes" xml:space="preserve">
          <source>App indicator will only be shown when it has a context menu.</source>
          <target state="translated">앱 표시기는 상황에 맞는 메뉴가있는 경우에만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f7548ab4fa57148b2b490d34fdebc240cdbbe1b2" translate="yes" xml:space="preserve">
          <source>App is signed</source>
          <target state="translated">앱이 서명되었습니다</target>
        </trans-unit>
        <trans-unit id="c8ab9bb92eef1be2798f4b485ce4dd54ffb6ae10" translate="yes" xml:space="preserve">
          <source>App runs on macOS or Windows</source>
          <target state="translated">앱은 macOS 또는 Windows에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7a5e3bb03d06453c65b1113c4e3cf6ff8e619ec3" translate="yes" xml:space="preserve">
          <source>AppVeyor</source>
          <target state="translated">AppVeyor</target>
        </trans-unit>
        <trans-unit id="d4a2cc0e8588af6a9f7c5e795dac04ec45c7f407" translate="yes" xml:space="preserve">
          <source>AppVeyor runs on Windows, supporting Selenium, Chromium, Electron and similar tools out of the box - no configuration is required.</source>
          <target state="translated">AppVeyor는 Windows에서 실행되며 Selenium, Chromium, Electron 및 유사한 도구를 기본적으로 지원하므로 구성이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d572f3b502cde5b0370ac7b117f58144724b447a" translate="yes" xml:space="preserve">
          <source>Append a switch (with optional &lt;code&gt;value&lt;/code&gt;) to Chromium's command line.</source>
          <target state="translated">Chromium의 명령 행에 스위치 (옵션 &lt;code&gt;value&lt;/code&gt; )를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="c881a723c4e927caa040da2f67b853e976c4d240" translate="yes" xml:space="preserve">
          <source>Append an argument to Chromium's command line. The argument will be quoted correctly.</source>
          <target state="translated">Chromium의 명령 행에 인수를 추가하십시오. 인수는 올바르게 인용됩니다.</target>
        </trans-unit>
        <trans-unit id="1aa644c462a859483af3889fedf9c8171e738195" translate="yes" xml:space="preserve">
          <source>Appends the &lt;code&gt;menuItem&lt;/code&gt; to the menu.</source>
          <target state="translated">&lt;code&gt;menuItem&lt;/code&gt; 을 메뉴에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="c5a95319cc007d37f03d190f9a9af5f029ad6167" translate="yes" xml:space="preserve">
          <source>Application Architecture</source>
          <target state="translated">응용 프로그램 아키텍처</target>
        </trans-unit>
        <trans-unit id="5d9f85d50bde94d452fab7d65cb069ddbf80f302" translate="yes" xml:space="preserve">
          <source>Application Debugging</source>
          <target state="translated">응용 프로그램 디버깅</target>
        </trans-unit>
        <trans-unit id="2518e8ec91dc1ba1cfd7e4589f5b4a8cfb115277" translate="yes" xml:space="preserve">
          <source>Application Distribution</source>
          <target state="translated">응용 프로그램 배포</target>
        </trans-unit>
        <trans-unit id="57b2e86a74ef58c3e485f277c5d3ff5e1c4e3776" translate="yes" xml:space="preserve">
          <source>Application Packaging</source>
          <target state="translated">응용 프로그램 포장</target>
        </trans-unit>
        <trans-unit id="5f04ef1a414dccc3e91c12156f71f83bbad8d73a" translate="yes" xml:space="preserve">
          <source>Application Progress</source>
          <target state="translated">응용 프로그램 진행</target>
        </trans-unit>
        <trans-unit id="b1fb92ce49bfdc66b691a4febcac0bbe43b53838" translate="yes" xml:space="preserve">
          <source>Application architecture</source>
          <target state="translated">애플리케이션 아키텍처</target>
        </trans-unit>
        <trans-unit id="98458bc2068d3fa4576d39cade59bd6adcc8ad09" translate="yes" xml:space="preserve">
          <source>Applications define tasks based on both the program's features and the key things a user is expected to do with them. Tasks should be context-free, in that the application does not need to be running for them to work. They should also be the statistically most common actions that a normal user would perform in an application, such as compose an email message or open the calendar in a mail program, create a new document in a word processor, launch an application in a certain mode, or launch one of its subcommands. An application should not clutter the menu with advanced features that standard users won't need or one-time actions such as registration. Do not use tasks for promotional items such as upgrades or special offers.</source>
          <target state="translated">응용 프로그램은 프로그램 기능과 사용자가 수행해야하는 주요 기능을 기반으로 작업을 정의합니다. 작업을 수행하기 위해 응용 프로그램을 실행할 필요가 없으므로 작업에 컨텍스트가 없어야합니다. 전자 메일 메시지 작성 또는 메일 프로그램에서 캘린더 열기, 워드 프로세서에서 새 문서 만들기, 특정 모드에서 응용 프로그램 시작과 같이 일반 사용자가 응용 프로그램에서 수행하는 통계적으로 가장 일반적인 작업이어야합니다. 또는 부속 명령 중 하나를 실행하십시오. 응용 프로그램은 표준 사용자에게 필요하지 않은 고급 기능이나 등록과 같은 일회성 작업으로 메뉴를 복잡하게 만들지 않아야합니다. 업그레이드 또는 특별 제안과 같은 판촉 품목에는 작업을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6c627943d09c2a5bccbb4d21c7bf6c8dda901cb7" translate="yes" xml:space="preserve">
          <source>Applying Updates</source>
          <target state="translated">업데이트 적용</target>
        </trans-unit>
        <trans-unit id="bcb396573d6555eca2779cb68edf78ba35f04874" translate="yes" xml:space="preserve">
          <source>Approval and Request Changes Workflow</source>
          <target state="translated">승인 및 요청 변경 워크 플로우</target>
        </trans-unit>
        <trans-unit id="edec20a986ce95ea4affb249a152453cb57ff3e5" translate="yes" xml:space="preserve">
          <source>Apps will not be aware of DNS changes.</source>
          <target state="translated">앱은 DNS 변경을 인식하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="af4f4762f9bd3f0f4a10caf5b6e63dc4ce543724" translate="yes" xml:space="preserve">
          <source>Arabic</source>
          <target state="translated">Arabic</target>
        </trans-unit>
        <trans-unit id="50354e2a524e055650f1d24c28e47393f8259563" translate="yes" xml:space="preserve">
          <source>Archives Are Read-only</source>
          <target state="translated">아카이브는 읽기 전용입니다</target>
        </trans-unit>
        <trans-unit id="1a0d21145500640fd3f6136eeba595bfe934d364" translate="yes" xml:space="preserve">
          <source>Armenian</source>
          <target state="translated">Armenian</target>
        </trans-unit>
        <trans-unit id="31df4a74b61e86322dd8522bf6aa4c535cac65c0" translate="yes" xml:space="preserve">
          <source>As a future consideration, we may introduce one or both of the following:</source>
          <target state="translated">향후 고려 사항으로 다음 중 하나 또는 둘 모두를 소개 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="987796db5ea222bede6b2932e30d8596b75bbe80" translate="yes" xml:space="preserve">
          <source>As a workaround, you can leave various files unpacked using the &lt;code&gt;--unpack&lt;/code&gt; option. In the following example, shared libraries of native Node.js modules will not be packed:</source>
          <target state="translated">해결 방법으로 &lt;code&gt;--unpack&lt;/code&gt; 옵션을 사용하여 다양한 파일의 압축을 풀 수 있습니다 . 다음 예제에서는 기본 Node.js 모듈의 공유 라이브러리가 압축되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad191dcd03a644961a274beba130c36bf5cbc3e6" translate="yes" xml:space="preserve">
          <source>As an example, to use the official AWS SDK in your application, you'd first install it as a dependency:</source>
          <target state="translated">예를 들어, 애플리케이션에서 공식 AWS SDK를 사용하려면 먼저 종속성으로 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="a55f951abb69a8b6e569b303bbc9133dd4355ae0" translate="yes" xml:space="preserve">
          <source>As far as development is concerned, an Electron application is essentially a Node.js application. The starting point is a &lt;code&gt;package.json&lt;/code&gt; that is identical to that of a Node.js module. A most basic Electron app would have the following folder structure:</source>
          <target state="translated">개발과 관련하여 Electron 응용 프로그램은 본질적으로 Node.js 응용 프로그램입니다. 시작점은 Node.js 모듈과 동일한 &lt;code&gt;package.json&lt;/code&gt; 입니다. 가장 기본적인 Electron 앱의 폴더 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ead76eba7d5456a960bb6369e8361af497352d17" translate="yes" xml:space="preserve">
          <source>As it was mentioned before, Electron has two types of processes: Main and Renderer.</source>
          <target state="translated">앞서 언급했듯이 Electron에는 Main과 Renderer라는 두 가지 유형의 프로세스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9bf82adea32e120d943fd70c1dbb521eaef916f" translate="yes" xml:space="preserve">
          <source>As of 0.37, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; to make it easier to use built-in modules.</source>
          <target state="translated">0.37 부터는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;구조화 할당&lt;/a&gt; 을 사용하여 내장 모듈을보다 쉽게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c260c0579ac41e6b6f34d13b2e031da798cf4af" translate="yes" xml:space="preserve">
          <source>As of version 2.0 Electron &lt;a href=&quot;https://semver.org&quot;&gt;follows &lt;code&gt;semver&lt;/code&gt;&lt;/a&gt;. For most applications, and using any recent version of npm, running &lt;code&gt;$ npm install electron&lt;/code&gt; will do the right thing.</source>
          <target state="translated">2.0 버전부터 Electron &lt;a href=&quot;https://semver.org&quot;&gt;은 &lt;code&gt;semver&lt;/code&gt; 를 따릅니다&lt;/a&gt; . 대부분의 응용 프로그램과 최신 버전의 npm을 사용 &lt;code&gt;$ npm install electron&lt;/code&gt; 실행 하면 올바른 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ccd1db6cd664cb3c1e3b112542a4071141c3a3c3" translate="yes" xml:space="preserve">
          <source>As of version 2.0.0, Electron follows &lt;a href=&quot;#semver&quot;&gt;semver&lt;/a&gt;. The following command will install the most recent stable build of Electron:</source>
          <target state="translated">버전 2.0.0부터 Electron은 &lt;a href=&quot;#semver&quot;&gt;semver를 따릅니다&lt;/a&gt; . 다음 명령은 가장 안정적인 Electron 빌드를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="2e0b47edfcc255f426f162848aa58454f38cae35" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-flashwindow#remarks&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-flashwindow#remarks&quot;&gt;MSDN&lt;/a&gt; 에서 인용 :</target>
        </trans-unit>
        <trans-unit id="b15c8b35834a30255b4f0207919585a6b23442a3" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#icon-overlays&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#icon-overlays&quot;&gt;MSDN&lt;/a&gt; 에서 인용 :</target>
        </trans-unit>
        <trans-unit id="2373bedd6ae9d89093cbceb22aa6eb4c011ef184" translate="yes" xml:space="preserve">
          <source>As quoted from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#thumbnail-toolbars&quot;&gt;MSDN&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/shell/taskbar-extensions#thumbnail-toolbars&quot;&gt;MSDN&lt;/a&gt; 에서 인용 :</target>
        </trans-unit>
        <trans-unit id="746a25e036872a9298fd01752d5e5d3f9f535f45" translate="yes" xml:space="preserve">
          <source>As soon as a release branch is cut for a major, master must be bumped to the next major. I.e. &lt;code&gt;master&lt;/code&gt; is always versioned as the next theoretical release branch</source>
          <target state="translated">메이저에 대한 릴리스 분기가 절단되는 즉시 마스터는 다음 메이저로 이동해야합니다. IE &lt;code&gt;master&lt;/code&gt; 는 항상 다음 이론적 릴리스 분기로 버전이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="c0b75b9c69af019e80a796f012273099dd4f1e84" translate="yes" xml:space="preserve">
          <source>As stated above, some Node APIs will unpack the file to the filesystem when called. Apart from the performance issues, various anti-virus scanners might be triggered by this behavior.</source>
          <target state="translated">위에서 언급했듯이 일부 Node API는 호출 될 때 파일을 파일 시스템으로 압축 해제합니다. 성능 문제 외에도 다양한 바이러스 백신 스캐너가이 동작으로 인해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ba271114b142c3a7f71f006ad86669ca292d8e1" translate="yes" xml:space="preserve">
          <source>As the final step, check for updates. The example below will check every minute:</source>
          <target state="translated">마지막 단계로 업데이트를 확인하십시오. 아래 예제는 1 분마다 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3bfa4dc961d82587292820671241f9ca60adf598" translate="yes" xml:space="preserve">
          <source>As web developers, we usually enjoy the strong security net of the browser - the risks associated with the code we write are relatively small. Our websites are granted limited powers in a sandbox, and we trust that our users enjoy a browser built by a large team of engineers that is able to quickly respond to newly discovered security threats.</source>
          <target state="translated">웹 개발자로서 우리는 일반적으로 강력한 브라우저 보안 브라우저를 사용합니다. 우리가 작성하는 코드와 관련된 위험은 비교적 작습니다. 우리의 웹 사이트는 샌드 박스에서 제한된 권한을 부여받으며, 사용자는 새로 발견 된 보안 위협에 신속하게 대응할 수있는 대규모 엔지니어 팀이 구축 한 브라우저를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cf9e09d354a1871e27a510af458a14ab4d0acf27" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;snapcraft.yaml&lt;/code&gt; instructs the system to launch a file called &lt;code&gt;electron-launch&lt;/code&gt;. In this example, it passes information on to the app's binary:</source>
          <target state="translated">보시다시피 &lt;code&gt;snapcraft.yaml&lt;/code&gt; 은 시스템에 &lt;code&gt;electron-launch&lt;/code&gt; 라는 파일을 시작하도록 지시합니다 . 이 예제에서는 정보를 앱의 바이너리에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="f27c970d945c01cdb95b48535cf74d70a0763d0a" translate="yes" xml:space="preserve">
          <source>As you can see, the renderer callback's synchronous return value was not as expected, and didn't match the return value of an identical callback that lives in the main process.</source>
          <target state="translated">보시다시피, 렌더러 콜백의 동기 반환 값이 예상과 다르고 기본 프로세스에있는 동일한 콜백의 반환 값과 일치하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3548e0b6c01c9c5d2d8f56a762e842c836555b17" translate="yes" xml:space="preserve">
          <source>As you can see, users get two options: Move the app straight to the trash or cancel running it. You don't want your users to see that dialog.</source>
          <target state="translated">보시다시피 사용자에게는 앱을 휴지통으로 바로 이동하거나 실행을 취소하는 두 가지 옵션이 있습니다. 사용자가 해당 대화 상자를 보지 않기를 원합니다.</target>
        </trans-unit>
        <trans-unit id="b017617e28fa9752f51a25e9b89a805226e8657e" translate="yes" xml:space="preserve">
          <source>As you might already be able to guess, this has important security implications if you ever attempt to load remote content. You can find more information and guidance on loading remote content in our &lt;a href=&quot;security&quot;&gt;security documentation&lt;/a&gt;.</source>
          <target state="translated">이미 짐작할 수 있듯이 원격 컨텐츠를로드하려고 시도하면 보안에 중요한 영향을 미칩니다. &lt;a href=&quot;security&quot;&gt;보안 문서&lt;/a&gt; 에서 원격 컨텐츠로드에 대한 자세한 정보와 지침을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfe32ba36b6db876022e02fc4037495703779aeb" translate="yes" xml:space="preserve">
          <source>Aside: Communication Between Processes</source>
          <target state="translated">옆으로 : 프로세스 간 통신</target>
        </trans-unit>
        <trans-unit id="8648c548b76e7fe47f6990f972e4d15747443a00" translate="yes" xml:space="preserve">
          <source>Ask for help if you're not sure how to fix them</source>
          <target state="translated">문제를 해결하는 방법을 잘 모를 경우 도움을 요청하십시오</target>
        </trans-unit>
        <trans-unit id="825e2ae311d70a24ea230e616a07eccd8c443a38" translate="yes" xml:space="preserve">
          <source>Asking for General Help</source>
          <target state="translated">일반적인 도움 요청</target>
        </trans-unit>
        <trans-unit id="b978123b473c6f63b4d64b7089f262c245e7d91b" translate="yes" xml:space="preserve">
          <source>Asks the server whether there is an update. You must call &lt;code&gt;setFeedURL&lt;/code&gt; before using this API.</source>
          <target state="translated">서버에 업데이트가 있는지 묻습니다. 이 API를 사용하기 전에 &lt;code&gt;setFeedURL&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5fdec7b1203a91af46c75c768e3315a0443dec4b" translate="yes" xml:space="preserve">
          <source>Assertion failed: ((handle))-&amp;gt;activecnt &amp;gt;= 0</source>
          <target state="translated">어설 션 실패 : ((핸들))-&amp;gt; activecnt&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="54e20f198ffcab84cd3b670a5985b7c48eba2fb4" translate="yes" xml:space="preserve">
          <source>Assigning &lt;code&gt;src&lt;/code&gt; its own value will reload the current page.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 에 고유 한 값을 할당 하면 현재 페이지가 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="0a4f3577cd4bb7c83746ab7f3ea12b0c3fb241d4" translate="yes" xml:space="preserve">
          <source>Assistive Technology</source>
          <target state="translated">보조 기술</target>
        </trans-unit>
        <trans-unit id="89c782c42b440e73bfec11bc97dc49e5ffa94ebf" translate="yes" xml:space="preserve">
          <source>Assuming you have &lt;code&gt;electron&lt;/code&gt; or &lt;code&gt;electron-prebuilt&lt;/code&gt; installed as a local project dependency:</source>
          <target state="translated">로컬 프로젝트 종속성으로 &lt;code&gt;electron&lt;/code&gt; 또는 &lt;code&gt;electron-prebuilt&lt;/code&gt; 설치 했다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8fb20a8de0e77b0344aace90e4ec7c3f06839f6" translate="yes" xml:space="preserve">
          <source>Assuming you have &lt;code&gt;electron&lt;/code&gt; or &lt;code&gt;electron-prebuilt&lt;/code&gt; installed globally:</source>
          <target state="translated">전 세계에 &lt;code&gt;electron&lt;/code&gt; 또는 &lt;code&gt;electron-prebuilt&lt;/code&gt; 설치되어 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="d04749f1bbffe665533d63ba3916c5ac74ef55d7" translate="yes" xml:space="preserve">
          <source>Assuming you have a working Electron application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following line to the &lt;code&gt;index.html&lt;/code&gt; file before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; 에서 작동하는 Electron 애플리케이션이 있다고 가정 하고 닫는 &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; 태그 앞에 다음 줄을 &lt;code&gt;index.html&lt;/code&gt; 파일에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a693bc36bd9e296cfd4be90e42ecca418aa80d3c" translate="yes" xml:space="preserve">
          <source>At least 25GB disk space and 8GB RAM.</source>
          <target state="translated">최소 25GB 디스크 공간 및 8GB RAM</target>
        </trans-unit>
        <trans-unit id="d8a95f87b86a4822877c30ab74a791efff3ca3b4" translate="yes" xml:space="preserve">
          <source>At least Node 4 (to check, run &lt;code&gt;node -v&lt;/code&gt;)</source>
          <target state="translated">노드 4 이상 ( &lt;code&gt;node -v&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="98e4493514bc27c38e38d35f1af38ce659b82c2e" translate="yes" xml:space="preserve">
          <source>At the same time, preload scripts still have access to the &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;window&lt;/code&gt; objects. In other words, you're getting a decent return on a likely very small investment.</source>
          <target state="translated">동시에 사전로드 스크립트는 여전히 &lt;code&gt;document&lt;/code&gt; 및 &lt;code&gt;window&lt;/code&gt; 객체에 액세스 할 수 있습니다. 다시 말해, 당신은 아마도 아주 작은 투자에 대한 적절한 수익을 얻고 있습니다.</target>
        </trans-unit>
        <trans-unit id="121515b69e07ab07962bfd19db93ff6a83266c8c" translate="yes" xml:space="preserve">
          <source>At this point, you'll need to install &lt;code&gt;electron&lt;/code&gt; itself. The recommended way of doing so is to install it as a development dependency in your app, which allows you to work on multiple apps with different Electron versions. To do so, run the following command from your app's directory:</source>
          <target state="translated">이 시점에서 &lt;code&gt;electron&lt;/code&gt; 자체 를 설치해야 합니다. 권장되는 방법은 앱에 개발 종속성으로 설치하여 다른 Electron 버전의 여러 앱에서 작업 할 수 있도록하는 것입니다. 이렇게하려면 앱 디렉토리에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="translated">Atom</target>
        </trans-unit>
        <trans-unit id="3d30809420aad6882daab65fb87d3dc037ba696d" translate="yes" xml:space="preserve">
          <source>Attaches the debugger to the &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">디버거를 &lt;code&gt;webContents&lt;/code&gt; 에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="81c9830488b56613dc51c43df39e992b2bd18c70" translate="yes" xml:space="preserve">
          <source>Attaching</source>
          <target state="translated">Attaching</target>
        </trans-unit>
        <trans-unit id="d59a1c784014996bf71043302c79a8932a9dd011" translate="yes" xml:space="preserve">
          <source>Attaching to and Debugging Electron</source>
          <target state="translated">전자 연결 및 디버깅</target>
        </trans-unit>
        <trans-unit id="c02f1b2e8b05ca04d5b3bc15fcb22448b930e49e" translate="yes" xml:space="preserve">
          <source>Attempts to free memory that is no longer being used (like images from a previous navigation).</source>
          <target state="translated">더 이상 사용되지 않는 메모리를 확보하려고합니다 (이전 탐색의 이미지와 같이).</target>
        </trans-unit>
        <trans-unit id="daec8ad48ba7572de1000735593c64d20460c944" translate="yes" xml:space="preserve">
          <source>Automated Testing with a Custom Driver</source>
          <target state="translated">맞춤형 드라이버를 사용한 자동화 된 테스트</target>
        </trans-unit>
        <trans-unit id="ea6acf84f71ab8531b7cc95ce24694ca867fbf19" translate="yes" xml:space="preserve">
          <source>Automatic management of system proxy configuration, support of the wpad protocol and proxy pac configuration files.</source>
          <target state="translated">시스템 프록시 구성, wpad 프로토콜 지원 및 프록시 pac 구성 파일 자동 관리.</target>
        </trans-unit>
        <trans-unit id="71d6856cbeed3d9b8b852f3ad1b2a03051957e56" translate="yes" xml:space="preserve">
          <source>Automatic tunneling of HTTPS requests.</source>
          <target state="translated">HTTPS 요청의 자동 터널링.</target>
        </trans-unit>
        <trans-unit id="74c401d09421f29deef996b528044972be956881" translate="yes" xml:space="preserve">
          <source>Automatically tested</source>
          <target state="translated">자동 테스트</target>
        </trans-unit>
        <trans-unit id="527de779bd39bb5579a224b9d2656d01769dcea4" translate="yes" xml:space="preserve">
          <source>Available APIs</source>
          <target state="translated">사용 가능한 API</target>
        </trans-unit>
        <trans-unit id="7bc70cf15916af21dbddd169d09b66d21fc01528" translate="yes" xml:space="preserve">
          <source>Available key codes</source>
          <target state="translated">사용 가능한 키 코드</target>
        </trans-unit>
        <trans-unit id="8036ec78ca75218a35881d7cd9e2c046e70a18a6" translate="yes" xml:space="preserve">
          <source>Available modifiers</source>
          <target state="translated">사용 가능한 수정 자</target>
        </trans-unit>
        <trans-unit id="9fefb28d5c9a502849abaf2b38532a593c2449ed" translate="yes" xml:space="preserve">
          <source>Avoid platform-dependent code:</source>
          <target state="translated">플랫폼 종속 코드를 피하십시오.</target>
        </trans-unit>
        <trans-unit id="68852895e0570a356c8af13b8388d1678a58501f" translate="yes" xml:space="preserve">
          <source>Azerbaijani</source>
          <target state="translated">Azerbaijani</target>
        </trans-unit>
        <trans-unit id="c93f3724f4b1e2dd366664c5ca7c87722fe941ec" translate="yes" xml:space="preserve">
          <source>Backbone Debugger</source>
          <target state="translated">백본 디버거</target>
        </trans-unit>
        <trans-unit id="27dcce424ffcd474e48acce835a11f61b8f7e1a9" translate="yes" xml:space="preserve">
          <source>Background and Requirements</source>
          <target state="translated">배경과 요구 사항</target>
        </trans-unit>
        <trans-unit id="30eb7d38820aba659de86c6866db55c95e748c6e" translate="yes" xml:space="preserve">
          <source>Backport Node's V8 patches to our copy of V8</source>
          <target state="translated">V8 사본에 대한 백 포트 노드의 V8 패치</target>
        </trans-unit>
        <trans-unit id="bb6f955aacbe511f0166d8a199d4db6ed90499a5" translate="yes" xml:space="preserve">
          <source>Backtrace</source>
          <target state="translated">Backtrace</target>
        </trans-unit>
        <trans-unit id="c87df04a6212fd94333fb48d7e78e47251cb9af4" translate="yes" xml:space="preserve">
          <source>Basque</source>
          <target state="translated">Basque</target>
        </trans-unit>
        <trans-unit id="45aa427b68c23a9206911e4ded0718521dc98bee" translate="yes" xml:space="preserve">
          <source>Because the requests made by Auto Update aren't under your direct control, you may find situations that are difficult to handle (such as if the update server is behind authentication). The &lt;code&gt;url&lt;/code&gt; field does support files, which means that with some effort, you can sidestep the server-communication aspect of the process. &lt;a href=&quot;https://github.com/electron/electron/issues/5020#issuecomment-477636990&quot;&gt;Here's an example of how this could work&lt;/a&gt;.</source>
          <target state="translated">자동 업데이트에 의한 요청은 사용자가 직접 제어하지 않기 때문에 처리하기 어려운 상황 (예 : 업데이트 서버가 인증 뒤에있는 경우)을 찾을 수 있습니다. &lt;code&gt;url&lt;/code&gt; 필드는 약간의 노력으로, 당신은 프로세스의 서버 통신 측면을 회피 할 수있는 수단 지원 파일을 수행합니다. &lt;a href=&quot;https://github.com/electron/electron/issues/5020#issuecomment-477636990&quot;&gt;이것이 어떻게 작동 할 수 있는지에 대한 예입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ff2cc445fe6850259e799ac6f7c260161793164" translate="yes" xml:space="preserve">
          <source>Before Node 10</source>
          <target state="translated">노드 10 이전</target>
        </trans-unit>
        <trans-unit id="78f3072557e9cc20b557fd84b95a0029b13421dd" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is attached, Electron will fire the &lt;code&gt;will-attach-webview&lt;/code&gt; event on the hosting &lt;code&gt;webContents&lt;/code&gt;. Use the event to prevent the creation of WebViews with possibly insecure options.</source>
          <target state="translated">&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그가 연결 되기 전에 Electron은 호스팅 &lt;code&gt;webContents&lt;/code&gt; 에서 &lt;code&gt;will-attach-webview&lt;/code&gt; 이벤트를 시작합니다 . 안전하지 않은 옵션으로 WebView를 작성하지 못하게하려면 이벤트를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eb767147b1d38f8c2173893b47b5ca15910b95bf" translate="yes" xml:space="preserve">
          <source>Before a &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tag is attached, Electron will fire the &lt;code&gt;will-attach-webview&lt;/code&gt; event on the hosting &lt;code&gt;webContents&lt;/code&gt;. Use the event to prevent the creation of &lt;code&gt;webViews&lt;/code&gt; with possibly insecure options.</source>
          <target state="translated">&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그가 첨부 되기 전에 Electron은 호스팅 &lt;code&gt;webContents&lt;/code&gt; 에서 &lt;code&gt;will-attach-webview&lt;/code&gt; 이벤트를 실행합니다 . 안전하지 &lt;code&gt;webViews&lt;/code&gt; 수있는 옵션이있는 webView 생성을 방지하려면 이벤트를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="88386a43a16cac4f89fdea8745097dbf608185e7" translate="yes" xml:space="preserve">
          <source>Before a pull request can be merged, it &lt;strong&gt;must&lt;/strong&gt; have a pull request title with a semantic prefix.</source>
          <target state="translated">풀 요청을 병합 &lt;strong&gt;하려면 먼저&lt;/strong&gt; 의미 접두사가있는 풀 요청 제목이 &lt;strong&gt;있어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c14231b3f1e242aed7e3ef713737e867875aef20" translate="yes" xml:space="preserve">
          <source>Before a pull request can be merged, it should include at least one semantic commit message, though it's not necessary for all commits in the pull request to be semantic. Alternatively, you can &lt;strong&gt;update your pull request title&lt;/strong&gt; to start with a semantic prefix.</source>
          <target state="translated">풀 요청을 병합하려면 하나 이상의 의미있는 커밋 메시지가 포함되어야하지만, 풀 요청의 모든 커밋이 의미론적일 필요는 없습니다. 또는 시맨틱 접두어로 시작하도록 &lt;strong&gt;풀 요청 제목&lt;/strong&gt; 을 &lt;strong&gt;업데이트&lt;/strong&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2684e603afc7c80ff573e243a04b2a37479fdfeb" translate="yes" xml:space="preserve">
          <source>Before proceeding with Electron you need to install &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt;. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available.</source>
          <target state="translated">Electron을 진행하기 전에 &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt; 를 설치해야합니다 . 사용 가능한 최신 &lt;code&gt;LTS&lt;/code&gt; 또는 &lt;code&gt;Current&lt;/code&gt; 버전 을 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ed15b77aede767c1b301b0885eb6b8ae9687ff51" translate="yes" xml:space="preserve">
          <source>Before publishing to npm, you'll need to log into npm as Electron. Optionally, you may find &lt;a href=&quot;https://www.npmjs.com/package/npmrc&quot;&gt;npmrc&lt;/a&gt; to be a useful way to keep Electron's profile side-by-side with your own:</source>
          <target state="translated">npm에 게시하기 전에 Electron으로 npm에 로그인해야합니다. 선택적으로 &lt;a href=&quot;https://www.npmjs.com/package/npmrc&quot;&gt;npmrc&lt;/a&gt; 가 Electron의 프로파일을 나란히 유지할 수있는 유용한 방법이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad03ef75d0df93ed26522801a179baa4ce38c0ff" translate="yes" xml:space="preserve">
          <source>Before running the CLI for the first time, you will have to setup the &quot;Windows Desktop App Converter&quot;. This will take a few minutes, but don't worry - you only have to do this once. Download and Desktop App Converter from &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/porting/desktop-to-uwp-run-desktop-app-converter&quot;&gt;here&lt;/a&gt;. You will receive two files: &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; and &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="translated">CLI를 처음 실행하기 전에 &quot;Windows Desktop App Converter&quot;를 설정해야합니다. 이 작업에는 몇 분이 걸리지 만 걱정하지 마십시오.이 작업은 한 번만 수행하면됩니다. &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/porting/desktop-to-uwp-run-desktop-app-converter&quot;&gt;여기&lt;/a&gt; 에서 데스크톱 앱 변환기를 다운로드하고 다운로드 하십시오 . &lt;code&gt;DesktopAppConverter.zip&lt;/code&gt; 및 &lt;code&gt;BaseImage-14316.wim&lt;/code&gt; 파일이 수신됩니다 .</target>
        </trans-unit>
        <trans-unit id="925916c686f05378c56f064c6fdb9dc8f0ab3a77" translate="yes" xml:space="preserve">
          <source>Before signing Windows builds, you must do the following:</source>
          <target state="translated">Windows 빌드에 서명하기 전에 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="af769cb7ca76764d746b06c177751bd0650781ab" translate="yes" xml:space="preserve">
          <source>Before signing macOS builds, you must do the following:</source>
          <target state="translated">macOS 빌드에 서명하기 전에 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="04f57da1fb4c4fcb1e873d624e2f96955d212c17" translate="yes" xml:space="preserve">
          <source>Before signing your app, you need to know the Team ID of your account. To locate your Team ID, Sign in to &lt;a href=&quot;https://developer.apple.com/account/&quot;&gt;Apple Developer Center&lt;/a&gt;, and click Membership in the sidebar. Your Team ID appears in the Membership Information section under the team name.</source>
          <target state="translated">앱에 서명하기 전에 계정의 팀 ID를 알아야합니다. 팀 ID를 찾으려면 &lt;a href=&quot;https://developer.apple.com/account/&quot;&gt;Apple Developer Center에&lt;/a&gt; 로그인 하고 사이드 바에서 멤버십을 클릭하십시오. 팀 ID가 멤버십 정보 섹션에 팀 이름 아래에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="06d31aaad4ad6ca8d9a4754ed2454962c4c268b4" translate="yes" xml:space="preserve">
          <source>Before submitting your changes in a pull request, always run the full test suite. To run the tests:</source>
          <target state="translated">풀 요청으로 변경 사항을 제출하기 전에 항상 전체 테스트 스위트를 실행하십시오. 테스트를 실행하려면</target>
        </trans-unit>
        <trans-unit id="4bc1addd1ab423fa4789adccdc27c27f32a3e381" translate="yes" xml:space="preserve">
          <source>Before we can dive into Electron's APIs, we need to discuss the two process types available in Electron. They are fundamentally different and important to understand.</source>
          <target state="translated">Electron의 API를 살펴보기 전에 Electron에서 사용할 수있는 두 가지 프로세스 유형에 대해 논의해야합니다. 그것들은 근본적으로 다르고 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="146605ea31df8384dfce11222459f79cedeff2f6" translate="yes" xml:space="preserve">
          <source>Begin subscribing for presentation events and captured frames, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(frameBuffer, dirtyRect)&lt;/code&gt; when there is a presentation event.</source>
          <target state="translated">프리젠 테이션 이벤트 및 캡처 된 프레임을 구독하기 시작 하면 프리젠 테이션 이벤트가있을 때 &lt;code&gt;callback(frameBuffer, dirtyRect)&lt;/code&gt; 하여 &lt;code&gt;callback&lt;/code&gt; 이 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a017af5e80e204ee4aab5d932bd6c88511cf049f" translate="yes" xml:space="preserve">
          <source>Begin subscribing for presentation events and captured frames, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(image, dirtyRect)&lt;/code&gt; when there is a presentation event.</source>
          <target state="translated">프리젠 테이션 이벤트 및 캡처 프레임 신청, 시작의 &lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(image, dirtyRect)&lt;/code&gt; 프리젠 테이션 이벤트가있다.</target>
        </trans-unit>
        <trans-unit id="33f14c14004f97a29a6cc78548e85ee933dc89ed" translate="yes" xml:space="preserve">
          <source>Being based on Chromium, Electron requires a display driver to function. If Chromium can't find a display driver, Electron will fail to launch - and therefore not executing any of your tests, regardless of how you are running them. Testing Electron-based apps on Travis, Circle, Jenkins or similar Systems requires therefore a little bit of configuration. In essence, we need to use a virtual display driver.</source>
          <target state="translated">Electron은 Chromium을 기반으로 작동하려면 디스플레이 드라이버가 필요합니다. Chromium에서 디스플레이 드라이버를 찾지 못하면 Electron이 시작되지 않으므로 실행 방법에 관계없이 테스트가 실행되지 않습니다. Travis, Circle, Jenkins 또는 이와 유사한 시스템에서 Electron 기반 앱을 테스트하려면 약간의 구성이 필요합니다. 본질적으로 가상 디스플레이 드라이버를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c7205595032bf70cf7a8260e25275d136c5ea00" translate="yes" xml:space="preserve">
          <source>Belarusian</source>
          <target state="translated">Belarusian</target>
        </trans-unit>
        <trans-unit id="77c8a3ffa876685a6624d57de24b92252306b0e8" translate="yes" xml:space="preserve">
          <source>Below are milestones in Electron's history.</source>
          <target state="translated">아래는 Electron의 역사에서 이정표입니다.</target>
        </trans-unit>
        <trans-unit id="47bc19d9eead7cd43863e72b19ea42b9781ad523" translate="yes" xml:space="preserve">
          <source>Below is a table explicitly mapping types of changes to their corresponding category of semver (e.g. Major, Minor, Patch).</source>
          <target state="translated">아래는 변경 유형을 해당하는 semver 범주 (예 : Major, Minor, Patch)에 명시 적으로 매핑하는 표입니다.</target>
        </trans-unit>
        <trans-unit id="df20885c8b353cbb6d314abd608559414e6cad80" translate="yes" xml:space="preserve">
          <source>Below is an example of a simple slot machine touch bar game with a button and some labels.</source>
          <target state="translated">아래는 버튼과 일부 레이블이있는 간단한 슬롯 머신 터치 바 게임의 예입니다.</target>
        </trans-unit>
        <trans-unit id="b5109d196ee48a9a9ef9758e435787aa3c2e57f0" translate="yes" xml:space="preserve">
          <source>Below is an example of creating a menu dynamically in a web page (render process) by using the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module, and showing it when the user right clicks the page:</source>
          <target state="translated">다음은 &lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈 을 사용하여 웹 페이지 (렌더링 프로세스)에서 메뉴를 동적으로 작성 하고 사용자가 페이지를 마우스 오른쪽 단추로 클릭하면 표시되는 예입니다.</target>
        </trans-unit>
        <trans-unit id="f4465f784b2c04298788d3ed89b3076749452fcb" translate="yes" xml:space="preserve">
          <source>Below is an example of some of the additional options that may be set which may be different on each platform.</source>
          <target state="translated">아래는 설정 될 수있는 추가 옵션 중 일부이며 각 플랫폼마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="198e9c0851a2cebe3440bd1cafd71b98e2d83392" translate="yes" xml:space="preserve">
          <source>Bengali</source>
          <target state="translated">Bengali</target>
        </trans-unit>
        <trans-unit id="1a64a539329669d22ab528af0f26784b48ba945c" translate="yes" xml:space="preserve">
          <source>Beta Releases and Bug Fixes</source>
          <target state="translated">베타 릴리스 및 버그 수정</target>
        </trans-unit>
        <trans-unit id="3c684d47d516e1c9c5afbdb2d9583d0a8defb9ad" translate="yes" xml:space="preserve">
          <source>Beta releases</source>
          <target state="translated">베타 출시</target>
        </trans-unit>
        <trans-unit id="e043f93cdc1c8131a7afac8b95e46ea537d48613" translate="yes" xml:space="preserve">
          <source>Beta version change</source>
          <target state="translated">베타 버전 변경</target>
        </trans-unit>
        <trans-unit id="3acc244c8b77017fec8748a27cc74dfe9a794cff" translate="yes" xml:space="preserve">
          <source>Bihari</source>
          <target state="translated">Bihari</target>
        </trans-unit>
        <trans-unit id="26c87a44dbc3760c31488c9592cdd2d6729dd6ad" translate="yes" xml:space="preserve">
          <source>Blink is the name of the rendering engine behind Chromium. As with &lt;code&gt;experimentalFeatures&lt;/code&gt;, the &lt;code&gt;enableBlinkFeatures&lt;/code&gt; property allows developers to enable features that have been disabled by default.</source>
          <target state="translated">깜박임은 Chromium 뒤의 렌더링 엔진 이름입니다. 와 마찬가지로 &lt;code&gt;experimentalFeatures&lt;/code&gt; 의 &lt;code&gt;enableBlinkFeatures&lt;/code&gt; 의 속성은 기본적으로 비활성화 된 기능을 사용하는 개발자 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="261b5efc5d3087ebb7a36e4fd992305a710a84cf" translate="yes" xml:space="preserve">
          <source>Block the system from entering low-power (sleep) mode.</source>
          <target state="translated">시스템이 절전 (절전) 모드로 들어 가지 않도록 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="7c52ef314be6ccf843ccebe4dcc7d2303a132ad3" translate="yes" xml:space="preserve">
          <source>Blowfish - &lt;a href=&quot;https://www.schneier.com/cryptography/blowfish/&quot;&gt;https://www.schneier.com/cryptography/blowfish/&lt;/a&gt;</source>
          <target state="translated">복어-https: &lt;a href=&quot;https://www.schneier.com/cryptography/blowfish/&quot;&gt;//www.schneier.com/cryptography/blowfish/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2abbd64ce2b596d241312e216d17be429160b5" translate="yes" xml:space="preserve">
          <source>BluetoothDevice</source>
          <target state="translated">BluetoothDevice</target>
        </trans-unit>
        <trans-unit id="b1b4a1505eb970667bee48b6139e6327d9ddf4cb" translate="yes" xml:space="preserve">
          <source>BluetoothDevice Object</source>
          <target state="translated">블루투스 장치 객체</target>
        </trans-unit>
        <trans-unit id="8ef910285d569f2b95a95ddd84e19e88471916fd" translate="yes" xml:space="preserve">
          <source>Boilerplate vs CLI</source>
          <target state="translated">보일러 플레이트 vs CLI</target>
        </trans-unit>
        <trans-unit id="faf97d2b0ddcedafea04942e725afa3b3b5103c9" translate="yes" xml:space="preserve">
          <source>Boilerplates and CLIs</source>
          <target state="translated">보일러 플레이트 및 CLI</target>
        </trans-unit>
        <trans-unit id="5f70c4b77c5189dbe8768575ccd9deed5001eeb2" translate="yes" xml:space="preserve">
          <source>Bookmarks array</source>
          <target state="translated">책갈피 배열</target>
        </trans-unit>
        <trans-unit id="09273e0b3502cd35874b01a3ba91c106f87a667f" translate="yes" xml:space="preserve">
          <source>Bootstrapping</source>
          <target state="translated">Bootstrapping</target>
        </trans-unit>
        <trans-unit id="71d67418f341f2ca177be8a385287d08b2297a90" translate="yes" xml:space="preserve">
          <source>Bosnian</source>
          <target state="translated">Bosnian</target>
        </trans-unit>
        <trans-unit id="c2d89587b7d4219c67ddeb9a448c403a137170a1" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries are provided for Windows. &lt;a href=&quot;windows-arm&quot;&gt;Electron 6.0.8 and later add native support for Windows on Arm (&lt;code&gt;arm64&lt;/code&gt;) devices&lt;/a&gt;. Running apps packaged with previous versions is possible using the ia32 binary.</source>
          <target state="translated">두 &lt;code&gt;ia32&lt;/code&gt; ( &lt;code&gt;x86&lt;/code&gt; )와 &lt;code&gt;x64&lt;/code&gt; ( &lt;code&gt;amd64&lt;/code&gt; ) 바이너리는 Windows 용 제공됩니다. &lt;a href=&quot;windows-arm&quot;&gt;Electron 6.0.8 이상은 &lt;code&gt;arm64&lt;/code&gt; (Windows on Arm ) 장치 에 대한 기본 지원을 추가 합니다&lt;/a&gt; . ia32 바이너리를 사용하여 이전 버전으로 패키징 된 앱을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bd3f193cefa90f1db70c15b6967bd6e1a41be51" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;x86&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries are provided for Windows. Running Electron apps on Windows for ARM devices is possible by using the ia32 binary.</source>
          <target state="translated">두 &lt;code&gt;ia32&lt;/code&gt; ( &lt;code&gt;x86&lt;/code&gt; )와 &lt;code&gt;x64&lt;/code&gt; ( &lt;code&gt;amd64&lt;/code&gt; ) 바이너리는 Windows 용 제공됩니다. ia32 바이너리를 사용하면 ARM 장치 용 Windows에서 Electron 앱을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="510e5d169b89ac5ba13d857aa54251d81b6edf83" translate="yes" xml:space="preserve">
          <source>Both Chromium and Node.js are impressive feats of engineering built by thousands of talented developers. Given their popularity, their security is carefully tested and analyzed by equally skilled security researchers. Many of those researchers &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;disclose vulnerabilities responsibly&lt;/a&gt;, which generally means that researchers will give Chromium and Node.js some time to fix issues before publishing them. Your application will be more secure if it is running a recent version of Electron (and thus, Chromium and Node.js) for which potential security issues are not as widely known.</source>
          <target state="translated">Chromium과 Node.js는 모두 수천 명의 재능있는 개발자가 만든 엔지니어링의 놀라운 업적입니다. 그들의 인기를 감안할 때, 그들의 보안은 동등하게 숙련 된 보안 연구원에 의해 신중하게 테스트되고 분석됩니다. 많은 연구원들이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Responsible_disclosure&quot;&gt;책임감있게 취약성을 공개합니다&lt;/a&gt; . 이는 일반적으로 연구원들이 문제를 게시하기 전에 Chromium 및 Node.js에 문제를 해결할 시간을 제공한다는 것을 의미합니다. 잠재적 인 보안 문제가 널리 알려지지 않은 최신 버전의 Electron (따라서 Chromium 및 Node.js)을 실행하는 경우 애플리케이션이 더 안전 해집니다.</target>
        </trans-unit>
        <trans-unit id="be4af2c353e15de29e8d93efea67b7388d43af34" translate="yes" xml:space="preserve">
          <source>Both of these tools are using the &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools&quot;&gt;Accessibility Developer Tools&lt;/a&gt; library built by Google for Chrome. You can learn more about the accessibility audit rules this library uses on that &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules&quot;&gt;repository's wiki&lt;/a&gt;.</source>
          <target state="translated">이 두 도구 모두 Google Chrome 용으로 빌드 한 &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools&quot;&gt;내게 필요한 옵션 개발자 도구&lt;/a&gt; 라이브러리를 사용하고 있습니다. 이 라이브러리가 해당 &lt;a href=&quot;https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules&quot;&gt;저장소의 wiki&lt;/a&gt; 에서 사용하는 내게 필요한 옵션 감사 규칙에 대해 자세히 배울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9a1686778b35bbf4d4479bb987972a7fb446309" translate="yes" xml:space="preserve">
          <source>Both should build with no errors</source>
          <target state="translated">둘 다 오류없이 빌드해야합니다</target>
        </trans-unit>
        <trans-unit id="6b57344c80164ea02b63411ffe0ca16b0ba2cf06" translate="yes" xml:space="preserve">
          <source>Bounces the Downloads stack if the filePath is inside the Downloads folder.</source>
          <target state="translated">filePath가 Downloads 폴더 안에 있으면 다운로드 스택을 반송합니다.</target>
        </trans-unit>
        <trans-unit id="012355f5fc27c228945f8ac40c18e401aa26b67f" translate="yes" xml:space="preserve">
          <source>Breaking API Changes</source>
          <target state="translated">주요 API 변경</target>
        </trans-unit>
        <trans-unit id="8f6f50fe6a684e36f2680d1b1f0d995148104f1b" translate="yes" xml:space="preserve">
          <source>Breaking Changes</source>
          <target state="translated">주요 변경 사항</target>
        </trans-unit>
        <trans-unit id="cba591491d5beed4ba456b85b3bad4f1631094ea" translate="yes" xml:space="preserve">
          <source>Breton</source>
          <target state="translated">Breton</target>
        </trans-unit>
        <trans-unit id="6d19de09ba9d7749aec9c3648f36bca01c34240c" translate="yes" xml:space="preserve">
          <source>Brew some tea -- this may run for 30m or more.</source>
          <target state="translated">차를 끓여 라-30m 이상 지속될 수있다.</target>
        </trans-unit>
        <trans-unit id="c6fa28de9a14975b2c138ab9a406952d917d32a3" translate="yes" xml:space="preserve">
          <source>Brightray</source>
          <target state="translated">Brightray</target>
        </trans-unit>
        <trans-unit id="fc1a3ab849a525c1e10fcf025153d2e74047ba86" translate="yes" xml:space="preserve">
          <source>Brightray &lt;a href=&quot;https://github.com/electron-archive/brightray&quot;&gt;was&lt;/a&gt; a static library that made &lt;a href=&quot;#libchromiumcontent&quot;&gt;libchromiumcontent&lt;/a&gt; easier to use in applications. It is now deprecated and has been merged into Electron's codebase.</source>
          <target state="translated">Brightray &lt;a href=&quot;https://github.com/electron-archive/brightray&quot;&gt;는&lt;/a&gt; 응용 프로그램에서 &lt;a href=&quot;#libchromiumcontent&quot;&gt;libchromiumcontent를&lt;/a&gt; 보다 쉽게 ​​사용할 수 있는 정적 라이브러리입니다 . 더 이상 사용되지 않으며 Electron의 코드베이스에 병합되었습니다.</target>
        </trans-unit>
        <trans-unit id="8104b6cb4a86e53382b6cb3eeed05d66722548da" translate="yes" xml:space="preserve">
          <source>BrowserView</source>
          <target state="translated">BrowserView</target>
        </trans-unit>
        <trans-unit id="1d99d2f17a276b3ed6e3dd944ba35652373aebad" translate="yes" xml:space="preserve">
          <source>BrowserView()</source>
          <target state="translated">BrowserView()</target>
        </trans-unit>
        <trans-unit id="71e1b99e946bc877e27e4bd82365f34ec3ab89f6" translate="yes" xml:space="preserve">
          <source>BrowserWindow</source>
          <target state="translated">BrowserWindow</target>
        </trans-unit>
        <trans-unit id="7603222d969d1b4d324286d0736713890e2e258f" translate="yes" xml:space="preserve">
          <source>BrowserWindow()</source>
          <target state="translated">BrowserWindow()</target>
        </trans-unit>
        <trans-unit id="0da57026bfae6f9e27e4573147b07c889cd2e951" translate="yes" xml:space="preserve">
          <source>BrowserWindowProxy</source>
          <target state="translated">BrowserWindowProxy</target>
        </trans-unit>
        <trans-unit id="35e61163a106af7a7045553426323d740f924747" translate="yes" xml:space="preserve">
          <source>Bug fixes and features should always come with tests. A &lt;a href=&quot;https://electronjs.org/docs/development/testing&quot;&gt;testing guide&lt;/a&gt; has been provided to make the process easier. Looking at other tests to see how they should be structured can also help.</source>
          <target state="translated">버그 수정 및 기능은 항상 테스트와 함께 제공되어야합니다. &lt;a href=&quot;https://electronjs.org/docs/development/testing&quot;&gt;시험 가이드는&lt;/a&gt; 쉽게 과정을 제공하고있다. 다른 테스트를 살펴보고 어떻게 구성되어야하는지 확인하는 것도 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18c1fa591b452c8d17b84bb91885920e14de3534" translate="yes" xml:space="preserve">
          <source>Bug fixes and features should always come with tests. A &lt;a href=&quot;testing&quot;&gt;testing guide&lt;/a&gt; has been provided to make the process easier. Looking at other tests to see how they should be structured can also help.</source>
          <target state="translated">버그 수정 및 기능은 항상 테스트와 함께 제공되어야합니다. &lt;a href=&quot;testing&quot;&gt;시험 가이드는&lt;/a&gt; 쉽게 과정을 제공하고있다. 다른 테스트를 통해 구성 방법을 확인하는 것도 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2840ff145e20063d0960a433f0360c9e691485c" translate="yes" xml:space="preserve">
          <source>Bug fixes, regression fixes, and security patches can be admitted. Upon doing so, a new beta is released incrementing &lt;code&gt;N&lt;/code&gt;. e.g. &lt;code&gt;2.0.0-beta.2&lt;/code&gt;</source>
          <target state="translated">버그 수정, 회귀 수정 및 보안 패치를 승인 할 수 있습니다. 그렇게하면, 새로운 베타가 증가하여 &lt;code&gt;N&lt;/code&gt; 을 증가시킨다 . 예 : &lt;code&gt;2.0.0-beta.2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="558212cd299167a8f2dd310fd08530072aa7b37b" translate="yes" xml:space="preserve">
          <source>BugSplat</source>
          <target state="translated">BugSplat</target>
        </trans-unit>
        <trans-unit id="ce009fb57b439023d1a8feebe307ab4e851c2b10" translate="yes" xml:space="preserve">
          <source>Build Debug Electron with Debug libchromiumcontent</source>
          <target state="translated">디버그 libchromiumcontent를 사용하여 디버그 전자 빌드</target>
        </trans-unit>
        <trans-unit id="53637a316944a583c0e3ee3a30bb2ef0700fa1c3" translate="yes" xml:space="preserve">
          <source>Build Debug Electron with Release libchromiumcontent</source>
          <target state="translated">릴리스 libchromiumcontent로 디버그 전자 빌드</target>
        </trans-unit>
        <trans-unit id="063269248b07c74ca30cccad5c53724b2a7739ab" translate="yes" xml:space="preserve">
          <source>Build Electron.</source>
          <target state="translated">전자를 만드십시오.</target>
        </trans-unit>
        <trans-unit id="d7a32a929cb4983c90c7618b02a0ddabe3681174" translate="yes" xml:space="preserve">
          <source>Build Instructions</source>
          <target state="translated">빌드 지침</target>
        </trans-unit>
        <trans-unit id="72db67bcf73430a0810f7c243c27feeea417dba2" translate="yes" xml:space="preserve">
          <source>Build Instructions (Linux)</source>
          <target state="translated">빌드 지시 사항 (Linux)</target>
        </trans-unit>
        <trans-unit id="bcc21053b45d486064d346a6ec856f6116f258f8" translate="yes" xml:space="preserve">
          <source>Build Instructions (Windows)</source>
          <target state="translated">빌드 지시 사항 (Windows)</target>
        </trans-unit>
        <trans-unit id="fdcc4e38ad590649eb4ed2665f66e12534e59055" translate="yes" xml:space="preserve">
          <source>Build Instructions (experimental GN build)</source>
          <target state="translated">빌드 지침 (실험 GN 빌드)</target>
        </trans-unit>
        <trans-unit id="dac9234fc3e48836ba6c1583ff4151f851fc17df" translate="yes" xml:space="preserve">
          <source>Build Instructions (macOS)</source>
          <target state="translated">빌드 지시 사항 (macOS)</target>
        </trans-unit>
        <trans-unit id="b1f4e9a0c67d14f243003fc2683f3dc8bef6fc18" translate="yes" xml:space="preserve">
          <source>Build Scripts Hang Until Keypress</source>
          <target state="translated">키를 누를 때까지 빌드 스크립트가 중단됨</target>
        </trans-unit>
        <trans-unit id="add8e3220c66670d534a56cdd1b86b2eb8870394" translate="yes" xml:space="preserve">
          <source>Build System Overview</source>
          <target state="translated">빌드 시스템 개요</target>
        </trans-unit>
        <trans-unit id="bd46d68cd5835795a43e8b361a64d0a5c505fe47" translate="yes" xml:space="preserve">
          <source>Build Tools</source>
          <target state="translated">빌드 도구</target>
        </trans-unit>
        <trans-unit id="25a76846370a1a1a3908de6435689ad544b970af" translate="yes" xml:space="preserve">
          <source>Build Type</source>
          <target state="translated">빌드 유형</target>
        </trans-unit>
        <trans-unit id="90d30b22aa9fc58d858400ce64afb6dda1667245" translate="yes" xml:space="preserve">
          <source>Build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 대상을 모두 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4a642dce0f4919a5431cdc1d46afc1a730730b4" translate="yes" xml:space="preserve">
          <source>Build both Release and Debug targets:</source>
          <target state="translated">릴리스 및 디버그 대상을 모두 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="6f75aec30a2e78fca7bd4e7b1935c6e4a4d4bf09" translate="yes" xml:space="preserve">
          <source>Build steps and dependencies differ slightly depending on your operating system. See these detailed guides on building Electron locally:</source>
          <target state="translated">빌드 단계 및 종속성은 운영 체제에 따라 약간 다릅니다. Electron을 로컬로 구축하는 방법에 대한 다음의 자세한 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="029d356d4741d1e0ec0c762c4df9ed3b3ffd6520" translate="yes" xml:space="preserve">
          <source>Building &lt;code&gt;libchromiumcontent&lt;/code&gt; locally</source>
          <target state="translated">로컬로 &lt;code&gt;libchromiumcontent&lt;/code&gt; 빌드</target>
        </trans-unit>
        <trans-unit id="a3400774b0327c6db8692dc22e1d83b38560e5d5" translate="yes" xml:space="preserve">
          <source>Building Electron is done entirely with command-line scripts and cannot be done with Visual Studio. You can develop Electron with any editor but support for building with Visual Studio will come in the future.</source>
          <target state="translated">Electron 빌드는 전적으로 명령 줄 스크립트로 수행되며 Visual Studio로는 수행 할 수 없습니다. 편집기를 사용하여 Electron을 개발할 수 있지만 Visual Studio를 사용한 빌드 지원은 향후 제공 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="1e9fb1b246bf30ef1b714dc27aaa5ed5ccae2be3" translate="yes" xml:space="preserve">
          <source>Building Electron with compilers other than &lt;code&gt;clang&lt;/code&gt; is not supported.</source>
          <target state="translated">&lt;code&gt;clang&lt;/code&gt; 이외의 컴파일러로 Electron을 빌드하는 것은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d214e704224433d26f89aa63ba6d0caa8eb23c4e" translate="yes" xml:space="preserve">
          <source>Building libchromiumcontent requires a powerful machine and takes a long time (though incremental rebuilding the shared library component is fast). With an 8-core/16-thread Ryzen 1700 CPU clocked at 3ghz, fast SSD and 32GB of RAM, it should take about 40 minutes. It is not recommended to build with less than 16GB of RAM.</source>
          <target state="translated">libchromiumcontent를 빌드하려면 강력한 시스템이 필요하고 시간이 오래 걸립니다 (공유 라이브러리 구성 요소를 점차적으로 재구성하는 것이 빠르지 만). 3ghz, 고속 SSD 및 32GB RAM에서 8 코어 / 16 스레드 Ryzen 1700 CPU 클럭을 사용하는 경우 약 40 분이 소요됩니다. 16GB 미만의 RAM으로 구축하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="463c7b751329c0c56ac3dd18dda6677767fc33c8" translate="yes" xml:space="preserve">
          <source>Building node:</source>
          <target state="translated">빌딩 노드 :</target>
        </trans-unit>
        <trans-unit id="f2f7d4fa557f3fed6ad1053b7a047478101aeaef" translate="yes" xml:space="preserve">
          <source>Building on Linux</source>
          <target state="translated">리눅스 구축</target>
        </trans-unit>
        <trans-unit id="49b7debfb067ab3317a8f0b0d39d315446c647e1" translate="yes" xml:space="preserve">
          <source>Building on MacOS</source>
          <target state="translated">MacOS 기반 구축</target>
        </trans-unit>
        <trans-unit id="1584552650516d23c724e3791b74ab40bed5950d" translate="yes" xml:space="preserve">
          <source>Building on Windows</source>
          <target state="translated">Windows에서 구축</target>
        </trans-unit>
        <trans-unit id="3b3f9f735796c97ebe09d8cabae2287556fb60d5" translate="yes" xml:space="preserve">
          <source>Building on macOS</source>
          <target state="translated">macOS에서 빌드</target>
        </trans-unit>
        <trans-unit id="3ea5e3408ea8301ccd2bd3c95ebe2ca5b4c0f8cc" translate="yes" xml:space="preserve">
          <source>Builds are code-signed</source>
          <target state="translated">빌드는 코드 서명</target>
        </trans-unit>
        <trans-unit id="df0fc4707258eb7d910b85b7f7b75c684d379f16" translate="yes" xml:space="preserve">
          <source>Builds are published to GitHub Releases</source>
          <target state="translated">빌드는 GitHub 릴리즈에 게시됩니다</target>
        </trans-unit>
        <trans-unit id="bc214c2f80fbdfd602cbc231920a3c44631fa8bd" translate="yes" xml:space="preserve">
          <source>Built in Electron Modules (such as &lt;code&gt;ipc&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt;)</source>
          <target state="translated">내장 전자 모듈 (예 : &lt;code&gt;ipc&lt;/code&gt; , &lt;code&gt;app&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6b4aff4a61d1b9d1dbd303a4a38055867f3e95db" translate="yes" xml:space="preserve">
          <source>Built in Node Modules (such as &lt;code&gt;path&lt;/code&gt;)</source>
          <target state="translated">내장 노드 모듈 (예 : &lt;code&gt;path&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cebed7688a5babc3ef7b5a3e8aa43667d482a257" translate="yes" xml:space="preserve">
          <source>Bulgarian</source>
          <target state="translated">Bulgarian</target>
        </trans-unit>
        <trans-unit id="72a21b08484b79af7d4e3e4645f7d438234925fe" translate="yes" xml:space="preserve">
          <source>But if you want to keep the abilities of using Node.js and Electron APIs, you have to rename the symbols in the page before including other libraries:</source>
          <target state="translated">그러나 Node.js 및 Electron API를 사용하는 기능을 유지하려면 다른 라이브러리를 포함하기 전에 페이지의 기호 이름을 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="ff096db618d4083afc69edcf6ce292542803f0c6" translate="yes" xml:space="preserve">
          <source>But remember the callback is referenced by the main process until you explicitly uninstall it. If you do not, each time you reload your window the callback will be installed again, leaking one callback for each restart.</source>
          <target state="translated">그러나 콜백은 명시 적으로 제거 할 때까지 기본 프로세스에서 참조합니다. 그렇지 않으면 창을 다시로드 할 때마다 콜백이 다시 설치되어 다시 시작할 때마다 콜백이 누수됩니다.</target>
        </trans-unit>
        <trans-unit id="caad5a1e00db7deaac448b433c96d138fb770b4a" translate="yes" xml:space="preserve">
          <source>But there are also fundamental differences between the two projects that make Electron a completely separate product from NW.js:</source>
          <target state="translated">그러나 Electron을 NW.js와 완전히 분리 된 제품으로 만드는 두 프로젝트 사이에는 근본적인 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e0d050ef492bd9db135aa537d58b5c789d89d60" translate="yes" xml:space="preserve">
          <source>Button support on macOS</source>
          <target state="translated">macOS에서 버튼 지원</target>
        </trans-unit>
        <trans-unit id="7097fd2a82d62d79f805da1fe78933be73ca729b" translate="yes" xml:space="preserve">
          <source>By default Electron is built with prebuilt &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt;&lt;code&gt;clang&lt;/code&gt;&lt;/a&gt; binaries provided by the Chromium project. If for some reason you want to build with the &lt;code&gt;clang&lt;/code&gt; installed in your system, you can call &lt;code&gt;bootstrap.py&lt;/code&gt; with &lt;code&gt;--clang_dir=&amp;lt;path&amp;gt;&lt;/code&gt; switch. By passing it the build script will assume the &lt;code&gt;clang&lt;/code&gt; binaries reside in &lt;code&gt;&amp;lt;path&amp;gt;/bin/&lt;/code&gt;.</source>
          <target state="translated">Electron은 기본적으로 Chromium 프로젝트에서 제공하는 사전 빌드 된 &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt; &lt;code&gt;clang&lt;/code&gt; &lt;/a&gt; 바이너리 로 빌드 됩니다. 어떤 이유로 시스템에 설치된 &lt;code&gt;clang&lt;/code&gt; 을 사용하여 빌드하려는 경우 &lt;code&gt;--clang_dir=&amp;lt;path&amp;gt;&lt;/code&gt; 스위치를 사용 하여 &lt;code&gt;bootstrap.py&lt;/code&gt; 를 호출 할 수 있습니다 . 그것을 전달함으로써 빌드 스크립트는 &lt;code&gt;clang&lt;/code&gt; 바이너리가 &lt;code&gt;&amp;lt;path&amp;gt;/bin/&lt;/code&gt; 에 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="7c90757fabb90a9b778af9a3fd4b20533a26c919" translate="yes" xml:space="preserve">
          <source>By default Electron is built with prebuilt &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt;&lt;code&gt;clang&lt;/code&gt;&lt;/a&gt; binaries provided by the Chromium project. If for some reason you want to build with the &lt;code&gt;clang&lt;/code&gt; installed in your system, you can specify the &lt;code&gt;clang_base_path&lt;/code&gt; argument in the GN args.</source>
          <target state="translated">기본적으로 Electron은 Chromium 프로젝트에서 제공하는 사전 빌드 된 &lt;a href=&quot;https://clang.llvm.org/get_started.html&quot;&gt; &lt;code&gt;clang&lt;/code&gt; &lt;/a&gt; 바이너리 로 빌드 됩니다. 어떤 이유로 시스템에 설치된 &lt;code&gt;clang&lt;/code&gt; 으로 빌드하려는 경우 GN 인수에 &lt;code&gt;clang_base_path&lt;/code&gt; 인수를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cac5b2129f5823dc18e255456b71a44e5158120a" translate="yes" xml:space="preserve">
          <source>By default Electron manages the devtools by creating an internal &lt;code&gt;WebContents&lt;/code&gt; with native view, which developers have very limited control of. With the &lt;code&gt;setDevToolsWebContents&lt;/code&gt; method, developers can use any &lt;code&gt;WebContents&lt;/code&gt; to show the devtools in it, including &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">기본적으로 Electron은 개발자가 매우 제한적으로 제어 할 수있는 기본보기 로 내부 &lt;code&gt;WebContents&lt;/code&gt; 를 작성하여 devtools를 관리합니다 . 으로 &lt;code&gt;setDevToolsWebContents&lt;/code&gt; 의 방법, 개발자는 사용할 수 &lt;code&gt;WebContents&lt;/code&gt; 을 포함하여 그 안에있는 DevTools로, 보여 &lt;code&gt;BrowserWindow&lt;/code&gt; , &lt;code&gt;BrowserView&lt;/code&gt; 및 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그를.</target>
        </trans-unit>
        <trans-unit id="96c716d6a8d876d38cdcaa950e133d3f3b63795b" translate="yes" xml:space="preserve">
          <source>By default Electron will download hunspell dictionaries from the Chromium CDN. If you want to override this behavior you can use this API to point the dictionary downloader at your own hosted version of the hunspell dictionaries. We publish a &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; file with each release which contains the files you need to host here, the file server must be &lt;strong&gt;case insensitive&lt;/strong&gt; you must upload each file twice, once with the case it has in the ZIP file and once with the filename as all lower case.</source>
          <target state="translated">기본적으로 Electron은 Chromium CDN에서 hunspell 사전을 다운로드합니다. 이 동작을 재정의하려면이 API를 사용하여 hunspell 사전의 호스팅 된 버전에서 사전 다운로더를 가리킬 수 있습니다. 여기에서 호스팅해야하는 파일이 포함 된 각 릴리스와 함께 &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; 파일을 게시합니다 . 파일 서버는 &lt;strong&gt;대소 문자&lt;/strong&gt; 를 &lt;strong&gt;구분하지&lt;/strong&gt; 않아야합니다. 각 파일은 ZIP 파일에있는 대소 문자와 파일 이름을 다음과 같이 두 번 업로드해야합니다. 모두 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="de27edf5a4d091261158a9adca2828e69992166d" translate="yes" xml:space="preserve">
          <source>By default a new &lt;code&gt;BrowserWindow&lt;/code&gt; will be created for the &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;url&lt;/code&gt; 에 대해 새 &lt;code&gt;BrowserWindow&lt;/code&gt; 가 만들어 집니다.</target>
        </trans-unit>
        <trans-unit id="587a430f2d5bcfd83fe0de15afe679db9a81ff75" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;scheme&lt;/code&gt; is treated like &lt;code&gt;http:&lt;/code&gt;, which is parsed differently from protocols that follow the &quot;generic URI syntax&quot; like &lt;code&gt;file:&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;scheme&lt;/code&gt; 는 &lt;code&gt;http:&lt;/code&gt; 와 같이 처리 되며 &lt;code&gt;file:&lt;/code&gt; 과 같은 &quot;일반 URI 구문&quot;을 따르는 프로토콜과는 다르게 구문 분석 됩니다 .</target>
        </trans-unit>
        <trans-unit id="ea2105bda037c93ea2b0a0fc7ce53440ef249587" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;scheme&lt;/code&gt; is treated like &lt;code&gt;http:&lt;/code&gt;, which is parsed differently than protocols that follow the &quot;generic URI syntax&quot; like &lt;code&gt;file:&lt;/code&gt;, so you probably want to call &lt;code&gt;protocol.registerStandardSchemes&lt;/code&gt; to have your scheme treated as a standard scheme.</source>
          <target state="translated">기본적으로 &lt;code&gt;scheme&lt;/code&gt; 은 &lt;code&gt;http:&lt;/code&gt; 로 처리되며 , &lt;code&gt;file:&lt;/code&gt; 과 같은 &quot;일반 URI 구문&quot;을 따르는 프로토콜과는 다르게 구문 분석 됩니다. 따라서 &lt;code&gt;protocol.registerStandardSchemes&lt;/code&gt; 를 호출 하여 스킴을 표준 스킴으로 처리하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a41c95c2c21d4cd5f3c7ca8df40debf15da2d4f8" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;webview&lt;/code&gt; tag is disabled in Electron &amp;gt;= 5. You need to enable the tag by setting the &lt;code&gt;webviewTag&lt;/code&gt; webPreferences option when constructing your &lt;code&gt;BrowserWindow&lt;/code&gt;. For more information see the &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow constructor docs&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;webview&lt;/code&gt; 태그는 Electron&amp;gt; = 5에서 비활성화되어 있습니다 . &lt;code&gt;BrowserWindow&lt;/code&gt; 를 구성 할 때 &lt;code&gt;webviewTag&lt;/code&gt; webPreferences 옵션 을 설정하여 태그를 활성화해야합니다 . 자세한 내용은 &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow 생성자 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="edca7c6481430ce7acc15073e33b880e74e1bfd3" translate="yes" xml:space="preserve">
          <source>By default the HTTP request will reuse the current session. If you want the request to have a different session you should set &lt;code&gt;session&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">기본적으로 HTTP 요청은 현재 세션을 재사용합니다. 요청에 다른 세션을 가지려면 &lt;code&gt;session&lt;/code&gt; 을 &lt;code&gt;null&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="60bb08791619667db0c408750cf1458d8822615c" translate="yes" xml:space="preserve">
          <source>By default the new instance will use the same working directory and command line arguments with current instance. When &lt;code&gt;args&lt;/code&gt; is specified, the &lt;code&gt;args&lt;/code&gt; will be passed as command line arguments instead. When &lt;code&gt;execPath&lt;/code&gt; is specified, the &lt;code&gt;execPath&lt;/code&gt; will be executed for relaunch instead of current app.</source>
          <target state="translated">기본적으로 새 인스턴스는 현재 인스턴스와 동일한 작업 디렉토리 및 명령 행 인수를 사용합니다. 때 &lt;code&gt;args&lt;/code&gt; 지정되면, &lt;code&gt;args&lt;/code&gt; 대신 명령 줄 인수로 전달됩니다. 때 &lt;code&gt;execPath&lt;/code&gt; 가 지정되면, &lt;code&gt;execPath&lt;/code&gt; 는 대신에 현재 응용 프로그램의 재발에 대한 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="40beb77cbdb48291d0543f9cf28bcd0932d25745" translate="yes" xml:space="preserve">
          <source>By default this API will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본적으로이 API는 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ff45e73ebf4cfd1db10ea07a681cdedb033e4f17" translate="yes" xml:space="preserve">
          <source>By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the &lt;code&gt;http&lt;/code&gt; protocol, you have to register it as a standard scheme.</source>
          <target state="translated">기본적으로 웹 저장소 API (localStorage, sessionStorage, webSQL, indexedDB, 쿠키)는 비표준 체계에 대해 비활성화됩니다. 따라서 일반적으로 &lt;code&gt;http&lt;/code&gt; 프로토콜 을 대체하기 위해 사용자 지정 프로토콜 을 등록하려면 표준 체계로 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6ba43155d32a233fe31755ffc82f2a2ad4a72ed" translate="yes" xml:space="preserve">
          <source>By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the &lt;code&gt;http&lt;/code&gt; protocol, you have to register it as a standard scheme:</source>
          <target state="translated">기본적으로 웹 스토리지 API (localStorage, sessionStorage, webSQL, indexedDB, 쿠키)는 비표준 체계에 대해 비활성화되어 있습니다. 따라서 일반적으로 &lt;code&gt;http&lt;/code&gt; 프로토콜 을 대체하기 위해 사용자 정의 프로토콜 을 등록하려면 표준 체계로 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf49fe230febabe5d94c3e78b52a4787206bfe38" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ELECTRON_CUSTOM_DIR&lt;/code&gt; is set to &lt;code&gt;v$VERSION&lt;/code&gt;. To change the format, use the &lt;code&gt;{{ version }}&lt;/code&gt; placeholder. For example, &lt;code&gt;version-{{ version }}&lt;/code&gt; resolves to &lt;code&gt;version-5.0.0&lt;/code&gt;, &lt;code&gt;{{ version }}&lt;/code&gt; resolves to &lt;code&gt;5.0.0&lt;/code&gt;, and &lt;code&gt;v{{ version }}&lt;/code&gt; is equivalent to the default. As a more concrete example, to use the China non-CDN mirror:</source>
          <target state="translated">기본적으로 &lt;code&gt;ELECTRON_CUSTOM_DIR&lt;/code&gt; 은 &lt;code&gt;v$VERSION&lt;/code&gt; 설정됩니다 . 형식을 변경하려면 &lt;code&gt;{{ version }}&lt;/code&gt; 자리 표시자를 사용하세요. 예를 들어 &lt;code&gt;version-{{ version }}&lt;/code&gt; 은 &lt;code&gt;version-5.0.0&lt;/code&gt; 으로 확인 되고 &lt;code&gt;{{ version }}&lt;/code&gt; 은 &lt;code&gt;5.0.0&lt;/code&gt; 으로 확인되며 &lt;code&gt;v{{ version }}&lt;/code&gt; 은 기본값과 동일합니다. 보다 구체적인 예로서 중국 비 CDN 미러를 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="b4e5b67ec26843b6e5f64ffc1ab8e332c695c6ee" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;libchromiumcontent&lt;/code&gt; is downloaded from Amazon Web Services. If the &lt;code&gt;LIBCHROMIUMCONTENT_MIRROR&lt;/code&gt; environment variable is set, the bootstrap script will download from it. &lt;a href=&quot;https://github.com/hokein/libchromiumcontent-qiniu-mirror&quot;&gt;&lt;code&gt;libchromiumcontent-qiniu-mirror&lt;/code&gt;&lt;/a&gt; is a mirror for &lt;code&gt;libchromiumcontent&lt;/code&gt;. If you have trouble in accessing AWS, you can switch the download address to it via &lt;code&gt;export LIBCHROMIUMCONTENT_MIRROR=http://7xk3d2.dl1.z0.glb.clouddn.com/&lt;/code&gt;</source>
          <target state="translated">기본적으로 &lt;code&gt;libchromiumcontent&lt;/code&gt; 는 Amazon Web Services에서 다운로드됩니다. 는 IF &lt;code&gt;LIBCHROMIUMCONTENT_MIRROR&lt;/code&gt; 의 환경 변수를 설정, 부트 스트랩 스크립트는에서 다운로드합니다. &lt;a href=&quot;https://github.com/hokein/libchromiumcontent-qiniu-mirror&quot;&gt; &lt;code&gt;libchromiumcontent-qiniu-mirror&lt;/code&gt; &lt;/a&gt; 의 거울이다 &lt;code&gt;libchromiumcontent&lt;/code&gt; . AWS에 액세스하는 데 문제가있는 경우 &lt;code&gt;export LIBCHROMIUMCONTENT_MIRROR=http://7xk3d2.dl1.z0.glb.clouddn.com/&lt;/code&gt; 통해 다운로드 주소를 전환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04f2befcfe6732f3c3af49fc996331e1153f12e0" translate="yes" xml:space="preserve">
          <source>By default, Chromium disables 3D APIs (e.g. WebGL) until restart on a per domain basis if the GPU processes crashes too frequently. This function disables that behavior.</source>
          <target state="translated">기본적으로 Chromium은 GPU 프로세스가 너무 자주 충돌하는 경우 도메인별로 다시 시작할 때까지 3D API (예 : WebGL)를 비활성화합니다. 이 기능은 해당 동작을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="53b8e2a623aa4e87f66fa5abcaee0309e55850da" translate="yes" xml:space="preserve">
          <source>By default, Chromium disables 3D APIs (e.g. WebGL) until restart on a per domain basis if the GPU processes crashes too frequently. This function disables that behaviour.</source>
          <target state="translated">GPU 프로세스가 너무 자주 충돌하는 경우 Chromium은 도메인별로 다시 시작할 때까지 기본적으로 3D API (예 : WebGL)를 사용 중지합니다. 이 기능은 해당 동작을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="34f30dd60e231723a06791f6517abbf0f7de6da1" translate="yes" xml:space="preserve">
          <source>By default, Electron will automatically approve all permission requests unless the developer has manually configured a custom handler. While a solid default, security-conscious developers might want to assume the very opposite.</source>
          <target state="translated">기본적으로 개발자가 사용자 지정 처리기를 수동으로 구성하지 않은 경우 Electron은 모든 권한 요청을 자동으로 승인합니다. 확실한 기본값이지만 보안에 민감한 개발자는 그 반대를 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c5c8cf8a254953d45737bb04f1868979a5a4e2b" translate="yes" xml:space="preserve">
          <source>By default, Electron will not allow websites loaded over &lt;code&gt;HTTPS&lt;/code&gt; to load and execute scripts, CSS, or plugins from insecure sources (&lt;code&gt;HTTP&lt;/code&gt;). Setting the property &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; disables that protection.</source>
          <target state="translated">Electron은 기본적으로 &lt;code&gt;HTTPS&lt;/code&gt; 를 통해로드 된 웹 사이트 가 안전하지 않은 소스 ( &lt;code&gt;HTTP&lt;/code&gt; ) 에서 스크립트, CSS 또는 플러그인을로드하고 실행하는 것을 허용하지 않습니다 . &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; 속성 을 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 해당 보호가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="65f1f239f0f550fbf0278d120266db9415d7767d" translate="yes" xml:space="preserve">
          <source>By default, a newly generated Google API key may not be allowed to make geocoding requests. To enable geocoding requests, visit &lt;a href=&quot;https://console.developers.google.com/apis/api/geolocation/overview&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">기본적으로 새로 생성 된 Google API 키는 지오 코딩 요청을 할 수 없습니다. 지오 코딩 요청을 활성화하려면 &lt;a href=&quot;https://console.developers.google.com/apis/api/geolocation/overview&quot;&gt;이 페이지를&lt;/a&gt; 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2cf1e62a08908a0978bb3b57c53bca75bd06aa38" translate="yes" xml:space="preserve">
          <source>By default, a newly generated Google API key may not be allowed to make geolocation requests. To enable the geolocation webservice for your project, enable it through the &lt;a href=&quot;https://console.cloud.google.com/apis/library&quot;&gt;API library&lt;/a&gt;.</source>
          <target state="translated">기본적으로 새로 생성 된 Google API 키는 위치 정보 요청을 허용하지 않을 수 있습니다. 프로젝트에 지리적 위치 웹 서비스를 활성화하려면 &lt;a href=&quot;https://console.cloud.google.com/apis/library&quot;&gt;API 라이브러리를&lt;/a&gt; 통해 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="f2834667dade5c41a47d6c4b3caed6b8893edf08" translate="yes" xml:space="preserve">
          <source>By default, an empty &lt;code&gt;options&lt;/code&gt; will be regarded as:</source>
          <target state="translated">기본적으로 빈 &lt;code&gt;options&lt;/code&gt; 은 다음과 같이 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="94bbc84282bd18312c91d0c1fe6e76e9498dda90" translate="yes" xml:space="preserve">
          <source>By default, if an app of the same name as the one being moved exists in the Applications directory and is &lt;em&gt;not&lt;/em&gt; running, the existing app will be trashed and the active app moved into its place. If it &lt;em&gt;is&lt;/em&gt; running, the pre-existing running app will assume focus and the previously active app will quit itself. This behavior can be changed by providing the optional conflict handler, where the boolean returned by the handler determines whether or not the move conflict is resolved with default behavior. i.e. returning &lt;code&gt;false&lt;/code&gt; will ensure no further action is taken, returning &lt;code&gt;true&lt;/code&gt; will result in the default behavior and the method continuing.</source>
          <target state="translated">기본적으로 이동중인 앱과 이름이 같은 앱이 애플리케이션 디렉터리에 있고 실행 중이 &lt;em&gt;아닌&lt;/em&gt; 경우 기존 앱이 삭제되고 활성 앱이 해당 위치로 이동됩니다. 이 경우 &lt;em&gt;되고&lt;/em&gt; 실행되는 기존의 실행 응용 프로그램은 초점을 가정하고 이전의 활성 응용 프로그램 자체를 종료합니다. 이 동작은 선택적 충돌 처리기를 제공하여 변경할 수 있습니다. 여기서 처리기에 의해 반환 된 부울은 이동 충돌이 기본 동작으로 해결되는지 여부를 결정합니다. 즉, &lt;code&gt;false&lt;/code&gt; 를 반환 하면 추가 작업이 수행되지 않고 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 기본 동작이 발생하고 메서드가 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="22133e6fda9bf59c88969ededbefa121012b3e78" translate="yes" xml:space="preserve">
          <source>By default, items will be inserted in the order they exist in the template unless one of the specified positioning keywords is used.</source>
          <target state="translated">기본적으로 지정된 위치 지정 키워드 중 하나를 사용하지 않는 한 항목은 템플릿에있는 순서대로 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="4d0df8ba9eae5a501866a2ab238f059856b094b2" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;npm start&lt;/code&gt; command will run the main script with Node.js. To run the script with Electron, you need to change it as such:</source>
          <target state="translated">기본적으로 &lt;code&gt;npm start&lt;/code&gt; 명령은 Node.js로 기본 스크립트를 실행합니다. Electron으로 스크립트를 실행하려면 다음과 같이 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="fa796e8dd366ac241a58243e69a0b12d5849f835" translate="yes" xml:space="preserve">
          <source>By default, the frameless window is non-draggable. Apps need to specify &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; in CSS to tell Electron which regions are draggable (like the OS's standard titlebar), and apps can also use &lt;code&gt;-webkit-app-region: no-drag&lt;/code&gt; to exclude the non-draggable area from the draggable region. Note that only rectangular shapes are currently supported.</source>
          <target state="translated">기본적으로 프레임리스 창은 드래그 할 수 없습니다. 앱은 &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; CSS에서 드래그 하여 Electron에게 드래그 할 수있는 영역 (OS의 표준 제목 표시 줄과 같은)을 알려야하며 앱은 &lt;code&gt;-webkit-app-region: no-drag&lt;/code&gt; 를 사용하여 드래그 할 수 없는 영역 을 제외 할 수 있습니다. 드래그 가능한 영역에서 영역. 현재 직사각형 모양 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b5249d8fda4da39e61e39b89d96725eea6041b08" translate="yes" xml:space="preserve">
          <source>By default, the new instance will use the same working directory and command line arguments with current instance. When &lt;code&gt;args&lt;/code&gt; is specified, the &lt;code&gt;args&lt;/code&gt; will be passed as command line arguments instead. When &lt;code&gt;execPath&lt;/code&gt; is specified, the &lt;code&gt;execPath&lt;/code&gt; will be executed for relaunch instead of current app.</source>
          <target state="translated">기본적으로 새 인스턴스는 현재 인스턴스와 동일한 작업 디렉토리 및 명령 줄 인수를 사용합니다. 때 &lt;code&gt;args&lt;/code&gt; 지정되면, &lt;code&gt;args&lt;/code&gt; 대신 명령 줄 인수로 전달됩니다. 때 &lt;code&gt;execPath&lt;/code&gt; 가 지정되면, &lt;code&gt;execPath&lt;/code&gt; 는 대신에 현재 응용 프로그램의 재발에 대한 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8a398a90b8dc32361ec0926b13dfb2175b745513" translate="yes" xml:space="preserve">
          <source>By default, this module will check for updates at app startup, then every ten minutes. When an update is found, it will automatically be downloaded in the background. When the download completes, a dialog is displayed allowing the user to restart the app.</source>
          <target state="translated">기본적으로이 모듈은 앱 시작시 그리고 10 분마다 업데이트를 확인합니다. 업데이트가 발견되면 백그라운드에서 자동으로 다운로드됩니다. 다운로드가 완료되면 사용자가 앱을 다시 시작할 수있는 대화 상자가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="76df237a7e3f0cecbffcdd01e0bb7eafa5d97dc9" translate="yes" xml:space="preserve">
          <source>By default, web pages' cookies and caches will be stored under the &lt;code&gt;userData&lt;/code&gt; directory. If you want to change this location, you have to override the &lt;code&gt;userData&lt;/code&gt; path before the &lt;code&gt;ready&lt;/code&gt; event of the &lt;code&gt;app&lt;/code&gt; module is emitted.</source>
          <target state="translated">기본적으로 웹 페이지의 쿠키 및 캐시는 &lt;code&gt;userData&lt;/code&gt; 디렉토리에 저장됩니다 . 이 위치를 변경 하려면 &lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 발생 하기 전에 &lt;code&gt;userData&lt;/code&gt; 경로 를 대체 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5822f4d7e3f6d1d8b184684781711b4e7b602e33" translate="yes" xml:space="preserve">
          <source>By helping to resolve the issue: This can be done by demonstrating that the issue is not a bug or is fixed; but more often, by opening a pull request that changes the source in &lt;code&gt;electron/electron&lt;/code&gt; in a concrete and reviewable manner.</source>
          <target state="translated">문제 해결에 도움을줌으로써 : 문제가 버그가 아니거나 수정되었음을 보여줌으로써 가능합니다. 그러나 더 자주, &lt;code&gt;electron/electron&lt;/code&gt; 의 소스를 구체적이고 검토 가능한 방식으로 변경하는 풀 요청을 열어서 .</target>
        </trans-unit>
        <trans-unit id="6afebbaccbd30c57e0f1bdfb24260324f89fcdf9" translate="yes" xml:space="preserve">
          <source>By helping to triage the issue: You can do this either by providing assistive details (a reproducible test case that demonstrates a bug) or by providing suggestions to address the issue.</source>
          <target state="translated">문제를 분류하는 데 도움을주는 방법 : 보조 세부 정보 (버그를 나타내는 재현 가능한 테스트 사례)를 제공하거나 문제를 해결하기위한 제안을 제공하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4e65467f0aeb2464094fbea049e0e2ff9337961d" translate="yes" xml:space="preserve">
          <source>By opening the issue for discussion: If you believe that you have found a new bug in Electron, you should report it by creating a new issue in the &lt;a href=&quot;https://github.com/electron/electron/issues&quot;&gt;&lt;code&gt;electron/electron&lt;/code&gt; issue tracker&lt;/a&gt;.</source>
          <target state="translated">토론을 위해 문제를 열어서 : Electron에서 새로운 버그를 발견했다고 생각되면 &lt;a href=&quot;https://github.com/electron/electron/issues&quot;&gt; &lt;code&gt;electron/electron&lt;/code&gt; 문제 추적기&lt;/a&gt; 에서 새로운 문제를 만들어보고해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a1cf6f6c05333baa8fbb2dd5096a5d19ad9137d" translate="yes" xml:space="preserve">
          <source>By opening the issue for discussion: If you believe that you have found a new bug in Electron, you should report it by creating a new issue in the &lt;code&gt;electron/electron&lt;/code&gt; issue tracker.</source>
          <target state="translated">토론 할 문제를 열어서 : Electron에서 새로운 버그를 발견했다고 생각되면 &lt;code&gt;electron/electron&lt;/code&gt; 문제 추적기 에서 새로운 문제를 만들어보고해야합니다 .</target>
        </trans-unit>
        <trans-unit id="04f88fab0760bd1a25be17debf3fffbad4b7e77a" translate="yes" xml:space="preserve">
          <source>By setting a few environment variables, you can use &lt;code&gt;npm&lt;/code&gt; to install modules directly.</source>
          <target state="translated">몇 가지 환경 변수를 설정하면 &lt;code&gt;npm&lt;/code&gt; 을 사용하여 모듈을 직접 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="618cf25cae044efc880ba0a359464fc6125a37ef" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;transparent&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;, you can also make the frameless window transparent:</source>
          <target state="translated">&lt;code&gt;transparent&lt;/code&gt; 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 프레임리스 창을 투명하게 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e83cf8ab97dff334534065d01746bc15b14270c8" translate="yes" xml:space="preserve">
          <source>By the way, it is almost identical to how you would normally use the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt;/&lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js</source>
          <target state="translated">그건 그렇고, Node.js 의 &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; / &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; 모듈을 일반적으로 사용하는 방법과 거의 동일합니다</target>
        </trans-unit>
        <trans-unit id="cac27adea8687f32ea7bd657723ad814ed33314f" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt;&lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt;&lt;/a&gt;, you can expose accessibility switch to users in the application preferences. User's system assistive utilities have priority over this setting and will override it.</source>
          <target state="translated">&lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt; &lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt; &lt;/a&gt; 를 사용 하면 응용 프로그램 환경 설정에서 접근성 스위치를 사용자에게 노출 할 수 있습니다. 사용자의 시스템 지원 유틸리티는이 설정보다 우선하며이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="13ed50f8facdcd8f0c54537930b7490e2a9ec7be" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;parent&lt;/code&gt; option, you can create child windows:</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; 옵션 을 사용 하면 자식 창을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c371e1e6491c26daac9e069463d97ac9ccc81ad1" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt;&lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt;&lt;/a&gt; API, you can manually expose Chrome's accessibility tree to users in the application preferences. Note that the user's system assistive utilities have priority over this setting and will override it.</source>
          <target state="translated">사용하여 &lt;a href=&quot;../api/app#appsetaccessibilitysupportenabledenabled-macos-windows&quot;&gt; &lt;code&gt;app.setAccessibilitySupportEnabled(enabled)&lt;/code&gt; &lt;/a&gt; API를 수동으로 응용 프로그램 환경 설정에서 사용자에게 크롬의 접근성 트리를 노출 할 수 있습니다. 사용자의 시스템 보조 유틸리티가이 설정보다 우선하며이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="d075bfd68abd066449363309e5a47d21af4915fd" translate="yes" xml:space="preserve">
          <source>By using the &lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/commit/756b622&quot;&gt;multi-context&lt;/a&gt; feature of Node, Electron doesn't introduce a new JavaScript context in web pages.</source>
          <target state="translated">Electron은 Node 의 &lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/commit/756b622&quot;&gt;다중 컨텍스트&lt;/a&gt; 기능을 사용하여 웹 페이지에 새로운 JavaScript 컨텍스트를 도입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c13aa44c1b175a66599295c5c1ea22a086b4506e" translate="yes" xml:space="preserve">
          <source>By using this API, important information such as password and other sensitive information can be prevented from being intercepted by other processes.</source>
          <target state="translated">이 API를 사용하면 비밀번호 및 기타 민감한 정보와 같은 중요한 정보가 다른 프로세스에서 가로채는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13b61b8514348bce1a30759f258aaea2b487cf9f" translate="yes" xml:space="preserve">
          <source>C++ and Python</source>
          <target state="translated">C ++와 파이썬</target>
        </trans-unit>
        <trans-unit id="b96bc59a3968498d7a107e6c1751b50333568306" translate="yes" xml:space="preserve">
          <source>CAST - &lt;a href=&quot;https://tools.ietf.org/html/rfc2144&quot;&gt;RFC 2144&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2612&quot;&gt;RFC 2612&lt;/a&gt;</source>
          <target state="translated">CAST- &lt;a href=&quot;https://tools.ietf.org/html/rfc2144&quot;&gt;RFC 2144&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2612&quot;&gt;RFC 2612&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0e707a4f1192d6394fbc9d9860db24ef564cf03" translate="yes" xml:space="preserve">
          <source>CI starts automatically when you open a pull request, but only &lt;a href=&quot;https://github.com/orgs/electron/teams/releasers/members&quot;&gt;Releasers&lt;/a&gt; can restart a CI run. If you believe CI is giving a false negative, ask a Releaser to restart the tests.</source>
          <target state="translated">풀 요청을 열면 CI가 자동으로 시작되지만 &lt;a href=&quot;https://github.com/orgs/electron/teams/releasers/members&quot;&gt;릴리스&lt;/a&gt; 만 CI 실행을 다시 시작할 수 있습니다. CI가 잘못된 부정을한다고 생각되면 릴리스 담당자에게 테스트를 다시 시작하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="bc28ec7b89a554b7184cd54fe1689d211fe3b7b2" translate="yes" xml:space="preserve">
          <source>CI starts automatically when you open a pull request, but only core maintainers can restart a CI run. If you believe CI is giving a false negative, ask a maintainer to restart the tests.</source>
          <target state="translated">풀 요청을 열면 CI가 자동으로 시작되지만 핵심 유지 관리자 만 CI 실행을 다시 시작할 수 있습니다. CI가 거짓 음성을 제공한다고 생각되면 유지 관리자에게 테스트를 다시 시작하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="2027a2c6700352f183229a9c934c4b586b8494a3" translate="yes" xml:space="preserve">
          <source>CPUUsage</source>
          <target state="translated">CPUUsage</target>
        </trans-unit>
        <trans-unit id="04f7d903e57f26e99fbc729c5966bcff09e34627" translate="yes" xml:space="preserve">
          <source>CPUUsage Object</source>
          <target state="translated">CPUUsage 객체</target>
        </trans-unit>
        <trans-unit id="50712f7ea0e9a5641483f7a60c06c11712404f8a" translate="yes" xml:space="preserve">
          <source>CRT</source>
          <target state="translated">CRT</target>
        </trans-unit>
        <trans-unit id="83e9a2a287c60cdbe54bfaf8575ccf2eb6f8d3d4" translate="yes" xml:space="preserve">
          <source>CSP HTTP Header</source>
          <target state="translated">CSP HTTP 헤더</target>
        </trans-unit>
        <trans-unit id="cdcb21d50f9a7d5c495c8130d03d355e1edb10d6" translate="yes" xml:space="preserve">
          <source>CSP Meta Tag</source>
          <target state="translated">CSP 메타 태그</target>
        </trans-unit>
        <trans-unit id="7e366c6488c90c6badd877d079aa421795db335f" translate="yes" xml:space="preserve">
          <source>CSP allows the server serving content to restrict and control the resources Electron can load for that given web page. &lt;code&gt;https://example.com&lt;/code&gt; should be allowed to load scripts from the origins you defined while scripts from &lt;code&gt;https://evil.attacker.com&lt;/code&gt; should not be allowed to run. Defining a CSP is an easy way to improve your application's security.</source>
          <target state="translated">CSP를 통해 콘텐츠를 제공하는 서버는 Electron이 해당 웹 페이지에 대해로드 할 수있는 리소스를 제한하고 제어 할 수 있습니다. &lt;code&gt;https://example.com&lt;/code&gt; 은 에서 스크립트 동안 정의 기원에서 부하 스크립트를 허용해야 &lt;code&gt;https://evil.attacker.com&lt;/code&gt; 을 실행하도록 허용해서는 안된다. CSP를 정의하면 애플리케이션의 보안을 쉽게 개선 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dce32dfff11b15fe082c892cc92eac210d62e60" translate="yes" xml:space="preserve">
          <source>CSP allows the server serving content to restrict and control the resources Electron can load for that given web page. &lt;code&gt;https://your-page.com&lt;/code&gt; should be allowed to load scripts from the origins you defined while scripts from &lt;code&gt;https://evil.attacker.com&lt;/code&gt; should not be allowed to run. Defining a CSP is an easy way to improve your application's security.</source>
          <target state="translated">CSP를 사용하면 컨텐츠를 제공하는 서버가 Electron이 해당 웹 페이지에로드 할 수있는 자원을 제한하고 제어 할 수 있습니다. &lt;code&gt;https://your-page.com&lt;/code&gt; 은 사용자가 정의한 원본에서 스크립트를로드 할 수 있어야하지만 &lt;code&gt;https://evil.attacker.com&lt;/code&gt; 의 스크립트는 실행하지 않아야합니다. CSP를 정의하면 응용 프로그램의 보안을 쉽게 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3693d34e2d971a82342cede8bfbb95fc5f5983bc" translate="yes" xml:space="preserve">
          <source>CSP's preferred delivery mechanism is an HTTP header, however it is not possible to use this method when loading a resource using the &lt;code&gt;file://&lt;/code&gt; protocol. It can be useful in some cases, such as using the &lt;code&gt;file://&lt;/code&gt; protocol, to set a policy on a page directly in the markup using a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">CSP의 기본 전달 메커니즘은 HTTP 헤더이지만 &lt;code&gt;file://&lt;/code&gt; 프로토콜을 사용하여 리소스를로드 할 때이 방법을 사용할 수 없습니다 . &lt;code&gt;file://&lt;/code&gt; 프로토콜 을 사용하는 것과 같은 경우 에 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그를 사용하여 마크 업에서 페이지에 직접 정책을 설정하는 것이 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7b96b06e8ae201740549af8b2e493398a979f13" translate="yes" xml:space="preserve">
          <source>CSP's preferred delivery mechanism is an HTTP header. It can be useful, however, to set a policy on a page directly in the markup using a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">CSP의 기본 제공 메커니즘은 HTTP 헤더입니다. 그러나 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 태그를 사용하여 마크 업에서 페이지의 정책을 직접 설정하는 것이 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20ec6039f7415b008ace95988f2d20ee666f1b82" translate="yes" xml:space="preserve">
          <source>CSS Styling Notes</source>
          <target state="translated">CSS 스타일링 노트</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="6bed3edafc751f5e9a9df468f2bb33f243df1d76" translate="yes" xml:space="preserve">
          <source>Calculate system idle time in seconds.</source>
          <target state="translated">시스템 유휴 시간 (초)을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e3256634065b51492172c28617295e847944f77e" translate="yes" xml:space="preserve">
          <source>Calculate the system idle state. &lt;code&gt;idleThreshold&lt;/code&gt; is the amount of time (in seconds) before considered idle. &lt;code&gt;locked&lt;/code&gt; is available on supported systems only.</source>
          <target state="translated">시스템 유휴 상태를 계산합니다. &lt;code&gt;idleThreshold&lt;/code&gt; 는 유휴 상태로 간주되기 전까지의 시간 (초)입니다. &lt;code&gt;locked&lt;/code&gt; 는 지원되는 시스템에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cd435b412c05cb38838722550256b01ce2fe212" translate="yes" xml:space="preserve">
          <source>Callback is invoked with the session's current cache size.</source>
          <target state="translated">콜백은 세션의 현재 캐시 크기로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="01b497b8367fc6bafb5d7eeac148c7f74271b4a4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; without a &lt;code&gt;path&lt;/code&gt; parameter will result in this directory being set to &lt;code&gt;~/Library/Logs/YourAppName&lt;/code&gt; on &lt;em&gt;macOS&lt;/em&gt;, and inside the &lt;code&gt;userData&lt;/code&gt; directory on &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;Windows&lt;/em&gt;.</source>
          <target state="translated">호출 &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; 없이 &lt;code&gt;path&lt;/code&gt; 매개 변수 것은으로 설정되고이 디렉토리가 발생합니다 &lt;code&gt;~/Library/Logs/YourAppName&lt;/code&gt; 에 &lt;em&gt;맥 OS&lt;/em&gt; , 그리고 내부 &lt;code&gt;userData&lt;/code&gt; 에의 에 디렉토리 &lt;em&gt;리눅스&lt;/em&gt; 와 &lt;em&gt;윈도우&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3bf97a86a63ed095fd3350186e3c5ea8f8b287e9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; does &lt;strong&gt;NOT&lt;/strong&gt; have any effect.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 호출 해도 아무런 영향 이 &lt;strong&gt;없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6ccf9dcbbcdfb1e5e377be160f38ae63559c54d6" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will cancel the download and &lt;code&gt;item&lt;/code&gt; will not be available from next tick of the process.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 호출 하면 다운로드가 취소 되고 다음 번 프로세스에서 &lt;code&gt;item&lt;/code&gt; 을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="608b33df37e4d4d3fe0d281941b14b121675b6d7" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will ignore the &lt;code&gt;beforeunload&lt;/code&gt; event handler and allow the page to be unloaded.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 호출 하면 &lt;code&gt;beforeunload&lt;/code&gt; 이벤트 핸들러를 무시 하고 페이지를 언로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06a6fc44f08b115a34cc42d4f23bc74dcfa8d040" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent Electron from automatically creating a new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;. If you call &lt;code&gt;event.preventDefault()&lt;/code&gt; and manually create a new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; then you must set &lt;code&gt;event.newGuest&lt;/code&gt; to reference the new &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; instance, failing to do so may result in unexpected behavior. For example:</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 Electron이 자동으로 새 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 를&lt;/a&gt; 만들 수 없습니다 . &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하고 새 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 를 수동으로 생성하는 경우 새 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 인스턴스 를 참조하도록 &lt;code&gt;event.newGuest&lt;/code&gt; 를 설정해야합니다. 그렇지 않으면 예기치 않은 동작이 발생할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="85b2f69fa97e59e10e3bf96902ec575aef2909cc" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the menu from being displayed.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 메뉴가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79b3972f226acc3d828ddaaece2ace694a0d1ec9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the navigation (not just the redirect).</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 리디렉션뿐만 아니라 탐색이 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="b564540387ed37724cf001caf2860886af42fdb6" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the navigation.</source>
          <target state="translated">&lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 탐색이 방지됩니다.</target>
        </trans-unit>
        <trans-unit id="28a3eba69582a515aa7662b289e554e59d378c8d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;reload()&lt;/code&gt; immediately after calling this method will force the reload to occur in a new process. This should be used when this process is unstable or unusable, for instance in order to recover from the &lt;code&gt;unresponsive&lt;/code&gt; event.</source>
          <target state="translated">호출 &lt;code&gt;reload()&lt;/code&gt; 즉시 새로운 프로세스에서 발생하는 재로드를 강제로이 메소드를 호출 한 후입니다. 예를 들어 &lt;code&gt;unresponsive&lt;/code&gt; 이벤트 에서 복구하기 위해이 프로세스가 불안정하거나 사용할 수 없을 때 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="caf9c42d26eab6803e0882cba6bc05510a28978d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;setCertificateVerifyProc(null)&lt;/code&gt; will revert back to default certificate verify proc.</source>
          <target state="translated">&lt;code&gt;setCertificateVerifyProc(null)&lt;/code&gt; 호출 하면 기본 인증서 확인 절차로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="0fbb3cc18cc8cba95bc7c6ff43fd3506c838d083" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;window.print()&lt;/code&gt; in web page is equivalent to calling &lt;code&gt;webContents.print({silent: false, printBackground: false, deviceName: ''})&lt;/code&gt;.</source>
          <target state="translated">호출 &lt;code&gt;window.print()&lt;/code&gt; 웹 페이지에서하면 호출하는 것과 같습니다 &lt;code&gt;webContents.print({silent: false, printBackground: false, deviceName: ''})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25630404c2ebfb9025dd2b80ded7fb8c98015b1c" translate="yes" xml:space="preserve">
          <source>Cambodian</source>
          <target state="translated">Cambodian</target>
        </trans-unit>
        <trans-unit id="f658821818d37230428de783e72627f03c7f5caf" translate="yes" xml:space="preserve">
          <source>Cancel the bounce of &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 반송을 취소하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0c5eb29993346f4a133ac20e0805e05b35d51e9" translate="yes" xml:space="preserve">
          <source>Cancels an ongoing HTTP transaction. If the request has already emitted the &lt;code&gt;close&lt;/code&gt; event, the abort operation will have no effect. Otherwise an ongoing event will emit &lt;code&gt;abort&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; events. Additionally, if there is an ongoing response object,it will emit the &lt;code&gt;aborted&lt;/code&gt; event.</source>
          <target state="translated">진행중인 HTTP 트랜잭션을 취소합니다. 요청이 이미 &lt;code&gt;close&lt;/code&gt; 이벤트를 생성 한 경우 중단 작업이 적용되지 않습니다. 그렇지 않으면 진행중인 이벤트에서 &lt;code&gt;abort&lt;/code&gt; 및 &lt;code&gt;close&lt;/code&gt; 이벤트가 발생합니다. 또한 진행중인 응답 객체가 있으면 &lt;code&gt;aborted&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0416c11d306eee7c68286990dbe4ca885146ccb6" translate="yes" xml:space="preserve">
          <source>Cancels the download operation.</source>
          <target state="translated">다운로드 작업을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="6eca99031e095cbb34e01937d491d94b1c270e8f" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the &lt;code&gt;webview&lt;/code&gt;'s page. Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 페이지 의 스냅 샷을 캡처합니다 . &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="cd17d5ec63077d417c5915709e9d490228549163" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the page within &lt;code&gt;rect&lt;/code&gt;. Omitting &lt;code&gt;rect&lt;/code&gt; will capture the whole visible page.</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 내에서 페이지의 스냅 샷을 캡처 합니다 . &lt;code&gt;rect&lt;/code&gt; 를 생략 하면 보이는 전체 페이지를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="392699b786f5b66ad025a000b2a69cf8ef0d8363" translate="yes" xml:space="preserve">
          <source>Captures a snapshot of the page within &lt;code&gt;rect&lt;/code&gt;. Upon completion &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(image)&lt;/code&gt;. The &lt;code&gt;image&lt;/code&gt; is an instance of &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; that stores data of the snapshot. Omitting &lt;code&gt;rect&lt;/code&gt; will capture the whole visible page.</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 내에서 페이지의 스냅 샷을 캡처 합니다 . 완료되면 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;callback(image)&lt;/code&gt; 으로 콜백 이 호출됩니다 . &lt;code&gt;image&lt;/code&gt; 의 인스턴스 &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; 스냅 숏의 데이터를 저장한다. &lt;code&gt;rect&lt;/code&gt; 를 생략 하면 전체 보이는 페이지가 캡처됩니다.</target>
        </trans-unit>
        <trans-unit id="2c5e77fc08a7d5537c9c2807353393f67c068cbe" translate="yes" xml:space="preserve">
          <source>Catalan</source>
          <target state="translated">Catalan</target>
        </trans-unit>
        <trans-unit id="ff992f5c1344ba781624e7680cc16282b396cb17" translate="yes" xml:space="preserve">
          <source>Causes the main thread of the current process crash.</source>
          <target state="translated">현재 프로세스의 메인 스레드가 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="50ba2332a72e34af309e34aa8ba442a4d2a81813" translate="yes" xml:space="preserve">
          <source>Causes the main thread of the current process hang.</source>
          <target state="translated">현재 프로세스의 메인 스레드를 정지시킵니다.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="aeaf8b569d9e949fc815aa22c5097ce559e475bb" translate="yes" xml:space="preserve">
          <source>Cerebral Debugger</source>
          <target state="translated">대뇌 디버거</target>
        </trans-unit>
        <trans-unit id="581ebb13fbb5d74fb60cd472a034d756da5cc102" translate="yes" xml:space="preserve">
          <source>Certain Electron behaviors are controlled by environment variables because they are initialized earlier than the command line flags and the app's code.</source>
          <target state="translated">특정 Electron 동작은 명령 행 플래그 및 앱 코드보다 먼저 초기화되기 때문에 환경 변수에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="9cc12c4a693f644a891baf70a55c4bab05cb777c" translate="yes" xml:space="preserve">
          <source>Certain accessibility features may not work.</source>
          <target state="translated">특정 접근 기능이 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72531c32fcb0a3c99da4e74166f280b78d501bde" translate="yes" xml:space="preserve">
          <source>Certain headers are restricted from being set by apps. These headers are listed below. More information on restricted headers can be found in &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/network/public/cpp/header_util.cc;drc=1562cab3f1eda927938f8f4a5a91991fefde66d3;bpv=1;bpt=1;l=22&quot;&gt;Chromium's header utils&lt;/a&gt;.</source>
          <target state="translated">특정 헤더는 앱에서 설정할 수 없습니다. 이러한 헤더는 아래에 나열되어 있습니다. 제한된 헤더에 대한 자세한 내용은 &lt;a href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:services/network/public/cpp/header_util.cc;drc=1562cab3f1eda927938f8f4a5a91991fefde66d3;bpv=1;bpt=1;l=22&quot;&gt;Chromium의 헤더 유틸리티&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38a3698b2c23c0e8359856ff3c28a4b0f8b5d1b5" translate="yes" xml:space="preserve">
          <source>Certain kinds of applications that manipulate files might want to support the operating system's native file drag &amp;amp; drop feature. Dragging files into web content is common and supported by many websites. Electron additionally supports dragging files and content out from web content into the operating system's world.</source>
          <target state="translated">파일을 조작하는 특정 종류의 응용 프로그램은 운영 체제의 기본 파일 끌어서 놓기 기능을 지원할 수 있습니다. 파일을 웹 컨텐츠로 끌어 오는 것이 일반적이며 많은 웹 사이트에서 지원됩니다. Electron은 파일과 컨텐츠를 웹 컨텐츠에서 운영 체제 세계로 끌어 오는 것을 추가로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="10de46b3b341b6f837cf6d72972b9bf2b3f6e491" translate="yes" xml:space="preserve">
          <source>Certificate</source>
          <target state="translated">Certificate</target>
        </trans-unit>
        <trans-unit id="ba0b998ec4ee590a1525fb9ce924b5c6c3d689ee" translate="yes" xml:space="preserve">
          <source>Certificate Object</source>
          <target state="translated">인증서 객체</target>
        </trans-unit>
        <trans-unit id="e857b6685de9bb4567658584dd3d2d3840faa282" translate="yes" xml:space="preserve">
          <source>CertificatePrincipal</source>
          <target state="translated">CertificatePrincipal</target>
        </trans-unit>
        <trans-unit id="84bdb1d3faecd7cef66929f76ae928b19890d1f4" translate="yes" xml:space="preserve">
          <source>CertificatePrincipal Object</source>
          <target state="translated">CertificatePrincipal 객체</target>
        </trans-unit>
        <trans-unit id="32f17190d0613794b441eaba2cd849d775c70df8" translate="yes" xml:space="preserve">
          <source>Change the CFBundleIdentifier</source>
          <target state="translated">CFBundleIdentifier 변경</target>
        </trans-unit>
        <trans-unit id="fd0e40eafa0f9b760c80828ad941133706383c4a" translate="yes" xml:space="preserve">
          <source>Changes the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;애플리케이션 사용자 모델 ID&lt;/a&gt; 를 &lt;code&gt;id&lt;/code&gt; 로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="7192443b2703fd72e1d80fe455404d52a3b2ece8" translate="yes" xml:space="preserve">
          <source>Changes the attachment point for sheets on macOS. By default, sheets are attached just below the window frame, but you may want to display them beneath a HTML-rendered toolbar. For example:</source>
          <target state="translated">macOS에서 시트의 부착 점을 변경합니다. 기본적으로 시트는 창 프레임 바로 아래에 첨부되지만 HTML 렌더링 도구 모음 아래에 표시 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e00a43e5c98149d17616727aefd5bf10508c744a" translate="yes" xml:space="preserve">
          <source>Changes the title of native window to &lt;code&gt;title&lt;/code&gt;.</source>
          <target state="translated">네이티브 윈도우의 제목 변경 &lt;code&gt;title&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef5c53d0bdeb734237010809e6dbb1dd0fc33bae" translate="yes" xml:space="preserve">
          <source>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.</source>
          <target state="translated">확대 / 축소 비율을 지정된 비율로 변경합니다. 확대 / 축소 비율은 확대 / 축소 비율을 100으로 나눈 값이므로 300 % = 3.0입니다.</target>
        </trans-unit>
        <trans-unit id="14850ce55f6d0b97e4b3bd48728cc077a1b88ebe" translate="yes" xml:space="preserve">
          <source>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.</source>
          <target state="translated">확대 / 축소 수준을 지정된 수준으로 변경합니다. 원래 크기는 0이며 위 또는 아래의 각 증분은 각각 원래 크기의 300 % 및 50 %의 기본 한계까지 20 % 확대 또는 축소를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cd03fab79caf1e647e1267283b60a0a14e953946" translate="yes" xml:space="preserve">
          <source>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively. The formula for this is &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt;.</source>
          <target state="translated">확대 / 축소 수준을 지정된 수준으로 변경합니다. 원래 크기는 0이며 위 또는 아래의 각 증분은 각각 원래 크기의 300 % 및 50 %의 기본 한계까지 20 % 확대 또는 축소를 나타냅니다. 이에 대한 공식은 &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="45d82a5c3a699427f986d8e08907e357733f7ab7" translate="yes" xml:space="preserve">
          <source>Changes whether the window can be focused.</source>
          <target state="translated">창에 초점을 맞출 수 있는지 여부를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="2f74e6ebc41fbce39cd16dbd7b5a6b854ed42978" translate="yes" xml:space="preserve">
          <source>Changes window icon.</source>
          <target state="translated">창 아이콘을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4ca39192d8d6878e7b7039f57abb93acc55f2057" translate="yes" xml:space="preserve">
          <source>Check out a new branch for the update</source>
          <target state="translated">업데이트에 대한 새로운 지점을 확인하십시오</target>
        </trans-unit>
        <trans-unit id="182619eb360224a72f2e5882c8c12327823c7d1b" translate="yes" xml:space="preserve">
          <source>Check out the branch with the revision checksum:</source>
          <target state="translated">개정 체크섬으로 지점을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="75171393df728b53dcbcb23f97d59af1f77a786f" translate="yes" xml:space="preserve">
          <source>Check release tag and select the range of commits we need to re-apply</source>
          <target state="translated">릴리스 태그를 확인하고 다시 적용해야하는 커밋 범위를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="5683268cb936dd4a55ee665f313482760bd60190" translate="yes" xml:space="preserve">
          <source>Check the &lt;em&gt;Size requirements&lt;/em&gt; section in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dn742485(v=vs.85).aspx&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dn742485(v=vs.85).aspx&quot;&gt;이 기사&lt;/a&gt; 의 &lt;em&gt;크기 요구 사항&lt;/em&gt; 섹션을 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8e78ecd4ddbd2d07b0d406ba4b7180188ca6bd3" translate="yes" xml:space="preserve">
          <source>Check the build prerequisites for your platform before proceeding</source>
          <target state="translated">계속하기 전에 플랫폼의 빌드 전제 조건을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="39a3652e60c32034bcb7aafe742c047e5cf4112a" translate="yes" xml:space="preserve">
          <source>Checklist: Security Recommendations</source>
          <target state="translated">검사 목록 : 보안 권장 사항</target>
        </trans-unit>
        <trans-unit id="b3a64a28999ab83dd2fadf5268178d21a443b216" translate="yes" xml:space="preserve">
          <source>Checkout Chromium if you haven't already:</source>
          <target state="translated">Checkout Chromium (아직없는 경우) :</target>
        </trans-unit>
        <trans-unit id="9dbcf2f1165fcfbe3e167ded11918e8eaab0d401" translate="yes" xml:space="preserve">
          <source>Checkout both &lt;code&gt;vY.Y.Y&lt;/code&gt; &amp;amp; &lt;code&gt;v.X.X.X&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;vY.Y.Y&lt;/code&gt; 및 &lt;code&gt;v.X.X.X&lt;/code&gt; 모두 체크 아웃</target>
        </trans-unit>
        <trans-unit id="cea6e890ce501a3facfa61dc612bcf58b0141a89" translate="yes" xml:space="preserve">
          <source>Checks if any ServiceWorker is registered and returns a boolean as response to &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">ServiceWorker가 등록되어 있는지 확인하고 &lt;code&gt;callback&lt;/code&gt; 대한 응답으로 부울을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="405e98a7480935cf207238f823df474d9ce05b2f" translate="yes" xml:space="preserve">
          <source>Cherry-pick commit range:</source>
          <target state="translated">체리 픽 커밋 범위 :</target>
        </trans-unit>
        <trans-unit id="f051668d95b585a378592c1c999017d249388c51" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, Chromium asynchronously asks all child processes to flush any pending trace data.</source>
          <target state="translated">하위 프로세스는 일반적으로 추적 데이터를 캐시하고 거의 플러시하고 추적 데이터를 기본 프로세스로 다시 보냅니다. 이는 IPC를 통해 추적 데이터를 보내는 작업이 비용이 많이들 수 있으므로 추적의 런타임 오버 헤드를 최소화하는 데 도움이됩니다. 따라서 추적을 종료하기 위해 Chromium은 모든 하위 프로세스에 보류중인 추적 데이터를 플러시하도록 비동기 적으로 요청합니다.</target>
        </trans-unit>
        <trans-unit id="c139e6eb8130b236949da051d03045ab495cb117" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</source>
          <target state="translated">자식 프로세스는 일반적으로 추적 데이터를 캐시하며 추적 데이터를 기본 프로세스로 플러시하고 다시 보내는 경우는 거의 없습니다. IPC를 통해 추적 데이터를 보내는 것은 비용이 많이 드는 작업이므로 추적의 런타임 오버 헤드를 최소화하는 데 도움이됩니다. 따라서 추적을 종료하려면 보류중인 추적 데이터를 모두 비우도록 모든 하위 프로세스를 비동기 적으로 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c23d1c2815c1a2b9a10b09cf84830fcfbcb6a39" translate="yes" xml:space="preserve">
          <source>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This is because it may be an expensive operation to send the trace data over IPC and we would like to avoid unneeded runtime overhead from tracing. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</source>
          <target state="translated">자식 프로세스는 일반적으로 추적 데이터를 캐시하며 추적 데이터를 기본 프로세스로 플러시하고 다시 보내는 경우는 거의 없습니다. 이는 IPC를 통해 추적 데이터를 전송하는 데 많은 비용이 들기 때문에 불필요한 추적 오버 헤드가 발생하지 않도록하기위한 것입니다. 따라서 추적을 종료하려면 보류중인 추적 데이터를 모두 비우도록 모든 하위 프로세스를 비동기 적으로 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="15dc18865567bcc98554a72a8036e1b64a8b85d5" translate="yes" xml:space="preserve">
          <source>Chinese</source>
          <target state="translated">Chinese</target>
        </trans-unit>
        <trans-unit id="78bba35bec315c2f41be72ec6cbfc623c3a8a9d0" translate="yes" xml:space="preserve">
          <source>Chinese (Simplified)</source>
          <target state="translated">중국어 (간체)</target>
        </trans-unit>
        <trans-unit id="db2dff441f0d902d148f848ce8398a02c04d162c" translate="yes" xml:space="preserve">
          <source>Chinese (Traditional)</source>
          <target state="translated">중국 전통)</target>
        </trans-unit>
        <trans-unit id="e6dd63b4b16ba86ecce2c7349853efcb87d8c77d" translate="yes" xml:space="preserve">
          <source>Choose a version number from &lt;a href=&quot;https://omahaproxy.appspot.com/&quot;&gt;OmahaProxy&lt;/a&gt; and update the &lt;code&gt;VERSION&lt;/code&gt; file with it</source>
          <target state="translated">&lt;a href=&quot;https://omahaproxy.appspot.com/&quot;&gt;OmahaProxy&lt;/a&gt; 에서 버전 번호를 선택 하고 &lt;code&gt;VERSION&lt;/code&gt; 파일을 업데이트하십시오</target>
        </trans-unit>
        <trans-unit id="1eaa07be32eb59a746b0653573b6e99aca3c9038" translate="yes" xml:space="preserve">
          <source>Choosing an Editor</source>
          <target state="translated">편집자 선택</target>
        </trans-unit>
        <trans-unit id="91b8551c4a3e5bdffc9c77360320226e1762f98d" translate="yes" xml:space="preserve">
          <source>Chrome Developer Tools has a &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;special binding&lt;/a&gt; available at JavaScript runtime that allows interacting with pages and instrumenting them.</source>
          <target state="translated">Chrome 개발자 도구에는 페이지와 상호 작용하고이를 계측 할 수있는 자바 스크립트 런타임에서 사용할 수 있는 &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;특수 바인딩이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="788bd4f4f3ad1a35b24cf7334a5f2aeba7c9f9e0" translate="yes" xml:space="preserve">
          <source>Chrome Developer Tools has a &lt;a href=&quot;https://developer.chrome.com/devtools/docs/debugger-protocol&quot;&gt;special binding&lt;/a&gt; available at JavaScript runtime that allows interacting with pages and instrumenting them.</source>
          <target state="translated">Chrome 개발자 도구에는 JavaScript 런타임에서 페이지와 상호 작용하고이를 계측 할 수 있는 &lt;a href=&quot;https://developer.chrome.com/devtools/docs/debugger-protocol&quot;&gt;특수 바인딩이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd23a3ca9570ea4beadd7fb59c8157437b6323e0" translate="yes" xml:space="preserve">
          <source>Chrome Extension Support</source>
          <target state="translated">Chrome 확장 지원</target>
        </trans-unit>
        <trans-unit id="28d3daec32e1c2f459d1a684db401a47ff792d0f" translate="yes" xml:space="preserve">
          <source>Chrome Extensions Support</source>
          <target state="translated">Chrome 확장 지원</target>
        </trans-unit>
        <trans-unit id="607eaac54dfb10acc85a4cde72f23c3ff7340e46" translate="yes" xml:space="preserve">
          <source>Chrome Release Schedule</source>
          <target state="translated">크롬 출시 일정</target>
        </trans-unit>
        <trans-unit id="22242faf4b7afc2ac2dcf5e59f86fc45c0c8e89b" translate="yes" xml:space="preserve">
          <source>Chromium Development</source>
          <target state="translated">크롬 개발</target>
        </trans-unit>
        <trans-unit id="04c16cc2d1fa5febca0b55e51cfecb1f45fce286" translate="yes" xml:space="preserve">
          <source>Chromium Issue Tracker</source>
          <target state="translated">크롬 이슈 트래커</target>
        </trans-unit>
        <trans-unit id="4d4df82f436010fbf96d49ac0485f6622e336c21" translate="yes" xml:space="preserve">
          <source>Chromium Security Issues and Upgrades</source>
          <target state="translated">Chromium 보안 문제 및 업그레이드</target>
        </trans-unit>
        <trans-unit id="7e335ea5a9f38301e7af69aba413216f64c15532" translate="yes" xml:space="preserve">
          <source>Chromium development with Electron</source>
          <target state="translated">Electron을 이용한 크롬 개발</target>
        </trans-unit>
        <trans-unit id="9c1e68eb8f237d9e38f5a357e502d7a198457f48" translate="yes" xml:space="preserve">
          <source>Chromium does not provide &lt;code&gt;residentSet&lt;/code&gt; value for macOS. This is because macOS performs in-memory compression of pages that haven't been recently used. As a result the resident set size value is not what one would expect. &lt;code&gt;private&lt;/code&gt; memory is more representative of the actual pre-compression memory usage of the process on macOS.</source>
          <target state="translated">Chromium은 macOS에 &lt;code&gt;residentSet&lt;/code&gt; 값을 제공하지 않습니다 . 이는 macOS가 최근에 사용되지 않은 페이지의 메모리 내 압축을 수행하기 때문입니다. 결과적으로 상주 설정 크기 값은 예상과 다릅니다. &lt;code&gt;private&lt;/code&gt; 메모리는 macOS에서 프로세스의 실제 압축 전 메모리 사용량을 더 잘 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a63070852351699db72ebb1819ead2269b9a49a8" translate="yes" xml:space="preserve">
          <source>Chromium git cache</source>
          <target state="translated">크롬 자식 캐시</target>
        </trans-unit>
        <trans-unit id="05c98d780dac4b1bbd27ed2e1810948dc35b332c" translate="yes" xml:space="preserve">
          <source>Chromium logs can be enabled via the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable. For more information, see the &lt;a href=&quot;../api/environment-variables#electron_enable_logging&quot;&gt;environment variables documentation&lt;/a&gt;.</source>
          <target state="translated">Chromium 로그는 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 환경 변수 를 통해 활성화 할 수 있습니다 . 자세한 정보는 &lt;a href=&quot;../api/environment-variables#electron_enable_logging&quot;&gt;환경 변수 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8b7bc9acb1a7cb9c4e5a43a8fb9369991a1f295" translate="yes" xml:space="preserve">
          <source>Chromium version updates</source>
          <target state="translated">크롬 버전 업데이트</target>
        </trans-unit>
        <trans-unit id="f3b0048471dbd0926cd5218327109b14439d4609" translate="yes" xml:space="preserve">
          <source>Circle CI</source>
          <target state="translated">서클 CI</target>
        </trans-unit>
        <trans-unit id="521f5f5310232429eb9d8f40f8d6f2d23af8c14e" translate="yes" xml:space="preserve">
          <source>Circle CI is awesome and has Xvfb and &lt;code&gt;$DISPLAY&lt;/code&gt;&lt;a href=&quot;https://circleci.com/docs/environment#browsers&quot;&gt;already set up, so no further configuration is required&lt;/a&gt;.</source>
          <target state="translated">Circle CI는 훌륭하고 Xvfb 및 &lt;code&gt;$DISPLAY&lt;/code&gt; &lt;a href=&quot;https://circleci.com/docs/environment#browsers&quot;&gt;이미 설정되어 있으므로 추가 구성이 필요하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1661e7b4f8b7cbaab4e9486b3eb639349bd20091" translate="yes" xml:space="preserve">
          <source>Circle CI is awesome and has xvfb and &lt;code&gt;$DISPLAY&lt;/code&gt;&lt;a href=&quot;https://circleci.com/docs/environment#browsers&quot;&gt;already setup, so no further configuration is required&lt;/a&gt;.</source>
          <target state="translated">Circle CI는 훌륭하고 xvfb 및 &lt;code&gt;$DISPLAY&lt;/code&gt; &lt;a href=&quot;https://circleci.com/docs/environment#browsers&quot;&gt;이미 설정되어 있으므로 추가 구성이 필요하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e8b0b2f24c60e0aacd3f82d6e38f966f5c9dc4ce" translate="yes" xml:space="preserve">
          <source>Class methods and properties (methods starting with a &lt;code&gt;@&lt;/code&gt;)</source>
          <target state="translated">클래스 메소드 및 특성 ( &lt;code&gt;@&lt;/code&gt; 로 시작하는 메소드 )</target>
        </trans-unit>
        <trans-unit id="7e400a8de8e5eb65566413a0c6e36d03037a1dc4" translate="yes" xml:space="preserve">
          <source>Class: BrowserView</source>
          <target state="translated">클래스 : BrowserView</target>
        </trans-unit>
        <trans-unit id="47821a0a8e4f69b9ea1ac663b066bbab3ef19292" translate="yes" xml:space="preserve">
          <source>Class: BrowserWindow</source>
          <target state="translated">클래스 : BrowserWindow</target>
        </trans-unit>
        <trans-unit id="a037dc47f5141f6ae5a5977dd9d0d7717c83370e" translate="yes" xml:space="preserve">
          <source>Class: BrowserWindowProxy</source>
          <target state="translated">클래스 : BrowserWindowProxy</target>
        </trans-unit>
        <trans-unit id="0b1cfe8cb0c7ac4ce969c9cffcb0430eea4e6486" translate="yes" xml:space="preserve">
          <source>Class: ClientRequest</source>
          <target state="translated">클래스 : ClientRequest</target>
        </trans-unit>
        <trans-unit id="0cc5b12e6b9bcadf535ce7af18f92b0211336e3b" translate="yes" xml:space="preserve">
          <source>Class: Cookies</source>
          <target state="translated">클래스 : 쿠키</target>
        </trans-unit>
        <trans-unit id="21736e17ca617d984d9558de5422dbe0f422282a" translate="yes" xml:space="preserve">
          <source>Class: Debugger</source>
          <target state="translated">클래스 : 디버거</target>
        </trans-unit>
        <trans-unit id="6f824dbad6d0dcb624e175419ef235617ed33429" translate="yes" xml:space="preserve">
          <source>Class: DownloadItem</source>
          <target state="translated">클래스 : DownloadItem</target>
        </trans-unit>
        <trans-unit id="15aa7172cec52afb1d361aa34c60c34407514e58" translate="yes" xml:space="preserve">
          <source>Class: IncomingMessage</source>
          <target state="translated">클래스 : IncomingMessage</target>
        </trans-unit>
        <trans-unit id="1c273b27a99b5605b75ad8cb2a2868673f18ee09" translate="yes" xml:space="preserve">
          <source>Class: Menu</source>
          <target state="translated">클래스 : 메뉴</target>
        </trans-unit>
        <trans-unit id="094517a10896d8a219eba2144348cfc308fc0b8f" translate="yes" xml:space="preserve">
          <source>Class: MenuItem</source>
          <target state="translated">클래스 : MenuItem</target>
        </trans-unit>
        <trans-unit id="7dea8c9a2aa5dcf35db5571314eda5fc7f6cae19" translate="yes" xml:space="preserve">
          <source>Class: NativeImage</source>
          <target state="translated">클래스 : NativeImage</target>
        </trans-unit>
        <trans-unit id="979ae6461157f668a694eb4b91ac4eea326f60e5" translate="yes" xml:space="preserve">
          <source>Class: Notification</source>
          <target state="translated">수업 : 알림</target>
        </trans-unit>
        <trans-unit id="d95060325da2c144a274b740885afa4ffeefae6c" translate="yes" xml:space="preserve">
          <source>Class: Session</source>
          <target state="translated">수업 : 세션</target>
        </trans-unit>
        <trans-unit id="4a58cd4295a2ff2495d307e56a444003de6ddd6a" translate="yes" xml:space="preserve">
          <source>Class: TouchBar</source>
          <target state="translated">클래스 : TouchBar</target>
        </trans-unit>
        <trans-unit id="304c454d156a4e4d1935954cd0a7e8b81239e686" translate="yes" xml:space="preserve">
          <source>Class: TouchBarButton</source>
          <target state="translated">클래스 : TouchBarButton</target>
        </trans-unit>
        <trans-unit id="b7bae000b3c187efd8066efc3023ef65a7f4df9b" translate="yes" xml:space="preserve">
          <source>Class: TouchBarColorPicker</source>
          <target state="translated">클래스 : TouchBarColorPicker</target>
        </trans-unit>
        <trans-unit id="d09e33cc160a38bbdd7dea7c310ad653fed12e01" translate="yes" xml:space="preserve">
          <source>Class: TouchBarGroup</source>
          <target state="translated">클래스 : TouchBarGroup</target>
        </trans-unit>
        <trans-unit id="181155ef7e28a2b5d3e46293f09c020074a63f36" translate="yes" xml:space="preserve">
          <source>Class: TouchBarLabel</source>
          <target state="translated">클래스 : TouchBarLabel</target>
        </trans-unit>
        <trans-unit id="dd1d225634855dc034e53375383d648606295881" translate="yes" xml:space="preserve">
          <source>Class: TouchBarPopover</source>
          <target state="translated">클래스 : TouchBarPopover</target>
        </trans-unit>
        <trans-unit id="edb196134cd29b526ccbdc8b27523c399a6f86c8" translate="yes" xml:space="preserve">
          <source>Class: TouchBarScrubber</source>
          <target state="translated">클래스 : TouchBarScrubber</target>
        </trans-unit>
        <trans-unit id="397f58f2361e2135ecc0864e4c704ac33e7828e1" translate="yes" xml:space="preserve">
          <source>Class: TouchBarSegmentedControl</source>
          <target state="translated">클래스 : TouchBarSegmentedControl</target>
        </trans-unit>
        <trans-unit id="eed0d09e5789cdae11d9d647f704d0463b7b12b6" translate="yes" xml:space="preserve">
          <source>Class: TouchBarSlider</source>
          <target state="translated">클래스 : TouchBarSlider</target>
        </trans-unit>
        <trans-unit id="30f3d0afc42972a73b80e0461ab0cdf5e99e7861" translate="yes" xml:space="preserve">
          <source>Class: TouchBarSpacer</source>
          <target state="translated">클래스 : TouchBarSpacer</target>
        </trans-unit>
        <trans-unit id="0daea0e74d1eeab2906ae85f25820015c720fceb" translate="yes" xml:space="preserve">
          <source>Class: Tray</source>
          <target state="translated">클래스 : 트레이</target>
        </trans-unit>
        <trans-unit id="d264e029c5243660024941da145241799270137e" translate="yes" xml:space="preserve">
          <source>Class: WebContents</source>
          <target state="translated">클래스 : WebContents</target>
        </trans-unit>
        <trans-unit id="15ae99fc57f9cb53510d49b4daca965c8eb51f74" translate="yes" xml:space="preserve">
          <source>Class: WebRequest</source>
          <target state="translated">클래스 : WebRequest</target>
        </trans-unit>
        <trans-unit id="34b9ee32d9877951750e2154d1e2597e2c63245d" translate="yes" xml:space="preserve">
          <source>Cleaning</source>
          <target state="translated">Cleaning</target>
        </trans-unit>
        <trans-unit id="530122dbf8dc4d6e2c62c392517476e48ed7ce73" translate="yes" xml:space="preserve">
          <source>Clear tasks list</source>
          <target state="translated">작업 목록 지우기</target>
        </trans-unit>
        <trans-unit id="7760c3b61cfff30caa03c93f844cfe3451de3cb9" translate="yes" xml:space="preserve">
          <source>Clear the list of recent documents</source>
          <target state="translated">최근 문서 목록 지우기</target>
        </trans-unit>
        <trans-unit id="28e1672160090f91e02f918f361ab488c2563527" translate="yes" xml:space="preserve">
          <source>Clear thumbnail toolbar</source>
          <target state="translated">썸네일 툴바 지우기</target>
        </trans-unit>
        <trans-unit id="c04541b54d642fb4d6492fc876ba6cb19b8cd8b1" translate="yes" xml:space="preserve">
          <source>Clears the clipboard content.</source>
          <target state="translated">클립 보드 내용을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="00bd67654dc11fd9ed8c5d78d9b29eda5f15717b" translate="yes" xml:space="preserve">
          <source>Clears the data of web storages.</source>
          <target state="translated">웹 저장소의 데이터를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="2e4dc3e51ab0bb54608a87ee10c1de150f8e825e" translate="yes" xml:space="preserve">
          <source>Clears the host resolver cache.</source>
          <target state="translated">호스트 확인자 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="f84a6c03d601bfccb2a934c59e4dccf81aa3b3bd" translate="yes" xml:space="preserve">
          <source>Clears the navigation history.</source>
          <target state="translated">탐색 기록을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="fa0017bc7a111405adc44b675b8f579f730269b9" translate="yes" xml:space="preserve">
          <source>Clears the recent documents list.</source>
          <target state="translated">최근 문서 목록을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="4c7d32226cb778c6227ceaa3141b1826cff1e4b7" translate="yes" xml:space="preserve">
          <source>Clears the session&amp;rsquo;s HTTP authentication cache.</source>
          <target state="translated">세션의 HTTP 인증 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="1d3aad048c04d144ed6cfbe9adf0a73d06c88c40" translate="yes" xml:space="preserve">
          <source>Clears the session&amp;rsquo;s HTTP cache.</source>
          <target state="translated">세션의 HTTP 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="957c59b83b72382ba63d45e3c115e05cdbc5cd18" translate="yes" xml:space="preserve">
          <source>Click 'Save draft'. &lt;strong&gt;Do not click 'Publish release'!&lt;/strong&gt;</source>
          <target state="translated">'임시 저장'을 클릭하십시오. &lt;strong&gt;'출시'를 클릭하지 마십시오!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="230c03949a2a2759250a200e625e5bdac8278296" translate="yes" xml:space="preserve">
          <source>Click &lt;em&gt;Add a feature&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;기능 추가를&lt;/em&gt; 클릭 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6e07e0da153932b6b67379ef63badf4c752318a9" translate="yes" xml:space="preserve">
          <source>Click-through window</source>
          <target state="translated">클릭 연결 창</target>
        </trans-unit>
        <trans-unit id="a3391f4829aca71e6b72328b80ec7562b0ba1e28" translate="yes" xml:space="preserve">
          <source>ClientRequest</source>
          <target state="translated">ClientRequest</target>
        </trans-unit>
        <trans-unit id="ba54a45a61a104d8534a1d49100d1f21e41c8e41" translate="yes" xml:space="preserve">
          <source>ClientRequest()</source>
          <target state="translated">ClientRequest()</target>
        </trans-unit>
        <trans-unit id="358e32a33d40de7e1d1121f2ba4e3183216996d5" translate="yes" xml:space="preserve">
          <source>Clone Google's crashpad (&lt;a href=&quot;https://chromium.googlesource.com/crashpad/crashpad&quot;&gt;https://chromium.googlesource.com/crashpad/crashpad&lt;/a&gt;)</source>
          <target state="translated">Google 크래시 패드 복제 ( &lt;a href=&quot;https://chromium.googlesource.com/crashpad/crashpad&quot;&gt;https://chromium.googlesource.com/crashpad/crashpad&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2bb0a29e5fb4e38154c0910de6060af1de65e8bd" translate="yes" xml:space="preserve">
          <source>Clone and run the code in this tutorial by using the &lt;a href=&quot;https://github.com/electron/electron-quick-start&quot;&gt;&lt;code&gt;electron/electron-quick-start&lt;/code&gt;&lt;/a&gt; repository.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron-quick-start&quot;&gt; &lt;code&gt;electron/electron-quick-start&lt;/code&gt; &lt;/a&gt; 저장소 를 사용하여이 학습서에서 코드를 복제하고 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="18c5831b2c74ddb658e7de3261f58bdf207a235d" translate="yes" xml:space="preserve">
          <source>Closes an open context menu, as set by &lt;code&gt;tray.setContextMenu()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tray.setContextMenu()&lt;/code&gt; 설정 한대로 열려있는 컨텍스트 메뉴를 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="c7068a0528ffe26e39e0366d089b1a6dee642732" translate="yes" xml:space="preserve">
          <source>Closes the DevTools window of guest page.</source>
          <target state="translated">게스트 페이지의 DevTools 창을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="50c03d1cc218a3fb2d9f41ce4ba71622fd42463d" translate="yes" xml:space="preserve">
          <source>Closes the context menu in the &lt;code&gt;browserWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 에서 상황에 맞는 메뉴를 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="aa4ea047214980237e1df37a3e7e933f5cf6d797" translate="yes" xml:space="preserve">
          <source>Closes the currently open &lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;Quick Look&lt;/a&gt; panel.</source>
          <target state="translated">현재 열려있는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Quick_Look&quot;&gt;빠른보기&lt;/a&gt; 패널을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="7f1964fc4857bffd908ec9431790b32ba9514052" translate="yes" xml:space="preserve">
          <source>Closes the devtools.</source>
          <target state="translated">devtools를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="f637a924bc8403a131a08ca771d16f47ac3003c6" translate="yes" xml:space="preserve">
          <source>Code Search</source>
          <target state="translated">코드 검색</target>
        </trans-unit>
        <trans-unit id="e51f4a9c2476cf5068fbcafe8ff4780a1474925c" translate="yes" xml:space="preserve">
          <source>Code Signing</source>
          <target state="translated">코드 서명</target>
        </trans-unit>
        <trans-unit id="f46c72bf4ae7eb48d96f55e4013ee3f2d7142778" translate="yes" xml:space="preserve">
          <source>Code example</source>
          <target state="translated">코드 예</target>
        </trans-unit>
        <trans-unit id="55c093aedf32e26f78240782688d60774a2c3f47" translate="yes" xml:space="preserve">
          <source>Code executed within the main process (that is, code found in or eventually run by your main JavaScript file) as well as code called using the remote (&lt;code&gt;require('electron').remote&lt;/code&gt;) will run inside the main process, while other code will execute inside its respective renderer process.</source>
          <target state="translated">기본 프로세스 내에서 실행 된 코드 (즉, 기본 JavaScript 파일에서 찾거나 결국 실행되는 코드)와 원격 ( &lt;code&gt;require('electron').remote&lt;/code&gt; )을 사용하여 호출 된 코드 는 기본 프로세스 내에서 실행되지만 다른 코드는 각각의 렌더러 프로세스 내에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="56b1cd13a0df7484303974d96acda9a4087fcf04" translate="yes" xml:space="preserve">
          <source>Code executed within the main process (that is, code found in or eventually run by your main JavaScript file) will run inside the main process, while other code will execute inside its respective renderer process.</source>
          <target state="translated">기본 프로세스 내에서 실행되는 코드 (즉, 기본 JavaScript 파일에서 발견되거나 결국 실행되는 코드)는 기본 프로세스 내에서 실행되고 다른 코드는 해당 렌더러 프로세스 내에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ba62c7791ebbe832a119b37fe7a583028fe11f2e" translate="yes" xml:space="preserve">
          <source>Code execution will be suspended until web page stop loading.</source>
          <target state="translated">웹 페이지로드가 중지 될 때까지 코드 실행이 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="590432437790335691bb4459bc701e4baf664bff" translate="yes" xml:space="preserve">
          <source>Code in the main process can accept callbacks from the renderer - for instance the &lt;code&gt;remote&lt;/code&gt; module - but you should be extremely careful when using this feature.</source>
          <target state="translated">기본 프로세스의 코드는 렌더러의 콜백 (예 : &lt;code&gt;remote&lt;/code&gt; 모듈) 을 받아 들일 수 있지만이 기능을 사용할 때는 매우주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">행동 강령</target>
        </trans-unit>
        <trans-unit id="27f6e391183ffd61c2be2d3bdff6b31e24045b78" translate="yes" xml:space="preserve">
          <source>Code signing is a security technology that you use to certify that an app was created by you.</source>
          <target state="translated">코드 서명은 사용자가 앱을 만들었 음을 인증하는 데 사용하는 보안 기술입니다.</target>
        </trans-unit>
        <trans-unit id="d47cf0f37c9b3b717ad801771de4c81a8f106260" translate="yes" xml:space="preserve">
          <source>Coding Style</source>
          <target state="translated">코딩 스타일</target>
        </trans-unit>
        <trans-unit id="dc6bf52ff843e3b0f72200a3632bb9fde7a64617" translate="yes" xml:space="preserve">
          <source>Collect tracing data from Chromium to find performance bottlenecks and slow operations.</source>
          <target state="translated">Chromium에서 추적 데이터를 수집하여 성능 병목 현상과 느린 작업을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="d9054375bcbe4cc2094a2028d47d0bc60d2febc8" translate="yes" xml:space="preserve">
          <source>Collect tracing data from Chromium's content module for finding performance bottlenecks and slow operations.</source>
          <target state="translated">Chromium의 콘텐츠 모듈에서 추적 데이터를 수집하여 성능 병목 현상과 느린 작업을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="8fa764c4f7b6f884beb38bb21583ca2ac7a87b74" translate="yes" xml:space="preserve">
          <source>Command Line Switches</source>
          <target state="translated">커맨드 라인 스위치</target>
        </trans-unit>
        <trans-unit id="dcc0c7afaf86fc1b7997cdfff004d05af953272a" translate="yes" xml:space="preserve">
          <source>Command line switches supported by Electron.</source>
          <target state="translated">Electron이 지원하는 명령 행 스위치.</target>
        </trans-unit>
        <trans-unit id="08b30b581d04e7e19ec606bb85a584a1520a78a5" translate="yes" xml:space="preserve">
          <source>Command xxxx not found</source>
          <target state="translated">xxxx 명령을 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="a2660e82705e57dd6e97481be3c597b2f24d683c" translate="yes" xml:space="preserve">
          <source>CommandLine</source>
          <target state="translated">CommandLine</target>
        </trans-unit>
        <trans-unit id="b8632f9be68bc1fe817a2c92d5b8d8b55dac0d03" translate="yes" xml:space="preserve">
          <source>Commands are lowercased, underscores are replaced with hyphens, and the &lt;code&gt;APPCOMMAND_&lt;/code&gt; prefix is stripped off. e.g. &lt;code&gt;APPCOMMAND_BROWSER_BACKWARD&lt;/code&gt; is emitted as &lt;code&gt;browser-backward&lt;/code&gt;.</source>
          <target state="translated">명령은 소문자로 표시되고 밑줄은 하이픈으로 대체되며 &lt;code&gt;APPCOMMAND_&lt;/code&gt; 접두사는 제거됩니다. 예를 들어 &lt;code&gt;APPCOMMAND_BROWSER_BACKWARD&lt;/code&gt; 는 &lt;code&gt;browser-backward&lt;/code&gt; 로 생성 됩니다.</target>
        </trans-unit>
        <trans-unit id="623b7fcc65a99eacd80d5052be5563d99522c30b" translate="yes" xml:space="preserve">
          <source>Commit message guidelines</source>
          <target state="translated">커밋 메시지 지침</target>
        </trans-unit>
        <trans-unit id="b0cb6f5a4804249e4fe6d00ecfd599453d791674" translate="yes" xml:space="preserve">
          <source>Commits that would result in a semver &lt;strong&gt;major&lt;/strong&gt; bump must start their body with &lt;code&gt;BREAKING CHANGE:&lt;/code&gt;.</source>
          <target state="translated">semver &lt;strong&gt;주요&lt;/strong&gt; 충돌을 일으키는 커밋은 &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0116272245bfee578561f8c2e8801fca3f06ac2" translate="yes" xml:space="preserve">
          <source>Commits that would result in a semver &lt;strong&gt;major&lt;/strong&gt; bump must start with &lt;code&gt;BREAKING CHANGE:&lt;/code&gt;.</source>
          <target state="translated">더 &lt;strong&gt;큰 크기의&lt;/strong&gt; 충돌을 일으키는 커밋은 &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="24cff5a3747a64dc85f17589d654d6f377ab7088" translate="yes" xml:space="preserve">
          <source>Commits that would result in a semver &lt;strong&gt;minor&lt;/strong&gt; bump must start with &lt;code&gt;feat:&lt;/code&gt;.</source>
          <target state="translated">semver 초래 커밋 &lt;strong&gt;약간의&lt;/strong&gt; 범프로 시작해야합니다 &lt;code&gt;feat:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3e4063c274574aabaddfa618ef21ce83baa2538" translate="yes" xml:space="preserve">
          <source>Commits that would result in a semver &lt;strong&gt;patch&lt;/strong&gt; bump must start with &lt;code&gt;fix:&lt;/code&gt;.</source>
          <target state="translated">semver &lt;strong&gt;패치&lt;/strong&gt; 범프를 초래하는 커밋은 &lt;code&gt;fix:&lt;/code&gt; 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="626f774cfb539a1385975bf25bf0172e74a74208" translate="yes" xml:space="preserve">
          <source>Common prefixes:</source>
          <target state="translated">일반적인 접두사 :</target>
        </trans-unit>
        <trans-unit id="5abaa52a6bfe41c497f692172de9c4d9966f4dee" translate="yes" xml:space="preserve">
          <source>Communicate asynchronously from a renderer process to the main process.</source>
          <target state="translated">렌더러 프로세스에서 기본 프로세스로 비동기 적으로 통신합니다.</target>
        </trans-unit>
        <trans-unit id="ad5aa47b56c26ef16137e0ab40c095a7ac8d5236" translate="yes" xml:space="preserve">
          <source>Communicate asynchronously from the main process to renderer processes.</source>
          <target state="translated">기본 프로세스에서 렌더러 프로세스로 비동기 적으로 통신합니다.</target>
        </trans-unit>
        <trans-unit id="68b7022779b9e61b0a393c5156de1e45b66d608c" translate="yes" xml:space="preserve">
          <source>Comodo</source>
          <target state="translated">Comodo</target>
        </trans-unit>
        <trans-unit id="a944613362997c1bd2ac01efd8cf901d541faba2" translate="yes" xml:space="preserve">
          <source>Compile release notes</source>
          <target state="translated">컴파일 노트</target>
        </trans-unit>
        <trans-unit id="debb5b0a3bc1ac907e466f4a5b7521c8428f091a" translate="yes" xml:space="preserve">
          <source>Completes all pending transactions.</source>
          <target state="translated">보류중인 모든 트랜잭션을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="b315c32aca2e95714a44529be90cd25ac17d1d8e" translate="yes" xml:space="preserve">
          <source>Completes the pending transactions corresponding to the date.</source>
          <target state="translated">날짜에 해당하는 보류중인 트랜잭션을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="4330bc6b7ccaed49036494fc02f75fc4b64e3aeb" translate="yes" xml:space="preserve">
          <source>Component Build</source>
          <target state="translated">구성 요소 빌드</target>
        </trans-unit>
        <trans-unit id="fb5750343d79d88b8ec16bc938afa0fc665129f0" translate="yes" xml:space="preserve">
          <source>Configure local and global keyboard shortcuts</source>
          <target state="translated">로컬 및 글로벌 키보드 단축키 구성</target>
        </trans-unit>
        <trans-unit id="f842d859a8e28b65f9b9fc2eb78b720568c69db7" translate="yes" xml:space="preserve">
          <source>Configuring the Virtual Display Server</source>
          <target state="translated">가상 디스플레이 서버 구성</target>
        </trans-unit>
        <trans-unit id="3803fcdb0e2e9409d4f2d52d64149bd984e7682f" translate="yes" xml:space="preserve">
          <source>Confirm that checksums are the only difference between the two patches:</source>
          <target state="translated">체크섬이 두 패치의 유일한 차이점인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b3c89d558c370f3f77a9da7b31e992bb92eff3f9" translate="yes" xml:space="preserve">
          <source>Confirm that the patch applies cleanly with &lt;code&gt;script/patch.py -r src/V8 -p patches/v8/xxx-patch_name.patch.patch&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;script/patch.py -r src/V8 -p patches/v8/xxx-patch_name.patch.patch&lt;/code&gt; 를 사용하여 패치가 제대로 적용되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="17724d1cac2d52de5a075977216d13713e3cf13e" translate="yes" xml:space="preserve">
          <source>Congratulations and thanks for your contribution!</source>
          <target state="translated">축하합니다. 기여해 주셔서 감사합니다.</target>
        </trans-unit>
        <trans-unit id="32421e8fd534182bec186037966f7a95c0847ec9" translate="yes" xml:space="preserve">
          <source>Connect Chrome by visiting &lt;code&gt;chrome://inspect&lt;/code&gt; and selecting to inspect the launched Electron app present there.</source>
          <target state="translated">&lt;code&gt;chrome://inspect&lt;/code&gt; 를 방문 하여 실행 된 Electron 앱을 검사하도록 선택 하여 Chrome을 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac35b81ba7b018ebb6ad4ad06fc173a5af0031c5" translate="yes" xml:space="preserve">
          <source>Consider a normal window with an HD video player and associated controls. Perhaps there are 15 pixels of controls on the left edge, 25 pixels of controls on the right edge and 50 pixels of controls below the player. In order to maintain a 16:9 aspect ratio (standard aspect ratio for HD @1920x1080) within the player itself we would call this function with arguments of 16/9 and [ 40, 50 ]. The second argument doesn't care where the extra width and height are within the content view--only that they exist. Just sum any extra width and height areas you have within the overall content view.</source>
          <target state="translated">HD 비디오 플레이어 및 관련 컨트롤이있는 일반 창을 고려하십시오. 왼쪽 가장자리에는 15 픽셀의 컨트롤이 있고 오른쪽 가장자리에는 25 픽셀의 컨트롤이 있으며 플레이어 아래에는 50 픽셀의 컨트롤이있을 수 있습니다. 플레이어 자체에서 16 : 9 종횡비 (HD @ 1920x1080의 표준 종횡비)를 유지하기 위해이 함수를 16/9 및 [40, 50] 인수로 호출합니다. 두 번째 인수는 추가 너비와 높이가 컨텐츠 뷰 내 어디에 있는지 상관하지 않으며 존재하는 것만 있습니다. 전체 컨텐츠보기 내에있는 추가 너비 및 높이 영역을 합하면됩니다.</target>
        </trans-unit>
        <trans-unit id="3086e831a19254a04ff1af799ccd1712d1c1d4ec" translate="yes" xml:space="preserve">
          <source>Consider a normal window with an HD video player and associated controls. Perhaps there are 15 pixels of controls on the left edge, 25 pixels of controls on the right edge and 50 pixels of controls below the player. In order to maintain a 16:9 aspect ratio (standard aspect ratio for HD @1920x1080) within the player itself we would call this function with arguments of 16/9 and { width: 40, height: 50 }. The second argument doesn't care where the extra width and height are within the content view--only that they exist. Sum any extra width and height areas you have within the overall content view.</source>
          <target state="translated">HD 비디오 플레이어 및 관련 컨트롤이있는 일반 창을 고려하십시오. 아마도 왼쪽 가장자리에 15 픽셀의 컨트롤, 오른쪽 가장자리에 25 픽셀의 컨트롤, 플레이어 아래에 50 픽셀의 컨트롤이있을 수 있습니다. 플레이어 자체 내에서 16 : 9 종횡비 (HD @ 1920x1080의 표준 종횡비)를 유지하기 위해 16/9 및 {width : 40, height : 50} 인수를 사용하여이 함수를 호출합니다. 두 번째 인수는 콘텐츠보기 내에서 추가 너비와 높이가 어디에 있는지는 신경 쓰지 않습니다. 전체 콘텐츠보기 내에있는 추가 너비 및 높이 영역을 합산합니다.</target>
        </trans-unit>
        <trans-unit id="6a786eff4ff28b4074dc46cb98265d6f24589e0c" translate="yes" xml:space="preserve">
          <source>Context Isolation</source>
          <target state="translated">컨텍스트 격리</target>
        </trans-unit>
        <trans-unit id="748dd53eece47a499a83aa78b740e5d05df71db7" translate="yes" xml:space="preserve">
          <source>Context isolation allows each the scripts on running in the renderer to make changes to its JavaScript environment without worrying about conflicting with the scripts in the Electron API or the preload script.</source>
          <target state="translated">컨텍스트 격리를 사용하면 렌더러에서 실행중인 각 스크립트가 Electron API 또는 사전로드 스크립트의 스크립트와 충돌 할 염려없이 JavaScript 환경을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f08e1b9a043ea9704b4bd4865c0bcd9fcdceeabf" translate="yes" xml:space="preserve">
          <source>Context isolation is an Electron feature that allows developers to run code in preload scripts and in Electron APIs in a dedicated JavaScript context. In practice, that means that global objects like &lt;code&gt;Array.prototype.push&lt;/code&gt; or &lt;code&gt;JSON.parse&lt;/code&gt; cannot be modified by scripts running in the renderer process.</source>
          <target state="translated">컨텍스트 격리는 개발자가 전용 JavaScript 컨텍스트의 사전로드 스크립트 및 Electron API에서 코드를 실행할 수있는 Electron 기능입니다. 실제로 이는 &lt;code&gt;Array.prototype.push&lt;/code&gt; 또는 &lt;code&gt;JSON.parse&lt;/code&gt; 와 같은 전역 객체 는 렌더러 프로세스에서 실행되는 스크립트로 수정할 수 없음 을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="1152b4aa10198e1ea3682651008b55e3e76081d7" translate="yes" xml:space="preserve">
          <source>Context isolation will always be enabled in the opened &lt;code&gt;window&lt;/code&gt; if it is enabled on the parent window.</source>
          <target state="translated">부모 창 에서 열린 경우 열린 &lt;code&gt;window&lt;/code&gt; 에서 컨텍스트 격리가 항상 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d0cd32e30256409113b44fba61349535aa2eab6" translate="yes" xml:space="preserve">
          <source>Context menu</source>
          <target state="translated">상황에 맞는 메뉴</target>
        </trans-unit>
        <trans-unit id="b00536369bb511c0874096cd74da2b42f3a9b156" translate="yes" xml:space="preserve">
          <source>Continues any deferred redirection request when the redirection mode is &lt;code&gt;manual&lt;/code&gt;.</source>
          <target state="translated">리디렉션 모드가 &lt;code&gt;manual&lt;/code&gt; 경우 지연된 리디렉션 요청을 계속합니다 .</target>
        </trans-unit>
        <trans-unit id="4ee2558dc514d7292e390f2282a5113882f39df3" translate="yes" xml:space="preserve">
          <source>Continues any pending redirection. Can only be called during a &lt;code&gt;'redirect'&lt;/code&gt; event.</source>
          <target state="translated">보류중인 리디렉션을 계속합니다. &lt;code&gt;'redirect'&lt;/code&gt; 이벤트 중에 만 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bef862a80160807edd2aa117a330bae4ae935907" translate="yes" xml:space="preserve">
          <source>Continuous Integration Testing</source>
          <target state="translated">지속적인 통합 테스트</target>
        </trans-unit>
        <trans-unit id="3b9964915048fa10a17c944fa370f3c34196de37" translate="yes" xml:space="preserve">
          <source>Contributing to Electron</source>
          <target state="translated">전자에 기여</target>
        </trans-unit>
        <trans-unit id="a23a0ad82e893cd07fd235d3e09a5abfa85f27a5" translate="yes" xml:space="preserve">
          <source>Contributors are encouraged to solve issues collaboratively and help one another make progress. If encounter an issue that you feel is invalid, or which contains incorrect information, explain &lt;em&gt;why&lt;/em&gt; you feel that way with additional supporting context, and be willing to be convinced that you may be wrong. By doing so, we can often reach the correct outcome faster.</source>
          <target state="translated">기고자들은 협력 적으로 문제를 해결하고 서로의 발전을 돕도록 권장됩니다. 잘못되었다고 생각되거나 잘못된 정보가 포함 된 문제가 발생하면 추가 지원 컨텍스트를 통해 &lt;em&gt;왜&lt;/em&gt; 그런 느낌이 드는지 설명 하고 자신이 틀렸다고 확신 할 수 있도록하십시오. 그렇게함으로써 우리는 종종 정확한 결과에 더 빨리 도달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7afa74184bf8c7c9efe8a16ff4b0b65b76cf5a3d" translate="yes" xml:space="preserve">
          <source>Contributors are encouraged to solve issues collaboratively and help one another make progress. If you encounter an issue that you feel is invalid, or which contains incorrect information, explain &lt;em&gt;why&lt;/em&gt; you feel that way with additional supporting context, and be willing to be convinced that you may be wrong. By doing so, we can often reach the correct outcome faster.</source>
          <target state="translated">기여자는 공동으로 문제를 해결하고 서로의 발전을 돕도록 권장됩니다. 유효하지 않다고 느끼거나 잘못된 정보가 포함 된 문제가 발생하는 경우 추가 지원 컨텍스트를 사용하여 그렇게 느끼는 &lt;em&gt;이유&lt;/em&gt; 를 설명 하고 자신이 틀렸다고 확신 할 수 있습니다. 그렇게함으로써 우리는 종종 정확한 결과에 더 빨리 도달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d123bb2b1d7323d7989c834b0b761be8e9b6df3" translate="yes" xml:space="preserve">
          <source>Control application configuration and behavior without changing code.</source>
          <target state="translated">코드를 변경하지 않고 응용 프로그램 구성 및 동작을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="9c7a564902af1afef424fdc427a12bcc1e201c51" translate="yes" xml:space="preserve">
          <source>Control file downloads from remote sources.</source>
          <target state="translated">원격 소스에서 파일 다운로드를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="e5ad32e62bda213fe8ac41654b806d96fb325ad7" translate="yes" xml:space="preserve">
          <source>Control your app in the macOS dock</source>
          <target state="translated">macOS Dock에서 앱 제어</target>
        </trans-unit>
        <trans-unit id="7764723806956e6c33c27b59bc84f39de8d17804" translate="yes" xml:space="preserve">
          <source>Control your application's event lifecycle.</source>
          <target state="translated">응용 프로그램의 이벤트 수명주기를 제어하십시오.</target>
        </trans-unit>
        <trans-unit id="e16068455007f3e5b124ef0f954594317c97fceb" translate="yes" xml:space="preserve">
          <source>Controls whether or not this WebContents will throttle animations and timers when the page becomes backgrounded. This also affects the Page Visibility API.</source>
          <target state="translated">페이지가 배경이 될 때이 WebContents가 애니메이션 및 타이머를 제한할지 여부를 제어합니다. 이는 페이지 가시성 API에도 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="be6a981f0c1bc4715885280a0f68d912cf9574e4" translate="yes" xml:space="preserve">
          <source>Controls whether to hide cursor when typing.</source>
          <target state="translated">입력시 커서를 숨길 지 여부를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="a77b1703e27f48ee41fefc766ac367f53425638b" translate="yes" xml:space="preserve">
          <source>Converts a screen DIP point to a screen physical point. The DPI scale is performed relative to the display containing the DIP point.</source>
          <target state="translated">화면 DIP 포인트를 화면 물리적 포인트로 변환합니다. DPI 스케일은 DIP 포인트를 포함하는 디스플레이를 기준으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d1056ba0a3dd4e725b0a3bc4932c5fe2c2a01e8e" translate="yes" xml:space="preserve">
          <source>Converts a screen DIP rect to a screen physical rect. The DPI scale is performed relative to the display nearest to &lt;code&gt;window&lt;/code&gt;. If &lt;code&gt;window&lt;/code&gt; is null, scaling will be performed to the display nearest to &lt;code&gt;rect&lt;/code&gt;.</source>
          <target state="translated">화면 DIP 사각형을 화면 물리적 사각형으로 변환합니다. DPI 배율은 &lt;code&gt;window&lt;/code&gt; 가장 가까운 디스플레이를 기준으로 수행됩니다 . 경우 &lt;code&gt;window&lt;/code&gt; 널 (null)이, 스케일링에 가장 가까운 디스플레이로 수행됩니다 &lt;code&gt;rect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1fea29dd893c0f540b4fbffac7599c9bbe0b991" translate="yes" xml:space="preserve">
          <source>Converts a screen physical point to a screen DIP point. The DPI scale is performed relative to the display containing the physical point.</source>
          <target state="translated">화면 물리적 포인트를 화면 DIP 포인트로 변환합니다. DPI 스케일은 물리적 포인트를 포함하는 디스플레이를 기준으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="99f61b211d5715065e45c87182a357cea4db8e25" translate="yes" xml:space="preserve">
          <source>Converts a screen physical rect to a screen DIP rect. The DPI scale is performed relative to the display nearest to &lt;code&gt;window&lt;/code&gt;. If &lt;code&gt;window&lt;/code&gt; is null, scaling will be performed to the display nearest to &lt;code&gt;rect&lt;/code&gt;.</source>
          <target state="translated">화면 물리적 직사각형을 화면 DIP 직사각형으로 변환합니다. DPI 배율은 &lt;code&gt;window&lt;/code&gt; 가장 가까운 디스플레이를 기준으로 수행됩니다 . 경우 &lt;code&gt;window&lt;/code&gt; 널 (null)이, 스케일링에 가장 가까운 디스플레이로 수행됩니다 &lt;code&gt;rect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4f81994fed009c24d31efd799e2d47a74a60f1f" translate="yes" xml:space="preserve">
          <source>Cookie</source>
          <target state="translated">Cookie</target>
        </trans-unit>
        <trans-unit id="84737835eb611d3078653efdb2f4634bf93b3cb9" translate="yes" xml:space="preserve">
          <source>Cookie Object</source>
          <target state="translated">쿠키 객체</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="f9e864b0b1f63ab61d8b78318fcd97e3232dacc1" translate="yes" xml:space="preserve">
          <source>Copy the image at the given position to the clipboard.</source>
          <target state="translated">지정된 위치의 이미지를 클립 보드에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="62c4f8b38037b05ca1184197c0cca1611907ce50" translate="yes" xml:space="preserve">
          <source>Core Philosophy</source>
          <target state="translated">핵심 이념</target>
        </trans-unit>
        <trans-unit id="a97430eb191657de7a49506af043f2b52f50c7c4" translate="yes" xml:space="preserve">
          <source>Core Team and Contributors</source>
          <target state="translated">핵심 팀 및 기고자</target>
        </trans-unit>
        <trans-unit id="2b71c6fcebfd9ba9fd9c054eb22e8f6760be63e9" translate="yes" xml:space="preserve">
          <source>Corresponds to the points in time when the spinner of the tab started spinning.</source>
          <target state="translated">탭의 스피너가 회전을 시작한 시점에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f8bb8721fb78cab8085a636a00d14b2568e672be" translate="yes" xml:space="preserve">
          <source>Corresponds to the points in time when the spinner of the tab starts spinning.</source>
          <target state="translated">탭의 스피너가 회전을 시작하는 시점에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="15266c2e944bc5a04b141483d11d9fd57a9187fb" translate="yes" xml:space="preserve">
          <source>Corresponds to the points in time when the spinner of the tab stopped spinning.</source>
          <target state="translated">탭의 스피너가 회전을 멈추는 시점에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="ae427bb82a3dbf7d498f4fc66d8acfe9d33b3a01" translate="yes" xml:space="preserve">
          <source>Corresponds to the points in time when the spinner of the tab stops spinning.</source>
          <target state="translated">탭의 스피너가 회전을 멈추는 시점에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="854a21df6f21785c980fbc35faab6d39924216ec" translate="yes" xml:space="preserve">
          <source>Corsican</source>
          <target state="translated">Corsican</target>
        </trans-unit>
        <trans-unit id="29c1fc01c0ce30839a4933daf7fd313895d16bc8" translate="yes" xml:space="preserve">
          <source>Crash Report Payload</source>
          <target state="translated">충돌 보고서 페이로드</target>
        </trans-unit>
        <trans-unit id="22a86004615b1b52e078df5e1c83bd9c0500a808" translate="yes" xml:space="preserve">
          <source>Crash reports are saved locally in an application-specific temp directory folder. For a &lt;code&gt;productName&lt;/code&gt; of &lt;code&gt;YourName&lt;/code&gt;, crash reports will be stored in a folder named &lt;code&gt;YourName Crashes&lt;/code&gt; inside the temp directory. You can customize this temp directory location for your app by calling the &lt;code&gt;app.setPath('temp', '/my/custom/temp')&lt;/code&gt; API before starting the crash reporter.</source>
          <target state="translated">충돌 보고서는 응용 프로그램 별 임시 디렉토리 폴더에 로컬로 저장됩니다. &lt;code&gt;YourName&lt;/code&gt; 의 &lt;code&gt;productName&lt;/code&gt; 의 경우 충돌 보고서는 temp 디렉토리 내의 &lt;code&gt;YourName Crashes&lt;/code&gt; 라는 폴더에 저장됩니다 . 충돌 리포터를 시작하기 전에 &lt;code&gt;app.setPath('temp', '/my/custom/temp')&lt;/code&gt; API를 호출하여 앱의 임시 디렉토리 위치를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b14112eab08435c836d0ee2c12df6e4f566c45e4" translate="yes" xml:space="preserve">
          <source>Crash reports are stored temporarily before being uploaded in a directory underneath the app's user data directory (called 'Crashpad' on Windows and Mac, or 'Crash Reports' on Linux). You can override this directory by calling &lt;code&gt;app.setPath('crashDumps', '/path/to/crashes')&lt;/code&gt; before starting the crash reporter.</source>
          <target state="translated">오류 보고서는 앱의 사용자 데이터 디렉토리 (Windows 및 Mac에서는 'Crashpad', Linux에서는 'Crash Reports'라고 함) 아래의 디렉토리에 업로드되기 전에 임시로 저장됩니다. 크래시 리포터를 시작하기 전에 &lt;code&gt;app.setPath('crashDumps', '/path/to/crashes')&lt;/code&gt; 를 호출 하여이 디렉터리를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="382501256a0902798a3cb98c465a24d5e6b2f1de" translate="yes" xml:space="preserve">
          <source>CrashReport</source>
          <target state="translated">CrashReport</target>
        </trans-unit>
        <trans-unit id="20859576394df8d93673e76315eab20e84a93202" translate="yes" xml:space="preserve">
          <source>CrashReport Object</source>
          <target state="translated">CrashReport 객체</target>
        </trans-unit>
        <trans-unit id="3067c4ff1d38d54f5dae2937a0435f2d08dc4586" translate="yes" xml:space="preserve">
          <source>Crashpad, node, libcc, etc. patches are all kept in the same place</source>
          <target state="translated">크래시 패드, 노드, libcc 등 패치는 모두 같은 위치에 유지됩니다</target>
        </trans-unit>
        <trans-unit id="d9a895c65dcdc511f7a7c294557ab4d77cb7734d" translate="yes" xml:space="preserve">
          <source>Create OS desktop notifications</source>
          <target state="translated">OS 데스크톱 알림 생성</target>
        </trans-unit>
        <trans-unit id="b2d5bcf9f9056d8b82621ccf12fa84c29ff45575" translate="yes" xml:space="preserve">
          <source>Create TouchBar layouts for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램을위한 TouchBar 레이아웃 생성</target>
        </trans-unit>
        <trans-unit id="9cfc1d1a15379736381ebd1cb3a46c1050828ea1" translate="yes" xml:space="preserve">
          <source>Create Your In-App Purchases</source>
          <target state="translated">인앱 구매 생성</target>
        </trans-unit>
        <trans-unit id="37ffff1d37b85955dd91161149c2d78d15d57a28" translate="yes" xml:space="preserve">
          <source>Create a basic application</source>
          <target state="translated">기본 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="f24a06bb28a425c54b07741047dbd36c1c029a10" translate="yes" xml:space="preserve">
          <source>Create a branch in &lt;a href=&quot;https://github.com/electron/node&quot;&gt;https://github.com/electron/node&lt;/a&gt;: &lt;code&gt;electron-node-vX.X.X&lt;/code&gt; where the base that you're branching from is the tag for the desired update</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/node&quot;&gt;https://github.com/electron/node&lt;/a&gt; : &lt;code&gt;electron-node-vX.X.X&lt;/code&gt; 에서 분기를 만듭니다. 여기서 분기하는 기본은 원하는 업데이트의 태그입니다.</target>
        </trans-unit>
        <trans-unit id="bddecc87c9a49a5b85cdba0f3fb797cafa840be5" translate="yes" xml:space="preserve">
          <source>Create a browser window with a renderer that can run inside Chromium OS sandbox. With this option enabled, the renderer must communicate via IPC to the main process in order to access node APIs. However, in order to enable the Chromium OS sandbox, electron must be run with the --enable-sandbox command line argument.</source>
          <target state="translated">Chromium OS 샌드 박스 내에서 실행할 수있는 렌더러로 브라우저 창을 만듭니다. 이 옵션을 사용하면 렌더러가 IPC를 통해 기본 프로세스와 통신하여 노드 API에 액세스해야합니다. 그러나 Chromium OS 샌드 박스를 활성화하려면 --enable-sandbox 명령 줄 인수를 사용하여 전자를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="64ccddd213e6ec4e319ac4b53a36d7684c4c8965" translate="yes" xml:space="preserve">
          <source>Create a browser window with a renderer that can run inside Chromium OS sandbox. With this option enabled, the renderer must communicate via IPC to the main process in order to access node APIs. However, in order to enable the Chromium OS sandbox, electron must be run with the &lt;code&gt;--enable-sandbox&lt;/code&gt; command line argument.</source>
          <target state="translated">Chromium OS 샌드 박스 내에서 실행할 수있는 렌더러로 브라우저 창을 만듭니다. 이 옵션을 사용하면 렌더러가 IPC를 통해 기본 프로세스와 통신하여 노드 API에 액세스해야합니다. 그러나 Chromium OS 샌드 박스를 활성화하려면 &lt;code&gt;--enable-sandbox&lt;/code&gt; 명령 줄 인수 를 사용하여 전자를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="37922e869c0d0ef3d44c18ce307a330edbed4dcc" translate="yes" xml:space="preserve">
          <source>Create a browser window with a sandboxed renderer. With this option enabled, the renderer must communicate via IPC to the main process in order to access node APIs.</source>
          <target state="translated">샌드 박스 렌더러로 브라우저 창을 만듭니다. 이 옵션이 활성화되면 렌더러는 노드 API에 액세스하기 위해 IPC를 통해 기본 프로세스와 통신해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe4ebb1d573251f67e9220f06e26125182317687" translate="yes" xml:space="preserve">
          <source>Create a button in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 바에서 버튼 만들기</target>
        </trans-unit>
        <trans-unit id="b0af32346ca9ab7e7afad6af07b32eff3f0bdb60" translate="yes" xml:space="preserve">
          <source>Create a checklist of the patches. This is useful for tracking your work and for having a quick reference of commit hashes to use in the &lt;code&gt;git diff-tree&lt;/code&gt; step below.</source>
          <target state="translated">패치 점검 목록을 작성하십시오. 이것은 작업을 추적하고 아래 &lt;code&gt;git diff-tree&lt;/code&gt; 단계 에서 사용할 커밋 해시를 빠르게 참조하는 데 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="433c781d2f75af627a58399077f1225797983c5f" translate="yes" xml:space="preserve">
          <source>Create a color picker in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 바에서 색상 선택기 만들기</target>
        </trans-unit>
        <trans-unit id="f976aa116ab2e184219fca41aedcc06fc77bc49b" translate="yes" xml:space="preserve">
          <source>Create a distributable:</source>
          <target state="translated">배포 가능 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f60e2393f69a1a42ed6f6544b747481d4ad72d59" translate="yes" xml:space="preserve">
          <source>Create a folder for your project and install Electron there:</source>
          <target state="translated">프로젝트 폴더를 만들고 거기에 Electron을 설치하세요 :</target>
        </trans-unit>
        <trans-unit id="8fa0c0e51e6d99328069886c67533d5948ac7f6d" translate="yes" xml:space="preserve">
          <source>Create a frameless window</source>
          <target state="translated">프레임리스 창 만들기</target>
        </trans-unit>
        <trans-unit id="8d962c4f2c32cead5abba3459baefbf170ffae1e" translate="yes" xml:space="preserve">
          <source>Create a group in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 바에서 그룹 생성</target>
        </trans-unit>
        <trans-unit id="1dd46ec472b534ed206f73eab8cacfe271baf4e2" translate="yes" xml:space="preserve">
          <source>Create a label in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 막대에서 레이블 생성</target>
        </trans-unit>
        <trans-unit id="5b1e1d31934b00e0a4724d1597f8399cb640aeb9" translate="yes" xml:space="preserve">
          <source>Create a new S3 bucket and create the following empty directory structure:</source>
          <target state="translated">새 S3 버킷을 생성하고 다음과 같은 빈 디렉토리 구조를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="551c90435e65bec7f9f766bf7137006da7ff4c34" translate="yes" xml:space="preserve">
          <source>Create a new copy of the patch:</source>
          <target state="translated">패치의 새 사본을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e012db7f7723ece038e4b378202ec178db68d068" translate="yes" xml:space="preserve">
          <source>Create a new empty folder for your new Electron application. Open up your command line client and run &lt;code&gt;npm init&lt;/code&gt; from that very folder.</source>
          <target state="translated">새 Electron 응용 프로그램을위한 빈 폴더를 새로 만듭니다. 명령 행 클라이언트를 열고 해당 폴더에서 &lt;code&gt;npm init&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ded869f83844a7db352bb5d8a158cc05509a8712" translate="yes" xml:space="preserve">
          <source>Create a popover in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 바에서 팝 오버 생성</target>
        </trans-unit>
        <trans-unit id="fa1603b28873f3d3d2a5f97ef8fab299d09b5681" translate="yes" xml:space="preserve">
          <source>Create a safe, bi-directional, synchronous bridge across isolated contexts</source>
          <target state="translated">격리 된 컨텍스트에서 안전한 양방향 동기식 브리지 생성</target>
        </trans-unit>
        <trans-unit id="5fba9a0fb2af20c1b49ebfeeba791440009fd15c" translate="yes" xml:space="preserve">
          <source>Create a scrubber (a scrollable selector)</source>
          <target state="translated">스크러버 (스크롤 가능 선택기) 만들기</target>
        </trans-unit>
        <trans-unit id="1eef936d5d21c01e555135ef1bcbd1b17c0782ca" translate="yes" xml:space="preserve">
          <source>Create a segmented control (a button group) where one button has a selected state</source>
          <target state="translated">하나의 버튼이 선택된 상태 인 세그먼트 컨트롤 (버튼 그룹)을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="80925e60d1de0a8851dba7b395214a387d76a3b0" translate="yes" xml:space="preserve">
          <source>Create a slider in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램의 터치 막대에서 슬라이더 생성</target>
        </trans-unit>
        <trans-unit id="8f61bd8284faefd2ecd0028162ed2bb8b3bc5774" translate="yes" xml:space="preserve">
          <source>Create a spacer between two items in the touch bar for native macOS applications</source>
          <target state="translated">기본 macOS 응용 프로그램을 위해 터치 막대에서 두 항목 사이에 스페이서를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d3e5bc56e0dfc0c2d797404385d65ff9d7d1fd96" translate="yes" xml:space="preserve">
          <source>Create a web page</source>
          <target state="translated">웹 페이지 만들기</target>
        </trans-unit>
        <trans-unit id="e559e4452f6a39b1c60ddd3ef3a658d342b7a5bd" translate="yes" xml:space="preserve">
          <source>Create and control browser windows.</source>
          <target state="translated">브라우저 창을 만들고 제어합니다.</target>
        </trans-unit>
        <trans-unit id="469d731aba841e62d2a204d7630a748e401bc84e" translate="yes" xml:space="preserve">
          <source>Create and control views.</source>
          <target state="translated">보기를 작성하고 제어하십시오.</target>
        </trans-unit>
        <trans-unit id="f7dd01c23e922bdde732f0ac74e297afc57e8570" translate="yes" xml:space="preserve">
          <source>Create native application menus and context menus.</source>
          <target state="translated">기본 응용 프로그램 메뉴 및 상황에 맞는 메뉴를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="df8e1a6d9ff4a323e8a12a2fdc2ef6236f3d8841" translate="yes" xml:space="preserve">
          <source>Create the main script file</source>
          <target state="translated">기본 스크립트 파일 만들기</target>
        </trans-unit>
        <trans-unit id="bef7010a224f86f4c10c686d4aa908baa7936de6" translate="yes" xml:space="preserve">
          <source>Create tray, dock, and application icons using PNG or JPG files.</source>
          <target state="translated">PNG 또는 JPG 파일을 사용하여 트레이, 독 및 응용 프로그램 아이콘을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="caa1e1d03a166a512c3f49392287f36bc8a63d88" translate="yes" xml:space="preserve">
          <source>Create your project directory and add add the following to &lt;code&gt;snap/snapcraft.yaml&lt;/code&gt;:</source>
          <target state="translated">프로젝트 디렉토리를 만들고 &lt;code&gt;snap/snapcraft.yaml&lt;/code&gt; 에 다음을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="54a65b391edcdfbf9d958963feb6815e991c0b63" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;client-request&quot;&gt;&lt;code&gt;ClientRequest&lt;/code&gt;&lt;/a&gt; instance using the provided &lt;code&gt;options&lt;/code&gt; which are directly forwarded to the &lt;code&gt;ClientRequest&lt;/code&gt; constructor. The &lt;code&gt;net.request&lt;/code&gt; method would be used to issue both secure and insecure HTTP requests according to the specified protocol scheme in the &lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="translated">작성 &lt;a href=&quot;client-request&quot;&gt; &lt;code&gt;ClientRequest&lt;/code&gt; &lt;/a&gt; 제공된 사용 인스턴스 &lt;code&gt;options&lt;/code&gt; 직접 전달된다 &lt;code&gt;ClientRequest&lt;/code&gt; 생성자를. &lt;code&gt;net.request&lt;/code&gt; 방법은 모두 보안을 실행하는 데 안전하지 않은 HTTP 요청하는 지정된 프로토콜 방식에 따라 할 것입니다 &lt;code&gt;options&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="00061f3f43e0aa2fa7f56963fc20c1aa78e69739" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from &lt;code&gt;buffer&lt;/code&gt; that contains the raw bitmap pixel data returned by &lt;code&gt;toBitmap()&lt;/code&gt;. The specific format is platform-dependent.</source>
          <target state="translated">&lt;code&gt;toBitmap()&lt;/code&gt; 반환 한 원시 비트 맵 픽셀 데이터를 포함하는 &lt;code&gt;buffer&lt;/code&gt; 에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 . 특정 형식은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8a09a649b5d23acc370665c46b1364515b2bed6d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="44614712e9c6ca692cd9926df74db7f1f4b183fc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from &lt;code&gt;buffer&lt;/code&gt;. Tries to decode as PNG or JPEG first.</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; 에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 . 먼저 PNG 또는 JPEG로 디코딩을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="21e499a70b67679ecbab62acdf07427eced4ecbf" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from &lt;code&gt;dataURL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NativeImage&lt;/code&gt; 에서 새 NativeImage 인스턴스를 &lt;code&gt;dataURL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9ca9dc5195c0306598d742304941f960b4a927f" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from a file located at &lt;code&gt;path&lt;/code&gt;. This method returns an empty image if the &lt;code&gt;path&lt;/code&gt; does not exist, cannot be read, or is not a valid image.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 에 위치한 파일에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 . 이 메소드는 &lt;code&gt;path&lt;/code&gt; 가 존재하지 않거나 읽을 수 없거나 유효한 이미지가 아닌 경우 빈 이미지를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="78248bd194325b8341db40314d6d5d7ffd4bd978" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from the NSImage that maps to the given image name. See &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/icons-and-images/system-icons/&quot;&gt;&lt;code&gt;System Icons&lt;/code&gt;&lt;/a&gt; for a list of possible values.</source>
          <target state="translated">주어진 이미지 이름에 매핑되는 NSImage에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 . 가능한 값 목록은 &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/icons-and-images/system-icons/&quot;&gt; &lt;code&gt;System Icons&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2576994fb681120cb983fe43351ea7c96ace31b4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;NativeImage&lt;/code&gt; instance from the NSImage that maps to the given image name. See &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsimagename?language=objc&quot;&gt;&lt;code&gt;NSImageName&lt;/code&gt;&lt;/a&gt; for a list of possible values.</source>
          <target state="translated">지정된 이미지 이름에 매핑되는 NSImage에서 새 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 . 가능한 값 목록은 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsimagename?language=objc&quot;&gt; &lt;code&gt;NSImageName&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4974e6b6b03414439e6c15d80ceb3c5f7d837799" translate="yes" xml:space="preserve">
          <source>Creates a new menu.</source>
          <target state="translated">새 메뉴를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="10a84951438285e62930c6d9f3b44141c77ffdc8" translate="yes" xml:space="preserve">
          <source>Creates a new touch bar with the specified items. Use &lt;code&gt;BrowserWindow.setTouchBar&lt;/code&gt; to add the &lt;code&gt;TouchBar&lt;/code&gt; to a window.</source>
          <target state="translated">지정된 항목으로 새로운 터치 바를 만듭니다. &lt;code&gt;BrowserWindow.setTouchBar&lt;/code&gt; 를 사용 하여 &lt;code&gt;TouchBar&lt;/code&gt; 를 창 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="92ba0fef40579a21f0fc00f527e2f9a27fef1b0f" translate="yes" xml:space="preserve">
          <source>Creates a new tray icon associated with the &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 와 관련된 새 트레이 아이콘을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e45ae2ee0f365798ad03103bfa45ea592f30d5c4" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;NSUserActivity&lt;/code&gt; and sets it as the current activity. The activity is eligible for &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; to another device afterward.</source>
          <target state="translated">작성 &lt;code&gt;NSUserActivity&lt;/code&gt; 현재 활성 세트로서 그것. 이 활동은 이후 다른 장치 로 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea714620a03464ed95c34ad47ac46ba1db272b1d" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;NativeImage&lt;/code&gt; instance.</source>
          <target state="translated">빈 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d04bee8bd3def8f84d48f8f80abedf4d7fb7f2b5" translate="yes" xml:space="preserve">
          <source>Creates or updates a shortcut link at &lt;code&gt;shortcutPath&lt;/code&gt;.</source>
          <target state="translated">shortcutPath에서 &lt;code&gt;shortcutPath&lt;/code&gt; 가기 링크를 만들거나 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="79fe7a41fe92a12c515d5ae769cca75068c03dc7" translate="yes" xml:space="preserve">
          <source>Creating a Custom Electron Fork</source>
          <target state="translated">맞춤형 전자 포크 만들기</target>
        </trans-unit>
        <trans-unit id="b1342737a1f1057da83cbfe09534bb392487bc90" translate="yes" xml:space="preserve">
          <source>Creating a Custom Release with surf-build</source>
          <target state="translated">surf-build로 커스텀 릴리즈 만들기</target>
        </trans-unit>
        <trans-unit id="bf6a7df2f66e9e2525e3df2302ec8c1b39496c20" translate="yes" xml:space="preserve">
          <source>Creating a custom fork of Electron is almost certainly not something you will need to do in order to build your app, even for &quot;Production Level&quot; applications. Using a tool such as &lt;code&gt;electron-packager&lt;/code&gt; or &lt;code&gt;electron-forge&lt;/code&gt; will allow you to &quot;Rebrand&quot; Electron without having to do these steps.</source>
          <target state="translated">&quot;Production Level&quot;응용 프로그램의 경우에도 사용자 정의 Electron 포크를 만드는 것은 앱을 빌드하기 위해해야 ​​할 일이 아닙니다. &lt;code&gt;electron-packager&lt;/code&gt; 또는 &lt;code&gt;electron-forge&lt;/code&gt; 와 같은 도구를 사용하면 이러한 단계를 수행하지 않고도 Electron을 &quot;브랜딩&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df08759c9c22154076fe521cd2a65a178eaffe76" translate="yes" xml:space="preserve">
          <source>Creating that directory &lt;a href=&quot;https://stackoverflow.com/a/25095327/102704&quot;&gt;should fix the problem&lt;/a&gt;:</source>
          <target state="translated">해당 디렉토리를 작성 &lt;a href=&quot;https://stackoverflow.com/a/25095327/102704&quot;&gt;하면 문제점을 해결해야합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a74d92a2d19515177ab40ed5a53874f3f40f7fcc" translate="yes" xml:space="preserve">
          <source>Creating your First App</source>
          <target state="translated">첫 번째 앱 만들기</target>
        </trans-unit>
        <trans-unit id="3e5488aa8c4819bd5a17287d41825e63f6213203" translate="yes" xml:space="preserve">
          <source>Croatian</source>
          <target state="translated">Croatian</target>
        </trans-unit>
        <trans-unit id="dbc00a91eff4276f07e3361b175e94d3eb014573" translate="yes" xml:space="preserve">
          <source>Cross compilation</source>
          <target state="translated">크로스 컴파일</target>
        </trans-unit>
        <trans-unit id="2f51c1bbd0b209e6622952896fd4969ea4cdfadf" translate="yes" xml:space="preserve">
          <source>Cross-compiling</source>
          <target state="translated">Cross-compiling</target>
        </trans-unit>
        <trans-unit id="cf9fcd7c35209406b13dc309b70e6a3241fd608c" translate="yes" xml:space="preserve">
          <source>Cryptographic Algorithms Used by Electron</source>
          <target state="translated">전자에 의해 사용되는 암호화 알고리즘</target>
        </trans-unit>
        <trans-unit id="a991b582858d8150f468dc80b2e04ccac3722af1" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;PNG&lt;/code&gt; and &lt;code&gt;JPEG&lt;/code&gt; image formats are supported. &lt;code&gt;PNG&lt;/code&gt; is recommended because of its support for transparency and lossless compression.</source>
          <target state="translated">현재 &lt;code&gt;PNG&lt;/code&gt; 및 &lt;code&gt;JPEG&lt;/code&gt; 이미지 형식이 지원됩니다. 투명성 및 무손실 압축을 지원하므로 &lt;code&gt;PNG&lt;/code&gt; 가 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="65402c387c6803e4f60c9b827ef431253386a279" translate="yes" xml:space="preserve">
          <source>Currently supported versions</source>
          <target state="translated">현재 지원되는 버전</target>
        </trans-unit>
        <trans-unit id="94a9408a1a8c38d77de4a3f3ff6c6d32446018b5" translate="yes" xml:space="preserve">
          <source>Currently the &lt;code&gt;require&lt;/code&gt; function provided in the preload scope exposes the following modules:</source>
          <target state="translated">현재 사전로드 범위에서 제공되는 &lt;code&gt;require&lt;/code&gt; 기능은 다음 모듈을 노출합니다.</target>
        </trans-unit>
        <trans-unit id="e28d1ef609f1ad970cbdc362624a525a238fcd1f" translate="yes" xml:space="preserve">
          <source>Currently, only macOS and Windows are supported. There is no built-in support for auto-updater on Linux, so it is recommended to use the distribution's package manager to update your app.</source>
          <target state="translated">현재는 macOS 및 Windows 만 지원됩니다. Linux에서는 자동 업데이트 프로그램이 기본적으로 지원되지 않으므로 배포판의 패키지 관리자를 사용하여 앱을 업데이트하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7a10ebdca4326a2bfac9a0c7d1d6e90a2220d0a5" translate="yes" xml:space="preserve">
          <source>Custom DOM Elements</source>
          <target state="translated">사용자 정의 DOM 요소</target>
        </trans-unit>
        <trans-unit id="72fecb58cc5ca374bba93c223dc270492b026c4f" translate="yes" xml:space="preserve">
          <source>Custom DOM Elements:</source>
          <target state="translated">맞춤 DOM 요소 :</target>
        </trans-unit>
        <trans-unit id="f2bd2e639969237b066a2c4689ba9567b663910d" translate="yes" xml:space="preserve">
          <source>Custom Dock Menu</source>
          <target state="translated">사용자 정의 도크 메뉴</target>
        </trans-unit>
        <trans-unit id="df37e6995bb5ffda85530a87d3c9673df26812e5" translate="yes" xml:space="preserve">
          <source>Custom Linux Desktop Actions</source>
          <target state="translated">사용자 정의 Linux 데스크탑 조치</target>
        </trans-unit>
        <trans-unit id="7fea9296e1674d35e6d150be3ac3c5395c28336b" translate="yes" xml:space="preserve">
          <source>Custom Linux Desktop Launcher Actions</source>
          <target state="translated">사용자 정의 Linux 데스크탑 실행기 조치</target>
        </trans-unit>
        <trans-unit id="49a094540beeeea9da90c8ab12d8e31b3cd52f7d" translate="yes" xml:space="preserve">
          <source>Custom Mirrors and Caches</source>
          <target state="translated">커스텀 미러 및 캐시</target>
        </trans-unit>
        <trans-unit id="44e31698486b0586a2de9e7a540e32f88aadfec5" translate="yes" xml:space="preserve">
          <source>Custom Windows Taskbar</source>
          <target state="translated">사용자 지정 Windows 작업 표시 줄</target>
        </trans-unit>
        <trans-unit id="f37d572fffa63335f8185a9125ba95b85274a6b5" translate="yes" xml:space="preserve">
          <source>CustomScheme Object</source>
          <target state="translated">CustomScheme 개체</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="30131818250e4221dc08f49d2718fd77af5cb5ae" translate="yes" xml:space="preserve">
          <source>Customize the rendering of the current web page.</source>
          <target state="translated">현재 웹 페이지의 렌더링을 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="eea467c6cfe01f36237780838f0a1cff68eb889d" translate="yes" xml:space="preserve">
          <source>Czech</source>
          <target state="translated">Czech</target>
        </trans-unit>
        <trans-unit id="61b791554bca4b9acbdec7ae20bda29ce9558ec7" translate="yes" xml:space="preserve">
          <source>DES - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips46-3/fips46-3.pdf&quot;&gt;FIPS 46-3&lt;/a&gt;</source>
          <target state="translated">DES- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips46-3/fips46-3.pdf&quot;&gt;FIPS 46-3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b23202f13aac761d359e7184a5aa6a27a3ff8bc" translate="yes" xml:space="preserve">
          <source>DH - &lt;a href=&quot;https://tools.ietf.org/html/rfc2631&quot;&gt;RFC 2631&lt;/a&gt;</source>
          <target state="translated">DH- &lt;a href=&quot;https://tools.ietf.org/html/rfc2631&quot;&gt;RFC 2631&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9f8e0e1ab62d56507241796e4d58bf672523306" translate="yes" xml:space="preserve">
          <source>DMG</source>
          <target state="translated">DMG</target>
        </trans-unit>
        <trans-unit id="3242292ff53d7d5c7cb4a0634c067e76e86d0145" translate="yes" xml:space="preserve">
          <source>DOM Events</source>
          <target state="translated">DOM 이벤트</target>
        </trans-unit>
        <trans-unit id="cb29c4163e70bb9f9347cfa947687af4a96c6721" translate="yes" xml:space="preserve">
          <source>DOM events</source>
          <target state="translated">DOM 이벤트</target>
        </trans-unit>
        <trans-unit id="9be6c91629f39886a3d36e4e231476822fc83fb4" translate="yes" xml:space="preserve">
          <source>DSA - &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ANSI+X9.30-1%3A1997&quot;&gt;ANSI X9.30&lt;/a&gt;</source>
          <target state="translated">DSA- &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ANSI+X9.30-1%3A1997&quot;&gt;ANSI X9.30&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f9f264815f8de2fa0a0e756083fbbf633ed8ba1" translate="yes" xml:space="preserve">
          <source>Danish</source>
          <target state="translated">Danish</target>
        </trans-unit>
        <trans-unit id="e7f8b9dcdb12a0a6d3253383f4b684272906ae03" translate="yes" xml:space="preserve">
          <source>Dark Mode</source>
          <target state="translated">다크 모드</target>
        </trans-unit>
        <trans-unit id="7eac719c08f44e4bdeab75a4eb752cc68ee1f451" translate="yes" xml:space="preserve">
          <source>Debian 8</source>
          <target state="translated">데비안 8</target>
        </trans-unit>
        <trans-unit id="a0862ebc642777446ca2c5877a1853cc939cafdb" translate="yes" xml:space="preserve">
          <source>Debian 8 and newer</source>
          <target state="translated">Debian 8 이상</target>
        </trans-unit>
        <trans-unit id="547702c47537a6317f47c934883f57dd8089f3ab" translate="yes" xml:space="preserve">
          <source>Debug symbols allow you to have better debugging sessions. They have information about the functions contained in executables and dynamic libraries and provide you with information to get clean call stacks. A Symbol Server allows the debugger to load the correct symbols, binaries and sources automatically without forcing users to download large debugging files. The server functions like &lt;a href=&quot;https://support.microsoft.com/kb/311503&quot;&gt;Microsoft's symbol server&lt;/a&gt; so the documentation there can be useful.</source>
          <target state="translated">디버그 기호를 사용하면 더 나은 디버깅 세션을 가질 수 있습니다. 실행 파일 및 동적 라이브러리에 포함 된 기능에 대한 정보가 있으며 깨끗한 콜 스택을 얻는 데 필요한 정보를 제공합니다. 심볼 서버를 사용하면 디버거에서 사용자가 큰 디버깅 파일을 다운로드하지 않아도 올바른 심볼, 이진 및 소스를 자동으로로드 할 수 있습니다. 서버는 &lt;a href=&quot;https://support.microsoft.com/kb/311503&quot;&gt;Microsoft의 심볼 서버&lt;/a&gt; 처럼 작동 하므로 설명서가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3135d26dd60430908e96f90971769197684d8114" translate="yes" xml:space="preserve">
          <source>Debug-related flags, see the &lt;a href=&quot;../tutorial/debugging-main-process&quot;&gt;Debugging the Main Process&lt;/a&gt; guide for details.</source>
          <target state="translated">디버그 관련 플래그 . 자세한 내용 &lt;a href=&quot;../tutorial/debugging-main-process&quot;&gt;은 기본 프로세스 디버깅&lt;/a&gt; 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="518bd43e2174b5358d6b99dc4426f9a89ffa9cb4" translate="yes" xml:space="preserve">
          <source>Debugging Tools for Windows of Windows SDK 10.0.15063.468 if you plan on creating a full distribution since &lt;code&gt;symstore.exe&lt;/code&gt; is used for creating a symbol store from &lt;code&gt;.pdb&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;.pdb&lt;/code&gt; 파일 에서 심볼 저장소를 만드는 데 &lt;code&gt;symstore.exe&lt;/code&gt; 가 사용 되기 때문에 전체 배포를 만들 계획 인 경우 Windows SDK 10.0.15063.468의 Windows 용 디버깅 도구 .</target>
        </trans-unit>
        <trans-unit id="84808753e05fa49222e5c9afa53bdd1ed0c43020" translate="yes" xml:space="preserve">
          <source>Debugging and breakpoints</source>
          <target state="translated">디버깅 및 중단 점</target>
        </trans-unit>
        <trans-unit id="c4cc6d82e6d6ad7ce1bcd58d71611c2b3e958c0c" translate="yes" xml:space="preserve">
          <source>Debugging in VSCode</source>
          <target state="translated">VSCode에서 디버깅</target>
        </trans-unit>
        <trans-unit id="9e6845bced2daa8025a341753c92dc8517b461c0" translate="yes" xml:space="preserve">
          <source>Debugging on Windows</source>
          <target state="translated">Windows에서 디버깅</target>
        </trans-unit>
        <trans-unit id="cfdd14067a4ebfc5999914acf2c6d1edd08020c3" translate="yes" xml:space="preserve">
          <source>Debugging on macOS</source>
          <target state="translated">macOS에서 디버깅</target>
        </trans-unit>
        <trans-unit id="6564474cfbebb95bfd943f48a3b32e018b875d6d" translate="yes" xml:space="preserve">
          <source>Debugging the Main Process</source>
          <target state="translated">메인 프로세스 디버깅</target>
        </trans-unit>
        <trans-unit id="7f3bc8a98adbad0709007dcf163780f7196d6c08" translate="yes" xml:space="preserve">
          <source>Debugging the Main Process in VSCode</source>
          <target state="translated">VSCode에서 주요 프로세스 디버깅</target>
        </trans-unit>
        <trans-unit id="3735f5610e94babbf0362b7baa8bd7d706415e57" translate="yes" xml:space="preserve">
          <source>Debugging the main process is a bit trickier, since you cannot open developer tools for them. The Chromium Developer Tools can &lt;a href=&quot;https://nodejs.org/en/docs/inspector/&quot;&gt;be used to debug Electron's main process&lt;/a&gt; thanks to a closer collaboration between Google / Chrome and Node.js, but you might encounter oddities like &lt;code&gt;require&lt;/code&gt; not being present in the console.</source>
          <target state="translated">메인 프로세스 디버깅은 개발자 도구를 열 수 없기 때문에 조금 까다 롭습니다. Google / Chrome과 Node.js 간의 긴밀한 협력 덕분에 Chromium 개발자 도구를 &lt;a href=&quot;https://nodejs.org/en/docs/inspector/&quot;&gt;사용하여 Electron의 주요 프로세스를 디버깅&lt;/a&gt; 할 수 있지만 콘솔에 &lt;code&gt;require&lt;/code&gt; 하지 않은 등의 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f54729d3d8eb7760274d4a2ab14f550eb3d0f033" translate="yes" xml:space="preserve">
          <source>Debugging with Visual Studio Code</source>
          <target state="translated">Visual Studio Code로 디버깅</target>
        </trans-unit>
        <trans-unit id="c10ad3351dda8157e8d5db746abb91127cc39174" translate="yes" xml:space="preserve">
          <source>Debugging with XCode</source>
          <target state="translated">XCode로 디버깅</target>
        </trans-unit>
        <trans-unit id="65684c162d4d11f6d57b4d791465ca3886b2bd77" translate="yes" xml:space="preserve">
          <source>Decrease the capturer count by one. The page will be set to hidden or occluded state when its browser window is hidden or occluded and the capturer count reaches zero. If you want to decrease the hidden capturer count instead you should set &lt;code&gt;stayHidden&lt;/code&gt; to true.</source>
          <target state="translated">포획 자 수를 하나씩 줄입니다. 페이지는 브라우저 창이 숨겨 지거나 가려지고 캡처 프로그램 수가 0에 도달하면 숨겨 지거나 가려진 상태로 설정됩니다. 숨겨진 캡처 러 수를 줄이려면 &lt;code&gt;stayHidden&lt;/code&gt; 을 true로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8fd90139c346c884ce692fdf5366b9032bb9464c" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;text&lt;/code&gt;</source>
          <target state="translated">기본 &lt;code&gt;text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="131adb8d6ca46baa28a2337b935b9a3bb2f81d50" translate="yes" xml:space="preserve">
          <source>Default is 'low' - see &lt;a href=&quot;https://developer.gnome.org/notification-spec/#urgency-levels&quot;&gt;NotifyUrgency&lt;/a&gt; for more information.</source>
          <target state="translated">기본값은 '낮음' 입니다. 자세한 내용 은 &lt;a href=&quot;https://developer.gnome.org/notification-spec/#urgency-levels&quot;&gt;NotifyUrgency&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="18fcdf655b23ae28fb4ad1a30b0ecfb1aa0b5184" translate="yes" xml:space="preserve">
          <source>Define keyboard shortcuts.</source>
          <target state="translated">키보드 단축키를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="dea5c7901d70aa10c5fccd94f9ed51eead452045" translate="yes" xml:space="preserve">
          <source>Delete each patchfile referenced in &lt;code&gt;patches/v8/README.md&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;patches/v8/README.md&lt;/code&gt; 에서 참조 된 각 패치 파일을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="2316e3190c5022d3fccfcf81eab63eae40e0a5a4" translate="yes" xml:space="preserve">
          <source>Depending on the countries in which you are releasing your app, you may be required to provide information on the cryptographic algorithms used in your software. See the &lt;a href=&quot;https://help.apple.com/app-store-connect/#/devc3f64248f&quot;&gt;encryption export compliance docs&lt;/a&gt; for more information.</source>
          <target state="translated">앱을 출시하는 국가에 따라 소프트웨어에 사용 된 암호화 알고리즘에 대한 정보를 제공해야 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://help.apple.com/app-store-connect/#/devc3f64248f&quot;&gt;암호화 내보내기 규정 준수 문서&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="148738e22cdf2cfc7b2dca9ce56eb1b40e6e513d" translate="yes" xml:space="preserve">
          <source>Depending on the country and region you are located, Mac App Store may require documenting the cryptographic algorithms used in your app, and even ask you to submit a copy of U.S. Encryption Registration (ERN) approval.</source>
          <target state="translated">거주하는 국가 및 지역에 따라 Mac App Store는 앱에 사용 된 암호화 알고리즘을 문서화해야 할뿐만 아니라 미국 암호화 등록 (ERN) 승인 사본을 제출하도록 요청할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f67d344af6f6b7479bf397a1bc5f37a234352d9" translate="yes" xml:space="preserve">
          <source>Depending on which Electron APIs your app uses, you may need to add additional entitlements to your &lt;code&gt;parent.plist&lt;/code&gt; file to be able to use these APIs from your app's Mac App Store build.</source>
          <target state="translated">앱에서 사용하는 Electron API에 따라 앱의 Mac App Store 빌드에서 이러한 API를 사용할 수 있도록 &lt;code&gt;parent.plist&lt;/code&gt; 파일에 추가 권한을 추가해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3c5d4bba02c80177a13673d465eb0ac8fd6c2b8" translate="yes" xml:space="preserve">
          <source>Depending on your needs, you can choose from one of these:</source>
          <target state="translated">필요에 따라 다음 중 하나를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a592db6b34c70c5c67524d9a9c1554918172e03" translate="yes" xml:space="preserve">
          <source>Deploying an Update Server</source>
          <target state="translated">업데이트 서버 배포</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="dc1df942aecd798d2c336ab8f5c6c66794104817" translate="yes" xml:space="preserve">
          <source>Desktop Environment Integration</source>
          <target state="translated">데스크탑 환경 통합</target>
        </trans-unit>
        <trans-unit id="35c5e270e9078186323b71869f87825624d060c0" translate="yes" xml:space="preserve">
          <source>DesktopCapturerSource</source>
          <target state="translated">DesktopCapturerSource</target>
        </trans-unit>
        <trans-unit id="fcbc257c1765d7a5162d73e48c1c16e84050cdb8" translate="yes" xml:space="preserve">
          <source>DesktopCapturerSource Object</source>
          <target state="translated">DesktopCapturerSource 객체</target>
        </trans-unit>
        <trans-unit id="d735df75c7982f96fbb0c48911942f2aaba004c0" translate="yes" xml:space="preserve">
          <source>Destroys the tray icon immediately.</source>
          <target state="translated">트레이 아이콘을 즉시 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="e5a09cb2f1e09842b931372280afa8887a996f6d" translate="yes" xml:space="preserve">
          <source>Destructuring assignment</source>
          <target state="translated">할당 해체</target>
        </trans-unit>
        <trans-unit id="fc7dc07684f6588bba124066301b3dbd41372484" translate="yes" xml:space="preserve">
          <source>Detaches the debugger from the &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents&lt;/code&gt; 에서 디버거를 분리합니다 .</target>
        </trans-unit>
        <trans-unit id="2c420c710d7d9c79c6626de276fdf045a57b275b" translate="yes" xml:space="preserve">
          <source>Detailed Tutorials</source>
          <target state="translated">자세한 튜토리얼</target>
        </trans-unit>
        <trans-unit id="1b89231d448d4a28ed8a2812837addd867bb4dc8" translate="yes" xml:space="preserve">
          <source>Detect keyboard events when the application does not have keyboard focus.</source>
          <target state="translated">응용 프로그램에 키보드 포커스가 없을 때 키보드 이벤트를 감지합니다.</target>
        </trans-unit>
        <trans-unit id="5eb15a6bbb3ad73f11edef63cdd6a5cb07462a90" translate="yes" xml:space="preserve">
          <source>Determine which branch to release from</source>
          <target state="translated">어느 지점에서 해제할지 결정</target>
        </trans-unit>
        <trans-unit id="8194a72172b9b2582b13e77e19c705ddcaf13c30" translate="yes" xml:space="preserve">
          <source>DevTools Extension</source>
          <target state="translated">DevTools 확장</target>
        </trans-unit>
        <trans-unit id="1a0ec42394f6b7e29701e2c7a88d2b74e29f2406" translate="yes" xml:space="preserve">
          <source>Developer Environment</source>
          <target state="translated">개발자 환경</target>
        </trans-unit>
        <trans-unit id="481cbf3e3f6a3fb3dcba891b306a9a1a72e6fb70" translate="yes" xml:space="preserve">
          <source>Developers want to know which releases are &lt;em&gt;safe&lt;/em&gt; to use. Even seemingly innocent features can introduce regressions in complex applications. At the same time, locking to a fixed version is dangerous because you&amp;rsquo;re ignoring security patches and bug fixes that may have come out since your version. Our goal is to allow the following standard semver ranges in &lt;code&gt;package.json&lt;/code&gt; :</source>
          <target state="translated">개발자는 어떤 릴리스가 사용하기에 &lt;em&gt;안전한지&lt;/em&gt; 알고 싶어 합니다. 무해한 것처럼 보이는 기능조차도 복잡한 응용 프로그램에서 회귀를 유발할 수 있습니다. 동시에, 버전 이후에 나올 수있는 보안 패치 및 버그 수정을 무시하기 때문에 고정 버전에 대한 잠금은 위험합니다. 우리의 목표는 &lt;code&gt;package.json&lt;/code&gt; 에서 다음과 같은 표준 semver 범위를 허용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="4c5fcbd655fcd63226b97557ae5764d13630f836" translate="yes" xml:space="preserve">
          <source>Developing Electron</source>
          <target state="translated">전자 개발</target>
        </trans-unit>
        <trans-unit id="ee0f120089f2684eecf41b78f9587015c03e7023" translate="yes" xml:space="preserve">
          <source>Developing an application with Electron is like building a Node.js app with a web interface or building web pages with seamless Node.js integration.</source>
          <target state="translated">Electron으로 애플리케이션을 개발하는 것은 웹 인터페이스로 Node.js 앱을 빌드하거나 매끄러운 Node.js 통합으로 웹 페이지를 빌드하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="c9577eb90cd4d933875c4089aeef7c11c0004910" translate="yes" xml:space="preserve">
          <source>Development Calendar and Release Info</source>
          <target state="translated">개발 일정 및 출시 정보</target>
        </trans-unit>
        <trans-unit id="f1bcbc04a3bfa564843752940553abd579483caf" translate="yes" xml:space="preserve">
          <source>Development Variables</source>
          <target state="translated">개발 변수</target>
        </trans-unit>
        <trans-unit id="402bfe112398e6a868afba13796f862526a5d3a1" translate="yes" xml:space="preserve">
          <source>Development headers of GTK 3 and libnotify.</source>
          <target state="translated">GTK 3 및 libnotify의 개발 헤더.</target>
        </trans-unit>
        <trans-unit id="3ec8deae7921596d73f5ee9c4c22b81964ff6f69" translate="yes" xml:space="preserve">
          <source>Development headers of GTK+ and libnotify.</source>
          <target state="translated">GTK + 및 libnotify의 개발 헤더.</target>
        </trans-unit>
        <trans-unit id="9ee2984745165832bb20bf609de94c6d71935c08" translate="yes" xml:space="preserve">
          <source>Devtron</source>
          <target state="translated">Devtron</target>
        </trans-unit>
        <trans-unit id="e7959279a46f94c9843dd1b715c680d6184ed1fe" translate="yes" xml:space="preserve">
          <source>Differences Between Main Process and Renderer Process</source>
          <target state="translated">메인 프로세스와 렌더러 프로세스의 차이점</target>
        </trans-unit>
        <trans-unit id="e8eef52a3b092db96f82e89e40e59c1094157cae" translate="yes" xml:space="preserve">
          <source>Different operating systems provide different features for integrating desktop applications into their desktop environments. For example, on Windows, applications can put shortcuts in the JumpList of task bar, and on Mac, applications can put a custom menu in the dock menu.</source>
          <target state="translated">운영 체제마다 데스크톱 응용 프로그램을 데스크톱 환경에 통합하기위한 다양한 기능을 제공합니다. 예를 들어, Windows에서 응용 프로그램은 작업 표시 줄의 JumpList에 바로 가기를 넣을 수 있고 Mac에서는 응용 프로그램이 독 메뉴에 사용자 정의 메뉴를 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9872e7a28a55971d4f8734dba8e0fbed45c0cf0" translate="yes" xml:space="preserve">
          <source>Different versions of the SDK can be installed side by side. To install the SDK, open Visual Studio Installer, select &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Individual Components&lt;/code&gt;, scroll down and select the appropriate Windows SDK to install. Another option would be to look at the &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive&quot;&gt;Windows SDK and emulator archive&lt;/a&gt; and download the standalone version of the SDK respectively.</source>
          <target state="translated">다양한 버전의 SDK를 나란히 설치할 수 있습니다. SDK를 설치하려면 Visual Studio 설치 관리자를 열고 &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Individual Components&lt;/code&gt; 선택한 다음 아래로 스크롤하여 설치할 적절한 Windows SDK를 선택합니다. 또 다른 옵션은 &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/sdk-archive&quot;&gt;Windows SDK 및 에뮬레이터 아카이브&lt;/a&gt; 를 살펴보고 SDK 의 독립 실행 형 버전을 각각 다운로드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5b199907f914319ee8e1fcee27f1c4c186acb40d" translate="yes" xml:space="preserve">
          <source>Disable HTTP/2 and SPDY/3.1 protocols.</source>
          <target state="translated">HTTP / 2 및 SPDY / 3.1 프로토콜을 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="f9aa9879760f9ec1d3a2b5dd4fec4dbc850745f4" translate="yes" xml:space="preserve">
          <source>Disable all Electron features, fix the build, then enable them one by one</source>
          <target state="translated">모든 Electron 기능을 비활성화하고 빌드를 수정 한 다음 하나씩 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6ec5d9732bdc500e6d5519c1673d1b415b002be6" translate="yes" xml:space="preserve">
          <source>Disable device emulation enabled by &lt;code&gt;webContents.enableDeviceEmulation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.enableDeviceEmulation&lt;/code&gt; 에 의해 활성화 된 장치 에뮬레이션을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="05869a488e632801610e42aa1802c07929b55e37" translate="yes" xml:space="preserve">
          <source>Disable or enable the window.</source>
          <target state="translated">창을 비활성화하거나 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="96edd57f269b5561d4b4a1fd8d316017f58b3772" translate="yes" xml:space="preserve">
          <source>Disable or limit creation of new windows</source>
          <target state="translated">새 창 생성 비활성화 또는 제한</target>
        </trans-unit>
        <trans-unit id="f7b414b5407077ff40b4b2da665de8e081beee39" translate="yes" xml:space="preserve">
          <source>Disable or limit navigation</source>
          <target state="translated">탐색 비활성화 또는 제한</target>
        </trans-unit>
        <trans-unit id="c662af31edd4019703aa110305a77419adc57a27" translate="yes" xml:space="preserve">
          <source>Disable the &lt;code&gt;remote&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈 비활성화</target>
        </trans-unit>
        <trans-unit id="58a595cc26ae36780053388095758233e36cc918" translate="yes" xml:space="preserve">
          <source>Disable the Node.js integration in all renderers that display remote content</source>
          <target state="translated">원격 컨텐츠를 표시하는 모든 렌더러에서 Node.js 통합 사용 안함</target>
        </trans-unit>
        <trans-unit id="e82edf51b95a24f90584e2a8ae8a5dd5bfdba792" translate="yes" xml:space="preserve">
          <source>Disables ASAR support. This variable is only supported in forked child processes and spawned child processes that set &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt;.</source>
          <target state="translated">ASAR 지원을 비활성화합니다. 이 변수는 분기 하위 프로세스 및 &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt; 를 설정 한 하위 프로세스 생성에서만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="48190ceed69380ac3e4712d442c99d52c604a820" translate="yes" xml:space="preserve">
          <source>Disables any network emulation already active for the &lt;code&gt;session&lt;/code&gt;. Resets to the original network configuration.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 대해 이미 활성화 된 네트워크 에뮬레이션을 비활성화합니다 . 원래 네트워크 구성으로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="4e231a60cb484c38e37664c9b721b2fb267d9444" translate="yes" xml:space="preserve">
          <source>Disables hardware acceleration for current app.</source>
          <target state="translated">현재 앱의 하드웨어 가속을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="cc6bba733c394065a17bdd78d0d57be4eaafe66c" translate="yes" xml:space="preserve">
          <source>Disables the disk cache for HTTP requests.</source>
          <target state="translated">HTTP 요청에 대한 디스크 캐시를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="228251dc98359fc7c81bb5b3b38bb910a10dfdfa" translate="yes" xml:space="preserve">
          <source>Disabling &lt;code&gt;webSecurity&lt;/code&gt; will disable the same-origin policy and set &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;. In other words, it allows the execution of insecure code from different domains.</source>
          <target state="translated">비활성화 &lt;code&gt;webSecurity&lt;/code&gt; 은 동일 출처 정책과 설정이 비활성화됩니다 &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; 의 에 특성 &lt;code&gt;true&lt;/code&gt; . 즉, 다른 도메인에서 안전하지 않은 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="259bc50625fe551d1462d6ef817cec5d5a541d70" translate="yes" xml:space="preserve">
          <source>Disabling the &lt;code&gt;remote&lt;/code&gt; module eliminates these attack vectors. Enabling context isolation also prevents the &quot;prototype pollution&quot; attacks from succeeding.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈을 비활성화 하면 이러한 공격 벡터가 제거됩니다. 컨텍스트 격리를 활성화하면 &quot;프로토 타입 오염&quot;공격이 성공하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="d8c2633bc0e8588ad18b65365dd11619afd0f122" translate="yes" xml:space="preserve">
          <source>Discussion Groups</source>
          <target state="translated">토론 그룹</target>
        </trans-unit>
        <trans-unit id="250a801da3d4c8a1418bfa65a3597f876751f166" translate="yes" xml:space="preserve">
          <source>Dismisses the notification.</source>
          <target state="translated">알림을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="574ff9b0c49cdeb5f5508548ae0cab44fecee038" translate="yes" xml:space="preserve">
          <source>Display</source>
          <target state="translated">Display</target>
        </trans-unit>
        <trans-unit id="cfd98c8d39f48c6b35b2453c76ee2f354837d97e" translate="yes" xml:space="preserve">
          <source>Display Object</source>
          <target state="translated">표시 객체</target>
        </trans-unit>
        <trans-unit id="8017b7ed6a32311e10b2d7cac2bdf7cc4c7ba42b" translate="yes" xml:space="preserve">
          <source>Display external web content in an isolated frame and process.</source>
          <target state="translated">격리 된 프레임과 프로세스로 외부 웹 컨텐츠를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a8128958e0c6f54c0e0d26cef57cb98d56f3b3ef" translate="yes" xml:space="preserve">
          <source>Display native system dialogs for opening and saving files, alerting, etc.</source>
          <target state="translated">파일 열기 및 저장, 경고 등을위한 기본 시스템 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5c6b7fd3a1775a96dc31629706e15065296aab76" translate="yes" xml:space="preserve">
          <source>Displays a modal dialog that shows an error message.</source>
          <target state="translated">오류 메시지를 표시하는 모달 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="353ac05f550c86546aa0822fa84a52d0a37116ca" translate="yes" xml:space="preserve">
          <source>Displays a tray balloon.</source>
          <target state="translated">트레이 벌룬을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="7d7741d64a8c11c7b821bb986e51c48fe194d958" translate="yes" xml:space="preserve">
          <source>Do not disable &lt;code&gt;webSecurity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;webSecurity&lt;/code&gt; 를 비활성화하지 마십시오</target>
        </trans-unit>
        <trans-unit id="f9542697abecbef5a3d9c244e1c1ff8cc70608d4" translate="yes" xml:space="preserve">
          <source>Do not disable &lt;code&gt;webSecurity&lt;/code&gt; in production applications.</source>
          <target state="translated">프로덕션 응용 프로그램에서 &lt;code&gt;webSecurity&lt;/code&gt; 를 비활성화하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="c5b6dfb10c2c592db65835074500d9f520cf5752" translate="yes" xml:space="preserve">
          <source>Do not disturb / Session State</source>
          <target state="translated">방해하지 않음 / 세션 상태</target>
        </trans-unit>
        <trans-unit id="1a14997420e0bf54a00e6418d9be7c8661b3dc1c" translate="yes" xml:space="preserve">
          <source>Do not enable experimental features</source>
          <target state="translated">실험 기능을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="006ee77a5491917acb1dcc4498743d79ec2d77cb" translate="yes" xml:space="preserve">
          <source>Do not set &lt;code&gt;allowRunningInsecureContent&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;allowRunningInsecureContent&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하지 마십시오</target>
        </trans-unit>
        <trans-unit id="f5d3de6933d722aea427da87114cbcac8fe60fbd" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;enableBlinkFeatures&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enableBlinkFeatures&lt;/code&gt; 를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="20d094845f3fe5e04a37b7e2c58d1bbf70f0486d" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;openExternal&lt;/code&gt; with untrusted content</source>
          <target state="translated">신뢰할 수없는 콘텐츠에 &lt;code&gt;openExternal&lt;/code&gt; 을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e8b5cbf904f4020506bd6be6ad1f6d0c881f48fb" translate="yes" xml:space="preserve">
          <source>Dock</source>
          <target state="translated">Dock</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="342146116ce3f22e586e71f32d23c7567221fc1c" translate="yes" xml:space="preserve">
          <source>Documentation Styleguide</source>
          <target state="translated">문서 스타일 가이드</target>
        </trans-unit>
        <trans-unit id="f555af5990c1409452a2f04ab98243decb579a14" translate="yes" xml:space="preserve">
          <source>Documentation in node about how &lt;a href=&quot;https://nodejs.org/api/v8.html&quot;&gt;they work with V8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/v8.html&quot;&gt;V8에서의 작동&lt;/a&gt; 방식에 대한 노드의 문서</target>
        </trans-unit>
        <trans-unit id="130a0f2902d36fd2f5b2d750f3d2e2e9c9fbdf8b" translate="yes" xml:space="preserve">
          <source>Don't attach to the current console session.</source>
          <target state="translated">현재 콘솔 세션에 연결하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="2b366e18cb8a3487ff7ca39d8b9d4fcd824251ff" translate="yes" xml:space="preserve">
          <source>Don't forget to call the &lt;code&gt;flashFrame&lt;/code&gt; method with &lt;code&gt;false&lt;/code&gt; to turn off the flash. In the above example, it is called when the window comes into focus, but you might use a timeout or some other event to disable it.</source>
          <target state="translated">플래시를 끄 려면 &lt;code&gt;flashFrame&lt;/code&gt; 메서드를 &lt;code&gt;false&lt;/code&gt; 로 호출하는 것을 잊지 마십시오 . 위의 예제에서는 창에 포커스가있을 때 호출되지만 시간 초과 또는 다른 이벤트를 사용하여 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9cbceb2b3b0ab78e91a680c05a7a17387db6ead" translate="yes" xml:space="preserve">
          <source>Don't use a proxy server and always make direct connections. Overrides any other proxy server flags that are passed.</source>
          <target state="translated">프록시 서버를 사용하지 말고 항상 직접 연결하십시오. 전달 된 다른 프록시 서버 플래그를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="94c844e50eaf3271d2c34bfc3de14dfef12ae716" translate="yes" xml:space="preserve">
          <source>Don't use the global menu bar on Linux.</source>
          <target state="translated">Linux에서는 전역 메뉴 표시 줄을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="938464c80fd414297f2b489a8bd645f0c04b5dc1" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;Xcode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;Xcode&lt;/a&gt; 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="fb52f5915a32f0e9546a852b4fe1aa32b857aa62" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;Xcode&lt;/a&gt; - this requires a computer running macOS</source>
          <target state="translated">&lt;a href=&quot;https://developer.apple.com/xcode&quot;&gt;Xcode&lt;/a&gt; 다운로드 및 설치 -macOS를 실행하는 컴퓨터가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d311bba43e366f35ff34614a56812765ac28cfd6" translate="yes" xml:space="preserve">
          <source>DownloadItem</source>
          <target state="translated">DownloadItem</target>
        </trans-unit>
        <trans-unit id="8bba0c5012f7c19db59f253a4cd1bc349ad5d04f" translate="yes" xml:space="preserve">
          <source>Draggable region</source>
          <target state="translated">드래그 가능한 영역</target>
        </trans-unit>
        <trans-unit id="a3e810ceb92d9b29ec6426d89e017829bd537c6d" translate="yes" xml:space="preserve">
          <source>Dragging files out of the window</source>
          <target state="translated">창 밖으로 파일 드래그</target>
        </trans-unit>
        <trans-unit id="5c0473621d8e9fb30c4ed8f33c4949106c5c4029" translate="yes" xml:space="preserve">
          <source>Due to the Node.js integration of Electron, there are some extra symbols inserted into the DOM like &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;. This causes problems for some libraries since they want to insert the symbols with the same names.</source>
          <target state="translated">Electron의 Node.js 통합으로 인해 &lt;code&gt;module&lt;/code&gt; , &lt;code&gt;exports&lt;/code&gt; , &lt;code&gt;require&lt;/code&gt; 와 같은 DOM에 삽입되는 몇 가지 추가 기호 가 있습니다. 이름이 같은 심볼을 삽입하려고하기 때문에 일부 라이브러리에서는 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="52cc5ff769369c4509ccdce076332da39f35374b" translate="yes" xml:space="preserve">
          <source>Due to the system access privileges of the main process, functionality provided by the main process modules may be dangerous in the hands of malicious code running in a compromised renderer process. By limiting the set of accessible modules to the minimum that your app needs and filtering out the others, you reduce the toolset that malicious code can use to attack the system.</source>
          <target state="translated">주 프로세스의 시스템 액세스 권한으로 인해 주 프로세스 모듈에서 제공하는 기능은 손상된 렌더러 프로세스에서 실행되는 악성 코드의 손에 위험 할 수 있습니다. 액세스 가능한 모듈 집합을 앱에 필요한 최소한으로 제한하고 다른 모듈을 필터링하면 악성 코드가 시스템을 공격하는 데 사용할 수있는 도구 집합을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b74f4ea4fd5a715832b955b72f2986a8562e93e9" translate="yes" xml:space="preserve">
          <source>Duplicates of &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;authorization&lt;/code&gt;, &lt;code&gt;content-length&lt;/code&gt;, &lt;code&gt;content-type&lt;/code&gt;, &lt;code&gt;etag&lt;/code&gt;, &lt;code&gt;expires&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;if-modified-since&lt;/code&gt;, &lt;code&gt;if-unmodified-since&lt;/code&gt;, &lt;code&gt;last-modified&lt;/code&gt;, &lt;code&gt;location&lt;/code&gt;, &lt;code&gt;max-forwards&lt;/code&gt;, &lt;code&gt;proxy-authorization&lt;/code&gt;, &lt;code&gt;referer&lt;/code&gt;, &lt;code&gt;retry-after&lt;/code&gt;, &lt;code&gt;server&lt;/code&gt;, or &lt;code&gt;user-agent&lt;/code&gt; are discarded.</source>
          <target state="translated">의 중복 &lt;code&gt;age&lt;/code&gt; , &lt;code&gt;authorization&lt;/code&gt; , &lt;code&gt;content-length&lt;/code&gt; , &lt;code&gt;content-type&lt;/code&gt; , &lt;code&gt;etag&lt;/code&gt; , &lt;code&gt;expires&lt;/code&gt; , &lt;code&gt;from&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;if-modified-since&lt;/code&gt; , &lt;code&gt;if-unmodified-since&lt;/code&gt; , &lt;code&gt;last-modified&lt;/code&gt; , &lt;code&gt;location&lt;/code&gt; , &lt;code&gt;max-forwards&lt;/code&gt; , &lt;code&gt;proxy-authorization&lt;/code&gt; , &lt;code&gt;referer&lt;/code&gt; , &lt;code&gt;retry-after&lt;/code&gt; , &lt;code&gt;server&lt;/code&gt; 또는 &lt;code&gt;user-agent&lt;/code&gt; 는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="fef3086211183b5bb0d71431a1ab5d3794c6a1a2" translate="yes" xml:space="preserve">
          <source>During installation, the &lt;code&gt;electron&lt;/code&gt; module will call out to &lt;a href=&quot;https://github.com/electron-userland/electron-download&quot;&gt;&lt;code&gt;electron-download&lt;/code&gt;&lt;/a&gt; to download prebuilt binaries of Electron for your platform. It will do so by contacting GitHub's release download page (&lt;code&gt;https://github.com/electron/electron/releases/tag/v$VERSION&lt;/code&gt;, where &lt;code&gt;$VERSION&lt;/code&gt; is the exact version of Electron).</source>
          <target state="translated">설치하는 동안 &lt;code&gt;electron&lt;/code&gt; 모듈은 &lt;a href=&quot;https://github.com/electron-userland/electron-download&quot;&gt; &lt;code&gt;electron-download&lt;/code&gt; &lt;/a&gt; 를 호출 하여 플랫폼에 맞게 사전 빌드 된 Electron 바이너리를 다운로드합니다. GitHub의 릴리스 다운로드 페이지 ( &lt;code&gt;https://github.com/electron/electron/releases/tag/v$VERSION&lt;/code&gt; 에서 &lt;code&gt;$VERSION&lt;/code&gt; 은 Electron의 정확한 버전 임) 에 문의하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e521f459532837f8bb7c65705b5ca8f4a1a8a12" translate="yes" xml:space="preserve">
          <source>During installation, the &lt;code&gt;electron&lt;/code&gt; module will call out to &lt;a href=&quot;https://github.com/electron/get&quot;&gt;&lt;code&gt;@electron/get&lt;/code&gt;&lt;/a&gt; to download prebuilt binaries of Electron for your platform. It will do so by contacting GitHub's release download page (&lt;code&gt;https://github.com/electron/electron/releases/tag/v$VERSION&lt;/code&gt;, where &lt;code&gt;$VERSION&lt;/code&gt; is the exact version of Electron).</source>
          <target state="translated">설치하는 동안 &lt;code&gt;electron&lt;/code&gt; 모듈은 &lt;a href=&quot;https://github.com/electron/get&quot;&gt; &lt;code&gt;@electron/get&lt;/code&gt; &lt;/a&gt; 을 호출 하여 플랫폼에 맞게 미리 빌드 된 Electron 바이너리를 다운로드합니다. GitHub의 릴리스 다운로드 페이지 ( &lt;code&gt;https://github.com/electron/electron/releases/tag/v$VERSION&lt;/code&gt; , 여기서 &lt;code&gt;$VERSION&lt;/code&gt; 은 Electron의 정확한 버전 임) 에 문의하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="334a85f1b16e32b6ba9a69313c6f584edef482cc" translate="yes" xml:space="preserve">
          <source>Dutch</source>
          <target state="translated">Dutch</target>
        </trans-unit>
        <trans-unit id="a5fd35fdee9c56133d5ee8ab4304e3414fc6ea33" translate="yes" xml:space="preserve">
          <source>Dynamically sets whether to always send credentials for HTTP NTLM or Negotiate authentication.</source>
          <target state="translated">HTTP NTLM 또는 협상 인증에 대한 자격 증명을 항상 보낼지 여부를 동적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9924516fce7ccdc8c4142c4280e0de24df4d8a6c" translate="yes" xml:space="preserve">
          <source>E.g electron, libcc, and node</source>
          <target state="translated">예 : 전자, libcc 및 노드</target>
        </trans-unit>
        <trans-unit id="c35b5d2af4b1ebe866845299993507b9642f37fa" translate="yes" xml:space="preserve">
          <source>EC - &lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC 1&lt;/a&gt;</source>
          <target state="translated">EC- &lt;a href=&quot;http://www.secg.org/sec1-v2.pdf&quot;&gt;SEC 1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e8e9fc116768c63e6afc3d6fc3d093d3da69fa3" translate="yes" xml:space="preserve">
          <source>EC - &lt;a href=&quot;https://www.secg.org/sec1-v2.pdf&quot;&gt;SEC 1&lt;/a&gt;</source>
          <target state="translated">EC- &lt;a href=&quot;https://www.secg.org/sec1-v2.pdf&quot;&gt;SEC 1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7df0fd998491de86dfb67a189abeb714b474c02a" translate="yes" xml:space="preserve">
          <source>ECDH - ANS X9.63&amp;ndash;2001</source>
          <target state="translated">ECDH-ANS X9.63&amp;ndash;2001</target>
        </trans-unit>
        <trans-unit id="301aedc023bd2376f22a82fc5e367330a84ad453" translate="yes" xml:space="preserve">
          <source>ECDSA - ANS X9.62&amp;ndash;2005</source>
          <target state="translated">ECDSA-ANS X9.62&amp;ndash;2005</target>
        </trans-unit>
        <trans-unit id="65148afe10f0d41bb769b0493403885e6dd33b40" translate="yes" xml:space="preserve">
          <source>ELECTRON_DEFAULT_ERROR_MODE</source>
          <target state="translated">ELECTRON_DEFAULT_ERROR_MODE</target>
        </trans-unit>
        <trans-unit id="999bf39a1308a25d073816dbfc57fed31d66cd49" translate="yes" xml:space="preserve">
          <source>ELECTRON_ENABLE_LOGGING</source>
          <target state="translated">ELECTRON_ENABLE_LOGGING</target>
        </trans-unit>
        <trans-unit id="b00a52548eff78293070a183b820492bd6b95dbe" translate="yes" xml:space="preserve">
          <source>ELECTRON_ENABLE_STACK_DUMPING</source>
          <target state="translated">ELECTRON_ENABLE_STACK_DUMPING</target>
        </trans-unit>
        <trans-unit id="a01b762ed3895bc57de85f32f198e21fc0b02a2c" translate="yes" xml:space="preserve">
          <source>ELECTRON_FORCE_WINDOW_MENU_BAR</source>
          <target state="translated">ELECTRON_FORCE_WINDOW_MENU_BAR</target>
        </trans-unit>
        <trans-unit id="a52fa0c4767c459bf981d405daa51d3c0c6d2a24" translate="yes" xml:space="preserve">
          <source>ELECTRON_LOG_ASAR_READS</source>
          <target state="translated">ELECTRON_LOG_ASAR_READS</target>
        </trans-unit>
        <trans-unit id="1f7baf227b56eb9e28b93a33c6c694b7bec54b4d" translate="yes" xml:space="preserve">
          <source>ELECTRON_NO_ASAR</source>
          <target state="translated">ELECTRON_NO_ASAR</target>
        </trans-unit>
        <trans-unit id="8315827107af8a0cf160df7f106a764e4d05b1bb" translate="yes" xml:space="preserve">
          <source>ELECTRON_NO_ATTACH_CONSOLE</source>
          <target state="translated">ELECTRON_NO_ATTACH_CONSOLE</target>
        </trans-unit>
        <trans-unit id="c2dd5aa7237ea4ecfd62c80cf960dc2d6da0ed52" translate="yes" xml:space="preserve">
          <source>ELECTRON_RUN_AS_NODE</source>
          <target state="translated">ELECTRON_RUN_AS_NODE</target>
        </trans-unit>
        <trans-unit id="44de7eccbcb384847ac7c2c929abe0b9a6cbe575" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Menu&lt;/code&gt; consists of multiple &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;s and each &lt;code&gt;MenuItem&lt;/code&gt; can have a submenu.</source>
          <target state="translated">각 &lt;code&gt;Menu&lt;/code&gt; 는 여러 &lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; 으로&lt;/a&gt; 구성 되며 각 &lt;code&gt;MenuItem&lt;/code&gt; 은 하위 메뉴를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52713a29cd98cf5dd75791fa029fbfd2827bbfbd" translate="yes" xml:space="preserve">
          <source>Each header name produces an array-valued property on the headers object.</source>
          <target state="translated">각 헤더 이름은 headers 객체에 배열 값 속성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f4b64dbf223330d2f4d8bd77d8baf54fbb5db085" translate="yes" xml:space="preserve">
          <source>Each header value is pushed into the array associated with its header name.</source>
          <target state="translated">각 헤더 값은 헤더 이름과 연관된 배열로 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="e1ba3fa362b9c14a80832ddaa063ca18475e4006" translate="yes" xml:space="preserve">
          <source>Each listed item should reference a PR on electron/electron, not an issue, nor a PR from another repo like libcc.</source>
          <target state="translated">나열된 각 항목은 전자 / 전자에 대한 PR (문제가 아님) 또는 libcc와 같은 다른 리포지토리의 PR을 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="97be266b07215f38946a06961325e1dfeb64b0fd" translate="yes" xml:space="preserve">
          <source>Each object (including functions) returned by the &lt;code&gt;remote&lt;/code&gt; module represents an object in the main process (we call it a remote object or remote function). When you invoke methods of a remote object, call a remote function, or create a new object with the remote constructor (function), you are actually sending synchronous inter-process messages.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈이 반환 한 각 객체 (함수 포함) 는 기본 프로세스의 객체를 나타냅니다 (원격 객체 또는 원격 함수라고 함). 원격 객체의 메소드를 호출하거나 원격 함수를 호출하거나 원격 생성자 (함수)를 사용하여 새 객체를 만들면 실제로는 프로세스 간 동기 메시지가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="c132a0d2469bf153dae98ea483611973fad903ff" translate="yes" xml:space="preserve">
          <source>Ecosystem apps like &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;Electron Forge&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/fiddle&quot;&gt;Electron Fiddle&lt;/a&gt;</source>
          <target state="translated">Ecosystem apps like &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;Electron Forge&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/fiddle&quot;&gt;Electron Fiddle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6198de02fc73a27b6075f7f5288992c2190ce784" translate="yes" xml:space="preserve">
          <source>Edit the release and add release notes.</source>
          <target state="translated">릴리스를 편집하고 릴리스 정보를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="4ca204df025d0045e3916c0f57d806f4a0e61da7" translate="yes" xml:space="preserve">
          <source>Edit the release draft</source>
          <target state="translated">출시 초안 수정</target>
        </trans-unit>
        <trans-unit id="acd21e08d6cf84ac49fac2e8be82174a26b5684c" translate="yes" xml:space="preserve">
          <source>Editor Integration</source>
          <target state="translated">에디터 통합</target>
        </trans-unit>
        <trans-unit id="32a90561af82abfa6e3aa54ef2f8e4b55202bd25" translate="yes" xml:space="preserve">
          <source>Electron</source>
          <target state="translated">Electron</target>
        </trans-unit>
        <trans-unit id="11f40c5075c5879a190d484e7715695ab80f9278" translate="yes" xml:space="preserve">
          <source>Electron API</source>
          <target state="translated">Electron API</target>
        </trans-unit>
        <trans-unit id="b1ced5c3d7f7aa2bcb80476fc1e8d56ae0e270a5" translate="yes" xml:space="preserve">
          <source>Electron APIs are assigned based on the process type, meaning that some modules can be used from either the Main or Renderer process, and some from both. Electron's API documentation indicates which process each module can be used from.</source>
          <target state="translated">Electron APIs are assigned based on the process type, meaning that some modules can be used from either the Main or Renderer process, and some from both. Electron's API documentation indicates which process each module can be used from.</target>
        </trans-unit>
        <trans-unit id="58d5b828b14e77dd8812f3563eb31d923a3ed021" translate="yes" xml:space="preserve">
          <source>Electron APIs uses the same capitalization scheme as Node.js:</source>
          <target state="translated">Electron API는 Node.js와 동일한 대문자 체계를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="44304dac59c6c209b904107043b70f1fb5228444" translate="yes" xml:space="preserve">
          <source>Electron Application Architecture</source>
          <target state="translated">전자 응용 프로그램 아키텍처</target>
        </trans-unit>
        <trans-unit id="2c87d2af83ddadccf9dd908cb87486e63bf96dbf" translate="yes" xml:space="preserve">
          <source>Electron Builder comes with a custom solution for signing your application. You can find &lt;a href=&quot;https://www.electron.build/code-signing&quot;&gt;its documentation here&lt;/a&gt;.</source>
          <target state="translated">Electron Builder comes with a custom solution for signing your application. You can find &lt;a href=&quot;https://www.electron.build/code-signing&quot;&gt;its documentation here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="14a40f27d998557d8105f5b86df80da651f8ae4d" translate="yes" xml:space="preserve">
          <source>Electron Development in a Nutshell</source>
          <target state="translated">간단히 말해서 전자 개발</target>
        </trans-unit>
        <trans-unit id="2c4c27757366cd61e6d50f7ed02a9c078e274b53" translate="yes" xml:space="preserve">
          <source>Electron Documentation</source>
          <target state="translated">전자 문서</target>
        </trans-unit>
        <trans-unit id="84054982a168a4741747fc91b17a23f929f47d5c" translate="yes" xml:space="preserve">
          <source>Electron FAQ</source>
          <target state="translated">전자 FAQ</target>
        </trans-unit>
        <trans-unit id="0b9405532e6317f8f450c6ad4994ac08565770ba" translate="yes" xml:space="preserve">
          <source>Electron Fuses</source>
          <target state="translated">Electron Fuses</target>
        </trans-unit>
        <trans-unit id="abcfd22e4c984d8fc7b8f5fcde3c146175fa8429" translate="yes" xml:space="preserve">
          <source>Electron Release Timelines</source>
          <target state="translated">Electron Release Timelines</target>
        </trans-unit>
        <trans-unit id="f076081f8c1e4d2c9f6775178dc5a62decbc72cf" translate="yes" xml:space="preserve">
          <source>Electron Releases &amp;amp; Developer Feedback</source>
          <target state="translated">Electron Releases &amp;amp; Developer Feedback</target>
        </trans-unit>
        <trans-unit id="1bf6bfcf9c64080cd7c7fa18317dab6e9a8cdf06" translate="yes" xml:space="preserve">
          <source>Electron Security Warnings</source>
          <target state="translated">전자 보안 경고</target>
        </trans-unit>
        <trans-unit id="592b3b0147659b8369f6001248efbc7526b0ed35" translate="yes" xml:space="preserve">
          <source>Electron Support</source>
          <target state="translated">전자 지원</target>
        </trans-unit>
        <trans-unit id="63f67a413278dac2715d2f7a6b3e11d115a2253d" translate="yes" xml:space="preserve">
          <source>Electron Versioning</source>
          <target state="translated">전자 버전 관리</target>
        </trans-unit>
        <trans-unit id="17d31f3349af7283f936ac1f02268885bec3466c" translate="yes" xml:space="preserve">
          <source>Electron also provides some extra built-in modules for developing native desktop applications. Some modules are only available in the main process, some are only available in the renderer process (web page), and some can be used in both processes.</source>
          <target state="translated">Electron은 또한 기본 데스크탑 응용 프로그램 개발을위한 몇 가지 내장 모듈을 제공합니다. 일부 모듈은 기본 프로세스에서만 사용 가능하고 일부 모듈은 렌더러 프로세스 (웹 페이지)에서만 사용 가능하며 일부 모듈은 두 프로세스 모두에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96ce621f6c800d28be0bfd2348d21d8069c39829" translate="yes" xml:space="preserve">
          <source>Electron application will enable accessibility automatically when it detects assistive technology (Windows) or VoiceOver (macOS). See Chrome's &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility#TOC-How-Chrome-detects-the-presence-of-Assistive-Technology&quot;&gt;accessibility documentation&lt;/a&gt; for more details.</source>
          <target state="translated">전자 응용 프로그램은 보조 기술 (Windows) 또는 VoiceOver (macOS)를 감지하면 자동으로 접근성을 활성화합니다. 자세한 내용은 Chrome의 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility#TOC-How-Chrome-detects-the-presence-of-Assistive-Technology&quot;&gt;접근성 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="709d29b8e1d6b6d307ab3f2ac227d632e1f9f29d" translate="yes" xml:space="preserve">
          <source>Electron applications keep accessibility disabled by default for performance reasons but there are multiple ways to enable it.</source>
          <target state="translated">전자 응용 프로그램은 성능상의 이유로 기본적으로 내게 필요한 옵션을 사용하지 않도록 설정하지만 여러 가지 방법으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77f6821771c8bccafe5fa67678e6312f721a6615" translate="yes" xml:space="preserve">
          <source>Electron applications will automatically enable accessibility features in the presence of assistive technology (e.g. &lt;a href=&quot;https://www.freedomscientific.com/products/software/jaws/&quot;&gt;JAWS&lt;/a&gt; on Windows or &lt;a href=&quot;https://help.apple.com/voiceover/mac/10.15/&quot;&gt;VoiceOver&lt;/a&gt; on macOS). See Chrome's &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility#TOC-How-Chrome-detects-the-presence-of-Assistive-Technology&quot;&gt;accessibility documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Electron applications will automatically enable accessibility features in the presence of assistive technology (e.g. &lt;a href=&quot;https://www.freedomscientific.com/products/software/jaws/&quot;&gt;JAWS&lt;/a&gt; on Windows or &lt;a href=&quot;https://help.apple.com/voiceover/mac/10.15/&quot;&gt;VoiceOver&lt;/a&gt; on macOS). See Chrome's &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility#TOC-How-Chrome-detects-the-presence-of-Assistive-Technology&quot;&gt;accessibility documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="b4c01f9c3fa2b893fce3c4b926c9f728a1177781" translate="yes" xml:space="preserve">
          <source>Electron apps are developed in JavaScript using the same principles and methods found in Node.js development. All APIs and features found in Electron are accessible through the &lt;code&gt;electron&lt;/code&gt; module, which can be required like any other Node.js module:</source>
          <target state="translated">Electron 앱은 Node.js 개발과 동일한 원칙과 방법을 사용하여 JavaScript로 개발됩니다. Electron에있는 모든 API와 기능은 다른 Node.js 모듈과 같이 &lt;code&gt;electron&lt;/code&gt; 모듈을 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f0be7e11c1a5bd88927c3822376a79b976e4005" translate="yes" xml:space="preserve">
          <source>Electron attempts to automate the work around the Application User Model ID. When Electron is used together with the installation and update framework Squirrel, &lt;a href=&quot;https://github.com/electron/windows-installer/blob/master/README.md#handling-squirrel-events&quot;&gt;shortcuts will automatically be set correctly&lt;/a&gt;. Furthermore, Electron will detect that Squirrel was used and will automatically call &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; with the correct value. During development, you may have to call &lt;a href=&quot;../api/app#appsetappusermodelidid-windows&quot;&gt;&lt;code&gt;app.setAppUserModelId()&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="translated">Electron attempts to automate the work around the Application User Model ID. When Electron is used together with the installation and update framework Squirrel, &lt;a href=&quot;https://github.com/electron/windows-installer/blob/master/README.md#handling-squirrel-events&quot;&gt;shortcuts will automatically be set correctly&lt;/a&gt;. Furthermore, Electron will detect that Squirrel was used and will automatically call &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; with the correct value. During development, you may have to call &lt;a href=&quot;../api/app#appsetappusermodelidid-windows&quot;&gt; &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; &lt;/a&gt; yourself.</target>
        </trans-unit>
        <trans-unit id="8fbb00b8f9eb678a909ada1578e05b0ee1324dc5" translate="yes" xml:space="preserve">
          <source>Electron attempts to automate the work around the Application User Model ID. When Electron is used together with the installation and update framework Squirrel, &lt;a href=&quot;https://github.com/electron/windows-installer/blob/master/README.md#handling-squirrel-events&quot;&gt;shortcuts will automatically be set correctly&lt;/a&gt;. Furthermore, Electron will detect that Squirrel was used and will automatically call &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; with the correct value. During development, you may have to call &lt;a href=&quot;notifications&quot;&gt;&lt;code&gt;app.setAppUserModelId()&lt;/code&gt;&lt;/a&gt;(../api/app.md#appsetappusermodelidid-windows)] yourself.</source>
          <target state="translated">Electron은 응용 프로그램 사용자 모델 ID와 관련된 작업을 자동화하려고 시도합니다. Electron을 설치 및 업데이트 프레임 워크 다람쥐와 함께 사용하면 &lt;a href=&quot;https://github.com/electron/windows-installer/blob/master/README.md#handling-squirrel-events&quot;&gt;바로 가기가 자동으로 올바르게 설정됩니다&lt;/a&gt; . 또한 Electron은 Squirrel이 사용되었음을 감지 하고 올바른 값 으로 &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; 를 자동으로 호출 합니다. 개발 중에 &lt;a href=&quot;notifications&quot;&gt; &lt;code&gt;app.setAppUserModelId()&lt;/code&gt; &lt;/a&gt; (../api/app.md#appsetappusermodelidid-windows)]를 직접 호출해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b019e5aa8a9fd2a2b9f5a3780173c3f61fb1a647" translate="yes" xml:space="preserve">
          <source>Electron began in 2013 as the framework on which &lt;a href=&quot;https://atom.io&quot;&gt;Atom&lt;/a&gt;, GitHub's hackable text editor, would be built. The two were open sourced in the Spring of 2014.</source>
          <target state="translated">Electron은 GitHub의 해킹 가능한 텍스트 편집기 인 &lt;a href=&quot;https://atom.io&quot;&gt;Atom&lt;/a&gt; 이 구축 될 프레임 워크로 2013 년에 시작되었습니다 . 이 둘은 2014 년 봄에 오픈 소스로 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="685cf7ee7278ae5828dba4be73addfc7480a5ecf" translate="yes" xml:space="preserve">
          <source>Electron breaking API changes</source>
          <target state="translated">전자 파괴 API 변경</target>
        </trans-unit>
        <trans-unit id="ccf497bbfcce0b4a7dfa006361c9e70e4a10be6a" translate="yes" xml:space="preserve">
          <source>Electron bug fixes</source>
          <target state="translated">전자 버그 수정</target>
        </trans-unit>
        <trans-unit id="15971c4eeb1f667e5eab2dce3b118d1ce4b1fa2a" translate="yes" xml:space="preserve">
          <source>Electron builds V8 as part of Chromium and then points Node to that V8 when building it.</source>
          <target state="translated">Electron은 Chromium의 일부로 V8을 빌드 한 다음 V8을 빌드 할 때 노드를 해당 V8을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="c95c8b378215db0602b19851bb5a90d51e4ed13f" translate="yes" xml:space="preserve">
          <source>Electron can only be built for a 64bit target on macOS and there is no plan to support 32bit macOS in the future.</source>
          <target state="translated">Electron은 macOS에서 64 비트 대상 용으로 만 빌드 할 수 있으며 향후 32 비트 macOS를 지원할 계획이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7b13cad6c5a3110f029f5ca192a46670dbcab187" translate="yes" xml:space="preserve">
          <source>Electron consists of three main pillars:</source>
          <target state="translated">Electron consists of three main pillars:</target>
        </trans-unit>
        <trans-unit id="0c6d9c0385743a6f50c1c9105d9c489cf9da2c1a" translate="yes" xml:space="preserve">
          <source>Electron debug builds will use this shared library to link against.</source>
          <target state="translated">Electron 디버그 빌드는이 공유 라이브러리를 사용하여 링크합니다.</target>
        </trans-unit>
        <trans-unit id="8d135eb9c15fe5b252f7f22c8847398192a6a5e3" translate="yes" xml:space="preserve">
          <source>Electron development is essentially Node.js development. To turn your operating system into an environment capable of building desktop apps with Electron, you will merely need Node.js, npm, a code editor of your choice, and a rudimentary understanding of your operating system's command line client.</source>
          <target state="translated">전자 개발은 본질적으로 Node.js 개발입니다. 운영 체제를 Electron으로 데스크탑 앱을 빌드 할 수있는 환경으로 전환하려면 Node.js, npm, 선택한 코드 편집기 및 운영 체제의 명령 행 클라이언트에 대한 기본적인 지식 만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="9e546b415e8aafeee844aea3ec4ff585dc6ba4d7" translate="yes" xml:space="preserve">
          <source>Electron development is un-opinionated - there is no &quot;one true way&quot; to develop, build, package, or release an Electron application. Additional features for Electron, both for build- and run-time, can usually be found on &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;npm&lt;/a&gt; in individual packages, allowing developers to build both the app and build pipeline they need.</source>
          <target state="translated">전자 개발은 의견이 맞지 않습니다. 전자 응용 프로그램을 개발, 빌드, 패키징 또는 릴리스 할 수있는 &quot;하나의 진정한 방법&quot;은 없습니다. 빌드 및 런타임을위한 Electron의 추가 기능은 일반적으로 &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;npm&lt;/a&gt; 에서 개별 패키지로 제공되므로 개발자는 필요한 앱과 빌드 파이프 라인을 모두 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fd1dc5965798c22c1f9c7e1f3022654ae38372d" translate="yes" xml:space="preserve">
          <source>Electron development is unopinionated - there is no &quot;one true way&quot; to develop, build, package, or release an Electron application. Additional features for Electron, both for build- and run-time, can usually be found on &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;npm&lt;/a&gt; in individual packages, allowing developers to build both the app and build pipeline they need.</source>
          <target state="translated">Electron development is unopinionated - there is no &quot;one true way&quot; to develop, build, package, or release an Electron application. Additional features for Electron, both for build- and run-time, can usually be found on &lt;a href=&quot;https://www.npmjs.com/search?q=electron&quot;&gt;npm&lt;/a&gt; in individual packages, allowing developers to build both the app and build pipeline they need.</target>
        </trans-unit>
        <trans-unit id="989b7f42b8c2cc8275aa54d3981a75e79961cdf9" translate="yes" xml:space="preserve">
          <source>Electron doesn't ship with the Widevine CDM plugin for license reasons, to get it, you need to install the official Chrome browser first, which should match the architecture and Chrome version of the Electron build you use.</source>
          <target state="translated">Electron에는 라이센스 이유로 Widevine CDM 플러그인이 포함되어 있지 않으므로 먼저 공식 Chrome 브라우저를 설치해야합니다. 먼저 사용하는 Electron 빌드의 아키텍처 및 Chrome 버전과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b062c7bf496de007c44d72af45fa177d544b11a" translate="yes" xml:space="preserve">
          <source>Electron enables developers to disable various security features that control a renderer process. In most cases, developers do not need to disable any of those features - and you should therefore not allow different configurations for newly created &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt;&lt;/a&gt; tags.</source>
          <target state="translated">Electron을 통해 개발자는 렌더러 프로세스를 제어하는 ​​다양한 보안 기능을 비활성화 할 수 있습니다. 대부분의 경우 개발자는 이러한 기능을 비활성화하지 않아도되므로 새로 만든 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;&amp;lt;WebView&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그에 다른 구성을 허용하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="d575b623b0353767d4c34d330aff2027bf951289" translate="yes" xml:space="preserve">
          <source>Electron enables developers to disable various security features that control a renderer process. In most cases, developers do not need to disable any of those features - and you should therefore not allow different configurations for newly created &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tags.</source>
          <target state="translated">Electron enables developers to disable various security features that control a renderer process. In most cases, developers do not need to disable any of those features - and you should therefore not allow different configurations for newly created &lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt; tags.</target>
        </trans-unit>
        <trans-unit id="10e334c7911c139589980ea4b80f2c7cbef76ede" translate="yes" xml:space="preserve">
          <source>Electron enables you to create desktop applications with pure JavaScript by providing a runtime with rich native (operating system) APIs. You could see it as a variant of the Node.js runtime that is focused on desktop applications instead of web servers.</source>
          <target state="translated">Electron은 풍부한 네이티브 (운영 체제) API를 런타임에 제공하여 순수한 JavaScript로 데스크탑 애플리케이션을 작성할 수 있습니다. 웹 서버 대신 데스크탑 응용 프로그램에 중점을 둔 Node.js 런타임의 변형으로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0f76a79651c33e729a41e73fe17d5a803f3b18c" translate="yes" xml:space="preserve">
          <source>Electron exposes full access to Node.js API and its modules both in the Main and the Renderer processes. For example, you can read all the files from the root directory:</source>
          <target state="translated">Electron exposes full access to Node.js API and its modules both in the Main and the Renderer processes. For example, you can read all the files from the root directory:</target>
        </trans-unit>
        <trans-unit id="0559c899b0de184211bab3db1b4d0400cc083765" translate="yes" xml:space="preserve">
          <source>Electron exposes full access to Node.js both in the main and the renderer process. This has two important implications:</source>
          <target state="translated">Electron은 기본 프로세스와 렌더러 프로세스 모두에서 Node.js에 대한 모든 액세스 권한을 제공합니다. 여기에는 두 가지 중요한 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d2a307899201489a84a54b88b7e4e7078bc78d2" translate="yes" xml:space="preserve">
          <source>Electron has APIs to configure the app's icon in the Windows taskbar. Supported are the &lt;a href=&quot;#jumplist&quot;&gt;creation of a &lt;code&gt;JumpList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#thumbnail-toolbars&quot;&gt;custom thumbnails and toolbars&lt;/a&gt;, &lt;a href=&quot;#icon-overlays-in-taskbar&quot;&gt;icon overlays&lt;/a&gt;, and the so-called &lt;a href=&quot;#flash-frame&quot;&gt;&quot;Flash Frame&quot; effect&lt;/a&gt;, but Electron also uses the app's dock icon to implement cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</source>
          <target state="translated">Electron에는 Windows 작업 표시 줄에 앱 아이콘을 구성하는 API가 있습니다. &lt;a href=&quot;#jumplist&quot;&gt; &lt;code&gt;JumpList&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#thumbnail-toolbars&quot;&gt;사용자 정의 썸네일 및 도구 모음&lt;/a&gt; , &lt;a href=&quot;#icon-overlays-in-taskbar&quot;&gt;아이콘 오버레이&lt;/a&gt; 및 소위 &lt;a href=&quot;#flash-frame&quot;&gt;&quot;플래시 프레임&quot;효과&lt;/a&gt; 의 생성이 지원 되지만 Electron은 또한 앱의 독 아이콘을 사용하여 &lt;a href=&quot;recent-documents&quot;&gt;최근 문서&lt;/a&gt; 및 &lt;a href=&quot;progress-bar&quot;&gt;응용 프로그램 진행률&lt;/a&gt; 과 같은 크로스 플랫폼 기능을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="265649f2c6a29256d4ff13bb97f7c17e8f27d2f0" translate="yes" xml:space="preserve">
          <source>Electron has APIs to configure the app's icon in the Windows taskbar. This API supports both Windows-only features like &lt;a href=&quot;#jumplist&quot;&gt;creation of a &lt;code&gt;JumpList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#thumbnail-toolbars&quot;&gt;custom thumbnails and toolbars&lt;/a&gt;, &lt;a href=&quot;#icon-overlays-in-taskbar&quot;&gt;icon overlays&lt;/a&gt;, and the so-called &lt;a href=&quot;#flash-frame&quot;&gt;&quot;Flash Frame&quot; effect&lt;/a&gt;, and cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</source>
          <target state="translated">Electron has APIs to configure the app's icon in the Windows taskbar. This API supports both Windows-only features like &lt;a href=&quot;#jumplist&quot;&gt;creation of a &lt;code&gt;JumpList&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#thumbnail-toolbars&quot;&gt;custom thumbnails and toolbars&lt;/a&gt;, &lt;a href=&quot;#icon-overlays-in-taskbar&quot;&gt;icon overlays&lt;/a&gt;, and the so-called &lt;a href=&quot;#flash-frame&quot;&gt;&quot;Flash Frame&quot; effect&lt;/a&gt;, and cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f69cb6c34345e8a8626ddb71baff1d6bbabdad05" translate="yes" xml:space="preserve">
          <source>Electron has APIs to configure the app's icon in the macOS Dock. A macOS-only API exists to create a custom dock menu, but Electron also uses the app dock icon as the entry point for cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</source>
          <target state="translated">Electron has APIs to configure the app's icon in the macOS Dock. A macOS-only API exists to create a custom dock menu, but Electron also uses the app dock icon as the entry point for cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="41eb5fec5339960578ef75fb7b1b7f911978c5af" translate="yes" xml:space="preserve">
          <source>Electron has APIs to configure the app's icon in the macOS Dock. A macOS-only API exists to create a custom dock menu, but Electron also uses the app's dock icon to implement cross-platform features like &lt;a href=&quot;recent-documents&quot;&gt;recent documents&lt;/a&gt; and &lt;a href=&quot;progress-bar&quot;&gt;application progress&lt;/a&gt;.</source>
          <target state="translated">Electron에는 macOS Dock에서 앱 아이콘을 구성하는 API가 있습니다. macOS 전용 API는 사용자 정의 도크 메뉴를 생성하기 위해 존재하지만 Electron은 또한 앱의 도크 아이콘을 사용하여 &lt;a href=&quot;recent-documents&quot;&gt;최근 문서&lt;/a&gt; 및 &lt;a href=&quot;progress-bar&quot;&gt;응용 프로그램 진행률&lt;/a&gt; 과 같은 크로스 플랫폼 기능을 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="92e706c74d6417cff16276850702efec2edf674d" translate="yes" xml:space="preserve">
          <source>Electron has its own &lt;a href=&quot;https://github.com/electron/node&quot;&gt;Node fork&lt;/a&gt; with modifications for the V8 build details mentioned above and for exposing API needed by Electron. Once an upstream Node release is chosen, it's placed in a branch in Electron's Node fork and any Electron Node patches are applied there.</source>
          <target state="translated">Electron은 위에서 언급 한 V8 빌드 세부 사항을 수정하고 Electron에 필요한 API를 노출하기 위해 자체 &lt;a href=&quot;https://github.com/electron/node&quot;&gt;노드 포크를&lt;/a&gt; 가지고 있습니다. 업스트림 노드 릴리스가 선택되면 Electron의 Node fork 분기에 배치되고 Electron Node 패치가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8c7484404289f602a03b043c76577de4393a04ab" translate="yes" xml:space="preserve">
          <source>Electron includes a hardcoded API key for making requests to Google's geocoding webservice. Because this API key is included in every version of Electron, it often exceeds its usage quota. To work around this, you can supply your own Google API key in the environment. Place the following code in your main process file, before opening any browser windows that will make geocoding requests:</source>
          <target state="translated">Electron에는 Google의 지오 코딩 웹 서비스에 요청하기위한 하드 코딩 된 API 키가 포함되어 있습니다. 이 API 키는 모든 버전의 Electron에 포함되어 있기 때문에 종종 사용 할당량을 초과합니다. 이 문제를 해결하기 위해 환경에서 고유 한 Google API 키를 제공 할 수 있습니다. 지오 코딩 요청을하는 브라우저 창을 열기 전에 기본 프로세스 파일에 다음 코드를 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="6bc42e5a72fd36acd95221d7d713884f0c0f6b76" translate="yes" xml:space="preserve">
          <source>Electron includes support for a subset of Node's &lt;a href=&quot;https://nodejs.org/api/cli.html#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt;. The majority are supported with the exception of those which conflict with Chromium's use of BoringSSL.</source>
          <target state="translated">Electron includes support for a subset of Node's &lt;a href=&quot;https://nodejs.org/api/cli.html#cli_node_options_options&quot;&gt; &lt;code&gt;NODE_OPTIONS&lt;/code&gt; &lt;/a&gt;. The majority are supported with the exception of those which conflict with Chromium's use of BoringSSL.</target>
        </trans-unit>
        <trans-unit id="91cc7f942ce2fdfdcee1edff699f623123c7246d" translate="yes" xml:space="preserve">
          <source>Electron inherits this build option from Chromium. In &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</source>
          <target state="translated">Electron inherits this build option from Chromium. In &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</target>
        </trans-unit>
        <trans-unit id="69da0c70476c3b3cc67cb4650108b2c989dba3e9" translate="yes" xml:space="preserve">
          <source>Electron is a framework that enables you to create desktop applications with JavaScript, HTML, and CSS. These applications can then be packaged to run directly on macOS, Windows, or Linux, or distributed via the Mac App Store or the Microsoft Store.</source>
          <target state="translated">Electron is a framework that enables you to create desktop applications with JavaScript, HTML, and CSS. These applications can then be packaged to run directly on macOS, Windows, or Linux, or distributed via the Mac App Store or the Microsoft Store.</target>
        </trans-unit>
        <trans-unit id="8e995844d1680112775ec3b40362aeff8b862968" translate="yes" xml:space="preserve">
          <source>Electron is maintained by a team at GitHub as well as a group of &lt;a href=&quot;https://github.com/electron/electron/graphs/contributors&quot;&gt;active contributors&lt;/a&gt; from the community. Some of the contributors are individuals and some work at larger companies who are developing on Electron. We're happy to add frequent contributors to the project as maintainers. Read more about &lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;contributing to Electron&lt;/a&gt;.</source>
          <target state="translated">Electron은 GitHub 팀 과 커뮤니티 의 &lt;a href=&quot;https://github.com/electron/electron/graphs/contributors&quot;&gt;활발한 기고자&lt;/a&gt; 그룹에 의해 관리됩니다 . 기고자 중 일부는 개인이며 일부는 Electron을 개발하는 대기업에서 일합니다. 우리는 프로젝트에 관리자로서 자주 기여자를 추가하게되어 기쁩니다. &lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;Electron 기여에&lt;/a&gt; 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="4ca20c98bf3921339cfe00123ff874ef14a69171" translate="yes" xml:space="preserve">
          <source>Electron keeps all its patches in libcc because it&amp;rsquo;s simpler than maintaining different repos for patches for each upstream project.</source>
          <target state="translated">Electron은 각 업스트림 프로젝트마다 패치에 대해 다른 리포지토리를 유지하는 것보다 간단하므로 모든 패치를 libcc에 유지합니다.</target>
        </trans-unit>
        <trans-unit id="6ccddb355960738588c3d6ab49403a6f4479a33b" translate="yes" xml:space="preserve">
          <source>Electron keeps up to date with alternating Chromium releases. For more information, see the &lt;a href=&quot;https://electronjs.org/blog/12-week-cadence&quot;&gt;Electron Release Cadence blog post&lt;/a&gt;.</source>
          <target state="translated">Electron keeps up to date with alternating Chromium releases. For more information, see the &lt;a href=&quot;https://electronjs.org/blog/12-week-cadence&quot;&gt;Electron Release Cadence blog post&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cfdbf1eba8a1ff4a8a3ef89147fa04599191995d" translate="yes" xml:space="preserve">
          <source>Electron links with different sets of libraries in &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; builds. &lt;code&gt;gyp&lt;/code&gt;, however, doesn't support configuring different link settings for different configurations.</source>
          <target state="translated">전자는 &lt;code&gt;Release&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 빌드 에서 서로 다른 라이브러리 세트와 연결됩니다 . 그러나 &lt;code&gt;gyp&lt;/code&gt; 은 다른 구성에 대해 다른 링크 설정 구성을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d095b003be09ca6fd54ef1b30cbd163c13cbee2" translate="yes" xml:space="preserve">
          <source>Electron makes sure that as long as the remote object in the renderer process lives (in other words, has not been garbage collected), the corresponding object in the main process will not be released. When the remote object has been garbage collected, the corresponding object in the main process will be dereferenced.</source>
          <target state="translated">Electron은 렌더러 프로세스의 원격 객체가 존재하는 한 (즉, 가비지 수집되지 않은) 주 프로세스의 해당 객체가 해제되지 않도록합니다. 원격 객체가 가비지 수집되면 기본 프로세스의 해당 객체가 역 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="810792b846464a7ef043f969705877d47acbb0e7" translate="yes" xml:space="preserve">
          <source>Electron no longer supports the Pepper Flash plugin, as Chrome has removed support.</source>
          <target state="translated">Electron no longer supports the Pepper Flash plugin, as Chrome has removed support.</target>
        </trans-unit>
        <trans-unit id="32b5a2c5a13ada586d4a948c30b0eadaf92bc5dc" translate="yes" xml:space="preserve">
          <source>Electron non-breaking API changes</source>
          <target state="translated">끊임없는 전자식 API 변경</target>
        </trans-unit>
        <trans-unit id="7384a0df568aac1b2896dc40b2b22fd3b44b3d4b" translate="yes" xml:space="preserve">
          <source>Electron offers a number of APIs that support the development of a desktop application in both the main process and the renderer process. In both processes, you'd access Electron's APIs by requiring its included module:</source>
          <target state="translated">Electron은 메인 프로세스와 렌더러 프로세스 모두에서 데스크탑 애플리케이션의 개발을 지원하는 많은 API를 제공합니다. 두 프로세스 모두 포함 된 모듈을 요구하여 Electron의 API에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddb1d686dc1f490694c35b28f2abd21e2e9ced3d" translate="yes" xml:space="preserve">
          <source>Electron only supports a limited set of &lt;code&gt;chrome.*&lt;/code&gt; APIs, so some extensions using unsupported &lt;code&gt;chrome.*&lt;/code&gt; APIs for chrome extension features may not work. Following Devtools Extensions are tested and guaranteed to work in Electron:</source>
          <target state="translated">Electron은 제한된 &lt;code&gt;chrome.*&lt;/code&gt; API 세트 만 지원 하므로 지원되지 않는 &lt;code&gt;chrome.*&lt;/code&gt; 크롬 확장 기능을위한 일부 API는 작동하지 않을 수 있습니다. 다음 Devtools Extensions는 Electron에서 테스트되고 작동합니다.</target>
        </trans-unit>
        <trans-unit id="32e08f522ec4dde13e10a8a7398a3c9b2f5bc093" translate="yes" xml:space="preserve">
          <source>Electron respects the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt; HTTP header&lt;/a&gt; which can be set using Electron's &lt;a href=&quot;../api/web-request#webrequestonheadersreceivedfilter-listener&quot;&gt;&lt;code&gt;webRequest.onHeadersReceived&lt;/code&gt;&lt;/a&gt; handler:</source>
          <target state="translated">Electron은 Electron의 &lt;a href=&quot;../api/web-request#webrequestonheadersreceivedfilter-listener&quot;&gt; &lt;code&gt;webRequest.onHeadersReceived&lt;/code&gt; &lt;/a&gt; 핸들러를 사용하여 설정할 수있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; HTTP 헤더&lt;/a&gt; 를 존중 합니다.</target>
        </trans-unit>
        <trans-unit id="0600f34e5a3ba5b20add0791bf03e428ee7b633d" translate="yes" xml:space="preserve">
          <source>Electron sets some variables in your environment at runtime.</source>
          <target state="translated">Electron sets some variables in your environment at runtime.</target>
        </trans-unit>
        <trans-unit id="80c074e41deafe296db01adc3f5c6a614d535fc5" translate="yes" xml:space="preserve">
          <source>Electron ships with a version of &lt;code&gt;ffmpeg&lt;/code&gt; that includes proprietary codecs by default. A version without these codecs is built and distributed with each release as well. Each Chrome upgrade should verify that switching this version is still supported.</source>
          <target state="translated">Electron 은 기본적으로 독점 코덱을 포함 하는 &lt;code&gt;ffmpeg&lt;/code&gt; 버전과 함께 제공됩니다 . 이러한 코덱이없는 버전은 각 릴리스와 함께 빌드 및 배포됩니다. 각 Chrome 업그레이드는이 버전 전환이 여전히 지원되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfd7f94998eaa904f9268d83d32f49cfcf728e1c" translate="yes" xml:space="preserve">
          <source>Electron supports Mac OS X 10.9 (and all versions named macOS) and up. Apple does not allow running macOS in virtual machines unless the host computer is already an Apple computer, so if you find yourself in need of a Mac, consider using a cloud service that rents access to Macs (like &lt;a href=&quot;https://www.macincloud.com/&quot;&gt;MacInCloud&lt;/a&gt; or &lt;a href=&quot;https://xcloud.me&quot;&gt;xcloud&lt;/a&gt;).</source>
          <target state="translated">Electron은 Mac OS X 10.9 (및 macOS라는 모든 버전) 이상을 지원합니다. 호스트 컴퓨터가 이미 Apple 컴퓨터가 아닌 이상 Apple은 가상 컴퓨터에서 macOS를 실행할 수 없으므로 Mac이 필요한 경우 Mac에 대한 액세스 권한을 임대하는 클라우드 서비스 (예 : &lt;a href=&quot;https://www.macincloud.com/&quot;&gt;MacInCloud&lt;/a&gt; 또는 &lt;a href=&quot;https://xcloud.me&quot;&gt;xcloud&lt;/a&gt; )를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="d101a627517cc361c7a09e19698dc810a372c38b" translate="yes" xml:space="preserve">
          <source>Electron supports Windows 7 and later versions &amp;ndash; attempting to develop Electron applications on earlier versions of Windows will not work. Microsoft provides free &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/virtual-machines&quot;&gt;virtual machine images with Windows 10&lt;/a&gt; for developers.</source>
          <target state="translated">Electron은 Windows 7 이상 버전을 지원합니다. 이전 버전의 Windows에서 Electron 응용 프로그램을 개발하려고 시도해도 작동하지 않습니다. Microsoft는 개발자 &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/virtual-machines&quot;&gt;에게 Windows 10과 함께&lt;/a&gt; 무료 가상 머신 이미지를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6af341d64d87f17d5af0423043f4ad6077295f6e" translate="yes" xml:space="preserve">
          <source>Electron supports macOS 10.10 (Yosemite) and up. Apple does not allow running macOS in virtual machines unless the host computer is already an Apple computer, so if you find yourself in need of a Mac, consider using a cloud service that rents access to Macs (like &lt;a href=&quot;https://www.macincloud.com/&quot;&gt;MacInCloud&lt;/a&gt; or &lt;a href=&quot;https://xcloud.me&quot;&gt;xcloud&lt;/a&gt;).</source>
          <target state="translated">Electron supports macOS 10.10 (Yosemite) and up. Apple does not allow running macOS in virtual machines unless the host computer is already an Apple computer, so if you find yourself in need of a Mac, consider using a cloud service that rents access to Macs (like &lt;a href=&quot;https://www.macincloud.com/&quot;&gt;MacInCloud&lt;/a&gt; or &lt;a href=&quot;https://xcloud.me&quot;&gt;xcloud&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d94ccd4ae536bd4e2759b31e22a709914d9c29c2" translate="yes" xml:space="preserve">
          <source>Electron supports the &lt;a href=&quot;https://developer.chrome.com/extensions/devtools&quot;&gt;Chrome DevTools Extension&lt;/a&gt;, which can be used to extend the ability of devtools for debugging popular web frameworks.</source>
          <target state="translated">Electron은 인기있는 웹 프레임 워크를 디버깅하기 위해 devtools의 기능을 확장하는 데 사용할 수있는 &lt;a href=&quot;https://developer.chrome.com/extensions/devtools&quot;&gt;Chrome DevTools Extension을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="b5e4be409e4721589f9a9a5d409f47e9c10fd54d" translate="yes" xml:space="preserve">
          <source>Electron supports the Pepper Flash plugin. To use the Pepper Flash plugin in Electron, you should manually specify the location of the Pepper Flash plugin and then enable it in your application.</source>
          <target state="translated">Electron은 Pepper Flash 플러그인을 지원합니다. Electron에서 Pepper Flash 플러그인을 사용하려면 Pepper Flash 플러그인의 위치를 ​​수동으로 지정한 다음 응용 프로그램에서 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="4ad96d268a8a072e5c41c4f3f9e6421ae8dc9243" translate="yes" xml:space="preserve">
          <source>Electron uses &lt;a href=&quot;https://gn.googlesource.com/gn&quot;&gt;GN&lt;/a&gt; for project generation and &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; for building. Project configurations can be found in the &lt;code&gt;.gn&lt;/code&gt; and &lt;code&gt;.gni&lt;/code&gt; files.</source>
          <target state="translated">Electron uses &lt;a href=&quot;https://gn.googlesource.com/gn&quot;&gt;GN&lt;/a&gt; for project generation and &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; for building. Project configurations can be found in the &lt;code&gt;.gn&lt;/code&gt; and &lt;code&gt;.gni&lt;/code&gt; files.</target>
        </trans-unit>
        <trans-unit id="3cb8f958e52c4bed658d017a1caa3d9dce0dbcf8" translate="yes" xml:space="preserve">
          <source>Electron uses &lt;a href=&quot;https://gyp.gsrc.io/&quot;&gt;gyp&lt;/a&gt; for project generation and &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; for building. Project configurations can be found in the &lt;code&gt;.gyp&lt;/code&gt; and &lt;code&gt;.gypi&lt;/code&gt; files.</source>
          <target state="translated">Electron은 프로젝트 생성에 &lt;a href=&quot;https://gyp.gsrc.io/&quot;&gt;gyp&lt;/a&gt; 를 사용 하고 건물에는 &lt;a href=&quot;https://ninja-build.org/&quot;&gt;닌자&lt;/a&gt; 를 사용합니다. 프로젝트 구성은 &lt;code&gt;.gyp&lt;/code&gt; 및 &lt;code&gt;.gypi&lt;/code&gt; 파일 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5d58eaf36c4fe6b016ca94e9770728e0cc5d036" translate="yes" xml:space="preserve">
          <source>Electron uses Chromium's &lt;code&gt;l10n_util&lt;/code&gt; library to fetch the locale. Possible values are listed below:</source>
          <target state="translated">Electron은 Chromium의 &lt;code&gt;l10n_util&lt;/code&gt; 라이브러리를 사용 하여 로캘을 가져옵니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="422f8667cd5e32c8ca12a853f82cf5f865d26c63" translate="yes" xml:space="preserve">
          <source>Electron uses following cryptographic algorithms:</source>
          <target state="translated">Electron은 다음과 같은 암호화 알고리즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="40b71223c0b3c84fb7825fcb786266d734817bd4" translate="yes" xml:space="preserve">
          <source>Electron uses the same technology as Chromium's &lt;a href=&quot;https://developer.chrome.com/extensions/content_scripts#execution-environment&quot;&gt;Content Scripts&lt;/a&gt; to enable this behavior.</source>
          <target state="translated">Electron은 Chromium의 &lt;a href=&quot;https://developer.chrome.com/extensions/content_scripts#execution-environment&quot;&gt;콘텐츠 스크립트&lt;/a&gt; 와 동일한 기술 을 사용하여이 동작을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="e727b76e61e47f6c5056e591840748dfb37a3b42" translate="yes" xml:space="preserve">
          <source>Electron versions &lt;em&gt;&amp;lt; 2.0&lt;/em&gt; did not conform to the &lt;a href=&quot;http://semver.org&quot;&gt;semver&lt;/a&gt; spec: major versions corresponded to end-user API changes, minor versions corresponded to Chromium major releases, and patch versions corresponded to new features and bug fixes. While convenient for developers merging features, it creates problems for developers of client-facing applications. The QA testing cycles of major apps like Slack, Stride, Teams, Skype, VS Code, Atom, and Desktop can be lengthy and stability is a highly desired outcome. There is a high risk in adopting new features while trying to absorb bug fixes.</source>
          <target state="translated">전자 버전 &lt;em&gt;&amp;lt;2.0&lt;/em&gt; 은 &lt;a href=&quot;http://semver.org&quot;&gt;semver&lt;/a&gt; 사양을 준수하지 않았습니다 . 주요 버전은 최종 사용자 API 변경에 해당하고, 부 버전은 Chromium 주요 릴리스에 해당하고, 패치 버전은 새로운 기능 및 버그 수정에 해당합니다. 기능을 병합하는 개발자에게는 편리하지만 클라이언트 용 응용 프로그램 개발자에게는 문제가됩니다. Slack, Stride, Teams, Skype, VS Code, Atom 및 Desktop과 같은 주요 앱의 QA 테스트주기는 길고 안정성은 매우 바람직한 결과입니다. 버그 수정을 흡수하는 동안 새로운 기능을 채택 할 위험이 높습니다.</target>
        </trans-unit>
        <trans-unit id="861af281236a7785298596373d82b6e7fe75f35f" translate="yes" xml:space="preserve">
          <source>Electron versions &lt;em&gt;&amp;lt; 2.0&lt;/em&gt; did not conform to the &lt;a href=&quot;https://semver.org&quot;&gt;semver&lt;/a&gt; spec: major versions corresponded to end-user API changes, minor versions corresponded to Chromium major releases, and patch versions corresponded to new features and bug fixes. While convenient for developers merging features, it creates problems for developers of client-facing applications. The QA testing cycles of major apps like Slack, Stride, Teams, Skype, VS Code, Atom, and Desktop can be lengthy and stability is a highly desired outcome. There is a high risk in adopting new features while trying to absorb bug fixes.</source>
          <target state="translated">Electron versions &lt;em&gt;&amp;lt; 2.0&lt;/em&gt; did not conform to the &lt;a href=&quot;https://semver.org&quot;&gt;semver&lt;/a&gt; spec: major versions corresponded to end-user API changes, minor versions corresponded to Chromium major releases, and patch versions corresponded to new features and bug fixes. While convenient for developers merging features, it creates problems for developers of client-facing applications. The QA testing cycles of major apps like Slack, Stride, Teams, Skype, VS Code, Atom, and Desktop can be lengthy and stability is a highly desired outcome. There is a high risk in adopting new features while trying to absorb bug fixes.</target>
        </trans-unit>
        <trans-unit id="51f5b5cfb5442cfa4fe3de6901e0d0c1d068e353" translate="yes" xml:space="preserve">
          <source>Electron will listen for V8 inspector protocol messages on the specified &lt;code&gt;port&lt;/code&gt;, an external debugger will need to connect on this port. The default &lt;code&gt;port&lt;/code&gt; is &lt;code&gt;5858&lt;/code&gt;.</source>
          <target state="translated">Electron은 지정된 &lt;code&gt;port&lt;/code&gt; 에서 V8 인스펙터 프로토콜 메시지를 수신 하고 외부 디버거는이 포트에서 연결해야합니다. 기본 &lt;code&gt;port&lt;/code&gt; 는 &lt;code&gt;5858&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="039c22ac7dc76cfcb47fc4947db8e18be5223f75" translate="yes" xml:space="preserve">
          <source>Electron works more like the Node.js runtime. Electron's APIs are lower level so you can use it for browser testing in place of &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;.</source>
          <target state="translated">Electron은 Node.js 런타임과 더 유사하게 작동합니다. Electron의 API는 하위 레벨이므로 &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt; 대신 브라우저 테스트에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9d7fdb57b36c58d91fad12154c4f07420071051" translate="yes" xml:space="preserve">
          <source>Electron's &lt;code&gt;process&lt;/code&gt; object is extended from the &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;Node.js &lt;code&gt;process&lt;/code&gt; object&lt;/a&gt;. It adds the following events, properties, and methods:</source>
          <target state="translated">Electron의 &lt;code&gt;process&lt;/code&gt; 객체는 &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;Node.js &lt;code&gt;process&lt;/code&gt; 객체&lt;/a&gt; 에서 확장됩니다 . 다음과 같은 이벤트, 속성 및 메서드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="01d4c48caa7c6b9f517cc76b588ea815e5d9bcb1" translate="yes" xml:space="preserve">
          <source>Electron's &lt;code&gt;webview&lt;/code&gt; tag is based on &lt;a href=&quot;https://developer.chrome.com/apps/tags/webview&quot;&gt;Chromium's &lt;code&gt;webview&lt;/code&gt;&lt;/a&gt;, which is undergoing dramatic architectural changes. This impacts the stability of &lt;code&gt;webviews&lt;/code&gt;, including rendering, navigation, and event routing. We currently recommend to not use the &lt;code&gt;webview&lt;/code&gt; tag and to consider alternatives, like &lt;code&gt;iframe&lt;/code&gt;, Electron's &lt;code&gt;BrowserView&lt;/code&gt;, or an architecture that avoids embedded content altogether.</source>
          <target state="translated">Electron's &lt;code&gt;webview&lt;/code&gt; tag is based on &lt;a href=&quot;https://developer.chrome.com/apps/tags/webview&quot;&gt;Chromium's &lt;code&gt;webview&lt;/code&gt; &lt;/a&gt;, which is undergoing dramatic architectural changes. This impacts the stability of &lt;code&gt;webviews&lt;/code&gt; , including rendering, navigation, and event routing. We currently recommend to not use the &lt;code&gt;webview&lt;/code&gt; tag and to consider alternatives, like &lt;code&gt;iframe&lt;/code&gt; , Electron's &lt;code&gt;BrowserView&lt;/code&gt; , or an architecture that avoids embedded content altogether.</target>
        </trans-unit>
        <trans-unit id="c55cd7626045d66b4d2e9526e70cfd0ade2aa39f" translate="yes" xml:space="preserve">
          <source>Electron's ecosystem favors configuration and freedom, so there are multiple ways to get your application signed and notarized.</source>
          <target state="translated">Electron's ecosystem favors configuration and freedom, so there are multiple ways to get your application signed and notarized.</target>
        </trans-unit>
        <trans-unit id="5c0f2fc98c5a73fbd3cdaa0580f49e773e6f7124" translate="yes" xml:space="preserve">
          <source>Electron's version of Chromium is usually updated within one or two weeks after a new stable Chromium version is released, depending on the effort involved in the upgrade.</source>
          <target state="translated">Electron의 Chromium 버전은 일반적으로 업그레이드에 관련된 노력에 따라 새로운 안정적인 Chromium 버전이 출시 된 후 1-2 주 안에 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="859c2d713ebb2f0b4f3f87df28e613757c28e825" translate="yes" xml:space="preserve">
          <source>Electron-forge creates the &lt;code&gt;out&lt;/code&gt; folder where your package will be located:</source>
          <target state="translated">Electron-forge creates the &lt;code&gt;out&lt;/code&gt; folder where your package will be located:</target>
        </trans-unit>
        <trans-unit id="437668e434f8bfba7bc73c1e04a0b86e8359906d" translate="yes" xml:space="preserve">
          <source>Ember Inspector</source>
          <target state="translated">엠버 인스펙터</target>
        </trans-unit>
        <trans-unit id="d959f5da94da2e368c2a7d9db2d3e66965e3eaaf" translate="yes" xml:space="preserve">
          <source>Emitted after a server side redirect occurs during navigation. For example a 302 redirect.</source>
          <target state="translated">Emitted after a server side redirect occurs during navigation. For example a 302 redirect.</target>
        </trans-unit>
        <trans-unit id="51b6b37d714d91e142539827b2e87994a6ca2d2a" translate="yes" xml:space="preserve">
          <source>Emitted after the window has been resized.</source>
          <target state="translated">Emitted after the window has been resized.</target>
        </trans-unit>
        <trans-unit id="483723e63df999041f8323449ab71201e503e21e" translate="yes" xml:space="preserve">
          <source>Emitted as a server side redirect occurs during navigation. For example a 302 redirect.</source>
          <target state="translated">Emitted as a server side redirect occurs during navigation. For example a 302 redirect.</target>
        </trans-unit>
        <trans-unit id="b69571d136ffc973b24e858b3846e6b45d1c59b2" translate="yes" xml:space="preserve">
          <source>Emitted as soon as the systems screen is unlocked.</source>
          <target state="translated">Emitted as soon as the systems screen is unlocked.</target>
        </trans-unit>
        <trans-unit id="09ff33a6239b7390a26de740f43c1cfbece855b3" translate="yes" xml:space="preserve">
          <source>Emitted as the last event in the HTTP request-response transaction. The &lt;code&gt;close&lt;/code&gt; event indicates that no more events will be emitted on either the &lt;code&gt;request&lt;/code&gt; or &lt;code&gt;response&lt;/code&gt; objects.</source>
          <target state="translated">HTTP 요청-응답 트랜잭션에서 마지막 이벤트로 발생합니다. &lt;code&gt;close&lt;/code&gt; 이벤트는 더 이상 이벤트가 하나에 방출되지 않음을 나타냅니다 &lt;code&gt;request&lt;/code&gt; 또는 &lt;code&gt;response&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3e486cbf0b5c1ee348a081670bc5f91da20f3492" translate="yes" xml:space="preserve">
          <source>Emitted before dispatching the &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. Calling &lt;code&gt;event.preventDefault&lt;/code&gt; will prevent the page &lt;code&gt;keydown&lt;/code&gt;/&lt;code&gt;keyup&lt;/code&gt; events and the menu shortcuts.</source>
          <target state="translated">파견하기 전에 방출 &lt;code&gt;keydown&lt;/code&gt; 과 &lt;code&gt;keyup&lt;/code&gt; 페이지에서 이벤트를. 호출 &lt;code&gt;event.preventDefault&lt;/code&gt; 페이지 방지 할 수 있습니다 &lt;code&gt;keydown&lt;/code&gt; / &lt;code&gt;keyup&lt;/code&gt; 이벤트와 메뉴 바로 가기를.</target>
        </trans-unit>
        <trans-unit id="bf821ea12385aa181557e298c647810246980db3" translate="yes" xml:space="preserve">
          <source>Emitted before the application starts closing its windows. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behavior, which is terminating the application.</source>
          <target state="translated">Emitted before the application starts closing its windows. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behavior, which is terminating the application.</target>
        </trans-unit>
        <trans-unit id="57f2b66a3555bb95e39ebface4da0616026307a0" translate="yes" xml:space="preserve">
          <source>Emitted before the application starts closing its windows. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behaviour, which is terminating the application.</source>
          <target state="translated">응용 프로그램이 창 닫기를 시작하기 전에 발생합니다. &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 응용 프로그램이 종료되는 기본 동작이 방지됩니다.</target>
        </trans-unit>
        <trans-unit id="4d364218961c2610cac24a2a6a49de57c0768c1c" translate="yes" xml:space="preserve">
          <source>Emitted before the window is moved. On Windows, calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the window from being moved.</source>
          <target state="translated">Emitted before the window is moved. On Windows, calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the window from being moved.</target>
        </trans-unit>
        <trans-unit id="e6fdd715734d35139f06cf7402be7a04c8d64a65" translate="yes" xml:space="preserve">
          <source>Emitted before the window is resized. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the window from being resized.</source>
          <target state="translated">Emitted before the window is resized. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the window from being resized.</target>
        </trans-unit>
        <trans-unit id="5f0409230c240e915aaabb16687f994c0e7e0ac2" translate="yes" xml:space="preserve">
          <source>Emitted during &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; after an activity from this device was successfully resumed on another one.</source>
          <target state="translated">이 장치의 활동이 다른 장치에서 성공적으로 재개 된 후 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 중에 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="f78c7ac5e4554a7f1da3d003f0f504ea0f8dba12" translate="yes" xml:space="preserve">
          <source>Emitted during &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; before an activity from a different device wants to be resumed. You should call &lt;code&gt;event.preventDefault()&lt;/code&gt; if you want to handle this event.</source>
          <target state="translated">다른 장치의 활동을 재개하기 전에 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 중에 발생 합니다. 이 이벤트를 처리하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4de5996302b3e72e6a3d651c9a732be6e1fb3f4f" translate="yes" xml:space="preserve">
          <source>Emitted during &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; when an activity from a different device fails to be resumed.</source>
          <target state="translated">다른 장치의 활동이 재개되지 않으면 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 중에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f904e4498886bbc8fed52cf174b27c8bc5018423" translate="yes" xml:space="preserve">
          <source>Emitted during &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; when an activity from a different device wants to be resumed. You should call &lt;code&gt;event.preventDefault()&lt;/code&gt; if you want to handle this event.</source>
          <target state="translated">다른 장치의 활동을 다시 시작하려는 경우 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 중에 발생합니다. 이 이벤트를 처리하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="465d02308ca1e60411c7653a684ae35c7645d61a" translate="yes" xml:space="preserve">
          <source>Emitted just after the last chunk of the &lt;code&gt;request&lt;/code&gt;'s data has been written into the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 데이터 의 마지막 청크가 &lt;code&gt;request&lt;/code&gt; 오브젝트에 기록 된 직후에 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="130011ce5e6b267d047f55d74b8706bb482bca14" translate="yes" xml:space="preserve">
          <source>Emitted on 3-finger swipe. Possible directions are &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">세 손가락으로 스 와이프하면 발생합니다. 가능한 방향은 &lt;code&gt;up&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;down&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1c5b82cee8590268fd55b4da2c3e26849a84bc36" translate="yes" xml:space="preserve">
          <source>Emitted on trackpad rotation gesture. Continually emitted until rotation gesture is ended. The &lt;code&gt;rotation&lt;/code&gt; value on each emission is the angle in degrees rotated since the last emission. The last emitted event upon a rotation gesture will always be of value &lt;code&gt;0&lt;/code&gt;. Counter-clockwise rotation values are positive, while clockwise ones are negative.</source>
          <target state="translated">Emitted on trackpad rotation gesture. Continually emitted until rotation gesture is ended. The &lt;code&gt;rotation&lt;/code&gt; value on each emission is the angle in degrees rotated since the last emission. The last emitted event upon a rotation gesture will always be of value &lt;code&gt;0&lt;/code&gt; . Counter-clockwise rotation values are positive, while clockwise ones are negative.</target>
        </trans-unit>
        <trans-unit id="9fc5db43a743c0351afb0f0764bfa9cd912c5357" translate="yes" xml:space="preserve">
          <source>Emitted once when the window has finished being resized.</source>
          <target state="translated">Emitted once when the window has finished being resized.</target>
        </trans-unit>
        <trans-unit id="27b152389b664f62de3067e0edbfb52084a6d81a" translate="yes" xml:space="preserve">
          <source>Emitted once when the window is moved to a new position.</source>
          <target state="translated">창을 새 위치로 옮길 때 한 번 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="9470058ec17ff67c6fc09d6d6ed4471d278fa183" translate="yes" xml:space="preserve">
          <source>Emitted once, when Electron has finished initializing. On macOS, &lt;code&gt;launchInfo&lt;/code&gt; holds the &lt;code&gt;userInfo&lt;/code&gt; of the &lt;code&gt;NSUserNotification&lt;/code&gt; that was used to open the application, if it was launched from Notification Center. You can also call &lt;code&gt;app.isReady()&lt;/code&gt; to check if this event has already fired and &lt;code&gt;app.whenReady()&lt;/code&gt; to get a Promise that is fulfilled when Electron is initialized.</source>
          <target state="translated">Emitted once, when Electron has finished initializing. On macOS, &lt;code&gt;launchInfo&lt;/code&gt; holds the &lt;code&gt;userInfo&lt;/code&gt; of the &lt;code&gt;NSUserNotification&lt;/code&gt; that was used to open the application, if it was launched from Notification Center. You can also call &lt;code&gt;app.isReady()&lt;/code&gt; to check if this event has already fired and &lt;code&gt;app.whenReady()&lt;/code&gt; to get a Promise that is fulfilled when Electron is initialized.</target>
        </trans-unit>
        <trans-unit id="3baa9237762c86fd7a14080af472a316504e6b03" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; is about to be resumed on another device. If you need to update the state to be transferred, you should call &lt;code&gt;event.preventDefault()&lt;/code&gt; immediately, construct a new &lt;code&gt;userInfo&lt;/code&gt; dictionary and call &lt;code&gt;app.updateCurrentActivity()&lt;/code&gt; in a timely manner. Otherwise, the operation will fail and &lt;code&gt;continue-activity-error&lt;/code&gt; will be called.</source>
          <target state="translated">Emitted when &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; is about to be resumed on another device. If you need to update the state to be transferred, you should call &lt;code&gt;event.preventDefault()&lt;/code&gt; immediately, construct a new &lt;code&gt;userInfo&lt;/code&gt; dictionary and call &lt;code&gt;app.updateCurrentActivity()&lt;/code&gt; in a timely manner. Otherwise, the operation will fail and &lt;code&gt;continue-activity-error&lt;/code&gt; will be called.</target>
        </trans-unit>
        <trans-unit id="417aadaea3b2754064d8ed009b13576bf49b0ae7" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; is about to be resumed on another device. If you need to update the state to be transferred, you should call &lt;code&gt;event.preventDefault()&lt;/code&gt; immediately, construct a new &lt;code&gt;userInfo&lt;/code&gt; dictionary and call &lt;code&gt;app.updateCurrentActiviy()&lt;/code&gt; in a timely manner. Otherwise the operation will fail and &lt;code&gt;continue-activity-error&lt;/code&gt; will be called.</source>
          <target state="translated">다른 장치에서 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 를 다시 시작하려고 할 때 발생 합니다. 전송 될 상태를 업데이트해야하는 경우 &lt;code&gt;event.preventDefault()&lt;/code&gt; 즉시 호출 하고 새 &lt;code&gt;userInfo&lt;/code&gt; 사전을 &lt;code&gt;app.updateCurrentActiviy()&lt;/code&gt; 다음 적시에 app.updateCurrentActiviy () 를 호출 해야 합니다. 그렇지 않으면 작업이 실패하고 &lt;code&gt;continue-activity-error&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c2e0bbd1bc248659042db09b85c862ddee45796d" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;desktopCapturer.getSources()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will make it return empty sources.</source>
          <target state="translated">Emitted when &lt;code&gt;desktopCapturer.getSources()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will make it return empty sources.</target>
        </trans-unit>
        <trans-unit id="65fb37b3ebd9750e9bc93c4563911a1e2708e5a6" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;desktopCapturer.getSources()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will make it return empty sources.</source>
          <target state="translated">Emitted when &lt;code&gt;desktopCapturer.getSources()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will make it return empty sources.</target>
        </trans-unit>
        <trans-unit id="4cd37cfc519fb28a1affa1ef9afb9c0ff6d5db18" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;menu.popup()&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;menu.popup()&lt;/code&gt; 이 호출 될 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="9eb331faa70f65922ffe0c3221641a65cd391bc1" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;newDisplay&lt;/code&gt; has been added.</source>
          <target state="translated">&lt;code&gt;newDisplay&lt;/code&gt; 가 추가 되었을 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="877e413796d93bf17a88338a0d0a96b3a8b11654" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;oldDisplay&lt;/code&gt; has been removed.</source>
          <target state="translated">&lt;code&gt;oldDisplay&lt;/code&gt; 가 제거 되었을 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="5d8c5addcabcf101971164dab53804dd8fbf7e96" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getBuiltin()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getBuiltin()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b5e03c8280ce668a78e9481aab42e606adcffa0" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getBuiltin()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getBuiltin()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93090c6883ce0e0a37f5c20720b72104a140a203" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getCurrentWebContents()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getCurrentWebContents()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca2d07784fc75db14a31fe5d5c4f4b83fd7774fc" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getCurrentWebContents()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getCurrentWebContents()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe8e2fc2335f50fbc323ea96c589049983b977a3" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getCurrentWindow()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getCurrentWindow()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9416560ae4dc3e94f1a21e247136858aeef722f7" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getCurrentWindow()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getCurrentWindow()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the object from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d64f841054f3b2615c35170443d89ed6637b67f" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getGlobal()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the global from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getGlobal()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the global from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="174d6e9a12833dc04e9d5785db3d7938366f69b1" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.getGlobal()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the global from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.getGlobal()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the global from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe0cf50a965ccc49248c0d94c9b7df6b7730ed4f" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.require()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt;. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.require()&lt;/code&gt; is called in the renderer process of &lt;code&gt;webContents&lt;/code&gt; . Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9b45a6b184a2779cc6bce80aa9e250f6aaef0b5" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;remote.require()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">Emitted when &lt;code&gt;remote.require()&lt;/code&gt; is called in the renderer process. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the module from being returned. Custom value can be returned by setting &lt;code&gt;event.returnValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a66096835fcc0d2ee4fd46821def7d417e6070c3" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;webContents&lt;/code&gt; is destroyed.</source>
          <target state="translated">&lt;code&gt;webContents&lt;/code&gt; 가 삭제 될 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="b31992270ae130defee809bc2620623c4c07fb1e" translate="yes" xml:space="preserve">
          <source>Emitted when &lt;code&gt;webContents&lt;/code&gt; wants to do basic auth.</source>
          <target state="translated">&lt;code&gt;webContents&lt;/code&gt; 가 기본 인증을 수행하려고 할 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="6e69fe8c0858eb8adc37f0bad4ef13ddc72c5e93" translate="yes" xml:space="preserve">
          <source>Emitted when Chrome's accessibility support changes. This event fires when assistive technologies, such as screen readers, are enabled or disabled. See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details.</source>
          <target state="translated">Chrome의 접근성 지원이 변경 될 때 발생합니다. 이 이벤트는 스크린 리더와 같은 보조 기술이 활성화되거나 비활성화 될 때 발생합니다. 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0543fc0db58034cf2eabffc8f5d728572334b46d" translate="yes" xml:space="preserve">
          <source>Emitted when DevTools is closed.</source>
          <target state="translated">DevTools가 닫힐 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2ebdefda05caad33ad50805c6cb4ddae1f6d8374" translate="yes" xml:space="preserve">
          <source>Emitted when DevTools is focused / opened.</source>
          <target state="translated">DevTools에 초점을 맞추거나 열 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e4837d08d0bd00824848bc35bf1dced3defedd60" translate="yes" xml:space="preserve">
          <source>Emitted when DevTools is opened.</source>
          <target state="translated">DevTools가 열릴 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="27a737f8340bf8900cf853666d1c30e35c70640d" translate="yes" xml:space="preserve">
          <source>Emitted when Electron has created a new &lt;code&gt;session&lt;/code&gt;.</source>
          <target state="translated">Emitted when Electron has created a new &lt;code&gt;session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d985eed9655e6a5cf9319db92b340f6c6425ed8" translate="yes" xml:space="preserve">
          <source>Emitted when Electron has finished initializing. On macOS, &lt;code&gt;launchInfo&lt;/code&gt; holds the &lt;code&gt;userInfo&lt;/code&gt; of the &lt;code&gt;NSUserNotification&lt;/code&gt; that was used to open the application, if it was launched from Notification Center. You can call &lt;code&gt;app.isReady()&lt;/code&gt; to check if this event has already fired.</source>
          <target state="translated">Electron의 초기화가 완료되면 발생합니다. macOS에서 &lt;code&gt;launchInfo&lt;/code&gt; 는 알림 센터에서 실행 된 경우 애플리케이션을 여는 데 사용 된 &lt;code&gt;NSUserNotification&lt;/code&gt; 의 &lt;code&gt;userInfo&lt;/code&gt; 를 보유합니다 . &lt;code&gt;app.isReady()&lt;/code&gt; 를 호출 하여이 이벤트가 이미 시작되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86573cb50a9829363ac31685d73d4b31b8d82d04" translate="yes" xml:space="preserve">
          <source>Emitted when Electron has loaded its internal initialization script and is beginning to load the web page or the main script.</source>
          <target state="translated">Electron이 내부 초기화 스크립트를로드하고 웹 페이지 또는 기본 스크립트를로드하기 시작할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="63cf5bbe77b9d6b34c684cc0e314f9410db184eb" translate="yes" xml:space="preserve">
          <source>Emitted when Electron is about to download &lt;code&gt;item&lt;/code&gt; in &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">Electron이 &lt;code&gt;webContents&lt;/code&gt; 에서 &lt;code&gt;item&lt;/code&gt; 을 다운로드하려고 할 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="e5a43343cb55d7b10c98ee9a71ae0fdab1f60112" translate="yes" xml:space="preserve">
          <source>Emitted when a &lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; gets blurred.</source>
          <target state="translated">&lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; 가 흐리게 표시 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ac6777cf8eae03d45f503271c5f2ddcb7edd6e3d" translate="yes" xml:space="preserve">
          <source>Emitted when a &lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; gets focused.</source>
          <target state="translated">&lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; 가 포커스 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ce86fba1fa8255a787a4bcaa96a4ae9b4aec55d0" translate="yes" xml:space="preserve">
          <source>Emitted when a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; has been attached to this web contents.</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 가이 웹 컨텐츠에 첨부 되었을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="5140eb40710e113284096c8e93f7d63379808d18" translate="yes" xml:space="preserve">
          <source>Emitted when a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;'s web contents is being attached to this web contents. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will destroy the guest page.</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 의 웹 컨텐츠가이 웹 컨텐츠에 첨부 될 때 발생합니다 . &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 게스트 페이지가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="0e6a7a706a42531dc914d086b8fa277e6080ac05" translate="yes" xml:space="preserve">
          <source>Emitted when a &lt;code&gt;beforeunload&lt;/code&gt; event handler is attempting to cancel a page unload.</source>
          <target state="translated">&lt;code&gt;beforeunload&lt;/code&gt; 이벤트 핸들러가 페이지 언로드를 취소하려고 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="e4b1fc37564246b3d477d04f1df8da2336eb8544" translate="yes" xml:space="preserve">
          <source>Emitted when a client certificate is requested.</source>
          <target state="translated">클라이언트 인증서가 요청 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2f1913b95d70af323bd676fe9cc98a48c52aef80" translate="yes" xml:space="preserve">
          <source>Emitted when a cookie is changed because it was added, edited, removed, or expired.</source>
          <target state="translated">쿠키가 추가, 편집, 제거 또는 만료되어 쿠키가 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6f216d8010bed713b6f7e75c60a6b7fd901f9b96" translate="yes" xml:space="preserve">
          <source>Emitted when a drag operation ends on the tray or ends at another location.</source>
          <target state="translated">드래그 조작이 트레이에서 끝나거나 다른 위치에서 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4485e5944230326125e8a911c54aec85c73441c9" translate="yes" xml:space="preserve">
          <source>Emitted when a drag operation enters the tray icon.</source>
          <target state="translated">드래그 작업이 트레이 아이콘으로 들어갈 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fbe61cf95a79378a456250d3d5dca40c4688bf8d" translate="yes" xml:space="preserve">
          <source>Emitted when a drag operation exits the tray icon.</source>
          <target state="translated">드래그 작업이 트레이 아이콘을 종료 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8731c8e61d84fe1f38162d21b6143d0cea67062b" translate="yes" xml:space="preserve">
          <source>Emitted when a frame has done navigation.</source>
          <target state="translated">프레임 탐색이 완료되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b20080349685b2612be8b7cda754898c3f3228ef" translate="yes" xml:space="preserve">
          <source>Emitted when a hunspell dictionary file download fails. For details on the failure you should collect a netlog and inspect the download request.</source>
          <target state="translated">Emitted when a hunspell dictionary file download fails. For details on the failure you should collect a netlog and inspect the download request.</target>
        </trans-unit>
        <trans-unit id="2908ae7666013712663bf4ad48f391b80c20f772" translate="yes" xml:space="preserve">
          <source>Emitted when a hunspell dictionary file has been successfully downloaded</source>
          <target state="translated">Emitted when a hunspell dictionary file has been successfully downloaded</target>
        </trans-unit>
        <trans-unit id="7d9c51d41f792702b32e9ae34d1863c710c76509" translate="yes" xml:space="preserve">
          <source>Emitted when a hunspell dictionary file has been successfully initialized. This occurs after the file has been downloaded.</source>
          <target state="translated">Emitted when a hunspell dictionary file has been successfully initialized. This occurs after the file has been downloaded.</target>
        </trans-unit>
        <trans-unit id="bfd24580f3f2040d8df56417310251b42c132ede" translate="yes" xml:space="preserve">
          <source>Emitted when a hunspell dictionary file starts downloading</source>
          <target state="translated">Emitted when a hunspell dictionary file starts downloading</target>
        </trans-unit>
        <trans-unit id="a95317f0b08e166ab88443c093470afcfbf9f639" translate="yes" xml:space="preserve">
          <source>Emitted when a main frame navigation is done.</source>
          <target state="translated">Emitted when a main frame navigation is done.</target>
        </trans-unit>
        <trans-unit id="69c949d3a76ae5aca2938899d654cd2db721d4ad" translate="yes" xml:space="preserve">
          <source>Emitted when a navigation is done.</source>
          <target state="translated">탐색이 완료되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2d571d3e7767a6d87b140d1f1682d18ae5c13067" translate="yes" xml:space="preserve">
          <source>Emitted when a new &lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; is created.</source>
          <target state="translated">새 &lt;a href=&quot;browser-window&quot;&gt;browserWindow&lt;/a&gt; 가 만들어 질 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="f7c38e828469adf2f975d122032a28e312eb7389" translate="yes" xml:space="preserve">
          <source>Emitted when a new &lt;a href=&quot;web-contents&quot;&gt;webContents&lt;/a&gt; is created.</source>
          <target state="translated">새 &lt;a href=&quot;web-contents&quot;&gt;webContents&lt;/a&gt; 가 작성 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4b8fd494cf348b8c61327c09ee868a136ad07df6" translate="yes" xml:space="preserve">
          <source>Emitted when a new frame is generated. Only the dirty area is passed in the buffer.</source>
          <target state="translated">새 프레임이 생성 될 때 발생합니다. 더티 영역 만 버퍼에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="28ca5ff3d15e9b375ce0a6af516384c8e2427dcf" translate="yes" xml:space="preserve">
          <source>Emitted when a page's theme color changes. This is usually due to encountering a meta tag:</source>
          <target state="translated">페이지의 테마 색상이 변경 될 때 발생합니다. 일반적으로 메타 태그가 발생하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ab946d9411f8318bc8097cf827d774a7cec53682" translate="yes" xml:space="preserve">
          <source>Emitted when a plugin process has crashed.</source>
          <target state="translated">플러그인 프로세스가 중단되었을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="81a9fc98544f9b663cec9a58ac1e8a2880a7db26" translate="yes" xml:space="preserve">
          <source>Emitted when a popup is closed either manually or with &lt;code&gt;menu.closePopup()&lt;/code&gt;.</source>
          <target state="translated">팝업이 수동으로 또는 &lt;code&gt;menu.closePopup()&lt;/code&gt; 으로 닫힐 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="9807e0ed0c749cdb09878362a95ecc0b95e20fe9" translate="yes" xml:space="preserve">
          <source>Emitted when a redirect is received while requesting a resource.</source>
          <target state="translated">리소스를 요청하는 동안 리디렉션이 수신되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="370e46c7cdddc8bbf0696c178e99defb3076a095" translate="yes" xml:space="preserve">
          <source>Emitted when a render process requests preconnection to a URL, generally due to a &lt;a href=&quot;https://w3c.github.io/resource-hints/&quot;&gt;resource hint&lt;/a&gt;.</source>
          <target state="translated">Emitted when a render process requests preconnection to a URL, generally due to a &lt;a href=&quot;https://w3c.github.io/resource-hints/&quot;&gt;resource hint&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ff1dbb09ca9d6b451f2f033535ffef076e97499c" translate="yes" xml:space="preserve">
          <source>Emitted when a request has been canceled during an ongoing HTTP transaction.</source>
          <target state="translated">진행중인 HTTP 트랜잭션 중에 요청이 취소 된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2bb618c71c2c965775f7171a6744790c32f6a540" translate="yes" xml:space="preserve">
          <source>Emitted when a result is available for [&lt;code&gt;webContents.findInPage&lt;/code&gt;] request.</source>
          <target state="translated">[ &lt;code&gt;webContents.findInPage&lt;/code&gt; ] 요청에 대한 결과를 사용할 수있을 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="a21d9abde4ed21fd0b6b183c8b2a1ce0f714d501" translate="yes" xml:space="preserve">
          <source>Emitted when a user or the page wants to start navigation. It can happen when the &lt;code&gt;window.location&lt;/code&gt; object is changed or a user clicks a link in the page.</source>
          <target state="translated">사용자 또는 페이지가 탐색을 시작하려고 할 때 발생합니다. &lt;code&gt;window.location&lt;/code&gt; 객체가 변경되거나 사용자가 페이지에서 링크를 클릭 하면 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="479109b5ba9737c0308a093aeda33346fd9cf8df" translate="yes" xml:space="preserve">
          <source>Emitted when all windows have been closed and the application will quit. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behavior, which is terminating the application.</source>
          <target state="translated">Emitted when all windows have been closed and the application will quit. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behavior, which is terminating the application.</target>
        </trans-unit>
        <trans-unit id="4e2a266d21217c39d88613c6f7816feef77bd5d9" translate="yes" xml:space="preserve">
          <source>Emitted when all windows have been closed and the application will quit. Calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the default behaviour, which is terminating the application.</source>
          <target state="translated">모든 창이 닫히고 응용 프로그램이 종료 될 때 발생합니다. &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 응용 프로그램이 종료되는 기본 동작이 방지됩니다.</target>
        </trans-unit>
        <trans-unit id="0b8d72ca9acc4cd8d9b0768bec8987c2a91c2237" translate="yes" xml:space="preserve">
          <source>Emitted when all windows have been closed.</source>
          <target state="translated">모든 창이 닫히면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="650bd5cd09325062212f42780b6bed539249887d" translate="yes" xml:space="preserve">
          <source>Emitted when an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms646275(v=vs.85).aspx&quot;&gt;App Command&lt;/a&gt; is invoked. These are typically related to keyboard media keys or browser commands, as well as the &quot;Back&quot; button built into some mice on Windows.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms646275(v=vs.85).aspx&quot;&gt;앱 명령&lt;/a&gt; 이 호출 될 때 발생합니다. 이들은 일반적으로 키보드 미디어 키 또는 브라우저 명령과 Windows의 일부 마우스에 내장 된 &quot;뒤로&quot;버튼과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f6cd4230f904a548966625e11448917a298fa87" translate="yes" xml:space="preserve">
          <source>Emitted when an authenticating proxy is asking for user credentials.</source>
          <target state="translated">인증 프록시가 사용자 자격 증명을 요구할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="40408c9d6ec0936c6a5aa33fe2d9d1fbedb9627a" translate="yes" xml:space="preserve">
          <source>Emitted when an error was encountered while streaming response data events. For instance, if the server closes the underlying while the response is still streaming, an &lt;code&gt;error&lt;/code&gt; event will be emitted on the response object and a &lt;code&gt;close&lt;/code&gt; event will subsequently follow on the request object.</source>
          <target state="translated">응답 데이터 이벤트를 스트리밍하는 동안 오류가 발생했을 때 발생합니다. 예를 들어, 응답이 여전히 스트리밍되는 동안 서버가 기본을 닫으면 응답 오브젝트에서 &lt;code&gt;error&lt;/code&gt; 이벤트가 생성되고 후속하여 요청 오브젝트에서 &lt;code&gt;close&lt;/code&gt; 이벤트가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1c67298407c9e856ea7c4196c44118d9aa3cc565" translate="yes" xml:space="preserve">
          <source>Emitted when an in-page navigation happened in any frame.</source>
          <target state="translated">Emitted when an in-page navigation happened in any frame.</target>
        </trans-unit>
        <trans-unit id="d943acf5acec8e40d64d9a924a91a58a25931017" translate="yes" xml:space="preserve">
          <source>Emitted when an in-page navigation happened.</source>
          <target state="translated">인 페이지 내비게이션이 발생했을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cfe0b23ba1bca9e237a3ac1a5ba2a666db3ae954" translate="yes" xml:space="preserve">
          <source>Emitted when an update has been downloaded.</source>
          <target state="translated">업데이트가 다운로드되었을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="977cf1a8622f89af01171614ec673dea0d2f3550" translate="yes" xml:space="preserve">
          <source>Emitted when any dragged items are dropped on the tray icon.</source>
          <target state="translated">트레이 아이콘에 드래그 한 항목을 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="170c09f7b52c9a3de35379c3318aacc7bc045209" translate="yes" xml:space="preserve">
          <source>Emitted when any frame (including main) starts navigating. &lt;code&gt;isInplace&lt;/code&gt; will be &lt;code&gt;true&lt;/code&gt; for in-page navigations.</source>
          <target state="translated">Emitted when any frame (including main) starts navigating. &lt;code&gt;isInplace&lt;/code&gt; will be &lt;code&gt;true&lt;/code&gt; for in-page navigations.</target>
        </trans-unit>
        <trans-unit id="241910159f3059e2bbb20583ef6dd63fd5fe455a" translate="yes" xml:space="preserve">
          <source>Emitted when any frame navigation is done.</source>
          <target state="translated">Emitted when any frame navigation is done.</target>
        </trans-unit>
        <trans-unit id="7778e4fdc798d6d8475262fbabd0522dd00207b7" translate="yes" xml:space="preserve">
          <source>Emitted when bluetooth device needs to be selected on call to &lt;code&gt;navigator.bluetooth.requestDevice&lt;/code&gt;. To use &lt;code&gt;navigator.bluetooth&lt;/code&gt; api &lt;code&gt;webBluetooth&lt;/code&gt; should be enabled. If &lt;code&gt;event.preventDefault&lt;/code&gt; is not called, first available device will be selected. &lt;code&gt;callback&lt;/code&gt; should be called with &lt;code&gt;deviceId&lt;/code&gt; to be selected, passing empty string to &lt;code&gt;callback&lt;/code&gt; will cancel the request.</source>
          <target state="translated">&lt;code&gt;navigator.bluetooth.requestDevice&lt;/code&gt; 호출시 블루투스 장치를 선택해야 할 때 발생합니다 . &lt;code&gt;navigator.bluetooth&lt;/code&gt; API 를 사용하려면 &lt;code&gt;webBluetooth&lt;/code&gt; 가 활성화되어 있어야합니다. 경우 &lt;code&gt;event.preventDefault&lt;/code&gt; 호출되지 않습니다, 첫 번째 사용 가능한 장치가 선택됩니다. &lt;code&gt;deviceId&lt;/code&gt; 를 선택 하여 &lt;code&gt;callback&lt;/code&gt; 해야하며 빈 문자열을 &lt;code&gt;callback&lt;/code&gt; 전달 하면 요청이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="5b128d9d5e8f0e93ba4d46593fa913471d717484" translate="yes" xml:space="preserve">
          <source>Emitted when checking if an update has started.</source>
          <target state="translated">업데이트가 시작되었는지 확인할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="adbcb21df6dd6d232ed44234609b829093cfec3e" translate="yes" xml:space="preserve">
          <source>Emitted when debugging session is terminated. This happens either when &lt;code&gt;webContents&lt;/code&gt; is closed or devtools is invoked for the attached &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">디버깅 세션이 종료 될 때 발생합니다. 이는 &lt;code&gt;webContents&lt;/code&gt; 가 닫히거나 첨부 된 &lt;code&gt;webContents&lt;/code&gt; 에 대해 devtools가 호출 될 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="db5ea539714767814e66602ee837def2991206eb" translate="yes" xml:space="preserve">
          <source>Emitted when details regarding a requested resource are available. &lt;code&gt;status&lt;/code&gt; indicates the socket connection to download the resource.</source>
          <target state="translated">요청 된 자원에 대한 세부 사항이 사용 가능할 때 발생합니다. &lt;code&gt;status&lt;/code&gt; 는 리소스를 다운로드하기위한 소켓 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="67efb111736b8a330e2177718d55e35258fe1cfa" translate="yes" xml:space="preserve">
          <source>Emitted when dragged files are dropped in the tray icon.</source>
          <target state="translated">드래그 한 파일을 트레이 아이콘에 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="961932a174a481e2520c9bbf9be153c2213e4af9" translate="yes" xml:space="preserve">
          <source>Emitted when dragged text is dropped in the tray icon.</source>
          <target state="translated">트레이 아이콘에 드래그 한 텍스트를 놓을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cd926f0c0c7be489c258a39f9d93bfc428bc02e7" translate="yes" xml:space="preserve">
          <source>Emitted when failed to verify the &lt;code&gt;certificate&lt;/code&gt; for &lt;code&gt;url&lt;/code&gt;, to trust the certificate you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(true)&lt;/code&gt;.</source>
          <target state="translated">검증에 실패했을 때 방출 된 &lt;code&gt;certificate&lt;/code&gt; 에 대한 &lt;code&gt;url&lt;/code&gt; 당신이 가진 기본 동작을 방지해야 인증서를 신뢰하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 및 전화 &lt;code&gt;callback(true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78abb3d592c93f6b544ff3d26b8cd5732dc6daaf" translate="yes" xml:space="preserve">
          <source>Emitted when failed to verify the &lt;code&gt;certificate&lt;/code&gt; for &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">검증에 실패했을 때 방출 된 &lt;code&gt;certificate&lt;/code&gt; 에 대한 &lt;code&gt;url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9a7a80a1a827d71cf2c9ec5113f5f5e9131629a" translate="yes" xml:space="preserve">
          <source>Emitted when mac application become active. Difference from &lt;code&gt;activate&lt;/code&gt; event is that &lt;code&gt;did-become-active&lt;/code&gt; is emitted every time the app becomes active, not only when Dock icon is clicked or application is re-launched.</source>
          <target state="translated">Emitted when mac application become active. Difference from &lt;code&gt;activate&lt;/code&gt; event is that &lt;code&gt;did-become-active&lt;/code&gt; is emitted every time the app becomes active, not only when Dock icon is clicked or application is re-launched.</target>
        </trans-unit>
        <trans-unit id="ac14b365449e7b1878c21174db4031c877a50c38" translate="yes" xml:space="preserve">
          <source>Emitted when media is paused or done playing.</source>
          <target state="translated">미디어가 일시 정지되거나 재생이 완료되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cfcc53a5e8da9b1a458292a21f99e96a1e7189cb" translate="yes" xml:space="preserve">
          <source>Emitted when media starts playing.</source>
          <target state="translated">미디어 재생이 시작될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="aa7003b7386f1e9166c5c354e26fa26fadd685e1" translate="yes" xml:space="preserve">
          <source>Emitted when mouse moves over a link or the keyboard moves the focus to a link.</source>
          <target state="translated">마우스가 링크 위로 이동하거나 키보드가 포커스를 링크로 이동할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="327736996b7e6b817a38a88e2dc07a8a1743516e" translate="yes" xml:space="preserve">
          <source>Emitted when one or more metrics change in a &lt;code&gt;display&lt;/code&gt;. The &lt;code&gt;changedMetrics&lt;/code&gt; is an array of strings that describe the changes. Possible changes are &lt;code&gt;bounds&lt;/code&gt;, &lt;code&gt;workArea&lt;/code&gt;, &lt;code&gt;scaleFactor&lt;/code&gt; and &lt;code&gt;rotation&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 메트릭이 &lt;code&gt;display&lt;/code&gt; 에서 변경 될 때 발생 합니다 . &lt;code&gt;changedMetrics&lt;/code&gt; 는 변화를 설명하는 문자열의 배열이다. 가능한 변경 사항은 &lt;code&gt;bounds&lt;/code&gt; , &lt;code&gt;workArea&lt;/code&gt; , &lt;code&gt;scaleFactor&lt;/code&gt; 및 &lt;code&gt;rotation&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="53fb273d0ee471f8c84921d0e8011410ae5cc958" translate="yes" xml:space="preserve">
          <source>Emitted when one or more transactions have been updated.</source>
          <target state="translated">하나 이상의 트랜잭션이 업데이트되었을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="827f5348e83b370958195a09a99fe28edd6ecfd9" translate="yes" xml:space="preserve">
          <source>Emitted when page receives favicon urls.</source>
          <target state="translated">페이지가 파비콘 URL을 수신 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ff198e6e98fbc57fc635d5083364ca609a24400e" translate="yes" xml:space="preserve">
          <source>Emitted when scroll wheel event phase filed upon reaching the edge of element.</source>
          <target state="translated">요소의 가장자리에 도달했을 때 스크롤 휠 이벤트 단계가 제출 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ac0b34860998baeecfa3ec14cfcbcccffdce6663" translate="yes" xml:space="preserve">
          <source>Emitted when scroll wheel event phase has begun.</source>
          <target state="translated">스크롤 휠 이벤트 단계가 시작될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="239aa9c8e4d60d67c5a338b255f6642d194d9bf6" translate="yes" xml:space="preserve">
          <source>Emitted when scroll wheel event phase has ended.</source>
          <target state="translated">스크롤 휠 이벤트 단계가 종료되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eb572c5ef7c9102d00b7d3c71f125ba1644d8b14" translate="yes" xml:space="preserve">
          <source>Emitted when system changes to battery power.</source>
          <target state="translated">시스템이 배터리 전원으로 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="92e5b636af34f427465bc557cce3f6dcce8ed30a" translate="yes" xml:space="preserve">
          <source>Emitted when system is resuming.</source>
          <target state="translated">시스템이 재개 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="02434f3e590ef65b627a31b94abefcf7e94d2a0f" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;net&lt;/code&gt; module fails to issue a network request. Typically when the &lt;code&gt;request&lt;/code&gt; object emits an &lt;code&gt;error&lt;/code&gt; event, a &lt;code&gt;close&lt;/code&gt; event will subsequently follow and no response object will be provided.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈이 네트워크 요청을 발행하지 못할 때 발생합니다. 일반적으로 &lt;code&gt;request&lt;/code&gt; 오브젝트가 &lt;code&gt;error&lt;/code&gt; 이벤트를 생성하면 &lt;code&gt;close&lt;/code&gt; 이벤트가 계속 발생하고 응답 오브젝트가 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="420b43c3402412f7df96aa90666e2b8d9aa61902" translate="yes" xml:space="preserve">
          <source>Emitted when the &lt;code&gt;request&lt;/code&gt; is aborted. The &lt;code&gt;abort&lt;/code&gt; event will not be fired if the &lt;code&gt;request&lt;/code&gt; is already closed.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 이 중단 되면 발생합니다 . &lt;code&gt;abort&lt;/code&gt; 경우, 이벤트는 트리거되지 않습니다 &lt;code&gt;request&lt;/code&gt; 이미 닫혀 있습니다.</target>
        </trans-unit>
        <trans-unit id="f646260f21fe05e3c0e6f3811bf7e218caa80b6f" translate="yes" xml:space="preserve">
          <source>Emitted when the GPU process crashes or is killed.</source>
          <target state="translated">Emitted when the GPU process crashes or is killed.</target>
        </trans-unit>
        <trans-unit id="c9516017b3584b2ca276f73fd2d04b398dd590d3" translate="yes" xml:space="preserve">
          <source>Emitted when the application has finished basic startup. On Windows and Linux, the &lt;code&gt;will-finish-launching&lt;/code&gt; event is the same as the &lt;code&gt;ready&lt;/code&gt; event; on macOS, this event represents the &lt;code&gt;applicationWillFinishLaunching&lt;/code&gt; notification of &lt;code&gt;NSApplication&lt;/code&gt;. You would usually set up listeners for the &lt;code&gt;open-file&lt;/code&gt; and &lt;code&gt;open-url&lt;/code&gt; events here, and start the crash reporter and auto updater.</source>
          <target state="translated">응용 프로그램이 기본 시작을 마치면 발생합니다. Windows 및 Linux에서 &lt;code&gt;will-finish-launching&lt;/code&gt; 이벤트는 &lt;code&gt;ready&lt;/code&gt; 이벤트 와 동일합니다 . macOS에서이 이벤트는 &lt;code&gt;NSApplication&lt;/code&gt; 의 &lt;code&gt;applicationWillFinishLaunching&lt;/code&gt; 알림을 나타냅니다 . 일반적으로 여기에서 &lt;code&gt;open-url&lt;/code&gt; &lt;code&gt;open-file&lt;/code&gt; 및 열린 URL 이벤트에 대한 리스너를 설정 하고 충돌 리포터 및 자동 업데이트 프로그램을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="48bfe6fa6726d19c6fd4b39ba9b29f99c8a8c38c" translate="yes" xml:space="preserve">
          <source>Emitted when the application is activated. Various actions can trigger this event, such as launching the application for the first time, attempting to re-launch the application when it's already running, or clicking on the application's dock or taskbar icon.</source>
          <target state="translated">응용 프로그램이 활성화 될 때 발생합니다. 처음으로 응용 프로그램을 시작하거나 응용 프로그램이 이미 실행 중일 때 응용 프로그램을 다시 시작하거나 응용 프로그램의 도크 또는 작업 표시 줄 아이콘을 클릭하는 등의 다양한 작업으로 인해이 이벤트가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e259c2528b25db4e2a818761500b76ed0572b86f" translate="yes" xml:space="preserve">
          <source>Emitted when the application is quitting.</source>
          <target state="translated">응용 프로그램이 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="932107041b42d04ab67dab261ab6dec06a143811" translate="yes" xml:space="preserve">
          <source>Emitted when the associated window logs a console message.</source>
          <target state="translated">Emitted when the associated window logs a console message.</target>
        </trans-unit>
        <trans-unit id="c2813f691b94a43787c8eb6ba4f0c0e8ff3d9289" translate="yes" xml:space="preserve">
          <source>Emitted when the associated window logs a console message. Will not be emitted for windows with &lt;em&gt;offscreen rendering&lt;/em&gt; enabled.</source>
          <target state="translated">연결된 창이 콘솔 메시지를 기록 할 때 발생합니다. &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 활성화 된 창에서는 방출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2fc29b400360d514e44035924de904ae6a91cb49" translate="yes" xml:space="preserve">
          <source>Emitted when the child process unexpectedly disappears. This is normally because it was crashed or killed. It does not include renderer processes.</source>
          <target state="translated">Emitted when the child process unexpectedly disappears. This is normally because it was crashed or killed. It does not include renderer processes.</target>
        </trans-unit>
        <trans-unit id="e09dcc7d1b30c098e287f37d0fdbe5817a945cc3" translate="yes" xml:space="preserve">
          <source>Emitted when the cursor's type changes. The &lt;code&gt;type&lt;/code&gt; parameter can be &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;crosshair&lt;/code&gt;, &lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;wait&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;e-resize&lt;/code&gt;, &lt;code&gt;n-resize&lt;/code&gt;, &lt;code&gt;ne-resize&lt;/code&gt;, &lt;code&gt;nw-resize&lt;/code&gt;, &lt;code&gt;s-resize&lt;/code&gt;, &lt;code&gt;se-resize&lt;/code&gt;, &lt;code&gt;sw-resize&lt;/code&gt;, &lt;code&gt;w-resize&lt;/code&gt;, &lt;code&gt;ns-resize&lt;/code&gt;, &lt;code&gt;ew-resize&lt;/code&gt;, &lt;code&gt;nesw-resize&lt;/code&gt;, &lt;code&gt;nwse-resize&lt;/code&gt;, &lt;code&gt;col-resize&lt;/code&gt;, &lt;code&gt;row-resize&lt;/code&gt;, &lt;code&gt;m-panning&lt;/code&gt;, &lt;code&gt;e-panning&lt;/code&gt;, &lt;code&gt;n-panning&lt;/code&gt;, &lt;code&gt;ne-panning&lt;/code&gt;, &lt;code&gt;nw-panning&lt;/code&gt;, &lt;code&gt;s-panning&lt;/code&gt;, &lt;code&gt;se-panning&lt;/code&gt;, &lt;code&gt;sw-panning&lt;/code&gt;, &lt;code&gt;w-panning&lt;/code&gt;, &lt;code&gt;move&lt;/code&gt;, &lt;code&gt;vertical-text&lt;/code&gt;, &lt;code&gt;cell&lt;/code&gt;, &lt;code&gt;context-menu&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;nodrop&lt;/code&gt;, &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;not-allowed&lt;/code&gt;, &lt;code&gt;zoom-in&lt;/code&gt;, &lt;code&gt;zoom-out&lt;/code&gt;, &lt;code&gt;grab&lt;/code&gt;, &lt;code&gt;grabbing&lt;/code&gt; or &lt;code&gt;custom&lt;/code&gt;.</source>
          <target state="translated">커서 유형이 변경 될 때 발생합니다. &lt;code&gt;type&lt;/code&gt; 매개 변수가 될 수있는 &lt;code&gt;default&lt;/code&gt; , &lt;code&gt;crosshair&lt;/code&gt; , &lt;code&gt;pointer&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;wait&lt;/code&gt; , &lt;code&gt;help&lt;/code&gt; , &lt;code&gt;e-resize&lt;/code&gt; , &lt;code&gt;n-resize&lt;/code&gt; , &lt;code&gt;ne-resize&lt;/code&gt; , &lt;code&gt;nw-resize&lt;/code&gt; , &lt;code&gt;s-resize&lt;/code&gt; , &lt;code&gt;se-resize&lt;/code&gt; , &lt;code&gt;sw-resize&lt;/code&gt; , &lt;code&gt;w-resize&lt;/code&gt; , &lt;code&gt;ns-resize&lt;/code&gt; , &lt;code&gt;ew-resize&lt;/code&gt; , &lt;code&gt;nesw-resize&lt;/code&gt; , &lt;code&gt;nwse-resize&lt;/code&gt; , &lt;code&gt;col-resize&lt;/code&gt; , &lt;code&gt;row-resize&lt;/code&gt; , &lt;code&gt;m-panning&lt;/code&gt; , &lt;code&gt;e-panning&lt;/code&gt; , &lt;code&gt;n-panning&lt;/code&gt; , &lt;code&gt;ne-panning&lt;/code&gt; , &lt;code&gt;nw-panning&lt;/code&gt; , &lt;code&gt;s-panning&lt;/code&gt; , &lt;code&gt;se-panning&lt;/code&gt; , &lt;code&gt;sw-panning&lt;/code&gt; , &lt;code&gt;w-panning&lt;/code&gt; , &lt;code&gt;move&lt;/code&gt; , &lt;code&gt;vertical-text&lt;/code&gt; , &lt;code&gt;cell&lt;/code&gt; , &lt;code&gt;context-menu&lt;/code&gt; , &lt;code&gt;alias&lt;/code&gt; , &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;nodrop&lt;/code&gt; , &lt;code&gt;copy&lt;/code&gt; , &lt;code&gt;none&lt;/code&gt; , &lt;code&gt;not-allowed&lt;/code&gt; , &lt;code&gt;zoom-in&lt;/code&gt; , &lt;code&gt;zoom-out&lt;/code&gt; , &lt;code&gt;grab&lt;/code&gt; , &lt;code&gt;grabbing&lt;/code&gt; 또는 &lt;code&gt;custom&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b62ffd1793ca4b3e048125c1aafc62ae9cad9c2" translate="yes" xml:space="preserve">
          <source>Emitted when the debugging session is terminated. This happens either when &lt;code&gt;webContents&lt;/code&gt; is closed or devtools is invoked for the attached &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">Emitted when the debugging session is terminated. This happens either when &lt;code&gt;webContents&lt;/code&gt; is closed or devtools is invoked for the attached &lt;code&gt;webContents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13be4e077bd4b556121a1b585eb56965859517a0" translate="yes" xml:space="preserve">
          <source>Emitted when the devtools window instructs the webContents to reload</source>
          <target state="translated">devtools 창이 webContents에 다시로드를 지시 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d7e0ab0300492f425613d07ca1679fb5440c9be" translate="yes" xml:space="preserve">
          <source>Emitted when the document changed its title, calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the native window's title from changing.</source>
          <target state="translated">문서의 제목이 변경되었을 때 발생하는 &lt;code&gt;event.preventDefault()&lt;/code&gt; 를 호출 하면 기본 창의 제목이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c19d82abadde69b1ffdb1ae97ad4d804e21bc96" translate="yes" xml:space="preserve">
          <source>Emitted when the document changed its title, calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the native window's title from changing. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file URL.</source>
          <target state="translated">Emitted when the document changed its title, calling &lt;code&gt;event.preventDefault()&lt;/code&gt; will prevent the native window's title from changing. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file URL.</target>
        </trans-unit>
        <trans-unit id="a21e7b28d3c4affdc72e25b60f547c65615a7f87" translate="yes" xml:space="preserve">
          <source>Emitted when the document in the given frame is loaded.</source>
          <target state="translated">지정된 프레임의 문서가로드 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c944bdc5e8e08cdc4fadb7c13b4ba6e69f06fffa" translate="yes" xml:space="preserve">
          <source>Emitted when the download has been updated and is not done.</source>
          <target state="translated">다운로드가 업데이트되고 완료되지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ab131dc52a4664ee20a5f2be054a920988ba715" translate="yes" xml:space="preserve">
          <source>Emitted when the download is in a terminal state. This includes a completed download, a cancelled download (via &lt;code&gt;downloadItem.cancel()&lt;/code&gt;), and interrupted download that can't be resumed.</source>
          <target state="translated">다운로드가 터미널 상태에있을 때 발생합니다. 여기에는 완료된 다운로드, 취소 된 다운로드 ( &lt;code&gt;downloadItem.cancel()&lt;/code&gt; 를 통한 ) 및 다시 시작할 수없는 중단 된 다운로드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5e66fdd9610b56ebb585f7103b2626392774294d" translate="yes" xml:space="preserve">
          <source>Emitted when the gpu process crashes or is killed.</source>
          <target state="translated">GPU 프로세스가 충돌하거나 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6dca83af6e42160503bdc457f3b5469108095358" translate="yes" xml:space="preserve">
          <source>Emitted when the mouse clicks the tray icon.</source>
          <target state="translated">Emitted when the mouse clicks the tray icon.</target>
        </trans-unit>
        <trans-unit id="236554b97fca61c8e3abfaa47cd2e41633bb12fd" translate="yes" xml:space="preserve">
          <source>Emitted when the mouse enters the tray icon.</source>
          <target state="translated">마우스가 트레이 아이콘에 들어갈 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fcb97f74f385bfb1d394b6affc918b245d7c4105" translate="yes" xml:space="preserve">
          <source>Emitted when the mouse exits the tray icon.</source>
          <target state="translated">마우스가 트레이 아이콘을 나갈 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7a5b92cc42b4f07c9b1c2eb6d092be66fe7edd3e" translate="yes" xml:space="preserve">
          <source>Emitted when the mouse is released from clicking the tray icon.</source>
          <target state="translated">Emitted when the mouse is released from clicking the tray icon.</target>
        </trans-unit>
        <trans-unit id="96c6efbf64156a64f0e41841ff7595a8db90d594" translate="yes" xml:space="preserve">
          <source>Emitted when the mouse moves in the tray icon.</source>
          <target state="translated">트레이 아이콘에서 마우스가 움직일 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2799da60dcf9051a44f9f3c22bc6d1cfef2a982" translate="yes" xml:space="preserve">
          <source>Emitted when the native new tab button is clicked.</source>
          <target state="translated">기본 새 탭 버튼을 클릭하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="42047cd1b867562128dda0b273151ed794905976" translate="yes" xml:space="preserve">
          <source>Emitted when the navigation is done, i.e. the spinner of the tab has stopped spinning, and the &lt;code&gt;onload&lt;/code&gt; event was dispatched.</source>
          <target state="translated">탐색이 완료 될 때 발생합니다. 즉, 탭의 회전자가 회전을 멈추고 &lt;code&gt;onload&lt;/code&gt; 이벤트가 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="8fc8bb283abf17f9316f457bf7ff8b6822f81da6" translate="yes" xml:space="preserve">
          <source>Emitted when the notification is clicked by the user.</source>
          <target state="translated">사용자가 알림을 클릭하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9506ea5d83deea0dbd2cadd0662c5f49b2aa0462" translate="yes" xml:space="preserve">
          <source>Emitted when the notification is closed by manual intervention from the user.</source>
          <target state="translated">사용자의 수동 개입으로 알림을 닫을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="352fd1f6b1250c57f96d1cb199b4f3bf85d8abf0" translate="yes" xml:space="preserve">
          <source>Emitted when the notification is shown to the user, note this could be fired multiple times as a notification can be shown multiple times through the &lt;code&gt;show()&lt;/code&gt; method.</source>
          <target state="translated">알림이 사용자에게 표시 될 때 발생하는 알림으로, &lt;code&gt;show()&lt;/code&gt; 메서드를 통해 알림을 여러 번 표시 할 수 있으므로이 알림이 여러 번 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcfd202d0c38e301f0baa9c4a1b69f34c1e3cfa3" translate="yes" xml:space="preserve">
          <source>Emitted when the page requests to open a new window for a &lt;code&gt;url&lt;/code&gt;. It could be requested by &lt;code&gt;window.open&lt;/code&gt; or an external link like &lt;code&gt;&amp;lt;a target='_blank'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">페이지가 &lt;code&gt;url&lt;/code&gt; 에 대한 새 창을 열도록 요청할 때 발생합니다 . &lt;code&gt;window.open&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;a target='_blank'&amp;gt;&lt;/code&gt; 와 같은 외부 링크 로 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fd07750b18e2f93cbb6b6effad8b029ed991a58" translate="yes" xml:space="preserve">
          <source>Emitted when the preload script &lt;code&gt;preloadPath&lt;/code&gt; throws an unhandled exception &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">Emitted when the preload script &lt;code&gt;preloadPath&lt;/code&gt; throws an unhandled exception &lt;code&gt;error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5795008df93efac1501c21abfda52d8d316bce5" translate="yes" xml:space="preserve">
          <source>Emitted when the renderer process crashes or is killed.</source>
          <target state="translated">렌더러 프로세스가 충돌하거나 종료 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e0eba82acf9ae4bfe49940c651a2832dc7ae1040" translate="yes" xml:space="preserve">
          <source>Emitted when the renderer process of &lt;code&gt;webContents&lt;/code&gt; crashes or is killed.</source>
          <target state="translated">Emitted when the renderer process of &lt;code&gt;webContents&lt;/code&gt; crashes or is killed.</target>
        </trans-unit>
        <trans-unit id="61ccaed536e14ded0869d6daae41436b2bd00135" translate="yes" xml:space="preserve">
          <source>Emitted when the renderer process sends a synchronous message via &lt;code&gt;ipcRenderer.sendSync()&lt;/code&gt;.</source>
          <target state="translated">Emitted when the renderer process sends a synchronous message via &lt;code&gt;ipcRenderer.sendSync()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43cd5f339a91afced39607f27bf2409370687085" translate="yes" xml:space="preserve">
          <source>Emitted when the renderer process sends an asynchronous message via &lt;code&gt;ipcRenderer.send()&lt;/code&gt;.</source>
          <target state="translated">Emitted when the renderer process sends an asynchronous message via &lt;code&gt;ipcRenderer.send()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee996470f452ac3aa50208859f67db078dfe8ccf" translate="yes" xml:space="preserve">
          <source>Emitted when the renderer process unexpectedly disappears. This is normally because it was crashed or killed.</source>
          <target state="translated">Emitted when the renderer process unexpectedly disappears. This is normally because it was crashed or killed.</target>
        </trans-unit>
        <trans-unit id="aea8651bccd509cad654f7d4aa419632c1d36707" translate="yes" xml:space="preserve">
          <source>Emitted when the server returns a redirect response (e.g. 301 Moved Permanently). Calling &lt;a href=&quot;#requestfollowredirect&quot;&gt;&lt;code&gt;request.followRedirect&lt;/code&gt;&lt;/a&gt; will continue with the redirection. If this event is handled, &lt;a href=&quot;#requestfollowredirect&quot;&gt;&lt;code&gt;request.followRedirect&lt;/code&gt;&lt;/a&gt; must be called &lt;strong&gt;synchronously&lt;/strong&gt;, otherwise the request will be cancelled.</source>
          <target state="translated">Emitted when the server returns a redirect response (e.g. 301 Moved Permanently). Calling &lt;a href=&quot;#requestfollowredirect&quot;&gt; &lt;code&gt;request.followRedirect&lt;/code&gt; &lt;/a&gt; will continue with the redirection. If this event is handled, &lt;a href=&quot;#requestfollowredirect&quot;&gt; &lt;code&gt;request.followRedirect&lt;/code&gt; &lt;/a&gt; must be called &lt;strong&gt;synchronously&lt;/strong&gt;, otherwise the request will be cancelled.</target>
        </trans-unit>
        <trans-unit id="3faa41668a7e7e3a666fe1adbb2f40d14dd4d10c" translate="yes" xml:space="preserve">
          <source>Emitted when the system changes to AC power.</source>
          <target state="translated">시스템이 AC 전원으로 변경 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fffa7350dd75a156e56f724732c9383696b121d2" translate="yes" xml:space="preserve">
          <source>Emitted when the system context menu is triggered on the window, this is normally only triggered when the user right clicks on the non-client area of your window. This is the window titlebar or any area you have declared as &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; in a frameless window.</source>
          <target state="translated">Emitted when the system context menu is triggered on the window, this is normally only triggered when the user right clicks on the non-client area of your window. This is the window titlebar or any area you have declared as &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; in a frameless window.</target>
        </trans-unit>
        <trans-unit id="1704b6f845047b170a56ff3aa2abc810418975f1" translate="yes" xml:space="preserve">
          <source>Emitted when the system is about to lock the screen.</source>
          <target state="translated">Emitted when the system is about to lock the screen.</target>
        </trans-unit>
        <trans-unit id="abad6ff9973c278a2a24b456a725f02fa7e26b3c" translate="yes" xml:space="preserve">
          <source>Emitted when the system is about to reboot or shut down. If the event handler invokes &lt;code&gt;e.preventDefault()&lt;/code&gt;, Electron will attempt to delay system shutdown in order for the app to exit cleanly. If &lt;code&gt;e.preventDefault()&lt;/code&gt; is called, the app should exit as soon as possible by calling something like &lt;code&gt;app.quit()&lt;/code&gt;.</source>
          <target state="translated">시스템을 재부팅하거나 종료하려고 할 때 발생합니다. 이벤트 핸들러가 &lt;code&gt;e.preventDefault()&lt;/code&gt; 호출하면 Electron은 앱이 완전히 종료되도록 시스템 종료를 지연시킵니다. 경우 &lt;code&gt;e.preventDefault()&lt;/code&gt; 호출되면 응용 프로그램은 같은 호출하여 가능한 한 빨리 종료해야한다 &lt;code&gt;app.quit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa9cba193c5d8d1a1692314f7bc542c877a8bad0" translate="yes" xml:space="preserve">
          <source>Emitted when the system is suspending.</source>
          <target state="translated">시스템이 일시 중단 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7e80670dfa42ae0769e72fe851cc1ad26bd63fc1" translate="yes" xml:space="preserve">
          <source>Emitted when the tray balloon is clicked.</source>
          <target state="translated">트레이 벌룬을 클릭 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d0607e13d94dcbbe45ebefb99fcb5cbbd0cfa224" translate="yes" xml:space="preserve">
          <source>Emitted when the tray balloon is closed because of timeout or user manually closes it.</source>
          <target state="translated">시간 초과로 인해 용지함 풍선을 닫거나 사용자가 수동으로 닫을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2ae77418120ccec3869dc1606bda2c1ecba8215" translate="yes" xml:space="preserve">
          <source>Emitted when the tray balloon shows.</source>
          <target state="translated">트레이 풍선이 표시 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5323f7e1a05cd0ce73e828b1eb054db530cf3d55" translate="yes" xml:space="preserve">
          <source>Emitted when the tray icon is clicked.</source>
          <target state="translated">트레이 아이콘을 클릭하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26fa98a9cfdd384afb26649369865bc7b007a609" translate="yes" xml:space="preserve">
          <source>Emitted when the tray icon is double clicked.</source>
          <target state="translated">트레이 아이콘을 두 번 클릭하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dd23265c48c692a7ae2ade71ef09ab6940b4a7b3" translate="yes" xml:space="preserve">
          <source>Emitted when the tray icon is right clicked.</source>
          <target state="translated">트레이 아이콘을 마우스 오른쪽 버튼으로 클릭하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="df23b0e6a1d09b194b3bb8ce62bdd5a68b598704" translate="yes" xml:space="preserve">
          <source>Emitted when the unresponsive web page becomes responsive again.</source>
          <target state="translated">응답하지 않는 웹 페이지가 다시 응답 할 때 발생합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
