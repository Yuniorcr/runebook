<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="048b0c177e928ead29ac67c1d1ff64555b0a5a6f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for guest page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 게스트 페이지의 사용자 에이전트입니다.</target>
        </trans-unit>
        <trans-unit id="03e6e1eb06d7d5cc9f39d8b7269ce4635781175b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this session.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이 세션의 사용자 에이전트.</target>
        </trans-unit>
        <trans-unit id="68b69dedc72d008512ab87276ebf6d31b4f3d096" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this web page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이 웹 페이지의 사용자 에이전트.</target>
        </trans-unit>
        <trans-unit id="2463a8b34e81637b22f3f7f75981a7385d6a4643" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The users current system wide accent color preference in RGBA hexadecimal form.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; -RGBA 16 진수 형식의 사용자 현재 시스템 전체 악센트 색상 기본 설정입니다.</target>
        </trans-unit>
        <trans-unit id="8bb509323a83c374517c3965439fe1ccf222a803" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The value of a previously set extra header name.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이전에 설정된 추가 헤더 이름의 값입니다.</target>
        </trans-unit>
        <trans-unit id="f1b5194b2c5a5df88fb78eb9fd2fc03b5f1b40da" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The version of the host operating system.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 호스트 운영 체제의 버전입니다.</target>
        </trans-unit>
        <trans-unit id="1f36897a755c5aded221fa8cc0368b23f6f27136" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The version of the loaded application. If no version is found in the application's &lt;code&gt;package.json&lt;/code&gt; file, the version of the current bundle or executable is returned.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 로드 된 응용 프로그램의 버전입니다. 응용 프로그램의 &lt;code&gt;package.json&lt;/code&gt; 파일 에 버전이 없으면 현재 번들 또는 실행 파일의 버전이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fcce774f23fbaca8f3887f08ad334551913898e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - User operating system's locale two-letter &lt;a href=&quot;https://www.iso.org/iso-3166-country-codes.html&quot;&gt;ISO 3166&lt;/a&gt; country code. The value is taken from native OS APIs.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -사용자 운영 체제의 로케일 2 자리 &lt;a href=&quot;https://www.iso.org/iso-3166-country-codes.html&quot;&gt;ISO 3166&lt;/a&gt; 국가 코드입니다. 값은 기본 OS API에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1427ace8a39974fb409ddbf580855d6ed5de400c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Window id in the format of DesktopCapturerSource's id. For example &quot;window🔢0&quot;.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -DesktopCapturerSource의 ID 형식의 창 ID입니다. 예 : &quot;window🔢0&quot;.</target>
        </trans-unit>
        <trans-unit id="9fd853c670cef4a9a0e9f6f785fcaed86bf9a131" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the path to the receipt.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 영수증 경로.</target>
        </trans-unit>
        <trans-unit id="fcd77d6e2dccd55399e681fbd1d42daa496028d4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the title displayed next to the tray icon in the status bar</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -상태 표시 줄의 트레이 아이콘 옆에 표시되는 제목</target>
        </trans-unit>
        <trans-unit id="690e6b5c9bcb41b65514f5a5205d775b9cea6d44" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - the type of the webContent. Can be &lt;code&gt;backgroundPage&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;browserView&lt;/code&gt;, &lt;code&gt;remote&lt;/code&gt;, &lt;code&gt;webview&lt;/code&gt; or &lt;code&gt;offscreen&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; -webContent의 유형. 할 수 &lt;code&gt;backgroundPage&lt;/code&gt; , &lt;code&gt;window&lt;/code&gt; , &lt;code&gt;browserView&lt;/code&gt; , &lt;code&gt;remote&lt;/code&gt; , &lt;code&gt;webview&lt;/code&gt; 또는 &lt;code&gt;offscreen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47366350971bcafa4d1986109c4d4daeb8469537" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; - Can be &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;unknown&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; - &lt;code&gt;dark&lt;/code&gt; 거나 &lt;code&gt;light&lt;/code&gt; 거나 &lt;code&gt;unknown&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31694c0110b171ba5391158b3f43cd58ede0fc72" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path of the file chosen by the user, if a callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">사용자가 선택한 파일의 경로 인 &lt;code&gt;String&lt;/code&gt; 을 반환 합니다. 콜백이 제공되면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f0db62cb2c4f123b8d855f8c9b70e6ceff6773ed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path to the receipt.</source>
          <target state="translated">영수증 경로 인 &lt;code&gt;String&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="64c55769f42f3ea72b72bc77d247e87b2d211e46" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[] | undefined&lt;/code&gt;, the file paths chosen by the user; if the dialog is cancelled it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;String[] | undefined&lt;/code&gt; , 사용자가 선택한 파일 경로. 대화가 취소되면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0c698f9bdd9b00da1b60c25cc4f37e15ce5e688e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of language codes the spellchecker is enabled for. If this list is empty the spellchecker will fallback to using &lt;code&gt;en-US&lt;/code&gt;. By default on launch if this setting is an empty list Electron will try to populate this setting with the current OS locale. This setting is persisted across restarts.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -맞춤법 검사기가 활성화 된 언어 코드의 배열입니다. 이 목록이 비어 있으면 맞춤법 검사기가 &lt;code&gt;en-US&lt;/code&gt; 사용으로 대체됩니다 . 이 설정이 빈 목록 인 경우 기본적으로 시작시 Electron은이 설정을 현재 OS 로케일로 채우려 고 시도합니다. 이 설정은 다시 시작해도 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="a1e73221f969b7cae7ec948cf3ba4ee9d5bbf996" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of supported formats for the clipboard &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -클립 보드 &lt;code&gt;type&lt;/code&gt; 에 지원되는 형식의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="6d161b268fa2d05e046f64f96ddd9e045f649a02" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete URL chain of the item including any redirects.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -리디렉션을 포함한 항목의 전체 URL 체인입니다.</target>
        </trans-unit>
        <trans-unit id="f9e13a4ef5289d5b06e288b829cf2d5ed471f74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete url chain of the item including any redirects.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -리디렉션을 포함한 항목의 전체 URL 체인.</target>
        </trans-unit>
        <trans-unit id="923e64e60ef25f4e78822b1cd693b0873fa2d0b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; an array of paths to preload scripts that have been registered.</source>
          <target state="translated">등록 된 스크립트를 사전로드하기위한 경로 배열을 &lt;code&gt;String[]&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="bae73c2c98331612dc6c366ce51f6f8429956a79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt;, an array of file paths chosen by the user, if the callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">사용자가 선택한 파일 경로의 배열 인 &lt;code&gt;String[]&lt;/code&gt; 반환 합니다. 콜백이 제공되면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1a6c7a586b56f17a276ba312c2721c92e1c77ba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - A WebContents instance with the given ID.</source>
          <target state="translated">&lt;code&gt;WebContents&lt;/code&gt; - 제공된 ID를 가진 WebContents 인스턴스를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a68d5585df401c31a588c98855e8e5fafec74456" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - The web contents that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Return &lt;code&gt;WebContents&lt;/code&gt; - 이 애플리케이션에 초점을 맞춘 웹 컨텐츠, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0c2bd07476b13cc89053e1c18dcf742542b3eef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents[]&lt;/code&gt; - An array of all &lt;code&gt;WebContents&lt;/code&gt; instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.</source>
          <target state="translated">&lt;code&gt;WebContents[]&lt;/code&gt; -모든 &lt;code&gt;WebContents&lt;/code&gt; 인스턴스 의 배열을 리턴 합니다. 여기에는 모든 창, 웹뷰, 열린 devtools 및 devtools 확장 배경 페이지에 대한 웹 컨텐츠가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3f229913b884753774a062b58026e7645a874e2a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - A child of &lt;code&gt;webFrame&lt;/code&gt; with the supplied &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; would be returned if there's no such frame or if the frame is not in the current renderer process.</source>
          <target state="translated">반환 &lt;code&gt;WebFrame&lt;/code&gt; - 제공된 &lt;code&gt;name&lt;/code&gt; 가진 &lt;code&gt;webFrame&lt;/code&gt; 의 자식 , 그러한 프레임이 없거나 프레임이 현재 렌더러 프로세스에없는 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="dd7ed78d9f66a109ecc133e6dd711ddd8bd57f04" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - The frame element in &lt;code&gt;webFrame's&lt;/code&gt; document selected by &lt;code&gt;selector&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; would be returned if &lt;code&gt;selector&lt;/code&gt; does not select a frame or if the frame is not in the current renderer process.</source>
          <target state="translated">반환 &lt;code&gt;WebFrame&lt;/code&gt; - &lt;code&gt;selector&lt;/code&gt; 에 의해 선택된 &lt;code&gt;webFrame's&lt;/code&gt; 문서 의 프레임 요소. 선택자가 프레임을 &lt;code&gt;selector&lt;/code&gt; 하지 않거나 프레임이 현재 렌더러 프로세스에없는 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="dd26e72f2db5d53de93a6bd68bc5ec583a840025" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebFrame&lt;/code&gt; - that has the supplied &lt;code&gt;routingId&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">반환 &lt;code&gt;WebFrame&lt;/code&gt; - 그 공급이 &lt;code&gt;routingId&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; 찾을 수없는 경우.</target>
        </trans-unit>
        <trans-unit id="1902ac569a2312f8815b290037988cdb744757be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The global variable of &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;global[name]&lt;/code&gt;) in the main process.</source>
          <target state="translated">기본 프로세스에서 &lt;code&gt;name&lt;/code&gt; 의 전역 변수 (예 : &lt;code&gt;global[name]&lt;/code&gt; )를 리턴 &lt;code&gt;any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8401e8866b40f51fbb6d7e2633e6ecafe4c3465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The object returned by &lt;code&gt;require(module)&lt;/code&gt; in the main process. Modules specified by their relative path will resolve relative to the entrypoint of the main process.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; -에 의해 반환되는 객체 &lt;code&gt;require(module)&lt;/code&gt; 의 주요 과정에서. 상대 경로로 지정된 모듈은 기본 프로세스의 진입 점을 기준으로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="c522e66dfd87ddf28ee211d7e7036eadfb473e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; -의 값 &lt;code&gt;key&lt;/code&gt; 에 &lt;code&gt;NSUserDefaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63e47a4d8e99386932a2d340ca394d44aef0e06d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value sent back by the &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; - 값은에 의해 다시 전송 &lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; 의&lt;/a&gt; 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="f5e5a88f4417c1e0d0af3bc1659070da4a5ca98b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value sent back by the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; - 값은에 의해 다시 전송 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; 의&lt;/a&gt; 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="2ee052be19e00638713aaaa08413c76413615780" translate="yes" xml:space="preserve">
          <source>Returns all uploaded crash reports. Each report contains the date and uploaded ID.</source>
          <target state="translated">업로드 된 모든 충돌 보고서를 반환합니다. 각 보고서에는 날짜와 업로드 된 ID가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2b5ec4cbb83869df3cc77a808f126fcd0460ed29" translate="yes" xml:space="preserve">
          <source>Returns an Object containing &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; keys representing the bookmark in the clipboard. The &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; values will be empty strings when the bookmark is unavailable.</source>
          <target state="translated">클립 보드의 책갈피를 나타내는 &lt;code&gt;title&lt;/code&gt; 및 &lt;code&gt;url&lt;/code&gt; 키가 포함 된 Object를 반환합니다 . &lt;code&gt;title&lt;/code&gt; 과 &lt;code&gt;url&lt;/code&gt; 북마크를 사용할 수 없을 때 값은 빈 문자열이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="e581a2f5b9be500264cea39b4d29a52d661ab229" translate="yes" xml:space="preserve">
          <source>Returns an object describing usage information of Blink's internal memory caches.</source>
          <target state="translated">Blink의 내부 메모리 캐시 사용 정보를 설명하는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f23bd54100e425b9c76fe9a1f52022c20ae112ef" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">현재 프로세스에 대한 메모리 사용 통계를 제공하는 객체를 반환합니다. 모든 통계는 킬로바이트 단위로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="5555fe7e76fa4758ee82e8a3b2aecbd071d1c59e" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes. This api should be called after app ready.</source>
          <target state="translated">현재 프로세스에 대한 메모리 사용 통계를 제공하는 개체를 반환합니다. 모든 통계는 킬로바이트로보고됩니다. 이 API는 앱이 준비된 후에 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f27c5643d974431418e69f225c656a0234dd61c8" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the entire system. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">전체 시스템에 대한 메모리 사용 통계를 제공하는 객체를 반환합니다. 모든 통계는 킬로바이트 단위로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="faffa56f4d5ded8f1be6a1f043b636ace6f0979c" translate="yes" xml:space="preserve">
          <source>Returns an object with Blink memory information. It can be useful for debugging rendering / DOM related memory issues. Note that all values are reported in Kilobytes.</source>
          <target state="translated">Blink 메모리 정보가있는 개체를 반환합니다. 렌더링 / DOM 관련 메모리 문제를 디버깅하는 데 유용 할 수 있습니다. 모든 값은 킬로바이트로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="1716c562e6d0ce145e0896ed65b8e5ec9a285980" translate="yes" xml:space="preserve">
          <source>Returns an object with V8 heap statistics. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">V8 힙 통계가있는 개체를 반환합니다. 모든 통계는 킬로바이트로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="2e6d4fb250da9a64435f411dee0088bf69c8cbdf" translate="yes" xml:space="preserve">
          <source>Returns an object with system animation settings.</source>
          <target state="translated">Returns an object with system animation settings.</target>
        </trans-unit>
        <trans-unit id="f24c3d414ca822febe2ca5596b976a4747321df5" translate="yes" xml:space="preserve">
          <source>Returns focus to the taskbar notification area. Notification area icons should use this message when they have completed their UI operation. For example, if the icon displays a shortcut menu, but the user presses ESC to cancel it, use &lt;code&gt;tray.focus()&lt;/code&gt; to return focus to the notification area.</source>
          <target state="translated">Returns focus to the taskbar notification area. Notification area icons should use this message when they have completed their UI operation. For example, if the icon displays a shortcut menu, but the user presses ESC to cancel it, use &lt;code&gt;tray.focus()&lt;/code&gt; to return focus to the notification area.</target>
        </trans-unit>
        <trans-unit id="c04c21aa70d07e500d22d4a632aaf59822d3cde1" translate="yes" xml:space="preserve">
          <source>Returns one of several standard system colors that automatically adapt to vibrancy and changes in accessibility settings like 'Increase contrast' and 'Reduce transparency'. See &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/color#system-colors&quot;&gt;Apple Documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Returns one of several standard system colors that automatically adapt to vibrancy and changes in accessibility settings like 'Increase contrast' and 'Reduce transparency'. See &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/color#system-colors&quot;&gt;Apple Documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="e8057890e22b9f8b67929c5723eef8eca4e93b25" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;webContents&lt;/code&gt; that sent the message, you can call &lt;code&gt;event.sender.send&lt;/code&gt; to reply to the asynchronous message, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">메시지를 보낸 &lt;code&gt;webContents&lt;/code&gt; 를 리턴합니다 . 비동기 메시지에 응답하기 위해 &lt;code&gt;event.sender.send&lt;/code&gt; 를 호출 할 수 있습니다 . 자세한 정보는 &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c6880d91bc5cf27aec068ed67155ffa4d3e91110" translate="yes" xml:space="preserve">
          <source>Returns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">마지막 충돌 보고서의 날짜와 ID를 반환합니다. 충돌 보고서가 전송되지 않았거나 충돌보고자가 시작되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="dd62aafd5389b26af713319edd688cc48b484f0e" translate="yes" xml:space="preserve">
          <source>Returns the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</source>
          <target state="translated">Returns the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6da92a267240aa12670fc2f0602964c5acbaa063" translate="yes" xml:space="preserve">
          <source>Returns the visible URL. Writing to this attribute initiates top-level navigation.</source>
          <target state="translated">보이는 URL을 반환합니다. 이 속성에 쓰면 최상위 탐색이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="24a6e291119bb705bec9f3895802de54e4a1518e" translate="yes" xml:space="preserve">
          <source>Right click the new shortcut and choose &lt;em&gt;Properties&lt;/em&gt;.</source>
          <target state="translated">새 바로 가기를 마우스 오른쪽 단추로 클릭하고 &lt;em&gt;속성을&lt;/em&gt; 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="aadecd5653a198be5411a0643f9e5b01ef6f2d10" translate="yes" xml:space="preserve">
          <source>Roles allow menu items to have predefined behaviors.</source>
          <target state="translated">역할을 통해 메뉴 항목에 사전 정의 된 동작이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfd5233f6c25112a7ae3ff91e4acc195f899f25f" translate="yes" xml:space="preserve">
          <source>Romanian</source>
          <target state="translated">Romanian</target>
        </trans-unit>
        <trans-unit id="40929586610053a634b9e4f61c5b20f26870e295" translate="yes" xml:space="preserve">
          <source>Romansh</source>
          <target state="translated">Romansh</target>
        </trans-unit>
        <trans-unit id="b8a5fd736772c4a313c4de796bec65f8ab2effb0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;, and commit your change.</source>
          <target state="translated">&lt;code&gt;git add your_changed_file.cc&lt;/code&gt; 를 실행 하고 변경 사항을 커밋하십시오.</target>
        </trans-unit>
        <trans-unit id="5e3f8f0f74f3021861b7f6085e5662f13aa5f041" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git add your_changed_file.cc&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdbeb0a5cc782bcd533b4b0a06f1b19fe2ee18f6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-clang-format&lt;/code&gt;, and you will probably see modifications in &lt;code&gt;your_changed_file.cc&lt;/code&gt;, these modifications are generated from &lt;code&gt;clang-format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git-clang-format&lt;/code&gt; 을 실행 하면 &lt;code&gt;your_changed_file.cc&lt;/code&gt; 에 수정 사항이 표시 될 것입니다 . 이러한 수정 사항은 &lt;code&gt;clang-format&lt;/code&gt; 에서 생성 됩니다 .</target>
        </trans-unit>
        <trans-unit id="54fd61aadef86ab86cacf949507596c868138e42" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;gn gen&lt;/code&gt; with the --ide=xcode argument.</source>
          <target state="translated">Run &lt;code&gt;gn gen&lt;/code&gt; with the --ide=xcode argument.</target>
        </trans-unit>
        <trans-unit id="b47d63fed4fd82e91407d1c5b1f60dbed9cec7ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; to view auto generated release notes. The notes generated should help you determine if this is a major, minor, patch, or beta version change. Read the &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;Version Change Rules&lt;/a&gt; for more information.</source>
          <target state="translated">실행 &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; 보기 자동 생성 된 릴리스 노트에. 생성 된 메모는 이것이 주요, 부, 패치 또는 베타 버전 변경인지 확인하는 데 도움이됩니다. 자세한 내용은 &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;버전 변경 규칙&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3ec56dd036ed12028c3a4befb8d157c78271cd84" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;script/update&lt;/code&gt; to get the latest libcc</source>
          <target state="translated">최신 libcc를 얻으려면 &lt;code&gt;script/update&lt;/code&gt; 를 실행하십시오</target>
        </trans-unit>
        <trans-unit id="ecc04fc73bd9e28cc2dbb2e34bc699872e727cb1" translate="yes" xml:space="preserve">
          <source>Run the build when all patches can be applied without errors</source>
          <target state="translated">모든 패치를 오류없이 적용 할 수있을 때 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f81da03623f4678b1d0a88cb300ef073313365b4" translate="yes" xml:space="preserve">
          <source>Run the example inside Electron: &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</source>
          <target state="translated">Electron 내부에서 예제를 실행하십시오. &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03eea6fe68d08c23ee051601b792e86069c57548" translate="yes" xml:space="preserve">
          <source>Run the prepare-release script</source>
          <target state="translated">준비 릴리스 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f4f5eadb085530c0a2c8afe8a1bc775ad08cccca" translate="yes" xml:space="preserve">
          <source>Run the update script with the --xcode argument.</source>
          <target state="translated">--xcode 인수와 함께 업데이트 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="54f7b6c38adcb213f6377d5a2ecd48cfd8f83be4" translate="yes" xml:space="preserve">
          <source>Run your application</source>
          <target state="translated">Run your application</target>
        </trans-unit>
        <trans-unit id="4879762e0cad7f4af20978a5e8648e63b64e3835" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;clang-tidy&lt;/code&gt; is rather slow - internally it compiles each file and then runs the checks so it will always be some factor slower than compilation. While you can use parallel runs to speed it up using the &lt;code&gt;--jobs|-j&lt;/code&gt; option, &lt;code&gt;clang-tidy&lt;/code&gt; also uses a lot of memory during its checks, so it can easily run into out-of-memory errors. As such the default number of jobs is one.</source>
          <target state="translated">&lt;code&gt;clang-tidy&lt;/code&gt; 를 실행하는 것은 다소 느립니다. 내부적으로 각 파일을 컴파일 한 다음 검사를 실행하므로 항상 컴파일보다 속도가 느립니다. &lt;code&gt;--jobs|-j&lt;/code&gt; 옵션을 사용하여 병렬 실행을 사용하여 속도를 높일 수 있지만 &lt;code&gt;clang-tidy&lt;/code&gt; 는 검사 중에 많은 메모리를 사용하므로 메모리 부족 오류가 쉽게 발생할 수 있습니다. 따라서 기본 작업 수는 하나입니다.</target>
        </trans-unit>
        <trans-unit id="fb8a1b5cd9e545a0e99ce044671aa84c2328b9f2" translate="yes" xml:space="preserve">
          <source>Running Your App</source>
          <target state="translated">앱 실행</target>
        </trans-unit>
        <trans-unit id="2e182a287b91d6e03426af0451207d0969856b00" translate="yes" xml:space="preserve">
          <source>Running a basic app</source>
          <target state="translated">기본 앱 실행</target>
        </trans-unit>
        <trans-unit id="2ce1fe4a10500dae85aef09840368cfcd8ecbdc6" translate="yes" xml:space="preserve">
          <source>Running the above example</source>
          <target state="translated">위의 예제를 실행</target>
        </trans-unit>
        <trans-unit id="74ad93cbebf587ac46ab0ef1e3f24139ddd3f535" translate="yes" xml:space="preserve">
          <source>Russian</source>
          <target state="translated">Russian</target>
        </trans-unit>
        <trans-unit id="7c2ec64b2c38d12b505b5fd75ee288dceedd8a1b" translate="yes" xml:space="preserve">
          <source>SHA - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</source>
          <target state="translated">SHA- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a46e6169d3177031b663b0231625518e98ef0f0c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;api/web-contents#contentsloadurlurl-options&quot;&gt;&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api/web-contents#contentsloadurlurl-options&quot;&gt; &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="f97af335d962e8e1f24974a7b7e6da05813a2321" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;web-contents#contentsloadurlurl-options&quot;&gt;&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Same as &lt;a href=&quot;web-contents#contentsloadurlurl-options&quot;&gt; &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9546a799e70aa601e431551d80f31b5bfd8b9df8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt;, except that it replaces an existing protocol handler.</source>
          <target state="translated">&lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt; 과 동일하지만 기존 프로토콜 핸들러를 대체한다는 점이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6dfdbade7002a2d69f55f64ad452636f5c27b3d0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSNotificationCenter&lt;/code&gt; for local defaults. This is necessary for events such as &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subscribeNotification&lt;/code&gt; 과 동일 하지만 로컬 기본값으로 &lt;code&gt;NSNotificationCenter&lt;/code&gt; 를 사용합니다 . &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt; 과 같은 이벤트에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="f9c16143f6bdee978c163fa8df919af5a91fffb0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt;. This is necessary for events such as &lt;code&gt;NSWorkspaceDidActivateApplicationNotification&lt;/code&gt;.</source>
          <target state="translated">Same as &lt;code&gt;subscribeNotification&lt;/code&gt; , but uses &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt; . This is necessary for events such as &lt;code&gt;NSWorkspaceDidActivateApplicationNotification&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd0d52364d10f3bc81d47694637bdfd654e86fc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSNotificationCenter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsubscribeNotification&lt;/code&gt; 과 동일 하지만 &lt;code&gt;NSNotificationCenter&lt;/code&gt; 에서 구독자를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="1017fee5dd83c92cc97127db8ababee095ba268e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt;.</source>
          <target state="translated">Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt; , but removes the subscriber from &lt;code&gt;NSWorkspace.sharedWorkspace.notificationCenter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26f78a3edab8bc49aa9671cccc476cba80b28d93" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="636f1e73cded8b523350006257f0bb65497d6eea" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadFile&lt;/code&gt;, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. See the &lt;code&gt;webContents&lt;/code&gt; docs for more information.</source>
          <target state="translated">&lt;code&gt;webContents.loadFile&lt;/code&gt; 과 동일하게 &lt;code&gt;filePath&lt;/code&gt; 는 애플리케이션의 루트에 상대적인 HTML 파일의 경로 여야합니다. 자세한 내용은 &lt;code&gt;webContents&lt;/code&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0190a18aa72702f8b45e07e46046dbb9c99de065" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="82b95b7d5f77471ef8f73b6ed8179b6cf1dedd03" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.reload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.reload&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="129890bda53ef7ad60257818882912fbe53db967" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c4473b47b6192671897392e4600ee92494c5c4b1" translate="yes" xml:space="preserve">
          <source>Same limitations as the &lt;code&gt;Object&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 유형 과 동일한 제한</target>
        </trans-unit>
        <trans-unit id="0a771c36be05d64f376a7d57849bb33ee0c53884" translate="yes" xml:space="preserve">
          <source>Sandbox</source>
          <target state="translated">Sandbox</target>
        </trans-unit>
        <trans-unit id="2cc0724359a61b01f6c24fc544e7ae4f41c3c9b2" translate="yes" xml:space="preserve">
          <source>Save the above file to your computer as &lt;code&gt;touchbar.js&lt;/code&gt;</source>
          <target state="translated">위의 파일을 컴퓨터에 &lt;code&gt;touchbar.js&lt;/code&gt; 로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="2c959d69ea6f6fb685ee79d3bafa0d911a7d6283" translate="yes" xml:space="preserve">
          <source>Save the file</source>
          <target state="translated">파일을 저장하십시오</target>
        </trans-unit>
        <trans-unit id="58df2ed823cdd4690f8dacf52369ef08b8917119" translate="yes" xml:space="preserve">
          <source>Schedules a full repaint of the window this web contents is in.</source>
          <target state="translated">이 웹 컨텐츠가있는 창의 전체 다시 그리기를 예약합니다.</target>
        </trans-unit>
        <trans-unit id="e80af8419edd6924a4eb2492086ded3cee61c310" translate="yes" xml:space="preserve">
          <source>Scots Gaelic</source>
          <target state="translated">스코틀랜드 게 일어</target>
        </trans-unit>
        <trans-unit id="c974ef3c19333dbdbb56bbcbef1485df0f486a65" translate="yes" xml:space="preserve">
          <source>Scripts put here should never be invoked by users directly, unlike those in &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">Scripts put here should never be invoked by users directly, unlike those in &lt;code&gt;script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26b25ac9ab334d5c9ee9e642ca52b0327da6ec72" translate="yes" xml:space="preserve">
          <source>ScrubberItem</source>
          <target state="translated">ScrubberItem</target>
        </trans-unit>
        <trans-unit id="c1ec744a093e0c733e3fb2cec799ce791643a673" translate="yes" xml:space="preserve">
          <source>ScrubberItem Object</source>
          <target state="translated">ScrubberItem 객체</target>
        </trans-unit>
        <trans-unit id="329e5602e2833d8f93a85c833b53d05b708870d0" translate="yes" xml:space="preserve">
          <source>Second, the callbacks passed to the main process will persist until the main process garbage-collects them.</source>
          <target state="translated">둘째, 메인 프로세스로 전달 된 콜백은 메인 프로세스가 가비지 수집 할 때까지 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="4758bf3cf3612cd75e13622feee413991c1858ca" translate="yes" xml:space="preserve">
          <source>Secure schemes do not trigger mixed content warnings. For example, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; are secure schemes because they cannot be corrupted by active network attackers.</source>
          <target state="translated">보안 체계는 혼합 컨텐츠 경고를 트리거하지 않습니다. 예를 들어 &lt;code&gt;https&lt;/code&gt; 및 &lt;code&gt;data&lt;/code&gt; 는 활성 네트워크 공격자가 손상시킬 수 없으므로 안전한 구성표입니다.</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="c1affc9c83b3714d09711172b7a83267645eb627" translate="yes" xml:space="preserve">
          <source>Security Checklist</source>
          <target state="translated">보안 점검표</target>
        </trans-unit>
        <trans-unit id="402cc3b6686cd294cb10dd3f5bccbebd0edd8a9b" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
          <target state="translated">보안 고려 사항</target>
        </trans-unit>
        <trans-unit id="c5c54edc3776b9e491c604ba90c4e5634bd68450" translate="yes" xml:space="preserve">
          <source>Security Is Everyone's Responsibility</source>
          <target state="translated">Security Is Everyone's Responsibility</target>
        </trans-unit>
        <trans-unit id="23c4cfbbeab885f5c9f74d1d9f315d17e5af7bbd" translate="yes" xml:space="preserve">
          <source>Security, Native Capabilities, and Your Responsibility</source>
          <target state="translated">보안, 기본 기능 및 책임</target>
        </trans-unit>
        <trans-unit id="96a97024efea08ffda71202fbf4b71a0a7f45340" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api/command-line-switches#--log-net-logpath&quot;&gt;&lt;code&gt;--log-net-log&lt;/code&gt;&lt;/a&gt; to log network events throughout the app's lifecycle.</source>
          <target state="translated">앱의 수명주기 동안 네트워크 이벤트를 &lt;a href=&quot;api/command-line-switches#--log-net-logpath&quot;&gt; &lt;code&gt;--log-net-log&lt;/code&gt; &lt;/a&gt; 하려면 --log-net-log 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="d1b881734df8215ff8d0ebe118cfb1362d40ce92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api/ipc-main&quot;&gt;ipcMain&lt;/a&gt; for code examples.</source>
          <target state="translated">코드 예제는 &lt;a href=&quot;api/ipc-main&quot;&gt;ipcMain&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60af6f49fb1bcb893ee2c076b98b3e7fa54df186" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api/menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;api/menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7661056ceb4bde014f0f41ef58d25c077657663e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f427ef5a105dfedbc70a4cb0e845d500cb559414" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;api/web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 객체에 대한 자세한 설명은 &lt;a href=&quot;api/web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b337d2b031288424e8609b7ccaa81827eaa7e818" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;</source>
          <target state="translated">See &lt;a href=&quot;build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbccd754f5709ed1aa3feafae07d8824bf3bf408" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;build-instructions-gn&quot;&gt;빌드 지침 : GN을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9833dcb00345ddae5cbd773addffd50c815f9400" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-system-overview#tests&quot;&gt;Build System Overview: Tests&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;build-system-overview#tests&quot;&gt;빌드 시스템 개요 : 테스트를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a58813d3c3b3053b8fb6a1701995d091905cb0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="translated">프로젝트의 다른 부분에서 코드를 수정할 때 모범 사례에 대한 자세한 내용은 &lt;a href=&quot;coding-style&quot;&gt;코딩 스타일&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="411bcf93a868ce7965dc93fa8abe8e7f97dd893a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;command-line-switches#--log-net-logpath&quot;&gt;&lt;code&gt;--log-net-log&lt;/code&gt;&lt;/a&gt; to log network events throughout the app's lifecycle.</source>
          <target state="translated">앱의 수명주기 동안 네트워크 이벤트를 &lt;a href=&quot;command-line-switches#--log-net-logpath&quot;&gt; &lt;code&gt;--log-net-log&lt;/code&gt; &lt;/a&gt; 하려면 --log-net-log 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="188cd9ef8a88e1c583362b972a815bd76c58b6f5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/build-instructions-gn&quot;&gt;빌드 지침&lt;/a&gt; 참조 : GN</target>
        </trans-unit>
        <trans-unit id="46b5f62c002091540366db291b5cf3295b50867d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/build-instructions-gn&quot;&gt;Build Instructions: GN&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;development/build-instructions-gn&quot;&gt;빌드 지침 : GN을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a05ce16ce3715b5f1b58051e476bd537c72d85c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/readme&quot;&gt;development/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/readme&quot;&gt;development / README.md를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="ddd9d944c30a5c1d51bfbb7163984f9be3412502" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md#visual-studio&quot;&gt;the Chromium build documentation&lt;/a&gt; for more details on which Visual Studio components are required.</source>
          <target state="translated">See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md#visual-studio&quot;&gt;the Chromium build documentation&lt;/a&gt; for more details on which Visual Studio components are required.</target>
        </trans-unit>
        <trans-unit id="73d7c8150c6ce0f7a93108b05f8e9a1539cd2800" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4b2cc1d5f3de0bc2fee791afea5fb8f6ee059a4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;conventionalcommits.org&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;traditionalcommits.org&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4d7e78e69da4d6ca38519778dbe7a77cdcacc58c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.apple.com/library/archive/technotes/tn2150/_index.html&quot;&gt;Apple's documentation&lt;/a&gt; for more details.</source>
          <target state="translated">See &lt;a href=&quot;https://developer.apple.com/library/archive/technotes/tn2150/_index.html&quot;&gt;Apple's documentation&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="471d1cd5b955e35dded8b38f177f2ce53b2f1b01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://electronjs.org/docs/development/coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="translated">See &lt;a href=&quot;https://electronjs.org/docs/development/coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</target>
        </trans-unit>
        <trans-unit id="e089282963c01529cc50f8d0d69b2867e25ed14b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/electron/electron/pull/23265&quot;&gt;#23265&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/pull/23265&quot;&gt;# 23265&lt;/a&gt; 를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="86d960a35ca0d690267e98baa567ad21d4887e8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/electron/i18n#readme&quot;&gt;electron/i18n&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/i18n#readme&quot;&gt;electron / i18n&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="786e1a910c97d8bcd3715e7119510bcb9601d755" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/nodejs/node-gyp/blob/e2401e1395bef1d3c8acec268b42dc5fb71c4a38/src/win_delay_load_hook.cc&quot;&gt;&lt;code&gt;node-gyp&lt;/code&gt;&lt;/a&gt; for an example delay-load hook if you're implementing your own.</source>
          <target state="translated">See &lt;a href=&quot;https://github.com/nodejs/node-gyp/blob/e2401e1395bef1d3c8acec268b42dc5fb71c4a38/src/win_delay_load_hook.cc&quot;&gt; &lt;code&gt;node-gyp&lt;/code&gt; &lt;/a&gt; for an example delay-load hook if you're implementing your own.</target>
        </trans-unit>
        <trans-unit id="e684b0d18691b980d96ed18ab327fdd2feb3a0be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;How to create a Minimal, Complete, and Verifiable example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;최소, 완전 및 검증 가능한 예제 작성 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c4f265560eac0b3787a1e24cba35d9ea6f7875c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</target>
        </trans-unit>
        <trans-unit id="4a5d970c5ffccec8438145b41fc06a7764563dda" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;Chromium's Flash Roadmap&lt;/a&gt; for more details.</source>
          <target state="translated">See &lt;a href=&quot;https://www.chromium.org/flash-roadmap&quot;&gt;Chromium's Flash Roadmap&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="ecd3b3463460c3f2e1881313a2e4f8363afe741d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; for code examples.</source>
          <target state="translated">코드 예제는 &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="736407e10a23c2fc73aff20a0f1192ef6e57d6ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dffc89e4cb43c122a0e7f1cec023eed2ef4220d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;recent-documents&quot;&gt;Recent Documents documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;recent-documents&quot;&gt;최근 문서 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c014b34f3b73284f648c19df832ac4b850868641" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tutorial/recent-documents&quot;&gt;Recent Documents documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/recent-documents&quot;&gt;최근 문서 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d7fd10b14d2e1a7a21087fc165dfa2018ff0174" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrading-node&quot;&gt;Upgrading Node&lt;/a&gt; for instructions on this.</source>
          <target state="translated">이에 대한 지시 사항은 &lt;a href=&quot;upgrading-node&quot;&gt;노드 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85d0afa43609910152eee14c8ad3286150838366" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6407870d4db9de792cbc358274b27cc4bfd1b84b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">See &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for examples.</target>
        </trans-unit>
        <trans-unit id="dcfe31bd9dbfddfa95546d8b0d8d5a19fa9f8e6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 객체에 대한 자세한 설명은 &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="475c1fde0160f1547325ed43c76c4ae4d0da5649" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">See &lt;a href=&quot;web-contents#contentssendinputeventinputevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="a60f91137d5a6d66ef6c9ea948cd3be4313f04e9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;gn help gen&lt;/code&gt; for more information on generating IDE projects with GN.</source>
          <target state="translated">See &lt;code&gt;gn help gen&lt;/code&gt; for more information on generating IDE projects with GN.</target>
        </trans-unit>
        <trans-unit id="5106322f6bfc3952d81e9df8c869d0a07072346b" translate="yes" xml:space="preserve">
          <source>See Step 3 for URI &amp;amp; when prompted, press enter to use same storage account as destination.</source>
          <target state="translated">URI에 대해서는 3 단계를 참조하고 메시지가 표시되면 Enter 키를 눌러 대상과 동일한 스토리지 계정을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="337be7104bf5a3851c42003b32034e4f98ea2f7b" translate="yes" xml:space="preserve">
          <source>See all of the current parameters being passed to the crash reporter.</source>
          <target state="translated">충돌 리포터에 전달되는 모든 현재 매개 변수를보십시오.</target>
        </trans-unit>
        <trans-unit id="e29007005b40bf1fc4ec2d10c7139e89b8170472" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chromium-development&quot;&gt;Chromium Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;chromium-development&quot;&gt;크롬 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="548ceea619899ab7d2f3f33a7bb47baabcee4436" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;development/chromium-development&quot;&gt;Chromium Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/chromium-development&quot;&gt;Chromium 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="ab3bae3cc2b31ef630aa6299987efd90d0b4bbb8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;development/v8-development&quot;&gt;V8 Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/v8-development&quot;&gt;V8 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="58ef5af520d1a7d088abd3d02633745691f5398b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;Using Native Node Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;기본 노드 모듈 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ab749aa774f584827785b49b4d1861c7f37386f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;v8-development&quot;&gt;V8 Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;v8-development&quot;&gt;V8 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="eb76eeea4869bec20abc0606e7a8d45239249d90" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#main-process&quot;&gt;주요 과정을&lt;/a&gt; , &lt;a href=&quot;#renderer-process&quot;&gt;렌더링 과정&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5527483ee74ea81aba9bc6afa79cb258a4afdd57" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</source>
          <target state="translated">또한보십시오 : &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt; , &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe6b1b4c07ca59d0a31a452b02200bd7fe3440a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt; , &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f3407502f02ad6d9324dfe027804f8e0c61929" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;더 많은 옵션과 모드&lt;/a&gt; 는 API 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68f6d0025286d603059924a0fa682194d50b870b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress-options&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5babf8834bb113f886b4fd2d0ae102477c33f050" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../tutorial/debugging-main-process&quot;&gt;Debugging the Main Process&lt;/a&gt; guide for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../tutorial/debugging-main-process&quot;&gt;메인 프로세스 디버깅&lt;/a&gt; 가이드를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="8882b034a06147486b30a98ee54b9aa86fac7140" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;api/browser-window#winsetprogressbarprogress-options&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;api/browser-window#winsetprogressbarprogress-options&quot;&gt;더 많은 옵션과 모드&lt;/a&gt; 는 API 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f9b061062fd0d255e87662361f93a4cb8df636d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;api/session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt; documentation for more information about loading, unloading, and querying active extensions.</source>
          <target state="translated">참고 항목 &lt;a href=&quot;api/session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt; 로딩, 언 로딩 및 활성 확장 쿼리에 대한 자세한 내용은 문서를.</target>
        </trans-unit>
        <trans-unit id="bb3900f6c720fe0f91e97f7629f32031b6889b86" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;api/web-contents&quot;&gt;&lt;code&gt;webContents&lt;/code&gt; documentation&lt;/a&gt; for its methods and events.</source>
          <target state="translated">메소드 및 이벤트에 대해서는 &lt;a href=&quot;api/web-contents&quot;&gt; &lt;code&gt;webContents&lt;/code&gt; 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="922af4639f13ee2e081e9da7e55f5a4e48b82809" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; build instructions for the requirements for your platform. In addition, you'll need to install &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="translated">플랫폼 요구 사항 은 &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; 또는 &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; 빌드 지침을 참조하십시오 . 또한 Chromium을 가져 오는 데 사용되는 도구 세트 인 &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt; &lt;code&gt;depot_tools&lt;/code&gt; &lt;/a&gt; 및 해당 종속성 을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a72f6b3fee71b5ee27e43e4c277da90b203d6211" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;electron-versioning&quot;&gt;Electron versioning doc&lt;/a&gt; for info on how to manage Electron versions in your apps.</source>
          <target state="translated">앱에서 Electron 버전을 관리하는 방법에 대한 정보 는 &lt;a href=&quot;electron-versioning&quot;&gt;Electron 버전 관리 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75d1df3201ba8ff332a54dd5604ceb7856b1f323" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt;&lt;code&gt;NSSound&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt; &lt;code&gt;NSSound&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b363dc9dae171616eaac7df6d3b3dd2dcbaa69c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;Enabling Network Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;네트워크 액세스 활성화 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e14f95642ba46acbb1edbb2a5d74ce0062156ead" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa Event Handling Guide&lt;/a&gt; for more information on macOS' native actions.</source>
          <target state="translated">macOS의 기본 조치에 대한 자세한 정보 는 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa 이벤트 처리 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ee477ba47414c448dc2b5680377bdbb4cb080b9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;Enabling User-Selected File Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;사용자가 선택한 파일 액세스 사용 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="273136a1e68506f1d91abcb722b511ac6249bf7f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API&quot;&gt;Channel Messaging API&lt;/a&gt; documentation for more information on using channel messaging.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API&quot;&gt;채널 메시징 사용에&lt;/a&gt; 대한 자세한 정보 는 채널 메시징 API 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8af3f81ab6e9c039c559ab3c7ac5f466983267db" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e751e583ba867e212b34eb4bd8e9020730a2b27c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node documentation&lt;/a&gt; or run &lt;code&gt;node --help&lt;/code&gt; in your terminal for a list of available flags. Additionally, run &lt;code&gt;node --v8-options&lt;/code&gt; to see a list of flags that specifically refer to Node's V8 JavaScript engine.</source>
          <target state="translated">사용 가능한 플래그 목록은 터미널에서 &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;노드 설명서&lt;/a&gt; 또는 run &lt;code&gt;node --help&lt;/code&gt; 를 참조하십시오 . 또한 &lt;code&gt;node --v8-options&lt;/code&gt; 를 실행 하여 노드의 V8 JavaScript 엔진을 구체적으로 나타내는 플래그 목록을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="141fe43e973888d740e4d4b64898b6ea5fb2a9ab" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node.js documentation&lt;/a&gt; or run &lt;code&gt;node --help&lt;/code&gt; in your terminal for a list of available flags. Additionally, run &lt;code&gt;node --v8-options&lt;/code&gt; to see a list of flags that specifically refer to Node.js's V8 JavaScript engine.</source>
          <target state="translated">사용 가능한 플래그 목록은 &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node.js 문서를&lt;/a&gt; 참조 하거나 터미널에서 &lt;code&gt;node --help&lt;/code&gt; 를 실행 하세요. 또한 &lt;code&gt;node --v8-options&lt;/code&gt; 를 실행 하여 Node.js의 V8 JavaScript 엔진을 구체적으로 참조하는 플래그 목록을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0f53dbc03ca0e077f93d5d591db6a2023aed3150" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Guide&lt;/a&gt;.</source>
          <target state="translated">See the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Guide&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e892ae8b32202c13cdeb96f7a5865a50aa322aea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;native-file-drag-drop&quot;&gt;기본 파일 끌어서 놓기 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1281c35eacd3ba14e8868188e2d0a04cb5e310b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;notifications&quot;&gt;Notifications documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;notifications&quot;&gt;알림 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f8669d8d2974ee35575500f8482370ab20c1913" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;progress-bar&quot;&gt;Progress Bar documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;progress-bar&quot;&gt;진행률 표시 줄 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0324004b1500cf9129273ae604a6e8a0a77d7ef4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;represented-file&quot;&gt;Represented File documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;represented-file&quot;&gt;대표 파일 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14b8b0be3d8fca8f6bede67b169794c764f235d1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt; documentation for more information about loading, unloading, and querying active extensions.</source>
          <target state="translated">참고 항목 &lt;a href=&quot;session&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt; 로딩, 언 로딩 및 활성 확장 쿼리에 대한 자세한 내용은 문서를.</target>
        </trans-unit>
        <trans-unit id="306bcd27a98f181a636c0028de112617dac03229" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;Debugging the Main Process&lt;/a&gt; guide for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;메인 프로세스 디버깅&lt;/a&gt; 가이드를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="52eacbcd0463171ec922512e78eed66499491fb9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/electron-versioning&quot;&gt;Electron versioning doc&lt;/a&gt; for info on how to manage Electron versions in your apps.</source>
          <target state="translated">앱에서 Electron 버전을 관리하는 방법에 대한 정보 는 &lt;a href=&quot;tutorial/electron-versioning&quot;&gt;Electron 버전 관리 문서&lt;/a&gt; 를 참조 하세요.</target>
        </trans-unit>
        <trans-unit id="6e688a5cb854fc1c792d3959101f6f549d0491b3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/mac-app-store-submission-guide&quot;&gt;Mac App Store Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/mac-app-store-submission-guide&quot;&gt;Mac App Store 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="962984fadfbd1fb32e1fda52badd0604be483268" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0f64c06f4561a99588c619775a3f1915ce85ef1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/notifications&quot;&gt;Notifications documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/notifications&quot;&gt;알림 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c64e2cf9fdecf2975506de37c36b93e42acfde5e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/progress-bar&quot;&gt;Progress Bar documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/progress-bar&quot;&gt;진행률 표시 줄 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1cdd4bca32a05ef2822cdd73003e0700b7fb770" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/represented-file&quot;&gt;Represented File documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/represented-file&quot;&gt;Represented File 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d5789c931980cee7c7f2138fd03109dafa2fe82" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;tutorial/windows-store-guide&quot;&gt;Windows Store Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/windows-store-guide&quot;&gt;Windows 스토어 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f864e177f43b7cb234d77b7df618bc99d7b82ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;webContents&lt;/code&gt; documentation&lt;/a&gt; for its methods and events.</source>
          <target state="translated">메소드 및 이벤트에 대해서는 &lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;webContents&lt;/code&gt; 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae91d406fcbd618d12f5c235dc3e56d9b698056e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;windows-store-guide&quot;&gt;Windows Store Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;windows-store-guide&quot;&gt;Windows 스토어 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bafc92b2fb3801c38280ab51a2ed75b463b4c57" translate="yes" xml:space="preserve">
          <source>See the GN reference for allowable values of &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_os_the-desired-operating-system-for-the-build-possible-values&quot;&gt;&lt;code&gt;target_os&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_cpu_the-desired-cpu-architecture-for-the-build-possible-values&quot;&gt;&lt;code&gt;target_cpu&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">See the GN reference for allowable values of &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_os_the-desired-operating-system-for-the-build-possible-values&quot;&gt; &lt;code&gt;target_os&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;https://gn.googlesource.com/gn/+/master/docs/reference.md#built_in-predefined-variables-target_cpu_the-desired-cpu-architecture-for-the-build-possible-values&quot;&gt; &lt;code&gt;target_cpu&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="70457ac5b9ba95528640a6b9ef6a955b285ea1da" translate="yes" xml:space="preserve">
          <source>See the description of the &lt;code&gt;window-all-closed&lt;/code&gt; event for the differences between the &lt;code&gt;will-quit&lt;/code&gt; and &lt;code&gt;window-all-closed&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;will-quit&lt;/code&gt; 및 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트 의 차이점 은 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f76b122074131fcbeb00eb05e7a8f3d94f3bf24a" translate="yes" xml:space="preserve">
          <source>See the linked document on cloneable types</source>
          <target state="translated">복제 가능한 유형에 대한 링크 된 문서보기</target>
        </trans-unit>
        <trans-unit id="71695eaa30fa4f50190447174f2b56a0ea8f143a" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment</source>
          <target state="translated">SegmentedControlSegment</target>
        </trans-unit>
        <trans-unit id="4394ae9f946ada7d5b66bd57512f2b0ffffcc7f4" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment Object</source>
          <target state="translated">SegmentedControlSegment 객체</target>
        </trans-unit>
        <trans-unit id="82daf787f597afb408780cadbba7d97c48185665" translate="yes" xml:space="preserve">
          <source>Select &lt;em&gt;Japanese Supplemental Fonts&lt;/em&gt; and click &lt;em&gt;Install&lt;/em&gt;.</source>
          <target state="translated">Select &lt;em&gt;Japanese Supplemental Fonts&lt;/em&gt; and click &lt;em&gt;Install&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4208d8084338685df1c0978e4dd221efe2d57392" translate="yes" xml:space="preserve">
          <source>Selects the next tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 창에 다른 탭이있는 경우 다음 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a1f51b697f96978cd01f1977f3790edf482286e7" translate="yes" xml:space="preserve">
          <source>Selects the previous tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 창에 다른 탭이있는 경우 이전 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="72ac6f4346e1855115a073803fab5a0d300cceeb" translate="yes" xml:space="preserve">
          <source>Semantic Commits</source>
          <target state="translated">시맨틱 커밋</target>
        </trans-unit>
        <trans-unit id="1cb1b3bc1e2b6809211c45cfc2e520d9dc52d504" translate="yes" xml:space="preserve">
          <source>Send a message to the main process asynchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 비동기 적으로 메인 프로세스에 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7398add735120c8a300b1754e7b3ef793c612ca8" translate="yes" xml:space="preserve">
          <source>Send a message to the main process synchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 동 기적으로 기본 프로세스에 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f397258c65b3b2cd8dbe8d214f93af327c78e1a2" translate="yes" xml:space="preserve">
          <source>Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result asynchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result asynchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="f4b4c77f6429e3003367e70a199e3dc8146f9930" translate="yes" xml:space="preserve">
          <source>Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result synchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send a message to the main process via &lt;code&gt;channel&lt;/code&gt; and expect a result synchronously. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="09aae689836ac2a3417e0a9201cba4a5fc179370" translate="yes" xml:space="preserve">
          <source>Send a message to the main process, optionally transferring ownership of zero or more &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Send a message to the main process, optionally transferring ownership of zero or more &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="c1ce8d11e65905c617492dd4f43f2f16263544d3" translate="yes" xml:space="preserve">
          <source>Send a message to the renderer process, optionally transferring ownership of zero or more [&lt;code&gt;MessagePortMain&lt;/code&gt;][] objects.</source>
          <target state="translated">Send a message to the renderer process, optionally transferring ownership of zero or more [ &lt;code&gt;MessagePortMain&lt;/code&gt; ][] objects.</target>
        </trans-unit>
        <trans-unit id="c0cbf5df09d2d268e4f30db80f4b94d088ae309e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to a specific frame in a renderer process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to a specific frame in a renderer process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="3e29a5fc7e4c5a211355753ef9eef4b1b3d04a1e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 렌더러 프로세스에 비동기 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39900d36856daecbf710227a2c9adc545739c990" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. The renderer process can handle the message by listening to the &lt;code&gt;channel&lt;/code&gt; event with the &lt;a href=&quot;api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 렌더러 프로세스에 비동기 메시지를 보내거나 임의의 인수를 보낼 수도 있습니다. 렌더러 프로세스는 &lt;a href=&quot;api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈로 &lt;code&gt;channel&lt;/code&gt; 이벤트를 수신하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="7fb72802b0104119949d9f29b532cb6e097c6286" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. The renderer process can handle the message by listening to the &lt;code&gt;channel&lt;/code&gt; event with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 렌더러 프로세스에 비동기 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 렌더러 프로세스는 &lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈로 &lt;code&gt;channel&lt;/code&gt; 이벤트를 청취하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="4754ed022ee011180d0ff4a299ce7803a1b95e27" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to the main process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to the main process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="b745e43012d47507af0af126531559aff735c4ce" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to the renderer process via &lt;code&gt;channel&lt;/code&gt;, along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;postMessage&lt;/code&gt;&lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</source>
          <target state="translated">Send an asynchronous message to the renderer process via &lt;code&gt;channel&lt;/code&gt; , along with arguments. Arguments will be serialized with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, just like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;postMessage&lt;/code&gt; &lt;/a&gt;, so prototype chains will not be included. Sending Functions, Promises, Symbols, WeakMaps, or WeakSets will throw an exception.</target>
        </trans-unit>
        <trans-unit id="921d99cf1d942e986d0ed0e985fc309e73536b31" translate="yes" xml:space="preserve">
          <source>Send given command to the debugging target.</source>
          <target state="translated">주어진 명령을 디버깅 대상으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="301cbd7fde5026dc1e47b5eaaeac3527208483f1" translate="yes" xml:space="preserve">
          <source>Sending Functions, Promises, WeakMaps, WeakSets, or objects containing any such values, over IPC will now throw an exception, instead of silently converting the functions to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">IPC를 통해 함수, 약속, WeakMaps, WeakSets 또는 이러한 값을 포함하는 객체를 보내면 이제 자동으로 함수를 &lt;code&gt;undefined&lt;/code&gt; 로 변환하는 대신 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="translated">메시지 보내기</target>
        </trans-unit>
        <trans-unit id="4ad9f34cfa24ea76bb8b3f667112a1adb39d190c" translate="yes" xml:space="preserve">
          <source>Sending any objects that aren't native JS types, such as DOM objects (e.g. &lt;code&gt;Element&lt;/code&gt;, &lt;code&gt;Location&lt;/code&gt;, &lt;code&gt;DOMMatrix&lt;/code&gt;), Node.js objects (e.g. &lt;code&gt;process.env&lt;/code&gt;, &lt;code&gt;Stream&lt;/code&gt;), or Electron objects (e.g. &lt;code&gt;WebContents&lt;/code&gt;, &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;WebFrame&lt;/code&gt;) is deprecated. In Electron 8, these objects will be serialized as before with a DeprecationWarning message, but starting in Electron 9, sending these kinds of objects will throw a 'could not be cloned' error.</source>
          <target state="translated">DOM 개체 (예 : &lt;code&gt;Element&lt;/code&gt; , &lt;code&gt;Location&lt;/code&gt; , &lt;code&gt;DOMMatrix&lt;/code&gt; ), Node.js 개체 (예 : &lt;code&gt;process.env&lt;/code&gt; , &lt;code&gt;Stream&lt;/code&gt; ) 또는 Electron 개체 (예 : &lt;code&gt;WebContents&lt;/code&gt; , &lt;code&gt;BrowserWindow&lt;/code&gt; , &lt;code&gt;WebFrame&lt;/code&gt; ) 와 같이 기본 JS 유형이 아닌 개체 는 더 이상 전송되지 않습니다. . Electron 8에서 이러한 객체는 이전과 같이 DeprecationWarning 메시지와 함께 직렬화되지만 Electron 9부터 이러한 유형의 객체를 전송하면 'could not be cloned'오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cb63bcbad408c2abf45b5b5bd66d031a54435be5" translate="yes" xml:space="preserve">
          <source>Sends a message from the port, and optionally, transfers ownership of objects to other browsing contexts.</source>
          <target state="translated">포트에서 메시지를 보내고 선택적으로 개체의 소유권을 다른 검색 컨텍스트로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="56e7e87751462dc731390f6073cc81598c56f604" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;webContentsId&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">Sends a message to a window with &lt;code&gt;webContentsId&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08d2829e520d5866a20eed4c2a57a504779d223f" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;windowid&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">와 창으로 메시지를 보냅니다 &lt;code&gt;windowid&lt;/code&gt; 를 통해 &lt;code&gt;channel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b27c31ff5ce037a37f2b25c4b494e32bfda85239" translate="yes" xml:space="preserve">
          <source>Sends a message to the child window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">지정된 원점 또는 원점 환경 설정이없는 &lt;code&gt;*&lt;/code&gt; 를 사용하여 하위 창에 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="719b8fdd50b4650b966a5dd46c6c08f9d1623a9c" translate="yes" xml:space="preserve">
          <source>Sends a message to the parent window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">지정된 원산지 또는 원산지 기본 설정이없는 &lt;code&gt;*&lt;/code&gt; 를 사용하여 부모 창으로 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7a3b9453a9588f935f3b836cdd322a7738117100" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, cookies)&lt;/code&gt; on complete.</source>
          <target state="translated">일치하는 모든 쿠키를 얻을 수있는 요청 전송 &lt;code&gt;filter&lt;/code&gt; , &lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(error, cookies)&lt;/code&gt; 전체에.</target>
        </trans-unit>
        <trans-unit id="c12654c257bd1fb3bf1543e823c77b7a7ad751c7" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, and resolves a promise with the response.</source>
          <target state="translated">Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt; , and resolves a promise with the response.</target>
        </trans-unit>
        <trans-unit id="d3ce1f777ecc3e7a8a13bbb32eb04f0541d80eee" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom factor, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomFactor)&lt;/code&gt;.</source>
          <target state="translated">현재 확대 / 축소 비율을 가져 오기위한 요청을 보냅니다. &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(zoomFactor)&lt;/code&gt; 로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c2c4588d04b3b811a73cf7f809fde89008cf374" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom level, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomLevel)&lt;/code&gt;.</source>
          <target state="translated">현재 확대 / 축소 수준을 가져 오기위한 요청을 보냅니다. &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(zoomLevel)&lt;/code&gt; 으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d9b8e7c7636eb24670712f8a2b8d94e29c24623" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page.</source>
          <target state="translated">입력 &lt;code&gt;event&lt;/code&gt; 를 페이지로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="b238b8b4d2f3f771a23e3a661eb85df90506d594" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page. &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; containing the contents needs to be focused for &lt;code&gt;sendInputEvent()&lt;/code&gt; to work.</source>
          <target state="translated">페이지에 입력 &lt;code&gt;event&lt;/code&gt; 를 보냅니다 . &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;sendInputEvent()&lt;/code&gt; 가 작동 하려면 내용이 포함 된 &lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 에&lt;/a&gt; 초점을 맞춰야 합니다.</target>
        </trans-unit>
        <trans-unit id="84c5cda6527732e60e0c4dc69e60c71e5fdce3db" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page. &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; containing the contents needs to be focused for &lt;code&gt;sendInputEvent()&lt;/code&gt; to work.</source>
          <target state="translated">입력 &lt;code&gt;event&lt;/code&gt; 를 페이지로 보냅니다 . &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;sendInputEvent()&lt;/code&gt; 가 작동 하려면 내용이 포함 된 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 에&lt;/a&gt; 포커스를 두어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c5cfbdf37308003d0b30614f7029c3869dcfa23a" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would just use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 를 애플리케이션의 첫 번째 응답자에게 보냅니다 . 기본 macOS 메뉴 비헤이비어를 에뮬레이션하는 데 사용됩니다. 일반적으로 &lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt; 속성 만 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="78fa6bf2f08dac06cd52d4ac40bc4fa4bf058542" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would use the &lt;a href=&quot;api/menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;api/menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">애플리케이션의 첫 번째 응답자에게 &lt;code&gt;action&lt;/code&gt; 를 보냅니다 . 기본 macOS 메뉴 동작을 에뮬레이션하는 데 사용됩니다. 일반적으로 &lt;a href=&quot;api/menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;api/menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt; 속성을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="720320cf3e3e7ec9e0e5d6aebbc02e4b141a3ca8" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would use the &lt;a href=&quot;menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d92d32aa796cabbd87cf999a10e42b89f9c87024" translate="yes" xml:space="preserve">
          <source>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The &lt;code&gt;finish&lt;/code&gt; event is emitted just after the end operation.</source>
          <target state="translated">요청 데이터의 마지막 청크를 보냅니다. 후속 쓰기 또는 종료 작업은 허용되지 않습니다. &lt;code&gt;finish&lt;/code&gt; 이벤트는 단지 최종 작업 후 배출된다.</target>
        </trans-unit>
        <trans-unit id="17f228be7faef7815f5475737e55f8ffbdd2b4b6" translate="yes" xml:space="preserve">
          <source>Sentry</source>
          <target state="translated">Sentry</target>
        </trans-unit>
        <trans-unit id="a75ee8482a2c82952f1802a71a9ee0d0e4f4ff43" translate="yes" xml:space="preserve">
          <source>Serbian</source>
          <target state="translated">Serbian</target>
        </trans-unit>
        <trans-unit id="427973e4372d64bc21861e671a9618503e480670" translate="yes" xml:space="preserve">
          <source>Serbo-Croatian</source>
          <target state="translated">Serbo-Croatian</target>
        </trans-unit>
        <trans-unit id="d5a176a262fec08138c0ed9861403e484856c797" translate="yes" xml:space="preserve">
          <source>ServiceWorkerInfo Object</source>
          <target state="translated">ServiceWorkerInfo Object</target>
        </trans-unit>
        <trans-unit id="0a82444e5cf00073b6a0f03f62b33904edfb9b08" translate="yes" xml:space="preserve">
          <source>ServiceWorkers</source>
          <target state="translated">ServiceWorkers</target>
        </trans-unit>
        <trans-unit id="cc48b6b6f41313fcbf7e6d28144f8119b84edc00" translate="yes" xml:space="preserve">
          <source>Sesotho</source>
          <target state="translated">Sesotho</target>
        </trans-unit>
        <trans-unit id="615b44ac8bf6fbdb390f334c49d76f2b76637dea" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;CLANG_REVISION&lt;/code&gt; in &lt;code&gt;script/update-clang.sh&lt;/code&gt; to match the version Chromium is using.</source>
          <target state="translated">설정 &lt;code&gt;CLANG_REVISION&lt;/code&gt; 의 &lt;code&gt;script/update-clang.sh&lt;/code&gt; 크롬이 사용하는 버전과 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04dfd57492f4ad8bf029c8b1d42379508575b183" translate="yes" xml:space="preserve">
          <source>Set By Electron</source>
          <target state="translated">Set By Electron</target>
        </trans-unit>
        <trans-unit id="87b775ea6e988edfb5d895216c1a7c32c4c89b62" translate="yes" xml:space="preserve">
          <source>Set a custom locale.</source>
          <target state="translated">사용자 정의 로캘을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="1f3db5b07d319956462a15d9e9697158fbc77f20" translate="yes" xml:space="preserve">
          <source>Set a custom position for the traffic light buttons. Can only be used with &lt;code&gt;titleBarStyle&lt;/code&gt; set to &lt;code&gt;hidden&lt;/code&gt;.</source>
          <target state="translated">Set a custom position for the traffic light buttons. Can only be used with &lt;code&gt;titleBarStyle&lt;/code&gt; set to &lt;code&gt;hidden&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5128a8604845811e183a473b5cb6e43f97294354" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called.</source>
          <target state="translated">Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called.</target>
        </trans-unit>
        <trans-unit id="e48b662602383e1a650c7f01c1eb6efd6f6008d8" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called. This API is only available on macOS, if you need to add/update extra parameters on Linux and Windows after your first call to &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;start&lt;/code&gt; again with the updated &lt;code&gt;extra&lt;/code&gt; options.</source>
          <target state="translated">충돌 보고서와 함께 보낼 추가 매개 변수를 설정하십시오. 여기에 지정된 값은 &lt;code&gt;start&lt;/code&gt; 이 호출 될 때 &lt;code&gt;extra&lt;/code&gt; 옵션을 통해 설정된 모든 값과 함께 전송됩니다 . 이 API는 추가해야하는 경우 / 첫 번째 호출 후 Linux 및 Windows에서 업데이트를 추가 매개 변수는 다음의 제품에, 맥 OS에서만 사용할 수 있습니다 &lt;code&gt;start&lt;/code&gt; 당신이 호출 할 수 있습니다 &lt;code&gt;start&lt;/code&gt; 업데이트 다시 &lt;code&gt;extra&lt;/code&gt; 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="02839a2f233f11d3f8cc0847ac0196c5644bb103" translate="yes" xml:space="preserve">
          <source>Set guest page muted.</source>
          <target state="translated">손님 페이지를 음소거했습니다.</target>
        </trans-unit>
        <trans-unit id="cd0e769eb096f3a6f326481bc15a4201393bc940" translate="yes" xml:space="preserve">
          <source>Set some breakpoints in &lt;code&gt;main.js&lt;/code&gt;, and start debugging in the &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;Debug View&lt;/a&gt;. You should be able to hit the breakpoints.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; 에 중단 점을 설정 하고 &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;디버그보기&lt;/a&gt; 에서 디버깅을 시작하십시오 . 중단 점에 도달 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="11a39e31562d3710832ed9060f4c65605e469b2b" translate="yes" xml:space="preserve">
          <source>Set some breakpoints in the .cc files of your choosing in the native Electron C++ code, and start debugging in the &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;Debug View&lt;/a&gt;.</source>
          <target state="translated">기본 Electron C ++ 코드에서 선택한 .cc 파일에 몇 가지 중단 점을 설정하고 &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;디버그보기&lt;/a&gt; 에서 디버깅을 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="5b471c6934637140581395be23de584b9edaf293" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;MinimumSDKVersion&lt;/code&gt; to &lt;code&gt;10.10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MinimumSDKVersion&lt;/code&gt; 을 &lt;code&gt;10.10&lt;/code&gt; 으로 설정</target>
        </trans-unit>
        <trans-unit id="023214961465040a8590a9dde37cc696c8b9883d" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;Secure Keyboard Entry&lt;/code&gt; is enabled in your application.</source>
          <target state="translated">Set the &lt;code&gt;Secure Keyboard Entry&lt;/code&gt; is enabled in your application.</target>
        </trans-unit>
        <trans-unit id="5b2e2e7fff536eb9ddf50f40baf5ea449c9a523e" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;host:port&lt;/code&gt; to be used when the inspector is activated. Useful when activating the inspector by sending the SIGUSR1 signal. Default host is &lt;code&gt;127.0.0.1&lt;/code&gt;.</source>
          <target state="translated">인스펙터가 활성화되었을 때 사용할 &lt;code&gt;host:port&lt;/code&gt; 를 설정합니다 . SIGUSR1 신호를 전송하여 검사자를 활성화 할 때 유용합니다. 기본 호스트는 &lt;code&gt;127.0.0.1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b0e0b8994305f21061e7f2767cbd70675748e08b" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file on macOS. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details. On Linux, values must be set in order to be shown; there are no defaults.</source>
          <target state="translated">Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file on macOS. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details. On Linux, values must be set in order to be shown; there are no defaults.</target>
        </trans-unit>
        <trans-unit id="92cf2be8dfdc293ae7fa03b35e87fb813c43bbf2" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details.</source>
          <target state="translated">정보 패널 옵션을 설정하십시오. 앱의 &lt;code&gt;.plist&lt;/code&gt; 파일에 정의 된 값보다 우선 합니다. 자세한 내용은 &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec7d7721ce717d1561dc072f65cf16a915a88ba" translate="yes" xml:space="preserve">
          <source>Set the app's login item settings.</source>
          <target state="translated">앱의 로그인 항목 설정을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="6e0a08b6fcf27bd16fc47e3ef22595040af25803" translate="yes" xml:space="preserve">
          <source>Set the content security policy of the isolated world.</source>
          <target state="translated">고립 된 세계의 콘텐츠 보안 정책을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bd569f6a9da9e1c91aeb48048ab5d92a09399a6f" translate="yes" xml:space="preserve">
          <source>Set the following Environment Variables:</source>
          <target state="translated">다음 환경 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b2cc131d67a290a6d88094b91656eebfcc131d4f" translate="yes" xml:space="preserve">
          <source>Set the name of the isolated world. Useful in devtools.</source>
          <target state="translated">고립 된 세계의 이름을 설정하십시오. devtools에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9194cdfaef43f6c163697328915dd5a8291cc957" translate="yes" xml:space="preserve">
          <source>Set the security origin of the isolated world.</source>
          <target state="translated">고립 된 세계의 보안 원점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="c0da13dd98a6090c45fad6fddc0a7e8ccdd855b6" translate="yes" xml:space="preserve">
          <source>Set the security origin, content security policy and name of the isolated world. Note: If the &lt;code&gt;csp&lt;/code&gt; is specified, then the &lt;code&gt;securityOrigin&lt;/code&gt; also has to be specified.</source>
          <target state="translated">Set the security origin, content security policy and name of the isolated world. Note: If the &lt;code&gt;csp&lt;/code&gt; is specified, then the &lt;code&gt;securityOrigin&lt;/code&gt; also has to be specified.</target>
        </trans-unit>
        <trans-unit id="9b1ca9457899c08b346660869529f5a371273cf0" translate="yes" xml:space="preserve">
          <source>Set the size of the page. This is only supported for &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; guest contents.</source>
          <target state="translated">페이지 크기를 설정하십시오. 이것은 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 게스트 컨텐츠 에만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="37d7ce4e47234a85eae28084564125e4452d17a4" translate="yes" xml:space="preserve">
          <source>Set the trash implementation on Linux. Default is &lt;code&gt;gio&lt;/code&gt;.</source>
          <target state="translated">Set the trash implementation on Linux. Default is &lt;code&gt;gio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b71a3de4c9539412238109eeef9747c83cba89aa" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NSUserDefaults&lt;/code&gt; 에서 &lt;code&gt;key&lt;/code&gt; 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="46619168d5abf2b87e0a02117f598273b464f4d8" translate="yes" xml:space="preserve">
          <source>Set this string as &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; in the environment, using the Windbg menus, or by typing the &lt;code&gt;.sympath&lt;/code&gt; command. If you would like to get symbols from Microsoft's symbol server as well, you should list that first:</source>
          <target state="translated">Windbg 메뉴를 사용하거나 &lt;code&gt;.sympath&lt;/code&gt; 명령 을 입력하여 환경 에서이 문자열을 &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; 로 설정하십시오 . Microsoft의 심볼 서버에서도 심볼을 얻으려면 먼저 해당 심볼을 나열해야합니다.</target>
        </trans-unit>
        <trans-unit id="990794dde4fce604b77700bf70eb7956e7fc2854" translate="yes" xml:space="preserve">
          <source>Set this to the value to be returned in a synchronous message.</source>
          <target state="translated">동기 메시지에 리턴 될 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ef6b0bd3002b4278f8e7ed967cb48b05b6f52f2d" translate="yes" xml:space="preserve">
          <source>Set thumbnail toolbar</source>
          <target state="translated">Set thumbnail toolbar</target>
        </trans-unit>
        <trans-unit id="c7ace77327a9b6b0eb1cd6c6fbad48e596d4c5e1" translate="yes" xml:space="preserve">
          <source>Set user tasks</source>
          <target state="translated">Set user tasks</target>
        </trans-unit>
        <trans-unit id="3e8dc4c5eabfddf9a7c13af8083300ff171e8192" translate="yes" xml:space="preserve">
          <source>Set your tokens and environment variables</source>
          <target state="translated">토큰 및 환경 변수 설정</target>
        </trans-unit>
        <trans-unit id="fcabe3320d4d2fe8250e6fd9149fd060d6a02215" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;menu&lt;/code&gt; as the application menu on macOS. On Windows and Linux, the &lt;code&gt;menu&lt;/code&gt; will be set as each window's top menu.</source>
          <target state="translated">macOS에서 메뉴를 응용 프로그램 &lt;code&gt;menu&lt;/code&gt; 로 설정 합니다 . Windows 및 Linux에서 &lt;code&gt;menu&lt;/code&gt; 는 각 창의 최상위 메뉴로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="44ee768780ac31f433d81cfa60398b836e99b866" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;parent&lt;/code&gt; as current window's parent window, passing &lt;code&gt;null&lt;/code&gt; will turn current window into a top-level window.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; 를 현재 창의 부모 창으로 설정합니다. &lt;code&gt;null&lt;/code&gt; 을 전달 하면 현재 창이 최상위 창으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="e53cc5934631e24bf519cbb45bc8d436a1baa394" translate="yes" xml:space="preserve">
          <source>Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to convey some sort of application status or to passively notify the user.</source>
          <target state="translated">현재 작업 표시 줄 아이콘에 16 x 16 픽셀 오버레이를 설정합니다. 일반적으로 일종의 응용 프로그램 상태를 전달하거나 수동으로 사용자에게 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69b3972da4258b12b92f71f96e53814c40885eb9" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error)&lt;/code&gt; on complete.</source>
          <target state="translated">쿠키를 &lt;code&gt;details&lt;/code&gt; 로 설정합니다 . &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(error)&lt;/code&gt; 과 함께 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="f862d426154664ca0ec7dcc3834ad9fab1792f1b" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;.</source>
          <target state="translated">Sets a cookie with &lt;code&gt;details&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d73f3ad6b7dcc615503667fa14af3e92b810d62a" translate="yes" xml:space="preserve">
          <source>Sets a provider for spell checking in input fields and text areas.</source>
          <target state="translated">입력 필드 및 텍스트 영역에서 맞춤법 검사를위한 공급자를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff1039c3d538d298053860a1181740831c87486f" translate="yes" xml:space="preserve">
          <source>Sets download saving directory. By default, the download directory will be the &lt;code&gt;Downloads&lt;/code&gt; under the respective app folder.</source>
          <target state="translated">다운로드 저장 디렉토리를 설정합니다. 기본적으로 다운로드 디렉토리는 해당 앱 폴더 아래의 &lt;code&gt;Downloads&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f98d19a9dc8d0c5cb0dbbcd59a507c293e17a90b" translate="yes" xml:space="preserve">
          <source>Sets or creates a directory your app's logs which can then be manipulated with &lt;code&gt;app.getPath()&lt;/code&gt; or &lt;code&gt;app.setPath(pathName, newPath)&lt;/code&gt;.</source>
          <target state="translated">Sets or creates a directory your app's logs which can then be manipulated with &lt;code&gt;app.getPath()&lt;/code&gt; or &lt;code&gt;app.setPath(pathName, newPath)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d53db72c06f060c7bdb6fb5f0a84889913b252f8" translate="yes" xml:space="preserve">
          <source>Sets or removes a custom Jump List for the application, and returns one of the following strings:</source>
          <target state="translated">응용 프로그램의 사용자 정의 점프 목록을 설정하거나 제거하고 다음 문자열 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a82dd772291cfd7bec76d72317acf8bc124765ba" translate="yes" xml:space="preserve">
          <source>Sets progress value in progress bar. Valid range is [0, 1.0].</source>
          <target state="translated">진행률 표시 줄에 진행률 값을 설정합니다. 유효한 범위는 [0, 1.0]입니다.</target>
        </trans-unit>
        <trans-unit id="290783aef4e7c376c84c825743a28d792faad7b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this dock icon.</source>
          <target state="translated">이 독 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="251fc90db70cb7037b10cbe3f92c3f4b138d7122" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon when pressed on macOS.</source>
          <target state="translated">macOS에서 누를 때이 트레이 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="50e0143fe4c1102c9bf0e8e010a67500e7b42631" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon.</source>
          <target state="translated">이 트레이 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="6905ec900101f6e4a3f2037a93b01422b34ddb71" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;item&lt;/code&gt; as dragging item for current drag-drop operation, &lt;code&gt;file&lt;/code&gt; is the absolute path of the file to be dragged, and &lt;code&gt;icon&lt;/code&gt; is the image showing under the cursor when dragging.</source>
          <target state="translated">항목을 현재 끌어서 놓기 작업의 끌기 &lt;code&gt;item&lt;/code&gt; 으로 설정하고 , &lt;code&gt;file&lt;/code&gt; 은 끌 파일의 절대 경로이며, &lt;code&gt;icon&lt;/code&gt; 은 끌 때 커서 아래에 표시되는 이미지입니다.</target>
        </trans-unit>
        <trans-unit id="23f9d7b3d7555797eb9ab914db969433a4ad54d8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar, setting it to &lt;code&gt;null&lt;/code&gt; will remove the menu bar.</source>
          <target state="translated">세트 &lt;code&gt;menu&lt;/code&gt; 로 설정, 윈도우의 메뉴 바 등을 &lt;code&gt;null&lt;/code&gt; 메뉴 표시 줄을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="16da981967d5be5af5148d9c2df7dc8d02ab9e58" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar.</source>
          <target state="translated">Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar.</target>
        </trans-unit>
        <trans-unit id="7c137b86904d3e1181cfb7ce1cb4e0f286f7e116" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;path&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">페퍼 플래시 플러그인 의 &lt;code&gt;path&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="279ab3b4dac0ea37dba9e40f9865562ac862180e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;url&lt;/code&gt; and initialize the auto updater.</source>
          <target state="translated">세트 &lt;code&gt;url&lt;/code&gt; 하고 자동 업데이트 프로그램을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="411613b1ec44176c1d91a8f311a52c06789cbab1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;version&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">페퍼 플래시 플러그인 의 &lt;code&gt;version&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c84124d8cbb5433c803fb60bb724e59abaad1907" translate="yes" xml:space="preserve">
          <source>Sets the activation policy for a given app.</source>
          <target state="translated">Sets the activation policy for a given app.</target>
        </trans-unit>
        <trans-unit id="37cf75b7af620d3a285010f92c6898611f0beab5" translate="yes" xml:space="preserve">
          <source>Sets the appearance setting for your application, this should override the system default and override the value of &lt;code&gt;getEffectiveAppearance&lt;/code&gt;.</source>
          <target state="translated">Sets the appearance setting for your application, this should override the system default and override the value of &lt;code&gt;getEffectiveAppearance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="478045962ca72fedb01b6d52b1c224ce8054eb20" translate="yes" xml:space="preserve">
          <source>Sets the application's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;dock menu&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램의 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;도크 메뉴를&lt;/a&gt; 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="231429ccc98827d50332bbcafa2833f3f72b138d" translate="yes" xml:space="preserve">
          <source>Sets the application's [dock menu][dock-menu].</source>
          <target state="translated">응용 프로그램의 [도킹 메뉴] [도크 메뉴]를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="153223e250240ad5f3c1f3665714c88e8ef3e18b" translate="yes" xml:space="preserve">
          <source>Sets the background color of the window. See &lt;a href=&quot;#setting-backgroundcolor&quot;&gt;Setting &lt;code&gt;backgroundColor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sets the background color of the window. See &lt;a href=&quot;#setting-backgroundcolor&quot;&gt;Setting &lt;code&gt;backgroundColor&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6a17957d2f10c933c37aa11da3b5570f08602910" translate="yes" xml:space="preserve">
          <source>Sets the certificate verify proc for &lt;code&gt;session&lt;/code&gt;, the &lt;code&gt;proc&lt;/code&gt; will be called with &lt;code&gt;proc(request, callback)&lt;/code&gt; whenever a server certificate verification is requested. Calling &lt;code&gt;callback(0)&lt;/code&gt; accepts the certificate, calling &lt;code&gt;callback(-2)&lt;/code&gt; rejects it.</source>
          <target state="translated">인증서에 대한 PROC 확인 설정합니다 &lt;code&gt;session&lt;/code&gt; 의 &lt;code&gt;proc&lt;/code&gt; 호출됩니다 &lt;code&gt;proc(request, callback)&lt;/code&gt; 서버 인증서 확인이 요청 될 때마다. 호출 &lt;code&gt;callback(0)&lt;/code&gt; 호출, 인증서를 받아 &lt;code&gt;callback(-2)&lt;/code&gt; 를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="7e8e6665350130532caaa387575f5aeeb432cdb4" translate="yes" xml:space="preserve">
          <source>Sets the context menu for this icon.</source>
          <target state="translated">이 아이콘의 컨텍스트 메뉴를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="47060fc887d88d145b8ae1672076595718bcf2a9" translate="yes" xml:space="preserve">
          <source>Sets the counter badge for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="translated">현재 앱의 카운터 배지를 설정합니다. 카운트를 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 배지가 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="6271e7321caf00a8c9eb2468dece20f95f526834" translate="yes" xml:space="preserve">
          <source>Sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">Sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</target>
        </trans-unit>
        <trans-unit id="b22db1f55140252f5b6f27842096a7127c3235d4" translate="yes" xml:space="preserve">
          <source>Sets the file descriptor soft limit to &lt;code&gt;maxDescriptors&lt;/code&gt; or the OS hard limit, whichever is lower for the current process.</source>
          <target state="translated">파일 디스크립터 소프트 한계를 &lt;code&gt;maxDescriptors&lt;/code&gt; 또는 OS 하드 한계 중 현재 프로세스에 대해 더 낮은 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="900a5d9da274ab73249fae83ad367e1fa8ca94ba" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission checks for the &lt;code&gt;session&lt;/code&gt;. Returning &lt;code&gt;true&lt;/code&gt; will allow the permission and &lt;code&gt;false&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionCheckHandler(null)&lt;/code&gt;.</source>
          <target state="translated">Sets the handler which can be used to respond to permission checks for the &lt;code&gt;session&lt;/code&gt; . Returning &lt;code&gt;true&lt;/code&gt; will allow the permission and &lt;code&gt;false&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionCheckHandler(null)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84e76ee6dd09d76ffebb057cee2549f82c568b6e" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission requests for the &lt;code&gt;session&lt;/code&gt;. Calling &lt;code&gt;callback(true)&lt;/code&gt; will allow the permission and &lt;code&gt;callback(false)&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 대한 권한 요청에 응답하는 데 사용할 수있는 핸들러를 설정합니다 . &lt;code&gt;callback(true)&lt;/code&gt; 호출 하면 권한이 허용되고 &lt;code&gt;callback(false)&lt;/code&gt; 은 권한 을 거부합니다. 핸들러를 지우려면 &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="160238f1004dace71015337d0fa49ada48136e08" translate="yes" xml:space="preserve">
          <source>Sets the hover text for this tray icon.</source>
          <target state="translated">이 트레이 아이콘의 호버 텍스트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f620ce244e19e7037a80498c69e715898a04054c" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</source>
          <target state="translated">최대 및 최소 레이아웃 기반 (예 : 비 시각적) 줌 레벨을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1e70c9ccdb495c7ec470dc0b177457079b9a31e3" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum pinch-to-zoom level.</source>
          <target state="translated">최대 및 최소 핀치 투 줌 레벨을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4acaadb2ba73fce19695ad12402e5934ae8b4bbe" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 최대 크기를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ec44967d4662b91c9b3f114ee8dbd993031b1517" translate="yes" xml:space="preserve">
          <source>Sets the minimum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 최소 크기를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="02185a3b76590596fc0a2b0e9e046e9d1cbf98bc" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux does nothing.</source>
          <target state="translated">창의 불투명도를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f14fa47e6ec17687bc4b88373f03565626dfab9" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux, does nothing. Out of bound number values are clamped to the [0, 1] range.</source>
          <target state="translated">Sets the opacity of the window. On Linux, does nothing. Out of bound number values are clamped to the [0, 1] range.</target>
        </trans-unit>
        <trans-unit id="313ceac0d243f0e16e786feb89bf3622601d9cdd" translate="yes" xml:space="preserve">
          <source>Sets the option to ignore double click events. Ignoring these events allows you to detect every individual click of the tray icon.</source>
          <target state="translated">Sets the option to ignore double click events. Ignoring these events allows you to detect every individual click of the tray icon.</target>
        </trans-unit>
        <trans-unit id="2d3956e4e5ad14d58c86116c39a15d30905b01aa" translate="yes" xml:space="preserve">
          <source>Sets the pathname of the file the window represents, and the icon of the file will show in window's title bar.</source>
          <target state="translated">윈도우가 나타내는 파일의 경로 이름을 설정하면 파일의 아이콘이 윈도우의 제목 표시 줄에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c281609f460bb0635f2bc8f3787ceb433cbb6792" translate="yes" xml:space="preserve">
          <source>Sets the properties for the window's taskbar button.</source>
          <target state="translated">창의 작업 표시 줄 버튼에 대한 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7c8c58c282aea9b22e2a024b2110f2eabc609253" translate="yes" xml:space="preserve">
          <source>Sets the proxy settings.</source>
          <target state="translated">프록시 설정을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="51e0ad3eb7d3f90dd1e90c0d2a66935e2de393e2" translate="yes" xml:space="preserve">
          <source>Sets the referrer URL for the guest page.</source>
          <target state="translated">게스트 페이지의 리퍼러 URL을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4ff8beeb28b4cc380af16ab92799d2eaa44aa341" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{ x: 0, y: 0, width: 0, height: 0 }&lt;/code&gt;.</source>
          <target state="translated">Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{ x: 0, y: 0, width: 0, height: 0 }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba636a58b5e807db3627d3269957da72f7b802b3" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt;.</source>
          <target state="translated">작업 표시 줄의 창 위로 마우스를 가져갈 때 표시되는 축소판 이미지로 표시 할 창의 영역을 설정합니다. 빈 영역 &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt; 을 지정하여 축소판을 전체 창으로 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="222d29f00c5b8fe41a83a99e0a4aaab642809d3a" translate="yes" xml:space="preserve">
          <source>Sets the session used by the page. If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. By assigning the same &lt;code&gt;partition&lt;/code&gt;, multiple pages can share the same session. If the &lt;code&gt;partition&lt;/code&gt; is unset then default session of the app will be used.</source>
          <target state="translated">페이지에서 사용하는 세션을 설정합니다. 경우 &lt;code&gt;partition&lt;/code&gt; 과 시작이 &lt;code&gt;persist:&lt;/code&gt; 페이지가 같은과 응용 프로그램의 모든 페이지에 사용할 수있는 지속적인 세션을 사용하는 &lt;code&gt;partition&lt;/code&gt; . &lt;code&gt;persist:&lt;/code&gt; 접두사 가 없으면 페이지는 메모리 내 세션을 사용합니다. 동일한 &lt;code&gt;partition&lt;/code&gt; 을 지정하면 여러 페이지가 동일한 세션을 공유 할 수 있습니다. &lt;code&gt;partition&lt;/code&gt; 이 설정되어 있지 않으면 앱의 기본 세션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4871ac41dc8e0cc5d8a79634f3e4c8c2225c26" translate="yes" xml:space="preserve">
          <source>Sets the string to be displayed in the dock&amp;rsquo;s badging area.</source>
          <target state="translated">독의 배지 영역에 표시 할 문자열을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4ed70b5602ed50380f332352a448a5d46ca14626" translate="yes" xml:space="preserve">
          <source>Sets the title displayed aside of the tray icon in the status bar (Support ANSI colors).</source>
          <target state="translated">상태 표시 줄에서 트레이 아이콘 옆에 표시되는 제목을 설정합니다 (ANSI 색상 지원).</target>
        </trans-unit>
        <trans-unit id="2845a504b739ec8844b7861ca4d0479975fa2ba4" translate="yes" xml:space="preserve">
          <source>Sets the title displayed next to the tray icon in the status bar (Support ANSI colors).</source>
          <target state="translated">Sets the title displayed next to the tray icon in the status bar (Support ANSI colors).</target>
        </trans-unit>
        <trans-unit id="ad1d0ca05bd8b312ef122cdef7c9c56ba92bfd82" translate="yes" xml:space="preserve">
          <source>Sets the toolTip that is displayed when hovering over the window thumbnail in the taskbar.</source>
          <target state="translated">작업 표시 줄의 창 축소판 위에 마우스를 놓을 때 표시되는 도구 설명을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f1fed9386060f627fae88f6fd5ff6df70a290474" translate="yes" xml:space="preserve">
          <source>Sets the touchBar layout for the current window. Specifying &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; clears the touch bar. This method only has an effect if the machine has a touch bar and is running on macOS 10.12.1+.</source>
          <target state="translated">현재 창의 터치 바 레이아웃을 설정합니다. &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 를 지정 하면 터치 바가 지워집니다. 이 방법은 컴퓨터에 터치 바가 있고 macOS 10.12.1 이상에서 실행중인 경우에만 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd49171152fe57bd3038e165f32fc1c7c0d42709" translate="yes" xml:space="preserve">
          <source>Sets the user agent for the guest page before the page is navigated to. Once the page is loaded, use the &lt;code&gt;setUserAgent&lt;/code&gt; method to change the user agent.</source>
          <target state="translated">페이지를 탐색하기 전에 게스트 페이지의 사용자 에이전트를 설정합니다. 페이지가로드되면 &lt;code&gt;setUserAgent&lt;/code&gt; 메소드를 사용하여 사용자 에이전트를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="81370e69987ebdde392e760a63b1068c9e8874db" translate="yes" xml:space="preserve">
          <source>Sets when the tray's icon background becomes highlighted (in blue).</source>
          <target state="translated">트레이의 아이콘 배경이 파란색으로 강조 표시 될 때 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fc658c9234d2127d992372efec1e104afb6c25d5" translate="yes" xml:space="preserve">
          <source>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="translated">창 최대화 / 확대 / 축소 단추가 전체 화면 모드를 전환하거나 창을 최대화할지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="60cbb16f01710677c4aca8ab228fc78a8b5a4f30" translate="yes" xml:space="preserve">
          <source>Sets whether the menu bar should be visible. If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">메뉴 표시 줄을 표시할지 여부를 설정합니다. 메뉴 막대가 자동 숨기기 인 경우 사용자는 단일 &lt;code&gt;Alt&lt;/code&gt; 키를 눌러 메뉴 막대를 계속 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29572ab350834fc7ed97067a2571ca0cf5d07264" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually closed by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 닫을 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="937a60be613e0a567f310ec31e8702820020bfc2" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually maximized by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 최대화 할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e08d12f4202c84cf190f1e4b2b3f89a182a8e3c" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually minimized by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 최소화 할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dbe36a7ed49fa2de8da71b4def169f5aa632ac22" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by the user.</source>
          <target state="translated">Sets whether the window can be manually resized by the user.</target>
        </trans-unit>
        <trans-unit id="bc46361f979c4d9608eacf60c091b8f13224a076" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by user.</source>
          <target state="translated">사용자가 창 크기를 수동으로 조정할 수 있는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0ee42db3c183bd619c91435b2e71bbd6c1476421" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be moved by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 이동할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="660351dc0ff01662151be83ecefa7781c7d7ea1e" translate="yes" xml:space="preserve">
          <source>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">창 메뉴 표시 줄이 자동으로 숨겨 지도록 설정합니다. 일단 설정되면 메뉴 막대는 사용자가 단일 &lt;code&gt;Alt&lt;/code&gt; 키를 누를 때만 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="abdc140d5edc99f9aeb4494edf72d927570abbf0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be in fullscreen mode.</source>
          <target state="translated">창이 전체 화면 모드 여야하는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5cacce487fa9cb3032791e9ea0c0822f8d560079" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be visible on all workspaces.</source>
          <target state="translated">모든 작업 공간에서 창을 표시할지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="283bb96a2f76d8f6cf7a27e92ae862f911df9eda" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow.</source>
          <target state="translated">Sets whether the window should have a shadow.</target>
        </trans-unit>
        <trans-unit id="313834a95379cc46f912f8547ebec8f8298ef2a0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow. On Windows and Linux does nothing.</source>
          <target state="translated">창에 그림자가 있어야하는지 여부를 설정합니다. Windows 및 Linux에서는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5383b5cfd52722f50fe448048159329ed6ee4604" translate="yes" xml:space="preserve">
          <source>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.</source>
          <target state="translated">창을 항상 다른 창 위에 표시할지 여부를 설정합니다. 이 설정을 한 후에는 창은 여전히 ​​일반 창이며 초점을 맞출 수없는 도구 상자 창이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0fbb68c5df5729cd832acf6ef950bcb9035f7f4b" translate="yes" xml:space="preserve">
          <source>Sets whether the window traffic light buttons should be visible.</source>
          <target state="translated">Sets whether the window traffic light buttons should be visible.</target>
        </trans-unit>
        <trans-unit id="cbb1d7c6f064d9ffaa5f9b140d9b2b956a8a19c3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;backgroundColor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backgroundColor&lt;/code&gt; 설정</target>
        </trans-unit>
        <trans-unit id="07a1bef1e2cd46e331f4a3c105b5a0dcf23bc5af" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;npm_config_arch=arm64&lt;/code&gt; in the environment creates the correct arm64 &lt;code&gt;.obj&lt;/code&gt; files, but the standard &lt;em&gt;Developer Command Prompt for VS 2017&lt;/em&gt; will use the x64 linker. To fix this:</source>
          <target state="translated">환경에서 &lt;code&gt;npm_config_arch=arm64&lt;/code&gt; 를 설정 하면 올바른 arm64 &lt;code&gt;.obj&lt;/code&gt; 파일이 생성 되지만 &lt;em&gt;VS 2017 용&lt;/em&gt; 표준 &lt;em&gt;개발자 명령 프롬프트&lt;/em&gt; 는 x64 링커를 사용합니다. 이 문제를 해결하려면 :</target>
        </trans-unit>
        <trans-unit id="ee68222f54da11bac7224f90e545c0ed766bc32b" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;{ compress: false }&lt;/code&gt; in &lt;code&gt;crashReporter.start&lt;/code&gt; is deprecated. Nearly all crash ingestion servers support gzip compression. This option will be removed in a future version of Electron.</source>
          <target state="translated">&lt;code&gt;crashReporter.start&lt;/code&gt; 에서 &lt;code&gt;{ compress: false }&lt;/code&gt; 설정 은 더 이상 사용되지 않습니다. 거의 모든 크래시 수집 서버가 gzip 압축을 지원합니다. 이 옵션은 향후 Electron 버전에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="f9ce609889da174d9c83ea3624c698222b364eb0" translate="yes" xml:space="preserve">
          <source>Setting Breakpoints</source>
          <target state="translated">중단 점 설정</target>
        </trans-unit>
        <trans-unit id="e5547a55fab0d40b3cabc33cae036e7f42cdb37b" translate="yes" xml:space="preserve">
          <source>Setting Menu for Specific Browser Window (&lt;em&gt;Linux&lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt;)</source>
          <target state="translated">특정 브라우저 창에 대한 설정 메뉴 ( &lt;em&gt;Linux &lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="1458460daaa5e87b409b5cb4d401b501e226605c" translate="yes" xml:space="preserve">
          <source>Setting Up Symbol Server in Debugger</source>
          <target state="translated">디버거에서 심볼 서버 설정</target>
        </trans-unit>
        <trans-unit id="41b5f3fc41a2cfb714a7b27958ac0ae504c731da" translate="yes" xml:space="preserve">
          <source>Setting a window shape determines the area within the window where the system permits drawing and user interaction. Outside of the given region, no pixels will be drawn and no mouse events will be registered. Mouse events outside of the region will not be received by that window, but will fall through to whatever is behind the window.</source>
          <target state="translated">Setting a window shape determines the area within the window where the system permits drawing and user interaction. Outside of the given region, no pixels will be drawn and no mouse events will be registered. Mouse events outside of the region will not be received by that window, but will fall through to whatever is behind the window.</target>
        </trans-unit>
        <trans-unit id="e39f7090f23f74e7e9b0ab5052ee54a40828e151" translate="yes" xml:space="preserve">
          <source>Setting the WebRTC IP handling policy allows you to control which IPs are exposed via WebRTC. See &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; for more details.</source>
          <target state="translated">WebRTC IP 처리 정책을 설정하면 WebRTC를 통해 노출되는 IP를 제어 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a16a26548511f2ea4c60638d6f0db75cbec1a57" translate="yes" xml:space="preserve">
          <source>Setting the parameter to negative values (e.g. &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar, whereas setting it to values greater than &lt;code&gt;1&lt;/code&gt; (e.g. &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to indeterminate mode (Windows-only -- it will clamp to 100% otherwise). In this mode, a progress bar remains active but does not show an actual percentage. Use this mode for situations when you do not know how long an operation will take to complete.</source>
          <target state="translated">Setting the parameter to negative values (e.g. &lt;code&gt;-1&lt;/code&gt; ) will remove the progress bar, whereas setting it to values greater than &lt;code&gt;1&lt;/code&gt; (e.g. &lt;code&gt;2&lt;/code&gt; ) will switch the progress bar to indeterminate mode (Windows-only -- it will clamp to 100% otherwise). In this mode, a progress bar remains active but does not show an actual percentage. Use this mode for situations when you do not know how long an operation will take to complete.</target>
        </trans-unit>
        <trans-unit id="7460d92d329bae4d84248c9faf95ddb75322f09c" translate="yes" xml:space="preserve">
          <source>Setting this property to &lt;code&gt;system&lt;/code&gt; will remove the override and everything will be reset to the OS default. By default &lt;code&gt;themeSource&lt;/code&gt; is &lt;code&gt;system&lt;/code&gt;.</source>
          <target state="translated">이 속성을 &lt;code&gt;system&lt;/code&gt; 설정 하면 재정의가 제거되고 모든 것이 OS 기본값으로 재설정됩니다. 기본적으로 &lt;code&gt;themeSource&lt;/code&gt; 는 &lt;code&gt;system&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0eeaecc3151e72805fa15b69d0bf5149e1ecba04" translate="yes" xml:space="preserve">
          <source>Setting up Linux</source>
          <target state="translated">리눅스 설정</target>
        </trans-unit>
        <trans-unit id="3873588638e10cb327083b50714e7c9f69300587" translate="yes" xml:space="preserve">
          <source>Setting up Spectron</source>
          <target state="translated">Spectron 설정</target>
        </trans-unit>
        <trans-unit id="ce37e0462dd2f82f7b7712227358924a5aa8bccd" translate="yes" xml:space="preserve">
          <source>Setting up Windows</source>
          <target state="translated">Windows 설정</target>
        </trans-unit>
        <trans-unit id="9557ea808723c270d45f5c1d9a28bb3fdc5243cc" translate="yes" xml:space="preserve">
          <source>Setting up macOS</source>
          <target state="translated">macOS 설정</target>
        </trans-unit>
        <trans-unit id="b2d64e208a0addb02888d3a43464174bc36ae42c" translate="yes" xml:space="preserve">
          <source>Setting up the Development Environment</source>
          <target state="translated">개발 환경 설정</target>
        </trans-unit>
        <trans-unit id="98df5eaf203ea0391ba3d707bade5ca7a307ef60" translate="yes" xml:space="preserve">
          <source>Setting up the git cache</source>
          <target state="translated">Setting up the git cache</target>
        </trans-unit>
        <trans-unit id="b983dabe1b76125ab113e4ddaca190ed5fa68275" translate="yes" xml:space="preserve">
          <source>Setting up with WebDriverJs</source>
          <target state="translated">WebDriverJ를 사용하여 설정</target>
        </trans-unit>
        <trans-unit id="5350d8c2b080582c6bfb05a60d35c93a21a16e3c" translate="yes" xml:space="preserve">
          <source>Setting up with WebdriverIO</source>
          <target state="translated">WebdriverIO를 사용하여 설정</target>
        </trans-unit>
        <trans-unit id="d4047b9ccffcd56a081d5fb456adc03f94256ada" translate="yes" xml:space="preserve">
          <source>Setting up your local environment</source>
          <target state="translated">로컬 환경 설정</target>
        </trans-unit>
        <trans-unit id="8f65fd75bd317591b137550ba1c22452365b7e13" translate="yes" xml:space="preserve">
          <source>Settings this property to &lt;code&gt;dark&lt;/code&gt; will have the following effects:</source>
          <target state="translated">이 속성을 &lt;code&gt;dark&lt;/code&gt; 설정 하면 다음과 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd7887d887d730cbec34f561ce392a0a9405e55b" translate="yes" xml:space="preserve">
          <source>Settings this property to &lt;code&gt;light&lt;/code&gt; will have the following effects:</source>
          <target state="translated">이 속성을 &lt;code&gt;light&lt;/code&gt; 설정 하면 다음과 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="98db8c38d1423321439281cc68e21811170d4264" translate="yes" xml:space="preserve">
          <source>SharedWorkerInfo Object</source>
          <target state="translated">SharedWorkerInfo Object</target>
        </trans-unit>
        <trans-unit id="12c8adfd89b4147e520a97c517754e432c2128af" translate="yes" xml:space="preserve">
          <source>Sharing ideas with other Electron app developers</source>
          <target state="translated">Sharing ideas with other Electron app developers</target>
        </trans-unit>
        <trans-unit id="98bc4f21bc027ce02ed4dc98be7a5eaae91c9333" translate="yes" xml:space="preserve">
          <source>Sharing the git cache between multiple machines</source>
          <target state="translated">Sharing the git cache between multiple machines</target>
        </trans-unit>
        <trans-unit id="3a97f965c7c56f962fd374f807c93dd0df8b340b" translate="yes" xml:space="preserve">
          <source>Sheets</source>
          <target state="translated">Sheets</target>
        </trans-unit>
        <trans-unit id="3651bbb553d18cbe4ba1801164562c35f9895b41" translate="yes" xml:space="preserve">
          <source>Shell's &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; allows opening a given protocol URI with the desktop's native utilities. On macOS, for instance, this function is similar to the &lt;code&gt;open&lt;/code&gt; terminal command utility and will open the specific application based on the URI and filetype association.</source>
          <target state="translated">Shell's &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; &lt;/a&gt; allows opening a given protocol URI with the desktop's native utilities. On macOS, for instance, this function is similar to the &lt;code&gt;open&lt;/code&gt; terminal command utility and will open the specific application based on the URI and filetype association.</target>
        </trans-unit>
        <trans-unit id="8e1ad8778902a29d74759bdf8562d30a0a72b16d" translate="yes" xml:space="preserve">
          <source>Shell's &lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; allows opening a given protocol URI with the desktop's native utilities. On macOS, for instance, this function is similar to the &lt;code&gt;open&lt;/code&gt; terminal command utility and will open the specific application based on the URI and filetype association.</source>
          <target state="translated">Shell의 &lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; 을&lt;/a&gt; 사용하면 데스크톱의 기본 유틸리티를 사용하여 주어진 프로토콜 URI를 열 수 있습니다. 예를 들어 macOS에서이 기능은 터미널 &lt;code&gt;open&lt;/code&gt; 명령 유틸리티와 유사 하며 URI 및 파일 형식 연결을 기반으로 특정 응용 프로그램을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="5b84cc8c584f215d33c18b24ad0b89c6c23c5367" translate="yes" xml:space="preserve">
          <source>Shona</source>
          <target state="translated">Shona</target>
        </trans-unit>
        <trans-unit id="7b0d9e595041021fed77c0a4fa8fe16ad22cc27f" translate="yes" xml:space="preserve">
          <source>ShortcutDetails</source>
          <target state="translated">ShortcutDetails</target>
        </trans-unit>
        <trans-unit id="fafa49dd90a16dcbb088bf3792b8b7016d458e25" translate="yes" xml:space="preserve">
          <source>ShortcutDetails Object</source>
          <target state="translated">ShortcutDetails 객체</target>
        </trans-unit>
        <trans-unit id="94b842cd860fb565f6be61520d72cc7b31d0fca1" translate="yes" xml:space="preserve">
          <source>Shortcuts are registered with the &lt;a href=&quot;api/global-shortcut&quot;&gt;&lt;code&gt;globalShortcut&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;api/global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, i.e.</source>
          <target state="translated">바로 가기는 register 메서드를 사용하여 &lt;a href=&quot;api/global-shortcut&quot;&gt; &lt;code&gt;globalShortcut&lt;/code&gt; &lt;/a&gt; 모듈에 &lt;a href=&quot;api/global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="06417898f90eaf159edbf6f7673bee719a0bb860" translate="yes" xml:space="preserve">
          <source>Shortcuts are registered with the &lt;a href=&quot;global-shortcut&quot;&gt;&lt;code&gt;globalShortcut&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, i.e.</source>
          <target state="translated">단축키는 register 메소드를 사용하여 &lt;a href=&quot;global-shortcut&quot;&gt; &lt;code&gt;globalShortcut&lt;/code&gt; &lt;/a&gt; 모듈에 &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c505ab90b458ef9940a43737388d3c6b217987e8" translate="yes" xml:space="preserve">
          <source>Shortcuts within a BrowserWindow</source>
          <target state="translated">BrowserWindow 내의 바로 가기</target>
        </trans-unit>
        <trans-unit id="1d6ad25deeb747ba9579ed546e0b463973229de1" translate="yes" xml:space="preserve">
          <source>Show notifications in the Main process</source>
          <target state="translated">Show notifications in the Main process</target>
        </trans-unit>
        <trans-unit id="cb5643e020e9df09391fe3b0c3e335423c933176" translate="yes" xml:space="preserve">
          <source>Show notifications in the Renderer process</source>
          <target state="translated">Show notifications in the Renderer process</target>
        </trans-unit>
        <trans-unit id="c2677c848251a6293076b01d343c6e7d28986268" translate="yes" xml:space="preserve">
          <source>Show the app's about panel options. These options can be overridden with &lt;code&gt;app.setAboutPanelOptions(options)&lt;/code&gt;.</source>
          <target state="translated">Show the app's about panel options. These options can be overridden with &lt;code&gt;app.setAboutPanelOptions(options)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3eada8d8b3747bc389420c924b29ba54c328d989" translate="yes" xml:space="preserve">
          <source>Show the given file in a file manager. If possible, select the file.</source>
          <target state="translated">주어진 파일을 파일 관리자에 표시하십시오. 가능하면 파일을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="f4a786371a4d501a31919869f7598052d4fa1ad5" translate="yes" xml:space="preserve">
          <source>Show the platform's native emoji picker.</source>
          <target state="translated">Show the platform's native emoji picker.</target>
        </trans-unit>
        <trans-unit id="d1238c5b9cb1e67edf1451c77e1ffa426aa90a88" translate="yes" xml:space="preserve">
          <source>Showing window gracefully</source>
          <target state="translated">창을 정상적으로 표시</target>
        </trans-unit>
        <trans-unit id="2a1589b672dccd58b3071a2fe6c8b5c2df35af1c" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed.</source>
          <target state="translated">Shows a message box, it will block the process until the message box is closed.</target>
        </trans-unit>
        <trans-unit id="a17a2ec8a1ae841cdfb4e1b4532e1caaf251acbf" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.</source>
          <target state="translated">메시지 상자를 표시합니다. 메시지 상자를 닫을 때까지 프로세스를 차단합니다. 클릭 한 버튼의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18022873b70dca3d65700645d4513ec2ec6dd203" translate="yes" xml:space="preserve">
          <source>Shows and gives focus to the window.</source>
          <target state="translated">창에 초점을 표시하고 제공합니다.</target>
        </trans-unit>
        <trans-unit id="53db27871a1d17480387a6a11639bd53e76f37fc" translate="yes" xml:space="preserve">
          <source>Shows application windows after they were hidden. Does not automatically focus them.</source>
          <target state="translated">숨겨진 응용 프로그램 창을 표시합니다. 자동으로 초점을 맞추지 않습니다.</target>
        </trans-unit>
        <trans-unit id="701512b17e97a60c66e7b50b9cf18aa6e0b6c4f1" translate="yes" xml:space="preserve">
          <source>Shows pop-up dictionary that searches the selected word on the page.</source>
          <target state="translated">페이지에서 선택한 단어를 검색하는 팝업 사전을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0d822acb95b0144cb7dc2d75727253f5d1253ed8" translate="yes" xml:space="preserve">
          <source>Shows the Windows's crash dialog when Electron crashes.</source>
          <target state="translated">Electron이 충돌 할 때 Windows의 충돌 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="20700e2dcfc17906d5966c2f94b2be9b5f55f286" translate="yes" xml:space="preserve">
          <source>Shows the dock icon.</source>
          <target state="translated">독 아이콘을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="64240689492efc7a3210cdedd1dd2c7fcabf32cb" translate="yes" xml:space="preserve">
          <source>Shows the window but doesn't focus on it.</source>
          <target state="translated">창을 표시하지만 초점을 맞추지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c76643258a6da793248641be3b05e8fcbad9aa0" translate="yes" xml:space="preserve">
          <source>Shut down the VM and then delete it in Azure.</source>
          <target state="translated">VM을 종료 한 다음 Azure에서 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="fe188d585c53e62627125c2e294ac868923b8f51" translate="yes" xml:space="preserve">
          <source>Side note: the reason we use a &lt;code&gt;.patches&lt;/code&gt; file to maintain the order of applied patches, rather than prepending a number like &lt;code&gt;001-&lt;/code&gt; to each file, is because it reduces conflicts related to patch ordering. It prevents the situation where two PRs both add a patch at the end of the series with the same numbering and end up both getting merged resulting in a duplicate identifier, and it also reduces churn when a patch is added or deleted in the middle of the series.</source>
          <target state="translated">사이드 노트 : 우리가 사용하는 이유 &lt;code&gt;.patches&lt;/code&gt; 의 아니라 같은 번호를 붙이는 것보다, 적용 패치의 순서를 유지하기 위해 파일을 &lt;code&gt;001-&lt;/code&gt; 을 이 패치 순서에 관련된 갈등을 줄일 수 있기 때문에 각 파일이있다. 두 개의 PR이 모두 동일한 번호를 가진 시리즈 끝에 패치를 추가하고 둘 다 병합되어 식별자가 중복되는 상황을 방지하고, 중간에 패치가 추가되거나 삭제 될 때 변동을 줄입니다. 시리즈.</target>
        </trans-unit>
        <trans-unit id="b6fa7b4bd103aa87ee11e6fde910511f6a97fdb0" translate="yes" xml:space="preserve">
          <source>Sign Native Modules</source>
          <target state="translated">네이티브 모듈 서명</target>
        </trans-unit>
        <trans-unit id="9fc8fc0641ff7b8ede4aec2f3a27d76dd5410bd4" translate="yes" xml:space="preserve">
          <source>Sign Your App</source>
          <target state="translated">앱 서명</target>
        </trans-unit>
        <trans-unit id="9a2e67c7fe9a847ce6aeed5cb8db78e637bfb054" translate="yes" xml:space="preserve">
          <source>Signing &amp;amp; notarizing macOS builds</source>
          <target state="translated">Signing &amp;amp; notarizing macOS builds</target>
        </trans-unit>
        <trans-unit id="28f4ea0e1d26a0a9cac047ea787dd3e6d05fb0e7" translate="yes" xml:space="preserve">
          <source>Signing Windows builds</source>
          <target state="translated">Windows 빌드 서명</target>
        </trans-unit>
        <trans-unit id="b02542c655ad3f4ac13c43496f81624184b1225a" translate="yes" xml:space="preserve">
          <source>Signing macOS builds</source>
          <target state="translated">macOS 빌드 서명</target>
        </trans-unit>
        <trans-unit id="625506f52394201963a85ee6b051eb84ae0bb69d" translate="yes" xml:space="preserve">
          <source>Similarly for &lt;code&gt;arm64&lt;/code&gt;, install the following:</source>
          <target state="translated">&lt;code&gt;arm64&lt;/code&gt; 와 유사하게 다음을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="e62bd7a2e139406201417e8042dd2531204a1a6c" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of Mac OS X prior to Lion (10.7).</source>
          <target state="translated">단순 전체 화면 모드는 Lion (10.7) 이전의 Mac OS X 버전에서 발견 된 기본 전체 화면 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="fab832f1416e8168e7f27efd58b02243c43e5220" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of macOS prior to Lion (10.7).</source>
          <target state="translated">Simple fullscreen mode emulates the native fullscreen behavior found in versions of macOS prior to Lion (10.7).</target>
        </trans-unit>
        <trans-unit id="d9a6b83c3b6ad377db7b779cfeb5db94db21543f" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="translated">Since &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</target>
        </trans-unit>
        <trans-unit id="87ee5667fa508301eb8f820026607f3bc3836541" translate="yes" xml:space="preserve">
          <source>Since Chromium is quite a large project, the final linking stage can take quite a few minutes, which makes it hard for development. In order to solve this, Chromium introduced the &quot;component build&quot;, which builds each component as a separate shared library, making linking very quick but sacrificing file size and performance.</source>
          <target state="translated">Chromium은 규모가 큰 프로젝트이므로 최종 연결 단계에는 몇 분이 걸릴 수 있으므로 개발하기가 어렵습니다. 이 문제를 해결하기 위해 Chromium은 &quot;구성 요소 빌드&quot;를 도입했습니다.이 구성 요소는 각 구성 요소를 별도의 공유 라이브러리로 빌드하므로 링크가 매우 빠르지 만 파일 크기와 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="0382db76ef1a028d20ed27c4a28ac01dd45f5ee8" translate="yes" xml:space="preserve">
          <source>Since Electron 6.0, we've been targeting every other Chromium version and releasing our stable on the same day as Chrome stable. You can reference Chromium's release schedule &lt;a href=&quot;https://chromiumdash.appspot.com/schedule&quot;&gt;here&lt;/a&gt;. See &lt;a href=&quot;https://www.electronjs.org/blog/12-week-cadence&quot;&gt;Electron's new release cadence blog post&lt;/a&gt; for more details on our release schedule.</source>
          <target state="translated">Electron 6.0 이후로 우리는 다른 모든 Chromium 버전을 대상으로하고 Chrome 안정 버전과 같은 날 안정 버전을 출시했습니다. &lt;a href=&quot;https://chromiumdash.appspot.com/schedule&quot;&gt;여기에서&lt;/a&gt; Chromium의 출시 일정을 참조 할 수 있습니다 . 출시 일정에 대한 자세한 내용 은 &lt;a href=&quot;https://www.electronjs.org/blog/12-week-cadence&quot;&gt;Electron의 새로운 출시주기 블로그 게시물&lt;/a&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="38a740772f4d4236a58ab5d03ec4e6a78dcdcb86" translate="yes" xml:space="preserve">
          <source>Since Electron 8, stabilization branches are always &lt;strong&gt;major&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-x-y&lt;/code&gt; e.g. &lt;code&gt;8-x-y&lt;/code&gt;. Prior to that we used &lt;strong&gt;minor&lt;/strong&gt; version lines and named them as &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;</source>
          <target state="translated">Since Electron 8, stabilization branches are always &lt;strong&gt;major&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-x-y&lt;/code&gt; e.g. &lt;code&gt;8-x-y&lt;/code&gt; . Prior to that we used &lt;strong&gt;minor&lt;/strong&gt; version lines and named them as &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="488f44cfec7695e9e62df069351cba52b4b71032" translate="yes" xml:space="preserve">
          <source>Since Electron ships with a current version of Chrome, you can make use of the latest and greatest features the Web Platform offers to defer or offload heavy operations in a way that keeps your app smooth and responsive.</source>
          <target state="translated">Electron은 최신 버전의 Chrome과 함께 제공되므로 웹 플랫폼이 제공하는 최신 기능을 사용하여 앱을 원활하고 응답 성이 유지하는 방식으로 무거운 작업을 연기하거나 오프로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8047395872e46168268025bd69d79822303df699" translate="yes" xml:space="preserve">
          <source>Since Electron uses Chromium for displaying web pages, Chromium's multi-process architecture is also used. Each web page in Electron runs in its own process, which is called &lt;strong&gt;the renderer process&lt;/strong&gt;.</source>
          <target state="translated">Electron은 웹 페이지를 표시하기 위해 Chromium을 사용하므로 Chromium의 다중 프로세스 아키텍처도 사용됩니다. Electron의 각 웹 페이지는 자체 프로세스에서 실행되며이를 &lt;strong&gt;렌더러 프로세스&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7ff151b3d48273ded92d11ad24b2acd36b4ba43d" translate="yes" xml:space="preserve">
          <source>Since WebViews live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="translated">WebView는 DOM에 존재하므로 Node.js 통합이 비활성화되어 있어도 웹 사이트에서 실행되는 스크립트로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e883cedd6ae7d3835b72d23c11561a7f8d63913e" translate="yes" xml:space="preserve">
          <source>Since a major feature in Electron is the ability to run Node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most Node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="translated">Since a major feature in Electron is the ability to run Node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most Node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</target>
        </trans-unit>
        <trans-unit id="2fa6d77f608edec50cafb0a6541c0208b155cc8b" translate="yes" xml:space="preserve">
          <source>Since a major feature in electron is the ability to run node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="translated">전자의 주요 기능은 렌더러 프로세스에서 node.js를 실행하는 기능 (웹 기술을 사용하여 데스크탑 응용 프로그램을보다 쉽게 ​​개발할 수있는 기능)이므로 전자에 의해 샌드 박스가 비활성화됩니다. 대부분의 node.js API에는 시스템 액세스가 필요하기 때문입니다. 예를 들어, 샌드 박스 환경에서는 사용할 수없는 파일 시스템 권한이 없으면 &lt;code&gt;require()&lt;/code&gt; 를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d9383966ac5db425b8c83aa1299a2f850cf72704" translate="yes" xml:space="preserve">
          <source>Since communication between the processes is possible, a renderer process can call upon the main process to perform tasks. Electron comes with a module called &lt;code&gt;remote&lt;/code&gt; that exposes APIs usually only available on the main process. In order to create a &lt;code&gt;BrowserWindow&lt;/code&gt; from a renderer process, we'd use the remote as a middle-man:</source>
          <target state="translated">프로세스 간 통신이 가능하므로 렌더러 프로세스는 기본 프로세스를 호출하여 작업을 수행 할 수 있습니다. Electron에는 일반적으로 주 프로세스에서만 사용할 수있는 API를 제공하는 &lt;code&gt;remote&lt;/code&gt; 라는 모듈이 있습니다. 렌더러 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 만들려면 리모컨 을 중개인 으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bb6016e102a3d31f26779b11b6070daae4564dd4" translate="yes" xml:space="preserve">
          <source>Since many cases return &lt;code&gt;true&lt;/code&gt;, you should treat with care situations of getting false positives, as we cannot always assume that &lt;code&gt;true&lt;/code&gt; value means that Electron can access the Internet. For example, in cases when the computer is running a virtualization software that has virtual Ethernet adapters in &quot;always connected&quot; state. Therefore, if you want to determine the Internet access status of Electron, you should develop additional means for this check.</source>
          <target state="translated">Since many cases return &lt;code&gt;true&lt;/code&gt; , you should treat with care situations of getting false positives, as we cannot always assume that &lt;code&gt;true&lt;/code&gt; value means that Electron can access the Internet. For example, in cases when the computer is running a virtualization software that has virtual Ethernet adapters in &quot;always connected&quot; state. Therefore, if you want to determine the Internet access status of Electron, you should develop additional means for this check.</target>
        </trans-unit>
        <trans-unit id="c31559d62f258a908e80f13ee96c49a0297706ff" translate="yes" xml:space="preserve">
          <source>Since rendering untrusted content in electron is still uncharted territory, the APIs exposed to the sandbox preload script should be considered more unstable than the rest of electron APIs, and may have breaking changes to fix security issues.</source>
          <target state="translated">전자에서 신뢰할 수없는 내용을 렌더링하는 것은 여전히 ​​미지의 영역이므로 샌드 박스 사전로드 스크립트에 노출 된 API는 나머지 전자 API보다 불안정한 것으로 간주해야하며 보안 문제를 해결하기 위해 변경 사항이 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ebf894ce3fc4564f248b7389b55e4a853f73a6f" translate="yes" xml:space="preserve">
          <source>Since v0.34.0, Electron allows submitting packaged apps to the Mac App Store (MAS). This guide provides information on: how to submit your app and the limitations of the MAS build.</source>
          <target state="translated">Electron은 v0.34.0부터 패키지 앱을 Mac App Store (MAS)에 제출할 수 있습니다. 이 가이드는 앱 제출 방법 및 MAS 빌드의 제한 사항에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e0330c530209f2358f617c569b6bbdce28505654" translate="yes" xml:space="preserve">
          <source>Sindhi</source>
          <target state="translated">Sindhi</target>
        </trans-unit>
        <trans-unit id="6d5508fa76121a44df1c719d90ac812896b52caf" translate="yes" xml:space="preserve">
          <source>Sinhalese</source>
          <target state="translated">Sinhalese</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="0852eb086cfb0b72e55069ef131253e3c1fa0079" translate="yes" xml:space="preserve">
          <source>Size Object</source>
          <target state="translated">크기 객체</target>
        </trans-unit>
        <trans-unit id="f67901a02b5910bf3770ab71fe26b4f69f0c8973" translate="yes" xml:space="preserve">
          <source>Skip binary download</source>
          <target state="translated">Skip binary download</target>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="9a2625f98c9a48c32c7ca4ab61100678556c7288" translate="yes" xml:space="preserve">
          <source>Small icon</source>
          <target state="translated">작은 아이콘</target>
        </trans-unit>
        <trans-unit id="ade99a9999f491266743ef60204af9fec999a307" translate="yes" xml:space="preserve">
          <source>Snapcraft</source>
          <target state="translated">Snapcraft</target>
        </trans-unit>
        <trans-unit id="85cd2418343c4f3225f8cab6909ac25c19269930" translate="yes" xml:space="preserve">
          <source>Snapcraft Guide (Ubuntu Software Center &amp;amp; More)</source>
          <target state="translated">Snapcraft Guide (우분투 소프트웨어 센터 등)</target>
        </trans-unit>
        <trans-unit id="9942c10fdc570b8e644c4ec7a84cbcbfcd9f04f2" translate="yes" xml:space="preserve">
          <source>Snapcraft is capable of taking an existing &lt;code&gt;.deb&lt;/code&gt; file and turning it into a &lt;code&gt;.snap&lt;/code&gt; file. The creation of a snap is configured using a &lt;code&gt;snapcraft.yaml&lt;/code&gt; file that describes the sources, dependencies, description, and other core building blocks.</source>
          <target state="translated">Snapcraft는 기존 &lt;code&gt;.deb&lt;/code&gt; 파일을 가져 &lt;code&gt;.snap&lt;/code&gt; 파일 로 변환 할 수 있습니다. 스냅 생성은 소스, 종속성, 설명 및 기타 핵심 빌딩 블록을 설명 하는 &lt;code&gt;snapcraft.yaml&lt;/code&gt; 파일을 사용하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9d1604f0abb6338328027ef31d51bd7dfbbc088" translate="yes" xml:space="preserve">
          <source>So in short, the primary steps are:</source>
          <target state="translated">간단히 말해서 기본 단계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a820034cbd5ccddfef01182767e7324ee1f57353" translate="yes" xml:space="preserve">
          <source>So the behavior of &lt;code&gt;webview&lt;/code&gt; is very similar to a cross-domain &lt;code&gt;iframe&lt;/code&gt;, as examples:</source>
          <target state="translated">So the behavior of &lt;code&gt;webview&lt;/code&gt; is very similar to a cross-domain &lt;code&gt;iframe&lt;/code&gt; , as examples:</target>
        </trans-unit>
        <trans-unit id="e7e1e849d411ce49b41e741ab29d15d999687748" translate="yes" xml:space="preserve">
          <source>So, in order to pull, you'd run the following commands:</source>
          <target state="translated">So, in order to pull, you'd run the following commands:</target>
        </trans-unit>
        <trans-unit id="688a580feb7e7f568eb9f58a542d2ad9f51f2cfb" translate="yes" xml:space="preserve">
          <source>Software output device</source>
          <target state="translated">소프트웨어 출력 장치</target>
        </trans-unit>
        <trans-unit id="2ed94ff47ed12a08088bd82b2b23088a5ac4cffc" translate="yes" xml:space="preserve">
          <source>Somali</source>
          <target state="translated">Somali</target>
        </trans-unit>
        <trans-unit id="54cb427cf311e299dc022158e6543a8093761d79" translate="yes" xml:space="preserve">
          <source>Some bug in V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module.</source>
          <target state="translated">V8 엔진의 일부 버그로 인해 악성 코드가 렌더러 사전로드 API에 액세스하여 &lt;code&gt;remote&lt;/code&gt; 모듈을 통해 시스템에 대한 전체 액세스 권한을 효과적으로 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63dcba2f0260d8128d5adb5e9d2cd560a3295b32" translate="yes" xml:space="preserve">
          <source>Some bug in the V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module. Therefore, it is highly recommended to &lt;a href=&quot;../tutorial/security#15-disable-the-remote-module&quot;&gt;disable the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;. If disabling is not feasible, you should selectively &lt;a href=&quot;../tutorial/security#16-filter-the-remote-module&quot;&gt;filter the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Some bug in the V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module. Therefore, it is highly recommended to &lt;a href=&quot;../tutorial/security#15-disable-the-remote-module&quot;&gt;disable the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;. If disabling is not feasible, you should selectively &lt;a href=&quot;../tutorial/security#16-filter-the-remote-module&quot;&gt;filter the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="65d83509ee6305feadf16f686bcca1f720c0904f" translate="yes" xml:space="preserve">
          <source>Some bug in the V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module. Therefore, it is highly recommended to &lt;a href=&quot;tutorial/security#15-disable-the-remote-module&quot;&gt;disable the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;. If disabling is not feasible, you should selectively &lt;a href=&quot;tutorial/security#16-filter-the-remote-module&quot;&gt;filter the &lt;code&gt;remote&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">V8 엔진의 일부 버그는 악성 코드가 렌더러 사전로드 API에 액세스하도록 허용하여 &lt;code&gt;remote&lt;/code&gt; 모듈을 통해 시스템에 대한 전체 액세스 권한을 효과적으로 부여 합니다. 따라서 &lt;a href=&quot;tutorial/security#15-disable-the-remote-module&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈 을 비활성화하는 것이 좋습니다 . 비활성화 할 수없는 경우 &lt;a href=&quot;tutorial/security#16-filter-the-remote-module&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈을 선택적으로 필터링 해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="47628a96f6e8e830dce46609d2b995a38ad53ee6" translate="yes" xml:space="preserve">
          <source>Some compilation and linking errors are caused by missing source/object files in the libcc &lt;code&gt;dist&lt;/code&gt;</source>
          <target state="translated">libcc &lt;code&gt;dist&lt;/code&gt; 에 소스 / 오브젝트 파일이 누락되어 일부 컴파일 및 링크 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3c1bd0d2e336c9baf36a58dec20e1e18e977f601" translate="yes" xml:space="preserve">
          <source>Some examples of valid &lt;code&gt;urls&lt;/code&gt;:</source>
          <target state="translated">Some examples of valid &lt;code&gt;urls&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ade2e0a189e329e36773a31355fde64d328b6c70" translate="yes" xml:space="preserve">
          <source>Some of Electrons APIs are tagged with &lt;code&gt;_Experimental_&lt;/code&gt; in the documentation. This tag indicates that the API may not be considered stable and the API may be removed or modified more frequently than other APIs with less warning.</source>
          <target state="translated">일부 Electrons API는 문서에서 &lt;code&gt;_Experimental_&lt;/code&gt; 태그가 지정되어 있습니다. 이 태그는 API가 안정적으로 간주되지 않을 수 있으며 API가 경고가 적은 다른 API보다 더 자주 제거되거나 수정 될 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="197b70ba6a8008b4cd8284d70ac6ac4cdabb89a3" translate="yes" xml:space="preserve">
          <source>Some popular &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt;s are:</source>
          <target state="translated">인기있는 &lt;code&gt;key&lt;/code&gt; 및 &lt;code&gt;type&lt;/code&gt; 은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="160355eafd3a1c24dae1200939a602dd652ebcbb" translate="yes" xml:space="preserve">
          <source>Some security features in Chrome (such as Safe Browsing and Certificate Transparency) require a centralized authority and dedicated servers, both of which run counter to the goals of the Electron project. As such, we disable those features in Electron, at the cost of the associated security they would otherwise bring.</source>
          <target state="translated">Some security features in Chrome (such as Safe Browsing and Certificate Transparency) require a centralized authority and dedicated servers, both of which run counter to the goals of the Electron project. As such, we disable those features in Electron, at the cost of the associated security they would otherwise bring.</target>
        </trans-unit>
        <trans-unit id="ac082c3b118f25c7c46518a6006640a0c6d1ae06" translate="yes" xml:space="preserve">
          <source>Some tests which rely on precise pixel measurements may not work correctly on devices with Hi-DPI screen settings due to floating point precision errors. To run these tests correctly, make sure the device is set to 100% scaling.</source>
          <target state="translated">Some tests which rely on precise pixel measurements may not work correctly on devices with Hi-DPI screen settings due to floating point precision errors. To run these tests correctly, make sure the device is set to 100% scaling.</target>
        </trans-unit>
        <trans-unit id="4f5ea45f122e87408989d3383560a43299f93b05" translate="yes" xml:space="preserve">
          <source>Somewhere in the Electron binary there will be a sequence of bytes that look like this:</source>
          <target state="translated">Electron 바이너리 어딘가에 다음과 같은 일련의 바이트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">소스 코드</target>
        </trans-unit>
        <trans-unit id="de95723a62c1fc0a018a2398690f4e65f039455b" translate="yes" xml:space="preserve">
          <source>Source Code Directory Structure</source>
          <target state="translated">소스 코드 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="8df7f1b361b2af42d36011e00d22c0f9891ec0b0" translate="yes" xml:space="preserve">
          <source>Spanish</source>
          <target state="translated">Spanish</target>
        </trans-unit>
        <trans-unit id="6ae3588f0de424b70dc66d7ba808c0edd567776a" translate="yes" xml:space="preserve">
          <source>Spanish (Latin America)</source>
          <target state="translated">스페인어 (라틴 아메리카)</target>
        </trans-unit>
        <trans-unit id="9164e964367369823ac5703bdffc5983394f89e2" translate="yes" xml:space="preserve">
          <source>Sparse arrays will be serialized as such, instead of being converted to dense arrays with &lt;code&gt;null&lt;/code&gt;s.</source>
          <target state="translated">희소 배열은 &lt;code&gt;null&lt;/code&gt; 이있는 조밀 배열로 변환되는 대신 이와 같이 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="56d037d37822e39476678b209a88b12b5368d1cb" translate="yes" xml:space="preserve">
          <source>Specifically, the above means:</source>
          <target state="translated">Specifically, the above means:</target>
        </trans-unit>
        <trans-unit id="5ccc6278f24a22a631ba4a5e5cc7f1577c6185b9" translate="yes" xml:space="preserve">
          <source>Specifies a script that will be loaded before other scripts run in the guest page. The protocol of script's URL must be either &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;asar:&lt;/code&gt;, because it will be loaded by &lt;code&gt;require&lt;/code&gt; in guest page under the hood.</source>
          <target state="translated">게스트 페이지에서 다른 스크립트를 실행하기 전에로드 할 스크립트를 지정합니다. 스크립트 URL의 프로토콜은 &lt;code&gt;file:&lt;/code&gt; 또는 &lt;code&gt;asar:&lt;/code&gt; 중 하나 여야 합니다. &lt;code&gt;require&lt;/code&gt; 에 따라 게스트 페이지에서 후드 아래 로로드되기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="c7be3814d051f68aac332b816a65dc938c0320e0" translate="yes" xml:space="preserve">
          <source>Specifies the flags passed to the Node JS engine. It has to be passed when starting Electron if you want to enable the &lt;code&gt;flags&lt;/code&gt; in the main process.</source>
          <target state="translated">Node JS 엔진에 전달 된 플래그를 지정합니다. 메인 프로세스에서 &lt;code&gt;flags&lt;/code&gt; 를 활성화하려면 Electron을 시작할 때 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c7c3530392e9badb57bf65525d58149ee7acf61e" translate="yes" xml:space="preserve">
          <source>Specifies the flags passed to the Node.js engine. It has to be passed when starting Electron if you want to enable the &lt;code&gt;flags&lt;/code&gt; in the main process.</source>
          <target state="translated">Node.js 엔진에 전달되는 플래그를 지정합니다. 메인 프로세스에서 &lt;code&gt;flags&lt;/code&gt; 를 활성화하려면 Electron을 시작할 때 전달되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c74f74dba1179cb4536444d27537cabff9e5439a" translate="yes" xml:space="preserve">
          <source>Specifies whether the window&amp;rsquo;s document has been edited, and the icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">창의 문서가 편집되었는지 여부를 지정하고 &lt;code&gt;true&lt;/code&gt; 로 설정하면 제목 표시 줄의 아이콘이 회색이됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f63e8cd6cf9cc8066c5e76619ab91b82e2b04f2" translate="yes" xml:space="preserve">
          <source>Specify an option with the value of &lt;code&gt;false&lt;/code&gt; to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:</source>
          <target state="translated">등록에서 생략하려면 &lt;code&gt;false&lt;/code&gt; 값을 가진 옵션을 지정 하십시오. 콘텐츠 보안 정책을 우회하지 않고 권한있는 체계를 등록하는 예 :</target>
        </trans-unit>
        <trans-unit id="541c4ad4130a0b0489104d418b1638b813f9ffbf" translate="yes" xml:space="preserve">
          <source>Specify ways of the inspector web socket url exposure.</source>
          <target state="translated">인스펙터 웹 소켓 URL 노출 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5bd1abd3d894b4f807a4e89a97452fdac984d9b7" translate="yes" xml:space="preserve">
          <source>Spectron</source>
          <target state="translated">Spectron</target>
        </trans-unit>
        <trans-unit id="a34deccc95835c3b936d8ac1d8457617b72f9efa" translate="yes" xml:space="preserve">
          <source>SpellChecker</source>
          <target state="translated">SpellChecker</target>
        </trans-unit>
        <trans-unit id="cc4bbe420d2aa5f7b8e11e2cf869917b0347768b" translate="yes" xml:space="preserve">
          <source>Spin up a new VM using the &lt;a href=&quot;https://github.com/appveyor/ci/blob/master/scripts/enterprise/create_master_vm_from_vhd.ps1&quot;&gt;Create Master VM from VHD PowerShell&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/appveyor/ci/blob/master/scripts/enterprise/create_master_vm_from_vhd.ps1&quot;&gt;VHD PowerShell에서 마스터 VM 만들기를&lt;/a&gt; 사용하여 새 VM을 스핀 업 합니다 .</target>
        </trans-unit>
        <trans-unit id="c3d3af07d6e79183a7c87b53cbd8537d0c48ccb5" translate="yes" xml:space="preserve">
          <source>Squirrel</source>
          <target state="translated">Squirrel</target>
        </trans-unit>
        <trans-unit id="74798804bf02ba616248416fdead7670f76672e4" translate="yes" xml:space="preserve">
          <source>Squirrel is an open-source framework that enables Electron apps to update automatically as new versions are released. See the &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API for info about getting started with Squirrel.</source>
          <target state="translated">Squirrel은 새로운 버전이 출시 될 때 Electron 앱이 자동으로 업데이트되도록하는 오픈 소스 프레임 워크입니다. Squirrel 시작에 대한 정보 는 &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4210cee5eab0b745b002c7f95add76c38ff996e9" translate="yes" xml:space="preserve">
          <source>Stabilization Branches</source>
          <target state="translated">안정화 지점</target>
        </trans-unit>
        <trans-unit id="9f238fde84c8102be7f84a560d0639cae0152ae8" translate="yes" xml:space="preserve">
          <source>Stabilization branches are always either &lt;strong&gt;major&lt;/strong&gt; or &lt;strong&gt;minor&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;.</source>
          <target state="translated">안정화 브랜치는 항상 &lt;strong&gt;메이저&lt;/strong&gt; 또는 &lt;strong&gt;마이너&lt;/strong&gt; 버전 라인이며 다음 템플릿 &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; 에 대해 이름이 지정됩니다 ( 예 : &lt;code&gt;2-0-x&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="2d99181c503126531951a1d63aacafde75a53b4a" translate="yes" xml:space="preserve">
          <source>Stabilization branches are branches that run parallel to master, taking in only cherry-picked commits that are related to security or stability. These branches are never merged back to master.</source>
          <target state="translated">안정화 브랜치는 마스터와 병렬로 실행되는 보안으로, 보안 또는 안정성과 관련된 체리 선택 커밋 만받습니다. 이 지점은 다시 마스터로 병합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="b84e82591dfd7e3bdc6c7cd680590a9f03472b79" translate="yes" xml:space="preserve">
          <source>Standard Menu Item Actions</source>
          <target state="translated">표준 메뉴 항목 동작</target>
        </trans-unit>
        <trans-unit id="a9a8dccaccbf655647957c75601b588b7da64cf5" translate="yes" xml:space="preserve">
          <source>Standard Menus</source>
          <target state="translated">표준 메뉴</target>
        </trans-unit>
        <trans-unit id="0fe7ef894dfcfa21afb675ce9867d0ef3fbfb3d6" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method Electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="translated">Start accessing a security scoped resource. With this method Electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</target>
        </trans-unit>
        <trans-unit id="51644d168a94193f3c9c83deeefc4bacb9498973" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="translated">보안 범위의 리소스에 액세스를 시작하십시오. 이 방법을 사용하면 Mac App Store 용으로 패키지 된 전자 응용 프로그램이 샌드 박스 외부에 도달하여 사용자가 선택한 파일에 액세스 할 수 있습니다. 이 시스템의 작동 방식에 대한 설명은 &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a7b0c3a0ad3617ee8b08891c922bdf861d9315d" translate="yes" xml:space="preserve">
          <source>Start monitoring on all processes.</source>
          <target state="translated">모든 프로세스에서 모니터링을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="e99639e9715c1d41ab81462c45be1945467eb2b7" translate="yes" xml:space="preserve">
          <source>Start recording on all processes.</source>
          <target state="translated">모든 프로세스에서 기록을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="277d6d5d2e4b1320dddb032ae4ff08d7a4222897" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="6ac79c8c38ef99d86e2985519e8de82acbc6723c" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;main.js&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="69724ee1335af8174d07efd5a76b041f2398e3a4" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, update the &lt;code&gt;main.js&lt;/code&gt; file with the following lines:</source>
          <target state="translated">Starting with a working application from the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, update the &lt;code&gt;main.js&lt;/code&gt; file with the following lines:</target>
        </trans-unit>
        <trans-unit id="c563cf46451809fca045c915cb6d90fbba9c1699" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;빠른 시작 안내서&lt;/a&gt; 에서 작동하는 애플리케이션으로 시작 하여 &lt;code&gt;index.html&lt;/code&gt; 파일에 다음 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="92bb189381b1cc4b78bcef661db86c4a5c6d3fbb" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, add the following lines to the &lt;code&gt;main.js&lt;/code&gt; file:</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt; 의 작동하는 애플리케이션으로 시작 하여 &lt;code&gt;main.js&lt;/code&gt; 파일에 다음 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="5270da95819d5d55acb61f5e70de40afc96fecc6" translate="yes" xml:space="preserve">
          <source>Starting with a working application from the &lt;a href=&quot;tutorial/quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;, update the &lt;code&gt;main.js&lt;/code&gt; file with the following lines:</source>
          <target state="translated">&lt;a href=&quot;tutorial/quick-start&quot;&gt;빠른 시작 가이드&lt;/a&gt; 의 작동하는 애플리케이션으로 시작 하여 다음 줄로 &lt;code&gt;main.js&lt;/code&gt; 파일을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="8c6ed7cd8d1be69a23ac387ee7ec0d4dbccae4f0" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;api/web-contents#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지 의 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . 요청 결과는 &lt;a href=&quot;api/web-contents#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2da65de6c92a6a280775e830e73d064d66de3026" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;api/webview-tag#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지 의 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . 요청 결과는 &lt;a href=&quot;api/webview-tag#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1793221da64d52d98c86212e1cd147064d099076" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하여 요청 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ceb5a8300c14b98f9fe0d3cb7de4378c0ee4a60" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하여 요청 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c428be943bbb7b09e973865c7fa9bd465358ae3" translate="yes" xml:space="preserve">
          <source>Starts gathering information about all available desktop media sources, and calls &lt;code&gt;callback(error, sources)&lt;/code&gt; when finished.</source>
          <target state="translated">사용 가능한 모든 데스크탑 미디어 소스에 대한 정보 수집을 시작하고 완료되면 &lt;code&gt;callback(error, sources)&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="06cbf86e2cce84ea76ae7498035d501154d9a3e3" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) of guest page.</source>
          <target state="translated">게스트 페이지의 위치 ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) 에서 요소 검사를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="7045988b61bc2eb7342e6f56e6add38559fb2a9b" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).</source>
          <target state="translated">위치 ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) 에서 요소 검사를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="5493530eca13ae2d998698f12402dfdcb7d4b70c" translate="yes" xml:space="preserve">
          <source>Starts or stops flashing the window to attract user's attention.</source>
          <target state="translated">사용자의주의를 끌기 위해 창 깜박임을 시작하거나 중지합니다.</target>
        </trans-unit>
        <trans-unit id="bd117d5ab0c408102a03aa5a1f39f24267c613ce" translate="yes" xml:space="preserve">
          <source>Starts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.</source>
          <target state="translated">시스템이 저전력 모드로 들어 가지 않도록 시작합니다. 절전 차단기를 식별하는 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3587cd4bb6082744ee8c1f78d2b55c4ae3d03739" translate="yes" xml:space="preserve">
          <source>Starts recording network events to &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 네트워크 이벤트 기록을 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="722a15ab9252afbe8e0bd511ed9500f99c648da6" translate="yes" xml:space="preserve">
          <source>Starts the process as a normal Node.js process.</source>
          <target state="translated">프로세스를 일반 Node.js 프로세스로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="c07ffdf6836adc96b53699820d00f9985b0fb1c1" translate="yes" xml:space="preserve">
          <source>Starts the sending of messages queued on the port. Messages will be queued until this method is called.</source>
          <target state="translated">포트에 대기중인 메시지 전송을 시작합니다. 이 메서드가 호출 될 때까지 메시지가 대기됩니다.</target>
        </trans-unit>
        <trans-unit id="6a5813201a4580fe5f1fbb25f1a522d4d505bf2d" translate="yes" xml:space="preserve">
          <source>Static Methods</source>
          <target state="translated">정적 방법</target>
        </trans-unit>
        <trans-unit id="5dd52f62e1be6f918ab77a38268c4534241ce617" translate="yes" xml:space="preserve">
          <source>Static Properties</source>
          <target state="translated">정적 속성</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="7de39102e71973f2b4c9e9fb6dac682aecd8cf94" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and Update</source>
          <target state="translated">10 단계 : 토론 및 업데이트</target>
        </trans-unit>
        <trans-unit id="662dfae726354bffc7db9630caa7bd67eefc9a6d" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and update</source>
          <target state="translated">10 단계 : 토론 및 업데이트</target>
        </trans-unit>
        <trans-unit id="afd1675ce941a091f16700e236a4f78ec2dfad55" translate="yes" xml:space="preserve">
          <source>Step 11: Landing</source>
          <target state="translated">11 단계 : 착륙</target>
        </trans-unit>
        <trans-unit id="5c0c04d59fe67648ed6e5d289dc90cbf696906cc" translate="yes" xml:space="preserve">
          <source>Step 1: Create Sample Snapcraft Project</source>
          <target state="translated">Step 1: Create Sample Snapcraft Project</target>
        </trans-unit>
        <trans-unit id="7bd30c8936103523f83b34c764b38a96178d6db7" translate="yes" xml:space="preserve">
          <source>Step 1: Create a Debian Package</source>
          <target state="translated">1 단계 : 데비안 패키지 만들기</target>
        </trans-unit>
        <trans-unit id="3a5f7dd7276dbf8791d45ab909b29b602b9f844a" translate="yes" xml:space="preserve">
          <source>Step 1: Fork</source>
          <target state="translated">1 단계 : 포크</target>
        </trans-unit>
        <trans-unit id="982ffe830b3039cc7f4b8415778987e3a8f473de" translate="yes" xml:space="preserve">
          <source>Step 1: Package Your Electron Application</source>
          <target state="translated">1 단계 : 전자 응용 프로그램 패키지</target>
        </trans-unit>
        <trans-unit id="d20ecf8d0baedcfa6da1a547723fa5bd4a4921de" translate="yes" xml:space="preserve">
          <source>Step 2: Build</source>
          <target state="translated">2 단계 : 빌드</target>
        </trans-unit>
        <trans-unit id="3f2297c771e8d2fc64a3dace21432cce1a1ee2e7" translate="yes" xml:space="preserve">
          <source>Step 2: Build the snap</source>
          <target state="translated">Step 2: Build the snap</target>
        </trans-unit>
        <trans-unit id="af62df57b1ca6089276e10a762c159ae1f59afb8" translate="yes" xml:space="preserve">
          <source>Step 2: Create a snapcraft.yaml</source>
          <target state="translated">2 단계 : snapcraft.yaml 만들기</target>
        </trans-unit>
        <trans-unit id="275558b46203433d5c44c48e86d11c0678b226ab" translate="yes" xml:space="preserve">
          <source>Step 2: Running &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="translated">2 단계 : &lt;code&gt;electron-installer-snap&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="79d25bf9fb6ae3bee37a7daa1e63e2520d3a2b1c" translate="yes" xml:space="preserve">
          <source>Step 2: Running electron-windows-store</source>
          <target state="translated">2 단계 : 전자 윈도우 스토어 실행</target>
        </trans-unit>
        <trans-unit id="085c619408ba85f500cca4078bc6993a1943481e" translate="yes" xml:space="preserve">
          <source>Step 3: Branch</source>
          <target state="translated">3 단계 : 지점</target>
        </trans-unit>
        <trans-unit id="e57280030da29bd0d7c32e660f54191416d12063" translate="yes" xml:space="preserve">
          <source>Step 3: Install the snap</source>
          <target state="translated">Step 3: Install the snap</target>
        </trans-unit>
        <trans-unit id="42f536cd108752a5d4c14dab76fc220c2a52be56" translate="yes" xml:space="preserve">
          <source>Step 3: Using the AppX Package</source>
          <target state="translated">3 단계 : AppX 패키지 사용</target>
        </trans-unit>
        <trans-unit id="f888c34ad31ebff32c41387dd24f54772ed28504" translate="yes" xml:space="preserve">
          <source>Step 4: Code</source>
          <target state="translated">4 단계 : 코드</target>
        </trans-unit>
        <trans-unit id="6f24c0026071960cc96dcd1afdf23a54da9327a7" translate="yes" xml:space="preserve">
          <source>Step 4: Run the snap</source>
          <target state="translated">Step 4: Run the snap</target>
        </trans-unit>
        <trans-unit id="18a14b62cdfef7caa365404c01690312608f3716" translate="yes" xml:space="preserve">
          <source>Step 5: Commit</source>
          <target state="translated">5 단계 : 커밋</target>
        </trans-unit>
        <trans-unit id="b01ca2567556356c334a1cbf9d37ca9fd395d35b" translate="yes" xml:space="preserve">
          <source>Step 6: Rebase</source>
          <target state="translated">6 단계 : 리베이스</target>
        </trans-unit>
        <trans-unit id="6d84ee8f1e7b86aadc817929a98f58c069a4f673" translate="yes" xml:space="preserve">
          <source>Step 7: Test</source>
          <target state="translated">7 단계 : 테스트</target>
        </trans-unit>
        <trans-unit id="dba4c9ae1373ba83140e40fb09eb37be3b0e1c0c" translate="yes" xml:space="preserve">
          <source>Step 8: Push</source>
          <target state="translated">8 단계 : 푸시</target>
        </trans-unit>
        <trans-unit id="9ee5a72675fb5ec976da7fa298ce7bfb67ad3ff1" translate="yes" xml:space="preserve">
          <source>Step 9: Opening the Pull Request</source>
          <target state="translated">9 단계 : 풀 요청 열기</target>
        </trans-unit>
        <trans-unit id="b86f2f9e7039c672bc135fae708eb87036251ae9" translate="yes" xml:space="preserve">
          <source>Steps to package your app into an &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="translated">앱을 &lt;code&gt;asar&lt;/code&gt; 아카이브 로 패키징하는 단계 :</target>
        </trans-unit>
        <trans-unit id="8370e7640e1265b2ff1387c489b345506060c60c" translate="yes" xml:space="preserve">
          <source>Stop monitoring on all processes.</source>
          <target state="translated">모든 프로세스에서 모니터링을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="78f3f1419fba05c1946bad423e2a2c661e189e16" translate="yes" xml:space="preserve">
          <source>Stop recording on all processes.</source>
          <target state="translated">모든 프로세스에서 기록을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="9cba0d3e2c5b605f39289352fffcc0b5368f3e36" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webContents&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;action&lt;/code&gt; 으로 &lt;code&gt;webContents&lt;/code&gt; 에 대한 &lt;code&gt;findInPage&lt;/code&gt; 요청을 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="5e5eeb16588d48c3b8a2d024259209772e5fb650" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webview&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;action&lt;/code&gt; 으로 &lt;code&gt;webview&lt;/code&gt; 대한 &lt;code&gt;findInPage&lt;/code&gt; 요청을 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="a60f8e2575f729879818c2189915ae2373b00b1f" translate="yes" xml:space="preserve">
          <source>Stops any pending navigation.</source>
          <target state="translated">보류중인 탐색을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="01f9a952e07e1d082a7b3fc9f136a8d41abfb116" translate="yes" xml:space="preserve">
          <source>Stops recording network events. If not called, net logging will automatically end when app quits.</source>
          <target state="translated">네트워크 이벤트 기록을 중지합니다. 호출하지 않으면 앱이 종료 될 때 넷 로깅이 자동으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="d2c0432f252cabdf881a5b1de7d21307e3108eac" translate="yes" xml:space="preserve">
          <source>Stops the specified power save blocker.</source>
          <target state="translated">지정된 절전 차단기를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="cd7ac16ecf07dffbfa1314c6d4fc11224228b1e6" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse</source>
          <target state="translated">StreamProtocolResponse</target>
        </trans-unit>
        <trans-unit id="0b932126a37351eca28af5c545c6050320fbafe4" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse Object</source>
          <target state="translated">StreamProtocolResponse 개체</target>
        </trans-unit>
        <trans-unit id="07986ba3f490221acef1d2c2b54da37f801672d6" translate="yes" xml:space="preserve">
          <source>Strict use of semver</source>
          <target state="translated">semver의 엄격한 사용</target>
        </trans-unit>
        <trans-unit id="b28ce922b3d6733942016c7204231819c4d13493" translate="yes" xml:space="preserve">
          <source>Structure of Other Directories</source>
          <target state="translated">다른 디렉토리의 구조</target>
        </trans-unit>
        <trans-unit id="f0a6dc559018a4e099b96d3ed7b5f1b03af5b24a" translate="yes" xml:space="preserve">
          <source>Structure of Source Code</source>
          <target state="translated">소스 코드의 구조</target>
        </trans-unit>
        <trans-unit id="5c7d975ebe040fd651b363edf1eac30dca4cf12c" translate="yes" xml:space="preserve">
          <source>Sub-chapters need to increase the number of &lt;code&gt;#&lt;/code&gt; in the title according to their nesting depth.</source>
          <target state="translated">하위 장에서는 중첩 깊이에 따라 제목 의 &lt;code&gt;#&lt;/code&gt; 수를 늘려야합니다 .</target>
        </trans-unit>
        <trans-unit id="350249dc861326c36324904d5ec3f8b02aa70371" translate="yes" xml:space="preserve">
          <source>Sub-pixel anti-aliasing needs a non-transparent background of the layer containing the font glyphs. (See &lt;a href=&quot;https://github.com/electron/electron/issues/6344#issuecomment-420371918&quot;&gt;this issue&lt;/a&gt; for more info).</source>
          <target state="translated">Sub-pixel anti-aliasing needs a non-transparent background of the layer containing the font glyphs. (See &lt;a href=&quot;https://github.com/electron/electron/issues/6344#issuecomment-420371918&quot;&gt;this issue&lt;/a&gt; for more info).</target>
        </trans-unit>
        <trans-unit id="e917b4ec2b1055f6900c394da62ccec5d1d3b323" translate="yes" xml:space="preserve">
          <source>Submit Your App for Review</source>
          <target state="translated">검토를 위해 앱 제출</target>
        </trans-unit>
        <trans-unit id="1309deaf0ef292c659a9167472c5ab66acd093f6" translate="yes" xml:space="preserve">
          <source>Submit crash reports to a remote server.</source>
          <target state="translated">충돌 보고서를 원격 서버에 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="cdc8d7c68289726905ca8577af8767a794cde90e" translate="yes" xml:space="preserve">
          <source>Submitting a Bug Report</source>
          <target state="translated">버그 리포트 제출</target>
        </trans-unit>
        <trans-unit id="63fa5aa992cb17b44abb684ac147fdb7bae81d44" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="translated">맥 OS의 기본 통지 구독은 &lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(event, userInfo)&lt;/code&gt; 해당 &lt;code&gt;event&lt;/code&gt; 발생합니다. &lt;code&gt;userInfo&lt;/code&gt; 통지와 함께 전송되는 사용자 정보 사전을 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="c9f5fe0a3143a600b7fbf3d786ec2b6244324487" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification. The &lt;code&gt;object&lt;/code&gt; is the sender of the notification, and only supports &lt;code&gt;NSString&lt;/code&gt; values for now.</source>
          <target state="translated">Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification. The &lt;code&gt;object&lt;/code&gt; is the sender of the notification, and only supports &lt;code&gt;NSString&lt;/code&gt; values for now.</target>
        </trans-unit>
        <trans-unit id="e36bf0c8feb5b6ca9a29eafb6c2e0e22c4663f33" translate="yes" xml:space="preserve">
          <source>Subscription ID</source>
          <target state="translated">구독 ID</target>
        </trans-unit>
        <trans-unit id="1174e0b95632f7bd05a741805a429b03e8e036b9" translate="yes" xml:space="preserve">
          <source>Substitute &lt;code&gt;6.0.9&lt;/code&gt; for the version you're using.</source>
          <target state="translated">사용중인 버전을 &lt;code&gt;6.0.9&lt;/code&gt; 로 대체 하십시오.</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="14bb55d7d7430a4e707657bbba24d20d9e03a1c8" translate="yes" xml:space="preserve">
          <source>Sundanese</source>
          <target state="translated">Sundanese</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="0bbfba9b9ff08cee1fcec9f293c4eb19430339a8" translate="yes" xml:space="preserve">
          <source>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</source>
          <target state="translated">기본, 요약, NTLM, Kerberos 또는 협상 인증 체계를 사용하여 프록시 인증을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="70da0ceff673ee93c735fb842e02d74844dd618b" translate="yes" xml:space="preserve">
          <source>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</source>
          <target state="translated">트래픽 모니터링 프록시 지원 : 액세스 제어 및 모니터링에 사용되는 Fiddler와 같은 프록시입니다.</target>
        </trans-unit>
        <trans-unit id="43e4b99d8f796a6596b3536c4a983b7cb9155b68" translate="yes" xml:space="preserve">
          <source>Supported Chrome Command Line Switches</source>
          <target state="translated">지원되는 Chrome 명령 행 스위치</target>
        </trans-unit>
        <trans-unit id="2ddc48d5168c769f54e951161dec8b1b65fca3cc" translate="yes" xml:space="preserve">
          <source>Supported Command Line Switches</source>
          <target state="translated">Supported Command Line Switches</target>
        </trans-unit>
        <trans-unit id="ee5b1ee6bc8a9f095e69f419328c6a4405e7c8ac" translate="yes" xml:space="preserve">
          <source>Supported DevTools Extensions</source>
          <target state="translated">지원되는 DevTools 확장</target>
        </trans-unit>
        <trans-unit id="52ea3d2fbd1d027d5e58082ffaaf1a865036f733" translate="yes" xml:space="preserve">
          <source>Supported Extensions APIs</source>
          <target state="translated">지원되는 확장 API</target>
        </trans-unit>
        <trans-unit id="2c4dac57669722579d0059c86b886c8076e5f699" translate="yes" xml:space="preserve">
          <source>Supported Formats</source>
          <target state="translated">지원되는 형식</target>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="translated">지원되는 플랫폼</target>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="translated">지원되는 버전</target>
        </trans-unit>
        <trans-unit id="4d07764fc1204ad402a2687ddda6ae939e80fec9" translate="yes" xml:space="preserve">
          <source>Swahili</source>
          <target state="translated">Swahili</target>
        </trans-unit>
        <trans-unit id="04a422d38c95415cece1ac86e1ad2a1030048c03" translate="yes" xml:space="preserve">
          <source>Swedish</source>
          <target state="translated">Swedish</target>
        </trans-unit>
        <trans-unit id="088d4269c81c49ae491ae293c8bc9fab93e96a43" translate="yes" xml:space="preserve">
          <source>Symbols cannot be copied across contexts so they are dropped</source>
          <target state="translated">심볼은 컨텍스트간에 복사 할 수 없으므로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="57536136efa291cb99584f051a0e6e8328a62928" translate="yes" xml:space="preserve">
          <source>Tag Attributes</source>
          <target state="translated">태그 속성</target>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="4f21a5266b5cadfc33910032ec2e839fc732d846" translate="yes" xml:space="preserve">
          <source>Take a look at the &lt;a href=&quot;https://electronjs.org/blog/electron-5-0-timeline&quot;&gt;5.0.0 Timeline blog post&lt;/a&gt; for info about publicizing our release dates.</source>
          <target state="translated">릴리스 날짜를 공개하는 방법에 대한 정보 는 &lt;a href=&quot;https://electronjs.org/blog/electron-5-0-timeline&quot;&gt;5.0.0 타임 라인 블로그 게시물&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59a7aeb9331caf95c1af3d7651e026eeebe7c5b7" translate="yes" xml:space="preserve">
          <source>Takes a V8 heap snapshot and saves it to &lt;code&gt;filePath&lt;/code&gt;.</source>
          <target state="translated">Takes a V8 heap snapshot and saves it to &lt;code&gt;filePath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bab3af5e58c1464388018e386504a4c45fe08559" translate="yes" xml:space="preserve">
          <source>Talk: &quot;Visual Studio Code - The First Second&quot;</source>
          <target state="translated">토크 : &quot;Visual Studio 코드-첫 번째 초&quot;</target>
        </trans-unit>
        <trans-unit id="86c2b6275f076b31c4be9812e835dab2a6f07ccf" translate="yes" xml:space="preserve">
          <source>Tamil</source>
          <target state="translated">Tamil</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="cea42d26ebd4929ac343e1a6d381b343d198a94f" translate="yes" xml:space="preserve">
          <source>Target Names</source>
          <target state="translated">대상 이름</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="translated">작업 객체</target>
        </trans-unit>
        <trans-unit id="586e90006bbbcd684ab54ec3ea76e4098393f572" translate="yes" xml:space="preserve">
          <source>Tatar</source>
          <target state="translated">Tatar</target>
        </trans-unit>
        <trans-unit id="985c76ae48843915ad1aa42325634790c0c46fc4" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js</source>
          <target state="translated">Technical Differences Between Electron and NW.js</target>
        </trans-unit>
        <trans-unit id="d14dd0f1027c9118f0a2c6414bff0d3fbb7c8297" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js (formerly node-webkit)</source>
          <target state="translated">Electron과 NW.js의 기술적 차이점 (이전의 node-webkit)</target>
        </trans-unit>
        <trans-unit id="ea6c03461dc3a543514f149ca6bb793d0a9e158a" translate="yes" xml:space="preserve">
          <source>Telugu</source>
          <target state="translated">Telugu</target>
        </trans-unit>
        <trans-unit id="7de91f3e9d75a52bb4c67b291e19d61e60d41099" translate="yes" xml:space="preserve">
          <source>Template Image</source>
          <target state="translated">템플릿 이미지</target>
        </trans-unit>
        <trans-unit id="a405502f51e0bcd09ad6c9996568e9af0030f8c4" translate="yes" xml:space="preserve">
          <source>Template images consist of black and an alpha channel. Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="translated">Template images consist of black and an alpha channel. Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</target>
        </trans-unit>
        <trans-unit id="61f4c40bafaf925c90d8aec2fb8fe82177a28538" translate="yes" xml:space="preserve">
          <source>Template images consist of black and clear colors (and an alpha channel). Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="translated">템플릿 이미지는 검은 색과 선명한 색상 (및 알파 채널)으로 구성됩니다. 템플릿 이미지는 독립형 이미지로 사용하기위한 것이 아니며 일반적으로 원하는 최종 모양을 만들기 위해 다른 내용과 혼합됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0db7be1461de15be97b4fcf849f0ce026908fa" translate="yes" xml:space="preserve">
          <source>Template:</source>
          <target state="translated">Template:</target>
        </trans-unit>
        <trans-unit id="3422cdf696b9514aff2a7df2e1ab35399048fb75" translate="yes" xml:space="preserve">
          <source>Tenant ID</source>
          <target state="translated">테넌트 ID</target>
        </trans-unit>
        <trans-unit id="f597cdd5c3c89fe269776fca18c862a026294b15" translate="yes" xml:space="preserve">
          <source>Terse responses that provide neither additional context nor supporting detail are not helpful or professional. To many, such responses are annoying and unfriendly.</source>
          <target state="translated">추가적인 맥락이나 지원 세부 사항을 제공하지 않는 간결한 답변은 도움이되지 않거나 전문적이지 않습니다. 많은 사람들에게 그러한 반응은 성 가시고 비우호적입니다.</target>
        </trans-unit>
        <trans-unit id="74b3791a94489341394b02e06d475b9a10d864b3" translate="yes" xml:space="preserve">
          <source>Test functionality using:</source>
          <target state="translated">다음을 사용하여 기능을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0fcdbe88dfea7bef908cb935c5e6a5a7cc750c5d" translate="yes" xml:space="preserve">
          <source>Test your changes conform to the project coding style using:</source>
          <target state="translated">다음을 사용하여 변경 사항이 프로젝트 코딩 스타일에 맞는지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="1eeec028d1344e5b6f8fe3343dd31c611fe9a372" translate="yes" xml:space="preserve">
          <source>Testing Widevine CDM</source>
          <target state="translated">Widevine CDM 테스트</target>
        </trans-unit>
        <trans-unit id="66bb682e02caf9ddc029a0c2316d21b9d64ccfae" translate="yes" xml:space="preserve">
          <source>Testing and Debugging</source>
          <target state="translated">테스트 및 디버깅</target>
        </trans-unit>
        <trans-unit id="7b87088e3905b59b59b4a799f15c55321f33e99c" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis CI, Jenkins)</source>
          <target state="translated">헤드리스 CI 시스템 테스트 (Travis CI, Jenkins)</target>
        </trans-unit>
        <trans-unit id="b199b027369ad4d90d0312908b79cd8855d69615" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis, Jenkins)</source>
          <target state="translated">헤드리스 CI 시스템 테스트 (Travis, Jenkins)</target>
        </trans-unit>
        <trans-unit id="d635b87fdeccca32b2a369977eafcc765afa7f92" translate="yes" xml:space="preserve">
          <source>Testing on Windows 10 devices</source>
          <target state="translated">Windows 10 장치에서 테스트</target>
        </trans-unit>
        <trans-unit id="f70bfc1cc5397d2f4c86d88b2438aa83b701ea6b" translate="yes" xml:space="preserve">
          <source>Testing your app</source>
          <target state="translated">앱 테스트</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="a722e0bd49de206034a1eab35e631a36cab05fe7" translate="yes" xml:space="preserve">
          <source>Tests that include native modules (e.g. &lt;code&gt;runas&lt;/code&gt;) can't be executed with the debug build (see &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;#2558&lt;/a&gt; for details), but they will work with the release build.</source>
          <target state="translated">기본 모듈 (예 : &lt;code&gt;runas&lt;/code&gt; ) 을 포함하는 테스트 는 디버그 빌드에서 실행할 수 없지만 (자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;# 2558&lt;/a&gt; 참조) 릴리스 빌드에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3f57c1784bd97f2d870b0ed9e38ca45dff50c643" translate="yes" xml:space="preserve">
          <source>Text selection</source>
          <target state="translated">텍스트 선택</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="fbb60eaf6f45c9af5307617f93cfba5afc963630" translate="yes" xml:space="preserve">
          <source>That level of modularity and extendability ensures that all developers working with Electron, both big and small in team-size, are never restricted in what they can or cannot do at any time during their development lifecycle. However, for many developers, one of the community-driven boilerplates or command line tools might make it dramatically easier to compile, package, and release an app.</source>
          <target state="translated">이러한 수준의 모듈 성과 확장 성 덕분에 팀 규모에 상관없이 Electron을 사용하는 모든 개발자는 개발 수명주기 동안 언제든지 수행 할 수 있거나 수행 할 수없는 작업에 제한을받지 않습니다. 그러나 많은 개발자의 경우 커뮤니티 중심 상용구 또는 명령 줄 도구 중 하나를 사용하여 앱을 쉽게 컴파일, 패키지 및 릴리스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e20787708f9970e1d1f81dba29c5ce83a13fe77c" translate="yes" xml:space="preserve">
          <source>That module detected your network connectivity by attempting to reach out to a number of well-known endpoints. For the list of those endpoints, it depended on a different module, which also contained a list of well-known ports. This dependency itself relied on a module containing information about ports, which came in the form of a JSON file with more than 100,000 lines of content. Whenever the module was loaded (usually in a &lt;code&gt;require('module')&lt;/code&gt; statement), it would load all its dependencies and eventually read and parse this JSON file. Parsing many thousands lines of JSON is a very expensive operation. On a slow machine it can take up whole seconds of time.</source>
          <target state="translated">이 모듈은 잘 알려진 여러 엔드 포인트에 연결을 시도하여 네트워크 연결을 감지했습니다. 이러한 엔드 포인트 목록의 경우 잘 알려진 포트 목록도 포함 된 다른 모듈에 의존했습니다. 이 종속성 자체는 100,000 줄 이상의 콘텐츠가 포함 된 JSON 파일 형식으로 제공되는 포트에 대한 정보를 포함하는 모듈에 의존했습니다. 모듈이로드 될 때마다 (보통 &lt;code&gt;require('module')&lt;/code&gt; 문에서) 모든 종속성을로드하고 결국이 JSON 파일을 읽고 구문 분석합니다. 수천 줄의 JSON을 구문 분석하는 것은 매우 비용이 많이 드는 작업입니다. 느린 컴퓨터에서는 몇 초 정도 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="276fce9f0935dd3c5e6750ffc0957f5a4545b6dd" translate="yes" xml:space="preserve">
          <source>The &quot;Main World&quot; is the JavaScript context that your main renderer code runs in. By default, the page you load in your renderer executes code in this world.</source>
          <target state="translated">&quot;Main World&quot;는 메인 렌더러 코드가 실행되는 JavaScript 컨텍스트입니다. 기본적으로 렌더러에서로드하는 페이지는이 월드에서 코드를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="5f9fd140c065b9dfdcd3064f9ec217498c5da66f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/context-bridge&quot;&gt;&lt;code&gt;contextBridge&lt;/code&gt;&lt;/a&gt; module can be used to &lt;strong&gt;safely&lt;/strong&gt; expose APIs from the isolated context your preload script runs in to the context the website is running in. The API will also be accessible from the website on &lt;code&gt;window.myAPI&lt;/code&gt; just like it was before.</source>
          <target state="translated">&lt;a href=&quot;../api/context-bridge&quot;&gt; &lt;code&gt;contextBridge&lt;/code&gt; 의&lt;/a&gt; 모듈로 사용할 수 있습니다 &lt;strong&gt;안전하게&lt;/strong&gt; 컨텍스트에에 프리로드 스크립트를 실행하는 웹 사이트가 실행되는 격리 된 환경에서 API를 노출합니다. API는 또한의 웹 사이트에서 액세스 할 수 &lt;code&gt;window.myAPI&lt;/code&gt; 가 예전처럼.</target>
        </trans-unit>
        <trans-unit id="fd22760d2471b9fe162b9358078abedcb3b5b880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt;&lt;code&gt;before-input-event&lt;/code&gt;&lt;/a&gt; event is emitted before dispatching &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. It can be used to catch and handle custom shortcuts that are not visible in the menu.</source>
          <target state="translated">&lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt; &lt;code&gt;before-input-event&lt;/code&gt; &lt;/a&gt; 이벤트는 발송하기 전에 방출 &lt;code&gt;keydown&lt;/code&gt; 과 &lt;code&gt;keyup&lt;/code&gt; 페이지에서 이벤트를. 메뉴에 표시되지 않는 사용자 정의 바로 가기를 포착하고 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d51b42e4284569c47846592ee77ad48d1ec9b553" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;api/context-bridge&quot;&gt;&lt;code&gt;contextBridge&lt;/code&gt;&lt;/a&gt; module can be used to &lt;strong&gt;safely&lt;/strong&gt; expose APIs from the isolated context your preload script runs in to the context the website is running in. The API will also be accessible from the website on &lt;code&gt;window.myAPI&lt;/code&gt; just like it was before.</source>
          <target state="translated">&lt;a href=&quot;api/context-bridge&quot;&gt; &lt;code&gt;contextBridge&lt;/code&gt; 의&lt;/a&gt; 모듈로 사용할 수 있습니다 &lt;strong&gt;안전하게&lt;/strong&gt; 컨텍스트에에 프리로드 스크립트를 실행하는 웹 사이트가 실행되는 격리 된 환경에서 API를 노출합니다. API는 또한의 웹 사이트에서 액세스 할 수 &lt;code&gt;window.myAPI&lt;/code&gt; 가 예전처럼.</target>
        </trans-unit>
        <trans-unit id="53aa50ffe75ffccb23af65ef23ab0a5ee0114d1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;api/web-contents#event-before-input-event&quot;&gt;&lt;code&gt;before-input-event&lt;/code&gt;&lt;/a&gt; event is emitted before dispatching &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. It can be used to catch and handle custom shortcuts that are not visible in the menu.</source>
          <target state="translated">&lt;a href=&quot;api/web-contents#event-before-input-event&quot;&gt; &lt;code&gt;before-input-event&lt;/code&gt; &lt;/a&gt; 이벤트는 발송하기 전에 방출 &lt;code&gt;keydown&lt;/code&gt; 과 &lt;code&gt;keyup&lt;/code&gt; 페이지에서 이벤트를. 메뉴에 표시되지 않는 사용자 지정 바로 가기를 포착하고 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546f43fddeffeeda41d593ce9fea7c08e6acc480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;Page Visibility API&lt;/a&gt; works as follows:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;페이지 가시성 API는&lt;/a&gt; 다음과 같이 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="7f56790db6023381f33f17285f31047d53e354f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;&lt;code&gt;prefers-color-scheme&lt;/code&gt;&lt;/a&gt; CSS query will match &lt;code&gt;dark&lt;/code&gt; mode.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt; &lt;code&gt;prefers-color-scheme&lt;/code&gt; &lt;/a&gt; CSS 쿼리 일치 &lt;code&gt;dark&lt;/code&gt; 모드.</target>
        </trans-unit>
        <trans-unit id="8eaf756ab4d59beb2f01f5a0abc2a2ee088d2cd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;&lt;code&gt;prefers-color-scheme&lt;/code&gt;&lt;/a&gt; CSS query will match &lt;code&gt;light&lt;/code&gt; mode.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt; &lt;code&gt;prefers-color-scheme&lt;/code&gt; &lt;/a&gt; CSS 쿼리 일치 &lt;code&gt;light&lt;/code&gt; 모드.</target>
        </trans-unit>
        <trans-unit id="50be31a1aec1cf6ff184e304cbd59137cf9d97d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt;&lt;code&gt;setMenu&lt;/code&gt; method&lt;/a&gt; of browser windows can set the menu of certain browser windows.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt; &lt;code&gt;setMenu&lt;/code&gt; 방법&lt;/a&gt; 브라우저 창은 특정 브라우저 윈도우의 메뉴를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c18a39ea0a59ab8d6b7ac00ca6274e07ff4e3710" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt;&lt;code&gt;node-pre-gyp&lt;/code&gt; tool&lt;/a&gt; provides a way to deploy native Node modules with prebuilt binaries, and many popular modules are using it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt; &lt;code&gt;node-pre-gyp&lt;/code&gt; 도구&lt;/a&gt; 를 사용하는 미리 만들어진 바이너리, 많은 인기 모듈을 기본 노드 모듈을 전개 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4285f06f330851132a1bb653b9f3ed2e10705d5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;Awesome Electron&quot; list&lt;/a&gt; contains more tools and boilerplates to choose from. If you find the length of the list intimidating, don't forget that adding tools as you go along is a valid approach, too.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;굉장 전자&quot;목록에&lt;/a&gt; 더 많은 도구와 선택 boilerplates가 포함되어 있습니다. 목록의 길이가 협박되는 경우 도구를 추가하는 것도 유효한 방법이라는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="dc34fe72d512c6d26b2161b572b7963d1852e62d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-beta.1&lt;/code&gt; and &lt;code&gt;stable&lt;/code&gt; dates are our solid release dates.</source>
          <target state="translated">&lt;code&gt;-beta.1&lt;/code&gt; 및 &lt;code&gt;stable&lt;/code&gt; 날짜는 우리의 고체 출시 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="26d4924ea4b8c06c6a5af32fe6dcfdc2d9472e9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-x&lt;/code&gt; flag should be used with any required module that is already exposed in the preload scope, and tells browserify to use the enclosing &lt;code&gt;require&lt;/code&gt; function for it. &lt;code&gt;--insert-global-vars&lt;/code&gt; will ensure that &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;setImmediate&lt;/code&gt; are also taken from the enclosing scope(normally browserify injects code for those).</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 플래그는 이미 프리로드 범위에 노출되어 필요한 모듈을 사용하고, 바깥 사용 browserify 지시해야 &lt;code&gt;require&lt;/code&gt; 그것을 위해 기능을. &lt;code&gt;--insert-global-vars&lt;/code&gt; 는 &lt;code&gt;process&lt;/code&gt; , &lt;code&gt;Buffer&lt;/code&gt; 및 &lt;code&gt;setImmediate&lt;/code&gt; 도 둘러싸는 범위에서 가져옵니다 (일반적으로 browserify 는 코드를 주입합니다).</target>
        </trans-unit>
        <trans-unit id="07787c413e40de525905bace4028a285133a7977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindow&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; 의 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5fb74cf64078c3266f27fdc27672e6d77567d9c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체는 다음 인스턴스 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="d2e8026a49cfe035502c70155d7822608b823c7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance properties:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체는 다음 인스턴스 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="378c32718c3701cfe2b78f42dbf353799ed3e872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object is returned from &lt;code&gt;window.open&lt;/code&gt; and provides limited functionality with the child window.</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체에서 반환 &lt;code&gt;window.open&lt;/code&gt; 과 자식 창으로 제한된 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e205851e02ff44e952b5b6432b8733e0d512cc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Display&lt;/code&gt; object represents a physical display connected to the system. A fake &lt;code&gt;Display&lt;/code&gt; may exist on a headless system, or a &lt;code&gt;Display&lt;/code&gt; may correspond to a remote, virtual display.</source>
          <target state="translated">&lt;code&gt;Display&lt;/code&gt; 객체가 시스템에 연결되어있는 물리적 인 디스플레이를 나타냅니다. 헤드리스 시스템에 가짜 &lt;code&gt;Display&lt;/code&gt; 가 있거나 &lt;code&gt;Display&lt;/code&gt; 가 원격 가상 디스플레이에 해당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36111e3a5ab27ddad11383f671b1db57b263f884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; changes where to find development headers. The &lt;code&gt;--target=1.2.3&lt;/code&gt; is version of Electron. The &lt;code&gt;--dist-url=...&lt;/code&gt; specifies where to download the headers. The &lt;code&gt;--arch=x64&lt;/code&gt; says the module is built for 64bit system.</source>
          <target state="translated">&lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; 변화는 어디에서 개발 헤더를 찾을 수 있습니다. &lt;code&gt;--target=1.2.3&lt;/code&gt; 전자의 버전입니다. &lt;code&gt;--dist-url=...&lt;/code&gt; 지정합니다 헤더를 다운로드합니다. &lt;code&gt;--arch=x64&lt;/code&gt; 모듈은 64 비트 시스템 구축 말한다.</target>
        </trans-unit>
        <trans-unit id="a562dad6885d8f09e573b780469c9ba517fcae85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="881a2cc054ef776a5c14d444724305abb71b5376" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class is only available in the main process, but you can also use it in the render process via the &lt;a href=&quot;api/remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; 클래스는 기본 프로세스에서만 사용할 수 있습니다,하지만 당신은 또한을 통해 렌더링 과정에서 사용할 수있는 &lt;a href=&quot;api/remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="9514231a4bc92a133c52dca0d2e94a52bdd7b4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class is only available in the main process, but you can also use it in the render process via the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; 클래스는 기본 프로세스에서만 사용할 수 있습니다,하지만 당신은 또한을 통해 렌더링 과정에서 사용할 수있는 &lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="90637a5eccddf5840df8977ac78bf5a858511ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notification&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;Notification&lt;/code&gt; 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="95804347995e70d453f68b137daf116055a4d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; object returned by &lt;code&gt;fs.stat&lt;/code&gt; and its friends on files in &lt;code&gt;asar&lt;/code&gt; archives is generated by guessing, because those files do not exist on the filesystem. So you should not trust the &lt;code&gt;Stats&lt;/code&gt; object except for getting file size and checking file type.</source>
          <target state="translated">&lt;code&gt;Stats&lt;/code&gt; 에 의해 반환 된 객체 &lt;code&gt;fs.stat&lt;/code&gt; 와의 파일에 그 친구 &lt;code&gt;asar&lt;/code&gt; 해당 파일은 파일 시스템에 존재하지 않기 때문에 아카이브는 추측에 의해 생성됩니다. 따라서 파일 크기를 가져오고 파일 유형을 확인하는 것 외에는 &lt;code&gt;Stats&lt;/code&gt; 객체를 신뢰해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="095dd42a57b5876b1a6eb4597c1c2e6d0fd7fe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Super&lt;/code&gt; key is mapped to the &lt;code&gt;Windows&lt;/code&gt; key on Windows and Linux and &lt;code&gt;Cmd&lt;/code&gt; on macOS.</source>
          <target state="translated">&lt;code&gt;Super&lt;/code&gt; 키는 매핑되는 &lt;code&gt;Windows&lt;/code&gt; Windows 및 Linux와 키 &lt;code&gt;Cmd&lt;/code&gt; 를 맥 OS에.</target>
        </trans-unit>
        <trans-unit id="548888cfaa24b5e46bb879ba09c005e135f4e50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; class has the following methods:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; 클래스는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4b63c9111b71a3a4ecd76b489350d61f921c316d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="e325507aab2b1b98a40c1975f6b48e46ad21507b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebFrame&lt;/code&gt; class has the following instance methods:</source>
          <target state="translated">&lt;code&gt;WebFrame&lt;/code&gt; 의 클래스는 다음 인스턴스 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="49db5017dbb7fcd31b41d7c2bbd8e4e2ef8bd894" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;acceptLanguages&lt;/code&gt; must a comma separated ordered list of language codes, for example &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acceptLanguages&lt;/code&gt; 는 쉼표 예를 들어, 언어 코드의 목록을 주문 분리 된해야한다 &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f1141f014a39c42e59cbce41d7eba5e00a20d8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;affinity&lt;/code&gt; option when constructing a new &lt;code&gt;BrowserWindow&lt;/code&gt; will be removed as part of our plan to more closely align with Chromium's process model for security, performance and maintainability.</source>
          <target state="translated">&lt;code&gt;affinity&lt;/code&gt; 새로운 구성 옵션 &lt;code&gt;BrowserWindow&lt;/code&gt; 은 더 밀접하게 보안, 성능 및 유지 관리를위한 크롬의 프로세스 모델에 맞춰 우리의 계획의 일환으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b60e345f8ea1bfea3e36113496b19585f52e22f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;api&lt;/code&gt; object provided to &lt;a href=&quot;#contextbridgeexposeinmainworldapikey-api-experimental&quot;&gt;&lt;code&gt;exposeInMainWorld&lt;/code&gt;&lt;/a&gt; must be an object whose keys are strings and values are a &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, or another nested object that meets the same conditions.</source>
          <target state="translated">&lt;code&gt;api&lt;/code&gt; 제공 객체 &lt;a href=&quot;#contextbridgeexposeinmainworldapikey-api-experimental&quot;&gt; &lt;code&gt;exposeInMainWorld&lt;/code&gt; 는&lt;/a&gt; 그 키 값과 문자열되어있는 객체 여야 &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; 거나 같은 조건을 충족하는 다른 중첩 오브젝트.</target>
        </trans-unit>
        <trans-unit id="b15a23f3e4538bb79d20fd17bb0e7e16fa3b3f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 객체는 다음과 같은 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="002fdff755f07b750c740ea76c9ad4d8538566c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0df538d644ba9f1cf0ab882ab0f91874ab228d5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; array string &lt;code&gt;&quot;your-electron-project-path&quot;&lt;/code&gt; should be the absolute path to either the directory or &lt;code&gt;main.js&lt;/code&gt; file of the Electron project you are using for testing. In this example, it should be your path to &lt;code&gt;electron-quick-start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 배열 문자열 &lt;code&gt;&quot;your-electron-project-path&quot;&lt;/code&gt; 디렉토리 또는 중 하나에 대한 절대 경로 여야합니다 &lt;code&gt;main.js&lt;/code&gt; 당신이 테스트에 사용하는 전자 프로젝트의 파일. 이 예에서는 &lt;code&gt;electron-quick-start&lt;/code&gt; 에 대한 경로 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="bb1acceddcd94f2f7ba1e55e4b2100588ac1d786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; 객체는 다음과 같은 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="3b4e5e4aebb061efee47a8a13fcf6a4b5cc16b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e3a18bd191c6bb3e87e89299d68faf09f0ac3a17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; filter only applies to the web page, so there is no way to apply blur effect to the content below the window (i.e. other applications open on the user's system).</source>
          <target state="translated">&lt;code&gt;blur&lt;/code&gt; 필터는 웹 페이지에 적용되므로 창 아래의 내용 (즉, 다른 응용 프로그램이 사용자의 시스템에 열)에 흐림 효과를 적용 할 수있는 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="d5a6d10ecd8dd7dc1ee5198b82589f3f4b3508b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this BrowserView instance as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 BrowserView 인스턴스 의 &lt;code&gt;bounds&lt;/code&gt; 는 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e2355778305a7074fcec2fb4ec88d449e5a1e40b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this tray icon as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 트레이 아이콘 의 &lt;code&gt;bounds&lt;/code&gt; 는 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e9dbc7cd3bcff2b75b0f1d3596349050baee4036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 의 인수는 대화 상자가 모달 만드는 부모 창에 자신을 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3369a84ed10197048ea3f4fe195088057dd78754" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal. If &lt;code&gt;browserWindow&lt;/code&gt; is not shown dialog will not be attached to it. In such case it will be displayed as an independent window.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 의 인수는 대화 상자가 모달 만드는 부모 창에 자신을 첨부 할 수 있습니다. 경우 &lt;code&gt;browserWindow&lt;/code&gt; 가 표시되지 않습니다 대화 상자가 첨부되지 않습니다. 이 경우 독립된 창으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="63a7588ba2bc1f88e743b453cf4a04f1f17b9355" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument is ignored since it is not possible to make this confirmation dialog modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 의 인수는이 확인 대화 상자의 모달을 할 수 없습니다 때문에 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5396c28a26b135b4e02d8c03a179881499cbc516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buttons&lt;/code&gt; is an array of &lt;code&gt;Button&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;buttons&lt;/code&gt; 의 배열 &lt;code&gt;Button&lt;/code&gt; 오브젝트 :</target>
        </trans-unit>
        <trans-unit id="a85420db83103b60313c540377497e810fdfe12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is expected to be called back with user credentials:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 기능은 사용자 자격 증명을 다시 호출 할 것으로 예상된다 :</target>
        </trans-unit>
        <trans-unit id="4888e52bf5abfeec5e29e4ad79aa00b61428d4b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with a &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 호출해야하는 &lt;code&gt;response&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d0ea095cd807318dc09f88cb0623c0b9f76a5c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with an &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 호출해야하는 &lt;code&gt;response&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="722e658697e82305d3fc4ad9883c4ea54a96e299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is guaranteed to be executed after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 애프터 실행되도록 보장 &lt;code&gt;ready&lt;/code&gt; 의 경우 &lt;code&gt;app&lt;/code&gt; 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="a00dd859c40cd9cb490ab9fe3f58740b20b89324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, data)&lt;/code&gt; on completion. The &lt;code&gt;data&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains the generated PDF data.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(error, data)&lt;/code&gt; 완료에. &lt;code&gt;data&lt;/code&gt; A는 &lt;code&gt;Buffer&lt;/code&gt; 생성 된 PDF 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="356f68b035169a45ce9d444a247220b106430430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with a boolean that indicates whether there is already a handler for &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 이미에 대한 핸들러가 있는지 여부를 나타내는 부울 호출 할 것이다 &lt;code&gt;scheme&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe244816958e1ab626feaede5fa1d3dbe5730b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;child&lt;/code&gt; window will always show on top of the &lt;code&gt;top&lt;/code&gt; window.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; 창을 항상 위에 표시됩니다 &lt;code&gt;top&lt;/code&gt; 창.</target>
        </trans-unit>
        <trans-unit id="7a2313446db8e81753e97957c071d74a94bd65f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clipboard&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;clipboard&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4df573d09842fba80573bc465f0de1df7f8cc99c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;companyName&lt;/code&gt; argument to &lt;code&gt;crashReporter.start()&lt;/code&gt;, which was previously required, is now optional, and further, is deprecated. To get the same behavior in a non-deprecated way, you can pass a &lt;code&gt;companyName&lt;/code&gt; value in &lt;code&gt;globalExtra&lt;/code&gt;.</source>
          <target state="translated">이전에 필요했던 &lt;code&gt;crashReporter.start()&lt;/code&gt; 의 &lt;code&gt;companyName&lt;/code&gt; 인수 는 이제 선택 사항이며 더 이상 사용되지 않습니다. 더 이상 사용되지 않는 방식으로 동일한 동작을 얻으려면 &lt;code&gt;globalExtra&lt;/code&gt; 에 &lt;code&gt;companyName&lt;/code&gt; 값을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb07e41210d7fff1788acac73dfb010bb237c483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentTracing&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;contentTracing&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1b72a241fcbb8bd27cf55eb3b1bf824ae7b01b2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contextBridge&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;contextBridge&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2b6bf6aa800a48a0bed12281434a3a9d0e171a9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crashReporter.getCrashesDirectory&lt;/code&gt; method has been deprecated. Usage should be replaced by &lt;code&gt;app.getPath('crashDumps')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;crashReporter.getCrashesDirectory&lt;/code&gt; 방법은 더 이상 사용되지 않습니다. 사용법은 &lt;code&gt;app.getPath('crashDumps')&lt;/code&gt; 로 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="93991c1e8a60fa256116cc32be4c8bda608260fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crashReporter&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="241b7d90fa34196856ed435b3363c3b6a90d07c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; event is the usual method of transferring response data into applicative code.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 이벤트 실용적 코드에 응답하여 데이터를 전송하는 일반적인 방법이다.</target>
        </trans-unit>
        <trans-unit id="403f5086c41f36c4fef65505be759177ba388421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktop&lt;/code&gt; type places the window at the desktop background window level (&lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt;). Note that desktop window will not receive focus, keyboard or mouse events, but you can use &lt;code&gt;globalShortcut&lt;/code&gt; to receive input sparingly.</source>
          <target state="translated">&lt;code&gt;desktop&lt;/code&gt; 유형은 바탕 화면 배경 창 수준 (에 창을 배치 &lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt; ). 데스크탑 창에는 포커스, 키보드 또는 마우스 이벤트 가 수신되지 &lt;code&gt;globalShortcut&lt;/code&gt; 을 사용 하여 입력을 드물게받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c91ffc57c958c7d8acdb45b0a7b46f1817c75746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktopCapturer&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;desktopCapturer&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5c86af2d3eca32ea6c29be53122248ebc912a2db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devToolsWebContents&lt;/code&gt; must not have done any navigation, and it should not be used for other purposes after the call.</source>
          <target state="translated">&lt;code&gt;devToolsWebContents&lt;/code&gt; 은 어떤 탐색을 수행하지 않아야하고, 통화 후 다른 목적으로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="936fe58c56fb05911024b85cff388024ba3116ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dialog&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;dialog&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4095e62c7ce99006c409a16aa80713cfe7c69501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;frameBuffer&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dirtyRect&lt;/code&gt; 가 갖는 목적 &lt;code&gt;x, y, width, height&lt;/code&gt; 페이지의 일부를 다시 칠 된 설명 특성. 경우 &lt;code&gt;onlyDirty&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;frameBuffer&lt;/code&gt; 만 다시 칠 영역을 포함합니다. &lt;code&gt;onlyDirty&lt;/code&gt; 의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c5707b2df74c96454b74f8fd72d18b93f28eca83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dirtyRect&lt;/code&gt; 가 갖는 목적 &lt;code&gt;x, y, width, height&lt;/code&gt; 페이지의 일부를 다시 칠 된 설명 특성. 경우 &lt;code&gt;onlyDirty&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;image&lt;/code&gt; 만 다시 칠 영역을 포함합니다. &lt;code&gt;onlyDirty&lt;/code&gt; 의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05f576a2a158a83cd7ce5968c7932e1f336b7007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;downloadItem&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;downloadItem&lt;/code&gt; 의 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ed6c50abf3a121448cce42cd5e2c77e7b44b0029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;electron&lt;/code&gt; module exposes features in namespaces. As examples, the lifecycle of the application is managed through &lt;code&gt;electron.app&lt;/code&gt;, windows can be created using the &lt;code&gt;electron.BrowserWindow&lt;/code&gt; class. A simple &lt;code&gt;main.js&lt;/code&gt; file might wait for the application to be ready and open a window:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; 모듈이 노출 네임 스페이스의 기능. 예를 들어 응용 프로그램의 수명주기는 &lt;code&gt;electron.app&lt;/code&gt; 를 통해 관리 되며, &lt;code&gt;electron.BrowserWindow&lt;/code&gt; 클래스를 사용하여 창을 만들 수 있습니다 . 간단한 &lt;code&gt;main.js&lt;/code&gt; 파일은 응용 프로그램이 준비 될 때까지 기다렸다가 창을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e713198ae5aa3d7860ac6a3ebb58bc755e36869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eval()&lt;/code&gt; method has precisely one mission: To evaluate a series of characters as JavaScript and execute it. It is a required method whenever you need to evaluate code that is not known ahead of time. While legitimate use cases exist, like any other code generators, &lt;code&gt;eval()&lt;/code&gt; is difficult to harden.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; 자바 스크립트와 같은 일련의 문자를 평가하고 실행하려면 다음 방법은 정확하게 하나의 사명을 가지고있다. 미리 알려지지 않은 코드를 평가해야 할 때마다 필요한 방법입니다. 다른 코드 생성기와 마찬가지로 합법적 인 사용 사례가 존재하지만 &lt;code&gt;eval()&lt;/code&gt; 을 강화하기는 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="019cd8312f1a5fda260bfd332d18f88cd5919fe5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체 에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1484f670254f7728dcc21a8bf78f8824b5ccef06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; that is passed as the first argument to the handler is the same as that passed to a regular event listener. It includes information about which WebContents is the source of the invoke request.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 핸들러에 첫 번째 인수로서 건네 일반 이벤트 리스너에 전달 된 것과 동일하다. 여기에는 호출 요청의 소스 인 WebContents에 대한 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e24c53e04a1e278fe4236904cb31e9fccf0e561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extensions&lt;/code&gt; array should contain extensions without wildcards or dots (e.g. &lt;code&gt;'png'&lt;/code&gt; is good but &lt;code&gt;'.png'&lt;/code&gt; and &lt;code&gt;'*.png'&lt;/code&gt; are bad). To show all files, use the &lt;code&gt;'*'&lt;/code&gt; wildcard (no other wildcard is supported).</source>
          <target state="translated">&lt;code&gt;extensions&lt;/code&gt; 배열 (예 : 와일드 카드 또는 점없이 확장을 포함해야한다 &lt;code&gt;'png'&lt;/code&gt; 좋지만 &lt;code&gt;'.png'&lt;/code&gt; 및 &lt;code&gt;'*.png'&lt;/code&gt; 나쁜). 모든 파일을 표시하려면 &lt;code&gt;'*'&lt;/code&gt; 와일드 카드를 사용하십시오 (다른 와일드 카드는 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="f3d501c675b0d84ae308df640a7d8d0a5378ef74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 문자열은 표준 브라우저의 형식을 따르지만, 각 기능의 필드 수있다 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0e06ba78b18a7e834f14843666d6044886313491" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options. These are the features you can set via &lt;code&gt;features&lt;/code&gt; string: &lt;code&gt;zoomFactor&lt;/code&gt;, &lt;code&gt;nodeIntegration&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;contextIsolation&lt;/code&gt;, &lt;code&gt;webviewTag&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 문자열은 표준 브라우저의 형식을 따르지만, 각 기능의 필드 수있다 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 옵션을 제공합니다. 다음은 &lt;code&gt;features&lt;/code&gt; 문자열을 통해 설정할 수있는 기능입니다 : &lt;code&gt;zoomFactor&lt;/code&gt; , &lt;code&gt;nodeIntegration&lt;/code&gt; , &lt;code&gt;preload&lt;/code&gt; , &lt;code&gt;javascript&lt;/code&gt; , &lt;code&gt;contextIsolation&lt;/code&gt; , &lt;code&gt;webviewTag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94ffd4d3baf2d1de08f14cfdc6edb75368339278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; object has a &lt;code&gt;urls&lt;/code&gt; property which is an Array of URL patterns that will be used to filter out the requests that do not match the URL patterns. If the &lt;code&gt;filter&lt;/code&gt; is omitted then all requests will be matched.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 객체는이 &lt;code&gt;urls&lt;/code&gt; 의 URL 패턴과 일치하지 않는 요청을 필터링하는 데 사용되는 URL 패턴의 배열입니다 속성을. 는 IF &lt;code&gt;filter&lt;/code&gt; 다음 생략 모든 요청이 일치됩니다.</target>
        </trans-unit>
        <trans-unit id="bfee38503c0250eb4e4343bcbcc1335f4e55bda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 특정 유형의 사용자를 제한 할 때 표시하거나 선택할 수있는 파일 형식의 배열을 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a171949c0c23f49efff8c99983f73afc8dcbb4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed, see &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; for an example.</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 지정 표시 할 수있는 파일 형식의 배열을 참조 &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; 을 예제.</target>
        </trans-unit>
        <trans-unit id="1111c9edc37ca4ec0da599ababcc1c555f969fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; is an array that can include following &lt;code&gt;String&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 다음을 포함 할 수있는 배열입니다 &lt;code&gt;String&lt;/code&gt; 의 :</target>
        </trans-unit>
        <trans-unit id="1efcf6d7d014bb9491f1998332ceaecd85bc09ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frameBuffer&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).</source>
          <target state="translated">&lt;code&gt;frameBuffer&lt;/code&gt; A는 &lt;code&gt;Buffer&lt;/code&gt; 의 픽셀 데이터를 포함한다. 대부분의 컴퓨터에서 픽셀 데이터는 32 비트 BGRA 형식으로 효과적으로 저장되지만 실제 표현은 프로세서의 엔디안에 따라 다릅니다 (대부분의 최신 프로세서는 리틀 엔디안, 빅 엔디안 프로세서가있는 컴퓨터에서는 데이터가 32 비트 ARGB 형식 임) .</target>
        </trans-unit>
        <trans-unit id="9fcc494ee17ffd205cbbac07d73e00106aaa27c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; 의 다양한 바로 가기에 대한 작업을 사용자 정의 할 수 있도록 모듈은 운영 체제와 글로벌 키보드 바로 가기 등록을 취소 / 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e81a564399a9942cb864d440b50ddece338d8694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6e46ae7cad787cdb21735231e0621ab5e4b87b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules</source>
          <target state="translated">&lt;code&gt;hslShift&lt;/code&gt; 는 다음과 같은 규칙을 이미지에 적용됩니다</target>
        </trans-unit>
        <trans-unit id="ecc6e74f03e91f68a0be2a946efbf193daaabedb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules:</source>
          <target state="translated">&lt;code&gt;hslShift&lt;/code&gt; 는 다음과 같은 규칙에 이미지에 적용됩니다 :</target>
        </trans-unit>
        <trans-unit id="011be400a53eb4b292815de9c842d46cdff7274b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the subscriber is returned, which can be used to unsubscribe the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">구독자 의 &lt;code&gt;id&lt;/code&gt; 가 반환되어 &lt;code&gt;event&lt;/code&gt; 구독을 취소하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d072a2311c3ff1b9585fb251c4c328ab6384bfa2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image&lt;/code&gt; is an instance of &lt;a href=&quot;api/native-image&quot;&gt;NativeImage&lt;/a&gt; that stores the captured frame.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 의 인스턴스 &lt;a href=&quot;api/native-image&quot;&gt;NativeImage&lt;/a&gt; 캡처 된 프레임을 저장한다.</target>
        </trans-unit>
        <trans-unit id="61643242f052f9128e83be2805169e23dabef88b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image&lt;/code&gt; is an instance of &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; that stores the captured frame.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 의 인스턴스 &lt;a href=&quot;native-image&quot;&gt;NativeImage&lt;/a&gt; 캡처 된 프레임을 저장한다.</target>
        </trans-unit>
        <trans-unit id="2fc3adee636a52c8789e208afca9c876a4f682fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; 의 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="f56c660b8b8c9904524895909d5a74c1b2fbb582" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ab1ca8815860d303d79a089caeff3d0180d98ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.html&lt;/code&gt; page looks as follows:</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 페이지의 모습은 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="1fb362b5518a8a407a6aad6446c86825b49e86e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module has the following method to listen for events:</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; 의 모듈은 이벤트를 수신 할 수있는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="799cb22abf53ac18f7e35a78926152d8f3c3520d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;Event Emitter&lt;/a&gt;. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; 의 모듈은입니다 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;이벤트 이미 터&lt;/a&gt; . 메인 프로세스에서 사용하면 렌더러 프로세스 (웹 페이지)에서 보낸 비동기 및 동기 메시지를 처리합니다. 렌더러에서 보낸 메시지는이 모듈로 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="b7799500275679df5ddea761fe0657908f30a1ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; 의 모듈의 인스턴스 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter의&lt;/a&gt; 클래스입니다. 기본 프로세스에서 사용되면 렌더러 프로세스 (웹 페이지)에서 보낸 비동기 및 동기 메시지를 처리합니다. 렌더러에서 보낸 메시지는이 모듈로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="8265e24d240bfe6a3dfe63b6b278908fe5d9519a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module has the following method to listen for events and send messages:</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; 의 모듈은 이벤트 및 전송 메시지를 수신하려면 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6a04ee93438711fecc8dc44f744c3e356c0065bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; 의 모듈은이다 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; . 렌더링 프로세스 (웹 페이지)에서 기본 프로세스로 동기 및 비동기 메시지를 보낼 수 있도록 몇 가지 메서드를 제공합니다. 메인 프로세스에서 답변을받을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c51c2ec9e808b95e61dd514549310ac0facf95f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; 의 모듈의 인스턴스 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter의&lt;/a&gt; 클래스입니다. 렌더링 프로세스 (웹 페이지)에서 기본 프로세스로 동기 및 비동기 메시지를 보낼 수있는 몇 가지 방법을 제공합니다. 기본 프로세스에서 회신을받을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="300264d1e0671551832d554597a0bc97a0d28e8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; values are optional when using a &lt;code&gt;role&lt;/code&gt; and will default to appropriate values for each platform.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; 및 &lt;code&gt;accelerator&lt;/code&gt; 사용하는 경우 값은 선택 사항 &lt;code&gt;role&lt;/code&gt; 하고 각 플랫폼에 대한 값을 적절한 기본값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="af38248cb8f69543f813cdf21b3e807251021ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;landscape&lt;/code&gt; will be ignored if &lt;code&gt;@page&lt;/code&gt; CSS at-rule is used in the web page.</source>
          <target state="translated">&lt;code&gt;landscape&lt;/code&gt; 경우 무시됩니다 &lt;code&gt;@page&lt;/code&gt; 에서 규칙 CSS는 웹 페이지에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dbf959665216876f492e4618b1a0129bb27d0817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; just before a request is going to be sent to the server, modifications of previous &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; response are visible by the time this listener is fired.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 는 요청이 서버로 전송되기 직전에 &lt;code&gt;listener(details)&lt;/code&gt; 와 함께 호출되며, 이 리스너 가 실행될 때 까지 이전 &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; 응답의 수정 사항 이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9215c04064a4ed2450d3abb28463a9e692fda80d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a request is completed.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 요청이 완료 될 때.</target>
        </trans-unit>
        <trans-unit id="5518520eb40cc63810d6c31a0f90284102462216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a server initiated redirect is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 서버 시작 리디렉션에 대한 발생할 때.</target>
        </trans-unit>
        <trans-unit id="be75ee692d0f3eca2c167129b260d4ce5a1fe1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when an error occurs.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 오류가 발생할 때.</target>
        </trans-unit>
        <trans-unit id="f164f04e3efe8be2764610b61e71394fe5d505d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 로 호출 될 &lt;code&gt;listener(details)&lt;/code&gt; 응답 본문의 첫 번째 바이트가 수신 될 때. HTTP 요청의 경우 상태 표시 줄과 응답 헤더를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba486b1778a17fa02402e64a5245797eeb7c813d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 요청 헤더가 가능하면, HTTP 요청을 보내기 전에. 이것은 TCP 연결이 서버에 연결되고 HTTP 데이터가 전송되기 전에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c0db93f48b5d14a434faf475fdbe51cc74f2ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when HTTP response headers of a request have been received.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 때 HTTP 요청의 응답 헤더가 수신되었다.</target>
        </trans-unit>
        <trans-unit id="c9f8325f73304e0b2fc67501df6524daf1b7ae9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when a request is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 요청에 대해 발생하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="40e21ff6cd4033f75abd16fef09a34ef9cbb8db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main.js&lt;/code&gt; should create windows and handle all the system events your application might encounter. A more complete version of the above example might open developer tools, handle the window being closed, or re-create windows on macOS if the user clicks on the app's icon in the dock.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; 는 창을 만들고 응용 프로그램에서 발생할 수있는 모든 시스템 이벤트를 처리해야합니다. 위 예제의보다 완전한 버전은 개발자 도구를 열거 나, 닫힌 창을 처리하거나, 사용자가 도크에서 앱 아이콘을 클릭하면 macOS에서 창을 다시 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e156f3425bc64cf234216f3a4ad15f1262e55180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch is versionless; only stabilization branches contain version information</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 분기 버전 숫자이다; 안정화 지점에만 버전 정보가 포함됩니다</target>
        </trans-unit>
        <trans-unit id="cd69d2937edbb31950318c4602ffe9667bf7641d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain &lt;code&gt;0.0.0-dev&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 지점은 항상 포함됩니다 &lt;code&gt;0.0.0-dev&lt;/code&gt; 에 자사의 &lt;code&gt;package.json&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="c58ca172263a9ff47ab2ca4db3374a477fed359e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain the next major version &lt;code&gt;X.0.0-nightly.DATE&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 지점은 항상 다음 주요 버전이 포함됩니다 &lt;code&gt;X.0.0-nightly.DATE&lt;/code&gt; 의에서 &lt;code&gt;package.json&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="6d44a4be769d34f100f7fffaa317dd46cca03d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="92922bc283ff2b5f563f918d93e631fae8ea780e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; 객체는 다음 인스턴스 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="f6d9d983763e23320f63c15ebadcfd58353d5512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument is not used, as the OS provides its own confirmation dialog.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 는 OS 자체 확인 대화 상자를 제공하기 때문에 인수는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d8e2ef655fd474b07350ac6c7ca3a95b52fd785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeImage&lt;/code&gt; module has the following methods, all of which return an instance of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;nativeImage&lt;/code&gt; 의 모듈의 인스턴스 반환 모두 다음과 같은 방법이 있습니다 &lt;code&gt;NativeImage&lt;/code&gt; 의 클래스를 :</target>
        </trans-unit>
        <trans-unit id="d117d6c5dc5242c11b954105c113bc00b0c70f40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeTheme&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;nativeTheme&lt;/code&gt; 의 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="2503c6959b3d7fb7c46971f6afde6e5dab68c82d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeTheme&lt;/code&gt; module has the following properties:</source>
          <target state="translated">&lt;code&gt;nativeTheme&lt;/code&gt; 의 모듈은 다음과 같은 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="8a8f247e521de82779087b97aca5bc14a37f22c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigator.onLine&lt;/code&gt; attribute returns:</source>
          <target state="translated">&lt;code&gt;navigator.onLine&lt;/code&gt; 의 속성을 반환 :</target>
        </trans-unit>
        <trans-unit id="a528025aee2b6d56eef29e9a2494554d6c37e589" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; API can be used only after the application emits the &lt;code&gt;ready&lt;/code&gt; event. Trying to use the module before the &lt;code&gt;ready&lt;/code&gt; event will throw an error.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 응용 프로그램이 방출 후에 만 API를 사용할 수 있습니다 &lt;code&gt;ready&lt;/code&gt; 이벤트를. &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 모듈을 사용하려고 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10e9fc6061228c1537b0f0d93df762eb2393612c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈 API는 특히 모방, 가깝게 가능한, 친숙한 Node.js를 API에 대한 설계되었습니다. 클래스, 메서드, 속성 및 이벤트 이름을 포함한 API 구성 요소는 Node.js에서 일반적으로 사용되는 것과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="e4e31f2daa5204b7f21cf12768d4fdc274b416c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b747748bc902166a3602c80be0b1f6495180c577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module is a client-side API for issuing HTTP(S) requests. It is similar to the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js but uses Chromium's native networking library instead of the Node.js implementation, offering better support for web proxies.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈은 HTTP (S) 요청을 발행 클라이언트 측 API이다. Node.js 의 &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; 및 &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; 모듈 과 유사 하지만 Node.js 구현 대신 Chromium의 기본 네트워킹 라이브러리를 사용하여 웹 프록시를보다 잘 지원합니다.</target>
        </trans-unit>
        <trans-unit id="cb922a08b94d3505f969ca109b706e874110a130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; can be used independent of &lt;code&gt;nodeIntegration&lt;/code&gt;, but &lt;code&gt;sandbox&lt;/code&gt; must not be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; 는 의 사용 독립적 일 수있다 &lt;code&gt;nodeIntegration&lt;/code&gt; 있지만, &lt;code&gt;sandbox&lt;/code&gt; 로 설정해서는 안 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c47a049c4a4dae52e5e376f202bbf8e2c90ea416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plist&lt;/code&gt; file referenced here needs the following macOS-specific entitlements to assure the Apple security mechanisms that your app is doing these things without meaning any harm:</source>
          <target state="translated">여기에 참조 된 &lt;code&gt;plist&lt;/code&gt; 파일은 Apple 보안 메커니즘에서 앱이 아무런 해를 끼치 지 않고 이러한 작업을 수행하고 있음을 보장하기 위해 다음과 같은 macOS 관련 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b6581436836cfa57252c1cca1308513606ec18ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; attribute of &lt;code&gt;MenuItem&lt;/code&gt; has the form &lt;code&gt;[placement]=[id]&lt;/code&gt;, where &lt;code&gt;placement&lt;/code&gt; is one of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, or &lt;code&gt;endof&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is the unique ID of an existing item in the menu:</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 의 속성 &lt;code&gt;MenuItem&lt;/code&gt; 형태 갖는다 &lt;code&gt;[placement]=[id]&lt;/code&gt; , &lt;code&gt;placement&lt;/code&gt; 중 하나 &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; 또는 &lt;code&gt;endof&lt;/code&gt; 와 &lt;code&gt;id&lt;/code&gt; 메뉴의 기존 항목의 고유 ID이다 :</target>
        </trans-unit>
        <trans-unit id="35cc56a47175cc5030b31c1cf856950911375160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is only available on Windows, and it is (0, 0) by default.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 윈도우에서만 사용할 수 있습니다, 그것은 기본적으로 (0, 0)입니다.</target>
        </trans-unit>
        <trans-unit id="6b0d3989f4c443dde3dd1eab4ce1bf29d8645057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;powerMonitor&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="018a688e37f639c9e3bb1353e6652d6c722bb8b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;powerMonitor&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d1d8528431e6e2308391f888af7a45db060216b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerSaveBlocker&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;powerSaveBlocker&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="358dd2d79dff7a34bd03fa85e1fe7c4751948f15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare-release&lt;/code&gt; script will trigger the builds via API calls. To monitor the build progress, see the following pages:</source>
          <target state="translated">&lt;code&gt;prepare-release&lt;/code&gt; 가 트리거 스크립트 API의 호출을 통해 구축합니다. 빌드 진행 상황을 모니터링하려면 다음 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bb25017d09d12310bf78c3b0b503ec32d098fa15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e0b2e6e59ddf7a1cdc951ec5bbde5679ce338514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object in the main process. This is the same as &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; but is cached.</source>
          <target state="translated">기본 프로세스 의 &lt;code&gt;process&lt;/code&gt; 오브젝트 이것은 &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; 와 동일 하지만 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="c114dda8df33944bf9644233ca4e48b6741e79dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4f260ad95c2c467078099895f94289821e51b3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that accepts an array of individual words for spellchecking. The &lt;code&gt;spellCheck&lt;/code&gt; function runs asynchronously and calls the &lt;code&gt;callback&lt;/code&gt; function with an array of misspelt words when complete.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 갖는 객체 여야 &lt;code&gt;spellCheck&lt;/code&gt; 맞춤법 검사 개별 단어의 배열이 허용 방법. &lt;code&gt;spellCheck&lt;/code&gt; 기능은 비동기 적으로 실행하고 호출하는 &lt;code&gt;callback&lt;/code&gt; 완전한 철자가 틀린 단어의 배열과 기능을.</target>
        </trans-unit>
        <trans-unit id="dd616142c9b1da65c3cad2b3338fafedd2935f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that returns whether the word passed is correctly spelled.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 가진 개체 수 있어야 &lt;code&gt;spellCheck&lt;/code&gt; 전달 된 단어가 올바르게 입력 반환 여부 것이 방법.</target>
        </trans-unit>
        <trans-unit id="1fd33f21d8a009f756ed1aac013d5fd3de5b45b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyBypassRules&lt;/code&gt; is a comma separated list of rules described below:</source>
          <target state="translated">&lt;code&gt;proxyBypassRules&lt;/code&gt; 는 콤마 규칙 목록 후술 분리 :</target>
        </trans-unit>
        <trans-unit id="58404a68412b49fd1cbbe75d295d8fc17f95948c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyRules&lt;/code&gt; has to follow the rules below:</source>
          <target state="translated">&lt;code&gt;proxyRules&lt;/code&gt; 는 아래의 규칙을 따라야한다 :</target>
        </trans-unit>
        <trans-unit id="84bbd26f2ff6ec1962ac441f908309e1bc7a83db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈은 다음과 같은 방법이있다 :</target>
        </trans-unit>
        <trans-unit id="e41580922fb964cced10e3c2cbc3ffe20631bb9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module is deprecated in Electron 12, and will be removed in Electron 14. It is replaced by the &lt;a href=&quot;https://github.com/electron/remote&quot;&gt;&lt;code&gt;@electron/remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈은 전자 (12)에 사용되지 않고, 그것은 교체되는 전자 (14)에서 제거한다 &lt;a href=&quot;https://github.com/electron/remote&quot;&gt; &lt;code&gt;@electron/remote&lt;/code&gt; &lt;/a&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="1298a808b09704a87ed114a571e897e21d45a884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈 렌더링 처리 (웹 페이지)와 메인 프로세스 간의 프로세스 간 통신 (IPC)을 수행 할 수있는 간단한 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="ac7cd5aa12f3dee0c0a6677217d780d040d2a73f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a way for the renderer processes to access APIs normally only available in the main process. Using it, a renderer can invoke methods of a main process object without explicitly sending inter-process messages. If your desktop application does not run untrusted content, this can be a useful way to have your renderer processes access and work with modules that are only available to the main process, such as GUI-related modules (dialogs, menus, etc.).</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈은 상기 메인 프로세스에서 일반적으로 만 이용 가능한 액세스 API에 대한 묘화 처리를위한 방법을 제공한다. 이를 사용하여 렌더러는 프로세스 간 메시지를 명시 적으로 보내지 않고도 기본 프로세스 개체의 메서드를 호출 할 수 있습니다. 데스크톱 애플리케이션이 신뢰할 수없는 콘텐츠를 실행하지 않는 경우 이는 렌더러 프로세스가 GUI 관련 모듈 (대화 상자, 메뉴 등)과 같은 기본 프로세스에서만 사용할 수있는 모듈에 액세스하고 작업하도록하는 유용한 방법이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46d7df063ac5a3584ba0b77532f9778df1196547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repl&lt;/code&gt; module provides a REPL implementation that can be accessed using:</source>
          <target state="translated">&lt;code&gt;repl&lt;/code&gt; 모듈을 사용하여 액세스 할 수있는 REPL 구현을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="e36ba45cd5d963c9a70566790479735504ca487a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;role&lt;/code&gt; property can have following values:</source>
          <target state="translated">&lt;code&gt;role&lt;/code&gt; 속성은 다음 값을 가질 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="7c6608156889a4fa5318ff0313d856b3b6dc07c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="dc991c240048cdabdab92374361368ae85195ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f75efb08cf49a24614344cd2517a2a9ccaeedba9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session.clearAuthCache&lt;/code&gt; API no longer accepts options for what to clear, and instead unconditionally clears the whole cache.</source>
          <target state="translated">&lt;code&gt;session.clearAuthCache&lt;/code&gt; 의 API는 더 이상 취소 할 작업에 대한 옵션을지지 않습니다, 대신 무조건 전체 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="bbeb11871421b95c101bb5d6fb82d63e08970826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module can be used to create new &lt;code&gt;Session&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 새로운 만들 수 있습니다 &lt;code&gt;Session&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3481326c81f1d35bcca80a22390f482c4aebc224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="539734ec469f572dbdf5e703b654a370f3a5f521" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following properties:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 다음과 같은 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2d4b3fa4af0de9852c880c003eab6161d3256bb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell.openItem&lt;/code&gt; API has been replaced with an asynchronous &lt;code&gt;shell.openPath&lt;/code&gt; API. You can see the original API proposal and reasoning &lt;a href=&quot;https://github.com/electron/governance/blob/master/wg-api/spec-documents/shell-openitem.md&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shell.openItem&lt;/code&gt; 의 API는 비동기로 대체되었습니다 &lt;code&gt;shell.openPath&lt;/code&gt; 의 API. &lt;a href=&quot;https://github.com/electron/governance/blob/master/wg-api/spec-documents/shell-openitem.md&quot;&gt;여기&lt;/a&gt; 에서 원래 API 제안 및 이유를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2d0b0b61e564f6da294fad88765bd81248d6c52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d03d8fed6535206b4075d9c69e2a5ea3da4d9cde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module provides functions related to desktop integration.</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; 모듈은 데스크탑 통합 관련 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9cf4825424713a277e91b4fc7eef81650d07f90e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spellCheck&lt;/code&gt; callback is now asynchronous, and &lt;code&gt;autoCorrectWord&lt;/code&gt; parameter has been removed.</source>
          <target state="translated">&lt;code&gt;spellCheck&lt;/code&gt; 콜백은 이제 비동기식이며, &lt;code&gt;autoCorrectWord&lt;/code&gt; 의 매개 변수가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="302311f6e8c7212f24d35cc403438b58e3fd818e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; attribute can also accept data URLs, such as &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 속성은 또한 다음과 같은 데이터 URL을 받아 들일 수 &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c038f24be666c6c8decc27728f86fa426f53c877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; can be one of following:</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 다음 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9b3563ff6b4bb91671c2c2f2985fa055d8348c11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemPreferences&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;systemPreferences&lt;/code&gt; 는 다음과 같은 이벤트를 방출 개체 :</target>
        </trans-unit>
        <trans-unit id="50fe0225c880579bccc99b1e28f378d94787ba86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;textured&lt;/code&gt; type adds metal gradient appearance (&lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;textured&lt;/code&gt; 형 금속 그라데이션 모양 (추가 &lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="7b25b6845ab82b27b3b563e55d9147070d03adbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updated&lt;/code&gt; event will be emitted</source>
          <target state="translated">&lt;code&gt;updated&lt;/code&gt; 이벤트가 방출됩니다</target>
        </trans-unit>
        <trans-unit id="80683066099d2b02bb828424b5205a6d8c073610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uploadData&lt;/code&gt; is an array of &lt;code&gt;UploadData&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;uploadData&lt;/code&gt; 는 배열이다 &lt;code&gt;UploadData&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="dccd2aa264a7a22e9e34024147d6e051dda98a5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; can be a remote address (e.g. &lt;code&gt;http://&lt;/code&gt;) or a path to a local HTML file using the &lt;code&gt;file://&lt;/code&gt; protocol.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 원격 주소 (예, 할 수 있습니다 &lt;code&gt;http://&lt;/code&gt; 또는 사용하여 로컬 HTML 파일의 경로) &lt;code&gt;file://&lt;/code&gt; 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="a5d42dc1f925cb0dd172848fbd14de0098b1958c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; corresponds to the navigation entry requesting the client certificate and &lt;code&gt;callback&lt;/code&gt; can be called with an entry filtered from the list. Using &lt;code&gt;event.preventDefault()&lt;/code&gt; prevents the application from using the first certificate from the store.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 클라이언트 인증서 및 요청 탐색 항목에 해당 &lt;code&gt;callback&lt;/code&gt; 목록에서 필터링 항목으로 호출 할 수 있습니다. 사용 &lt;code&gt;event.preventDefault()&lt;/code&gt; 가게에서 첫 번째 인증서를 사용에서 응용 프로그램을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ead3e68794e45920d2721fa26bd426ca485a37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webFrame&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;webFrame&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bcb530a7a6f3742954bf1ecb74ebb1dbb3cb595f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webkitdirectory&lt;/code&gt; property on HTML file inputs allows them to select folders. Previous versions of Electron had an incorrect implementation where the &lt;code&gt;event.target.files&lt;/code&gt; of the input returned a &lt;code&gt;FileList&lt;/code&gt; that returned one &lt;code&gt;File&lt;/code&gt; corresponding to the selected folder.</source>
          <target state="translated">HTML 파일 입력 의 &lt;code&gt;webkitdirectory&lt;/code&gt; 속성을 사용하면 폴더를 선택할 수 있습니다. Electron의 이전 버전 에서는 입력 의 &lt;code&gt;event.target.files&lt;/code&gt; 가 선택한 폴더에 해당하는 하나의 &lt;code&gt;File&lt;/code&gt; 을 반환 하는 &lt;code&gt;FileList&lt;/code&gt; 를 반환 하는 잘못된 구현이있었습니다 .</target>
        </trans-unit>
        <trans-unit id="70bbea7daceb37cfdc1db49b4bc8447c74d9d422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following attributes:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그의 속성은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="65a6f3875f9cda232f4f5eb3c5363c8e2778dfce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following methods:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="32e6c35353f89ebf1e8c8929c59dafe0b5c55dc9" translate="yes" xml:space="preserve">
          <source>The API components (including classes, methods, properties and event names) are similar to those used in Node.js.</source>
          <target state="translated">API 구성 요소 (클래스, 메서드, 속성 및 이벤트 이름 포함)는 Node.js에서 사용되는 구성 요소와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="0a7eb9f238397f1aa98cdc508b599a5e9be67999" translate="yes" xml:space="preserve">
          <source>The API is based on the &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium permissions API&lt;/a&gt; and implements the same types of permissions.</source>
          <target state="translated">API는 &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium 권한 API를&lt;/a&gt; 기반으로 하며 동일한 유형의 권한을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="bf3b1592ea369c6aee1bcc228913fb6a081059b1" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).</source>
          <target state="translated">API는 세션의 &lt;code&gt;will-download&lt;/code&gt; 콜백 기능 에서만 사용할 수 있습니다 . 사용자가 API를 통해 저장 경로를 설정하지 않으면 Electron은 원래 루틴을 사용하여 저장 경로를 결정합니다 (보통 저장 대화 상자를 표시합니다).</target>
        </trans-unit>
        <trans-unit id="51b160a8a181f0a625c24b9264c033a6defad374" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path; this usually prompts a save dialog.</source>
          <target state="translated">API는 세션의 &lt;code&gt;will-download&lt;/code&gt; 콜백 함수 에서만 사용할 수 있습니다 . 사용자가 API를 통해 저장 경로를 설정하지 않으면 Electron은 원래 루틴을 사용하여 저장 경로를 결정합니다. 일반적으로 저장 대화 상자가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="40f88bf58044cef461f121204888beb8a42acae7" translate="yes" xml:space="preserve">
          <source>The API is stable enough and hasn't been heavily impacted by Chromium upgrades</source>
          <target state="translated">API는 충분히 안정적이며 Chromium 업그레이드의 영향을 크게받지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="5c098cc4ca7b56b4cf0ed6b18ec7ce38c3b5c4ee" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and &lt;code&gt;LSCopyDefaultHandlerForURLScheme&lt;/code&gt; internally.</source>
          <target state="translated">API는 Windows 레지스트리 및 &lt;code&gt;LSCopyDefaultHandlerForURLScheme&lt;/code&gt; 을 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5115a3dd44401c8431877c98d697deb529a51250" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and &lt;code&gt;LSSetDefaultHandlerForURLScheme&lt;/code&gt; internally.</source>
          <target state="translated">API는 내부적으로 Windows 레지스트리 및 &lt;code&gt;LSSetDefaultHandlerForURLScheme&lt;/code&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="75917ee7ddf41b2b07e7b99872a198b129538a14" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.</source>
          <target state="translated">API는 Windows 레지스트리 및 LSCopyDefaultHandlerForURLScheme을 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3ec55df529521dd3ab286f51777a4f69e7c047b5" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSSetDefaultHandlerForURLScheme internally.</source>
          <target state="translated">API는 Windows 레지스트리 및 LSSetDefaultHandlerForURLScheme을 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dad7a01b42ce324fa758f1641cab7f67c1cb6a36" translate="yes" xml:space="preserve">
          <source>The APIs are now synchronous and the optional callback is no longer needed.</source>
          <target state="translated">이제 API가 동기식이며 선택적 콜백이 더 이상 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6bcad7f559199b16f00560b8d1f569927742f9ea" translate="yes" xml:space="preserve">
          <source>The ASAR format was created primarily to improve performance on Windows... TODO</source>
          <target state="translated">ASAR 형식은 주로 Windows의 성능을 향상시키기 위해 만들어졌습니다 ... TODO</target>
        </trans-unit>
        <trans-unit id="679cc05bca3e1e8fd7b8d049e0a3d3d37f22503c" translate="yes" xml:space="preserve">
          <source>The C Run-time Library (CRT) is the part of the C++ Standard Library that incorporates the ISO C99 standard library. The Visual C++ libraries that implement the CRT support native code development, and both mixed native and managed code, and pure managed code for .NET development.</source>
          <target state="translated">CRT (C 런타임 라이브러리)는 ISO C99 표준 라이브러리를 통합하는 C ++ 표준 라이브러리의 일부입니다. CRT를 구현하는 Visual C ++ 라이브러리는 네이티브 코드 개발, 혼합 네이티브 및 관리 코드, .NET 개발을위한 순수 관리 코드를 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a6ab9ef9b58e1d430a986bb1158e6a2dd7ba3b55" translate="yes" xml:space="preserve">
          <source>The C++ code uses a lot of Chromium's abstractions and types, so it's recommended to get acquainted with them. A good place to start is Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;Important Abstractions and Data Structures&lt;/a&gt; document. The document mentions some special types, scoped types (that automatically release their memory when going out of scope), logging mechanisms etc.</source>
          <target state="translated">C ++ 코드는 많은 Chromium의 추상화와 유형을 사용하므로 이에 익숙해지는 것이 좋습니다. 시작하기에 좋은 곳은 Chromium의 &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;중요 추상화 및 데이터 구조&lt;/a&gt; 문서입니다. 이 문서에는 일부 특수 유형, 범위 유형 (범위를 벗어날 때 자동으로 메모리를 해제), 로깅 메커니즘 등이 언급되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d900f892d2734b5afc607fbf947c8bb0f3c75b5" translate="yes" xml:space="preserve">
          <source>The Chrome version of Electron is usually bumped within one or two weeks after a new stable Chrome version gets released. This estimate is not guaranteed and depends on the amount of work involved with upgrading.</source>
          <target state="translated">Chrome 버전의 Electron은 일반적으로 안정적인 새 Chrome 버전이 출시 된 후 1-2 주 내에 충돌합니다. 이 추정치는 보장되지 않으며 업그레이드와 관련된 작업량에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="11af2b2cbe42d313dcc02c8ba66bab4ba1e5ac86" translate="yes" xml:space="preserve">
          <source>The DOM's File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a &lt;code&gt;path&lt;/code&gt; attribute to the &lt;code&gt;File&lt;/code&gt; interface which exposes the file's real path on filesystem.</source>
          <target state="translated">DOM의 파일 인터페이스는 사용자가 HTML5 파일 API를 사용하여 기본 파일을 직접 작업 할 수 있도록 기본 파일에 대한 추상화를 제공합니다. Electron은 파일 시스템에 파일의 실제 경로를 표시 하는 &lt;code&gt;path&lt;/code&gt; 속성을 &lt;code&gt;File&lt;/code&gt; 인터페이스에 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="67424874b1092e40e703a68f4543158d74245d8a" translate="yes" xml:space="preserve">
          <source>The DevTools in an Electron browser window can only debug JavaScript that's executed in that window (i.e. the web pages). To debug JavaScript that's executed in the main process you will need to use an external debugger and launch Electron with the &lt;code&gt;--inspect&lt;/code&gt; or &lt;code&gt;--inspect-brk&lt;/code&gt; switch.</source>
          <target state="translated">Electron 브라우저 창의 DevTools는 해당 창에서 실행되는 JavaScript (예 : 웹 페이지) 만 디버깅 할 수 있습니다. 기본 프로세스에서 실행되는 JavaScript를 디버깅하려면 외부 디버거를 사용하고 &lt;code&gt;--inspect&lt;/code&gt; 또는 &lt;code&gt;--inspect-brk&lt;/code&gt; 스위치 를 사용하여 Electron을 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c7697146094d0f2f337708d521985c083814a05c" translate="yes" xml:space="preserve">
          <source>The Dialog is opened from Electron's main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:</source>
          <target state="translated">대화 상자는 Electron의 메인 스레드에서 열립니다. 렌더러 프로세스에서 대화 상자 객체를 사용하려면 원격을 사용하여 대화 상자 객체에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="3408643c2b39f150bb6c8426902e0f24c6f93f45" translate="yes" xml:space="preserve">
          <source>The Electron account's credentials are kept by GitHub. &quot;Electron - NPM&quot; for the URL &quot;&lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt;.</source>
          <target state="translated">Electron 계정의 자격 증명은 GitHub에 의해 유지됩니다. URL의 - &quot;전자 NPM&quot; &quot; &lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e683e1d7d3da98dfd59ff9337dfba925c2851a8b" translate="yes" xml:space="preserve">
          <source>The Electron repository has a few vendored dependencies, found in the &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/vendor&lt;/a&gt; directory. Occasionally you might see a message like this when running &lt;code&gt;git status&lt;/code&gt;:</source>
          <target state="translated">Electron 저장소에는 &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/ vendor&lt;/a&gt; 디렉토리 에있는 몇 가지 벤더 종속성이 있습니다. 때때로 &lt;code&gt;git status&lt;/code&gt; 를 실행할 때 다음과 같은 메시지가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6354d5e0e93457bb2a04beef89309ebc33ebfece" translate="yes" xml:space="preserve">
          <source>The Electron team is currently undergoing an initiative to convert separate getter and setter functions in Electron to bespoke properties with &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; functionality. During this transition period, both the new properties and old getters and setters of these functions will work correctly and be documented.</source>
          <target state="translated">전자 팀은 현재와 속성을 예약했다하는 전자에 별도의 getter 및 setter 기능을 변환하는 이니셔티브를 겪고 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 기능을. 이 전환 기간 동안 이러한 함수의 새 속성과 이전 getter 및 setter가 모두 올바르게 작동하고 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="c8ee1fed84e2328fcf79564c55b383149ef82c2a" translate="yes" xml:space="preserve">
          <source>The Electron team is currently undergoing an initiative to modernize our API in a few concrete ways. These include: updating our modules to use idiomatic JS properties instead of separate &lt;code&gt;getPropertyX&lt;/code&gt; and &lt;code&gt;setpropertyX&lt;/code&gt;, converting callbacks to promises, and removing some other anti-patterns present in our APIs. The current status of the Promise initiative can be tracked in the &lt;a href=&quot;api/modernization/promisification&quot;&gt;promisification&lt;/a&gt; tracking file.</source>
          <target state="translated">Electron 팀은 현재 몇 가지 구체적인 방법으로 API를 현대화하기위한 이니셔티브를 진행하고 있습니다. 여기에는 별도의 &lt;code&gt;getPropertyX&lt;/code&gt; 및 &lt;code&gt;setpropertyX&lt;/code&gt; 대신 관용적 인 JS 속성을 사용하도록 모듈 업데이트 , 콜백을 promise로 변환, API에있는 다른 안티 패턴 제거 등이 포함됩니다. 약속 이니셔티브의 현재 상태는에 추적 할 수 있습니다 &lt;a href=&quot;api/modernization/promisification&quot;&gt;promisification의&lt;/a&gt; 추적 파일.</target>
        </trans-unit>
        <trans-unit id="4fd18c9facfb49d25f46c4259f16160145216b5e" translate="yes" xml:space="preserve">
          <source>The Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">Electron 팀 은 Electron 앱이 자체 업데이트에 사용할 수있는 무료 오픈 소스 웹 서비스 인 &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org를&lt;/a&gt; 유지 합니다. 이 서비스는 다음 기준을 충족하는 Electron 앱을 위해 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="75df304c6d85071f04c99bd13602848b2000bb4b" translate="yes" xml:space="preserve">
          <source>The Electron team recently underwent an initiative to convert callback-based APIs to Promise-based ones. See converted functions below:</source>
          <target state="translated">Electron 팀은 최근 콜백 기반 API를 Promise 기반 API로 변환하는 이니셔티브를 수행했습니다. 아래에서 변환 된 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="57b487e5d6191dabefc2fe5517600847519d1b93" translate="yes" xml:space="preserve">
          <source>The Main process &lt;strong&gt;creates&lt;/strong&gt; web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its Renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding Renderer process gets terminated as well.</source>
          <target state="translated">메인 프로세스가 &lt;strong&gt;생성&lt;/strong&gt; 생성하여 웹 페이지를 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 인스턴스. 각 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스는 Renderer 프로세스에서 웹 페이지를 실행합니다. 때 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 인스턴스가 파괴되고, 해당 렌더러 프로세스가 아니라 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="bea52e762d5084bb4360d97a51bf839a688f6226" translate="yes" xml:space="preserve">
          <source>The Main process &lt;strong&gt;manages&lt;/strong&gt; all web pages and their corresponding Renderer processes.</source>
          <target state="translated">메인 프로세스 &lt;strong&gt;는&lt;/strong&gt; 모든 웹 페이지와 해당 렌더러 프로세스를 &lt;strong&gt;관리&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="88820826bbbc3baa83a6828e19bc35fd6b3eb2e9" translate="yes" xml:space="preserve">
          <source>The Python version we are using now is Python 2.7.</source>
          <target state="translated">현재 사용중인 Python 버전은 Python 2.7입니다.</target>
        </trans-unit>
        <trans-unit id="aa4702936a4a6e6cb17b855e5fbdefc72c8b85f7" translate="yes" xml:space="preserve">
          <source>The Renderer process &lt;strong&gt;communicates&lt;/strong&gt; with the Main process via IPC to perform GUI operations in a web page. Calling native GUI-related APIs from the Renderer process directly is restricted due to security concerns and potential resource leakage.</source>
          <target state="translated">Renderer 프로세스 는 웹 페이지에서 GUI 작업을 수행하기 위해 IPC를 통해 Main 프로세스와 &lt;strong&gt;통신&lt;/strong&gt; 합니다. Renderer 프로세스에서 직접 네이티브 GUI 관련 API를 호출하는 것은 보안 문제와 잠재적 인 리소스 유출로 인해 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="1059b3881721d5935a0e4d2972517ff6dc25c6eb" translate="yes" xml:space="preserve">
          <source>The Renderer process &lt;strong&gt;manages&lt;/strong&gt; only the corresponding web page. A crash in one Renderer process does not affect other Renderer processes.</source>
          <target state="translated">Renderer 프로세스 &lt;strong&gt;는&lt;/strong&gt; 해당 웹 페이지 만 &lt;strong&gt;관리&lt;/strong&gt; 합니다. 한 렌더러 프로세스의 충돌은 다른 렌더러 프로세스에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d29b6de8910a0a4758fa438d9f857027455146a" translate="yes" xml:space="preserve">
          <source>The SDK Debugging Tools must also be installed. If the Windows 10 SDK was installed via the Visual Studio installer, then they can be installed by going to: &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs and Features&lt;/code&gt; &amp;rarr; Select the &quot;Windows Software Development Kit&quot; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; Check &quot;Debugging Tools For Windows&quot; &amp;rarr; &lt;code&gt;Change&lt;/code&gt;. Or, you can download the standalone SDK installer and use it to install the Debugging Tools.</source>
          <target state="translated">SDK 디버깅 도구도 설치해야합니다. Visual Studio 설치 관리자를 통해 Windows 10 SDK를 설치 한 경우 &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs&lt;/code&gt; &amp;rarr; &lt;code&gt;Programs and Features&lt;/code&gt; &amp;rarr; &quot;Windows 소프트웨어 개발 키트&quot;선택 &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &lt;code&gt;Change&lt;/code&gt; &amp;rarr; &quot;Windows 용 디버깅 도구 확인&quot; 으로 이동하여 설치할 수 있습니다. &quot;&amp;rarr; &lt;code&gt;Change&lt;/code&gt; . 또는 독립 실행 형 SDK 설치 프로그램을 다운로드하고이를 사용하여 디버깅 도구를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91f690d466597ab142abf88aeb48da2b29abd23b" translate="yes" xml:space="preserve">
          <source>The Unity DE also has a similar feature that allows you to specify the progress bar in the launcher.</source>
          <target state="translated">Unity DE에는 또한 런처에서 진행률 표시 줄을 지정할 수있는 유사한 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d37923186c114f05a55a85afbb9ce8bd82d595e5" translate="yes" xml:space="preserve">
          <source>The Windbg symbol path is configured with a string value delimited with asterisk characters. To use only the Electron symbol server, add the following entry to your symbol path (&lt;strong&gt;Note:&lt;/strong&gt; you can replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with any writable directory on your computer, if you'd prefer a different location for downloaded symbols):</source>
          <target state="translated">Windbg 심볼 경로는 별표 문자로 구분 된 문자열 값으로 구성됩니다. Electron 기호 서버 만 사용하려면 기호 경로에 다음 항목을 추가하십시오 ( &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;c:\code\symbols&lt;/code&gt; 를 컴퓨터의 쓰기 가능한 디렉토리로 대체 할 수 있습니다 ( 다운로드 한 기호의 다른 위치를 선호하는 경우)).</target>
        </trans-unit>
        <trans-unit id="11e20ac73f33051ef798fc830d5c811160f5dc31" translate="yes" xml:space="preserve">
          <source>The Windows 10 SDK, &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;downloadable here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있는 Windows 10 SDK</target>
        </trans-unit>
        <trans-unit id="7cc079ed02b172e5b91ab77afb9fa3fdabff8012" translate="yes" xml:space="preserve">
          <source>The above &quot;two major stables release lines&quot; condition must have been met</source>
          <target state="translated">위의 &quot;두 개의 주요 마구간 릴리스 라인&quot;조건이 충족되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d63aaf17dd0e9724fa33d001acc75d71aeadef14" translate="yes" xml:space="preserve">
          <source>The above configuration will download from URLs such as &lt;code&gt;https://npm.taobao.org/mirrors/electron/8.0.0/electron-v8.0.0-linux-x64.zip&lt;/code&gt;.</source>
          <target state="translated">위의 구성은 &lt;code&gt;https://npm.taobao.org/mirrors/electron/8.0.0/electron-v8.0.0-linux-x64.zip&lt;/code&gt; 과 같은 URL에서 다운로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2b1285d4772ecec63e27725c792888155a3349f" translate="yes" xml:space="preserve">
          <source>The above would only run spec modules matching &lt;code&gt;menu&lt;/code&gt;, which is useful for anyone who's working on tests that would otherwise be at the very end of the testing cycle.</source>
          <target state="translated">위의 내용은 spec 모듈 일치 &lt;code&gt;menu&lt;/code&gt; 만 실행 하며 테스트 사이클의 마지막에있는 테스트를 수행하는 모든 사람에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="030b11fbb6a274e36270a36b6fbb4da1aad725fc" translate="yes" xml:space="preserve">
          <source>The algorithm used to serialize objects sent over IPC (through &lt;code&gt;ipcRenderer.send&lt;/code&gt;, &lt;code&gt;ipcRenderer.sendSync&lt;/code&gt;, &lt;code&gt;WebContents.send&lt;/code&gt; and related methods) has been switched from a custom algorithm to V8's built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;Structured Clone Algorithm&lt;/a&gt;, the same algorithm used to serialize messages for &lt;code&gt;postMessage&lt;/code&gt;. This brings about a 2x performance improvement for large messages, but also brings some breaking changes in behavior.</source>
          <target state="translated">직렬화하는데 사용되는 알고리즘 (통해 IPC를 통해 전송 객체 &lt;code&gt;ipcRenderer.send&lt;/code&gt; , &lt;code&gt;ipcRenderer.sendSync&lt;/code&gt; , &lt;code&gt;WebContents.send&lt;/code&gt; 및 관련 방법)에 정의 된 알고리즘과 전환 된 V8의 내장 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;구조화 클론 알고리즘&lt;/a&gt; , 동일한 알고리즘에 대한 직렬화 메시지에 사용 &lt;code&gt;postMessage&lt;/code&gt; . 이는 대용량 메시지에 대해 2 배의 성능 향상을 가져 오지만 동작에 약간의 변화를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c625b7623672f8fd22e91c0510e4c7196a733295" translate="yes" xml:space="preserve">
          <source>The app will immediately be paused, since Electron sets the app's name on launch:</source>
          <target state="translated">Electron은 시작시 앱의 이름을 설정하므로 앱이 즉시 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="fb3a3538bbcaba9543e6108eb12d6e3226594901" translate="yes" xml:space="preserve">
          <source>The architecture of Pepper Flash plugin has to match Electron's one. On Windows, a common error is to use 32bit version of Flash plugin against 64bit version of Electron.</source>
          <target state="translated">Pepper Flash 플러그인의 아키텍처는 Electron의 아키텍처와 일치해야합니다. Windows에서 일반적인 오류는 64 비트 버전의 Electron에 대해 32 비트 버전의 Flash 플러그인을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a0371f8e990439f7a02a892607be6c6c1aa14ca1" translate="yes" xml:space="preserve">
          <source>The architecture of the module has to match Electron's architecture (ia32 or x64).</source>
          <target state="translated">모듈의 아키텍처는 Electron의 아키텍처 (ia32 또는 x64)와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f58f3f45afd47bdf977f9729c58d77c8908ea3c8" translate="yes" xml:space="preserve">
          <source>The archives can not be modified so all Node APIs that can modify files will not work with &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">아카이브를 수정할 수 없으므로 파일을 수정할 수있는 모든 노드 API가 &lt;code&gt;asar&lt;/code&gt; 아카이브에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d4a37e2b47a01abe64d028d6cfa847f05783c369" translate="yes" xml:space="preserve">
          <source>The arguments of an event follow the same rules as methods.</source>
          <target state="translated">이벤트의 인수는 메서드와 동일한 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="6d0ec88bd7c20a58431566e3b83f8a873e57290a" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/application-architecture#main-and-renderer-processes&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">기본 규칙은 모듈이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; 또는 저수준 시스템과 관련된 경우 기본 프로세스에서만 사용할 수 있어야한다는 것입니다. 이러한 모듈을 사용할 수 있으려면 &lt;a href=&quot;../tutorial/application-architecture#main-and-renderer-processes&quot;&gt;주 프로세스 대 렌더러 프로세스&lt;/a&gt; 스크립트 의 개념을 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="32a060018e068697b5647ac80282c2a9d09c40be" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">기본 규칙은 다음과 같습니다. 모듈이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; 또는 하위 시스템과 관련된 경우 기본 프로세스에서만 사용할 수 있습니다. 이러한 모듈을 사용하려면 &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;기본 프로세스 대 렌더러 프로세스&lt;/a&gt; 스크립트 의 개념을 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1618f341658aefec4a06b4d5414fd3542092b1df" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;tutorial/application-architecture#main-and-renderer-processes&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">기본 규칙은 모듈이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; 또는 저수준 시스템과 관련된 경우 기본 프로세스에서만 사용할 수 있어야한다는 것입니다. 이러한 모듈을 사용할 수 있으려면 &lt;a href=&quot;tutorial/application-architecture#main-and-renderer-processes&quot;&gt;기본 프로세스 대 렌더러 프로세스&lt;/a&gt; 스크립트 의 개념을 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ebdd3e402b9b0ecb9ed69476766e0f23e9710e04" translate="yes" xml:space="preserve">
          <source>The beta is considered &lt;em&gt;generally stable&lt;/em&gt; and it is published again as a non-beta under &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">베타는 &lt;em&gt;일반적으로 안정적인&lt;/em&gt; 것으로 간주되며 &lt;code&gt;2.0.0&lt;/code&gt; 이하에서 비 베타로 다시 게시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a40a3921de74217cab0e0ecf818211585ec95e3" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; to build Electron so there is no Xcode project generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 우리는 Electron을 빌드하기 위해 &lt;a href=&quot;https://ninja-build.org/&quot;&gt;닌자&lt;/a&gt; 를 사용 하고 있으므로 Xcode 프로젝트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e25ed6372fd4ca19b4760e84e58fbda285fd4119" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no Visual Studio project generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 우리는 Electron을 빌드하기 위해 &lt;code&gt;ninja&lt;/code&gt; 를 사용 하고 있으므로 Visual Studio 프로젝트는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c95202c1d36a2764e88f2ccd6ce4d585cf9750b7" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. You must have Python 2.7.x for the script to succeed. Downloading certain files can take a long time. Notice that we are using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no &lt;code&gt;Makefile&lt;/code&gt; generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 스크립트가 성공하려면 Python 2.7.x가 있어야합니다. 특정 파일을 다운로드하는 데 시간이 오래 걸릴 수 있습니다. &lt;code&gt;ninja&lt;/code&gt; 를 사용하여 Electron을 빌드하고 있으므로 &lt;code&gt;Makefile&lt;/code&gt; 이 생성 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="79d1572aa8488a3529ae6511d651a6a0d1000c3f" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Default&lt;/code&gt;:</source>
          <target state="translated">빌드 된 실행 파일은 &lt;code&gt;./out/Default&lt;/code&gt; 아래에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6cb2a27a970581ab7946cde065c0466ec6554b8" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Testing&lt;/code&gt;:</source>
          <target state="translated">빌드 된 실행 파일은 &lt;code&gt;./out/Testing&lt;/code&gt; 아래에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="598266361820f688cf675a07c0e9f387d0eecf4a" translate="yes" xml:space="preserve">
          <source>The built in spellchecker does not automatically detect what language a user is typing in. In order for the spell checker to correctly check their words you must call this API with an array of language codes. You can get the list of supported language codes with the &lt;code&gt;ses.availableSpellCheckerLanguages&lt;/code&gt; property.</source>
          <target state="translated">내장 된 맞춤법 검사기는 사용자가 입력하는 언어를 자동으로 감지하지 않습니다. 맞춤법 검사기가 단어를 올바르게 검사하려면 언어 코드 배열을 사용하여이 API를 호출해야합니다. &lt;code&gt;ses.availableSpellCheckerLanguages&lt;/code&gt; 속성을 사용하여 지원되는 언어 코드 목록을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87a6ded8f0d9ef25e412395b22c18a38e3309740" translate="yes" xml:space="preserve">
          <source>The built-in modules in the main process are added as getters in the &lt;code&gt;remote&lt;/code&gt; module, so you can use them directly like the &lt;code&gt;electron&lt;/code&gt; module.</source>
          <target state="translated">기본 프로세스의 내장 모듈은 &lt;code&gt;remote&lt;/code&gt; 모듈 에서 게터로 추가 되므로 &lt;code&gt;electron&lt;/code&gt; 모듈 처럼 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cacf868ee4dce7e4fc278f0df03ca45ef1cc5b24" translate="yes" xml:space="preserve">
          <source>The cache contains the version's official zip file as well as a checksum, stored as a text file. A typical cache might look like this:</source>
          <target state="translated">캐시에는 버전의 공식 zip 파일과 텍스트 파일로 저장된 체크섬이 포함되어 있습니다. 일반적인 캐시는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="25c501724978cd336dfcf0d55d363261c3ca0f35" translate="yes" xml:space="preserve">
          <source>The change is backwards API-compatible (deprecations are allowed)</source>
          <target state="translated">변경 사항은 하위 API와 호환됩니다 (지원 중단이 허용됨).</target>
        </trans-unit>
        <trans-unit id="f51a009848cb9c36003dd0ae212c94ec2fba5fde" translate="yes" xml:space="preserve">
          <source>The code above instructs the Renderer process to handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to the Main process.</source>
          <target state="translated">위의 코드는 렌더러 프로세스가 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트 를 처리 하고 정보를 Main 프로세스로 전달 하도록 지시합니다 .</target>
        </trans-unit>
        <trans-unit id="4635ce3be0aef8aff745b8c96e66bf18b41fb7aa" translate="yes" xml:space="preserve">
          <source>The command line switches have to be passed before the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module gets emitted, and the page that uses this plugin must have plugin enabled.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 발생 하기 전에 명령 행 스위치를 전달 해야하며이 플러그인을 사용하는 페이지에서 플러그인이 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="d447e4429cdae2957670a885b9867d736f88aecc" translate="yes" xml:space="preserve">
          <source>The commands should print the versions of Node.js and npm accordingly. If both commands succeeded, you are ready to install Electron.</source>
          <target state="translated">명령은 그에 따라 Node.js 및 npm 버전을 인쇄해야합니다. 두 명령이 모두 성공하면 Electron을 설치할 준비가 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="134fdd8b1623d6cfa9ec45c73d315385fd6f9c7c" translate="yes" xml:space="preserve">
          <source>The communication between processes is possible via Inter-Process Communication (IPC) modules: &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로세스 간 통신은 IPC (Inter-Process Communication) 모듈 인 &lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 를 통해 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="6a0c8db1c3a2dcd6c081237dbd68d97af27b04cd" translate="yes" xml:space="preserve">
          <source>The communication between processes is possible via Inter-Process Communication (IPC) modules: &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로세스 간 통신은 IPC (Inter-Process Communication) 모듈 인 &lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 를 통해 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="bb547774a63521a187ad3bb21ddd86419474ac03" translate="yes" xml:space="preserve">
          <source>The crash reporter will send the following data to the &lt;code&gt;submitURL&lt;/code&gt; as a &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;code&gt;POST&lt;/code&gt;:</source>
          <target state="translated">충돌 리포터는 다음 데이터를 &lt;code&gt;multipart/form-data&lt;/code&gt; &lt;code&gt;POST&lt;/code&gt; 로 &lt;code&gt;submitURL&lt;/code&gt; 에 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="0f40ef1f6e4ccf3e4bfe888ec95e68c123a4ab11" translate="yes" xml:space="preserve">
          <source>The creation of the &lt;code&gt;BrowserWindow&lt;/code&gt; is customizable via &lt;code&gt;WebContents&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event.</source>
          <target state="translated">의 창조 &lt;code&gt;BrowserWindow&lt;/code&gt; 을 통해 사용자 정의 할 수 있습니다 &lt;code&gt;WebContents&lt;/code&gt; 의 &lt;code&gt;new-window&lt;/code&gt; 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="a84166f19e3821524c95b826a488cfad4a943b88" translate="yes" xml:space="preserve">
          <source>The current absolute position of the mouse pointer.</source>
          <target state="translated">마우스 포인터의 현재 절대 위치</target>
        </trans-unit>
        <trans-unit id="ec3240c3c12bbda24aa64960666921821da1f01c" translate="yes" xml:space="preserve">
          <source>The custom dock is commonly used to add shortcuts to tasks the user wouldn't want to open the whole app window for.</source>
          <target state="translated">사용자 정의 도크는 일반적으로 사용자가 전체 앱 창을 열고 싶지 않은 작업에 바로 가기를 추가하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e8cb86baaffbfe782d928d94296401cd40b1132c" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications, to override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="translated">기본 동작은 모든 인증을 취소하는 것입니다.이를 무시하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 의 기본 동작을 방지 하고 자격 증명으로 &lt;code&gt;callback(username, password)&lt;/code&gt; 을 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="b75871fa9bfdbc54c35ad5db52ced97823eab23a" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications. To override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="translated">기본 동작은 모든 인증을 취소하는 것입니다. 이를 재정의하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 기본 동작을 방지 하고 자격 증명으로 &lt;code&gt;callback(username, password)&lt;/code&gt; 을 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="eed37c59390ece33f402535de65017db6959cb55" translate="yes" xml:space="preserve">
          <source>The default building configuration is targeted for major desktop Linux distributions. To build for a specific distribution or device, the following information may help you.</source>
          <target state="translated">기본 건물 구성은 주요 데스크탑 Linux 배포판을 대상으로합니다. 특정 배포판 또는 장치를 구축하려면 다음 정보가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d70e1d358ad0f6f5822d8584b47693307ddd66d0" translate="yes" xml:space="preserve">
          <source>The default value of the &lt;code&gt;compress&lt;/code&gt; option to &lt;code&gt;crashReporter.start&lt;/code&gt; has changed from &lt;code&gt;false&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. This means that crash dumps will be uploaded to the crash ingestion server with the &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; header, and the body will be compressed.</source>
          <target state="translated">&lt;code&gt;crashReporter.start&lt;/code&gt; 에 대한 &lt;code&gt;compress&lt;/code&gt; 옵션 의 기본값 이 &lt;code&gt;false&lt;/code&gt; 에서 &lt;code&gt;true&lt;/code&gt; 로 변경되었습니다 . 즉, 충돌 덤프가 &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; 헤더 와 함께 충돌 수집 서버에 업로드되고 본문이 압축됩니다.</target>
        </trans-unit>
        <trans-unit id="c2a2eceeee59372dc53789739aa9e07b4f690f5b" translate="yes" xml:space="preserve">
          <source>The deprecated synchronous &lt;code&gt;shell.moveItemToTrash()&lt;/code&gt; API has been removed. Use the asynchronous &lt;code&gt;shell.trashItem()&lt;/code&gt; instead.</source>
          <target state="translated">더 이상 사용되지 않는 동기 &lt;code&gt;shell.moveItemToTrash()&lt;/code&gt; API가 제거되었습니다. 대신 비동기 &lt;code&gt;shell.trashItem()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e56de9631ceaedb37dc1cf8d02773cabf4849f18" translate="yes" xml:space="preserve">
          <source>The description for &lt;code&gt;Function&lt;/code&gt; type arguments should make it clear how it may be called and list the types of the parameters that will be passed to it.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 유형 인수에 대한 설명은 호출 방법을 명확히하고 전달 될 매개 변수 유형을 나열해야합니다.</target>
        </trans-unit>
        <trans-unit id="331fb167956d5035ab3148b2b46a77bc82e1c23c" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is that &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick; otherwise the data might be changed or destroyed.</source>
          <target state="translated">차이 &lt;code&gt;getBitmap()&lt;/code&gt; 와 &lt;code&gt;toBitmap()&lt;/code&gt; 이다 &lt;code&gt;getBitmap()&lt;/code&gt; 는 현재 이벤트 루프 틱 즉시 반환 된 버퍼를 사용할 필요가 있으므로, 비트 맵 데이터를 복사하지 않습니다; 그렇지 않으면 데이터가 변경되거나 파괴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a836089b20b522142ba336af0ffba1b7ea6756df" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is, &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.</source>
          <target state="translated">차이 &lt;code&gt;getBitmap()&lt;/code&gt; 와 &lt;code&gt;toBitmap()&lt;/code&gt; 이다 &lt;code&gt;getBitmap()&lt;/code&gt; 당신이 현재의 이벤트 루프 틱 즉시 반환 된 버퍼를 사용할 필요가 있으므로, 그렇지 않으면 데이터가 변경되거나 파괴 될 수있는 비트 맵 데이터를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a2edfbf3dc565b0301254266e84fec30056bbd74" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to &lt;code&gt;handle&lt;/code&gt; callbacks can be found in the &lt;a href=&quot;api/structures/ipc-main-invoke-event&quot;&gt;&lt;code&gt;ipc-main-invoke-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">콜백 을 &lt;code&gt;handle&lt;/code&gt; 하기 위해 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;api/structures/ipc-main-invoke-event&quot;&gt; &lt;code&gt;ipc-main-invoke-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52c95c59a318bcc0a489e2e73af3fb45277888fc" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to &lt;code&gt;handle&lt;/code&gt; callbacks can be found in the &lt;a href=&quot;structures/ipc-main-invoke-event&quot;&gt;&lt;code&gt;ipc-main-invoke-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">콜백 을 &lt;code&gt;handle&lt;/code&gt; 하기 위해 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;structures/ipc-main-invoke-event&quot;&gt; &lt;code&gt;ipc-main-invoke-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de91e9f2b838416802fb92b918a5f9ac5701ab3e" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;api/structures/ipc-main-event&quot;&gt;&lt;code&gt;ipc-main-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;api/structures/ipc-main-event&quot;&gt; &lt;code&gt;ipc-main-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5db60df0add66807c4743599e64840b7735722fc" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;api/structures/ipc-renderer-event&quot;&gt;&lt;code&gt;ipc-renderer-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;api/structures/ipc-renderer-event&quot;&gt; &lt;code&gt;ipc-renderer-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e06eb72b8e4d917b1b164aaf75a5c5872a25d21" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;structures/ipc-main-event&quot;&gt;&lt;code&gt;ipc-main-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;structures/ipc-main-event&quot;&gt; &lt;code&gt;ipc-main-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d753bef893258da0067d563d2d8c784ecd8921b0" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; can be found in the &lt;a href=&quot;structures/ipc-renderer-event&quot;&gt;&lt;code&gt;ipc-renderer-event&lt;/code&gt;&lt;/a&gt; structure docs.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체에 대한 문서 는 &lt;a href=&quot;structures/ipc-renderer-event&quot;&gt; &lt;code&gt;ipc-renderer-event&lt;/code&gt; &lt;/a&gt; 구조 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9293338eb4ef937a2029304cfc21c780ed35545b" translate="yes" xml:space="preserve">
          <source>The easiest way to use this service is by installing &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt;, a Node.js module preconfigured for use with update.electronjs.org.</source>
          <target state="translated">이 서비스를 사용하는 가장 쉬운 방법은 update.electronjs.org와 함께 사용하도록 사전 구성된 Node.js 모듈 인 &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt; 를 설치 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="080d6ac8d2d12a009ad792aa9bd3679d1c9d7091" translate="yes" xml:space="preserve">
          <source>The easy way</source>
          <target state="translated">쉬운 방법</target>
        </trans-unit>
        <trans-unit id="dda3190ee27210a14e094a564f79f15c93d5f611" translate="yes" xml:space="preserve">
          <source>The effect is visible only on (some?) LCD screens. Even if you don't see a difference, some of your users may. It is best to always set the background this way, unless you have reasons not to do so.</source>
          <target state="translated">이 효과는 (일부?) LCD 화면에서만 볼 수 있습니다. 차이가 없더라도 일부 사용자는 그럴 수 있습니다. 그렇게하지 않을 이유가없는 한 항상이 방법으로 배경을 설정하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="997fdba9aaf6c9e3ee2623f275fe905f840f1d10" translate="yes" xml:space="preserve">
          <source>The electron.lib has to be copied as node.lib.</source>
          <target state="translated">electron.lib는 node.lib로 복사해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e0a6a32dd6f0c1918523c114e06c2c6ed8cb2e1" translate="yes" xml:space="preserve">
          <source>The environment variables have to be set when executing the &lt;code&gt;bootstrap.py&lt;/code&gt; script, it won't work in the &lt;code&gt;build.py&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;bootstrap.py&lt;/code&gt; 스크립트를 실행할 때 환경 변수를 설정해야합니다 . &lt;code&gt;build.py&lt;/code&gt; 스크립트 에서는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="47668fc9bc768f858e066420c2c3bf4d68f2ee74" translate="yes" xml:space="preserve">
          <source>The events chapter must be in following form:</source>
          <target state="translated">이벤트 장은 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="1775a2ba70be76e5cd9f2d2b5d87922c0e21f488" translate="yes" xml:space="preserve">
          <source>The existing webview will see the &lt;code&gt;destroy&lt;/code&gt; event and will then create a new webContents when a new url is loaded.</source>
          <target state="translated">기존 webview는 &lt;code&gt;destroy&lt;/code&gt; 이벤트 를보고 새 URL이로드 될 때 새 webContents를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f784a2561a2a75cca1555d87dd818bd32eea3377" translate="yes" xml:space="preserve">
          <source>The experimental APIs &lt;code&gt;BrowserView.{destroy, fromId, fromWebContents, getAllViews}&lt;/code&gt; have now been removed. Additionally, the &lt;code&gt;id&lt;/code&gt; property of &lt;code&gt;BrowserView&lt;/code&gt; has also been removed.</source>
          <target state="translated">실험용 API &lt;code&gt;BrowserView.{destroy, fromId, fromWebContents, getAllViews}&lt;/code&gt; 가 이제 제거되었습니다. 또한 &lt;code&gt;BrowserView&lt;/code&gt; 의 &lt;code&gt;id&lt;/code&gt; 속성 도 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="5cf05c0d2832c3fd7650a25ac5b1bc027989d1a3" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once per extension. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="translated">확장이 기억되므로 확장 당 한 번만이 API를 호출하면됩니다. 이미로드 된 확장을 추가하려고하면이 메서드는 반환되지 않고 대신 콘솔에 경고를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="45cd3e807c7fd694f209776f14d4d85d8e1c31c1" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="translated">확장명을 기억하므로이 API를 한 번만 호출하면되며이 API는 프로그래밍 용이 아닙니다. 이미로드 된 확장을 추가하려고하면이 메서드는 콘솔에 경고를 반환하지 않고 대신 기록합니다.</target>
        </trans-unit>
        <trans-unit id="2eeb1f3a0e8e8243477bc575c6c648a89ab60707" translate="yes" xml:space="preserve">
          <source>The factor must be greater than 0.0.</source>
          <target state="translated">계수는 0.0보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="86129f2c0943919356684f3af0bcb1af409e91ea" translate="yes" xml:space="preserve">
          <source>The file &lt;em&gt;without the prefix&lt;/em&gt; is still being published to avoid breaking any setups that may be consuming it. Starting at 2.0, the unprefixed file will no longer be published.</source>
          <target state="translated">&lt;em&gt;접두어&lt;/em&gt; 가 &lt;em&gt;없는&lt;/em&gt; 파일 은 사용 중일 수있는 설정을 중단하지 않도록 계속 게시 중입니다. 2.0부터는 접두사가없는 파일이 더 이상 게시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="807d917e174965f29f52692cbaf299ca8879915e" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;/chromium_src&lt;/code&gt; tend to be pieces of Chromium that aren't part of the content layer. For example to implement Pepper API, we need some wiring similar to what official Chrome does. We could have built the relevant sources as a part of &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; but most often we don't require all the features (some tend to be proprietary, analytics stuff) so we took parts of the code. These could have easily been patches in libcc, but at the time when these were written the goal of libcc was to maintain very minimal patches and chromium_src changes tend to be big ones. Also, note that these patches can never be upstreamed unlike other libcc patches we maintain now.</source>
          <target state="translated">&lt;code&gt;/chromium_src&lt;/code&gt; 의 파일 은 콘텐츠 계층에 속하지 않는 Chromium 조각 인 경향이 있습니다. 예를 들어 Pepper API를 구현하려면 공식 Chrome과 유사한 배선이 필요합니다. 우리는 &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; 의 일부로 관련 소스를 구축 할 수 있었지만 대부분의 경우 모든 기능 (일부는 독점적이며 분석적인 경향이 있음)을 요구하지 않으므로 코드의 일부를 사용했습니다. 이것들은 libcc에서 쉽게 패치되었을 수 있지만, 이것들이 쓰여질 당시 libcc의 목표는 최소한의 패치를 유지하는 것이었고 chromium_src 변경은 큰 경향이 있습니다. 또한 지금 유지 관리하는 다른 libcc 패치와 달리 이러한 패치는 업스트림 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b515b23229a492345736c0e4065ae73462f420e0" translate="yes" xml:space="preserve">
          <source>The final step is to add a bit of styling to enable dark mode for the web parts of the UI by leveraging the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;&lt;code&gt;prefers-color-scheme&lt;/code&gt;&lt;/a&gt; CSS attribute. The value of &lt;code&gt;prefers-color-scheme&lt;/code&gt; will follow your &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; setting.</source>
          <target state="translated">마지막 단계는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt; &lt;code&gt;prefers-color-scheme&lt;/code&gt; &lt;/a&gt; CSS 속성 을 활용하여 UI의 웹 파트에 대해 다크 모드를 활성화하는 약간의 스타일을 추가하는 것입니다. &lt;code&gt;prefers-color-scheme&lt;/code&gt; 의 값은 &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; 설정 을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="457233dd3e65c7e4b1a26409a273fd1b1bafea77" translate="yes" xml:space="preserve">
          <source>The first 3 options are trace recording modes and hence mutually exclusive. If more than one trace recording modes appear in the &lt;code&gt;traceOptions&lt;/code&gt; string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is &lt;code&gt;record-until-full&lt;/code&gt;.</source>
          <target state="translated">처음 3 가지 옵션은 트레이스 레코딩 모드이므로 상호 배타적입니다. &lt;code&gt;traceOptions&lt;/code&gt; 문자열 에 둘 이상의 추적 기록 모드가 나타나면 마지막 모드 가 우선합니다. 추적 기록 모드를 지정하지 않은 경우 기록 모드는 &lt;code&gt;record-until-full&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0efe33d64ae8fc2ca88edad27924431ab14a57de" translate="yes" xml:space="preserve">
          <source>The first line should:</source>
          <target state="translated">첫 번째 줄은 :</target>
        </trans-unit>
        <trans-unit id="2b24538741e2c956585d562cdd1ad703db214882" translate="yes" xml:space="preserve">
          <source>The first step is to go to the &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;Releases&lt;/a&gt; page and delete the corrupted binaries with the &lt;code&gt;SHASUMS256.txt&lt;/code&gt; checksum file.</source>
          <target state="translated">첫 번째 단계는 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;릴리스&lt;/a&gt; 페이지 로 이동 하여 &lt;code&gt;SHASUMS256.txt&lt;/code&gt; 체크섬 파일로 손상된 바이너리를 삭제하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="947e6a32b53383b44afee4bad2b46272f80bc48f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;crashReporter&lt;/code&gt; methods are no longer available in the renderer process:</source>
          <target state="translated">다음 &lt;code&gt;crashReporter&lt;/code&gt; 메서드는 더 이상 렌더러 프로세스에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea705348744c1e2044a8ff0b7c88333243bb1d26" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;gn&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">다음 &lt;code&gt;gn&lt;/code&gt; 파일에는 Electron을 구축하기위한 주요 규칙이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="15c3c7177b6014482893aa2d14f4164ca69ad709" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;webPreferences&lt;/code&gt; option default values are deprecated in favor of the new defaults listed below.</source>
          <target state="translated">다음 &lt;code&gt;webPreferences&lt;/code&gt; 옵션 기본값은 아래 나열된 새 기본값을 위해 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="023ff6527fd05f275d8fd868ecdc324dfea1fb52" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.example.com&lt;/code&gt;.</source>
          <target state="translated">다음 CSP를 사용하면 Electron이 현재 웹 사이트와 &lt;code&gt;apis.example.com&lt;/code&gt; 에서 스크립트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96ee1eed9747359cdb30aeeed257bcc687dedd46" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.mydomain.com&lt;/code&gt;.</source>
          <target state="translated">다음 CSP를 통해 Electron은 현재 웹 사이트 및 &lt;code&gt;apis.mydomain.com&lt;/code&gt; 에서 스크립트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="863e74b210263b70d8d1d74644d55dd0fcefdbcc" translate="yes" xml:space="preserve">
          <source>The following DOM events are available to the &lt;code&gt;webview&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그에 사용 가능한 DOM 이벤트는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="df37400e0e4edd92f2e41f2950f14191d09725df" translate="yes" xml:space="preserve">
          <source>The following accelerators will not be registered successfully on macOS 10.14 Mojave unless the app has been authorized as a &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html&quot;&gt;trusted accessibility client&lt;/a&gt;:</source>
          <target state="translated">앱이 &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXTestingApps.html&quot;&gt;신뢰할 수있는 접근성 클라이언트&lt;/a&gt; 로 인증되지 않은 경우 다음 가속기는 macOS 10.14 Mojave에 성공적으로 등록되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="13f9c4bc3e3eee333a74f8c923abc52e950ddc87" translate="yes" xml:space="preserve">
          <source>The following additional roles are available on &lt;em&gt;macOS&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;macOS&lt;/em&gt; 에서는 다음과 같은 추가 역할을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bc69551418702826c72247738e5cea0edb1fbc9" translate="yes" xml:space="preserve">
          <source>The following app commands are explicitly supported on Linux:</source>
          <target state="translated">다음 앱 명령은 Linux에서 명시 적으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9a09f0d83e28e06e6787fa41ade0a2c2935f1e9d" translate="yes" xml:space="preserve">
          <source>The following colors are only available on macOS 10.14: &lt;code&gt;find-highlight&lt;/code&gt;, &lt;code&gt;selected-content-background&lt;/code&gt;, &lt;code&gt;separator&lt;/code&gt;, &lt;code&gt;unemphasized-selected-content-background&lt;/code&gt;, &lt;code&gt;unemphasized-selected-text-background&lt;/code&gt;, and &lt;code&gt;unemphasized-selected-text&lt;/code&gt;.</source>
          <target state="translated">다음 색상은 macOS 10.14에서만 사용할 수 있습니다 : &lt;code&gt;find-highlight&lt;/code&gt; , &lt;code&gt;selected-content-background&lt;/code&gt; , &lt;code&gt;separator&lt;/code&gt; , &lt;code&gt;unemphasized-selected-content-background&lt;/code&gt; , &lt;code&gt;unemphasized-selected-text-background&lt;/code&gt; , &lt;code&gt;unemphasized-selected-text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2973ab61031b504aa1fcecc8e49986ff3a8af8f" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for development and debugging purposes.</source>
          <target state="translated">다음 환경 변수는 주로 개발 및 디버깅 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5ac3260cead16a78938f601530def24b4ea4ac92" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for use at runtime in packaged Electron applications.</source>
          <target state="translated">다음 환경 변수는 주로 패키지 된 Electron 응용 프로그램에서 런타임에 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6d46353d4da755261f02826cc4e562d2285a35e8" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 인스턴스에서 다음 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b400e2c101db1648d41240b4bb70394980d45ff" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;ServiceWorkers&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ServiceWorkers&lt;/code&gt; 인스턴스에서 다음 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54c9e2a9a0a73dc882520d10b2ca079a0beef36f" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a038e7156d383a1da0adea7a7684906789426e5" translate="yes" xml:space="preserve">
          <source>The following events of &lt;code&gt;chrome.runtime&lt;/code&gt; are supported:</source>
          <target state="translated">&lt;code&gt;chrome.runtime&lt;/code&gt; 의 다음 이벤트 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b034f553ec80ef9a74ec658af3ef9d311b4f26ea" translate="yes" xml:space="preserve">
          <source>The following example code forwards all log messages to the embedder's console without regard for log level or other properties.</source>
          <target state="translated">다음 예제 코드는 로그 수준 또는 기타 속성에 관계없이 모든 로그 메시지를 임 베더 콘솔에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="412f6394578caf90d6f08e305bc45dd7a499eb0c" translate="yes" xml:space="preserve">
          <source>The following example code navigates the &lt;code&gt;webview&lt;/code&gt; to &lt;code&gt;about:blank&lt;/code&gt; when the guest attempts to close itself.</source>
          <target state="translated">다음 예제 코드 는 게스트가 자신을 닫으려고 할 때 &lt;code&gt;webview&lt;/code&gt; 를 &lt;code&gt;about:blank&lt;/code&gt; 로 탐색합니다 .</target>
        </trans-unit>
        <trans-unit id="e297c13288b5494f48c892304c4685e142c2f359" translate="yes" xml:space="preserve">
          <source>The following example code opens the new url in system's default browser.</source>
          <target state="translated">다음 예제 코드는 시스템의 기본 브라우저에서 새 URL을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="a9451fdf3538788a0ac9e0b2270ef044c91f856a" translate="yes" xml:space="preserve">
          <source>The following example shows how to bounce your icon on the dock.</source>
          <target state="translated">다음 예제는 도크에서 아이콘을 바운스하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="96c5cfe0246d651a35fd511efd2ba0f3ed22db5f" translate="yes" xml:space="preserve">
          <source>The following example shows how to capture video from a desktop window whose title is &lt;code&gt;Electron&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 제목이 &lt;code&gt;Electron&lt;/code&gt; 인 데스크탑 창에서 비디오를 캡처하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4e441355b76ddaa3d4de94d8032bdf0ea025f949" translate="yes" xml:space="preserve">
          <source>The following example shows how to check if the &lt;code&gt;--disable-gpu&lt;/code&gt; flag is set.</source>
          <target state="translated">다음 예제는 &lt;code&gt;--disable-gpu&lt;/code&gt; 플래그가 설정 되었는지 확인하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4a5e64570d57b68bcc11e2010a4253a965aa1f32" translate="yes" xml:space="preserve">
          <source>The following example shows how to quit the application when the last window is closed:</source>
          <target state="translated">다음 예제는 마지막 창이 닫힐 때 응용 프로그램을 종료하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f6a87feccae153d14a8090ee5f48f12c447861c" translate="yes" xml:space="preserve">
          <source>The following example shows how to write a string to the clipboard:</source>
          <target state="translated">다음 예제는 클립 보드에 문자열을 쓰는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="81c6031b5e2c96305bec9706b7c67d3750fcd099" translate="yes" xml:space="preserve">
          <source>The following is a non-exhaustive list of why you may consider using the &lt;code&gt;net&lt;/code&gt; module instead of the native Node.js modules:</source>
          <target state="translated">다음은 기본 Node.js 모듈 대신 &lt;code&gt;net&lt;/code&gt; 모듈을 사용하는 것을 고려할 수있는 전체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="b6487e58f7fd63ed2be0c3a2a9c726a501b79eb1" translate="yes" xml:space="preserve">
          <source>The following is an example of automatically submitting a crash report to a remote server:</source>
          <target state="translated">다음은 충돌 보고서를 원격 서버에 자동으로 제출하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="ed35c617dd5e1d878a05756727a2a2847b63e131" translate="yes" xml:space="preserve">
          <source>The following is an example of setting up Electron to automatically submit crash reports to a remote server:</source>
          <target state="translated">다음은 원격 서버에 충돌 보고서를 자동으로 제출하도록 Electron을 설정하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="0330fdc6b65de3c64f4b555aeefbac5721146158" translate="yes" xml:space="preserve">
          <source>The following list includes the breaking API changes in Electron 3.0.</source>
          <target state="translated">다음 목록에는 Electron 3.0의 주요 API 변경 사항이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cbccc667e4d48af4190a2e3a09cac45395b4e72" translate="yes" xml:space="preserve">
          <source>The following list includes the breaking API changes made in Electron 2.0.</source>
          <target state="translated">다음 목록에는 Electron 2.0에서 변경된 주요 API 변경 사항이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c48347abc23372d7916a7b87f7a674953c072dd" translate="yes" xml:space="preserve">
          <source>The following list includes the breaking API changes made in Electron 4.0.</source>
          <target state="translated">다음 목록에는 Electron 4.0에서 변경된 주요 API 변경 사항이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2460efd3b194a8bb68bf2b7e9f8cab9d619bfca" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 인스턴스에서 다음 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84897101902e6f988acf50fa721543bd24857915" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;ServiceWorkers&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ServiceWorkers&lt;/code&gt; 인스턴스에서 다음 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4edeb192e26fd5b685c6ec571fa25126485efea" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41bcf5a62a573a8cc5fb83b2b0ca3023bc5643f8" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;WebRequest&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 인스턴스에서 다음 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86154d83bccd7a4b57c68d8cd6f90d9c971f95d4" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;NativeImage&lt;/code&gt; 클래스의 인스턴스에서 다음 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f01626879a6a19f60747e7887bf0107f0f4c6992" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;code&gt;chrome.extension&lt;/code&gt; are supported:</source>
          <target state="translated">&lt;code&gt;chrome.extension&lt;/code&gt; 의 다음 메소드 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7805fe8a1813a773aea232e4375679aa12c68d66" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;code&gt;chrome.management&lt;/code&gt; are supported:</source>
          <target state="translated">다음과 같은 &lt;code&gt;chrome.management&lt;/code&gt; 메소드 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="53cb8aa55eef8bf5402d91f66b7ebbaf5ff99bdf" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;code&gt;chrome.runtime&lt;/code&gt; are supported:</source>
          <target state="translated">&lt;code&gt;chrome.runtime&lt;/code&gt; 의 다음 메소드 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f9c65edbb3d522f16e0b370fb37eb1051ac34a78" translate="yes" xml:space="preserve">
          <source>The following methods of &lt;code&gt;chrome.tabs&lt;/code&gt; are supported:</source>
          <target state="translated">다음과 같은 &lt;code&gt;chrome.tabs&lt;/code&gt; 메소드 가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9a3b5c7545a0293b6358e101905e854c70f4102a" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;MenuItem&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MenuItem&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8656a694792848f68ade1e927e17424b474569c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="def49f62a446c81186a380e2a1dce3115758979c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBar&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBar&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb57d90554803861a88a2753b989f061a9f5dc27" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarButton&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarButton&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b20f464fbc40e27073060beed56e38762bf2ec5f" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarColorPicker&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarColorPicker&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ace2633b47d31b77187bb2daeb06860f123cc84" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarLabel&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarLabel&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db9bb37fb754d6983049c81473d1ed7ee83c0529" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarPopover&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarPopover&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ae481cb3e6e682837041ef8635daf8423012551" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarScrubber&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarScrubber&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf2c708351aaff2edf23f053e2722905afcda326" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="195378df2cd4e2ad758131138b1fef6f60754314" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSlider&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSlider&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8f2837251e74096fabd92fa5d58e494f58da0b8" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSpacer&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSpacer&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4589b55e11f96dce76e4cf63f6d3ef362c879243" translate="yes" xml:space="preserve">
          <source>The following properties of &lt;code&gt;chrome.extension&lt;/code&gt; are supported:</source>
          <target state="translated">&lt;code&gt;chrome.extension&lt;/code&gt; 의 다음 속성 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="82c55ab61e9d3a1699c85fa42363c2473d8c44e2" translate="yes" xml:space="preserve">
          <source>The following properties of &lt;code&gt;chrome.runtime&lt;/code&gt; are supported:</source>
          <target state="translated">&lt;code&gt;chrome.runtime&lt;/code&gt; 의 다음 속성 이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c4fde691b2ef61a94d31d993e1b955c50e6550a9" translate="yes" xml:space="preserve">
          <source>The following rules only apply to the documentation of APIs.</source>
          <target state="translated">다음 규칙은 API 문서에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="66529044801589f67c9319b12f81a0025eb3daa7" translate="yes" xml:space="preserve">
          <source>The following steps introduce a simple way to submit your app to Mac App Store. However, these steps do not ensure your app will be approved by Apple; you still need to read Apple's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Submitting Your App&lt;/a&gt; guide on how to meet the Mac App Store requirements.</source>
          <target state="translated">다음 단계는 Mac App Store에 앱을 제출하는 간단한 방법을 소개합니다. 그러나 이러한 단계는 앱이 Apple의 승인을받는 것은 아닙니다. 여전히 Mac App Store 요구 사항을 충족시키는 방법에 대한 Apple의 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;앱 제출&lt;/a&gt; 안내서 를 읽어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c79a51e76233d92ca454ccfeda126b39f4a140f2" translate="yes" xml:space="preserve">
          <source>The following suffixes for DPI are also supported:</source>
          <target state="translated">DPI에 대한 다음 접미사도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e8b3395a0b0733443245d920453f6829eb410bbd" translate="yes" xml:space="preserve">
          <source>The font looks blurry, what is this and what can I do?</source>
          <target state="translated">글꼴이 흐릿하게 보입니다. 이것은 무엇이며 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="9651d0fa63c3871b518a88b8542e06738388b531" translate="yes" xml:space="preserve">
          <source>The hard way</source>
          <target state="translated">어려운 방법</target>
        </trans-unit>
        <trans-unit id="971519fecca901e42a8246a4851dc194f2d7b30f" translate="yes" xml:space="preserve">
          <source>The icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 로 설정하면 제목 표시 줄의 아이콘이 회색이됩니다 .</target>
        </trans-unit>
        <trans-unit id="893c7bb1e6d91b53055e3852294044b7cb67b593" translate="yes" xml:space="preserve">
          <source>The installer generated with Squirrel will create a shortcut icon with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; in the format of &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt;, examples are &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; and &lt;code&gt;com.squirrel.code.Code&lt;/code&gt;. You have to use the same ID for your app with &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API, otherwise Windows will not be able to pin your app properly in task bar.</source>
          <target state="translated">Squirrel로 생성 된 설치 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;프로그램&lt;/a&gt; 은 &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt; 형식의 애플리케이션 사용자 모델 ID 로 바로 가기 아이콘을 작성합니다 ( 예 : &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; 및 &lt;code&gt;com.squirrel.code.Code&lt;/code&gt; ) . &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API 와 함께 앱에 동일한 ID를 사용해야합니다 . 그렇지 않으면 Windows가 작업 표시 줄에서 앱을 올바르게 고정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b4ea8834d37e552763a32d1d8bee90913cb5821c" translate="yes" xml:space="preserve">
          <source>The intention is for these overrides to become disabled by default and then at some point in the future this property will be removed. This property impacts which native modules you can use in the renderer process. For more information on the direction Electron is going with renderer process restarts and usage of native modules in the renderer process please check out this &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;Tracking Issue&lt;/a&gt;.</source>
          <target state="translated">의도는 이러한 재정의가 기본적으로 비활성화 된 후 나중에이 속성이 제거되는 것입니다. 이 속성은 렌더러 프로세스에서 사용할 수있는 네이티브 모듈에 영향을줍니다. Electron이 렌더러 프로세스 재시작 및 렌더러 프로세스에서 네이티브 모듈 사용에 대한 방향에 대한 자세한 내용은이 &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;Tracking Issue&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d39cdcde4207d3e93a4c98c4194d69b5632abc65" translate="yes" xml:space="preserve">
          <source>The latest stable release unilaterally receives all fixes from &lt;code&gt;master&lt;/code&gt;, and the version prior to that receives the vast majority of those fixes as time and bandwidth warrants. The oldest supported release line will receive only security fixes directly.</source>
          <target state="translated">최신 안정 릴리스는 &lt;code&gt;master&lt;/code&gt; 로부터 모든 수정 사항을 일방적으로 수신 하며 그 이전 버전은 시간 및 대역폭이 보장되는대로 대부분의 수정 사항을받습니다. 지원되는 가장 오래된 릴리스 라인은 보안 수정 만 직접받습니다.</target>
        </trans-unit>
        <trans-unit id="0c4a69d2c066a08bb1cfa106b9557f1532d54dcb" translate="yes" xml:space="preserve">
          <source>The latest three &lt;em&gt;stable&lt;/em&gt; major versions are supported by the Electron team. For example, if the latest release is 6.1.x, then the 5.0.x as well as the 4.2.x series are supported. We only support the latest minor release for each stable release series. This means that in the case of a security fix 6.1.x will receive the fix, but we will not release a new version of 6.0.x.</source>
          <target state="translated">Electron 팀은 최신 세 가지 &lt;em&gt;안정적인&lt;/em&gt; 주요 버전을 지원합니다. 예를 들어 최신 릴리스가 6.1.x 인 경우 5.0.x 및 4.2.x 시리즈가 지원됩니다. 각 안정적인 릴리스 시리즈에 대한 최신 부 릴리스 만 지원합니다. 즉, 보안 수정 6.1.x의 경우 수정 사항이 적용되지만 6.0.x의 새 버전은 릴리스되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d90ed43ccd133ad2a69189c543d458bb4158ae61" translate="yes" xml:space="preserve">
          <source>The latest three release branches are supported by the Electron team. For example, if the latest release is 2.0.x, then the 2-0-x series is supported, as are the two previous release series 1-7-x and 1-8-x.</source>
          <target state="translated">Electron 팀은 최신 3 개의 릴리스 브랜치를 지원합니다. 예를 들어, 최신 릴리스가 2.0.x 인 경우 2 개의 이전 릴리스 시리즈 1-7-x 및 1-8-x와 같이 2-0-x 시리즈가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d5c440ea2b39e99d2588620e52b049a77067e45d" translate="yes" xml:space="preserve">
          <source>The library file &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; will be under &lt;code&gt;/Applications/Google Chrome.app/Contents/Versions/CHROME_VERSION/Google Chrome Framework.framework/Versions/A/Libraries/WidevineCdm/_platform_specific/mac_(x86|x64)/&lt;/code&gt; directory.</source>
          <target state="translated">라이브러리 파일 &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; 는 &lt;code&gt;/Applications/Google Chrome.app/Contents/Versions/CHROME_VERSION/Google Chrome Framework.framework/Versions/A/Libraries/WidevineCdm/_platform_specific/mac_(x86|x64)/&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d15fd032c93c2d10a3ddf3255e01167a0aaee7e6" translate="yes" xml:space="preserve">
          <source>The library file &lt;code&gt;widevinecdm.dll&lt;/code&gt; will be under &lt;code&gt;Program Files(x86)/Google/Chrome/Application/CHROME_VERSION/WidevineCdm/_platform_specific/win_(x86|x64)/&lt;/code&gt; directory.</source>
          <target state="translated">라이브러리 파일 &lt;code&gt;widevinecdm.dll&lt;/code&gt; 은 &lt;code&gt;Program Files(x86)/Google/Chrome/Application/CHROME_VERSION/WidevineCdm/_platform_specific/win_(x86|x64)/&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="44dd76a7d6990b9f354f940e16cee6cd6b26d393" translate="yes" xml:space="preserve">
          <source>The list below contains a number of steps that are fairly straightforward and easy to implement. However, building the most performant version of your app will require you to go beyond a number of steps. Instead, you will have to closely examine all the code running in your app by carefully profiling and measuring. Where are the bottlenecks? When the user clicks a button, what operations take up the brunt of the time? While the app is simply idling, which objects take up the most memory?</source>
          <target state="translated">아래 목록에는 매우 간단하고 구현하기 쉬운 여러 단계가 포함되어 있습니다. 그러나 가장 성능이 좋은 버전의 앱을 빌드하려면 여러 단계를 넘어야합니다. 대신 신중하게 프로파일 링하고 측정하여 앱에서 실행되는 모든 코드를 면밀히 검토해야합니다. 병목은 어디에 있습니까? 사용자가 버튼을 클릭하면 어떤 작업이 시간을 차지합니까? 앱이 단순히 유휴 상태이지만 가장 많은 메모리를 차지하는 개체는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="ff1af9069868f42e03852adb48b7dde66b930ac8" translate="yes" xml:space="preserve">
          <source>The main process and its UI thread are essentially the control tower for major operations inside your app. When the operating system tells your app about a mouse click, it'll go through the main process before it reaches your window. If your window is rendering a buttery-smooth animation, it'll need to talk to the GPU process about that &amp;ndash; once again going through the main process.</source>
          <target state="translated">기본 프로세스와 해당 UI 스레드는 기본적으로 앱 내부의 주요 작업을위한 컨트롤 타워입니다. 운영 체제가 앱에 마우스 클릭에 대해 알리면 창에 도달하기 전에 기본 프로세스를 거치게됩니다. 창이 부드럽고 매끄러운 애니메이션을 렌더링하는 경우 GPU 프로세스와 이에 대해 이야기해야합니다. 다시 한 번 기본 프로세스를 거치게됩니다.</target>
        </trans-unit>
        <trans-unit id="873a6e801edc60a1c32293c8a502234ca368cf39" translate="yes" xml:space="preserve">
          <source>The main process creates web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its own renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding renderer process is also terminated.</source>
          <target state="translated">기본 프로세스는 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스를 만들어 웹 페이지를 만듭니다 . 각 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스는 자체 렌더러 프로세스에서 웹 페이지를 실행합니다. 때 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 인스턴스가 파괴되어, 해당 묘화 프로세스는 종료된다.</target>
        </trans-unit>
        <trans-unit id="c36ca4561c2cc410edb1cc0e82ba1b3074d1bc62" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module, and replies by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">메인 프로세스는 &lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리하고 &lt;code&gt;event.returnValue&lt;/code&gt; 를 설정하여 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="3e57d2e2088d6bf8c5aa05e4f6662ae76ff4fa5e" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module, and replies by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">기본 프로세스는 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리하고 &lt;code&gt;event.returnValue&lt;/code&gt; 를 설정하여 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="099f6cac6dff60632e157c5d20a0c768e8532de9" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">기본 프로세스는 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="7acc63faf09167211c7a5cf74f01a16f7a7cbbdb" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">메인 프로세스는 &lt;a href=&quot;api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="48c1c4cf5d15a0f40a3ea8c4a44ce5f2f7485207" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">메인 프로세스는 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="8609c822b7c373ca2706e01a9ff9173dcf0b4260" translate="yes" xml:space="preserve">
          <source>The main process manages all web pages and their corresponding renderer processes. Each renderer process is isolated and only cares about the web page running in it.</source>
          <target state="translated">기본 프로세스는 모든 웹 페이지와 해당 렌더러 프로세스를 관리합니다. 각 렌더러 프로세스는 격리되어 있으며 해당 웹 페이지에서 실행중인 웹 페이지 만 처리합니다.</target>
        </trans-unit>
        <trans-unit id="11d23cd92e3578986785fa874e0009a06841da0b" translate="yes" xml:space="preserve">
          <source>The main process script is just like a normal Node.js script:</source>
          <target state="translated">기본 프로세스 스크립트는 일반적인 Node.js 스크립트와 같습니다.</target>
        </trans-unit>
        <trans-unit id="965080a5c3cf16ac8bc8dc34615d308efa32bbcb" translate="yes" xml:space="preserve">
          <source>The main process script is like a normal Node.js script:</source>
          <target state="translated">기본 프로세스 스크립트는 일반 Node.js 스크립트와 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe94b47dc627668c00dd5ab7350d6e3d51d0dfe6" translate="yes" xml:space="preserve">
          <source>The main process should listen for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;api/ipc-main#ipcmainhandlechannel-listener&quot;&gt;&lt;code&gt;ipcMain.handle()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주 프로세스는 &lt;a href=&quot;api/ipc-main#ipcmainhandlechannel-listener&quot;&gt; &lt;code&gt;ipcMain.handle()&lt;/code&gt; &lt;/a&gt; 하여 &lt;code&gt;channel&lt;/code&gt; 을 수신해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3fb1dec32f4194c50565b55cc4ce1ce1b55b86db" translate="yes" xml:space="preserve">
          <source>The main process should listen for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main#ipcmainhandlechannel-listener&quot;&gt;&lt;code&gt;ipcMain.handle()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주 프로세스는 &lt;a href=&quot;ipc-main#ipcmainhandlechannel-listener&quot;&gt; &lt;code&gt;ipcMain.handle()&lt;/code&gt; &lt;/a&gt; 하여 &lt;code&gt;channel&lt;/code&gt; 을 수신해야합니다 .</target>
        </trans-unit>
        <trans-unit id="30517931a8f87b0311fae62c14d68aeb359fd488" translate="yes" xml:space="preserve">
          <source>The main process, commonly a file named &lt;code&gt;main.js&lt;/code&gt;, is the entry point to every Electron app. It controls the life of the app, from open to close. It also manages native elements such as the Menu, Menu Bar, Dock, Tray, etc. The main process is responsible for creating each new renderer process in the app. The full Node API is built in.</source>
          <target state="translated">일반적으로 &lt;code&gt;main.js&lt;/code&gt; 라는 파일 인 기본 프로세스 는 모든 Electron 앱의 진입 점입니다. 오픈에서 클로즈까지 앱의 수명을 제어합니다. 또한 메뉴, 메뉴 막대, 도크, 트레이 등과 같은 기본 요소를 관리합니다. 기본 프로세스는 앱에서 각각의 새 렌더러 프로세스를 생성합니다. 전체 노드 API가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="58ee7427b3e1f3e8703b212718bd4baf7ceab18b" translate="yes" xml:space="preserve">
          <source>The main script may look as follows:</source>
          <target state="translated">기본 스크립트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4d1e177ca0104f10bcaf25e55ec1377a3d7bbce4" translate="yes" xml:space="preserve">
          <source>The main script specifies the entry point of your Electron application (in our case, the &lt;code&gt;main.js&lt;/code&gt; file) that will run the Main process. Typically, the script that runs in the Main process controls the lifecycle of the application, displays the graphical user interface and its elements, performs native operating system interactions, and creates Renderer processes within web pages. An Electron application can have only one Main process.</source>
          <target state="translated">메인 스크립트 는 메인 프로세스를 실행할 Electron 애플리케이션 (이 경우 &lt;code&gt;main.js&lt;/code&gt; 파일) 의 진입 점을 지정합니다 . 일반적으로 Main 프로세스에서 실행되는 스크립트는 응용 프로그램의 수명주기를 제어하고 그래픽 사용자 인터페이스와 해당 요소를 표시하며 기본 운영 체제 상호 작용을 수행하고 웹 페이지 내에서 Renderer 프로세스를 만듭니다. Electron 애플리케이션은 메인 프로세스를 하나만 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="656d491b53b6fa159180b404effa2b3a421b4d47" translate="yes" xml:space="preserve">
          <source>The method underlying this event is built to handle older macOS-style trackpad swiping, where the content on the screen doesn't move with the swipe. Most macOS trackpads are not configured to allow this kind of swiping anymore, so in order for it to emit properly the 'Swipe between pages' preference in &lt;code&gt;System Preferences &amp;gt; Trackpad &amp;gt; More Gestures&lt;/code&gt; must be set to 'Swipe with two or three fingers'.</source>
          <target state="translated">이 이벤트의 기본 메서드는 화면의 콘텐츠가 스 와이프해도 이동하지 않는 이전 macOS 스타일의 트랙 패드 스 와이프를 처리하도록 빌드되었습니다. 대부분의 macOS 트랙 패드는 더 이상 이러한 종류의 스 와이프를 허용하도록 구성되어 있지 않으므로 &lt;code&gt;System Preferences &amp;gt; Trackpad &amp;gt; More Gestures&lt;/code&gt; 에서 '페이지 간 스 와이프'환경 설정을 제대로 내보내 려면 '두세 손가락으로 스 와이프'로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e5bb90d65721405e2b6798587777de6453c9216" translate="yes" xml:space="preserve">
          <source>The method will also not return if the extension's manifest is missing or incomplete.</source>
          <target state="translated">확장의 매니페스트가 없거나 불완전한 경우이 메서드는 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2c8e20d6996688c07faba541f33472af6462ebb" translate="yes" xml:space="preserve">
          <source>The methods chapter must be in the following form:</source>
          <target state="translated">방법 장은 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="f2409a2b03328abce25bd4692a534d2ff7fe7e8e" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 의 메소드 는 선택적 &lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;listener&lt;/code&gt; 허용합니다 . &lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; API의 이벤트가 발생했을 때. &lt;code&gt;details&lt;/code&gt; 객체는 요청에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1263854ac164eefd7b257aa2b5a4652d6be04b02" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request. Passing &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;listener&lt;/code&gt; will unsubscribe from the event.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 의 메소드 는 선택적 &lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;listener&lt;/code&gt; 승인합니다 . &lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; API의 이벤트가 발생했을 때. &lt;code&gt;details&lt;/code&gt; 객체는 요청에 대해 설명합니다. &lt;code&gt;listener&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 전달 하면 이벤트 구독이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="02dfe6ee6ff7ce4a1b723feacfd9b47eeb84e18e" translate="yes" xml:space="preserve">
          <source>The module works like &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;&lt;code&gt;electron-winstaller&lt;/code&gt;&lt;/a&gt; and similar modules in that its scope is limited to building snap packages. You can install it with:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt; &lt;code&gt;electron-winstaller&lt;/code&gt; &lt;/a&gt; 패키지와 유사한 모듈 처럼 작동 하며 그 범위는 스냅 패키지 작성으로 제한됩니다. 다음과 같이 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8604cf10f9ac649333a12bb463d49c84a13cf9" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon so it can adapt to both light and dark menu bars.</source>
          <target state="translated">가장 일반적인 경우는 메뉴 막대 아이콘에 템플릿 이미지를 사용하여 밝은 메뉴 막대와 어두운 메뉴 막대 모두에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51a8c48f05d72209d4388ba3ac467808885912ee" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon, so it can adapt to both light and dark menu bars.</source>
          <target state="translated">가장 일반적인 경우는 메뉴 표시 줄 아이콘에 템플릿 이미지를 사용하는 것이므로 밝고 어두운 메뉴 표시 줄에 모두 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b94e875d0b85466a93df9fb0fac2134d2b4034a" translate="yes" xml:space="preserve">
          <source>The most comprehensive tool to debug individual renderer processes is the Chromium Developer Toolset. It is available for all renderer processes, including instances of &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt;, and &lt;code&gt;WebView&lt;/code&gt;. You can open them programmatically by calling the &lt;code&gt;openDevTools()&lt;/code&gt; API on the &lt;code&gt;webContents&lt;/code&gt; of the instance:</source>
          <target state="translated">개별 렌더러 프로세스를 디버깅하는 가장 포괄적 인 도구는 Chromium Developer Toolset입니다. &lt;code&gt;BrowserWindow&lt;/code&gt; , &lt;code&gt;BrowserView&lt;/code&gt; 및 &lt;code&gt;WebView&lt;/code&gt; 인스턴스를 포함한 모든 렌더러 프로세스에 사용할 수 있습니다 . 인스턴스 의 &lt;code&gt;webContents&lt;/code&gt; 에서 &lt;code&gt;openDevTools()&lt;/code&gt; API를 호출하여 프로그래밍 방식으로 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9279298928bc0dfa7b7dabeac0471502dfbbce67" translate="yes" xml:space="preserve">
          <source>The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt;, and you can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to unload it.</source>
          <target state="translated">확장명은 &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; 에 의해 반환되며 확장명을 &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API에 전달하여 확장명 을 언로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45c2ae162f51048511ac3671a0ebb88d914f7360" translate="yes" xml:space="preserve">
          <source>The names used correspond to the &lt;em&gt;&quot;images&quot;&lt;/em&gt; defined for a build cloud, eg the &lt;a href=&quot;https://windows-ci.electronjs.org/build-clouds/8&quot;&gt;libcc-20 cloud&lt;/a&gt;.</source>
          <target state="translated">사용 된 이름 은 빌드 클라우드에 대해 정의 된 &lt;em&gt;&quot;이미지&quot;에&lt;/em&gt; 해당합니다 ( 예 : &lt;a href=&quot;https://windows-ci.electronjs.org/build-clouds/8&quot;&gt;libcc-20 cloud)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30a79e8d6966a4a2414fe7b9771b3c9f123cf632" translate="yes" xml:space="preserve">
          <source>The native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron's headers when building native modules.</source>
          <target state="translated">기본 노드 모듈은 Electron에서 지원되지만 Electron은 시스템에 설치된 Node 바이너리와 다른 V8 버전을 사용할 가능성이 높으므로 기본 모듈을 빌드 할 때 Electron 헤더의 위치를 ​​수동으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7946f3aee148212b0466cff97ef58316736f962" translate="yes" xml:space="preserve">
          <source>The native type of the handle is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;NSView*&lt;/code&gt; on macOS, and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux.</source>
          <target state="translated">핸들의 기본 유형은 Windows의 &lt;code&gt;HWND&lt;/code&gt; , macOS의 &lt;code&gt;NSView*&lt;/code&gt; 및 Linux의 &lt;code&gt;Window&lt;/code&gt; ( &lt;code&gt;unsigned long&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="71f5e2f019afcb5feb85a1c99c89b1e3ad5dffb2" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;BrowserWindow&lt;/code&gt; will inherit the parent window's options by default. To override inherited options you can set them in the &lt;code&gt;features&lt;/code&gt; string.</source>
          <target state="translated">새로 생성 된 &lt;code&gt;BrowserWindow&lt;/code&gt; 는 기본적으로 부모 창의 옵션을 상속합니다. 상속 된 옵션을 무시하려면 &lt;code&gt;features&lt;/code&gt; 문자열 에서 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a89274ff334223332ddb2c643ba3507a28917fb" translate="yes" xml:space="preserve">
          <source>The number of buttons in thumbnail toolbar should be no greater than 7 due to the limited room. Once you setup the thumbnail toolbar, the toolbar cannot be removed due to the platform's limitation. But you can call the API with an empty array to clean the buttons.</source>
          <target state="translated">제한된 공간으로 인해 썸네일 도구 모음의 단추 수는 7보다 크지 않아야합니다. 축소판 도구 모음을 설정하면 플랫폼 제한으로 인해 도구 모음을 제거 할 수 없습니다. 그러나 빈 배열로 API를 호출하여 버튼을 정리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de0ba21eddc684508461b5df5939dc591c49c462" translate="yes" xml:space="preserve">
          <source>The number represented by &lt;code&gt;status&lt;/code&gt; means different things on different platforms: on Windows its potential values can be found &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/printer-info-2&quot;&gt;here&lt;/a&gt;, and on Linux and macOS they can be found &lt;a href=&quot;https://www.cups.org/doc/cupspm.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; 표시되는 숫자는 플랫폼마다 다른 것을 의미합니다. Windows에서는 &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/printdocs/printer-info-2&quot;&gt;여기&lt;/a&gt; 에서 잠재적 인 값을 찾을 수 있으며 Linux 및 macOS에서는 &lt;a href=&quot;https://www.cups.org/doc/cupspm.html&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="125ea8def83a481dab8fbddf8d5749a2b90d5cbe" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt;. You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="translated">Electron의 공식 심볼 서버 URL은 &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt; 입니다. 이 URL을 직접 방문 할 수 없으므로 디버깅 도구의 기호 경로에 추가해야합니다. 아래 예에서 로컬 캐시 디렉토리는 서버에서 PDB를 반복적으로 가져 오는 것을 피하기 위해 사용됩니다. 교체 &lt;code&gt;c:\code\symbols&lt;/code&gt; 컴퓨터에 적절한 캐시 디렉토리와 함께.</target>
        </trans-unit>
        <trans-unit id="3a5320d97c189eed97f6f2ddb3bcdb6d0662888c" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://symbols.electronjs.org.&quot;&gt;https://symbols.electronjs.org.&lt;/a&gt; You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="translated">Electron의 공식 심볼 서버 URL은 &lt;a href=&quot;https://symbols.electronjs.org.&quot;&gt;https://symbols.electronjs.org입니다. &lt;/a&gt;이 URL을 직접 방문 할 수 없으며 디버깅 도구의 기호 경로에 추가해야합니다. 아래 예에서 로컬 캐시 디렉토리는 서버에서 PDB를 반복적으로 가져 오는 것을 방지하기 위해 사용됩니다. &lt;code&gt;c:\code\symbols&lt;/code&gt; 를 시스템의 적절한 캐시 디렉토리로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="008325aba6751725e103a92cb088a5a8c8c92af9" translate="yes" xml:space="preserve">
          <source>The old &quot;Quick Start&quot; document that used to live here has been split up into two documents:</source>
          <target state="translated">여기에 살았던 예전의 &quot;빠른 시작&quot;문서는 두 개의 문서로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="fcb50198ec2b6b7e7e6b193f9aba00a47e3d383b" translate="yes" xml:space="preserve">
          <source>The only non-deprecated methods remaining in the &lt;code&gt;crashReporter&lt;/code&gt; module in the renderer are &lt;code&gt;addExtraParameter&lt;/code&gt;, &lt;code&gt;removeExtraParameter&lt;/code&gt; and &lt;code&gt;getParameters&lt;/code&gt;.</source>
          <target state="translated">렌더러 의 &lt;code&gt;crashReporter&lt;/code&gt; 모듈에 남아있는 사용되지 않는 유일한 메소드 는 &lt;code&gt;addExtraParameter&lt;/code&gt; , &lt;code&gt;removeExtraParameter&lt;/code&gt; 및 &lt;code&gt;getParameters&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fa8cd0d5e0019201e7bd835902c5ff0cd1f02674" translate="yes" xml:space="preserve">
          <source>The only way to load a native module safely for now, is to make sure the app loads no native modules after the Web Workers get started.</source>
          <target state="translated">현재 기본 모듈을 안전하게로드하는 유일한 방법은 웹 작업자가 시작된 후 앱이 기본 모듈을로드하지 않도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="306b02e58a5b9d58b7317a87cf6a2b72d548e1d0" translate="yes" xml:space="preserve">
          <source>The optional arguments are notated by square brackets &lt;code&gt;[]&lt;/code&gt; surrounding the optional argument as well as the comma required if this optional argument follows another argument:</source>
          <target state="translated">선택적 인수는 선택적 인수를 둘러싸는 대괄호 &lt;code&gt;[]&lt;/code&gt; 와이 선택적 인수가 다른 인수 뒤에 오는 경우 필요한 쉼표로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b67b22bb4613c10e8ca9cfb0ddb5f758eef8e0d3" translate="yes" xml:space="preserve">
          <source>The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively. The formula for this is &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt;.</source>
          <target state="translated">원본 크기는 0이고 위 또는 아래의 각 증분은 각각 원본 크기의 기본 제한 인 300 % 및 50 %까지 20 % 더 크게 또는 더 작게 확대하는 것을 나타냅니다. 이에 대한 공식은 &lt;code&gt;scale := 1.2 ^ level&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bf9949f4fb2156fb17fc40e74580436ede2d40f5" translate="yes" xml:space="preserve">
          <source>The other building steps are exactly the same.</source>
          <target state="translated">다른 건물 단계는 정확히 같습니다.</target>
        </trans-unit>
        <trans-unit id="81ea8998cc56ab5955043c21441988d75cde142b" translate="yes" xml:space="preserve">
          <source>The output should look roughly like this:</source>
          <target state="translated">출력은 대략 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="86534dcccfec07f91bfbeb978331e65d0bb1a34a" translate="yes" xml:space="preserve">
          <source>The patch allows the code to compile in the Electron environment, but cannot be upstreamed because it's Electron-specific (e.g. patching out references to Chrome's &lt;code&gt;Profile&lt;/code&gt;). Include reasoning about why the change cannot be implemented without a patch (e.g. by subclassing or copying the code).</source>
          <target state="translated">패치는 코드를 Electron 환경에서 컴파일 할 수 있도록하지만 Electron에 한정되어 있기 때문에 업스트림 될 수 없습니다 (예 : Chrome의 &lt;code&gt;Profile&lt;/code&gt; 대한 참조 패치 ). 패치 없이는 변경 사항을 구현할 수없는 이유에 대한 이유를 포함합니다 (예 : 코드를 서브 클래 싱하거나 복사).</target>
        </trans-unit>
        <trans-unit id="eaa7e02ccdf5db2ecd50eb9094a099cd6afd13fc" translate="yes" xml:space="preserve">
          <source>The patch is temporary, and is intended to be (or has been) committed upstream or otherwise eventually removed. Include a link to an upstream PR or code review if available, or a procedure for verifying whether the patch is still needed at a later date.</source>
          <target state="translated">패치는 임시적이며 업스트림으로 커밋되거나 제거 될 예정입니다. 가능한 경우 업스트림 PR 또는 코드 검토에 대한 링크를 포함하거나 나중에 패치가 여전히 필요한지 확인하는 절차를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="9765bc8f9cc5d6858e39b1456fce0581cd3f35b2" translate="yes" xml:space="preserve">
          <source>The patch makes Electron-specific changes in functionality which are fundamentally incompatible with upstream.</source>
          <target state="translated">이 패치는 업스트림과 근본적으로 호환되지 않는 Electron 특정 기능을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e161ecf856105089a99c6b53bfa26e65e3c5ce6d" translate="yes" xml:space="preserve">
          <source>The possible values and behaviors of the &lt;code&gt;type&lt;/code&gt; option are platform dependent. Possible values are:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 옵션 의 가능한 값과 동작 은 플랫폼에 따라 다릅니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1238273cd66721667847a8ea46f8156223d79358" translate="yes" xml:space="preserve">
          <source>The prebuilt &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;i686&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries of Electron are built on Ubuntu 12.04, the &lt;code&gt;armv7l&lt;/code&gt; binary is built against ARM v7 with hard-float ABI and NEON for Debian Wheezy.</source>
          <target state="translated">Electron 의 사전 빌드 된 &lt;code&gt;ia32&lt;/code&gt; ( &lt;code&gt;i686&lt;/code&gt; ) 및 &lt;code&gt;x64&lt;/code&gt; ( &lt;code&gt;amd64&lt;/code&gt; ) 바이너리는 Ubuntu 12.04에서 빌드되며 &lt;code&gt;armv7l&lt;/code&gt; 바이너리는 hard-float ABI 및 NEON for Debian Wheezy를 사용하여 ARM v7에 대해 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="f433e72a66d43641e662af7724c0c5f47ea2d57a" translate="yes" xml:space="preserve">
          <source>The prebuilt binaries of Electron are built on Ubuntu 18.04.</source>
          <target state="translated">Electron의 미리 빌드 된 바이너리는 Ubuntu 18.04에 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="52fda51a1d9ac2659bf2b70b55985917d8187fc2" translate="yes" xml:space="preserve">
          <source>The preferred way for Unity to instruct your application on what to do is using parameters. You can find them in your application in the global variable &lt;code&gt;process.argv&lt;/code&gt;.</source>
          <target state="translated">Unity가 애플리케이션에 수행 할 작업을 지시하는 데 선호되는 방법은 매개 변수를 사용하는 것입니다. 애플리케이션의 전역 변수 &lt;code&gt;process.argv&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ef64d4fac03a4c17764aa2247db372466529a0b" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules.</source>
          <target state="translated">사전로드 스크립트는 &lt;code&gt;remote&lt;/code&gt; 및 &lt;code&gt;ipcRenderer&lt;/code&gt; 모듈을 통해 기본 프로세스에서 모든 API에 간접적으로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b70e88b19e2f46234ac6fbb5e859622ac9fd34e6" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules. This is how &lt;code&gt;fs&lt;/code&gt; (used above) and other modules are implemented: They are proxies to remote counterparts in the main process.</source>
          <target state="translated">사전로드 스크립트는 &lt;code&gt;remote&lt;/code&gt; 및 &lt;code&gt;ipcRenderer&lt;/code&gt; 모듈을 통해 기본 프로세스에서 모든 API에 간접적으로 액세스 할 수 있습니다 . 이 어떻게 &lt;code&gt;fs&lt;/code&gt; (상기 사용) 및 다른 모듈이 구현된다 : 그들은 주 공정에 대응 원격 프록시이다.</target>
        </trans-unit>
        <trans-unit id="2f78e0c6f474005db369426975ffe7a44b2b1fc0" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like browserify, as explained below. In fact, browserify is already used by electron to provide a node-like environment to the preload script.</source>
          <target state="translated">사전로드 스크립트는 단일 스크립트에 포함되어야하지만 아래 설명과 같이 browserify와 같은 도구를 사용하여 여러 모듈로 구성된 복잡한 사전로드 코드를 가질 수 있습니다. 실제로, browserify는 전자에 의해 사전로드 스크립트에 노드와 유사한 환경을 제공하기 위해 이미 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b30e464563c2da90a17cf852169063642dfe93f" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like webpack or browserify. An example of using browserify is below.</source>
          <target state="translated">사전로드 스크립트는 단일 스크립트에 포함되어야하지만 webpack 또는 browserify와 같은 도구를 사용하여 여러 모듈로 구성된 복잡한 사전로드 코드를 가질 수 있습니다. 다음은 browserify 사용의 예입니다.</target>
        </trans-unit>
        <trans-unit id="c0de20e0722e9e32fadbeb6c3d6bc00e6d698502" translate="yes" xml:space="preserve">
          <source>The prepare release script will do the following: 1. Check if a release is already in process and if so it will halt. 2. Create a release branch. 3. Bump the version number in several files. See &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;this bump commit&lt;/a&gt; for an example. 4. Create a draft release on GitHub with auto-generated release notes. 5. Push the release branch. 6. Call the APIs to run the release builds.</source>
          <target state="translated">릴리스 준비 스크립트는 다음을 수행합니다. 1. 릴리스가 이미 진행 중인지 확인하고 중지되는지 확인합니다. 2. 릴리스 분기를 작성하십시오. 3. 여러 파일에서 버전 번호를 범프하십시오. 예를 보려면 &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;이 범프 커밋&lt;/a&gt; 을 참조하십시오 . 4. 자동 생성 된 릴리스 노트와 함께 GitHub에서 드래프트 릴리스를 만듭니다. 5. 분리 분기를 밉니다. 6. API를 호출하여 릴리스 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f58a8b975b36977ca2a1bde930770d09c3751eb7" translate="yes" xml:space="preserve">
          <source>The process is as follows:</source>
          <target state="translated">과정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1fed7eb7dde4512e1088780c53a8156a465c3492" translate="yes" xml:space="preserve">
          <source>The properties chapter must be in following form:</source>
          <target state="translated">속성 장은 다음 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="325a37750152543c028c0dff462aed925ab2175d" translate="yes" xml:space="preserve">
          <source>The property is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the property, Electron will use the original routine to determine the save path; this usually prompts a save dialog.</source>
          <target state="translated">이 속성은 세션의 &lt;code&gt;will-download&lt;/code&gt; 콜백 함수 에서만 사용할 수 있습니다 . 사용자가 속성을 통해 저장 경로를 설정하지 않으면 Electron은 원래 루틴을 사용하여 저장 경로를 결정합니다. 일반적으로 저장 대화 상자가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="4c16399b3abfc9798f8cf1c54ca267905ac305a5" translate="yes" xml:space="preserve">
          <source>The proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a &lt;code&gt;BrowserWindow&lt;/code&gt; directly.</source>
          <target state="translated">프록시에는 기존 웹 페이지와 호환되도록 구현 된 표준 기능이 제한되어 있습니다. 새 창을 완전히 제어하려면 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 직접 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2a74a089870f759abb070bd97c8dddd8e844205d" translate="yes" xml:space="preserve">
          <source>The proxy integration guide has been updated with information about VMP and how to issue licenses.</source>
          <target state="translated">프록시 통합 가이드가 VMP 및 라이선스 발급 방법에 대한 정보로 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="9a6fa26160950d1d5c7d20ce90db23dece65acbd" translate="yes" xml:space="preserve">
          <source>The reasoning behind this recommendation is best illustrated with a real-world example. During the early days of Electron, reliable detection of network connectivity was a problem, resulting many apps to use a module that exposed a simple &lt;code&gt;isOnline()&lt;/code&gt; method.</source>
          <target state="translated">이 권장 사항에 대한 이유는 실제 사례를 통해 가장 잘 설명됩니다. Electron의 초기에는 네트워크 연결을 안정적으로 감지하는 것이 문제 였고, 그 결과 많은 앱이 간단한 &lt;code&gt;isOnline()&lt;/code&gt; 메서드 를 노출하는 모듈을 사용하게 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d62acec7161c9eae787e85b88bb317c13c293e51" translate="yes" xml:space="preserve">
          <source>The registered or intercepted protocol does not have effect on current page until navigation happens.</source>
          <target state="translated">등록되거나 차단 된 프로토콜은 탐색이 발생할 때까지 현재 페이지에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d39a0732f25a151147d1983ff440c2024a57074" translate="yes" xml:space="preserve">
          <source>The renderer process can handle the message by listening to &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">렌더러 프로세스는 &lt;a href=&quot;api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ed14764967dcc3afa5cf06693453c5de6781001" translate="yes" xml:space="preserve">
          <source>The renderer process can handle the message by listening to &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">렌더러 프로세스는 &lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 청취하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="6357d30e30adeab3af7b2ad8bc2f9d5463155c10" translate="yes" xml:space="preserve">
          <source>The renderer process is a browser window in your app. Unlike the main process, there can be multiple of these and each is run in a separate process. They can also be hidden.</source>
          <target state="translated">렌더러 프로세스는 앱의 브라우저 창입니다. 기본 프로세스와 달리 이들 중 여러 개가있을 수 있으며 각각 별도의 프로세스에서 실행됩니다. 숨길 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2981d6faaf1e0d9461c1a14f3f83abf43711910d" translate="yes" xml:space="preserve">
          <source>The renderer process is no different than a normal web page, except for the extra ability to use node modules:</source>
          <target state="translated">렌더러 프로세스는 노드 모듈을 사용하는 추가 기능을 제외하고 일반 웹 페이지와 다르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="18cb258290471e07e5419bb6084466ad2d4c6d44" translate="yes" xml:space="preserve">
          <source>The return value of this method indicates whether or not this instance of your application successfully obtained the lock. If it failed to obtain the lock, you can assume that another instance of your application is already running with the lock and exit immediately.</source>
          <target state="translated">이 메서드의 반환 값은 응용 프로그램의이 인스턴스가 성공적으로 잠금을 획득했는지 여부를 나타냅니다. 잠금을 얻지 못한 경우 응용 프로그램의 다른 인스턴스가 이미 잠금과 함께 실행 중이라고 가정하고 즉시 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="060a98827d81456db3d844f3631a6ef323b8751f" translate="yes" xml:space="preserve">
          <source>The risk to meeting our stability timeline must be low.</source>
          <target state="translated">안정성 타임 라인을 준수 할 위험은 낮아야합니다.</target>
        </trans-unit>
        <trans-unit id="276a0fb055f387caa3a6309b20a6d89174096aac" translate="yes" xml:space="preserve">
          <source>The simplest and the fastest way to distribute your newly created app is using &lt;a href=&quot;https://www.electronforge.io&quot;&gt;Electron Forge&lt;/a&gt;.</source>
          <target state="translated">새로 만든 앱을 배포하는 가장 간단하고 빠른 방법은 &lt;a href=&quot;https://www.electronforge.io&quot;&gt;Electron Forge를 사용하는 것&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fee4c15168b7bd8906486990b32196cc673c0da4" translate="yes" xml:space="preserve">
          <source>The source code of Electron is separated into a few parts, mostly following Chromium on the separation conventions.</source>
          <target state="translated">Electron의 소스 코드는 분리 규칙에서 주로 Chromium에 따라 몇 부분으로 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="4a11b559f814a1c283145da0379f6db69b8584d1" translate="yes" xml:space="preserve">
          <source>The string follows the same format as the features string in &lt;code&gt;window.open&lt;/code&gt;. A name by itself is given a &lt;code&gt;true&lt;/code&gt; boolean value. A preference can be set to another value by including an &lt;code&gt;=&lt;/code&gt;, followed by the value. Special values &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; are interpreted as &lt;code&gt;true&lt;/code&gt;, while &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are interpreted as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열은 &lt;code&gt;window.open&lt;/code&gt; 의 기능 문자열과 동일한 형식을 따릅니다 . 이름 자체에는 &lt;code&gt;true&lt;/code&gt; 부울 값이 제공됩니다. &lt;code&gt;=&lt;/code&gt; 다음에 값을 포함시켜 환경 설정을 다른 값으로 설정할 수 있습니다 . 특수 값의 &lt;code&gt;yes&lt;/code&gt; 와 &lt;code&gt;1&lt;/code&gt; 로 해석된다 &lt;code&gt;true&lt;/code&gt; 동안, &lt;code&gt;no&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 으로 해석됩니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaf00317265afc530080d71d6dca62e5c84a8698" translate="yes" xml:space="preserve">
          <source>The structure of a renamed app would be like:</source>
          <target state="translated">이름이 바뀐 앱의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="73486408f7df590f679558598df61e43dde99a57" translate="yes" xml:space="preserve">
          <source>The synchronous &lt;code&gt;shell.moveItemToTrash()&lt;/code&gt; has been replaced by the new, asynchronous &lt;code&gt;shell.trashItem()&lt;/code&gt;.</source>
          <target state="translated">동기식 &lt;code&gt;shell.moveItemToTrash()&lt;/code&gt; 가 새로운 비동기식 &lt;code&gt;shell.trashItem()&lt;/code&gt; 으로 대체되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67a8d7f6afed863abbf3f06aadab5f58af8f441f" translate="yes" xml:space="preserve">
          <source>The title can be &lt;code&gt;###&lt;/code&gt; or &lt;code&gt;####&lt;/code&gt;-levels depending on whether it is a method of a module or a class.</source>
          <target state="translated">제목은 모듈의 메서드인지 클래스인지에 따라 &lt;code&gt;###&lt;/code&gt; 또는 &lt;code&gt;####&lt;/code&gt; 수준이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2a18df75c1d85b23f351ccf70500c00ca274087" translate="yes" xml:space="preserve">
          <source>The title can be &lt;code&gt;###&lt;/code&gt; or &lt;code&gt;####&lt;/code&gt;-levels depending on whether it is a property of a module or a class.</source>
          <target state="translated">제목은 모듈 속성인지 클래스 속성인지에 따라 &lt;code&gt;###&lt;/code&gt; 또는 &lt;code&gt;####&lt;/code&gt; 수준이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f6298a87a9e13f60808659f64d9927a238f7fd1" translate="yes" xml:space="preserve">
          <source>The title can be &lt;code&gt;###&lt;/code&gt; or &lt;code&gt;####&lt;/code&gt;-levels depending on whether it is an event of a module or a class.</source>
          <target state="translated">제목은 모듈 이벤트인지 클래스 이벤트인지에 따라 &lt;code&gt;###&lt;/code&gt; 또는 &lt;code&gt;####&lt;/code&gt; 레벨이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="113a554d85bba13788dcd37e9e9f3ed6f8338054" translate="yes" xml:space="preserve">
          <source>The tools will now meticulously record all network requests. In a first pass, take stock of all the resources being downloaded, focusing on the larger files first. Are any of them images, fonts, or media files that don't change and could be included with your bundle? If so, include them.</source>
          <target state="translated">이제 도구는 모든 네트워크 요청을 꼼꼼하게 기록합니다. 첫 번째 단계에서는 먼저 더 큰 파일에 중점을두고 다운로드중인 모든 리소스를 살펴 봅니다. 변경되지 않고 번들에 포함될 수있는 이미지, 글꼴 또는 미디어 파일이 있습니까? 그렇다면 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="cc7693ce1e285d2c415bac1b5c914d37430aa520" translate="yes" xml:space="preserve">
          <source>The trace option will first be reset to the default option (&lt;code&gt;record_mode&lt;/code&gt; set to &lt;code&gt;record-until-full&lt;/code&gt;, &lt;code&gt;enable_sampling&lt;/code&gt; and &lt;code&gt;enable_systrace&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;) before options parsed from &lt;code&gt;traceOptions&lt;/code&gt; are applied on it.</source>
          <target state="translated">&lt;code&gt;record_mode&lt;/code&gt; 에서 구문 분석 된 옵션 이 적용 되기 전에 추적 옵션이 기본 옵션 ( record_mode 는 &lt;code&gt;record-until-full&lt;/code&gt; , &lt;code&gt;enable_sampling&lt;/code&gt; 및 &lt;code&gt;enable_systrace&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정 됨 )으로 &lt;code&gt;traceOptions&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="a1f336b42cb0746123ac41be5b4cf1ea7fa05942" translate="yes" xml:space="preserve">
          <source>The transferred &lt;code&gt;MessagePort&lt;/code&gt; objects will be available in the main process as &lt;a href=&quot;api/message-port-main&quot;&gt;&lt;code&gt;MessagePortMain&lt;/code&gt;&lt;/a&gt; objects by accessing the &lt;code&gt;ports&lt;/code&gt; property of the emitted event.</source>
          <target state="translated">전송 된 &lt;code&gt;MessagePort&lt;/code&gt; 개체는 생성 된 이벤트 의 &lt;code&gt;ports&lt;/code&gt; 속성 에 액세스하여 주 프로세스에서 &lt;a href=&quot;api/message-port-main&quot;&gt; &lt;code&gt;MessagePortMain&lt;/code&gt; &lt;/a&gt; 개체 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f1af3873fd08be12d0ac8b382cad1cdf4f1c9db" translate="yes" xml:space="preserve">
          <source>The transferred &lt;code&gt;MessagePort&lt;/code&gt; objects will be available in the main process as &lt;a href=&quot;message-port-main&quot;&gt;&lt;code&gt;MessagePortMain&lt;/code&gt;&lt;/a&gt; objects by accessing the &lt;code&gt;ports&lt;/code&gt; property of the emitted event.</source>
          <target state="translated">전송 된 &lt;code&gt;MessagePort&lt;/code&gt; 개체는 생성 된 이벤트 의 &lt;code&gt;ports&lt;/code&gt; 속성 에 액세스하여 주 프로세스에서 &lt;a href=&quot;message-port-main&quot;&gt; &lt;code&gt;MessagePortMain&lt;/code&gt; &lt;/a&gt; 개체 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4c24f47482fc123fcac874f77e2c0762d367212" translate="yes" xml:space="preserve">
          <source>The transferred &lt;code&gt;MessagePortMain&lt;/code&gt; objects will be available in the renderer process by accessing the &lt;code&gt;ports&lt;/code&gt; property of the emitted event. When they arrive in the renderer, they will be native DOM &lt;code&gt;MessagePort&lt;/code&gt; objects.</source>
          <target state="translated">전송 된 &lt;code&gt;MessagePortMain&lt;/code&gt; 개체는 생성 된 이벤트 의 &lt;code&gt;ports&lt;/code&gt; 속성 에 액세스하여 렌더러 프로세스에서 사용할 수 있습니다 . 렌더러에 도착하면 네이티브 DOM &lt;code&gt;MessagePort&lt;/code&gt; 개체가됩니다.</target>
        </trans-unit>
        <trans-unit id="6aebac9da6bd250ae1889e17eabd700eb379b422" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It easier to fix a bug if it can be reproduced.</source>
          <target state="translated">보고서를 평가하는 데 필요한 가장 중요한 두 가지 정보는 버그에 대한 설명과이를 재현하기위한 간단한 테스트 사례입니다. 재현 할 수 있으면 버그를 수정하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="5e624be9746c71671b51f7854a519ac5b3682e7c" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It is easier to fix a bug if it can be reproduced.</source>
          <target state="translated">보고서를 평가하는 데 필요한 가장 중요한 두 가지 정보는 버그에 대한 설명과이를 재현하기위한 간단한 테스트 케이스입니다. 버그를 재현 할 수 있으면 수정하는 것이 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="a449aea3f35918b88ea1e6b94d950e512a220b9e" translate="yes" xml:space="preserve">
          <source>The usage is similar to the other &lt;code&gt;register{Any}Protocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Readable&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;statusCode&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;Readable&lt;/code&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;statusCode&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 사용법은 다른 &lt;code&gt;register{Any}Protocol&lt;/code&gt; 과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="0e29064371b53ab87cf5883c7553528c19473590" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;api/app#event-certificate-error&quot;&gt;the &lt;code&gt;certificate-error&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;api/app#event-certificate-error&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;certificate-error&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="cf541f53b596555d110d30baa4dd234c23b65ab0" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;api/app#event-login&quot;&gt;the &lt;code&gt;login&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;api/app#event-login&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;login&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="fbb292be7c95cb22e04c7d9b2e52daaa4e8622f8" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;api/app#event-select-client-certificate&quot;&gt;the &lt;code&gt;select-client-certificate&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;api/app#event-select-client-certificate&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;select-client-certificate&lt;/code&gt; 이벤트와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="9812fb60be5cc4cec7a4283a492d96ea38c7d135" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-certificate-error&quot;&gt;the &lt;code&gt;certificate-error&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-certificate-error&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;certificate-error&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="18eabd0a931c3b6ea20fb4f5ade4b250dc83120d" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-login&quot;&gt;the &lt;code&gt;login&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-login&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;login&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="b250244d415c277c40e8184450593465b1879846" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-select-client-certificate&quot;&gt;the &lt;code&gt;select-client-certificate&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-select-client-certificate&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;select-client-certificate&lt;/code&gt; 이벤트와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="ace9b5626e9a6055f530d59320c339f2a079923b" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with a &lt;code&gt;redirectRequest&lt;/code&gt; object that has the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, &lt;code&gt;uploadData&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt; , &lt;code&gt;referrer&lt;/code&gt; , &lt;code&gt;uploadData&lt;/code&gt; 및 &lt;code&gt;session&lt;/code&gt; 속성 이 있는 &lt;code&gt;redirectRequest&lt;/code&gt; 객체로 &lt;code&gt;callback&lt;/code&gt; 해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c354deec33e2861b78b407e0fb6f5660f9895b9c" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with an object that has the &lt;code&gt;url&lt;/code&gt; property.</source>
          <target state="translated">사용법은 &lt;code&gt;url&lt;/code&gt; 속성 이있는 객체로 &lt;code&gt;callback&lt;/code&gt; 해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="73cd03309bce27e45f46724e30c057b7c9a0c160" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">사용법은 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 동일합니다. 단, &lt;code&gt;callback&lt;/code&gt; 은 &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_class_stream_readable&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; 속성 이있는 객체 와 함께 호출 되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="87744ebc0a31f212643d2989eac5b715628df5ea" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">사용법은 &lt;code&gt;Buffer&lt;/code&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; 속성 이있는 객체를 사용 하여 &lt;code&gt;callback&lt;/code&gt; 해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0aaf6840393ba02debae0d4c1295f27cd0ce66e0" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;Buffer&lt;/code&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;mimeType&lt;/code&gt; 및 &lt;code&gt;charset&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e32822d385bb4791bd20a3983be7890c2d12ab75" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt; property.</source>
          <target state="translated">사용법은 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 동일합니다. 단, &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;data&lt;/code&gt; 속성 이있는 객체를 사용 하여 호출 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="03748049d6ae04e4d12dbb56a6a1247729c2d706" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;mimeType&lt;/code&gt; 및 &lt;code&gt;charset&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7189e6a417d94da2937de6349a31b69e3c021fee" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;selenium-webdriver&lt;/code&gt; with Electron is the same with upstream, except that you have to manually specify how to connect chrome driver and where to find Electron's binary:</source>
          <target state="translated">크롬 드라이버를 연결하는 방법과 Electron의 바이너리를 찾을 위치를 수동으로 지정해야한다는 점을 제외하고 Electron과 함께 &lt;code&gt;selenium-webdriver&lt;/code&gt; 를 사용하는 것은 업스트림과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d829ae8bd7aaf95ae015ca22fcc799a3b6fa3712" translate="yes" xml:space="preserve">
          <source>The usage of this property should align with a classic &quot;dark mode&quot; state machine in your application where the user has three options.</source>
          <target state="translated">이 속성의 사용은 사용자에게 세 가지 옵션이있는 애플리케이션의 클래식 &quot;다크 모드&quot;상태 시스템과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4acbb045832bbb7de008cac348c1d6a07239b61c" translate="yes" xml:space="preserve">
          <source>The user tasks will still show even after your application closes, so the icon and program path specified for a task should exist until your application is uninstalled.</source>
          <target state="translated">응용 프로그램을 닫은 후에도 사용자 작업이 계속 표시되므로 응용 프로그램을 제거 할 때까지 작업에 지정된 아이콘과 프로그램 경로가 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9b99637f2515a34e3bbf90ecfdac697c2461d7d" translate="yes" xml:space="preserve">
          <source>The vast majority of Node.js modules are &lt;em&gt;not&lt;/em&gt; native. Only 400 out of the ~650.000 modules are native. However, if you do need native modules, please consult &lt;a href=&quot;using-native-node-modules&quot;&gt;this guide on how to recompile them for Electron&lt;/a&gt;.</source>
          <target state="translated">Node.js 모듈의 대부분은 네이티브 가 &lt;em&gt;아닙니다&lt;/em&gt; . ~ 650.000 개 모듈 중 400 개만 기본 모듈입니다. 그러나 기본 모듈이 필요한 경우 &lt;a href=&quot;using-native-node-modules&quot;&gt;Electron에 대해 다시 컴파일하는 방법에 대해서는이 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fd8026d813ea905232959978e568e2de6501e83" translate="yes" xml:space="preserve">
          <source>The version update process is detailed explicitly in our &lt;a href=&quot;electron-versioning&quot;&gt;Versioning Doc&lt;/a&gt;.</source>
          <target state="translated">버전 업데이트 프로세스는 &lt;a href=&quot;electron-versioning&quot;&gt;버전 관리 문서에&lt;/a&gt; 명시 적으로 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fca882e172462489277d043917c2c2af6fc1608" translate="yes" xml:space="preserve">
          <source>The workflow to format your changed code:</source>
          <target state="translated">변경된 코드를 형식화하는 워크 플로우 :</target>
        </trans-unit>
        <trans-unit id="4985f62db91e0a32e175c47bf1e920ee7ed7296a" translate="yes" xml:space="preserve">
          <source>The zoom factor is the zoom percent divided by 100, so 300% = 3.0.</source>
          <target state="translated">확대 / 축소 비율은 확대 / 축소 비율을 100으로 나눈 값이므로 300 % = 3.0입니다.</target>
        </trans-unit>
        <trans-unit id="2669c327c063205625472ade42ce230661b243b9" translate="yes" xml:space="preserve">
          <source>Then execute &lt;code&gt;Electron.app&lt;/code&gt; (or &lt;code&gt;electron&lt;/code&gt; on Linux, &lt;code&gt;electron.exe&lt;/code&gt; on Windows), and Electron will start as your app. The &lt;code&gt;electron&lt;/code&gt; directory will then be your distribution to deliver to final users.</source>
          <target state="translated">그런 다음 실행 &lt;code&gt;Electron.app&lt;/code&gt; (또는 &lt;code&gt;electron&lt;/code&gt; , 리눅스에 &lt;code&gt;electron.exe&lt;/code&gt; Windows에서), 및 전자 앱으로 시작됩니다. 그러면 &lt;code&gt;electron&lt;/code&gt; 디렉터리가 최종 사용자에게 배포 할 배포판이됩니다.</target>
        </trans-unit>
        <trans-unit id="9fd24e6b8c7964a9f85124ee0cb90aa5f8b951f4" translate="yes" xml:space="preserve">
          <source>Then file a bug at Electron's issues list, and describe which part of the extension is not working as expected.</source>
          <target state="translated">그런 다음 Electron의 문제 목록에 버그를 신고하고 확장의 어느 부분이 예상대로 작동하지 않는지 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="ea169d72ec8fb9e58317d4d8c139e8146a8d2349" translate="yes" xml:space="preserve">
          <source>Then manually create distributions for each platform and upload them:</source>
          <target state="translated">그런 다음 각 플랫폼에 대한 배포를 수동으로 생성하고 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="71075abbb4d96721b9fee736eb07204752987288" translate="yes" xml:space="preserve">
          <source>Then, assuming that the Xcode 6.4 DMG has been mounted at &lt;code&gt;/Volumes/Xcode&lt;/code&gt; and that your Xcode 8.2.1 install is at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;, run:</source>
          <target state="translated">그런 다음 Xcode 6.4 DMG가 &lt;code&gt;/Volumes/Xcode&lt;/code&gt; 에 마운트되었고 Xcode 8.2.1 설치가 &lt;code&gt;/Applications/Xcode.app&lt;/code&gt; 에 있다고 가정하면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="17f260b69ef590512ec04d500bb15b4db31d97ba" translate="yes" xml:space="preserve">
          <source>Then, create a virtual Xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Ana&amp;iuml;s Betts' &lt;a href=&quot;https://github.com/anaisbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure Xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="translated">그런 다음 가상 Xvfb 화면을 만들고이를 가리키는 DISPLAY라는 환경 변수를 내 보냅니다. Electron의 Chromium은 자동으로 &lt;code&gt;$DISPLAY&lt;/code&gt; 를 검색하므로 앱을 더 이상 구성 할 필요가 없습니다. 이 단계는 아나이스 베츠 '로 자동화 할 수 있습니다 &lt;a href=&quot;https://github.com/anaisbetts/xvfb-maybe&quot;&gt;Xvfb가 - 어쩌면&lt;/a&gt; : 앞에 추가로 테스트 명령 &lt;code&gt;xvfb-maybe&lt;/code&gt; 과 작은 도구가 자동으로 Xvfb가 구성합니다, 현재 시스템에 의해 필요한 경우. Windows 또는 macOS에서는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b200704d3fdd92791b2627d608e135073603845" translate="yes" xml:space="preserve">
          <source>Then, create a virtual xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Paul Betts's &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="translated">그런 다음 가상 xvfb 화면을 만들고이를 가리키는 DISPLAY라는 환경 변수를 내 보냅니다. Electron in Chron은 &lt;code&gt;$DISPLAY&lt;/code&gt; 자동으로 찾으 므로 더 이상 앱을 구성 할 필요가 없습니다. 이 단계는 폴 베츠의 자동화 할 수 &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;Xvfb가 - 어쩌면&lt;/a&gt; : 앞에 추가에게 테스트 명령을 함께 &lt;code&gt;xvfb-maybe&lt;/code&gt; 및 작은 도구를 자동으로 구성 Xvfb가, 현재의 시스템에 의해 필요한 경우. Windows 또는 macOS에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55bf9c6f8ac8ab1bf6778b2f1394facf290c2989" translate="yes" xml:space="preserve">
          <source>Then, go and install the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI:</source>
          <target state="translated">그런 다음 &lt;code&gt;electron-windows-store&lt;/code&gt; CLI를 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="72eb15729a4805941d065f88ea8bbb5580ab8d49" translate="yes" xml:space="preserve">
          <source>Then, in the main process, augment the event with a path to the file that is being dragged and an icon.</source>
          <target state="translated">그런 다음 기본 프로세스에서 끌고있는 파일의 경로와 아이콘으로 이벤트를 보강하십시오.</target>
        </trans-unit>
        <trans-unit id="f4a1638ecbe326cf45f914f93c15a4be6dfe94c3" translate="yes" xml:space="preserve">
          <source>Then, in your Electron app, require and use the module as if you were building a Node.js application:</source>
          <target state="translated">그런 다음 Electron 앱에서 Node.js 애플리케이션을 빌드하는 것처럼 모듈을 요구하고 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b67b8ffae2dec5a6bf15577c384acab9c3035a9e" translate="yes" xml:space="preserve">
          <source>Then, in your Electron application, require the module:</source>
          <target state="translated">그런 다음 Electron 애플리케이션에서 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="acfbc37bb35b8dc64a08678926284923f14178bb" translate="yes" xml:space="preserve">
          <source>Then, in your test suite, you can use your test-driver as follows:</source>
          <target state="translated">그런 다음 테스트 스위트에서 다음과 같이 테스트 드라이버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64075cebafe989152ef2fc4e1a534bec9aaa1ec0" translate="yes" xml:space="preserve">
          <source>Then, open up Visual Studio. Electron is not built with Visual Studio and hence does not contain a project file - you can however open up the source code files &quot;As File&quot;, meaning that Visual Studio will open them up by themselves. You can still set breakpoints - Visual Studio will automatically figure out that the source code matches the code running in the attached process and break accordingly.</source>
          <target state="translated">그런 다음 Visual Studio를 엽니 다. Electron은 Visual Studio로 빌드되지 않았으므로 프로젝트 파일을 포함하지 않습니다. 그러나 소스 코드 파일 &quot;As File&quot;을 열 수 있습니다. 즉, Visual Studio에서 직접 열 수 있습니다. 여전히 중단 점을 설정할 수 있습니다. Visual Studio는 소스 코드가 첨부 된 프로세스에서 실행중인 코드와 일치하는지 자동으로 파악하여 그에 따라 중단합니다.</target>
        </trans-unit>
        <trans-unit id="152c8ff56637023c5f144e0e8dc5699f53302f41" translate="yes" xml:space="preserve">
          <source>Then, run Electron with &lt;code&gt;electron/spec&lt;/code&gt; as the argument:</source>
          <target state="translated">그런 다음 &lt;code&gt;electron/spec&lt;/code&gt; 을 인수로 사용하여 Electron을 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="972c4a60ba2c597025cda850862a151cdd4dc6af" translate="yes" xml:space="preserve">
          <source>Then, run the installation of the Desktop App Converter, passing in the location of the Windows base Image (downloaded as &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;), by calling &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt; 을 호출 하여 Windows 기본 이미지 ( &lt;code&gt;BaseImage-14316.wim&lt;/code&gt; 으로 다운로드)의 위치를 ​​전달하여 Desktop App Converter 설치를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb5cf5c469151c5f14d54bfb8a272e43396cc203" translate="yes" xml:space="preserve">
          <source>Then, start Electron:</source>
          <target state="translated">그런 다음 Electron을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="45ddb09189f3d7087a7050982078022d3abfa53b" translate="yes" xml:space="preserve">
          <source>Then, you need to prepare three entitlements files.</source>
          <target state="translated">그런 다음 세 가지 자격 파일을 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c4e9d318559cb234d0162bb4b4d4b0fd556a59b" translate="yes" xml:space="preserve">
          <source>Then, you'll need to configure your in-app purchases in iTunes Connect, and include details such as name, pricing, and description that highlights the features and functionality of your in-app purchase.</source>
          <target state="translated">그런 다음 iTunes Connect에서 인앱 구매를 구성하고 인앱 구매의 기능을 강조하는 이름, 가격 및 설명과 같은 세부 정보를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="192ebec0df374f64d0b3dc1a9afedd99cf52b5e4" translate="yes" xml:space="preserve">
          <source>There are Node APIs that can execute binaries like &lt;code&gt;child_process.exec&lt;/code&gt;, &lt;code&gt;child_process.spawn&lt;/code&gt; and &lt;code&gt;child_process.execFile&lt;/code&gt;, but only &lt;code&gt;execFile&lt;/code&gt; is supported to execute binaries inside &lt;code&gt;asar&lt;/code&gt; archive.</source>
          <target state="translated">&lt;code&gt;child_process.exec&lt;/code&gt; , &lt;code&gt;child_process.spawn&lt;/code&gt; 및 &lt;code&gt;child_process.execFile&lt;/code&gt; 과 같은 이진 파일을 실행할 수있는 노드 API가 있지만 &lt;code&gt;asar&lt;/code&gt; 아카이브 내에서 이진 파일을 실행하려면 &lt;code&gt;execFile&lt;/code&gt; 만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1c9a4723ba431993a248218effc57c06ba7510c" translate="yes" xml:space="preserve">
          <source>There are a handful of &lt;code&gt;*_TOKEN&lt;/code&gt; environment variables needed by the release scripts. Once you've generated these per-user tokens, you may want to keep them in a local file that you can &lt;code&gt;source&lt;/code&gt; when starting a release.</source>
          <target state="translated">릴리스 스크립트에 필요한 소수의 &lt;code&gt;*_TOKEN&lt;/code&gt; 환경 변수가 있습니다. 이러한 사용자 별 토큰을 생성하면, 당신은 당신이 할 수있는 로컬 파일에 보관하는 것이 좋습니다 &lt;code&gt;source&lt;/code&gt; 릴리스를 시작할 때.</target>
        </trans-unit>
        <trans-unit id="5c977ee526b253faabfc2e1542328fbc400b282b" translate="yes" xml:space="preserve">
          <source>There are a number of more advanced mechanisms for managing commits using &lt;code&gt;git rebase&lt;/code&gt; that can be used, but are beyond the scope of this guide.</source>
          <target state="translated">사용할 수 있지만 &lt;code&gt;git rebase&lt;/code&gt; 를 사용하여 커밋을 관리하는 고급 메커니즘이 많이 있지만이 가이드의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="9a9ef43ccd8caf2e708ab5074e4e0abb3c1ab637" translate="yes" xml:space="preserve">
          <source>There are a number of tools for signing your packaged app:</source>
          <target state="translated">패키지 앱에 서명하기위한 여러 가지 도구가 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
