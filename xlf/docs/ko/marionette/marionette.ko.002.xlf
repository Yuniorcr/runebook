<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="marionette">
    <body>
      <group id="marionette">
        <trans-unit id="ba846a79bd719082b066bf9828c5cc12471dddd5" translate="yes" xml:space="preserve">
          <source>This will immediately render &lt;code&gt;RootView&lt;/code&gt; and fire the usual triggers such as &lt;code&gt;before:attach&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; in addition to the &lt;code&gt;before:render&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; triggers.</source>
          <target state="translated">그러면 즉시 &lt;code&gt;RootView&lt;/code&gt; 가 &lt;code&gt;before:render&lt;/code&gt; 되고 before : render 및 &lt;code&gt;render&lt;/code&gt; 트리거 외에도 &lt;code&gt;before:attach&lt;/code&gt; 및 &lt;code&gt;attach&lt;/code&gt; 와 같은 일반적인 트리거가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6036b3f89eadab59588436b50c4978006bf0e1d9" translate="yes" xml:space="preserve">
          <source>This will set a trigger called &lt;code&gt;show:link&lt;/code&gt; that will be fired whenever the user clicks an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; inside the view.</source>
          <target state="translated">그러면 사용자 가보기 내에서 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 를 클릭 할 때마다 발생하는 &lt;code&gt;show:link&lt;/code&gt; 라는 트리거가 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="456c43b09b336f08ddb24cec398ee7def4d28650" translate="yes" xml:space="preserve">
          <source>This works exactly the same way for the &lt;code&gt;CollectionView&lt;/code&gt; and its &lt;code&gt;childView&lt;/code&gt;:</source>
          <target state="translated">이것은 &lt;code&gt;CollectionView&lt;/code&gt; 와 &lt;code&gt;childView&lt;/code&gt; 에 대해 정확히 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="a0e5d6fc6540f6a4a35402d2e364a692502e6493" translate="yes" xml:space="preserve">
          <source>To access an option, we use the &lt;code&gt;getOption&lt;/code&gt; method. &lt;code&gt;getOption&lt;/code&gt; will fall back to the value of the same name defined on the instance if not defined in the options.</source>
          <target state="translated">옵션에 접근하기 위해 &lt;code&gt;getOption&lt;/code&gt; 메소드를 사용합니다 . &lt;code&gt;getOption&lt;/code&gt; 은 옵션에 정의되지 않은 경우 인스턴스에 정의 된 것과 동일한 이름의 값으로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="385ec0005897ad7ef03ed0e1ae25df2f7c906b0d" translate="yes" xml:space="preserve">
          <source>To access the child view of a &lt;code&gt;View&lt;/code&gt; - use the &lt;code&gt;getChildView(regionName)&lt;/code&gt; method. This will return the view instance that is currently being displayed at that region, or &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">a의 아이 뷰에 액세스하려면 &lt;code&gt;View&lt;/code&gt; 사용 - &lt;code&gt;getChildView(regionName)&lt;/code&gt; 방법을. 현재 해당 지역에 표시되고있는 뷰 인스턴스를 반환하거나 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e09ccf0e50ea605bfa1582d030f943579d7a8e22" translate="yes" xml:space="preserve">
          <source>To add regions to a view after it has been instantiated, simply use the &lt;code&gt;addRegion&lt;/code&gt; method:</source>
          <target state="translated">인스턴스화 된 후보기에 영역을 추가하려면 &lt;code&gt;addRegion&lt;/code&gt; 메소드 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="77c69489cc6b8e216db8fb3411eb0032e2d28bf0" translate="yes" xml:space="preserve">
          <source>To call specific functions on event triggers, use the &lt;code&gt;childViewEvents&lt;/code&gt; attribute to map child events to methods on the parent view. This takes events fired on child views - &lt;em&gt;without the &lt;code&gt;childview:&lt;/code&gt; prefix&lt;/em&gt; - and calls the method referenced or attached function.</source>
          <target state="translated">이벤트 트리거에서 특정 함수를 호출하려면 &lt;code&gt;childViewEvents&lt;/code&gt; 속성을 사용 하여 상위 이벤트의 메소드에 하위 이벤트를 맵핑하십시오. &lt;em&gt; &lt;code&gt;childview:&lt;/code&gt; &lt;/em&gt;&lt;em&gt; 접두사 &lt;/em&gt;&lt;em&gt;없이&lt;/em&gt; 자식 뷰에서 발생한 이벤트를 가져 와서 참조되거나 연결된 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="79e1fd7f064b7a1f1843471f5b702559216b1dde" translate="yes" xml:space="preserve">
          <source>To define your &lt;code&gt;ui&lt;/code&gt; hash, just set an object of named jQuery selectors to the &lt;code&gt;ui&lt;/code&gt; attribute of your View:</source>
          <target state="translated">&lt;code&gt;ui&lt;/code&gt; 해시 를 정의하려면 이름이 지정된 jQuery 선택기의 객체를 View 의 &lt;code&gt;ui&lt;/code&gt; 속성으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7abc66f4bd96d45be84e1e329a175072f29883d6" translate="yes" xml:space="preserve">
          <source>To get the handles to your UI elements, use the &lt;code&gt;getUI(ui)&lt;/code&gt; method:</source>
          <target state="translated">UI 요소에 대한 핸들을 얻으려면 &lt;code&gt;getUI(ui)&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e716dd93ec6ee64d9b43143ccfd78e32e8baadac" translate="yes" xml:space="preserve">
          <source>To implement your own DOM API use &lt;code&gt;setDomApi&lt;/code&gt;:</source>
          <target state="translated">고유 한 DOM API를 구현하려면 &lt;code&gt;setDomApi&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d1a20c4230001ed09b49b1a1ac7e5cb503f700d" translate="yes" xml:space="preserve">
          <source>To overwrite the parent &lt;code&gt;el&lt;/code&gt; of the region with the rendered contents of the inner View, use &lt;code&gt;replaceElement&lt;/code&gt; as so:</source>
          <target state="translated">내부 View의 렌더링 된 내용으로 영역 의 부모 &lt;code&gt;el&lt;/code&gt; 을 덮어 &lt;code&gt;replaceElement&lt;/code&gt; 려면 replaceElement를 다음 과 같이 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f9deb22b277e4bb94fff5287834e0d9c52bede3b" translate="yes" xml:space="preserve">
          <source>To show a view inside a region, simply call &lt;code&gt;showChildView(regionName, view)&lt;/code&gt;. This will handle rendering the view's HTML and attaching it to the DOM for you:</source>
          <target state="translated">리전 내에서 뷰를 표시하려면 &lt;code&gt;showChildView(regionName, view)&lt;/code&gt; 를 호출 하면 됩니다. 뷰의 HTML 렌더링과 DOM에 첨부하는 작업을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="5c2cf42465f9440c172fb46aa4af2a5bef8d79f7" translate="yes" xml:space="preserve">
          <source>To support non-Marionette Views, Marionette uses two flags to determine if it should trigger &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; events on the view. If a custom view throws it's own &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;destroy&lt;/code&gt; events, the related flag should be set to &lt;code&gt;true&lt;/code&gt; to avoid Marionette duplicating these events.</source>
          <target state="translated">비 마리오네트보기를 지원하기 위해, 마리오네트는 트리거 여부를 결정하기 위해 두 플래그를 사용하여 &lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 뷰의 이벤트를. 사용자 정의보기가 자체 &lt;code&gt;render&lt;/code&gt; 또는 &lt;code&gt;destroy&lt;/code&gt; 이벤트 를 발생시키는 경우 Marionette가 이러한 이벤트를 복제하지 않도록 관련 플래그를 &lt;code&gt;true&lt;/code&gt; 로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ee2b9a04ebaa9257d4d6b167e2286bb023fc559c" translate="yes" xml:space="preserve">
          <source>Trigger an event and &lt;a href=&quot;events#onevent-binding&quot;&gt;a corresponding method&lt;/a&gt; on the object. It is the same as &lt;code&gt;Backbone&lt;/code&gt;'s &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt;&lt;code&gt;trigger&lt;/code&gt;&lt;/a&gt; but with the additional method handler.</source>
          <target state="translated">오브젝트에서 이벤트 및 &lt;a href=&quot;events#onevent-binding&quot;&gt;해당 메소드&lt;/a&gt; 를 트리거 하십시오. &lt;code&gt;Backbone&lt;/code&gt; 의 &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt; &lt;code&gt;trigger&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 추가 메소드 핸들러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e09777ec09003d272acf09af53dd2e6503b3c9" translate="yes" xml:space="preserve">
          <source>Trigger an event and a corresponding method on the target object.</source>
          <target state="translated">대상 객체에서 이벤트와 해당 방법을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="2a8d0e1960b68eb1b1a1eec88873b2f67ef3bfc2" translate="yes" xml:space="preserve">
          <source>Triggering Events on Child Events</source>
          <target state="translated">어린이 이벤트에 대한 이벤트 트리거</target>
        </trans-unit>
        <trans-unit id="3db9c7d0afaa943a06bd3243b5f59b986b608ff7" translate="yes" xml:space="preserve">
          <source>Triggering and Listening to Events</source>
          <target state="translated">이벤트 트리거링 및 청취</target>
        </trans-unit>
        <trans-unit id="a908b41dd53060995b60afa5eac5245d704bfa23" translate="yes" xml:space="preserve">
          <source>Unique Client ID</source>
          <target state="translated">고유 한 클라이언트 ID</target>
        </trans-unit>
        <trans-unit id="08adfc1c6dba64d1e18890a8a5f8b0c75a9c03c1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;http://backbonejs.org/#View-template&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classes&quot;&gt;Marionette views&lt;/a&gt; provide a customizable solution for rendering a template with data and placing the results in the DOM.</source>
          <target state="translated">달리 &lt;a href=&quot;http://backbonejs.org/#View-template&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;classes&quot;&gt;마리오네트 뷰는&lt;/a&gt; 데이터와 템플릿을 렌더링 및 DOM에서 결과를 배치하기위한 맞춤형 솔루션을 제공한다.</target>
        </trans-unit>
        <trans-unit id="eaa8cf2db49eecc02170a60d957f17c35ff291f0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Backbone.View&lt;/code&gt; Marionette defines &lt;code&gt;render&lt;/code&gt; and this method should not be overridden. To add functionality to the render use the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Backbone.View&lt;/code&gt; 와 달리 View Marionette는 &lt;code&gt;render&lt;/code&gt; 정의하므로이 방법을 재정의해서는 안됩니다. 렌더에 기능을 추가하려면 &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;before:render&lt;/code&gt; events를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2697109b59f266d9a20453e5d7da360b7e07fcc" translate="yes" xml:space="preserve">
          <source>Unlike managed children there may be cases where you want to insert views to the results of the &lt;code&gt;CollectionView&lt;/code&gt; after the &lt;code&gt;collection&lt;/code&gt; changes, or after sorting and/or filtering. In these cases the solution might depend slightly on the features used on the &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">관리 어린이는 달리 당신은 결과에 대한 전망을 삽입 할 경우가 있습니다 &lt;code&gt;CollectionView&lt;/code&gt; 를 애프터 &lt;code&gt;collection&lt;/code&gt; 변경, 또는 정렬 및 / 또는 필터링 후에는. 이 경우 솔루션은 &lt;code&gt;CollectionView&lt;/code&gt; 에 사용 된 기능에 따라 약간 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8eadc202f0957d4bfc6b14611c2a7f66918eefe6" translate="yes" xml:space="preserve">
          <source>Unlike other &lt;a href=&quot;classes&quot;&gt;Marionette classes&lt;/a&gt;, &lt;code&gt;Behavior&lt;/code&gt;s are not meant to be instantiated except by a view.</source>
          <target state="translated">다른과는 달리 &lt;a href=&quot;classes&quot;&gt;마리오네트 클래스&lt;/a&gt; , &lt;code&gt;Behavior&lt;/code&gt; 들보기 제외 인스턴스화하는 것은 아니다.</target>
        </trans-unit>
        <trans-unit id="2f3485fdf3ae3831ba56f645c6f462d9a81292dd" translate="yes" xml:space="preserve">
          <source>Upgrade Guide</source>
          <target state="translated">업그레이드 안내서</target>
        </trans-unit>
        <trans-unit id="6354643730833ae8a19ce09cf0eabe316905561b" translate="yes" xml:space="preserve">
          <source>Upgrade Guide from v3 to v4</source>
          <target state="translated">v3에서 v4 로의 업그레이드 안내서</target>
        </trans-unit>
        <trans-unit id="5042dde06c5deca547ea7cf100c10c29428d92be" translate="yes" xml:space="preserve">
          <source>Upgrading for Marionette 2.x</source>
          <target state="translated">Marionette 2.x 업그레이드</target>
        </trans-unit>
        <trans-unit id="801e235fc8abe18b2a6d14b993240c622fcdd384" translate="yes" xml:space="preserve">
          <source>Upgrading to Marionette 3</source>
          <target state="translated">마리오네트 3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="79ca5e1cdcd94d90c50f8c8526fa8be123de3df2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isEnabled&lt;/code&gt; if you need to know the state of a feature flag programmatically.</source>
          <target state="translated">프로그래밍 방식으로 기능 플래그의 상태를 알아야하는 경우 &lt;code&gt;isEnabled&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a2cca36be7ffb24a08cff3f8271679e2a01e28d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;setEnabled&lt;/code&gt; to change the value of a flag. While setting a flag at any point may work, these flags are designed to be set before any functionality of Marionette is used. Change flags after at your own risk.</source>
          <target state="translated">&lt;code&gt;setEnabled&lt;/code&gt; 를 사용 하여 플래그 값을 변경하십시오. 어느 시점에서나 플래그를 설정하면 작동 할 수 있지만이 플래그는 마리오네트의 기능을 사용하기 전에 설정되도록 설계되었습니다. 자신의 위험에 따라 플래그를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="65b3d6ff138d53019eb40c4bf6dc16a500369b46" translate="yes" xml:space="preserve">
          <source>Users of versions of Marionette prior to v4 will notice that a router is no longer a &lt;a href=&quot;classes&quot;&gt;bundled class&lt;/a&gt;. The &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter&lt;/a&gt; was extracted and the core library will no longer hold an opinion on routing.</source>
          <target state="translated">v4 이전의 Marionette 버전 사용자는 라우터가 더 이상 &lt;a href=&quot;classes&quot;&gt;번들 클래스&lt;/a&gt; 가 아님을 알게 됩니다 . &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter은&lt;/a&gt; 추출하고 핵심 라이브러리는 더 이상 라우팅에 대하여 의견을 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4f81ffd9345fff8b9320a5e98ae9c9b80c7f7a4" translate="yes" xml:space="preserve">
          <source>Users of versions of Marionette prior to v4 will notice that a router is no longer bundled. The &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter&lt;/a&gt; was extracted and the core library will no longer hold an opinion on routing.</source>
          <target state="translated">v4 이전의 Marionette 버전 사용자는 라우터가 더 이상 번들로 제공되지 않습니다. &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;Marionette.AppRouter은&lt;/a&gt; 추출하고 핵심 라이브러리는 더 이상 라우팅에 대하여 의견을 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="27ee1098a6fd4fb1ea6d962c2f6e7dd69e6d59ab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Behavior&lt;/code&gt;s</source>
          <target state="translated">사용 &lt;code&gt;Behavior&lt;/code&gt; 들</target>
        </trans-unit>
        <trans-unit id="2e05c9e31272e9dd55979bb8ca2a1b61bd5c940e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="433a7a6c6b4879b360bd2ba8e5a45aa7730529a4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;childViewEvents&lt;/code&gt;</source>
          <target state="translated">사용 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;childViewEvents&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="bbfeb8ac783a32ccaa68907f97085f894afcf357" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;childViewTriggers&lt;/code&gt;</source>
          <target state="translated">사용 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;childViewTriggers&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="f3e15d343d39e7253f068049cdedd81febd6f8ca" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;setElement&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="812099ff63e746eaf220dfeeb406a02711016677" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ui&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="a32eea76841ea065691e4cd85f9832e10ddde365" translate="yes" xml:space="preserve">
          <source>Using Behaviors</source>
          <target state="translated">동작 사용</target>
        </trans-unit>
        <trans-unit id="a41a8e686067c9cb12bd676c7f024ac61848f236" translate="yes" xml:space="preserve">
          <source>Using CollectionView</source>
          <target state="translated">CollectionView 사용</target>
        </trans-unit>
        <trans-unit id="bcdc1228190180106763e709593ffa4ec16d4bfb" translate="yes" xml:space="preserve">
          <source>Using ES6 Modules</source>
          <target state="translated">ES6 모듈 사용</target>
        </trans-unit>
        <trans-unit id="b5d38c8595ef59265e40019624551a84d39f934b" translate="yes" xml:space="preserve">
          <source>Using Regions on a view</source>
          <target state="translated">뷰에서 영역 사용</target>
        </trans-unit>
        <trans-unit id="8548b3322caae3fbdf2ec743cb376df724d37bba" translate="yes" xml:space="preserve">
          <source>Using a Custom Renderer</source>
          <target state="translated">커스텀 렌더러 사용</target>
        </trans-unit>
        <trans-unit id="e8a9a88c2df48705f29701dab35d736845b3322d" translate="yes" xml:space="preserve">
          <source>Using a RegionClass</source>
          <target state="translated">RegionClass 사용</target>
        </trans-unit>
        <trans-unit id="9a9f785aefeb293e51dc15c82b88ff674873564a" translate="yes" xml:space="preserve">
          <source>Using a View Without a Template</source>
          <target state="translated">템플릿없이 뷰 사용</target>
        </trans-unit>
        <trans-unit id="3930c0ae98a9da7422b3bb19ebceffe12ba43c1b" translate="yes" xml:space="preserve">
          <source>Using a similar approach is possible to create a region animated with CSS:</source>
          <target state="translated">CSS로 애니메이션 영역을 만들려면 비슷한 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5139be936719c94a0cacdb3ed6a55f248b6f6192" translate="yes" xml:space="preserve">
          <source>Using an object, we must define the &lt;code&gt;behaviorClass&lt;/code&gt; attribute to refer to our behaviors and then add any extra options with keys matching the option we want to override. Any passed options will override the values from &lt;code&gt;options&lt;/code&gt; property.</source>
          <target state="translated">객체를 사용하여 &lt;code&gt;behaviorClass&lt;/code&gt; 속성을 정의하여 비헤이비어 를 참조한 다음 재정의하려는 옵션과 일치하는 키가있는 추가 옵션을 추가해야합니다. 전달 된 옵션은 &lt;code&gt;options&lt;/code&gt; 속성 의 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="ee8bbedd8b4698a28c384cf0c5ee8da8a1e79d62" translate="yes" xml:space="preserve">
          <source>Using regions lets you listen to the events that fire on child views - views attached inside a region. This lets a parent view take action depending on what events are triggered in views it directly owns.</source>
          <target state="translated">리전을 사용하면 하위 뷰에서 발생하는 이벤트 (리전 내부에 연결된 뷰)를들을 수 있습니다. 이를 통해 상위 뷰는 직접 소유 한 뷰에서 트리거되는 이벤트에 따라 조치를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="817982dec535c11f3fa64f999b4704a99b55eadb" translate="yes" xml:space="preserve">
          <source>Using separate &lt;code&gt;View&lt;/code&gt;&lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt; was complicating the API for Marionette needlessly. The new &lt;code&gt;View&lt;/code&gt; replaces all of this and sets a clear recommendation for building layout trees.</source>
          <target state="translated">별도의 &lt;code&gt;View&lt;/code&gt; &lt;code&gt;LayoutView&lt;/code&gt; 와 &lt;code&gt;ItemView&lt;/code&gt; 를 사용 하면 API for Marionette가 불필요하게 복잡해 졌습니다 . 새로운 &lt;code&gt;View&lt;/code&gt; 는이 모든 것을 대체하고 레이아웃 트리 구축을위한 명확한 권장 사항을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2e457fef53b8f802e96ada661387b9d7edd7b7ca" translate="yes" xml:space="preserve">
          <source>Using this process, &lt;code&gt;before:dom:refresh&lt;/code&gt; will call the &lt;code&gt;onBeforeDomRefresh&lt;/code&gt; method. Let's see it in action with a custom event:</source>
          <target state="translated">이 프로세스를 사용하여 &lt;code&gt;before:dom:refresh&lt;/code&gt; 는 &lt;code&gt;onBeforeDomRefresh&lt;/code&gt; 메소드를 호출합니다 . 커스텀 이벤트와 함께 작동하는 것을 보자.</target>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="translated">유틸리티 기능</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="72baf7764f11e9fdad2b2e25816f89717ad66f57" translate="yes" xml:space="preserve">
          <source>Value Attributes</source>
          <target state="translated">가치 속성</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="f79a05b6d0a1a004547c199b4c29b81289a839e5" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;events&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 보기</target>
        </trans-unit>
        <trans-unit id="958bf0cc26ab6c4778a2a3a054ed6b4a74e0fcdb" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 및 &lt;code&gt;triggers&lt;/code&gt; 보기</target>
        </trans-unit>
        <trans-unit id="fa8fbc39825e6de9e0d93562407b13e1711413e5" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;render&lt;/code&gt; is no longer bound to the view</source>
          <target state="translated">뷰 &lt;code&gt;render&lt;/code&gt; 가 더 이상 뷰에 바인딩되지 않습니다</target>
        </trans-unit>
        <trans-unit id="5f6c9eec2c8e0dc3e7d469bd18b62b0cb306a6cc" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggers&lt;/code&gt; 보기</target>
        </trans-unit>
        <trans-unit id="c6729099963f88f60def2ae31117ca53e3d228f8" translate="yes" xml:space="preserve">
          <source>View &lt;code&gt;triggers&lt;/code&gt; Event Object</source>
          <target state="translated">뷰 &lt;code&gt;triggers&lt;/code&gt; 이벤트 객체</target>
        </trans-unit>
        <trans-unit id="845c9b8f7a18b781fac4dac39f6d84a3935a9e8d" translate="yes" xml:space="preserve">
          <source>View DOM Change Events</source>
          <target state="translated">DOM 변경 이벤트보기</target>
        </trans-unit>
        <trans-unit id="3208a18454377ff40072371eec10a744be4da019" translate="yes" xml:space="preserve">
          <source>View DOM proxies</source>
          <target state="translated">DOM 프록시보기</target>
        </trans-unit>
        <trans-unit id="00947c6031ed281f9ca251b90cfbd0e688a881dc" translate="yes" xml:space="preserve">
          <source>View Destroy Events</source>
          <target state="translated">파괴 이벤트보기</target>
        </trans-unit>
        <trans-unit id="a77e6decaadbd6c9dba17ef5c3aebc35f9567bb7" translate="yes" xml:space="preserve">
          <source>View Events</source>
          <target state="translated">이벤트보기</target>
        </trans-unit>
        <trans-unit id="918d0ef653910bf4111dbbaa6534e2857152b632" translate="yes" xml:space="preserve">
          <source>View Lifecycle</source>
          <target state="translated">수명주기보기</target>
        </trans-unit>
        <trans-unit id="074d870b70b1b41e1d454018ceeef8b48f4d6900" translate="yes" xml:space="preserve">
          <source>View Lifecycle and Events</source>
          <target state="translated">수명주기 및 이벤트보기</target>
        </trans-unit>
        <trans-unit id="a553cf4491c12ca67907c1c3087ac69461e952cf" translate="yes" xml:space="preserve">
          <source>View Proxy</source>
          <target state="translated">프록시보기</target>
        </trans-unit>
        <trans-unit id="376fbaa0d3330a5706b4ac1606fb05d61195ed65" translate="yes" xml:space="preserve">
          <source>View Rendering</source>
          <target state="translated">뷰 렌더링</target>
        </trans-unit>
        <trans-unit id="414584a71183ec9fbc09a40fed17fdc2fbc7e2bc" translate="yes" xml:space="preserve">
          <source>View Template Rendering</source>
          <target state="translated">템플릿 렌더링보기</target>
        </trans-unit>
        <trans-unit id="eba22960e41a0a2cea75d1f76196451d4334a96d" translate="yes" xml:space="preserve">
          <source>View data serialization no longer clones the data</source>
          <target state="translated">데이터 직렬화보기가 더 이상 데이터를 복제하지 않음</target>
        </trans-unit>
        <trans-unit id="bcefec5396e82de7065feadaf515526ea6c9a6eb" translate="yes" xml:space="preserve">
          <source>View definition options will not be passed to the view &lt;code&gt;initialize&lt;/code&gt;.</source>
          <target state="translated">뷰 정의 옵션은 뷰 &lt;code&gt;initialize&lt;/code&gt; 로 전달되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f249b1e7dfff899841205e8afe3ef2fcbc6f49bc" translate="yes" xml:space="preserve">
          <source>View entity events</source>
          <target state="translated">엔터티 이벤트보기</target>
        </trans-unit>
        <trans-unit id="10162c4c6ed49922242efffff0171faf523d53b7" translate="yes" xml:space="preserve">
          <source>View events and triggers</source>
          <target state="translated">이벤트 및 트리거보기</target>
        </trans-unit>
        <trans-unit id="9b412532146b50bb3609207aa033765c1d50e7f6" translate="yes" xml:space="preserve">
          <source>View is constructed</source>
          <target state="translated">보기 구성</target>
        </trans-unit>
        <trans-unit id="b87d354b5fd262dda1354f87d29a631c598c7b67" translate="yes" xml:space="preserve">
          <source>View is initialized</source>
          <target state="translated">보기가 초기화되었습니다</target>
        </trans-unit>
        <trans-unit id="1ead4eeb9b9a3c3349404dc40a5bf16f55ca3dd8" translate="yes" xml:space="preserve">
          <source>View isAttached()</source>
          <target state="translated">isAttached ()보기</target>
        </trans-unit>
        <trans-unit id="228c90e7a2d2a442579c0c7a8a327b6f84280879" translate="yes" xml:space="preserve">
          <source>View isDestroyed()</source>
          <target state="translated">isDestroyed ()보기</target>
        </trans-unit>
        <trans-unit id="d4874a255a50dd76b79d25c00aec8ed257812fee" translate="yes" xml:space="preserve">
          <source>View isRendered()</source>
          <target state="translated">isRendered ()보기</target>
        </trans-unit>
        <trans-unit id="3d41b58b53a5ba34076b7613271014fe6ed5ca74" translate="yes" xml:space="preserve">
          <source>View regions will be emptied on each render so views shown outside of the &lt;code&gt;render&lt;/code&gt; event will still need be reshown on subsequent renders.</source>
          <target state="translated">뷰 영역은 각 렌더에서 비워 지므로 &lt;code&gt;render&lt;/code&gt; 이벤트 외부에 표시된 뷰 는 후속 렌더에서 여전히 다시 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a44c4fb12334958833e8dabb26a0950634409d7a" translate="yes" xml:space="preserve">
          <source>View triggers an &lt;code&gt;initialize&lt;/code&gt; event on the behavior.</source>
          <target state="translated">뷰 는 동작 에서 &lt;code&gt;initialize&lt;/code&gt; 이벤트를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="f880a30351aa948c04f1c77a21073ace565a228e" translate="yes" xml:space="preserve">
          <source>View's &lt;code&gt;template: false&lt;/code&gt; now no-ops the render</source>
          <target state="translated">뷰의 &lt;code&gt;template: false&lt;/code&gt; 이제 false 가 렌더링에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ad7397c3dcd557257da6e96ded094c76b7dbdc3" translate="yes" xml:space="preserve">
          <source>View.showChildView and Application.showView now return the shown view</source>
          <target state="translated">View.showChildView 및 Application.showView가 이제 표시된보기를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="cfe5585ef7613c80f71f6098d65bb457af4b7ea0" translate="yes" xml:space="preserve">
          <source>Views can automatically bind DOM events to methods and View events with &lt;a href=&quot;dom.interactions#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dom.interactions#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; respectively:</source>
          <target state="translated">뷰는 각각 &lt;a href=&quot;dom.interactions#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;dom.interactions#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt; 를 사용하여 DOM 이벤트를 메소드와 뷰 이벤트에 자동으로 바인딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="530b6cff94ce165c5c74438ebe8e7c3c2782da3b" translate="yes" xml:space="preserve">
          <source>Views can automatically bind to its model or collection with &lt;a href=&quot;events.entity#model-events&quot;&gt;&lt;code&gt;modelEvents&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;events.entity#collection-events&quot;&gt;&lt;code&gt;collectionEvents&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">뷰는 각각 &lt;a href=&quot;events.entity#model-events&quot;&gt; &lt;code&gt;modelEvents&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;events.entity#collection-events&quot;&gt; &lt;code&gt;collectionEvents&lt;/code&gt; &lt;/a&gt; 를 사용하여 모델 또는 콜렉션에 자동으로 바인드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2dd64acc9ba1f803312437462bf302ce45e1b66e" translate="yes" xml:space="preserve">
          <source>Views can bind custom events whenever users perform some interaction with the DOM. Using the view &lt;a href=&quot;#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; handlers lets us either bind user input directly to an action or fire a generic trigger that may or may not be handled.</source>
          <target state="translated">사용자가 DOM과의 상호 작용을 수행 할 때마다 뷰가 사용자 정의 이벤트를 바인딩 할 수 있습니다. 뷰 &lt;a href=&quot;#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt; 핸들러를 사용하면 사용자 입력을 조치에 직접 바인드하거나 처리하거나 처리하지 않을 수있는 일반 트리거를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6e842ab498fea2c4a89af757e6a7568dc78a68a" translate="yes" xml:space="preserve">
          <source>We now have a clear API for communicating with the &lt;code&gt;Notification&lt;/code&gt; across the application. Don't forget to define the &lt;code&gt;channelName&lt;/code&gt; on your &lt;code&gt;MnObject&lt;/code&gt; definition.</source>
          <target state="translated">이제 애플리케이션 전체에서 &lt;code&gt;Notification&lt;/code&gt; 과 통신하기위한 명확한 API가 있습니다. 은 define 것을 잊지 마십시오 &lt;code&gt;channelName&lt;/code&gt; 당신에 &lt;code&gt;MnObject&lt;/code&gt; 의 정의.</target>
        </trans-unit>
        <trans-unit id="bf433df67b96691434115cf2cc9f40e963778344" translate="yes" xml:space="preserve">
          <source>We'll cover a simple example:</source>
          <target state="translated">간단한 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="8590ac0e96f6aaec76ed725365c2e679c7c726fb" translate="yes" xml:space="preserve">
          <source>What is Context Data?</source>
          <target state="translated">컨텍스트 데이터 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="e93ef73b4370c828b5cbb7ff1417b8a40365018f" translate="yes" xml:space="preserve">
          <source>What is a template</source>
          <target state="translated">템플릿이란?</target>
        </trans-unit>
        <trans-unit id="3c3e865e128e4b1ce064e9d8c609e441fe64dee5" translate="yes" xml:space="preserve">
          <source>What is a template?</source>
          <target state="translated">템플릿이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="0c4b638becb2d80160585fdad152750a1ca07db3" translate="yes" xml:space="preserve">
          <source>What rendering indicates varies slightly between the two Marionette views.</source>
          <target state="translated">렌더링이 나타내는 것은 두 마리오네트보기 사이에서 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="11c90de4ce6fca13fd858d8f9ba519873f900dac" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;CollectionView&lt;/code&gt; is instantiated it creates a region for showing the &lt;a href=&quot;#collectionviews-emptyview&quot;&gt;&lt;code&gt;emptyView&lt;/code&gt;&lt;/a&gt;. This region can be requested using the &lt;code&gt;getEmptyRegion&lt;/code&gt; method. The region will share the &lt;code&gt;el&lt;/code&gt; with the &lt;code&gt;CollectionView&lt;/code&gt; and is shown with &lt;a href=&quot;marionette.region#additional-options&quot;&gt;&lt;code&gt;replaceElement: false&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;CollectionView&lt;/code&gt; 가 인스턴스화 그것을 표시하기위한 영역을 생성 &lt;a href=&quot;#collectionviews-emptyview&quot;&gt; &lt;code&gt;emptyView&lt;/code&gt; 를&lt;/a&gt; . 이 리젼은 &lt;code&gt;getEmptyRegion&lt;/code&gt; 메소드를 사용하여 요청할 수 있습니다 . 이 영역은 &lt;code&gt;el&lt;/code&gt; 을 &lt;code&gt;CollectionView&lt;/code&gt; 와 공유하며 &lt;a href=&quot;marionette.region#additional-options&quot;&gt; &lt;code&gt;replaceElement: false&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="3342ec4ee33530f8b8d99091ef49f016c5160ae3" translate="yes" xml:space="preserve">
          <source>When a childview is added to the children &lt;a href=&quot;events.class#addchild-and-beforeaddchild-events&quot;&gt;&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;before:add:child&lt;/code&gt; events&lt;/a&gt; will trigger</source>
          <target state="translated">childview가 children에 추가되면 &lt;a href=&quot;events.class#addchild-and-beforeaddchild-events&quot;&gt; &lt;code&gt;add:child&lt;/code&gt; 및 &lt;code&gt;before:add:child&lt;/code&gt; 이벤트&lt;/a&gt; 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd9998e0658b046d1e4b852f05c773add101b7f" translate="yes" xml:space="preserve">
          <source>When a childview is removed from the children &lt;a href=&quot;events.class#removechild-and-beforeremovechild-events&quot;&gt;&lt;code&gt;remove:child&lt;/code&gt; and &lt;code&gt;before:remove:child&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">childview가 &lt;a href=&quot;events.class#removechild-and-beforeremovechild-events&quot;&gt; &lt;code&gt;remove:child&lt;/code&gt; &lt;code&gt;before:remove:child&lt;/code&gt; &lt;/a&gt; 에서 제거되면 remove : child 및 before : remove : child 이벤트 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="d43534f296897ae95efbca7a448d053a1c187f35" translate="yes" xml:space="preserve">
          <source>When a collection has no children, and you need to render a view other than the list of childViews, you can specify an &lt;code&gt;emptyView&lt;/code&gt; attribute on your collection view. The &lt;code&gt;emptyView&lt;/code&gt; just like the &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; can also be passed as an option on instantiation or can be a function that returns the &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">컬렉션에 자식이없고 childView 목록 이외의보기를 렌더링해야하는 경우 컬렉션보기에서 &lt;code&gt;emptyView&lt;/code&gt; 특성을 지정할 수 있습니다. &lt;code&gt;emptyView&lt;/code&gt; 단지 등 &lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; 는&lt;/a&gt; 또한 인스턴스에 옵션으로 전달 될 수 또는 함수 반환하는 수 있습니다 &lt;code&gt;emptyView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="879afb489fe7c8a051e86601681830430a012e45" translate="yes" xml:space="preserve">
          <source>When a model is added to the &lt;code&gt;collection&lt;/code&gt;, the &lt;code&gt;CollectionView&lt;/code&gt; will render that one model into the &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;collection&lt;/code&gt; 추가 되면 &lt;code&gt;CollectionView&lt;/code&gt; 는 해당 모델을 &lt;code&gt;children&lt;/code&gt; 으로 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="d5174d7794a4c785b3c9c0de4eb92446d6696972" translate="yes" xml:space="preserve">
          <source>When a model is removed from the &lt;code&gt;collection&lt;/code&gt; (or destroyed / deleted), the &lt;code&gt;CollectionView&lt;/code&gt; will destroy and remove that model's child view.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 에서 모델을 제거 하거나 삭제 / 삭제하면 &lt;code&gt;CollectionView&lt;/code&gt; 가 해당 모델의 자식 뷰를 삭제하고 제거합니다.</target>
        </trans-unit>
        <trans-unit id="495f5d3167da8a7a6f530131b4b3d87f9c71a3ce" translate="yes" xml:space="preserve">
          <source>When an event is triggered, the first letter of each section of the event name is capitalized, and the word &quot;on&quot; is prepended to the front of it. Examples:</source>
          <target state="translated">이벤트가 트리거되면 이벤트 이름의 각 섹션에서 첫 글자가 대문자로 표시되고 앞에 &quot;on&quot;이 붙습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="b9c1595a7042408c7c5ea50df0f3c51d13ea84f7" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;Application&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;channelName&lt;/code&gt;, &lt;code&gt;radioEvents&lt;/code&gt;, &lt;code&gt;radioRequests&lt;/code&gt;, &lt;code&gt;region&lt;/code&gt;, &lt;code&gt;regionClass&lt;/code&gt;</source>
          <target state="translated">인스턴스화 할 때 &lt;code&gt;Application&lt;/code&gt; 통과하면 여러 속성이 있습니다, 그는 인스턴스에 직접 첨부되어야합니다 : &lt;code&gt;channelName&lt;/code&gt; , &lt;code&gt;radioEvents&lt;/code&gt; , &lt;code&gt;radioRequests&lt;/code&gt; , &lt;code&gt;region&lt;/code&gt; , &lt;code&gt;regionClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d280f973d0d5bdbbf49c8e1cde1446de5a131cca" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;CollectionView&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;attributes&lt;/code&gt;, &lt;code&gt;behaviors&lt;/code&gt;, &lt;code&gt;childView&lt;/code&gt;, &lt;code&gt;childViewContainer&lt;/code&gt;, &lt;code&gt;childViewEventPrefix&lt;/code&gt;, &lt;code&gt;childViewEvents&lt;/code&gt;, &lt;code&gt;childViewOptions&lt;/code&gt;, &lt;code&gt;childViewTriggers&lt;/code&gt;, &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;collection&lt;/code&gt;, &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;emptyView&lt;/code&gt;, &lt;code&gt;emptyViewOptions&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;sortWithCollection&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, &lt;code&gt;templateContext&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;, &lt;code&gt;viewComparator&lt;/code&gt;, &lt;code&gt;viewFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 를 인스턴스화 할 때 인스턴스 에 직접 첨부되는 &lt;code&gt;attributes&lt;/code&gt; , &lt;code&gt;behaviors&lt;/code&gt; , &lt;code&gt;childView&lt;/code&gt; , &lt;code&gt;childViewContainer&lt;/code&gt; , &lt;code&gt;childViewEventPrefix&lt;/code&gt; , &lt;code&gt;childViewEvents&lt;/code&gt; , &lt;code&gt;childViewOptions&lt;/code&gt; , &lt;code&gt;childViewTriggers&lt;/code&gt; , &lt;code&gt;className&lt;/code&gt; , &lt;code&gt;collection&lt;/code&gt; , &lt;code&gt;collectionEvents&lt;/code&gt; , &lt;code&gt;el&lt;/code&gt; , &lt;code&gt;emptyView&lt;/code&gt; , &lt;code&gt;emptyViewOptions&lt;/code&gt; , &lt;code&gt;events&lt;/code&gt; 와 같이 여러 속성이 전달 될 경우 인스턴스에 직접 첨부됩니다. , &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; , &lt;code&gt;modelEvents&lt;/code&gt; , &lt;code&gt;sortWithCollection&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;template&lt;/code&gt; , &lt;code&gt;templateContext&lt;/code&gt; , &lt;code&gt;triggers&lt;/code&gt; , &lt;code&gt;ui&lt;/code&gt; , &lt;code&gt;viewComparator&lt;/code&gt; , &lt;code&gt;viewFilter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59ac214f6bd1dc3a4aeff422112107b0d8b42ce2" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;MnObject&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;channelName&lt;/code&gt;, &lt;code&gt;radioEvents&lt;/code&gt;, &lt;code&gt;radioRequests&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 를 인스턴스화 할 때 인스턴스 에 직접 첨부되는 몇 가지 속성이 있습니다 : &lt;code&gt;channelName&lt;/code&gt; , &lt;code&gt;radioEvents&lt;/code&gt; , &lt;code&gt;radioRequests&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b731f712bb3236ae0b833da8c6073bcea141e4e3" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;Region&lt;/code&gt; there are two properties, if passed, that will be attached directly to the instance: &lt;code&gt;el&lt;/code&gt;, and &lt;code&gt;replaceElement&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; 을 인스턴스화 할 때 전달되는 경우 인스턴스에 직접 첨부되는 &lt;code&gt;el&lt;/code&gt; , &lt;code&gt;replaceElement&lt;/code&gt; 라는 두 개의 특성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91247ce06802ca3423fa1c865e72f6d9f2af444f" translate="yes" xml:space="preserve">
          <source>When instantiating a &lt;code&gt;View&lt;/code&gt; there are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;attributes&lt;/code&gt;, &lt;code&gt;behaviors&lt;/code&gt;, &lt;code&gt;childViewEventPrefix&lt;/code&gt;, &lt;code&gt;childViewEvents&lt;/code&gt;, &lt;code&gt;childViewTriggers&lt;/code&gt;, &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;collection&lt;/code&gt;, &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;regionClass&lt;/code&gt;, &lt;code&gt;regions&lt;/code&gt;, &lt;code&gt;tagName&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, &lt;code&gt;templateContext&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">인스턴스화 할 때 &lt;code&gt;View&lt;/code&gt; 통과하면 여러 속성이 있습니다, 그는 인스턴스에 직접 첨부됩니다 &lt;code&gt;attributes&lt;/code&gt; , &lt;code&gt;behaviors&lt;/code&gt; , &lt;code&gt;childViewEventPrefix&lt;/code&gt; , &lt;code&gt;childViewEvents&lt;/code&gt; , &lt;code&gt;childViewTriggers&lt;/code&gt; , &lt;code&gt;className&lt;/code&gt; , &lt;code&gt;collection&lt;/code&gt; , &lt;code&gt;collectionEvents&lt;/code&gt; , &lt;code&gt;el&lt;/code&gt; , &lt;code&gt;events&lt;/code&gt; , &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; , &lt;code&gt;modelEvents&lt;/code&gt; , &lt;code&gt;regionClass&lt;/code&gt; , &lt;code&gt;regions&lt;/code&gt; , &lt;code&gt;tagName&lt;/code&gt; , &lt;code&gt;template&lt;/code&gt; , &lt;code&gt;templateContext&lt;/code&gt; , &lt;code&gt;triggers&lt;/code&gt; , &lt;code&gt;ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f817faae9c55e65080378d01cba0a11ffeec33dc" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;a&lt;/code&gt; tag is clicked here, the &lt;code&gt;link:click&lt;/code&gt; event is fired. This event can be listened to using the &lt;a href=&quot;events#onevent-binding&quot;&gt;&lt;code&gt;onEvent&lt;/code&gt; Binding&lt;/a&gt; technique discussed in the &lt;a href=&quot;events&quot;&gt;events documentation&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;a&lt;/code&gt; 태그가 여기 클릭의 &lt;code&gt;link:click&lt;/code&gt; 이벤트가 발생합니다. 이 이벤트는 &lt;a href=&quot;events&quot;&gt;이벤트 설명서&lt;/a&gt; 에서 논의 된 &lt;a href=&quot;events#onevent-binding&quot;&gt; &lt;code&gt;onEvent&lt;/code&gt; 바인딩&lt;/a&gt; 기술 을 사용하여 청취 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b14936c91dbb2453a9429ed420ba010c8e28cd2" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;collection&lt;/code&gt; for the view is &lt;code&gt;reset&lt;/code&gt;, the view will destroy all children and re-render the entire collection.</source>
          <target state="translated">뷰 의 &lt;code&gt;collection&lt;/code&gt; 이 &lt;code&gt;reset&lt;/code&gt; 되면 뷰는 모든 하위를 삭제하고 전체 콜렉션을 다시 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="563471832303cba952c4e6e32daf6d80d2446894" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;collection&lt;/code&gt; for the view is sorted, the view by default automatically re-sort its child views unless the &lt;code&gt;sortWithCollection&lt;/code&gt; attribute on the &lt;code&gt;CollectionView&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, or the &lt;code&gt;viewComparator&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">뷰 의 &lt;code&gt;collection&lt;/code&gt; 이 정렬 될 때 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;sortWithCollection&lt;/code&gt; 속성 이 &lt;code&gt;false&lt;/code&gt; 로 설정 되거나 &lt;code&gt;viewComparator&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 가 아닌 한 기본적으로 뷰는 자동으로 하위 뷰를 다시 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="97f748999e1eda52bfaafcd9e61a13195f9a36f9" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;filter&lt;/code&gt; event is fired the children filtered out will have already been detached from the view's &lt;code&gt;el&lt;/code&gt;, but new children will not yet have been rendered. The &lt;code&gt;filter&lt;/code&gt; event not only receives the view instance, but also arrays of attached views, and detached views.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 이벤트가 시작 되면 필터링 된 자식은 이미 뷰의 &lt;code&gt;el&lt;/code&gt; 에서 분리 되었지만 새 자식은 아직 렌더링되지 않았습니다. &lt;code&gt;filter&lt;/code&gt; 이벤트 뷰 인스턴스를 수신하고,뿐만 아니라, 부착 뷰, 분리 플레이의 배열뿐만 아니라.</target>
        </trans-unit>
        <trans-unit id="68e7eac6fee216c92e298738ddb8ca16f212b942" translate="yes" xml:space="preserve">
          <source>When the children are destroyed the &lt;a href=&quot;events.class#destroychildren-and-beforedestroychildren-events&quot;&gt;&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">어린이가 파괴되면 &lt;a href=&quot;events.class#destroychildren-and-beforedestroychildren-events&quot;&gt; &lt;code&gt;destroy:children&lt;/code&gt; 및 &lt;code&gt;before:destroy:children&lt;/code&gt; 이벤트&lt;/a&gt; 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="18e891ed6625ab6aab3a95cc78cb42e21f4a8683" translate="yes" xml:space="preserve">
          <source>When the children are rendered the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;render:children&lt;/code&gt; and &lt;code&gt;before:render:children&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">자식이 렌더링되면 &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;render:children&lt;/code&gt; 및 &lt;code&gt;before:render:children&lt;/code&gt; 이벤트&lt;/a&gt; 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="044e97a3b2bf2ef1ff4f572e6d7a9af115276cf4" translate="yes" xml:space="preserve">
          <source>When the instance of &lt;code&gt;MyView&lt;/code&gt; is rendered, the &lt;code&gt;.overwrite-me&lt;/code&gt; element will be removed from the DOM and replaced with an element of &lt;code&gt;.new-class&lt;/code&gt; - this lets us do things like rendering views inside &lt;code&gt;table&lt;/code&gt; or &lt;code&gt;select&lt;/code&gt; more easily - these elements are usually very strict on what content they will allow.</source>
          <target state="translated">&lt;code&gt;MyView&lt;/code&gt; 인스턴스 가 렌더링되면 &lt;code&gt;.overwrite-me&lt;/code&gt; 요소가 DOM에서 제거되고 &lt;code&gt;.new-class&lt;/code&gt; 요소로 대체됩니다. 이렇게하면 &lt;code&gt;table&lt;/code&gt; 내에서 뷰를 렌더링 하거나 더 쉽게 &lt;code&gt;select&lt;/code&gt; 수 있습니다. 이러한 요소는 일반적으로 그들이 허용 할 콘텐츠에 대해 매우 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="6583844939448dd6ec6e35d2359161a875d454cd" translate="yes" xml:space="preserve">
          <source>When to use Events</source>
          <target state="translated">행사 이용시기</target>
        </trans-unit>
        <trans-unit id="f232bf0d8359219a4283672f40649749c39fddfc" translate="yes" xml:space="preserve">
          <source>When to use Requests</source>
          <target state="translated">요청을 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="ad375afe1c7d46b48d002e730e358101ea72b318" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;collection&lt;/code&gt; to manage the children of &lt;code&gt;CollectionView&lt;/code&gt;, specify a &lt;code&gt;childView&lt;/code&gt; for your &lt;code&gt;CollectionView&lt;/code&gt;. This must be a Backbone view class definition, not an instance. It can be any &lt;code&gt;Backbone.View&lt;/code&gt; related class including both Marionette's &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;collection&lt;/code&gt; 의 자녀 관리 &lt;code&gt;CollectionView&lt;/code&gt; 를 하는 지정 &lt;code&gt;childView&lt;/code&gt; 당신을위한 &lt;code&gt;CollectionView&lt;/code&gt; 를 . 인스턴스가 아닌 백본보기 클래스 정의 여야합니다. Marionette 's &lt;code&gt;View&lt;/code&gt; 및 &lt;code&gt;CollectionView&lt;/code&gt; 를 포함한 모든 &lt;code&gt;Backbone.View&lt;/code&gt; 관련 클래스 가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0369407484ca48ca8e5acf375cd15bf76c0121a" translate="yes" xml:space="preserve">
          <source>When using functions to set attributes, Marionette will assign the instance of your new class as &lt;code&gt;this&lt;/code&gt;. You can use this feature to ensure you're able to access your object in cases where &lt;code&gt;this&lt;/code&gt; isn't what you might expect it to be.</source>
          <target state="translated">함수를 사용하여 속성을 설정하면 Marionette는 새 클래스의 인스턴스를 &lt;code&gt;this&lt;/code&gt; 로 지정 합니다 . 당신은 어디의 경우 개체에 액세스 할 수있어 확인하기 위해이 기능을 사용할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 당신이 될 것으로 기대 수도 것이 아니다.</target>
        </trans-unit>
        <trans-unit id="c897094ff8fd1cd42431590267bd3f7945950ddb" translate="yes" xml:space="preserve">
          <source>When using implicit listeners, the &lt;a href=&quot;#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childview:*&lt;/code&gt; event prefix&lt;/a&gt; is used which needs to be included as part of the handler:</source>
          <target state="translated">암시 적 리스너를 사용하는 경우 &lt;a href=&quot;#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childview:*&lt;/code&gt; 이벤트 접 두부&lt;/a&gt; 가 사용되며 핸들러의 일부로 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3dddc67984a54a778dd74c7353cd264dba016929" translate="yes" xml:space="preserve">
          <source>When we attach behaviors to views, we can also pass in options to add to the behavior. This tends to be static information relating to what the behavior should do. In our above example, we want to override the message to our &lt;code&gt;DestroyWarn&lt;/code&gt; and &lt;code&gt;Tooltip&lt;/code&gt; behaviors to match the original message on the View:</source>
          <target state="translated">뷰에 비헤이비어를 첨부 할 때 비헤이비어에 추가 할 옵션을 전달할 수도 있습니다. 이는 동작이 수행해야하는 작업과 관련된 정적 정보 인 경향이 있습니다. 위의 예 에서 View의 원래 메시지와 일치하도록 메시지를 &lt;code&gt;DestroyWarn&lt;/code&gt; 및 &lt;code&gt;Tooltip&lt;/code&gt; 동작으로 재정의하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="c14a5685ba760ccd1bcc89b5fad6fc31aa29e04b" translate="yes" xml:space="preserve">
          <source>When we extend classes, we can provide class attributes with specific values by defining them in the object we pass as the &lt;code&gt;extend&lt;/code&gt; parameter:</source>
          <target state="translated">클래스를 확장 할 때 &lt;code&gt;extend&lt;/code&gt; 매개 변수 로 전달한 객체에 클래스 속성을 정의하여 클래스 속성에 특정 값을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9374ba495ac8c84db18946a595412c0c6594a27a" translate="yes" xml:space="preserve">
          <source>When we instantiate &lt;code&gt;MyView&lt;/code&gt;, each instance will be given a &lt;code&gt;.bg-success&lt;/code&gt; class with a &lt;code&gt;myRegion&lt;/code&gt; region created on the &lt;code&gt;.my-region&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;MyView&lt;/code&gt; 를 인스턴스화하면 각 인스턴스 에 &lt;code&gt;.my-region&lt;/code&gt; 요소 에서 생성 된 &lt;code&gt;myRegion&lt;/code&gt; 영역이 있는 &lt;code&gt;.bg-success&lt;/code&gt; 클래스가 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="485c9d643992b8357326ed00397cfd672a015cf0" translate="yes" xml:space="preserve">
          <source>When we show views in the region, the contents of &lt;code&gt;#first-region&lt;/code&gt; and &lt;code&gt;#second-region&lt;/code&gt; will be replaced with the contents of the view we show. The value in the &lt;code&gt;regions&lt;/code&gt; hash is just a jQuery selector, and any valid jQuery syntax will suffice.</source>
          <target state="translated">지역에보기를 표시하면 &lt;code&gt;#first-region&lt;/code&gt; 및 &lt;code&gt;#second-region&lt;/code&gt; 의 내용이 표시되는보기의 내용으로 바뀝니다. &lt;code&gt;regions&lt;/code&gt; 해시 의 값은 jQuery 선택기이므로 유효한 jQuery 구문이면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="295bf762687e95d19ec762adfcd07005635224f8" translate="yes" xml:space="preserve">
          <source>When you extend &lt;code&gt;View&lt;/code&gt;, we use the &lt;code&gt;regions&lt;/code&gt; attribute to point to the selector where the new view will be displayed:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 를 확장 하면 &lt;code&gt;regions&lt;/code&gt; 속성을 사용 하여 새 뷰가 표시 될 선택자를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="31a1db5c28f74443b35f5b5c26c0f3a0ad5e191b" translate="yes" xml:space="preserve">
          <source>When you show a view inside a region - either using &lt;a href=&quot;marionette.region#showing-a-view&quot;&gt;&lt;code&gt;region.show(view)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt;&lt;code&gt;showChildView('region', view)&lt;/code&gt;&lt;/a&gt; - the &lt;code&gt;Region&lt;/code&gt; will emit events around the view events that you can hook into.</source>
          <target state="translated">&lt;a href=&quot;marionette.region#showing-a-view&quot;&gt; &lt;code&gt;region.show(view)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt; &lt;code&gt;showChildView('region', view)&lt;/code&gt; &lt;/a&gt; 를 사용하여 영역 내부에보기를 표시 하면 &lt;code&gt;Region&lt;/code&gt; 은 연결할 수있는보기 이벤트 주위에 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ab4ab02c23803c32bfcce161ab522d0eea3bf1a2" translate="yes" xml:space="preserve">
          <source>When your views get some more regions, you may want to think of the most efficient way to render your views. Since manipulating the DOM is performance heavy, it's best practice to render most of your views at once.</source>
          <target state="translated">뷰에 더 많은 영역이 있으면 뷰를 렌더링하는 가장 효율적인 방법을 생각할 수 있습니다. DOM 조작은 성능이 높으므로 대부분의 뷰를 한 번에 렌더링하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="31904a835116baee7dc4cda0b6a72afff4d70c2b" translate="yes" xml:space="preserve">
          <source>Where possible, we will document how to make the changes in Marionette 2.x so that your applications can continue to work and to ease the burden of upgrading to Marionette 3.</source>
          <target state="translated">가능한 경우 응용 프로그램이 계속 작동하고 Marionette 3으로 업그레이드하는 부담을 덜어 줄 수 있도록 Marionette 2.x를 변경하는 방법을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="89ba5f595dfc4655ab42cbceac06a2d3e68d9a75" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;#serializing-data&quot;&gt;serializing data&lt;/a&gt; deals more with getting the data belonging to the view into the template, template context mixes in other needed data, or in some cases, might do extra computations that go beyond simply &quot;serializing&quot; the view's &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;#serializing-data&quot;&gt;데이터를 직렬화&lt;/a&gt; 하면 뷰에 속하는 데이터를 템플리트로 가져 오는 데 더 많은 정보를 제공 하지만 템플리트 컨텍스트는 다른 필요한 데이터를 혼합하거나 경우에 따라 단순히 뷰의 &lt;code&gt;model&lt;/code&gt; 또는 &lt;code&gt;collection&lt;/code&gt; &quot;직렬화&quot;하는 것 이상의 추가 계산을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1662bfc50d8d0e8da8f3009538d9736e070a1741" translate="yes" xml:space="preserve">
          <source>While regions may be instantiated and useful on their own, their primary use case is through the &lt;a href=&quot;#defining-the-application-region&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defining-regions&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">영역은 자체적으로 인스턴스화되고 유용 할 수 있지만 주요 사용 사례는 &lt;a href=&quot;#defining-the-application-region&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#defining-regions&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; 클래스를 통하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="a24f99c1bdc82d992679816b41bfcd84bd7c8e44" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;el&lt;/code&gt; of the view can be attached the contents of the view can be removed and added to during the lifetime of the view. If you are adding listeners to the contents of the view rather than &lt;code&gt;attach&lt;/code&gt; the &lt;a href=&quot;events.class#domrefresh-event&quot;&gt;&lt;code&gt;dom:refresh&lt;/code&gt; event&lt;/a&gt; would be best.</source>
          <target state="translated">뷰 의 &lt;code&gt;el&lt;/code&gt; 을 부착 할 수있는 동안 뷰의 내용을 제거하고 뷰의 수명 동안 추가 할 수 있습니다. 뷰의 내용에 리스너를 추가하는 경우 &lt;a href=&quot;events.class#domrefresh-event&quot;&gt; &lt;code&gt;dom:refresh&lt;/code&gt; &lt;/a&gt; 이벤트를 &lt;code&gt;attach&lt;/code&gt; 하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="04f8ace971e3fb356fa22be2fee1743c5c367b88" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;el&lt;/code&gt; of the view may remain attached, its contents will be removed on render. If you have added listeners to the contents of the view rather than &lt;code&gt;before:detach&lt;/code&gt; the &lt;a href=&quot;events.class#domremove-event&quot;&gt;&lt;code&gt;dom:remove&lt;/code&gt; event&lt;/a&gt; would be best.</source>
          <target state="translated">뷰 의 &lt;code&gt;el&lt;/code&gt; 이 부착 된 상태로 유지 될 수 있지만 그 내용은 렌더링시 제거됩니다. &lt;code&gt;before:detach&lt;/code&gt; 보다보기의 내용에 리스너를 추가 한 경우 : &lt;a href=&quot;events.class#domremove-event&quot;&gt; &lt;code&gt;dom:remove&lt;/code&gt; 이벤트를 &lt;/a&gt;분리 하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bb3a9f881d7beaf76c573c5d2e108bdac4b98ad8" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; in most cases the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt; is the best place to show child views &lt;a href=&quot;marionette.view#efficient-nested-view-structures&quot;&gt;for best performance&lt;/a&gt;.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; 를 사용 하면 &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 이벤트&lt;/a&gt; 가 &lt;a href=&quot;marionette.view#efficient-nested-view-structures&quot;&gt;최상의 성능을 위해&lt;/a&gt; 하위 뷰를 표시하는 가장 좋은 장소 입니다.</target>
        </trans-unit>
        <trans-unit id="7e6037820f59f55a67e4e10c8498274cc3a29394" translate="yes" xml:space="preserve">
          <source>With the release of Marionette 3.2, developers can remove the dependency on jQuery and integrate with the DOM using a custom api.</source>
          <target state="translated">Marionette 3.2가 릴리스되면 개발자는 jQuery에 대한 종속성을 제거하고 사용자 정의 API를 사용하여 DOM과 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c549bec6bf0b0e2bc77c402f2a42c0715cb4b5f2" translate="yes" xml:space="preserve">
          <source>You call the request an action to perform e.g. &lt;code&gt;show:notification&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;show:notification&lt;/code&gt; 과 같이 수행 할 요청을 요청합니다 .</target>
        </trans-unit>
        <trans-unit id="e21eb20beeb6841547c91017bb8f9f2f871b62a7" translate="yes" xml:space="preserve">
          <source>You can add the view events monitor to any non-Marionette view:</source>
          <target state="translated">마리오네트가 아닌보기에보기 이벤트 모니터를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b6f79d2f0b4ff2057de72f431d6c7f321087ee7" translate="yes" xml:space="preserve">
          <source>You can also add multiple regions using &lt;code&gt;addRegions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addRegions&lt;/code&gt; 를 사용하여 여러 지역을 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0620a2ffe768126f78c244704c1288977384230" translate="yes" xml:space="preserve">
          <source>You can also bind a function callback directly in the &lt;code&gt;modelEvents&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;modelEvents&lt;/code&gt; 속성 에서 함수 콜백을 직접 바인딩 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="352263fc7bfd32ddb1b944f577c4d133122f14c6" translate="yes" xml:space="preserve">
          <source>You can also define &lt;code&gt;childView&lt;/code&gt; as a function. In this form, the value returned by this method is the &lt;code&gt;ChildView&lt;/code&gt; class that will be instantiated when a &lt;code&gt;Model&lt;/code&gt; needs to be initially rendered. This method also gives you the ability to customize per &lt;code&gt;Model&lt;/code&gt;&lt;code&gt;ChildViews&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;childView&lt;/code&gt; 를 함수로 정의 할 수도 있습니다. 이 형식에서이 메서드가 반환하는 값 은 &lt;code&gt;Model&lt;/code&gt; 을 처음 렌더링해야 할 때 인스턴스화 되는 &lt;code&gt;ChildView&lt;/code&gt; 클래스입니다 . 이 방법을 사용하면 &lt;code&gt;Model&lt;/code&gt; &lt;code&gt;ChildViews&lt;/code&gt; 별로 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="045892e9c2b50d26ad003cebdbeb415f7a141514" translate="yes" xml:space="preserve">
          <source>You can also define a template context value as a method. How this method is called is determined by your templating solution. For instance with handlebars a method is called with the context of the data passed to the template.</source>
          <target state="translated">템플릿 컨텍스트 값을 메서드로 정의 할 수도 있습니다. 이 메소드의 호출 방식은 템플릿 솔루션에 따라 결정됩니다. 예를 들어, 핸들 바를 사용하면 템플릿에 전달 된 데이터 컨텍스트와 함께 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="88f237f674b87bf9e5b532f6dcf46bf652ba59ca" translate="yes" xml:space="preserve">
          <source>You can also implement a different DOM API for a particular class:</source>
          <target state="translated">특정 클래스에 대해 다른 DOM API를 구현할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6be50940b89aa06376e91c3067f526a42869b9e4" translate="yes" xml:space="preserve">
          <source>You can also specify the &lt;code&gt;childViewOptions&lt;/code&gt; as a function, if you need to calculate the values to return at runtime. The model will be passed into the function should you need access to it when calculating &lt;code&gt;childViewOptions&lt;/code&gt;. The function must return an object, and the attributes of the object will be copied to the &lt;code&gt;childView&lt;/code&gt; instance's options.</source>
          <target state="translated">런타임에 반환 할 값을 계산해야하는 경우 &lt;code&gt;childViewOptions&lt;/code&gt; 를 함수로 지정할 수도 있습니다 . &lt;code&gt;childViewOptions&lt;/code&gt; 를 계산할 때 모델에 액세스해야하는 경우 모델이 함수에 전달됩니다 . 이 함수는 객체를 반환해야하며 객체의 속성이 &lt;code&gt;childView&lt;/code&gt; 인스턴스의 옵션에 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="c76079fcf18d67e481507b58bf68a9a1953e8772" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;listenTo&lt;/code&gt; as in Backbone:</source>
          <target state="translated">Backbone &lt;code&gt;listenTo&lt;/code&gt; 를 사용할 수도 있습니다 :</target>
        </trans-unit>
        <trans-unit id="412b8fbfdc3280542c5755300cd421ba96370a3f" translate="yes" xml:space="preserve">
          <source>You can also use this method to determine when the empty view was shown:</source>
          <target state="translated">이 방법을 사용하여 빈 뷰가 표시되는시기를 결정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0deb4b7d5c38176df83fbbe2656f184b52b015c" translate="yes" xml:space="preserve">
          <source>You can customize the event prefix for events that are forwarded through the view. To do this, set the &lt;code&gt;childViewEventPrefix&lt;/code&gt; on the view or collectionview. For more information on the &lt;code&gt;childViewEventPrefix&lt;/code&gt; see &lt;a href=&quot;#event-bubbling&quot;&gt;Event bubbling&lt;/a&gt;.</source>
          <target state="translated">보기를 통해 전달되는 이벤트의 이벤트 접 두부를 사용자 정의 할 수 있습니다. 이를 수행하려면 보기 또는 콜렉션보기 에서 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 를 설정하십시오 . &lt;code&gt;childViewEventPrefix&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;#event-bubbling&quot;&gt;이벤트 버블 링을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="590c6a7dfdaf579ece509f743f6b6bf2b2db9dfa" translate="yes" xml:space="preserve">
          <source>You can define regions with an object literal. Object literal definitions expect an &lt;code&gt;el&lt;/code&gt; property - the selector string to hook the region into. With this format is possible to define whether showing the region overwrites the &lt;code&gt;el&lt;/code&gt; or just overwrites the content (the default behavior).</source>
          <target state="translated">객체 리터럴을 사용하여 영역을 정의 할 수 있습니다. 객체 리터럴 정의 에는 영역을 연결할 셀렉터 문자열 인 &lt;code&gt;el&lt;/code&gt; 속성이 필요합니다. 이 형식을 사용하면 영역을 표시 할 때 &lt;code&gt;el&lt;/code&gt; 을 덮어 쓰는지 아니면 내용을 덮어 쓰는지 (기본 동작) 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39fc0ad9cdcf20a6dd97476044dd1d5943d67b07" translate="yes" xml:space="preserve">
          <source>You can detach a child view from a region through &lt;code&gt;detachChildView(region)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;detachChildView(region)&lt;/code&gt; 통해 지역에서 하위 뷰를 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="65430ca44e9a1ef5b30f9bbf607cf49f7d69c116" translate="yes" xml:space="preserve">
          <source>You can modify the way any particular view attaches a compiled template to the &lt;code&gt;el&lt;/code&gt; by overriding &lt;code&gt;attachElContents&lt;/code&gt;. This method receives only the results of the view's renderer and is only called if the renderer returned a value.</source>
          <target state="translated">&lt;code&gt;attachElContents&lt;/code&gt; 를 재정 의하여 특정 뷰가 컴파일 된 템플릿을 &lt;code&gt;el&lt;/code&gt; 에 첨부하는 방식을 수정할 수 있습니다 . 이 메소드는 뷰의 렌더러 결과 만 수신하며 렌더러가 값을 리턴 한 경우에만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="154f4a47538cb54057fa9d81ae809bef2fc09359" translate="yes" xml:space="preserve">
          <source>You can now create instances of &lt;code&gt;MyView&lt;/code&gt; with JavaScript's &lt;code&gt;new&lt;/code&gt; keyword:</source>
          <target state="translated">이제 JavaScript의 &lt;code&gt;new&lt;/code&gt; 키워드를 사용 하여 &lt;code&gt;MyView&lt;/code&gt; 인스턴스를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b9a2e3f180677d14a0aa533f13cea3d36b2e9cf" translate="yes" xml:space="preserve">
          <source>You can override this by specifying an &lt;code&gt;attachHtml&lt;/code&gt; method in your view definition. This method takes two parameters and has no return value.</source>
          <target state="translated">뷰 정의에서 &lt;code&gt;attachHtml&lt;/code&gt; 메소드를 지정하여 이를 대체 할 수 있습니다 . 이 메소드는 두 개의 매개 변수를 사용하며 리턴 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="85e09ebacc1355fcda51f74877974306f9548748" translate="yes" xml:space="preserve">
          <source>You can remove a view from a region (effectively &quot;unshowing&quot; it) with &lt;code&gt;region.empty()&lt;/code&gt; on a region:</source>
          <target state="translated">&lt;code&gt;region.empty()&lt;/code&gt; 를 사용하여 리전 에서 뷰를 제거 할 수 있습니다 (효과적으로 &quot;보이지 않음&quot;) .</target>
        </trans-unit>
        <trans-unit id="6273fc4e1446209c9e1394b751a7e8810d1b79ae" translate="yes" xml:space="preserve">
          <source>You can remove all of the regions from a view by calling &lt;code&gt;removeRegions&lt;/code&gt; or you can remove a region by name using &lt;code&gt;removeRegion&lt;/code&gt;. When a region is removed the region will be destroyed.</source>
          <target state="translated">&lt;code&gt;removeRegions&lt;/code&gt; 를 호출하여보기에서 모든 리젼을 제거하거나 &lt;code&gt;removeRegion&lt;/code&gt; 을 사용하여 이름으로 리젼을 제거 할 수 있습니다 . 지역이 제거되면 지역이 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="dbf45cd6f323a2a9e197f6dcda0a3e6aad7668fa" translate="yes" xml:space="preserve">
          <source>You can retrieve a view by a number of methods. If the findBy* method cannot find the view, it will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">여러 가지 방법으로보기를 검색 할 수 있습니다. findBy * 메소드가보기를 찾을 수 없으면 &lt;code&gt;undefined&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="8843d03919c5e6c87255303c4ae89c76de7060ee" translate="yes" xml:space="preserve">
          <source>You can run Marionette 3 alongside Marionette 2 with the Marionette.noConflict() function.</source>
          <target state="translated">Marionette.noConflict () 함수를 사용하여 Marionette 2와 함께 Marionette 3을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0185c5b71c101bd11414cb6f484ae0a5a47177" translate="yes" xml:space="preserve">
          <source>You can set the renderer for a view class by using the class method &lt;code&gt;setRenderer&lt;/code&gt;. The renderer accepts two arguments. The first is the template passed to the view, and the second argument is the data to be rendered into the template.</source>
          <target state="translated">클래스 메소드 &lt;code&gt;setRenderer&lt;/code&gt; 를 사용하여 뷰 클래스의 렌더러를 설정할 수 있습니다 . 렌더러는 두 개의 인수를 허용합니다. 첫 번째는 뷰에 전달 된 템플릿이고 두 번째 인수는 템플릿에 렌더링 할 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="1c43dca4d81a7521c5ae0f814409215ef3e5fcfb" translate="yes" xml:space="preserve">
          <source>You can show a template or a string directly into a region. Additionally you can pass an object literal containing a template and any other view options. Under the hood a &lt;code&gt;Marionette.View&lt;/code&gt; is instantiated using the template.</source>
          <target state="translated">템플릿이나 문자열을 영역에 직접 표시 할 수 있습니다. 또한 템플릿 및 기타보기 옵션이 포함 된 객체 리터럴을 전달할 수 있습니다. 후드 아래에서 &lt;code&gt;Marionette.View&lt;/code&gt; 는 템플릿을 사용하여 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="e0612899fa66ed5ed13794c4b92f564aaab94095" translate="yes" xml:space="preserve">
          <source>You can use a jQuery string selector to define regions.</source>
          <target state="translated">jQuery 문자열 선택기를 사용하여 영역을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fece023eda962e466d0a7bcf7f8bb4207bd1d306" translate="yes" xml:space="preserve">
          <source>You may be instantiating a &lt;code&gt;View&lt;/code&gt; with existing HTML, but if you re-render the view, like any other view, your view will render the &lt;code&gt;template&lt;/code&gt; into the view's &lt;code&gt;el&lt;/code&gt; and any children will need to be re-shown.</source>
          <target state="translated">기존 HTML을 사용 하여 &lt;code&gt;View&lt;/code&gt; 를 인스턴스화 할 수 있지만 다른보기와 같이보기를 다시 렌더링하면보기가 &lt;code&gt;template&lt;/code&gt; 를보기의 &lt;code&gt;el&lt;/code&gt; 렌더링 하고 모든 하위를 다시 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="dcd00372b85c4240c0588dc131c1ef0e51f89f5a" translate="yes" xml:space="preserve">
          <source>You want to call &lt;em&gt;exactly one&lt;/em&gt; function</source>
          <target state="translated">&lt;em&gt;정확히 하나의&lt;/em&gt; 함수 를 호출하려고 합니다</target>
        </trans-unit>
        <trans-unit id="ddb791a1169bad5fa64486e48c29a682db85e28f" translate="yes" xml:space="preserve">
          <source>You want to get the return value of the request</source>
          <target state="translated">요청의 반환 값을 얻고 싶습니다</target>
        </trans-unit>
        <trans-unit id="733091f99ebd9b020dbefe930383826ac306218b" translate="yes" xml:space="preserve">
          <source>add:child and before:add:child events</source>
          <target state="translated">add : child 및 before : add : child 이벤트</target>
        </trans-unit>
        <trans-unit id="4b24a16c78c9c2836ca0973059d7d662d16e99a3" translate="yes" xml:space="preserve">
          <source>add:region and before:add:region events</source>
          <target state="translated">add : region 및 before : add : region 이벤트</target>
        </trans-unit>
        <trans-unit id="ce8b3dc4f07f1a5690813e1aea70e14f5cb84171" translate="yes" xml:space="preserve">
          <source>attach and before:attach events</source>
          <target state="translated">첨부 및 사전 : 이벤트 첨부</target>
        </trans-unit>
        <trans-unit id="b06455ce13f0f90ba9633ade5d77c768af92a0dd" translate="yes" xml:space="preserve">
          <source>before:start event</source>
          <target state="translated">before : start 이벤트</target>
        </trans-unit>
        <trans-unit id="923116359e40486b166379697d99ab2fde7920bf" translate="yes" xml:space="preserve">
          <source>bindEvents</source>
          <target state="translated">bindEvents</target>
        </trans-unit>
        <trans-unit id="4915ddbd37bcb8a6001b37a437bdf5ecaaceb147" translate="yes" xml:space="preserve">
          <source>bindRequests</source>
          <target state="translated">bindRequests</target>
        </trans-unit>
        <trans-unit id="e505b967430a3bb9fecce86a06560d1f7135c9da" translate="yes" xml:space="preserve">
          <source>childView</source>
          <target state="translated">childView</target>
        </trans-unit>
        <trans-unit id="d6b7b0fb68b9174bb0dcc1913f0764f6975b6bc4" translate="yes" xml:space="preserve">
          <source>children Iterators And Collection Functions</source>
          <target state="translated">아이들 반복자와 수집 함수</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="77601fb66b4297e3e45cca4cbcd2e3c10225854c" translate="yes" xml:space="preserve">
          <source>destroy A Region</source>
          <target state="translated">지역을 파괴하다</target>
        </trans-unit>
        <trans-unit id="c71c2b68fb6e0f13179d83d98c33056cb0758c97" translate="yes" xml:space="preserve">
          <source>destroy and before:destroy events</source>
          <target state="translated">파괴하고 전에 : 이벤트를 파괴</target>
        </trans-unit>
        <trans-unit id="381839133befcb875f971ab18be62cb66e29828a" translate="yes" xml:space="preserve">
          <source>destroy:children and before:destroy:children events</source>
          <target state="translated">파괴 : 어린이와 전 : 파괴 : 어린이 이벤트</target>
        </trans-unit>
        <trans-unit id="8ed37b58bcf274cc69a7d2e9e4bce2c230882041" translate="yes" xml:space="preserve">
          <source>detach and before:detach events</source>
          <target state="translated">분리 및 사전 : 이벤트 분리</target>
        </trans-unit>
        <trans-unit id="ed7675fddaf1010f0ce10a0143c517123184646b" translate="yes" xml:space="preserve">
          <source>dom:refresh event</source>
          <target state="translated">dom : 새로 고침 이벤트</target>
        </trans-unit>
        <trans-unit id="737a65a8d1e5da28c25b74edcda88f9759767228" translate="yes" xml:space="preserve">
          <source>dom:remove event</source>
          <target state="translated">dom : 이벤트 제거</target>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="translated">each</target>
        </trans-unit>
        <trans-unit id="ab0b2a06f5f90f63aaf6a7667e56ae131b04ea07" translate="yes" xml:space="preserve">
          <source>empty and before:empty events</source>
          <target state="translated">비어있는 및 이전 : 빈 이벤트</target>
        </trans-unit>
        <trans-unit id="087635d5608a063540024d365841929e415cc04a" translate="yes" xml:space="preserve">
          <source>emptyView</source>
          <target state="translated">emptyView</target>
        </trans-unit>
        <trans-unit id="5873f666d03fb3fb39d0db9c71b5e1f769334088" translate="yes" xml:space="preserve">
          <source>every</source>
          <target state="translated">every</target>
        </trans-unit>
        <trans-unit id="de93ba2d15f3dbf65f76e6fd21e1e4b002459dd8" translate="yes" xml:space="preserve">
          <source>extend</source>
          <target state="translated">extend</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="f13b46441106631883dc910e1cf9a8dcabad7a36" translate="yes" xml:space="preserve">
          <source>filter and before:filter events</source>
          <target state="translated">filter and before : 필터 이벤트</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="2e9d30d0432894c5e85fd27e7b9a489c6a4f1207" translate="yes" xml:space="preserve">
          <source>getEmptyRegion</source>
          <target state="translated">getEmptyRegion</target>
        </trans-unit>
        <trans-unit id="83c56db9950579487ccee319e643d7570062dacc" translate="yes" xml:space="preserve">
          <source>getOption</source>
          <target state="translated">getOption</target>
        </trans-unit>
        <trans-unit id="6fc30fecb923b88b2066b34e69b864bb3660ef1b" translate="yes" xml:space="preserve">
          <source>give community members a chance to provide feedback for new functionality</source>
          <target state="translated">커뮤니티 회원에게 새로운 기능에 대한 피드백을 제공 할 수있는 기회 제공</target>
        </trans-unit>
        <trans-unit id="9b420bde4948b69dc5ad625bd1d282587aff7f83" translate="yes" xml:space="preserve">
          <source>if you are using a &lt;code&gt;template&lt;/code&gt; with a &lt;code&gt;CollectionView&lt;/code&gt; that is not also given a &lt;code&gt;model&lt;/code&gt;, your &lt;code&gt;CollectionView&lt;/code&gt; will &lt;a href=&quot;serializing-a-collection&quot;&gt;serialize the collection&lt;/a&gt; for the template. This could be costly and unnecessary. If your &lt;code&gt;CollectionView&lt;/code&gt; has a &lt;code&gt;template&lt;/code&gt; it is advised to either use an empty &lt;code&gt;model&lt;/code&gt; or override the &lt;a href=&quot;#serializing-data&quot;&gt;&lt;code&gt;serializeData&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 이없는 &lt;code&gt;CollectionView&lt;/code&gt; 와 함께 &lt;code&gt;template&lt;/code&gt; 을 사용하는 경우 CollectionView 는 템플릿 의 &lt;code&gt;CollectionView&lt;/code&gt; 을 &lt;a href=&quot;serializing-a-collection&quot;&gt;직렬화합니다&lt;/a&gt; . 이것은 비용이 많이 들고 불필요 할 수 있습니다. 귀하의 경우 &lt;code&gt;CollectionView&lt;/code&gt; 가 이 &lt;code&gt;template&lt;/code&gt; 그것 중 하나를 사용 빈 좋습니다 &lt;code&gt;model&lt;/code&gt; 하거나 무시 &lt;a href=&quot;#serializing-data&quot;&gt; &lt;code&gt;serializeData&lt;/code&gt; 의&lt;/a&gt; 방법을.</target>
        </trans-unit>
        <trans-unit id="8ad7d21c71b049b7003ba31b5f1322974df77ac8" translate="yes" xml:space="preserve">
          <source>initial</source>
          <target state="translated">initial</target>
        </trans-unit>
        <trans-unit id="4728f278b1371bfd6c3804c60f121bb5b72b9089" translate="yes" xml:space="preserve">
          <source>initialize</source>
          <target state="translated">initialize</target>
        </trans-unit>
        <trans-unit id="03d8e7a105b3dcaef4c1b8ad3eef028f50fc2607" translate="yes" xml:space="preserve">
          <source>initialize event</source>
          <target state="translated">이벤트 초기화</target>
        </trans-unit>
        <trans-unit id="d6aa1f3a789f3f3108666e0ac807ca5ca7dc5fa5" translate="yes" xml:space="preserve">
          <source>invoke</source>
          <target state="translated">invoke</target>
        </trans-unit>
        <trans-unit id="5490fcfb3b65c57bc1ad63914e1bd391595b83d4" translate="yes" xml:space="preserve">
          <source>isEmpty</source>
          <target state="translated">isEmpty</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="21f29d255b41381cea3d9e904e0e4db8e5ce9702" translate="yes" xml:space="preserve">
          <source>make it possible to add breaking changes in a minor release</source>
          <target state="translated">부 릴리스에서 주요 변경 사항 추가 가능</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="245b49eb9fcdf157f46406e51d080c6183d975a5" translate="yes" xml:space="preserve">
          <source>mergeOptions</source>
          <target state="translated">mergeOptions</target>
        </trans-unit>
        <trans-unit id="a1d1d85b9bfe9e1cd2ac823922331df9a2e4e564" translate="yes" xml:space="preserve">
          <source>normalizeMethods</source>
          <target state="translated">normalizeMethods</target>
        </trans-unit>
        <trans-unit id="c180780680dd2e3853ca96386f0e77e1396c3fcb" translate="yes" xml:space="preserve">
          <source>onEvent Binding</source>
          <target state="translated">onEvent 바인딩</target>
        </trans-unit>
        <trans-unit id="5a7cfae7c5a95a19b72263816bc6cea1397eb45b" translate="yes" xml:space="preserve">
          <source>or for all &lt;code&gt;Backbone.View&lt;/code&gt;s</source>
          <target state="translated">또는 모든 &lt;code&gt;Backbone.View&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="88faac11dac221116e7705b81a183fd08668de4b" translate="yes" xml:space="preserve">
          <source>partition</source>
          <target state="translated">partition</target>
        </trans-unit>
        <trans-unit id="07542ad08b8353036c3f43fd7fbb4ea166f300fb" translate="yes" xml:space="preserve">
          <source>pluck</source>
          <target state="translated">pluck</target>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="90afb8c10d80d7b84837590eb43cb0b81ca22390" translate="yes" xml:space="preserve">
          <source>reject</source>
          <target state="translated">reject</target>
        </trans-unit>
        <trans-unit id="ff1ff50da33c811a603b0e9d8679453fa3741d49" translate="yes" xml:space="preserve">
          <source>remove:child and before:remove:child events</source>
          <target state="translated">remove : child and before : remove : child 이벤트</target>
        </trans-unit>
        <trans-unit id="23429fb74e9a7d6b46aa608ba008b4decc5259f2" translate="yes" xml:space="preserve">
          <source>remove:region and before:remove:region events</source>
          <target state="translated">remove : region 및 before : remove : region 이벤트</target>
        </trans-unit>
        <trans-unit id="10acf66c426461b7cbcc5758f3a6fe21ea46015e" translate="yes" xml:space="preserve">
          <source>render and before:render events</source>
          <target state="translated">렌더링 및 이전 : 렌더링 이벤트</target>
        </trans-unit>
        <trans-unit id="a7f496c3a0141308e26218726a0c1dac8f48aa28" translate="yes" xml:space="preserve">
          <source>render:children and before:render:children events</source>
          <target state="translated">렌더링 : 어린이 및 이전 : 렌더링 : 어린이 이벤트</target>
        </trans-unit>
        <trans-unit id="38695f4b1fe01a26b75981337e7fec875be2ed91" translate="yes" xml:space="preserve">
          <source>reset A Region</source>
          <target state="translated">지역 재설정</target>
        </trans-unit>
        <trans-unit id="27ad1672d8c97d748c9f1d8d465abfbf6bffeb72" translate="yes" xml:space="preserve">
          <source>rest</source>
          <target state="translated">rest</target>
        </trans-unit>
        <trans-unit id="8f773fe324e238fb35e50fb28b478ba00043e7a1" translate="yes" xml:space="preserve">
          <source>show and before:show events</source>
          <target state="translated">show and before : 쇼 이벤트</target>
        </trans-unit>
        <trans-unit id="eb875812858d27b22cb2b75f992dffadc1b05c66" translate="yes" xml:space="preserve">
          <source>some</source>
          <target state="translated">some</target>
        </trans-unit>
        <trans-unit id="af73846f20e53d1dff77338111168d49d64fafd9" translate="yes" xml:space="preserve">
          <source>sort and before:sort events</source>
          <target state="translated">정렬 및 이전 : 정렬 이벤트</target>
        </trans-unit>
        <trans-unit id="4a0fdf08d1ce1af1b278da2c3d908737c82cd296" translate="yes" xml:space="preserve">
          <source>start event</source>
          <target state="translated">이벤트 시작</target>
        </trans-unit>
        <trans-unit id="2041cc0f86fcee4fbf0ccd352e5593da8c9c14a8" translate="yes" xml:space="preserve">
          <source>toArray</source>
          <target state="translated">toArray</target>
        </trans-unit>
        <trans-unit id="0831ec17b10a6e2fb3a43c80fb1b41567cbd2ee7" translate="yes" xml:space="preserve">
          <source>triggerMethod</source>
          <target state="translated">triggerMethod</target>
        </trans-unit>
        <trans-unit id="1522e5c22c2c62df46fc95dabc8012a590a6747b" translate="yes" xml:space="preserve">
          <source>unbindEvents</source>
          <target state="translated">unbindEvents</target>
        </trans-unit>
        <trans-unit id="93e6375c709e20d9b3fde5cec12e2e1b310f78fc" translate="yes" xml:space="preserve">
          <source>unbindRequests</source>
          <target state="translated">unbindRequests</target>
        </trans-unit>
        <trans-unit id="0d4e654c613ea68bffeeab1587b7dbac44826c2b" translate="yes" xml:space="preserve">
          <source>without</source>
          <target state="translated">without</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
