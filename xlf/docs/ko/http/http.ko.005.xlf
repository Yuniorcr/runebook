<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="44cba524f054d5d6640a40b11e1c3c0dd2b2e81c" translate="yes" xml:space="preserve">
          <source>HTTP/0.9 was very limited and both browsers and servers quickly extended it to be more versatile:</source>
          <target state="translated">HTTP / 0.9는 매우 제한적이며 브라우저와 서버 모두보다 다양한 기능으로 빠르게 확장되었습니다.</target>
        </trans-unit>
        <trans-unit id="17104213d7caf462f808b5202b6b3bf53c6f9e5c" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 &amp;ndash; Building extensibility</source>
          <target state="translated">HTTP / 1.0 &amp;ndash; 확장 성 구축</target>
        </trans-unit>
        <trans-unit id="8cfcb01eada0b8cfd065017e118d423b8f745b23" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 connections are not persistent by default. Setting &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; to anything other than &lt;code&gt;close&lt;/code&gt;, usually &lt;code&gt;retry-after&lt;/code&gt;, will make them persistent.</source>
          <target state="translated">HTTP / 1.0 연결은 기본적으로 영구적이지 않습니다. &lt;code&gt;close&lt;/code&gt; 이외의 다른 &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 일반적으로 &lt;code&gt;retry-after&lt;/code&gt; 을 설정하면 연결 이 영구적으로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="c0e8fb29ae930b0d157a9f98acea4150c0686f37" translate="yes" xml:space="preserve">
          <source>HTTP/1.0 opened a TCP connection for each request/response exchange, introducing two major flaws: opening a connection needs several round-trips of messages and therefore slow, but becomes more efficient when several messages are sent, and regularly sent: &lt;em&gt;warm&lt;/em&gt; connections are more efficient than &lt;em&gt;cold&lt;/em&gt; ones.</source>
          <target state="translated">HTTP / 1.0은 두 가지 주요 결함을 도입, 각 요청 / 응답 교환을위한 TCP 연결을 열었다는 : 연결을 여는 때문에 느린 여러 메시지의 왕복 및 필요하지만 여러 메시지가 전송 될 때 더 효율적으로, 정기적으로 발송됩니다 : &lt;em&gt;따뜻한&lt;/em&gt; 연결이 &lt;em&gt;차가운&lt;/em&gt; 것 보다 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="0d0b58bbcdf0ad6dac8b90fb47db84cff63b6a65" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 &amp;ndash; The standardized protocol</source>
          <target state="translated">HTTP / 1.1 &amp;ndash; 표준화 된 프로토콜</target>
        </trans-unit>
        <trans-unit id="b6ed95efc2e54e41776e64eab2beb02be978d4fe" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 allows a client to request that only part (a range of) the
   response entity be included within the response. HTTP/1.1 uses range
   units in the Range (&lt;a href=&quot;#section-14.35&quot;&gt;section 14.35&lt;/a&gt;) and Content-Range (&lt;a href=&quot;#section-14.16&quot;&gt;section 14.16&lt;/a&gt;)
   header fields. An entity can be broken down into subranges according
   to various structural units.

      range-unit       = bytes-unit | other-range-unit
      bytes-unit       = &quot;bytes&quot;
      other-range-unit = token

   The only range unit defined by HTTP/1.1 is &quot;bytes&quot;. HTTP/1.1
   implementations MAY ignore ranges specified using other units. 

   HTTP/1.1 has been designed to allow implementations of applications
   that do not depend on knowledge of ranges.</source>
          <target state="translated">HTTP / 1.1은 클라이언트가 응답 엔티티의 일부 (범위) 만 응답 내에 포함하도록 요청할 수 있습니다. HTTP / 1.1은 Range ( &lt;a href=&quot;#section-14.35&quot;&gt;섹션 14.35&lt;/a&gt; ) 및 Content-Range ( &lt;a href=&quot;#section-14.16&quot;&gt;섹션 14.16&lt;/a&gt; ) 헤더 필드 에서 범위 단위를 사용 합니다. 엔티티는 다양한 구조 단위에 따라 하위 범위로 나눌 수 있습니다. range-unit = 바이트 단위 | other-range-unit bytes-unit = &quot;bytes&quot;other-range-unit = token HTTP / 1.1에서 정의한 유일한 범위 단위는 &quot;bytes&quot;입니다. HTTP / 1.1 구현은 다른 단위를 사용하여 지정된 범위를 무시할 수 있습니다. HTTP / 1.1은 범위 지식에 의존하지 않는 응용 프로그램을 구현할 수 있도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="8cf11b6afbfe5a73402d4b60de58fb9f5e3c6400" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 and earlier HTTP messages are human-readable. In HTTP/2, these messages are embedded into a new binary structure, a frame, allowing optimizations like compression of headers and multiplexing. Even if only part of the original HTTP message is sent in this version of HTTP, the semantics of each message is unchanged and the client reconstitutes (virtually) the original HTTP/1.1 request. It is therefore useful to comprehend HTTP/2 messages in the HTTP/1.1 format.</source>
          <target state="translated">HTTP / 1.1 및 이전 HTTP 메시지는 사람이 읽을 수 있습니다. HTTP / 2에서는 이러한 메시지가 새로운 바이너리 구조 인 프레임에 내장되어 헤더 압축 및 멀티플렉싱과 같은 최적화가 가능합니다. 이 버전의 HTTP에서 원래 HTTP 메시지의 일부만 전송 되더라도 각 메시지의 의미는 변경되지 않으며 클라이언트는 원래 HTTP / 1.1 요청을 (가상으로) 재구성합니다. 따라서 HTTP / 2 메시지를 HTTP / 1.1 형식으로 이해하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="340b2a6e6c85c293b668779af15231ac0ac5f995" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 clarified ambiguities and introduced numerous improvements:</source>
          <target state="translated">HTTP / 1.1은 모호성을 명확하게하고 수많은 개선을 도입했습니다 :</target>
        </trans-unit>
        <trans-unit id="aaede2afb4e2e830b4b4156c5fed71c83597729d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 defaults to the use of &quot;persistent connections&quot;, allowing
   multiple requests and responses to be carried over a single
   connection.  The &quot;close&quot; connection option is used to signal that a
   connection will not persist after the current request/response.  HTTP
   implementations SHOULD support persistent connections. 

   A recipient determines whether a connection is persistent or not
   based on the most recently received message's protocol version and
   Connection header field (if any):

   o  If the &quot;close&quot; connection option is present, the connection will
      not persist after the current response; else,

   o  If the received protocol is HTTP/1.1 (or later), the connection
      will persist after the current response; else,

   o  If the received protocol is HTTP/1.0, the &quot;keep-alive&quot; connection
      option is present, the recipient is not a proxy, and the recipient
      wishes to honor the HTTP/1.0 &quot;keep-alive&quot; mechanism, the
      connection will persist after the current response; otherwise,

   o  The connection will close after the current response.

   A client MAY send additional requests on a persistent connection
   until it sends or receives a &quot;close&quot; connection option or receives an
   HTTP/1.0 response without a &quot;keep-alive&quot; connection option.

   In order to remain persistent, all messages on a connection need to
   have a self-defined message length (i.e., one not defined by closure
   of the connection), as described in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.  A server MUST read
   the entire request message body or close the connection after sending
   its response, since otherwise the remaining data on a persistent
   connection would be misinterpreted as the next request.  Likewise, a
   client MUST read the entire response message body if it intends to
   reuse the same connection for a subsequent request.

   A proxy server MUST NOT maintain a persistent connection with an
   HTTP/1.0 client (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;Section&amp;nbsp;19.7.1 of [RFC2068]&lt;/a&gt; for information and
   discussion of the problems with the Keep-Alive header field
   implemented by many HTTP/1.0 clients).

   See &lt;a href=&quot;#appendix-A.1.2&quot;&gt;Appendix A.1.2&lt;/a&gt; for more information on backwards compatibility
   with HTTP/1.0 clients.</source>
          <target state="translated">HTTP / 1.1은 기본적으로 &quot;지속적인 연결&quot;을 사용하므로 단일 연결을 통해 여러 요청 및 응답을 전달할 수 있습니다. &quot;닫기&quot;연결 옵션은 현재 요청 / 응답 후에 연결이 지속되지 않음을 알리는 데 사용됩니다. HTTP 구현은 지속적인 연결을 지원해야합니다. 수신자는 가장 최근에 수신 한 메시지의 프로토콜 버전 및 연결 헤더 필드 (있는 경우)에 따라 연결이 지속되는지 여부를 결정합니다. o &quot;닫기&quot;연결 옵션이 있으면 현재 응답 후 연결이 지속되지 않습니다. 그렇지 않으면, o 수신 된 프로토콜이 HTTP / 1.1 이상이면 연결은 현재 응답 후에도 지속됩니다. 그렇지 않으면 o 수신 된 프로토콜이 HTTP / 1.0 인 경우 &quot;keep-alive &quot;연결 옵션이 존재하고 수신자가 프록시가 아니며 수신자가 HTTP / 1.0&quot;keep-alive &quot;메커니즘을 준수하려고하면 현재 응답 후에도 연결이 유지됩니다. 그렇지 않으면 o 연결이 종료됩니다. 클라이언트는 &quot;close&quot;연결 옵션을 보내거나받을 때까지 또는 &quot;keep-alive&quot;연결 옵션없이 HTTP / 1.0 응답을받을 때까지 지속적 연결에서 추가 요청을 보낼 수 있습니다. 연결에 설명 된대로 자체 정의 메시지 길이 (즉, 연결을 닫음으로 정의되지 않은 길이)를 가져야합니다.메커니즘, 연결은 현재 응답 후에도 지속됩니다. 그렇지 않으면 o 현재 응답 후 연결이 닫힙니다. 클라이언트는 &quot;닫기&quot;연결 옵션을 보내거나받을 때까지 또는 &quot;keep-alive&quot;연결 옵션없이 HTTP / 1.0 응답을받을 때까지 지속적인 연결에서 추가 요청을 보낼 수 있습니다. 지속성을 유지하려면 연결의 모든 메시지에 설명 된대로 자체 정의 메시지 길이 (즉, 연결을 닫을 때 정의되지 않은 메시지 길이)가 있어야합니다.메커니즘, 연결은 현재 응답 후에도 지속됩니다. 그렇지 않으면 o 현재 응답 후 연결이 닫힙니다. 클라이언트는 &quot;닫기&quot;연결 옵션을 보내거나받을 때까지 또는 &quot;keep-alive&quot;연결 옵션없이 HTTP / 1.0 응답을받을 때까지 지속적인 연결에서 추가 요청을 보낼 수 있습니다. 지속성을 유지하려면 연결의 모든 메시지에 설명 된대로 자체 정의 메시지 길이 (즉, 연결을 닫을 때 정의되지 않은 메시지 길이)가 있어야합니다.&quot;keep-alive&quot;연결 옵션이없는 0 응답. 지속성을 유지하려면 연결의 모든 메시지에 설명 된대로 자체 정의 메시지 길이 (즉, 연결을 닫을 때 정의되지 않은 메시지 길이)가 있어야합니다.&quot;keep-alive&quot;연결 옵션이없는 0 응답. 지속성을 유지하려면 연결의 모든 메시지에 설명 된대로 자체 정의 메시지 길이 (즉, 연결을 닫을 때 정의되지 않은 메시지 길이)가 있어야합니다.&lt;a href=&quot;#section-3.3&quot;&gt;섹션 3.3&lt;/a&gt; . 서버는 응답을 보낸 후 전체 요청 메시지 본문을 읽거나 연결을 닫아야합니다. 그렇지 않으면 영구 연결의 나머지 데이터가 다음 요청으로 잘못 해석되기 때문입니다. 마찬가지로, 후속 요청에 동일한 연결을 재사용하려면 클라이언트가 전체 응답 메시지 본문을 읽어야합니다. 프록시 서버는 HTTP / 1.0 클라이언트와의 지속적인 연결을 유지해서는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;안됩니다&lt;/a&gt; ( 많은 HTTP / 1.0 클라이언트가 구현 한 Keep-Alive 헤더 필드의 문제점에 대한 정보 및 논의는 [RFC2068]의 19.7.1 절 참조 ). HTTP / 1.0 클라이언트와의 하위 호환성에 대한 자세한 내용 은 &lt;a href=&quot;#appendix-A.1.2&quot;&gt;부록 A.1.2&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b235442975ba302869396fe0ff4cdaebf53c2643" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 introduces the Transfer-Encoding header field
   (&lt;a href=&quot;#section-3.3.1&quot;&gt;Section 3.3.1&lt;/a&gt;).  Transfer codings need to be decoded prior to
   forwarding an HTTP message over a MIME-compliant protocol.</source>
          <target state="translated">HTTP / 1.1은 Transfer-Encoding 헤더 필드를 소개합니다 ( &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1 절&lt;/a&gt; ). MIME 호환 프로토콜을 통해 HTTP 메시지를 전달하기 전에 전송 코딩을 디코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7bc6b9e5b12ebbdf628d83f676eae2e25277f50" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 introduces the Transfer-Encoding header field (&lt;a href=&quot;#section-14.41&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.41&quot;&gt;14.41&lt;/a&gt;). Proxies/gateways MUST remove any transfer-coding prior to
   forwarding a message via a MIME-compliant protocol.

   A process for decoding the &quot;chunked&quot; transfer-coding (&lt;a href=&quot;#section-3.6&quot;&gt;section 3.6&lt;/a&gt;)
   can be represented in pseudo-code as:

       length := 0
       read chunk-size, chunk-extension (if any) and CRLF
       while (chunk-size &amp;gt; 0) {
          read chunk-data and CRLF
          append chunk-data to entity-body
          length := length + chunk-size
          read chunk-size and CRLF
       }
       read entity-header
       while (entity-header not empty) {
          append entity-header to existing header fields
          read entity-header
       }
       Content-Length := length
       Remove &quot;chunked&quot; from Transfer-Encoding</source>
          <target state="translated">HTTP / 1.1은 Transfer-Encoding 헤더 필드 ( &lt;a href=&quot;#section-14.41&quot;&gt;14.41 &lt;/a&gt;&lt;a href=&quot;#section-14.41&quot;&gt;절&lt;/a&gt; )를 소개합니다. 프록시 / 게이트웨이는 MIME 호환 프로토콜을 통해 메시지를 전달하기 전에 전송 코딩을 제거해야합니다. &quot;청크 된&quot;전송 코딩을 디코딩하는 프로세스 ( &lt;a href=&quot;#section-3.6&quot;&gt;섹션 3.6&lt;/a&gt;)는 다음과 같이 의사 코드로 표현할 수 있습니다. length : = 0 청크 크기 읽기, 청크 확장명 (있는 경우) 및 CRLF 반면 (청크 크기&amp;gt; 0) {청크 데이터 읽기 및 CRLF 청크 데이터를 엔터티에 추가 본문 길이 : = 길이 + 청크 크기 읽기 청크 크기 및 CRLF} 엔터티 헤더를 읽는 동안 (엔티티 헤더는 비어 있지 않음) {엔터티 헤더를 기존 헤더 필드에 추가합니다 엔터티 헤더를 읽습니다.} Content-Length : = length &quot;제거 전송 인코딩에서 청크 분할 됨</target>
        </trans-unit>
        <trans-unit id="55f1d0e9c7b192d39b6bf47cece53fe18cddfa5c" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 servers SHOULD maintain persistent connections and use TCP's
   flow control mechanisms to resolve temporary overloads, rather than
   terminating connections with the expectation that clients will retry.
   The latter technique can exacerbate network congestion.</source>
          <target state="translated">HTTP / 1.1 서버는 클라이언트가 재 시도 할 것으로 예상되는 연결을 종료하지 않고 지속적인 연결을 유지하고 TCP의 흐름 제어 메커니즘을 사용하여 임시 과부하를 해결해야합니다. 후자의 기술은 네트워크 혼잡을 악화시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bde47938358e96d6b78dd50b25535a7c82c1d43" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses a restricted set of date formats (&lt;a href=&quot;#section-3.3.1&quot;&gt;section 3.3.1&lt;/a&gt;) to
   simplify the process of date comparison. Proxies and gateways from
   other protocols SHOULD ensure that any Date header field present in a
   message conforms to one of the HTTP/1.1 formats and rewrite the date
   if necessary.</source>
          <target state="translated">HTTP / 1.1은 제한된 날짜 형식 세트 ( &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1 절&lt;/a&gt; )를 사용하여 날짜 비교 프로세스를 단순화합니다. 다른 프로토콜의 프록시 및 게이트웨이는 메시지에있는 날짜 헤더 필드가 HTTP / 1.1 형식 중 하나를 준수하는지 확인하고 필요한 경우 날짜를 다시 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f983729fa70af1e90d7ea6dbb4afb3d7c8f79cd6" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses a restricted set of date formats (&lt;a href=&quot;#section-7.1.1.1&quot;&gt;Section 7.1.1.1&lt;/a&gt;) to
   simplify the process of date comparison.  Proxies and gateways from
   other protocols ought to ensure that any Date header field present in
   a message conforms to one of the HTTP/1.1 formats and rewrite the
   date if necessary.</source>
          <target state="translated">HTTP / 1.1은 제한된 날짜 형식 세트 ( &lt;a href=&quot;#section-7.1.1.1&quot;&gt;7.1.1.1 절&lt;/a&gt; )를 사용하여 날짜 비교 프로세스를 단순화합니다. 다른 프로토콜의 프록시 및 게이트웨이는 메시지에있는 날짜 헤더 필드가 HTTP / 1.1 형식 중 하나를 준수하고 필요한 경우 날짜를 다시 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="87f9910f16689f67ad3946ec5476c5e20370823d" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses many of the constructs defined for Internet Mail (&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;822&lt;/a&gt; [&lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;]) and the Multipurpose Internet Mail Extensions (MIME [&lt;a href=&quot;#ref-7&quot;&gt;7&lt;/a&gt;]) to
   allow entities to be transmitted in an open variety of
   representations and with extensible mechanisms. However, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;
   discusses mail, and HTTP has a few features that are different from
   those described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;. These differences were carefully chosen
   to optimize performance over binary connections, to allow greater
   freedom in the use of new media types, to make date comparisons
   easier, and to acknowledge the practice of some early HTTP servers
   and clients.

   This appendix describes specific areas where HTTP differs from &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;2045&lt;/a&gt;. Proxies and gateways to strict MIME environments SHOULD be
   aware of these differences and provide the appropriate conversions
   where necessary. Proxies and gateways from MIME environments to HTTP
   also need to be aware of the differences because some conversions
   might be required.</source>
          <target state="translated">HTTP / 1.1은 인터넷 메일 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;822&lt;/a&gt; [ &lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt; ]) 및 다목적 인터넷 메일 확장 (MIME [ &lt;a href=&quot;#ref-7&quot;&gt;7&lt;/a&gt; ])에 대해 정의 된 많은 구성 을 사용하여 엔티티를 다양한 표현으로 확장 가능한 메커니즘으로 전송할 수 있습니다. 그러나, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; 에 나와있는 메일 및 HTTP에 기술 된 것과 상이한 기능이 몇몇있다 &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045를&lt;/a&gt; . 이러한 차이는 바이너리 연결에 대한 성능을 최적화하고, 새로운 미디어 유형을 자유롭게 사용할 수있게하고, 날짜 비교를보다 쉽게하고, 일부 초기 HTTP 서버 및 클라이언트의 관행을 인정하기 위해 신중하게 선택되었습니다. 이 부록에서는 HTTP와 다른 특정 영역에 대해 설명합니다.&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;2045&lt;/a&gt; . 엄격한 MIME 환경으로의 프록시 및 게이트웨이는 이러한 차이점을 인식하고 필요한 경우 적절한 변환을 제공해야합니다. MIME 환경에서 HTTP 로의 프록시 및 게이트웨이도 일부 변환이 필요할 수 있으므로 차이점을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7ba038961de66fab4bc0d4ca5f738bb4971581c5" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 uses many of the constructs defined for the Internet Message
   Format [&lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt;] and the Multipurpose Internet Mail Extensions (MIME)
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt;] to allow a message body to be transmitted in an open
   variety of representations and with extensible header fields.
   However, &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; is focused only on email; applications of HTTP have
   many characteristics that differ from email; hence, HTTP has features
   that differ from MIME.  These differences were carefully chosen to
   optimize performance over binary connections, to allow greater
   freedom in the use of new media types, to make date comparisons
   easier, and to acknowledge the practice of some early HTTP servers
   and clients.

   This appendix describes specific areas where HTTP differs from MIME.
   Proxies and gateways to and from strict MIME environments need to be
   aware of these differences and provide the appropriate conversions
   where necessary.</source>
          <target state="translated">HTTP / 1.1은 인터넷 메시지 형식 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt; ] 및 MIME (Multipurpose Internet Mail Extensions) [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt; ]에 대해 정의 된 많은 구성 을 사용하여 메시지 본문을 다양한 표현으로 확장 가능한 헤더 필드와 함께 전송할 수 있습니다. 그러나 &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;이메일에만 집중합니다. HTTP 애플리케이션에는 이메일과 다른 많은 특성이 있습니다. 따라서 HTTP에는 MIME과 다른 기능이 있습니다. 이러한 차이는 바이너리 연결에 대한 성능을 최적화하고, 새로운 미디어 유형을 자유롭게 사용할 수있게하고, 날짜 비교를보다 쉽게하고, 일부 초기 HTTP 서버 및 클라이언트의 관행을 인정하기 위해 신중하게 선택되었습니다. 이 부록에서는 HTTP가 MIME과 다른 특정 영역에 대해 설명합니다. 엄격한 MIME 환경과의 프록시 및 게이트웨이는 이러한 차이점을 인식하고 필요한 경우 적절한 변환을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="26857a3eb014d1c446a022b99900a2e1fa1f388e" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was first published as &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; in January 1997.</source>
          <target state="translated">HTTP / 1.1은 1997 년 1 월에 &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; 로 처음 출판되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d5072f3723c431d48c51e0f349be99684fbc90ba" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was the first version of HTTP to support persistent connection and pipelining. This article explains both concepts.</source>
          <target state="translated">HTTP / 1.1은 지속적인 연결 및 파이프 라이닝을 지원하는 최초의 HTTP 버전입니다. 이 기사에서는 두 가지 개념을 모두 설명합니다.</target>
        </trans-unit>
        <trans-unit id="bd63c4dcb6457bcb6fd3cf072cc949e847bb34c1" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 was the first version of HTTP to support persistent connection and pipelining. This article explains these two concepts.</source>
          <target state="translated">HTTP / 1.1은 지속적인 연결 및 파이프 라이닝을 지원하는 최초의 HTTP 버전입니다. 이 기사에서는 이러한 두 가지 개념에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1503342ea4d0a3a7deec2528731a5bc064211705" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Authentication</source>
          <target state="translated">HTTP / 1.1 : 인증</target>
        </trans-unit>
        <trans-unit id="0c4a2c0ccd4801b8e3ca9529c7a252503dccdf00" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Semantics and Content</source>
          <target state="translated">HTTP / 1.1 : 의미론 및 내용</target>
        </trans-unit>
        <trans-unit id="c0b298b6e63b8ce602677a51d4f1e6436079232f" translate="yes" xml:space="preserve">
          <source>HTTP/1.1: Status Code Definitions</source>
          <target state="translated">HTTP / 1.1 : 상태 코드 정의</target>
        </trans-unit>
        <trans-unit id="21663f5aa54f6135626b598bc6ce1bf03ec7513b" translate="yes" xml:space="preserve">
          <source>HTTP/1.x messages have a few drawbacks for performance:</source>
          <target state="translated">HTTP / 1.x 메시지에는 성능에 몇 가지 단점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="682ec4f8ae7cf90f4fab0685ba322176bdd4f593" translate="yes" xml:space="preserve">
          <source>HTTP/2 &amp;ndash; A protocol for greater performance</source>
          <target state="translated">HTTP / 2 &amp;ndash; 성능 향상을위한 프로토콜</target>
        </trans-unit>
        <trans-unit id="a9820b1d6f7a1eb33859fc438f4a30a55193154b" translate="yes" xml:space="preserve">
          <source>HTTP/2 Frames</source>
          <target state="translated">HTTP / 2 프레임</target>
        </trans-unit>
        <trans-unit id="b9a1cc9ca8b3b857841ac45f6cab101cd76b0608" translate="yes" xml:space="preserve">
          <source>HTTP/2 adds additional models for connection management.</source>
          <target state="translated">HTTP / 2는 연결 관리를위한 추가 모델을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="54eb672058f3fe82f9b7ac710f7c24cca641a933" translate="yes" xml:space="preserve">
          <source>HTTP/2 allows a server to pre-emptively send (or &quot;push&quot;) responses
   (along with corresponding &quot;promised&quot; requests) to a client in
   association with a previous client-initiated request.  This can be
   useful when the server knows the client will need to have those
   responses available in order to fully process the response to the
   original request. 

   A client can request that server push be disabled, though this is
   negotiated for each hop independently.  The SETTINGS_ENABLE_PUSH
   setting can be set to 0 to indicate that server push is disabled.

   Promised requests MUST be cacheable (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.3&quot;&gt;[RFC7231], Section&amp;nbsp;4.2.3&lt;/a&gt;),
   MUST be safe (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;[RFC7231], Section&amp;nbsp;4.2.1&lt;/a&gt;), and MUST NOT include a
   request body.  Clients that receive a promised request that is not
   cacheable, that is not known to be safe, or that indicates the
   presence of a request body MUST reset the promised stream with a
   stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type PROTOCOL_ERROR.  Note this could
   result in the promised stream being reset if the client does not
   recognize a newly defined method as being safe.

   Pushed responses that are cacheable (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;[RFC7234], Section&amp;nbsp;3&lt;/a&gt;) can be
   stored by the client, if it implements an HTTP cache.  Pushed
   responses are considered successfully validated on the origin server
   (e.g., if the &quot;no-cache&quot; cache response directive is present
   (&lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2.2&quot;&gt;[RFC7234], Section&amp;nbsp;5.2.2&lt;/a&gt;)) while the stream identified by the
   promised stream ID is still open.

   Pushed responses that are not cacheable MUST NOT be stored by any
   HTTP cache.  They MAY be made available to the application
   separately.

   The server MUST include a value in the &quot;:authority&quot; pseudo-header
   field for which the server is authoritative (see &lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;).  A
   client MUST treat a PUSH_PROMISE for which the server is not
   authoritative as a stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of type
   PROTOCOL_ERROR.

   An intermediary can receive pushes from the server and choose not to
   forward them on to the client.  In other words, how to make use of
   the pushed information is up to that intermediary.  Equally, the
   intermediary might choose to make additional pushes to the client,
   without any action taken by the server.

   A client cannot push.  Thus, servers MUST treat the receipt of a
   PUSH_PROMISE frame as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   PROTOCOL_ERROR.  Clients MUST reject any attempt to change the
   SETTINGS_ENABLE_PUSH setting to a value other than 0 by treating the
   message as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type PROTOCOL_ERROR.</source>
          <target state="translated">HTTP / 2를 사용하면 서버가 이전 클라이언트 시작 요청과 관련하여 해당 &quot;약속 된&quot;요청과 함께 응답을 선제 적으로 전송 (또는 &quot;푸시&quot;) 할 수 있습니다. 이는 서버가 클라이언트가 원래 요청에 대한 응답을 완전히 처리하기 위해 해당 응답을 사용할 수 있어야한다는 것을 알고있을 때 유용 할 수 있습니다. 클라이언트는 각 홉에 대해 독립적으로 협상되지만 서버 푸시를 비활성화하도록 요청할 수 있습니다. SETTINGS_ENABLE_PUSH 설정을 0으로 설정하여 서버 푸시가 비활성화되었음을 나타낼 수 있습니다. 약속 된 요청은 캐시 가능해야하며 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.3&quot;&gt;[RFC7231], 섹션 4.2.3&lt;/a&gt; 참조 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;)&lt;/a&gt; 안전해야합니다 ( [RFC7231], 섹션 4.2.1 참조).)이며 요청 본문을 포함해서는 안됩니다. 캐시 할 수 없거나 안전하지 않은 것으로 알려지지 않은 약속 된 요청을 수신하거나 요청 본문의 존재를 나타내는 클라이언트는 PROTOCOL_ERROR 유형 의 스트림 오류 ( &lt;a href=&quot;#section-5.4.2&quot;&gt;섹션 5.4.2&lt;/a&gt; )로 약속 된 스트림을 재설정해야합니다 . 클라이언트가 새로 정의 된 메서드를 안전한 것으로 인식하지 못하면 약속 된 스트림이 재설정 될 수 있습니다. 캐시 가능한 푸시 응답 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;[RFC7234], 섹션 3 참조&lt;/a&gt; )은 클라이언트가 HTTP 캐시를 구현하는 경우 저장할 수 있습니다. 푸시 된 응답은 원본 서버에서 성공적으로 검증 된 것으로 간주됩니다 (예 : &quot;no-cache&quot;캐시 응답 지시문이있는 경우 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-5.2.2&quot;&gt;[RFC7234], 섹션 5.2.2).&lt;/a&gt;)) 약속 된 스트림 ID로 식별 된 스트림이 아직 열려있는 동안. 캐시 할 수없는 푸시 된 응답은 HTTP 캐시에 저장되어서는 안됩니다. 애플리케이션에서 별도로 사용할 수 있습니다. 서버는 서버가 권한이있는 &quot;: authority&quot;의사 헤더 필드에 값을 포함해야합니다 ( &lt;a href=&quot;#section-10.1&quot;&gt;섹션 10.1&lt;/a&gt; 참조 ). 클라이언트는 서버가 권한이없는 PUSH_PROMISE를 스트림 오류로 취급해야합니다 ( &lt;a href=&quot;#section-5.4.2&quot;&gt;섹션 5.4.2&lt;/a&gt;) PROTOCOL_ERROR 유형입니다. 중개자는 서버에서 푸시를 수신하고이를 클라이언트로 전달하지 않도록 선택할 수 있습니다. 즉, 푸시 된 정보를 사용하는 방법은 해당 중개자에게 달려 있습니다. 마찬가지로 중개자는 서버에서 취한 조치없이 클라이언트에 추가 푸시를 수행하도록 선택할 수 있습니다. 클라이언트는 푸시 할 수 없습니다. 따라서 서버는 PUSH_PROMISE 프레임 수신을 PROTOCOL_ERROR 유형 의 연결 오류 ( &lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt; ) 로 취급해야합니다 . 클라이언트는 메시지를 PROTOCOL_ERROR 유형 의 연결 오류 ( &lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt; ) 로 처리하여 SETTINGS_ENABLE_PUSH 설정을 0이 아닌 값으로 변경하려는 시도를 거부해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de5c597058c2601a65efadc88f948c586a1ffe49" translate="yes" xml:space="preserve">
          <source>HTTP/2 completely revisited how connections are created and maintained. This article explains how HTTP frames allow multiplexing and solve the 'head-of-line' blocking problem of former HTTP versions.</source>
          <target state="translated">HTTP / 2는 연결을 만들고 유지하는 방법을 완전히 재검토했습니다. 이 기사에서는 HTTP 프레임이 멀티플렉싱을 허용하고 이전 HTTP 버전의 'head-of-line'차단 문제를 해결하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c5d84f8ae615e7ecf29c3c866e9ab8e4f31fe842" translate="yes" xml:space="preserve">
          <source>HTTP/2 completely revisited how connections are created and maintained: this article explains how HTTP frames allow multiplexing and solve the 'head-of-line' blocking problem of former HTTP versions.</source>
          <target state="translated">HTTP / 2는 연결이 생성되고 유지되는 방법을 완전히 재검토했습니다.이 기사에서는 HTTP 프레임이 멀티플렉싱을 허용하고 이전 HTTP 버전의 'head-of-line'차단 문제를 해결하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2e8a1b1988d920e971547beb51740f33d132de14" translate="yes" xml:space="preserve">
          <source>HTTP/2 connections are persistent.  For best performance, it is
   expected that clients will not close connections until it is
   determined that no further communication with a server is necessary
   (for example, when a user navigates away from a particular web page)
   or until the server closes the connection.

   Clients SHOULD NOT open more than one HTTP/2 connection to a given
   host and port pair, where the host is derived from a URI, a selected
   alternative service [&lt;a href=&quot;#ref-ALT-SVC&quot;&gt;ALT-SVC&lt;/a&gt;], or a configured proxy.

   A client can create additional connections as replacements, either to
   replace connections that are near to exhausting the available stream
   identifier space (&lt;a href=&quot;#section-5.1.1&quot;&gt;Section 5.1.1&lt;/a&gt;), to refresh the keying material for
   a TLS connection, or to replace connections that have encountered
   errors (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;).

   A client MAY open multiple connections to the same IP address and TCP
   port using different Server Name Indication [&lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt;] values or to
   provide different TLS client certificates but SHOULD avoid creating
   multiple connections with the same configuration.

   Servers are encouraged to maintain open connections for as long as
   possible but are permitted to terminate idle connections if
   necessary.  When either endpoint chooses to close the transport-layer
   TCP connection, the terminating endpoint SHOULD first send a GOAWAY
   (&lt;a href=&quot;#section-6.8&quot;&gt;Section 6.8&lt;/a&gt;) frame so that both endpoints can reliably determine
   whether previously sent frames have been processed and gracefully
   complete or terminate any necessary remaining tasks.</source>
          <target state="translated">HTTP / 2 연결은 지속적입니다. 최상의 성능을 위해 클라이언트는 서버와의 더 이상 통신이 필요하지 않다고 판단 될 때까지 (예 : 사용자가 특정 웹 페이지를 벗어나는 경우) 또는 서버가 연결을 닫을 때까지 연결을 닫지 않을 것으로 예상됩니다. 클라이언트는 주어진 호스트 및 포트 쌍에 대해 하나 이상의 HTTP / 2 연결을 열지 않아야합니다. 여기서 호스트는 URI, 선택된 대체 서비스 [ &lt;a href=&quot;#ref-ALT-SVC&quot;&gt;ALT-SVC&lt;/a&gt; ] 또는 구성된 프록시 에서 파생됩니다 . 클라이언트는 사용 가능한 스트림 식별자 공간 ( &lt;a href=&quot;#section-5.1.1&quot;&gt;섹션 5.1.1&lt;/a&gt; ) 이 거의 소모되는 연결을 대체하거나 TLS 연결에 대한 키 자료를 새로 고치거나 오류가 발생한 연결을 대체 하기 위해 대체로 추가 연결을 만들 수 있습니다 (&lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1 항&lt;/a&gt; ). 클라이언트는 다른 서버 이름 표시 [ &lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt; ] 값을 사용하여 동일한 IP 주소 및 TCP 포트에 대한 다중 연결을 열 수 있거나 다른 TLS 클라이언트 인증서를 제공 할 수 있지만 동일한 구성으로 다중 연결을 생성하지 않아야합니다 (SHOULD). 서버는 가능한 한 오랫동안 열린 연결을 유지하는 것이 좋지만 필요한 경우 유휴 연결을 종료 할 수 있습니다. 어느 한 엔드 포인트가 전송 계층 TCP 연결을 닫도록 선택하면, 종료 엔드 포인트는 먼저 GOAWAY ( &lt;a href=&quot;#section-6.8&quot;&gt;섹션 6.8&lt;/a&gt; ) 프레임을 보내야합니다. 그래야 두 엔드 포인트가 이전에 보낸 프레임이 처리되었는지 여부를 안정적으로 결정하고 필요한 나머지 작업을 정상적으로 완료하거나 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1efc25584aecfa2add3f9dc3f180c8c930b17062" translate="yes" xml:space="preserve">
          <source>HTTP/2 does not use the Connection header field to indicate
   connection-specific header fields; in this protocol, connection-
   specific metadata is conveyed by other means.  An endpoint MUST NOT
   generate an HTTP/2 message containing connection-specific header
   fields; any message containing connection-specific header fields MUST
   be treated as malformed (&lt;a href=&quot;#section-8.1.2.6&quot;&gt;Section 8.1.2.6&lt;/a&gt;).

   The only exception to this is the TE header field, which MAY be
   present in an HTTP/2 request; when it is, it MUST NOT contain any
   value other than &quot;trailers&quot;.

   This means that an intermediary transforming an HTTP/1.x message to
   HTTP/2 will need to remove any header fields nominated by the
   Connection header field, along with the Connection header field
   itself.  Such intermediaries SHOULD also remove other connection-
   specific header fields, such as Keep-Alive, Proxy-Connection,
   Transfer-Encoding, and Upgrade, even if they are not nominated by the
   Connection header field.

      Note: HTTP/2 purposefully does not support upgrade to another
      protocol.  The handshake methods described in &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt; are
      believed sufficient to negotiate the use of alternative protocols.</source>
          <target state="translated">HTTP / 2는 연결 특정 헤더 필드를 나타 내기 위해 Connection 헤더 필드를 사용하지 않습니다. 이 프로토콜에서 연결 별 메타 데이터는 다른 수단으로 전달됩니다. 엔드 포인트는 연결 특정 헤더 필드를 포함하는 HTTP / 2 메시지를 생성해서는 안됩니다. 연결 특정 헤더 필드를 포함하는 모든 메시지는 잘못된 형식으로 처리되어야합니다 ( &lt;a href=&quot;#section-8.1.2.6&quot;&gt;섹션 8.1.2.6&lt;/a&gt;). 이에 대한 유일한 예외는 HTTP / 2 요청에 존재할 수있는 TE 헤더 필드입니다. 이 경우 &quot;예고편&quot;이외의 값을 포함해서는 안됩니다. 이는 HTTP / 1.x 메시지를 HTTP / 2로 변환하는 중개자가 Connection 헤더 필드 자체와 함께 Connection 헤더 필드에서 지정한 헤더 필드를 제거해야 함을 의미합니다. 이러한 중개자는 연결 헤더 필드에 의해 지정되지 않더라도 Keep-Alive, Proxy-Connection, Transfer-Encoding 및 Upgrade와 같은 다른 연결 특정 헤더 필드도 제거해야합니다 (SHOULD). 참고 : HTTP / 2는 의도적으로 다른 프로토콜로의 업그레이드를 지원하지 않습니다. &lt;a href=&quot;#section-3&quot;&gt;섹션 3에&lt;/a&gt; 설명 된 핸드 셰이크 방법 은 대체 프로토콜의 사용을 협상하기에 충분하다고 생각됩니다.</target>
        </trans-unit>
        <trans-unit id="7f0a10f9ce0b6e8be8176a0d0cf459883c237676" translate="yes" xml:space="preserve">
          <source>HTTP/2 encapsulates and represents HTTP/1.x messages in a binary frame. This article explains the frame structure, its purpose and the way it is encoded.</source>
          <target state="translated">HTTP / 2는 HTTP / 1.x 메시지를 이진 프레임으로 캡슐화하고 나타냅니다. 이 기사에서는 프레임 구조, 목적 및 인코딩 방식에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8b89d94c6825e208193b0c3215145db1ad533fe7" translate="yes" xml:space="preserve">
          <source>HTTP/2 encapsulates and represents HTTP/1.x messages in a binary frame. This article explains the frame structure, its purpose, and the way it's encoded.</source>
          <target state="translated">HTTP / 2는 이진 프레임에 HTTP / 1.x 메시지를 캡슐화하고 나타냅니다. 이 기사에서는 프레임 구조, 용도 및 인코딩 방식에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ba56fda18c2bd152dfb61f66462a8db0fe469c40" translate="yes" xml:space="preserve">
          <source>HTTP/2 explicitly disallows the use of this mechanism/header; it is specific to HTTP/1.1.</source>
          <target state="translated">HTTP / 2는이 메커니즘 / 헤더의 사용을 명시 적으로 허용하지 않습니다. HTTP / 1.1에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="0c2199ec4bbb69f26ef0e867c04766b55d384a12" translate="yes" xml:space="preserve">
          <source>HTTP/2 framing permits two classes of error:

   o  An error condition that renders the entire connection unusable is
      a connection error.

   o  An error in an individual stream is a stream error.

   A list of error codes is included in &lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;.</source>
          <target state="translated">HTTP / 2 프레이밍은 두 가지 오류 클래스를 허용합니다. o 전체 연결을 사용할 수 없게 만드는 오류 조건은 연결 오류입니다. o 개별 스트림의 오류는 스트림 오류입니다. 오류 코드 목록은 &lt;a href=&quot;#section-7&quot;&gt;섹션 7에&lt;/a&gt; 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f6c2df4a46eb441a1cda15f98cf3c5243cca600" translate="yes" xml:space="preserve">
          <source>HTTP/2 introduces an extra step: it divides HTTP/1.x messages into frames which are embedded in a stream. Data and header frames are separated, this allows header compression. Several streams can be combined together, a process called &lt;em&gt;multiplexing&lt;/em&gt;, allowing more efficient underlying TCP connections.</source>
          <target state="translated">HTTP / 2는 추가 단계를 도입합니다. HTTP / 1.x 메시지를 스트림에 포함 된 프레임으로 나눕니다. 데이터와 헤더 프레임이 분리되어 헤더 압축이 가능합니다. &lt;em&gt;멀티플렉싱 (multiplexing&lt;/em&gt; ) 이라는 여러 스트림을 결합 하여보다 효율적인 기본 TCP 연결을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="bc53da359a0e569373e6fa4412bc22e2cf58dd05" translate="yes" xml:space="preserve">
          <source>HTTP/2 is intended to be as compatible as possible with current uses
   of HTTP.  This means that, from the application perspective, the
   features of the protocol are largely unchanged.  To achieve this, all
   request and response semantics are preserved, although the syntax of
   conveying those semantics has changed.

   Thus, the specification and requirements of HTTP/1.1 Semantics and
   Content [&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt;], Conditional Requests [&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt;], Range Requests
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;], Caching [&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;], and Authentication [&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt;] are
   applicable to HTTP/2.  Selected portions of HTTP/1.1 Message Syntax 

   and Routing [&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;], such as the HTTP and HTTPS URI schemes, are
   also applicable in HTTP/2, but the expression of those semantics for
   this protocol are defined in the sections below.</source>
          <target state="translated">HTTP / 2는 현재 HTTP 사용과 최대한 호환되도록 설계되었습니다. 이는 애플리케이션 관점에서 프로토콜의 기능이 거의 변경되지 않았 음을 의미합니다. 이를 달성하기 위해 모든 요청 및 응답 의미가 보존되지만 해당 의미를 전달하는 구문이 변경되었습니다. 따라서 HTTP / 1.1 의미 및 콘텐츠 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC7231&lt;/a&gt; ], 조건부 요청 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot;&gt;RFC7232&lt;/a&gt; ], 범위 요청 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt; ], 캐싱 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt; ] 및 인증 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt; ] 의 사양 및 요구 사항이 HTTP / 2에 적용됩니다. HTTP / 1.1 메시지 구문 및 라우팅의 선택된 부분 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;] (예 : HTTP 및 HTTPS URI 스킴)은 HTTP / 2에도 적용 가능하지만이 프로토콜에 대한 의미의 표현은 아래 섹션에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e9edb835c33550cd700f0b5e17b2557aefdd2e70" translate="yes" xml:space="preserve">
          <source>HTTP/2 permits extension of the protocol.  Within the limitations
   described in this section, protocol extensions can be used to provide
   additional services or alter any aspect of the protocol.  Extensions
   are effective only within the scope of a single HTTP/2 connection.

   This applies to the protocol elements defined in this document.  This
   does not affect the existing options for extending HTTP, such as
   defining new methods, status codes, or header fields.

   Extensions are permitted to use new frame types (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;), new
   settings (&lt;a href=&quot;#section-6.5.2&quot;&gt;Section 6.5.2&lt;/a&gt;), or new error codes (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).  Registries
   are established for managing these extension points: frame types
   (&lt;a href=&quot;#section-11.2&quot;&gt;Section 11.2&lt;/a&gt;), settings (&lt;a href=&quot;#section-11.3&quot;&gt;Section 11.3&lt;/a&gt;), and error codes
   (&lt;a href=&quot;#section-11.4&quot;&gt;Section 11.4&lt;/a&gt;).

   Implementations MUST ignore unknown or unsupported values in all
   extensible protocol elements.  Implementations MUST discard frames
   that have unknown or unsupported types.  This means that any of these
   extension points can be safely used by extensions without prior
   arrangement or negotiation.  However, extension frames that appear in
   the middle of a header block (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;) are not permitted; these
   MUST be treated as a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   PROTOCOL_ERROR.

   Extensions that could change the semantics of existing protocol
   components MUST be negotiated before being used.  For example, an
   extension that changes the layout of the HEADERS frame cannot be used
   until the peer has given a positive signal that this is acceptable.
   In this case, it could also be necessary to coordinate when the
   revised layout comes into effect.  Note that treating any frames
   other than DATA frames as flow controlled is such a change in
   semantics and can only be done through negotiation.

   This document doesn't mandate a specific method for negotiating the
   use of an extension but notes that a setting (&lt;a href=&quot;#section-6.5.2&quot;&gt;Section 6.5.2&lt;/a&gt;) could be
   used for that purpose.  If both peers set a value that indicates
   willingness to use the extension, then the extension can be used.  If 

   a setting is used for extension negotiation, the initial value MUST
   be defined in such a fashion that the extension is initially
   disabled.</source>
          <target state="translated">HTTP / 2는 프로토콜의 확장을 허용합니다. 이 섹션에 설명 된 제한 내에서 프로토콜 확장을 사용하여 추가 서비스를 제공하거나 프로토콜의 모든 측면을 변경할 수 있습니다. 확장은 단일 HTTP / 2 연결 범위 내에서만 유효합니다. 이는이 문서에 정의 된 프로토콜 요소에 적용됩니다. 이는 새 메소드, 상태 코드 또는 헤더 필드 정의와 같은 HTTP 확장을위한 기존 옵션에 영향을주지 않습니다. 확장은 새 프레임 유형 ( &lt;a href=&quot;#section-4.1&quot;&gt;섹션 4.1&lt;/a&gt; ), 새 설정 ( &lt;a href=&quot;#section-6.5.2&quot;&gt;섹션 6.5.2&lt;/a&gt; ) 또는 새 오류 코드 ( &lt;a href=&quot;#section-7&quot;&gt;섹션 7&lt;/a&gt; )를 사용할 수 있습니다. 이러한 확장 점을 관리하기위한 레지스트리가 설정됩니다 : 프레임 유형 ( &lt;a href=&quot;#section-11.2&quot;&gt;섹션 11.2&lt;/a&gt; ), 설정 ( &lt;a href=&quot;#section-11.3&quot;&gt;섹션 11.3&lt;/a&gt; ) 및 오류 코드 (&lt;a href=&quot;#section-11.4&quot;&gt;섹션 11.4&lt;/a&gt; ). 구현은 모든 확장 가능한 프로토콜 요소에서 알 수 없거나 지원되지 않는 값을 무시해야합니다. 구현은 알 수 없거나 지원되지 않는 유형을 가진 프레임을 폐기해야합니다. 즉, 이러한 확장 점은 사전 준비 나 협상없이 확장에서 안전하게 사용할 수 있습니다. 그러나 헤더 블록 ( &lt;a href=&quot;#section-4.3&quot;&gt;섹션 4.3&lt;/a&gt; ) 중간에 나타나는 확장 프레임 은 허용되지 않습니다. 이는 연결 오류로 처리되어야합니다 ( &lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt;) PROTOCOL_ERROR 유형입니다. 기존 프로토콜 구성 요소의 의미를 변경할 수있는 확장은 사용하기 전에 협상해야합니다. 예를 들어, HEADERS 프레임의 레이아웃을 변경하는 확장은 피어가 이것이 허용된다는 긍정적 인 신호를 줄 때까지 사용할 수 없습니다. 이 경우 수정 된 레이아웃이 적용될 때 조정해야 할 수도 있습니다. DATA 프레임 이외의 프레임을 흐름 제어로 처리하는 것은 의미 체계의 변경이며 협상을 통해서만 수행 할 수 있습니다. 이 문서는 확장의 사용을 협상하기위한 특정 방법을 요구하지 않지만 설정 ( &lt;a href=&quot;#section-6.5.2&quot;&gt;섹션 6.5.2&lt;/a&gt;)을 사용할 수 있습니다. 두 피어가 모두 확장을 사용할 의사가 있음을 나타내는 값을 설정하면 확장을 사용할 수 있습니다. 설정이 확장 협상에 사용되는 경우 초기 값은 확장이 초기에 비활성화되는 방식으로 정의되어야합니다.</target>
        </trans-unit>
        <trans-unit id="22c5a1b25e6a4fea1e7bbf65b201a3854ef9fe0d" translate="yes" xml:space="preserve">
          <source>HTTP/2 provides an optimized transport for HTTP semantics.  HTTP/2
   supports all of the core features of HTTP/1.1 but aims to be more
   efficient in several ways.

   The basic protocol unit in HTTP/2 is a frame (&lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;).  Each
   frame type serves a different purpose.  For example, HEADERS and DATA
   frames form the basis of HTTP requests and responses (&lt;a href=&quot;#section-8.1&quot;&gt;Section 8.1&lt;/a&gt;);
   other frame types like SETTINGS, WINDOW_UPDATE, and PUSH_PROMISE are
   used in support of other HTTP/2 features.

   Multiplexing of requests is achieved by having each HTTP request/
   response exchange associated with its own stream (&lt;a href=&quot;#section-5&quot;&gt;Section 5&lt;/a&gt;).
   Streams are largely independent of each other, so a blocked or
   stalled request or response does not prevent progress on other
   streams.

   Flow control and prioritization ensure that it is possible to
   efficiently use multiplexed streams.  Flow control (&lt;a href=&quot;#section-5.2&quot;&gt;Section 5.2&lt;/a&gt;)
   helps to ensure that only data that can be used by a receiver is
   transmitted.  Prioritization (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) ensures that limited
   resources can be directed to the most important streams first.

   HTTP/2 adds a new interaction mode whereby a server can push
   responses to a client (&lt;a href=&quot;#section-8.2&quot;&gt;Section 8.2&lt;/a&gt;).  Server push allows a server to
   speculatively send data to a client that the server anticipates the
   client will need, trading off some network usage against a potential
   latency gain.  The server does this by synthesizing a request, which
   it sends as a PUSH_PROMISE frame.  The server is then able to send a
   response to the synthetic request on a separate stream.

   Because HTTP header fields used in a connection can contain large
   amounts of redundant data, frames that contain them are compressed
   (&lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;).  This has especially advantageous impact upon request
   sizes in the common case, allowing many requests to be compressed
   into one packet.</source>
          <target state="translated">HTTP / 2는 HTTP 의미 체계에 최적화 된 전송을 제공합니다. HTTP / 2는 HTTP / 1.1의 모든 핵심 기능을 지원하지만 여러면에서보다 효율적을 목표로합니다. HTTP / 2의 기본 프로토콜 단위는 프레임입니다 ( &lt;a href=&quot;#section-4.1&quot;&gt;섹션 4.1&lt;/a&gt; ). 각 프레임 유형은 다른 용도로 사용됩니다. 예를 들어, HEADERS 및 DATA 프레임은 HTTP 요청 및 응답의 기초를 형성합니다 ( &lt;a href=&quot;#section-8.1&quot;&gt;섹션 8.1&lt;/a&gt; ). SETTINGS, WINDOW_UPDATE 및 PUSH_PROMISE와 같은 다른 프레임 유형은 다른 HTTP / 2 기능을 지원하는 데 사용됩니다. 요청 멀티플렉싱은 각 HTTP 요청 / 응답 교환을 자체 스트림과 연결함으로써 달성됩니다 ( &lt;a href=&quot;#section-5&quot;&gt;섹션 5&lt;/a&gt;). 스트림은 대체로 서로 독립적이므로 차단되거나 지연된 요청 또는 응답이 다른 스트림의 진행을 방해하지 않습니다. 흐름 제어 및 우선 순위 지정을 통해 다중 스트림을 효율적으로 사용할 수 있습니다. 흐름 제어 ( &lt;a href=&quot;#section-5.2&quot;&gt;섹션 5.2&lt;/a&gt; )는 수신기에서 사용할 수있는 데이터 만 전송되도록합니다. 우선 순위 지정 ( &lt;a href=&quot;#section-5.3&quot;&gt;섹션 5.3&lt;/a&gt; )은 제한된 리소스를 가장 중요한 스트림으로 먼저 보낼 수 있도록합니다. HTTP / 2는 서버가 클라이언트에 응답을 푸시 할 수있는 새로운 상호 작용 모드를 추가합니다 ( &lt;a href=&quot;#section-8.2&quot;&gt;섹션 8.2&lt;/a&gt;). 서버 푸시를 사용하면 서버가 클라이언트가 필요로 할 것으로 예상하는 데이터를 예측 적으로 전송할 수 있으며 잠재적 인 대기 시간 이득에 대해 일부 네트워크 사용량을 상쇄 할 수 있습니다. 서버는 PUSH_PROMISE 프레임으로 전송하는 요청을 합성하여이를 수행합니다. 그런 다음 서버는 별도의 스트림에서 합성 요청에 대한 응답을 보낼 수 있습니다. 연결에 사용되는 HTTP 헤더 필드에는 많은 양의 중복 데이터가 포함될 수 있으므로이를 포함하는 프레임이 압축됩니다 ( &lt;a href=&quot;#section-4.3&quot;&gt;섹션 4.3&lt;/a&gt; ). 이는 일반적인 경우 요청 크기에 특히 유리한 영향을 미치므로 많은 요청을 하나의 패킷으로 압축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6d3d6527a518220064866c33fee8ad8d1d0d9e1" translate="yes" xml:space="preserve">
          <source>HTTP/2 relies on the HTTP/1.1 definition of authority for determining
   whether a server is authoritative in providing a given response (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-9.1&quot;&gt;[RFC7230], Section&amp;nbsp;9.1&lt;/a&gt;).  This relies on local name resolution for
   the &quot;http&quot; URI scheme and the authenticated server identity for the
   &quot;https&quot; scheme (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2818#section-3&quot;&gt;[RFC2818], Section&amp;nbsp;3&lt;/a&gt;).</source>
          <target state="translated">HTTP / 2는 서버가 주어진 응답을 제공 할 때 권한이 있는지 여부를 결정하기 위해 권한의 HTTP / 1.1 정의에 의존합니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-9.1&quot;&gt;[RFC7230], 섹션 9.1 참조&lt;/a&gt; ). 이것은 &quot;http&quot;URI 체계에 대한 로컬 이름 확인과 &quot;https&quot;체계에 대한 인증 된 서버 ID에 &lt;a href=&quot;https://tools.ietf.org/html/rfc2818#section-3&quot;&gt;의존합니다&lt;/a&gt; ( [RFC2818], 섹션 3 참조 ).</target>
        </trans-unit>
        <trans-unit id="09a20a6daa697cc2c8f65f130ec7eeb86fda81cc" translate="yes" xml:space="preserve">
          <source>HTTP/2 removes support for the 101 (Switching Protocols)
   informational status code (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2.2&quot;&gt;[RFC7231], Section&amp;nbsp;6.2.2&lt;/a&gt;).

   The semantics of 101 (Switching Protocols) aren't applicable to a
   multiplexed protocol.  Alternative protocols are able to use the same
   mechanisms that HTTP/2 uses to negotiate their use (see &lt;a href=&quot;#section-3&quot;&gt;Section 3&lt;/a&gt;).</source>
          <target state="translated">HTTP / 2는 101 (스위칭 프로토콜) 정보 상태 코드 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.2.2&quot;&gt;[RFC7231], 섹션 6.2.2&lt;/a&gt; )에 대한 지원을 제거합니다 . 101 (스위칭 프로토콜)의 의미는 다중 프로토콜에 적용 할 수 없습니다. 대체 프로토콜은 HTTP / 2가 사용을 협상하는 데 사용하는 것과 동일한 메커니즘을 사용할 수 있습니다 ( &lt;a href=&quot;#section-3&quot;&gt;섹션 3&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a6307824ad0a5d4b71efa2a434d199cfb09c04ad" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream flow control aims to allow a variety of flow-control
   algorithms to be used without requiring protocol changes.  Flow
   control in HTTP/2 has the following characteristics:

   1.  Flow control is specific to a connection.  Both types of flow
       control are between the endpoints of a single hop and not over
       the entire end-to-end path.

   2.  Flow control is based on WINDOW_UPDATE frames.  Receivers
       advertise how many octets they are prepared to receive on a
       stream and for the entire connection.  This is a credit-based
       scheme.

   3.  Flow control is directional with overall control provided by the
       receiver.  A receiver MAY choose to set any window size that it
       desires for each stream and for the entire connection.  A sender
       MUST respect flow-control limits imposed by a receiver.  Clients,
       servers, and intermediaries all independently advertise their
       flow-control window as a receiver and abide by the flow-control
       limits set by their peer when sending.

   4.  The initial value for the flow-control window is 65,535 octets
       for both new streams and the overall connection.

   5.  The frame type determines whether flow control applies to a
       frame.  Of the frames specified in this document, only DATA
       frames are subject to flow control; all other frame types do not
       consume space in the advertised flow-control window.  This
       ensures that important control frames are not blocked by flow
       control.

   6.  Flow control cannot be disabled.

   7.  HTTP/2 defines only the format and semantics of the WINDOW_UPDATE
       frame (&lt;a href=&quot;#section-6.9&quot;&gt;Section 6.9&lt;/a&gt;).  This document does not stipulate how a
       receiver decides when to send this frame or the value that it
       sends, nor does it specify how a sender chooses to send packets.
       Implementations are able to select any algorithm that suits their
       needs.

   Implementations are also responsible for managing how requests and
   responses are sent based on priority, choosing how to avoid head-of-
   line blocking for requests, and managing the creation of new streams.
   Algorithm choices for these could interact with any flow-control
   algorithm.</source>
          <target state="translated">HTTP / 2 스트림 흐름 제어는 프로토콜 변경없이 다양한 흐름 제어 알고리즘을 사용할 수 있도록하는 것을 목표로합니다. HTTP / 2의 흐름 제어에는 다음과 같은 특성이 있습니다. 1. 흐름 제어는 연결에 따라 다릅니다. 두 가지 유형의 흐름 제어는 전체 종단 간 경로가 아닌 단일 홉의 끝점 사이에 있습니다. 2. 흐름 제어는 WINDOW_UPDATE 프레임을 기반으로합니다. 수신기는 스트림과 전체 연결에 대해 수신 할 준비가 된 옥텟 수를 알립니다. 이것은 신용 기반 제도입니다. 3. 흐름 제어는 수신기가 제공하는 전체 제어와 방향성이 있습니다. 수신자는 각 스트림과 전체 연결에 대해 원하는 창 크기를 설정할 수 있습니다. 발신자는 수신자가 부과 한 흐름 제어 제한을 준수해야합니다. 클라이언트, 서버,중개자는 모두 독립적으로 자신의 흐름 제어 창을 수신자로 광고하고 전송할 때 피어가 설정 한 흐름 제어 제한을 준수합니다. 4. 흐름 제어 창의 초기 값은 새 스트림과 전체 연결 모두에 대해 65,535 옥텟입니다. 5. 프레임 유형은 흐름 제어가 프레임에 적용되는지 여부를 결정합니다. 이 문서에 지정된 프레임 중 DATA 프레임 만 흐름 제어의 대상이됩니다. 다른 모든 프레임 유형은 공지 된 흐름 제어 창에서 공간을 사용하지 않습니다. 이것은 중요한 제어 프레임이 흐름 제어에 의해 차단되지 않도록합니다. 6. 흐름 제어를 비활성화 할 수 없습니다. 7. HTTP / 2는 WINDOW_UPDATE 프레임의 형식과 의미 만 정의합니다 (새 스트림과 전체 연결 모두에 대해 535 옥텟. 5. 프레임 유형은 흐름 제어가 프레임에 적용되는지 여부를 결정합니다. 이 문서에 지정된 프레임 중 DATA 프레임 만 흐름 제어의 대상이됩니다. 다른 모든 프레임 유형은 공지 된 흐름 제어 창에서 공간을 사용하지 않습니다. 이것은 중요한 제어 프레임이 흐름 제어에 의해 차단되지 않도록합니다. 6. 흐름 제어를 비활성화 할 수 없습니다. 7. HTTP / 2는 WINDOW_UPDATE 프레임의 형식과 의미 만 정의합니다 (새 스트림과 전체 연결 모두에 대해 535 옥텟. 5. 프레임 유형은 흐름 제어가 프레임에 적용되는지 여부를 결정합니다. 이 문서에 지정된 프레임 중 DATA 프레임 만 흐름 제어의 대상이됩니다. 다른 모든 프레임 유형은 공지 된 흐름 제어 창에서 공간을 사용하지 않습니다. 이것은 중요한 제어 프레임이 흐름 제어에 의해 차단되지 않도록합니다. 6. 흐름 제어를 비활성화 할 수 없습니다. 7. HTTP / 2는 WINDOW_UPDATE 프레임의 형식과 의미 만 정의합니다 (흐름 제어는 비활성화 할 수 없습니다. 7. HTTP / 2는 WINDOW_UPDATE 프레임의 형식과 의미 만 정의합니다 (흐름 제어는 비활성화 할 수 없습니다. 7. HTTP / 2는 WINDOW_UPDATE 프레임의 형식과 의미 만 정의합니다 (&lt;a href=&quot;#section-6.9&quot;&gt;섹션 6.9&lt;/a&gt; ). 이 문서는 수신자가이 프레임을 보낼시기 또는 보내는 값을 결정하는 방법을 규정하지 않으며 보낸 사람이 패킷을 보내는 방법을 지정하지도 않습니다. 구현은 필요에 맞는 알고리즘을 선택할 수 있습니다. 구현은 또한 우선 순위에 따라 요청 및 응답이 전송되는 방식을 관리하고 요청에 대한 헤드 오브 라인 차단을 방지하는 방법을 선택하며 새 스트림 생성을 관리 할 책임이 있습니다. 이들에 대한 알고리즘 선택은 모든 흐름 제어 알고리즘과 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a496c90d2f1f8118ed8e04e7a7acf8027e245b96" translate="yes" xml:space="preserve">
          <source>HTTP/3 - HTTP over QUIC</source>
          <target state="translated">HTTP / 3-QUIC를 통한 HTTP</target>
        </trans-unit>
        <trans-unit id="2e6205295940162ec6f356951c335bcb251f4584" translate="yes" xml:space="preserve">
          <source>HTTPS &lt;em&gt;host:port&lt;/em&gt;</source>
          <target state="translated">HTTPS &lt;em&gt;호스트 : 포트&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b1b03288626a4932189c45619afd52b616640ff" translate="yes" xml:space="preserve">
          <source>Handling CORS on the server (Java example)</source>
          <target state="translated">서버에서 CORS 처리 (Java 예)</target>
        </trans-unit>
        <trans-unit id="76ccff916d0696e0db6e0e63211aa5d404b177bb" translate="yes" xml:space="preserve">
          <source>Handshake</source>
          <target state="translated">Handshake</target>
        </trans-unit>
        <trans-unit id="ef63c9de46b2633531f80d09b249c8177fb13159" translate="yes" xml:space="preserve">
          <source>Header field name:  SLUG

   Applicable protocol:  http [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;]

   Status:  standard.

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force

   Specification document(s):  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Related information:  None.</source>
          <target state="translated">헤더 필드 이름 : SLUG 적용 가능한 프로토콜 : http [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ] 상태 : 표준. 작성자 / 변경 컨트롤러 : IETF (iesg@ietf.org) 인터넷 엔지니어링 태스크 포스 사양 문서 : &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt; . 관련 정보 : 없음</target>
        </trans-unit>
        <trans-unit id="16c88366423875ffcd832b0568164659af366f76" translate="yes" xml:space="preserve">
          <source>Header field name: DAV

   Applicable protocol: http

   Status: standard 

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : DAV 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.1&quot;&gt;10.1 절&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0a425ee275ccc8dc88e573145d9bc8f251db402b" translate="yes" xml:space="preserve">
          <source>Header field name: Depth

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.2&quot;&gt;Section 10.2&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 깊이 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.2&quot;&gt;섹션 10.2&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0b05ddbc40717bf61ebce12546f2a61a4a13a71f" translate="yes" xml:space="preserve">
          <source>Header field name: Destination

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.3&quot;&gt;Section 10.3&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 대상 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.3&quot;&gt;섹션 10.3&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="80f31a912be49327cab8cfb0f3ab988e1efad182" translate="yes" xml:space="preserve">
          <source>Header field name: If

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.4&quot;&gt;Section 10.4&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 해당되는 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.4&quot;&gt;섹션 10.4&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="405cc2ed9285599fe7b4ed659f2f3efef397c235" translate="yes" xml:space="preserve">
          <source>Header field name: Lock-Token

   Applicable protocol: http

   Status: standard 

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.5&quot;&gt;Section 10.5&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 잠금 토큰 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.5&quot;&gt;10.5 절&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="0ef45169928c0bea57455212198061a9ab1aac96" translate="yes" xml:space="preserve">
          <source>Header field name: Overwrite

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.6&quot;&gt;Section 10.6&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 덮어 쓰기 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.6&quot;&gt;섹션 10.6&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ebc42438bb349fc70f9ce54ef8a83a2205114a92" translate="yes" xml:space="preserve">
          <source>Header field name: Timeout

   Applicable protocol: http

   Status: standard

   Author/Change controller: IETF

   Specification document: this specification (&lt;a href=&quot;#section-10.7&quot;&gt;Section 10.7&lt;/a&gt;)</source>
          <target state="translated">헤더 필드 이름 : 타임 아웃 적용 가능한 프로토콜 : http 상태 : 표준 작성자 / 변경 컨트롤러 : IETF 사양 문서 :이 사양 ( &lt;a href=&quot;#section-10.7&quot;&gt;10.7 절&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4ab8eed7600b67916da46088b86ba4f2a325716b" translate="yes" xml:space="preserve">
          <source>Header fields are fully extensible: there is no limit on the
   introduction of new field names, each presumably defining new
   semantics, nor on the number of header fields used in a given
   message.  Existing fields are defined in each part of this
   specification and in many other specifications outside this document
   set.

   New header fields can be defined such that, when they are understood
   by a recipient, they might override or enhance the interpretation of
   previously defined header fields, define preconditions on request
   evaluation, or refine the meaning of responses.

   A proxy MUST forward unrecognized header fields unless the field-name
   is listed in the Connection header field (&lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;) or the proxy
   is specifically configured to block, or otherwise transform, such
   fields.  Other recipients SHOULD ignore unrecognized header fields.
   These requirements allow HTTP's functionality to be enhanced without
   requiring prior update of deployed intermediaries.

   All defined header fields ought to be registered with IANA in the
   &quot;Message Headers&quot; registry, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-8.3&quot;&gt;Section&amp;nbsp;8.3 of [RFC7231]&lt;/a&gt;.</source>
          <target state="translated">헤더 필드는 완전히 확장 가능합니다. 새로운 필드 이름의 도입, 각각 새로운 의미론을 정의 할 가능성이 있거나 주어진 메시지에 사용 된 헤더 필드의 수에는 제한이 없습니다. 기존 필드는이 사양의 각 부분과이 문서 집합 이외의 다른 많은 사양에 정의되어 있습니다. 새로운 헤더 필드는 수신자가 이해할 때 이전에 정의 된 헤더 필드의 해석을 무시하거나 향상 시키거나 요청 평가시 전제 조건을 정의하거나 응답의 의미를 세분화 할 수 있도록 정의 할 수 있습니다. 필드 이름이 연결 헤더 필드에 나열되어 있지 않으면 프록시는 인식 할 수없는 헤더 필드를 전달해야합니다 ( &lt;a href=&quot;#section-6.1&quot;&gt;6.1 절&lt;/a&gt;) 또는 프록시는 이러한 필드를 차단하거나 달리 변환하도록 구체적으로 구성됩니다. 다른 수신자는 인식 할 수없는 헤더 필드를 무시해야합니다. 이러한 요구 사항을 통해 배포 된 중개자의 사전 업데이트없이 HTTP 기능을 향상시킬 수 있습니다. 정의 된 모든 헤더 필드 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-8.3&quot;&gt;는 [RFC7231] 8.3 절에&lt;/a&gt; 설명 된대로 &quot;메시지 헤더&quot;레지스트리에서 IANA에 등록되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a40e00de254d23c5e44ccdfe307162d5d4ecbef3" translate="yes" xml:space="preserve">
          <source>Header fields are key:value pairs that can be used to communicate
   data about the message, its payload, the target resource, or the
   connection (i.e., control data).  See &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7230]&lt;/a&gt; for a
   general definition of header field syntax in HTTP messages.

   The requirements for header field names are defined in [&lt;a href=&quot;#ref-BCP90&quot;&gt;BCP90&lt;/a&gt;].

   Authors of specifications defining new fields are advised to keep the
   name as short as practical and not to prefix the name with &quot;X-&quot;
   unless the header field will never be used on the Internet.  (The
   &quot;X-&quot; prefix idiom has been extensively misused in practice; it was
   intended to only be used as a mechanism for avoiding name collisions
   inside proprietary software or intranet processing, since the prefix
   would ensure that private names never collide with a newly registered
   Internet name; see [&lt;a href=&quot;#ref-BCP178&quot;&gt;BCP178&lt;/a&gt;] for further information).

   New header field values typically have their syntax defined using
   ABNF ([&lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt;]), using the extension defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-7&quot;&gt;Section&amp;nbsp;7 of
   [RFC7230]&lt;/a&gt; as necessary, and are usually constrained to the range of
   US-ASCII characters.  Header fields needing a greater range of
   characters can use an encoding such as the one defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc5987&quot;&gt;RFC5987&lt;/a&gt;].

   Leading and trailing whitespace in raw field values is removed upon
   field parsing (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.4&quot;&gt;Section&amp;nbsp;3.2.4 of [RFC7230]&lt;/a&gt;).  Field definitions where
   leading or trailing whitespace in values is significant will have to
   use a container syntax such as quoted-string (&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;Section&amp;nbsp;3.2.6 of
   [RFC7230]&lt;/a&gt;).

   Because commas (&quot;,&quot;) are used as a generic delimiter between
   field-values, they need to be treated with care if they are allowed
   in the field-value.  Typically, components that might contain a comma
   are protected with double-quotes using the quoted-string ABNF
   production.

   For example, a textual date and a URI (either of which might contain
   a comma) could be safely carried in field-values like these:

     Example-URI-Field: &quot;http://example.com/a.html,foo&quot;,
                        &quot;http://without-a-comma.example.com/&quot;
     Example-Date-Field: &quot;Sat, 04 May 1996&quot;, &quot;Wed, 14 Sep 2005&quot;

   Note that double-quote delimiters almost always are used with the
   quoted-string production; using a different syntax inside
   double-quotes will likely cause unnecessary confusion. 

   Many header fields use a format including (case-insensitively) named
   parameters (for instance, Content-Type, defined in &lt;a href=&quot;#section-3.1.1.5&quot;&gt;Section 3.1.1.5&lt;/a&gt;).
   Allowing both unquoted (token) and quoted (quoted-string) syntax for
   the parameter value enables recipients to use existing parser
   components.  When allowing both forms, the meaning of a parameter
   value ought to be independent of the syntax used for it (for an
   example, see the notes on parameter handling for media types in
   &lt;a href=&quot;#section-3.1.1.1&quot;&gt;Section 3.1.1.1&lt;/a&gt;).

   Authors of specifications defining new header fields are advised to
   consider documenting:

   o  Whether the field is a single value or whether it can be a list
      (delimited by commas; see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;Section&amp;nbsp;3.2 of [RFC7230]&lt;/a&gt;).

      If it does not use the list syntax, document how to treat messages
      where the field occurs multiple times (a sensible default would be
      to ignore the field, but this might not always be the right
      choice).

      Note that intermediaries and software libraries might combine
      multiple header field instances into a single one, despite the
      field's definition not allowing the list syntax.  A robust format
      enables recipients to discover these situations (good example:
      &quot;Content-Type&quot;, as the comma can only appear inside quoted
      strings; bad example: &quot;Location&quot;, as a comma can occur inside a
      URI).

   o  Under what conditions the header field can be used; e.g., only in
      responses or requests, in all messages, only on responses to a
      particular request method, etc.

   o  Whether the field should be stored by origin servers that
      understand it upon a PUT request.

   o  Whether the field semantics are further refined by the context,
      such as by existing request methods or status codes.

   o  Whether it is appropriate to list the field-name in the Connection
      header field (i.e., if the header field is to be hop-by-hop; see
      &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of [RFC7230]&lt;/a&gt;).

   o  Under what conditions intermediaries are allowed to insert,
      delete, or modify the field's value. 

   o  Whether it is appropriate to list the field-name in a Vary
      response header field (e.g., when the request header field is used
      by an origin server's content selection algorithm; see
      &lt;a href=&quot;#section-7.1.4&quot;&gt;Section 7.1.4&lt;/a&gt;).

   o  Whether the header field is useful or allowable in trailers (see
      &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;Section&amp;nbsp;4.1 of [RFC7230]&lt;/a&gt;).

   o  Whether the header field ought to be preserved across redirects.

   o  Whether it introduces any additional security considerations, such
      as disclosure of privacy-related data.</source>
          <target state="translated">헤더 필드는 메시지, 페이로드, 대상 자원 또는 연결 (예 : 제어 데이터)에 대한 데이터를 통신하는 데 사용할 수있는 키 : 값 쌍입니다. HTTP 메시지의 헤더 필드 구문에 대한 일반적인 정의 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;는 [RFC7230]의 3.2 절을&lt;/a&gt; 참조하십시오 . 헤더 필드 이름에 대한 요구 사항은 [ &lt;a href=&quot;#ref-BCP90&quot;&gt;BCP90&lt;/a&gt;]. 새 필드를 정의하는 사양 작성자는 이름을 최대한 짧게 유지하고 인터넷에서 헤더 필드를 사용하지 않는 한 이름 앞에 &quot;X-&quot;를 붙이지 않는 것이 좋습니다. ( &quot;X-&quot;접두사 관용구는 실제로 광범위하게 잘못 사용되었습니다. 접두사가 개인 이름이 새로 등록 된 이름과 충돌하지 않도록하기 때문에 독점 소프트웨어 또는 인트라넷 처리 내에서 이름 충돌을 피하기위한 메커니즘으로 만 사용되었습니다. 인터넷 이름, 자세한 내용은 [ &lt;a href=&quot;#ref-BCP178&quot;&gt;BCP178&lt;/a&gt; ] 참조 ). 새로운 헤더 필드 값은 일반적으로 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-7&quot;&gt;[RFC7230]의 섹션 7에&lt;/a&gt; 정의 된 확장을 사용 하여 ABNF ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt; ])를 사용하여 정의 된 구문을 갖습니다.필요에 따라 일반적으로 US-ASCII 문자 범위로 제한됩니다. 더 넓은 범위의 문자가 필요한 헤더 필드는 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc5987&quot;&gt;RFC5987&lt;/a&gt; ]에 정의 된 것과 같은 인코딩을 사용할 수 있습니다 . 원시 필드 값의 선행 및 후행 공백은 필드 구문 분석시 제거됩니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.4&quot;&gt;[RFC7230]의 섹션 3.2.4&lt;/a&gt; ). 값에서 선행 또는 후행 공백이 중요한 필드 정의는 인용 문자열 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230]의 섹션 3.2.6)&lt;/a&gt; 과 같은 컨테이너 구문을 사용해야합니다 .). 쉼표 ( &quot;,&quot;)는 필드 값 사이의 일반 구분 기호로 사용되므로 필드 값에 허용되는 경우주의해서 처리해야합니다. 일반적으로 쉼표를 포함 할 수있는 구성 요소는 인용 문자열 ABNF 생성을 사용하여 큰 따옴표로 보호됩니다. 예를 들어 텍스트 날짜와 URI (쉼표를 포함 할 수 있음)는 다음과 같은 필드 값으로 안전하게 전달할 수 있습니다. Example-URI-Field : &quot;http://example.com/a.html,foo&quot; , &quot;http://without-a-comma.example.com/&quot;Example-Date-Field : &quot;1996 년 5 월 4 일 토요일&quot;, &quot;2005 년 9 월 14 일 수요일&quot;큰 따옴표 구분 기호는 거의 항상 인용 문자열 생산; 큰 따옴표 안에 다른 구문을 사용하면 불필요한 혼란이 발생할 수 있습니다.많은 헤더 필드는 대소 문자를 구분하지 않고 명명 된 매개 변수 (예 : Content-Type,&lt;a href=&quot;#section-3.1.1.5&quot;&gt;섹션 3.1.1.5&lt;/a&gt; ). 매개 변수 값에 따옴표가없는 (토큰) 구문과 따옴표가있는 (따옴표가 붙은 문자열) 구문을 모두 허용하면받는 사람이 기존 파서 구성 요소를 사용할 수 있습니다. 두 형식을 모두 허용하는 경우 매개 변수 값의 의미는 사용 된 구문과 독립적이어야합니다 (예를 들어, &lt;a href=&quot;#section-3.1.1.1&quot;&gt;3.1.1.1 절의&lt;/a&gt; 매체 유형에 대한 매개 변수 처리에 대한 참고 사항 참조 ). 새 헤더 필드를 정의하는 사양 작성자는 문서화를 고려해야합니다. o 필드가 단일 값인지 또는 목록이 될 수 있는지 여부 (쉼표로 구분) &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230]의 3.2 절&lt;/a&gt; 참조). 목록 구문을 사용하지 않는 경우 필드가 여러 번 발생하는 메시지를 처리하는 방법을 문서화하십시오 (기본적으로 필드를 무시하는 것이지만 이것이 항상 올바른 선택은 아닙니다). 목록 구문을 허용하지 않는 필드 정의에도 불구하고 중개자와 소프트웨어 라이브러리는 여러 헤더 필드 인스턴스를 단일 인스턴스로 결합 할 수 있습니다. 강력한 형식을 사용하면 수신자가 이러한 상황을 발견 할 수 있습니다 (예 : 쉼표는 따옴표로 묶인 문자열에만 나타날 수 있으므로 &quot;Content-Type&quot;, 나쁜 예 : 쉼표는 URI 내에서 발생할 수 있음). o 헤더 필드를 어떤 조건에서 사용할 수 있습니까? 예를 들어, 응답 또는 요청에서만, 모든 메시지에서, 특정 요청 방법에 대한 응답에서만.o PUT 요청시 필드를 이해하는 원본 서버에서 필드를 저장해야하는지 여부 o 필드 시맨틱이 기존 요청 방법 또는 상태 코드와 같은 컨텍스트에 의해 더 세분화되는지 여부 o 연결 헤더 필드에 필드 이름을 나열하는 것이 적절한 지 여부 (즉, 헤더 필드가 홉별인지 여부) &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-6.1&quot;&gt;[RFC7230]의 섹션 6.1&lt;/a&gt; ). o 어떤 조건 하에서 중개자가 필드 값을 삽입, 삭제 또는 수정할 수 있습니다. o Vary 응답 헤더 필드에 필드 이름을 나열하는 것이 적절한 지 여부 (예 : 요청 헤더 필드가 오리진 서버의 컨텐츠 선택 알고리즘에 의해 사용되는 경우; &lt;a href=&quot;#section-7.1.4&quot;&gt;섹션 7.1.4&lt;/a&gt; 참조 ). o 트레일러에서 헤더 필드가 유용한 지 또는 허용되는지 여부 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-4.1&quot;&gt;[RFC7230]의 4.1 절&lt;/a&gt; 참조 ) o 헤더 필드를 리디렉션에서 유지해야하는지 여부 o 개인 정보 보호 관련 데이터 공개와 같은 추가 보안 고려 사항이 도입되는지 여부.</target>
        </trans-unit>
        <trans-unit id="73ce89b0c8df0a7ed4d98060b2c7c611ac330135" translate="yes" xml:space="preserve">
          <source>Header fields that regulate the use of trailers: &lt;a href=&quot;te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt; (requests) and &lt;a href=&quot;trailer&quot;&gt;&lt;code&gt;Trailer&lt;/code&gt;&lt;/a&gt; (responses).</source>
          <target state="translated">트레일러 사용을 규제하는 헤더 필드 : &lt;a href=&quot;te&quot;&gt; &lt;code&gt;TE&lt;/code&gt; &lt;/a&gt; (요청) 및 &lt;a href=&quot;trailer&quot;&gt; &lt;code&gt;Trailer&lt;/code&gt; &lt;/a&gt; (응답).</target>
        </trans-unit>
        <trans-unit id="e786c2ccea456dd4299b1abe9aaa7e4b2aa14b90" translate="yes" xml:space="preserve">
          <source>Header to indicate that the content served varies by &lt;code&gt;Save-Data&lt;/code&gt;: &lt;a href=&quot;vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">제공되는 콘텐츠가 &lt;code&gt;Save-Data&lt;/code&gt; 에 따라 다름을 나타내는 헤더 : &lt;a href=&quot;vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf858dd7754f89623471d452d85365f43194c795" translate="yes" xml:space="preserve">
          <source>Header type</source>
          <target state="translated">헤더 유형</target>
        </trans-unit>
        <trans-unit id="2e31dbd5f484d5c1a3e787a044871e878213d50e" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">컨텐츠 협상 결과가 포함 된 헤더 : &lt;a href=&quot;content-encoding&quot;&gt; &lt;code&gt;Content-Encoding&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e46dedc85812b44c40eda61d963afafe6e17ec8" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">컨텐츠 협상 결과가 포함 된 헤더 : &lt;a href=&quot;content-language&quot;&gt; &lt;code&gt;Content-Language&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04db11046ac45baaf2858c147c0d0da0d83dfe2b" translate="yes" xml:space="preserve">
          <source>Header with the result of the content negotiation: &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">컨텐츠 협상 결과가 포함 된 헤더 : &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="d43cdd47172ebbec83d46dc0929904cbc0e5ba83" translate="yes" xml:space="preserve">
          <source>Headers are often very similar from one message to the next one, yet still repeated across connections.</source>
          <target state="translated">헤더는 종종 한 메시지에서 다음 메시지와 매우 유사하지만 여전히 연결에서 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="b9f5a636b75216c81304804a9a45004630234515" translate="yes" xml:space="preserve">
          <source>Headers can also be grouped according to how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Proxy_server&quot;&gt;proxies&lt;/a&gt; handle them:</source>
          <target state="translated">헤더는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Proxy_server&quot;&gt;프록시가&lt;/a&gt; 처리하는 방식에 따라 그룹화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="953e087d7da0e93f2114e33931a9fff08ea7dde9" translate="yes" xml:space="preserve">
          <source>Headers can also be grouped according to how proxies handle them:</source>
          <target state="translated">프록시가 헤더를 처리하는 방식에 따라 헤더를 그룹화 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e731d99aaf73e73a84db12018da22acb10f8eaf" translate="yes" xml:space="preserve">
          <source>Headers can be grouped according to their contexts:</source>
          <target state="translated">헤더는 컨텍스트에 따라 그룹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62484b23e54725c71a2263f18277c31549662db4" translate="yes" xml:space="preserve">
          <source>Headers, unlike bodies, are uncompressed.</source>
          <target state="translated">본문과 달리 헤더는 압축되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="75afc7047fc121a2847ce8f1120ed041aca66234" translate="yes" xml:space="preserve">
          <source>Help Your Users `Save-Data` - CSS Tricks</source>
          <target state="translated">사용자`데이터 저장`지원-CSS 트릭</target>
        </trans-unit>
        <trans-unit id="5da9db7ae87281e3e1ab3c768b9be45ae8134d50" translate="yes" xml:space="preserve">
          <source>Helpful tools and resources for understanding and debugging HTTP.</source>
          <target state="translated">HTTP 이해 및 디버깅을위한 유용한 도구 및 리소스</target>
        </trans-unit>
        <trans-unit id="2ed70bbb1a3a5c498b113f52c1548cee8ea9cc2d" translate="yes" xml:space="preserve">
          <source>Here again, be sure to take the right token for the browser you are looking for, as there is no guarantee that others will contain a valid number.</source>
          <target state="translated">여기서도 다른 사용자가 유효한 숫자를 포함 할 것이라는 보장이 없으므로 찾고있는 브라우저에 올바른 토큰을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="d5227ab359118de929fda02e4ed8472790aeba2d" translate="yes" xml:space="preserve">
          <source>Here is a JavaScript regular expression that will detect all mobile devices, including devices with a device id in their UA string:</source>
          <target state="translated">다음은 UA 문자열에 장치 ID가있는 장치를 포함하여 모든 모바일 장치를 감지하는 JavaScript 정규식입니다.</target>
        </trans-unit>
        <trans-unit id="4e3866c880875ee1ff8235362e89c76b5139a9ee" translate="yes" xml:space="preserve">
          <source>Here is a list of MIME types, associated by type of documents, ordered by their common extensions.</source>
          <target state="translated">다음은 공통된 확장명으로 정렬 된 문서 유형별로 연관된 MIME 유형 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d20b00cd2016c9a232dbd3f29c2f2897e9fcffac" translate="yes" xml:space="preserve">
          <source>Here is a list of common features controllable with HTTP.</source>
          <target state="translated">다음은 HTTP로 제어 할 수있는 일반적인 기능 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5c9905f596ccef64e1269e49689d1a73c07dd5b6" translate="yes" xml:space="preserve">
          <source>Here is a sample exchange between client and server:</source>
          <target state="translated">클라이언트와 서버 간의 샘플 교환은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9501e397bcbf8b4862fe537468cb6a0753bdae2b" translate="yes" xml:space="preserve">
          <source>Here is an example in PHP of handling a &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;preflighted request&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;프리 플라이트 요청&lt;/a&gt; 을 처리하는 PHP의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="75207f8e8ffefa8d462dd3fb2a1a65ea217d704b" translate="yes" xml:space="preserve">
          <source>Here is an example of the Slug header that uses percent-encoding to
   represent the Unicode character U+00E8 (LATIN SMALL LETTER E WITH
   GRAVE):

       POST /myblog/entries HTTP/1.1
       Host: example.org
       Content-Type: image/png
       Slug: The Beach at S%C3%A8te
       Authorization: Basic ZGFmZnk6c2VjZXJldA==
       Content-Length: nnn

       ...binary data

   See &lt;a href=&quot;#section-9.2.1&quot;&gt;Section 9.2.1&lt;/a&gt; for an example of the Slug header applied to the
   creation of an Entry Resource.</source>
          <target state="translated">다음은 퍼센트 인코딩을 사용하여 유니 코드 문자 U + 00E8 (LATIN SMALL LETTER E WITH GRAVE)을 나타내는 Slug 헤더의 예입니다. POST / myblog / entries HTTP / 1.1 호스트 : example.org Content-Type : image / png 슬러그 : S % C3 % A8te의 해변 인증 : 기본 ZGFmZnk6c2VjZXJldA == 내용 길이 : nnn ... 바이너리 데이터 엔트리 리소스 생성에 적용된 슬러그 헤더의 예는 &lt;a href=&quot;#section-9.2.1&quot;&gt;9.2.1 절을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2797fafb9211cc2c051dcda055704a3e4e30b8b0" translate="yes" xml:space="preserve">
          <source>Here is an example of this process with a shared cache proxy:</source>
          <target state="translated">공유 캐시 프록시를 사용한이 프로세스의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef5dd834bb2835bdbfb70e682c19ccc9767516af" translate="yes" xml:space="preserve">
          <source>Here is some PHP that handles credentialed requests:</source>
          <target state="translated">자격 증명 요청을 처리하는 일부 PHP는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ef8c73e17b07ff09f65fb9ccc55b532e81935c5" translate="yes" xml:space="preserve">
          <source>Here we look at the most common use cases for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">여기에서는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt; &lt;code&gt;Upgrade&lt;/code&gt; &lt;/a&gt; 헤더 의 가장 일반적인 사용 사례를 살펴 봅니다 .</target>
        </trans-unit>
        <trans-unit id="a21888f07518ae7a0759573f20d4642440f36a52" translate="yes" xml:space="preserve">
          <source>Here we look at the most common use cases for the &lt;code&gt;Upgrade&lt;/code&gt; header.</source>
          <target state="translated">여기서는 &lt;code&gt;Upgrade&lt;/code&gt; 헤더 의 가장 일반적인 사용 사례를 살펴 봅니다 .</target>
        </trans-unit>
        <trans-unit id="9ab6627dc7da6cad243b3faca054a977b46dce0f" translate="yes" xml:space="preserve">
          <source>Here's an example of what an &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header might look like. It indicates that a custom header named &lt;code&gt;X-Custom-Header&lt;/code&gt; is supported by CORS requests to the server (in addition to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS-safelisted request headers&lt;/a&gt;).</source>
          <target state="translated">다음은 &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; 헤더의 예입니다. &lt;code&gt;X-Custom-Header&lt;/code&gt; 라는 사용자 지정 헤더 가 서버에 대한 CORS 요청에서 지원됨을 나타냅니다 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header&quot;&gt;CORS 허용 목록에있는 요청 헤더&lt;/a&gt; 외에도 ).</target>
        </trans-unit>
        <trans-unit id="f377abe687f3f604805ed4c41cf044b1a5eecca7" translate="yes" xml:space="preserve">
          <source>Here's an example of what an &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; header might look like. It indicates that in addition to the &quot;simple&quot; headers, a custom header named &lt;code&gt;X-Custom-Header&lt;/code&gt; is supported by CORS requests to the server.</source>
          <target state="translated">다음은 &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; 헤더의 예입니다. &quot;단순&quot;헤더 외에도 서버에 대한 CORS 요청에서 &lt;code&gt;X-Custom-Header&lt;/code&gt; 라는 사용자 정의 헤더 가 지원됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="29ece426131fe65594c0f74862a88481dffe1b6d" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is the authentication scheme (&quot;Basic&quot; is the most common scheme and &lt;a href=&quot;authentication#Basic_authentication_scheme&quot;&gt;introduced below&lt;/a&gt;). The &lt;em&gt;realm&lt;/em&gt; is used to describe the protected area or to indicate the scope of protection. This could be a message like &quot;Access to the staging site&quot; or similar, so that the user knows to which space they are trying to get access to.</source>
          <target state="translated">여기서 &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; 은 인증 체계입니다 ( &quot;기본&quot;이 가장 일반적인 체계이며 &lt;a href=&quot;authentication#Basic_authentication_scheme&quot;&gt;아래에 소개됨&lt;/a&gt; ). &lt;em&gt;영역은&lt;/em&gt; 보호 지역을 설명하기 위해 또는 보호의 범위를 표시하는 데 사용됩니다. &quot;스테이징 사이트에 액세스&quot;또는 이와 유사한 메시지 일 수 있으므로 사용자는 액세스하려는 공간을 사용자가 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb29f0c2d2f88776ddd04a11566426842fc746ff" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;base64EncodedSettings&lt;/code&gt; is an HTTP/2 &lt;code&gt;&quot;SETTINGS&quot;&lt;/code&gt; frame's payload which has been base64url encoded and all trailing &lt;code&gt;&quot;=&quot;&lt;/code&gt; (equals) characters removed in order to safely include it in this textual header format.</source>
          <target state="translated">여기서 &lt;code&gt;base64EncodedSettings&lt;/code&gt; 는 base64url로 인코딩 된 HTTP / 2 &lt;code&gt;&quot;SETTINGS&quot;&lt;/code&gt; 프레임의 페이로드이며이 텍스트 헤더 형식에 안전하게 포함시키기 위해 모든 후행 &lt;code&gt;&quot;=&quot;&lt;/code&gt; (같음) 문자가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="a17f358e1ad5338444563c68bbadc2878e955302" translate="yes" xml:space="preserve">
          <source>Here, &lt;em&gt;x.y&lt;/em&gt; is the version of Mac OS X (for instance, Mac OS X 10.6).</source>
          <target state="translated">여기서 &lt;em&gt;xy&lt;/em&gt; 는 Mac OS X의 버전입니다 (예 : Mac OS X 10.6).</target>
        </trans-unit>
        <trans-unit id="ef77ad6909e7752d9aa6373842d49849209611c6" translate="yes" xml:space="preserve">
          <source>Here, by default, content is only permitted from the document's origin, with the following exceptions:</source>
          <target state="translated">여기서 기본적으로 컨텐츠는 다음을 제외하고 문서의 출처에서만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa2977eeb67774d5a0dd09ff4ec5ec0a36ef8155" translate="yes" xml:space="preserve">
          <source>Here, we present three scenarios that illustrate how Cross-Origin Resource Sharing works. All of these examples use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; object, which can be used to make cross-site invocations in any supporting browser.</source>
          <target state="translated">여기에서는 Cross-Origin Resource Sharing의 작동 방식을 설명하는 세 가지 시나리오를 제시합니다. 이 모든 예제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 객체를 사용하는데, 이는 지원되는 모든 브라우저에서 사이트 간 호출을 수행하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b282bf1d7028f07f3c3e1a14dbfcb71697111c5d" translate="yes" xml:space="preserve">
          <source>Heroku's proxy library Vegur</source>
          <target state="translated">헤 로쿠의 프록시 라이브러리 Vegur</target>
        </trans-unit>
        <trans-unit id="ddf9efd09112f93ec00fa54e8c4c84c765c17139" translate="yes" xml:space="preserve">
          <source>Heuristic Expiration</source>
          <target state="translated">휴리스틱 만료</target>
        </trans-unit>
        <trans-unit id="f2bddb211b435d77bdcd54be12a624bcbd764aed" translate="yes" xml:space="preserve">
          <source>Heuristic freshness checking</source>
          <target state="translated">휴리스틱 신선도 검사</target>
        </trans-unit>
        <trans-unit id="1724e0bfe29683a06f3fb0d140956360664db86b" translate="yes" xml:space="preserve">
          <source>Historic specification of HTTP State Management Mechanism, obsoleted by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt; 에서 폐기 된 HTTP 상태 관리 메커니즘의 역사적인 사양</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="d2fc15fa26334cc66ab95bf51b30e486fe93e127" translate="yes" xml:space="preserve">
          <source>History Lists (RFC 7234)</source>
          <target state="translated">히스토리 목록 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="2b89425faff6de6dc314db782d45b8bad9965067" translate="yes" xml:space="preserve">
          <source>History and implementation</source>
          <target state="translated">역사와 실행</target>
        </trans-unit>
        <trans-unit id="8224b406bb9fcf1d12ea7ebecf7258a153c52d79" translate="yes" xml:space="preserve">
          <source>Hop-by-hop compression</source>
          <target state="translated">홉별 압축</target>
        </trans-unit>
        <trans-unit id="77f5c2d41f116e38295977a86465e5e9e801702a" translate="yes" xml:space="preserve">
          <source>Hop-by-hop compression, though similar to end-to-end compression, differs by one fundamental element: the compression doesn't happen on the resource in the server, creating a specific representation that is then transmitted, but on the body of the message between any two nodes on the path between the client and the server. Connections between successive intermediate nodes may apply a &lt;em&gt;different&lt;/em&gt; compression.</source>
          <target state="translated">홉별 압축은 엔드-투-엔드 압축과 유사하지만 하나의 기본 요소가 다릅니다. 압축은 서버의 리소스에서 발생하지 않고 전송 된 다음 특정 표현을 생성하지만 본문에는 클라이언트와 서버 사이의 경로에있는 두 노드 사이의 메시지 연속적인 중간 노드 사이의 연결은 &lt;em&gt;다른&lt;/em&gt; 압축을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78458c6f2f912b6d6875b5a660931222e51353f1" translate="yes" xml:space="preserve">
          <source>Hop-by-hop headers</source>
          <target state="translated">홉별 헤더</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="f3680c389a985b1c29ff7e674003c4ba66aee02b" translate="yes" xml:space="preserve">
          <source>Host (RFC 2616)</source>
          <target state="translated">호스트 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="5406f06c65b376c58dac6bf71408ae1944750e32" translate="yes" xml:space="preserve">
          <source>Host names and ports of reverse proxies (load balancers, CDNs) may differ from the origin server handling the request, in that case the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header is useful to determine which Host was originally used.</source>
          <target state="translated">리버스 프록시 (로드 밸런서, CDN)의 호스트 이름 및 포트는 요청을 처리하는 원본 서버와 다를 수 있습니다.이 경우 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; 헤더는 원래 사용 된 호스트를 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f4b4c2643126c467ddef65e6b67d5f8c8b5bdc1a" translate="yes" xml:space="preserve">
          <source>Host to which the cookie will be sent.</source>
          <target state="translated">쿠키가 전송 될 호스트입니다.</target>
        </trans-unit>
        <trans-unit id="34a6082579e4930c27da3887804287a2a53f1624" translate="yes" xml:space="preserve">
          <source>Host-specific file names</source>
          <target state="translated">호스트 별 파일 이름</target>
        </trans-unit>
        <trans-unit id="2ec76d41d987ae559f5e3a7f7fd514508f4dcf54" translate="yes" xml:space="preserve">
          <source>Hosted CSP reporting for HTTPS migrations</source>
          <target state="translated">HTTPS 마이그레이션을위한 호스팅 된 CSP보고</target>
        </trans-unit>
        <trans-unit id="1367a4331a65542cf39c8a9d5b8961997d49502b" translate="yes" xml:space="preserve">
          <source>Hostname based conditions</source>
          <target state="translated">호스트 이름 기반 조건</target>
        </trans-unit>
        <trans-unit id="39e32117a3b52cca1d492b875f026756fb25597f" translate="yes" xml:space="preserve">
          <source>How Browsers Work</source>
          <target state="translated">브라우저 작동 방식</target>
        </trans-unit>
        <trans-unit id="4c91ae122f1612df59f2a23941f9e79f1d970ecc" translate="yes" xml:space="preserve">
          <source>How cookies work is defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;. When serving an HTTP request, a server can send a &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP header with the response. The client then returns the cookie's value with every request to the same server in the form of a &lt;code&gt;Cookie&lt;/code&gt; request header. The cookie can also be set to expire on a certain date, or restricted to a specific domain and path.</source>
          <target state="translated">쿠키 작동 방식은 &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265에&lt;/a&gt; 의해 정의됩니다 . HTTP 요청을 처리 할 때 서버는 응답과 함께 &lt;code&gt;Set-Cookie&lt;/code&gt; HTTP 헤더를 보낼 수 있습니다 . 그런 다음 클라이언트는 모든 요청과 함께 쿠키 요청 값을 &lt;code&gt;Cookie&lt;/code&gt; 요청 헤더 형식으로 동일한 서버에 반환합니다 . 쿠키는 특정 날짜에 만료되거나 특정 도메인 및 경로로 제한되도록 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="326d6840506a3e0e685440ecd35aff457aa45373" translate="yes" xml:space="preserve">
          <source>How documents are cached can be controlled by HTTP. The server can instruct proxies and clients, about what to cache and for how long. The client can instruct intermediate cache proxies to ignore the stored document.</source>
          <target state="translated">문서가 캐시되는 방식은 HTTP로 제어 할 수 있습니다. 서버는 프록시와 클라이언트에게 캐시 할 항목과 기간에 대해 지시 할 수 있습니다. 클라이언트는 저장된 문서를 무시하도록 중간 캐시 프록시에 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="785a4091642b3107a87eb0510aa18c744ad3bd77" translate="yes" xml:space="preserve">
          <source>How documents are cached can be controlled by HTTP. The server can instruct proxies, and clients, what to cache and for how long. The client can instruct intermediate cache proxies to ignore the stored document.</source>
          <target state="translated">HTTP가 문서를 캐시하는 방법을 제어 할 수 있습니다. 서버는 프록시 및 클라이언트, 캐시 대상 및 기간을 지시 할 수 있습니다. 클라이언트는 저장된 캐시 문서를 무시하도록 중간 캐시 프록시에 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a92fcc6dda054aa8ba041f16e995c47ecf3e087" translate="yes" xml:space="preserve">
          <source>How much detail to include is an interesting balance to strike; exposing the OS version is probably a bad idea, as mentioned in the earlier warning about overly-detailed values. However, exposed Apache versions helped browsers work around a bug those versions had with &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt; combined with &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포함해야 할 세부 사항은 흥미로운 균형입니다. 지나치게 상세한 값에 대한 이전 경고에서 언급했듯이 OS 버전을 노출하는 것은 아마도 나쁜 생각 일 것입니다. 그러나 노출 된 Apache 버전은 해당 버전이 &lt;a href=&quot;content-encoding&quot;&gt; &lt;code&gt;Content-Encoding&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; 를&lt;/a&gt; 결합한 버그를 해결하는 데 도움이되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f1a6840353bc46a78f9536e0c4ba600c96425f56" translate="yes" xml:space="preserve">
          <source>How the browser handles it</source>
          <target state="translated">브라우저가 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="68bee7ceae58ef9dd68bebd7e8624e01362fe458" translate="yes" xml:space="preserve">
          <source>How to Fix 405 Method Not Allowed</source>
          <target state="translated">405 방법이 허용되지 않는 문제를 해결하는 방법</target>
        </trans-unit>
        <trans-unit id="d2bbcaa9a058613fa1a50456a0aabfa3b3df0140" translate="yes" xml:space="preserve">
          <source>How to avoid the CORS preflight</source>
          <target state="translated">CORS 프리 플라이트를 피하는 방법</target>
        </trans-unit>
        <trans-unit id="778498eaac84dd627c8fe8e2869a7fc961933c44" translate="yes" xml:space="preserve">
          <source>How to fix &lt;em&gt;&amp;ldquo;Access-Control-Allow-Origin header must not be the wildcard&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&quot;Access-Control-Allow-Origin 헤더는 와일드 카드가 아니어야합니다&quot;&lt;/em&gt; 를 수정하는 방법&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc108c55cd0ff984c9ac45ce8cdb74f88f1a0654" translate="yes" xml:space="preserve">
          <source>How to fix CORS issue?</source>
          <target state="translated">CORS 문제를 해결하는 방법?</target>
        </trans-unit>
        <trans-unit id="c305fbaf8d1dd662dd884c22cf15416371345003" translate="yes" xml:space="preserve">
          <source>How to run Chrome browser without CORS</source>
          <target state="translated">CORS없이 Chrome 브라우저를 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="bd427ecf132d3e2cc23ee42d32690dc605d28a0f" translate="yes" xml:space="preserve">
          <source>How to use a CORS proxy to get around &lt;em&gt;&amp;ldquo;No Access-Control-Allow-Origin header&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">CORS 프록시를 사용하여 &lt;em&gt;&amp;ldquo;No Access-Control-Allow-Origin header&amp;rdquo;를 해결하는 방법&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f79e53c0a139eb96378c7ba89f9dd8fbfb330c0" translate="yes" xml:space="preserve">
          <source>However, if the request is one that triggers a preflight due to the presence of the &lt;code&gt;Authorization&lt;/code&gt; header in the request, you won&amp;rsquo;t be able to work around the limitation using the steps above. And you won&amp;rsquo;t be able to work around it at all unless you have control over the server the request is being made to.</source>
          <target state="translated">요청으로 인해의 존재에 프리 플라이트를 유발 하나 인 경우, &lt;code&gt;Authorization&lt;/code&gt; 요청의 헤더, 당신은 위의 단계를 사용하여 제한을 해결할 수 없습니다. 요청이 수행되는 서버를 제어 할 수 없으면 해결이 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="aa3bacea776742f9f4ee0b04c2738bf1f2acd22e" translate="yes" xml:space="preserve">
          <source>However, scripts without integrity won't load anymore:</source>
          <target state="translated">그러나 무결성이없는 스크립트는 더 이상로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4784e9a56ee26ccc58e9b47e0384d44d80f5b536" translate="yes" xml:space="preserve">
          <source>However, styles properties that are set directly on the element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property will not be blocked, allowing users to safely manipulate styles via JavaScript:</source>
          <target state="translated">그러나 요소의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; 속성 에 직접 설정된 스타일 속성은 차단되지 않으므로 사용자가 JavaScript를 통해 스타일을 안전하게 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6363c2d9cd37774dbf6ea52a71d3cc4b1d69edf1" translate="yes" xml:space="preserve">
          <source>However, styles properties that are set directly on the element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property will not be blocked, allowing users to safely manipulate styles via Javascript:</source>
          <target state="translated">그러나 요소의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; 속성 에 직접 설정된 스타일 속성은 차단되지 않으므로 사용자는 Javascript를 통해 스타일을 안전하게 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="712efc901d5948d1ddc85420dd7828b2c028e889" translate="yes" xml:space="preserve">
          <source>However, the above code is absolutely terrible and ill-conceived. What if Chrome removes this look behind feature? What if another browser implements look behind regexps? What if another browser uses &lt;em&gt;Chrome &lt;/em&gt;in their user agent string? The list goes on and on of things that could go terribly wrong. Thus, you should instead use feature detection like the following.</source>
          <target state="translated">그러나 위의 코드는 절대적으로 끔찍하고 잘못 고안되었습니다. Chrome에서이 숨김 기능을 제거하면 어떻게 되나요? 다른 브라우저가 정규 표현식 뒤에 보이는 것을 구현하면 어떻게 되나요? 다른 브라우저가 사용자 에이전트 문자열에서 &lt;em&gt;Chrome&lt;/em&gt; 을 사용하면 어떻게 되나요? 그 목록은 계속 잘못 될 수있는 것들에 관한 것입니다. 따라서 대신 다음과 같은 기능 감지를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e339ee7e7a8e7da017468304e92dc515e180b71" translate="yes" xml:space="preserve">
          <source>However, this won't wildcard the &lt;a href=&quot;authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; header, so if you need to expose that, you will need to list it explicitly:</source>
          <target state="translated">그러나 이는 &lt;a href=&quot;authorization&quot;&gt; &lt;code&gt;Authorization&lt;/code&gt; &lt;/a&gt; 헤더를 와일드 카드로 처리하지 않으므로 노출해야하는 경우 명시 적으로 나열해야합니다.</target>
        </trans-unit>
        <trans-unit id="343d2ce245a31249b1c892a011a302e47c95d5d0" translate="yes" xml:space="preserve">
          <source>Http method &lt;a href=&quot;../methods/patch&quot;&gt;&lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Http 메소드 &lt;a href=&quot;../methods/patch&quot;&gt; &lt;code&gt;PATCH&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="acb4f9f51d2117c863cd7510741572ef29c65c1c" translate="yes" xml:space="preserve">
          <source>Http method &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Http 메소드 &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="872b5517c0f6559afa3677ba893bb97024b2ecc2" translate="yes" xml:space="preserve">
          <source>HttpOnly Optional</source>
          <target state="translated">HttpOnly 옵션</target>
        </trans-unit>
        <trans-unit id="abd954b086bab88cb87ec4cda040e14953ecce8f" translate="yes" xml:space="preserve">
          <source>Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0)</source>
          <target state="translated">하이퍼 텍스트 커피 포트 제어 프로토콜 (HTCPCP / 1.0)</target>
        </trans-unit>
        <trans-unit id="9cb22c4629a969af0720c560a54790780d479542" translate="yes" xml:space="preserve">
          <source>Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0): Semantics and Content</source>
          <target state="translated">하이퍼 텍스트 커피 포트 제어 프로토콜 (HTCPCP / 1.0) : 의미 및 내용</target>
        </trans-unit>
        <trans-unit id="126116b4ff4ad54a45b5f2a945491694cc39450d" translate="yes" xml:space="preserve">
          <source>Hyper text transfer protocol (Secure)</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (보안)</target>
        </trans-unit>
        <trans-unit id="a40ca5dd3664e7e5fbc9868906e198fe122b47b2" translate="yes" xml:space="preserve">
          <source>HyperText Markup Language (HTML)</source>
          <target state="translated">하이퍼 텍스트 마크 업 언어 (HTML)</target>
        </trans-unit>
        <trans-unit id="3aabdc98f3e181618def85f1876081249a0e4138" translate="yes" xml:space="preserve">
          <source>HyperText Transport Protocol Keep-Alive Header</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 연결 유지 헤더</target>
        </trans-unit>
        <trans-unit id="caec6dcaeb81aa6d4af95da6ddc9afca1f3451f8" translate="yes" xml:space="preserve">
          <source>Hypertext Preprocessor (&lt;strong&gt;Personal Home Page&lt;/strong&gt;)</source>
          <target state="translated">하이퍼 텍스트 전 처리기 ( &lt;strong&gt;개인 홈 페이지&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="a8bf740d859a72ca5b146b5d3c7c57e9e44dbdab" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP) Keep-Alive Header</source>
          <target state="translated">HTTP (Hypertext Transfer Protocol) 연결 헤더</target>
        </trans-unit>
        <trans-unit id="18c750541be3062c47621490bab7ee6a43ed0176" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP) clients often encounter
   interrupted data transfers as a result of canceled requests or
   dropped connections.  When a client has stored a partial
   representation, it is desirable to request the remainder of that
   representation in a subsequent request rather than transfer the
   entire representation.  Likewise, devices with limited local storage
   might benefit from being able to request only a subset of a larger
   representation, such as a single page of a very large document, or
   the dimensions of an embedded image.

   This document defines HTTP/1.1 range requests, partial responses, and
   the multipart/byteranges media type.  Range requests are an OPTIONAL
   feature of HTTP, designed so that recipients not implementing this
   feature (or not supporting it for the target resource) can respond as
   if it is a normal GET request without impacting interoperability.
   Partial responses are indicated by a distinct status code to not be
   mistaken for full responses by caches that might not implement the
   feature.

   Although the range request mechanism is designed to allow for
   extensible range types, this specification only defines requests for
   byte ranges.</source>
          <target state="translated">HTTP (Hypertext Transfer Protocol) 클라이언트는 요청이 취소되거나 연결이 끊어져 데이터 전송이 중단되는 경우가 종종 있습니다. 클라이언트가 부분 표현을 저장 한 경우 전체 표현을 전송하는 대신 후속 요청에서 해당 표현의 나머지를 요청하는 것이 바람직합니다. 마찬가지로 로컬 저장소가 제한된 장치는 매우 큰 문서의 단일 페이지 또는 포함 된 이미지의 크기와 같이 더 큰 표현의 하위 집합 만 요청할 수 있다는 이점이 있습니다. 이 문서는 HTTP / 1.1 범위 요청, 부분 응답 및 multipart / byteranges 미디어 유형을 정의합니다. 범위 요청은 HTTP의 선택적 기능입니다.이 기능을 구현하지 않거나 대상 자원에 대해 지원하지 않는 수신자는 상호 운용성에 영향을주지 않으면 서 정상적인 GET 요청 인 것처럼 응답 할 수 있도록 설계되었습니다. 기능을 구현하지 않을 수있는 캐시에 의한 전체 응답으로 착각하지 않도록 부분 응답은 고유 한 상태 코드로 표시됩니다. 범위 요청 메커니즘은 확장 가능한 범위 유형을 허용하도록 설계되었지만이 사양에서는 바이트 범위에 대한 요청 만 정의합니다.이 사양은 바이트 범위에 대한 요청 만 정의합니다.이 사양은 바이트 범위에 대한 요청 만 정의합니다.</target>
        </trans-unit>
        <trans-unit id="eaebf91177666f1aaca9207bce21f241c2d6aa1c" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Authentication</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 인증</target>
        </trans-unit>
        <trans-unit id="cf04e8c69e3ace21820abada8b4f0bf8440a50a6" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Caching</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 캐싱</target>
        </trans-unit>
        <trans-unit id="565eb02fb9f4c2b506e298c3e3bd17146e8b9b29" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 조건부 요청</target>
        </trans-unit>
        <trans-unit id="5ffac3f427873675e5fda46ed9caffb674838583" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 메시지 구문 및 라우팅</target>
        </trans-unit>
        <trans-unit id="067dc1d00ea2a2c2813ac9db731d6b354882d326" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 범위 요청</target>
        </trans-unit>
        <trans-unit id="67726549543e0d1b42d751ebf670ca915f452bde" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 시맨틱 및 컨텐츠</target>
        </trans-unit>
        <trans-unit id="dadde9e82bc152463510002167edd8589458e39b" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Context</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 (HTTP / 1.1) : 의미 및 컨텍스트</target>
        </trans-unit>
        <trans-unit id="0464d55671763178e4bb9bf689fd75c3b2bf90ee" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol -- HTTP/1.1</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜-HTTP / 1.1</target>
        </trans-unit>
        <trans-unit id="14001adc995acbe66bc7906c7030f074a23e21ec" translate="yes" xml:space="preserve">
          <source>Hypertext Transfer Protocol Version 2 (HTTP/2)</source>
          <target state="translated">하이퍼 텍스트 전송 프로토콜 버전 2 (HTTP / 2)</target>
        </trans-unit>
        <trans-unit id="e0899b85bb34ecad597f88ef93fbf5180bd78fc6" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7230)</source>
          <target state="translated">IANA 고려 사항 (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="fb05bb988d2b3042dacb51c3209a976e89fd65b7" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7231)</source>
          <target state="translated">IANA 고려 사항 (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="faddb1a82ba7e7645aff6b957bbe064fd752dd69" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7232)</source>
          <target state="translated">IANA 고려 사항 (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="4cbf2a520cf53d1cedf62323be093a069cfdcece" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7233)</source>
          <target state="translated">IANA 고려 사항 (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="2ce28868e82be3265aeb20b44d3fbb587c2a23ce" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7234)</source>
          <target state="translated">IANA 고려 사항 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="98a74c9cf29e82d02e581eb12c22dda292d5ee17" translate="yes" xml:space="preserve">
          <source>IANA Considerations (RFC 7235)</source>
          <target state="translated">IANA 고려 사항 (RFC 7235)</target>
        </trans-unit>
        <trans-unit id="4bb8022eff5067ab10c4c96ad85499b49bef742d" translate="yes" xml:space="preserve">
          <source>IANA HTTP Range Unit Registry</source>
          <target state="translated">IANA HTTP 범위 단위 레지스트리</target>
        </trans-unit>
        <trans-unit id="5904c4ee52524bdc80934ad4f9a7950c63e23ee8" translate="yes" xml:space="preserve">
          <source>IANA has added a reference to this specification in the
   'application/atom+xml' media type registration.</source>
          <target state="translated">IANA는 'application / atom + xml'미디어 유형 등록에서이 사양에 대한 참조를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="69ea11543f5de3dd2cb43742c8f141e34bd0847d" translate="yes" xml:space="preserve">
          <source>IANA is the official registry of MIME media types and maintains a &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;list of all the official MIME types&lt;/a&gt;. This table lists some important MIME types for the Web:</source>
          <target state="translated">IANA는 MIME 미디어 유형의 공식 레지스트리 &lt;a href=&quot;http://www.iana.org/assignments/media-types/media-types.xhtml&quot;&gt;이며 모든 공식 MIME 유형 목록을&lt;/a&gt; 유지 관리합니다 . 이 표에는 웹에 대한 몇 가지 중요한 MIME 유형이 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="89c07cdbd61e19ece57d06075ba79aecfe00c78b" translate="yes" xml:space="preserve">
          <source>IANA list of URI schemes</source>
          <target state="translated">URI 스킴의 IANA 목록</target>
        </trans-unit>
        <trans-unit id="78740b079f8a9346faaa07edbf050f52dc47fc13" translate="yes" xml:space="preserve">
          <source>IANA maintains the &quot;HTTP Content Coding Registry&quot; at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt;&amp;gt;.

   The &quot;HTTP Content Coding Registry&quot; has been updated with the
   registrations below:

   +------------+--------------------------------------+---------------+
   | Name       | Description                          | Reference     |
   +------------+--------------------------------------+---------------+
   | compress   | UNIX &quot;compress&quot; data format [&lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt;]  | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | deflate    | &quot;deflate&quot; compressed data            | &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt; |
   |            | ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt;]) inside the &quot;zlib&quot; data   |               |
   |            | format ([&lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;])                   |               |
   | gzip       | GZIP file format [&lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt;]           | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   | x-compress | Deprecated (alias for compress)      | &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt; |
   | x-gzip     | Deprecated (alias for gzip)          | &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt; |
   +------------+--------------------------------------+---------------+</source>
          <target state="translated">IANA는 &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/http-parameters&quot;&gt;http://www.iana.org/assignments/http-parameters&lt;/a&gt; &amp;gt; 에서 &quot;HTTP 콘텐츠 코딩 레지스트리&quot;를 유지 관리합니다 . &quot;HTTP 컨텐츠 코딩 레지스트리&quot;가 아래 등록으로 업데이트되었습니다 : + ------------ + --------------------- ----------------- + --------------- + | 이름 | 설명 | 참조 | + ------------ + ------------------------------------ -+ --------------- + | 압축 | UNIX &quot;압축&quot;데이터 형식 [ &lt;a href=&quot;#ref-Welch&quot;&gt;Welch&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.1&quot;&gt;섹션 4.2.1&lt;/a&gt; | | 수축하다 | 압축 된 데이터 &quot;delate&quot;| &lt;a href=&quot;#section-4.2.2&quot;&gt;섹션 4.2.2&lt;/a&gt; | | | &quot;zlib&quot;데이터 내부의 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1951&quot;&gt;RFC1951&lt;/a&gt; ]) | | | | 형식 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc1950&quot;&gt;RFC1950&lt;/a&gt;]) | | | gzip | GZIP 파일 형식 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc1952&quot;&gt;RFC1952&lt;/a&gt; ] | &lt;a href=&quot;#section-4.2.3&quot;&gt;섹션 4.2.3&lt;/a&gt; | | x- 압축 | 더 이상 사용되지 않음 (압축 별명) | &lt;a href=&quot;#section-4.2.1&quot;&gt;섹션 4.2.1&lt;/a&gt; | | x-gzip | 더 이상 사용되지 않음 (gzip의 별명) | &lt;a href=&quot;#section-4.2.3&quot;&gt;섹션 4.2.3&lt;/a&gt; | + ------------ + ------------------------------------ -+ --------------- +</target>
        </trans-unit>
        <trans-unit id="2f3aef98e61cefd59e70d51a0d54a7f7880c7e4d" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of Internet media types [&lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt;&amp;gt;.

   This document serves as the specification for the Internet media
   types &quot;message/http&quot; and &quot;application/http&quot;.  The following has been
   registered with IANA.</source>
          <target state="translated">IANA 는 &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt; &amp;gt; 에서 인터넷 미디어 유형 [ &lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt; ] 의 레지스트리를 유지 관리합니다 . 이 문서는 인터넷 메시지 유형 &quot;message / http&quot;및 &quot;application / http&quot;의 사양으로 사용됩니다. 다음은 IANA에 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="57560e1f2062a0d9e41b59e9de0cd89dfc775402" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of Internet media types [&lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt;&amp;gt;.

   This document serves as the specification for the Internet media type
   &quot;multipart/byteranges&quot;.  The following has been registered with IANA.</source>
          <target state="translated">IANA 는 &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/media-types&quot;&gt;http://www.iana.org/assignments/media-types&lt;/a&gt; &amp;gt; 에서 인터넷 미디어 유형 [ &lt;a href=&quot;#ref-BCP13&quot;&gt;BCP13&lt;/a&gt; ] 의 레지스트리를 유지 관리합니다 . 이 문서는 인터넷 미디어 유형 &quot;multipart / byteranges&quot;의 사양으로 사용됩니다. 다음은 IANA에 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="2f25bf5a2ef40ce000fcbfb953c618138d7e6d92" translate="yes" xml:space="preserve">
          <source>IANA maintains the registry of URI Schemes [&lt;a href=&quot;#ref-BCP115&quot;&gt;BCP115&lt;/a&gt;] at
   &amp;lt;&lt;a href=&quot;http://www.iana.org/assignments/uri-schemes/&quot;&gt;http://www.iana.org/assignments/uri-schemes/&lt;/a&gt;&amp;gt;.

   This document defines the following URI schemes, so the &quot;Permanent
   URI Schemes&quot; registry has been updated accordingly.

   +------------+------------------------------------+---------------+
   | URI Scheme | Description                        | Reference     |
   +------------+------------------------------------+---------------+
   | http       | Hypertext Transfer Protocol        | &lt;a href=&quot;#section-2.7.1&quot;&gt;Section 2.7.1&lt;/a&gt; |
   | https      | Hypertext Transfer Protocol Secure | &lt;a href=&quot;#section-2.7.2&quot;&gt;Section 2.7.2&lt;/a&gt; |
   +------------+------------------------------------+---------------+</source>
          <target state="translated">IANA 는 &amp;lt; &lt;a href=&quot;http://www.iana.org/assignments/uri-schemes/&quot;&gt;http://www.iana.org/assignments/uri-schemes/&lt;/a&gt; &amp;gt; 에서 URI 체계 [ &lt;a href=&quot;#ref-BCP115&quot;&gt;BCP115&lt;/a&gt; ] 의 레지스트리를 유지 관리합니다 . 이 문서는 다음과 같은 URI 체계를 정의하므로 &quot;영구적 URI 체계&quot;레지스트리가 그에 따라 업데이트되었습니다. + ------------ + ------------------------------------ + --------------- + | URI 체계 | 설명 | 참조 | + ------------ + ------------------------------------ + --------------- + | http | 하이퍼 텍스트 전송 프로토콜 | &lt;a href=&quot;#section-2.7.1&quot;&gt;섹션 2.7.1&lt;/a&gt; | | https | 하이퍼 텍스트 전송 프로토콜 보안 | &lt;a href=&quot;#section-2.7.2&quot;&gt;섹션 2.7.2&lt;/a&gt; | + ------------ + ------------------------------------ + --------------- +</target>
        </trans-unit>
        <trans-unit id="70d5ce962c5520d83534599071460204e3f79a4c" translate="yes" xml:space="preserve">
          <source>IANA official registry of HTTP status codes</source>
          <target state="translated">HTTP 상태 코드의 IANA 공식 레지스트리</target>
        </trans-unit>
        <trans-unit id="052ea052e8c19248acaf0e57ba16070d89e5f3f2" translate="yes" xml:space="preserve">
          <source>IANA registry</source>
          <target state="translated">IANA 레지스트리</target>
        </trans-unit>
        <trans-unit id="3ec2a8d54523fcf678717117536e9db1ddb9d0ec" translate="yes" xml:space="preserve">
          <source>IANA registry of Authentication schemes</source>
          <target state="translated">인증 체계의 IANA 레지스트리</target>
        </trans-unit>
        <trans-unit id="433dbaf6332943984d6516e68b5f7fa26960c972" translate="yes" xml:space="preserve">
          <source>ICO</source>
          <target state="translated">ICO</target>
        </trans-unit>
        <trans-unit id="1c424db78d6168d4e4112d7ef44078d6e5cc90ef" translate="yes" xml:space="preserve">
          <source>IETF Draft</source>
          <target state="translated">IETF 초안</target>
        </trans-unit>
        <trans-unit id="8017c92650b8189e940d94d4098c59d4b86b1c4b" translate="yes" xml:space="preserve">
          <source>IETF RFC</source>
          <target state="translated">IETF RFC</target>
        </trans-unit>
        <trans-unit id="8571cc2c4258545210a5b00473280039ad4b84d4" translate="yes" xml:space="preserve">
          <source>IIS</source>
          <target state="translated">IIS</target>
        </trans-unit>
        <trans-unit id="863b6ddbf8a4aa095ca888b978a73ba1efc7811f" translate="yes" xml:space="preserve">
          <source>Icon format</source>
          <target state="translated">아이콘 형식</target>
        </trans-unit>
        <trans-unit id="ca9f65841299353702f59413c67b4d41e934a6e4" translate="yes" xml:space="preserve">
          <source>Ideally, there is one location, and therefore one URL, for each resource. But there are reasons for alternative names for a resource:</source>
          <target state="translated">이상적으로는 각 리소스에 대해 하나의 위치, 즉 하나의 URL이 있습니다. 그러나 리소스에 대한 대체 이름에 대한 이유가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dc4507a76928b989abe5a6100c9511b38bd00d7" translate="yes" xml:space="preserve">
          <source>Ideally, there is one location, and therefore one URL, for one resource. But there are reasons for wanting to have alternative names for a resource (several domains, like with and without the www prefix or shorter and easy to remember URLs, &amp;hellip;). In these cases, rather than duplicating the resource, it is useful to use a redirect to the one true (canonical) URL.</source>
          <target state="translated">이상적으로는 하나의 자원에 대해 하나의 위치와 하나의 URL이 있습니다. 그러나 다른 리소스 이름 (www 접두어가 있거나없는 여러 도메인, URL이 짧고 기억하기 쉬운 URL 등)을 원하는 이유가 있습니다. 이 경우 리소스를 복제하지 않고 하나의 실제 (정규) URL로 리디렉션하는 것이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f1df7d15a8112ad87203fcb0cb507f4b96b72bbd" translate="yes" xml:space="preserve">
          <source>Idempotent</source>
          <target state="translated">Idempotent</target>
        </trans-unit>
        <trans-unit id="b6a2413ad63489a62e13c1cef9ff703c77e3aa0f" translate="yes" xml:space="preserve">
          <source>Idempotent Methods (RFC 7231)</source>
          <target state="translated">dem 등식 방법 (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="526430255f19421715307947f2ff84df60c93896" translate="yes" xml:space="preserve">
          <source>Identifies the original host requested that a client used to connect to your proxy or load balancer.</source>
          <target state="translated">클라이언트가 프록시 또는로드 밸런서에 연결하는 데 요청한 원래 호스트를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="b108c524c313085aeda694b0f180ecea370efb15" translate="yes" xml:space="preserve">
          <source>Identifies the originating IP addresses of a client connecting to a web server through an HTTP proxy or a load balancer.</source>
          <target state="translated">HTTP 프록시 또는로드 밸런서를 통해 웹 서버에 연결하는 클라이언트의 원래 IP 주소를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="4728d359ae99afe818be6f9dc7667972f09461f4" translate="yes" xml:space="preserve">
          <source>Identifies the protocol (HTTP or HTTPS) that a client used to connect to your proxy or load balancer.</source>
          <target state="translated">클라이언트가 프록시 또는로드 밸런서에 연결하는 데 사용한 프로토콜 (HTTP 또는 HTTPS)을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="b059dd235df4bbca4880938a5c1bb58a2acfaacc" translate="yes" xml:space="preserve">
          <source>Identifying allowed request methods</source>
          <target state="translated">허용 된 요청 방법 식별</target>
        </trans-unit>
        <trans-unit id="a11a4c57a7f8dccbb14cb41b82dc14540c9e4cbe" translate="yes" xml:space="preserve">
          <source>Identifying resources on the Web</source>
          <target state="translated">웹에서 자원 식별</target>
        </trans-unit>
        <trans-unit id="2ddba376a063bd16e86e27e7bafe3713c58a5850" translate="yes" xml:space="preserve">
          <source>Identifying the issue</source>
          <target state="translated">문제 식별</target>
        </trans-unit>
        <trans-unit id="5411f86a7d04f9bc55dfc770d7c059832dab58c1" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Also) responses always lead to the use of a &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method, &lt;a href=&quot;../status/307&quot;&gt;&lt;code&gt;307&lt;/code&gt;&lt;/a&gt; (Temporary Redirect) and &lt;a href=&quot;../status/308&quot;&gt;&lt;code&gt;308&lt;/code&gt;&lt;/a&gt; (Permanent Redirect) don't change the method used in the original request;</source>
          <target state="translated">경우 &lt;a href=&quot;../status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (참조) 응답이 항상 사용으로 이어질 &lt;a href=&quot;../methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; 의&lt;/a&gt; 방법, &lt;a href=&quot;../status/307&quot;&gt; &lt;code&gt;307&lt;/code&gt; &lt;/a&gt; (임시 리디렉션) 및 &lt;a href=&quot;../status/308&quot;&gt; &lt;code&gt;308&lt;/code&gt; &lt;/a&gt; (영구 리디렉션) 원래 요청에 사용되는 방법을 변경하지 마십시오;</target>
        </trans-unit>
        <trans-unit id="203f83a39c006e96b0372879695a48c384f5a98d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Viewport-Width&lt;/code&gt; occurs in a message more than once, the last value overrides all previous occurrences.</source>
          <target state="translated">경우 &lt;code&gt;Viewport-Width&lt;/code&gt; 한 번 이상 메시지가 발생, 마지막 값은 이전의 모든 항목을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="d42bc610b058bcee9d44ddc50eaef50c5549ec14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Want-Digest&lt;/code&gt; does not include any digest algorithms that the server supports, the server may respond with:</source>
          <target state="translated">경우 &lt;code&gt;Want-Digest&lt;/code&gt; 포함되지 않는 서버가 지원하는 서버가 응답 수 다이제스트 알고리즘 :</target>
        </trans-unit>
        <trans-unit id="eeff268bfa6cc58c2072be3b70c8ada2ff1e8f56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;display-capture&lt;/code&gt; is disabled in a document, the document will not be able to initiate screen capture via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia&quot;&gt;&lt;code&gt;getDisplayMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;display-capture&lt;/code&gt; 문서에서 비활성화되어, 문서를 통해 화면 캡처를 시작할 수 없습니다 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia&quot;&gt; &lt;code&gt;getDisplayMedia()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ade11e64845f3fc5c7bc101765fbb13c18d967" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script-src-attr&lt;/code&gt; is absent, User Agent falls back to the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, and if that is absent as well, to &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;script-src-attr&lt;/code&gt; 결석, 사용자 에이전트는 다시 하락한다 &lt;a href=&quot;script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt; 지시하고, 그뿐만 아니라 존재하지 않는 경우에 &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63609d6bc405969d35b2060eab7a8fb70825c6a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;script-src-elem&lt;/code&gt; is absent, User Agent falls back to the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, and if that is absent as well, to &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;script-src-elem&lt;/code&gt; 결석, 사용자 에이전트가 다시 하락한다 &lt;a href=&quot;script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt; 지시하고, 그뿐만 아니라 존재하지 않는 경우,하는 &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67e6f0a239dfb82509e36ca577925e74a83f28f9" translate="yes" xml:space="preserve">
          <source>If = &quot;If&quot; &quot;:&quot; ( 1*No-tag-list | 1*Tagged-list )

     No-tag-list = List
     Tagged-list = Resource-Tag 1*List

     List = &quot;(&quot; 1*Condition &quot;)&quot;
     Condition = [&quot;Not&quot;] (State-token | &quot;[&quot; entity-tag &quot;]&quot;)
     ; entity-tag: see &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&amp;nbsp;3.11 of [RFC2616]&lt;/a&gt;
     ; No LWS allowed between &quot;[&quot;, entity-tag and &quot;]&quot; 

     State-token = Coded-URL

     Resource-Tag = &quot;&amp;lt;&quot; Simple-ref &quot;&amp;gt;&quot;
     ; Simple-ref: see &lt;a href=&quot;#section-8.3&quot;&gt;Section 8.3&lt;/a&gt;
     ; No LWS allowed in Resource-Tag

   The syntax distinguishes between untagged lists (&quot;No-tag-list&quot;) and
   tagged lists (&quot;Tagged-list&quot;).  Untagged lists apply to the resource
   identified by the Request-URI, while tagged lists apply to the
   resource identified by the preceding Resource-Tag.

   A Resource-Tag applies to all subsequent Lists, up to the next
   Resource-Tag.

   Note that the two list types cannot be mixed within an If header.
   This is not a functional restriction because the No-tag-list syntax
   is just a shorthand notation for a Tagged-list production with a
   Resource-Tag referring to the Request-URI.

   Each List consists of one or more Conditions.  Each Condition is
   defined in terms of an entity-tag or state-token, potentially negated
   by the prefix &quot;Not&quot;.

   Note that the If header syntax does not allow multiple instances of
   If headers in a single request.  However, the HTTP header syntax
   allows extending single header values across multiple lines, by
   inserting a line break followed by whitespace (see [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;], &lt;a href=&quot;#section-4.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;).</source>
          <target state="translated">If = &quot;If&quot; &quot;:&quot;(1 * No-tag-list | 1 * Tagged-list) No-tag-list = List Tagged-list = Resource-Tag 1 * List List = &quot;(&quot;1 * Condition &quot;) &quot;Condition = [&quot;Not &quot;] (상태 토큰 |&quot;[ &quot;entity-tag&quot;] &quot;); 엔티티 태그 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;[RFC2616]의 3.11 절&lt;/a&gt; 참조 . &quot;[&quot;, entity-tag 및 &quot;]&quot;사이에 LWS가 허용되지 않음 State-token = 코딩 된 URL Resource-Tag = &quot;&amp;lt;&quot;Simple-ref &quot;&amp;gt;&quot;; 단순 참조 : &lt;a href=&quot;#section-8.3&quot;&gt;섹션 8.3&lt;/a&gt; 참조 ; Resource-Tag에 LWS가 허용되지 않음 구문은 태그가없는 목록 ( &quot;No-tag-list&quot;)과 태그가있는 목록 ( &quot;Tagged-list&quot;)을 구분합니다. 태그가없는 목록은 Request-URI가 식별 한 자원에 적용되는 반면, 태그가없는 목록은 앞의 Resource-Tag가 식별 한 자원에 적용됩니다. Resource-Tag는 다음 Resource-Tag까지 모든 후속 목록에 적용됩니다. 두 목록 유형은 If 헤더 내에서 혼합 될 수 없습니다. No-tag-list 구문은 Request-URI를 참조하는 Resource-Tag를 사용하여 Tagged-list 프로덕션에 대한 간단한 표기법이므로 기능상의 제한이 아닙니다. 각 목록은 하나 이상의 조건으로 구성됩니다. 각 조건은 엔티티 태그 또는 상태 토큰의 관점에서 정의되며 접두사 &quot;Not&quot;으로 무시 될 수 있습니다.If 헤더 구문은 단일 요청에서 If 헤더의 다중 인스턴스를 허용하지 않습니다. 그러나 HTTP 헤더 구문을 사용하면 줄 바꿈과 공백을 삽입하여 여러 줄에 걸쳐 단일 헤더 값을 확장 할 수 있습니다 ([&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ], &lt;a href=&quot;#section-4.2&quot;&gt;섹션 &lt;/a&gt;&lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="00bde6a2609129ada06a88cb9a7d89333869670f" translate="yes" xml:space="preserve">
          <source>If HTTP pipelining is activated, several requests can be sent without waiting for the first response to be fully received. HTTP pipelining has proven difficult to implement in existing networks, where old pieces of software coexist with modern versions. HTTP pipelining has been superseded in HTTP/2 with more robust multiplexing requests within a frame.</source>
          <target state="translated">HTTP 파이프 라이닝이 활성화 된 경우 첫 번째 응답이 완전히 수신되기를 기다리지 않고 여러 요청을 보낼 수 있습니다. HTTP 파이프 라이닝은 기존 소프트웨어가 최신 버전과 공존하는 기존 네트워크에서 구현하기 어려운 것으로 입증되었습니다. HTTP 파이프 라이닝은 프레임 내에서보다 강력한 멀티플렉싱 요청으로 HTTP / 2에서 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="748bef436e961cb49a985af369e84e4c57fb5faa" translate="yes" xml:space="preserve">
          <source>If a (proxy) server receives valid credentials that are inadequate to access a given resource, the server should respond with the &lt;a href=&quot;status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Forbidden&lt;/code&gt; status code. Unlike &lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Unauthorized&lt;/code&gt; or &lt;a href=&quot;status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Proxy Authentication Required&lt;/code&gt;, authentication is impossible for this user.</source>
          <target state="translated">(프록시) 서버가 주어진 리소스에 액세스하기에 부적합한 유효한 자격 증명을 받으면 서버는 &lt;a href=&quot;status/403&quot;&gt; &lt;code&gt;403&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Forbidden&lt;/code&gt; 상태 코드로 응답해야 합니다. &lt;a href=&quot;status/401&quot;&gt; &lt;code&gt;401&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Unauthorized&lt;/code&gt; 또는 &lt;a href=&quot;status/407&quot;&gt; &lt;code&gt;407&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Proxy Authentication Required&lt;/code&gt; 와 달리이 사용자는 인증이 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="2712ef523f505fe38f908ee1d8ecd4882dfa22c9" translate="yes" xml:space="preserve">
          <source>If a (proxy) server receives valid credentials that are not adequate to gain access for a given resource, the server should respond with the &lt;a href=&quot;status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Forbidden&lt;/code&gt; status code. Unlike &lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Unauthorized&lt;/code&gt; or &lt;a href=&quot;status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Proxy Authentication Required&lt;/code&gt;, authentication is impossible for this user.</source>
          <target state="translated">(프록시) 서버가 주어진 리소스에 액세스하기에 적합하지 않은 유효한 자격 증명을 수신하면 서버는 &lt;a href=&quot;status/403&quot;&gt; &lt;code&gt;403&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Forbidden&lt;/code&gt; 상태 코드로 응답해야 합니다. &lt;a href=&quot;status/401&quot;&gt; &lt;code&gt;401&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Unauthorized&lt;/code&gt; 또는 &lt;a href=&quot;status/407&quot;&gt; &lt;code&gt;407&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Proxy Authentication Required&lt;/code&gt; 와는 달리이 사용자에게는 인증이 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="9c01487d51a7abfed59147d7589b11bd17b56929" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Key&quot;&gt;&lt;code&gt;Sec-WebSocket-Key&lt;/code&gt;&lt;/a&gt; header was provided, the value of this header is computed by taking the value of the key, concatenating the string &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot; to it, taking the &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; hash of that concatenated string, resulting in a 20-byte value. That value is then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64&lt;/a&gt; encoded to obtain the value of this property.</source>
          <target state="translated">경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-WebSocket-Key&quot;&gt; &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; &lt;/a&gt; 헤더가 제공하고,이 헤더의 값을 고려하여 문자열 &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot;그것을 연결 키의 값을 취함으로써 계산된다 &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; 해시를 연결된 문자열로 20 바이트 값이됩니다. 이 값은 이 속성의 값을 얻기 위해 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64로&lt;/a&gt; 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="326ac990ab0dffc2412d939867b01ccdcb920f4c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;DELETE&lt;/code&gt; method is successfully applied, there are several response status codes possible:</source>
          <target state="translated">경우 &lt;code&gt;DELETE&lt;/code&gt; 메소드가 성공적으로 적용되어, 여러 응답 상태 코드 수있다 :</target>
        </trans-unit>
        <trans-unit id="e0abfc5dd0ca6cc561a0c1e9018bd30b2988a7b7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; header was provided, the value of this header is computed by taking the value of the key, concatenating the string &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot; to it, taking the &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; hash of that concatenated string, resulting in a 20-byte value. That value is then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64&lt;/a&gt; encoded to obtain the value of this property.</source>
          <target state="translated">경우 &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; 헤더가 제공하고,이 헤더의 값을 고려하여 문자열 &quot;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&quot;그것을 연결 키의 값을 취함으로써 계산된다 &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1&lt;/a&gt; 해시를 연결된 문자열로 인해 20 바이트 값이됩니다. 이 값은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding&quot;&gt;base64로&lt;/a&gt; 인코딩 되어이 속성의 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="34536e055c95da8db601f072a295ac2e4e5c6957" translate="yes" xml:space="preserve">
          <source>If a COPY request has an Overwrite header with a value of &quot;F&quot;, and a
   resource exists at the Destination URL, the server MUST fail the
   request.

   When a server executes a COPY request and overwrites a destination
   resource, the exact behavior MAY depend on many factors, including
   WebDAV extension capabilities (see particularly [&lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt;]).  For 

   example, when an ordinary resource is overwritten, the server could
   delete the target resource before doing the copy, or could do an in-
   place overwrite to preserve live properties.

   When a collection is overwritten, the membership of the destination
   collection after the successful COPY request MUST be the same
   membership as the source collection immediately before the COPY.
   Thus, merging the membership of the source and destination
   collections together in the destination is not a compliant behavior.

   In general, if clients require the state of the destination URL to be
   wiped out prior to a COPY (e.g., to force live properties to be
   reset), then the client could send a DELETE to the destination before
   the COPY request to ensure this reset.</source>
          <target state="translated">COPY 요청에 값이 &quot;F&quot;인 덮어 쓰기 헤더가 있고 대상 URL에 리소스가 존재하면 서버는 요청에 실패해야합니다. 서버가 COPY 요청을 실행하고 대상 자원을 덮어 쓰는 경우 정확한 동작은 WebDAV 확장 기능을 포함한 많은 요인에 따라 달라질 수 있습니다 (특히 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3253&quot;&gt;RFC3253&lt;/a&gt; 참조).]). 예를 들어 일반 리소스를 덮어 쓰면 서버는 복사하기 전에 대상 리소스를 삭제하거나 라이브 속성을 유지하기 위해 전체 덮어 쓰기를 수행 할 수 있습니다. 컬렉션을 덮어 쓰면 성공적인 COPY 요청 후 대상 컬렉션의 멤버 자격은 COPY 직전에 소스 컬렉션과 동일해야합니다. 따라서 소스 및 대상 컬렉션의 멤버 자격을 대상에서 병합하는 것은 호환되지 않습니다. 일반적으로 클라이언트가 COPY 이전에 도착 URL의 상태를 지워야하는 경우 (예 : 실시간 속성을 강제로 재설정) 클라이언트는 COPY 요청 전에 목적지로 DELETE를 보내이 재설정을 보장 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0fb0c405e8ed86db97633eff664cd93d6b990ee4" translate="yes" xml:space="preserve">
          <source>If a cache receives a value greater than it can represent, or if any of its subsequent calculations overflows, the cache will consider the value to be either 2147483648 (2^31) or the greatest positive integer it can conveniently represent.</source>
          <target state="translated">캐시가 표현할 수있는 것보다 큰 값을 받거나 후속 계산이 오버플로되면 캐시는 값을 2147483648 (2 ^ 31) 또는 편리하게 나타낼 수있는 가장 큰 양의 정수로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="f48cab758bf32db6fab20e2d919807414feba7e5" translate="yes" xml:space="preserve">
          <source>If a cache receives a value greater than it can represent, or if any of its subsequent calculations overflows, the cache will consider this value to be either 2,147,483,648 (2&lt;sup&gt;31&lt;/sup&gt;) or the greatest positive integer it can represent.</source>
          <target state="translated">캐시가 나타낼 수있는 것보다 큰 값을 받거나 후속 계산이 오버플로되는 경우 캐시는이 값을 2,147,483,648 (2 &lt;sup&gt;31&lt;/sup&gt; ) 또는 나타낼 수있는 최대 양의 정수로 간주합니다.</target>
        </trans-unit>
        <trans-unit id="45f89453dd62bad0eede5073e7bfa49271c65312" translate="yes" xml:space="preserve">
          <source>If a client has a partial copy of a representation and wishes to have
   an up-to-date copy of the entire representation, it could use the
   Range header field with a conditional GET (using either or both of
   If-Unmodified-Since and If-Match.)  However, if the precondition
   fails because the representation has been modified, the client would
   then have to make a second request to obtain the entire current
   representation.

   The &quot;If-Range&quot; header field allows a client to &quot;short-circuit&quot; the
   second request.  Informally, its meaning is as follows: if the
   representation is unchanged, send me the part(s) that I am requesting
   in Range; otherwise, send me the entire representation.

     If-Range = entity-tag / HTTP-date

   A client MUST NOT generate an If-Range header field in a request that
   does not contain a Range header field.  A server MUST ignore an
   If-Range header field received in a request that does not contain a
   Range header field.  An origin server MUST ignore an If-Range header
   field received in a request for a target resource that does not
   support Range requests.

   A client MUST NOT generate an If-Range header field containing an
   entity-tag that is marked as weak.  A client MUST NOT generate an
   If-Range header field containing an HTTP-date unless the client has
   no entity-tag for the corresponding representation and the date is a
   strong validator in the sense defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;Section&amp;nbsp;2.2.2 of [RFC7232]&lt;/a&gt;.

   A server that evaluates an If-Range precondition MUST use the strong
   comparison function when comparing entity-tags (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3.2&quot;&gt;Section&amp;nbsp;2.3.2 of
   [RFC7232]&lt;/a&gt;) and MUST evaluate the condition as false if an HTTP-date 

   validator is provided that is not a strong validator in the sense
   defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;Section&amp;nbsp;2.2.2 of [RFC7232]&lt;/a&gt;.  A valid entity-tag can be
   distinguished from a valid HTTP-date by examining the first two
   characters for a DQUOTE.

   If the validator given in the If-Range header field matches the
   current validator for the selected representation of the target
   resource, then the server SHOULD process the Range header field as
   requested.  If the validator does not match, the server MUST ignore
   the Range header field.  Note that this comparison by exact match,
   including when the validator is an HTTP-date, differs from the
   &quot;earlier than or equal to&quot; comparison used when evaluating an
   If-Unmodified-Since conditional.</source>
          <target state="translated">클라이언트가 표현의 일부 사본을 가지고 있고 전체 표현의 최신 사본을 원할 경우 조건 헤더 GET과 함께 범위 헤더 필드를 사용할 수 있습니다 (If-Unmodified-Since 및 If 중 하나 또는 둘 다 사용). 그러나 표현이 수정되어 전제 조건이 실패하면 클라이언트는 전체 현재 표현을 얻기 위해 두 번째 요청을해야합니다. &quot;If-Range&quot;헤더 필드를 통해 클라이언트는 두 번째 요청을 &quot;단락&quot;할 수 있습니다. 비공식적으로 그 의미는 다음과 같습니다. 표현이 변경되지 않으면 Range에서 요청하는 부분을 보내주십시오. 그렇지 않으면 전체 표현을 보내주십시오.If-Range = entity-tag / HTTP-date 클라이언트는 Range 헤더 필드를 포함하지 않는 요청에서 If-Range 헤더 필드를 생성해서는 안됩니다. 서버는 Range 헤더 필드를 포함하지 않는 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 오리진 서버는 범위 요청을 지원하지 않는 대상 자원에 대한 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 클라이언트는 약한 것으로 표시된 엔티티 태그를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT). 클라이언트는 해당 표현에 대한 엔티티 태그가없고 날짜가 다음과 같이 정의 된 의미에서 강력한 유효성 검사기가 아닌 한 HTTP 날짜를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT).서버는 Range 헤더 필드를 포함하지 않는 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 오리진 서버는 범위 요청을 지원하지 않는 대상 자원에 대한 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 클라이언트는 약한 것으로 표시된 엔티티 태그를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT). 클라이언트는 해당 표현에 대한 엔티티 태그가없고 날짜가 다음과 같이 정의 된 의미에서 강력한 유효성 검사기가 아닌 한 HTTP 날짜를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT).서버는 Range 헤더 필드를 포함하지 않는 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 오리진 서버는 범위 요청을 지원하지 않는 대상 자원에 대한 요청에서 수신 된 If-Range 헤더 필드를 무시해야합니다. 클라이언트는 약한 것으로 표시된 엔티티 태그를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT). 클라이언트는 해당 표현에 대한 엔티티 태그가없고 날짜가 다음과 같이 정의 된 의미에서 강력한 유효성 검사기가 아닌 한 HTTP 날짜를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT).클라이언트는 약한 것으로 표시된 엔티티 태그를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT). 클라이언트는 해당 표현에 대한 엔티티 태그가없고 날짜가 다음과 같이 정의 된 의미에서 강력한 유효성 검사기가 아닌 한 HTTP 날짜를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT).클라이언트는 약한 것으로 표시된 엔티티 태그를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT). 클라이언트는 해당 표현에 대한 엔티티 태그가없고 날짜가 다음과 같이 정의 된 의미에서 강력한 유효성 검사기가 아닌 한 HTTP 날짜를 포함하는 If-Range 헤더 필드를 생성해서는 안됩니다 (MUST NOT).&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;[RFC7232]의 섹션 2.2.2&lt;/a&gt; . If-Range 전제 조건을 평가하는 서버는 엔티티 태그를 비교할 때 강력한 비교 함수를 사용해야하며 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3.2&quot;&gt;[RFC7232]의 섹션 2.3.2&lt;/a&gt; ) HTTP 날짜 유효성 검증 기가 제공되지 않으면 조건을 false로 평가해야합니다 (강력하지 않은 경우). &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.2.2&quot;&gt;[RFC7232]의 섹션 2.2.2에서&lt;/a&gt; 정의한 의미의 검증기. DQUOTE의 처음 두 문자를 검사하여 유효한 엔티티 태그를 유효한 HTTP- 날짜와 구별 할 수 있습니다. If-Range 헤더 필드에 제공된 유효성 검사기가 대상 리소스의 선택된 표현에 대한 현재 유효성 검사기와 일치하면 서버는 요청 된대로 Range 헤더 필드를 처리해야합니다. 유효성 검사기가 일치하지 않으면 서버는 범위 헤더 필드를 무시해야합니다. 유효성 검증 기가 HTTP 날짜 인 경우를 포함하여 정확하게 일치하는 이러한 비교는 If-Unmodified-Since 조건을 평가할 때 사용되는 &quot;이전 또는 이전&quot;비교와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9d82e70ce9faffba2758cddebc66060093cca8ab" translate="yes" xml:space="preserve">
          <source>If a client has a partial copy of an entity in its cache, and wishes
   to have an up-to-date copy of the entire entity in its cache, it
   could use the Range request-header with a conditional GET (using
   either or both of If-Unmodified-Since and If-Match.) However, if the
   condition fails because the entity has been modified, the client
   would then have to make a second request to obtain the entire current
   entity-body.

   The If-Range header allows a client to &quot;short-circuit&quot; the second
   request. Informally, its meaning is `if the entity is unchanged, send
   me the part(s) that I am missing; otherwise, send me the entire new
   entity'.

        If-Range = &quot;If-Range&quot; &quot;:&quot; ( entity-tag | HTTP-date ) 

   If the client has no entity tag for an entity, but does have a Last-
   Modified date, it MAY use that date in an If-Range header. (The
   server can distinguish between a valid HTTP-date and any form of
   entity-tag by examining no more than two characters.) The If-Range
   header SHOULD only be used together with a Range header, and MUST be
   ignored if the request does not include a Range header, or if the
   server does not support the sub-range operation.

   If the entity tag given in the If-Range header matches the current
   entity tag for the entity, then the server SHOULD provide the
   specified sub-range of the entity using a 206 (Partial content)
   response. If the entity tag does not match, then the server SHOULD
   return the entire entity using a 200 (OK) response.</source>
          <target state="translated">클라이언트가 캐시에 엔티티의 부분 사본을 가지고 있고 캐시에 전체 엔티티의 최신 사본을 보유하려는 경우 조건부 GET과 함께 범위 요청 헤더를 사용할 수 있습니다 (둘 중 하나 또는 둘 다 사용) 그러나 엔터티가 수정되어 조건이 실패하면 클라이언트는 현재 엔터티 전체를 얻기 위해 두 번째 요청을해야합니다. If-Range 헤더를 사용하면 클라이언트가 두 번째 요청을 &quot;단락&quot;할 수 있습니다. 비공식적으로, 그 의미는 '실체가 변경되지 않은 경우, 내가 누락 된 부분을 보내주십시오. 그렇지 않으면, 전체 새로운 엔티티를 보내주십시오. If-Range = &quot;If-Range&quot; &quot;:&quot;(entity-tag | HTTP-date) 클라이언트에 엔티티에 대한 엔티티 태그가 없지만 최종 수정 날짜가있는 경우,해당 날짜를 If-Range 헤더에 사용할 수 있습니다. (서버는 두 개 이하의 문자를 검사하여 유효한 HTTP- 날짜와 엔티티-태그 형태를 구별 할 수 있습니다.) If-Range 헤더는 Range 헤더와 함께 사용해야하며 요청이있는 경우 무시해야합니다. Range 헤더를 포함하지 않거나 서버가 하위 범위 작업을 지원하지 않는 경우 If-Range 헤더에 제공된 엔티티 태그가 엔티티의 현재 엔티티 태그와 일치하면, 서버는 206 (부분 컨텐츠) 응답을 사용하여 엔티티의 지정된 하위 범위를 제공해야합니다. 엔티티 태그가 일치하지 않으면 서버는 200 (OK) 응답을 사용하여 전체 엔티티를 반환해야합니다 (SHOULD).(서버는 두 개 이하의 문자를 검사하여 유효한 HTTP- 날짜와 엔티티-태그 형태를 구별 할 수 있습니다.) If-Range 헤더는 Range 헤더와 함께 사용해야하며 요청이있는 경우 무시해야합니다. Range 헤더를 포함하지 않거나 서버가 하위 범위 작업을 지원하지 않는 경우 If-Range 헤더에 제공된 엔티티 태그가 엔티티의 현재 엔티티 태그와 일치하면, 서버는 206 (부분 컨텐츠) 응답을 사용하여 엔티티의 지정된 하위 범위를 제공해야합니다. 엔티티 태그가 일치하지 않으면 서버는 200 (OK) 응답을 사용하여 전체 엔티티를 반환해야합니다 (SHOULD).(서버는 두 개 이하의 문자를 검사하여 유효한 HTTP- 날짜와 엔티티-태그 형태를 구별 할 수 있습니다.) If-Range 헤더는 Range 헤더와 함께 사용해야하며 요청이있는 경우 무시해야합니다. Range 헤더를 포함하지 않거나 서버가 하위 범위 작업을 지원하지 않는 경우 If-Range 헤더에 제공된 엔티티 태그가 엔티티의 현재 엔티티 태그와 일치하면, 서버는 206 (부분 컨텐츠) 응답을 사용하여 엔티티의 지정된 하위 범위를 제공해야합니다. 엔티티 태그가 일치하지 않으면 서버는 200 (OK) 응답을 사용하여 전체 엔티티를 반환해야합니다 (SHOULD).또는 서버가 하위 범위 작업을 지원하지 않는 경우. If-Range 헤더에 제공된 엔티티 태그가 엔티티의 현재 엔티티 태그와 일치하면, 서버는 206 (부분 컨텐츠) 응답을 사용하여 엔티티의 지정된 하위 범위를 제공해야합니다. 엔티티 태그가 일치하지 않으면 서버는 200 (OK) 응답을 사용하여 전체 엔티티를 반환해야합니다 (SHOULD).또는 서버가 하위 범위 작업을 지원하지 않는 경우. If-Range 헤더에 제공된 엔티티 태그가 엔티티의 현재 엔티티 태그와 일치하면, 서버는 206 (부분 컨텐츠) 응답을 사용하여 엔티티의 지정된 하위 범위를 제공해야합니다. 엔티티 태그가 일치하지 않으면 서버는 200 (OK) 응답을 사용하여 전체 엔티티를 반환해야합니다 (SHOULD).</target>
        </trans-unit>
        <trans-unit id="3088b6387af36bd48fbfec162964786d9f1bdf8a" translate="yes" xml:space="preserve">
          <source>If a cookie name has this prefix, it is accepted in a &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header only if it is also marked with the &lt;code&gt;Secure&lt;/code&gt; attribute, was sent from a secure origin, does &lt;em&gt;not&lt;/em&gt; include a &lt;code&gt;Domain&lt;/code&gt; attribute, and has the &lt;code&gt;Path&lt;/code&gt; attribute set to &lt;code&gt;/&lt;/code&gt;. In this way, these cookies can be seen as &quot;domain-locked&quot;.</source>
          <target state="translated">쿠키 이름에이 접두사가 있으면 &lt;code&gt;Secure&lt;/code&gt; 속성으로 표시되고 보안 원본에서 전송되었으며 &lt;code&gt;Domain&lt;/code&gt; 속성을 포함 하지 &lt;em&gt;않고 &lt;/em&gt; &lt;code&gt;Path&lt;/code&gt; 속성이 &lt;code&gt;/&lt;/code&gt; 로 설정된 경우에만 &lt;a href=&quot;headers/set-cookie&quot;&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;/a&gt; 헤더 에서 허용됩니다. . 이러한 방식으로 이러한 쿠키는 &quot;도메인 잠금&quot;으로 볼 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c034021e921f0e666de945c6149637ed216dc323" translate="yes" xml:space="preserve">
          <source>If a cookie name has this prefix, it is accepted in a &lt;a href=&quot;headers/set-cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; header only if it is marked with the &lt;code&gt;Secure&lt;/code&gt; attribute and was sent from a secure origin. This is weaker than the &lt;code&gt;__Host-&lt;/code&gt; prefix.</source>
          <target state="translated">쿠키 이름에이 접두사가 있으면 &lt;code&gt;Secure&lt;/code&gt; 속성으로 표시되고 보안 원본에서 전송 된 경우에만 &lt;a href=&quot;headers/set-cookie&quot;&gt; &lt;code&gt;Set-Cookie&lt;/code&gt; &lt;/a&gt; 헤더 에서 허용됩니다 . 이것은 &lt;code&gt;__Host-&lt;/code&gt; 접두사 보다 약 합니다.</target>
        </trans-unit>
        <trans-unit id="6b817618a3c57a329ff611f0cc5c3c6f52c5cf77" translate="yes" xml:space="preserve">
          <source>If a cross origin resource supports CORS, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute or the &lt;a href=&quot;cross-origin-resource-policy&quot;&gt;&lt;code&gt;Cross-Origin-Resource-Policy&lt;/code&gt;&lt;/a&gt; header must be used to load it without being blocked by COEP.</source>
          <target state="translated">교차 출처 리소스가 CORS를 지원하는 경우 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; 속성 또는 &lt;a href=&quot;cross-origin-resource-policy&quot;&gt; &lt;code&gt;Cross-Origin-Resource-Policy&lt;/code&gt; &lt;/a&gt; 헤더를 사용하여 COEP에 의해 차단되지 않고로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="07dcaab0a8d92362a3236a9f15a9d5cd4082d7fa" translate="yes" xml:space="preserve">
          <source>If a cross-origin document with COOP is opened in a new window, the opening document will not have a reference to it, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt;window.opener&lt;/a&gt;&lt;/code&gt; property of the new window will be &lt;code&gt;null&lt;/code&gt;. This allows you to have more control over references to a window than &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/noopener&quot;&gt;rel=noopener&lt;/a&gt;&lt;/code&gt;, which only affects outgoing navigations.</source>
          <target state="translated">COOP를 사용하는 교차 출처 문서가 새 창에서 열리면 여는 문서에는 해당 문서에 대한 참조가 없으며 새 창의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt;window.opener&lt;/a&gt;&lt;/code&gt; 속성은 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 이를 통해 나가는 탐색에만 영향을주는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/noopener&quot;&gt;rel=noopener&lt;/a&gt;&lt;/code&gt; 보다 창에 대한 참조를 더 많이 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d6c875512b44481b0aec708d6ca539f3bb79d246" translate="yes" xml:space="preserve">
          <source>If a new cacheable (see sections &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt;, &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;, &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt; and &lt;a href=&quot;#section-13.8&quot;&gt;13.8&lt;/a&gt;)
   response is received from a resource while any existing responses for
   the same resource are cached, the cache SHOULD use the new response
   to reply to the current request. It MAY insert it into cache storage
   and MAY, if it meets all other requirements, use it to respond to any
   future requests that would previously have caused the old response to
   be returned. If it inserts the new response into cache storage  the
   rules in &lt;a href=&quot;#section-13.5.3&quot;&gt;section 13.5.3&lt;/a&gt; apply.

      Note: a new response that has an older Date header value than
      existing cached responses is not cacheable.</source>
          <target state="translated">동일한 자원에 대한 기존 응답이 캐시되는 동안 자원에서 새로운 캐시 가능 ( &lt;a href=&quot;#section-14.9.2&quot;&gt;14.9.2&lt;/a&gt; , &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt; , &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt; 및 &lt;a href=&quot;#section-13.8&quot;&gt;13.8 참조&lt;/a&gt; ) 응답을 수신하면 캐시는 새로운 응답을 사용하여 현재에 응답해야합니다 의뢰. 캐시 스토리지에이를 삽입하고 다른 모든 요구 사항을 충족하는 경우이를 사용하여 이전 응답이 리턴되었던 이전 요청에 응답 할 수 있습니다. 새로운 응답을 캐시 스토리지에 삽입하면 &lt;a href=&quot;#section-13.5.3&quot;&gt;섹션 13.5.3&lt;/a&gt; 의 규칙이 적용됩니다. 참고 : 기존 캐시 응답보다 오래된 Date 헤더 값을 가진 새 응답은 캐시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e58c73fa3ef27580bf7799dda53dd96a70453ff2" translate="yes" xml:space="preserve">
          <source>If a request goes through multiple proxies, the IP addresses of each successive proxy is listed. This means, the right-most IP address is the IP address of the most recent proxy and the left-most IP address is the IP address of the originating client.</source>
          <target state="translated">요청이 여러 프록시를 통과하는 경우 각 연속 프록시의 IP 주소가 나열됩니다. 즉, 가장 오른쪽 IP 주소는 가장 최근 프록시의 IP 주소이고 가장 왼쪽 IP 주소는 원래 클라이언트의 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="e2c3c58894ac3aaacdbb37189725a1f26ce869ef" translate="yes" xml:space="preserve">
          <source>If a resource exists at the destination and the Overwrite header is
   &quot;T&quot;, then prior to performing the move, the server MUST perform a
   DELETE with &quot;Depth: infinity&quot; on the destination resource.  If the
   Overwrite header is set to &quot;F&quot;, then the operation will fail.</source>
          <target state="translated">대상에 리소스가 있고 덮어 쓰기 헤더가 &quot;T&quot;인 경우 이동을 수행하기 전에 서버는 대상 리소스에서 &quot;Depth : infinity&quot;를 사용하여 DELETE를 수행해야합니다. 덮어 쓰기 헤더가 &quot;F&quot;로 설정되면 작업이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="22db687e87d90b4a5b61ae1c9f192564fbed5581" translate="yes" xml:space="preserve">
          <source>If a same-site cookie has this attribute, the browser will only send cookies if the request originated from the website that set the cookie. If the request originated from a different URL than the URL of the current location, none of the cookies tagged with the &lt;code&gt;strict&lt;/code&gt; attribute will be included.</source>
          <target state="translated">동일한 사이트 쿠키에이 속성이있는 경우 브라우저는 쿠키를 설정 한 웹 사이트에서 요청이 발생한 경우에만 쿠키를 보냅니다. 요청이 현재 위치의 URL과 다른 URL에서 시작된 경우 &lt;code&gt;strict&lt;/code&gt; 속성으로 태그가 지정된 쿠키 는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a78f222e9151b20e3fa58d2b5922efdfbb1c1a0f" translate="yes" xml:space="preserve">
          <source>If a server returns such an error status, the body of the message should contain the list of the available representations of the resources, allowing the user to choose among them.</source>
          <target state="translated">서버가 이러한 오류 상태를 반환하면 메시지 본문에 사용 가능한 리소스 표현 목록이 포함되어 있어야 사용자가 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acb751d12ffe14eea97f1844541379bb1e82d026" translate="yes" xml:space="preserve">
          <source>If a single server supports multiple organizations that do not trust
   one another, then it MUST check the values of Location and Content-
   Location headers in responses that are generated under control of
   said organizations to make sure that they do not attempt to
   invalidate resources over which they have no authority.</source>
          <target state="translated">단일 서버가 서로를 신뢰하지 않는 여러 조직을 지원하는 경우, 해당 조직의 통제하에 생성 된 응답에서 Location 및 Content-Location 헤더의 값을 확인하여 어떤 서버에서 자원을 무효화하지 않도록해야합니다. 그들은 권한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0034277126e29616d67034416858786a6bf01601" translate="yes" xml:space="preserve">
          <source>If a user signs out of your website or service, you might want to remove locally stored data. You can achieve that by adding the &lt;code&gt;Clear-Site-Data&lt;/code&gt; header to the response of https://example.com/logout:</source>
          <target state="translated">사용자가 웹 사이트 나 서비스에서 로그 아웃하면 로컬에 저장된 데이터를 제거 할 수 있습니다. https://example.com/logout의 응답에 &lt;code&gt;Clear-Site-Data&lt;/code&gt; 헤더를 추가하여이를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28708bd5ed063a05bc0c1ffae01007cff1ddad84" translate="yes" xml:space="preserve">
          <source>If a user signs out of your website or service, you might want to remove locally stored data. You can achieve that by adding the &lt;code&gt;Clear-Site-Data&lt;/code&gt; header when sending the page confirming that logging out from the site has been accomplished successfully (https://example.com/logout, for example):</source>
          <target state="translated">사용자가 웹 사이트 또는 서비스에서 로그 아웃하면 로컬에 저장된 데이터를 제거 할 수 있습니다. &lt;code&gt;Clear-Site-Data&lt;/code&gt; 에서 로그 아웃이 성공적으로 완료되었음을 확인하는 페이지를 보낼 때 Clear-Site-Data 헤더 를 추가하면 됩니다 (예 : https://example.com/logout).</target>
        </trans-unit>
        <trans-unit id="8c5c04bfd2a5924b2636ab2156504c08859b88e5" translate="yes" xml:space="preserve">
          <source>If a website accepts a connection through HTTP and redirects to HTTPS, visitors may initially communicate with the non-encrypted version of the site before being redirected, if, for example, the visitor types http://www.foo.com/ or even just foo.com. This creates an opportunity for a man-in-the-middle attack. The redirect could be exploited to direct visitors to a malicious site instead of the secure version of the original site.</source>
          <target state="translated">웹 사이트가 HTTP를 통한 연결을 수락하고 HTTPS로 리디렉션하는 경우 방문자가 http://www.foo.com/ 또는 그냥 foo.com. 이것은 중간자 공격의 기회를 만듭니다. 리디렉션을 이용하여 방문자를 원래 사이트의 보안 버전 대신 악의적 인 사이트로 안내 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5d743f58d38a06b0efb87624e4399a8e4fa3b88" translate="yes" xml:space="preserve">
          <source>If all proxies are down, and there was no DIRECT option specified, the browser will ask if proxies should be temporarily ignored, and direct connections attempted. After 20 minutes, the browser will ask if proxies should be retried, asking again after an additional 40 minutes. Queries will continue, always adding 20 minutes to the elapsed time between queries.</source>
          <target state="translated">모든 프록시가 작동 중지되고 DIRECT 옵션이 지정되지 않은 경우 브라우저는 프록시를 일시적으로 무시해야하는지 여부를 묻고 직접 연결을 시도합니다. 20 분 후 브라우저는 프록시를 다시 시도해야하는지 묻고 추가 40 분 후에 다시 묻습니다. 쿼리는 계속 진행되며 쿼리 간 경과 시간에 항상 20 분이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="24f0c3aae5a8cb6b90479558f98a655abee38832" translate="yes" xml:space="preserve">
          <source>If an HTTP/1.1 client sends a request which includes a request body,
   but which does not include an Expect request-header field with the
   &quot;100-continue&quot; expectation, and if the client is not directly
   connected to an HTTP/1.1 origin server, and if the client sees the
   connection close before receiving any status from the server, the
   client SHOULD retry the request.  If the client does retry this
   request, it MAY use the following &quot;binary exponential backoff&quot;
   algorithm to be assured of obtaining a reliable response:

      1. Initiate a new connection to the server

      2. Transmit the request-headers

      3. Initialize a variable R to the estimated round-trip time to the
         server (e.g., based on the time it took to establish the
         connection), or to a constant value of 5 seconds if the round-
         trip time is not available.

      4. Compute T = R * (2**N), where N is the number of previous
         retries of this request.

      5. Wait either for an error response from the server, or for T
         seconds (whichever comes first)

      6. If no error response is received, after T seconds transmit the
         body of the request.

      7. If client sees that the connection is closed prematurely,
         repeat from step 1 until the request is accepted, an error
         response is received, or the user becomes impatient and
         terminates the retry process. 

   If at any point an error status is received, the client

      - SHOULD NOT continue and

      - SHOULD close the connection if it has not completed sending the
        request message.</source>
          <target state="translated">HTTP / 1.1 클라이언트가 요청 본문을 포함하지만 &quot;100-continue&quot;예상과 함께 Expect 요청 헤더 필드를 포함하지 않는 요청을 보내고 클라이언트가 HTTP / 1.1 오리진 서버에 직접 연결되지 않은 경우 서버로부터 상태를 수신하기 전에 클라이언트가 연결이 닫히면 클라이언트는 요청을 다시 시도해야합니다. 클라이언트가이 요청을 재 시도하는 경우 신뢰할 수있는 응답을 얻기 위해 다음 &quot;이진 지수 백 오프&quot;알고리즘을 사용할 수 있습니다. 1. 서버에 대한 새로운 연결을 시작합니다. 2. 요청 헤더를 전송합니다. 3. 변수 R을 초기화합니다 서버에 대한 예상 왕복 시간 (예 : 연결을 설정하는 데 걸린 시간에 따라)왕복 시간을 사용할 수없는 경우 상수 값을 5 초로 설정하십시오. 4. 계산 T = R * (2 ** N). 여기서 N은이 요청의 이전 재시도 횟수입니다. 5. 서버에서 오류 응답을 기다리거나 T 초 (둘 중 빠른 시간)를 기다립니다. 6. 오류 응답이 수신되지 않으면 T 초 후에 요청 본문을 전송하십시오. 7. 클라이언트가 연결이 조기에 종료 된 것을 확인하면 요청이 수락되거나 오류 응답이 수신되거나 사용자가 조급해 재시도 프로세스를 종료 할 때까지 1 단계부터 반복하십시오. 어느 시점에서든 오류 상태가 수신되면 클라이언트는 계속해서는 안되며 요청 메시지 전송이 완료되지 않은 경우 연결을 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="787c64d4a2d625599ff698430e64f8f08ddeb6a2" translate="yes" xml:space="preserve">
          <source>If an origin server does not explicitly specify freshness (e.g. using &lt;a href=&quot;headers/cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/expires&quot;&gt;&lt;code&gt;Expires&lt;/code&gt;&lt;/a&gt; header) then a heuristic approach may be used.</source>
          <target state="translated">원 서버가 신선도를 명시 적으로 지정하지 않은 경우 (예 : &lt;a href=&quot;headers/cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt; 또는&lt;a href=&quot;headers/expires&quot;&gt; &lt;code&gt;Expires&lt;/code&gt; &lt;/a&gt; 헤더 사용) 휴리스틱 접근 방식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf50575579d857df6c5f0e97dcbebb456e6ad37f" translate="yes" xml:space="preserve">
          <source>If another principal locks a resource that a principal wishes to
   access, it is useful for the second principal to be able to find out
   who the first principal is.  For this purpose the DAV:lockdiscovery
   property is provided.  This property lists all outstanding locks,
   describes their type, and MAY even provide the lock tokens.

   Any DAV-compliant resource that supports the LOCK method MUST support
   the DAV:lockdiscovery property.</source>
          <target state="translated">다른 프린시 펄이 프린시 펄이 액세스하려는 자원을 잠그면, 두 번째 프린시 펄이 첫 번째 프린시 펄이 누구인지 알아낼 수 있습니다. 이를 위해 DAV : lockdiscovery 특성이 제공됩니다. 이 속성은 모든 미해결 잠금을 나열하고 유형을 설명하며 잠금 토큰을 제공 할 수도 있습니다. LOCK 메소드를 지원하는 모든 DAV 호환 자원은 DAV : lockdiscovery 특성을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="4e1966a722bf8f31efed779517aa3c6a04a51ec9" translate="yes" xml:space="preserve">
          <source>If both &lt;strong&gt;wd1 &lt;/strong&gt;and &lt;strong&gt;wd1 &lt;/strong&gt;are defined, the condition is true if the current weekday is in between those two &lt;em&gt;ordered &lt;/em&gt;weekdays. Bounds are inclusive, &lt;em&gt;but the bounds are ordered&lt;/em&gt;. If the &quot;GMT&quot; parameter is specified, times are taken to be in GMT. Otherwise, the local timezone is used.</source>
          <target state="translated">두 경우 &lt;strong&gt;WD1&lt;/strong&gt; 및 &lt;strong&gt;WD1가&lt;/strong&gt; 정의되어 현재 요일이이 둘 사이에있는 경우, 조건은 true입니다 &lt;em&gt;주문&lt;/em&gt; 평일. 바운드는 포함 &lt;em&gt;되지만 바운드는 정렬&lt;/em&gt; 됩니다. &quot;GMT&quot;매개 변수를 지정하면 시간이 GMT로 설정됩니다. 그렇지 않으면 현지 시간대가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9452662d9180b8ba3efe3a780c450ae27e07209e" translate="yes" xml:space="preserve">
          <source>If both a &lt;a href=&quot;headers/content-security-policy-report-only&quot;&gt;&lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt;&lt;/a&gt; header and a &lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header are present in the same response, both policies are honored. The policy specified in &lt;code&gt;Content-Security-Policy&lt;/code&gt; headers is enforced while the &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; policy generates reports but is not enforced.</source>
          <target state="translated">둘 다를 경우 &lt;a href=&quot;headers/content-security-policy-report-only&quot;&gt; &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; &lt;/a&gt; 헤더와 &lt;a href=&quot;headers/content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; 헤더 같은 응답에 존재하는 두 정책은 영광입니다. &lt;code&gt;Content-Security-Policy-Report-Only&lt;/code&gt; 정책이 보고서를 생성하지만 시행되지 않는 동안 &lt;code&gt;Content-Security-Policy&lt;/code&gt; 헤더에 지정된 정책 이 시행 됩니다.</target>
        </trans-unit>
        <trans-unit id="d126e6f1349def738aa84d3d7ade4189f1674e03" translate="yes" xml:space="preserve">
          <source>If both this directive (i.e. via the &lt;code&gt;allow&lt;/code&gt; attribute) and the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute are present on an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element, this directive takes precedence. There was a bug whereby the &lt;code&gt;fullscreen&lt;/code&gt; directive didn't work unless the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute was also present, but this has been fixed as of Firefox 80 (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1608358&quot;&gt;bug 1608358&lt;/a&gt;).</source>
          <target state="translated">이 지시문 (즉, &lt;code&gt;allow&lt;/code&gt; 속성을 통해 )과 &lt;code&gt;allowfullscreen&lt;/code&gt; 속성이 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 에있는 경우 요소에있는 경우이 지시문이 우선합니다. 거기 이에 버그이었다 &lt;code&gt;fullscreen&lt;/code&gt; 하지 않는 지시어가 작동하지 않았다 &lt;code&gt;allowfullscreen&lt;/code&gt; 속성도 존재는, 그러나 이것은 파이어 폭스 (80) (현재의 고정 된 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1608358&quot;&gt;버그 1608358&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e7feb971c53a1e3363d82fc1ef6da1a87db0cb6b" translate="yes" xml:space="preserve">
          <source>If both this directive and the &lt;code&gt;allowfullscreen&lt;/code&gt; attribute are present on an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element, this directive takes precedence.</source>
          <target state="translated">이 지시문과 &lt;code&gt;allowfullscreen&lt;/code&gt; 속성 이 모두 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 요소에 있으면이 지시문이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="62b0316637ce393c10dfd9b58aa37bf2f0a42cdc" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;Content-Language&lt;/code&gt; is specified, the default is that the content is intended for all language audiences. Multiple language tags are also possible, as well as applying the &lt;code&gt;Content-Language&lt;/code&gt; header to various media types and not only to textual documents.</source>
          <target state="translated">&lt;code&gt;Content-Language&lt;/code&gt; 가 지정 되지 않은 경우 기본적으로 컨텐츠는 모든 언어 사용자를 대상으로합니다. 텍스트 &lt;code&gt;Content-Language&lt;/code&gt; 뿐만 아니라 다양한 미디어 유형에 Content-Language 헤더를 적용 할뿐만 아니라 여러 언어 태그도 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="5f0faef3900e1d15f4d91c1fcfcd5a68d9578e75" translate="yes" xml:space="preserve">
          <source>If no URL scheme is specified for a &lt;code&gt;host-source&lt;/code&gt; and the iframe is loaded from an &lt;code&gt;https&lt;/code&gt; URL, the URL for the page loading the iframe must also be &lt;code&gt;https&lt;/code&gt;, per the W3C spec on &lt;a href=&quot;https://w3c.github.io/webappsec-csp/2/#match-source-expression&quot;&gt;matching source expressions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;host-source&lt;/code&gt; 대해 URL 스키마가 지정되지 않고 iframe이 &lt;code&gt;https&lt;/code&gt; URL 하는 페이지의 URL도 &lt;a href=&quot;https://w3c.github.io/webappsec-csp/2/#match-source-expression&quot;&gt;일치하는 소스 표현식&lt;/a&gt; 의 W3C 사양에 따라 &lt;code&gt;https&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="2432969974e0bf99b152d397b2c719d44cd0439e" translate="yes" xml:space="preserve">
          <source>If no port is given, the default port for the service requested (e.g., &quot;80&quot; for an HTTP URL) is implied.</source>
          <target state="translated">포트가 제공되지 않으면 요청 된 서비스의 기본 포트 (예 : HTTP URL의 경우 &quot;80&quot;)가 암시됩니다.</target>
        </trans-unit>
        <trans-unit id="9619fd8159a262a6e7f8b156f3e9ea6322194094" translate="yes" xml:space="preserve">
          <source>If no port is included, the default port for the service requested (e.g., &lt;code&gt;443&lt;/code&gt; for an HTTPS URL, and &lt;code&gt;80&lt;/code&gt; for an HTTP URL) is implied.</source>
          <target state="translated">포트가 포함되지 않은 경우 요청 된 서비스의 기본 포트 (예 : HTTPS URL의 경우 &lt;code&gt;443&lt;/code&gt; , HTTP URL의 경우 &lt;code&gt;80&lt;/code&gt; )가 암시됩니다.</target>
        </trans-unit>
        <trans-unit id="e478b06858c696e70a28213656753916abc92ba3" translate="yes" xml:space="preserve">
          <source>If omitted, defaults to the host of the current document URL, not including subdomains.</source>
          <target state="translated">생략하면 기본적으로 현재 문서 URL의 호스트가 하위 도메인을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="219c745dfe181251ec5c580abc0c14da79c6b291" translate="yes" xml:space="preserve">
          <source>If only a single value is specified (from each category: day, month, year), the function returns a true value only on days that match that specification. If both values are specified, the result is true between those times, including bounds, &lt;em&gt;but the bounds are ordered&lt;/em&gt;.</source>
          <target state="translated">단일 범주 (일, 월, 년)에서 하나의 값만 지정하면 함수는 해당 스펙과 일치하는 날에만 참 값을 리턴합니다. 두 값을 모두 지정 &lt;em&gt;하면 경계를&lt;/em&gt; 포함하여 해당 시간 사이에 결과가 적용 &lt;em&gt;되지만 경계가 정렬&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="ebc918364962297bbe2d03e861cdada5a4d5d17c" translate="yes" xml:space="preserve">
          <source>If only a single value is specified (from each category: hour, minute, second), the function returns a true value only at times that match that specification. If both values are specified, the result is true between those times, including bounds, &lt;em&gt;but the bounds are ordered&lt;/em&gt;.</source>
          <target state="translated">단일 범주 만 지정하면 (각 범주에서시, 분, 초), 해당 스펙과 일치하는 시간에만 함수가 true를 리턴합니다. 두 값을 모두 지정 &lt;em&gt;하면 경계를&lt;/em&gt; 포함하여 해당 시간 사이에 결과가 적용 &lt;em&gt;되지만 경계가 정렬&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="7ad3b8639eddeee4168cd5b47edae6dcb2df2c3c" translate="yes" xml:space="preserve">
          <source>If only one parameter is present, the function returns a value of true on the weekday that the parameter represents. If the string &quot;GMT&quot; is specified as a second parameter, times are taken to be in GMT. Otherwise, they are assumed to be in the local timezone.</source>
          <target state="translated">매개 변수가 하나만 있으면 함수는 해당 매개 변수가 나타내는 요일에 true 값을 반환합니다. 문자열 &quot;GMT&quot;가 두 번째 매개 변수로 지정된 경우 시간은 GMT로 간주됩니다. 그렇지 않으면 현지 시간대로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="b64b7edace3c1de8eea4e9f7cb502c7f66cbbfc3" translate="yes" xml:space="preserve">
          <source>If several ranges are sent back, the &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;multipart/byteranges&lt;/code&gt; and each fragment covers one range, with &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; describing it.</source>
          <target state="translated">여러 범위가 다시 전송되면 &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;multipart/byteranges&lt;/code&gt; 로 설정 되고 각 조각은 하나의 범위를 다루며 &lt;a href=&quot;../headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; 에서&lt;/a&gt; 설명합니다.</target>
        </trans-unit>
        <trans-unit id="78a2139f59af3c201e14f90fe9cef770569b0d29" translate="yes" xml:space="preserve">
          <source>If sites omit the &lt;code&gt;Accept-Ranges&lt;/code&gt; header, they likely don't support for partial requests. Some sites also explicitly send &quot;&lt;code&gt;none&lt;/code&gt;&quot; as a value, indicating no support. In some apps, download managers disable their pause buttons in that case.</source>
          <target state="translated">사이트에서 &lt;code&gt;Accept-Ranges&lt;/code&gt; 헤더를 생략하면 부분 요청을 지원하지 않을 수 있습니다. 일부 사이트는 명시 적으로 &quot; &lt;code&gt;none&lt;/code&gt; &quot;을 값 으로 보내 지원하지 않음을 나타냅니다. 일부 앱에서는 다운로드 관리자가이 경우 일시 중지 버튼을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="c8a2e2bc49a74014d19dc3e20faf6d47f4b2c5fb" translate="yes" xml:space="preserve">
          <source>If sites omit the &lt;code&gt;Accept-Ranges&lt;/code&gt; header, they likely don't support partial requests. Some sites also explicitly send &quot;&lt;code&gt;none&lt;/code&gt;&quot; as a value, indicating no support. In some apps, download managers disable their pause buttons in that case.</source>
          <target state="translated">사이트에서 &lt;code&gt;Accept-Ranges&lt;/code&gt; 를 생략하는 경우 헤더를 부분 요청을 지원하지 않을 가능성이 높습니다. 일부 사이트는 또한 &quot; &lt;code&gt;none&lt;/code&gt; &quot;을 값 으로 명시 적으로 전송 하여 지원이 없음을 나타냅니다. 일부 앱에서는 다운로드 관리자가이 경우 일시 중지 버튼을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="091a0218219abd0cdbbefc8a401d17bce706512c" translate="yes" xml:space="preserve">
          <source>If that's not possible, then another way is to:</source>
          <target state="translated">가능하지 않은 경우 다른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7832c9e8ca11a0dc4da645bd06786210e575896b" translate="yes" xml:space="preserve">
          <source>If the &quot;Basic&quot; authentication scheme is used, the credentials are constructed like this:</source>
          <target state="translated">&quot;기본&quot;인증 체계를 사용하는 경우 자격 증명은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="f91174398d0cf4de63fc9e0993886a3f7ebd8264" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; is present in HTTP responses (and its value isn't &quot;&lt;code&gt;none&lt;/code&gt;&quot;), the server supports range requests. You can check this by issuing a &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; request and cURL, for example.</source>
          <target state="translated">는 IF &lt;a href=&quot;headers/accept-ranges&quot;&gt; &lt;code&gt;Accept-Ranges&lt;/code&gt; &lt;/a&gt; 응답 HTTP에 존재하는 (그 값이 &quot;하지 않습니다 &lt;code&gt;none&lt;/code&gt; &quot;), 서버가 지원 요청을 다양합니다. 예를 들어 &lt;a href=&quot;methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt; 요청 및 cURL 을 발행하여이를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e2bd82bb2d016fc76410dd12a3b0342a93316e7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; is present in HTTP responses (and its value isn't &quot;&lt;code&gt;none&lt;/code&gt;&quot;), the server supports range requests. You can check this by issuing a &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; request with cURL, for example.</source>
          <target state="translated">는 IF &lt;a href=&quot;headers/accept-ranges&quot;&gt; &lt;code&gt;Accept-Ranges&lt;/code&gt; &lt;/a&gt; 응답 HTTP에 존재하는 (그 값이 &quot;하지 않습니다 &lt;code&gt;none&lt;/code&gt; &quot;), 서버가 지원 요청을 다양합니다. &lt;a href=&quot;methods/head&quot;&gt; &lt;code&gt;HEAD&lt;/code&gt; &lt;/a&gt; 를 발행하여 확인할 수 있습니다.예를 들어 cURL 요청을 .</target>
        </trans-unit>
        <trans-unit id="a0c9cc929b4bd0a174617d37fdb2ef2438aa90fc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; can't detect any value specified for this header&amp;mdash;even though the header is included in the response&amp;mdash;this error occurs.</source>
          <target state="translated">는 IF &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;사용자 에이전트는&lt;/a&gt; 이 지정된 값 검출 할 수 헤더-에도 헤더가 포함되어 적 반응이 오류가 발생한다.</target>
        </trans-unit>
        <trans-unit id="37fea5e541c03ceff1dd1b298e2c8a47aff43276" translate="yes" xml:space="preserve">
          <source>If the CORS configuration isn't setup correctly, the browser console will present an error like &lt;code&gt;&quot;Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at $somesite&quot;&lt;/code&gt; indicating that the request was blocked due to violating the CORS security rules. This might not necessarily be a set-up mistake, though. It's possible that the request is in fact intentionally being disallowed by the user's web application and remote external service. However, If the endpoint is meant to be available, some debugging is needed to succeed.</source>
          <target state="translated">CORS 구성이 올바르게 설정되지 않은 경우 브라우저 콘솔은 &lt;code&gt;&quot;Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at $somesite&quot;&lt;/code&gt; 수 없습니다 &quot; 와 같은 오류를 표시하여 CORS 보안 위반으로 인해 요청이 차단되었음을 나타냅니다. 규칙. 그러나 이것은 반드시 설정 실수가 아닐 수도 있습니다. 요청이 사용자의 웹 응용 프로그램 및 원격 외부 서비스에 의해 의도적으로 허용되지 않을 수 있습니다. 그러나 엔드 포인트를 사용할 수있게하려면 일부 디버깅이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dc9c7b7249ed9c2cd26babda62bc7a605dd20286" translate="yes" xml:space="preserve">
          <source>If the CORS request indicated by the preflight request is authorized, the server will respond to the preflight request with a message that indicates the allowed origin, methods and headers. Below we see that &lt;a href=&quot;access-control-allow-headers&quot;&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;&lt;/a&gt; includes the headers that were requested.</source>
          <target state="translated">실행 전 요청에 표시된 CORS 요청이 승인되면 서버는 허용 된 출처, 방법 및 헤더를 나타내는 메시지로 실행 전 요청에 응답합니다. 아래에서 &lt;a href=&quot;access-control-allow-headers&quot;&gt; &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; &lt;/a&gt; 에는 요청 된 헤더가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3f8c214b695d6473d07dc8643ad150f467962dc" translate="yes" xml:space="preserve">
          <source>If the TCP connection is closed or reset while streams remain in
   &quot;open&quot; or &quot;half-closed&quot; state, then the affected streams cannot be
   automatically retried (see &lt;a href=&quot;#section-8.1.4&quot;&gt;Section 8.1.4&lt;/a&gt; for details).</source>
          <target state="translated">스트림이 &quot;open&quot;또는 &quot;half-closed&quot;상태에있는 동안 TCP 연결이 닫히거나 재설정되면 영향을받는 스트림을 자동으로 다시 시도 할 수 없습니다 (자세한 내용은 &lt;a href=&quot;#section-8.1.4&quot;&gt;섹션 8.1.4&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="b8ffab7457821dbf47b42281a4936c9c518bf014" translate="yes" xml:space="preserve">
          <source>If the attribute is set to lax, same-site cookies are withheld on cross-domain subrequests, such as calls to load images or frames, but will be sent when a user naviates to the URL from an external site, for example, by following a link.</source>
          <target state="translated">이 속성이 lax로 설정되면 이미지 또는 프레임로드 호출과 같은 교차 도메인 하위 요청에서 동일한 사이트 쿠키가 보류되지만 사용자가 외부 사이트에서 URL로 이동하면 다음과 같이 전송됩니다. 링크.</target>
        </trans-unit>
        <trans-unit id="5d7a35532093cac38ce9488b4579d2ba232c9fa7" translate="yes" xml:space="preserve">
          <source>If the client has performed a conditional GET request and access is
   allowed, but the document has not been modified, the server SHOULD
   respond with this status code. The 304 response MUST NOT contain a
   message-body, and thus is always terminated by the first empty line
   after the header fields.

   The response MUST include the following header fields:

      - Date, unless its omission is required by &lt;a href=&quot;#section-14.18.1&quot;&gt;section 14.18.1&lt;/a&gt; 

   If a clockless origin server obeys these rules, and proxies and
   clients add their own Date to any response received without one (as
   already specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-14.19&quot;&gt;[RFC 2068], section&amp;nbsp;14.19&lt;/a&gt;), caches will operate
   correctly.

      - ETag and/or Content-Location, if the header would have been sent
        in a 200 response to the same request

      - Expires, Cache-Control, and/or Vary, if the field-value might
        differ from that sent in any previous response for the same
        variant

   If the conditional GET used a strong cache validator (see &lt;a href=&quot;#section-13.3.3&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt;), the response SHOULD NOT include other entity-headers.
   Otherwise (i.e., the conditional GET used a weak validator), the
   response MUST NOT include other entity-headers; this prevents
   inconsistencies between cached entity-bodies and updated headers.

   If a 304 response indicates an entity not currently cached, then the
   cache MUST disregard the response and repeat the request without the
   conditional.

   If a cache uses a received 304 response to update a cache entry, the
   cache MUST update the entry to reflect any new field values given in
   the response.</source>
          <target state="translated">클라이언트가 조건부 GET 요청을 수행하고 액세스가 허용되었지만 문서가 수정되지 않은 경우 서버는이 상태 코드로 응답해야합니다. 304 응답은 메시지 본문을 포함해서는 안되므로 헤더 필드 다음의 첫 번째 빈 줄로 항상 종료됩니다. 응답은 반드시 다음 헤더 필드를 포함해야한다 : &lt;a href=&quot;#section-14.18.1&quot;&gt;-14.18.1 절에서&lt;/a&gt; 누락이 요구되지 않는 한, 날짜 시계 없는 오리진 서버가 이러한 규칙을 준수하고 프록시와 클라이언트가 하나의 요청없이 이미 수신 한 응답에 고유 한 날짜를 추가 &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-14.19&quot;&gt;[RFC 2068], 섹션 14.19&lt;/a&gt;) 캐시가 올바르게 작동합니다. -헤더가 동일한 요청에 대해 200 응답으로 전송 된 경우 ETag 및 / 또는 Content-Location-필드 값이 이전 응답에서 전송 된 값과 다를 수있는 경우 만료, 캐시 제어 및 / 또는 가변 동일한 변형의 경우 조건부 GET이 강력한 캐시 검사기를 사용한 경우 ( &lt;a href=&quot;#section-13.3.3&quot;&gt;섹션 &lt;/a&gt;&lt;a href=&quot;#section-13.3.3&quot;&gt;13.3.3&lt;/a&gt; 참조))에 응답에는 다른 엔터티 헤더가 포함되어서는 안됩니다. 그렇지 않으면 (즉, 조건부 GET이 약한 유효성 검사기를 사용) 응답에는 다른 엔터티 헤더가 포함되어서는 안됩니다. 이렇게하면 캐시 된 엔터티 본문과 업데이트 된 헤더 간의 불일치가 방지됩니다. 304 응답이 현재 캐시되지 않은 엔티티를 나타내는 경우, 캐시는 응답을 무시하고 조건없이 요청을 반복해야합니다. 캐시가 수신 된 304 응답을 사용하여 캐시 항목을 업데이트하는 경우 캐시는 응답에 제공된 새로운 필드 값을 반영하도록 항목을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b16cb43ac59e1398b6bbb6871dcb2c0b0c8621f" translate="yes" xml:space="preserve">
          <source>If the client receiving the &lt;code&gt;&quot;426 Upgrade Required&quot;&lt;/code&gt; response is willing and able to upgrade to TLS, it should then start the same process covered above under &lt;a href=&quot;#Client-initiated_upgrade_to_TLS&quot;&gt;Client-initiated upgrade to TLS&lt;/a&gt;.</source>
          <target state="translated">수신 클라이언트 경우 &lt;code&gt;&quot;426 Upgrade Required&quot;&lt;/code&gt; 응답이 TLS로 업그레이드 할 의사와 능력, 그것은 다음 아래 위에 덮여 같은 프로세스 시작해야 &lt;a href=&quot;#Client-initiated_upgrade_to_TLS&quot;&gt;TLS에 대한 클라이언트 시작 업그레이드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="280f043319dde7fe251e1850244792cbea213b6e" translate="yes" xml:space="preserve">
          <source>If the data is textual, you can simply embed the text (using the appropriate entities or escapes based on the enclosing document's type). Otherwise, you can specify &lt;code&gt;base64&lt;/code&gt; to embed base64-encoded binary data.</source>
          <target state="translated">데이터가 텍스트 인 경우 텍스트를 포함 할 수 있습니다 (동봉 문서 유형에 따라 적절한 엔티티 또는 이스케이프 사용). 그렇지 않으면 base64로 인코딩 된 이진 데이터를 포함하도록 &lt;code&gt;base64&lt;/code&gt; 를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32b1f46a0b7b90a86ae9e9f167e9ef7cf8038c9c" translate="yes" xml:space="preserve">
          <source>If the data is textual, you can simply embed the text (using the appropriate entities or escapes based on the enclosing document's type). Otherwise, you can specify &lt;code&gt;base64&lt;/code&gt; to embed base64-encoded binary data. You can find more info on MIME types &lt;a href=&quot;mime_types&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;mime_types/complete_list_of_mime_types&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">데이터가 텍스트 인 경우 텍스트를 포함하기 만하면됩니다 (포함하는 문서의 유형에 따라 적절한 엔티티 또는 이스케이프 사용). 그렇지 않으면 &lt;code&gt;base64&lt;/code&gt; 를 지정 하여 base64로 인코딩 된 이진 데이터를 포함 할 수 있습니다 . 당신은 MIME 유형에 대한 자세한 정보를 찾을 수 있습니다 &lt;a href=&quot;mime_types&quot;&gt;여기에&lt;/a&gt; 와&lt;a href=&quot;mime_types/complete_list_of_mime_types&quot;&gt; 여기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8559d1d219606090271c33a621201ee02497f80" translate="yes" xml:space="preserve">
          <source>If the desired resource width is not known at the time of the request or the resource does not have a display width, the &lt;code&gt;Width&lt;/code&gt; header field can be omitted. If &lt;code&gt;Width&lt;/code&gt; occurs in a message more than once, the last value overrides all previous occurrences</source>
          <target state="translated">요청시 원하는 리소스 너비를 알 수 없거나 리소스에 표시 너비가없는 경우 &lt;code&gt;Width&lt;/code&gt; 헤더 필드를 생략 할 수 있습니다. 만약 &lt;code&gt;Width&lt;/code&gt; 두 번 이상 메시지가 발생, 마지막 값은 이전의 모든 항목을 오버라이드 (override)</target>
        </trans-unit>
        <trans-unit id="c18b5decb40c51cfed52abf66cbdc2d7b99ae4e9" translate="yes" xml:space="preserve">
          <source>If the device is large enough that it's not marked with &amp;ldquo;Mobi&amp;rdquo;, you should serve your desktop site (which, as a best practice, should support touch input anyway, as more desktop machines are appearing with touchscreens).</source>
          <target state="translated">장치가 &quot;Mobi&quot;로 표시되지 않을 정도로 충분히 큰 경우 데스크톱 사이트를 제공해야합니다 (터치 스크린으로 더 많은 데스크톱 컴퓨터가 표시되므로 가장 좋은 방법은 터치 입력을 지원해야 함).</target>
        </trans-unit>
        <trans-unit id="0bbaf264d9f0d932c54c0e04e65ebace7f115760" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="translated">해시가 일치하지 않으면 문서가 중간에 편집되었으며 &lt;a href=&quot;../status/412&quot;&gt; &lt;code&gt;412&lt;/code&gt; &lt;/a&gt; &lt;code&gt; Precondition Failed&lt;/code&gt; 오류가 발생 했음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="277939955257bc43f4243fef87536e0654d15a25" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="translated">해시가 일치하지 않으면 문서가 중간에 편집되었으며 &lt;a href=&quot;../status/412&quot;&gt; &lt;code&gt;412&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Precondition Failed&lt;/code&gt; 오류가 발생 했음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="3fd651b3de41c4c0939b139c2bcd1ec691c3efd5" translate="yes" xml:space="preserve">
          <source>If the hashes don't match, it means that the document has been edited in-between and a &lt;a href=&quot;412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Precondition Failed&lt;/code&gt; error is thrown.</source>
          <target state="translated">해시가 일치하지 않으면 문서가 중간에 편집되었으며 &lt;a href=&quot;412&quot;&gt; &lt;code&gt;412&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Precondition Failed&lt;/code&gt; 오류가 발생 했음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="3bde6b2f02854c6b43c647e825f2d4a1429eb84b" translate="yes" xml:space="preserve">
          <source>If the request is being issued using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, make sure you're not setting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;&lt;code&gt;withCredentials&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를&lt;/a&gt; 사용하여 요청이 발행되는 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt; &lt;code&gt;withCredentials&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하지 않았는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f1a69e15b2780621067297dd234a0594b2b2ffc" translate="yes" xml:space="preserve">
          <source>If the requested method isn't supported, the server will respond with an error.</source>
          <target state="translated">요청 된 메소드가 지원되지 않으면 서버는 오류로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="bd63754e6e7fd0ed5e66293b22c5760094fd4fcf" translate="yes" xml:space="preserve">
          <source>If the resource at a given URL changes, a new &lt;code&gt;Etag&lt;/code&gt; value &lt;em&gt;must&lt;/em&gt; be generated. A comparison of them can determine whether two representations of a resource are the same. Etags are therefore similar to fingerprints, and might also be used for tracking purposes by some servers. They might also be set to persist indefinitely by a tracking server.</source>
          <target state="translated">주어진 URL의 리소스가 변경되면 새 &lt;code&gt;Etag&lt;/code&gt; 값 &lt;em&gt;을&lt;/em&gt; 생성 &lt;em&gt;해야&lt;/em&gt; 합니다. 이들을 비교하면 자원의 두 표현이 동일한 지 여부를 판별 할 수 있습니다. 따라서 Etag는 지문과 유사하며 일부 서버에서 추적 목적으로도 사용될 수 있습니다. 추적 서버에서 무기한 유지하도록 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e618a8054c6dfe27daf59e1f19b56a3219ec450e" translate="yes" xml:space="preserve">
          <source>If the resource at a given URL changes, a new &lt;code&gt;Etag&lt;/code&gt; value must be generated. Etags are therefore similar to fingerprints and might also be used for tracking purposes by some servers. A comparison of them allows to quickly determine whether two representations of a resource are the same, but they might also be set to persist indefinitely by a tracking server.</source>
          <target state="translated">지정된 URL의 리소스가 변경되면 새로운 &lt;code&gt;Etag&lt;/code&gt; 값을 생성해야합니다. 따라서 전자 태그는 지문과 유사하며 일부 서버에서 추적 목적으로 사용될 수도 있습니다. 이들을 비교하면 리소스의 두 표현이 동일한 지 여부를 신속하게 확인할 수 있지만 추적 서버에 의해 무기한 지속되도록 설정 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6df0a809ea7c0e16c3b4c1d61decdfe31ac868f4" translate="yes" xml:space="preserve">
          <source>If the resource has changed, the server just sends back a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt; OK&lt;/code&gt; response, with the new version of the resource, like if the request wasn't conditional and the client uses this new resource (and caches it).</source>
          <target state="translated">리소스가 변경된 경우, 서버 는 요청이 조건이없고 클라이언트가이 새 리소스를 사용하고 캐시하는 경우와 같이 새 버전의 리소스와 함께 &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt; OK&lt;/code&gt; 응답을 다시 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="28dabd823abd95eebd0c73b38250e390477657ad" translate="yes" xml:space="preserve">
          <source>If the resource has not changed, the server sends back a &lt;a href=&quot;status/304&quot;&gt;&lt;code&gt;304&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Not Modified&lt;/code&gt; response. This makes the cache fresh again, and the client uses the cached resource. Although there is a response/request round-trip that consumes some resources, this is more efficient than to transmit the whole resource over the wire again.</source>
          <target state="translated">자원이 변경되지 않은 경우 서버는 &lt;a href=&quot;status/304&quot;&gt; &lt;code&gt;304&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Not Modified&lt;/code&gt; 응답을 다시 보냅니다 . 이렇게하면 캐시가 다시 최신 상태가되고 클라이언트는 캐시 된 리소스를 사용합니다. 일부 리소스를 사용하는 응답 / 요청 왕복이 있지만 전체 리소스를 다시 전송하는 것보다 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="96d3b1fd891c66341051bdd2445935c9e27b47b5" translate="yes" xml:space="preserve">
          <source>If the resource in question is meant to be widely accessed (just like any HTTP resource accessed by GET), then sending back the &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: *&lt;/code&gt; header will be sufficient, &lt;strong&gt;unless&lt;/strong&gt; the resource needs credentials such as &lt;a href=&quot;cookies&quot;&gt;Cookies&lt;/a&gt; and HTTP Authentication information.</source>
          <target state="translated">문제의 리소스가 GET에 의해 액세스 된 HTTP 리소스와 같이 널리 액세스되도록 의도 된 경우 리소스에 &lt;a href=&quot;cookies&quot;&gt;쿠키&lt;/a&gt; 및 HTTP 와 같은 자격 증명이 필요 &lt;strong&gt;하지 않은 경우 &lt;/strong&gt;&lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: *&lt;/code&gt; 헤더를 다시 보내는 것으로 충분합니다. 인증 정보.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5afbe977f3fe9a82606049c55808c60ca15cfb67" translate="yes" xml:space="preserve">
          <source>If the resource should be kept restricted based on requester domain, &lt;strong&gt;OR&lt;/strong&gt; if the resource needs to be accessed with credentials (or sets credentials), then filtering by the request's &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header may be necessary, or at least echoing back the requester's &lt;code&gt;Origin&lt;/code&gt; (e.g. &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: &lt;a href=&quot;http://arunranga.com&quot;&gt;http://arunranga.com&lt;/a&gt;&lt;/code&gt;). Additionally, the &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; header will have to be sent. This is discussed in a &lt;a href=&quot;#Credentialed_Requests&quot;&gt;subsequent section&lt;/a&gt;.</source>
          <target state="translated">자원이 보관 제한 요청 도메인을 기반으로해야하는 경우, &lt;strong&gt;또는&lt;/strong&gt; 자원 요구가 자격 증명 (또는 세트 자격 증명)에 액세스 할 경우, 그 요청의 의해 필터링 &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 필요가있다 헤더, 또는 적어도 다시 요청자의 메아리 &lt;code&gt;Origin&lt;/code&gt; (예 : &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: &lt;a href=&quot;http://arunranga.com&quot;&gt;http://arunranga.com&lt;/a&gt;&lt;/code&gt; ). 또한 &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; 헤더를 보내야합니다. 이에 대해서는 &lt;a href=&quot;#Credentialed_Requests&quot;&gt;다음 섹션&lt;/a&gt; 에서 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="9c8e2ffc70a619ab233773bc1539c19cb10a2bc1" translate="yes" xml:space="preserve">
          <source>If the response to a &lt;code&gt;HEAD&lt;/code&gt; request shows that a cached URL response is now outdated, the cached copy is invalidated even if no &lt;code&gt;GET&lt;/code&gt; request was made.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; 요청에 대한 응답에 캐시 된 URL 응답이 현재 만료되었다고 표시되면 &lt;code&gt;GET&lt;/code&gt; 요청이 생성 되지 않은 경우에도 캐시 된 복사본이 무효화됩니다 .</target>
        </trans-unit>
        <trans-unit id="85a622ab8c535a47b0b491a95d39cc072896a324" translate="yes" xml:space="preserve">
          <source>If the result of a &lt;code&gt;HEAD&lt;/code&gt; request shows that a cached resource after a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; request is now outdated, the cache is invalidated, even if no &lt;code&gt;GET&lt;/code&gt; request has been made.</source>
          <target state="translated">&lt;code&gt;HEAD&lt;/code&gt; 요청 결과에 &lt;a href=&quot;get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; 요청 이후 캐시 된 자원 이 이제 오래 되었다고 표시 되면 &lt;code&gt;GET&lt;/code&gt; 요청이 수행 되지 않은 경우에도 캐시가 무효화 됩니다.</target>
        </trans-unit>
        <trans-unit id="8883378b1d0c73e1288f1ade4a8139bb08b162fd" translate="yes" xml:space="preserve">
          <source>If the selection of the best representation for a response is made by
   an algorithm located at the server, it is called server-driven
   negotiation. Selection is based on the available representations of
   the response (the dimensions over which it can vary; e.g. language,
   content-coding, etc.) and the contents of particular header fields in
   the request message or on other information pertaining to the request
   (such as the network address of the client).

   Server-driven negotiation is advantageous when the algorithm for
   selecting from among the available representations is difficult to
   describe to the user agent, or when the server desires to send its
   &quot;best guess&quot; to the client along with the first response (hoping to
   avoid the round-trip delay of a subsequent request if the &quot;best
   guess&quot; is good enough for the user). In order to improve the server's
   guess, the user agent MAY include request header fields (Accept,
   Accept-Language, Accept-Encoding, etc.) which describe its
   preferences for such a response.

   Server-driven negotiation has disadvantages:

      1. It is impossible for the server to accurately determine what
         might be &quot;best&quot; for any given user, since that would require
         complete knowledge of both the capabilities of the user agent
         and the intended use for the response (e.g., does the user want
         to view it on screen or print it on paper?).

      2. Having the user agent describe its capabilities in every
         request can be both very inefficient (given that only a small
         percentage of responses have multiple representations) and a
         potential violation of the user's privacy.

      3. It complicates the implementation of an origin server and the
         algorithms for generating responses to a request. 

      4. It may limit a public cache's ability to use the same response
         for multiple user's requests.

   HTTP/1.1 includes the following request-header fields for enabling
   server-driven negotiation through description of user agent
   capabilities and user preferences: Accept (&lt;a href=&quot;#section-14.1&quot;&gt;section 14.1&lt;/a&gt;), Accept-
   Charset (&lt;a href=&quot;#section-14.2&quot;&gt;section 14.2&lt;/a&gt;), Accept-Encoding (&lt;a href=&quot;#section-14.3&quot;&gt;section 14.3&lt;/a&gt;), Accept-
   Language (&lt;a href=&quot;#section-14.4&quot;&gt;section 14.4&lt;/a&gt;), and User-Agent (&lt;a href=&quot;#section-14.43&quot;&gt;section 14.43&lt;/a&gt;). However, an
   origin server is not limited to these dimensions and MAY vary the
   response based on any aspect of the request, including information
   outside the request-header fields or within extension header fields
   not defined by this specification.

   The Vary  header field can be used to express the parameters the
   server uses to select a representation that is subject to server-
   driven negotiation. See &lt;a href=&quot;#section-13.6&quot;&gt;section 13.6&lt;/a&gt; for use of the Vary header field
   by caches and &lt;a href=&quot;#section-14.44&quot;&gt;section 14.44&lt;/a&gt; for use of the Vary header field by
   servers.</source>
          <target state="translated">응답에 대한 최상의 표현 선택이 서버에있는 알고리즘에 의해 수행되는 경우이를 서버 중심 협상이라고합니다. 선택은 응답의 사용 가능한 표현 (예 : 언어, 컨텐츠 코딩 등의 다양한 차원) 및 요청 메시지의 특정 헤더 필드 내용 또는 요청과 관련된 기타 정보 (예 : 클라이언트의 네트워크 주소로). 사용 가능한 표현 중에서 선택하기위한 알고리즘이 사용자 에이전트에 설명하기 어렵거나 서버가 첫 번째 응답과 함께 &quot;최상의 추측&quot;을 클라이언트에 보내려고 할 때 서버 중심 협상이 유리합니다. &quot;최상의 추측&quot;인 경우 후속 요청의 왕복 지연사용자에게 충분합니다). 서버의 추측을 향상시키기 위해, 사용자 에이전트는 그러한 응답에 대한 선호도를 기술하는 요청 헤더 필드 (Accept, Accept-Language, Accept-Encoding 등)를 포함 할 수있다. 서버 중심 협상에는 다음과 같은 단점이 있습니다. 1. 사용자 에이전트의 기능과 응답의 의도 된 사용에 대한 완전한 지식이 필요하기 때문에 서버가 특정 사용자에게 &quot;최상의&quot;항목을 정확하게 결정하는 것은 불가능합니다. (예 : 사용자가 화면에서 보거나 종이에 인쇄하겠습니까?). 2.사용자 에이전트가 모든 요청에서 해당 기능을 설명하도록하는 것은 매우 비효율적 일 수 있으며 (소수의 응답 만 여러 표현으로 표시됨) 사용자의 개인 정보를 침해 할 가능성이 있습니다. 3. 원 서버의 구현과 요청에 대한 응답을 생성하는 알고리즘을 복잡하게 만듭니다. 4. 여러 사용자의 요청에 대해 동일한 응답을 사용하는 공개 캐시 기능을 제한 할 수 있습니다. HTTP / 1.1에는 사용자 에이전트 기능 및 사용자 환경 설정에 대한 설명을 통해 서버 중심 협상을 가능하게하는 다음 요청 헤더 필드가 포함되어 있습니다. 수락 (4. 여러 사용자의 요청에 대해 동일한 응답을 사용하는 공개 캐시 기능을 제한 할 수 있습니다. HTTP / 1.1에는 사용자 에이전트 기능 및 사용자 환경 설정에 대한 설명을 통해 서버 중심 협상을 가능하게하는 다음 요청 헤더 필드가 포함되어 있습니다. 수락 (4. 여러 사용자의 요청에 대해 동일한 응답을 사용하는 공개 캐시 기능을 제한 할 수 있습니다. HTTP / 1.1에는 사용자 에이전트 기능 및 사용자 환경 설정에 대한 설명을 통해 서버 중심 협상을 가능하게하는 다음 요청 헤더 필드가 포함되어 있습니다. 수락 (&lt;a href=&quot;#section-14.1&quot;&gt;섹션 14.1&lt;/a&gt; ), 수락- 문자셋 ( &lt;a href=&quot;#section-14.2&quot;&gt;섹션 14.2&lt;/a&gt; ), 수락-인코딩 ( &lt;a href=&quot;#section-14.3&quot;&gt;섹션 14.3&lt;/a&gt; ), 수락- 언어 ( &lt;a href=&quot;#section-14.4&quot;&gt;섹션 14.4&lt;/a&gt; ) 및 사용자 에이전트 ( &lt;a href=&quot;#section-14.43&quot;&gt;섹션 14.43&lt;/a&gt; ). 그러나 오리진 서버는 이러한 차원으로 제한되지 않으며 요청 헤더 필드 외부 또는이 사양에서 정의하지 않은 확장 헤더 필드 내의 정보를 포함하여 요청의 모든 측면에 따라 응답을 변경할 수 있습니다. Vary 헤더 필드는 서버가 서버 기반 협상의 대상이되는 표현을 선택하기 위해 서버가 사용하는 매개 변수를 표현하는 데 사용할 수 있습니다. 캐시에 의한 Vary 헤더 필드 사용 및 &lt;a href=&quot;#section-14.44&quot;&gt;섹션 14.44&lt;/a&gt; 는 &lt;a href=&quot;#section-13.6&quot;&gt;섹션 13.6&lt;/a&gt; 을 참조하십시오. 서버에서 Vary 헤더 필드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a97009ed5a171d3f2d00627248f02de9b1bd4edb" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does not&lt;/em&gt; support TLS upgrade, or is unable to upgrade to TLS at the time, it responds with a standard HTTP/1.1 response, such as:</source>
          <target state="translated">서버 &lt;em&gt;가&lt;/em&gt; TLS 업그레이드를 지원 &lt;em&gt;하지 않거나&lt;/em&gt; 당시 TLS로 업그레이드 할 수없는 경우 다음과 같은 표준 HTTP / 1.1 응답으로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="2c4956e2baa89a364f68e36f2540d46e391032b0" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does&lt;/em&gt; recognize the method, but intentionally does not support it, the appropriate response is &lt;a href=&quot;405&quot;&gt;&lt;code&gt;405 Method Not Allowed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">서버 &lt;em&gt;가&lt;/em&gt; 방법을 인식하지만 의도적으로 지원하지 않는 경우 적절한 응답은 &lt;a href=&quot;405&quot;&gt; &lt;code&gt;405 Method Not Allowed&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5b4ec0bc4d37ddaf3aac7f70b029b83445ca56f2" translate="yes" xml:space="preserve">
          <source>If the server &lt;em&gt;does&lt;/em&gt; support TLS upgrade and wishes to permit the upgrade, it responds with the &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; response code, like this:</source>
          <target state="translated">서버 &lt;em&gt;가&lt;/em&gt; TLS 업그레이드를 지원하고 업그레이드를 허용하려는 경우 다음 과 같이 &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; 응답 코드로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="a57f9acb3600d5372bf47b96b972a2c0b7a106b1" translate="yes" xml:space="preserve">
          <source>If the server allows CORS requests to use the &lt;a href=&quot;../methods/delete&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; method, it responds with an &lt;a href=&quot;access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt; response header, which lists &lt;code&gt;DELETE&lt;/code&gt; along with the other methods it supports:</source>
          <target state="translated">서버가 CORS 요청이 &lt;a href=&quot;../methods/delete&quot;&gt; &lt;code&gt;DELETE&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하도록 &lt;a href=&quot;access-control-allow-methods&quot;&gt; &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; &lt;/a&gt; 하는 경우 &lt;code&gt;DELETE&lt;/code&gt; 가 지원하는 다른 메소드와 함께 DELETE 를 나열 하는 Access-Control-Allow-Methods 응답 헤더로 응답 합니다.</target>
        </trans-unit>
        <trans-unit id="be2369485a151abd59881e4ba1cc5463e20c789a" translate="yes" xml:space="preserve">
          <source>If the server can't communicate using the specified version of the WebSocket protocol, it will respond with an error (such as 426 Upgrade Required) that includes in its headers a &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; header with a comma-separated list of the supported protocol versions. If the server does support the requested protocol version, no &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; header is included in the response.</source>
          <target state="translated">서버가 지정된 버전의 WebSocket 프로토콜을 사용하여 통신 할 수없는 경우 쉼표로 구분 된 지원되는 목록 이 포함 된 &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; 헤더를 헤더에 포함하는 오류 (예 : 426 업그레이드 필요)로 응답 합니다. 프로토콜 버전. 서버가 요청한 프로토콜 버전을 지원하는 경우 &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; 헤더가 응답에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8bfc654fb667ab7a47e06dc70b7def2a7620c972" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any character encoding from this request header, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406 Not Acceptable&lt;/code&gt;&lt;/a&gt; error code. But for a better user experience, this is rarely done and the &lt;code&gt;Accept-Charset&lt;/code&gt; header is ignored.</source>
          <target state="translated">서버가이 요청 헤더에서 문자 인코딩을 제공 할 수없는 경우 이론적으로 &lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406 Not Acceptable&lt;/code&gt; &lt;/a&gt; 오류 코드를 다시 보낼 수 있습니다 . 그러나 더 나은 사용자 경험을 위해 이것은 거의 수행되지 않으며 &lt;code&gt;Accept-Charset&lt;/code&gt; 헤더가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae753ebfa7e739c1ebf4391f5ee391f4e94ee3ce" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any matching character set, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) error code. But, for a better user experience, this is rarely done and the more common way is to ignore the &lt;code&gt;Accept-Charset&lt;/code&gt; header in this case.</source>
          <target state="translated">서버가 일치하는 문자 세트를 제공 할 수없는 경우 이론적으로 &lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (Not Acceptable) 오류 코드를 다시 보낼 수 있습니다 . 그러나 더 나은 사용자 환경을 위해이 작업은 거의 수행되지 &lt;code&gt;Accept-Charset&lt;/code&gt; 경우 Accept-Charset 헤더 를 무시하는 것이 더 일반적인 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="d8ca646db299a164f8eaec324da4187a3dc7c934" translate="yes" xml:space="preserve">
          <source>If the server cannot serve any matching language, it can theoretically send back a &lt;a href=&quot;../status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) error code. But, for a better user experience, this is rarely done and more common way is to ignore the &lt;code&gt;Accept-Language&lt;/code&gt; header in this case.</source>
          <target state="translated">서버가 일치하는 언어를 제공 할 수없는 경우 이론적으로 &lt;a href=&quot;../status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (Not Acceptable) 오류 코드를 다시 보낼 수 있습니다 . 그러나 더 나은 사용자 환경을 위해이 작업은 거의 수행되지 않으며이 경우 &lt;code&gt;Accept-Language&lt;/code&gt; 헤더 를 무시하는 것이 더 일반적인 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="6bdcb29bf81310454b85262c7363f76b72c53d49" translate="yes" xml:space="preserve">
          <source>If the server decides to upgrade the connection, it must:</source>
          <target state="translated">서버가 연결을 업그레이드하기로 결정한 경우 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5785d405909bd735e16eff8d00e42ade5e8499d9" translate="yes" xml:space="preserve">
          <source>If the server decides to upgrade the connection, it sends back a &lt;a href=&quot;status/101&quot;&gt;&lt;code&gt;101 Switching Protocols&lt;/code&gt;&lt;/a&gt; response status with an Upgrade header that specifies the protocol(s) being switched to. If it does not (or cannot) upgrade the connection, it ignores the &lt;code&gt;Upgrade&lt;/code&gt; header and sends back a regular response (for example, a &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200 OK&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">서버가 연결을 업그레이드하기로 결정하면 &lt;a href=&quot;status/101&quot;&gt; &lt;code&gt;101 Switching Protocols&lt;/code&gt; &lt;/a&gt; 을 지정하는 Upgrade 헤더와 함께 101 Switching Protocols 응답 상태를 다시 보냅니다 . 연결을 업그레이드하지 않거나 업그레이드 할 수없는 경우 &lt;code&gt;Upgrade&lt;/code&gt; 헤더를 무시하고 일반 응답 (예 : &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200 OK&lt;/code&gt; &lt;/a&gt; )을 다시 보냅니다. )을 .</target>
        </trans-unit>
        <trans-unit id="4d3214eaff9a427b272921bccd27c1fd179422db" translate="yes" xml:space="preserve">
          <source>If the server has a preferred choice, it should generate a &lt;a href=&quot;../headers/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">서버가 원하는 것을 선택하면 &lt;a href=&quot;../headers/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; 헤더를 생성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e05c84402fda441286aba0b966f3789dbf6191c3" translate="yes" xml:space="preserve">
          <source>If the server is unable to switch to HTTP/2 for any reason, it will reply with a standard HTTP/1 reply after handling the request as normal. So if the request was to fetch a web page which does in fact exist, you would get a standard &lt;code&gt;&quot;HTTP/1.1 200 OK&quot;&lt;/code&gt; response with the web page following the remainder of the header. If the server is able to switch to HTTP/2, a &quot;&lt;code&gt;HTTP/1.1 101 Switching Protocols&quot;&lt;/code&gt; response is sent, which will look like this:</source>
          <target state="translated">어떤 이유로 든 서버가 HTTP / 2로 전환 할 수없는 경우 요청을 정상적으로 처리 한 후 표준 HTTP / 1 응답으로 응답합니다. 따라서 요청이 실제로 존재하는 웹 페이지를 가져 오려면 나머지 헤더 다음에 웹 페이지에 대한 표준 &lt;code&gt;&quot;HTTP/1.1 200 OK&quot;&lt;/code&gt; 응답이 표시됩니다. 서버가 HTTP / 2로 전환 할 수있는 경우 &quot; &lt;code&gt;HTTP/1.1 101 Switching Protocols&quot;&lt;/code&gt; 응답이 전송되며 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b5c0cece345dde55b15ad1ad49b64cab5f6ed8d2" translate="yes" xml:space="preserve">
          <source>If the server is under your control, add the origin of the requesting site to the set of domains permitted access by adding it to the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header's value.</source>
          <target state="translated">서버가 제어 할 수있는 경우 요청 사이트의 원점을 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 헤더 값 에 추가하여 액세스가 허용 된 도메인 세트에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="62963ebedd2ff72d3bb4b415143d2ac0443881d2" translate="yes" xml:space="preserve">
          <source>If the server sends a response with an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; value that is an explicit origin (rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard), then the response should also include a &lt;a href=&quot;vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header with the value &lt;code&gt;Origin&lt;/code&gt; &amp;mdash; to indicate to browsers that server responses can differ based on the value of the &lt;code&gt;Origin&lt;/code&gt; request header.</source>
          <target state="translated">서버가있는 응답을 보내는 경우 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (오히려 &quot;보다 명시 적 기원 값 &lt;code&gt;*&lt;/code&gt; &quot;와일드 카드), 다음 응답도 포함해야 &lt;a href=&quot;vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; 값과 응답 헤더 &lt;code&gt;Origin&lt;/code&gt; - 브라우저에 표시하기 서버 응답은 &lt;code&gt;Origin&lt;/code&gt; 요청 헤더 의 값에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40ae9d31a1c63c02ebcd60debd2f8b97d5dd7ac9" translate="yes" xml:space="preserve">
          <source>If the server specifies a single origin (that may dynamically change based on the requesting origin as part of a white-list) rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, then the server should also include &lt;code&gt;Origin&lt;/code&gt; in the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header &amp;mdash; to indicate to clients that server responses will differ based on the value of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header.</source>
          <target state="translated">서버가 &quot; &lt;code&gt;*&lt;/code&gt; &quot;와일드 카드가 아닌 단일 출처 (요청 출처에 따라 화이트리스트의 일부로 동적으로 변경 될 수 있음)를 지정하는 경우 서버는 &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; 응답 헤더 에도 &lt;code&gt;Origin&lt;/code&gt; 을 포함 하여 클라이언트에 표시해야합니다. 서버 응답은 &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 요청 헤더 의 값에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="035b5ed82a9b1755b686239ae88f8e1ef4f77e51" translate="yes" xml:space="preserve">
          <source>If the server specifies a single origin rather than the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, then the server should also include &lt;code&gt;Origin&lt;/code&gt; in the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; response header &amp;mdash; to indicate to clients that server responses will differ based on the value of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header.</source>
          <target state="translated">서버가 &quot; &lt;code&gt;*&lt;/code&gt; &quot;와일드 카드가 아닌 단일 오리진을 지정하는 경우 서버는 서버 응답이 &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 요청 헤더 의 값에 따라 다르다는 것을 클라이언트에게 알리기 위해 &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; 응답 헤더에 &lt;code&gt;Origin&lt;/code&gt; 을 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bdd4b87fdc6a81c461da6befd7c1928bb2e1a6e5" translate="yes" xml:space="preserve">
          <source>If the server supports range requests, you can issue such a request by using the &lt;a href=&quot;headers/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; header. It indicates the part(s) of a document that the server should return.</source>
          <target state="translated">서버가 범위 요청을 지원하는 경우 &lt;a href=&quot;headers/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 헤더 를 사용하여 이러한 요청을 발행 할 수 있습니다 . 서버가 반환해야하는 문서의 일부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6199750daad48ff639691648a086a49c0a3fd0a7" translate="yes" xml:space="preserve">
          <source>If the server wishes a faster Web site or application response, it is possible for the server to force the opening of more connections. For example, Instead of having all resources on the same domain, say &lt;code&gt;www.example.com&lt;/code&gt;, it could split over several domains, &lt;code&gt;www1.example.com&lt;/code&gt;, &lt;code&gt;www2.example.com&lt;/code&gt;, &lt;code&gt;www3.example.com&lt;/code&gt;. Each of these domains resolve to the &lt;em&gt;same&lt;/em&gt; server, and the Web browser will open 6 connections to each (in our example, boosting the connections to 18). This technique is called &lt;em&gt;domain sharding&lt;/em&gt;.</source>
          <target state="translated">서버가 더 빠른 웹 사이트 또는 응용 프로그램 응답을 원하는 경우 서버가 더 많은 연결을 강제로 열 수 있습니다. 예를 들어, 대신 같은 도메인에 모든 자원을 필요없이 말할 &lt;code&gt;www.example.com&lt;/code&gt; 가 여러 도메인에 걸쳐 분할 수 &lt;code&gt;www1.example.com&lt;/code&gt; , &lt;code&gt;www2.example.com&lt;/code&gt; , &lt;code&gt;www3.example.com&lt;/code&gt; 을 . 이러한 각 도메인은 &lt;em&gt;동일한&lt;/em&gt; 서버로 확인되며 웹 브라우저는 각각 6 개의 연결을 엽니 다 (이 예에서는 연결을 18로 증가). 이 기술을 &lt;em&gt;도메인 샤딩&lt;/em&gt; 이라고 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="633be8e65041e6f678ba0a69d47e73981a12258e" translate="yes" xml:space="preserve">
          <source>If the service your code is accessing using a CORS request is under your control, make sure that it's configured to include your origin in its &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header, and that only one such header is included in responses. The header itself accepts a comma-delineated list of origins, so adding a new origin is not difficult.</source>
          <target state="translated">CORS 요청을 사용하여 코드가 액세스하는 서비스가 제어 할 경우, &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 헤더에 오리진 을 포함하도록 구성되어 있고 해당 헤더 중 하나만 응답에 포함되어 있는지 확인하십시오 . 헤더 자체는 쉼표로 구분 된 원점 목록을 허용하므로 새 원점을 추가하는 것은 어렵지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5f87d2c5913a57c8787a092105a04dbd9842ee7" translate="yes" xml:space="preserve">
          <source>If the string is null, no proxies should be used</source>
          <target state="translated">문자열이 null이면 프록시를 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="ee70fc1642248dcddd5b4e8e2c3aa5e1fa8b3482" translate="yes" xml:space="preserve">
          <source>If the target resource does have a current representation and that representation is successfully modified in accordance with the state of the enclosed representation, then the origin server must send either a &lt;a href=&quot;../status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;OK&lt;/code&gt;) or a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;No Content&lt;/code&gt;) response to indicate successful completion of the request.</source>
          <target state="translated">대상 자원에 현재 표현이 있고 해당 표현이 동봉 된 표현의 상태에 따라 성공적으로 수정 된 경우, 오리진 서버 는 성공적인 완료를 표시하기 위해 &lt;a href=&quot;../status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;OK&lt;/code&gt; ) 또는 &lt;a href=&quot;../status/204&quot;&gt; &lt;code&gt;204&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;No Content&lt;/code&gt; ) 응답을 보내야합니다. 요청.</target>
        </trans-unit>
        <trans-unit id="2e56a40e542286dd3f5f24ab9d9b357b4b9363fa" translate="yes" xml:space="preserve">
          <source>If the target resource does not have a current representation and the &lt;code&gt;PUT&lt;/code&gt; request successfully creates one, then the origin server must inform the user agent by sending a &lt;a href=&quot;../status/201&quot;&gt;&lt;code&gt;201&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;Created&lt;/code&gt;) response.</source>
          <target state="translated">대상 자원에 현재 표시가없고 &lt;code&gt;PUT&lt;/code&gt; 요청이 성공적으로 작성하면, 원 서버는 &lt;a href=&quot;../status/201&quot;&gt; &lt;code&gt;201&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;Created&lt;/code&gt; ) 응답 을 보내 사용자 에이전트에 알려야합니다 .</target>
        </trans-unit>
        <trans-unit id="a21b80ceb96b8a7d43dede98629becf487c2e6a3" translate="yes" xml:space="preserve">
          <source>If the upgrade to TLS succeeds, the server will respond with &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; as described in the previous section. If the upgrade fails, the HTTP/1.1 connection will fail.</source>
          <target state="translated">TLS 로의 업그레이드가 성공하면 서버는 이전 섹션에서 설명한대로 &lt;code&gt;&quot;101 Switching Protocols&quot;&lt;/code&gt; 로 응답 합니다. 업그레이드가 실패하면 HTTP / 1.1 연결이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="27db56e6fbfb8552acb661ab2ec13d5567a5150c" translate="yes" xml:space="preserve">
          <source>If there are hosts (such as the main Web server) that belong to the local domain but are outside the firewall and are only reachable through the proxy server, those exceptions can be handled using the &lt;code&gt;localHostOrDomainIs()&lt;/code&gt; function:</source>
          <target state="translated">로컬 도메인에 속하지만 방화벽 외부에 있고 프록시 서버를 통해서만 도달 할 수있는 호스트 (예 : 기본 웹 서버)가있는 경우 &lt;code&gt;localHostOrDomainIs()&lt;/code&gt; 함수를 사용하여 예외를 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="d24ef4f84cb249bfa31f9902d7ae003a91952701" translate="yes" xml:space="preserve">
          <source>If there are multiple semicolon-separated settings, the left-most setting will be used, until Firefox fails to establish the connection to the proxy. In that case, the next value will be used, etc.</source>
          <target state="translated">세미콜론으로 구분 된 설정이 여러 개인 경우 Firefox가 프록시에 연결하지 못할 때까지 가장 왼쪽에있는 설정이 사용됩니다. 이 경우 다음 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d35d9172db4121106bcca6f82d93219ec641178d" translate="yes" xml:space="preserve">
          <source>If there are other directives specified, &lt;code&gt;default-src&lt;/code&gt; does not influence them. The following header</source>
          <target state="translated">다른 지시어가 지정되어 있으면 &lt;code&gt;default-src&lt;/code&gt; 는 영향을 미치지 않습니다. 다음 헤더</target>
        </trans-unit>
        <trans-unit id="f3a3fb9e88e16c02dae3ebc873862c5294ca1f14" translate="yes" xml:space="preserve">
          <source>If there are other directives specified, &lt;code&gt;default-src&lt;/code&gt; does not influence them. The following header:</source>
          <target state="translated">다른 지시문이 지정되어 있으면 &lt;code&gt;default-src&lt;/code&gt; 가 영향을주지 않습니다. 다음 헤더 :</target>
        </trans-unit>
        <trans-unit id="b6ef483d4374adee5323181a48fbe2db2ede05c8" translate="yes" xml:space="preserve">
          <source>If there is a &lt;a href=&quot;cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header with the &quot;max-age&quot; or &quot;s-maxage&quot; directive in the response, the &lt;code&gt;Expires&lt;/code&gt; header is ignored.</source>
          <target state="translated">응답에 &quot;max-age&quot;또는 &quot;s-maxage&quot;지시문 이있는 &lt;a href=&quot;cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt; 헤더 가 있으면 &lt;code&gt;Expires&lt;/code&gt; 헤더가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3dc7a417b9985cacb686b59815968d89411858de" translate="yes" xml:space="preserve">
          <source>If there is a &lt;a href=&quot;cache-control&quot;&gt;&lt;code&gt;Cache-Control&lt;/code&gt;&lt;/a&gt; header with the &lt;code&gt;max-age&lt;/code&gt; or &lt;code&gt;s-maxage&lt;/code&gt; directive in the response, the &lt;code&gt;Expires&lt;/code&gt; header is ignored.</source>
          <target state="translated">응답에 &lt;code&gt;max-age&lt;/code&gt; 또는 &lt;code&gt;s-maxage&lt;/code&gt; 지시문 이있는 &lt;a href=&quot;cache-control&quot;&gt; &lt;code&gt;Cache-Control&lt;/code&gt; &lt;/a&gt; 헤더가있는 경우 &lt;code&gt;Expires&lt;/code&gt; 헤더가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="872be7b4525857f39211419c11efc3edbf6a5a96" translate="yes" xml:space="preserve">
          <source>If there is only one range, the &lt;a href=&quot;../headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; of the whole response is set to the type of the document, and a &lt;a href=&quot;../headers/content-range&quot;&gt;&lt;code&gt;Content-Range&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">범위가 하나만있는 경우 전체 응답 의 &lt;a href=&quot;../headers/content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; 이 문서 유형으로 설정되고 &lt;a href=&quot;../headers/content-range&quot;&gt; &lt;code&gt;Content-Range&lt;/code&gt; &lt;/a&gt; 가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5b03947840333522631fcad82cab8f29beea0376" translate="yes" xml:space="preserve">
          <source>If this directive is absent, the user agent will first look for the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive, then the &lt;a href=&quot;script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive, then finally for the &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive, when governing worker execution.</source>
          <target state="translated">이 지시문이 없으면 사용자 에이전트는 먼저 작업자 실행을 관리 할 때 &lt;a href=&quot;child-src&quot;&gt; &lt;code&gt;child-src&lt;/code&gt; &lt;/a&gt; 지시문을 찾은 다음 &lt;a href=&quot;script-src&quot;&gt; &lt;code&gt;script-src&lt;/code&gt; &lt;/a&gt; 지시문을 찾은 다음 &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; 지시문을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="84255b47da2e8395f8cff0945ef69aa9944b73b4" translate="yes" xml:space="preserve">
          <source>If this directive is absent, the user agent will look for the &lt;a href=&quot;child-src&quot;&gt;&lt;code&gt;child-src&lt;/code&gt;&lt;/a&gt; directive (which falls back to the &lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive).</source>
          <target state="translated">이 지시문이 없으면 사용자 에이전트는 &lt;a href=&quot;child-src&quot;&gt; &lt;code&gt;child-src&lt;/code&gt; &lt;/a&gt; 지시문 ( &lt;a href=&quot;default-src&quot;&gt; &lt;code&gt;default-src&lt;/code&gt; &lt;/a&gt; 지시문으로 폴백) 을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="905e23650e04dd97cd87c8f1b4781aae080cf34e" translate="yes" xml:space="preserve">
          <source>If this header is delivered with the response at https://example.com/clear-cookies, all cookies on the same domain https://example.com and any subdomains (like https://stage.example.com, etc), will be cleared out.</source>
          <target state="translated">이 헤더가 https://example.com/clear-cookies에서 응답과 함께 제공되는 경우 동일한 도메인 https://example.com 및 모든 하위 도메인 (예 : https://stage.example.com 등)의 모든 쿠키 )가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="84639588f8530b0b81f649bf1306849d6885af93" translate="yes" xml:space="preserve">
          <source>If this optional parameter is specified, pin validation failures are reported to the given URL.</source>
          <target state="translated">이 선택적 매개 변수를 지정하면 핀 유효성 검증 실패가 지정된 URL에보고됩니다.</target>
        </trans-unit>
        <trans-unit id="cf9ff6207f9f440fe5c66b863c0c644f87236017" translate="yes" xml:space="preserve">
          <source>If this optional parameter is specified, this rule applies to all of the site's subdomains as well.</source>
          <target state="translated">이 선택적 매개 변수를 지정하면이 규칙이 모든 사이트의 하위 도메인에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb2426a1d151abc1dd5f8cd6ca02a6b7b48d09c2" translate="yes" xml:space="preserve">
          <source>If true, the policy applies to all subdomains under the origin that the policy header is set. The reporting group should also be set to include subdomains, if this option is to be enabled.</source>
          <target state="translated">true 인 경우 정책 헤더가 설정된 원본 아래의 모든 하위 도메인에 정책이 적용됩니다. 이 옵션을 사용하려면보고 그룹도 하위 도메인을 포함하도록 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bbeccd91304096ae1ada0d103a494be1d6ecd504" translate="yes" xml:space="preserve">
          <source>If unspecified, the cookie becomes a &lt;strong&gt;session cookie&lt;/strong&gt;. A session finishes when the client shuts down, and session cookies will be removed.</source>
          <target state="translated">지정하지 않으면 쿠키가 &lt;strong&gt;세션 쿠키&lt;/strong&gt; 가됩니다.&lt;strong&gt;&lt;/strong&gt; 됩니다. 클라이언트가 종료되면 세션이 종료되고 세션 쿠키가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6baa688a2748366ccc3dde62ab07310d89508f6a" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;Server-sent events&lt;/a&gt;, make sure &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/withCredentials&quot;&gt;&lt;code&gt;EventSource.withCredentials&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt; (it's the default value).</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;Server-sent events를&lt;/a&gt; 사용하는 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource/withCredentials&quot;&gt; &lt;code&gt;EventSource.withCredentials&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;false&lt;/code&gt; 인지 확인하십시오 (기본값).</target>
        </trans-unit>
        <trans-unit id="bb9e740256ba82627b9a0ee6fa47dc9b15df8b15" translate="yes" xml:space="preserve">
          <source>If using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt;, make sure &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt;&lt;code&gt;Request.credentials&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;omit&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API를&lt;/a&gt; 사용하는 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials&quot;&gt; &lt;code&gt;Request.credentials&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;&quot;omit&quot;&lt;/code&gt; 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="da0002cfebb5073d0fedbf25422e03f2884be38b" translate="yes" xml:space="preserve">
          <source>If you are not disclosing third-party cookies, consumer trust might get harmed if cookie use is discovered. A clear disclosure (such as in a privacy policy) tends to eliminate any negative effects of a cookie discovery. Some countries also have legislation about cookies. See for example Wikimedia Foundation's &lt;a href=&quot;https://wikimediafoundation.org/wiki/Cookie_statement&quot;&gt;cookie statement&lt;/a&gt;.</source>
          <target state="translated">타사 쿠키를 공개하지 않으면 쿠키 사용이 발견되면 소비자 신뢰가 손상 될 수 있습니다. 개인 정보 보호 정책과 같은 명확한 공개는 쿠키 검색의 부정적인 영향을 제거하는 경향이 있습니다. 일부 국가에서는 쿠키에 관한 법률이 있습니다. 예를 들어 Wikimedia Foundation의 &lt;a href=&quot;https://wikimediafoundation.org/wiki/Cookie_statement&quot;&gt;쿠키 설명을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfae6e8214b89d3d41028b5ed5468c1096365497" translate="yes" xml:space="preserve">
          <source>If you are running a robotic user agent (e.g. a crawler), the &lt;code&gt;From&lt;/code&gt; header should be sent, so you can be contacted if problems occur on servers, such as if the robot is sending excessive, unwanted, or invalid requests.</source>
          <target state="translated">로봇 사용자 에이전트 (예 : 크롤러)를 실행중인 경우 &lt;code&gt;From&lt;/code&gt; 헤더를 보내야하므로 로봇이 과도한 요청, 원하지 않는 요청 또는 잘못된 요청을 보내는 경우와 같이 서버에서 문제가 발생하는 경우 연락 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a96db39060f5e3f83ad7fb3b0569b07c25f59e0" translate="yes" xml:space="preserve">
          <source>If you don't know whether this condition is temporary or permanent, a &lt;a href=&quot;404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt; status code should be used instead.</source>
          <target state="translated">이 조건이 일시적인지 영구적인지 모를 경우 대신 &lt;a href=&quot;404&quot;&gt; &lt;code&gt;404&lt;/code&gt; &lt;/a&gt; 상태 코드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b65a6981b33c89d11ed83bceadd2cf2695bfb77d" translate="yes" xml:space="preserve">
          <source>If you don't want a temporary redirect, an extra parameter (either the HTTP status code to use or the &lt;code&gt;permanent&lt;/code&gt; keyword) can be used to set up a different redirect:</source>
          <target state="translated">임시 리디렉션을 원하지 않는 경우 추가 매개 변수 (사용할 HTTP 상태 코드 또는 &lt;code&gt;permanent&lt;/code&gt; 키워드)를 사용하여 다른 리디렉션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="104043725295eb7cc9f3df2d7c830d6c1a7855ab" translate="yes" xml:space="preserve">
          <source>If you don't want to set up a temporary redirect, an extra parameter (either the HTTP status code to use or the &lt;code&gt;permanent&lt;/code&gt; keyword) can be used to set up a different redirect:</source>
          <target state="translated">임시 리디렉션을 설정하지 않으려면 추가 매개 변수 (사용할 HTTP 상태 코드 또는 &lt;code&gt;permanent&lt;/code&gt; 키워드)를 사용하여 다른 리디렉션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c9d45e2f476536f0d331642a282a111a65455ac" translate="yes" xml:space="preserve">
          <source>If you enable COEP using &lt;code&gt;require-corp&lt;/code&gt; and have a cross origin resource that needs to be loaded, it needs to support &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; and you need to explicitly mark the resource as loadable from another origin to avoid blockage from COEP. For example, you can use the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute for this image from a third-party site:</source>
          <target state="translated">&lt;code&gt;require-corp&lt;/code&gt; 를 사용하여 COEP를 활성화 하고로드해야하는 교차 원본 리소스가있는 경우 &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; 를 지원 해야하며 COEP에서 차단되지 않도록 리소스를 다른 원본에서로드 가능한 것으로 명시 적으로 표시해야합니다. 예를 들어 타사 사이트에서이 이미지에 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbff3207b07c23fc192059f1baabdc3df63a21a1" translate="yes" xml:space="preserve">
          <source>If you have access to the server you can change your implementation to echo back an origin in the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header. You cannot send back a list of origins, because browsers only accept a value that is either a single origin or null</source>
          <target state="translated">서버에 대한 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 있는 경우 Access-Control-Allow-Origin 헤더 의 원본을 에코 백하도록 구현을 변경할 수 있습니다 . 브라우저는 단일 출처 또는 null 값만 허용하므로 출처 목록을 다시 보낼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="29e7b5fc4c6d4409c9fc727d5416d3a635b2f290" translate="yes" xml:space="preserve">
          <source>If you need to create a WebSocket connection from scratch, you'll have to handle the handshaking process yourself. After creating the initial HTTP/1.1 session, you need to request the upgrade by adding to a standard request the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt;&lt;code&gt;Upgrade&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; headers, as follows:</source>
          <target state="translated">처음부터 WebSocket 연결을 만들어야하는 경우 핸드 셰이 킹 프로세스를 직접 처리해야합니다. 초기 HTTP / 1.1 세션을 작성한 후 다음과 같이 표준 요청에 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade&quot;&gt; &lt;code&gt;Upgrade&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 헤더 를 추가하여 업그레이드를 요청해야 합니다.</target>
        </trans-unit>
        <trans-unit id="95ee0117fd829b54190ed2ff0616a236aeb84cf5" translate="yes" xml:space="preserve">
          <source>If you receive a response that is not in this list, it is a non-standard response, possibly custom to the server's software.</source>
          <target state="translated">이 목록에없는 응답을 수신하면 비표준 응답이며 서버 소프트웨어에 대한 사용자 정의 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e8f0fd26b3474ef31bc91624748a9e6528cbeb2" translate="yes" xml:space="preserve">
          <source>If you set your site to require SRI for script and styles using this directive:</source>
          <target state="translated">이 지시문을 사용하여 스크립트 및 스타일에 SRI를 요구하도록 사이트를 설정 한 경우 :</target>
        </trans-unit>
        <trans-unit id="4990c5b1cf1cb465433d28094a3e92abdf6422d0" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;DENY&lt;/code&gt;, not only will attempts to load the page in a frame fail when loaded from other sites, attempts to do so will fail when loaded from the same site. On the other hand, if you specify &lt;code&gt;SAMEORIGIN&lt;/code&gt;, you can still use the page in a frame as long as the site including it in a frame is the same as the one serving the page.</source>
          <target state="translated">&lt;code&gt;DENY&lt;/code&gt; 를 지정 하면 프레임에서 페이지를로드하려는 시도가 다른 사이트에서로드 될 때 실패 할뿐만 아니라 동일한 사이트에서로드 될 때 실패합니다. 반면 &lt;code&gt;SAMEORIGIN&lt;/code&gt; 을 지정 하면 하면 프레임에 포함 된 사이트가 페이지를 제공하는 사이트와 동일한 한 프레임에서 페이지를 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0907d966acc8c427e8ea343762038d9ac612b1e1" translate="yes" xml:space="preserve">
          <source>If you specify &lt;code&gt;deny&lt;/code&gt;, not only will attempts to load the page in a frame fail when loaded from other sites, attempts to do so will fail when loaded from the same site. On the other hand, if you specify &lt;code&gt;sameorigin&lt;/code&gt;, you can still use the page in a frame as long as the site including it in a frame is the same as the one serving the page.</source>
          <target state="translated">&lt;code&gt;deny&lt;/code&gt; 를 지정하면 다른 사이트에서로드 할 때 프레임에 페이지를로드하려고 시도 할뿐만 아니라 동일한 사이트에서로드 할 때 실패합니다. 반면에 &lt;code&gt;sameorigin&lt;/code&gt; 을 지정 하면 프레임에 페이지를 포함하는 사이트가 페이지를 제공하는 사이트와 동일한 한 프레임에서 페이지를 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76a40e879843d64bc7dc4946b5e5671cdab0ec07" translate="yes" xml:space="preserve">
          <source>If you still want to receive reporting, but also want to enforce a policy, use the &lt;a href=&quot;content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header with the &lt;a href=&quot;content-security-policy/report-uri&quot;&gt;&lt;code&gt;report-uri&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">여전히보고를 받고 싶지만 정책을 시행 하려면 &lt;a href=&quot;content-security-policy/report-uri&quot;&gt; &lt;code&gt;report-uri&lt;/code&gt; &lt;/a&gt; 지시문 과 함께 &lt;a href=&quot;content-security-policy&quot;&gt; &lt;code&gt;Content-Security-Policy&lt;/code&gt; &lt;/a&gt; 헤더를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6fa8f50d92b7325e18f060f06fa0a5d25f9ef058" translate="yes" xml:space="preserve">
          <source>If you want clients to be able to access other headers, you have to list them using the &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; header.</source>
          <target state="translated">클라이언트가 다른 헤더에 액세스 할 수있게하려면 &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; 헤더를 사용하여 나열해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ea06dd402f2e9e7e165d67b2c899ce9957d05866" translate="yes" xml:space="preserve">
          <source>If you want clients to be able to access other headers, you have to list them using the &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; header. &lt;a href=&quot;content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; was not part of the original set safelisted response headers [&lt;a href=&quot;https://github.com/whatwg/fetch/pull/626&quot;&gt;ref&lt;/a&gt;].</source>
          <target state="translated">클라이언트가 다른 헤더에 액세스 할 수 있도록하려면 &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; 헤더를 사용하여 나열해야합니다 . &lt;a href=&quot;content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt; 는 원래 설정된 허용 목록 응답 헤더 [ &lt;a href=&quot;https://github.com/whatwg/fetch/pull/626&quot;&gt;ref&lt;/a&gt; ]의 일부가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="29f7d5936f9e8e985a3e0dca82679038018eac65" translate="yes" xml:space="preserve">
          <source>If you want to avoid using user agent detection, you have options!</source>
          <target state="translated">사용자 에이전트 감지를 사용하지 않으려면 옵션이 있습니다!</target>
        </trans-unit>
        <trans-unit id="c4dd6049dead6031953d458d3c0344045b4e4cbe" translate="yes" xml:space="preserve">
          <source>If you want to specify a fallback policy in any case the desired policy hasn't got wide enough browser support, use a comma-separated list with the desired policy specified last:</source>
          <target state="translated">원하는 정책에 브라우저 지원이 충분하지 않은 경우 대체 정책을 지정하려면 마지막에 지정된 원하는 정책과 함께 쉼표로 구분 된 목록을 사용하세요.</target>
        </trans-unit>
        <trans-unit id="21412475687382be49c1ab666d1bf865da6de6a3" translate="yes" xml:space="preserve">
          <source>If you want to try to avoid using user agent detection, there are options in some cases!</source>
          <target state="translated">사용자 에이전트 감지를 사용하지 않으려는 경우 옵션이 있습니다!</target>
        </trans-unit>
        <trans-unit id="0a038ab727911ca95eaa7cfa94eb4a630d6d412b" translate="yes" xml:space="preserve">
          <source>If your application, server, or proxy supports the standardized &lt;code&gt;Forwarded&lt;/code&gt; header, the &lt;a href=&quot;x-forwarded-for&quot;&gt;&lt;code&gt;X-Forwarded-For&lt;/code&gt;&lt;/a&gt; header can be replaced. Note that IPv6 address are quoted and enclosed in square brackets in &lt;code&gt;Forwarded&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램, 서버 또는 프록시가 표준화 된 &lt;code&gt;Forwarded&lt;/code&gt; 헤더를 지원하는 경우 &lt;a href=&quot;x-forwarded-for&quot;&gt; &lt;code&gt;X-Forwarded-For&lt;/code&gt; &lt;/a&gt; 헤더를 교체 할 수 있습니다. IPv6 주소는 따옴표로 묶어 &lt;code&gt;Forwarded&lt;/code&gt; 대괄호로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="90a08b947a2957fe434f390c98a9142e831d9a0f" translate="yes" xml:space="preserve">
          <source>If your site authenticates users, it should regenerate and resend session cookies, even ones that already exist, whenever the user authenticates. This technique helps prevent &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Session_fixation&quot;&gt;session fixation attacks&lt;/a&gt;, where a third party can reuse a user's session.</source>
          <target state="translated">사이트에서 사용자를 인증하는 경우 사용자가 인증 할 때마다 세션 쿠키 (이미 존재하는 쿠키 포함)를 다시 생성하고 다시 보내야합니다. 이 기술은 제 3자가 사용자의 세션을 재사용 할 수있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Types_of_attacks#Session_fixation&quot;&gt;세션 고정 공격&lt;/a&gt; 을 방지하는 데 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="49d1c453e83057e2df00a9ddb4d5028bf92c87b6" translate="yes" xml:space="preserve">
          <source>If, instead, you need to adjust the server's behavior, you'll need to change the value of &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; to grant access to the origin from which the client is loaded.</source>
          <target state="translated">대신 서버의 동작을 조정해야하는 경우 클라이언트가로드 된 원점에 대한 액세스 권한을 부여하기 위해 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 의 값을 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c4eca4702bbd3334f2af696c9113056ad66a8d93" translate="yes" xml:space="preserve">
          <source>If-Match</source>
          <target state="translated">If-Match</target>
        </trans-unit>
        <trans-unit id="347825cb2f6b585363c705da713b0a01a89c0771" translate="yes" xml:space="preserve">
          <source>If-Match (RFC 2616)</source>
          <target state="translated">일치하는 경우 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="258eadb23d36147c17ca65c583464f10d8beefd5" translate="yes" xml:space="preserve">
          <source>If-Match (RFC 7232)</source>
          <target state="translated">If-Match (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="de1338853da05e0b2ef334c6d2a1bd4efd32b464" translate="yes" xml:space="preserve">
          <source>If-Modified-Since</source>
          <target state="translated">If-Modified-Since</target>
        </trans-unit>
        <trans-unit id="434516b07ea046bbb5c4ac151f7538b608531da2" translate="yes" xml:space="preserve">
          <source>If-Modified-Since (RFC 2616)</source>
          <target state="translated">If-Modified-Since (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="33cf8486927b13aa3ae6d7b4b5c2ba9856f2354e" translate="yes" xml:space="preserve">
          <source>If-Modified-Since (RFC 7232)</source>
          <target state="translated">If-Modified-Since (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="2c743ca76b5ff26374732b33a172bc6386b3aab3" translate="yes" xml:space="preserve">
          <source>If-None-Match</source>
          <target state="translated">If-None-Match</target>
        </trans-unit>
        <trans-unit id="afb97058113ea8024c2b1e30396497276d9e7529" translate="yes" xml:space="preserve">
          <source>If-None-Match (RFC 2616)</source>
          <target state="translated">일치하지 않는 경우 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="9d29af1e2a7a4f8c799fff50073e73e2ee90bbe7" translate="yes" xml:space="preserve">
          <source>If-None-Match (RFC 7232)</source>
          <target state="translated">일치하지 않는 경우 (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="3e610a822745a7648a28ddc376bb31e9d961b787" translate="yes" xml:space="preserve">
          <source>If-Range</source>
          <target state="translated">If-Range</target>
        </trans-unit>
        <trans-unit id="0db4229b3fe70c3cd52654ba3a313677c557a2f3" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 2616)</source>
          <target state="translated">범위 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="63c9a90407687da95ffa628c724bc3b45d1f6b45" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 7232)</source>
          <target state="translated">범위 (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="d239314fe40c1036bb99b7c1a04ab1559ed5e25b" translate="yes" xml:space="preserve">
          <source>If-Range (RFC 7233)</source>
          <target state="translated">범위 (RFC 7233)</target>
        </trans-unit>
        <trans-unit id="f07ea20e44175d8597a0629b88839dc18660c130" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since</source>
          <target state="translated">If-Unmodified-Since</target>
        </trans-unit>
        <trans-unit id="bd06e3f28f4c3da6f75241cead3ad85962385407" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since (RFC 2616)</source>
          <target state="translated">수정되지 않은 경우 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="dc5f0278046c847aae6cb54bbb6bf9f7d5e45609" translate="yes" xml:space="preserve">
          <source>If-Unmodified-Since (RFC 7232)</source>
          <target state="translated">수정되지 않은 경우 (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="ae9940a55ac6950c887c90446b032a2b825302da" translate="yes" xml:space="preserve">
          <source>If: (&amp;lt;urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt;
       [&quot;I am an ETag&quot;])
       ([&quot;I am another ETag&quot;])

   The previous header would require that the resource identified in the
   Request-URI be locked with the specified lock token and be in the
   state identified by the &quot;I am an ETag&quot; ETag or in the state
   identified by the second ETag &quot;I am another ETag&quot;.

   To put the matter more plainly one can think of the previous If
   header as expressing the condition below:

     (
       is-locked-with(urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2) AND
       matches-etag(&quot;I am an ETag&quot;)
     )
     OR
     (
       matches-etag(&quot;I am another ETag&quot;)
     )</source>
          <target state="translated">다음과 같은 경우 : (&amp;lt;urn : uuid : 181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt; [ &quot;나는 ETag입니다&quot;]) ([ &quot;나는 다른 ETag입니다&quot;]) 이전 헤더를 사용하려면 Request- URI는 지정된 잠금 토큰으로 잠겨 있고 &quot;I ETag&quot;ETag로 식별 된 상태이거나 두 번째 ETag &quot;I는 다른 ETag&quot;로 식별 된 상태에 있습니다. 더 명확하게 말하면 이전 If 헤더를 아래 조건을 표현하는 것으로 생각할 수 있습니다. (is is-locked-with (urn : uuid : 181d4fae-7d8c-11d0-a765-00a0c91e6bf2) AND matches-etag ( &quot;I am an ETag &quot;)) OR (matches-etag (&quot;나는 다른 ETag &quot;))</target>
        </trans-unit>
        <trans-unit id="e179e2a27f46763d373e2f3b6cb41b4cc29be61b" translate="yes" xml:space="preserve">
          <source>If: (Not &amp;lt;urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt;
     &amp;lt;urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092&amp;gt;)

   This If header requires that the resource must not be locked with a
   lock having the lock token
   urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2 and must be locked by a
   lock with the lock token
   urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092.</source>
          <target state="translated">If : (not &amp;lt;urn : uuid : 181d4fae-7d8c-11d0-a765-00a0c91e6bf2&amp;gt; &amp;lt;urn : uuid : 58f202ac-22cf-11d1-b12d-002035b29092&amp;gt;)이 헤더를 사용하려면 잠금이있는 리소스로 리소스를 잠그지 않아야합니다. 잠금 토큰 urn : uuid : 181d4fae-7d8c-11d0-a765-00a0c91e6bf2이며 잠금 토큰 urn : uuid : 58f202ac-22cf-11d1-b12d-002035b29092를 사용하여 잠금으로 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="90f12c5f5060f3384dd9dd32310436416b8fcc0b" translate="yes" xml:space="preserve">
          <source>Image or graphical data including both bitmap and vector still images as well as animated versions of still image formats such as animated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GIF&quot;&gt;GIF&lt;/a&gt; or APNG. Common examples are &lt;code&gt;image/jpeg&lt;/code&gt;, &lt;code&gt;image/png&lt;/code&gt;, and &lt;code&gt;image/svg+xml&lt;/code&gt;.</source>
          <target state="translated">비트 맵 및 벡터 스틸 이미지뿐만 아니라 애니메이션 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GIF&quot;&gt;GIF&lt;/a&gt; 또는 APNG 와 같은 스틸 이미지 형식의 애니메이션 버전을 포함한 이미지 또는 그래픽 데이터 . 일반적인 예는 &lt;code&gt;image/jpeg&lt;/code&gt; , &lt;code&gt;image/png&lt;/code&gt; 및 &lt;code&gt;image/svg+xml&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="01602140e2a7c5c326242ee266afd5572f9bb02d" translate="yes" xml:space="preserve">
          <source>Image type</source>
          <target state="translated">이미지 타입</target>
        </trans-unit>
        <trans-unit id="6ae89c7f31fe68afd0052be4204a1384141e4bde" translate="yes" xml:space="preserve">
          <source>Image types</source>
          <target state="translated">이미지 유형</target>
        </trans-unit>
        <trans-unit id="7769fde23e24138d1e8d5303368e943a1ccb83f4" translate="yes" xml:space="preserve">
          <source>Images may load from anywhere (note the &quot;*&quot; wildcard).</source>
          <target state="translated">이미지가 어느 곳에서나로드 될 수 있습니다 ( &quot;*&quot;와일드 카드에 유의하십시오).</target>
        </trans-unit>
        <trans-unit id="4c18ce69b9abb0f85c6c4dd561b8fa929e369a90" translate="yes" xml:space="preserve">
          <source>Images/video frames drawn to a canvas using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt; 사용하여 캔버스에 그린 이미지 / 비디오 프레임 .</target>
        </trans-unit>
        <trans-unit id="f257a0723093d9a811b4ad768559384cb6bd8ec4" translate="yes" xml:space="preserve">
          <source>Implementation notes for applications, vendors, and extensions</source>
          <target state="translated">응용 프로그램, 공급 업체 및 확장에 대한 구현 정보</target>
        </trans-unit>
        <trans-unit id="da02a5e4655c1c65c2babb044e19b5d72a9968f1" translate="yes" xml:space="preserve">
          <source>Implementation-specific header that may have various effects anywhere along the request-response chain. Used for backwards compatibility with HTTP/1.0 caches where the &lt;code&gt;Cache-Control&lt;/code&gt; header is not yet present.</source>
          <target state="translated">요청-응답 체인의 어느 곳에서나 다양한 영향을 미칠 수있는 구현 별 헤더. &lt;code&gt;Cache-Control&lt;/code&gt; 헤더가 아직없는 HTTP / 1.0 캐시와의 하위 호환성을 위해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1eb8fc6775c68df3e1147c016e8f5a910aa93c4" translate="yes" xml:space="preserve">
          <source>Implementations of HTTP origin servers SHOULD be careful to restrict
   the documents returned by HTTP requests to be only those that were
   intended by the server administrators. If an HTTP server translates
   HTTP URIs directly into file system calls, the server MUST take
   special care not to serve files that were not intended to be
   delivered to HTTP clients. For example, UNIX, Microsoft Windows, and
   other operating systems use &quot;..&quot; as a path component to indicate a
   directory level above the current one. On such a system, an HTTP
   server MUST disallow any such construct in the Request-URI if it
   would otherwise allow access to a resource outside those intended to
   be accessible via the HTTP server. Similarly, files intended for
   reference only internally to the server (such as access control
   files, configuration files, and script code) MUST be protected from
   inappropriate retrieval, since they might contain sensitive
   information. Experience has shown that minor bugs in such HTTP server
   implementations have turned into security risks.</source>
          <target state="translated">HTTP 오리진 서버의 구현은 HTTP 요청에 의해 리턴 된 문서가 서버 관리자가 의도 한 문서로만 제한하도록주의해야합니다. HTTP 서버가 HTTP URI를 파일 시스템 호출로 직접 변환하는 경우, 서버는 HTTP 클라이언트에 전달되지 않은 파일을 제공하지 않도록 특별히주의해야합니다. 예를 들어, UNIX, Microsoft Windows 및 기타 운영 체제는 &quot;..&quot;를 경로 구성 요소로 사용하여 현재 디렉토리보다 높은 디렉토리 레벨을 나타냅니다. 이러한 시스템에서 HTTP 서버는 HTTP 서버를 통해 액세스 할 수있는 리소스 이외의 리소스에 대한 액세스를 허용하는 경우 Request-URI에서 이러한 구성을 허용하지 않아야합니다. 마찬가지로 서버 내부에서만 참조 할 수있는 파일 (예 : 액세스 제어 파일,구성 파일 및 스크립트 코드)는 민감한 정보를 포함 할 수 있으므로 부적절한 검색으로부터 보호되어야합니다. 경험에 따르면 이러한 HTTP 서버 구현의 사소한 버그가 보안 위험으로 전환 된 것으로 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="02431df0d7457d0f94a64ba6def9dc24dd976c81" translate="yes" xml:space="preserve">
          <source>Implementations of HTTP/2 MUST use TLS version 1.2 [&lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt;] or higher
   for HTTP/2 over TLS.  The general TLS usage guidance in [&lt;a href=&quot;#ref-TLSBCP&quot;&gt;TLSBCP&lt;/a&gt;]
   SHOULD be followed, with some additional restrictions that are
   specific to HTTP/2.

   The TLS implementation MUST support the Server Name Indication (SNI)
   [&lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt;] extension to TLS.  HTTP/2 clients MUST indicate the target
   domain name when negotiating TLS.

   Deployments of HTTP/2 that negotiate TLS 1.3 or higher need only
   support and use the SNI extension; deployments of TLS 1.2 are subject
   to the requirements in the following sections.  Implementations are
   encouraged to provide defaults that comply, but it is recognized that
   deployments are ultimately responsible for compliance.</source>
          <target state="translated">HTTP / 2 구현은 TLS 를 통한 HTTP / 2에 대해 TLS 버전 1.2 [ &lt;a href=&quot;#ref-TLS12&quot;&gt;TLS12&lt;/a&gt; ] 이상을 사용해야합니다 . [ &lt;a href=&quot;#ref-TLSBCP&quot;&gt;TLSBCP&lt;/a&gt; ] 의 일반 TLS 사용 지침을 따라야하며 HTTP / 2에 특정한 몇 가지 추가 제한 사항이 있어야합니다. TLS 구현은 TLS에 대한 SNI (Server Name Indication) [ &lt;a href=&quot;#ref-TLS-EXT&quot;&gt;TLS-EXT&lt;/a&gt; ] 확장을 지원해야합니다 . HTTP / 2 클라이언트는 TLS를 협상 할 때 대상 도메인 이름을 표시해야합니다. TLS 1.3 이상을 협상하는 HTTP / 2 배포는 SNI 확장 만 지원하고 사용하면됩니다. TLS 1.2 배포에는 다음 섹션의 요구 사항이 적용됩니다. 구현시 준수하는 기본값을 제공하도록 권장되지만 배포는 궁극적으로 준수에 대한 책임이 있음을 인식합니다.</target>
        </trans-unit>
        <trans-unit id="14daa0dc1eaa5670a20dd5d15e7e163107880fe7" translate="yes" xml:space="preserve">
          <source>Implemented as X-Content-Security-Policy header in Firefox 4.</source>
          <target state="translated">Firefox 4에서 X-Content-Security-Policy 헤더로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="603ce634b762f92f6e05c3f3e6b9b238a85f5318" translate="yes" xml:space="preserve">
          <source>Implemented as X-Content-Security-Policy header, only supporting 'sandbox' directive.</source>
          <target state="translated">'sandbox'지시문 만 지원하는 X-Content-Security-Policy 헤더로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="3b13dd24d3dc6eaf8faafe83a8f22898c5b86d5d" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in Chrome 14.</source>
          <target state="translated">Chrome 14에서 X-Webkit-CSP 헤더로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="b0eba0ad36d67027ac7933274e7042a9d3fc6e6f" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in Safari 6.</source>
          <target state="translated">Safari 6에서 X-Webkit-CSP 헤더로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="cb60fa324f738059434ec9f563fd92bd6eb364fe" translate="yes" xml:space="preserve">
          <source>Implemented as X-Webkit-CSP header in iOS 5.1.</source>
          <target state="translated">iOS 5.1에서 X-Webkit-CSP 헤더로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="60d472d41f188e74df2d9f7da2711afae460cd86" translate="yes" xml:space="preserve">
          <source>Implementers are advised to pay attention to cache controls and to
   make use of the mechanisms available in HTTP when editing Resources,
   in particular, entity-tags as outlined in [&lt;a href=&quot;#ref-NOTE-detect-lost-update&quot;&gt;NOTE-detect-lost-update&lt;/a&gt;].
   Clients are not assured to receive the most recent representations of
   Collection Members using GET if the server is authorizing
   intermediaries to cache them.</source>
          <target state="translated">구현자는 [ &lt;a href=&quot;#ref-NOTE-detect-lost-update&quot;&gt;NOTE-detect-lost-update&lt;/a&gt; ]에 요약 된대로 자원, 특히 엔티티 태그를 편집 할 때 캐시 제어에주의하고 HTTP에서 사용 가능한 메커니즘을 사용하는 것이 좋습니다 . 서버가 중개자에게 캐시를 부여 할 권한이있는 경우 클라이언트는 GET을 사용하여 가장 최근의 콜렉션 멤버 표시를 보장받지 못합니다.</target>
        </trans-unit>
        <trans-unit id="e3af5ce8ec47b166e13f8ce8cbe13ad9af1cdf60" translate="yes" xml:space="preserve">
          <source>Implementors should be aware that the software represents the user in
   their interactions over the Internet, and should be careful to allow
   the user to be aware of any actions they might take which may have an
   unexpected significance to themselves or others.

   In particular, the convention has been established that the GET and
   HEAD methods SHOULD NOT have the significance of taking an action
   other than retrieval. These methods ought to be considered &quot;safe&quot;.
   This allows user agents to represent other methods, such as POST, PUT
   and DELETE, in a special way, so that the user is made aware of the
   fact that a possibly unsafe action is being requested.

   Naturally, it is not possible to ensure that the server does not
   generate side-effects as a result of performing a GET request; in
   fact, some dynamic resources consider that a feature. The important
   distinction here is that the user did not request the side-effects,
   so therefore cannot be held accountable for them.</source>
          <target state="translated">구현자는 소프트웨어가 인터넷을 통한 상호 작용에서 사용자를 나타내며 사용자가 자신이나 다른 사람에게 예기치 않은 의미를 가질 수있는 조치를 사용자가 인식 할 수 있도록주의해야합니다. 특히, GET 및 HEAD 메소드는 검색 이외의 조치를 취하지 않아야한다는 협약이 확립되었습니다. 이 방법들은 &quot;안전한&quot;것으로 간주되어야합니다. 이를 통해 사용자 에이전트는 POST, PUT 및 DELETE와 같은 다른 방법을 특별한 방식으로 나타낼 수 있으므로 안전하지 않은 조치가 요청되고 있음을 사용자에게 알릴 수 있습니다. 당연히, GET 요청을 수행 한 결과로 서버가 부작용을 일으키지 않도록 보장 할 수는 없습니다. 사실로,일부 동적 자원은 해당 기능을 고려합니다. 여기서 중요한 차이점은 사용자가 부작용을 요청하지 않았으므로 책임을 질 수 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9f5bcb265afe8c10a0333f200168f39077ccb2a2" translate="yes" xml:space="preserve">
          <source>Importance of setting the correct MIME type</source>
          <target state="translated">올바른 MIME 유형 설정의 중요성</target>
        </trans-unit>
        <trans-unit id="50b4adf7a95c03b87b497db3ec73f7756f713782" translate="yes" xml:space="preserve">
          <source>Important MIME types for Web developers</source>
          <target state="translated">웹 개발자를위한 중요한 MIME 유형</target>
        </trans-unit>
        <trans-unit id="a9147f5aaafb06475c8b837fee41cebfad64027d" translate="yes" xml:space="preserve">
          <source>Improved connection management allows considerable boosting of performance in HTTP. With HTTP/1.1 or HTTP/1.0, using a persistent connection &amp;ndash; at least until it becomes idle &amp;ndash; leads to the best performance. However, the failure of pipelining has lead to designing superior connection management models, which have been incorporated into HTTP/2.</source>
          <target state="translated">향상된 연결 관리를 통해 HTTP 성능이 크게 향상됩니다. HTTP / 1.1 또는 HTTP / 1.0에서는 적어도 유휴 상태가 될 때까지 지속적인 연결을 사용하면 최상의 성능을 얻을 수 있습니다. 그러나 파이프 라이닝의 실패로 HTTP / 2에 통합 된 우수한 연결 관리 모델을 설계 할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="ed3056eb7dfdbbf414ed2c77758a13ddb4dea4dc" translate="yes" xml:space="preserve">
          <source>In 1989, while he was working at CERN, Tim Berners-Lee wrote a proposal to build a hypertext system over the Internet. Initially calling it the &lt;em&gt;Mesh&lt;/em&gt;, it was later renamed to &lt;em&gt;World Wide Web&lt;/em&gt; during its implementation in 1990. Built over the existing TCP and IP protocols, it consisted of 4 building blocks:</source>
          <target state="translated">1989 년 CERN에서 근무하는 동안 Tim Berners-Lee는 인터넷을 통해 하이퍼 텍스트 시스템을 구축하라는 제안을 작성했습니다. 처음에 그것을 &lt;em&gt;Mesh&lt;/em&gt; 라고 부르고 , 1990 년에 구현하는 동안 나중에 &lt;em&gt;월드 와이드 웹 (World Wide Web)으로&lt;/em&gt; 이름이 변경 되었습니다. 기존 TCP 및 IP 프로토콜을 기반으로 구축되었으며 4 개의 빌딩 블록으로 구성되었습니다.</target>
        </trans-unit>
        <trans-unit id="bc75911a51c61595cb9f9517b6870c9ae4a76b47" translate="yes" xml:space="preserve">
          <source>In 200 (OK) responses to GET or HEAD, an origin server:

   o  SHOULD send an entity-tag validator unless it is not feasible to
      generate one.

   o  MAY send a weak entity-tag instead of a strong entity-tag, if
      performance considerations support the use of weak entity-tags, or
      if it is unfeasible to send a strong entity-tag.

   o  SHOULD send a Last-Modified value if it is feasible to send one.

   In other words, the preferred behavior for an origin server is to
   send both a strong entity-tag and a Last-Modified value in successful
   responses to a retrieval request.

   A client:

   o  MUST send that entity-tag in any cache validation request (using
      If-Match or If-None-Match) if an entity-tag has been provided by
      the origin server. 

   o  SHOULD send the Last-Modified value in non-subrange cache
      validation requests (using If-Modified-Since) if only a
      Last-Modified value has been provided by the origin server.

   o  MAY send the Last-Modified value in subrange cache validation
      requests (using If-Unmodified-Since) if only a Last-Modified value
      has been provided by an HTTP/1.0 origin server.  The user agent
      SHOULD provide a way to disable this, in case of difficulty.

   o  SHOULD send both validators in cache validation requests if both
      an entity-tag and a Last-Modified value have been provided by the
      origin server.  This allows both HTTP/1.0 and HTTP/1.1 caches to
      respond appropriately.</source>
          <target state="translated">GET 또는 HEAD에 대한 200 (OK) 응답에서 오리진 서버 : o 엔티티 태그 검사기를 생성 할 수없는 경우가 아니면 엔티티 태그 검사기를 보내야합니다. o 성능 고려 사항이 취약한 엔티티 태그 사용을 지원하거나 강력한 엔티티 태그를 전송하는 것이 불가능한 경우 강력한 엔티티 태그 대신 취약한 엔티티 태그를 전송할 수 있습니다. o 가능한 경우 Last-Modified 값을 보내야합니다. 다시 말해, 오리진 서버에 대해 선호되는 동작은 검색 요청에 대한 성공적인 응답으로 강력한 엔티티 태그와 Last-Modified 값을 모두 보내는 것입니다. 클라이언트 : o 오리진 서버가 엔티티 태그를 제공 한 경우 캐시 유효성 검사 요청 (If-Match 또는 If-None-Match 사용)으로 해당 엔티티 태그를 보내야합니다.o 원본 서버에서 Last-Modified 값만 제공 한 경우 하위 범위가 아닌 캐시 유효성 검사 요청 (If-Modified-Since 사용)으로 Last-Modified 값을 보내야합니다. o HTTP / 1.0 오리진 서버에서 Last-Modified 값만 제공 한 경우 하위 범위 캐시 유효성 검사 요청 (If-Unmodified-Since 사용)에서 Last-Modified 값을 보낼 수 있습니다. 사용자 에이전트는 어려움이있을 경우이를 비활성화하는 방법을 제공해야합니다 (SHOULD). o 오리진 서버가 엔티티 태그와 Last-Modified 값을 모두 제공 한 경우 캐시 유효성 검사 요청에서 두 유효성 검사기를 모두 보내야합니다. 이를 통해 HTTP / 1.0 및 HTTP / 1.1 캐시 모두 적절하게 응답 할 수 있습니다.o HTTP / 1.0 오리진 서버에서 Last-Modified 값만 제공 한 경우 하위 범위 캐시 유효성 검사 요청 (If-Unmodified-Since 사용)에서 Last-Modified 값을 보낼 수 있습니다. 사용자 에이전트는 어려움이있을 경우이를 비활성화하는 방법을 제공해야합니다 (SHOULD). o 오리진 서버가 엔티티 태그와 Last-Modified 값을 모두 제공 한 경우 캐시 유효성 검사 요청에서 두 유효성 검사기를 모두 보내야합니다. 이를 통해 HTTP / 1.0 및 HTTP / 1.1 캐시 모두 적절하게 응답 할 수 있습니다.o HTTP / 1.0 오리진 서버에서 Last-Modified 값만 제공 한 경우 하위 범위 캐시 유효성 검사 요청 (If-Unmodified-Since 사용)에서 Last-Modified 값을 보낼 수 있습니다. 사용자 에이전트는 어려움이있을 경우이를 비활성화하는 방법을 제공해야합니다 (SHOULD). o 오리진 서버가 엔티티 태그와 Last-Modified 값을 모두 제공 한 경우 캐시 유효성 검사 요청에서 두 유효성 검사기를 모두 보내야합니다. 이를 통해 HTTP / 1.0 및 HTTP / 1.1 캐시 모두 적절하게 응답 할 수 있습니다.o 오리진 서버가 엔티티 태그와 Last-Modified 값을 모두 제공 한 경우 캐시 유효성 검사 요청에서 두 유효성 검사기를 모두 보내야합니다. 이를 통해 HTTP / 1.0 및 HTTP / 1.1 캐시 모두 적절하게 응답 할 수 있습니다.o 오리진 서버가 엔티티 태그와 Last-Modified 값을 모두 제공 한 경우 캐시 유효성 검사 요청에서 두 유효성 검사기를 모두 보내야합니다. 이를 통해 HTTP / 1.0 및 HTTP / 1.1 캐시 모두 적절하게 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="296574e47729d1eae5c728c2cee0ace56802d4ed" translate="yes" xml:space="preserve">
          <source>In 2000, a new pattern for using HTTP was designed: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;representational state transfer&lt;/a&gt; (or REST). The actions induced by the API were no more conveyed by new HTTP methods, but only by accessing specific URIs with basic HTTP/1.1 methods. This allowed any Web application to provide an API to allow retrieval and modification of its data without having to update the browsers or the servers: all what is needed was embedded in the files served by the Web sites through standard HTTP/1.1. The drawback of the REST model resides in the fact that each website defines its own non-standard RESTful API and has total control on it; unlike the *DAV extensions were clients and servers are interoperable. RESTful APIs became very common in the 2010s.</source>
          <target state="translated">2000 년에는 HTTP를 사용하기위한 새로운 패턴 인 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/REST&quot;&gt;표현 상태 전송&lt;/a&gt; (또는 REST) 이 설계되었습니다 . API에 의해 유도 된 조치는 더 이상 새로운 HTTP 메소드로 전달되지 않고 기본 HTTP / 1.1 메소드로 특정 URI에 액세스해야만합니다. 이를 통해 모든 웹 응용 프로그램은 브라우저 나 서버를 업데이트하지 않고도 데이터를 검색하고 수정할 수있는 API를 제공 할 수있었습니다. 필요한 모든 것은 표준 HTTP / 1.1을 통해 웹 사이트에서 제공하는 파일에 포함되었습니다. REST 모델의 단점은 각 웹 사이트가 고유의 비표준 RESTful API를 정의하고 이에 대한 전체 제어 권한이 있다는 사실에 있습니다. * DAV 확장과 달리 클라이언트와 서버는 상호 운용 가능합니다. RESTful API는 2010 년에 매우 일반적이되었습니다.</target>
        </trans-unit>
        <trans-unit id="53750ef40f057be1a7ae8ba66d6a43963e269f50" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt;, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request&quot;&gt;preflight request&lt;/a&gt; is sent with the &lt;code&gt;OPTIONS&lt;/code&gt; method so that the server can respond if it is acceptable to send the request. In this example, we will request permission for these parameters:</source>
          <target state="translated">에서는 &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request&quot;&gt;플라이트 요청&lt;/a&gt; 통해 전송 &lt;code&gt;OPTIONS&lt;/code&gt; 그 요청을 전송하도록 허용되는 경우에 서버가 응답 할 수 있도록하는 방법. 이 예에서는 다음 매개 변수에 대한 권한을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="97be88d1cc954daadbfa1c4539779b9d17810aba" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt;, a preflight request with the &lt;code&gt;OPTIONS&lt;/code&gt; method is sent, so that the server can respond whether it is acceptable to send the request with these parameters. The &lt;a href=&quot;../headers/access-control-request-method&quot;&gt;&lt;code&gt;Access-Control-Request-Method&lt;/code&gt;&lt;/a&gt; header notifies the server as part of a preflight request that when the actual request is sent, it will be sent with a &lt;code&gt;POST&lt;/code&gt; request method. The &lt;a href=&quot;../headers/access-control-request-headers&quot;&gt;&lt;code&gt;Access-Control-Request-Headers&lt;/code&gt;&lt;/a&gt; header notifies the server that when the actual request is sent, it will be sent with a &lt;code&gt;X-PINGOTHER&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; custom headers. The server now has an opportunity to determine whether it wishes to accept a request under these circumstances.</source>
          <target state="translated">에서는 &lt;a href=&quot;../cors&quot;&gt;CORS&lt;/a&gt; 상기와 플라이트 요청 &lt;code&gt;OPTIONS&lt;/code&gt; 의 방법은 서버가 이러한 매개 변수를 사용하여 요청을 전송 허용 여부 대응할 수 있도록하는 것이, 송신된다. &lt;a href=&quot;../headers/access-control-request-method&quot;&gt; &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; &lt;/a&gt; 헤더 통지 실제 요청이 전송 될 때,은에 전송 될 것이라는 플라이트 요청의 일부로서 서버 &lt;code&gt;POST&lt;/code&gt; 의 요청 방법. &lt;a href=&quot;../headers/access-control-request-headers&quot;&gt; &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; &lt;/a&gt; 헤더 통지 실제 요청이 전송 될 때, 그것이로 전송됩니다 서버 &lt;code&gt;X-PINGOTHER&lt;/code&gt; 및 &lt;code&gt;Content-Type&lt;/code&gt; 사용자 정의 헤더. 이제 서버는 이러한 상황에서 요청을 수락할지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22094d906cb0cb930d1261041451d23d682d9443" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt;, &lt;em&gt;&lt;strong&gt;content negotiation&lt;/strong&gt;&lt;/em&gt; is the mechanism that is used for serving different representations of a resource at the same URI, so that the user agent can specify which is best suited for the user (for example, which language of a document, which image format, or which content encoding).</source>
          <target state="translated">에서는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; , &lt;em&gt;&lt;strong&gt;내용 협상은&lt;/strong&gt;&lt;/em&gt; 사용자 에이전트가 가장 예컨대 사용자 (문서의 언어, 영상 포맷에 적합 지정할 수 그래서 동일한 URI에 자원의 다른 표현을 제공하는 데 사용되는기구이며 또는 어떤 콘텐츠 인코딩).</target>
        </trans-unit>
        <trans-unit id="540a387e018d2b957b00f9cf9c29e94b9b95ff1e" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt; terms this is the &lt;em&gt;selected representation&lt;/em&gt; of a resource. The selected representation depends on the &lt;code&gt;&lt;a href=&quot;content-type&quot;&gt;Content-Type&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;content-encoding&quot;&gt;Content-Encoding&lt;/a&gt;&lt;/code&gt; header values: so a single resource may have multiple different digest values.</source>
          <target state="translated">에서 &lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot;&gt;RFC 7231&lt;/a&gt; 용어 이것은이다 &lt;em&gt;선택 표현&lt;/em&gt; 자원의. 선택한 표현은 &lt;code&gt;&lt;a href=&quot;content-type&quot;&gt;Content-Type&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;content-encoding&quot;&gt;Content-Encoding&lt;/a&gt;&lt;/code&gt; 헤더 값 에 따라 달라집니다 . 따라서 단일 리소스에 여러 개의 다른 다이제스트 값이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14de70e40c9e2cf5302c938ea374541877e07084" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;server-driven content negotiation&lt;/em&gt;, or proactive content negotiation, the browser (or any other kind of user-agent) sends several HTTP headers along with the URL. These headers describe the preferred choice of the user. The server uses them as hints and an internal algorithm chooses the best content to serve to the client. If it cannot provide a suitable resource, as a fallback it might respond with &lt;a href=&quot;status/406&quot;&gt;&lt;code&gt;406&lt;/code&gt;&lt;/a&gt; (Not Acceptable) or &lt;a href=&quot;status/415&quot;&gt;&lt;code&gt;415&lt;/code&gt;&lt;/a&gt; (Unsupported Media Type) and set headers for the types of media that it does support (e.g. using the &lt;a href=&quot;headers/accept-post&quot;&gt;&lt;code&gt;Accept-Post&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/accept-patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; for POST and PATCH requests, respectively). The algorithm is server-specific and not defined in the standard. See, for example, the &lt;a href=&quot;http://httpd.apache.org/docs/current/en/content-negotiation.html#algorithm&quot;&gt;Apache negotiation algorithm&lt;/a&gt;.</source>
          <target state="translated">에서 &lt;em&gt;서버가 주도하는 내용 협상&lt;/em&gt; , 또는 사전 내용 협상 브라우저 (또는 사용자 에이전트의 다른 종류)는 URL과 함께 여러 HTTP 헤더를 보냅니다. 이 헤더는 사용자가 선호하는 선택을 설명합니다. 서버는이를 힌트로 사용하고 내부 알고리즘은 클라이언트에 제공 할 최상의 콘텐츠를 선택합니다. 적절한 리소스를 제공 할 수없는 경우 대체로 &lt;a href=&quot;status/406&quot;&gt; &lt;code&gt;406&lt;/code&gt; &lt;/a&gt; (허용되지 않음) 또는 &lt;a href=&quot;status/415&quot;&gt; &lt;code&gt;415&lt;/code&gt; &lt;/a&gt; (지원되지 않는 미디어 유형)로 응답하고 지원하는 미디어 유형에 대한 헤더를 설정할 수 있습니다 (예 : &lt;a href=&quot;headers/accept-post&quot;&gt; &lt;code&gt;Accept-Post&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;headers/accept-patch&quot;&gt; &lt;code&gt;Accept-Patch&lt;/code&gt; 사용).&lt;/a&gt; POST 및 PATCH 요청에 대해 각각). 알고리즘은 서버별로 다르며 표준에 정의되어 있지 않습니다. 예를 들어&lt;a href=&quot;http://httpd.apache.org/docs/current/en/content-negotiation.html#algorithm&quot;&gt;Apache 협상 알고리즘&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6df737fe0a6a8b38fe1752df0541af98393864b5" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;server-driven content negotiation&lt;/em&gt;, or proactive content negotiation, the browser (or any other kind of user-agent) sends several HTTP headers along with the URL. These headers describe the preferred choice of the user. The server uses them as hints and an internal algorithm chooses the best content to serve to the client. The algorithm is server-specific and not defined in the standard. See, for example, the &lt;a href=&quot;http://httpd.apache.org/docs/2.2/en/content-negotiation.html#algorithm&quot;&gt;Apache 2.2 negotiation algorithm&lt;/a&gt;.</source>
          <target state="translated">에서 &lt;em&gt;서버가 주도하는 내용 협상&lt;/em&gt; , 또는 사전 내용 협상 브라우저 (또는 사용자 에이전트의 다른 종류)는 URL과 함께 여러 HTTP 헤더를 보냅니다. 이 헤더는 선호하는 사용자 선택을 설명합니다. 서버는이 정보를 힌트로 사용하고 내부 알고리즘은 클라이언트에게 제공 할 최상의 콘텐츠를 선택합니다. 이 알고리즘은 서버마다 다르며 표준에 정의되어 있지 않습니다. 예를 들어 &lt;a href=&quot;http://httpd.apache.org/docs/2.2/en/content-negotiation.html#algorithm&quot;&gt;Apache 2.2 협상 알고리즘을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e9a7352b90de016d5e9b783df62c3686f4fe3ba" translate="yes" xml:space="preserve">
          <source>In Firefox 65 and earlier, this value can be modified using the &lt;a href=&quot;http://kb.mozillazine.org/Network.http.accept.default&quot;&gt;&lt;code&gt;network.http.accept.default&lt;/code&gt;&lt;/a&gt; parameter. (&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/modules/libpref/init/all.js#l1750&quot;&gt;source)&lt;/a&gt;</source>
          <target state="translated">Firefox 65 및 이전 버전에서는 &lt;a href=&quot;http://kb.mozillazine.org/Network.http.accept.default&quot;&gt; &lt;code&gt;network.http.accept.default&lt;/code&gt; &lt;/a&gt; 매개 변수를 사용하여이 값을 수정할 수 있습니다 . ( &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/file/tip/modules/libpref/init/all.js#l1750&quot;&gt;출처)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36ba735989d6fe47e4bb59a9a9e8824168509fbe" translate="yes" xml:space="preserve">
          <source>In Firefox 66, the default &lt;code&gt;Accept&lt;/code&gt; header value changed to &lt;code&gt;*/*&lt;/code&gt;.</source>
          <target state="translated">Firefox 66에서 기본 &lt;code&gt;Accept&lt;/code&gt; 헤더 값이 &lt;code&gt;*/*&lt;/code&gt; 로 변경되었습니다. .</target>
        </trans-unit>
        <trans-unit id="b8513ce94ddf5be70926f38324a0c5067702e67d" translate="yes" xml:space="preserve">
          <source>In Firefox, the preference that disables CORS is &lt;code&gt;content.cors.disable&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; disables CORS, so whenever that's the case, CORS requests will always fail with this error.</source>
          <target state="translated">Firefox에서 CORS를 사용하지 않는 환경 설정은 &lt;code&gt;content.cors.disable&lt;/code&gt; 입니다. 이 값을 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 CORS가 비활성화되므로 이러한 경우 CORS 요청은 항상이 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="77ae93055516fe4030d75a83ef29b37fe614cda5" translate="yes" xml:space="preserve">
          <source>In HTTP, a redirection is triggered by the server by sending special responses to a request: &lt;em&gt;redirects&lt;/em&gt;. HTTP redirects are responses with a status code of &lt;code&gt;3xx&lt;/code&gt;. A browser, when receiving a redirect response, uses the new URL provided and immediately loads it: most of the time, the redirection is transparent to the user, besides a small performance hit.</source>
          <target state="translated">HTTP에서 리디렉션은 요청에 특별한 응답을 보내어 서버에 의해 트리거됩니다 : &lt;em&gt;redirects&lt;/em&gt; . HTTP 리디렉션은 상태 코드가 &lt;code&gt;3xx&lt;/code&gt; 인 응답입니다 . 브라우저는 리디렉션 응답을받을 때 제공된 새 URL을 사용하여 즉시로드합니다. 대부분의 경우 리디렉션은 약간의 성능 저하 외에 사용자에게 투명합니다.</target>
        </trans-unit>
        <trans-unit id="de2ff1ebd7f691f8616060d0addc5c76e9eb2d6a" translate="yes" xml:space="preserve">
          <source>In HTTP, redirection is triggered by a server sending a special &lt;em&gt;redirect&lt;/em&gt; response to a request. Redirect responses have &lt;a href=&quot;status&quot;&gt;status codes&lt;/a&gt; that start with &lt;code&gt;3&lt;/code&gt;, and a &lt;a href=&quot;headers/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; header holding the URL to redirect to.</source>
          <target state="translated">HTTP에서 리디렉션은 요청에 대한 특수 &lt;em&gt;리디렉션&lt;/em&gt; 응답을 보내는 서버에 의해 트리거됩니다 . 리디렉션 응답에는 &lt;code&gt;3&lt;/code&gt; 으로 시작하는 &lt;a href=&quot;status&quot;&gt;상태 코드&lt;/a&gt; 와 &lt;a href=&quot;headers/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; 리디렉션 할 URL이 포함 헤더가 있습니다.</target>
        </trans-unit>
        <trans-unit id="37f3f173cc83c393621e6b6a49dbe5d27a1b2c33" translate="yes" xml:space="preserve">
          <source>In HTTP/1.0, each connection is established by the client prior to
   the request and closed by the server after sending the response.
   However, some implementations implement the explicitly negotiated
   (&quot;Keep-Alive&quot;) version of persistent connections described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;19.7.1 of [RFC2068]&lt;/a&gt;.

   Some clients and servers might wish to be compatible with these
   previous approaches to persistent connections, by explicitly
   negotiating for them with a &quot;Connection: keep-alive&quot; request header
   field.  However, some experimental implementations of HTTP/1.0
   persistent connections are faulty; for example, if an HTTP/1.0 proxy
   server doesn't understand Connection, it will erroneously forward
   that header field to the next inbound server, which would result in a
   hung connection.

   One attempted solution was the introduction of a Proxy-Connection
   header field, targeted specifically at proxies.  In practice, this
   was also unworkable, because proxies are often deployed in multiple
   layers, bringing about the same problem discussed above.

   As a result, clients are encouraged not to send the Proxy-Connection
   header field in any requests.

   Clients are also encouraged to consider the use of Connection:
   keep-alive in requests carefully; while they can enable persistent
   connections with HTTP/1.0 servers, clients using them will need to
   monitor the connection for &quot;hung&quot; requests (which indicate that the
   client ought stop sending the header field), and this mechanism ought
   not be used by clients at all when a proxy is being used.</source>
          <target state="translated">HTTP / 1.0에서 각 연결은 요청 전에 클라이언트에 의해 설정되고 응답을 보낸 후 서버에 의해 닫힙니다. 그러나 일부 구현 &lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;은 [RFC2068]의 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068#section-19.7.1&quot;&gt;섹션 &lt;/a&gt;19.7.1에 설명 된 명시 적 협상 ( &quot;Keep-Alive&quot;) 영구 연결 버전을 구현합니다 .. 일부 클라이언트 및 서버는 &quot;연결 : 연결 유지&quot;요청 헤더 필드를 사용하여 명시 적으로 협상하여 이전 연결의 영구 연결 방식과 호환되기를 원할 수 있습니다. 그러나 일부 실험적인 HTTP / 1.0 영구 연결 구현에는 결함이 있습니다. 예를 들어, HTTP / 1.0 프록시 서버가 연결을 이해하지 못하면 해당 헤더 필드를 다음 인바운드 서버로 잘못 전달하여 연결이 정지됩니다. 시도 된 솔루션 중 하나는 프록시를 대상으로하는 프록시 연결 헤더 필드의 도입이었습니다. 실제로 프록시는 종종 여러 계층으로 배포되어 위에서 설명한 것과 동일한 문제가 발생하기 때문에이 또한 실행 불가능했습니다. 결과적으로클라이언트는 요청에 Proxy-Connection 헤더 필드를 보내지 않는 것이 좋습니다. 고객은 또한 Connection의 사용을 고려할 것을 권장합니다. HTTP / 1.0 서버와의 지속적인 연결을 활성화 할 수 있지만,이를 사용하는 클라이언트는 &quot;중단 된&quot;요청 (클라이언트가 헤더 필드 전송을 중지해야 함을 나타냄)에 대한 연결을 모니터링해야하며이 메커니즘은 클라이언트에서 사용하지 않아야합니다. 프록시가 사용될 때 모두.요청 (클라이언트가 헤더 필드 전송을 중지해야 함을 나타냄)과 프록시가 사용될 때 클라이언트가이 메커니즘을 전혀 사용하지 않아야합니다.요청 (클라이언트가 헤더 필드 전송을 중지해야 함을 나타냄)과 프록시가 사용될 때 클라이언트가이 메커니즘을 전혀 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="9ffd86097b1c5adb86cfedee2cc99d4dbaaa41d5" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, an HTTP client is unable to retry a non-idempotent
   request when an error occurs because there is no means to determine
   the nature of the error.  It is possible that some server processing
   occurred prior to the error, which could result in undesirable
   effects if the request were reattempted.

   HTTP/2 provides two mechanisms for providing a guarantee to a client
   that a request has not been processed:

   o  The GOAWAY frame indicates the highest stream number that might
      have been processed.  Requests on streams with higher numbers are
      therefore guaranteed to be safe to retry.

   o  The REFUSED_STREAM error code can be included in a RST_STREAM
      frame to indicate that the stream is being closed prior to any
      processing having occurred.  Any request that was sent on the
      reset stream can be safely retried.

   Requests that have not been processed have not failed; clients MAY
   automatically retry them, even those with non-idempotent methods.

   A server MUST NOT indicate that a stream has not been processed
   unless it can guarantee that fact.  If frames that are on a stream
   are passed to the application layer for any stream, then
   REFUSED_STREAM MUST NOT be used for that stream, and a GOAWAY frame
   MUST include a stream identifier that is greater than or equal to the
   given stream identifier.

   In addition to these mechanisms, the PING frame provides a way for a
   client to easily test a connection.  Connections that remain idle can
   become broken as some middleboxes (for instance, network address
   translators or load balancers) silently discard connection bindings.
   The PING frame allows a client to safely test whether a connection is
   still active without sending a request.</source>
          <target state="translated">HTTP / 1.1에서 HTTP 클라이언트는 오류의 성격을 확인할 수단이 없기 때문에 오류가 발생할 때 비멱 등성 요청을 재 시도 할 수 없습니다. 오류 이전에 일부 서버 처리가 발생했을 수 있으며, 이로 인해 요청을 다시 시도하면 원하지 않는 결과가 발생할 수 있습니다. HTTP / 2는 클라이언트에게 요청이 처리되지 않았 음을 보증하는 두 가지 메커니즘을 제공합니다. o GOAWAY 프레임은 처리되었을 수있는 가장 높은 스트림 번호를 나타냅니다. 따라서 더 높은 수의 스트림에 대한 요청은 다시 시도해도 안전합니다. o REFUSED_STREAM 오류 코드는 RST_STREAM 프레임에 포함되어 처리가 발생하기 전에 스트림이 닫히고 있음을 나타낼 수 있습니다. 재설정 스트림에서 전송 된 모든 요청은 안전하게 재 시도 할 수 있습니다.처리되지 않은 요청은 실패하지 않았습니다. 클라이언트는 멱 등성이 아닌 방법을 사용하더라도 자동으로 다시 시도 할 수 있습니다. 서버는 그 사실을 보장 할 수없는 한 스트림이 처리되지 않았 음을 나타내서는 안됩니다. 스트림에있는 프레임이 스트림에 대한 애플리케이션 계층으로 전달되면 해당 스트림에 대해 REFUSED_STREAM을 사용해서는 안되며 GOAWAY 프레임은 주어진 스트림 식별자보다 크거나 같은 스트림 식별자를 포함해야합니다. 이러한 메커니즘 외에도 PING 프레임은 클라이언트가 연결을 쉽게 테스트 할 수있는 방법을 제공합니다. 유휴 상태로 남아있는 연결은 일부 미들 박스 (예 : 네트워크 주소 변환기 또는로드 밸런서)가 연결 바인딩을 자동으로 삭제하므로 끊어 질 수 있습니다.PING 프레임을 사용하면 클라이언트가 요청을 보내지 않고도 연결이 여전히 활성 상태인지 여부를 안전하게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252a80be2932a5745af0ff3008231856ec0831a7" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, method parameter information was exclusively encoded in
   HTTP headers.  Unlike HTTP/1.1, WebDAV encodes method parameter
   information either in an XML ([&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;]) request entity body, or in
   an HTTP header.  The use of XML to encode method parameters was
   motivated by the ability to add extra XML elements to existing
   structures, providing extensibility; and by XML's ability to encode
   information in ISO 10646 character sets, providing
   internationalization support.

   In addition to encoding method parameters, XML is used in WebDAV to
   encode the responses from methods, providing the extensibility and
   internationalization advantages of XML for method output, as well as
   input.

   When XML is used for a request or response body, the Content-Type
   type SHOULD be application/xml.  Implementations MUST accept both
   text/xml and application/xml in request and response bodies.  Use of
   text/xml is deprecated.

   All DAV-compliant clients and resources MUST use XML parsers that are
   compliant with [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;] and [&lt;a href=&quot;#ref-REC-XML-NAMES&quot;&gt;REC-XML-NAMES&lt;/a&gt;].  All XML used in either
   requests or responses MUST be, at minimum, well formed and use
   namespaces correctly.  If a server receives XML that is not well-
   formed, then the server MUST reject the entire request with a 400
   (Bad Request).  If a client receives XML that is not well-formed in a
   response, then the client MUST NOT assume anything about the outcome
   of the executed method and SHOULD treat the server as malfunctioning.

   Note that processing XML submitted by an untrusted source may cause
   risks connected to privacy, security, and service quality (see
   &lt;a href=&quot;#section-20&quot;&gt;Section 20&lt;/a&gt;).  Servers MAY reject questionable requests (even though
   they consist of well-formed XML), for instance, with a 400 (Bad
   Request) status code and an optional response body explaining the
   problem.</source>
          <target state="translated">HTTP / 1.1에서는 메소드 매개 변수 정보가 독점적으로 HTTP 헤더로 인코딩되었습니다. HTTP / 1.1과 달리 WebDAV는 메소드 매개 변수 정보를 XML ([ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML)로&lt;/a&gt; 인코딩 합니다.]) 요청 엔터티 본문 또는 HTTP 헤더에서. 메소드 매개 변수를 인코딩하기 위해 XML을 사용하는 것은 기존 구조에 여분의 XML 요소를 추가하여 확장 성을 제공함으로써 가능했습니다. 국제화 지원을 제공하는 ISO 10646 문자 세트로 정보를 인코딩하는 XML의 기능에 의해. 메소드 매개 변수 인코딩 외에도 XML은 WebDAV에서 메소드의 응답을 인코딩하는 데 사용되어 메소드 출력 및 입력에 대한 XML의 확장 성 및 국제화 이점을 제공합니다. 요청 또는 응답 본문에 XML을 사용하는 경우 Content-Type 유형은 application / xml이어야합니다. 구현은 요청 및 응답 본문에서 text / xml 및 application / xml을 모두 수용해야합니다. text / xml 사용은 더 이상 사용되지 않습니다.모든 DAV 호환 클라이언트 및 리소스는 [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ] 및 [ &lt;a href=&quot;#ref-REC-XML-NAMES&quot;&gt;REC-XML-NAMES&lt;/a&gt; ]. 요청 또는 응답에 사용 된 모든 XML은 최소한 잘 구성되고 네임 스페이스를 올바르게 사용해야합니다. 서버가 제대로 구성되지 않은 XML을 수신하면 서버는 400 (잘못된 요청)으로 전체 요청을 거부해야합니다. 만약 클라이언트가 응답에서 잘 구성되지 않은 XML을 수신한다면, 클라이언트는 실행 된 메소드의 결과에 대해 어떠한 것도 가정해서는 안되며 서버를 오작동으로 취급해야한다. 신뢰할 수없는 출처에서 제출 한 XML을 처리하면 개인 정보 보호, 보안 및 서비스 품질과 관련된 위험이 발생할 수 있습니다 ( &lt;a href=&quot;#section-20&quot;&gt;섹션 20&lt;/a&gt; 참조). ). 서버는 예를 들어 400 (잘못된 요청) 상태 코드와 문제를 설명하는 선택적 응답 본문을 사용하여 문제가있는 요청 (예 : 제대로 구성된 XML로 구성되어 있음)을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04b117019d6e8bc547e56f34a1e382befb6df3b1" translate="yes" xml:space="preserve">
          <source>In HTTP/1.1, persistence is the default, and the header is no longer needed (but it is often added as a defensive measure against cases requiring a fallback to HTTP/1.0).</source>
          <target state="translated">HTTP / 1.1에서는 지속성이 기본값이며 헤더가 더 이상 필요하지 않지만 HTTP / 1.0으로 대체해야하는 경우에 대한 방어 수단으로 추가되는 경우가 많습니다.</target>
        </trans-unit>
        <trans-unit id="d692e156c4939ed8150ce5ebd6b39b65ad2fc836" translate="yes" xml:space="preserve">
          <source>In HTTP/1.x, the pseudo-method CONNECT (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], Section&amp;nbsp;4.3.6&lt;/a&gt;) is
   used to convert an HTTP connection into a tunnel to a remote host.
   CONNECT is primarily used with HTTP proxies to establish a TLS
   session with an origin server for the purposes of interacting with
   &quot;https&quot; resources.

   In HTTP/2, the CONNECT method is used to establish a tunnel over a
   single HTTP/2 stream to a remote host for similar purposes.  The HTTP
   header field mapping works as defined in &lt;a href=&quot;#section-8.1.2.3&quot;&gt;Section 8.1.2.3&lt;/a&gt; (&quot;Request
   Pseudo-Header Fields&quot;), with a few differences.  Specifically:

   o  The &quot;:method&quot; pseudo-header field is set to &quot;CONNECT&quot;.

   o  The &quot;:scheme&quot; and &quot;:path&quot; pseudo-header fields MUST be omitted.

   o  The &quot;:authority&quot; pseudo-header field contains the host and port to
      connect to (equivalent to the authority-form of the request-target
      of CONNECT requests (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;[RFC7230], Section&amp;nbsp;5.3&lt;/a&gt;)).

   A CONNECT request that does not conform to these restrictions is
   malformed (&lt;a href=&quot;#section-8.1.2.6&quot;&gt;Section 8.1.2.6&lt;/a&gt;).

   A proxy that supports CONNECT establishes a TCP connection [&lt;a href=&quot;#ref-TCP&quot;&gt;TCP&lt;/a&gt;] to
   the server identified in the &quot;:authority&quot; pseudo-header field.  Once
   this connection is successfully established, the proxy sends a
   HEADERS frame containing a 2xx series status code to the client, as
   defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], Section&amp;nbsp;4.3.6&lt;/a&gt;.

   After the initial HEADERS frame sent by each peer, all subsequent
   DATA frames correspond to data sent on the TCP connection.  The
   payload of any DATA frames sent by the client is transmitted by the
   proxy to the TCP server; data received from the TCP server is
   assembled into DATA frames by the proxy.  Frame types other than DATA
   or stream management frames (RST_STREAM, WINDOW_UPDATE, and PRIORITY)
   MUST NOT be sent on a connected stream and MUST be treated as a
   stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) if received.

   The TCP connection can be closed by either peer.  The END_STREAM flag
   on a DATA frame is treated as being equivalent to the TCP FIN bit.  A
   client is expected to send a DATA frame with the END_STREAM flag set
   after receiving a frame bearing the END_STREAM flag.  A proxy that
   receives a DATA frame with the END_STREAM flag set sends the attached
   data with the FIN bit set on the last TCP segment.  A proxy that
   receives a TCP segment with the FIN bit set sends a DATA frame with
   the END_STREAM flag set.  Note that the final TCP segment or DATA
   frame could be empty. 

   A TCP connection error is signaled with RST_STREAM.  A proxy treats
   any error in the TCP connection, which includes receiving a TCP
   segment with the RST bit set, as a stream error (&lt;a href=&quot;#section-5.4.2&quot;&gt;Section 5.4.2&lt;/a&gt;) of
   type CONNECT_ERROR.  Correspondingly, a proxy MUST send a TCP segment
   with the RST bit set if it detects an error with the stream or the
   HTTP/2 connection.</source>
          <target state="translated">HTTP / 1.x에서 의사 방법 CONNECT ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], 섹션 4.3.6&lt;/a&gt; )는 HTTP 연결을 원격 호스트에 대한 터널로 변환하는 데 사용됩니다. CONNECT는 주로 HTTP 프록시와 함께 사용되어 &quot;https&quot;리소스와 상호 작용할 목적으로 오리진 서버와 TLS 세션을 설정합니다. HTTP / 2에서 CONNECT 메서드는 유사한 목적을 위해 단일 HTTP / 2 스트림을 통해 원격 호스트에 대한 터널을 설정하는 데 사용됩니다. HTTP 헤더 필드 매핑은 &lt;a href=&quot;#section-8.1.2.3&quot;&gt;섹션 8.1.2.3에&lt;/a&gt; 정의 된대로 작동합니다.( &quot;의사 헤더 필드 요청&quot;), 몇 가지 차이점이 있습니다. 특히 : o &quot;: method&quot;의사 헤더 필드는 &quot;CONNECT&quot;로 설정됩니다. o &quot;: scheme&quot;및 &quot;: path&quot;의사 헤더 필드는 반드시 생략해야합니다. o &quot;: authority&quot;의사 헤더 필드에는 연결할 호스트와 포트가 포함됩니다 (CONNECT 요청의 요청 대상의 권한 형식과 동일합니다 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.3&quot;&gt;[RFC7230], 섹션 5.3 참조&lt;/a&gt; )). 이러한 제한을 따르지 않는 CONNECT 요청은 잘못된 형식입니다 ( &lt;a href=&quot;#section-8.1.2.6&quot;&gt;8.1.2.6 절&lt;/a&gt; ). CONNECT를 지원하는 프록시 는 &quot;: authority&quot;의사 헤더 필드에 식별 된 서버에 대한 TCP 연결 [ &lt;a href=&quot;#ref-TCP&quot;&gt;TCP&lt;/a&gt; ]을 설정합니다. 이 연결이 성공적으로 설정되면프록시는 다음에 정의 된대로 2xx 시리즈 상태 코드가 포함 된 HEADERS 프레임을 클라이언트에 보냅니다.&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.3.6&quot;&gt;[RFC7231], 섹션 4.3.6&lt;/a&gt; . 각 피어가 보낸 초기 HEADERS 프레임 이후에 모든 후속 DATA 프레임은 TCP 연결에서 보낸 데이터에 해당합니다. 클라이언트가 전송 한 모든 DATA 프레임의 페이로드는 프록시에 의해 TCP 서버로 전송됩니다. TCP 서버에서 수신 한 데이터는 프록시에 의해 DATA 프레임으로 조합됩니다. DATA 또는 스트림 관리 프레임 (RST_STREAM, WINDOW_UPDATE 및 PRIORITY) 이외의 프레임 유형은 연결된 스트림에서 전송되지 않아야하며 스트림 오류로 처리되어야합니다 ( &lt;a href=&quot;#section-5.4.2&quot;&gt;섹션 5.4.2&lt;/a&gt;) 수신 된 경우. TCP 연결은 두 피어 중 하나에서 닫을 수 있습니다. DATA 프레임의 END_STREAM 플래그는 TCP FIN 비트와 동일한 것으로 처리됩니다. 클라이언트는 END_STREAM 플래그가있는 프레임을 수신 한 후 END_STREAM 플래그가 설정된 DATA 프레임을 보내야합니다. END_STREAM 플래그가 설정된 DATA 프레임을 수신하는 프록시는 마지막 TCP 세그먼트에 설정된 FIN 비트와 함께 첨부 된 데이터를 보냅니다. FIN 비트가 설정된 TCP 세그먼트를 수신하는 프록시는 END_STREAM 플래그가 설정된 DATA 프레임을 보냅니다. 최종 TCP 세그먼트 또는 DATA 프레임은 비어있을 수 있습니다. TCP 연결 오류는 RST_STREAM으로 신호를 보냅니다. 프록시는 RST 비트가 설정된 TCP 세그먼트 수신을 포함하는 TCP 연결의 모든 오류를 스트림 오류로 처리합니다 ( &lt;a href=&quot;#section-5.4.2&quot;&gt;섹션 5.4.2&lt;/a&gt;) CONNECT_ERROR 유형입니다. 이에 따라 프록시는 스트림 또는 HTTP / 2 연결에서 오류를 감지하면 RST 비트가 설정된 TCP 세그먼트를 전송해야합니다.</target>
        </trans-unit>
        <trans-unit id="7dad8ae742410e88380cfba396cb4fa1d4e9131d" translate="yes" xml:space="preserve">
          <source>In HTTP/2 - the &lt;code&gt;TE&lt;/code&gt; header field is only accepted if the &lt;code&gt;trailers&lt;/code&gt; value is set.</source>
          <target state="translated">HTTP / 2에서 &lt;code&gt;TE&lt;/code&gt; 헤더 필드는 &lt;code&gt;trailers&lt;/code&gt; 값이 설정된 경우에만 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0d7657f51a7437fb2490923cf1c33fdce91a2c29" translate="yes" xml:space="preserve">
          <source>In HTTP/2, each endpoint is required to send a connection preface as
   a final confirmation of the protocol in use and to establish the
   initial settings for the HTTP/2 connection.  The client and server
   each send a different connection preface.

   The client connection preface starts with a sequence of 24 octets,
   which in hex notation is:

     0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a

   That is, the connection preface starts with the string &quot;PRI *
   HTTP/2.0\r\n\r\nSM\r\n\r\n&quot;).  This sequence MUST be followed by a
   SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;), which MAY be empty.  The client sends
   the client connection preface immediately upon receipt of a 101
   (Switching Protocols) response (indicating a successful upgrade) or
   as the first application data octets of a TLS connection.  If
   starting an HTTP/2 connection with prior knowledge of server support
   for the protocol, the client connection preface is sent upon
   connection establishment.

      Note: The client connection preface is selected so that a large
      proportion of HTTP/1.1 or HTTP/1.0 servers and intermediaries do
      not attempt to process further frames.  Note that this does not
      address the concerns raised in [&lt;a href=&quot;#ref-TALKING&quot;&gt;TALKING&lt;/a&gt;].

   The server connection preface consists of a potentially empty
   SETTINGS frame (&lt;a href=&quot;#section-6.5&quot;&gt;Section 6.5&lt;/a&gt;) that MUST be the first frame the server
   sends in the HTTP/2 connection.

   The SETTINGS frames received from a peer as part of the connection
   preface MUST be acknowledged (see &lt;a href=&quot;#section-6.5.3&quot;&gt;Section 6.5.3&lt;/a&gt;) after sending the
   connection preface. 

   To avoid unnecessary latency, clients are permitted to send
   additional frames to the server immediately after sending the client
   connection preface, without waiting to receive the server connection
   preface.  It is important to note, however, that the server
   connection preface SETTINGS frame might include parameters that
   necessarily alter how a client is expected to communicate with the
   server.  Upon receiving the SETTINGS frame, the client is expected to
   honor any parameters established.  In some configurations, it is
   possible for the server to transmit SETTINGS before the client sends
   additional frames, providing an opportunity to avoid this issue.

   Clients and servers MUST treat an invalid connection preface as a
   connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type PROTOCOL_ERROR.  A GOAWAY
   frame (&lt;a href=&quot;#section-6.8&quot;&gt;Section 6.8&lt;/a&gt;) MAY be omitted in this case, since an invalid
   preface indicates that the peer is not using HTTP/2.</source>
          <target state="translated">HTTP / 2에서 각 엔드 포인트는 사용중인 프로토콜의 최종 확인으로 연결 머리말을 전송하고 HTTP / 2 연결에 대한 초기 설정을 구성해야합니다. 클라이언트와 서버는 각각 다른 연결 서문을 보냅니다. 클라이언트 연결 머리말은 24 옥텟의 시퀀스로 시작하며 16 진수 표기법은 다음과 같습니다. 0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a 즉, 연결 머리말은 문자열 &quot;PRI * HTTP / 2.0 \ r \ n \ r \ nSM \ r \ n \ r \ 엔&quot;). 이 시퀀스 뒤에는 반드시 SETTINGS 프레임이 와야합니다 ( &lt;a href=&quot;#section-6.5&quot;&gt;섹션 6.5&lt;/a&gt;), 비어있을 수 있습니다. 클라이언트는 101 (Switching Protocols) 응답 (성공적인 업그레이드 표시)을 받거나 TLS 연결의 첫 번째 애플리케이션 데이터 옥텟으로 클라이언트 연결 서문을 즉시 보냅니다. 프로토콜에 대한 서버 지원에 대한 사전 지식으로 HTTP / 2 연결을 시작하는 경우 연결 설정시 클라이언트 연결 머리말이 전송됩니다. 참고 : HTTP / 1.1 또는 HTTP / 1.0 서버 및 중개자의 많은 부분이 추가 프레임 처리를 시도하지 않도록 클라이언트 연결 머리말이 선택됩니다. 이것은 [ &lt;a href=&quot;#ref-TALKING&quot;&gt;TALKING&lt;/a&gt; ] 에서 제기 된 문제를 해결하지 않습니다 . 서버 연결 머리말은 잠재적으로 비어있는 SETTINGS 프레임으로 구성됩니다 ( &lt;a href=&quot;#section-6.5&quot;&gt;섹션 6.5&lt;/a&gt;) HTTP / 2 연결에서 서버가 보내는 첫 번째 프레임이어야합니다. 연결 서문의 일부로 피어로부터 수신 된 SETTINGS 프레임을 확인해야합니다 ( &lt;a href=&quot;#section-6.5.3&quot;&gt;섹션 6.5.3&lt;/a&gt; 참조).) 연결 서문을 보낸 후. 불필요한 대기 시간을 피하기 위해 클라이언트는 서버 연결 머리말을 받기를 기다리지 않고 클라이언트 연결 머리말을 보낸 후 즉시 서버에 추가 프레임을 보낼 수 있습니다. 그러나 서버 연결 서문 SETTINGS 프레임에는 클라이언트가 서버와 통신 할 것으로 예상되는 방식을 반드시 변경하는 매개 변수가 포함될 수 있습니다. SETTINGS 프레임을 수신하면 클라이언트는 설정된 모든 매개 변수를 준수해야합니다. 일부 구성에서는 클라이언트가 추가 프레임을 보내기 전에 서버가 SETTINGS를 전송할 수 있으므로이 문제를 방지 할 수 있습니다. 클라이언트와 서버는 유효하지 않은 연결 서문을 연결 오류로 취급해야합니다 ( &lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt;) PROTOCOL_ERROR 유형입니다. 유효하지 않은 서문이 피어가 HTTP / 2를 사용하지 않음을 나타 내기 때문에 GOAWAY 프레임 ( &lt;a href=&quot;#section-6.8&quot;&gt;섹션 6.8&lt;/a&gt; )은이 경우 생략 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf70ecd71ae33feef50c75a643497aa1f8c4c6bc" translate="yes" xml:space="preserve">
          <source>In IIS, you use the &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpredirect&quot;&gt;&amp;lt;httpRedirect&amp;gt;&lt;/a&gt;&lt;/code&gt; element to configure redirections.</source>
          <target state="translated">IIS에서는 &lt;code&gt;&lt;a href=&quot;https://www.iis.net/configreference/system.webserver/httpredirect&quot;&gt;&amp;lt;httpRedirect&amp;gt;&lt;/a&gt;&lt;/code&gt; 요소를 사용하여 리디렉션을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a73ab14a2ec5bf02be9050f108c718d592c94a24" translate="yes" xml:space="preserve">
          <source>In Nginx, you create a specific server block for the content you want to redirect:</source>
          <target state="translated">Nginx에서 리디렉션하려는 콘텐츠에 대한 특정 서버 블록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="24471cf4aea973802e7f0eb0517d9a17c92a5dcd" translate="yes" xml:space="preserve">
          <source>In PROPFIND responses, information about individual properties is
   returned inside 'propstat' elements (see &lt;a href=&quot;#section-14.22&quot;&gt;Section 14.22&lt;/a&gt;), each
   containing an individual 'status' element containing information
   about the properties appearing in it.  The list below summarizes the
   most common status codes used inside 'propstat'; however, clients
   should be prepared to handle other 2/3/4/5xx series status codes as
   well.

   200 OK - A property exists and/or its value is successfully returned.

   401 Unauthorized - The property cannot be viewed without appropriate
   authorization.

   403 Forbidden - The property cannot be viewed regardless of
   authentication.

   404 Not Found - The property does not exist.</source>
          <target state="translated">PROPFIND 응답에서 개별 속성에 대한 정보는 'propstat'요소 ( &lt;a href=&quot;#section-14.22&quot;&gt;섹션 14.22&lt;/a&gt; 참조) 내에 반환 되며 각 속성에는 속성에 나타나는 속성에 대한 정보가 포함 된 개별 'status'요소가 포함됩니다. 아래 목록은 'propstat'에 사용 된 가장 일반적인 상태 코드를 요약 한 것입니다. 그러나 클라이언트는 다른 2 / 3 / 4 / 5xx 시리즈 상태 코드도 처리 할 수 ​​있도록 준비해야합니다. 200 OK-속성이 존재하거나 값이 성공적으로 반환되었습니다. 401 Unauthorized-권한이 없으면 속성을 볼 수 없습니다. 403 금지-인증에 관계없이 속성을 볼 수 없습니다. 404 찾을 수 없음-속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="86628559f615b8ba5dc79d241d665acce969377c" translate="yes" xml:space="preserve">
          <source>In PROPPATCH responses, information about individual properties is
   returned inside 'propstat' elements (see &lt;a href=&quot;#section-14.22&quot;&gt;Section 14.22&lt;/a&gt;), each
   containing an individual 'status' element containing information
   about the properties appearing in it.  The list below summarizes the
   most common status codes used inside 'propstat'; however, clients
   should be prepared to handle other 2/3/4/5xx series status codes as
   well. 

   200 (OK) - The property set or change succeeded.  Note that if this
   appears for one property, it appears for every property in the
   response, due to the atomicity of PROPPATCH.

   403 (Forbidden) - The client, for reasons the server chooses not to
   specify, cannot alter one of the properties.

   403 (Forbidden): The client has attempted to set a protected
   property, such as DAV:getetag.  If returning this error, the server
   SHOULD use the precondition code 'cannot-modify-protected-property'
   inside the response body.

   409 (Conflict) - The client has provided a value whose semantics are
   not appropriate for the property.

   424 (Failed Dependency) - The property change could not be made
   because of another property change that failed.

   507 (Insufficient Storage) - The server did not have sufficient space
   to record the property.</source>
          <target state="translated">PROPPATCH 응답에서 개별 속성에 대한 정보는 'propstat'요소 내에 반환됩니다 ( &lt;a href=&quot;#section-14.22&quot;&gt;섹션 14.22&lt;/a&gt; 참조).), 각 속성에는 속성에 대한 정보가 포함 된 개별 'status'요소가 포함되어 있습니다. 아래 목록은 'propstat'에 사용 된 가장 일반적인 상태 코드를 요약 한 것입니다. 그러나 클라이언트는 다른 2 / 3 / 4 / 5xx 시리즈 상태 코드도 처리 할 수 ​​있도록 준비해야합니다. 200 (OK)-속성 세트 또는 변경에 성공했습니다. 이것이 하나의 특성에 대해 나타나는 경우 PROPPATCH의 원 자성으로 인해 응답의 모든 특성에 대해 나타납니다. 403 (Forbidden)-서버가 지정하지 않기 때문에 클라이언트가 속성 중 하나를 변경할 수 없습니다. 403 (Forbidden) : 클라이언트가 DAV : getetag와 같은 보호 된 속성을 설정하려고했습니다. 이 오류를 반환하는 경우 서버는 사전 조건 코드 '수정할 수없는 보호 된 속성'을 사용해야합니다.응답 본문 내부. 409 (충돌)-클라이언트가 시맨틱이 특성에 적합하지 않은 값을 제공했습니다. 424 (실패 종속성)-실패한 다른 속성 변경으로 인해 속성을 변경할 수 없습니다. 507 (저장소 부족)-서버에 속성을 기록 할 공간이 충분하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4287fa4592630c32398d87b197eab0ac7661318b" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; request, resulting from an HTML form submission, the &lt;code&gt;Content-Type&lt;/code&gt; of the request is specified by the &lt;code&gt;enctype&lt;/code&gt; attribute on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">A의 &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; 의&lt;/a&gt; 요청, HTML 양식 제출에서의 결과로, &lt;code&gt;Content-Type&lt;/code&gt; 을 요청이 지정됩니다 &lt;code&gt;enctype&lt;/code&gt; 온 속성 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소입니다.</target>
        </trans-unit>
        <trans-unit id="b96a6a626ade04f611b917e292048082979c2db6" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;cors#Simple_requests&quot;&gt;Simple Request&lt;/a&gt; scenario, the request will be sent with Cookies (e.g. if the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;withCredentials&lt;/a&gt;&lt;/code&gt; flag is set on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;). If the server responds with &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; attached to the credentialed response, then the response is accepted by the client and exposed to web content. In a &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;Preflighted Request&lt;/a&gt;, the server can respond with &lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; to the &lt;code&gt;OPTIONS&lt;/code&gt; request.</source>
          <target state="translated">A의 &lt;a href=&quot;cors#Simple_requests&quot;&gt;단순 요청&lt;/a&gt; 시나리오, 요청이 쿠키로 전송됩니다 (예 경우 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;withCredentials&lt;/a&gt;&lt;/code&gt; 의 플래그가 설정되어 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 의&lt;/a&gt; ). &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; 응답에 서버가 Access-Control-Allow-Credentials &lt;code&gt;: true&lt;/code&gt; 응답하면 응답이 클라이언트에 의해 수락되어 웹 콘텐츠에 노출됩니다. A의 &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;Preflighted 요청&lt;/a&gt; , 서버가 응답 할 수 &lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt; 받는 &lt;code&gt;OPTIONS&lt;/code&gt; 요청.</target>
        </trans-unit>
        <trans-unit id="268020b94aef4013d8492a7be59945867c54beea" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;multipart/form-data&lt;/code&gt; body, the HTTP &lt;code&gt;Content-Disposition&lt;/code&gt; general header is a header that can be used on the subpart of a multipart body to give information about the field it applies to. The subpart is delimited by the &lt;em&gt;boundary&lt;/em&gt; defined in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header. Used on the body itself, &lt;code&gt;Content-Disposition&lt;/code&gt; has no effect.</source>
          <target state="translated">A의 &lt;code&gt;multipart/form-data&lt;/code&gt; 본체는 HTTP의 &lt;code&gt;Content-Disposition&lt;/code&gt; 일반 헤더는 적용 분야에 대한 정보를 제공하는 다중 체의 서브 파트에 사용될 수있는 헤더이다. 하위 파트는 &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; 헤더에 정의 된 &lt;em&gt;경계&lt;/em&gt; 로 구분됩니다 . 본문 자체에 사용되는 &lt;code&gt;Content-Disposition&lt;/code&gt; 은 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="722fd850ce8884571159d774606e9c7c439cbf02" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;multipart/form-data&lt;/code&gt; body, the HTTP &lt;code&gt;Content-Disposition&lt;/code&gt; general header is a header that must be used on each subpart of a multipart body to give information about the field it applies to. The subpart is delimited by the &lt;em&gt;boundary&lt;/em&gt; defined in the &lt;a href=&quot;content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header. Used on the body itself, &lt;code&gt;Content-Disposition&lt;/code&gt; has no effect.</source>
          <target state="translated">A의 &lt;code&gt;multipart/form-data&lt;/code&gt; 본체는 HTTP의 &lt;code&gt;Content-Disposition&lt;/code&gt; 일반 헤더는 적용 분야에 대한 정보를 제공하는 다중 체의 각 서브 파트에서 사용되어야하는 헤더이다. 하위 부분은 &lt;a href=&quot;content-type&quot;&gt; &lt;code&gt;Content-Type&lt;/code&gt; &lt;/a&gt; 헤더에 정의 된 &lt;em&gt;경계&lt;/em&gt; 로 구분됩니다 . 본문 자체에 사용되는 &lt;code&gt;Content-Disposition&lt;/code&gt; 은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="205c117fa86b98a94b5278af3d27ff4834e8a8cf" translate="yes" xml:space="preserve">
          <source>In a Web page, using JavaScript</source>
          <target state="translated">웹 페이지에서 JavaScript를 사용하여</target>
        </trans-unit>
        <trans-unit id="761a2afb550fd29de9f2fe5ccca651beeaf9ee84" translate="yes" xml:space="preserve">
          <source>In a cross-protocol attack, an attacker causes a client to initiate a
   transaction in one protocol toward a server that understands a
   different protocol.  An attacker might be able to cause the
   transaction to appear as a valid transaction in the second protocol.
   In combination with the capabilities of the web context, this can be
   used to interact with poorly protected servers in private networks.

   Completing a TLS handshake with an ALPN identifier for HTTP/2 can be
   considered sufficient protection against cross-protocol attacks.
   ALPN provides a positive indication that a server is willing to
   proceed with HTTP/2, which prevents attacks on other TLS-based
   protocols.

   The encryption in TLS makes it difficult for attackers to control the
   data that could be used in a cross-protocol attack on a cleartext
   protocol.

   The cleartext version of HTTP/2 has minimal protection against cross-
   protocol attacks.  The connection preface (&lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;) contains a
   string that is designed to confuse HTTP/1.1 servers, but no special
   protection is offered for other protocols.  A server that is willing
   to ignore parts of an HTTP/1.1 request containing an Upgrade header
   field in addition to the client connection preface could be exposed
   to a cross-protocol attack.</source>
          <target state="translated">교차 프로토콜 공격에서 공격자는 클라이언트가 다른 프로토콜을 이해하는 서버를 향하여 한 프로토콜에서 트랜잭션을 시작하도록합니다. 공격자는 트랜잭션이 두 번째 프로토콜에서 유효한 트랜잭션으로 나타나도록 만들 수 있습니다. 웹 컨텍스트의 기능과 결합하여 개인 네트워크에서 제대로 보호되지 않는 서버와 상호 작용하는 데 사용할 수 있습니다. HTTP / 2 용 ALPN 식별자로 TLS 핸드 셰이크를 완료하는 것은 교차 프로토콜 공격에 대한 충분한 보호로 간주 될 수 있습니다. ALPN은 서버가 다른 TLS 기반 프로토콜에 대한 공격을 방지하는 HTTP / 2를 기꺼이 진행할 것이라는 긍정적 인 표시를 제공합니다. TLS의 암호화는 공격자가 일반 텍스트 프로토콜에 대한 교차 프로토콜 공격에 사용될 수있는 데이터를 제어하기 어렵게 만듭니다.HTTP / 2의 일반 텍스트 버전은 프로토콜 간 공격에 대한 최소한의 보호 기능을 제공합니다. 연결 서문 (&lt;a href=&quot;#section-3.5&quot;&gt;섹션 3.5&lt;/a&gt; )에는 HTTP / 1.1 서버를 혼동하도록 설계된 문자열이 포함되어 있지만 다른 프로토콜에 대해서는 특별한 보호가 제공되지 않습니다. 클라이언트 연결 서문 외에 업그레이드 헤더 필드가 포함 된 HTTP / 1.1 요청의 일부를 무시하려는 서버는 프로토콜 간 공격에 노출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="217ea5cca9699504b57fcecb48b0029845d1abba" translate="yes" xml:space="preserve">
          <source>In a nutshell</source>
          <target state="translated">간단히 말해서</target>
        </trans-unit>
        <trans-unit id="2761e7950da20aac090169d0c4a8c94e9c82afce" translate="yes" xml:space="preserve">
          <source>In a regular HTTP response, the &lt;code&gt;&lt;strong&gt;Content-Disposition&lt;/strong&gt;&lt;/code&gt; response header is a header indicating if the content is expected to be displayed &lt;em&gt;inline&lt;/em&gt; in the browser, that is, as a Web page or as part of a Web page, or as an &lt;em&gt;attachment&lt;/em&gt;, that is downloaded and saved locally.</source>
          <target state="translated">일반 HTTP 응답에서 &lt;code&gt;&lt;strong&gt;Content-Disposition&lt;/strong&gt;&lt;/code&gt; 응답 헤더는 컨텐츠가 브라우저에 &lt;em&gt;인라인&lt;/em&gt; 으로 표시되는지 , 즉 웹 페이지 또는 웹 페이지의 일부 또는 &lt;em&gt;첨부 파일&lt;/em&gt; 로 표시되는지를 나타내는 헤더 입니다. 다운로드되어 로컬에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="95ef9f1f98a924832244a2938c1f564593efc504" translate="yes" xml:space="preserve">
          <source>In addition to defining the HTTP/1.1 protocol, this document serves
   as the specification for the Internet media type &quot;message/http&quot; and
   &quot;application/http&quot;. The message/http type can be used to enclose a
   single HTTP request or response message, provided that it obeys the
   MIME restrictions for all &quot;message&quot; types regarding line length and
   encodings. The application/http type can be used to enclose a
   pipeline of one or more HTTP request or response messages (not
   intermixed). The following is to be registered with IANA [&lt;a href=&quot;#ref-17&quot;&gt;17&lt;/a&gt;].

       Media Type name:         message
       Media subtype name:      http
       Required parameters:     none
       Optional parameters:     version, msgtype
        version: The HTTP-Version number of the enclosed message
                 (e.g., &quot;1.1&quot;). If not present, the version can be
                 determined from the first line of the body.
        msgtype: The message type -- &quot;request&quot; or &quot;response&quot;. If not
                 present, the type can be determined from the first
                 line of the body.
       Encoding considerations: only &quot;7bit&quot;, &quot;8bit&quot;, or &quot;binary&quot; are
                                permitted
       Security considerations: none

       Media Type name:         application
       Media subtype name:      http
       Required parameters:     none
       Optional parameters:     version, msgtype
        version: The HTTP-Version number of the enclosed messages
                 (e.g., &quot;1.1&quot;). If not present, the version can be
                 determined from the first line of the body.
        msgtype: The message type -- &quot;request&quot; or &quot;response&quot;. If not
                 present, the type can be determined from the first
                 line of the body.
       Encoding considerations: HTTP messages enclosed by this type
                 are in &quot;binary&quot; format; use of an appropriate
                 Content-Transfer-Encoding is required when
                 transmitted via E-mail.
       Security considerations: none</source>
          <target state="translated">HTTP / 1.1 프로토콜을 정의하는 것 외에도이 문서는 인터넷 메시지 유형 &quot;message / http&quot;및 &quot;application / http&quot;의 사양으로 사용됩니다. 메시지 / http 유형은 단일 HTTP 요청 또는 응답 메시지를 묶는 데 사용될 수 있습니다. 단, 라인 길이 및 인코딩과 관련된 모든 &quot;메시지&quot;유형에 대한 MIME 제한 사항을 준수해야합니다. application / http 유형을 사용하여 하나 이상의 HTTP 요청 또는 응답 메시지 (혼합되지 않음)의 파이프 라인을 묶을 수 있습니다. 다음은 IANA에 등록됩니다 [ &lt;a href=&quot;#ref-17&quot;&gt;17&lt;/a&gt;]. 미디어 유형 이름 : message 미디어 하위 유형 이름 : http 필수 매개 변수 : 없음 선택 매개 변수 : version, msgtype version : 동봉 된 메시지의 HTTP 버전 번호 (예 : &quot;1.1&quot;). 없으면 버전은 본문의 첫 번째 줄에서 확인할 수 있습니다. msgtype : 메시지 유형- &quot;요청&quot;또는 &quot;응답&quot;. 존재하지 않는 경우, 신체의 첫 번째 라인에서 유형을 결정할 수 있습니다. 인코딩 고려 사항 : &quot;7bit&quot;, &quot;8bit&quot;또는 &quot;binary&quot;만 허용됩니다. 보안 고려 사항 : 없음 미디어 유형 이름 : 응용 프로그램 미디어 하위 유형 이름 : http 필수 매개 변수 :none 선택적 매개 변수 : version, msgtype version : 동봉 된 메시지의 HTTP 버전 번호 (예 : &quot;1.1&quot;). 없으면 버전은 본문의 첫 번째 줄에서 확인할 수 있습니다. msgtype : 메시지 유형- &quot;요청&quot;또는 &quot;응답&quot;. 존재하지 않는 경우, 신체의 첫 번째 라인에서 유형을 결정할 수 있습니다. 인코딩 고려 사항 :이 유형으로 묶인 HTTP 메시지는 &quot;이진&quot;형식입니다. 이메일을 통해 전송할 때는 적절한 콘텐츠 전송 인코딩을 사용해야합니다. 보안 고려 사항 : 없음동봉 된 메시지의 HTTP 버전 번호 (예 : &quot;1.1&quot;) 존재하지 않는 경우 버전은 본문의 첫 번째 줄에서 확인할 수 있습니다. msgtype : 메시지 유형- &quot;요청&quot;또는 &quot;응답&quot;. 존재하지 않는 경우, 신체의 첫 번째 라인에서 유형을 결정할 수 있습니다. 인코딩 고려 사항 :이 유형으로 묶인 HTTP 메시지는 &quot;이진&quot;형식입니다. 이메일을 통해 전송할 때는 적절한 콘텐츠 전송 인코딩을 사용해야합니다. 보안 고려 사항 : 없음동봉 된 메시지의 HTTP 버전 번호 (예 : &quot;1.1&quot;) 없으면 버전은 본문의 첫 번째 줄에서 확인할 수 있습니다. msgtype : 메시지 유형- &quot;요청&quot;또는 &quot;응답&quot;. 존재하지 않는 경우, 신체의 첫 번째 라인에서 유형을 결정할 수 있습니다. 인코딩 고려 사항 :이 유형으로 묶인 HTTP 메시지는 &quot;이진&quot;형식입니다. 이메일을 통해 전송할 때는 적절한 콘텐츠 전송 인코딩을 사용해야합니다. 보안 고려 사항 : 없음존재하지 않는 경우, 본문의 첫 번째 라인에서 유형을 판별 할 수 있습니다. 인코딩 고려 사항 :이 유형으로 묶인 HTTP 메시지는 &quot;이진&quot;형식입니다. 이메일 보안 고려 사항 : 없음존재하지 않는 경우, 본문의 첫 번째 라인에서 유형을 판별 할 수 있습니다. 인코딩 고려 사항 :이 유형으로 묶인 HTTP 메시지는 &quot;이진&quot;형식입니다. 이메일 보안 고려 사항 : 없음</target>
        </trans-unit>
        <trans-unit id="ba23aa0ff8e4e6c04210bb32cbc84ce861b595e8" translate="yes" xml:space="preserve">
          <source>In addition to having &lt;code&gt;Server-Timing&lt;/code&gt; header metrics appear in the developer tools of the browser, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceServerTiming&quot;&gt;&lt;code&gt;PerformanceServerTiming&lt;/code&gt;&lt;/a&gt; interface enables tools to automatically collect and process metrics from JavaScript. This interface is restricted to the same origin, but you can use the &lt;a href=&quot;timing-allow-origin&quot;&gt;&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;&lt;/a&gt; header to specify the domains that are allowed to access the server metrics. The interface is only available in secure contexts (HTTPS) in some browsers.</source>
          <target state="translated">브라우저의 개발자 도구에 &lt;code&gt;Server-Timing&lt;/code&gt; 헤더 메트릭이 표시 될 뿐만 아니라 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PerformanceServerTiming&quot;&gt; &lt;code&gt;PerformanceServerTiming&lt;/code&gt; &lt;/a&gt; 인터페이스를 통해 도구가 JavaScript에서 메트릭을 자동으로 수집하고 처리 할 수 ​​있습니다. 이 인터페이스는 동일한 출처로 제한되지만 &lt;a href=&quot;timing-allow-origin&quot;&gt; &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; &lt;/a&gt; 헤더를 사용하여 서버 메트릭에 액세스 할 수있는 도메인을 지정할 수 있습니다. 인터페이스는 일부 브라우저의 보안 컨텍스트 (HTTPS)에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2dac2ae6a62ade1de285c71b6058d61de36159d" translate="yes" xml:space="preserve">
          <source>In addition to restricting the domains from which content can be loaded, the server can specify which protocols are allowed to be used; for example (and ideally, from a security standpoint), a server can specify that all content must be loaded using HTTPS. A complete data transmission security strategy includes not only enforcing HTTPS for data transfer, but also marking all &lt;a href=&quot;cookies&quot;&gt;cookies with the &lt;code&gt;secure&lt;/code&gt; attribute&lt;/a&gt; and providing automatic redirects from HTTP pages to their HTTPS counterparts. Sites may also use the &lt;a href=&quot;headers/strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; HTTP header to ensure that browsers connect to them only over an encrypted channel&lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="translated">콘텐츠를로드 할 수있는 도메인을 제한하는 것 외에도 서버는 사용할 수있는 프로토콜을 지정할 수 있습니다. 예를 들어 (이상적으로는 보안 관점에서) 서버는 모든 콘텐츠가 HTTPS를 사용하여로드되도록 지정할 수 있습니다. 완전한 데이터 전송 보안 전략에는 데이터 전송을 위해 HTTPS를 시행 할뿐만 아니라 모든 &lt;a href=&quot;cookies&quot;&gt;쿠키에 &lt;code&gt;secure&lt;/code&gt; 속성을 표시&lt;/a&gt; 하고 HTTP 페이지에서 HTTPS 대응으로 자동 리디렉션을 제공하는 것이 포함됩니다. 또한 사이트는 &lt;a href=&quot;headers/strict-transport-security&quot;&gt; &lt;code&gt;Strict-Transport-Security&lt;/code&gt; &lt;/a&gt; HTTP 헤더를 사용하여 브라우저가 암호화 된 채널을 통해서만 연결되도록 할 수 &lt;strong&gt;있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad2112dae19cc7c327768fb0823cb8c15ee2b0a2" translate="yes" xml:space="preserve">
          <source>In addition to restricting the domains from which content can be loaded, the server can specify which protocols are allowed to be used; for example (and ideally, from a security standpoint), a server can specify that all content must be loaded using HTTPS. A complete data transmission security strategy includes not only enforcing HTTPS for data transfer, but also marking all &lt;a href=&quot;cookies&quot;&gt;cookies with the secure flag&lt;/a&gt; and providing automatic redirects from HTTP pages to their HTTPS counterparts. Sites may also use the &lt;a href=&quot;headers/strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; HTTP header to ensure that browsers connect to them only over an encrypted channel&lt;strong&gt;.&lt;/strong&gt;</source>
          <target state="translated">컨텐츠를로드 할 수있는 도메인을 제한하는 것 외에도 서버는 사용할 수있는 프로토콜을 지정할 수 있습니다. 예를 들어 (이상적으로는 보안 관점에서) 서버는 모든 컨텐츠가 HTTPS를 사용하여로드되도록 지정할 수 있습니다. 완전한 데이터 전송 보안 전략에는 데이터 전송을 위해 HTTPS를 시행 할뿐만 아니라 모든 &lt;a href=&quot;cookies&quot;&gt;쿠키를 보안 플래그로 표시&lt;/a&gt; 하고 HTTP 페이지에서 HTTPS 상대방으로 자동 리디렉션하는 기능이 포함됩니다. 사이트는 또한 &lt;a href=&quot;headers/strict-transport-security&quot;&gt; &lt;code&gt;Strict-Transport-Security&lt;/code&gt; &lt;/a&gt; HTTP 헤더를 사용하여 브라우저가 암호화 된 채널을 통해서만 브라우저에 연결되도록 할 수 &lt;strong&gt;있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc3248a0c52202ec569f1b1018d21d9a3d88bcc" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to COPY:

   201 (Created) - The source resource was successfully copied.  The
   COPY operation resulted in the creation of a new resource.

   204 (No Content) - The source resource was successfully copied to a
   preexisting destination resource.

   207 (Multi-Status) - Multiple resources were to be affected by the
   COPY, but errors on some of them prevented the operation from taking
   place.  Specific error messages, together with the most appropriate
   of the source and destination URLs, appear in the body of the multi-
   status response.  For example, if a destination resource was locked
   and could not be overwritten, then the destination resource URL
   appears with the 423 (Locked) status.

   403 (Forbidden) - The operation is forbidden.  A special case for
   COPY could be that the source and destination resources are the same
   resource.

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.

   412 (Precondition Failed) - A precondition header check failed, e.g.,
   the Overwrite header is &quot;F&quot; and the destination URL is already mapped
   to a resource. 

   423 (Locked) - The destination resource, or resource within the
   destination collection, was locked.  This response SHOULD contain the
   'lock-token-submitted' precondition element.

   502 (Bad Gateway) - This may occur when the destination is on another
   server, repository, or URL namespace.  Either the source namespace
   does not support copying to the destination namespace, or the
   destination namespace refuses to accept the resource.  The client may
   wish to try GET/PUT and PROPFIND/PROPPATCH instead.

   507 (Insufficient Storage) - The destination resource does not have
   sufficient space to record the state of the resource after the
   execution of this method.</source>
          <target state="translated">가능한 일반 상태 코드 외에도 다음 상태 코드는 COPY에 적용 할 수 있습니다. 201 (작성 됨)-소스 자원이 성공적으로 복사되었습니다. COPY 조작으로 새 자원이 작성되었습니다. 204 (No Content)-소스 리소스가 기존 대상 리소스에 성공적으로 복사되었습니다. 207 (Multi-Status)-여러 리소스가 COPY의 영향을 받았지만 일부 리소스의 오류로 인해 작업이 수행되지 못했습니다. 가장 적합한 소스 및 도착 URL과 함께 특정 오류 메시지가 다중 상태 응답 본문에 나타납니다. 예를 들어 대상 리소스가 잠겨있어 덮어 쓸 수없는 경우 대상 리소스 URL이 423 (잠김) 상태로 나타납니다.403 (Forbidden)-작업이 금지되어 있습니다. COPY의 특별한 경우는 소스 및 대상 리소스가 동일한 리소스 일 수 있습니다. 409 (충돌)-하나 이상의 중간 컬렉션을 만들 때까지 대상에서 리소스를 만들 수 없습니다. 서버는 이러한 중간 컬렉션을 자동으로 생성해서는 안됩니다 (MUST NOT). 412 (사전 조건 실패)-사전 조건 헤더 검사에 실패했습니다. 예를 들어, 덮어 쓰기 헤더가 &quot;F&quot;이고 대상 URL이 이미 리소스에 매핑되어 있습니다. 423 (Locked)-대상 자원 또는 대상 콜렉션 내의 자원이 잠겼습니다. 이 응답은 'lock-token-submitted'전제 조건 요소를 포함해야한다. 502 (Bad Gateway)-대상이 다른 서버, 리포지토리 또는 URL 네임 스페이스에있을 때 발생할 수 있습니다.소스 네임 스페이스가 대상 네임 스페이스에 대한 복사를 지원하지 않거나 대상 네임 스페이스가 리소스 수락을 거부합니다. 클라이언트는 대신 GET / PUT 및 PROPFIND / PROPPATCH를 시도 할 수 있습니다. 507 (저장소 부족)-대상 자원에이 방법을 실행 한 후 자원 상태를 기록하기에 충분한 공간이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ee897ff0362cf4245c71fb432f38bd23904179b3" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to LOCK:

   200 (OK) - The LOCK request succeeded and the value of the DAV:
   lockdiscovery property is included in the response body.

   201 (Created) - The LOCK request was to an unmapped URL, the request
   succeeded and resulted in the creation of a new resource, and the
   value of the DAV:lockdiscovery property is included in the response
   body. 

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.

   423 (Locked), potentially with 'no-conflicting-lock' precondition
   code - There is already a lock on the resource that is not compatible
   with the requested lock (see lock compatibility table above).

   412 (Precondition Failed), with 'lock-token-matches-request-uri'
   precondition code - The LOCK request was made with an If header,
   indicating that the client wishes to refresh the given lock.
   However, the Request-URI did not fall within the scope of the lock
   identified by the token.  The lock may have a scope that does not
   include the Request-URI, or the lock could have disappeared, or the
   token may be invalid.</source>
          <target state="translated">가능한 일반 상태 코드 외에도 다음 상태 코드는 LOCK에 적용 가능합니다. 200 (OK)-LOCK 요청이 성공했으며 DAV : lockdiscovery 특성의 값이 응답 본문에 포함됩니다. 201 (작성 됨)-LOCK 요청이 맵핑되지 않은 URL에 대한 것이며 요청이 성공하여 새 자원이 작성되었으며 DAV : lockdiscovery 특성 값이 응답 본문에 포함되었습니다. 409 (충돌)-하나 이상의 중간 컬렉션을 만들 때까지 대상에서 리소스를 만들 수 없습니다. 서버는 이러한 중간 컬렉션을 자동으로 생성해서는 안됩니다 (MUST NOT). 423 (잠김), 잠재적으로 '충돌 방지'전제 조건 코드-요청 된 잠금과 호환되지 않는 자원에 대한 잠금이 이미 있습니다 (위의 잠금 호환성 표 참조). 412 (사전 조건 실패), 'lock-token-matches-request-uri'사전 조건 코드-잠금 요청은 If 헤더를 사용하여 클라이언트가 지정된 잠금을 새로 고치려고 함을 나타냅니다. 그러나 Request-URI는 토큰으로 식별 된 잠금 범위 내에 있지 않습니다. 잠금에 Request-URI가 포함되지 않은 범위가 있거나 잠금이 사라 졌거나 토큰이 유효하지 않을 수 있습니다.Request-URI는 토큰으로 식별 된 잠금 범위 내에 있지 않습니다. 잠금에 Request-URI가 포함되지 않은 범위가 있거나 잠금이 사라 졌거나 토큰이 유효하지 않을 수 있습니다.Request-URI는 토큰으로 식별 된 잠금 범위 내에 있지 않습니다. 잠금에 Request-URI가 포함되지 않은 범위가 있거나 잠금이 사라 졌거나 토큰이 유효하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a26231e92d79838933371916af08188230312c93" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to MKCOL:

   201 (Created) - The collection was created.

   403 (Forbidden) - This indicates at least one of two conditions: 1)
   the server does not allow the creation of collections at the given
   location in its URL namespace, or 2) the parent collection of the
   Request-URI exists but cannot accept members.

   405 (Method Not Allowed) - MKCOL can only be executed on an unmapped
   URL.

   409 (Conflict) - A collection cannot be made at the Request-URI until
   one or more intermediate collections have been created.  The server
   MUST NOT create those intermediate collections automatically.

   415 (Unsupported Media Type) - The server does not support the
   request body type (although bodies are legal on MKCOL requests, since
   this specification doesn't define any, the server is likely not to
   support any given body type).

   507 (Insufficient Storage) - The resource does not have sufficient
   space to record the state of the resource after the execution of this
   method.</source>
          <target state="translated">가능한 일반 상태 코드 외에도 다음 상태 코드는 MKCOL에 적용 할 수 있습니다. 201 (만들기)-컬렉션이 만들어졌습니다. 403 (금지됨)-다음 두 조건 중 하나 이상을 나타냅니다. 1) 서버가 URL 네임 스페이스의 지정된 위치에서 모음을 만들 수 없거나 2) Request-URI의 부모 모음이 존재하지만 구성원을 수락 할 수 없음 . 405 (Method Not Allowed)-매핑되지 않은 URL에서만 MKCOL을 실행할 수 있습니다. 409 (충돌)-하나 이상의 중간 콜렉션이 작성 될 때까지 Request-URI에서 콜렉션을 작성할 수 없습니다. 서버는 이러한 중간 컬렉션을 자동으로 생성해서는 안됩니다 (MUST NOT). 415 (지원되지 않는 미디어 유형)-서버가 요청 본문 유형을 지원하지 않습니다 (본 기관은 MKCOL 요청에 대해 합법적이지만,이 사양은 어떤 것도 정의하지 않기 때문에 서버는 주어진 신체 유형을 지원하지 않을 것입니다). 507 (Insufficient Storage)-이 방법을 실행 한 후 자원의 상태를 기록 할 공간이 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abd88f2d1d87ef7a1f30945f9393736f0e9efad8" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to MOVE:

   201 (Created) - The source resource was successfully moved, and a new
   URL mapping was created at the destination.

   204 (No Content) - The source resource was successfully moved to a
   URL that was already mapped.

   207 (Multi-Status) - Multiple resources were to be affected by the
   MOVE, but errors on some of them prevented the operation from taking
   place.  Specific error messages, together with the most appropriate
   of the source and destination URLs, appear in the body of the multi-
   status response.  For example, if a source resource was locked and
   could not be moved, then the source resource URL appears with the 423
   (Locked) status.

   403 (Forbidden) - Among many possible reasons for forbidding a MOVE
   operation, this status code is recommended for use when the source
   and destination resources are the same.

   409 (Conflict) - A resource cannot be created at the destination
   until one or more intermediate collections have been created.  The
   server MUST NOT create those intermediate collections automatically.
   Or, the server was unable to preserve the behavior of the live
   properties and still move the resource to the destination (see
   'preserved-live-properties' postcondition).

   412 (Precondition Failed) - A condition header failed.  Specific to
   MOVE, this could mean that the Overwrite header is &quot;F&quot; and the
   destination URL is already mapped to a resource.

   423 (Locked) - The source or the destination resource, the source or
   destination resource parent, or some resource within the source or
   destination collection, was locked.  This response SHOULD contain the
   'lock-token-submitted' precondition element.

   502 (Bad Gateway) - This may occur when the destination is on another
   server and the destination server refuses to accept the resource.
   This could also occur when the destination is on another sub-section
   of the same server namespace.</source>
          <target state="translated">가능한 일반 상태 코드 외에도 다음 상태 코드는 MOVE에 적용 할 수 있습니다. 201 (작성 됨)-소스 자원이 성공적으로 이동되었으며 대상에서 새 URL 맵핑이 작성되었습니다. 204 (No Content)-소스 자원이 이미 맵핑 된 URL로 이동되었습니다. 207 (Multi-Status)-여러 리소스가 MOVE의 영향을 받았지만 일부 리소스의 오류로 인해 작업이 수행되지 못했습니다. 가장 적합한 소스 및 도착 URL과 함께 특정 오류 메시지가 다중 상태 응답 본문에 나타납니다. 예를 들어 소스 리소스가 잠겨있어 이동할 수없는 경우 소스 리소스 URL은 423 (잠김) 상태로 나타납니다.403 (금지됨)-MOVE 조작을 금지하는 여러 가지 가능한 이유 중 소스 및 대상 자원이 동일한 경우이 상태 코드를 사용하는 것이 좋습니다. 409 (충돌)-하나 이상의 중간 컬렉션을 만들 때까지 대상에서 리소스를 만들 수 없습니다. 서버는 이러한 중간 컬렉션을 자동으로 생성해서는 안됩니다 (MUST NOT). 또는 서버가 라이브 속성의 동작을 유지하지 못하고 여전히 리소스를 대상으로 옮길 수 없습니다 ( 'preserved-live-properties'사후 조건 참조). 412 (전제 조건 실패)-조건 헤더가 실패했습니다. MOVE와 관련하여 이는 덮어 쓰기 헤더가 &quot;F&quot;이고 대상 URL이 이미 리소스에 매핑되었음을 의미 할 수 있습니다. 423 (Locked)-소스 또는 대상 리소스소스 또는 대상 자원 상위 또는 소스 또는 대상 콜렉션 내의 일부 자원이 잠겼습니다. 이 응답은 'lock-token-submitted'전제 조건 요소를 포함해야한다. 502 (Bad Gateway)-대상이 다른 서버에 있고 대상 서버가 리소스 수락을 거부 할 때 발생할 수 있습니다. 대상이 동일한 서버 네임 스페이스의 다른 하위 섹션에있는 경우에도 발생할 수 있습니다.대상이 동일한 서버 네임 스페이스의 다른 하위 섹션에있는 경우에도 발생할 수 있습니다.대상이 동일한 서버 네임 스페이스의 다른 하위 섹션에있는 경우에도 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4629e09c06eba402676b36f28c77b568459e792b" translate="yes" xml:space="preserve">
          <source>In addition to the general status codes possible, the following
   status codes have specific applicability to UNLOCK:

   204 (No Content) - Normal success response (rather than 200 OK, since
   200 OK would imply a response body, and an UNLOCK success response
   does not normally contain a body).

   400 (Bad Request) - No lock token was provided.

   403 (Forbidden) - The currently authenticated principal does not have
   permission to remove the lock.

   409 (Conflict), with 'lock-token-matches-request-uri' precondition -
   The resource was not locked, or the request was made to a Request-URI
   that was not within the scope of the lock.</source>
          <target state="translated">가능한 일반적인 상태 코드 외에도 다음 상태 코드는 UNLOCK에 적용 할 수 있습니다. 204 (콘텐츠 없음)-정상 성공 응답 (200 OK는 200이 아니라 응답 본문을 의미하므로 UNLOCK 성공 응답은 그렇지 않음) 일반적으로 신체를 포함). 400 (잘못된 요청)-잠금 토큰이 제공되지 않았습니다. 403 (Forbidden)-현재 인증 된 보안 주체가 잠금을 제거 할 권한이 없습니다. 409 (충돌), 'lock-token-matches-request-uri'사전 조건-자원이 잠기지 않았거나 잠금 범위 내에 있지 않은 Request-URI에 요청되었습니다.</target>
        </trans-unit>
        <trans-unit id="9e2b59b56283e49cf87a4756ab287a316a572fba" translate="yes" xml:space="preserve">
          <source>In addition to these large extensions, numerous other headers have been added, sometimes experimentally only. Notable headers are Do Not Track (&lt;a href=&quot;../headers/dnt&quot;&gt;&lt;code&gt;DNT&lt;/code&gt;&lt;/a&gt;) header to control privacy, &lt;a href=&quot;../headers/x-frame-options&quot;&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../headers/upgrade-insecure-requests&quot;&gt;&lt;code&gt;Upgrade-Insecure-Requests&lt;/code&gt;&lt;/a&gt; but many more exist.</source>
          <target state="translated">이러한 큰 확장 외에도 많은 다른 헤더가 추가되었으며 때로는 실험적으로 만 추가되었습니다. 주목할만한 헤더는 프라이버시, &lt;a href=&quot;../headers/x-frame-options&quot;&gt; &lt;code&gt;X-Frame-Options&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../headers/upgrade-insecure-requests&quot;&gt; &lt;code&gt;Upgrade-Insecure-Requests&lt;/code&gt; &lt;/a&gt; 를 제어하기위한 &lt;a href=&quot;../headers/dnt&quot;&gt; &lt;code&gt;DNT&lt;/code&gt; &lt;/a&gt; (Do Not Track ) 헤더 이지만 더 많이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="3b131cf2fd0e3eeeeb8387fc020ce526e5bb2a21" translate="yes" xml:space="preserve">
          <source>In addition to these usual redirections, there are two specific redirections. The &lt;a href=&quot;status/304&quot;&gt;&lt;code&gt;304&lt;/code&gt;&lt;/a&gt; (Not Modified) redirects a page to the locally cached copy (that was stale), and &lt;a href=&quot;status/300&quot;&gt;&lt;code&gt;300&lt;/code&gt;&lt;/a&gt; (Multiple Choice) is a manual redirection: the body, presented by the browser as a Web page, lists the possible redirections and the user clicks on one to select it.</source>
          <target state="translated">이러한 일반적인 리디렉션 외에도 두 가지 특정 리디렉션이 있습니다. &lt;a href=&quot;status/304&quot;&gt; &lt;code&gt;304&lt;/code&gt; &lt;/a&gt; (수정되지 않음) 로컬로 캐시 된 복사본 (즉 오래된이었다)에 페이지를 리디렉션 및 &lt;a href=&quot;status/300&quot;&gt; &lt;code&gt;300&lt;/code&gt; &lt;/a&gt; (복수 선택)는 수동 리디렉션입니다 : 몸, 웹 페이지로 브라우저에 의해 제시 목록 가능한 리디렉션 및 사용자 하나를 클릭하여 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="d635ae50b7ab2f51933a439ac178e121013926c5" translate="yes" xml:space="preserve">
          <source>In addition to these, there is an experimental proposal to add more headers to the list of available headers, called &lt;em&gt;client hints&lt;/em&gt;. Client hints advertise what kind of device the user agent runs on (for example, if it is a desktop computer or a mobile device).</source>
          <target state="translated">이외에도 사용 가능한 헤더 목록에 더 많은 헤더 ( &lt;em&gt;클라이언트 힌트)&lt;/em&gt; 를 추가하는 실험적인 제안이 있습니다 . 클라이언트 힌트는 사용자 에이전트가 실행하는 장치의 종류를 알려줍니다 (예 : 데스크톱 컴퓨터 또는 모바일 장치 인 경우).</target>
        </trans-unit>
        <trans-unit id="6be73b5e595cfda1b190216eea697e1e081f8638" translate="yes" xml:space="preserve">
          <source>In addition, cookies with the &lt;code&gt;__Host-&lt;/code&gt; prefix must have a path of &lt;code&gt;/&lt;/code&gt; (meaning any path at the host) and must not have a &lt;code&gt;Domain&lt;/code&gt; attribute.</source>
          <target state="translated">또한 &lt;code&gt;__Host-&lt;/code&gt; 접두사가있는 쿠키 에는 &lt;code&gt;/&lt;/code&gt; (호스트의 모든 경로를 의미) 경로가 있어야하며 &lt;code&gt;Domain&lt;/code&gt; 이 없어야합니다. 속성 합니다.</target>
        </trans-unit>
        <trans-unit id="452c8d06b2f6623a8650c4fa111cc03980282cde" translate="yes" xml:space="preserve">
          <source>In an HTTP URL, the first substring that follows the initial &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; is called the domain name. This domain name is hosted on a server where the document resides.</source>
          <target state="translated">HTTP URL에서 초기 &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;https://&lt;/code&gt; 다음에 오는 첫 번째 하위 문자열을 도메인 이름이라고합니다. 이 도메인 이름은 문서가있는 서버에서 호스팅됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a374d59d054a3737c0b7d32f324c37547cb7c5" translate="yes" xml:space="preserve">
          <source>In both cases it's clear, conditional requests are a fundamental feature behind the Web.</source>
          <target state="translated">두 경우 모두 조건부 요청은 웹의 기본 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b7d3d4c052ce3a72008b8168b5362d9899fce376" translate="yes" xml:space="preserve">
          <source>In both cases, the user can't do much (unless a corruption is happening on their side, like a mismatch of cache or cookies).</source>
          <target state="translated">두 경우 모두 캐시 또는 쿠키의 불일치와 같은 부패가 발생하지 않는 한 사용자는 많은 것을 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="891082881f414bc74764d1a5ea2c1afe84e85946" translate="yes" xml:space="preserve">
          <source>In browsers that support &lt;a href=&quot;content-security-policy/report-to&quot;&gt;&lt;code&gt;report-to&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; directive will be ignored.</source>
          <target state="translated">브라우저에서 지원 있다고 &lt;a href=&quot;content-security-policy/report-to&quot;&gt; &lt;code&gt;report-to&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; 지시어는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="99d503921123b6885340a4372a8a6b0ea5626e01" translate="yes" xml:space="preserve">
          <source>In browsers that support &lt;a href=&quot;report-to&quot;&gt;&lt;code&gt;report-to&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; directive will be ignored.</source>
          <target state="translated">브라우저에서 지원 있다고 &lt;a href=&quot;report-to&quot;&gt; &lt;code&gt;report-to&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;&lt;strong&gt;report-uri&lt;/strong&gt;&lt;/code&gt; 지시어는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7c5dd7c6036bb963177d127d1d450d8f1e98dec9" translate="yes" xml:space="preserve">
          <source>In case of a range request that is out of bounds (none of the range values overlap the extent of the resource, i.e first-byte-pos of all ranges is greater than the resource length), the server responds with a &lt;a href=&quot;status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; status.</source>
          <target state="translated">범위를 벗어난 범위 ​​요청의 경우 (범위 값 중 어느 것도 리소스의 범위와 겹치지 않습니다. 즉, 모든 범위의 첫 번째 바이트 위치가 리소스 길이보다 큼) 서버는 &lt;a href=&quot;status/416&quot;&gt; &lt;code&gt;416&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; 응답합니다. 만족 상태.</target>
        </trans-unit>
        <trans-unit id="2eeb5d5719bfe66a723ed9a7de204a618f713d1f" translate="yes" xml:space="preserve">
          <source>In case of a range request that is out of bounds (range values overlap the extent of the resource), the server responds with a &lt;a href=&quot;status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; status.</source>
          <target state="translated">범위를 벗어난 범위 ​​요청 (범위 값이 리소스 범위와 겹침) 인 ​​경우 서버는 &lt;a href=&quot;status/416&quot;&gt; &lt;code&gt;416&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Requested Range Not Satisfiable&lt;/code&gt; 상태로 응답 합니다.</target>
        </trans-unit>
        <trans-unit id="fe1bbb314fd4c01d67a4a1927444c74b1ecc3b84" translate="yes" xml:space="preserve">
          <source>In case of a successful range request, the &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt; status is sent back from a server.</source>
          <target state="translated">범위 요청이 성공하면 &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Partial Content&lt;/code&gt; 상태가 서버에서 다시 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="aedd7950da9e5893c670001b73efaf8f02facdd1" translate="yes" xml:space="preserve">
          <source>In case of no support of range requests, the &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;&lt;code&gt;OK&lt;/code&gt; status is sent back from a server.</source>
          <target state="translated">범위 요청을 지원하지 않는 경우 &lt;a href=&quot;status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; &lt;code&gt;OK&lt;/code&gt; 상태가 서버에서 다시 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="73542c18d725b27c3411be51053fdddc86d53fc0" translate="yes" xml:space="preserve">
          <source>In cases of redirection, the HTTP method used to make the new request to fetch the page pointed to by &lt;code&gt;Location&lt;/code&gt; depends of the original method and of the kind of redirection:</source>
          <target state="translated">리디렉션의 경우 &lt;code&gt;Location&lt;/code&gt; 에서 가리키는 페이지를 가져 오기 위해 새 요청을 작성하는 데 사용되는 HTTP 메서드 는 원래 메서드와 리디렉션 종류에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="400b65ba68994eae44783d4597cd6426d0ef1020" translate="yes" xml:space="preserve">
          <source>In cases of resource creation, it indicates the URL to the newly created resource.</source>
          <target state="translated">자원 작성의 경우 새로 작성된 자원의 URL을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="83f79ebc079d3c0c0d4572bcf4378eb80a9d0af2" translate="yes" xml:space="preserve">
          <source>In client-server protocols, it is the client which establishes the connection. Opening a connection in HTTP means initiating a connection in the underlying transport layer, usually this is TCP.</source>
          <target state="translated">클라이언트-서버 프로토콜에서 연결을 설정하는 것은 클라이언트입니다. HTTP에서 연결을 여는 것은 기본 전송 계층에서 연결을 시작하는 것을 의미합니다. 일반적으로 TCP입니다.</target>
        </trans-unit>
        <trans-unit id="8c10db7321992e2a8f17abad3e89745464a5099e" translate="yes" xml:space="preserve">
          <source>In client-server protocols, like HTTP, sessions consist of three phases:</source>
          <target state="translated">HTTP와 같은 클라이언트-서버 프로토콜에서 세션은 세 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="3f9a70e3c7b55315e54b4db55bc22d039b7ec58c" translate="yes" xml:space="preserve">
          <source>In conjunction with a range request with a &lt;a href=&quot;if-range&quot;&gt;&lt;code&gt;If-Range&lt;/code&gt;&lt;/a&gt; header, it can be used to ensure that the new fragment requested comes from an unmodified document.</source>
          <target state="translated">&lt;a href=&quot;if-range&quot;&gt; &lt;code&gt;If-Range&lt;/code&gt; &lt;/a&gt; 헤더 가있는 범위 요청과 함께 요청 된 새 조각이 수정되지 않은 문서에서 오는지 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9ab6733bb319a29784b72221a4697f634e9bdd1" translate="yes" xml:space="preserve">
          <source>In conjunction with non-&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; methods, like &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;, it can be used to implement an &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic concurrency control&lt;/a&gt;, like done by some wikis: editions are rejected if the stored document has been modified since the original has been retrieved.</source>
          <target state="translated">&lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; 와 같은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;안전하지&lt;/a&gt; 않은 메소드 와 함께 일부 위키에서와 같이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;낙관적 동시성 제어&lt;/a&gt; 를 구현하는 데 사용할 수 있습니다 . 원본을 검색 한 후 저장된 문서가 수정 된 경우 에디션이 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="d493128c05add224d7034b297ae0a98230512595" translate="yes" xml:space="preserve">
          <source>In contrast to the previous &lt;code&gt;Accept-*&lt;/code&gt; headers, which are sent by the client, the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP header is sent by the web server in its response. It indicates the list of headers used by the server during the server-driven content negotiation phase. The header is needed in order to inform the cache of the decision criteria so that it can reproduce it, allowing the cache to be functional while preventing serving erroneous content to the user.</source>
          <target state="translated">클라이언트가 보낸 이전 &lt;code&gt;Accept-*&lt;/code&gt; 헤더 와 달리 &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; HTTP 헤더는 웹 서버가 응답으로 보냅니다. 서버 기반 콘텐츠 협상 단계에서 서버에서 사용하는 헤더 목록을 나타냅니다. 헤더는 결정 기준을 캐시에 알리고이를 재현 할 수 있도록하여 사용자에게 잘못된 콘텐츠를 제공하는 것을 방지하면서 캐시가 작동 할 수 있도록하기 위해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a08f16f3855aa1f6d298ed8409da0b0dbfdf4c6d" translate="yes" xml:space="preserve">
          <source>In early 2018, two side-channel hardware vulnerabilities known as &lt;em&gt;Meltdown&lt;/em&gt; and &lt;em&gt;Spectre&lt;/em&gt; were disclosed. These vulnerabilities allowed sensitive data disclosure due to a race condition which arose as part of speculative execution functionality, designed to improve performance.</source>
          <target state="translated">2018 년 초 &lt;em&gt;Meltdown&lt;/em&gt; 과 &lt;em&gt;Spectre&lt;/em&gt; 로 알려진 두 가지 부 채널 하드웨어 취약성 이 공개되었습니다. 이러한 취약성은 성능 향상을 위해 설계된 예측 실행 기능의 일부로 발생하는 경쟁 조건으로 인해 민감한 데이터 공개를 허용했습니다.</target>
        </trans-unit>
        <trans-unit id="0701242525f77ea41dea13da7a10fb9576b0aa7f" translate="yes" xml:space="preserve">
          <source>In early versions of HTTP/1.1, a default character encoding was defined: ISO-8859-1. This is no longer recommended, and now each content-type may have its own default.</source>
          <target state="translated">HTTP / 1.1의 초기 버전에서는 기본 문자 인코딩이 정의되었습니다 : ISO-8859-1. 더 이상 권장되지 않으며 이제 각 콘텐츠 유형에 자체 기본값이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbebaf8ae5ad813c6e5579cad204cc0afeb3f2a6" translate="yes" xml:space="preserve">
          <source>In early versions of HTTP/1.1, a default charset (&lt;code&gt;ISO-8859-1&lt;/code&gt;) was defined. This is no more the case and now each content type may have its own default.</source>
          <target state="translated">HTTP / 1.1의 초기 버전에서는 기본 문자 세트 ( &lt;code&gt;ISO-8859-1&lt;/code&gt; )가 정의되었습니다. 이것은 더 이상 사실이 아니며 이제 각 컨텐츠 유형마다 고유 한 기본값이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76b87dd4cff176256a7ffd91b11051848e914ccf" translate="yes" xml:space="preserve">
          <source>In general, you don't need to do anything to manage prefetching. However, the user may wish to disable prefetching. On Firefox, this can be done by setting the &lt;code&gt;network.dns.disablePrefetch&lt;/code&gt; preference to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">일반적으로 프리 페치를 관리하기 위해 수행 할 작업이 없습니다. 그러나 사용자는 프리 페치를 비활성화 할 수 있습니다. Firefox에서는 &lt;code&gt;network.dns.disablePrefetch&lt;/code&gt; 환경 설정을 &lt;code&gt;true&lt;/code&gt; 로 설정하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="663b0e3712ad97e7d9fa6a474afdbfa58ef61280" translate="yes" xml:space="preserve">
          <source>In many cases, it is caused by a browser plugin (e.g. an ad blocker or privacy protector) blocking the request.</source>
          <target state="translated">대부분의 경우 요청을 차단하는 브라우저 플러그인 (예 : 광고 차단기 또는 개인 정보 보호기)으로 인해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="674099d2a81c401b8baaba7396a1a690e7a583af" translate="yes" xml:space="preserve">
          <source>In most cases, the policy-controlled features represent functionality that when used will negatively impact the user experience. To avoid breaking existing web content, the default for such policy-controlled features is to allow the functionality to be used by all origins. Best practices are then enforced by using policies that disable the policy-controlled features. For more details see &quot;Enforcing best practices for good user experiences&quot;.</source>
          <target state="translated">대부분의 경우 정책 제어 기능은 사용시 사용자 경험에 부정적인 영향을주는 기능을 나타냅니다. 기존 웹 컨텐츠가 손상되는 것을 방지하기 위해 이러한 정책 제어 기능의 기본값은 모든 출처에서 기능을 사용할 수 있도록하는 것입니다. 그런 다음 정책 제어 기능을 비활성화하는 정책을 사용하여 모범 사례를 시행합니다. 자세한 내용은 &quot;좋은 사용자 환경을위한 모범 사례 시행&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5408e40c9a5920880e7570b54ae2fe87a76b064d" translate="yes" xml:space="preserve">
          <source>In opposition to the previous &lt;code&gt;Accept-*&lt;/code&gt; headers which are sent by the client, the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; HTTP header is sent by the web server in its response. It indicates the list of headers used by the server during the server-driven content negotiation phase. The header is needed in order to inform the cache of the decision criteria so that it can reproduce it, allowing the cache to be functional while preventing serving erroneous content to the user.</source>
          <target state="translated">클라이언트가 보낸 이전 &lt;code&gt;Accept-*&lt;/code&gt; 헤더와 달리 &lt;a href=&quot;headers/vary&quot;&gt; &lt;code&gt;Vary&lt;/code&gt; &lt;/a&gt; HTTP 헤더는 응답으로 웹 서버에서 보냅니다. 서버 구동 컨텐츠 협상 단계에서 서버가 사용하는 헤더 목록을 나타냅니다. 헤더는 결정 기준을 캐시에 통지하여이를 재현 할 수 있도록하기 위해 필요하며, 사용자에게 잘못된 컨텐츠를 제공하는 것을 방지하면서 캐시가 기능 할 수있게한다.</target>
        </trans-unit>
        <trans-unit id="badfc139e7e8ad666da707d60e16523bcd32cfa3" translate="yes" xml:space="preserve">
          <source>In order to decide whether a response is fresh or stale, we need to
   compare its freshness lifetime to its age. The age is calculated as
   described in &lt;a href=&quot;#section-13.2.3&quot;&gt;section 13.2.3&lt;/a&gt;; this section describes how to calculate
   the freshness lifetime, and to determine if a response has expired.
   In the discussion below, the values can be represented in any form
   appropriate for arithmetic operations.

   We use the term &quot;expires_value&quot; to denote the value of the Expires
   header. We use the term &quot;max_age_value&quot; to denote an appropriate
   value of the number of seconds carried by the &quot;max-age&quot; directive of
   the Cache-Control header in a response (see &lt;a href=&quot;#section-14.9.3&quot;&gt;section 14.9.3&lt;/a&gt;).

   The max-age directive takes priority over Expires, so if max-age is
   present in a response, the calculation is simply:

      freshness_lifetime = max_age_value

   Otherwise, if Expires is present in the response, the calculation is:

      freshness_lifetime = expires_value - date_value

   Note that neither of these calculations is vulnerable to clock skew,
   since all of the information comes from the origin server.

   If none of Expires, Cache-Control: max-age, or Cache-Control: s-
   maxage (see &lt;a href=&quot;#section-14.9.3&quot;&gt;section 14.9.3&lt;/a&gt;) appears in the response, and the response
   does not include other restrictions on caching, the cache MAY compute
   a freshness lifetime using a heuristic. The cache MUST attach Warning
   113 to any response whose age is more than 24 hours if such warning
   has not already been added.

   Also, if the response does have a Last-Modified time, the heuristic
   expiration value SHOULD be no more than some fraction of the interval
   since that time. A typical setting of this fraction might be 10%.

   The calculation to determine if a response has expired is quite
   simple:

      response_is_fresh = (freshness_lifetime &amp;gt; current_age)</source>
          <target state="translated">응답이 신선하거나 오래된 지 여부를 결정하려면 신선도 수명과 연령을 비교해야합니다. 연령은 &lt;a href=&quot;#section-13.2.3&quot;&gt;섹션 13.2.3에&lt;/a&gt; 설명 된대로 계산됩니다 . 이 섹션에서는 신선도 수명을 계산하고 응답이 만료되었는지 확인하는 방법에 대해 설명합니다. 아래의 논의에서, 값은 산술 연산에 적합한 임의의 형태로 표현 될 수있다. &quot;expires_value&quot;라는 용어를 사용하여 Expires 헤더의 값을 나타냅니다. &quot;max_age_value&quot;라는 용어는 응답에서 Cache-Control 헤더의 &quot;max-age&quot;지시어에 의해 전달되는 초 수의 적절한 값을 나타냅니다 ( &lt;a href=&quot;#section-14.9.3&quot;&gt;섹션 14.9.3&lt;/a&gt; 참조).). max-age 지시문은 Expires보다 우선하므로 응답에 max-age가 있으면 계산은 간단합니다. freshness_lifetime = max_age_value 그렇지 않으면 Expires가 응답에 있으면 계산은 다음과 같습니다. freshness_lifetime = expires_value-date_value 참고 모든 정보는 원본 서버에서 가져 오기 때문에 이러한 계산 중 어느 것도 클럭 스큐에 취약하지 않습니다. 만료, Cache-Control : max-age 또는 Cache-Control : s-maxage가없는 경우 ( &lt;a href=&quot;#section-14.9.3&quot;&gt;섹션 14.9.3&lt;/a&gt; 참조))가 응답에 표시되고 응답에 캐싱에 대한 다른 제한이 포함되지 않은 경우 캐시는 휴리스틱을 사용하여 최신 수명을 계산할 수 있습니다. 캐시는 이러한 경고가 아직 추가되지 않은 경우 24 시간을 초과하는 응답에 경고 113을 첨부해야합니다. 또한 응답에 Last-Modified 시간이있는 경우 휴리스틱 만료 값은 해당 시간 이후 간격의 일부를 초과하지 않아야합니다. 이 분수의 일반적인 설정은 10 % 일 수 있습니다. 응답이 만료되었는지 확인하는 계산은 매우 간단합니다. response_is_fresh = (freshness_lifetime&amp;gt; current_age)</target>
        </trans-unit>
        <trans-unit id="d03e66527d9041fe3d196b0602d934ec30eb980d" translate="yes" xml:space="preserve">
          <source>In order to fix this problem, Mozilla changed the behavior of loading resource: URIs in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=863246&quot;&gt;bug 863246&lt;/a&gt;, which landed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/57&quot;&gt;Firefox 57 (Quantum)&lt;/a&gt;.</source>
          <target state="translated">이 문제를 해결하기 위해 Mozilla는 리소스 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/57&quot;&gt;57&lt;/a&gt; : &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=863246&quot;&gt;버그 863246의&lt;/a&gt; URI 동작을 변경 했으며 Firefox 57 (Quantum)에 있었습니다.</target>
        </trans-unit>
        <trans-unit id="e3cacbc626f64e05a875aafa03b69d5da76a91ff" translate="yes" xml:space="preserve">
          <source>In order to know if a cached entry is fresh, a cache needs to know if
   its age exceeds its freshness lifetime. We discuss how to calculate
   the latter in &lt;a href=&quot;#section-13.2.4&quot;&gt;section 13.2.4&lt;/a&gt;; this section describes how to calculate
   the age of a response or cache entry.

   In this discussion, we use the term &quot;now&quot; to mean &quot;the current value
   of the clock at the host performing the calculation.&quot; Hosts that use
   HTTP, but especially hosts running origin servers and caches, SHOULD
   use NTP [&lt;a href=&quot;#ref-28&quot;&gt;28&lt;/a&gt;] or some similar protocol to synchronize their clocks to
   a globally accurate time standard. 

   HTTP/1.1 requires origin servers to send a Date header, if possible,
   with every response, giving the time at which the response was
   generated (see &lt;a href=&quot;#section-14.18&quot;&gt;section 14.18&lt;/a&gt;). We use the term &quot;date_value&quot; to denote
   the value of the Date header, in a form appropriate for arithmetic
   operations.

   HTTP/1.1 uses the Age response-header to convey the estimated age of
   the response message when obtained from a cache. The Age field value
   is the cache's estimate of the amount of time since the response was
   generated or revalidated by the origin server.

   In essence, the Age value is the sum of the time that the response
   has been resident in each of the caches along the path from the
   origin server, plus the amount of time it has been in transit along
   network paths.

   We use the term &quot;age_value&quot; to denote the value of the Age header, in
   a form appropriate for arithmetic operations.

   A response's age can be calculated in two entirely independent ways:

      1. now minus date_value, if the local clock is reasonably well
         synchronized to the origin server's clock. If the result is
         negative, the result is replaced by zero.

      2. age_value, if all of the caches along the response path
         implement HTTP/1.1.

   Given that we have two independent ways to compute the age of a
   response when it is received, we can combine these as

       corrected_received_age = max(now - date_value, age_value)

   and as long as we have either nearly synchronized clocks or all-
   HTTP/1.1 paths, one gets a reliable (conservative) result.

   Because of network-imposed delays, some significant interval might
   pass between the time that a server generates a response and the time
   it is received at the next outbound cache or client. If uncorrected,
   this delay could result in improperly low ages.

   Because the request that resulted in the returned Age value must have
   been initiated prior to that Age value's generation, we can correct
   for delays imposed by the network by recording the time at which the
   request was initiated. Then, when an Age value is received, it MUST
   be interpreted relative to the time the request was initiated, not 

   the time that the response was received. This algorithm results in
   conservative behavior no matter how much delay is experienced. So, we
   compute:

      corrected_initial_age = corrected_received_age
                            + (now - request_time)

   where &quot;request_time&quot; is the time (according to the local clock) when
   the request that elicited this response was sent.

   Summary of age calculation algorithm, when a cache receives a
   response:

      /*
       * age_value
       *      is the value of Age: header received by the cache with
       *              this response.
       * date_value
       *      is the value of the origin server's Date: header
       * request_time
       *      is the (local) time when the cache made the request
       *              that resulted in this cached response
       * response_time
       *      is the (local) time when the cache received the
       *              response
       * now
       *      is the current (local) time
       */

      apparent_age = max(0, response_time - date_value);
      corrected_received_age = max(apparent_age, age_value);
      response_delay = response_time - request_time;
      corrected_initial_age = corrected_received_age + response_delay;
      resident_time = now - response_time;
      current_age   = corrected_initial_age + resident_time;

   The current_age of a cache entry is calculated by adding the amount
   of time (in seconds) since the cache entry was last validated by the
   origin server to the corrected_initial_age. When a response is
   generated from a cache entry, the cache MUST include a single Age
   header field in the response with a value equal to the cache entry's
   current_age.

   The presence of an Age header field in a response implies that a
   response is not first-hand. However, the converse is not true, since
   the lack of an Age header field in a response does not imply that the 

   response is first-hand unless all caches along the request path are
   compliant with HTTP/1.1 (i.e., older HTTP caches did not implement
   the Age header field).</source>
          <target state="translated">캐시 된 항목이 최신인지 확인하려면 캐시의 보존 기간이 최신 수명을 초과하는지 알아야합니다. &lt;a href=&quot;#section-13.2.4&quot;&gt;13.2.4 절&lt;/a&gt; 에서 후자를 계산하는 방법에 대해 논의합니다 . 이 섹션에서는 응답 또는 캐시 항목의 수명을 계산하는 방법에 대해 설명합니다. 여기서는 &quot;지금&quot;이라는 용어를 사용하여 &quot;계산을 수행하는 호스트의 클록 현재 값&quot;을 의미합니다. HTTP를 사용하지만 특히 원본 서버와 캐시를 실행하는 호스트를 사용하는 호스트는 NTP [ &lt;a href=&quot;#ref-28&quot;&gt;28&lt;/a&gt; ] 또는 이와 유사한 프로토콜을 사용하여 시계를 세계적으로 정확한 시간 표준에 동기화해야합니다. HTTP / 1.1은 원 서버가 가능한 경우 모든 응답과 함께 응답을 생성 한 시간을 제공하는 Date 헤더를 보내도록 요구합니다 ( &lt;a href=&quot;#section-14.18&quot;&gt;섹션 14.18&lt;/a&gt; 참조).). &quot;date_value&quot;라는 용어를 사용하여 산술 연산에 적합한 형식으로 Date 헤더의 값을 나타냅니다. HTTP / 1.1은 Age 응답 헤더를 사용하여 캐시에서 얻을 때 응답 메시지의 예상 수명을 전달합니다. Age 필드 값은 응답이 오리진 서버에 의해 생성되거나 재확인 된 이후의 캐시 예상 시간입니다. 본질적으로 Age 값은 응답이 원래 서버의 경로를 따라 각 캐시에 상주 한 시간과 네트워크 경로를 따라 전송 된 시간의 합계입니다. &quot;age_value&quot;라는 용어는 산술 연산에 적합한 형식으로 Age 헤더의 값을 나타냅니다. 응답 연령은 완전히 독립적 인 두 가지 방법으로 계산할 수 있습니다.로컬 시계가 원래 서버의 시계와 합리적으로 동기화 된 경우 이제 빼기 date_value입니다. 결과가 음수이면 결과는 0으로 대체됩니다. 2. 응답 경로를 따라 모든 캐시가 HTTP / 1.1을 구현하는 경우 age_value. 응답이 수신 될 때 응답 기간을 계산하는 두 가지 독립적 인 방법이 있다고 가정하면, 거의 동기화 된 클럭 또는 모든 HTTP / 1.1이있는 한 corrected_received_age = max (now-date_value, age_value)와 같이 결합 할 수 있습니다. 경로는 신뢰할 수있는 (보수적 인) 결과를 얻습니다. 네트워크 부과 지연으로 인해 서버가 응답을 생성하는 시간과 다음 아웃 바운드 캐시 또는 클라이언트에서 수신하는 시간 사이에 상당한 간격이 지나갈 수 있습니다. 수정하지 않으면이 지연으로 인해 연령이 잘못 될 수 있습니다. 반환 된 Age 값을 초래 한 요청은 해당 Age 값을 생성하기 전에 시작되었으므로 요청이 시작된 시간을 기록하여 네트워크에 의해 발생 된 지연을 수정할 수 있습니다. 그런 다음 Age 값이 수신되면 응답이 수신 된 시간이 아니라 요청이 시작된 시간을 기준으로 해석되어야합니다. 이 알고리즘은 얼마나 많은 지연이 발생하더라도 보수적 인 동작을 낳습니다. 그래서 우리는 다음을 계산합니다. corrected_initial_age = corrected_received_age + (현재-request_time) 여기서 &quot;request_time&quot;은이 응답을 유발 한 요청이 전송 된 시간 (로컬 시계에 따름)입니다. 연령 계산 알고리즘 요약캐시가 응답을받는 경우 : / * * age_value *는이 응답으로 *가 캐시에 수신 한 Age : 헤더의 값입니다. * date_value *는 오리진 서버의 Date 값입니다. header * request_time *는 캐시가 요청을 한 (로컬) 시간입니다. *이 캐시 된 응답을 초래했습니다 * response_time *는 캐시가 *를 수신 한 (로컬) 시간입니다. response * now *는 현재 (현지) 시간입니다. * / 겉보기 = 최대 (0, response_time-date_value); corrected_received_age = max (apparent_age, age_value); response_delay = 응답 시간-요청 시간; corrected_initial_age = corrected_received_age + response_delay;resident_time = 현재-response_time; current_age = corrected_initial_age + 상주 _ 시간; 캐시 엔트리의 current_age는 캐시 서버가 원래 서버에 의해 마지막으로 유효성 검증 된 이후 시간을 초 단위로 추가하여 계산 된 시간 (초)을 corrected_initial_age에 계산합니다. 캐시 엔트리로부터 응답이 생성되면, 캐시는 캐시 엔트리의 current_age와 동일한 값으로 응답에 단일 Age 헤더 필드를 포함해야합니다. 응답에 Age 헤더 필드가 있다는 것은 응답이 직접적이지 않다는 것을 의미합니다. 그러나 응답에 Age 헤더 필드가 없다고해서 요청 경로를 따라 모든 캐시가 HTTP / 1.1을 준수하지 않는 한 (즉, 이전 HTTP 캐시가 그렇지 않은 경우) 직접 응답한다는 것을 의미하지 않기 때문에 그 반대는 사실이 아닙니다. Age 헤더 필드를 구현하십시오).</target>
        </trans-unit>
        <trans-unit id="93eea119dacd0c2679005705eb05947c3bbce8c5" translate="yes" xml:space="preserve">
          <source>In order to mitigate these flaws, HTTP/1.1 introduced pipelining (which proved difficult to implement) and persistent connections: the underlying TCP connection can be partially controlled using the &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header. HTTP/2 went a step further by multiplexing messages over a single connection, helping keep the connection warm, and more efficient.</source>
          <target state="translated">이러한 결함을 완화하기 위해 HTTP / 1.1은 구현하기 어려운 파이프 라이닝과 지속적인 연결을 도입했습니다. 기본 TCP 연결은 &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 헤더를 사용하여 부분적으로 제어 할 수 있습니다 . HTTP / 2는 단일 연결을 통해 메시지를 다중화하여 연결을 따뜻하고 효율적으로 유지하는 데 도움이되었습니다.</target>
        </trans-unit>
        <trans-unit id="58bad13cde4243caa4f445a82bf628be18579594" translate="yes" xml:space="preserve">
          <source>In order to mitigate this flaw, HTTP/1.1 introduced &lt;em&gt;pipelining&lt;/em&gt; (which proved difficult to implement) and &lt;em&gt;persistent connections&lt;/em&gt;: the underlying TCP connection can be partially controlled using the &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header. HTTP/2 went a step further by multiplexing messages over a single connection, helping keep the connection warm and more efficient.</source>
          <target state="translated">이 결함을 완화하기 위해 HTTP / 1.1은 &lt;em&gt;파이프 라이닝&lt;/em&gt; (구현하기 어려웠 음)과 &lt;em&gt;영구 연결을 도입했습니다&lt;/em&gt; . 기본 TCP 연결은 &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; 을&lt;/a&gt; 사용하여 부분적으로 제어 할 수 있습니다. 헤더를 . HTTP / 2는 단일 연결을 통해 메시지를 다중화하여 한 단계 더 나아가 연결을 따뜻하고 효율적으로 유지하는 데 도움이되었습니다.</target>
        </trans-unit>
        <trans-unit id="d06ed585978c0a513808590b8c6743bd98c74164" translate="yes" xml:space="preserve">
          <source>In parallel to the somewhat chaotic use of the diverse implementations of HTTP/1.0, and since 1995, well before the publication of HTTP/1.0 document the next year, proper standardization was in progress. The first standardized version of HTTP, HTTP/1.1 was published in early 1997, only a few months after HTTP/1.0.</source>
          <target state="translated">HTTP / 1.0의 다양한 구현을 다소 혼란스럽게 사용하고 1995 년 이후로 내년 HTTP / 1.0 문서를 게시하기 훨씬 전에 적절한 표준화가 진행되었습니다. HTTP의 첫 번째 표준화 된 버전 인 HTTP / 1.1은 1997 년 초에 발표되었으며 HTTP / 1.0 이후 불과 몇 달이 지나지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4a373ca506ac7942c288749c8f149a921b16adb3" translate="yes" xml:space="preserve">
          <source>In particular, a request is preflighted if &lt;strong&gt;any of the following conditions&lt;/strong&gt; is true:</source>
          <target state="translated">특히 &lt;strong&gt;다음 조건 중 하나&lt;/strong&gt; 라도 &lt;strong&gt;해당되는&lt;/strong&gt; 경우 요청이 프리 플라이트됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d1e5ffefab8e49049390586276d922518d4d867" translate="yes" xml:space="preserve">
          <source>In particular, the request &lt;em&gt;requires&lt;/em&gt; these two additional headers:</source>
          <target state="translated">특히, 요청 &lt;em&gt;에는&lt;/em&gt; 다음 두 가지 추가 헤더 &lt;em&gt;가 필요합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="32f825d053979b2bbea746eee217de968d1740ce" translate="yes" xml:space="preserve">
          <source>In practice, hop-by-hop compression is transparent for the server and the client, and is rarely used. &lt;a href=&quot;headers/te&quot;&gt;&lt;code&gt;TE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; are mostly used to send a response by chunks, allowing to start transmitting a resource without knowing its length.</source>
          <target state="translated">실제로 홉별 압축은 서버와 클라이언트에 대해 투명하며 거의 사용되지 않습니다. &lt;a href=&quot;headers/te&quot;&gt; &lt;code&gt;TE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;headers/transfer-encoding&quot;&gt; &lt;code&gt;Transfer-Encoding&lt;/code&gt; &lt;/a&gt; 은 대부분 청크로 응답을 전송하는 데 사용되므로 길이를 알지 않고도 리소스 전송을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fb0378e9b8c8212e3d2de953dca5265e4ca3124" translate="yes" xml:space="preserve">
          <source>In practice, this error is very rarely used. Instead of responding using this error code, which would be cryptic for the end user and difficult to fix, servers ignore the relevant header and serve an actual page to the user. It is assumed that even if the user won't be completely happy, they will prefer this to an error code.</source>
          <target state="translated">실제로이 오류는 거의 사용되지 않습니다. 최종 사용자에게는 암호화되어 수정하기 어려운이 오류 코드를 사용하여 응답하는 대신 서버는 관련 헤더를 무시하고 사용자에게 실제 페이지를 제공합니다. 사용자가 완전히 만족하지 않더라도 오류 코드보다 선호한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="5897a27e39859a1490a88859d07dae77805526ee" translate="yes" xml:space="preserve">
          <source>In practice, web developers don't need to implement compression mechanisms, both browsers and servers have it implemented already, but they have to be sure that the server is configured adequately. Compression happens at three different levels:</source>
          <target state="translated">실제로 웹 개발자는 압축 메커니즘을 구현할 필요가 없으며 브라우저와 서버 모두 이미 구현되어 있지만 서버가 적절하게 구성되어 있는지 확인해야합니다. 압축은 세 가지 다른 수준에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="495136708e3b335d9a535e1968ab6547efcb7046" translate="yes" xml:space="preserve">
          <source>In presence of an &lt;code&gt;Accept-Ranges&lt;/code&gt; header, the browser may try to &lt;em&gt;resume&lt;/em&gt; an interrupted download, rather than to start it from the start again.</source>
          <target state="translated">&lt;code&gt;Accept-Ranges&lt;/code&gt; 헤더 가 있으면 브라우저는 처음부터 다시 시작하지 않고 중단 된 다운로드 를 &lt;em&gt;다시 시작&lt;/em&gt; 하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7c4393bb4e04346146f3edbaf7c8cd5fd81dd69" translate="yes" xml:space="preserve">
          <source>In reality, there are more computers between a browser and the server handling the request: there are routers, modems, and more. Thanks to the layered design of the Web, these are hidden in the network and transport layers. HTTP is on top at the application layer. Although important to diagnose network problems, the underlying layers are mostly irrelevant to the description of HTTP.</source>
          <target state="translated">실제로 브라우저와 서버 사이에 요청을 처리하는 컴퓨터가 더 많습니다. 라우터, 모뎀 등이 있습니다. 웹의 계층 디자인 덕분에 네트워크와 전송 계층에 숨겨져 있습니다. HTTP는 응용 프로그램 계층에서 최상위에 있습니다. 네트워크 문제를 진단하는 데 중요하지만 기본 계층은 대부분 HTTP 설명과 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a1a0787f92838b7783a71a3a4c2afe47df40a00" translate="yes" xml:space="preserve">
          <source>In reality, there are more computers between a browser and the server handling the request: there are routers, modems, and more. Thanks to the layered design of the Web, these are hidden in the network and transport layers. HTTP is on top, at the application layer. Although important to diagnose network problems, the underlying layers are mostly irrelevant to the description of HTTP.</source>
          <target state="translated">실제로 브라우저와 요청을 처리하는 서버 사이에는 더 많은 컴퓨터가 있습니다. 라우터, 모뎀 등이 있습니다. 웹의 계층화 된 디자인 덕분에 네트워크 및 전송 계층에 숨겨져 있습니다. HTTP는 애플리케이션 계층의 맨 위에 있습니다. 네트워크 문제를 진단하는 데 중요하지만 기본 계층은 대부분 HTTP 설명과 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1441977c1eecf0cbb90000197c29c7bf7c86dab2" translate="yes" xml:space="preserve">
          <source>In requests without credentials, you can also use a wildcard value:</source>
          <target state="translated">자격 증명이없는 요청에서는 와일드 카드 값을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bf5f583aa5451ac94eabad6345a75ed78fe4350" translate="yes" xml:space="preserve">
          <source>In requests, (such as &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;), the client tells the server what type of data is actually sent.</source>
          <target state="translated">요청 (예 : &lt;a href=&quot;../methods/post&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt; )에서 클라이언트는 서버에 실제로 전송되는 데이터 유형을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="8a90c9dffff8f7d42978681a49c1181c2ea1638f" translate="yes" xml:space="preserve">
          <source>In response to &lt;a href=&quot;https://www.mozilla.org/en-US/security/advisories/mfsa2019-21/#CVE-2019-11730&quot;&gt;CVE-2019-11730&lt;/a&gt;, Firefox 68 and later define the origin of a page opened using a &lt;code&gt;file:///&lt;/code&gt; URI as unique. Therefore, other resources in the same directory or its subdirectories no longer satisfy the CORS same-origin rule. This new behavior is enabled by default using the &lt;code&gt;privacy.file_unique_origin&lt;/code&gt; preference.</source>
          <target state="translated">&lt;a href=&quot;https://www.mozilla.org/en-US/security/advisories/mfsa2019-21/#CVE-2019-11730&quot;&gt;CVE-2019-11730에&lt;/a&gt; 대한 응답으로 Firefox 68 이상은 &lt;code&gt;file:///&lt;/code&gt; URI를 사용하여 열린 페이지의 출처 를 고유 한 것으로 정의합니다. 따라서 동일한 디렉터리 또는 하위 디렉터리의 다른 리소스는 더 이상 CORS 동일 출처 규칙을 충족하지 않습니다. 이 새로운 동작은 &lt;code&gt;privacy.file_unique_origin&lt;/code&gt; 환경 설정을 사용하여 기본적으로 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="205212e02d3ed8aca2b00bcaaead0dc09052b8b2" translate="yes" xml:space="preserve">
          <source>In response, Chromium shipped &lt;a href=&quot;https://fetch.spec.whatwg.org/#corb&quot;&gt;Cross-Origin Read Blocking&lt;/a&gt;, which automatically protects certain resources (of</source>
          <target state="translated">이에 대응하여 Chromium은 특정 리소스를 자동으로 보호하는 &lt;a href=&quot;https://fetch.spec.whatwg.org/#corb&quot;&gt;Cross-Origin Read Blocking을&lt;/a&gt; 출시했습니다.</target>
        </trans-unit>
        <trans-unit id="f09312a5e29c9ecda7f1b42ac4b9044bcc540aa1" translate="yes" xml:space="preserve">
          <source>In response, the server sends back an &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header with &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt;, which means that the resource can be accessed by &lt;strong&gt;any&lt;/strong&gt; origin.</source>
          <target state="translated">이에 대한 응답으로 서버는 &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; 와 함께 &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; 헤더를 다시 보냅니다 . 이는 &lt;strong&gt;모든&lt;/strong&gt; 출처 에서 리소스에 액세스 할 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="1d41bda365255372b63ef811da0c711c5a50b4a0" translate="yes" xml:space="preserve">
          <source>In responses, a &lt;code&gt;Content-Type&lt;/code&gt; header tells the client what the content type of the returned content actually is. Browsers will do MIME sniffing in some cases and will not necessarily follow the value of this header; to prevent this behavior, the header &lt;a href=&quot;x-content-type-options&quot;&gt;&lt;code&gt;X-Content-Type-Options&lt;/code&gt;&lt;/a&gt; can be set to &lt;code&gt;nosniff&lt;/code&gt;.</source>
          <target state="translated">응답에서 &lt;code&gt;Content-Type&lt;/code&gt; 헤더는 클라이언트에게 반환 된 컨텐츠의 컨텐츠 유형이 무엇인지 알려줍니다. 브라우저는 경우에 따라 MIME 스니핑을 수행하며이 헤더의 값을 반드시 따를 필요는 없습니다. 이 동작을 방지하기 위해 &lt;a href=&quot;x-content-type-options&quot;&gt; &lt;code&gt;X-Content-Type-Options&lt;/code&gt; &lt;/a&gt; 헤더 를 &lt;code&gt;nosniff&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7328d876f6eb63e7721164796f1284534dc9f3db" translate="yes" xml:space="preserve">
          <source>In short the EU directive means that before somebody can store or retrieve any information from a computer, mobile phone or other device, the user must give informed consent to do so. Many websites have added banners (AKA &quot;cookie banners&quot;) since then to inform the user about the use of cookies.</source>
          <target state="translated">간단히 말해서 EU 지침은 누군가 컴퓨터, 휴대 전화 또는 기타 장치에서 정보를 저장하거나 검색하기 전에 사용자가 정보에 동의해야한다는 것을 의미합니다. 그 이후로 많은 웹 사이트가 사용자에게 쿠키 사용에 대해 알리기 위해 배너 (일명 &quot;쿠키 배너&quot;)를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="1d12b916e1ea56872beecbf2e4e9757af03ec500" translate="yes" xml:space="preserve">
          <source>In some cases, the operator of a cache MAY choose to configure it to
   return stale responses even when not requested by clients. This
   decision ought not be made lightly, but may be necessary for reasons
   of availability or performance, especially when the cache is poorly
   connected to the origin server. Whenever a cache returns a stale
   response, it MUST mark it as such (using a Warning header) enabling
   the client software to alert the user that there might be a potential
   problem. 

   It also allows the user agent to take steps to obtain a first-hand or
   fresh response. For this reason, a cache SHOULD NOT return a stale
   response if the client explicitly requests a first-hand or fresh one,
   unless it is impossible to comply for technical or policy reasons.</source>
          <target state="translated">경우에 따라 캐시 운영자는 클라이언트가 요청하지 않은 경우에도 오래된 응답을 반환하도록 캐시를 구성 할 수 있습니다. 이 결정은 간단하게 이루어져서는 안되지만 가용성 또는 성능상의 이유로, 특히 캐시가 원본 서버에 제대로 연결되지 않은 경우 필요할 수 있습니다. 캐시가 오래된 응답을 반환 할 때마다 클라이언트 소프트웨어가 잠재적 인 문제가있을 수 있음을 사용자에게 경고 할 수 있도록 캐시 경고 (경고 헤더 사용)로 표시해야합니다. 또한 사용자 에이전트가 직접 또는 새로운 응답을 얻기위한 단계를 수행 할 수 있습니다. 이러한 이유로, 기술적이거나 정책적인 이유로 준수 할 수없는 경우를 제외하고, 클라이언트가 명시 적으로 직접 또는 새로 요청한 경우 캐시는 오래된 응답을 반환해서는 안됩니다 (SHOULD NOT).</target>
        </trans-unit>
        <trans-unit id="d9444a4e91ad14c01e9590e0bedd4b5d6e8c782c" translate="yes" xml:space="preserve">
          <source>In summary, we recommend looking for the string &amp;ldquo;Mobi&amp;rdquo; anywhere in the User Agent to detect a mobile device.</source>
          <target state="translated">요약하면, 모바일 장치를 탐지하기 위해 사용자 에이전트의 어느 곳에서나&amp;ldquo;Mobi&amp;rdquo;라는 문자열을 찾는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b4e56f9ae18c2388ab7193bb81f5a1535e68eead" translate="yes" xml:space="preserve">
          <source>In that specification a client may send a request that contains an extension declaration, that describes the extension to be used. If the server receives such a request, but any described extensions are not supported for the request, then the server responds with the 510 status code.</source>
          <target state="translated">해당 사양에서 클라이언트는 사용할 확장을 설명하는 확장 선언이 포함 된 요청을 보낼 수 있습니다. 서버가 이러한 요청을 수신하지만 설명 된 확장이 요청에 대해 지원되지 않는 경우 서버는 510 상태 코드로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="10ded161d3ab76c69e065e7f428e51b119cc26b8" translate="yes" xml:space="preserve">
          <source>In the above scenario, &lt;code&gt;no-referrer&lt;/code&gt; will only be used if &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt; is not supported by the browser.</source>
          <target state="translated">위 시나리오에서 &lt;code&gt;no-referrer&lt;/code&gt; 는 브라우저가 &lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt; 을 지원하지 않는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="32c2d5256e5dc0b53e01514a025fbdaca4825463" translate="yes" xml:space="preserve">
          <source>In the absence of a MIME type, or in certain cases where browsers believe they are incorrect, browsers may perform &lt;em&gt;MIME sniffing&lt;/em&gt; &amp;mdash; guessing the correct MIME type by looking at the bytes of the resource.</source>
          <target state="translated">MIME 형식이 없거나 브라우저가 잘못되었다고 판단되는 특정 경우 브라우저는 &lt;em&gt;MIME 스니핑을&lt;/em&gt; 수행 할 수 있습니다. 리소스의 바이트를보고 올바른 MIME 형식을 추측합니다.</target>
        </trans-unit>
        <trans-unit id="cdc3e1dfd2d8a54df8817aa9e2334a8c551dfaed" translate="yes" xml:space="preserve">
          <source>In the case of a &quot;Basic&quot; authentication like shown in the figure, the exchange &lt;strong&gt;must&lt;/strong&gt; happen over an HTTPS (TLS) connection to be secure.</source>
          <target state="translated">그림과 같이 &quot;기본&quot;인증의 경우 교환 &lt;strong&gt;하려면&lt;/strong&gt; HTTPS (TLS) 연결을 통해 교환 &lt;strong&gt;해야&lt;/strong&gt; 안전합니다.</target>
        </trans-unit>
        <trans-unit id="9597ab40baf818d41d5819712b2c6f8aebbfee81" translate="yes" xml:space="preserve">
          <source>In the cases where you want the method used to be changed to &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, use &lt;a href=&quot;303&quot;&gt;&lt;code&gt;303 See Other&lt;/code&gt;&lt;/a&gt; instead. This is useful when you want to give a response to a &lt;a href=&quot;../methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; method that is not the uploaded resource but a confirmation message such as: 'you successfully uploaded XYZ'.</source>
          <target state="translated">방법을 &lt;a href=&quot;../methods/get&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; 으로 변경하려는 경우 대신 &lt;a href=&quot;303&quot;&gt; &lt;code&gt;303 See Other&lt;/code&gt; &lt;/a&gt; 사용 하십시오 . 이것은 업로드 된 리소스가 아니라 'XYZ를 성공적으로 업로드했습니다'와 같은 확인 메시지 인 &lt;a href=&quot;../methods/put&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt; 메소드에 응답을 제공하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="8606d0b35470c00c20840dcc3a06c5fbe9904c62" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Accept = [ ( &quot;,&quot; / ( media-range [ accept-params ] ) ) *( OWS &quot;,&quot; [
    OWS ( media-range [ accept-params ] ) ] ) ]
   Accept-Charset = *( &quot;,&quot; OWS ) ( ( charset / &quot;*&quot; ) [ weight ] ) *( OWS
    &quot;,&quot; [ OWS ( ( charset / &quot;*&quot; ) [ weight ] ) ] )
   Accept-Encoding = [ ( &quot;,&quot; / ( codings [ weight ] ) ) *( OWS &quot;,&quot; [ OWS
    ( codings [ weight ] ) ] ) ]
   Accept-Language = *( &quot;,&quot; OWS ) ( language-range [ weight ] ) *( OWS
    &quot;,&quot; [ OWS ( language-range [ weight ] ) ] )
   Allow = [ ( &quot;,&quot; / method ) *( OWS &quot;,&quot; [ OWS method ] ) ]

   BWS = &amp;lt;BWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Content-Encoding = *( &quot;,&quot; OWS ) content-coding *( OWS &quot;,&quot; [ OWS
    content-coding ] )
   Content-Language = *( &quot;,&quot; OWS ) language-tag *( OWS &quot;,&quot; [ OWS
    language-tag ] )
   Content-Location = absolute-URI / partial-URI
   Content-Type = media-type

   Date = HTTP-date

   Expect = &quot;100-continue&quot;

   From = mailbox

   GMT = %x47.4D.54 ; GMT

   HTTP-date = IMF-fixdate / obs-date

   IMF-fixdate = day-name &quot;,&quot; SP date1 SP time-of-day SP GMT

   Location = URI-reference

   Max-Forwards = 1*DIGIT

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   RWS = &amp;lt;RWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;
   Referer = absolute-URI / partial-URI
   Retry-After = HTTP-date / delay-seconds 

   Server = product *( RWS ( product / comment ) )

   URI-reference = &amp;lt;URI-reference, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   User-Agent = product *( RWS ( product / comment ) )

   Vary = &quot;*&quot; / ( *( &quot;,&quot; OWS ) field-name *( OWS &quot;,&quot; [ OWS field-name ]
    ) )

   absolute-URI = &amp;lt;absolute-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   accept-ext = OWS &quot;;&quot; OWS token [ &quot;=&quot; ( token / quoted-string ) ]
   accept-params = weight *accept-ext
   asctime-date = day-name SP date3 SP time-of-day SP year

   charset = token
   codings = content-coding / &quot;identity&quot; / &quot;*&quot;
   comment = &amp;lt;comment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   content-coding = token

   date1 = day SP month SP year
   date2 = day &quot;-&quot; month &quot;-&quot; 2DIGIT
   date3 = month SP ( 2DIGIT / ( SP DIGIT ) )
   day = 2DIGIT
   day-name = %x4D.6F.6E ; Mon
    / %x54.75.65 ; Tue
    / %x57.65.64 ; Wed
    / %x54.68.75 ; Thu
    / %x46.72.69 ; Fri
    / %x53.61.74 ; Sat
    / %x53.75.6E ; Sun
   day-name-l = %x4D.6F.6E.64.61.79 ; Monday
    / %x54.75.65.73.64.61.79 ; Tuesday
    / %x57.65.64.6E.65.73.64.61.79 ; Wednesday
    / %x54.68.75.72.73.64.61.79 ; Thursday
    / %x46.72.69.64.61.79 ; Friday
    / %x53.61.74.75.72.64.61.79 ; Saturday
    / %x53.75.6E.64.61.79 ; Sunday
   delay-seconds = 1*DIGIT

   field-name = &amp;lt;comment, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;

   hour = 2DIGIT

   language-range = &amp;lt;language-range, see &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;[RFC4647], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;
   language-tag = &amp;lt;Language-Tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;

   mailbox = &amp;lt;mailbox, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;[RFC5322], Section&amp;nbsp;3.4&lt;/a&gt;&amp;gt;
   media-range = ( &quot;*/*&quot; / ( type &quot;/*&quot; ) / ( type &quot;/&quot; subtype ) ) *( OWS
    &quot;;&quot; OWS parameter ) 

   media-type = type &quot;/&quot; subtype *( OWS &quot;;&quot; OWS parameter )
   method = token
   minute = 2DIGIT
   month = %x4A.61.6E ; Jan
    / %x46.65.62 ; Feb
    / %x4D.61.72 ; Mar
    / %x41.70.72 ; Apr
    / %x4D.61.79 ; May
    / %x4A.75.6E ; Jun
    / %x4A.75.6C ; Jul
    / %x41.75.67 ; Aug
    / %x53.65.70 ; Sep
    / %x4F.63.74 ; Oct
    / %x4E.6F.76 ; Nov
    / %x44.65.63 ; Dec

   obs-date = &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date / asctime-date

   parameter = token &quot;=&quot; ( token / quoted-string )
   partial-URI = &amp;lt;partial-URI, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   product = token [ &quot;/&quot; product-version ]
   product-version = token
   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   qvalue = ( &quot;0&quot; [ &quot;.&quot; *3DIGIT ] ) / ( &quot;1&quot; [ &quot;.&quot; *3&quot;0&quot; ] )

   &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date = day-name-l &quot;,&quot; SP date2 SP time-of-day SP GMT

   second = 2DIGIT
   subtype = token

   time-of-day = hour &quot;:&quot; minute &quot;:&quot; second
   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   type = token

   weight = OWS &quot;;&quot; OWS &quot;q=&quot; qvalue

   year = 4DIGIT 

Index

   1
      1xx Informational (status code class)  50

   2
      2xx Successful (status code class)  51

   3
      3xx Redirection (status code class)  54

   4
      4xx Client Error (status code class)  58

   5
      5xx Server Error (status code class)  62

   1
      100 Continue (status code)  50
      100-continue (expect value)  34
      101 Switching Protocols (status code)  50

   2
      200 OK (status code)  51
      201 Created (status code)  52
      202 Accepted (status code)  52
      203 Non-Authoritative Information (status code)  52
      204 No Content (status code)  53
      205 Reset Content (status code)  53

   3
      300 Multiple Choices (status code)  55
      301 Moved Permanently (status code)  56
      302 Found (status code)  56
      303 See Other (status code)  57
      305 Use Proxy (status code)  58
      306 (Unused) (status code)  58
      307 Temporary Redirect (status code)  58

   4
      400 Bad Request (status code)  58
      402 Payment Required (status code)  59
      403 Forbidden (status code)  59
      404 Not Found (status code)  59
      405 Method Not Allowed (status code)  59
      406 Not Acceptable (status code)  59
      408 Request Timeout (status code)  60
      409 Conflict (status code)  60 

      410 Gone (status code)  60
      411 Length Required (status code)  61
      413 Payload Too Large (status code)  61
      414 URI Too Long (status code)  61
      415 Unsupported Media Type (status code)  62
      417 Expectation Failed (status code)  62
      426 Upgrade Required (status code)  62

   5
      500 Internal Server Error (status code)  63
      501 Not Implemented (status code)  63
      502 Bad Gateway (status code)  63
      503 Service Unavailable (status code)  63
      504 Gateway Timeout (status code)  63
      505 HTTP Version Not Supported (status code)  64

   A
      Accept header field  38
      Accept-Charset header field  40
      Accept-Encoding header field  41
      Accept-Language header field  42
      Allow header field  72

   C
      cacheable  24
      compress (content coding)  11
      conditional request  36
      CONNECT method  30
      content coding  11
      content negotiation  6
      Content-Encoding header field  12
      Content-Language header field  13
      Content-Location header field  15
      Content-Transfer-Encoding header field  89
      Content-Type header field  10

   D
      Date header field  67
      deflate (content coding)  11
      DELETE method  29

   E
      Expect header field  34

   F
      From header field  44 

   G
      GET method  24
      Grammar
         Accept  38
         Accept-Charset  40
         Accept-Encoding  41
         accept-ext  38
         Accept-Language  42
         accept-params  38
         Allow  72
         asctime-date  66
         charset  9
         codings  41
         content-coding  11
         Content-Encoding  12
         Content-Language  13
         Content-Location  15
         Content-Type  10
         Date  67
         date1  65
         day  65
         day-name  65
         day-name-l  65
         delay-seconds  69
         Expect  34
         From  44
         GMT  65
         hour  65
         HTTP-date  65
         IMF-fixdate  65
         language-range  42
         language-tag  13
         Location  68
         Max-Forwards  36
         media-range  38
         media-type  8
         method  21
         minute  65
         month  65
         obs-date  66
         parameter  8
         product  46
         product-version  46
         qvalue  38
         Referer  45
         Retry-After  69
         &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-date  66
         second  65 

         Server  73
         subtype  8
         time-of-day  65
         type  8
         User-Agent  46
         Vary  70
         weight  38
         year  65
      gzip (content coding)  11

   H
      HEAD method  25

   I
      idempotent  23

   L
      Location header field  68

   M
      Max-Forwards header field  36
      MIME-Version header field  89

   O
      OPTIONS method  31

   P
      payload  17
      POST method  25
      PUT method  26

   R
      Referer header field  45
      representation  7
      Retry-After header field  69

   S
      safe  22
      selected representation  7, 71
      Server header field  73
      Status Codes Classes
         1xx Informational  50
         2xx Successful  51
         3xx Redirection  54
         4xx Client Error  58
         5xx Server Error  62 

   T
      TRACE method  32

   U
      User-Agent header field  46

   V
      Vary header field  70

   X
      x-compress (content coding)  11
      x-gzip (content coding)  11

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                  [Page 101]</source>
          <target state="translated">아래에 수집 된 ABNF에서 목록 규칙은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;[RFC7230]의 1.2 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;절에&lt;/a&gt; 따라 확장됩니다 . Accept = [( &quot;,&quot;/ (미디어 범위 [accept-params])) * (OWS &quot;,&quot;[OWS (미디어 범위 [accept-params])])] Accept-Charset = * ( &quot;,&quot;OWS ) ((문자셋 / &quot;*&quot;) [무게]) * (OWS &quot;,&quot;[OWS ((문자셋 / &quot;*&quot;) [무게])]) Accept-Encoding = [( &quot;,&quot;/ (코딩 [무게] )) * (OWS &quot;,&quot;[OWS (코딩 [weight])])] Accept-Language = * ( &quot;,&quot;OWS) (language-range [weight]) * (OWS &quot;,&quot;[OWS (언어 범위 [weight])]) Allow = [( &quot;,&quot;/ method) * (OWS &quot;,&quot;[OWS method])] BWS = &amp;lt;BWS &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;, 섹션 3.2.3&lt;/a&gt; 참조 [RFC7230]&amp;gt; 콘텐츠 인코딩 = * ( &quot;,&quot;OWS) 콘텐츠 코딩 * (OWS &quot;,&quot;[OWS 콘텐츠 코딩]) 콘텐츠 언어 = * ( &quot;,&quot;OWS) 언어 태그 * (OWS &quot;,&quot;[OWS 언어 태그]) Content-Location = 절대 URI / 부분 URI Content-Type = 미디어 유형 날짜 = HTTP 날짜 예상 = &quot;100- 연속&quot;보낸 사람 = 사서함 GMT = % x47.4D.54; GMT HTTP-date = IMF-fixdate / obs-date IMF-fixdate = day-name &quot;,&quot;SP date1 SP 시간 SP SP-MT SP = MT- 참조 Max-Forwards = 1 * DIGIT OWS = &amp;lt;OWS, 참조 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], 섹션 3.2.3&lt;/a&gt; &amp;gt; RWS = &amp;lt;RWS, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], 섹션 3.2.3&lt;/a&gt; &amp;gt;참조 자 = 절대 URI / 부분 URI 재시도 후 = HTTP 날짜 / 지연 시간 서버 = 제품 * (RWS (제품 / 설명)) URI 참조 = &amp;lt;URI 참조, 참조&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], 2.7 절&lt;/a&gt; &amp;gt; User-Agent = product * (RWS (product / comment)) Vary = &quot;*&quot;/ (* ( &quot;,&quot;OWS) field-name * (OWS &quot;,&quot;[OWS field-name] )) 절대 URI = &amp;lt;절대 URI, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], 섹션 2.7 참조&lt;/a&gt; &amp;gt; accept-ext = OWS &quot;;&quot; OWS 토큰 [ &quot;=&quot;(token / quoted-string)] accept-params = weight * accept-ext asctime-date = day-name SP date3 SP SP 시간 문자 연도 = 토큰 코딩 = 콘텐츠 코딩 / &quot; identity &quot;/&quot;* &quot;comment = &amp;lt;comment, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], 섹션 3.2.6 참조&lt;/a&gt;&amp;gt; 콘텐츠 코딩 = 토큰 날짜 1 = 일 SP 월 SP 년 날짜 2 = 일 &quot;-&quot;월 &quot;-&quot;2DIGIT 날짜 3 = 월 SP (2DIGIT / (SP DIGIT)) 일 = ​​2DIGIT 일 이름 = % x4D.6F.6E; Mon / % x54.75.65; 화 / % x57.65.64; 수 /%x54.68.75; Thu / % x46.72.69; Fri / % x53.61.74; 토 / % x53.75.6E; 일요일 이름 -l = % x4D.6F.6E.64.61.79; 월요일 / % x54.75.65.73.64.61.79; 화요일 / % x57.65.64.6E.65.73.64.61.79; 수요일 / % x54.68.75.72.73.64.61.79; 목요일 / % x46.72.69.64.61.79; 금요일 / % x53.61.74.75.72.64.61.79; 토요일 / % x53.75.6E.64.61.79; 일요일 지연 시간 = 1 * DIGIT field-name = &amp;lt;comment, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;섹션 [RFC7230], 섹션 3.2&lt;/a&gt; &amp;gt; hour = 2DIGIT 언어 범위 = &amp;lt;language-range &lt;a href=&quot;https://tools.ietf.org/html/rfc4647#section-2.1&quot;&gt;, 섹션 2.1 [RFC4647], 섹션 2.1 참조&lt;/a&gt;&amp;gt; language-tag = &amp;lt;Language-Tag, &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;섹션 2.1 [RFC5646], 섹션 2.1&lt;/a&gt; &amp;gt; mailbox = &amp;lt;mailbox &lt;a href=&quot;https://tools.ietf.org/html/rfc5322#section-3.4&quot;&gt;섹션, 섹션 3.4 참조&lt;/a&gt; &amp;gt; media-range = ( &quot;* / *&quot;/ (type &quot;/ *&quot;) / (유형 &quot;/&quot;하위 유형)) * (OWS &quot;;&quot;OWS 매개 변수) 미디어 유형 = 유형 &quot;/&quot;하위 유형 * (OWS &quot;;&quot;OWS 매개 변수) 방법 = 토큰 분 = 2DIGIT 월 = % x4A.61.6E; Jan / % x46.65.62; 2 월 / % x4D.61.72; 3 월 / % x41.70.72; Apr / % x4D.61.79; 5 월 / % x4A.75.6E; Jun / % x4A.75.6C; Jul / % x41.75.67; Aug / % x53.65.70; 9 월 /%x4F.63.74; Oct / % x4E.6F.76; 11 월 /%x44.65.63; 12 월 obs-date = &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt; -date / asctime-date 매개 변수 = 토큰 &quot;=&quot;(token / quoted-string) partial-URI = &amp;lt;partial-URI &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;, 섹션 2.7 [RFC7230] 참조&lt;/a&gt;&amp;gt; product = token [ &quot;/&quot;product-version] product-version = token quoted-string = &amp;lt;quoted-string &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;, 섹션 3.2.6&lt;/a&gt; 참조 [RFC7230] &amp;gt; qvalue = ( &quot;0&quot;[ &quot;.&quot;* 3DIGIT]) / ( &quot;1&quot;[ &quot;.&quot;* 3 &quot;0&quot;]) &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt; -date = day-name-l &quot;,&quot;SP date2 SP 시간 SP GMT 초 = 2DIGIT 하위 유형 = 토큰 시간 = 시간 &quot;:&quot;분 &quot;:&quot;두 번째 토큰 = &amp;lt;토큰, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], 섹션 3.2.6 참조&lt;/a&gt;&amp;gt; 유형 = 토큰 무게 = OWS &quot;;&quot; OWS &quot;q =&quot;qvalue 연도 = 4DIGIT 색인 1 1xx 정보 (상태 코드 클래스) 50 2 2xx 성공 (상태 코드 클래스) 51 3 3xx 리디렉션 (상태 코드 클래스) 54 4 4xx 클라이언트 오류 (상태 코드 클래스) 58 5 5xx 서버 오류 (상태 코드 클래스) ) 62 1100 Continue (상태 코드) 50100-continue (예상 값) 34101 스위칭 프로토콜 (상태 코드) 50 2200 OK (상태 코드) 51201 생성 (상태 코드) 52202 수락 (상태 코드) 52203 비 -Authoritative Information (상태 코드) 52204 No Content (상태 코드) 53205 Content Reset (상태 코드) 53 3300 다중 선택 (상태 코드) 55301 영구적으로 이동 (상태 코드) 56302 Found (상태 코드) 56303 참조 기타 (상태 코드) 57305 사용프록시 (상태 코드) 58306 (사용하지 않음) (상태 코드) 58307 임시 리디렉션 (상태 코드) 58 4400 잘못된 요청 (상태 코드) 58402 결제 필요 (상태 코드) 59403 금지 (상태 코드) 59404 찾을 수 없음 (상태 코드) 59405 허용되지 않는 방법 (상태 코드) 59406 허용되지 않음 (상태 코드) 59408 요청 시간 초과 (상태 코드) 60 409 충돌 (상태 코드) 60410 사라짐 (상태 코드) 60411 길이 (상태 코드) ) 61413 페이로드가 너무 큼 (상태 코드) 61414 URI가 너무 깁니다 (상태 코드) 61415 지원되지 않는 미디어 유형 (상태 코드) 624117 예상 실패 (상태 코드) 62426 업그레이드 필요 (상태 코드) 62 5500 내부 서버 오류 (상태 코드) 63501 구현되지 않음 (상태 코드) 63502 잘못된 게이트웨이 (상태 코드) 63503 서비스를 사용할 수 없음 (상태 코드) 63504 게이트웨이 시간 초과 (상태 코드) 63505 HTTP 버전이 지원되지 않음 (상태 코드) 64 A 수락 헤더 필드 38 수락-문자셋 헤더 필드 40 수락 인코딩 헤더 필드 41 수락 언어 헤더 필드 42 헤더 필드 허용 72 C 캐시 가능 24 압축 (콘텐츠 코딩) 11 조건부 요청 36 연결 방법 30 콘텐츠 코딩 11 콘텐츠 협상 6 콘텐츠 인코딩 헤더 필드 12 콘텐츠 언어 헤더 필드 13 콘텐츠 위치 헤더 필드 15 Content-Transfer-Encoding 헤더 필드 89 Content-Type 헤더 필드 10 D 날짜 헤더 필드 67 deflate (컨텐츠 코딩) 11 DELETE 방법 29 E 예상 헤더필드 34 F 헤더 필드에서 44 G GET 방법 24 문법 수락 38 수락 문자 집합 40 수락 인코딩 41 수락 확장 38 수락 언어 42 수락 매개 변수 38 허용 72 asctime-date 66 문자 세트 9 코딩 41 내용 코딩 11 내용- 인코딩 12 내용 언어 13 내용 위치 15 내용 유형 10 날짜 67 날짜 1 65 일 65 일 이름 65 일 이름 -l 65 지연 시간 69 예상 34 44에서 44 GMT 65 시간 65 HTTP- 날짜 65 IMF 수정 날짜 65 언어 범위 42 언어 태그 13 위치 68 최대 전달 36 미디어 범위 38미디어 유형 8 방법 21 분 65 개월 65 추정치 66 매개 변수 8 제품 46 제품 버전 46 q 값 38 리퍼러 45 재시도 후 69 &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;rfc850&lt;/a&gt;-66 일 65 초 65 서버 73 하위 유형 8 시간 65 일 유형 8 사용자 에이전트 46 변동 70 중량 38 년 65 gzip (콘텐츠 코딩) 11 H HEAD 방법 25 dem 등원 23 L 위치 헤더 필드 68 M 최대 전달 헤더 필드 36 MIME- 버전 헤더 필드 89 O 옵션 방법 31 P 페이로드 17 POST 방법 25 PUT 방법 26 R 참조 헤더 필드 45 표시 7 재시도 후 헤더 필드 69 S 안전 22 선택된 표시 7,71 서버 헤더 필드 73 상태 코드 클래스 1xx 정보 50 2xx 성공 51 3xx 리디렉션 54 4xx 클라이언트 오류 58 5xx 서버 오류 62 T TRACE 방법 32 U 사용자 에이전트 헤더 필드 46 V 가변 헤더 필드 70 X x 압축 (콘텐츠 코딩) 11 x-gzip (콘텐츠 코딩) 11 작성자 주소 Roy T. Fielding (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI :CA 95110 USA 이메일 : fielding@gbiv.com URI :CA 95110 USA 이메일 : fielding@gbiv.com URI : &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Julian F. Reschke (편집자) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 독일 이메일 : julian.reschke@greenbytes.de URI : &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; 필딩 &amp;amp; Reschke 표준 트랙 [페이지 101]</target>
        </trans-unit>
        <trans-unit id="e5c21a021da725c4cf94f0a415f9a51eddeeff8c" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Accept-Ranges = acceptable-ranges

   Content-Range = byte-content-range / other-content-range

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   If-Range = entity-tag / HTTP-date

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Range = byte-ranges-specifier / other-ranges-specifier

   acceptable-ranges = ( *( &quot;,&quot; OWS ) range-unit *( OWS &quot;,&quot; [ OWS
    range-unit ] ) ) / &quot;none&quot;

   byte-content-range = bytes-unit SP ( byte-range-resp /
    unsatisfied-range )
   byte-range = first-byte-pos &quot;-&quot; last-byte-pos
   byte-range-resp = byte-range &quot;/&quot; ( complete-length / &quot;*&quot; )
   byte-range-set = *( &quot;,&quot; OWS ) ( byte-range-spec /
    suffix-byte-range-spec ) *( OWS &quot;,&quot; [ OWS ( byte-range-spec /
    suffix-byte-range-spec ) ] )
   byte-range-spec = first-byte-pos &quot;-&quot; [ last-byte-pos ]
   byte-ranges-specifier = bytes-unit &quot;=&quot; byte-range-set
   bytes-unit = &quot;bytes&quot;

   complete-length = 1*DIGIT

   entity-tag = &amp;lt;entity-tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;[RFC7232], Section&amp;nbsp;2.3&lt;/a&gt;&amp;gt;

   first-byte-pos = 1*DIGIT

   last-byte-pos = 1*DIGIT

   other-content-range = other-range-unit SP other-range-resp
   other-range-resp = *CHAR
   other-range-set = 1*VCHAR
   other-range-unit = token
   other-ranges-specifier = other-range-unit &quot;=&quot; other-range-set

   range-unit = bytes-unit / other-range-unit

   suffix-byte-range-spec = &quot;-&quot; suffix-length 

   suffix-length = 1*DIGIT

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   unsatisfied-range = &quot;*/&quot; complete-length

Index

   2
      206 Partial Content (status code)  10

   4
      416 Range Not Satisfiable (status code)  15

   A
      Accept-Ranges header field  7

   C
      Content-Range header field  12

   G
      Grammar
         Accept-Ranges  7
         acceptable-ranges  7
         byte-content-range  12
         byte-range  12
         byte-range-resp  12
         byte-range-set  5
         byte-range-spec  5
         byte-ranges-specifier  5
         bytes-unit  5
         complete-length  12
         Content-Range  12
         first-byte-pos  5
         If-Range  9
         last-byte-pos  5
         other-content-range  12
         other-range-resp  12
         other-range-unit  5, 7
         Range  8
         range-unit  5
         ranges-specifier  5
         suffix-byte-range-spec  6
         suffix-length  6
         unsatisfied-range  12 

   I
      If-Range header field  9

   M
      Media Type
         multipart/byteranges  18, 21
         multipart/x-byteranges  19
      multipart/byteranges Media Type  18, 21
      multipart/x-byteranges Media Type  21

   R
      Range header field  8

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Yves Lafon (editor)
   World Wide Web Consortium
   W3C / ERCIM
   2004, rte des Lucioles
   Sophia-Antipolis, AM  06902
   France

   EMail: ylafon@w3.org
   URI:   &lt;a href=&quot;http://www.raubacapeu.net/people/yves/&quot;&gt;http://www.raubacapeu.net/people/yves/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding, et al.             Standards Track                   [Page 25]</source>
          <target state="translated">아래에 수집 된 ABNF에서 목록 규칙은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;[RFC7230] 1.2 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;절에&lt;/a&gt; 따라 확장됩니다 . 수용 범위 = 수용 가능 범위 Content-Range = byte-content-range / other-content-range HTTP-date = &amp;lt;HTTP-date &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;, 섹션 7.1.1.1 [RFC7231], 섹션 7.1.1.1 참조&lt;/a&gt; &amp;gt; If-Range = entity-tag / HTTP -date OWS = &amp;lt;OWS &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;, 섹션 3.2.3 [RFC7230]&lt;/a&gt; 참조&amp;gt; 범위 = 바이트 범위 지정자 / 기타 범위 지정자 수용 가능 범위 = (* ( &quot;,&quot;OWS) 범위 단위 * (OWS &quot;,&quot;[OWS 범위 단위])) / &quot;없음&quot;바이트 내용 -range = bytes-unit SP (바이트 범위-답변 / 만족 된 범위) byte-range = first-byte-pos &quot;-&quot;last-byte-pos 바이트-범위 -resp = 바이트-범위 &quot;/&quot;(완료- length / &quot;*&quot;) 바이트 범위 세트 = * ( &quot;,&quot;OWS) (바이트 범위 스펙 / 접미사 바이트 범위 스펙) * (OWS &quot;,&quot;[OWS (바이트 범위 스펙 / 접미사 -byte-range-spec)]) byte-range-spec = first-byte-pos &quot;-&quot;[last-byte-pos] 바이트 범위 지정자 = bytes-unit &quot;=&quot;바이트 범위 설정 바이트 단위 = &quot;바이트&quot;complete-length = 1 * DIGIT 엔티티 태그 = &amp;lt;엔티티 태그, &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;[RFC7232]&lt;/a&gt; 참조 ,섹션 2.3&amp;gt; first-byte-pos = 1 * DIGIT last-byte-pos = 1 * DIGIT other-content-range = 기타 범위 단위 SP other-range-resp other-range-resp = * CHAR other-range-set = 1 * VCHAR other-range-unit = token other-ranges-specifier = other-range-unit &quot;=&quot;other-range-set range-unit = bytes-unit / other-range-unit 접미사-바이트-범위-사양 = &quot;-&quot;접미사 길이 접미사 길이 = 1 * DIGIT 토큰 = &amp;lt;토큰, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], 섹션 3.2.6 참조&lt;/a&gt;&amp;gt; 만족스럽지 않은 범위 = &quot;* /&quot;전체 길이 색인 2206 부분 컨텐츠 (상태 코드) 10 4416 범위를 만족할 수없는 범위 (상태 코드) 15 A 수락 범위 헤더 필드 7 C 컨텐츠 범위 헤더 필드 12 G 문법 수락- 범위 7 수용 가능 범위 7 바이트 내용 범위 12 바이트 범위 12 바이트 범위 해상도 12 바이트 범위 세트 5 바이트 범위 스펙 5 바이트 범위 지정자 5 바이트 단위 5 전체 길이 12 내용 범위 12 first-byte-pos 5 If-Range 9 last-byte-pos 5 other-content-range 12 other-range-resp 12 other-range-unit 5,7 범위 8 범위 단위 5 범위 지정자 5 접미사 바이트 범위 사양 6 접미사 길이 6 불만족 범위 12 I If-Range 헤더 필드 9 M 미디어 유형 멀티 파트 / 바이트 범위 18, 21 멀티 파트 / x- 바이트 범위 19 멀티 파트 / byteranges 미디어 유형 18, 21 multipart / x-byteranges 미디어 유형 21 R 범위 헤더 필드 8 작성자 주소 Roy T. Fielding (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI :21 멀티 파트 / x- 바이트 범위 미디어 유형 21 R 범위 헤더 필드 8 작성자 주소 Roy T. Fielding (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI :21 멀티 파트 / x- 바이트 범위 미디어 유형 21 R 범위 헤더 필드 8 작성자 주소 Roy T. Fielding (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI : &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Yves Lafon (편집자) 월드 와이드 웹 컨소시엄 W3C / ERCIM 2004, rte des Lucioles Sophia-Antipolis, AM 06902 프랑스 이메일 : ylafon@w3.org URI : &lt;a href=&quot;http://www.raubacapeu.net/people/yves/&quot;&gt;http : //www.raubacapeu .net / people / yves /&lt;/a&gt; Julian F. Reschke (편집자) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 독일 이메일 : julian.reschke@greenbytes.de URI : &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding, et al . 표준 트랙 [페이지 25]</target>
        </trans-unit>
        <trans-unit id="7f7187563510f7b95d508990280bc6d64358c455" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Age = delta-seconds

   Cache-Control = *( &quot;,&quot; OWS ) cache-directive *( OWS &quot;,&quot; [ OWS
    cache-directive ] )

   Expires = HTTP-date

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Pragma = *( &quot;,&quot; OWS ) pragma-directive *( OWS &quot;,&quot; [ OWS
    pragma-directive ] )

   Warning = *( &quot;,&quot; OWS ) warning-value *( OWS &quot;,&quot; [ OWS warning-value ]
    )

   cache-directive = token [ &quot;=&quot; ( token / quoted-string ) ]

   delta-seconds = 1*DIGIT

   extension-pragma = token [ &quot;=&quot; ( token / quoted-string ) ]

   field-name = &amp;lt;field-name, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], Section&amp;nbsp;3.2&lt;/a&gt;&amp;gt;

   port = &amp;lt;port, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;
   pragma-directive = &quot;no-cache&quot; / extension-pragma
   pseudonym = &amp;lt;pseudonym, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.1&quot;&gt;[RFC7230], Section&amp;nbsp;5.7.1&lt;/a&gt;&amp;gt;

   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   uri-host = &amp;lt;uri-host, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], Section&amp;nbsp;2.7&lt;/a&gt;&amp;gt;

   warn-agent = ( uri-host [ &quot;:&quot; port ] ) / pseudonym
   warn-code = 3DIGIT
   warn-date = DQUOTE HTTP-date DQUOTE
   warn-text = quoted-string
   warning-value = warn-code SP warn-agent SP warn-text [ SP warn-date
    ] 

Index

   1
      110 (warn-code)  31
      111 (warn-code)  31
      112 (warn-code)  31
      113 (warn-code)  31
      199 (warn-code)  32

   2
      214 (warn-code)  32
      299 (warn-code)  32

   A
      age  11
      Age header field  21

   C
      cache  4
      cache entry  5
      cache key  5-6
      Cache-Control header field  21

   D
      Disconnected Operation (warn-text)  31

   E
      Expires header field  28
      explicit expiration time  11

   F
      fresh  11
      freshness lifetime  11

   G
      Grammar
         Age  21
         Cache-Control  22
         cache-directive  22
         delta-seconds  5
         Expires  28
         extension-pragma  29
         Pragma  29
         pragma-directive  29
         warn-agent  29
         warn-code  29
         warn-date  29
         warn-text  29 

         Warning  29
         warning-value  29

   H
      Heuristic Expiration (warn-text)  31
      heuristic expiration time  11
   M
      max-age (cache directive)  22, 26
      max-stale (cache directive)  22
      min-fresh (cache directive)  22
      Miscellaneous Persistent Warning (warn-text)  32
      Miscellaneous Warning (warn-text)  32
      must-revalidate (cache directive)  24

   N
      no-cache (cache directive)  23, 25
      no-store (cache directive)  23, 24
      no-transform (cache directive)  23, 25

   O
      only-if-cached (cache directive)  23

   P
      Pragma header field  29
      private (cache directive)  25
      private cache  4
      proxy-revalidate (cache directive)  26
      public (cache directive)  25

   R
      Response is Stale (warn-text)  30
      Revalidation Failed (warn-text)  31

   S
      s-maxage (cache directive)  27
      shared cache  4
      stale  11
      strong validator  18

   T
      Transformation Applied (warn-text)  32

   V
      validator  16

   W
      Warning header field  29 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Mark Nottingham (editor)
   Akamai

   EMail: mnot@mnot.net
   URI:   &lt;a href=&quot;http://www.mnot.net/&quot;&gt;http://www.mnot.net/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding, et al.             Standards Track                   [Page 43]</source>
          <target state="translated">아래에 수집 된 ABNF에서 목록 규칙은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;[RFC7230]의 1.2 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;절에&lt;/a&gt; 따라 확장됩니다 . Age = delta-seconds Cache-Control = * ( &quot;,&quot;OWS) 캐시 지정 * (OWS &quot;,&quot;[OWS cache-directive]) 만료 = HTTP-date HTTP-date = &amp;lt;HTTP-date, &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231]&lt;/a&gt; 참조 , 7.1.1.1 섹션 &amp;gt; OWS = &amp;lt;OWS, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;섹션 3.2.3&lt;/a&gt; 참조 [RFC7230] &amp;gt; Pragma = * ( &quot;,&quot;OWS) pragma-directive * (OWS &quot;,&quot;[OWS pragma-directive]) 경고 = * ( &quot;,&quot;OWS) warning-value * (OWS &quot;,&quot;[OWS warning-value]) cache-directive = token [ &quot;=&quot;(token / quoted-string)] delta-seconds = 1 * DIGIT 확장명 -pragma = 토큰 [ &quot;=&quot;(token / quoted-string)] field-name = &amp;lt;field-name,&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2&quot;&gt;[RFC7230], 섹션 3.2&lt;/a&gt; &amp;gt; 포트 = &amp;lt;포트 참조, 참조&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;[RFC7230], 섹션 2.7&lt;/a&gt; &amp;gt; pragma-directive = &quot;no-cache&quot;/ extension-pragma pseudonym = &amp;lt;pseudonym, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-5.7.1&quot;&gt;[RFC7230], 섹션 5.7.1 참조&lt;/a&gt; &amp;gt; 인용 문자열 = &amp;lt;quoted-string, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], 섹션 참조 3.2.6&lt;/a&gt; &amp;gt; token = &amp;lt;토큰, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;섹션 3.2.6 참조&lt;/a&gt; &amp;gt; uri-host = &amp;lt;uri-host &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-2.7&quot;&gt;, 섹션 2.7&lt;/a&gt; 참조 [RFC7230]&amp;gt; warn-agent = (uri-host [ &quot;:&quot;포트]) / 가명 경고 코드 = 3DIGIT 경고 날짜 = DQUOTE HTTP 날짜 DQUOTE 경고 텍스트 = 인용 문자열 경고 값 = 경고 코드 SP 경고 에이전트 SP 경고 텍스트 [SP 경고 날짜] 인덱스 1 110 (경고 코드) 31111 (경고) 31112 (경고) 31113 (경고) 31 199 (경고) 32 2214 (경고) 32 299 (경고) 32 A 연령 11 연령 헤더 필드 21 C 캐시 4 캐시 항목 5 캐시 키 5-6 캐시 제어 헤더 필드 21 D 연결이 끊긴 작업 (경고 텍스트) 31 E 헤더 필드 만료 28 명시 적 만료 시간 11 F 최신 11 신선도 수명 11 G 문법 연령 21 캐시 제어 22 캐시 지정 22 델타 초 5 만료 28extension-pragma 29 Pragma 29 pragma-directive 29 경고 에이전트 29 경고 코드 29 경고 날짜 29 경고 텍스트 29 경고 29 경고 값 29 H 휴리스틱 만료 (warn-text) 31 휴리스틱 만료 시간 11 M max-age ( 캐시 지시문) 22, 26 최대 스토리 (캐시 지시문) 22 min-fresh (캐시 지시문) 22 기타 지속 경고 (경고 텍스트) 32 기타 경고 (경고 텍스트) 32 반드시 재확인 (캐시 지시) 24 N no- 캐시 (캐시 지시문) 23, 25 no-store (캐시 지시문) 23, 24 no-transform (캐시 지시문) 23,25 O 전용 캐시 (캐시 지시문) 23 P Pragma 헤더 필드 29 개인 (캐시 지시문) 25 프라이빗 캐시 4 프록시 재확인 (캐시 지시문) 26 공개 (캐시 지시문) 25 R 응답이 오래되었습니다 (경고 텍스트) 30 재확인 실패 (경고 텍스트) 31 Ss-maxage (캐시 지시문) 27 공유 캐시 4 부실 11 강력한 유효성 검사기 18 T 변환 적용 (경고 텍스트) 32 V 유효성 검사기 16 W 경고 헤더 필드 29 작성자 주소 Roy T. Fielding ( 편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI :필딩 (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI :필딩 (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI : &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Mark Nottingham (편집자) Akamai 이메일 : mnot@mnot.net URI : &lt;a href=&quot;http://www.mnot.net/&quot;&gt;http://www.mnot.net/&lt;/a&gt; Julian F. Reschke (편집자) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 독일 이메일 : julian.reschke@greenbytes.de URI : &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; Fielding, et al. 표준 트랙 [페이지 43]</target>
        </trans-unit>
        <trans-unit id="847bccd23d1c7feafc0bf9bbe4823064cad9878a" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   Authorization = credentials

   BWS = &amp;lt;BWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   Proxy-Authenticate = *( &quot;,&quot; OWS ) challenge *( OWS &quot;,&quot; [ OWS
    challenge ] )
   Proxy-Authorization = credentials

   WWW-Authenticate = *( &quot;,&quot; OWS ) challenge *( OWS &quot;,&quot; [ OWS challenge
    ] )

   auth-param = token BWS &quot;=&quot; BWS ( token / quoted-string )
   auth-scheme = token

   challenge = auth-scheme [ 1*SP ( token68 / [ ( &quot;,&quot; / auth-param ) *(
    OWS &quot;,&quot; [ OWS auth-param ] ) ] ) ]
   credentials = auth-scheme [ 1*SP ( token68 / [ ( &quot;,&quot; / auth-param )
    *( OWS &quot;,&quot; [ OWS auth-param ] ) ] ) ]

   quoted-string = &amp;lt;quoted-string, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;

   token = &amp;lt;token, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   token68 = 1*( ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot; / &quot;+&quot; / &quot;/&quot; )
    *&quot;=&quot; 

Index

   4
      401 Unauthorized (status code)  6
      407 Proxy Authentication Required (status code)  6

   A
      Authorization header field  8

   C
      Canonical Root URI  5

   G
      Grammar
         auth-param  4
         auth-scheme  4
         Authorization  8
         challenge  4
         credentials  5
         Proxy-Authenticate  8
         Proxy-Authorization  9
         token68  4
         WWW-Authenticate  7

   P
      Protection Space  5
      Proxy-Authenticate header field  8
      Proxy-Authorization header field  9

   R
      Realm  5

   W
      WWW-Authenticate header field  7 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 19]</source>
          <target state="translated">아래에 수집 된 ABNF에서 목록 규칙은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;[RFC7230] 1.2 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;절에&lt;/a&gt; 따라 확장됩니다 . 인증 = 자격 증명 BWS = &amp;lt;BWS, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;섹션 3.2.3 [RFC7230]&lt;/a&gt; 참조 &amp;gt; OWS = &amp;lt;OWS &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;, 섹션 3.2.3 [RFC7230]&lt;/a&gt; 참조&amp;gt; 프록시 인증 = * ( &quot;,&quot;OWS) 챌린지 * (OWS &quot;,&quot;[OWS 챌린지]) 프록시 인증 = 자격 증명 WWW-Authenticate = * ( &quot;,&quot;OWS) 챌린지 * (OWS &quot;,&quot;[OWS 챌린지 ]) auth-param = token BWS &quot;=&quot;BWS (token / quoted-string) auth-scheme = token challenge = auth-scheme [1 * SP (token68 / [( &quot;,&quot;/ auth-param) * (OWS &quot; , &quot;[OWS auth-param])])] 자격 증명 = auth-scheme [1 * SP (token68 / [(&quot;, &quot;/ auth-param) * (OWS&quot;, &quot;[OWS auth-param])])] quoted-string = &amp;lt;quoted-string, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;섹션 3.2.6&lt;/a&gt; 참조 [RFC7230] &amp;gt; token = &amp;lt;token &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;, 섹션 3.2.6&lt;/a&gt; 참조 [RFC7230]&amp;gt; token68 = 1 * (ALPHA / DIGIT / &quot;-&quot;/ &quot;.&quot;/ &quot;_&quot;/ &quot;~&quot;/ &quot;+&quot;/ &quot;/&quot;) * &quot;=&quot;색인 4401 인증되지 않은 (상태 코드) 6407 프록시 인증 필수 (상태 코드) 6 A 인증 헤더 필드 8 C 정식 루트 URI 5 G 문법 auth-param 4 auth-scheme 4 인증 8 챌린지 4 자격 증명 5 프록시 인증 8 프록시 인증 9 token68 4 WWW 인증 7 P 보호 공간 5 프록시 인증 헤더 필드 8 프록시 인증 헤더 필드 9 R 영역 5 W WWW 인증 헤더 필드 7 작성자 주소 Roy T.필딩 (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI : &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Julian F. Reschke (편집자) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 독일 이메일 : julian.reschke@greenbytes.de URI : &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; 필딩 &amp;amp; Reschke 표준 트랙 [페이지 19]</target>
        </trans-unit>
        <trans-unit id="feeba52d99d5a0008f5d811bd13452d39d2497a5" translate="yes" xml:space="preserve">
          <source>In the collected ABNF below, list rules are expanded as per &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;1.2 of [RFC7230]&lt;/a&gt;.

   ETag = entity-tag

   HTTP-date = &amp;lt;HTTP-date, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;[RFC7231], Section&amp;nbsp;7.1.1.1&lt;/a&gt;&amp;gt;

   If-Match = &quot;*&quot; / ( *( &quot;,&quot; OWS ) entity-tag *( OWS &quot;,&quot; [ OWS
    entity-tag ] ) )
   If-Modified-Since = HTTP-date
   If-None-Match = &quot;*&quot; / ( *( &quot;,&quot; OWS ) entity-tag *( OWS &quot;,&quot; [ OWS
    entity-tag ] ) )
   If-Unmodified-Since = HTTP-date

   Last-Modified = HTTP-date

   OWS = &amp;lt;OWS, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.3&lt;/a&gt;&amp;gt;

   entity-tag = [ weak ] opaque-tag
   etagc = &quot;!&quot; / %x23-7E ; '#'-'~'
    / obs-text

   obs-text = &amp;lt;obs-text, see &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;[RFC7230], Section&amp;nbsp;3.2.6&lt;/a&gt;&amp;gt;
   opaque-tag = DQUOTE *etagc DQUOTE

   weak = %x57.2F ; W/ 

Index

   3
      304 Not Modified (status code)  19

   4
      412 Precondition Failed (status code)  18

   E
      ETag header field  9

   G
      Grammar
         entity-tag  9
         ETag  9
         etagc  9
         If-Match  13
         If-Modified-Since  15
         If-None-Match  14
         If-Unmodified-Since  17
         Last-Modified  7
         opaque-tag  9
         weak  9

   I
      If-Match header field  13
      If-Modified-Since header field  16
      If-None-Match header field  14
      If-Unmodified-Since header field  17

   L
      Last-Modified header field  7

   M
      metadata  5

   S
      selected representation  4

   V
      validator  5
         strong  5
         weak  5 

Authors' Addresses

   Roy T. Fielding (editor)
   Adobe Systems Incorporated
   345 Park Ave
   San Jose, CA  95110
   USA

   EMail: fielding@gbiv.com
   URI:   &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt;


   Julian F. Reschke (editor)
   greenbytes GmbH
   Hafenweg 16
   Muenster, NW  48155
   Germany

   EMail: julian.reschke@greenbytes.de
   URI:   &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt;


Fielding &amp;amp; Reschke           Standards Track                   [Page 28]</source>
          <target state="translated">아래에 수집 된 ABNF에서 목록 규칙은 &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;[RFC7230]의 1.2 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-1.2&quot;&gt;절에&lt;/a&gt; 따라 확장됩니다 . ETag = entity-tag HTTP-date = &amp;lt;HTTP-date, &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1.1.1&quot;&gt;섹션 7.1.1.1 [RFC7231] 참조&lt;/a&gt; &amp;gt; If-Match = &quot;*&quot;/ (* ( &quot;,&quot;OWS) entity-tag * (OWS &quot;,&quot;[ OWS entity-tag])) If-Modified-Since = HTTP-date If-None-Match = &quot;*&quot;/ (* ( &quot;,&quot;OWS) entity-tag * (OWS &quot;,&quot;[OWS entity-tag]) ) If-Unmodified-Since = HTTP-date Last-Modified = HTTP-date OWS = &amp;lt;OWS, &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.3&quot;&gt;[RFC7230], 섹션 3.2.3 참조&lt;/a&gt; &amp;gt; entity-tag = [weak] opaque-tag etagc = &quot;!&quot; / % x23-7E; '#'- '~'/ obs-text obs-text = &amp;lt;obs-text &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#section-3.2.6&quot;&gt;, 섹션 3.2.6&lt;/a&gt; 참조 [RFC7230]&amp;gt; 불투명 태그 = DQUOTE * etagc DQUOTE 약한 = % x57.2F; W / Index 3 304 수정되지 않음 (상태 코드) 19 4 412 전제 조건 실패 (상태 코드) 18 E ETag 헤더 필드 9 G 문법 엔터티 태그 9 ETag 9 etagc 9 If-Match 13 If-Modified-Since 15 If-None- 일치 14 수정하지 않은 상태부터 17 마지막 수정 된 7 불투명 한 태그 9 약한 9 I 일치하는 헤더 필드 13 수정하지 않은 헤더 필드 16 If-None-Match 헤더 필드 14 수정하지 않은 -Since 헤더 필드 17 L Last-Modified 헤더 필드 7 M 메타 데이터 5 S 선택된 표현 4 V 유효성 검사기 5 강한 5 약한 5 작성자 주소 Roy T.필딩 (편집자) Adobe Systems Incorporated 345 Park Ave San Jose, CA 95110 USA 이메일 : fielding@gbiv.com URI : &lt;a href=&quot;http://roy.gbiv.com/&quot;&gt;http://roy.gbiv.com/&lt;/a&gt; Julian F. Reschke (편집자) greenbytes GmbH Hafenweg 16 Muenster, NW 48155 독일 이메일 : julian.reschke@greenbytes.de URI : &lt;a href=&quot;http://greenbytes.de/tech/webdav/&quot;&gt;http://greenbytes.de/tech/webdav/&lt;/a&gt; 필딩 &amp;amp; Reschke 표준 트랙 [페이지 28]</target>
        </trans-unit>
        <trans-unit id="472f98def3eac77e06a2358d336b65f3adb470f7" translate="yes" xml:space="preserve">
          <source>In the example above, line 3 creates an XML body to send with the &lt;code&gt;POST&lt;/code&gt; request in line 8. Also, on line 9, a &quot;customized&quot; (non-standard) HTTP request header is set (&lt;code&gt;X-PINGOTHER: pingpong&lt;/code&gt;). Such headers are not part of the HTTP/1.1 protocol, but are generally useful to web applications. Since the request uses a Content-Type of &lt;code&gt;application/xml&lt;/code&gt;, and since a custom header is set, this request is preflighted.</source>
          <target state="translated">위의 예에서 3 행은 8 행 에서 &lt;code&gt;POST&lt;/code&gt; 요청 과 함께 전송할 XML 본문을 작성합니다. 또한 9 행에서는 &quot;사용자 정의 된&quot;(비표준) HTTP 요청 헤더가 설정됩니다 ( &lt;code&gt;X-PINGOTHER: pingpong&lt;/code&gt; ). 이러한 헤더는 HTTP / 1.1 프로토콜의 일부가 아니지만 일반적으로 웹 응용 프로그램에 유용합니다. 요청이 Content-Type of &lt;code&gt;application/xml&lt;/code&gt; 을 사용하고 사용자 정의 헤더가 설정되었으므로이 요청이 사전 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="09022b0e85e69204da784160f58571ee0eaec54e" translate="yes" xml:space="preserve">
          <source>In the example below a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; response code is used, because the response does not carry a payload body. A &lt;a href=&quot;../status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; response could have contained a payload body.</source>
          <target state="translated">아래 예에서는 응답에 페이로드 본문이 없기 때문에 &lt;a href=&quot;../status/204&quot;&gt; &lt;code&gt;204&lt;/code&gt; &lt;/a&gt; 응답 코드가 사용됩니다. &lt;a href=&quot;../status/200&quot;&gt; &lt;code&gt;200&lt;/code&gt; &lt;/a&gt; 응답은 페이로드 본체를 포함 할 수 있었다.</target>
        </trans-unit>
        <trans-unit id="90a33fcc28f73464c7c1ed80b477376d44e96863" translate="yes" xml:space="preserve">
          <source>In the first half of the 2010s, Google demonstrated an alternative way of exchanging data between client and server, by implementing an experimental protocol SPDY. This amassed interest from developers working on both browsers and servers. Defining an increase in responsiveness, and solving the problem of duplication of data transmitted, SPDY served as the foundations of the HTTP/2 protocol.</source>
          <target state="translated">2010 년 상반기에 Google은 실험적인 프로토콜 SPDY를 구현하여 클라이언트와 서버간에 데이터를 교환하는 다른 방법을 시연했습니다. 이는 브라우저와 서버 모두에서 작업하는 개발자의 관심을 끌었습니다. 응답 성의 증가를 정의하고 전송 된 데이터의 복제 문제를 해결하는 SPDY는 HTTP / 2 프로토콜의 기초가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4f83336e929fe39e857341053bf53bb9d367a72d" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;max-age&lt;/code&gt; is set to 2 years, raised from what was a former limit &lt;code&gt;max-age&lt;/code&gt; of 1 year. Note that 1 year is acceptable for a domain to be included in browsers' HSTS preload lists. 2 years is, however, the recommended goal as a website's final HSTS configuration as explained on &lt;a href=&quot;https://hstspreload.org&quot;&gt;https://hstspreload.org&lt;/a&gt;. It also suffixed with &lt;code&gt;preload&lt;/code&gt; which is necessary for inclusion in most major web browsers' HSTS preload lists, e.g. Chromium, Edge, &amp;amp; Firefox.</source>
          <target state="translated">다음 예에서 &lt;code&gt;max-age&lt;/code&gt; 는 1 년의 이전 제한 &lt;code&gt;max-age&lt;/code&gt; 에서 올린 2 년으로 설정됩니다 . 도메인이 브라우저의 HSTS 사전로드 목록에 포함 되려면 1 년이 허용됩니다. 그러나 &lt;a href=&quot;https://hstspreload.org&quot;&gt;https://hstspreload.org에&lt;/a&gt; 설명 된대로 웹 사이트의 최종 HSTS 구성으로 권장되는 목표는 2 년입니다 . 또한 대부분의 주요 웹 브라우저의 HSTS 사전로드 목록 (예 : Chromium, Edge 및 Firefox)에 포함하는 데 필요한 &lt;code&gt;preload&lt;/code&gt; 가 접미사로 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="20562e67671b5bf845611bfa4f3b14fd6e956c7a" translate="yes" xml:space="preserve">
          <source>In the past, specific plug-ins, add-ons or extensions added user agent parts to notify sites they were installed. The recommended way to do this, if it's absolutely necessary (remember that it slows down every request) is to &lt;a href=&quot;https://developer.mozilla.org/en/Setting_HTTP_request_headers&quot;&gt;set a custom HTTP header&lt;/a&gt;.</source>
          <target state="translated">과거에는 특정 플러그인, 애드온 또는 확장 프로그램에 사용자 에이전트 파트가 추가되어 사이트에 설치된 사이트를 알 렸습니다. 반드시 필요한 경우 권장되는 방법 (모든 요청이 느려짐을 기억하십시오)은 &lt;a href=&quot;https://developer.mozilla.org/en/Setting_HTTP_request_headers&quot;&gt;사용자 정의 HTTP 헤더&lt;/a&gt; 를 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="312bfeb98e09b0ebf786270e4655ffbe98874e6b" translate="yes" xml:space="preserve">
          <source>In the past, web content was able to access whatever &lt;code&gt;resource:&lt;/code&gt; URIs were desired &amp;mdash; not only Firefox&amp;rsquo;s internal resources, but also extensions&amp;rsquo; assets. Now this behavior is prohibited by default.</source>
          <target state="translated">과거에는 웹 컨텐츠가 Firefox의 내부 리소스뿐만 아니라 확장 기능의 자산 &lt;code&gt;resource:&lt;/code&gt; URI와 같은 모든 리소스 에 액세스 할 수있었습니다 . 이제이 동작은 기본적으로 금지되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="75008cbe2513d02694dbb1b988119207d90d0106" translate="yes" xml:space="preserve">
          <source>In the realm of internationalization, this specification complies
   with the IETF Character Set Policy [&lt;a href=&quot;https://tools.ietf.org/html/rfc2277&quot;&gt;RFC2277&lt;/a&gt;].  In this specification,
   human-readable fields can be found either in the value of a property,
   or in an error message returned in a response entity body.  In both
   cases, the human-readable content is encoded using XML, which has
   explicit provisions for character set tagging and encoding, and
   requires that XML processors read XML elements encoded, at minimum,
   using the UTF-8 [&lt;a href=&quot;https://tools.ietf.org/html/rfc3629&quot;&gt;RFC3629&lt;/a&gt;] and UTF-16 [&lt;a href=&quot;https://tools.ietf.org/html/rfc2781&quot;&gt;RFC2781&lt;/a&gt;] encodings of the ISO
   10646 multilingual plane.  XML examples in this specification
   demonstrate use of the charset parameter of the Content-Type header
   (defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;]), as well as XML charset declarations.

   XML also provides a language tagging capability for specifying the
   language of the contents of a particular XML element.  The &quot;xml:lang&quot;
   attribute appears on an XML element to identify the language of its
   content and attributes.  See [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;] for definitions of values and
   scoping.

   WebDAV applications MUST support the character set tagging, character
   set encoding, and the language tagging functionality of the XML
   specification.  Implementors of WebDAV applications are strongly
   encouraged to read &quot;XML Media Types&quot; [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;] for instruction on
   which MIME media type to use for XML transport, and on use of the
   charset parameter of the Content-Type header.

   Names used within this specification fall into four categories: names
   of protocol elements such as methods and headers, names of XML
   elements, names of properties, and names of conditions.  Naming of
   protocol elements follows the precedent of HTTP, using English names
   encoded in US-ASCII for methods and headers.  Since these protocol
   elements are not visible to users, and are simply long token
   identifiers, they do not need to support multiple languages.
   Similarly, the names of XML elements used in this specification are
   not visible to the user and hence do not need to support multiple
   languages.

   WebDAV property names are qualified XML names (pairs of XML namespace
   name and local name).  Although some applications (e.g., a generic
   property viewer) will display property names directly to their users,
   it is expected that the typical application will use a fixed set of
   properties, and will provide a mapping from the property name and
   namespace to a human-readable field when displaying the property name 

   to a user.  It is only in the case where the set of properties is not
   known ahead of time that an application need display a property name
   to a user.  We recommend that applications provide human-readable
   property names wherever feasible.

   For error reporting, we follow the convention of HTTP/1.1 status
   codes, including with each status code a short, English description
   of the code (e.g., 423 (Locked)).  While the possibility exists that
   a poorly crafted user agent would display this message to a user,
   internationalized applications will ignore this message, and display
   an appropriate message in the user's language and character set.

   Since interoperation of clients and servers does not require locale
   information, this specification does not specify any mechanism for
   transmission of this information.</source>
          <target state="translated">국제화 영역에서이 사양은 IETF 문자 집합 정책 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2277&quot;&gt;RFC2277&lt;/a&gt; ]을 준수합니다 . 이 사양에서 사람이 읽을 수있는 필드는 속성 값 또는 응답 엔터티 본문에 반환 된 오류 메시지에서 찾을 수 있습니다. 두 경우 모두, 사람이 읽을 수있는 컨텐츠는 XML을 사용하여 인코딩되며, 이는 문자 세트 태깅 및 인코딩에 대한 명시적인 조항이 있으며 XML 프로세서는 최소한 UTF-8 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc3629&quot;&gt;RFC3629&lt;/a&gt; ] 및 UTF-16을 사용하여 인코딩 된 XML 요소를 읽어야합니다. ISO 10646 다국어 평면의 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2781&quot;&gt;RFC2781&lt;/a&gt; ] 인코딩. 이 사양의 XML 예제는 Content-Type 헤더의 charset 매개 변수 사용을 보여줍니다 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023에&lt;/a&gt; 정의 됨)]) 및 XML 문자 세트 선언. XML은 또한 특정 XML 요소 내용의 언어를 지정하기위한 언어 태그 기능을 제공합니다. &quot;xml : lang&quot;속성은 내용 및 속성의 언어를 식별하기 위해 XML 요소에 나타납니다. 값 및 범위 정의에 대해서는 [ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ]을 참조하십시오 . WebDAV 응용 프로그램은 XML 사양의 문자 세트 태그 지정, 문자 세트 인코딩 및 언어 태그 기능을 지원해야합니다. WebDAV 응용 프로그램 구현자는 &quot;XML 미디어 유형&quot;[ &lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt; 을 읽을 것을 적극 권장합니다.] XML 전송에 사용할 MIME 매체 유형 및 Content-Type 헤더의 문자 세트 매개 변수 사용에 대한 지시 사항. 이 사양에서 사용되는 이름은 메서드 및 헤더와 같은 프로토콜 요소 이름, XML 요소 이름, 속성 이름 및 조건 이름의 네 가지 범주로 분류됩니다. 프로토콜 요소의 이름은 메소드와 헤더에 대해 US-ASCII로 인코딩 된 영어 이름을 사용하여 HTTP의 선례를 따릅니다. 이러한 프로토콜 요소는 사용자에게 보이지 않으며 단순히 긴 토큰 식별자이기 때문에 여러 언어를 지원할 필요가 없습니다. 마찬가지로이 사양에 사용 된 XML 요소의 이름은 사용자에게 표시되지 않으므로 여러 언어를 지원할 필요가 없습니다.WebDAV 특성 이름은 규정 된 XML 이름 (XML 네임 스페이스 이름 및 로컬 이름 쌍)입니다. 일부 응용 프로그램 (예 : 일반 속성 뷰어)은 속성 이름을 사용자에게 직접 표시하지만 일반적인 응용 프로그램은 고정 된 속성 집합을 사용하고 속성 이름과 네임 스페이스에서 사람으로의 매핑을 제공 할 것으로 예상됩니다. 속성 이름을 사용자에게 표시 할 때 읽을 수있는 필드입니다. 응용 프로그램이 사용자에게 속성 이름을 표시해야하는 것은 미리 속성 집합을 알 수없는 경우에만 해당됩니다. 응용 프로그램은 가능하면 사람이 읽을 수있는 속성 이름을 제공하는 것이 좋습니다. 오류보고의 경우, 각 상태 코드에 간단한 영어 설명 코드 (예 : 423 (잠김))를 포함하여 HTTP / 1.1 상태 코드 규칙을 따릅니다.잘못 작성된 사용자 에이전트는이 메시지를 사용자에게 표시 할 가능성이 있지만 국제화 된 응용 프로그램은이 메시지를 무시하고 사용자의 언어 및 문자 집합으로 적절한 메시지를 표시합니다. 클라이언트와 서버의 상호 운용에는 로캘 정보가 필요하지 않으므로이 사양에서는이 정보의 전송 메커니즘을 지정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c7caf7be6ba6f74cd1c7e69b2965145b991a7b6" translate="yes" xml:space="preserve">
          <source>In these examples, the entire reporting API payload is shown. The top-level &lt;code&gt;&quot;body&quot;&lt;/code&gt; key contains the network error report.</source>
          <target state="translated">이 예에서는 전체보고 API 페이로드가 표시됩니다. 최상위 &lt;code&gt;&quot;body&quot;&lt;/code&gt; 키에는 네트워크 오류 보고서가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="08819ce444413d248ed409d1bf3d59a094d39073" translate="yes" xml:space="preserve">
          <source>In this article, we focus on resource URIs, which are used internally by Firefox to point to built-in resources.</source>
          <target state="translated">이 기사에서는 내장 리소스를 가리 키기 위해 Firefox에서 내부적으로 사용하는 리소스 URI에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="4a9daa27d7ffde10bb20032aa2c669c7114837b2" translate="yes" xml:space="preserve">
          <source>In this case look for a &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt; header. If this header is present, then the cache's freshness lifetime is equal to the value of the &lt;code&gt;Date&lt;/code&gt; header minus the value of the &lt;code&gt;Last-modified&lt;/code&gt; header divided by 10. The expiration time is computed as follows:</source>
          <target state="translated">이 경우 &lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; &lt;/a&gt; 헤더를 찾으십시오 . 이 헤더가있는 경우 캐시의 최신 수명은 &lt;code&gt;Date&lt;/code&gt; 헤더 값에서 &lt;code&gt;Last-modified&lt;/code&gt; 헤더 값을 10으로 나눈 값과 같습니다. 만료 시간은 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="0238c032fe8b075e22eb8b6c9fa8e03afd0be1e7" translate="yes" xml:space="preserve">
          <source>In this case, responses can be sent back based on some considerations.</source>
          <target state="translated">이 경우 몇 가지 고려 사항에 따라 응답을 다시 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c09df89aeef1f40e2d786af81ae2b5377bc9307" translate="yes" xml:space="preserve">
          <source>In this case, the server can send back a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) response for a URL that will contain the right information. If the reload button is pressed, only that page is redisplayed, without replaying the unsafe requests.</source>
          <target state="translated">이 경우 서버는 올바른 정보를 포함 할 URL에 대해 &lt;a href=&quot;status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (기타 참조) 응답을 다시 보낼 수 있습니다 . 다시로드 단추를 누르면 안전하지 않은 요청을 재생하지 않고 해당 페이지 만 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="06b277eb0332b7d0f528bc488b7a6ac8fc32ac6b" translate="yes" xml:space="preserve">
          <source>In this case, the server can send back a &lt;a href=&quot;status/303&quot;&gt;&lt;code&gt;303&lt;/code&gt;&lt;/a&gt; (See Other) response that will contain the right information, but if the reload button is pressed, only this page is redisplayed, without replaying the unsafe requests.</source>
          <target state="translated">이 경우 서버는 올바른 정보를 포함 하는 &lt;a href=&quot;status/303&quot;&gt; &lt;code&gt;303&lt;/code&gt; &lt;/a&gt; (기타 참조) 응답을 다시 보낼 수 있지만 다시로드 단추를 누르면 안전하지 않은 요청을 재생하지 않고이 페이지 만 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="18d9fe67ef95cf5048b92cb9c02dafef0b4ac177" translate="yes" xml:space="preserve">
          <source>In this case, you need to configure the server receiving the HTTP requests (which is most likely the same for www and non-www URLs) to respond with an adequate HTTP &lt;a href=&quot;../status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt; response to any request to the non-canonical domain. This will redirect the browser trying to access the non-canonical URLs to their canonical equivalent. For example, if you've chosen to use non-www URLs as the canonical type, you should redirect all www URLs to their equivalent URL without the www.</source>
          <target state="translated">이 경우 비정규 도메인에 대한 모든 요청에 대해 적절한 HTTP &lt;a href=&quot;../status/301&quot;&gt; &lt;code&gt;301&lt;/code&gt; &lt;/a&gt; 응답으로 응답하도록 HTTP 요청 (www 및 www가 아닌 ​​URL에 대해 거의 동일)을 수신하는 서버를 구성해야 합니다. 그러면 비정규 URL에 액세스하려고하는 브라우저가 정식 URL로 리디렉션됩니다. 예를 들어, www가 아닌 ​​URL을 표준 유형으로 사용하기로 선택한 경우 www가없는 모든 www URL을 동등한 URL로 리디렉션해야합니다.</target>
        </trans-unit>
        <trans-unit id="7847050425f6d076cc4ad765d4143b2fe451ad2c" translate="yes" xml:space="preserve">
          <source>In this example all of the hosts in a given subnet are connected-to directly, others are connected through the proxy:</source>
          <target state="translated">이 예에서는 지정된 서브넷의 모든 호스트가 직접 연결되어 있고 다른 호스트는 프록시를 통해 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="463b3c56a942948bf5001ffa290aad288ddfa0e2" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. &lt;strong&gt;max-age=5184000&lt;/strong&gt; tells the client to store this information for two months, which is a reasonable time limit according to the IETF RFC. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.net/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">이 예에서 &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot;&lt;/strong&gt; 는 프로덕션에 사용되는 서버의 공개 키를 고정합니다. 두 번째 핀 선언 &lt;strong&gt;pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; 도 백업 키를 고정합니다. &lt;strong&gt;max-age = 5184000&lt;/strong&gt; 은 클라이언트에게이 정보를 2 개월 동안 저장 &lt;strong&gt;하도록&lt;/strong&gt; 지시합니다. 이는 IETF RFC에 따라 합리적인 시간 제한입니다. 이 키 고정은 모든 하위 도메인에 유효하며 &lt;strong&gt;includeSubDomains&lt;/strong&gt; 선언에서 알 수 있습니다. 마지막으로 &lt;strong&gt;report-uri = &quot;https://www.example.net/hpkp-report&quot;&lt;/strong&gt; 는 핀 검증 실패보고 위치를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="15fe4fb824d6da70afb6414abaf5dbbc417ed391" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. &lt;strong&gt;max-age=5184000&lt;/strong&gt; tells the client to store this information for two months, which is a reasonable time limit according to the IETF RFC. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">이 예에서 &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot;&lt;/strong&gt; 는 프로덕션에 사용되는 서버의 공개 키를 고정합니다. 두 번째 핀 선언 &lt;strong&gt;pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; 도 백업 키를 고정합니다. &lt;strong&gt;max-age = 5184000&lt;/strong&gt; 은 클라이언트에게이 정보를 2 개월 동안 저장 &lt;strong&gt;하도록&lt;/strong&gt; 지시합니다. 이는 IETF RFC에 따라 합리적인 시간 제한입니다. 이 키 고정은 모든 하위 도메인에 유효하며 &lt;strong&gt;includeSubDomains&lt;/strong&gt; 선언에서 알 수 있습니다. 마지막으로 &lt;strong&gt;report-uri = &quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; 는 핀 검증 실패보고 위치를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7b4d6bd9abca71a4536572bc7fcac564f95ec372" translate="yes" xml:space="preserve">
          <source>In this example, &lt;strong&gt;pin-sha256=&quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=&quot;&lt;/strong&gt; pins the server's public key used in production. The second pin declaration &lt;strong&gt;pin-sha256=&quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=&quot;&lt;/strong&gt; also pins the backup key. This key pinning is also valid for all subdomains, which is told by the &lt;strong&gt;includeSubDomains&lt;/strong&gt; declaration. Finally, &lt;strong&gt;report-uri=&quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; explains where to report pin validation failures.</source>
          <target state="translated">이 예에서 &lt;strong&gt;pin-sha256 = &quot;cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2 + soZS7sWs =&quot;&lt;/strong&gt; 는 프로덕션에 사용되는 서버의 공개 키를 고정합니다. 두 번째 핀 선언 &lt;strong&gt;pin-sha256 = &quot;M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE =&quot;&lt;/strong&gt; 도 백업 키를 고정합니다. 이 키 고정은 모든 하위 도메인에 유효하며 &lt;strong&gt;includeSubDomains&lt;/strong&gt; 선언에서 알 수 있습니다. 마지막으로 &lt;strong&gt;report-uri = &quot;https://www.example.org/hpkp-report&quot;&lt;/strong&gt; 는 핀 유효성 검사 실패보고 위치를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="26e35d19a2c9f9c005f9c384d2fca94ef727d3c6" translate="yes" xml:space="preserve">
          <source>In this example, content originally loaded from &lt;code&gt;http://foo.example&lt;/code&gt; makes a simple GET request to a resource on &lt;code&gt;http://bar.other&lt;/code&gt; which sets Cookies. Content on foo.example might contain JavaScript like this:</source>
          <target state="translated">이 예제에서 원래 &lt;code&gt;http://foo.example&lt;/code&gt; 에서로드 된 컨텐츠 는 쿠키를 설정하는 &lt;code&gt;http://bar.other&lt;/code&gt; 의 자원에 간단한 GET 요청을 작성합니다 . foo.example의 내용은 다음과 같은 JavaScript를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bad895874eb650b248a44ce79a14ea76d8467d2" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;expires&quot;&gt;&lt;code&gt;Expires&lt;/code&gt;&lt;/a&gt; header is used at the end of the chunked message and serves as a trailing header.</source>
          <target state="translated">이 예에서 &lt;a href=&quot;expires&quot;&gt; &lt;code&gt;Expires&lt;/code&gt; &lt;/a&gt; 헤더는 청크 된 메시지의 끝에 사용되며 후행 헤더로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d3619c052570e6c7b13df3247db7eb34508081c2" translate="yes" xml:space="preserve">
          <source>In this example, the domain name &quot;&lt;a href=&quot;http://www.spreadfirefox.com&quot;&gt;www.spreadfirefox.com&lt;/a&gt;&quot; will be pre-resolved.</source>
          <target state="translated">이 예에서는 도메인 이름 &quot; &lt;a href=&quot;http://www.spreadfirefox.com&quot;&gt;www.spreadfirefox.com&lt;/a&gt; &quot;이 사전 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="87dc9881299868d18d5f581592c04cfda6647192" translate="yes" xml:space="preserve">
          <source>In this example, the domain name &quot;&lt;a href=&quot;https://www.mozilla.org/contribute/&quot;&gt;www.mozilla.org/contribute&lt;/a&gt;&quot; will be pre-resolved.</source>
          <target state="translated">이 예에서는 도메인 이름 &quot; &lt;a href=&quot;https://www.mozilla.org/contribute/&quot;&gt;www.mozilla.org/contribute&lt;/a&gt; &quot;가 사전 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="f69eca7e9cf725cc07d70aadad7696549a869cd3" translate="yes" xml:space="preserve">
          <source>In this example, the user agent string is mobile Safari&amp;rsquo;s version. It contains the word &lt;code&gt;&quot;Mobile&quot;&lt;/code&gt;.</source>
          <target state="translated">이 예에서 사용자 에이전트 문자열은 모바일 Safari의 버전입니다. &lt;code&gt;&quot;Mobile&quot;&lt;/code&gt; 이라는 단어가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ece92baae1897d8ad92e5e7a0a62d4670b062563" translate="yes" xml:space="preserve">
          <source>In this example, the user agent string is mobile safari version. It contains the word &quot;Mobile&quot;.</source>
          <target state="translated">이 예에서 사용자 에이전트 문자열은 모바일 사파리 버전입니다. &quot;모바일&quot;이라는 단어가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7d3fc0025e51622cf41c74720e5e287c75d33c" translate="yes" xml:space="preserve">
          <source>In this response, &lt;code&gt;Accept-Ranges: bytes&lt;/code&gt; indicates that bytes can be used as unit to define a range. Here the &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; header is also useful as it indicates the full size of the image to retrieve.</source>
          <target state="translated">이 응답에서 &lt;code&gt;Accept-Ranges: bytes&lt;/code&gt; 는 바이트를 범위로 정의하는 단위로 사용할 수 있음을 나타냅니다. 여기서 &lt;a href=&quot;headers/content-length&quot;&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/a&gt; 헤더는 검색 할 이미지의 전체 크기를 나타내므로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="795b5c095ca34b9eb4357638cfdaae755baa1753" translate="yes" xml:space="preserve">
          <source>In this section, the final line of each section gives the element
   type declaration using the format defined in [&lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt;].  The &quot;Value&quot;
   field, where present, specifies further restrictions on the allowable
   contents of the XML element using BNF (i.e., to further restrict the
   values of a PCDATA element).  Note that all of the elements defined
   here may be extended according to the rules defined in &lt;a href=&quot;#section-17&quot;&gt;Section 17&lt;/a&gt;.
   All elements defined here are in the &quot;DAV:&quot; namespace.</source>
          <target state="translated">이 섹션에서 각 섹션의 마지막 줄은 [ &lt;a href=&quot;#ref-REC-XML&quot;&gt;REC-XML&lt;/a&gt; ]에 정의 된 형식을 사용하여 요소 유형 선언을 제공합니다 . &quot;값&quot;필드는 존재하는 경우 BNF를 사용하여 (즉, PCDATA 요소의 값을 추가로 제한하기 위해) XML 요소의 허용 가능한 컨텐츠에 대한 추가 제한 사항을 지정합니다. 여기에 정의 된 모든 요소는 &lt;a href=&quot;#section-17&quot;&gt;섹션 17에&lt;/a&gt; 정의 된 규칙에 따라 확장 될 수 있습니다 . 여기에 정의 된 모든 요소는 &quot;DAV :&quot;네임 스페이스에 있습니다.</target>
        </trans-unit>
        <trans-unit id="179432a2d14c1874e18b6638eed524eeb5842b02" translate="yes" xml:space="preserve">
          <source>Included in the response message from the server during the opening handshake process when the server is willing to initiate a WebSocket connection. It will appear no more than once in the response headers.</source>
          <target state="translated">서버가 WebSocket 연결을 시작하려고 할 때 핸드 셰이크 프로세스를 여는 동안 서버의 응답 메시지에 포함됩니다. 응답 헤더에 한 번만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="9cab054870dbf49daaae3aee35de09e7abf09a42" translate="yes" xml:space="preserve">
          <source>Incomplete results: a &lt;a href=&quot;status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt; (Partial Content) response.</source>
          <target state="translated">불완전한 결과 : &lt;a href=&quot;status/206&quot;&gt; &lt;code&gt;206&lt;/code&gt; &lt;/a&gt; (부분 컨텐츠) 응답.</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="522b16bedc865c8cbd64e7b9adb9223fbc62cbb9" translate="yes" xml:space="preserve">
          <source>IndexedDB (for each database execute &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase&quot;&gt;&lt;code&gt;IDBFactory.deleteDatabase&lt;/code&gt;&lt;/a&gt;),</source>
          <target state="translated">IndexedDB (각 데이터베이스에 대해 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase&quot;&gt; &lt;code&gt;IDBFactory.deleteDatabase&lt;/code&gt; &lt;/a&gt; 실행 ),</target>
        </trans-unit>
        <trans-unit id="77a0f0c640c4020f67d5dbd8adc3745275738665" translate="yes" xml:space="preserve">
          <source>Indicates a URL path that must exist in the requested resource before sending the Cookie header. The %x2F (&quot;/&quot;) character is interpreted as a directory separator and sub directories will be matched as well (e.g. path=/docs, &quot;/docs&quot;, &quot;/docs/Web/&quot;, or &quot;/docs/Web/HTTP&quot; will all be matched).</source>
          <target state="translated">쿠키 헤더를 보내기 전에 요청 된 리소스에 존재해야하는 URL 경로를 나타냅니다. % x2F ( &quot;/&quot;) 문자는 디렉토리 분리 자로 해석되며 하위 디렉토리도 일치합니다 (예 : path = / docs, &quot;/ docs&quot;, &quot;/ docs / Web /&quot;또는 &quot;/ docs / Web / HTTP &quot;가 모두 일치합니다).</target>
        </trans-unit>
        <trans-unit id="2cd7bebabc246b7398c2557d2f27d3f5dfbfc228" translate="yes" xml:space="preserve">
          <source>Indicates an alternate location for the returned data.</source>
          <target state="translated">반환 된 데이터의 대체 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9bf3af3031e2a167d607e233517fe07840ad0ce2" translate="yes" xml:space="preserve">
          <source>Indicates expectations that need to be fulfilled by the server in order to properly handle the request.</source>
          <target state="translated">요청을 올바르게 처리하기 위해 서버가 충족해야하는 기대를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c20b7c7e190c02dcd980a59596037eefb0d9d410" translate="yes" xml:space="preserve">
          <source>Indicates expectations that need to be fulfilled by the server to properly handle the request.</source>
          <target state="translated">요청을 올바르게 처리하기 위해 서버에서 충족해야하는 기대치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="552935b2453887e59cf2e4f3e94e2e9ac12d93ef" translate="yes" xml:space="preserve">
          <source>Indicates how long the results of a preflight request can be cached.</source>
          <target state="translated">프리 플라이트 요청 결과를 캐시 할 수있는 기간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c9b44d689ef4104318af0511c11748dc3967c95" translate="yes" xml:space="preserve">
          <source>Indicates how long the user agent should wait before making a follow-up request.</source>
          <target state="translated">후속 요청을하기 전에 사용자 에이전트가 대기해야하는 시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f6191c2fea1dc7665f3e010c435506f712c18963" translate="yes" xml:space="preserve">
          <source>Indicates if the resource transmitted should be displayed inline (default behavior without the header), or if it should be handled like a download and the browser should present a &amp;ldquo;Save As&amp;rdquo; dialog.</source>
          <target state="translated">전송 된 리소스가 인라인으로 표시되어야하는지 (헤더가없는 기본 동작) 또는 다운로드처럼 처리되어야하고 브라우저에 &quot;다른 이름으로 저장&quot;대화 상자가 표시되어야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad3a4c007f7db3dfac95c3ba5f703c8f8dd59961" translate="yes" xml:space="preserve">
          <source>Indicates if the server supports range requests and if so, in which unit the range can be expressed.</source>
          <target state="translated">서버가 범위 요청을 지원하는지 여부와 지원하는 경우 범위를 표현할 수있는 단위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46923176567e6f9182bcf4bbdd4ca07d5b57ade9" translate="yes" xml:space="preserve">
          <source>Indicates if the server supports range requests, and if so in which unit the range can be expressed.</source>
          <target state="translated">서버가 범위 요청을 지원하는지 여부와 지원하는 경우 범위를 표현할 수있는 단위를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3430ae2cd395b1c94c2f79f53999b8989357367e" translate="yes" xml:space="preserve">
          <source>Indicates that either the client or the server would like to close the connection. This is the default on HTTP/1.0 requests.</source>
          <target state="translated">클라이언트 또는 서버가 연결을 닫으려고 함을 나타냅니다. 이것이 HTTP / 1.0 요청의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="e484e47b9ff40bcaf3bfce679a53ef13604e1c95" translate="yes" xml:space="preserve">
          <source>Indicates that once a resource becomes stale, caches must not use their stale copy without successful &lt;a href=&quot;../caching#Cache_validation&quot;&gt;validation&lt;/a&gt; on the origin server.</source>
          <target state="translated">리소스가 부실이되면 캐시가 원본 서버에서 &lt;a href=&quot;../caching#Cache_validation&quot;&gt;유효성 검사&lt;/a&gt; 를 성공적으로 수행하지 않고 부실 복사본을 사용하지 않아야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c99b1484ee170cc3fd51d8eb0f92ba2eff8fc73e" translate="yes" xml:space="preserve">
          <source>Indicates that the browser (Internet Explorer) should not display the option to &quot;Open&quot; a file that has been downloaded from an application, to prevent phishing attacks as the file otherwise would gain access to execute in the context of the application.</source>
          <target state="translated">브라우저 (Internet Explorer)는 파일이 응용 프로그램의 컨텍스트에서 실행되도록 액세스 할 수 있으므로 피싱 공격을 방지하기 위해 응용 프로그램에서 다운로드 한 파일을 &quot;열기&quot;옵션을 표시하지 않아야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c4f79f8a6a3c8718f3618cea1550c9060b2c9c67" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a response that has exceeded its expiration time. Optionally, you can assign a value in seconds, indicating the time the response must not be expired by.</source>
          <target state="translated">클라이언트가 만료 시간을 초과 한 응답을 기꺼이 수락 함을 나타냅니다. 선택적으로 응답을 만료하지 않아야하는 시간을 나타내는 값을 초 단위로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06f0d192853b0ab8b3406d2dd070fa47ec20ae34" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a stale response if the check for a fresh one fails. The seconds value indicates for how long the client is willing to accept the stale response after the initial expiration.</source>
          <target state="translated">새로운 응답 확인에 실패하면 클라이언트가 오래된 응답을 기꺼이 수락 함을 나타냅니다. 초 값은 클라이언트가 초기 만료 후 오래된 응답을 기꺼이 수락 할 시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="deaef90dde647ea30a46f347a0d9e248199a5f91" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept a stale response while asynchronously checking in the background for a fresh one. The seconds value indicates for how long the client is willing to accept a stale response.</source>
          <target state="translated">클라이언트가 백그라운드에서 새로운 응답을 비동기 적으로 검사하는 동안 오래된 응답을 기꺼이 수락 함을 나타냅니다. 초 값은 클라이언트가 오래된 응답을 기꺼이 수락 할 시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33fbfac7a3753ad2fc4a262b8c0b818d20d43473" translate="yes" xml:space="preserve">
          <source>Indicates that the client is willing to accept trailer fields in a chunked transfer coding.</source>
          <target state="translated">클라이언트가 청크 분할 전송 코딩에서 트레일러 필드를 기꺼이 수락 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a44c16e62480d86b3a9b9458e2ea45fed4f4e530" translate="yes" xml:space="preserve">
          <source>Indicates that the client wants a response that will still be fresh for at least the specified number of seconds.</source>
          <target state="translated">클라이언트가 최소한 지정된 시간 (초) 동안 새로운 응답을 원함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b642df972d92ffd9369fe8f647cb5c9e563d0505" translate="yes" xml:space="preserve">
          <source>Indicates that the client would like to keep the connection open. Having a persistent connection is the default on HTTP/1.1 requests. The list of headers are the name of the header to be removed by the first non-transparent proxy or cache in-between: these headers define the connection between the emitter and the first entity, not the destination node.</source>
          <target state="translated">클라이언트가 연결을 계속 열려고 함을 나타냅니다. 지속적인 연결이 HTTP / 1.1 요청의 기본값입니다. 헤더 목록은 첫 번째 비 투명 프록시 또는 그 사이의 캐시에 의해 제거 될 헤더의 이름입니다.이 헤더는 대상 노드가 아닌 이미 터와 첫 번째 엔티티 사이의 연결을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f97447000dd6a21db07563d6ef729be734f5e4a3" translate="yes" xml:space="preserve">
          <source>Indicates that the request has been conveyed in early data.</source>
          <target state="translated">요청이 초기 데이터로 전달되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0f74606c348d1fa1dbb5218dbab55ec440f2a48f" translate="yes" xml:space="preserve">
          <source>Indicates that the response body &lt;strong&gt;will not change&lt;/strong&gt; over time. The resource, if &lt;em&gt;unexpired&lt;/em&gt;, is unchanged on the server and therefore the client should not send a conditional revalidation for it (e.g. &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;) to check for updates, even when the user explicitly refreshes the page. Clients that aren't aware of this extension must ignore them as per the HTTP specification. In Firefox, &lt;code&gt;immutable&lt;/code&gt; is only honored on &lt;code&gt;https://&lt;/code&gt; transactions. For more information, see also this &lt;a href=&quot;https://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;blog post&lt;/a&gt;.</source>
          <target state="translated">응답 본문 &lt;strong&gt;이&lt;/strong&gt; 시간이 지나도 &lt;strong&gt;변경되지 않음을&lt;/strong&gt; 나타냅니다 . &lt;em&gt;unexpired&lt;/em&gt; 인 경우 리소스 는 서버에서 변경되지 않으므로 클라이언트는 사용자가 명시 적으로 페이지를 새로 고친 경우에도 업데이트를 확인하기 위해 조건부 재 검증 (예 : &lt;code&gt;If-None-Match&lt;/code&gt; 또는 &lt;code&gt;If-Modified-Since&lt;/code&gt; )을 보내서는 안됩니다 . . 이 확장을 인식하지 못하는 클라이언트는 HTTP 사양에 따라이를 무시해야합니다. Firefox에서 &lt;code&gt;immutable&lt;/code&gt; 은 &lt;code&gt;https://&lt;/code&gt; 트랜잭션 에서만 적용 됩니다. 자세한 내용은이 &lt;a href=&quot;https://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;블로그 게시물을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5955a042968bb418bc770fb1ac84f6a1e3b04e52" translate="yes" xml:space="preserve">
          <source>Indicates that the response body will not change over time. The resource, if unexpired, is unchanged on the server and therefore the client should not send a conditional revalidation for it (e.g. &lt;code&gt;If-None-Match&lt;/code&gt; or &lt;code&gt;If-Modified-Since&lt;/code&gt;) to check for updates, even when the user explicitly refreshes the page. Clients that aren't aware of this extension must ignore them as per the HTTP specification. In Firefox, &lt;code&gt;immutable&lt;/code&gt; is only honored on &lt;code&gt;https://&lt;/code&gt; transactions. For more information, see also this &lt;a href=&quot;http://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;blog post&lt;/a&gt;.</source>
          <target state="translated">응답 본문이 시간이 지나도 변경되지 않음을 나타냅니다. 만료되지 않은 리소스는 서버에서 변경되지 않으므로 클라이언트는 사용자가 명시 적으로 페이지를 새로 고치더라도 업데이트를 확인하기 위해 조건부 유효성 다시 확인 (예 : &lt;code&gt;If-None-Match&lt;/code&gt; 또는 &lt;code&gt;If-Modified-Since&lt;/code&gt; )을 보내지 않아야 합니다. . 이 확장명을 모르는 클라이언트는 HTTP 사양에 따라 무시해야합니다. Firefox에서 &lt;code&gt;immutable&lt;/code&gt; 은 &lt;code&gt;https://&lt;/code&gt; 트랜잭션 에서만 유효 합니다. 자세한 내용은이 &lt;a href=&quot;http://bitsup.blogspot.de/2016/05/cache-control-immutable.html&quot;&gt;블로그 게시물을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d6f6e0f4b09d76d1dc1ccd2d2b141f2a442a1d2" translate="yes" xml:space="preserve">
          <source>Indicates that the response is intended for a single user and must not be stored by a shared cache. A private cache may store the response.</source>
          <target state="translated">응답이 단일 사용자를위한 것이며 공유 캐시에 저장되어서는 안됨을 나타냅니다. 개인 캐시는 응답을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="619c7b97c107a9d7b9f0f9a1bf6f8d31f3066053" translate="yes" xml:space="preserve">
          <source>Indicates that the response may be cached by any cache.</source>
          <target state="translated">캐시가 응답을 캐시 할 수 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0a024414359139c546eb2b06d1c63cbb97a90599" translate="yes" xml:space="preserve">
          <source>Indicates that the server is unwilling to risk processing a request that might be replayed.</source>
          <target state="translated">서버가 재생할 수있는 요청을 처리 할 위험이 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1764f0a2dc1d82d92287ff0957396522996daa3d" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to clear all types of data for the origin of the response. If more data types are added in future versions of this header, they will also be covered by it.</source>
          <target state="translated">서버가 응답의 출처에 대한 모든 유형의 데이터를 지우려고 함을 나타냅니다. 이 헤더의 이후 버전에 더 많은 데이터 유형이 추가되면 해당 데이터 유형도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d0874c17bb0051bdad46f81276a7a676b678ee89" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to reload all browsing contexts for the origin of the response (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location/reload&quot;&gt;&lt;code&gt;Location.reload&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">서버가 응답의 출처 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Location/reload&quot;&gt; &lt;code&gt;Location.reload&lt;/code&gt; &lt;/a&gt; )에 대한 모든 찾아보기 컨텍스트를 다시로드하려고 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="cc5b7853c11f1c815426aacf326e6a5f1048b0f0" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove all DOM storage for the origin of the response URL. This includes storage mechanisms such as:</source>
          <target state="translated">서버가 응답 URL의 출처에 대한 모든 DOM 스토리지를 제거하려고 함을 나타냅니다. 여기에는 다음과 같은 저장 메커니즘이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ef7e1742a157a2de2bf388f99e235ed9711fd524" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove all cookies for the origin of the response URL. HTTP authentication credentials are also cleared out. This affects the entire registered domain, including subdomains. So https://example.com as well as https://stage.example.com, will have cookies cleared.</source>
          <target state="translated">서버가 응답 URL의 출처에 대한 모든 쿠키를 제거하려고 함을 나타냅니다. HTTP 인증 자격 증명도 지워집니다. 이는 하위 도메인을 포함하여 등록 된 전체 도메인에 영향을줍니다. 따라서 https://example.com과 https://stage.example.com은 쿠키를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="ac63007b3c6f50bd4fa2b0ef581a82efee07a128" translate="yes" xml:space="preserve">
          <source>Indicates that the server wishes to remove locally cached data (i.e. the browser cache, see &lt;a href=&quot;../caching&quot;&gt;HTTP caching&lt;/a&gt;) for the origin of the response URL. Depending on the browser, this might also clear out things like pre-rendered pages, script caches, WebGL shader caches, or address bar suggestions.</source>
          <target state="translated">서버 가 응답 URL의 출처에 대해 로컬로 캐시 된 데이터 (예 : 브라우저 캐시, &lt;a href=&quot;../caching&quot;&gt;HTTP 캐싱&lt;/a&gt; 참조 ) 를 제거하려고 함을 나타냅니다 . 브라우저에 따라 사전 렌더링 된 페이지, 스크립트 캐시, WebGL 셰이더 캐시 또는 주소 표시 줄 제안과 같은 사항도 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf528554c916e8834415e263fe337623229bfac2" translate="yes" xml:space="preserve">
          <source>Indicates the URL to redirect a page to.</source>
          <target state="translated">페이지를 리디렉션 할 URL을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c8fbcc1100e604b3e848463d05946c3ca0c4fdb5" translate="yes" xml:space="preserve">
          <source>Indicates the approximate amount of device RAM. This value is an approximation given by rounding to the nearest power of 2 and dividing that number by 1024. For example, 512 megabytes will be reported as &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="translated">대략적인 장치 RAM 양을 나타냅니다. 이 값은 가장 가까운 2의 거듭 제곱으로 반올림하고 해당 숫자를 1024로 나눈 근사값입니다. 예를 들어 512MB는 &lt;code&gt;0.5&lt;/code&gt; 로보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae0c2dd829c8b5d8d4e242e3869d139f81ef6d4f" translate="yes" xml:space="preserve">
          <source>Indicates the client wants a response that will still be fresh for &lt;em&gt;at least&lt;/em&gt; the specified number of seconds.</source>
          <target state="translated">클라이언트가 &lt;em&gt;최소한&lt;/em&gt; 지정된 시간 (초) 동안 새로운 응답을 원함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e3b0306391348f832a38528343b5bbe9c4441f9b" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response if the check for a fresh one fails. The &lt;em&gt;seconds&lt;/em&gt; value indicates how long the client will accept the stale response after the initial expiration.</source>
          <target state="translated">새로운 응답에 대한 검사가 실패하면 클라이언트가 오래된 응답을 수락 함을 나타냅니다. &lt;em&gt;초&lt;/em&gt; 값은 클라이언트가 초기 만료 후 낡은 응답을 받아 시간을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6a3143e8d1d08e6bc3f0bc2cf897fbeba771a630" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response, while asynchronously checking in the background for a fresh one. The &lt;em&gt;seconds&lt;/em&gt; value indicates how long the client will accept a stale response. See &quot;&lt;a href=&quot;https://web.dev/stale-while-revalidate&quot;&gt;Keeping things fresh with &lt;code&gt;stale-while-revalidate&lt;/code&gt;&lt;/a&gt;&quot; for more information.</source>
          <target state="translated">클라이언트가 오래된 응답을 수락하는 동안 백그라운드에서 새로운 응답을 비동기 적으로 확인 함을 나타냅니다. &lt;em&gt;초&lt;/em&gt; 값은 클라이언트가 낡은 응답을 허용하는 시간을 나타냅니다. 자세한 내용은 &quot; &lt;a href=&quot;https://web.dev/stale-while-revalidate&quot;&gt; &lt;code&gt;stale-while-revalidate&lt;/code&gt; &lt;/a&gt; 유지 &quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ca02cf1f3493509e01b7edcf83dc8689814598fc" translate="yes" xml:space="preserve">
          <source>Indicates the client will accept a stale response. An optional value in seconds indicates the upper limit of staleness the client will accept.</source>
          <target state="translated">클라이언트가 오래된 응답을 수락 함을 나타냅니다. 선택적 값 (초)은 클라이언트가 허용 할 비활성 상한을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="79a4facd7bfa2752abc2651ad8a22d1290f85fac" translate="yes" xml:space="preserve">
          <source>Indicates the client's device pixel ratio.</source>
          <target state="translated">클라이언트의 장치 픽셀 비율을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7c99e10959087264a8f9f76bbe0fb6c6616be7db" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e. no compression, nor modification). This token, except if explicitly specified, is always deemed acceptable.</source>
          <target state="translated">식별 기능을 나타냅니다 (예 : 압축 및 수정 없음). 명시 적으로 지정된 경우를 제외하고이 토큰은 항상 허용되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="300e6bcab08b44f020c00b953beb914707cf781f" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e. no compression, nor modification). This value is always considered as acceptable, even if not present.</source>
          <target state="translated">식별 기능을 나타냅니다 (예 : 압축 및 수정 없음). 존재하지 않더라도이 값은 항상 허용 가능한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="4412b21a02fb471172b40a65fca71a926bc03433" translate="yes" xml:space="preserve">
          <source>Indicates the identity function (i.e., no compression or modification). This token, except if explicitly specified, is always deemed acceptable.</source>
          <target state="translated">신원 기능을 나타냅니다 (즉, 압축 또는 수정 없음). 명시 적으로 지정된 경우를 제외하고이 토큰은 항상 허용되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="76a871a5c993107287ac4f26321af85411e97af4" translate="yes" xml:space="preserve">
          <source>Indicates the layout viewport width in CSS pixels.</source>
          <target state="translated">CSS 픽셀로 레이아웃 뷰포트 너비를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="13225f32edcd936d283f2308a7685081e9a67758" translate="yes" xml:space="preserve">
          <source>Indicates the media type of the resource.</source>
          <target state="translated">자원의 매체 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fc5582911590b64a930b456a56b69a37cf02610d" translate="yes" xml:space="preserve">
          <source>Indicates the part of a document that the server should return.</source>
          <target state="translated">서버가 반환해야하는 문서 부분을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d639acdf32e7294320e546fc64936adb232d2c83" translate="yes" xml:space="preserve">
          <source>Indicates the resource width in physical pixels (in other words the intrinsic size of an image).</source>
          <target state="translated">실제 너비 (즉, 이미지의 고유 한 크기)로 리소스 너비를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b493750d584250a2156de56f689aa3919765f8d9" translate="yes" xml:space="preserve">
          <source>Indicates the tracking status of the corresponding response.</source>
          <target state="translated">해당 응답의 추적 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7befcc9a5a8e27a8f507455ba0c663658e48c7d6" translate="yes" xml:space="preserve">
          <source>Indicates the tracking status that applied to the corresponding request.</source>
          <target state="translated">해당 요청에 적용된 추적 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9743929feee03e6db93823d546a5b6519ece671b" translate="yes" xml:space="preserve">
          <source>Indicates to not retrieve new data. This being the case, the server wishes the client to obtain a response only once and then cache. From this moment the client should keep releasing a cached copy and avoid contacting the origin-server to see if a newer copy exists.</source>
          <target state="translated">새 데이터를 검색하지 않음을 나타냅니다. 이 경우 서버는 클라이언트가 응답을 한 번만 얻은 다음 캐시하기를 원합니다. 이 시점부터 클라이언트는 캐시 된 사본을 계속 공개하고 원본 서버에 접속하여 새로운 사본이 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3f04a324f464c13b3de7ed6c10ccdaea39b71f5" translate="yes" xml:space="preserve">
          <source>Indicates where a fetch originates from.</source>
          <target state="translated">가져 오기가 시작된 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="850af2d2f10fe8221618b8b2b077bcf0329a3edf" translate="yes" xml:space="preserve">
          <source>Indicates where in a full body message a partial message belongs.</source>
          <target state="translated">본문 메시지에서 부분 메시지가 속하는 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="be2f75e053430254664cae4d27f3e51d38721d53" translate="yes" xml:space="preserve">
          <source>Indicates whether a browser should be allowed to render a page in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">브라우저가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; 에서 페이지를 렌더링 할 수 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6967405f8a783a33baf1dce6db1454c9b6f37b69" translate="yes" xml:space="preserve">
          <source>Indicates whether a browser should be allowed to render a page in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">브라우저가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt; &lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt; &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; 에서 페이지를 렌더링하도록 허용해야하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f69a3c7ddba822bcbbe58dfda37543497c04707b" translate="yes" xml:space="preserve">
          <source>Indicates whether the response can be shared.</source>
          <target state="translated">응답을 공유 할 수 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b1d669ea27317208a9d7ef5173080a7f6aeec565" translate="yes" xml:space="preserve">
          <source>Indicates whether the response to the request can be exposed when the credentials flag is true.</source>
          <target state="translated">자격 증명 플래그가 true 일 때 요청에 대한 응답을 표시 할 수 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5fc014b0691c6356400a50c33337bc3eb5a7b831" translate="yes" xml:space="preserve">
          <source>Indicates which headers can be exposed as part of the response by listing their names.</source>
          <target state="translated">이름을 나열하여 응답의 일부로 노출 될 수있는 헤더를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="99d7331d101ff2b635886de75d335f15281ec8b0" translate="yes" xml:space="preserve">
          <source>Indicates which protocol was used to make the request (typically &quot;http&quot; or &quot;https&quot;).</source>
          <target state="translated">요청에 사용 된 프로토콜을 나타냅니다 (일반적으로 &quot;http&quot;또는 &quot;https&quot;).</target>
        </trans-unit>
        <trans-unit id="0c0dafad80f67d7e9dd4f5b440cd064e7a6c1c13" translate="yes" xml:space="preserve">
          <source>Indicating a target audience for a resource</source>
          <target state="translated">자원의 대상 고객 표시</target>
        </trans-unit>
        <trans-unit id="5a9618787236f752551e7febb8e28aa6e4ab7345" translate="yes" xml:space="preserve">
          <source>Indicating the URL of a transaction's result</source>
          <target state="translated">거래 결과의 URL 표시</target>
        </trans-unit>
        <trans-unit id="fca6301092f0f25b345065ddc8bcf56276e0afd5" translate="yes" xml:space="preserve">
          <source>Indicating the language a document is written in</source>
          <target state="translated">문서가 쓰여지는 언어를 나타내는</target>
        </trans-unit>
        <trans-unit id="d2ba3b92f81a378a79261a6178d8927104366f37" translate="yes" xml:space="preserve">
          <source>Inferring the policy</source>
          <target state="translated">정책 추론</target>
        </trans-unit>
        <trans-unit id="7f8525ef38cab4390ca786bdef36f2a78190d70f" translate="yes" xml:space="preserve">
          <source>Information regarding the HSTS preload list in Chrome : &lt;a href=&quot;https://www.chromium.org/hsts&quot;&gt;https://www.chromium.org/hsts&lt;/a&gt;</source>
          <target state="translated">Chrome의 HSTS 사전로드 목록에 대한 정보 : &lt;a href=&quot;https://www.chromium.org/hsts&quot;&gt;https://www.chromium.org/hsts&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a98006b47abdad4b8d9d147e829058b52579a85e" translate="yes" xml:space="preserve">
          <source>Information responses</source>
          <target state="translated">정보 응답</target>
        </trans-unit>
        <trans-unit id="05f417a1323b0c40bcc8b6cef74f7ddad2f42684" translate="yes" xml:space="preserve">
          <source>Information should be stored in cookies with the understanding that all cookie values are visible to, and can be changed by, the end-user. Depending on the application, it may be desirable to use an opaque identifier which is looked-up by the server or to investigate alternative authentication/confidentiality mechanisms such as JSON Web Tokens.</source>
          <target state="translated">정보는 모든 쿠키 값이 최종 사용자에게 표시되고 변경 될 수 있음을 이해하고 쿠키에 저장되어야합니다. 애플리케이션에 따라 서버에서 조회하는 불투명 식별자를 사용하거나 JSON 웹 토큰과 같은 대체 인증 / 기밀성 메커니즘을 조사하는 것이 바람직 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeecc3d4ea7b1d20860b0092324c40322c7b585f" translate="yes" xml:space="preserve">
          <source>Informational</source>
          <target state="translated">Informational</target>
        </trans-unit>
        <trans-unit id="9e7c1323910f2b5174a834226f71b3b7aee441c8" translate="yes" xml:space="preserve">
          <source>Informational (Expired)</source>
          <target state="translated">정보 제공 (만료)</target>
        </trans-unit>
        <trans-unit id="485d91f1d2933394df2618e86ac2b0b86484e6e6" translate="yes" xml:space="preserve">
          <source>Informational responses (&lt;code&gt;100&lt;/code&gt;&amp;ndash;&lt;code&gt;199&lt;/code&gt;)</source>
          <target state="translated">정보 응답 ( &lt;code&gt;100&lt;/code&gt; &amp;ndash; &lt;code&gt;199&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1af57283b2cb4e6ccf06b8fbe5453fc2d6fbb913" translate="yes" xml:space="preserve">
          <source>Informs recipients that the client is about to send a (presumably large) message body in this request and wishes to receive a &lt;a href=&quot;../status/100&quot;&gt;&lt;code&gt;100&lt;/code&gt;&lt;/a&gt; (Continue) interim response.</source>
          <target state="translated">이 요청에서 클라이언트가 (아마도 큰) 메시지 본문을 보내려고하고 &lt;a href=&quot;../status/100&quot;&gt; &lt;code&gt;100&lt;/code&gt; &lt;/a&gt; (계속) 중간 응답 을 수신하려고 함을 수신자에게 알립니다 .</target>
        </trans-unit>
        <trans-unit id="cd5eddf712118b9e10b11441a5d8a43d84753b52" translate="yes" xml:space="preserve">
          <source>Informs the server about the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MIME_type&quot;&gt;types&lt;/a&gt; of data that can be sent back.</source>
          <target state="translated">다시 보낼 수있는 데이터 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MIME_type&quot;&gt;유형&lt;/a&gt; 에 대해 서버에 알립니다 .</target>
        </trans-unit>
        <trans-unit id="59f3ea8d1fb37b159cf5cc21991810bccf67d68b" translate="yes" xml:space="preserve">
          <source>Informs the server about the encoding algorithm, usually a compression algorithm, that can be used on the resource sent back.</source>
          <target state="translated">서버에게 다시 보낸 리소스에서 사용할 수있는 인코딩 알고리즘 (일반적으로 압축 알고리즘)에 대해 알립니다.</target>
        </trans-unit>
        <trans-unit id="7d1c901efc56627410e469547e2e02c56e5888bd" translate="yes" xml:space="preserve">
          <source>Informs the server about the human language the server is expected to send back. This is a hint and is not necessarily under the full control of the user: the server should always pay attention not to override an explicit user choice (like selecting a language from a dropdown).</source>
          <target state="translated">서버가 다시 보낼 것으로 예상되는 인간 언어에 대해 서버에 알립니다. 이것은 힌트이며 반드시 사용자가 완전히 제어 할 필요는 없습니다. 서버는 항상 명시적인 사용자 선택 (예 : 드롭 다운에서 언어 선택)을 무시하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="ddb5e7a065792d4b30e1cbf2d728a2ac83ecc7bb" translate="yes" xml:space="preserve">
          <source>Informs the server about the language the server is expected to send back. This is a hint and is not necessarily under the full control of the user: the server should always pay attention not to override an explicit user choice (like selecting a language in a drop down list).</source>
          <target state="translated">서버에게 서버가 다시 보낼 것으로 예상되는 언어를 알려줍니다. 이것은 힌트이며 반드시 사용자를 완전히 제어 할 필요는 없습니다. 서버는 항상 명시적인 사용자 선택을 무시하지 않도록주의해야합니다 (드롭 다운 목록에서 언어 선택).</target>
        </trans-unit>
        <trans-unit id="87b0141515a7b36be28ca5afb9e3d2f36da758a0" translate="yes" xml:space="preserve">
          <source>Informs the server about the types of data that can be sent back. It is MIME-type.</source>
          <target state="translated">다시 보낼 수있는 데이터 유형에 대해 서버에 알립니다. MIME 타입입니다.</target>
        </trans-unit>
        <trans-unit id="eee6e27810ba2393a1392a0340b18fa6717ec6eb" translate="yes" xml:space="preserve">
          <source>Informs the server about which character set the client is able to understand.</source>
          <target state="translated">클라이언트가 이해할 수있는 문자 집합을 서버에 알립니다.</target>
        </trans-unit>
        <trans-unit id="42cf6c04980a1ce5076cbc436e3d8fd8f9bd1eaa" translate="yes" xml:space="preserve">
          <source>Inheritance of policy for embedded content</source>
          <target state="translated">임베드 된 컨텐츠에 대한 정책 상속</target>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="translated">초기 정의</target>
        </trans-unit>
        <trans-unit id="7b309a69a69c83b16df2d7ed3a933148fd03e854" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;screen-wake-lock&lt;/code&gt; feature directive.</source>
          <target state="translated">&lt;code&gt;screen-wake-lock&lt;/code&gt; 기능 지시문 의 초기 정의 .</target>
        </trans-unit>
        <trans-unit id="7c20ea0f7a5e6485b35d3ff374d22c887ebf5ccf" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;wake-lock&lt;/code&gt; feature directive.</source>
          <target state="translated">&lt;code&gt;wake-lock&lt;/code&gt; 기능 지시문 의 초기 정의 .</target>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="translated">초기 정의.</target>
        </trans-unit>
        <trans-unit id="e33acc0f454b7bc534181d5c180450e08b663048" translate="yes" xml:space="preserve">
          <source>Initial definition. Defines the &lt;a href=&quot;headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; header. Directives are defined in the specs for the features they control. See individual directive pages for details.</source>
          <target state="translated">초기 정의. &lt;a href=&quot;headers/feature-policy&quot;&gt; &lt;code&gt;Feature-Policy&lt;/code&gt; &lt;/a&gt; 헤더를 정의합니다 . 지시문은 제어하는 ​​기능의 스펙에 정의되어 있습니다. 자세한 내용은 개별 지시문 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="edd05a55e87a0a4d81fe6d4260b5996b65256986" translate="yes" xml:space="preserve">
          <source>Inline style attributes are also blocked:</source>
          <target state="translated">인라인 스타일 속성도 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="b1392fca8ed54aab0cc2cacc082edcfe0d478690" translate="yes" xml:space="preserve">
          <source>Inspecting cookies using the Storage Inspector</source>
          <target state="translated">Storage Inspector를 사용하여 쿠키 검사</target>
        </trans-unit>
        <trans-unit id="888016dc3b8bc43c7d35e5a67e82071570e7e662" translate="yes" xml:space="preserve">
          <source>Instantiation of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt;&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;&lt;/a&gt; element will fail if:</source>
          <target state="translated">다음과 같은 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt; &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt; &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt; &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소의 인스턴스화 가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="fcd90298324aef5e8378a11b58c0458589479afd" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, authors who wish to regulate nested browsing contexts and workers should use the &lt;a href=&quot;content-security-policy/frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;content-security-policy/worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="translated">&lt;code&gt;child-src&lt;/code&gt; 대신 중첩 된 브라우징 컨텍스트 및 작업자를 조정하려는 작성자는 각각 &lt;a href=&quot;content-security-policy/frame-src&quot;&gt; &lt;code&gt;frame-src&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;content-security-policy/worker-src&quot;&gt; &lt;code&gt;worker-src&lt;/code&gt; &lt;/a&gt; 지시문을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a7d972ef39c5afd44ac2beb99c854651c87a78a6" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, authors who wish to regulate nested browsing contexts and workers should use the &lt;a href=&quot;frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="translated">&lt;code&gt;child-src&lt;/code&gt; 대신 중첩 된 브라우징 컨텍스트 및 작업자를 조정하려는 작성자는 각각 &lt;a href=&quot;frame-src&quot;&gt; &lt;code&gt;frame-src&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;worker-src&quot;&gt; &lt;code&gt;worker-src&lt;/code&gt; &lt;/a&gt; 지시문을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="084aab59ba07fd42914dc61a350dfb0f10e90306" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;child-src&lt;/code&gt;, if you want to regulate nested browsing contexts and workers, you should use the &lt;a href=&quot;content-security-policy/frame-src&quot;&gt;&lt;code&gt;frame-src&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;content-security-policy/worker-src&quot;&gt;&lt;code&gt;worker-src&lt;/code&gt;&lt;/a&gt; directives, respectively.</source>
          <target state="translated">&lt;code&gt;child-src&lt;/code&gt; 대신 중첩 된 브라우징 컨텍스트 및 워커를 규제하려면 &lt;a href=&quot;content-security-policy/frame-src&quot;&gt; &lt;code&gt;frame-src&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;content-security-policy/worker-src&quot;&gt; &lt;code&gt;worker-src&lt;/code&gt; &lt;/a&gt; 지시문을.</target>
        </trans-unit>
        <trans-unit id="e2c345c2bb8c9ae2f11a593aebecd152fbd0acd7" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client closes,&lt;em&gt;permanent cookies&lt;/em&gt; expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="translated">클라이언트가 닫힐 때 만료되는 대신 &lt;em&gt;영구 쿠키&lt;/em&gt; 는 특정 날짜 ( &lt;code&gt;Expires&lt;/code&gt; ) 또는 특정 기간 ( &lt;code&gt;Max-Age&lt;/code&gt; ) 후에 만료 됩니다.</target>
        </trans-unit>
        <trans-unit id="ddeb6a9e31213f28e884fd04ed1dcca7829587e3" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client is closed, &lt;strong&gt;permanent cookies&lt;/strong&gt; expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="translated">클라이언트가 닫힐 때 만료되는 대신 &lt;strong&gt;영구 쿠키&lt;/strong&gt; 는 특정 날짜에 &lt;code&gt;Expires&lt;/code&gt; 됩니다 ( Expires ) 또는 특정 기간 ( &lt;code&gt;Max-Age&lt;/code&gt; ) 후에 됩니다.</target>
        </trans-unit>
        <trans-unit id="687abe5b976f19cc45e08804dc047a80872035fb" translate="yes" xml:space="preserve">
          <source>Instead of expiring when the client is closed, permanent cookies expire at a specific date (&lt;code&gt;Expires&lt;/code&gt;) or after a specific length of time (&lt;code&gt;Max-Age&lt;/code&gt;).</source>
          <target state="translated">클라이언트가 닫힐 때 만료되는 대신 영구 쿠키는 특정 날짜 ( &lt;code&gt;Expires&lt;/code&gt; ) 또는 특정 기간 ( &lt;code&gt;Max-Age&lt;/code&gt; ) 후에 만료 됩니다.</target>
        </trans-unit>
        <trans-unit id="36cf82c2a961317e1eff83740cd0b4132837ed88" translate="yes" xml:space="preserve">
          <source>Instead of using a &lt;a href=&quot;headers/public-key-pins&quot;&gt;&lt;code&gt;Public-Key-Pins&lt;/code&gt;&lt;/a&gt; header you can also use a &lt;a href=&quot;headers/public-key-pins-report-only&quot;&gt;&lt;code&gt;Public-Key-Pins-Report-Only&lt;/code&gt;&lt;/a&gt; header. This header only sends reports to the &lt;code&gt;report-uri&lt;/code&gt; specified in the header and does still allow browsers to connect to the webserver even if the pinning is violated.</source>
          <target state="translated">&lt;a href=&quot;headers/public-key-pins&quot;&gt; &lt;code&gt;Public-Key-Pins&lt;/code&gt; &lt;/a&gt; 헤더를 사용하는 대신 &lt;a href=&quot;headers/public-key-pins-report-only&quot;&gt; &lt;code&gt;Public-Key-Pins-Report-Only&lt;/code&gt; &lt;/a&gt; 헤더 를 사용할 수도 있습니다 . 이 헤더는 헤더에 지정된 &lt;code&gt;report-uri&lt;/code&gt; 로만 보고서를 전송 하며 고정을 위반하더라도 브라우저가 웹 서버에 계속 연결할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="3750ed931b77d473b6340fb847310a94be2c064d" translate="yes" xml:space="preserve">
          <source>Instructs the user agent to report attempts to violate the Content Security Policy. These violation reports consist of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; documents sent via an HTTP &lt;code&gt;POST&lt;/code&gt; request to the specified URI.</source>
          <target state="translated">사용자 에이전트에게 콘텐츠 보안 정책 위반 시도를보고하도록 지시합니다. 이러한 위반 보고서 는 HTTP &lt;code&gt;POST&lt;/code&gt; 요청을 통해 지정된 URI로 전송 된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; 문서로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="da42a3abb7f8b91ffc4fd5c08ba6b30c83141085" translate="yes" xml:space="preserve">
          <source>Instructs user agents to treat all of a site's insecure URLs (those served over HTTP) as though they have been replaced with secure URLs (those served over HTTPS). This directive is intended for web sites with large numbers of insecure legacy URLs that need to be rewritten.</source>
          <target state="translated">사용자 에이전트가 모든 사이트의 안전하지 않은 URL (HTTP를 통해 제공되는 URL)을 보안 URL (HTTPS를 통해 제공되는 URL)로 교체 한 것처럼 처리하도록 지시합니다. 이 지시문은 다시 작성해야하는 안전하지 않은 기존 URL이 많은 웹 사이트를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="206bbd6a7b7d6a23df99e3ac10a5c7e4495332dd" translate="yes" xml:space="preserve">
          <source>Integration with CSS</source>
          <target state="translated">CSS와 통합</target>
        </trans-unit>
        <trans-unit id="eded9e1af9c609a228692b23c36ea0973e62cf9c" translate="yes" xml:space="preserve">
          <source>Integration with HTML</source>
          <target state="translated">HTML과 통합</target>
        </trans-unit>
        <trans-unit id="241c7e4997c321b689e3324be2a21f7dbf1a7358" translate="yes" xml:space="preserve">
          <source>Integrity of a partial download</source>
          <target state="translated">부분 다운로드의 무결성</target>
        </trans-unit>
        <trans-unit id="d7339840c521459441002b60ebbff7f9e4807175" translate="yes" xml:space="preserve">
          <source>Internet Draft</source>
          <target state="translated">인터넷 초안</target>
        </trans-unit>
        <trans-unit id="a6663b7c68906c9f926b00ce9838f57dafd1e9c7" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                         M. Belshe
Request for Comments: 7540                                         BitGo
Category: Standards Track                                        R. Peon
ISSN: 2070-1721                                              Google, Inc
                                                         M. Thomson, Ed.
                                                                 Mozilla
                                                                May 2015</source>
          <target state="translated">IETF (Internet Engineering Task Force) M. Belshe 의견 요청 : 7540 BitGo 카테고리 : 표준 트랙 R. Peon ISSN : 2070-1721 Google, Inc. M. Thomson, Ed. Mozilla 2015 년 5 월</target>
        </trans-unit>
        <trans-unit id="944b611c46b28ffd8244fb42daaa4b9496b1cf13" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7230                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2145&quot;&gt;2145&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                    J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;2818&lt;/a&gt;                                           greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7230 Adobe 단종 제품 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2145&quot;&gt;2145&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. 업데이트 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt; , &lt;a href=&quot;https://tools.ietf.org/html/rfc2818&quot;&gt;2818&lt;/a&gt; greenbytes 범주 : 표준 트랙 2014 년 6 월 ISSN : 2070-1721</target>
        </trans-unit>
        <trans-unit id="a37f9383c64e54f8eb287b01c2b6207a20637c11" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7231                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt;                                                 greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7231 Adobe 지원되지 않음 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. 업데이트 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2817&quot;&gt;2817&lt;/a&gt; greenbytes 범주 : 표준 트랙 2014 년 6 월 ISSN : 2070-1721</target>
        </trans-unit>
        <trans-unit id="ac7e3a4b626b90a8dbd99bacd4566ca932b34a3b" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7232                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Category: Standards Track                                     greenbytes
ISSN: 2070-1721                                                June 2014</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7232 Adobe 지원되지 않음 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. 카테고리 : 표준 트랙 그린 바이트 ISSN : 2070-1721 2014 년 6 월</target>
        </trans-unit>
        <trans-unit id="f19a38d04cab53923494c67976d4e498a99f2c29" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7233                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                            Y. Lafon, Ed.
Category: Standards Track                                            W3C
ISSN: 2070-1721                                          J. Reschke, Ed.
                                                              greenbytes
                                                              June 2014</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7233 Adobe 단종 제품 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; Y. Lafon, Ed. 카테고리 : 표준 트랙 W3C ISSN : 2070-1721 J. Reschke, Ed. greenbytes 2014 년 6 월</target>
        </trans-unit>
        <trans-unit id="abf0c52384302c538626557887406ff5785b7493" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7234                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                       M. Nottingham, Ed.
Category: Standards Track                                         Akamai
ISSN: 2070-1721                                          J. Reschke, Ed.
                                                              greenbytes
                                                               June 2014</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7234 Adobe 단종 제품 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; M. Nottingham, Ed. 카테고리 : 표준 트랙 Akamai ISSN : 2070-1721 J. Reschke, Ed. greenbytes 2014 년 6 월</target>
        </trans-unit>
        <trans-unit id="4cf7cbfbbfccd70ae7ed26796d1828c5ad2463df" translate="yes" xml:space="preserve">
          <source>Internet Engineering Task Force (IETF)                  R. Fielding, Ed.
Request for Comments: 7235                                         Adobe
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt;                                          J. Reschke, Ed.
Updates: &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;2617&lt;/a&gt;                                                 greenbytes
Category: Standards Track                                      June 2014
ISSN: 2070-1721</source>
          <target state="translated">IETF (Internet Engineering Task Force) R. Fielding, Ed. 의견 요청 : 7235 Adobe 단종 제품 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;2616&lt;/a&gt; J. Reschke, Ed. 업데이트 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;2617&lt;/a&gt; greenbytes 범주 : 표준 트랙 2014 년 6 월 ISSN : 2070-1721</target>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="translated">인터넷 익스플로러</target>
        </trans-unit>
        <trans-unit id="ee29687168fb4fd84a3acc654a9db5d9db8c1813" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8</source>
          <target state="translated">인터넷 익스플로러 8</target>
        </trans-unit>
        <trans-unit id="400856455193d5665422e0bfcbb69ad86eadd5de" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and 9 expose CORS via the &lt;code&gt;XDomainRequest&lt;/code&gt; object, but have a full implementation in IE 10</source>
          <target state="translated">Internet Explorer 8 및 9는 다음을 통해 CORS를 노출합니다. &lt;code&gt;XDomainRequest&lt;/code&gt; 개체 하지만 IE 10에서는 전체 구현이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b50d4fdd010f7da47bc090ba56b32ab192bd7efd" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 and 9 expose CORS via the &lt;code&gt;XDomainRequest&lt;/code&gt; object, but have a full implementation in IE 10.</source>
          <target state="translated">Internet Explorer 8 및 9는 &lt;code&gt;XDomainRequest&lt;/code&gt; 객체 를 통해 CORS를 노출 하지만 IE 10에서는 완전히 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="f09fc55fe960cdc577a491b6af400c7ecc717639" translate="yes" xml:space="preserve">
          <source>Internet Explorer 8 or earlier</source>
          <target state="translated">Internet Explorer 8 이하</target>
        </trans-unit>
        <trans-unit id="9df82ce454660e2e95801528c257a56a7c65b8f4" translate="yes" xml:space="preserve">
          <source>Internet Explorer 9</source>
          <target state="translated">인터넷 익스플로러 9</target>
        </trans-unit>
        <trans-unit id="ab3ccd4c44d2e9f7601c41c05c58eb093f7971c4" translate="yes" xml:space="preserve">
          <source>Internet Explorer UA string</source>
          <target state="translated">Internet Explorer UA 문자열</target>
        </trans-unit>
        <trans-unit id="935b07a4771d1ecca905a5712a8abb0cb5f5eebd" translate="yes" xml:space="preserve">
          <source>Internet Explorer doesn't put its name in the &lt;em&gt;BrowserName/VersionNumber&lt;/em&gt; format</source>
          <target state="translated">Internet Explorer는 이름을 &lt;em&gt;BrowserName / VersionNumber&lt;/em&gt; 형식으로 지정하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b2b280e0cd215dee60eed1d1e3dbd22fa9b08456" translate="yes" xml:space="preserve">
          <source>Internet Explorer put this token in the &lt;em&gt;comment&lt;/em&gt; part of the User Agent String</source>
          <target state="translated">Internet Explorer는이 토큰을 사용자 에이전트 문자열 의 &lt;em&gt;주석&lt;/em&gt; 부분에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="a1ee7fdf2dfeeebbbf381e7307a8cb5b69c060fd" translate="yes" xml:space="preserve">
          <source>Internet Standard</source>
          <target state="translated">인터넷 표준</target>
        </trans-unit>
        <trans-unit id="097b71887b4219ceb51b23addafcc7413a4278f3" translate="yes" xml:space="preserve">
          <source>Internet hosts by name or IP address, as well as an optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL scheme&lt;/a&gt; and/or port number, separated by spaces. The site's address may include an optional leading wildcard (the asterisk character, &lt;code&gt;'*'&lt;/code&gt;), and you may use a wildcard (again, &lt;code&gt;'*'&lt;/code&gt;) as the port number, indicating that all legal ports are valid for the source. Single quotes surrounding the host are not allowed.</source>
          <target state="translated">이름 또는 IP 주소, 선택적 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL 체계&lt;/a&gt; 및 / 또는 포트 번호 (공백으로 구분) 별 인터넷 호스트 . 사이트 주소에는 선택적 선행 와일드 카드 (별표 문자, &lt;code&gt;'*'&lt;/code&gt; )가 포함될 수 있으며 와일드 카드를 사용할 수 있습니다 (다시 말하지만, &lt;code&gt;'*'&lt;/code&gt; 있으며 포트 번호로 '*' )를 사용하여 모든 유효한 포트가 소스에 대해 유효 함을 나타낼 수 있습니다. 호스트를 둘러싼 작은 따옴표는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a3dfded56299e82b9ecd1b36148982d1169af1c0" translate="yes" xml:space="preserve">
          <source>Internet hosts by name or IP address, as well as an optional &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL scheme&lt;/a&gt; and/or port number. The site's address may include an optional leading wildcard (the asterisk character, &lt;code&gt;'*'&lt;/code&gt;), and you may use a wildcard (again, &lt;code&gt;'*'&lt;/code&gt;) as the port number, indicating that all legal ports are valid for the source.</source>
          <target state="translated">선택적 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/URIs_and_URLs&quot;&gt;URL 체계&lt;/a&gt; 및 / 또는 포트 번호 뿐만 아니라 이름 또는 IP 주소 별 인터넷 호스트 . 사이트 주소에는 선택적 선행 와일드 카드 (별표 문자 &lt;code&gt;'*'&lt;/code&gt; )가 포함될 수 있으며 와일드 카드 ( &lt;code&gt;'*'&lt;/code&gt; )를 포트 번호로 사용하여 모든 유효한 포트가 소스에 유효 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="037a2067974b5b1a90e1e346b9991a68825acb64" translate="yes" xml:space="preserve">
          <source>Internet media types are registered with a canonical form in order to
   be interoperable among systems with varying native encoding formats.
   Representations selected or transferred via HTTP ought to be in
   canonical form, for many of the same reasons described by the
   Multipurpose Internet Mail Extensions (MIME) [&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt;].  However, the
   performance characteristics of email deployments (i.e., store and
   forward messages to peers) are significantly different from those
   common to HTTP and the Web (server-based information services).
   Furthermore, MIME's constraints for the sake of compatibility with
   older mail transfer protocols do not apply to HTTP (see &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;). 

   MIME's canonical form requires that media subtypes of the &quot;text&quot; type
   use CRLF as the text line break.  HTTP allows the transfer of text
   media with plain CR or LF alone representing a line break, when such
   line breaks are consistent for an entire representation.  An HTTP
   sender MAY generate, and a recipient MUST be able to parse, line
   breaks in text media that consist of CRLF, bare CR, or bare LF.  In
   addition, text media in HTTP is not limited to charsets that use
   octets 13 and 10 for CR and LF, respectively.  This flexibility
   regarding line breaks applies only to text within a representation
   that has been assigned a &quot;text&quot; media type; it does not apply to
   &quot;multipart&quot; types or HTTP elements outside the payload body (e.g.,
   header fields).

   If a representation is encoded with a content-coding, the underlying
   data ought to be in a form defined above prior to being encoded.</source>
          <target state="translated">인터넷 미디어 유형은 다양한 기본 인코딩 형식을 가진 시스템간에 상호 운용 될 수 있도록 표준 형식으로 등록됩니다. HTTP를 통해 선택 또는 전송 된 표현은 MIME (Multipurpose Internet Mail Extensions) [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC2045&lt;/a&gt; ]에 설명 된 것과 동일한 여러 가지 이유로 정식 형식이어야 합니다. 그러나 전자 메일 배포 (예 : 메시지를 피어에 저장 및 전달)의 성능 특성은 HTTP 및 웹 (서버 기반 정보 서비스)에 공통적 인 성능 특성과 크게 다릅니다. 또한 이전 메일 전송 프로토콜과의 호환성을 위해 MIME의 제약 조건은 HTTP에 적용되지 않습니다 ( &lt;a href=&quot;#appendix-A&quot;&gt;부록 A&lt;/a&gt; 참조) .). MIME's canonical form requires that media subtypes of the &quot;text&quot; type use CRLF as the text line break. HTTP allows the transfer of text media with plain CR or LF alone representing a line break, when such line breaks are consistent for an entire representation. An HTTP sender MAY generate, and a recipient MUST be able to parse, line breaks in text media that consist of CRLF, bare CR, or bare LF. In addition, text media in HTTP is not limited to charsets that use octets 13 and 10 for CR and LF, respectively. This flexibility regarding line breaks applies only to text within a representation that has been assigned a &quot;text&quot; media type; it does not apply to &quot;multipart&quot; types or HTTP elements outside the payload body (e.g., header fields). If a representation is encoded with a content-coding, the underlying data ought to be in a form defined above prior to being encoded.</target>
        </trans-unit>
        <trans-unit id="23ce3ccc1ff356540fdaac404f8bf64e60f80ef1" translate="yes" xml:space="preserve">
          <source>Internet media types are registered with a canonical form. An
   entity-body transferred via HTTP messages MUST be represented in the
   appropriate canonical form prior to its transmission except for
   &quot;text&quot; types, as defined in the next paragraph.

   When in canonical form, media subtypes of the &quot;text&quot; type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).

   If an entity-body is encoded with a content-coding, the underlying
   data MUST be in a form defined above prior to being encoded.

   The &quot;charset&quot; parameter is used with some media types to define the
   character set (&lt;a href=&quot;#section-3.4&quot;&gt;section 3.4&lt;/a&gt;) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the &quot;text&quot;
   type are defined to have a default charset value of &quot;ISO-8859-1&quot; when
   received via HTTP. Data in character sets other than &quot;ISO-8859-1&quot; or
   its subsets MUST be labeled with an appropriate charset value. See
   &lt;a href=&quot;#section-3.4.1&quot;&gt;section 3.4.1&lt;/a&gt; for compatibility problems.</source>
          <target state="translated">인터넷 미디어 유형은 표준 양식으로 등록됩니다. HTTP 메시지를 통해 전송 된 엔티티 본문은 다음 단락에 정의 된 &quot;텍스트&quot;유형을 제외하고 전송 전에 적절한 표준 형식으로 표시되어야합니다. 정식 형식 인 경우 &quot;텍스트&quot;유형의 미디어 하위 유형은 CRLF를 텍스트 줄 바꿈으로 사용합니다. HTTP는이 요구 사항을 완화하고 전체 엔터티 본문에 대해 일관되게 수행 할 경우 줄 바꿈을 나타내는 일반 CR 또는 LF만으로 텍스트 미디어를 전송할 수 있습니다. HTTP 응용 프로그램은 HTTP를 통해 수신 한 텍스트 미디어에서 줄 바꿈을 나타내는 CRLF, Bare CR 및 Bare LF를 수용해야합니다. 또한 텍스트가 CR과 LF에 대해 각각 옥텟 13과 10을 사용하지 않는 문자 세트로 표시되는 경우,일부 멀티 바이트 문자 집합의 경우와 마찬가지로 HTTP를 사용하면 해당 문자 집합으로 정의 된 모든 8 진수 시퀀스를 사용하여 줄 바꿈에 대한 CR 및 LF에 해당합니다. 줄 바꿈과 관련된 이러한 유연성은 엔터티 본문의 텍스트 미디어에만 적용됩니다. 베어 CR 또는 LF는 HTTP 제어 구조 (예 : 헤더 필드 및 멀티 파트 경계) 내에서 CRLF를 대체해서는 안됩니다. 엔터티 본문이 콘텐츠 코딩으로 인코딩 된 경우 기본 데이터는 인코딩되기 전에 위에서 정의한 형식이어야합니다. &quot;charset&quot;매개 변수는 일부 매체 유형과 함께 사용하여 문자 세트를 정의합니다 (줄 바꿈과 관련된 이러한 유연성은 엔터티 본문의 텍스트 미디어에만 적용됩니다. 베어 CR 또는 LF는 HTTP 제어 구조 (예 : 헤더 필드 및 멀티 파트 경계) 내에서 CRLF를 대체해서는 안됩니다. 엔터티 본문이 콘텐츠 코딩으로 인코딩 된 경우 기본 데이터는 인코딩되기 전에 위에서 정의한 형식이어야합니다. &quot;charset&quot;매개 변수는 일부 매체 유형과 함께 사용하여 문자 세트를 정의합니다 (줄 바꿈과 관련된 이러한 유연성은 엔티티 본문의 텍스트 미디어에만 적용됩니다. 베어 CR 또는 LF는 HTTP 제어 구조 (예 : 헤더 필드 및 멀티 파트 경계) 내에서 CRLF를 대체해서는 안됩니다. 엔터티 본문이 콘텐츠 코딩으로 인코딩 된 경우 기본 데이터는 인코딩되기 전에 위에서 정의한 형식이어야합니다. &quot;charset&quot;매개 변수는 일부 매체 유형과 함께 사용하여 문자 세트를 정의합니다 (매개 변수는 문자 세트를 정의하기 위해 일부 매체 유형과 함께 사용됩니다 (매개 변수는 문자 세트를 정의하기 위해 일부 매체 유형과 함께 사용됩니다 (&lt;a href=&quot;#section-3.4&quot;&gt;&lt;/a&gt;데이터의 섹션 3.4 ). 발신자가 명시적인 문자 집합 매개 변수를 제공하지 않으면 &quot;text&quot;형식의 미디어 하위 유형은 HTTP를 통해 수신 될 때 기본 문자 집합 값 &quot;ISO-8859-1&quot;을 갖도록 정의됩니다. &quot;ISO-8859-1&quot;이외의 문자 세트 또는 해당 서브 세트의 데이터는 적절한 문자 세트 값으로 레이블되어야합니다. 호환성 문제는 &lt;a href=&quot;#section-3.4.1&quot;&gt;섹션 3.4.1&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ded9c72dfd997c4640e3e4defef803106231f1f6" translate="yes" xml:space="preserve">
          <source>Introduced in HTTP/1.0, &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; made this protocol easy to extend and experiment with. New functionality can even be introduced by a simple agreement between a client and a server about a new header's semantics.</source>
          <target state="translated">HTTP / 1.0에 도입 된 HTTP &lt;a href=&quot;headers&quot;&gt;헤더&lt;/a&gt; 를 통해이 프로토콜을 쉽게 확장하고 실험 할 수 있습니다. 새로운 헤더의 의미에 대해 클라이언트와 서버 간의 간단한 계약을 통해 새로운 기능을 도입 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="408ce1469d35c3a1c9fa2b8075ea8921344fc2af" translate="yes" xml:space="preserve">
          <source>Introduced in HTTP/1.0, &lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; make this protocol easy to extend and experiment with. New functionality can even be introduced by a simple agreement between a client and a server about a new header's semantics.</source>
          <target state="translated">HTTP / 1.0에 도입되었습니다. &lt;a href=&quot;headers&quot;&gt; 헤더를&lt;/a&gt; 사용하면이 프로토콜을 쉽게 확장하고 실험 할 수 있습니다. 새로운 기능은 새로운 헤더의 의미에 대한 클라이언트와 서버 간의 간단한 계약으로도 도입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1117753f6df6a46418e743d7060ef1767501957d" translate="yes" xml:space="preserve">
          <source>Introduction to Feature Policy</source>
          <target state="translated">기능 정책 소개</target>
        </trans-unit>
        <trans-unit id="80e829c3a10d9e489ea935dbe19658e50845954c" translate="yes" xml:space="preserve">
          <source>Invalid dates, like the value 0, represent a date in the past and mean that the resource is already expired.</source>
          <target state="translated">값 0과 같은 유효하지 않은 날짜는 과거의 날짜를 나타내며 리소스가 이미 만료되었음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="dfa60022094016d57bd557254bafb6ff9bbe3d2a" translate="yes" xml:space="preserve">
          <source>Invalid domains</source>
          <target state="translated">잘못된 도메인</target>
        </trans-unit>
        <trans-unit id="9032ed3737ead87641e8c9fd63add1c68fa832be" translate="yes" xml:space="preserve">
          <source>Invalid parameters in media, or typos when specifying &lt;code&gt;'base64'&lt;/code&gt;, are ignored, but no error is provided.</source>
          <target state="translated">미디어의 잘못된 매개 변수 또는 &lt;code&gt;'base64'&lt;/code&gt; 를 지정할 때 오타 가 무시되지만 오류는 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db5e158a717067d22e2fe4cb88250953ddf29eb6" translate="yes" xml:space="preserve">
          <source>Invalidation (RFC 7234)</source>
          <target state="translated">무효화 (RFC 7234)</target>
        </trans-unit>
        <trans-unit id="380eceb118a2210931ae6c7c6f4918fcad2be151" translate="yes" xml:space="preserve">
          <source>Invention of the World Wide Web</source>
          <target state="translated">월드 와이드 웹의 발명</target>
        </trans-unit>
        <trans-unit id="b00395d65a2e0cb5e4f72accad98e9c2d13dd4ca" translate="yes" xml:space="preserve">
          <source>Invocations of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch APIs&lt;/a&gt;, as discussed above.</source>
          <target state="translated">위에서 설명한대로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch API&lt;/a&gt; 의 호출 .</target>
        </trans-unit>
        <trans-unit id="96fe62d1784a07fd038cfab3bf1502f6c16a7790" translate="yes" xml:space="preserve">
          <source>Invocations of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; APIs in a cross-site manner, as discussed above.</source>
          <target state="translated">위에서 설명한대로 교차 사이트 방식으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;Fetch&lt;/a&gt; API를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="2422fcd418c687b013805ec7620a6399f1372c7e" translate="yes" xml:space="preserve">
          <source>Is a response header if the resource transmitted should be displayed inline (default behavior when the header is not present), or it should be handled like a download and the browser should present a 'Save As' window.</source>
          <target state="translated">전송 된 리소스가 인라인으로 표시되거나 (헤더가없는 경우 기본 동작) 응답 헤더이며 다운로드처럼 처리되어야하며 브라우저에 '다른 이름으로 저장'창이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="54e9ec692a56ffab91bf47f24b6f5f04f83ce33b" translate="yes" xml:space="preserve">
          <source>Is either the string &quot;GMT&quot; or is left out.</source>
          <target state="translated">문자열 &quot;GMT&quot;이거나 생략되었습니다.</target>
        </trans-unit>
        <trans-unit id="a64fa4c3a913c82e4add144ea7fbfd9cf3825b6d" translate="yes" xml:space="preserve">
          <source>Is either the string &quot;GMT&quot;, which makes time comparison occur in GMT timezone, or is left out. If left unspecified, times are taken to be in the local timezone.</source>
          <target state="translated">&quot;GMT&quot;문자열로, GMT 시간대에서 시간 비교가 발생하거나 생략됩니다. 지정하지 않으면 시간이 현지 시간대로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2fda418b4e57fb88a74dfec63a3a823a7276ce48" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the name of the HTML field in the form that the content of this subpart refers to. When dealing with multiple files in the same field (for example, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; attribute of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/a&gt;&lt;/code&gt; element), there can be several subparts with the same name.</source>
          <target state="translated">이 하위 부분의 내용이 참조하는 형식의 HTML 필드 이름이 포함 된 문자열이 뒤에옵니다. 동일한 필드에서 여러 파일을 처리 할 때 (예 : &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/a&gt;&lt;/code&gt; 요소 의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; 속성 ) 동일한 이름을 가진 여러 하위 파트가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ba85fc81b8929d8f78e20fd1bc753c0fb30e0fc" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the name of the HTML field in the form that the content of this subpart refers to. When dealing with multiple files in the same field (for example, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; attribute of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=file&amp;gt;&lt;/a&gt;&lt;/code&gt; element), there can be several subparts with the same name.</source>
          <target state="translated">이 서브 파트의 내용이 참조하는 형식으로 HTML 필드의 이름을 포함하는 문자열이 뒤에옵니다. 동일한 필드에서 여러 파일을 처리 할 때 (예 : &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&amp;lt;input type=file&amp;gt;&lt;/a&gt;&lt;/code&gt; 요소 의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-multiple&quot;&gt;multiple&lt;/a&gt;&lt;/code&gt; 속성 ) 동일한 이름을 가진 여러 개의 하위 파트가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e092b4d92d6c6e47005b961bfdf49f31576121c" translate="yes" xml:space="preserve">
          <source>Is followed by a string containing the original name of the file transmitted. The filename is always optional and must not be used blindly by the application: path information should be stripped, and conversion to the server file system rules should be done. This parameter provides mostly indicative information. When used in combination with &lt;code&gt;Content-Disposition: attachment&lt;/code&gt;, it is used as the default filename for an eventual &quot;Save As&quot; dialog presented to the user.</source>
          <target state="translated">전송 된 파일의 원래 이름이 포함 된 문자열이 뒤에옵니다. 파일 이름은 항상 선택 사항이며 응용 프로그램에서 맹목적으로 사용해서는 안됩니다. 경로 정보를 제거하고 서버 파일 시스템 규칙으로 변환해야합니다. 이 매개 변수는 주로 표시 정보를 제공합니다. &lt;code&gt;Content-Disposition: attachment&lt;/code&gt; 와 함께 사용하면 최종 &quot;다른 이름으로 저장&quot;대화 상자의 기본 파일 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad350b49b6105f7ba408d2cd47de12fe45080a69" translate="yes" xml:space="preserve">
          <source>Is one of the ordered month strings below.</source>
          <target state="translated">아래의 주문 월 문자열 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="77e28a9350d45487207b84bc262233bfb40e6bc5" translate="yes" xml:space="preserve">
          <source>Is the domain name to test the hostname against.</source>
          <target state="translated">호스트 이름을 테스트 할 도메인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5e530d4a48748eedf183a271fc2d6561b7e57883" translate="yes" xml:space="preserve">
          <source>Is the hostname from the URL.</source>
          <target state="translated">URL의 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2e041ae111b4fa679b2480031c90505ef7ed4674" translate="yes" xml:space="preserve">
          <source>Is the hour from 0 to 23. (0 is midnight, 23 is 11 pm.)</source>
          <target state="translated">0부터 23까지의 시간입니다. (0은 자정, 23은 오후 11시입니다.)</target>
        </trans-unit>
        <trans-unit id="76bc382859db96f13208fadcaadcd35c9c7d32d7" translate="yes" xml:space="preserve">
          <source>Is the ordered day of the month between 1 and 31 (as an integer).</source>
          <target state="translated">1에서 31 사이의 월 순서 (정수)입니다.</target>
        </trans-unit>
        <trans-unit id="7165ac45c85ea0d30878e33d1b544beb92ad0407" translate="yes" xml:space="preserve">
          <source>Is the ordered full year integer number. For example, 2016 (&lt;strong&gt;not&lt;/strong&gt; 16).</source>
          <target state="translated">정렬 된 전체 연도 정수입니다. 예를 들어 2016은 16이 &lt;strong&gt;아닙니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0331e5317c1a5353192cf6b448ec4dc07116aaba" translate="yes" xml:space="preserve">
          <source>Is true if the hostname matches &lt;em&gt;exactly&lt;/em&gt; the specified hostname, or if there is no domain name part in the hostname, but the unqualified hostname matches.</source>
          <target state="translated">호스트 이름이 일치하면 참 &lt;em&gt;&lt;/em&gt; 이 지정된 호스트&lt;em&gt; 정확히&lt;/em&gt; 하거나 호스트 이름에 도메인 이름 부분이 없지만 규정되지 않은 호스트 이름이 일치하는 입니다.</target>
        </trans-unit>
        <trans-unit id="ecffee78fc03e20a569b23ceac7747629660f84c" translate="yes" xml:space="preserve">
          <source>Is true if the hostname matches exactly the specified hostname, or if there is no domain name part in the hostname, but the unqualified hostname matches.</source>
          <target state="translated">호스트 이름이 지정된 호스트 이름과 정확히 일치하거나 호스트 이름에 도메인 이름 부분이 없지만 규정되지 않은 호스트 이름이 일치하면 true입니다.</target>
        </trans-unit>
        <trans-unit id="dc64e475d99a6f7197d18d5097b7b8434838014d" translate="yes" xml:space="preserve">
          <source>Isolates the browsing context exclusively to same-origin documents. Cross-origin documents are not loaded in the same browsing context.</source>
          <target state="translated">브라우징 컨텍스트를 동일 출처 문서로만 분리합니다. 교차 출처 문서는 동일한 브라우징 컨텍스트에서로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bea60d3e6673895b89b3e27ba8883ed44567185" translate="yes" xml:space="preserve">
          <source>It allows a server to populate data in a client cache, in advance of it being required, through a mechanism called the server push.</source>
          <target state="translated">서버 푸시라는 메커니즘을 통해 서버가 클라이언트 캐시에 필요한 데이터를 미리 데이터를 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f43fd22d2b5777ebb739889216138bbc5cbb86d9" translate="yes" xml:space="preserve">
          <source>It also needs to have a MIME type of its parsed value (ignoring parameters) of either &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; , &lt;code&gt;multipart/form-data&lt;/code&gt; 또는 &lt;code&gt;text/plain&lt;/code&gt; 중 하나의 구문 분석 된 값 (매개 변수 무시)의 MIME 유형이 있어야합니다. .</target>
        </trans-unit>
        <trans-unit id="f005d0f75fee252497145808a577cd8d55b04051" translate="yes" xml:space="preserve">
          <source>It assumed that all user agent strings that include the substring &quot;Chrome&quot; are Chrome. UA strings are notoriously misleading.</source>
          <target state="translated">하위 문자열 &quot;Chrome&quot;을 포함하는 모든 사용자 에이전트 문자열이 Chrome이라고 가정했습니다. UA 문자열은 오해의 소지가있는 것으로 악명이 높습니다.</target>
        </trans-unit>
        <trans-unit id="00298a3bb5b667d923ae54e34aa323fff850e2de" translate="yes" xml:space="preserve">
          <source>It assumed that the lookbehind feature would always be available if the browser was Chrome. The agent might be an older version of Chrome, from before support was added, or (because the feature was experimental at the time) it could be a later version of Chrome that removed it.</source>
          <target state="translated">브라우저가 Chrome이면 항상 lookbehind 기능을 사용할 수 있다고 가정했습니다. 에이전트는 지원이 추가되기 전의 Chrome 이전 버전이거나 (당시 기능이 실험적 이었기 때문에) 제거 된 Chrome의 최신 버전 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f46736fbac23773dd54664bce214c5dc4f10a2c6" translate="yes" xml:space="preserve">
          <source>It can be used when the total number of request header fields is too large, or when a single header field is at too large.</source>
          <target state="translated">요청 헤더 필드의 총 수가 너무 많거나 단일 헤더 필드가 너무 클 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1727a3eed7f9b9c35a928b776172744af8666f3" translate="yes" xml:space="preserve">
          <source>It compresses headers. As these are often similar among a set of requests, this removes duplication and overhead of data transmitted.</source>
          <target state="translated">헤더를 압축합니다. 이것들은 종종 일련의 요청들 사이에서 유사하기 때문에, 이것은 전송 된 데이터의 복제 및 오버 헤드를 제거한다.</target>
        </trans-unit>
        <trans-unit id="03150c53b496ba5d7d08bbe9124ae9e71723e36b" translate="yes" xml:space="preserve">
          <source>It indicates that a method could not be performed because the server cannot store the representation needed to successfully complete the request.</source>
          <target state="translated">서버가 요청을 성공적으로 완료하는 데 필요한 표현을 저장할 수 없기 때문에 메서드를 수행 할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bc98200fb5d715ddd3a57296b4af83524c9f7ff0" translate="yes" xml:space="preserve">
          <source>It indicates that the server terminated an operation because it encountered an infinite loop while processing a request with &quot;Depth: infinity&quot;. This status indicates that the entire operation failed.</source>
          <target state="translated">&quot;Depth : infinity&quot;로 요청을 처리하는 동안 무한 루프가 발생하여 서버가 작업을 종료했음을 나타냅니다. 이 상태는 전체 작업이 실패했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4b480764290e819516d7c049141dbc95445b3642" translate="yes" xml:space="preserve">
          <source>It is a binary protocol rather than text. It can no longer be read and created manually. Despite this hurdle, improved optimization techniques can now be implemented.</source>
          <target state="translated">텍스트가 아닌 이진 프로토콜입니다. 더 이상 수동으로 읽고 만들 수 없습니다. 이러한 장애물에도 불구하고, 이제 개선 된 최적화 기술을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bad2ad311f9d8d7e181ed23c4b923cbf915ec8c4" translate="yes" xml:space="preserve">
          <source>It is a multiplexed protocol. Parallel requests can be handled over the same connection, removing the order and blocking constraints of the HTTP/1.x protocol.</source>
          <target state="translated">다중화 된 프로토콜입니다. 병렬 요청은 동일한 연결을 통해 처리되어 HTTP / 1.x 프로토콜의 순서와 차단 제약 조건을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6445c1ff39b5450a5feef25fe2084062f1d4500" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the relationship between a request initiator's origin and its target's origin. It is a Structured Header whose value is a token with possible values &lt;code&gt;cross-site&lt;/code&gt;, &lt;code&gt;same-origin&lt;/code&gt;, &lt;code&gt;same-site&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">요청 개시 자의 오리진과 대상의 오리진 사이의 관계를 나타내는 요청 헤더입니다. 값이 &lt;code&gt;cross-site&lt;/code&gt; , &lt;code&gt;same-origin&lt;/code&gt; , &lt;code&gt;same-site&lt;/code&gt; 및 가능한 값이있는 토큰 인 구조화 된 헤더입니다. &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c11dc9b7ef22fb60dba4ef500da2f01db7a4466" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the request's destination to a server. It is a Structured Header whose value is a token with possible values &lt;code&gt;audio&lt;/code&gt;, &lt;code&gt;audioworklet&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, &lt;code&gt;embed&lt;/code&gt;, &lt;code&gt;empty&lt;/code&gt;, &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;manifest&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;paintworklet&lt;/code&gt;, &lt;code&gt;report&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt;, &lt;code&gt;serviceworker&lt;/code&gt;, &lt;code&gt;sharedworker&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, &lt;code&gt;track&lt;/code&gt;, &lt;code&gt;video&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt;, &lt;code&gt;xslt&lt;/code&gt;, and &lt;code&gt;nested-document&lt;/code&gt;.</source>
          <target state="translated">서버에 대한 요청의 대상을 나타내는 요청 헤더입니다. &lt;code&gt;audio&lt;/code&gt; , &lt;code&gt;audioworklet&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; , &lt;code&gt;embed&lt;/code&gt; , &lt;code&gt;empty&lt;/code&gt; , &lt;code&gt;font&lt;/code&gt; , &lt;code&gt;image&lt;/code&gt; , &lt;code&gt;manifest&lt;/code&gt; , &lt;code&gt;object&lt;/code&gt; , &lt;code&gt;paintworklet&lt;/code&gt; , &lt;code&gt;report&lt;/code&gt; , &lt;code&gt;script&lt;/code&gt; , &lt;code&gt;serviceworker&lt;/code&gt; , &lt;code&gt;sharedworker&lt;/code&gt; , &lt;code&gt;style&lt;/code&gt; , &lt;code&gt;track&lt;/code&gt; , &lt;code&gt;video&lt;/code&gt; , &lt;code&gt;worker&lt;/code&gt; , &lt;code&gt;xslt&lt;/code&gt; 값이있는 토큰 인 구조화 된 헤더입니다. 및 &lt;code&gt;nested-document&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d36eba61499c051f255d5b1dd6e9cfd50aa960c2" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates the request's mode to a server. It is a Structured Header whose value is a token with possible values &lt;code&gt;cors&lt;/code&gt;, &lt;code&gt;navigate&lt;/code&gt;, &lt;code&gt;nested-navigate&lt;/code&gt;, &lt;code&gt;no-cors&lt;/code&gt;, &lt;code&gt;same-origin&lt;/code&gt;, and &lt;code&gt;websocket&lt;/code&gt;.</source>
          <target state="translated">서버에 대한 요청의 모드를 나타내는 요청 헤더입니다. 가능한 값이 &lt;code&gt;cors&lt;/code&gt; , &lt;code&gt;navigate&lt;/code&gt; , &lt;code&gt;nested-navigate&lt;/code&gt; , &lt;code&gt;no-cors&lt;/code&gt; , &lt;code&gt;same-origin&lt;/code&gt; 및 &lt;code&gt;websocket&lt;/code&gt; 인 토큰 인 구조화 된 헤더입니다 .</target>
        </trans-unit>
        <trans-unit id="dadb148c476fc24dc7e1218baf0d8439e45ce0fd" translate="yes" xml:space="preserve">
          <source>It is a request header that indicates whether or not a navigation request was triggered by user activation. It is a Structured Header whose value is a boolean so possible values are &lt;code&gt;?0&lt;/code&gt; for false and &lt;code&gt;?1&lt;/code&gt; for true.</source>
          <target state="translated">사용자 활성화에 의해 탐색 요청이 트리거되었는지 여부를 나타내는 요청 헤더입니다. 값이 부울 인 구조화 된 헤더이므로 가능한 값은 거짓의 경우 &lt;code&gt;?0&lt;/code&gt; , 참의 경우 &lt;code&gt;?1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a7b12c882112937be30ce15f7fdc909be28edb8f" translate="yes" xml:space="preserve">
          <source>It is a validator, a unique string identifying the version of the resource. Conditional requests using &lt;a href=&quot;headers/if-match&quot;&gt;&lt;code&gt;If-Match&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-none-match&quot;&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/a&gt; use this value to change the behavior of the request.</source>
          <target state="translated">자원의 버전을 식별하는 고유 한 문자열 인 유효성 검증기입니다. &lt;a href=&quot;headers/if-match&quot;&gt; &lt;code&gt;If-Match&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;headers/if-none-match&quot;&gt; &lt;code&gt;If-None-Match&lt;/code&gt; 를&lt;/a&gt; 사용하는 조건부 요청 은이 값을 사용하여 요청의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5cdf965cca7cbedbb40498332c66597692a803a9" translate="yes" xml:space="preserve">
          <source>It is a validator, the last modification date of the resource, used to compare several versions of the same resource. It is less accurate than &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt;, but easier to calculate in some environments. Conditional requests using &lt;a href=&quot;headers/if-modified-since&quot;&gt;&lt;code&gt;If-Modified-Since&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/if-unmodified-since&quot;&gt;&lt;code&gt;If-Unmodified-Since&lt;/code&gt;&lt;/a&gt; use this value to change the behavior of the request.</source>
          <target state="translated">자원의 마지막 수정 날짜 인 유효성 검증기로서 동일한 자원의 여러 버전을 비교하는 데 사용됩니다. &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; 보다 정확도는 떨어지지 만 일부 환경에서는 계산하기가 더 쉽습니다. &lt;a href=&quot;headers/if-modified-since&quot;&gt; &lt;code&gt;If-Modified-Since&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;headers/if-unmodified-since&quot;&gt; &lt;code&gt;If-Unmodified-Since&lt;/code&gt; 를&lt;/a&gt; 사용하는 조건부 요청 은이 값을 사용하여 요청의 동작을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="9785aaf5047339a17ab49de4a65661f34c75c502" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of a protocol specification to mandate
   compliance with previous versions. HTTP/1.1 was deliberately
   designed, however, to make supporting previous versions easy. It is
   worth noting that, at the time of composing this specification
   (1996), we would expect commercial HTTP/1.1 servers to:

      - recognize the format of the Request-Line for HTTP/0.9, 1.0, and
        1.1 requests; 

      - understand any valid request in the format of HTTP/0.9, 1.0, or
        1.1;

      - respond appropriately with a message in the same major version
        used by the client.

   And we would expect HTTP/1.1 clients to:

      - recognize the format of the Status-Line for HTTP/1.0 and 1.1
        responses;

      - understand any valid response in the format of HTTP/0.9, 1.0, or
        1.1.

   For most implementations of HTTP/1.0, each connection is established
   by the client prior to the request and closed by the server after
   sending the response. Some implementations implement the Keep-Alive
   version of persistent connections described in section 19.7.1 of &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;].</source>
          <target state="translated">이전 버전의 준수를 요구하는 것은 프로토콜 사양의 범위를 벗어납니다. 그러나 HTTP / 1.1은 의도적으로 이전 버전을 쉽게 지원할 수 있도록 설계되었습니다. 이 규격 (1996)을 작성할 당시에 상용 HTTP / 1.1 서버는 다음을 기대할 것입니다.-HTTP / 0.9, 1.0 및 1.1 요청에 대한 요청 라인의 형식을 인식합니다. -HTTP / 0.9, 1.0 또는 1.1 형식의 유효한 요청을 이해합니다. -클라이언트가 사용하는 것과 동일한 주 버전의 메시지로 적절하게 응답합니다. 그리고 우리는 HTTP / 1.1 클라이언트가 :-HTTP / 1.0 및 1.1 응답을위한 Status-Line의 형식을 인식합니다; -HTTP / 0.9, 1.0 또는 1.1 형식의 유효한 응답을 이해하십시오.대부분의 HTTP / 1.0 구현에서 각 연결은 요청 전에 클라이언트에 의해 설정되고 응답을 보낸 후 서버에 의해 닫힙니다. 일부 구현에서는 섹션 19.7.1에 설명 된 영구 연결의 Keep-Alive 버전을 구현합니다.&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ].</target>
        </trans-unit>
        <trans-unit id="8259fef778fc701ed117ff363698b323da319cfd" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this specification to describe how
   connections are established via various transport- or session-layer
   protocols.  Each connection applies to only one transport link.</source>
          <target state="translated">다양한 전송 또는 세션 계층 프로토콜을 통해 연결이 설정되는 방법을 설명하는 것은이 사양의 범위를 벗어납니다. 각 연결은 하나의 전송 링크에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f2d087e11ffd49739b77d44827cb4d007b8288ad" translate="yes" xml:space="preserve">
          <source>It is especially important that proxies correctly implement the
   properties of the Connection header field as specified in &lt;a href=&quot;#section-14.10&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.10&quot;&gt;14.10&lt;/a&gt;.

   The proxy server MUST signal persistent connections separately with
   its clients and the origin servers (or other proxy servers) that it
   connects to. Each persistent connection applies to only one transport
   link.

   A proxy server MUST NOT establish a HTTP/1.1 persistent connection
   with an HTTP/1.0 client (but see &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; [&lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt;] for information and
   discussion of the problems with the Keep-Alive header implemented by
   many HTTP/1.0 clients).</source>
          <target state="translated">프록시가 &lt;a href=&quot;#section-14.10&quot;&gt;14.10 &lt;/a&gt;&lt;a href=&quot;#section-14.10&quot;&gt;섹션에&lt;/a&gt; 지정된 연결 헤더 필드의 속성을 올바르게 구현하는 것이 특히 중요합니다 . 프록시 서버는 반드시 클라이언트와 연결되는 오리진 서버 (또는 다른 프록시 서버)와 지속적으로 연결을 신호해야합니다. 각 영구 연결은 하나의 전송 링크에만 적용됩니다. 프록시 서버는 HTTP / 1.0 클라이언트와 HTTP / 1.1 영구 연결을 설정해서는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;안됩니다&lt;/a&gt; (그러나 많은 HTTP / 1.0 클라이언트가 구현 한 Keep-Alive 헤더의 문제점에 대한 정보 및 논의는 RFC 2068 [ &lt;a href=&quot;#ref-33&quot;&gt;33&lt;/a&gt; ] 참조 ).</target>
        </trans-unit>
        <trans-unit id="b498c25fadce9f183d82dd50870c277f51907a88" translate="yes" xml:space="preserve">
          <source>It is however still necessary for Firefox to load resources in web content under certain circumstances. For example, if you open the view source page (View Page Source or View Selection Source), you will find it requires &lt;code&gt;viewsource.css&lt;/code&gt; through a &lt;code&gt;resource:&lt;/code&gt; URI. Resources that have to be exposed to web content have been moved to a new location named &lt;code&gt;resource://content-accessible/&lt;/code&gt;, which is isolated and only contains non-sensitive resources. In this way we can keep essential resources exposed and have most threats eliminated.</source>
          <target state="translated">그러나 특정 상황에서 Firefox가 여전히 웹 컨텐츠에 자원을로드해야합니다. 예를 들어, 뷰 소스 페이지 (뷰 페이지 소스 또는 뷰 선택 소스)를 열면 &lt;code&gt;resource:&lt;/code&gt; URI를 통해 &lt;code&gt;viewsource.css&lt;/code&gt; 가 필요하다는 것을 알 수 있습니다 . 웹 컨텐츠에 노출되어야하는 &lt;code&gt;resource://content-accessible/&lt;/code&gt; 이라는 새 위치로 이동되었습니다.이 위치 는 격리되며 민감하지 않은 자원 만 포함합니다. 이러한 방식으로 필수 자원을 노출시키고 대부분의 위협을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7d678015e6dbddd6cd806a3a207ba38d15b32ae" translate="yes" xml:space="preserve">
          <source>It is important to avoid redirection loops as they completely break the user experience.</source>
          <target state="translated">리디렉션 루프는 사용자 환경을 완전히 손상시킬 수 있으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="9e2cb912ee31c4907225a745ba6545337d221db7" translate="yes" xml:space="preserve">
          <source>It is important to avoid redirection loops, as they completely break the user experience.</source>
          <target state="translated">리디렉션 루프는 사용자 경험을 완전히 깨뜨 리므로 피하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="7abd5b5646d7b956a07aef0207e3f862399863c2" translate="yes" xml:space="preserve">
          <source>It is possible to add a special HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; element to a page to indicate what the canonical address of a page is. This has no impact on the human reader of the page, but tells search engine crawlers where the page actually lives. This way, search engines don't index the same page several times, potentially leading to it being considered as duplicate content or spam, and even removing or lowering your page from the search engine result pages.</source>
          <target state="translated">페이지의 표준 주소가 무엇인지 나타 내기 위해 페이지에 특수 HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 를 추가 할 수 있습니다 . 이는 사람이 페이지를 읽는 사람에게는 영향을 미치지 않지만 검색 엔진 크롤러에게 페이지의 실제 위치를 알려줍니다. 이러한 방식으로 검색 엔진은 동일한 페이지를 여러 번 색인 생성하지 않으므로 중복 된 콘텐츠 나 스팸으로 간주 될 수 있으며 검색 엔진 결과 페이지에서 페이지를 제거하거나 줄일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a360170218e1e7d2c6f7cc097d32c2f58946eee" translate="yes" xml:space="preserve">
          <source>It is possible to deploy &lt;code&gt;strict-dynamic&lt;/code&gt; in a backwards compatible way, without requiring user-agent sniffing.</source>
          <target state="translated">사용자 에이전트 스니핑을 요구하지 않고 이전 버전과 호환되는 방식으로 &lt;code&gt;strict-dynamic&lt;/code&gt; 배포가 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="d542c890e06636447b6f6b9d8af60c44ef672877" translate="yes" xml:space="preserve">
          <source>It is quite difficult to have a unique identifier for strong validation with &lt;a href=&quot;headers/last-modified&quot;&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/a&gt;. Often this is done using an &lt;a href=&quot;headers/etag&quot;&gt;&lt;code&gt;ETag&lt;/code&gt;&lt;/a&gt; with the MD5 hash of the resource (or a derivative).</source>
          <target state="translated">&lt;a href=&quot;headers/last-modified&quot;&gt; &lt;code&gt;Last-Modified&lt;/code&gt; 로&lt;/a&gt; 강력한 유효성 검사를위한 고유 식별자를 갖는 것은 매우 어렵습니다 . 종종 이것은 리소스의 MD5 해시 (또는 파생물)와 함께 &lt;a href=&quot;headers/etag&quot;&gt; &lt;code&gt;ETag&lt;/code&gt; &lt;/a&gt; 를 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="67317fd8b8bf14b0a6bd9419d261f53ed7a8e4f3" translate="yes" xml:space="preserve">
          <source>It takes three possible values: &lt;code&gt;Strict&lt;/code&gt;, &lt;code&gt;Lax&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;. With &lt;code&gt;Strict&lt;/code&gt;, the cookie is sent only to the same site as the one that originated it; &lt;code&gt;Lax&lt;/code&gt; is similar, with an exception for when the user navigates to a URL from an external site, such as by following a link; &lt;code&gt;None&lt;/code&gt; has no restrictions on cross-site requests.</source>
          <target state="translated">&lt;code&gt;Strict&lt;/code&gt; , &lt;code&gt;Lax&lt;/code&gt; 및 &lt;code&gt;None&lt;/code&gt; 의 세 가지 가능한 값을 사용합니다 . 함께 &lt;code&gt;Strict&lt;/code&gt; 쿠키은 그것을 유래 된 것과 동일한 사이트로 전송됩니다; &lt;code&gt;Lax&lt;/code&gt; 는 사용자가 링크를 따라가는 것과 같이 외부 사이트에서 URL로 이동할 때를 제외하고는 비슷합니다. &lt;code&gt;None&lt;/code&gt; 은 교차 사이트 요청에 대한 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="98ff32d0856e5c15bbca04673b6c6f97714c4530" translate="yes" xml:space="preserve">
          <source>It's difficult to build a website that uses all the latest best practices and provides great performance and user experiences. As the website evolves, it can become even harder to maintain the user experience over time. You can use feature policies to specify the desired best practices, and rely on the browser to enforce the policies to prevent regressions.</source>
          <target state="translated">모든 최신 모범 사례를 사용하고 뛰어난 성능과 사용자 경험을 제공하는 웹 사이트를 구축하는 것은 어렵습니다. 웹 사이트가 발전함에 따라 시간이 지남에 따라 사용자 경험을 유지하기가 더욱 어려워 질 수 있습니다. 기능 정책을 사용하여 원하는 모범 사례를 지정하고 브라우저를 사용하여 정책을 시행하여 회귀를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efa57fd9b104487236e3d21ead681f7448b30db9" translate="yes" xml:space="preserve">
          <source>It's easy to find the correspondences by looking at the &lt;a href=&quot;https://hg.mozilla.org/releases&quot;&gt;Mercurial repository names&lt;/a&gt;: repositories starting by &lt;code&gt;mozilla-b2g&lt;/code&gt; are the release repositories for Firefox OS, and have both Firefox OS and Gecko versions in their names.</source>
          <target state="translated">&lt;a href=&quot;https://hg.mozilla.org/releases&quot;&gt;Mercurial 리포지토리 이름&lt;/a&gt; 을 보면 해당 내용을 쉽게 찾을 수 있습니다 . &lt;code&gt;mozilla-b2g&lt;/code&gt; 로 시작하는 리포지토리는 Firefox OS의 릴리스 리포지토리이며 이름에 Firefox OS 및 Gecko 버전이 모두 있습니다.</target>
        </trans-unit>
        <trans-unit id="5250b829db5c42c7a082fb33c46a6aed6b45b478" translate="yes" xml:space="preserve">
          <source>It's important point to note that connection management in HTTP applies to the connection between two consecutive nodes, which is &lt;a href=&quot;headers#hbh&quot;&gt;hop-by-hop&lt;/a&gt; and not &lt;a href=&quot;headers#e2e&quot;&gt;end-to-end&lt;/a&gt;. The model used in connections between a client and its first proxy may differ from the model between a proxy and the destination server (or any intermediate proxies). The HTTP headers involved in defining the connection model, like &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt;, are &lt;a href=&quot;headers#hbh&quot;&gt;hop-by-hop&lt;/a&gt; headers with their values able to be changed by intermediary nodes.</source>
          <target state="translated">그것은 HTTP의 연결 관리는 두 개의 연속적인 노드 사이의 연결에 적용하는 것이 중요 포인트입니다 &lt;a href=&quot;headers#hbh&quot;&gt;홉 - 바이 - 홉&lt;/a&gt; 아니라 &lt;a href=&quot;headers#e2e&quot;&gt;엔드 - 투 - 엔드&lt;/a&gt; . 클라이언트와 첫 번째 프록시 간의 연결에 사용되는 모델은 프록시와 대상 서버 (또는 중간 프록시) 간의 모델과 다를 수 있습니다. &lt;a href=&quot;headers/connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;headers/keep-alive&quot;&gt; &lt;code&gt;Keep-Alive&lt;/code&gt; &lt;/a&gt; 와 같은 연결 모델 정의와 관련된 HTTP 헤더 는 중간 노드에서 값을 변경할 수있는 &lt;a href=&quot;headers#hbh&quot;&gt;홉별&lt;/a&gt; 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="739ff299232862f99e9340517c687340775d8925" translate="yes" xml:space="preserve">
          <source>It's standard procedure to start a connection using HTTP/1.1, due to its broad support, then request an upgrade to HTTP/2. This way, you have a functioning connection still even if HTTP/2 isn't supported by the server. However, you can only upgrade to an insecure (cleartext) HTTP/2 connection. This is done using the target protocol name &lt;code&gt;h2c&lt;/code&gt;, which stands for &quot;HTTP/2 Cleartext&quot;. This also &lt;em&gt;requires&lt;/em&gt; the specification of the &lt;code&gt;HTTP2-Settings&lt;/code&gt; header field.</source>
          <target state="translated">광범위한 지원으로 인해 HTTP / 1.1을 사용하여 연결을 시작한 다음 HTTP / 2 로의 업그레이드를 요청하는 표준 절차입니다. 이렇게하면 서버에서 HTTP / 2를 지원하지 않더라도 연결이 작동합니다. 그러나 안전하지 않은 (일반 텍스트) HTTP / 2 연결로만 업그레이드 할 수 있습니다. 이는 &quot;HTTP / 2 &lt;code&gt;h2c&lt;/code&gt; &quot;를 나타내는 대상 프로토콜 이름 h2c를 사용하여 수행됩니다 . 또한 &lt;code&gt;HTTP2-Settings&lt;/code&gt; 헤더 필드 의 스펙 이 &lt;em&gt;필요&lt;/em&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="8bea6d61f9c2501d81011d81f34e205f8686dfa5" translate="yes" xml:space="preserve">
          <source>It's worth re-iterating: it's very rarely a good idea to use user agent sniffing. You can almost always find a better, more broadly compatible way to solve your problem!</source>
          <target state="translated">다시 언급 할 가치가 있습니다. 사용자 에이전트 스니핑을 사용하는 것은 매우 드물다. 거의 항상 문제를 해결할 수있는 더 우수하고 광범위하게 호환되는 방법을 찾을 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="a45885aac538290762a4f7f3317abf411bb16059" translate="yes" xml:space="preserve">
          <source>JPEG</source>
          <target state="translated">JPEG</target>
        </trans-unit>
        <trans-unit id="1eed6d58a74c7c8d582fdf2be8d22bcb2c8939ca" translate="yes" xml:space="preserve">
          <source>JPEG images</source>
          <target state="translated">JPEG 이미지</target>
        </trans-unit>
        <trans-unit id="5766bfd5841dee1b6f2aaf89bbb921f60e7d1b6f" translate="yes" xml:space="preserve">
          <source>JSON format</source>
          <target state="translated">JSON 형식</target>
        </trans-unit>
        <trans-unit id="a66f05ea5cca9de68a33b0638207bfbcd5641141" translate="yes" xml:space="preserve">
          <source>JSON-LD format</source>
          <target state="translated">JSON-LD 형식</target>
        </trans-unit>
        <trans-unit id="eb7b5a55874bccbd5415aa333ebe2f4d5bc10f49" translate="yes" xml:space="preserve">
          <source>Java Archive (JAR)</source>
          <target state="translated">자바 아카이브 (JAR)</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="0bd88372ee65c120d42e02af79e6d6a3eb158cea" translate="yes" xml:space="preserve">
          <source>JavaScript (&lt;a href=&quot;https://www.iana.org/assignments/media-types/application/javascript&quot;&gt;&lt;em&gt;&lt;abbr&gt;IANA&lt;/abbr&gt; Specification&lt;/em&gt;&lt;/a&gt;) (&lt;a href=&quot;https://tools.ietf.org/html/rfc4329#section-8.2&quot;&gt;RFC 4329 Section 8.2&lt;/a&gt;)</source>
          <target state="translated">JavaScript ( &lt;a href=&quot;https://www.iana.org/assignments/media-types/application/javascript&quot;&gt;&lt;em&gt;&lt;abbr&gt;IANA&lt;/abbr&gt; 사양&lt;/em&gt;&lt;/a&gt; ) ( &lt;a href=&quot;https://tools.ietf.org/html/rfc4329#section-8.2&quot;&gt;RFC 4329 섹션 8.2&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="14198645a38762965b009588906bec6466424e7f" translate="yes" xml:space="preserve">
          <source>JavaScript access using &lt;code&gt;Document.cookie&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Document.cookie&lt;/code&gt; 를 사용한 JavaScript 액세스</target>
        </trans-unit>
        <trans-unit id="f2e6e6231b726f3003de6b6cd95b2a1228b3c146" translate="yes" xml:space="preserve">
          <source>JavaScript access using Document.cookie</source>
          <target state="translated">Document.cookie를 사용한 JavaScript 액세스</target>
        </trans-unit>
        <trans-unit id="02726ffcb85ce089b78555f5977ff60b7b1e1236" translate="yes" xml:space="preserve">
          <source>JavaScript files</source>
          <target state="translated">자바 스크립트 파일</target>
        </trans-unit>
        <trans-unit id="0394a047be98486e114cae8247a6233e345b8672" translate="yes" xml:space="preserve">
          <source>JavaScript module</source>
          <target state="translated">자바 스크립트 모듈</target>
        </trans-unit>
        <trans-unit id="3be64216bdf0b966d93ddd891c18c487fb2b9ae8" translate="yes" xml:space="preserve">
          <source>JavaScript redirections</source>
          <target state="translated">자바 스크립트 리디렉션</target>
        </trans-unit>
        <trans-unit id="9495512a0ffe6408bf56b96c0f685997352e9772" translate="yes" xml:space="preserve">
          <source>JavaScript redirections via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM을&lt;/a&gt; 통한 자바 스크립트 리디렉션</target>
        </trans-unit>
        <trans-unit id="8a908fed06c72f5e490a9950a8717a85839ac02f" translate="yes" xml:space="preserve">
          <source>JavaScript redirects are used as the last resort, and only if JavaScript is enabled on the client side.</source>
          <target state="translated">JavaScript 리디렉션은 최후의 수단으로 사용되며 클라이언트 측에서 JavaScript가 활성화 된 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="047107c9d905d625d42fe9a86dcfdf5bbd7aed84" translate="yes" xml:space="preserve">
          <source>JavaScript redirects execute last, and only if JavaScript is enabled.</source>
          <target state="translated">JavaScript 리디렉션은 JavaScript가 활성화 된 경우에만 마지막으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8a51f0d37d8a868b09fd7045118623248a30aff4" translate="yes" xml:space="preserve">
          <source>JavaScript types</source>
          <target state="translated">자바 스크립트 유형</target>
        </trans-unit>
        <trans-unit id="25e0c3834572e2b5f374c1a40ffbd07f94e13112" translate="yes" xml:space="preserve">
          <source>Joint Photographic Expert Group image</source>
          <target state="translated">Joint Photographic Expert Group image</target>
        </trans-unit>
        <trans-unit id="b2bea8b7008e2db2d0b0548f31cebaf54a8e8d9f" translate="yes" xml:space="preserve">
          <source>Julian Reschke
   &amp;lt;green/&amp;gt;bytes GmbH
   Hafenweg 16, 48155 Muenster, Germany
   EMail: julian.reschke@greenbytes.de


   Elias Sinderson
   University of California, Santa Cruz
   1156 High Street, Santa Cruz, CA 95064
   EMail: elias@cse.ucsc.edu


   Jim Whitehead
   University of California, Santa Cruz
   1156 High Street, Santa Cruz, CA 95064
   EMail: ejw@soe.ucsc.edu</source>
          <target state="translated">Julian Reschke &amp;lt;green /&amp;gt; bytes GmbH Hafenweg 16, 48155 Muenster, Germany 이메일 : julian.reschke@greenbytes.de Elias Sinderson University of California, Santa Cruz 1156 High Street, Santa Cruz, CA 95064 이메일 : elias@cse.ucsc.edu Jim Whitehead University of California, Santa Cruz 1156 High Street, 산타 크루즈, CA 95064 이메일 : ejw@soe.ucsc.edu</target>
        </trans-unit>
        <trans-unit id="9c89e4dc68bedeca878534384b26901da1f8442a" translate="yes" xml:space="preserve">
          <source>Just as in HTTP/1, a header field in HTTP/2 is a name with one or
   more associated values.  Header fields are used within HTTP request
   and response messages as well as in server push operations (see
   &lt;a href=&quot;#section-8.2&quot;&gt;Section 8.2&lt;/a&gt;).

   Header lists are collections of zero or more header fields.  When
   transmitted over a connection, a header list is serialized into a
   header block using HTTP header compression [&lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt;].  The
   serialized header block is then divided into one or more octet
   sequences, called header block fragments, and transmitted within the
   payload of HEADERS (&lt;a href=&quot;#section-6.2&quot;&gt;Section 6.2&lt;/a&gt;), PUSH_PROMISE (&lt;a href=&quot;#section-6.6&quot;&gt;Section 6.6&lt;/a&gt;), or
   CONTINUATION (&lt;a href=&quot;#section-6.10&quot;&gt;Section 6.10&lt;/a&gt;) frames.

   The Cookie header field [&lt;a href=&quot;#ref-COOKIE&quot;&gt;COOKIE&lt;/a&gt;] is treated specially by the HTTP
   mapping (see &lt;a href=&quot;#section-8.1.2.5&quot;&gt;Section 8.1.2.5&lt;/a&gt;).

   A receiving endpoint reassembles the header block by concatenating
   its fragments and then decompresses the block to reconstruct the
   header list.

   A complete header block consists of either:

   o  a single HEADERS or PUSH_PROMISE frame, with the END_HEADERS flag
      set, or

   o  a HEADERS or PUSH_PROMISE frame with the END_HEADERS flag cleared
      and one or more CONTINUATION frames, where the last CONTINUATION
      frame has the END_HEADERS flag set.

   Header compression is stateful.  One compression context and one
   decompression context are used for the entire connection.  A decoding
   error in a header block MUST be treated as a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type COMPRESSION_ERROR.

   Each header block is processed as a discrete unit.  Header blocks
   MUST be transmitted as a contiguous sequence of frames, with no
   interleaved frames of any other type or from any other stream.  The
   last frame in a sequence of HEADERS or CONTINUATION frames has the 

   END_HEADERS flag set.  The last frame in a sequence of PUSH_PROMISE
   or CONTINUATION frames has the END_HEADERS flag set.  This allows a
   header block to be logically equivalent to a single frame.

   Header block fragments can only be sent as the payload of HEADERS,
   PUSH_PROMISE, or CONTINUATION frames because these frames carry data
   that can modify the compression context maintained by a receiver.  An
   endpoint receiving HEADERS, PUSH_PROMISE, or CONTINUATION frames
   needs to reassemble header blocks and perform decompression even if
   the frames are to be discarded.  A receiver MUST terminate the
   connection with a connection error (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type
   COMPRESSION_ERROR if it does not decompress a header block.</source>
          <target state="translated">HTTP / 1에서와 마찬가지로 HTTP / 2의 헤더 필드는 하나 이상의 관련 값이있는 이름입니다. 헤더 필드는 HTTP 요청 및 응답 메시지와 서버 푸시 작업 내에서 사용됩니다 ( &lt;a href=&quot;#section-8.2&quot;&gt;섹션 8.2&lt;/a&gt; 참조 ). 헤더 목록은 0 개 이상의 헤더 필드 모음입니다. 연결을 통해 전송 될 때 헤더 목록은 HTTP 헤더 압축 [ &lt;a href=&quot;#ref-COMPRESSION&quot;&gt;COMPRESSION&lt;/a&gt; ]을 사용하여 헤더 블록으로 직렬화됩니다 . 직렬화 된 헤더 블록은 헤더 블록 조각이라고하는 하나 이상의 옥텟 시퀀스로 분할되고 HEADERS ( &lt;a href=&quot;#section-6.2&quot;&gt;섹션 6.2&lt;/a&gt; ), PUSH_PROMISE ( &lt;a href=&quot;#section-6.6&quot;&gt;섹션 6.6&lt;/a&gt; ) 또는 CONTINUATION ( &lt;a href=&quot;#section-6.10&quot;&gt;섹션 6.10&lt;/a&gt; ) 프레임 의 페이로드 내에서 전송됩니다 . 쿠키 헤더 필드 [ &lt;a href=&quot;#ref-COOKIE&quot;&gt;COOKIE&lt;/a&gt;]는 HTTP 매핑에 의해 특별히 처리됩니다 ( &lt;a href=&quot;#section-8.1.2.5&quot;&gt;섹션 8.1.2.5&lt;/a&gt; 참조 ). 수신 엔드 포인트는 조각을 연결하여 헤더 블록을 재 조립 한 다음 블록을 압축 해제하여 헤더 목록을 재구성합니다. 완전한 헤더 블록은 END_HEADERS 플래그가 설정된 단일 HEADERS 또는 PUSH_PROMISE 프레임 또는 END_HEADERS 플래그가 지워진 oa HEADERS 또는 PUSH_PROMISE 프레임과 마지막 CONTINUATION 프레임에 END_HEADERS 플래그가 설정된 하나 이상의 CONTINUATION 프레임으로 구성됩니다. 헤더 압축은 상태 저장입니다. 하나의 압축 컨텍스트와 하나의 압축 해제 컨텍스트가 전체 연결에 사용됩니다. 헤더 블록의 디코딩 오류는 연결 오류로 처리해야합니다 ( &lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt;) COMPRESSION_ERROR 유형. 각 헤더 블록은 개별 단위로 처리됩니다. 헤더 블록은 다른 유형이나 다른 스트림에서 인터리브 된 프레임없이 연속적인 프레임 시퀀스로 전송되어야합니다. HEADERS 또는 CONTINUATION 프레임 시퀀스의 마지막 프레임에는 END_HEADERS 플래그가 설정되어 있습니다. PUSH_PROMISE 또는 CONTINUATION 프레임 시퀀스의 마지막 프레임에는 END_HEADERS 플래그가 설정되어 있습니다. 이를 통해 헤더 블록이 논리적으로 단일 프레임과 동일 할 수 있습니다. 헤더 블록 조각은 HEADERS, PUSH_PROMISE 또는 CONTINUATION 프레임의 페이로드로만 보낼 수 있습니다. 이러한 프레임은 수신자가 유지 관리하는 압축 컨텍스트를 수정할 수있는 데이터를 전달하기 때문입니다. HEADERS, PUSH_PROMISE 또는 CONTINUATION 프레임을 수신하는 엔드 포인트는 프레임이 폐기 되더라도 헤더 블록을 재 조립하고 압축 해제를 수행해야합니다.수신자는 연결 오류 (&lt;a href=&quot;#section-5.4.1&quot;&gt;&lt;/a&gt;헤더 블록의 압축을 풀지 않는 경우 COMPRESSION_ERROR 유형의 섹션 5.4.1 ).</target>
        </trans-unit>
        <trans-unit id="7e8b1d0fc088bb90dbbe8a2dbd8d00105aebfdf3" translate="yes" xml:space="preserve">
          <source>Keep-Alive</source>
          <target state="translated">Keep-Alive</target>
        </trans-unit>
        <trans-unit id="6146b34bc65ee03e10bb0d16dc15637d8d926be2" translate="yes" xml:space="preserve">
          <source>Keep-Alive Header (IETF Internet Draft)</source>
          <target state="translated">Keep-Alive 헤더 (IETF 인터넷 초안)</target>
        </trans-unit>
        <trans-unit id="518fe23acc32b680b6c7064b18768ce9a4edc6c7" translate="yes" xml:space="preserve">
          <source>Keeping links alive</source>
          <target state="translated">링크를 유지</target>
        </trans-unit>
        <trans-unit id="0b80404ac1f938e0ad58d9a575e0e0aa00a66dd0" translate="yes" xml:space="preserve">
          <source>Kind of document</source>
          <target state="translated">문서의 종류</target>
        </trans-unit>
        <trans-unit id="471e7dd9c2f2d4bd1722ed06bd63bae32d792b07" translate="yes" xml:space="preserve">
          <source>Klar Version (Rendering Engine)</source>
          <target state="translated">클라 버전 (렌더링 엔진)</target>
        </trans-unit>
        <trans-unit id="53a344b79c8c2c1639455bd4ca9631b250cbb736" translate="yes" xml:space="preserve">
          <source>Klar for Android</source>
          <target state="translated">Android 용 Klar</target>
        </trans-unit>
        <trans-unit id="1cfc0d8b05e463c4269f42611f344e37e54aaf18" translate="yes" xml:space="preserve">
          <source>Konqueror 4.6</source>
          <target state="translated">Konqueror 4.6</target>
        </trans-unit>
        <trans-unit id="1971c93380e2bf924d413b56239bd916d71c69a0" translate="yes" xml:space="preserve">
          <source>Lack of error handling</source>
          <target state="translated">오류 처리 부족</target>
        </trans-unit>
        <trans-unit id="3df68e70fa194f3c844cf64d5417d8356ae60b51" translate="yes" xml:space="preserve">
          <source>Large message body</source>
          <target state="translated">큰 메시지 본문</target>
        </trans-unit>
        <trans-unit id="aba1a47c51ae2e1013a1da8b769f84aea5b8154d" translate="yes" xml:space="preserve">
          <source>Large-Allocation</source>
          <target state="translated">Large-Allocation</target>
        </trans-unit>
        <trans-unit id="4312b9cdc22a0d8cf25ab213c9d034cee9ce16ee" translate="yes" xml:space="preserve">
          <source>Last-Modified</source>
          <target state="translated">Last-Modified</target>
        </trans-unit>
        <trans-unit id="5ad73a8c3ddef48b03c719ec7b68bf049b1d82e3" translate="yes" xml:space="preserve">
          <source>Last-Modified (RFC 2616)</source>
          <target state="translated">최종 수정 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="99e5db4754c5b7e5f7aa2bb6b93799f72088bd2e" translate="yes" xml:space="preserve">
          <source>Last-Modified (RFC 7232)</source>
          <target state="translated">최종 수정 (RFC 7232)</target>
        </trans-unit>
        <trans-unit id="47055864cbe7192dae27bdfff260957e5075db67" translate="yes" xml:space="preserve">
          <source>Lastly, the above code snippets bring about a critical issue with cross-browser coding that must always be taken into account. Don't unintentionally use the API you are testing for in unsupported browsers. This may sound obvious and simple, but sometimes it is not. For example, in the above code snippets, using lookbehind in short-regexp notation (e.g. /reg/igm) will cause a parser error in unsupported browsers. Thus, in the above example, you would use &lt;em&gt;new RegExp(&quot;(?&amp;lt;=look_behind_stuff)&quot;);&lt;/em&gt; instead of &lt;em&gt;/(?&amp;lt;=look_behind_stuff)/&lt;/em&gt;, even in the lookbehind supported section of your code.</source>
          <target state="translated">마지막으로, 위의 코드 스 니펫은 항상 고려해야하는 크로스 브라우저 코딩과 관련된 중요한 문제를 야기합니다. 지원되지 않는 브라우저에서 테스트중인 API를 실수로 사용하지 마십시오. 이것은 명백하고 단순하게 들릴 수 있지만 때로는 그렇지 않습니다. 예를 들어, 위의 코드 스 니펫에서 짧은 정규 표현식 표기법 (예 : / reg / igm)으로 lookbehind를 사용하면 지원되지 않는 브라우저에서 파서 오류가 발생합니다. 따라서 위의 예에서는 &lt;em&gt;new RegExp ( &quot;(? &amp;lt;= look_behind_stuff)&quot;); &lt;/em&gt;코드의 지원되는 지원 섹션에서도 &lt;em&gt;/ (? &amp;lt;= look_behind_stuff) /&lt;/em&gt; 대신에 .</target>
        </trans-unit>
        <trans-unit id="eafc1856088b0c25b5dc46fcf0e9827359916eb5" translate="yes" xml:space="preserve">
          <source>Layout-inducing Animations</source>
          <target state="translated">레이아웃 유도 애니메이션</target>
        </trans-unit>
        <trans-unit id="2c4b740fafd105be97b958562b8d0b2c61b96ad1" translate="yes" xml:space="preserve">
          <source>Layout-inducing animations</source>
          <target state="translated">레이아웃 유도 애니메이션</target>
        </trans-unit>
        <trans-unit id="002f595b3413c96ece78e3ec6628adfe5d342941" translate="yes" xml:space="preserve">
          <source>Lazyload</source>
          <target state="translated">Lazyload</target>
        </trans-unit>
        <trans-unit id="a40fd5847ed3e1026e0e2408645ee12816f7b517" translate="yes" xml:space="preserve">
          <source>Learn about: Content Security Policy</source>
          <target state="translated">자세히 알아보기 : 콘텐츠 보안 정책</target>
        </trans-unit>
        <trans-unit id="4c1df5a82059a1ccfbe352d4ab0834213813478b" translate="yes" xml:space="preserve">
          <source>Learn how to use HTTP with guides and tutorials.</source>
          <target state="translated">안내서 및 학습서와 함께 HTTP를 사용하는 방법을 학습하십시오.</target>
        </trans-unit>
        <trans-unit id="14b20b4a9f9427cb013c488330c0a01cc370bf8c" translate="yes" xml:space="preserve">
          <source>Legacy image formats</source>
          <target state="translated">레거시 이미지 형식</target>
        </trans-unit>
        <trans-unit id="55585bc793f35049b20c241f9615d3aad00963a1" translate="yes" xml:space="preserve">
          <source>Legislation or regulations that cover the use of cookies include:</source>
          <target state="translated">쿠키 사용을 다루는 법률 또는 규정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="657da249aededaf980a2d1ed290fee63a37d340e" translate="yes" xml:space="preserve">
          <source>Length limitations</source>
          <target state="translated">길이 제한</target>
        </trans-unit>
        <trans-unit id="abe8b1855b255aecb73e65c60887adb2dd17eb4f" translate="yes" xml:space="preserve">
          <source>Length limited to 4096 bytes</source>
          <target state="translated">길이는 4096 바이트로 제한됨</target>
        </trans-unit>
        <trans-unit id="5084aa81ee35e345974545e25d8c6c32ab615e45" translate="yes" xml:space="preserve">
          <source>Let us look at what the browser will send to the server in this case, and let's see how the server responds:</source>
          <target state="translated">이 경우 브라우저가 서버로 전송하는 내용을 살펴보고 서버가 어떻게 응답하는지 봅시다.</target>
        </trans-unit>
        <trans-unit id="fa210c261a8eda6a3085253bdfc33931dfb0a50f" translate="yes" xml:space="preserve">
          <source>Let's consider a page located at &lt;code&gt;&lt;a href=&quot;http://example.com/signup.html&quot;&gt;http://example.com/signup.html&lt;/a&gt;&lt;/code&gt;. It uses the following policy, disallowing everything but stylesheets from &lt;code&gt;cdn.example.com&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://example.com/signup.html&quot;&gt;http://example.com/signup.html&lt;/a&gt;&lt;/code&gt; 에 있는 페이지를 고려하십시오 . 다음 정책을 사용하여 &lt;code&gt;cdn.example.com&lt;/code&gt; 의 스타일 시트를 제외한 모든 것을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="152516c7d9cfd6fae5d3a79c8e35a362dbc55ac2" translate="yes" xml:space="preserve">
          <source>Let's consider a page located at &lt;code&gt;http://example.com/signup.html&lt;/code&gt;. It uses the following policy, disallowing everything but stylesheets from &lt;code&gt;cdn.example.com&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;http://example.com/signup.html&lt;/code&gt; 에 있는 페이지를 고려하십시오 . 다음 정책을 사용하여 &lt;code&gt;cdn.example.com&lt;/code&gt; 의 스타일 시트를 제외한 모든 것을 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="adad50c91bb6c2e681c25e53578bd93aba54f1ba" translate="yes" xml:space="preserve">
          <source>Let's look at an example of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;preflight request&lt;/a&gt; involving &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; 와 관련된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/preflight_request&quot;&gt;프리 플라이트 요청&lt;/a&gt; 의 예를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="442acc84011b22aa128b910d7dd61aeabb2c24b6" translate="yes" xml:space="preserve">
          <source>Let's look at an example of a preflight request involving &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; 와 관련된 프리 플라이트 요청의 예를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="a6f2cc4219a3b1353640b6f36885fb2d82681621" translate="yes" xml:space="preserve">
          <source>Let's look at the full exchange between client and server. The first exchange is the &lt;em&gt;preflight request/response&lt;/em&gt;:</source>
          <target state="translated">클라이언트와 서버 간의 전체 교환을 살펴 보겠습니다. 첫 번째 교환은 &lt;em&gt;비행 전 요청 / 응답입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e42d1be5f2d0916b7b05c410c632eba10326aa68" translate="yes" xml:space="preserve">
          <source>Let's look at what the browser will send to the server in this case, and let's see how the server responds:</source>
          <target state="translated">이 경우 브라우저가 서버에 전송하는 내용을 살펴보고 서버가 어떻게 응답하는지 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="928b6441798d4590009f5cc1febcd4f4cc9b6912" translate="yes" xml:space="preserve">
          <source>Let's say a site's API can return data in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; formats. If the URL for a particular document is at &lt;code&gt;https://example.com/documents/foo&lt;/code&gt;, the site could return different URLs for &lt;code&gt;Content-Location&lt;/code&gt; depending on the request's &lt;a href=&quot;accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header:</source>
          <target state="translated">사이트의 API가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt; 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; 형식으로 데이터를 반환 할 수 있다고 가정 해 보겠습니다 . 특정 문서의 URL이 &lt;code&gt;https://example.com/documents/foo&lt;/code&gt; 인 경우 사이트 는 요청의 &lt;a href=&quot;accept&quot;&gt; &lt;code&gt;Accept&lt;/code&gt; &lt;/a&gt; 헤더 에 따라 &lt;code&gt;Content-Location&lt;/code&gt; 에 대해 다른 URL을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a649ee77f17b9ff4d60ac31c6bda763b09061da1" translate="yes" xml:space="preserve">
          <source>Let's take a look at the full exchange between client and server. The first exchange is the &lt;em&gt;preflight request/response&lt;/em&gt;:</source>
          <target state="translated">클라이언트와 서버의 전체 교환을 살펴 보겠습니다. 첫 번째 교환은 &lt;em&gt;프리 플라이트 요청 / 응답입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e07eff52aa81cb70622273914da9f4d944a0a8a8" translate="yes" xml:space="preserve">
          <source>Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.</source>
          <target state="translated">리소스가 최상위 브라우징 컨텍스트를 탐색 할 수 있도록합니다 (사용자 제스처로 시작된 경우에만).</target>
        </trans-unit>
        <trans-unit id="e749390204ffe84807c0bf8aa779eaba96be86a5" translate="yes" xml:space="preserve">
          <source>Lets the resource request access to the parent's storage capabilities with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API&quot;&gt;Storage Access API&lt;/a&gt;.</source>
          <target state="translated">리소스가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API&quot;&gt;Storage Access API&lt;/a&gt; 를 사용하여 상위의 스토리지 기능에 대한 액세스를 요청할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="095cbdfe7047e224c585adc3fd8460ae3e349338" translate="yes" xml:space="preserve">
          <source>Library and net tool UA strings</source>
          <target state="translated">라이브러리 및 네트워크 도구 UA 문자열</target>
        </trans-unit>
        <trans-unit id="76d8e88746aed29c5732084d86f85c42f51868b5" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike License v2.5 or later.</source>
          <target state="translated">Creative Commons Attribution-ShareAlike License v2.5 이상에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="8a762e028503c19597a52f977263fd61a8df56e0" translate="yes" xml:space="preserve">
          <source>Lighttpd</source>
          <target state="translated">Lighttpd</target>
        </trans-unit>
        <trans-unit id="9f3f4cf072da64f11ef4837f26d8ed4cef440ef9" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;must-revalidate&lt;/code&gt;, but only for shared caches (e.g., proxies). Ignored by private caches.</source>
          <target state="translated">마찬가지로 &lt;code&gt;must-revalidate&lt;/code&gt; 있지만 공유 캐시 (예를 들어, 프록시)합니다. 개인 캐시에서 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b82d716bd3bf87fe044e3e34804e6da8259e4d37" translate="yes" xml:space="preserve">
          <source>Like HTML redirections, this can't work on all resources, and obviously, this will only work on clients that execute JavaScript. On the other hand, there are more possibilities: for example, you can trigger the redirect only if some conditions are met.</source>
          <target state="translated">HTML 리디렉션과 마찬가지로 모든 리소스에서 작동 할 수는 없으며 분명히 자바 스크립트를 실행하는 클라이언트에서만 작동합니다. 반면에 더 많은 가능성이 있습니다. 예를 들어 일부 조건이 충족되는 경우에만 리디렉션을 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db10ddafdbaf44fe84055e66ecf49ecd6e6f7755" translate="yes" xml:space="preserve">
          <source>Like HTML redirections, this can't work on all resources, and obviously, this will only work on clients that execute JavaScript. On the other side, there are more possibilities as you can trigger the redirection only if some conditions are met, for example.</source>
          <target state="translated">HTML 리디렉션과 마찬가지로 모든 리소스에서 작동하지는 않으며 JavaScript를 실행하는 클라이언트에서만 작동합니다. 반면에 일부 조건이 충족되는 경우에만 리디렉션을 트리거 할 수있는 가능성이 더 많습니다.</target>
        </trans-unit>
        <trans-unit id="70be75ce577f3ebafccca55b5df13ee8aef2157c" translate="yes" xml:space="preserve">
          <source>Like any generic data transfer protocol, HTTP cannot regulate the
   content of the data that is transferred, nor is there any a priori
   method of determining the sensitivity of any particular piece of
   information within the context of any given request. Therefore,
   applications SHOULD supply as much control over this information as
   possible to the provider of that information. Four header fields are
   worth special mention in this context: Server, Via, Referer and From.

   Revealing the specific software version of the server might allow the
   server machine to become more vulnerable to attacks against software
   that is known to contain security holes. Implementors SHOULD make the
   Server header field a configurable option.

   Proxies which serve as a portal through a network firewall SHOULD
   take special precautions regarding the transfer of header information
   that identifies the hosts behind the firewall. In particular, they
   SHOULD remove, or replace with sanitized versions, any Via fields
   generated behind the firewall.

   The Referer header allows reading patterns to be studied and reverse
   links drawn. Although it can be very useful, its power can be abused
   if user details are not separated from the information contained in 

   the Referer. Even when the personal information has been removed, the
   Referer header might indicate a private document's URI whose
   publication would be inappropriate.

   The information sent in the From field might conflict with the user's
   privacy interests or their site's security policy, and hence it
   SHOULD NOT be transmitted without the user being able to disable,
   enable, and modify the contents of the field. The user MUST be able
   to set the contents of this field within a user preference or
   application defaults configuration.

   We suggest, though do not require, that a convenient toggle interface
   be provided for the user to enable or disable the sending of From and
   Referer information.

   The User-Agent (&lt;a href=&quot;#section-14.43&quot;&gt;section 14.43&lt;/a&gt;) or Server (&lt;a href=&quot;#section-14.38&quot;&gt;section 14.38&lt;/a&gt;) header
   fields can sometimes be used to determine that a specific client or
   server have a particular security hole which might be exploited.
   Unfortunately, this same information is often used for other valuable
   purposes for which HTTP currently has no better mechanism.</source>
          <target state="translated">일반적인 데이터 전송 프로토콜과 마찬가지로, HTTP는 전송 된 데이터의 내용을 규제 할 수 없으며, 주어진 요청의 맥락에서 특정 정보의 민감도를 결정하는 선험적 인 방법도 없습니다. 따라서 응용 프로그램은 가능한 한 해당 정보 제공 업체에이 정보를 최대한 제어 할 수 있어야합니다. 이 문맥에서 Server, Via, Referer 및 From의 네 가지 헤더 필드를 특별히 언급 할 가치가 있습니다. 서버의 특정 소프트웨어 버전을 공개하면 서버 시스템이 보안 허점이있는 것으로 알려진 소프트웨어에 대한 공격에 더욱 취약해질 수 있습니다. 구현자는 서버 헤더 필드를 구성 가능한 옵션으로 만들어야합니다 (SHOULD).네트워크 방화벽을 통해 포털 역할을하는 프록시는 방화벽 뒤의 호스트를 식별하는 헤더 정보 전송과 관련하여 특별한 예방 조치를 취해야합니다 (SHOULD). 특히 방화벽 뒤에 생성 된 모든 Via 필드를 제거하거나 위생 화 된 버전으로 교체해야합니다. Referer 헤더를 사용하면 판독 패턴을 연구하고 역방향 링크를 그릴 수 있습니다. 매우 유용 할 수 있지만 사용자 세부 정보가 Referer에 포함 된 정보와 분리되지 않으면 그 기능이 남용 될 수 있습니다. 개인 정보가 제거 된 경우에도 Referer 헤더는 공개가 부적절한 개인 문서의 URI를 나타낼 수 있습니다. 보낸 사람 입력란에 전송 된 정보는 사용자의 개인 정보 보호 관심사 또는 사이트의 보안 정책과 충돌 할 수 있습니다.따라서 사용자가 필드의 내용을 비활성화, 활성화 및 수정할 수 없으면 전송해서는 안됩니다. 사용자는 사용자 기본 설정 또는 응용 프로그램 기본 구성 내에서이 필드의 내용을 설정할 수 있어야합니다. 필수는 아니지만 사용자가 From 및 Referer 정보 전송을 활성화 또는 비활성화 할 수있는 편리한 토글 인터페이스를 제공하는 것이 좋습니다. 사용자 에이전트 (From 및 Referer 정보의 전송을 활성화 또는 비활성화 할 수있는 편리한 토글 인터페이스를 제공합니다. 사용자 에이전트 (From 및 Referer 정보의 전송을 활성화 또는 비활성화 할 수있는 편리한 토글 인터페이스를 제공합니다. 사용자 에이전트 (&lt;a href=&quot;#section-14.43&quot;&gt;섹션 14.43&lt;/a&gt; ) 또는 서버 ( &lt;a href=&quot;#section-14.38&quot;&gt;섹션 14.38&lt;/a&gt; ) 헤더 필드를 사용하여 특정 클라이언트 나 서버에 악용 될 수있는 특정 보안 허점이 있는지 확인할 수 있습니다. 불행하게도,이 같은 정보는 종종 HTTP가 현재 더 나은 메커니즘을 갖지 않는 다른 귀중한 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="de09479df824aa67e637b0690aa7154dd273d917" translate="yes" xml:space="preserve">
          <source>Like images, HTML doesn't define supported types for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; and&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, so only some can be used on the Web. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats&quot;&gt;Media formats supported by the HTML audio and video elements&lt;/a&gt; explains both the codecs and container formats which can be used.</source>
          <target state="translated">이미지와 마찬가지로 HTML은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 지원되는 유형을 정의하지 않으므로 일부는 웹에서 사용할 수 있습니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats&quot;&gt;HTML 오디오 및 비디오 요소가 지원하는 미디어 형식&lt;/a&gt; 은 사용할 수있는 코덱 및 컨테이너 형식을 모두 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b17f9b3a3f5f94964505eae8dc076c8167b437f2" translate="yes" xml:space="preserve">
          <source>Like in all cases, these strings may change in the future, one should use them only in conjunction with the detection of already released browsers. A technological survey must be in place to adapt the script when new browser versions are coming out.</source>
          <target state="translated">모든 경우와 마찬가지로 이러한 문자열은 나중에 변경 될 수 있으므로 이미 릴리스 된 브라우저의 감지와 함께 만 사용해야합니다. 새로운 브라우저 버전이 출시 될 때 스크립트를 적용하려면 기술 조사를 실시해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3f7813f6513530fae5d20c357e1018dfbdab752" translate="yes" xml:space="preserve">
          <source>Like the compress program, which has disappeared from most UNIX distributions, this content-encoding is used by almost no browsers today, partly because of a patent issue (which expired in 2003).</source>
          <target state="translated">대부분의 유닉스 배포판에서 사라진 압축 프로그램과 마찬가지로,이 컨텐츠 인코딩은 오늘날 거의 모든 브라우저에서 사용되지 않으며 부분적으로는 특허 문제 (2003 년에 만료 됨)로 인해 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c924aeab714bffe66c4c22bc5d8bd00099533380" translate="yes" xml:space="preserve">
          <source>Limiting the possible &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; values to a set of allowed origins requires code on the server side to check the value of the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; request header, compare that to a list of allowed origins, and then if the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; value is in the list, to set the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; value to the same value as the &lt;a href=&quot;origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">가능한 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 값을 허용 된 원점 세트로 제한하려면 서버 측에서 &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 요청 헤더 의 값을 확인하고 허용 된 원점 목록과 비교 한 다음 &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 값이 목록은 설정하는 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 와 같은 값으로 값을 &lt;a href=&quot;origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="a118fb8cb53f5dd1fc14f29be01804384762f7e9" translate="yes" xml:space="preserve">
          <source>Line 7 shows the flag on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; that has to be set in order to make the invocation with Cookies, namely the &lt;code&gt;withCredentials&lt;/code&gt; boolean value. By default, the invocation is made without Cookies. Since this is a simple &lt;code&gt;GET&lt;/code&gt; request, it is not preflighted, but the browser will &lt;strong&gt;reject&lt;/strong&gt; any response that does not have the &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; header, and &lt;strong&gt;not&lt;/strong&gt; make the response available to the invoking web content.</source>
          <target state="translated">7 행은 쿠키를 사용하여 호출하기 위해 설정 &lt;code&gt;withCredentials&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 의 플래그 , 즉 withCredentials 부울 값을 표시합니다. 기본적으로 호출은 쿠키없이 이루어집니다. 이 요청 은 간단한 &lt;code&gt;GET&lt;/code&gt; 요청이므로 프리 플라이트되지는 않지만 브라우저는 &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt; &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; &lt;/a&gt; &lt;code&gt;: true&lt;/code&gt; 헤더 가없는 응답을 &lt;strong&gt;거부&lt;/strong&gt; 하고 호출하는 웹 컨텐츠에 응답을 제공 &lt;strong&gt;하지 않습니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afff9baac3ee3d5a86ba3d479a5d4eb896a2ee71" translate="yes" xml:space="preserve">
          <source>Lines 1 - 10 above represent the preflight request with the &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; method. The browser determines that it needs to send this based on the request parameters that the JavaScript code snippet above was using, so that the server can respond whether it is acceptable to send the request with the actual request parameters. OPTIONS is an HTTP/1.1 method that is used to determine further information from servers, and is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; method, meaning that it can't be used to change the resource. Note that along with the OPTIONS request, two other request headers are sent (lines 9 and 10 respectively):</source>
          <target state="translated">위의 1 ~ 10 행은 &lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; 메소드를 사용한 실행 전 요청을 나타냅니다 . 브라우저는 위의 JavaScript 코드 스 니펫이 사용하고있는 요청 매개 변수를 기반으로이를 전송해야한다고 결정하므로 서버는 실제 요청 매개 변수로 요청을 보내는 것이 허용되는지 여부에 응답 할 수 있습니다. OPTIONS는 서버에서 추가 정보를 확인하는 데 사용되는 HTTP / 1.1 방법이며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;안전한&lt;/a&gt; 방법이므로 리소스를 변경하는 데 사용할 수 없습니다. OPTIONS 요청과 함께 두 개의 다른 요청 헤더가 전송됩니다 (각각 9 행과 10 행).</target>
        </trans-unit>
        <trans-unit id="3e4ad5eac403df09e0c0c7d48c364588c499b639" translate="yes" xml:space="preserve">
          <source>Lines 1 - 10 are headers sent. The main HTTP request header of note here is the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header on line 10 above, which shows that the invocation is coming from content on the domain &lt;code&gt;http://foo.example&lt;/code&gt;.</source>
          <target state="translated">1-10 행은 헤더가 전송됩니다. 여기서 주 HTTP 요청 헤더는 위의 10 행에 있는 &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 헤더이며 호출은 &lt;code&gt;http://foo.example&lt;/code&gt; 도메인의 컨텐츠에서 온 것임을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a288b2c5ce1d7dc2f4906f2097cd01bf3ad43ed7" translate="yes" xml:space="preserve">
          <source>Lines 1 - 12 above represent the preflight request with the &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; method. The browser determines that it needs to send this based on the request parameters that the JavaScript code snippet above was using, so that the server can respond whether it is acceptable to send the request with the actual request parameters. OPTIONS is an HTTP/1.1 method that is used to determine further information from servers, and is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;safe&lt;/a&gt; method, meaning that it can't be used to change the resource. Note that along with the OPTIONS request, two other request headers are sent (lines 10 and 11 respectively):</source>
          <target state="translated">위의 1-12 행은 &lt;a href=&quot;methods/options&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; 메소드를 사용한 프리 플라이트 요청을 나타냅니다 . 브라우저는 위의 JavaScript 코드 스 니펫이 사용중인 요청 매개 변수를 기반으로이를 전송해야하므로 서버가 실제 요청 매개 변수로 요청을 보낼 수 있는지 여부에 응답 할 수 있습니다. OPTIONS는 서버에서 추가 정보를 확인하는 데 사용되는 HTTP / 1.1 방법이며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;안전한&lt;/a&gt; 방법이므로 리소스를 변경하는 데 사용할 수 없습니다. OPTIONS 요청과 함께 두 개의 다른 요청 헤더가 전송됩니다 (각각 10 행과 11 행).</target>
        </trans-unit>
        <trans-unit id="755ba040dbf11df7afee309c945c9ca76a93a22e" translate="yes" xml:space="preserve">
          <source>Lines 13 - 22 above are the response that the server sends back, which indicate that the request method (&lt;code&gt;POST&lt;/code&gt;) and request headers (&lt;code&gt;X-PINGOTHER&lt;/code&gt;) are acceptable. In particular, let's look at lines 16-19:</source>
          <target state="translated">위의 &lt;code&gt;X-PINGOTHER&lt;/code&gt; 은 서버가 다시 보내는 응답으로, 요청 방법 ( &lt;code&gt;POST&lt;/code&gt; ) 및 요청 헤더 ( X-PINGOTHER )가 허용됨을 나타냅니다. 특히 16-19 행을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="656e5cef78d93570c111bd1f498ea5a75f7e0f4b" translate="yes" xml:space="preserve">
          <source>Lines 13 - 22 show the HTTP response from the server on domain &lt;code&gt;http://bar.other&lt;/code&gt;. In response, the server sends back an &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header, shown above in line 16. The use of the &lt;a href=&quot;headers/origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; header and of &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; show the access control protocol in its simplest use. In this case, the server responds with a &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; which means that the resource can be accessed by &lt;strong&gt;any&lt;/strong&gt; domain in a cross-site manner. If the resource owners at &lt;code&gt;http://bar.other&lt;/code&gt; wished to restrict access to the resource to requests only from &lt;code&gt;http://foo.example&lt;/code&gt;, they would send back:</source>
          <target state="translated">&lt;code&gt;http://bar.other&lt;/code&gt; 도메인에있는 서버의 HTTP 응답을 보여줍니다 . 이에 대한 응답으로 서버는 위의 16 행에 표시된 &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; 헤더를 다시 보냅니다 . &lt;a href=&quot;headers/origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 헤더와 &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; 은 가장 간단한 사용으로 액세스 제어 프로토콜을 보여줍니다. 이 경우 서버는 &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; 응답합니다 . 즉, &lt;strong&gt;모든&lt;/strong&gt; 도메인에서 교차 사이트 방식으로 리소스에 액세스 할 수 있습니다 . 에서 자원 소유자 경우 &lt;code&gt;http://bar.other&lt;/code&gt; 단지의 요청에 자원에 대한 접근을 제한하고 싶다고 &lt;code&gt;http://foo.example&lt;/code&gt; , 그들은 다시 보낼 것이다 :</target>
        </trans-unit>
        <trans-unit id="0936ed44f0ff243a8948b7ff1f3424ae3dd946dd" translate="yes" xml:space="preserve">
          <source>Lines 14 - 26 above are the response that the server sends back indicating that the request method (&lt;code&gt;POST&lt;/code&gt;) and request headers (&lt;code&gt;X-PINGOTHER&lt;/code&gt;) are acceptable. In particular, let's look at lines 17-20:</source>
          <target state="translated">위의 &lt;code&gt;X-PINGOTHER&lt;/code&gt; 은 요청 메소드 ( &lt;code&gt;POST&lt;/code&gt; ) 및 요청 헤더 ( X-PINGOTHER )가 허용됨을 나타내는 서버의 응답입니다 . 특히 17 ~ 20 행을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="d0517071aa376e797705058bbad4b658954b9930" translate="yes" xml:space="preserve">
          <source>Link</source>
          <target state="translated">Link</target>
        </trans-unit>
        <trans-unit id="aa65b658f4f7a0604beb1fd4219975007f50e35a" translate="yes" xml:space="preserve">
          <source>Linked Data Platform 1.0, Section 7.1: The Accept-Post Response Header</source>
          <target state="translated">Linked Data Platform 1.0, 섹션 7.1 : Accept-Post 응답 헤더</target>
        </trans-unit>
        <trans-unit id="82027c0f9c7057e65bf210d13353910e8d71c0f4" translate="yes" xml:space="preserve">
          <source>Links generated code to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&quot;&gt;source map&lt;/a&gt;.</source>
          <target state="translated">생성 된 코드를 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&quot;&gt;소스 맵에 연결&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="319f6b56be87378e2eef2436fa7e744a9edd1729" translate="yes" xml:space="preserve">
          <source>Linux desktop on i686 CPU</source>
          <target state="translated">i686 CPU의 Linux 데스크톱</target>
        </trans-unit>
        <trans-unit id="7e761763f3a77622bf4eba6f67716c21b35193a4" translate="yes" xml:space="preserve">
          <source>Linux desktop on x86_64 CPU</source>
          <target state="translated">x86_64 CPU의 Linux 데스크톱</target>
        </trans-unit>
        <trans-unit id="549589564fb88551ce209cf08bbdd821d0b56959" translate="yes" xml:space="preserve">
          <source>Linux desktop, i686</source>
          <target state="translated">리눅스 데스크탑, i686</target>
        </trans-unit>
        <trans-unit id="2c1006c548ffce988561b572ae63ee4b2e4e044d" translate="yes" xml:space="preserve">
          <source>Linux desktop, i686 running on x86_64</source>
          <target state="translated">x86_64에서 실행되는 Linux 데스크탑, i686</target>
        </trans-unit>
        <trans-unit id="7162da293f4c110abd9006ea0fe9502688b6d134" translate="yes" xml:space="preserve">
          <source>Linux desktop, x86_64</source>
          <target state="translated">리눅스 데스크탑, x86_64</target>
        </trans-unit>
        <trans-unit id="ceb42a6047d0fbee0d6dbc845c8b0bf73fb0ee1b" translate="yes" xml:space="preserve">
          <source>Linux is a more diverse platform. A few common examples are given below.</source>
          <target state="translated">리눅스는보다 다양한 플랫폼입니다. 몇 가지 일반적인 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d420ef77bdfa54732d5aecb6c40af8088cd0093b" translate="yes" xml:space="preserve">
          <source>Linux is a more diverse platform. Your distribution of Linux might include an extension that changes your user-agent. A few common examples are given below.</source>
          <target state="translated">Linux는보다 다양한 플랫폼입니다. Linux 배포에는 사용자 에이전트를 변경하는 확장이 포함될 수 있습니다. 몇 가지 일반적인 예가 아래에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="065f1e3b7da760e47bd326f001407c11b87dca01" translate="yes" xml:space="preserve">
          <source>Linux version</source>
          <target state="translated">리눅스 버전</target>
        </trans-unit>
        <trans-unit id="f35d685de7aa50ed56af00a2c8d048a65fb3313a" translate="yes" xml:space="preserve">
          <source>List of HTTP status codes on Wikipedia</source>
          <target state="translated">Wikipedia의 HTTP 상태 코드 목록</target>
        </trans-unit>
        <trans-unit id="c7facdad0c38a8be559aae543266310890041f74" translate="yes" xml:space="preserve">
          <source>Lists the set of HTTP request methods support by a resource.</source>
          <target state="translated">자원이 지원하는 HTTP 요청 메소드 세트를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="bf846e5d6a49925e3756fb19a1fc2ca1fb129084" translate="yes" xml:space="preserve">
          <source>Lists the set of HTTP request methods supported by a resource.</source>
          <target state="translated">리소스에서 지원하는 HTTP 요청 메서드 집합을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="59afca4aa349dcb2585efb358d932b086d06c52a" translate="yes" xml:space="preserve">
          <source>Live properties described in this document SHOULD be moved along with
   the resource, such that the resource has identically behaving live
   properties at the destination resource, but not necessarily with the
   same values.  Note that some live properties are defined such that
   the absence of the property has a specific meaning (e.g., a flag with
   one meaning if present, and the opposite if absent), and in these
   cases, a successful MOVE might result in the property being reported
   as &quot;Not Found&quot; in subsequent requests.  If the live properties will
   not work the same way at the destination, the server MAY fail the
   request.

   MOVE is frequently used by clients to rename a file without changing
   its parent collection, so it's not appropriate to reset all live
   properties that are set at resource creation.  For example, the DAV:
   creationdate property value SHOULD remain the same after a MOVE.

   Dead properties MUST be moved along with the resource.</source>
          <target state="translated">이 문서에 설명 된 라이브 속성은 리소스와 함께 이동해야하므로 리소스가 대상 리소스에서 동일하게 동작하는 속성을 갖지만 반드시 동일한 값을 갖는 것은 아닙니다. 일부 라이브 속성은 속성의 부재가 특정 의미를 갖도록 정의됩니다 (예 : 존재하는 경우 하나의 의미를 가진 플래그,없는 경우 반대).이 경우 MOVE가 성공하면 속성이 발생할 수 있습니다. 후속 요청에서 &quot;찾을 수 없음&quot;으로보고되었습니다. 실제 속성이 대상에서 동일한 방식으로 작동하지 않으면 서버가 요청에 실패 할 수 있습니다. MOVE는 클라이언트가 상위 컬렉션을 변경하지 않고 파일 이름을 바꾸는 데 자주 사용되므로 리소스 생성시 설정된 모든 라이브 속성을 재설정하는 것은 적절하지 않습니다.예를 들어, DAV : creationdate 속성 값은 이동 후에도 동일하게 유지되어야한다. 죽은 속성은 리소스와 함께 이동해야합니다.</target>
        </trans-unit>
        <trans-unit id="d81b072a609cb829f45333cb83e086a659ba9738" translate="yes" xml:space="preserve">
          <source>Living Standard</source>
          <target state="translated">생활 수준</target>
        </trans-unit>
        <trans-unit id="6a7b5bd9c1e9247bb26bc70611e9ed0c08ee1e45" translate="yes" xml:space="preserve">
          <source>Load balancing/routing based on URL patterns</source>
          <target state="translated">URL 패턴에 따른로드 밸런싱 / 라우팅</target>
        </trans-unit>
        <trans-unit id="2bf154fc59dbac071e95bfd447b96ee4cb26055c" translate="yes" xml:space="preserve">
          <source>Load balancing: distribute the load to several web servers,</source>
          <target state="translated">로드 밸런싱 :로드를 여러 웹 서버에 분배</target>
        </trans-unit>
        <trans-unit id="780b9308173b538a799446bb3515d17b56539241" translate="yes" xml:space="preserve">
          <source>Local File Security in Firefox 68</source>
          <target state="translated">Firefox 68의 로컬 파일 보안</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="a65e984205ab4c0ed633ba5ae6a32d6c797cec2d" translate="yes" xml:space="preserve">
          <source>Location (RFC 2616)</source>
          <target state="translated">위치 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="a192553dfc610dd4624b27cebff4825c0c7e9331" translate="yes" xml:space="preserve">
          <source>Location (RFC 7231)</source>
          <target state="translated">위치 (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="c6e7ecfb5bf0d5af9da443ea9b5d77cb9bee2bce" translate="yes" xml:space="preserve">
          <source>Lock-Token = &quot;Lock-Token&quot; &quot;:&quot; Coded-URL

   The Lock-Token request header is used with the UNLOCK method to
   identify the lock to be removed.  The lock token in the Lock-Token
   request header MUST identify a lock that contains the resource
   identified by Request-URI as a member.

   The Lock-Token response header is used with the LOCK method to
   indicate the lock token created as a result of a successful LOCK
   request to create a new lock.</source>
          <target state="translated">Lock-Token = &quot;Lock-Token&quot; &quot;:&quot;코딩 된 URL 잠금 토큰 요청 헤더는 UNLOCK 메서드와 함께 사용하여 제거 할 잠금을 식별합니다. Lock-Token 요청 헤더의 잠금 토큰은 Request-URI가 구성원으로 식별 한 자원을 포함하는 잠금을 식별해야합니다. Lock-Token 응답 헤더는 LOCK 메소드와 함께 사용되어 새 잠금을 작성하기위한 성공적인 LOCK 요청의 결과로 작성된 잠금 토큰을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="55430a651698b7d81aef1e04d11d9a2d806ddbab" translate="yes" xml:space="preserve">
          <source>Logging utility</source>
          <target state="translated">로깅 유틸리티</target>
        </trans-unit>
        <trans-unit id="1a4b53727bcb9a035c59d80c57451cf3de2a5c3e" translate="yes" xml:space="preserve">
          <source>Logins, shopping carts, game scores, or anything else the server should remember</source>
          <target state="translated">로그인, 쇼핑 카트, 게임 점수 또는 서버가 기억해야 할 다른 것</target>
        </trans-unit>
        <trans-unit id="bf49284c6e80b1a37a4cb9aa4fa17eb56ebba27b" translate="yes" xml:space="preserve">
          <source>Look, or ask, in specialized forums: you're unlikely to be the first to hit this problem. Also, experts, or simply people with another point of view, can give you ideas for working around the bug. If the problem seems uncommon, it's worth checking if this bug has been reported to the browser vendor via their bug tracking system (&lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt;; &lt;a href=&quot;http://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt;; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt;; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt;). Browser makers do pay attention to bug reports, and the analysis may hint about other workarounds for the bug.</source>
          <target state="translated">전문 포럼에서 보거나 물어보십시오.이 문제를 가장 먼저 경험하지는 못할 것입니다. 또한 전문가 나 다른 관점을 가진 사람들이 버그를 해결하기위한 아이디어를 제공 할 수 있습니다. 문제가 흔하지 않은 경우 버그 추적 시스템 ( &lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt; ; &lt;a href=&quot;http://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt; ; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt; ; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt; )을 통해이 버그가 브라우저 공급 업체에보고되었는지 확인하는 것이 좋습니다. 브라우저 제조업체는 버그 보고서에주의를 기울이고 분석 결과 버그에 대한 다른 해결 방법이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="682f96fa9b4131718e0aecf2b0551b2c7792bb34" translate="yes" xml:space="preserve">
          <source>Look, or ask, in specialized forums: you're unlikely to be the first to hit this problem. Also, experts, or simply people with another point of view, can give you ideas for working around the bug. If the problem seems uncommon, it's worth checking if this bug has been reported to the browser vendor via their bug tracking system (&lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt;; &lt;a href=&quot;https://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt;; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt;; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt;). Browser makers do pay attention to bug reports, and the analysis may hint about other workarounds for the bug.</source>
          <target state="translated">전문 포럼에서 보거나 물어보십시오.이 문제에 가장 먼저 맞을 것 같지는 않습니다. 또한 전문가 또는 다른 관점을 가진 사람들이 버그를 해결하기위한 아이디어를 제공 할 수 있습니다. 문제가 흔하지 않은 것 같으면이 버그가 버그 추적 시스템 ( &lt;a href=&quot;https://bugzilla.mozilla.org&quot;&gt;Mozilla&lt;/a&gt; ; &lt;a href=&quot;https://bugs.webkit.org&quot;&gt;WebKit&lt;/a&gt; ; &lt;a href=&quot;https://www.chromium.org/issue-tracking&quot;&gt;Blink&lt;/a&gt; ; &lt;a href=&quot;https://bugs.opera.com/&quot;&gt;Opera&lt;/a&gt; )을 통해 브라우저 공급 업체에보고되었는지 확인하는 것이 좋습니다. 브라우저 제작자는 버그 보고서에주의를 기울이고 분석 결과 버그에 대한 다른 해결 방법에 대한 힌트를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6909ecb298632f0b40975bb7028079f6f4501940" translate="yes" xml:space="preserve">
          <source>Lossy compression algorithms are usually more efficient than loss-less ones.</source>
          <target state="translated">손실 압축 알고리즘은 일반적으로 손실이없는 알고리즘보다 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="43ddda7cc2412992344e22fd844143dbcfe3bfc3" translate="yes" xml:space="preserve">
          <source>Lossy compression algorithms are usually more efficient that loss-less ones.</source>
          <target state="translated">손실 압축 알고리즘은 일반적으로 손실이없는 알고리즘보다 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="ac2665911917ab5f698cf6ff5ed62343c6057a6a" translate="yes" xml:space="preserve">
          <source>MIME Type</source>
          <target state="translated">MIME 유형</target>
        </trans-unit>
        <trans-unit id="403274b7a1852e5261e595fa61397d41178bdb18" translate="yes" xml:space="preserve">
          <source>MIME Types</source>
          <target state="translated">MIME 유형</target>
        </trans-unit>
        <trans-unit id="8e48cee9b67b50e883f2ce1444b5166e76e1cf17" translate="yes" xml:space="preserve">
          <source>MIME does not include any concept equivalent to HTTP/1.1's
   Content-Encoding header field.  Since this acts as a modifier on the
   media type, proxies and gateways from HTTP to MIME-compliant
   protocols ought to either change the value of the Content-Type header
   field or decode the representation before forwarding the message.
   (Some experimental applications of Content-Type for Internet mail
   have used a media-type parameter of &quot;;conversions=&amp;lt;content-coding&amp;gt;&quot;
   to perform a function equivalent to Content-Encoding.  However, this
   parameter is not part of the MIME standards).</source>
          <target state="translated">MIME에는 HTTP / 1.1의 Content-Encoding 헤더 필드와 동등한 개념이 포함되어 있지 않습니다. 미디어 유형에서 수정 자 역할을하기 때문에 HTTP에서 MIME 호환 프로토콜로의 프록시 및 게이트웨이는 메시지를 전달하기 전에 Content-Type 헤더 필드의 값을 변경하거나 표현을 디코딩해야합니다. 인터넷 메일 용 Content-Type의 일부 실험 응용 프로그램에서는 &quot;; conversions = &amp;lt;content-coding&amp;gt;&quot;의 미디어 유형 매개 변수를 사용하여 Content-Encoding과 동등한 기능을 수행했지만이 매개 변수는 MIME 표준의 일부가 아닙니다. ).</target>
        </trans-unit>
        <trans-unit id="969c21cbc7a0aaa20e68f4d797544fee58a73005" translate="yes" xml:space="preserve">
          <source>MIME media types define what kind of document a specific resource is. This article presents both the syntax and the most useful MIME types for use on the Web.</source>
          <target state="translated">MIME 미디어 유형은 특정 리소스가 어떤 종류의 문서인지 정의합니다. 이 기사에서는 웹에서 사용하기위한 구문과 가장 유용한 MIME 유형을 모두 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6bd9c9b5a57f317bcf5534bd7d83b023a8ee7df7" translate="yes" xml:space="preserve">
          <source>MIME provides for a number of &quot;multipart&quot; types -- encapsulations of
   one or more entities within a single message-body. All multipart
   types share a common syntax, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;section&amp;nbsp;5.1.1 of RFC 2046&lt;/a&gt; 

   [&lt;a href=&quot;#ref-40&quot;&gt;40&lt;/a&gt;], and MUST include a boundary parameter as part of the media type
   value. The message body is itself a protocol element and MUST
   therefore use only CRLF to represent line breaks between body-parts.
   Unlike in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC 2046&lt;/a&gt;, the epilogue of any multipart message MUST be
   empty; HTTP applications MUST NOT transmit the epilogue (even if the
   original multipart contains an epilogue). These restrictions exist in
   order to preserve the self-delimiting nature of a multipart message-
   body, wherein the &quot;end&quot; of the message-body is indicated by the
   ending multipart boundary.

   In general, HTTP treats a multipart message-body no differently than
   any other media type: strictly as payload. The one exception is the
   &quot;multipart/byteranges&quot; type (appendix 19.2) when it appears in a 206
   (Partial Content) response, which will be interpreted by some HTTP
   caching mechanisms as described in sections &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt; and &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;. In all
   other cases, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   The MIME header fields within each body-part of a multipart message-
   body do not have any significance to HTTP beyond that defined by
   their MIME semantics.

   In general, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   If an application receives an unrecognized multipart subtype, the
   application MUST treat it as being equivalent to &quot;multipart/mixed&quot;.

      Note: The &quot;multipart/form-data&quot; type has been specifically defined
      for carrying form data suitable for processing via the POST
      request method, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1867&quot;&gt;RFC 1867&lt;/a&gt; [&lt;a href=&quot;#ref-15&quot;&gt;15&lt;/a&gt;].</source>
          <target state="translated">MIME은 단일 메시지 본문 내에 하나 이상의 엔터티를 캡슐화하여 여러 &quot;멀티 파트&quot;유형을 제공합니다. 모든 멀티 파트 유형 &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;은 RFC 2046&lt;/a&gt; [ &lt;a href=&quot;#ref-40&quot;&gt;40&lt;/a&gt; ]의 5.1.1 섹션에 정의 된 공통 구문을 공유하며 미디어 유형 값의 일부로 경계 매개 변수를 포함해야합니다. 메시지 본문 자체는 프로토콜 요소이므로 본문 부분 사이의 줄 바꿈을 나타내는 데 CRLF 만 사용해야합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC 2046&lt;/a&gt; 과 달리멀티 파트 메시지의 에필로그는 비어 있어야합니다. HTTP 응용 프로그램은 에필로그를 전송해서는 안됩니다 (원래 멀티 파트에 에필로그가 포함되어 있어도). 이러한 제한은 멀티 파트 메시지 본문의 자체 구분 특성을 유지하기 위해 존재하며, 여기서 메시지 바디의 &quot;끝&quot;은 끝 멀티 파트 경계로 표시됩니다. 일반적으로 HTTP는 멀티 파트 메시지 본문을 다른 미디어 유형과 다르게 페이로드로 취급합니다. 한 가지 예외는 &quot;multipart / byteranges&quot;유형 (부록 19.2)이 206 (부분 내용) 응답에 나타날 때 &lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt; 및 &lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt; 섹션에 설명 된 일부 HTTP 캐싱 메커니즘에 의해 해석됩니다.. 다른 모든 경우에 HTTP 사용자 에이전트는 멀티 파트 유형을 수신 할 때 MIME 사용자 에이전트와 동일하거나 유사한 동작을 따라야합니다. 멀티 파트 메시지 본문의 각 본문 부분에있는 MIME 헤더 필드는 MIME 시맨틱에 의해 정의 된 것보다 HTTP에 의미가 없습니다. 일반적으로 HTTP 사용자 에이전트는 멀티 파트 유형을 수신 할 때 MIME 사용자 에이전트와 동일하거나 유사한 동작을 따라야합니다. 응용 프로그램이 인식 할 수없는 멀티 파트 서브 타입을 수신하는 경우, 응용 프로그램은이를 &quot;멀티 파트 / 믹스&quot;와 동등한 것으로 취급해야합니다. 참고 : &quot;multipart / form-data&quot;유형은 POST 요청 방법을 통해 처리하기에 적합한 양식 데이터를 전달하기 위해 특별히 정의되었습니다.&lt;a href=&quot;https://tools.ietf.org/html/rfc1867&quot;&gt;RFC 1867&lt;/a&gt; [ &lt;a href=&quot;#ref-15&quot;&gt;15&lt;/a&gt; ]에 설명 된 대로 .</target>
        </trans-unit>
        <trans-unit id="4a0b826ef29a7a4a5fcb4cc1856fb5706a1d940c" translate="yes" xml:space="preserve">
          <source>MIME provides for a number of &quot;multipart&quot; types -- encapsulations of
   one or more representations within a single message body.  All
   multipart types share a common syntax, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;Section&amp;nbsp;5.1.1 of
   [RFC2046]&lt;/a&gt;, and include a boundary parameter as part of the media type
   value.  The message body is itself a protocol element; a sender MUST
   generate only CRLF to represent line breaks between body parts.

   HTTP message framing does not use the multipart boundary as an
   indicator of message body length, though it might be used by
   implementations that generate or process the payload.  For example,
   the &quot;multipart/form-data&quot; type is often used for carrying form data
   in a request, as described in [&lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC2388&lt;/a&gt;], and the &quot;multipart/
   byteranges&quot; type is defined by this specification for use in some 206
   (Partial Content) responses [&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;].</source>
          <target state="translated">MIME은 다수의 &quot;멀티 파트&quot;유형을 제공합니다. 단일 메시지 본문 내에서 하나 이상의 표현을 캡슐화합니다. 모든 다중 파트 유형 &lt;a href=&quot;https://tools.ietf.org/html/rfc2046#section-5.1.1&quot;&gt;은 [RFC2046]의 5.1.1 섹션에&lt;/a&gt; 정의 된대로 공통 구문을 공유하며 매체 유형 값의 일부로 경계 매개 변수를 포함합니다. 메시지 본문 자체는 프로토콜 요소입니다. 발신자는 본문 부분 사이의 줄 바꿈을 나타 내기 위해 CRLF 만 생성해야합니다. HTTP 메시지 프레임은 다중 파트 경계를 메시지 본문 길이의 표시 자로 사용하지 않지만 페이로드를 생성하거나 처리하는 구현에서 사용될 수 있습니다. 예를 들어, &quot;multipart / form-data&quot;유형은 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2388&quot;&gt;RFC2388에&lt;/a&gt; 설명 된대로 요청에서 양식 데이터를 전달하는 데 종종 사용됩니다.] 및 &quot;멀티 파트 / 바이트 범위&quot;유형은 일부 206 (부분 컨텐츠) 응답 [ &lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt; ] 에 사용하기 위해이 스펙에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8e0f31f1df09630671c1f651e4e3b3a2f9c9629" translate="yes" xml:space="preserve">
          <source>MIME requires that an Internet mail body part be converted to
   canonical form prior to being transferred, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2049#section-4&quot;&gt;Section&amp;nbsp;4
   of [RFC2049]&lt;/a&gt;.  &lt;a href=&quot;#section-3.1.1.3&quot;&gt;Section 3.1.1.3&lt;/a&gt; of this document describes the forms
   allowed for subtypes of the &quot;text&quot; media type when transmitted over
   HTTP.  [&lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC2046&lt;/a&gt;] requires that content with a type of &quot;text&quot;
   represent line breaks as CRLF and forbids the use of CR or LF outside
   of line break sequences.  HTTP allows CRLF, bare CR, and bare LF to
   indicate a line break within text content.

   A proxy or gateway from HTTP to a strict MIME environment ought to
   translate all line breaks within the text media types described in
   &lt;a href=&quot;#section-3.1.1.3&quot;&gt;Section 3.1.1.3&lt;/a&gt; of this document to the &lt;a href=&quot;https://tools.ietf.org/html/rfc2049&quot;&gt;RFC 2049&lt;/a&gt; canonical form of
   CRLF.  Note, however, this might be complicated by the presence of a
   Content-Encoding and by the fact that HTTP allows the use of some
   charsets that do not use octets 13 and 10 to represent CR and LF,
   respectively. 

   Conversion will break any cryptographic checksums applied to the
   original content unless the original content is already in canonical
   form.  Therefore, the canonical form is recommended for any content
   that uses such checksums in HTTP.</source>
          <target state="translated">MIME에서는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2049#section-4&quot;&gt;[RFC2049]의 섹션 4에&lt;/a&gt; 설명 된대로 인터넷 메일 본문 부분을 전송하기 전에 정식 형식으로 변환해야 합니다. 이 문서의 &lt;a href=&quot;#section-3.1.1.3&quot;&gt;3.1.1.3 절&lt;/a&gt; 은 HTTP를 통해 전송 될 때 &quot;텍스트&quot;미디어 유형의 하위 유형에 허용되는 양식을 설명합니다. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC2046&lt;/a&gt; ]은 &quot;텍스트&quot;유형의 컨텐츠가 CRLF로 줄 바꿈을 나타내며 줄 바꿈 시퀀스 외부에서 CR 또는 LF를 사용하는 것을 금지합니다. HTTP를 사용하면 CRLF, Bare CR 및 Bare LF가 텍스트 내용 내의 줄 바꿈을 나타낼 수 있습니다. HTTP에서 엄격한 MIME 환경으로의 프록시 또는 게이트웨이 는이 문서의 &lt;a href=&quot;#section-3.1.1.3&quot;&gt;3.1.1.3 절에&lt;/a&gt; 설명 된 텍스트 미디어 유형 내의 모든 줄 바꿈 을 &lt;a href=&quot;https://tools.ietf.org/html/rfc2049&quot;&gt;RFC 2049로 변환해야합니다.&lt;/a&gt;표준 형태의 CRLF. 그러나 콘텐츠 인코딩이 존재하고 HTTP에서 8 진수 13과 10을 사용하지 않는 일부 문자 집합을 사용하여 CR과 LF를 각각 표현할 수 있기 때문에 이는 복잡 할 수 있습니다. 원본 콘텐츠가 이미 정식 형식이 아닌 한 변환하면 원본 콘텐츠에 적용된 암호화 체크섬이 손상됩니다. 따라서 HTTP에서 이러한 체크섬을 사용하는 컨텐츠에는 표준 형식이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="dc3173f339d6234c3d312054225c8bdaf39b65b0" translate="yes" xml:space="preserve">
          <source>MIME sniffing</source>
          <target state="translated">MIME 스니핑</target>
        </trans-unit>
        <trans-unit id="8c6307bfb3b795f533739b8404318fa008b26432" translate="yes" xml:space="preserve">
          <source>MIME type</source>
          <target state="translated">MIME 유형</target>
        </trans-unit>
        <trans-unit id="a4195024d58b7afd14c9753b91c2a9db35d2b08f" translate="yes" xml:space="preserve">
          <source>MIME types</source>
          <target state="translated">MIME 유형</target>
        </trans-unit>
        <trans-unit id="85b225fe3d478022bad59031409ac72b140a5366" translate="yes" xml:space="preserve">
          <source>MIME types are case-insensitive but are traditionally written in lowercase, with the exception of parameter values, whose case may or may not have specific meaning.</source>
          <target state="translated">MIME 유형은 대소 문자를 구분하지 않지만 일반적으로 대소 문자가 특정 의미를 가질 수도 있고 없을 수도있는 매개 변수 값을 제외하고는 소문자로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c3957f21878ad7ce2b26fefff8051376805431e8" translate="yes" xml:space="preserve">
          <source>MIME types are case-insensitive but traditionally written in lowercase.</source>
          <target state="translated">MIME 형식은 대소 문자를 구분하지만 전통적으로 소문자로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b860a02c04e9037685ceb44ac49fc8833ef95f3c" translate="yes" xml:space="preserve">
          <source>MIME types are not the only way to convey document type information:</source>
          <target state="translated">MIME 유형이 문서 유형 정보를 전달하는 유일한 방법은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4da8182b81c1bb802c3acafa674af9adc81313c0" translate="yes" xml:space="preserve">
          <source>MIME types: Complete list of MIME types</source>
          <target state="translated">MIME 유형 : MIME 유형의 전체 목록</target>
        </trans-unit>
        <trans-unit id="148704e082bf337e21217553e9d3d3709aea42bf" translate="yes" xml:space="preserve">
          <source>MKCOL creates a new collection resource at the location specified by
   the Request-URI.  If the Request-URI is already mapped to a resource,
   then the MKCOL MUST fail.  During MKCOL processing, a server MUST
   make the Request-URI an internal member of its parent collection,
   unless the Request-URI is &quot;/&quot;.  If no such ancestor exists, the
   method MUST fail.  When the MKCOL operation creates a new collection
   resource, all ancestors MUST already exist, or the method MUST fail
   with a 409 (Conflict) status code.  For example, if a request to
   create collection /a/b/c/d/ is made, and /a/b/c/ does not exist, the
   request must fail.

   When MKCOL is invoked without a request body, the newly created
   collection SHOULD have no members. 

   A MKCOL request message may contain a message body.  The precise
   behavior of a MKCOL request when the body is present is undefined,
   but limited to creating collections, members of a collection, bodies
   of members, and properties on the collections or members.  If the
   server receives a MKCOL request entity type it does not support or
   understand, it MUST respond with a 415 (Unsupported Media Type)
   status code.  If the server decides to reject the request based on
   the presence of an entity or the type of an entity, it should use the
   415 (Unsupported Media Type) status code.

   This method is idempotent, but not safe (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-9.1&quot;&gt;Section&amp;nbsp;9.1 of
   [RFC2616]&lt;/a&gt;).  Responses to this method MUST NOT be cached.</source>
          <target state="translated">MKCOL은 Request-URI로 지정된 위치에 새 콜렉션 자원을 작성합니다. Request-URI가 이미 자원에 맵핑 된 경우 MKCOL은 실패해야합니다. MKCOL 처리 중에 Request-URI가 &quot;/&quot;가 아닌 한, 서버는 반드시 Request-URI를 상위 컬렉션의 내부 구성원으로 만들어야합니다. 그러한 조상이 존재하지 않으면, 방법은 반드시 실패해야한다. MKCOL 오퍼레이션이 새 콜렉션 자원을 작성할 때 모든 조상이 이미 존재해야하거나 메소드가 409 (충돌) 상태 코드와 함께 실패해야합니다. 예를 들어, / a / b / c / d / 콜렉션 작성 요청이 작성되고 / a / b / c /가 존재하지 않으면 요청이 실패해야합니다. 요청 본문없이 MKCOL을 호출 할 때 새로 생성 된 컬렉션에는 멤버가 없어야합니다 (SHOULD). MKCOL 요청 메시지는 메시지 본문을 포함 할 수 있습니다.본문이있을 때 MKCOL 요청의 정확한 동작은 정의되어 있지 않지만 콜렉션, 콜렉션 멤버, 멤버 본문 및 콜렉션 또는 멤버에 대한 특성 작성으로 제한됩니다. 서버가 지원하지 않거나 이해하지 못하는 MKCOL 요청 엔티티 유형을 수신하면 415 (지원되지 않는 매체 유형) 상태 코드로 응답해야합니다. 서버가 엔티티 존재 또는 엔티티 유형에 따라 요청을 거부하기로 결정한 경우 415 (지원되지 않는 매체 유형) 상태 코드를 사용해야합니다. 이 방법은 dem 등이지만 안전하지는 않습니다 (참조서버가 지원하지 않거나 이해하지 못하는 MKCOL 요청 엔티티 유형을 수신하면 415 (지원되지 않는 매체 유형) 상태 코드로 응답해야합니다. 서버가 엔티티 존재 또는 엔티티 유형에 따라 요청을 거부하기로 결정한 경우 415 (지원되지 않는 매체 유형) 상태 코드를 사용해야합니다. 이 방법은 dem 등이지만 안전하지는 않습니다 (참조서버가 지원하지 않거나 이해하지 못하는 MKCOL 요청 엔티티 유형을 수신하면 415 (지원되지 않는 매체 유형) 상태 코드로 응답해야합니다. 서버가 엔티티 존재 또는 엔티티 유형에 따라 요청을 거부하기로 결정한 경우 415 (지원되지 않는 매체 유형) 상태 코드를 사용해야합니다. 이 방법은 dem 등이지만 안전하지는 않습니다 (참조&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-9.1&quot;&gt;[RFC2616] 섹션 9.1&lt;/a&gt; ). 이 방법에 대한 응답은 캐시해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d34f4fbf660e43b546f36ad8f422be2614555dcd" translate="yes" xml:space="preserve">
          <source>MP3 audio</source>
          <target state="translated">MP3 오디오</target>
        </trans-unit>
        <trans-unit id="2a7163944345c31e87c18d422da826101ae9abe5" translate="yes" xml:space="preserve">
          <source>MPEG Video</source>
          <target state="translated">MPEG 비디오</target>
        </trans-unit>
        <trans-unit id="76ffb6887eba7a2790b86a61c748c98d3d1e8f9c" translate="yes" xml:space="preserve">
          <source>MPEG transport stream</source>
          <target state="translated">MPEG 전송 스트림</target>
        </trans-unit>
        <trans-unit id="6856eb8cd7bbe158e86b90aca7643f9eb2028c7e" translate="yes" xml:space="preserve">
          <source>MS Embedded OpenType fonts</source>
          <target state="translated">MS Embedded OpenType 글꼴</target>
        </trans-unit>
        <trans-unit id="6ee635274712baef8781c8d8f996b059e9c0d4e0" translate="yes" xml:space="preserve">
          <source>Mac OS X on Intel x86 or x86_64</source>
          <target state="translated">Intel x86 또는 x86_64의 Mac OS X</target>
        </trans-unit>
        <trans-unit id="973e3aaf5ab321c24d7296e6f425c45df453a860" translate="yes" xml:space="preserve">
          <source>Mac OS X on PowerPC</source>
          <target state="translated">PowerPC의 Mac OS X</target>
        </trans-unit>
        <trans-unit id="70bafc26930c7270181eba7fdab16bde2ac8ad22" translate="yes" xml:space="preserve">
          <source>Mac OS X version</source>
          <target state="translated">Mac OS X 버전</target>
        </trans-unit>
        <trans-unit id="c0fd8053739db52e4d7f47348c57c75e3099c202" translate="yes" xml:space="preserve">
          <source>Macintosh</source>
          <target state="translated">Macintosh</target>
        </trans-unit>
        <trans-unit id="cd1cb4ddbb5f5f302fe8ca08ece123325b6c28dd" translate="yes" xml:space="preserve">
          <source>Magic numbers. The syntax of different formats allows file-type inference by looking at their byte structure. For example, GIF files start with the &lt;code&gt;47 49 46 38 39&lt;/code&gt; hexadecimal value (&lt;code&gt;GIF89&lt;/code&gt;), and PNG files with &lt;code&gt;89 50 4E 47&lt;/code&gt; (&lt;code&gt;.PNG&lt;/code&gt;). Not all file types have magic numbers, so this is not 100% reliable either.</source>
          <target state="translated">마법의 숫자. 다른 형식의 구문은 바이트 구조를보고 파일 형식 유추를 허용합니다. 예를 들어 GIF 파일은 &lt;code&gt;47 49 46 38 39&lt;/code&gt; 16 진수 값 ( &lt;code&gt;GIF89&lt;/code&gt; )으로 시작하고 PNG 파일은 &lt;code&gt;89 50 4E 47&lt;/code&gt; ( &lt;code&gt;.PNG&lt;/code&gt; )입니다. 모든 파일 유형에 마법 번호가있는 것은 아니므로 100 % 신뢰할 수있는 것도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="09abc5b909a0fed32e43a7d4b0340a7125fc3cd6" translate="yes" xml:space="preserve">
          <source>Magnetometer</source>
          <target state="translated">Magnetometer</target>
        </trans-unit>
        <trans-unit id="37e6025eda2c374b5e1db64db721c1f61e0d7e8c" translate="yes" xml:space="preserve">
          <source>Make a &lt;a href=&quot;#Simple_requests&quot;&gt;simple request&lt;/a&gt; (using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; for the Fetch API, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL&quot;&gt;&lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt;&lt;/a&gt;) to determine what URL the real preflighted request would end up at.</source>
          <target state="translated">화장 &lt;a href=&quot;#Simple_requests&quot;&gt;간단한 요청을&lt;/a&gt; (사용 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/url&quot;&gt; &lt;code&gt;Response.url&lt;/code&gt; 를&lt;/a&gt; 페치 API에 대한, 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseURL&quot;&gt; &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; 는&lt;/a&gt; ) URL이 실제 preflighted 요청에 끝날 것입니다 어떤 결정하기 위해.</target>
        </trans-unit>
        <trans-unit id="db608f8e24798e21b8d041453cb94e74e2d2499f" translate="yes" xml:space="preserve">
          <source>Make another request (the &amp;ldquo;real&amp;rdquo; request) using the URL you obtained from &lt;code&gt;Response.url&lt;/code&gt; or &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; in the first step.</source>
          <target state="translated">첫 번째 단계 에서 &lt;code&gt;Response.url&lt;/code&gt; 또는 &lt;code&gt;XMLHttpRequest.responseURL&lt;/code&gt; 에서 얻은 URL을 사용하여 다른 요청 ( &quot;실제&quot;요청)을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="05029130870878b79b7335852828d865e01799dc" translate="yes" xml:space="preserve">
          <source>Make sure your code only uses the permitted HTTP methods when accessing the service.</source>
          <target state="translated">서비스에 액세스 할 때 코드가 허용 된 HTTP 메소드 만 사용하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="85896aa2638b32ee0bc92737649fbc2fda06cf32" translate="yes" xml:space="preserve">
          <source>Make your page work for both</source>
          <target state="translated">두 페이지 모두에서 페이지 작동</target>
        </trans-unit>
        <trans-unit id="f989199f5291676ea54cc4b082182819742c121f" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and applies the method only if the stored resource doesn't match any of the given ETags. This is used to update caches (for safe requests), or to prevent to upload a new resource when one is already existing.</source>
          <target state="translated">저장된 리소스가 지정된 ETag와 일치하지 않는 경우에만 요청을 조건부로 만들고 메서드를 적용합니다. 캐시를 업데이트하거나 (안전한 요청을 위해) 이미 존재하는 경우 새 리소스를 업로드하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="44bbd70969c3a3e1d64163feeed015fad79d423a" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and applies the method only if the stored resource matches one of the given ETags.</source>
          <target state="translated">저장된 자원이 주어진 ETag 중 하나와 일치하는 경우에만 요청을 조건부로 작성하고 메소드를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="169b3478c02104479a6e6958b18af330ce9e16b1" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and expects the entity to be transmitted only if it has been modified after the given date. This is used to transmit data only when the cache is out of date.</source>
          <target state="translated">요청을 조건부로 지정하고 주어진 날짜 이후에 수정 된 경우에만 엔티티가 전송 될 것으로 예상합니다. 캐시가 오래되었을 때만 데이터를 전송하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09d74b4e76e350446f9d2ba5e44f9fb97d8901cd" translate="yes" xml:space="preserve">
          <source>Makes the request conditional and expects the entity to be transmitted only if it has not been modified after the given date. This is used to ensure the coherence of a new fragment of a specific range with previous ones, or to implement an optimistic concurrency control system when modifying existing documents.</source>
          <target state="translated">요청을 조건부로 지정하고 지정된 날짜 이후에 수정하지 않은 경우에만 엔티티가 전송 될 것으로 예상합니다. 이는 이전 범위와 특정 범위의 새로운 단편의 일관성을 유지하거나 기존 문서를 수정할 때 낙관적 동시성 제어 시스템을 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7f7a333068288562b3d5298c97a47ff5d31cad69" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and applies the method only if the stored resource &lt;em&gt;doesn't&lt;/em&gt; match any of the given ETags. This is used to update caches (for safe requests), or to prevent to upload a new resource when one already exists.</source>
          <target state="translated">요청을 조건부로 만들고 저장된 리소스 &lt;em&gt;가&lt;/em&gt; 지정된 ETag와 일치 &lt;em&gt;하지 않는&lt;/em&gt; 경우에만 메서드를 적용합니다 . 이것은 캐시를 업데이트하거나 (안전한 요청을 위해) 새 리소스가 이미 존재하는 경우 업로드를 방지하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="096d2ea5d3c4755584b006d2100bd34959cc8db1" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and applies the method only if the stored resource matches one of the given ETags.</source>
          <target state="translated">요청을 조건부로 만들고 저장된 리소스가 지정된 ETag 중 하나와 일치하는 경우에만 메서드를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="1dbe6e81622971be5c832e4b1e9abaa33bb8ba48" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and expects the entity to be transmitted only if it has been modified after the given date. This is used to transmit data only when the cache is out of date.</source>
          <target state="translated">요청을 조건부로 만들고 주어진 날짜 이후에 수정 된 경우에만 엔티티가 전송 될 것으로 예상합니다. 캐시가 오래된 경우에만 데이터를 전송하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ee09c9d066e168f9305938a8aef194729c4bca51" translate="yes" xml:space="preserve">
          <source>Makes the request conditional, and expects the entity to be transmitted only if it has not been modified after the given date. This ensures the coherence of a new fragment of a specific range with previous ones, or to implement an optimistic concurrency control system when modifying existing documents.</source>
          <target state="translated">요청을 조건부로 만들고 주어진 날짜 이후에 수정되지 않은 경우에만 엔티티가 전송 될 것으로 예상합니다. 이를 통해 특정 범위의 새 조각과 이전 조각의 일관성을 보장하거나 기존 문서를 수정할 때 낙관적 인 동시성 제어 시스템을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eae6a4d1eb4ec4b7a532a8a7ad3964da33fdb3a" translate="yes" xml:space="preserve">
          <source>Making the best of user agent sniffing</source>
          <target state="translated">사용자 에이전트 스니핑을 최대한 활용</target>
        </trans-unit>
        <trans-unit id="ee449b1a1e7a790032bd3390fdea7fc50fbb85e5" translate="yes" xml:space="preserve">
          <source>Mandatory upgrade</source>
          <target state="translated">필수 업그레이드</target>
        </trans-unit>
        <trans-unit id="aa95526dca52047ea17840984f5ae03c1700be81" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor&quot;&gt;developer tools' network panels&lt;/a&gt; of browsers create extraneous requests leading to &lt;code&gt;304&lt;/code&gt; responses, so that access to the local cache is visible to developers.</source>
          <target state="translated">많은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor&quot;&gt;개발자 도구&lt;/a&gt; 의 브라우저 네트워크 패널 은 &lt;code&gt;304&lt;/code&gt; 개의 응답으로 이어지는 외부 요청을 생성 하므로 로컬 캐시에 대한 액세스가 개발자에게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c2d53d901c528a1965720abe35932f4bbca17a" translate="yes" xml:space="preserve">
          <source>Many WebDAV clients that have already been implemented have account
   settings (similar to the way email clients store IMAP account
   settings).  Thus, the WebDAV client would be able to authenticate
   with its first couple requests to the server, provided it had a way
   to get the authentication challenge from the server with realm name, 

   nonce, and other challenge information.  Note that the results of
   some requests might vary according to whether or not the client is
   authenticated -- a PROPFIND might return more visible resources if
   the client is authenticated, yet not fail if the client is anonymous.

   There are a number of ways the client might be able to trigger the
   server to provide an authentication challenge.  This appendix
   describes a couple approaches that seem particularly likely to work.

   The first approach is to perform a request that ought to require
   authentication.  However, it's possible that a server might handle
   any request even without authentication, so to be entirely safe, the
   client could add a conditional header to ensure that even if the
   request passes permissions checks, it's not actually handled by the
   server.  An example of following this approach would be to use a PUT
   request with an &quot;If-Match&quot; header with a made-up ETag value.  This
   approach might fail to result in an authentication challenge if the
   server does not test authorization before testing conditionals as is
   required (see &lt;a href=&quot;#section-8.5&quot;&gt;Section 8.5&lt;/a&gt;), or if the server does not need to test
   authorization.

   Example - forcing auth challenge with write request

   &amp;gt;&amp;gt;Request

     PUT /forceauth.txt HTTP/1.1
     Host: www.example.com
     If-Match: &quot;xxx&quot;
     Content-Type: text/plain
     Content-Length: 0


   The second approach is to use an Authorization header (defined in
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC2617&lt;/a&gt;]), which is likely to be rejected by the server but which
   will then prompt a proper authentication challenge.  For example, the
   client could start with a PROPFIND request containing an
   Authorization header containing a made-up Basic userid:password
   string or with actual plausible credentials.  This approach relies on
   the server responding with a &quot;401 Unauthorized&quot; along with a
   challenge if it receives an Authorization header with an unrecognized
   username, invalid password, or if it doesn't even handle Basic
   authentication.  This seems likely to work because of the
   requirements of &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC 2617&lt;/a&gt;: 

   &quot;If the origin server does not wish to accept the credentials sent
   with a request, it SHOULD return a 401 (Unauthorized) response.  The
   response MUST include a WWW-Authenticate header field containing at
   least one (possibly new) challenge applicable to the requested
   resource.&quot;

   There's a slight problem with implementing that recommendation in
   some cases, because some servers do not even have challenge
   information for certain resources.  Thus, when there's no way to
   authenticate to a resource or the resource is entirely publicly
   available over all accepted methods, the server MAY ignore the
   Authorization header, and the client will presumably try again later.

   Example - forcing auth challenge with Authorization header

   &amp;gt;&amp;gt;Request

     PROPFIND /docs/ HTTP/1.1
     Host: www.example.com
     Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==
     Content-type: application/xml; charset=&quot;utf-8&quot;
     Content-Length: xxxx

     [body omitted]</source>
          <target state="translated">이미 구현 된 많은 WebDAV 클라이언트에는 계정 설정이 있습니다 (이메일 클라이언트가 IMAP 계정 설정을 저장하는 방식과 유사). 따라서 WebDAV 클라이언트는 영역 이름, nonce 및 기타 시도 정보를 사용하여 서버에서 인증 시도를 얻는 방법이 있다면 서버에 대한 첫 번째 커플 요청으로 인증 할 수 있습니다. 일부 요청의 결과는 클라이언트의 인증 여부에 따라 달라질 수 있습니다. PROPFIND는 클라이언트가 인증 된 경우 더 많은 가시적 리소스를 반환하지만 클라이언트가 익명 인 경우 실패하지 않을 수 있습니다. 클라이언트가 인증 요청을 제공하기 위해 서버를 트리거 할 수있는 여러 가지 방법이 있습니다. 이 부록에서는 특히 효과가있을 것으로 보이는 몇 가지 접근 방식에 대해 설명합니다.첫 번째 방법은 인증이 필요한 요청을 수행하는 것입니다. 그러나 서버가 인증 없이도 모든 요청을 처리 할 수 ​​있으므로 완전히 안전하기 위해 클라이언트는 조건부 헤더를 추가하여 요청이 권한 검사를 통과하더라도 서버가 실제로 처리하지 않도록 할 수 있습니다. 이 방법을 따르는 예는 구성 ETag 값이있는 &quot;If-Match&quot;헤더와 함께 PUT 요청을 사용하는 것입니다. 필요한 경우 조건을 테스트하기 전에 서버가 권한 부여를 테스트하지 않으면이 방법으로 인증 시도가 실패 할 수 있습니다 (참조클라이언트는 요청이 권한 검사를 통과하더라도 실제로는 서버에 의해 처리되지 않도록 조건부 헤더를 추가 할 수 있습니다. 이 방법을 따르는 예는 구성 ETag 값이있는 &quot;If-Match&quot;헤더와 함께 PUT 요청을 사용하는 것입니다. 필요한 경우 조건을 테스트하기 전에 서버가 권한 부여를 테스트하지 않으면이 방법으로 인증 시도가 실패 할 수 있습니다 (참조클라이언트는 요청이 권한 검사를 통과하더라도 실제로는 서버에 의해 처리되지 않도록 조건부 헤더를 추가 할 수 있습니다. 이 방법을 따르는 예는 구성 ETag 값이있는 &quot;If-Match&quot;헤더와 함께 PUT 요청을 사용하는 것입니다. 필요한 경우 조건을 테스트하기 전에 서버가 권한 부여를 테스트하지 않으면이 방법으로 인증 시도가 실패 할 수 있습니다 (참조필요한 경우 조건을 테스트하기 전에 서버가 권한 부여를 테스트하지 않으면이 방법으로 인증 시도가 실패 할 수 있습니다 (참조필요한 경우 조건을 테스트하기 전에 서버가 권한 부여를 테스트하지 않으면이 방법으로 인증 시도가 실패 할 수 있습니다 (참조&lt;a href=&quot;#section-8.5&quot;&gt;섹션 8.5&lt;/a&gt; ) 또는 서버가 인증을 테스트 할 필요가없는 경우 예-쓰기 요청으로 인증 요청 강제하기 &amp;gt;&amp;gt; 요청 PUT /forceauth.txt HTTP / 1.1 호스트 : www.example.com If-Match : &quot;xxx&quot;Content-Type : text / plain Content-Length : 0 두 번째 방법은 승인 헤더 사용 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC2617에&lt;/a&gt; 정의 됨)]), 이는 서버에 의해 거부 될 수 있지만 적절한 인증 시도를 촉발합니다. 예를 들어, 클라이언트는 기본 Basic userid : password 문자열을 포함하는 Authorization 헤더 또는 실제 그럴듯한 자격 증명을 포함하는 PROPFIND 요청으로 시작할 수 있습니다. 이 방법은 인식 할 수없는 사용자 이름, 유효하지 않은 암호로 인증 헤더를 받거나 기본 인증을 처리하지 못하는 경우 &quot;401 Unauthorized&quot;로 응답하는 서버를 사용합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc2617&quot;&gt;RFC 2617&lt;/a&gt; 의 요구 사항으로 인해 작동하는 것 같습니다.: &quot;원본 서버가 요청과 함께 전송 된 자격 증명을 수락하지 않으려면 401 (권한 없음) 응답을 반환해야합니다. 응답에는 최소한 하나의 (신규) 도전 과제를 포함하는 WWW 인증 헤더 필드가 포함되어야합니다. 요청 된 리소스. &quot; 일부 서버에는 특정 리소스에 대한 챌린지 정보가 없기 때문에 권장 사항을 구현하는 데 약간의 문제가 있습니다. 따라서 자원을 인증 할 방법이 없거나 허용 된 모든 방법을 통해 자원을 공개적으로 사용할 수있는 경우 서버는 Authorization 헤더를 무시할 수 있으며 클라이언트는 나중에 다시 시도합니다. 예-인증 헤더 &amp;gt;&amp;gt; Request PROPFIND / docs / HTTP / 1.1 호스트를 사용하여 인증 요청 강제 실행 : www.example.com 인증 : 기본 QWxhZGRpbjpvcGVuIHNlc2FtZQ == 컨텐츠 유형 : application / xml; charset = &quot;utf-8&quot;Content-Length : xxxx [본문 생략]</target>
        </trans-unit>
        <trans-unit id="c2f40e3ce20552730e2da9b44cf88aa049c3f277" translate="yes" xml:space="preserve">
          <source>Many clients also let you avoid the login prompt by using an encoded URL containing the username and the password like this:</source>
          <target state="translated">많은 클라이언트는 다음과 같이 사용자 이름과 비밀번호를 포함하는 인코딩 된 URL을 사용하여 로그인 프롬프트를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="283c9af22dd90c8866e71dddbfce0cce3700a5b6" translate="yes" xml:space="preserve">
          <source>Many of the request header fields for proactive negotiation use a
   common parameter, named &quot;q&quot; (case-insensitive), to assign a relative
   &quot;weight&quot; to the preference for that associated kind of content.  This
   weight is referred to as a &quot;quality value&quot; (or &quot;qvalue&quot;) because the
   same parameter name is often used within server configurations to
   assign a weight to the relative quality of the various
   representations that can be selected for a resource. 

   The weight is normalized to a real number in the range 0 through 1,
   where 0.001 is the least preferred and 1 is the most preferred; a
   value of 0 means &quot;not acceptable&quot;.  If no &quot;q&quot; parameter is present,
   the default weight is 1.

     weight = OWS &quot;;&quot; OWS &quot;q=&quot; qvalue
     qvalue = ( &quot;0&quot; [ &quot;.&quot; 0*3DIGIT ] )
            / ( &quot;1&quot; [ &quot;.&quot; 0*3(&quot;0&quot;) ] )

   A sender of qvalue MUST NOT generate more than three digits after the
   decimal point.  User configuration of these values ought to be
   limited in the same fashion.</source>
          <target state="translated">사전 협상을위한 많은 요청 헤더 필드는 &quot;q&quot;(대소 문자를 구분하지 않음)라는 공통 매개 변수를 사용하여 관련 &quot;가중치&quot;를 관련 콘텐츠 종류에 대한 기본 설정에 할당합니다. 이 가중치는 &quot;품질 값&quot;(또는 &quot;qvalue&quot;)이라고합니다. 동일한 매개 변수 이름이 종종 서버 구성 내에서 사용되어 자원에 대해 선택할 수있는 다양한 표현의 상대적인 품질에 가중치를 할당하기 때문입니다. 가중치는 0 내지 1 범위의 실수로 정규화되는데, 0.001이 가장 바람직하지 않고 1이 가장 바람직하다. 값이 0이면 &quot;허용되지 않음&quot;을 의미합니다. &quot;q&quot;매개 변수가 없으면 기본 가중치는 1입니다. weight = OWS &quot;;&quot; OWS &quot;q =&quot;qvalue qvalue = ( &quot;0&quot;[ &quot;.&quot; 0 * 3DIGIT]) / ( &quot;1&quot;[ &quot;.&quot;0 * 3 ( &quot;0&quot;)]) qvalue의 발신자는 소수점 다음에 3 자리를 초과하여 생성해서는 안됩니다. 이러한 값의 사용자 구성은 동일한 방식으로 제한되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2fec0947cbf922d8434fc8fe01a93bf6110f4bdb" translate="yes" xml:space="preserve">
          <source>Many user agents make it possible for users to override the basic
   caching mechanisms. For example, the user agent might allow the user
   to specify that cached entities (even explicitly stale ones) are
   never validated. Or the user agent might habitually add &quot;Cache-
   Control: max-stale=3600&quot; to every request. The user agent SHOULD NOT
   default to either non-transparent behavior, or behavior that results
   in abnormally ineffective caching, but MAY be explicitly configured
   to do so by an explicit action of the user.

   If the user has overridden the basic caching mechanisms, the user
   agent SHOULD explicitly indicate to the user whenever this results in
   the display of information that might not meet the server's
   transparency requirements (in particular, if the displayed entity is
   known to be stale). Since the protocol normally allows the user agent
   to determine if responses are stale or not, this indication need only
   be displayed when this actually happens. The indication need not be a
   dialog box; it could be an icon (for example, a picture of a rotting
   fish) or some other indicator.

   If the user has overridden the caching mechanisms in a way that would
   abnormally reduce the effectiveness of caches, the user agent SHOULD
   continually indicate this state to the user (for example, by a
   display of a picture of currency in flames) so that the user does not
   inadvertently consume excess resources or suffer from excessive
   latency.</source>
          <target state="translated">많은 사용자 에이전트가 사용자가 기본 캐싱 메커니즘을 대체 할 수 있도록합니다. 예를 들어, 사용자 에이전트는 사용자가 캐시 된 엔티티 (명시 적으로 오래된 엔티티도)의 유효성을 검증하지 않도록 지정할 수 있습니다. 또는 사용자 에이전트는 습관적으로 모든 요청에 ​​&quot;캐시 제어 : max-stale = 3600&quot;을 추가 할 수 있습니다. 사용자 에이전트는 비 투명 행위 또는 비정상적으로 비효율적 인 캐싱을 초래하는 행위로 기본 설정되어서는 안되지만, 사용자의 명시 적 조치에 의해 명시 적으로 구성 될 수 있습니다. 사용자가 기본 캐싱 메커니즘을 재정의 한 경우, 사용자 에이전트는 서버의 투명성 요구 사항을 충족하지 못할 수있는 정보가 표시 될 때마다 (특히 표시된 엔터티가 오래된 것으로 알려진 경우) 사용자에게 명시 적으로 표시해야합니다.프로토콜은 일반적으로 사용자 에이전트가 응답이 오래되었는지 여부를 판별 할 수있게하므로 실제로 발생하는 경우에만이 표시를 표시하면됩니다. 표시는 대화 상자 일 필요는 없습니다. 아이콘 (예 : 썩은 물고기 그림) 또는 다른 표시 기일 수 있습니다. 사용자가 캐시의 효율성을 비정상적으로 감소시키는 방식으로 캐싱 메커니즘을 재정의 한 경우, 사용자 에이전트는 사용자에게이 상태를 지속적으로 표시해야합니다 (예 : 화염 그림 표시). 실수로 과도한 리소스를 소비하거나 과도한 대기 시간이 발생하지 않습니다.표시는 대화 상자 일 필요는 없습니다. 아이콘 (예 : 썩은 물고기 그림) 또는 다른 표시 기일 수 있습니다. 사용자가 캐시의 효율성을 비정상적으로 감소시키는 방식으로 캐싱 메커니즘을 재정의 한 경우, 사용자 에이전트는 사용자에게이 상태를 지속적으로 표시해야합니다 (예 : 화염 그림 표시). 실수로 과도한 리소스를 소비하거나 과도한 대기 시간이 발생하지 않습니다.표시는 대화 상자 일 필요는 없습니다. 아이콘 (예 : 썩은 물고기 그림) 또는 다른 표시 기일 수 있습니다. 사용자가 캐시의 효율성을 비정상적으로 감소시키는 방식으로 캐싱 메커니즘을 재정의 한 경우, 사용자 에이전트는 사용자에게이 상태를 지속적으로 표시해야합니다 (예 : 화염 그림 표시). 실수로 과도한 리소스를 소비하거나 과도한 대기 시간이 발생하지 않습니다.화염에 화폐 그림을 표시하여) 사용자가 실수로 초과 리소스를 소비하지 않거나 대기 시간이 지나치게 길지 않도록합니다.화염에 화폐 그림을 표시하여) 사용자가 실수로 초과 리소스를 소비하지 않거나 대기 시간이 지나치게 길지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="91d901c4ba5ec936d334c6e339e3c5a344ea50ad" translate="yes" xml:space="preserve">
          <source>Many web sites customize the look of a 404 page to be more helpful to the user and provide guidance on what to do next. Apache servers can be configured using an &lt;code&gt;.htaccess&lt;/code&gt; file and a code snippet like the following example.</source>
          <target state="translated">많은 웹 사이트에서 404 페이지의 모양을 사용자 지정하여 사용자에게보다 도움이되고 다음에 수행 할 작업에 대한 지침을 제공합니다. Apache 서버는 &lt;code&gt;.htaccess&lt;/code&gt; 파일과 다음 예제와 같은 코드 스 니펫을 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a17963b7961c54316ccf166b602f9000c64c4f9a" translate="yes" xml:space="preserve">
          <source>Matches any content encoding not already listed in the header. This is the default value if the header is not present. It doesn't mean that any algorithm is supported; merely that no preference is expressed.</source>
          <target state="translated">헤더에 아직 나열되지 않은 콘텐츠 인코딩과 일치합니다. 헤더가없는 경우 이것이 기본값입니다. 모든 알고리즘이 지원되는 것은 아닙니다. 단지 선호도가 표현되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="380542fdbbc688e8e6c3dd27ea8f678b7e9f1ca5" translate="yes" xml:space="preserve">
          <source>Max-Age=&amp;lt;number&amp;gt; Optional</source>
          <target state="translated">최대 연령 = &amp;lt;번호&amp;gt; 선택</target>
        </trans-unit>
        <trans-unit id="1f82181c1557956a09c87927dc4ce27ccc4098f3" translate="yes" xml:space="preserve">
          <source>Max-Forwards (RFC 2616)</source>
          <target state="translated">최대 전달 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="2b2d8c8ce404909b199641932433093016cba38f" translate="yes" xml:space="preserve">
          <source>Max-Forwards (RFC 7231)</source>
          <target state="translated">최대 전달 (RFC 7231)</target>
        </trans-unit>
        <trans-unit id="02e6cf952f41741b2d0d0521bab1b080b79a5956" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds the results can be cached.</source>
          <target state="translated">결과를 캐시 할 수있는 최대 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="c94f479833c5d401cffdfa7afe6c9c2d56448019" translate="yes" xml:space="preserve">
          <source>May</source>
          <target state="translated">May</target>
        </trans-unit>
        <trans-unit id="cfef933803d5e6538306daeac1d4318fa9cda10c" translate="yes" xml:space="preserve">
          <source>May be set by hosting environments or other frameworks and contains information about them while not providing any usefulness to the application or its visitors. Unset this header to avoid exposing potential vulnerabilities.</source>
          <target state="translated">환경 또는 기타 프레임 워크를 호스팅하여 설정할 수 있으며 응용 프로그램이나 방문자에게 유용하지 않은 정보를 포함합니다. 잠재적 인 취약점이 노출되지 않도록이 헤더를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="0d2e9b5ce7309f95a7890febc6e837b7f6d73bb0" translate="yes" xml:space="preserve">
          <source>Media formats supported by the HTML audio and video elements</source>
          <target state="translated">HTML 오디오 및 비디오 요소가 지원하는 미디어 형식</target>
        </trans-unit>
        <trans-unit id="e73c2e204a43c925f331f4a9f4aa965ffa11300d" translate="yes" xml:space="preserve">
          <source>Media is only allowed from media1.com and media2.com (and not from subdomains of those sites).</source>
          <target state="translated">미디어는 media1.com 및 media2.com에서만 허용되며 해당 사이트의 하위 도메인에서는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="62da738dbc54cd00c3ecc7aaa0efba6cf80eed5e" translate="yes" xml:space="preserve">
          <source>Message Format (RFC 7230)</source>
          <target state="translated">메시지 형식 (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="cd72d478c14d1e61f4d253f077b3b5817e52cd02" translate="yes" xml:space="preserve">
          <source>Message Routing (RFC 7230)</source>
          <target state="translated">메시지 라우팅 (RFC 7230)</target>
        </trans-unit>
        <trans-unit id="ed576c67d1fde583bfb7d4b0af04da9e09035d6c" translate="yes" xml:space="preserve">
          <source>Message body information</source>
          <target state="translated">메시지 본문 정보</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="f361b914c2431b8337949e5a832a53f9c04c4160" translate="yes" xml:space="preserve">
          <source>Messages are parsed using a generic algorithm, independent of the
   individual header field names.  The contents within a given field
   value are not parsed until a later stage of message interpretation
   (usually after the message's entire header section has been
   processed).  Consequently, this specification does not use ABNF rules
   to define each &quot;Field-Name: Field Value&quot; pair, as was done in
   previous editions.  Instead, this specification uses ABNF rules that
   are named according to each registered field name, wherein the rule
   defines the valid grammar for that field's corresponding field values
   (i.e., after the field-value has been extracted from the header
   section by a generic field parser).

   No whitespace is allowed between the header field-name and colon.  In
   the past, differences in the handling of such whitespace have led to
   security vulnerabilities in request routing and response handling.  A
   server MUST reject any received request message that contains
   whitespace between a header field-name and colon with a response code
   of 400 (Bad Request).  A proxy MUST remove any such whitespace from a
   response message before forwarding the message downstream.

   A field value might be preceded and/or followed by optional
   whitespace (OWS); a single SP preceding the field-value is preferred
   for consistent readability by humans.  The field value does not
   include any leading or trailing whitespace: OWS occurring before the
   first non-whitespace octet of the field value or after the last
   non-whitespace octet of the field value ought to be excluded by
   parsers when extracting the field value from a header field.

   Historically, HTTP header field values could be extended over
   multiple lines by preceding each extra line with at least one space
   or horizontal tab (obs-fold).  This specification deprecates such
   line folding except within the message/http media type
   (&lt;a href=&quot;#section-8.3.1&quot;&gt;Section 8.3.1&lt;/a&gt;).  A sender MUST NOT generate a message that includes
   line folding (i.e., that has any field-value that contains a match to
   the obs-fold rule) unless the message is intended for packaging
   within the message/http media type. 

   A server that receives an obs-fold in a request message that is not
   within a message/http container MUST either reject the message by
   sending a 400 (Bad Request), preferably with a representation
   explaining that obsolete line folding is unacceptable, or replace
   each received obs-fold with one or more SP octets prior to
   interpreting the field value or forwarding the message downstream.

   A proxy or gateway that receives an obs-fold in a response message
   that is not within a message/http container MUST either discard the
   message and replace it with a 502 (Bad Gateway) response, preferably
   with a representation explaining that unacceptable line folding was
   received, or replace each received obs-fold with one or more SP
   octets prior to interpreting the field value or forwarding the
   message downstream.

   A user agent that receives an obs-fold in a response message that is
   not within a message/http container MUST replace each received
   obs-fold with one or more SP octets prior to interpreting the field
   value.

   Historically, HTTP has allowed field content with text in the
   ISO-8859-1 charset [&lt;a href=&quot;#ref-ISO-8859-1&quot;&gt;ISO-8859-1&lt;/a&gt;], supporting other charsets only
   through use of [&lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC2047&lt;/a&gt;] encoding.  In practice, most HTTP header
   field values use only a subset of the US-ASCII charset [&lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt;].
   Newly defined header fields SHOULD limit their field values to
   US-ASCII octets.  A recipient SHOULD treat other octets in field
   content (obs-text) as opaque data.</source>
          <target state="translated">메시지는 개별 헤더 필드 이름과 상관없이 일반 알고리즘을 사용하여 구문 분석됩니다. 주어진 필드 값 내의 내용은 메시지 해석의 나중 단계 (일반적으로 메시지의 전체 헤더 섹션이 처리 된 후)까지 구문 분석되지 않습니다. 결과적으로이 사양에서는 이전 버전 에서처럼 ABNF 규칙을 사용하여 각 &quot;Field-Name : Field Value&quot;쌍을 정의하지 않습니다. 대신이 사양은 등록 된 각 필드 이름에 따라 이름이 지정된 ABNF 규칙을 사용합니다. 여기서 규칙은 해당 필드의 해당 필드 값에 대한 유효한 문법을 ​​정의합니다 (즉, 필드 값이 일반 필드 파서에 의해 헤더 섹션에서 추출 된 후) ). 헤더 field-name과 콜론 사이에는 공백이 허용되지 않습니다. 과거에,이러한 공백 처리의 차이로 인해 요청 라우팅 및 응답 처리에서 보안 취약점이 발생했습니다. 서버는 헤더 field-name과 콜론 사이에 응답 코드 400 (Bad Request)으로 공백이 포함 된 수신 요청 메시지를 거부해야합니다. 프록시는 메시지를 다운 스트림으로 전달하기 전에 응답 메시지에서 이러한 공백을 제거해야합니다. 필드 값 앞에 선택적 공백 (OWS)이 올 수 있습니다. 사람이 일관된 가독성을 위해 필드 값 앞에 단일 SP가 선호됩니다. 필드 값에는 선행 또는 후행 공백이 포함되지 않습니다.필드 값의 첫 번째 공백이 아닌 8 진수 이전 또는 필드 값의 마지막 공백이 아닌 8 진수 이후에 발생하는 OWS는 헤더 필드에서 필드 값을 추출 할 때 파서에서 제외해야합니다. 역사적으로 HTTP 헤더 필드 값은 각 추가 줄 앞에 최소한 하나의 공백 또는 가로 탭 (가리개)이있어 여러 줄로 확장 될 수있었습니다. 이 사양은 메시지 / http 미디어 유형 (&lt;a href=&quot;#section-8.3.1&quot;&gt;섹션 8.3.1&lt;/a&gt;). 메시지 / http 미디어 유형 내에 패키징하기위한 것이 아니라면 발신자는 줄 바꿈을 포함하는 메시지를 생성하지 않아야합니다 (예 : obs-fold 규칙과 일치하는 필드 값을 가짐). 메시지 / http 컨테이너 내에 있지 않은 요청 메시지에서 겹침을 수신하는 서버는 400 (Bad Request)을 보내 메시지를 거부해야합니다. 필드 값을 해석하거나 메시지를 다운 스트림으로 전달하기 전에 하나 이상의 SP 옥텟으로 obs-fold를 수신 한 경우. 메시지 / http 컨테이너 내에없는 응답 메시지에서 겹침을 수신하는 프록시 또는 게이트웨이는 메시지를 버리고 502 (Bad Gateway) 응답으로 대체해야합니다.바람직하게는 수용 불가능한 라인 폴딩이 수신되었음을 설명하는 표현으로, 또는 필드 값을 해석하거나 메시지를 다운 스트림으로 전달하기 전에 각각의 수신 된 오버 폴딩을 하나 이상의 SP 옥텟으로 대체한다. 메시지 / http 컨테이너 내에 있지 않은 응답 메시지에서 obs-fold를 수신하는 사용자 에이전트는 필드 값을 해석하기 전에 수신 된 각 obs-fold를 하나 이상의 SP 옥텟으로 대체해야합니다. 역사적으로 HTTP는 ISO-8859-1 문자셋 [메시지 / http 컨테이너 내에 있지 않은 응답 메시지에서 obs-fold를 수신하는 사용자 에이전트는 필드 값을 해석하기 전에 수신 된 각 obs-fold를 하나 이상의 SP 옥텟으로 대체해야합니다. 역사적으로 HTTP는 ISO-8859-1 문자셋 [메시지 / http 컨테이너 내에 있지 않은 응답 메시지에서 obs-fold를 수신하는 사용자 에이전트는 필드 값을 해석하기 전에 수신 된 각 obs-fold를 하나 이상의 SP 옥텟으로 대체해야합니다. 역사적으로 HTTP는 ISO-8859-1 문자셋 [&lt;a href=&quot;#ref-ISO-8859-1&quot;&gt;ISO-8859-1&lt;/a&gt; ], [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC2047&lt;/a&gt; ] 인코딩 을 사용하는 경우에만 다른 문자 집합을 지원 합니다. 실제로 대부분의 HTTP 헤더 필드 값은 US-ASCII 문자 집합의 일부만 사용합니다 [ &lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt; ]. 새로 정의 된 헤더 필드는 필드 값을 US-ASCII 옥텟으로 제한해야합니다 (SHOULD). 수신자는 필드 내용 (obs-text)의 다른 옥텟을 불투명 한 데이터로 취급해야한다.</target>
        </trans-unit>
        <trans-unit id="a45a53f69ac8d4f9beb81fdb6abdda0d81b83401" translate="yes" xml:space="preserve">
          <source>Meta tag configuration</source>
          <target state="translated">메타 태그 구성</target>
        </trans-unit>
        <trans-unit id="d3bc7449553df912945049faf23d54805daa3cef" translate="yes" xml:space="preserve">
          <source>Method Definitions (RFC 2616)</source>
          <target state="translated">분석법 정의 (RFC 2616)</target>
        </trans-unit>
        <trans-unit id="cb7ac4b5940dd1c323d62b5a8e651330e7495257" translate="yes" xml:space="preserve">
          <source>Method and body not changed</source>
          <target state="translated">방법과 몸은 바뀌지 않았습니다</target>
        </trans-unit>
        <trans-unit id="2d2721aaa9ac715c71cff1347bdeb0765b82f40d" translate="yes" xml:space="preserve">
          <source>Method and body not changed.</source>
          <target state="translated">방법과 본문은 변경되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="53d262d73147d297967a65df5e7306875b16e48d" translate="yes" xml:space="preserve">
          <source>Method handling</source>
          <target state="translated">분석법 처리</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="7e8cf9e2eae4020fb1e8917e8ab3068925ba7380" translate="yes" xml:space="preserve">
          <source>Methods can also have the property of &quot;idempotence&quot; in that (aside
   from error or expiration issues) the side-effects of N &amp;gt; 0 identical
   requests is the same as for a single request. The methods GET, HEAD,
   PUT and DELETE share this property. Also, the methods OPTIONS and
   TRACE SHOULD NOT have side effects, and so are inherently idempotent. 

   However, it is possible that a sequence of several requests is non-
   idempotent, even if all of the methods executed in that sequence are
   idempotent. (A sequence is idempotent if a single execution of the
   entire sequence always yields a result that is not changed by a
   reexecution of all, or part, of that sequence.) For example, a
   sequence is non-idempotent if its result depends on a value that is
   later modified in the same sequence.

   A sequence that never has side effects is idempotent, by definition
   (provided that no concurrent operations are being executed on the
   same set of resources).</source>
          <target state="translated">또한 메소드는 &quot;오류 또는 만기 문제를 제외하고&quot;N&amp;gt; 0 동일한 요청의 부작용이 단일 요청의 부작용과 동일하다는 점에서 &quot;등전위&quot;특성을 가질 수 있습니다. GET, HEAD, PUT 및 DELETE 메소드는이 특성을 공유합니다. 또한, OPTIONS와 TRACE 메소드는 부작용이 없어야하며, 따라서 본질적으로 dem 등호입니다. 그러나 해당 시퀀스에서 실행 된 모든 메소드가 dem 등수 인 경우에도 여러 요청의 순서가 i 등원이 아닐 수 있습니다. (전체 시퀀스의 단일 실행이 항상 해당 시퀀스의 전체 또는 일부를 다시 실행해도 변경되지 않는 결과를 생성하는 경우 시퀀스는 dem 등원입니다.) 예를 들어 시퀀스의 결과가 나중에 같은 순서로 수정되는 값.부작용이없는 시퀀스는 정의 상으로는 dem 등수입니다 (동일한 리소스 세트에서 동시 작업이 실행되지 않는 경우).</target>
        </trans-unit>
        <trans-unit id="242805378404a310345cf70839197bf474f74005" translate="yes" xml:space="preserve">
          <source>Microphone</source>
          <target state="translated">Microphone</target>
        </trans-unit>
        <trans-unit id="87276ecf605640589cec1d79d00bf26c970b94e4" translate="yes" xml:space="preserve">
          <source>Microsoft Excel</source>
          <target state="translated">마이크로 소프트 엑셀</target>
        </trans-unit>
        <trans-unit id="2a323ed6449b617238b82a3dfc75eb9621adc7da" translate="yes" xml:space="preserve">
          <source>Microsoft Excel (OpenXML)</source>
          <target state="translated">Microsoft Excel (OpenXML)</target>
        </trans-unit>
        <trans-unit id="ab9f2a2052ea77406213e4dbe99b5967437a187b" translate="yes" xml:space="preserve">
          <source>Microsoft Icon</source>
          <target state="translated">Microsoft Icon</target>
        </trans-unit>
        <trans-unit id="95afea748c2d83deeb5e505cb3467080a79ec0dd" translate="yes" xml:space="preserve">
          <source>Microsoft PowerPoint</source>
          <target state="translated">마이크로 소프트 파워 포인트</target>
        </trans-unit>
        <trans-unit id="66f10ebd0f328820d7789369e62c94f10eb4d83b" translate="yes" xml:space="preserve">
          <source>Microsoft PowerPoint (OpenXML)</source>
          <target state="translated">Microsoft PowerPoint (OpenXML)</target>
        </trans-unit>
        <trans-unit id="f8f6993a5165c131c1d8c5214734c809b756f2ef" translate="yes" xml:space="preserve">
          <source>Microsoft Visio</source>
          <target state="translated">Microsoft Visio</target>
        </trans-unit>
        <trans-unit id="1549499155dcad76ee4cf933519cd8cacaf632b7" translate="yes" xml:space="preserve">
          <source>Microsoft Word</source>
          <target state="translated">마이크로 소프트 워드</target>
        </trans-unit>
        <trans-unit id="36cf4ee07cac5059a5ad97ffe928503bd176751c" translate="yes" xml:space="preserve">
          <source>Microsoft Word (OpenXML)</source>
          <target state="translated">Microsoft Word (OpenXML)</target>
        </trans-unit>
        <trans-unit id="1198ed8512c8cdd797293daa67494bddc3770413" translate="yes" xml:space="preserve">
          <source>Microsoft document</source>
          <target state="translated">Microsoft 문서</target>
        </trans-unit>
        <trans-unit id="039b0b863da28e2c4f9c09377b4e7260a857282b" translate="yes" xml:space="preserve">
          <source>Microsoft in general made its own implementation. There used to be &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_auto-config#Old_Microsoft_problems&quot;&gt;some problems with their libraries&lt;/a&gt;, but most are resolved by now. They have defined &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winhttp/ipv6-extensions-to-navigator-auto-config-file-format&quot;&gt;some new &quot;Ex&quot; suffixed functions&lt;/a&gt; around the address handling parts to support IPv6. The feature is supported by Chromium, but not yet by Firefox (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=558253&quot;&gt;bugzilla #558253&lt;/a&gt;).</source>
          <target state="translated">일반적으로 Microsoft는 자체적으로 구현했습니다. 이전에는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Proxy_auto-config#Old_Microsoft_problems&quot;&gt;라이브러리에 몇 가지 문제가&lt;/a&gt; 있었지만 대부분은 지금까지 해결되었습니다. 그들은 IPv6를 지원하기 위해 주소 처리 부분 주위에 &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winhttp/ipv6-extensions-to-navigator-auto-config-file-format&quot;&gt;새로운 &quot;Ex&quot;접미사 기능&lt;/a&gt; 을 정의 했습니다 . 이 기능은 Chromium에서 지원되지만 아직 Firefox에서는 지원되지 않습니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=558253&quot;&gt;bugzilla # 558253&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1df4b94ae4d5602d088aff532dae5e38510a6678" translate="yes" xml:space="preserve">
          <source>Midi</source>
          <target state="translated">Midi</target>
        </trans-unit>
        <trans-unit id="f3c717723ab8734d12784f68a0722e11e80fcc72" translate="yes" xml:space="preserve">
          <source>Minutes from 0 to 59.</source>
          <target state="translated">0 ~ 59 분</target>
        </trans-unit>
        <trans-unit id="89539c6918ebad2db5606b4128932b01811ff405" translate="yes" xml:space="preserve">
          <source>Miscellaneous Persistent Warning</source>
          <target state="translated">기타 지속적인 경고</target>
        </trans-unit>
        <trans-unit id="a58539b42f2a5b03e79f0e0357f01220b1c564c9" translate="yes" xml:space="preserve">
          <source>Miscellaneous Warning</source>
          <target state="translated">기타 경고</target>
        </trans-unit>
        <trans-unit id="6440b6c15fbd440237dd7ddf04fa83c555b31d51" translate="yes" xml:space="preserve">
          <source>Mitigating MIME Confusion Attacks in Firefox</source>
          <target state="translated">Firefox에서 MIME 혼동 공격 완화</target>
        </trans-unit>
        <trans-unit id="5d489f5457c01748e6b6d121f8ab0bb76ce6faab" translate="yes" xml:space="preserve">
          <source>Mitigating cross site scripting</source>
          <target state="translated">크로스 사이트 스크립팅 완화</target>
        </trans-unit>
        <trans-unit id="a06d1d2ac6f2847420dd550f09dcb2166ef5252d" translate="yes" xml:space="preserve">
          <source>Mitigating packet sniffing attacks</source>
          <target state="translated">패킷 스니핑 공격 완화</target>
        </trans-unit>
        <trans-unit id="f7fb61404c2b0add12a8de94361ca1262d06c970" translate="yes" xml:space="preserve">
          <source>Mixed Content</source>
          <target state="translated">혼합 컨텐츠</target>
        </trans-unit>
        <trans-unit id="4a03a5aca91ea4ae835ab37b3456e345e1c824ad" translate="yes" xml:space="preserve">
          <source>Mixed Content&lt;br/&gt;&lt;small&gt;The definition of 'block-all-mixed-content' in that specification.&lt;/small&gt;</source>
          <target state="translated">혼합 컨텐츠&lt;br/&gt;&lt;small&gt; 해당 사양에서 '전부 혼합 컨텐츠'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="69248b8f3367a963f6ed1431265d03d542c43778" translate="yes" xml:space="preserve">
          <source>Mixed content</source>
          <target state="translated">혼합 내용</target>
        </trans-unit>
        <trans-unit id="b1d702459399a2512fba5a402d4d5f26aee34693" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="translated">Mobile</target>
        </trans-unit>
        <trans-unit id="0efeb0636336539c3bcea3d1fe128360ba3a0b9d" translate="yes" xml:space="preserve">
          <source>Mobile Device Detection</source>
          <target state="translated">모바일 장치 감지</target>
        </trans-unit>
        <trans-unit id="2ae9795ad44783e26e39ba8db6b981786d39f71b" translate="yes" xml:space="preserve">
          <source>Mobile and Tablet indicators</source>
          <target state="translated">모바일 및 태블릿 표시기</target>
        </trans-unit>
        <trans-unit id="165a63ecf9a6d73eec0fb95be501c468fde2ff9d" translate="yes" xml:space="preserve">
          <source>Mobile device detection</source>
          <target state="translated">모바일 장치 감지</target>
        </trans-unit>
        <trans-unit id="183f26ae5771e151ff87bc3aac010eef4b387ac0" translate="yes" xml:space="preserve">
          <source>Mobile, Tablet or Desktop</source>
          <target state="translated">모바일, 태블릿 또는 데스크탑</target>
        </trans-unit>
        <trans-unit id="6ea99682b2b19e3567543027b85a36a6c1be1a86" translate="yes" xml:space="preserve">
          <source>Model data for a 3D object or scene. Examples include &lt;code&gt;model/3mf&lt;/code&gt; and &lt;code&gt;model/vml&lt;/code&gt;.</source>
          <target state="translated">3D 개체 또는 장면에 대한 모델 데이터입니다. 예로는 &lt;code&gt;model/3mf&lt;/code&gt; 및 &lt;code&gt;model/vml&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5864387b4a66bda62e2067620df614155f02985" translate="yes" xml:space="preserve">
          <source>More detail and examples are provided in the topic &lt;a href=&quot;../protocol_upgrade_mechanism&quot;&gt;Protocol upgrade mechanism&lt;/a&gt;.</source>
          <target state="translated">자세한 내용과 예제는 &lt;a href=&quot;../protocol_upgrade_mechanism&quot;&gt;프로토콜 업그레이드 메커니즘&lt;/a&gt; 항목에서 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="7b1e02c916056823b64ff86eab6f60b7e49761cf" translate="yes" xml:space="preserve">
          <source>More specifically, this article is for &lt;strong&gt;web administrators&lt;/strong&gt;, &lt;strong&gt;server developers&lt;/strong&gt;, and &lt;strong&gt;front-end developers&lt;/strong&gt;. Modern browsers handle the client side of cross-origin sharing, including headers and policy enforcement. But the CORS standard means servers have to handle new request and response headers. Another article for server developers discussing &lt;a href=&quot;server-side_access_control&quot;&gt;cross-origin sharing from a server perspective (with PHP code snippets)&lt;/a&gt; is supplementary reading.</source>
          <target state="translated">보다 구체적으로이 문서는 &lt;strong&gt;웹 관리자&lt;/strong&gt; , &lt;strong&gt;서버 개발자&lt;/strong&gt; 및 &lt;strong&gt;프런트 엔드 개발자를위한 것&lt;/strong&gt; 입니다. 최신 브라우저는 헤더 및 정책 시행을 포함하여 교차 출처 공유의 클라이언트 측을 처리합니다. 그러나 CORS 표준은 서버가 새로운 요청 및 응답 헤더를 처리해야 함을 의미합니다. &lt;a href=&quot;server-side_access_control&quot;&gt;서버 관점 (PHP 코드 스 니펫 포함)에서 교차 출처 공유를&lt;/a&gt; 논의하는 서버 개발자를위한 또 다른 기사 는 보충 자료입니다.</target>
        </trans-unit>
        <trans-unit id="1387238e2992cdaf972778c0a1519b7892c33930" translate="yes" xml:space="preserve">
          <source>More specifically, this article is for web administrators, server developers, and front-end developers. Modern browsers handle the client-side components of cross-origin sharing, including headers and policy enforcement. But this new standard means servers have to handle new request and response headers. Another article for server developers discussing &lt;a href=&quot;server-side_access_control&quot;&gt;cross-origin sharing from a server perspective (with PHP code snippets)&lt;/a&gt; is supplementary reading.</source>
          <target state="translated">보다 구체적으로이 기사는 웹 관리자, 서버 개발자 및 프론트 엔드 개발자를위한 것입니다. 최신 브라우저는 헤더 및 정책 시행을 포함하여 교차 출처 공유의 클라이언트 측 구성 요소를 처리합니다. 그러나이 새로운 표준은 서버가 새로운 요청 및 응답 헤더를 처리해야 함을 의미합니다. &lt;a href=&quot;server-side_access_control&quot;&gt;서버 관점에서 (PHP 코드 스 니펫을 사용하여) 교차 출처 공유를&lt;/a&gt; 논의하는 서버 개발자를위한 또 다른 기사 는 보충 자료입니다.</target>
        </trans-unit>
        <trans-unit id="4d672ad094374129b7ac45aa56021f772e22d674" translate="yes" xml:space="preserve">
          <source>More than 15 years of extensions</source>
          <target state="translated">15 년 이상의 연장</target>
        </trans-unit>
        <trans-unit id="93defa8d9384e526ec8c563df8553e7f68474a93" translate="yes" xml:space="preserve">
          <source>More than one &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header was sent by the server. This isn't allowed.</source>
          <target state="translated">둘 이상의 &lt;a href=&quot;../../headers/access-control-allow-origin&quot;&gt; &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; &lt;/a&gt; 헤더를 보냈습니다. 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1be543deb68df132d0c179bafbe0c9f9d5ae66cd" translate="yes" xml:space="preserve">
          <source>Most HTTP header field values are defined using common syntax
   components (token, quoted-string, and comment) separated by
   whitespace or specific delimiting characters.  Delimiters are chosen
   from the set of US-ASCII visual characters not allowed in a token
   (DQUOTE and &quot;(),/:;&amp;lt;=&amp;gt;?@[\]{}&quot;).

     token          = 1*tchar

     tchar          = &quot;!&quot; / &quot;#&quot; / &quot;$&quot; / &quot;%&quot; / &quot;&amp;amp;&quot; / &quot;'&quot; / &quot;*&quot;
                    / &quot;+&quot; / &quot;-&quot; / &quot;.&quot; / &quot;^&quot; / &quot;_&quot; / &quot;`&quot; / &quot;|&quot; / &quot;~&quot;
                    / DIGIT / ALPHA
                    ; any VCHAR, except delimiters

   A string of text is parsed as a single value if it is quoted using
   double-quote marks.

     quoted-string  = DQUOTE *( qdtext / quoted-pair ) DQUOTE
     qdtext         = HTAB / SP /%x21 / %x23-5B / %x5D-7E / obs-text
     obs-text       = %x80-FF

   Comments can be included in some HTTP header fields by surrounding
   the comment text with parentheses.  Comments are only allowed in
   fields containing &quot;comment&quot; as part of their field value definition.

     comment        = &quot;(&quot; *( ctext / quoted-pair / comment ) &quot;)&quot;
     ctext          = HTAB / SP / %x21-27 / %x2A-5B / %x5D-7E / obs-text

   The backslash octet (&quot;\&quot;) can be used as a single-octet quoting
   mechanism within quoted-string and comment constructs.  Recipients
   that process the value of a quoted-string MUST handle a quoted-pair
   as if it were replaced by the octet following the backslash.

     quoted-pair    = &quot;\&quot; ( HTAB / SP / VCHAR / obs-text )

   A sender SHOULD NOT generate a quoted-pair in a quoted-string except
   where necessary to quote DQUOTE and backslash octets occurring within
   that string.  A sender SHOULD NOT generate a quoted-pair in a comment
   except where necessary to quote parentheses [&quot;(&quot; and &quot;)&quot;] and
   backslash octets occurring within that comment.</source>
          <target state="translated">대부분의 HTTP 헤더 필드 값은 공백 또는 특정 구분 문자로 구분 된 공통 구문 구성 요소 (토큰, 따옴표로 묶은 문자열 및 주석)를 사용하여 정의됩니다. 구분 기호는 토큰에 허용되지 않는 US-ASCII 시각적 문자 세트 (DQUOTE 및 &quot;(), / :; &amp;lt;=&amp;gt;? @ [\] {}&quot;)에서 선택됩니다. token = 1 * tchar tchar = &quot;!&quot; / &quot;#&quot;/ &quot;$&quot;/ &quot;%&quot;/ &quot;&amp;amp;&quot;/ &quot; '&quot;/ &quot;*&quot;/ &quot;+&quot;/ &quot;-&quot;/ &quot;.&quot; / &quot;^&quot;/ &quot;_&quot;/ &quot;`&quot;/ &quot;|&quot; / &quot;~&quot;/ DIGIT / ALPHA; 구분자를 제외한 모든 VCHAR 큰 따옴표를 사용하여 인용 된 텍스트 문자열은 단일 값으로 구문 분석됩니다.인용 문자열 = DQUOTE * (qdtext / quoted-pair) DQUOTE qdtext = HTAB / SP / % x21 / % x23-5B / % x5D-7E / obs-text obs-text = % x80-FF 주석은 일부에 포함될 수 있습니다 주석 텍스트를 괄호로 묶어 HTTP 헤더 필드 주석은 필드 값 정의의 일부로 &quot;comment&quot;를 포함하는 필드에서만 허용됩니다. comment = &quot;(&quot;* (ctext / quoted-pair / comment) &quot;)&quot;ctext = HTAB / SP / % x21-27 / % x2A-5B / % x5D-7E / obs-text 백 슬래시 옥텟 ( &quot;\&quot;) 인용 된 문자열 및 주석 구성 내에서 단일 옥텟 인용 메커니즘으로 사용할 수 있습니다. 인용 문자열 값을 처리하는 수신자는 인용 쌍을 백 슬래시 다음의 8 진수로 대체 한 것처럼 처리해야합니다. 인용 쌍 = &quot;\ &quot;(HTAB / SP / VCHAR / obs-text) 발신자는 문자열 내에서 발생하는 DQUOTE 및 백 슬래시 옥텟을 인용 할 필요가있는 경우를 제외하고는 인용 문자열에서 인용 쌍을 생성하지 않아야합니다. 발신자는 인용 쌍을 생성해서는 안됩니다 (SHOULD NOT). 주석 내에서 괄호 [ &quot;(&quot;및 &quot;)&quot;]와 백 슬래시 옥텟을 인용해야하는 경우를 제외하고 주석 내에서.</target>
        </trans-unit>
        <trans-unit id="812bdf18b5a605c99457c43782814e036fcbedcf" translate="yes" xml:space="preserve">
          <source>Most HTTP responses include an entity which contains information for
   interpretation by a human user. Naturally, it is desirable to supply
   the user with the &quot;best available&quot; entity corresponding to the
   request. Unfortunately for servers and caches, not all users have the
   same preferences for what is &quot;best,&quot; and not all user agents are
   equally capable of rendering all entity types. For that reason, HTTP
   has provisions for several mechanisms for &quot;content negotiation&quot; --
   the process of selecting the best representation for a given response
   when there are multiple representations available.

      Note: This is not called &quot;format negotiation&quot; because the
      alternate representations may be of the same media type, but use
      different capabilities of that type, be in different languages,
      etc. 

   Any response containing an entity-body MAY be subject to negotiation,
   including error responses.

   There are two kinds of content negotiation which are possible in
   HTTP: server-driven and agent-driven negotiation. These two kinds of
   negotiation are orthogonal and thus may be used separately or in
   combination. One method of combination, referred to as transparent
   negotiation, occurs when a cache uses the agent-driven negotiation
   information provided by the origin server in order to provide
   server-driven negotiation for subsequent requests.</source>
          <target state="translated">대부분의 HTTP 응답에는 사용자가 해석하기위한 정보가 포함 된 엔티티가 포함됩니다. 당연히, 요청에 대응하는 &quot;최고 이용 가능한&quot;엔티티를 사용자에게 제공하는 것이 바람직하다. 불행히도 서버와 캐시의 경우 모든 사용자가 &quot;최고&quot;에 대해 동일한 환경 설정을 갖는 것은 아니며 모든 사용자 에이전트가 모든 엔티티 유형을 동일하게 렌더링 할 수있는 것은 아닙니다. 이러한 이유로 HTTP에는 &quot;컨텐츠 협상&quot;에 대한 여러 가지 메커니즘 (제공되는 표현이 여러 개인 경우 지정된 응답에 대한 최상의 표현을 선택하는 프로세스)이 있습니다. 참고 : 대체 표현은 동일한 미디어 유형일 수 있지만 해당 유형의 다른 기능을 사용하기 때문에 &quot;형식 협상&quot;이라고하지 않습니다.엔티티 본문을 포함하는 모든 응답은 오류 응답을 포함하여 협상 될 수 있습니다. HTTP에서 가능한 두 가지 종류의 컨텐츠 협상이 있습니다 : 서버 중심 및 에이전트 중심 협상. 이 두 종류의 협상은 직교이므로 따로 또는 조합하여 사용할 수 있습니다. 투명 협상이라고하는 한 가지 조합 방법은 캐시가 후속 요청에 대한 서버 구동 협상을 제공하기 위해 오리진 서버가 제공 한 에이전트 중심 협상 정보를 사용할 때 발생합니다.이 두 종류의 협상은 직교이므로 따로 또는 조합하여 사용할 수 있습니다. 투명 협상이라고하는 한 가지 조합 방법은 캐시가 후속 요청에 대한 서버 구동 협상을 제공하기 위해 오리진 서버가 제공 한 에이전트 중심 협상 정보를 사용할 때 발생합니다.이 두 종류의 협상은 직교이므로 따로 또는 조합하여 사용할 수 있습니다. 투명 협상이라고하는 한 가지 조합 방법은 캐시가 후속 요청에 대한 서버 구동 협상을 제공하기 위해 오리진 서버가 제공 한 에이전트 중심 협상 정보를 사용할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7460036b5d618f72b9d5e87b1f21806669419e9d" translate="yes" xml:space="preserve">
          <source>Most browsers set the name and version in the format &lt;em&gt;BrowserName/VersionNumber&lt;/em&gt;, with the notable exception of Internet Explorer. But as the name is not the only information in a user agent string that is in that format, you can not discover the name of the browser, you can only check if the name you are looking for. But note that some browsers are lying: Chrome for example reports both as Chrome and Safari. So to detect Safari you have to check for the Safari string and the absence of the Chrome string, Chromium often reports itself as Chrome too or Seamonkey sometimes reports itself as Firefox.</source>
          <target state="translated">대부분의 브라우저 는 Internet Explorer를 제외하고 &lt;em&gt;BrowserName / VersionNumber&lt;/em&gt; 형식으로 이름과 버전을 설정합니다 . 그러나 이름은 해당 형식의 사용자 에이전트 문자열에있는 유일한 정보가 아니므로 브라우저 이름을 찾을 수 없으며 찾고있는 이름 만 확인할 수 있습니다. 그러나 일부 브라우저는 거짓말을하고 있습니다. 예를 들어 Chrome은 Chrome과 Safari로보고합니다. 따라서 Safari를 감지하려면 Safari 문자열과 Chrome 문자열이 없는지 확인해야합니다. Chromium은 종종 자체를 Chrome으로보고하거나 Seamonkey가 자체적으로 Firefox로보고합니다.</target>
        </trans-unit>
        <trans-unit id="e4008ade4042fb7c7a965933bdf292eb96d44308" translate="yes" xml:space="preserve">
          <source>Most importantly, it assumed no other browsers would support the feature. Support could have been added to other browsers at any time, but this code would have continued choosing the inferior path.</source>
          <target state="translated">가장 중요한 것은 다른 브라우저가이 기능을 지원하지 않을 것이라고 가정했다는 것입니다. 언제든지 다른 브라우저에 지원을 추가 할 수 있었지만이 코드는 계속해서 열등한 경로를 선택했을 것입니다.</target>
        </trans-unit>
        <trans-unit id="8812a6ba3333d88ab3035fd80151158d9cd5096a" translate="yes" xml:space="preserve">
          <source>Most of the standard JavaScript functionality is available for use in the &lt;code&gt;FindProxyForURL()&lt;/code&gt; function. As an example, to set different proxies based on the protocol the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith&quot;&gt;&lt;code&gt;startsWith()&lt;/code&gt;&lt;/a&gt; function can be used:</source>
          <target state="translated">대부분의 표준 JavaScript 기능은 &lt;code&gt;FindProxyForURL()&lt;/code&gt; 함수 에서 사용할 수 있습니다 . 예를 들어, 프로토콜을 기반으로 다른 프록시를 설정하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith&quot;&gt; &lt;code&gt;startsWith()&lt;/code&gt; &lt;/a&gt; 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02c0fa975a9a4f1c1a39487a5147f2636b69eb9e" translate="yes" xml:space="preserve">
          <source>Most of the standard JavaScript functionality is available for use in the FindProxyForURL() function. As an example, to set different proxies based on the protocol the substring() function can be used:</source>
          <target state="translated">대부분의 표준 JavaScript 기능은 FindProxyForURL () 함수에서 사용할 수 있습니다. 예를 들어, 프로토콜을 기반으로 다른 프록시를 설정하기 위해 substring () 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92624466818eb51fd53a17208603205adea7766c" translate="yes" xml:space="preserve">
          <source>Most of the time identity and location of a Web resource are shared, this can be changed with the &lt;a href=&quot;headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">웹 리소스의 ID와 위치는 대부분 공유되며 &lt;a href=&quot;headers/alt-svc&quot;&gt; &lt;code&gt;Alt-Svc&lt;/code&gt; &lt;/a&gt; 로 변경할 수 있습니다. 헤더를 .</target>
        </trans-unit>
        <trans-unit id="112a5d486922ba62900e7ec6537ffa88c946451f" translate="yes" xml:space="preserve">
          <source>Most of the time the identity and location of a web resource are shared, this can be changed with the &lt;a href=&quot;headers/alt-svc&quot;&gt;&lt;code&gt;Alt-Svc&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="translated">대부분의 경우 웹 리소스의 ID와 위치가 공유되며 &lt;a href=&quot;headers/alt-svc&quot;&gt; &lt;code&gt;Alt-Svc&lt;/code&gt; &lt;/a&gt; 헤더 로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b365dcd7a6f5dfd969c8f5a85717b49e744e8f9" translate="yes" xml:space="preserve">
          <source>Most of the time this is a server problem, and if the server cannot detect it, it will send back a &lt;a href=&quot;status/500&quot;&gt;&lt;code&gt;500&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Internal Server Error&lt;/code&gt;. If you encounter such an error soon after modifying a server configuration, this is likely a redirection loop.</source>
          <target state="translated">대부분의 경우 이것은 서버 문제이며 서버가이를 감지 할 수없는 경우 &lt;a href=&quot;status/500&quot;&gt; &lt;code&gt;500&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Internal Server Error&lt;/code&gt; 다시 보냅니다 . 서버 구성을 수정 한 직후에 이러한 오류가 발생하면 리디렉션 루프 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd93e26ede2192a4f8e353e3bbf7ab476b541a23" translate="yes" xml:space="preserve">
          <source>Most rendering engines put the version number in the &lt;em&gt;RenderingEngine/VersionNumber&lt;/em&gt; token, with the notable exception of Gecko. Gecko puts the Gecko version number in the comment part of the User Agent after the &lt;code&gt;rv:&lt;/code&gt; string. From Gecko 14 for the mobile version and Gecko 17 for the desktop version, it also puts this value in the &lt;code&gt;Gecko/version&lt;/code&gt; token (previous version put there the build date, then a fixed date called the GeckoTrail).</source>
          <target state="translated">대부분의 렌더링 엔진 은 Gecko를 제외 하고 &lt;em&gt;RenderingEngine / VersionNumber&lt;/em&gt; 토큰 에 버전 번호를 넣습니다 . Gecko는 &lt;code&gt;rv:&lt;/code&gt; 문자열 다음에 사용자 에이전트의 주석 부분에 Gecko 버전 번호를 넣습니다 . 모바일 버전의 Gecko 14 및 데스크탑 버전의 Gecko 17에서이 값을 &lt;code&gt;Gecko/version&lt;/code&gt; 토큰에 넣습니다 (이전 버전은 빌드 날짜를 입력 한 다음 GeckoTrail이라는 고정 날짜를 지정 함).</target>
        </trans-unit>
        <trans-unit id="5accc4ae9c97c9b25a00a6dd3d1020db39dc3e71" translate="yes" xml:space="preserve">
          <source>Most values in SETTINGS benefit from or require an understanding of
   when the peer has received and applied the changed parameter values.
   In order to provide such synchronization timepoints, the recipient of
   a SETTINGS frame in which the ACK flag is not set MUST apply the
   updated parameters as soon as possible upon receipt.

   The values in the SETTINGS frame MUST be processed in the order they
   appear, with no other frame processing between values.  Unsupported
   parameters MUST be ignored.  Once all values have been processed, the 

   recipient MUST immediately emit a SETTINGS frame with the ACK flag
   set.  Upon receiving a SETTINGS frame with the ACK flag set, the
   sender of the altered parameters can rely on the setting having been
   applied.

   If the sender of a SETTINGS frame does not receive an acknowledgement
   within a reasonable amount of time, it MAY issue a connection error
   (&lt;a href=&quot;#section-5.4.1&quot;&gt;Section 5.4.1&lt;/a&gt;) of type SETTINGS_TIMEOUT.</source>
          <target state="translated">SETTINGS의 대부분의 값은 피어가 변경된 매개 변수 값을 수신하고 적용한시기를 이해하거나 이해해야합니다. 이러한 동기화 타임 포인트를 제공하기 위해 ACK 플래그가 설정되지 않은 SETTINGS 프레임의 수신자는 수신 즉시 업데이트 된 매개 변수를 적용해야합니다. SETTINGS 프레임의 값은 값 사이에 다른 프레임 처리없이 나타나는 순서대로 처리되어야합니다. 지원되지 않는 매개 변수는 무시해야합니다. 모든 값이 처리되면 수신자는 ACK 플래그가 설정된 SETTINGS 프레임을 즉시 내 보내야합니다. ACK 플래그가 설정된 SETTINGS 프레임을 수신하면 변경된 매개 변수의 송신자는 적용된 설정에 의존 할 수 있습니다. SETTINGS 프레임을 보낸 사람이 적절한 시간 내에 승인을받지 못하면연결 오류 (&lt;a href=&quot;#section-5.4.1&quot;&gt;섹션 5.4.1&lt;/a&gt; ) SETTINGS_TIMEOUT 유형.</target>
        </trans-unit>
        <trans-unit id="c37f0d1445fedf718be400753c3dbf6a2412f759" translate="yes" xml:space="preserve">
          <source>Most web servers send unrecognized resources as the &lt;code&gt;application/octet-stream&lt;/code&gt; MIME type. For security reasons, most browsers do not allow setting a custom default action for such resources, forcing the user to save it to disk to use it.</source>
          <target state="translated">대부분의 웹 서버는 인식 할 수없는 리소스를 &lt;code&gt;application/octet-stream&lt;/code&gt; MIME 유형 으로 보냅니다 . 보안상의 이유로 대부분의 브라우저는 이러한 리소스에 대한 사용자 지정 기본 작업을 설정할 수 없으므로 사용자가이를 사용하기 위해 디스크에 저장하도록합니다.</target>
        </trans-unit>
        <trans-unit id="6a8946eed2c78e3706e8f2276333fa60dc5390eb" translate="yes" xml:space="preserve">
          <source>Moving to a different domain. For example, your company has been renamed and you when searching for the old name, you want people used to the old company Web site still find you under the new name.</source>
          <target state="translated">다른 도메인으로 이동 예를 들어, 회사 이름이 바뀌었고 이전 이름을 검색 할 때 이전 회사 웹 사이트에 익숙한 사람들이 여전히 새 이름 아래에서 나를 찾도록하려고합니다.</target>
        </trans-unit>
        <trans-unit id="fe05d533d29bed0680c710b5026f9e8e7d2dbbe4" translate="yes" xml:space="preserve">
          <source>Moving to a new domain</source>
          <target state="translated">새 도메인으로 이동</target>
        </trans-unit>
        <trans-unit id="0ef3be393a351dfa2ef963cfdc34f9e6563cc892" translate="yes" xml:space="preserve">
          <source>Mozilla (Gecko, Firefox)</source>
          <target state="translated">모질라 (Gecko, Firefox)</target>
        </trans-unit>
        <trans-unit id="a0934075575145263129d33cbbd963bcda3860f4" translate="yes" xml:space="preserve">
          <source>Mozilla Observatory</source>
          <target state="translated">모질라 전망대</target>
        </trans-unit>
        <trans-unit id="decab94514e261dda8ed0ab5f5a50868157343e3" translate="yes" xml:space="preserve">
          <source>Mozilla web security guidelines</source>
          <target state="translated">Mozilla 웹 보안 지침</target>
        </trans-unit>
        <trans-unit id="0fee1a221e5d621522c4cae25d2d3f0781412c73" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 4.4; Mobile; rv:41.0) Gecko/41.0 Firefox/41.0</source>
          <target state="translated">Mozilla / 5.0 (Android 4.4; 모바일; rv : 41.0) Gecko / 41.0 Firefox / 41.0</target>
        </trans-unit>
        <trans-unit id="06ca2e8b107ebc3017f1b6838abe49d90a2337b1" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 4.4; Tablet; rv:41.0) Gecko/41.0 Firefox/41.0</source>
          <target state="translated">Mozilla / 5.0 (Android 4.4; 태블릿; rv : 41.0) Gecko / 41.0 Firefox / 41.0</target>
        </trans-unit>
        <trans-unit id="12388f0ea73a7de9d571898b4be2154ce15cb9f4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android 7.0; Mobile; rv:62.0) Gecko/62.0 Firefox/62.0</source>
          <target state="translated">Mozilla / 5.0 (Android 7.0; 모바일; rv : 62.0) Gecko / 62.0 Firefox / 62.0</target>
        </trans-unit>
        <trans-unit id="adf944b54ec9b6df9ba954b5789e4f037d57ad12" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Mobile; rv:13.0) Gecko/13.0 Firefox/13.0</source>
          <target state="translated">Mozilla / 5.0 (Android; 모바일; rv : 13.0) Gecko / 13.0 Firefox / 13.0</target>
        </trans-unit>
        <trans-unit id="4d33bd8f87ba06abe4fe1c0b9f3fd3d4ef39a64b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Mobile; rv:40.0) Gecko/40.0 Firefox/40.0</source>
          <target state="translated">Mozilla / 5.0 (Android; 모바일; rv : 40.0) Gecko / 40.0 Firefox / 40.0</target>
        </trans-unit>
        <trans-unit id="b1165e7e7925427d068dfe4278ee0a0ab81d03a6" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Android; Tablet; rv:40.0) Gecko/40.0 Firefox/40.0</source>
          <target state="translated">Mozilla / 5.0 (Android; 태블릿; rv : 40.0) Gecko / 40.0 Firefox / 40.0</target>
        </trans-unit>
        <trans-unit id="1eff4492cf201da272b181a0826abf69087bdbae" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 4.4.2); Nexus 5 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.117 Mobile Safari/537.36 OPR/20.0.1396.72047</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 4.4.2); Nexus 5 Build / KOT49H) AppleWebKit / 537.36 (Kcko, Gecko) Chrome / 33.0.1750.117 모바일 Safari / 537.36 OPR / 20.0.1396.72047</target>
        </trans-unit>
        <trans-unit id="187263e2548b4eea2d8d1b7718d1e58bc486ee8f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 5.1.1) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.1 Chrome/59.0.3017.125 Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux, Android 5.1.1) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Focus / 1.1 Chrome / 59.0.3017.125 Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="f069d17af594e5cc6ceb8bcf6da674fc68ec9615" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.0 Chrome/59.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 7.0) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Focus / 1.0 Chrome / 59.0.3029.83 Mobile Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="5cdca6439d9f4f75159a9c3f7e09c52e695e1e6d" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.0 Chrome/59.0.3029.83 Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 7.0) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Focus / 1.0 Chrome / 59.0.3029.83 Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="d3772cfc2095a71baa2d031dbccc5f42fe0a9faa" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/4.1 Chrome/62.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 7.0) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Focus / 4.1 Chrome / 62.0.3029.83 Mobile Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="5c9a7c5212d961b33810bd5d24bd5d65d22acc7b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Klar/1.0 Chrome/58.0.3029.83 Mobile Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 7.0) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Klar / 1.0 Chrome / 58.0.3029.83 Mobile Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="3ebf95e0e00b50d02895700858ee637ccce16aee" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; Android 7.1.2) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/3.0 Chrome/59.0.3017.125 Safari/537.36</source>
          <target state="translated">Mozilla / 5.0 (Linux; Android 7.1.2) AppleWebKit / 537.36 (Gcko와 같은 KHTML) 버전 /4.0 Focus / 3.0 Chrome / 59.0.3017.125 Safari / 537.36</target>
        </trans-unit>
        <trans-unit id="2107ee483b37620cd27469a83622677f75ba74e7" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Linux; U; Android 4.0.3; de-ch; HTC Sensation Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30</source>
          <target state="translated">Mozilla / 5.0 (Linux; U; Android 4.0.3; de-ch; HTC Sensation Build / IML74K) AppleWebKit / 534.30 (Gcko와 같은 KHTML) 버전 /4.0 모바일 Safari / 534.30</target>
        </trans-unit>
        <trans-unit id="b1d3f926e92bfa21fd4b0d0fe771e000d5d2b871" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; Intel Mac OS X 10.5; rv : 10.0.1) Gecko / 20100101 Firefox / 10.0.1 SeaMonkey / 2.7.1</target>
        </trans-unit>
        <trans-unit id="6d87ab26fc3278b385f67646186cafe62f1226c0" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X 10.5; rv:2.0.1) Gecko/20100101 Firefox/4.0.1 Camino/2.2.1</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; Intel Mac OS X 10.5; rv : 2.0.1) Gecko / 20100101 Firefox / 4.0.1 Camino / 2.2.1</target>
        </trans-unit>
        <trans-unit id="08a47789f901ac4697d74b3d7f335103a2d1b4b2" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; Intel Mac OS X &lt;em&gt;x.y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; Intel Mac OS X &lt;em&gt;xy&lt;/em&gt; ; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="92e71ac1941b70b8a195b2038b988eb15e2633cf" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Macintosh; PPC Mac OS X &lt;em&gt;x.y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Macintosh; PPC Mac OS X &lt;em&gt;xy&lt;/em&gt; ; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="49a7b83668313b9e1281eda63779e0047234a704" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Maemo; Linux armv7l; rv:10.0) Gecko/20100101 Firefox/10.0 Fennec/10.0</source>
          <target state="translated">Mozilla / 5.0 (Maemo; Linux armv7l; rv : 10.0) Gecko / 20100101 Firefox / 10.0 Fennec / 10.0</target>
        </trans-unit>
        <trans-unit id="4912bc7f8d14158acb5958155825887af72f69e0" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Maemo; Linux armv7l; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 Fennec/10.0.1</source>
          <target state="translated">Mozilla / 5.0 (Maemo; Linux armv7l; rv : 10.0.1) Gecko / 20100101 Firefox / 10.0.1 Fennec / 10.0.1</target>
        </trans-unit>
        <trans-unit id="24d7bfb4e448eb6a6f2b2c05f9ccace8303e7951" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Mobile; &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla / 5.0 (모바일; &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; rv : 26.0) Gecko / 26.0 Firefox / 26.0</target>
        </trans-unit>
        <trans-unit id="fe824479059b41314b08fccf6ffd2df216b210a4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Mobile; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla / 5.0 (모바일; rv : 26.0) Gecko / 26.0 Firefox / 26.0</target>
        </trans-unit>
        <trans-unit id="1e65d98e39260d268ec140c75dfc14eb88fe1d22" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (TV; rv:44.0) Gecko/44.0 Firefox/44.0</source>
          <target state="translated">Mozilla / 5.0 (TV; rv : 44.0) Gecko / 44.0 Firefox / 44.0</target>
        </trans-unit>
        <trans-unit id="1b0c7be81a38400e6eab6ae6602316f1c9727b89" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Tablet; rv:26.0) Gecko/26.0 Firefox/26.0</source>
          <target state="translated">Mozilla / 5.0 (태블릿; rv : 26.0) Gecko / 26.0 Firefox / 26.0</target>
        </trans-unit>
        <trans-unit id="d5494fe16df11ab5f5d2c945da5478c2861a6327" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT 5.2; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla / 5.0 (Windows NT 5.2; rv : 10.0.1) Gecko / 20100101 Firefox / 10.0.1 SeaMonkey / 2.7.1</target>
        </trans-unit>
        <trans-unit id="c103c7575720327d828e07fcd68a2f214656eb84" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; WOW64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Windows NT &lt;em&gt;x&lt;/em&gt; . &lt;em&gt;y&lt;/em&gt; ; WOW64; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="e357311b1eddbb286305456c0cae57cb232b5c1f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; Win64; x64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">모질라 / 5.0 (Windows NT는 &lt;em&gt;X&lt;/em&gt; . &lt;em&gt;Y&lt;/em&gt; ; Win64를, 64 장, 10.0) 게코 / 20100101 파이어 폭스 / 10.0</target>
        </trans-unit>
        <trans-unit id="325bb5b76845bcf2d6d17880f0df8de3120fa91b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows NT &lt;em&gt;x&lt;/em&gt;.&lt;em&gt;y&lt;/em&gt;; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (Windows NT &lt;em&gt;x&lt;/em&gt; . &lt;em&gt;y&lt;/em&gt; ; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="81f3af5f3aa598d0b0fee4970a50aaf001611378" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; Xbox; Xbox One) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Mobile Safari/537.36 Edge/16.16299</source>
          <target state="translated">Mozilla / 5.0 (Windows Phone 10.0, Android 6.0.1, Xbox, Xbox One) AppleWebKit / 537.36 (Gecko와 같은 KHTML) Chrome / 58.0.3029.110 Mobile Safari / 537.36 Edge / 16.16299</target>
        </trans-unit>
        <trans-unit id="5530c08605b863c3ac834dac7f9e551adfc1e552" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686 on x86_64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (X11; x86_64의 Linux i686; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="b117257c04f02d34e73001cfc8d0da1abaac01f8" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (X11; Linux i686; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="fa04af9816f0793fdc1a867eef08c9bba4602d70" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux i686; rv:10.0.1) Gecko/20100101 Firefox/10.0.1 SeaMonkey/2.7.1</source>
          <target state="translated">Mozilla / 5.0 (X11; Linux i686; rv : 10.0.1) Gecko / 20100101 Firefox / 10.0.1 SeaMonkey / 2.7.1</target>
        </trans-unit>
        <trans-unit id="3d160a2e76c2d144bd854abad33abe579e0d1e79" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (X11; Linux x86_64; rv:10.0) Gecko/20100101 Firefox/10.0</source>
          <target state="translated">Mozilla / 5.0 (X11; Linux x86_64; rv : 10.0) Gecko / 20100101 Firefox / 10.0</target>
        </trans-unit>
        <trans-unit id="709cd7ecb895ccc0d811c9b3e76ade66b0e1f3aa" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0)</source>
          <target state="translated">Mozilla / 5.0 (호환 가능; MSIE 9.0; Windows Phone OS 7.5; Trident / 5.0; IEMobile / 9.0)</target>
        </trans-unit>
        <trans-unit id="eb659b396a68f6ea514ab25964c9404e2397367b" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPad; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPad, Mac OS X와 ​​같은 CPU iPhone OS 8_3) AppleWebKit / 600.1.4 (Gcko와 같은 KHTML) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="4e72c500d652c15de7cda1433b6379f4dfd1c6c4" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPhone, Mac OS X와 ​​같은 CPU iPhone OS 8_3) AppleWebKit / 600.1.4 (Gcko와 같은 KHTML) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="f8a8856f3bffbe976e558e919bc886558bcab84f" translate="yes" xml:space="preserve">
          <source>Mozilla/5.0 (iPod touch; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) &lt;strong&gt;FxiOS/1.0&lt;/strong&gt; Mobile/12F69 Safari/600.1.4</source>
          <target state="translated">Mozilla / 5.0 (iPod touch, Mac OS X와 ​​같은 CPU iPhone OS 8_3) AppleWebKit / 600.1.4 (Gcko와 같은 KHTML) &lt;strong&gt;FxiOS / 1.0&lt;/strong&gt; Mobile / 12F69 Safari / 600.1.4</target>
        </trans-unit>
        <trans-unit id="6c18301fd3a10882deaa39ee10288f7f929f1e77" translate="yes" xml:space="preserve">
          <source>Multipart ranges</source>
          <target state="translated">멀티 파트 범위</target>
        </trans-unit>
        <trans-unit id="6492593dec5dae0d0f4611760da5545108ace9bb" translate="yes" xml:space="preserve">
          <source>Multipart types</source>
          <target state="translated">멀티 파트 유형</target>
        </trans-unit>
        <trans-unit id="d39efeff869bd677fa96ec0c45b55ce64ce505cd" translate="yes" xml:space="preserve">
          <source>Multiple content security policies</source>
          <target state="translated">여러 콘텐츠 보안 정책</target>
        </trans-unit>
        <trans-unit id="16f27a967676caac72dd673312bcaadcdd0612f0" translate="yes" xml:space="preserve">
          <source>Multiple directives are comma-separated.</source>
          <target state="translated">여러 지시문은 쉼표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="faf6894b2c9c5935b46458a0fd870cc102ebf570" translate="yes" xml:space="preserve">
          <source>Multiple entries can be specified in a single &lt;code&gt;Alt-Svc&lt;/code&gt; header using comma as separator. In that case, early entries are considered more preferable.</source>
          <target state="translated">Multiple entries can be specified in a single &lt;code&gt;Alt-Svc&lt;/code&gt; header using comma as separator. In that case, early entries are considered more preferable.</target>
        </trans-unit>
        <trans-unit id="313424e8960d9a8154e0f8c4d03334fd46afad67" translate="yes" xml:space="preserve">
          <source>Multiple headers</source>
          <target state="translated">여러 헤더</target>
        </trans-unit>
        <trans-unit id="8df1cc9a00d7049c317f44f9975e955ab77a7480" translate="yes" xml:space="preserve">
          <source>Multiple host/domain values are &lt;em&gt;not&lt;/em&gt; allowed, but if a domain &lt;em&gt;is&lt;/em&gt; specified, then subdomains are always included.</source>
          <target state="translated">Multiple host/domain values are &lt;em&gt;not&lt;/em&gt; allowed, but if a domain &lt;em&gt;is&lt;/em&gt; specified, then subdomains are always included.</target>
        </trans-unit>
        <trans-unit id="bdca688fc4125e8ff0c8017144fee0ab18afe32f" translate="yes" xml:space="preserve">
          <source>Multiple language tags are separated by comma. Each language tag is a sequence of one or more case-insensitive subtags, each separated by a hyphen character (&quot;&lt;code&gt;-&lt;/code&gt;&quot;, &lt;code&gt;%x2D&lt;/code&gt;). In most cases, a language tag consists of a primary language subtag that identifies a broad family of related languages (e.g., &quot;&lt;code&gt;en&lt;/code&gt;&quot; = English), which is optionally followed by a series of subtags that refine or narrow that language's range (e.g., &quot;&lt;code&gt;en-CA&lt;/code&gt;&quot; = the variety of English as communicated in Canada).</source>
          <target state="translated">여러 언어 태그는 쉼표로 구분됩니다. 각 언어 태그는 대소 문자를 구분하지 않는 하나 이상의 하위 태그 시퀀스로, 하이픈 문자 ( &quot; &lt;code&gt;-&lt;/code&gt; &quot;, &lt;code&gt;%x2D&lt;/code&gt; )로 구분됩니다. 대부분의 경우 언어 태그는 광범위한 관련 언어 (예 : &quot; &lt;code&gt;en&lt;/code&gt; &quot;= English) 를 식별하는 기본 언어 하위 태그로 구성되며 , 선택적으로 해당 언어의 범위를 세분화하거나 좁히는 일련의 하위 태그 (예 : &quot; &lt;code&gt;en-CA&lt;/code&gt; &quot;= 캐나다에서 의사 소통되는 다양한 영어).</target>
        </trans-unit>
        <trans-unit id="340550b49e9608b118f45b82b60784f8192c8553" translate="yes" xml:space="preserve">
          <source>Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</source>
          <target state="translated">Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types</target>
        </trans-unit>
        <trans-unit id="b290c69355489b91460f7513bfaca4d5713cfa85" translate="yes" xml:space="preserve">
          <source>Musical Instrument Digital Interface (MIDI)</source>
          <target state="translated">악기 디지털 인터페이스 (MIDI)</target>
        </trans-unit>
        <trans-unit id="38d7a0163e1ee433772d04a8bfb66c70abef1a41" translate="yes" xml:space="preserve">
          <source>Must contain</source>
          <target state="translated">포함해야합니다</target>
        </trans-unit>
        <trans-unit id="7eb2625cecaa68b91f751ad2fe9dc1b532d0b9b2" translate="yes" xml:space="preserve">
          <source>Must not contain</source>
          <target state="translated">포함해서는 안됩니다</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="efc3e3a9091331fea65bdf78fb5cc0f8f7a3acf5" translate="yes" xml:space="preserve">
          <source>NEL</source>
          <target state="translated">NEL</target>
        </trans-unit>
        <trans-unit id="7fba45dc69034264a59f6cf73b586c39dab3f873" translate="yes" xml:space="preserve">
          <source>Name/alias of an internal proxy.</source>
          <target state="translated">내부 프록시의 이름 / 별칭</target>
        </trans-unit>
        <trans-unit id="fc0e8280e5c94d0883853c5c4b17f81c3e799bdf" translate="yes" xml:space="preserve">
          <source>Name:   activelock

   Purpose:   Describes a lock on a resource.


   &amp;lt;!ELEMENT activelock (lockscope, locktype, depth, owner?, timeout?,
             locktoken?, lockroot)&amp;gt;</source>
          <target state="translated">이름 : activelock 목적 : 자원에 대한 잠금을 설명합니다. &amp;lt;! ELEMENT activelock (lockscope, locktype, depth, owner ?, timeout ?, locktoken ?, lockroot)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7309308604381e0eab9cfba61516e4469cbce658" translate="yes" xml:space="preserve">
          <source>Name:   allprop

   Purpose:   Specifies that all names and values of dead properties and
      the live properties defined by this document existing on the
      resource are to be returned.

   &amp;lt;!ELEMENT allprop EMPTY &amp;gt;</source>
          <target state="translated">이름 : allprop 목적 : 자원에 존재하는이 문서에 의해 정의 된 사용 불능 특성 및 활성 특성의 모든 이름과 값이 리턴되도록 지정합니다. &amp;lt;! ELEMENT allprop EMPTY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1ba1c5dfdf3f6b036dcf6b3dcedf50ec6b5d7aa0" translate="yes" xml:space="preserve">
          <source>Name:   collection

   Purpose:   Identifies the associated resource as a collection.  The
      DAV:resourcetype property of a collection resource MUST contain
      this element.  It is normally empty but extensions may add sub-
      elements.

   &amp;lt;!ELEMENT collection EMPTY &amp;gt;</source>
          <target state="translated">이름 : 모음 목적 : 관련 리소스를 모음으로 식별합니다. 컬렉션 리소스의 DAV : resourcetype 속성은이 요소를 포함해야합니다. 일반적으로 비어 있지만 확장은 하위 요소를 추가 할 수 있습니다. &amp;lt;! 요소 컬렉션 빈&amp;gt;</target>
        </trans-unit>
        <trans-unit id="87181b0cf2e6abfd8e3d27cf6a43721cccb1a786" translate="yes" xml:space="preserve">
          <source>Name:   creationdate

   Purpose:   Records the time and date the resource was created.

   Value:   date-time (defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC3339&lt;/a&gt;], see the ABNF in &lt;a href=&quot;#section-5.6&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt;.)

   Protected:   MAY be protected.  Some servers allow DAV:creationdate
      to be changed to reflect the time the document was created if that
      is more meaningful to the user (rather than the time it was
      uploaded).  Thus, clients SHOULD NOT use this property in
      synchronization logic (use DAV:getetag instead).

   COPY/MOVE behavior:   This property value SHOULD be kept during a
      MOVE operation, but is normally re-initialized when a resource is
      created with a COPY.  It should not be set in a COPY. 

   Description:   The DAV:creationdate property SHOULD be defined on all
      DAV compliant resources.  If present, it contains a timestamp of
      the moment when the resource was created.  Servers that are
      incapable of persistently recording the creation date SHOULD
      instead leave it undefined (i.e. report &quot;Not Found&quot;).

   &amp;lt;!ELEMENT creationdate (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : creationdate 목적 : 리소스가 만들어진 시간과 날짜를 기록합니다. 값 : 날짜-시간 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc3339&quot;&gt;RFC3339&lt;/a&gt; ]에 정의되어 있으며 &lt;a href=&quot;#section-5.6&quot;&gt;섹션 &lt;/a&gt;&lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt; 의 ABNF 참조.) 보호 : 보호 될 수 있습니다. 일부 서버에서는 DAV : creationdate를 변경하여 사용자에게보다 의미가있는 경우 (업로드 된 시간이 아닌) 문서를 만든 시간을 반영 할 수 있습니다. 따라서 클라이언트는 동기화 논리에서이 속성을 사용하지 않아야합니다 (대신 DAV : getetag 사용). COPY / MOVE 동작 :이 속성 값은 MOVE 작업 중에 유지해야하지만 COPY를 사용하여 리소스를 만들 때 일반적으로 다시 초기화됩니다. COPY에 설정해서는 안됩니다. 설명 : DAV : creationdate 속성은 모든 DAV 호환 리소스에 정의해야합니다. 존재하는 경우 리소스가 생성 된 순간의 타임 스탬프가 포함됩니다. 작성 날짜를 지속적으로 기록 할 수없는 서버는 대신 정의되지 않은 상태로 두어야합니다 (예 :&quot;찾을 수 없음&quot;으로보고). &amp;lt;! ELEMENT 생성 일 (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5001a824af50b50969330b6c455279fcb16d4902" translate="yes" xml:space="preserve">
          <source>Name:   depth

   Purpose:   Used for representing depth values in XML content (e.g.,
      in lock information).

   Value:   &quot;0&quot; | &quot;1&quot; | &quot;infinity&quot;

   &amp;lt;!ELEMENT depth (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : 깊이 용도 : XML 내용 (예 : 잠금 정보)의 깊이 값을 나타내는 데 사용됩니다. 값 : &quot;0&quot;| &quot;1&quot;| &quot;무한대&quot;&amp;lt;! 요소 깊이 (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d7e7ea482bed86ee2dc49b17649f3cd7cddfe06a" translate="yes" xml:space="preserve">
          <source>Name:   displayname

   Purpose:   Provides a name for the resource that is suitable for
      presentation to a user.

   Value:   Any text.

   Protected:   SHOULD NOT be protected.  Note that servers implementing
      [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] might have made this a protected property as this is a
      new requirement.

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   Contains a description of the resource that is
      suitable for presentation to a user.  This property is defined on
      the resource, and hence SHOULD have the same value independent of
      the Request-URI used to retrieve it (thus, computing this property
      based on the Request-URI is deprecated).  While generic clients
      might display the property value to end users, client UI designers
      must understand that the method for identifying resources is still
      the URL.  Changes to DAV:displayname do not issue moves or copies
      to the server, but simply change a piece of meta-data on the
      individual resource.  Two resources can have the same DAV:
      displayname value even within the same collection.

   &amp;lt;!ELEMENT displayname (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : 표시 이름 목적 : 사용자에게 표시하기에 적합한 리소스 이름을 제공합니다. 값 : 모든 텍스트 보호 : 보호해서는 안됩니다. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518을&lt;/a&gt; 구현하는 서버]은 새로운 요구 사항이므로이 속성을 보호 된 속성으로 만들었을 수 있습니다. COPY / MOVE 동작 :이 속성 값은 COPY 및 MOVE 작업에서 유지되어야합니다. 설명 : 사용자에게 프리젠 테이션하기에 적합한 자원에 대한 설명을 포함합니다. 이 속성은 리소스에 정의되어 있으므로이를 검색하는 데 사용 된 Request-URI와 독립적으로 동일한 값을 가져야합니다 (따라서 Request-URI를 기반으로이 속성을 계산하는 것은 더 이상 사용되지 않습니다). 일반 클라이언트는 일반 사용자에게 속성 값을 표시 할 수 있지만 클라이언트 UI 디자이너는 리소스를 식별하는 방법이 여전히 URL임을 이해해야합니다. DAV : displayname을 변경해도 서버로 이동하거나 복사하지 않고 개별 자원의 메타 데이터를 변경하면됩니다.두 개의 자원이 동일한 DAV를 가질 수 있습니다. 동일한 콜렉션 내에서도 표시 이름 값입니다. &amp;lt;! ELEMENT 표시 이름 (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="908d0146c1dea86489e704e923e0d7a5ee16a7b9" translate="yes" xml:space="preserve">
          <source>Name:   error

   Purpose:   Error responses, particularly 403 Forbidden and 409
      Conflict, sometimes need more information to indicate what went
      wrong.  In these cases, servers MAY return an XML response body
      with a document element of 'error', containing child elements
      identifying particular condition codes.

   Description:   Contains at least one XML element, and MUST NOT
      contain text or mixed content.  Any element that is a child of the
      'error' element is considered to be a precondition or
      postcondition code.  Unrecognized elements MUST be ignored.

   &amp;lt;!ELEMENT error ANY &amp;gt;</source>
          <target state="translated">이름 : 오류 목적 : 오류 응답, 특히 403 Forbidden 및 409 Conflict는 때때로 무엇이 잘못되었는지 나타내는 추가 정보가 필요합니다. 이 경우 서버는 특정 조건 코드를 식별하는 하위 요소를 포함하는 문서 요소가 'error'인 XML 응답 본문을 반환 할 수 있습니다. 설명 : 하나 이상의 XML 요소를 포함하며 텍스트 또는 혼합 컨텐츠를 포함해서는 안됩니다. 'error'요소의 하위 요소 인 모든 요소는 사전 조건 또는 사후 조건 코드로 간주됩니다. 인식 할 수없는 요소는 무시해야합니다. &amp;lt;! ELEMENT 오류 ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2f1ac95ad14a19297b93321befb3877e2c61a0da" translate="yes" xml:space="preserve">
          <source>Name:   exclusive

   Purpose:   Specifies an exclusive lock.


   &amp;lt;!ELEMENT exclusive EMPTY &amp;gt;</source>
          <target state="translated">이름 : 독점 목적 : 독점 잠금을 지정합니다. &amp;lt;! 요소 독점 비우기&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1139af3688a412e172379a1792bf370d7f0f7b0c" translate="yes" xml:space="preserve">
          <source>Name:   getcontentlanguage

   Purpose:   Contains the Content-Language header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;14.12 of [RFC2616]&lt;/a&gt;) as it would be returned by a GET without
      accept headers.

   Value:   language-tag (language-tag is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.10&quot;&gt;Section&amp;nbsp;3.10 of
      [RFC2616]&lt;/a&gt;) 

   Protected:   SHOULD NOT be protected, so that clients can reset the
      language.  Note that servers implementing [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] might have
      made this a protected property as this is a new requirement.

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   The DAV:getcontentlanguage property MUST be defined on
      any DAV-compliant resource that returns the Content-Language
      header on a GET.

   &amp;lt;!ELEMENT getcontentlanguage (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : getcontentlanguage 목적 : Accept 헤더없이 GET에 의해 리턴되는 Content-Language 헤더 값 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;[RFC2616]의 14.12 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.12&quot;&gt;섹션 참조&lt;/a&gt; )을 포함합니다. 값 : 언어 태그 (언어 태그는 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.10&quot;&gt;[RFC2616]의 섹션 3.10에&lt;/a&gt; 정의되어 있음 ) 보호됨 : 클라이언트가 언어를 재설정 할 수 있도록 보호해서는 안됩니다. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518을&lt;/a&gt; 구현하는 서버]은 새로운 요구 사항이므로이 속성을 보호 된 속성으로 만들었을 수 있습니다. COPY / MOVE 동작 :이 속성 값은 COPY 및 MOVE 작업에서 유지되어야합니다. 설명 : DAV : getcontentlanguage 속성은 GET의 Content-Language 헤더를 반환하는 DAV 호환 리소스에서 정의해야합니다. &amp;lt;! ELEMENT getcontentlanguage (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="741fdc043a5b70d84410dff935be0a476ea27e62" translate="yes" xml:space="preserve">
          <source>Name:   getcontentlength

   Purpose:   Contains the Content-Length header returned by a GET
      without accept headers.

   Value:   See &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.13&quot;&gt;Section&amp;nbsp;14.13 of [RFC2616]&lt;/a&gt;.

   Protected:   This property is computed, therefore protected.

   Description:   The DAV:getcontentlength property MUST be defined on
      any DAV-compliant resource that returns the Content-Length header
      in response to a GET.

   COPY/MOVE behavior:   This property value is dependent on the size of
      the destination resource, not the value of the property on the
      source resource.

   &amp;lt;!ELEMENT getcontentlength (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : getcontentlength 목적 : 승인 헤더없이 GET에서 반환 한 Content-Length 헤더가 들어 있습니다. 값 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.13&quot;&gt;[RFC2616]의 섹션 14.13을&lt;/a&gt; 참조하십시오 . 보호됨 :이 속성은 계산되어 보호됩니다. 설명 : DAV : getcontentlength 속성은 GET에 대한 응답으로 Content-Length 헤더를 반환하는 모든 DAV 호환 리소스에서 정의해야합니다. COPY / MOVE 동작 :이 속성 값은 소스 리소스의 속성 값이 아니라 대상 리소스의 크기에 따라 다릅니다. &amp;lt;! ELEMENT getcontentlength (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="55495eb7b11d239e680b68a767ce90c04bf9b3b4" translate="yes" xml:space="preserve">
          <source>Name:   getcontenttype

   Purpose:   Contains the Content-Type header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.17&quot;&gt;Section&amp;nbsp;14.17
      of [RFC2616]&lt;/a&gt;) as it would be returned by a GET without accept
      headers.

   Value:   media-type (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.7&quot;&gt;Section&amp;nbsp;3.7 of [RFC2616]&lt;/a&gt;)

   Protected:   Potentially protected if the server prefers to assign
      content types on its own (see also discussion in &lt;a href=&quot;#section-9.7.1&quot;&gt;Section 9.7.1&lt;/a&gt;). 

   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY
      and MOVE operations.

   Description:   This property MUST be defined on any DAV-compliant
      resource that returns the Content-Type header in response to a
      GET.

   &amp;lt;!ELEMENT getcontenttype (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : getcontenttype 목적 : Accept 헤더없이 GET에 의해 리턴 될 Content-Type 헤더 값 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.17&quot;&gt;[RFC2616]의 14.17 섹션&lt;/a&gt; )을 포함합니다. 값 : 미디어 유형 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.7&quot;&gt;[RFC2616]의 3.7 절에&lt;/a&gt; 정의 됨 ) 보호됨 : 서버가 자체적으로 컨텐츠 유형을 할당하는 것을 선호하는 경우 잠재적으로 보호됩니다 ( &lt;a href=&quot;#section-9.7.1&quot;&gt;섹션 9.7.1의&lt;/a&gt; 설명 참조 ). COPY / MOVE 동작 :이 속성 값은 COPY 및 MOVE 작업에서 유지되어야합니다. 설명 :이 속성은 GET에 대한 응답으로 Content-Type 헤더를 반환하는 모든 DAV 호환 리소스에서 정의되어야합니다. &amp;lt;! ELEMENT getcontenttype (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1498b05efb25d9004f005f650420e0059a4a660f" translate="yes" xml:space="preserve">
          <source>Name:   getetag

   Purpose:   Contains the ETag header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.19&quot;&gt;Section&amp;nbsp;14.19 of
      [RFC2616]&lt;/a&gt;) as it would be returned by a GET without accept
      headers.

   Value:   entity-tag (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&amp;nbsp;3.11 of [RFC2616]&lt;/a&gt;)

   Protected:  MUST be protected because this value is created and
      controlled by the server.

   COPY/MOVE behavior:   This property value is dependent on the final
      state of the destination resource, not the value of the property
      on the source resource.  Also note the considerations in
      &lt;a href=&quot;#section-8.8&quot;&gt;Section 8.8&lt;/a&gt;.

   Description:   The getetag property MUST be defined on any DAV-
      compliant resource that returns the Etag header.  Refer to &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;3.11 of RFC 2616&lt;/a&gt; for a complete definition of the semantics of an
      ETag, and to &lt;a href=&quot;#section-8.6&quot;&gt;Section 8.6&lt;/a&gt; for a discussion of ETags in WebDAV.

   &amp;lt;!ELEMENT getetag (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : getetag 목적 : 수락 헤더없이 GET에 의해 리턴 될 ETag 헤더 값 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.19&quot;&gt;[RFC2616]의 섹션 14.19&lt;/a&gt; )을 포함합니다. 값 : entity-tag ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;[RFC2616]의 섹션 3.11에&lt;/a&gt; 정의 됨 ) 보호됨 :이 값은 서버에서 생성하고 제어하므로 반드시 보호해야합니다. COPY / MOVE 동작 :이 속성 값은 원본 리소스의 속성 값이 아니라 대상 리소스의 최종 상태에 따라 다릅니다. &lt;a href=&quot;#section-8.8&quot;&gt;섹션 8.8&lt;/a&gt; 의 고려 사항도 참고하십시오 . 설명 : getetag 속성은 Etag 헤더를 반환하는 DAV 호환 리소스에서 정의해야합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;RFC 2616의 3.11 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.11&quot;&gt;절을&lt;/a&gt; 참조하십시오.ETag의 시맨틱에 대한 완전한 정의는 WebDAV의 ETag에 대한 논의는 &lt;a href=&quot;#section-8.6&quot;&gt;섹션 8.6&lt;/a&gt; 을 참조하십시오. &amp;lt;! ELEMENT getetag (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="11ad3ec496de5f06b2c28a5d5dd7a81ca07caa74" translate="yes" xml:space="preserve">
          <source>Name:   getlastmodified

   Purpose:   Contains the Last-Modified header value (from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;14.29 of [RFC2616]&lt;/a&gt;) as it would be returned by a GET method
      without accept headers.

   Value:   &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt;-date (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;Section&amp;nbsp;3.3.1 of [RFC2616]&lt;/a&gt;)

   Protected:   SHOULD be protected because some clients may rely on the
      value for appropriate caching behavior, or on the value of the
      Last-Modified header to which this property is linked. 

   COPY/MOVE behavior:   This property value is dependent on the last
      modified date of the destination resource, not the value of the
      property on the source resource.  Note that some server
      implementations use the file system date modified value for the
      DAV:getlastmodified value, and this can be preserved in a MOVE
      even when the HTTP Last-Modified value SHOULD change.  Note that
      since [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;] requires clients to use ETags where provided, a
      server implementing ETags can count on clients using a much better
      mechanism than modification dates for offline synchronization or
      cache control.  Also note the considerations in &lt;a href=&quot;#section-8.8&quot;&gt;Section 8.8&lt;/a&gt;.

   Description:   The last-modified date on a resource SHOULD only
      reflect changes in the body (the GET responses) of the resource.
      A change in a property only SHOULD NOT cause the last-modified
      date to change, because clients MAY rely on the last-modified date
      to know when to overwrite the existing body.  The DAV:
      getlastmodified property MUST be defined on any DAV-compliant
      resource that returns the Last-Modified header in response to a
      GET.

   &amp;lt;!ELEMENT getlastmodified (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : getlastmodified 목적 : Accept 헤더없이 GET 메소드에 의해 리턴되는 Last-Modified 헤더 값 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;[RFC2616]의 14.29 &lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.29&quot;&gt;섹션 참조&lt;/a&gt; )을 포함합니다. 값 : &lt;a href=&quot;https://tools.ietf.org/html/rfc1123&quot;&gt;rfc1123&lt;/a&gt; -date ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-3.3.1&quot;&gt;[RFC2616]의 3.3.1 절에&lt;/a&gt; 정의 됨 )) 보호됨 : 일부 클라이언트는 적절한 캐싱 동작에 대한 값이나이 속성이 연결된 Last-Modified 헤더의 값에 의존 할 수 있으므로 보호해야합니다. 복사 / 이동 동작 :이 속성 값은 원본 리소스의 속성 값이 아니라 대상 리소스의 마지막 수정 날짜에 따라 다릅니다. 일부 서버 구현에서는 DAV : getlastmodified 값에 대해 파일 시스템 날짜 수정 값을 사용하며 이는 HTTP Last-Modified 값을 변경해야하는 경우에도 MOVE로 유지 될 수 있습니다. [ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; 이후]는 클라이언트가 제공된 경우 ETag를 사용해야하며, ETag를 구현하는 서버는 오프라인 동기화 또는 캐시 제어를위한 수정 날짜보다 훨씬 더 나은 메커니즘을 사용하여 클라이언트를 신뢰할 수 있습니다. &lt;a href=&quot;#section-8.8&quot;&gt;섹션 8.8&lt;/a&gt; 의 고려 사항도 참고하십시오 . 설명 : 자원의 마지막 수정 날짜는 자원의 본문 (GET 응답)의 변경 사항 만 반영해야합니다. 클라이언트가 기존 본문을 덮어 쓰는시기를 알기 위해 마지막 수정 날짜에 의존 할 수 있기 때문에 속성 만 변경하면 마지막 수정 날짜가 변경되어서는 안됩니다 (SHOULD NOT). DAV : getlastmodified 속성은 GET에 대한 응답으로 Last-Modified 헤더를 반환하는 모든 DAV 호환 리소스에서 정의되어야합니다. &amp;lt;! ELEMENT getlastmodified (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="863060182a5c2848f88469f61b18814776f39625" translate="yes" xml:space="preserve">
          <source>Name:   href

   Purpose:   MUST contain a URI or a relative reference.

   Description:   There may be limits on the value of 'href' depending
      on the context of its use.  Refer to the specification text where
      'href' is used to see what limitations apply in each case.

   Value:   Simple-ref


   &amp;lt;!ELEMENT href (#PCDATA)&amp;gt;</source>
          <target state="translated">이름 : href 목적 : URI 또는 ​​상대 참조를 포함해야합니다. 설명 : 사용 상황에 따라 'href'값에 제한이있을 수 있습니다. 각 경우에 어떤 제한이 적용되는지 확인하려면 'href'가 사용 된 사양 텍스트를 참조하십시오. 값 : 단순 참조 &amp;lt;! ELEMENT href (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="893dbb5e6ea2e164b3fe7cab59b462026c86e341" translate="yes" xml:space="preserve">
          <source>Name:   include

   Purpose:   Any child element represents the name of a property to be
      included in the PROPFIND response.  All elements inside an
      'include' XML element MUST define properties related to the
      resource, although possible property names are in no way limited
      to those property names defined in this document or other
      standards.  This element MUST NOT contain text or mixed content.

   &amp;lt;!ELEMENT include ANY &amp;gt;</source>
          <target state="translated">이름 : 포함 목적 : 모든 하위 요소는 PROPFIND 응답에 포함 할 속성의 이름을 나타냅니다. '포함'XML 요소 내의 모든 요소는 반드시 자원과 관련된 속성을 정의해야하지만 가능한 속성 이름은이 문서 나 다른 표준에 정의 된 속성 이름으로 제한되지 않습니다. 이 요소는 텍스트 또는 혼합 컨텐츠를 포함해서는 안됩니다. &amp;lt;! 요소에는 모두 포함&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6c0d5c7c18f7351f5e5ec4a0e565194906f570e3" translate="yes" xml:space="preserve">
          <source>Name:   location

   Purpose:   HTTP defines the &quot;Location&quot; header (see [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;], &lt;a href=&quot;#section-14.30&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-14.30&quot;&gt;14.30&lt;/a&gt;) for use with some status codes (such as 201 and the 300
      series codes).  When these codes are used inside a 'multistatus'
      element, the 'location' element can be used to provide the
      accompanying Location header value. 

   Description:   Contains a single href element with the same value
      that would be used in a Location header.


   &amp;lt;!ELEMENT location (href)&amp;gt;</source>
          <target state="translated">이름 : location 목적 : HTTP는 일부 상태 코드 (예 : 201 및 300 시리즈 코드)와 함께 사용할 &quot;Location&quot;헤더 ([ &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt; ], &lt;a href=&quot;#section-14.30&quot;&gt;14.30 &lt;/a&gt;&lt;a href=&quot;#section-14.30&quot;&gt;절&lt;/a&gt; 참조)를 정의합니다 . 이러한 코드가 'multistatus'요소 내부에서 사용되는 경우 'location'요소를 사용하여 해당하는 Location 헤더 값을 제공 할 수 있습니다. 설명 : Location 헤더에 사용되는 것과 동일한 값을 가진 단일 href 요소를 포함합니다. &amp;lt;! ELEMENT 위치 (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="611ed05ab7ed30cc8633acf614bc5f74d180e99e" translate="yes" xml:space="preserve">
          <source>Name:   lockdiscovery

   Purpose:   Describes the active locks on a resource

   Protected:   MUST be protected.  Clients change the list of locks
      through LOCK and UNLOCK, not through PROPPATCH.

   COPY/MOVE behavior:   The value of this property depends on the lock
      state of the destination, not on the locks of the source resource.
      Recall that locks are not moved in a MOVE operation.

   Description:   Returns a listing of who has a lock, what type of lock
      he has, the timeout type and the time remaining on the timeout,
      and the associated lock token.  Owner information MAY be omitted
      if it is considered sensitive.  If there are no locks, but the
      server supports locks, the property will be present but contain
      zero 'activelock' elements.  If there are one or more locks, an
      'activelock' element appears for each lock on the resource.  This
      property is NOT lockable with respect to write locks (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).

   &amp;lt;!ELEMENT lockdiscovery (activelock)* &amp;gt;</source>
          <target state="translated">이름 : lockdiscovery 목적 : 자원의 활성 잠금을 설명합니다. 보호 : 보호되어야합니다. 클라이언트는 PROPPATCH가 아닌 LOCK 및 UNLOCK을 통해 잠금 목록을 변경합니다. 복사 / 이동 동작 :이 속성의 값은 소스 리소스의 잠금이 아니라 대상의 잠금 상태에 따라 다릅니다. MOVE 조작에서 잠금이 이동되지 않았 음을 기억하십시오. 설명 : 잠금을 보유한 사람, 보유한 잠금 유형, 시간 종료 유형 및 시간 종료 시간 및 연관된 잠금 토큰의 목록을 리턴합니다. 소유자 정보가 민감한 것으로 간주되는 경우 생략 될 수 있습니다. 잠금이 없지만 서버가 잠금을 지원하는 경우 속성이 존재하지만 'activelock'요소는 포함되지 않습니다. 하나 이상의 잠금이 있으면 '자원의 각 잠금에 대해 activelock '요소가 나타납니다. 이 속성은 쓰기 잠금과 관련하여 잠글 수 없습니다 (&lt;a href=&quot;#section-7&quot;&gt;섹션 7&lt;/a&gt; ). &amp;lt;! ELEMENT lockdiscovery (액티브 락) *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7c16989808c9336197d43ba1941662e1c595ca03" translate="yes" xml:space="preserve">
          <source>Name:   lockentry

   Purpose:   Defines the types of locks that can be used with the
      resource.

   &amp;lt;!ELEMENT lockentry (lockscope, locktype) &amp;gt;</source>
          <target state="translated">이름 : lockentry 목적 : 자원과 함께 사용할 수있는 잠금 유형을 정의합니다. &amp;lt;! ELEMENT 잠금 장치 (Lockscope, Locktype)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5083904af81384e6886493a202104354cd3f8853" translate="yes" xml:space="preserve">
          <source>Name:   lockinfo

   Purpose:   The 'lockinfo' XML element is used with a LOCK method to
      specify the type of lock the client wishes to have created.


   &amp;lt;!ELEMENT lockinfo (lockscope, locktype, owner?)  &amp;gt;</source>
          <target state="translated">이름 : lockinfo 목적 : 'lockinfo'XML 요소는 클라이언트가 작성하려는 잠금 유형을 지정하기 위해 LOCK 메소드와 함께 사용됩니다. &amp;lt;! ELEMENT lockinfo (lockscope, locktype, owner?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="852a23c678d8306e5d8708150d7c2bf16c39adbc" translate="yes" xml:space="preserve">
          <source>Name:   lockroot

   Purpose:   Contains the root URL of the lock, which is the URL
      through which the resource was addressed in the LOCK request.

   Description:   The href element contains the root of the lock.  The
      server SHOULD include this in all DAV:lockdiscovery property
      values and the response to LOCK requests.

   &amp;lt;!ELEMENT lockroot (href) &amp;gt;</source>
          <target state="translated">이름 : lockroot 목적 : 잠금의 루트 URL을 포함합니다. 이는 잠금 요청에서 자원이 처리 된 URL입니다. 설명 : href 요소는 잠금의 루트를 포함합니다. 서버는 이것을 모든 DAV : lockdiscovery 속성 값과 LOCK 요청에 대한 응답에 포함시켜야한다. &amp;lt;! ELEMENT lockroot (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="00e11eedce57a66ee497b17831a568c69036832c" translate="yes" xml:space="preserve">
          <source>Name:   lockscope

   Purpose:   Specifies whether a lock is an exclusive lock, or a shared
      lock.


     &amp;lt;!ELEMENT lockscope (exclusive | shared) &amp;gt;</source>
          <target state="translated">이름 : lockscope 목적 : 잠금이 독점 잠금인지 공유 잠금인지 지정합니다. &amp;lt;! ELEMENT lockscope (독점 | 공유)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="82de61827789e036e8393a1e1b328cd94701a6ea" translate="yes" xml:space="preserve">
          <source>Name:   locktoken

   Purpose:   The lock token associated with a lock.

   Description:   The href contains a single lock token URI, which
      refers to the lock.

   &amp;lt;!ELEMENT locktoken (href) &amp;gt;</source>
          <target state="translated">이름 : locktoken 목적 : 잠금과 연관된 잠금 토큰. 설명 : href에는 잠금을 나타내는 단일 잠금 토큰 URI가 포함되어 있습니다. &amp;lt;! ELEMENT 잠금 토큰 (href)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="598c85ffd24685cdfcbe4799404f4c9aeaa83551" translate="yes" xml:space="preserve">
          <source>Name:   locktype

   Purpose:   Specifies the access type of a lock.  At present, this
      specification only defines one lock type, the write lock.


   &amp;lt;!ELEMENT locktype (write) &amp;gt;</source>
          <target state="translated">이름 : locktype 목적 : 잠금 액세스 유형을 지정합니다. 현재이 사양에서는 하나의 잠금 유형 인 쓰기 잠금 만 정의합니다. &amp;lt;! ELEMENT 잠금 유형 (쓰기)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e05fdca8059417af4c532004b86578fb46a8667c" translate="yes" xml:space="preserve">
          <source>Name:   multistatus

   Purpose:   Contains multiple response messages.

   Description:   The 'responsedescription' element at the top level is
      used to provide a general message describing the overarching
      nature of the response.  If this value is available, an
      application may use it instead of presenting the individual
      response descriptions contained within the responses.


   &amp;lt;!ELEMENT multistatus (response*, responsedescription?)  &amp;gt;</source>
          <target state="translated">이름 : multistatus 목적 : 여러 응답 메시지를 포함합니다. 설명 : 최상위 레벨의 '응답 설명'요소는 응답의 중요한 특성을 설명하는 일반 메시지를 제공하는 데 사용됩니다. 이 값을 사용할 수 있으면 응용 프로그램은 응답 내에 포함 된 개별 응답 설명을 표시하는 대신이 값을 사용할 수 있습니다. &amp;lt;! ELEMENT 다중 상태 (응답 *, 응답 설명?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e7255f62e0866a1ff69ffde8c78451b0557e060" translate="yes" xml:space="preserve">
          <source>Name:   owner

   Purpose:   Holds client-supplied information about the creator of a
      lock.

   Description:   Allows a client to provide information sufficient for
      either directly contacting a principal (such as a telephone number
      or Email URI), or for discovering the principal (such as the URL 

      of a homepage) who created a lock.  The value provided MUST be
      treated as a dead property in terms of XML Information Item
      preservation.  The server MUST NOT alter the value unless the
      owner value provided by the client is empty.  For a certain amount
      of interoperability between different client implementations, if
      clients have URI-formatted contact information for the lock
      creator suitable for user display, then clients SHOULD put those
      URIs in 'href' child elements of the 'owner' element.

   Extensibility:   MAY be extended with child elements, mixed content,
      text content or attributes.

   &amp;lt;!ELEMENT owner ANY &amp;gt;</source>
          <target state="translated">이름 : owner 목적 : 잠금 생성자에 대한 클라이언트 제공 정보를 보유합니다. 설명 : 클라이언트가 전화 번호 나 이메일 URI와 같은 보안 주체에게 직접 연락하거나 잠금을 생성 한 보안 주체 (예 : 홈페이지의 URL)를 검색하기에 충분한 정보를 제공 할 수 있습니다. 제공된 값은 XML 정보 항목 보존 측면에서 사용 불능 속성으로 취급되어야합니다. 클라이언트가 제공 한 소유자 값이 비어 있지 않으면 서버는 값을 변경해서는 안됩니다. 서로 다른 클라이언트 구현 사이의 특정 상호 운용성을 위해 클라이언트가 사용자 표시에 적합한 잠금 작성자에 대한 URI 형식의 연락처 정보를 가지고 있으면 클라이언트는 해당 URI를 'href'하위 요소에 배치해야합니다.소유자 요소. 확장 성 : 하위 요소, 혼합 컨텐츠, 텍스트 컨텐츠 또는 속성으로 확장 될 수 있습니다. &amp;lt;! 요소 소유자 :&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1a4e49012d04e6acebeb0c6719ce7d291a7d9aa8" translate="yes" xml:space="preserve">
          <source>Name:   prop

   Purpose:   Contains properties related to a resource.

   Description:   A generic container for properties defined on
      resources.  All elements inside a 'prop' XML element MUST define
      properties related to the resource, although possible property
      names are in no way limited to those property names defined in
      this document or other standards.  This element MUST NOT contain
      text or mixed content.

   &amp;lt;!ELEMENT prop ANY &amp;gt;</source>
          <target state="translated">이름 : prop 목적 : 리소스와 관련된 속성이 들어 있습니다. 설명 : 리소스에 정의 된 속성의 일반 컨테이너입니다. 'prop'XML 요소 내부의 모든 요소는 반드시 리소스와 관련된 속성을 정의해야하지만 가능한 속성 이름은이 문서 나 다른 표준에 정의 된 속성 이름으로 제한되지 않습니다. 이 요소는 텍스트 또는 혼합 컨텐츠를 포함해서는 안됩니다. &amp;lt;! 요소 소품 ANY&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2a17076c9f6d61a5ed9b6362d78be28ae87fb3ec" translate="yes" xml:space="preserve">
          <source>Name:   propertyupdate

   Purpose:   Contains a request to alter the properties on a resource.

   Description:   This XML element is a container for the information
      required to modify the properties on the resource.

   &amp;lt;!ELEMENT propertyupdate (remove | set)+ &amp;gt;</source>
          <target state="translated">이름 : propertyupdate 목적 : 자원의 등록 정보를 변경하라는 요청이 포함되어 있습니다. 설명 :이 XML 요소는 자원의 특성을 수정하는 데 필요한 정보의 컨테이너입니다. &amp;lt;! ELEMENT 속성 업데이트 (제거 | 설정) +&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f033076f90b712249c25c9cf538723f50fb05452" translate="yes" xml:space="preserve">
          <source>Name:   propfind 

   Purpose:   Specifies the properties to be returned from a PROPFIND
      method.  Four special elements are specified for use with
      'propfind': 'prop', 'allprop', 'include', and 'propname'.  If
      'prop' is used inside 'propfind', it MUST NOT contain property
      values.

   &amp;lt;!ELEMENT propfind ( propname | (allprop, include?) | prop ) &amp;gt;</source>
          <target state="translated">이름 : propfind 목적 : PROPFIND 메소드에서 리턴 될 특성을 지정합니다. 'propfind'와 함께 사용할 'prop', 'allprop', 'include'및 'propname'의 네 가지 특수 요소가 지정됩니다. 'propfind'내에서 'prop'를 사용하는 경우 속성 값을 포함해서는 안됩니다. &amp;lt;! ELEMENT propfind (propname | (allprop, include?) | prop)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b132fa457cc7b2c94116ac2aad40a7507857d840" translate="yes" xml:space="preserve">
          <source>Name:   propname

   Purpose:   Specifies that only a list of property names on the
      resource is to be returned.

   &amp;lt;!ELEMENT propname EMPTY &amp;gt;</source>
          <target state="translated">이름 : propname 목적 : 자원의 특성 이름 목록 만 리턴되도록 지정합니다. &amp;lt;! 요소 propname 비어 있음&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cb18d77861af3bb5b094ee60954452e584d7dbd8" translate="yes" xml:space="preserve">
          <source>Name:   propstat

   Purpose:   Groups together a prop and status element that is
      associated with a particular 'href' element.

   Description:   The propstat XML element MUST contain one prop XML
      element and one status XML element.  The contents of the prop XML
      element MUST only list the names of properties to which the result
      in the status element applies.  The optional precondition/
      postcondition element and 'responsedescription' text also apply to
      the properties named in 'prop'.

   &amp;lt;!ELEMENT propstat (prop, status, error?, responsedescription?) &amp;gt;</source>
          <target state="translated">이름 : propstat 목적 : 특정 'href'요소와 연관된 prop 및 status 요소를 그룹화합니다. 설명 : propstat XML 요소는 prop XML 요소 하나와 상태 XML 요소 하나를 포함해야합니다. prop XML 요소의 내용에는 status 요소의 결과가 적용되는 속성 이름 만 나열해야합니다. 선택적 전제 조건 / 후 조건 요소 및 '응답 설명'텍스트는 'prop'에 이름이 지정된 특성에도 적용됩니다. &amp;lt;! ELEMENT propstat (prop, status, error ?, responsedescription?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54b0bd4bd32a031047ae1be302a66b6e6c5b1f5b" translate="yes" xml:space="preserve">
          <source>Name:   remove

   Purpose:   Lists the properties to be removed from a resource.

   Description:   Remove instructs that the properties specified in prop
      should be removed.  Specifying the removal of a property that does
      not exist is not an error.  All the XML elements in a 'prop' XML
      element inside of a 'remove' XML element MUST be empty, as only
      the names of properties to be removed are required.

   &amp;lt;!ELEMENT remove (prop) &amp;gt;</source>
          <target state="translated">이름 : 제거 목적 : 리소스에서 제거 할 속성을 나열합니다. 설명 : Remove는 prop에 지정된 속성을 제거하도록 지시합니다. 존재하지 않는 속성 제거를 지정하는 것은 오류가 아닙니다. 제거 할 속성 이름 만 필요하므로 '제거'XML 요소 내부의 'prop'XML 요소에있는 모든 XML 요소는 비어 있어야합니다. &amp;lt;! ELEMENT 제거 (prop)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf23482b4d15a7ccf582eb373f0c59dfd927c56a" translate="yes" xml:space="preserve">
          <source>Name:   resourcetype

   Purpose:   Specifies the nature of the resource.

   Protected:   SHOULD be protected.  Resource type is generally decided
      through the operation creating the resource (MKCOL vs PUT), not by
      PROPPATCH.

   COPY/MOVE behavior:   Generally a COPY/MOVE of a resource results in
      the same type of resource at the destination.

   Description:   MUST be defined on all DAV-compliant resources.  Each
      child element identifies a specific type the resource belongs to,
      such as 'collection', which is the only resource type defined by
      this specification (see &lt;a href=&quot;#section-14.3&quot;&gt;Section 14.3&lt;/a&gt;).  If the element contains
      the 'collection' child element plus additional unrecognized
      elements, it should generally be treated as a collection.  If the
      element contains no recognized child elements, it should be
      treated as a non-collection resource.  The default value is empty.
      This element MUST NOT contain text or mixed content.  Any custom
      child element is considered to be an identifier for a resource
      type.

   Example: (fictional example to show extensibility)

       &amp;lt;x:resourcetype xmlns:x=&quot;DAV:&quot;&amp;gt;
           &amp;lt;x:collection/&amp;gt;
           &amp;lt;f:search-results xmlns:f=&quot;http://www.example.com/ns&quot;/&amp;gt;
       &amp;lt;/x:resourcetype&amp;gt;</source>
          <target state="translated">이름 : resourcetype 목적 : 자원의 특성을 지정합니다. 보호 : 보호해야합니다. 자원 유형은 일반적으로 PROPPATCH가 아니라 자원을 작성하는 조작 (MKCOL vs PUT)을 통해 결정됩니다. COPY / MOVE 동작 : 일반적으로 자원의 COPY / MOVE는 대상에서 동일한 유형의 자원이됩니다. 설명 : 모든 DAV 호환 리소스에서 정의해야합니다. 각 자식 요소는이 명세에 의해 정의 된 유일한 자원 유형 인 'collection'과 같이 자원이 속하는 특정 유형을 식별한다 ( &lt;a href=&quot;#section-14.3&quot;&gt;14.3 절&lt;/a&gt; 참조)). If the element contains the 'collection' child element plus additional unrecognized elements, it should generally be treated as a collection. If the element contains no recognized child elements, it should be treated as a non-collection resource. The default value is empty. This element MUST NOT contain text or mixed content. Any custom child element is considered to be an identifier for a resource type. Example: (fictional example to show extensibility) &amp;lt;x:resourcetype xmlns:x=&quot;DAV:&quot;&amp;gt; &amp;lt;x:collection/&amp;gt; &amp;lt;f:search-results xmlns:f=&quot;http://www.example.com/ns&quot;/&amp;gt; &amp;lt;/x:resourcetype&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ba963fb29afc5c7063b3f544c4e233040e8f1dab" translate="yes" xml:space="preserve">
          <source>Name:   response

   Purpose:   Holds a single response describing the effect of a method
      on resource and/or its properties.

   Description:   The 'href' element contains an HTTP URL pointing to a
      WebDAV resource when used in the 'response' container.  A
      particular 'href' value MUST NOT appear more than once as the
      child of a 'response' XML element under a 'multistatus' XML
      element.  This requirement is necessary in order to keep
      processing costs for a response to linear time.  Essentially, this
      prevents having to search in order to group together all the
      responses by 'href'.  There are, however, no requirements
      regarding ordering based on 'href' values.  The optional
      precondition/postcondition element and 'responsedescription' text
      can provide additional information about this resource relative to
      the request or result.


   &amp;lt;!ELEMENT response (href, ((href*, status)|(propstat+)),
                       error?, responsedescription? , location?) &amp;gt;</source>
          <target state="translated">이름 : response 목적 : 자원 및 / 또는 해당 특성에 대한 메소드의 영향을 설명하는 단일 응답을 보유합니다. 설명 : 'href'요소는 'response'컨테이너에서 사용될 때 WebDAV 자원을 가리키는 HTTP URL을 포함합니다. 특정 'href'값은 'multistatus'XML 요소 아래에서 'response'XML 요소의 자식으로 두 번 이상 표시되어서는 안됩니다 (MUST NOT). 선형 시간에 대한 응답으로 처리 비용을 유지하려면이 요구 사항이 필요합니다. 본질적으로 이렇게하면 모든 응답을 'href'로 그룹화하기 위해 검색하지 않아도됩니다. 그러나 'href'값을 기반으로하는 주문과 관련된 요구 사항은 없습니다. 선택적 전제 조건 / 후 조건 요소 및 'responsedescription '텍스트는 요청 또는 결과와 관련된이 자원에 대한 추가 정보를 제공 할 수 있습니다. &amp;lt;! ELEMENT 응답 (href, ((href *, status) | (propstat +)), error ?, responsedescription?, location?)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e79aa3cfbb4886f68f0cdccf03d0aaa6df292652" translate="yes" xml:space="preserve">
          <source>Name:   responsedescription

   Purpose:   Contains information about a status response within a
      Multi-Status.

   Description:   Provides information suitable to be presented to a
      user.

   &amp;lt;!ELEMENT responsedescription (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : responsedescription 목적 : 다중 상태 내의 상태 응답에 대한 정보가 들어 있습니다. 설명 : 사용자에게 제시하기에 적합한 정보를 제공합니다. &amp;lt;! ELEMENT 응답 설명 (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="faf150c453c206be333d64c2eb169ece66eddf4f" translate="yes" xml:space="preserve">
          <source>Name:   set

   Purpose:   Lists the property values to be set for a resource.

   Description:   The 'set' element MUST contain only a 'prop' element.
      The elements contained by the 'prop' element inside the 'set'
      element MUST specify the name and value of properties that are set
      on the resource identified by Request-URI.  If a property already
      exists, then its value is replaced.  Language tagging information
      appearing in the scope of the 'prop' element (in the &quot;xml:lang&quot; 

      attribute, if present) MUST be persistently stored along with the
      property, and MUST be subsequently retrievable using PROPFIND.

   &amp;lt;!ELEMENT set (prop) &amp;gt;</source>
          <target state="translated">이름 : set 목적 : 자원에 설정할 특성 값을 나열합니다. 설명 : 'set'요소는 'prop'요소 만 포함해야합니다. 'set'요소 내부의 'prop'요소에 포함 된 요소는 Request-URI로 식별 된 자원에 설정된 특성의 이름과 값을 지정해야합니다. 특성이 이미 존재하면 해당 값이 대체됩니다. 'prop'요소의 범위에있는 언어 태그 정보 (있는 경우 &quot;xml : lang&quot;속성에 있음)는 속성과 함께 지속적으로 저장해야하며, PROPFIND를 사용하여 검색 할 수 있어야합니다. &amp;lt;! ELEMENT set (prop)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="034ef0121821410e6799f280fbce98e61bb36fec" translate="yes" xml:space="preserve">
          <source>Name:   shared

   Purpose:   Specifies a shared lock.


   &amp;lt;!ELEMENT shared EMPTY &amp;gt;</source>
          <target state="translated">이름 : 공유 목적 : 공유 잠금을 지정합니다. &amp;lt;! ELEMENT 공유 빈&amp;gt;</target>
        </trans-unit>
        <trans-unit id="89e2c86f49074c5456840897eea52e652dab08d2" translate="yes" xml:space="preserve">
          <source>Name:   status

   Purpose:   Holds a single HTTP status-line.

   Value:   status-line (defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-6.1&quot;&gt;Section&amp;nbsp;6.1 of [RFC2616]&lt;/a&gt;)

   &amp;lt;!ELEMENT status (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : status 목적 : 단일 HTTP 상태 표시 줄을 보유합니다. 값 : 상태 표시 줄 ( &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-6.1&quot;&gt;[RFC2616]의 섹션 6.1에&lt;/a&gt; 정의 됨 ) &amp;lt;! ELEMENT status (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6cd030e3b2b200c8abb49cd69f079bd0720dc672" translate="yes" xml:space="preserve">
          <source>Name:   supportedlock

   Purpose:   To provide a listing of the lock capabilities supported by
      the resource.

   Protected:   MUST be protected.  Servers, not clients, determine what
      lock mechanisms are supported. 

   COPY/MOVE behavior:   This property value is dependent on the kind of
      locks supported at the destination, not on the value of the
      property at the source resource.  Servers attempting to COPY to a
      destination should not attempt to set this property at the
      destination.

   Description:   Returns a listing of the combinations of scope and
      access types that may be specified in a lock request on the
      resource.  Note that the actual contents are themselves controlled
      by access controls, so a server is not required to provide
      information the client is not authorized to see.  This property is
      NOT lockable with respect to write locks (&lt;a href=&quot;#section-7&quot;&gt;Section 7&lt;/a&gt;).

   &amp;lt;!ELEMENT supportedlock (lockentry)* &amp;gt;</source>
          <target state="translated">이름 : supportedlock 목적 : 자원이 지원하는 잠금 기능 목록을 제공합니다. 보호 : 반드시 보호해야합니다. 클라이언트가 아닌 서버가 지원되는 잠금 메커니즘을 결정합니다. 복사 / 이동 동작 :이 속성 값은 소스 리소스의 속성 값이 아니라 대상에서 지원되는 잠금 종류에 따라 다릅니다. 대상으로 복사를 시도하는 서버는 대상에서이 속성을 설정하지 않아야합니다. 설명 : 자원의 잠금 요청에 지정 될 수있는 범위 및 액세스 유형의 조합 목록을 리턴합니다. 실제 내용은 자체적으로 액세스 제어에 의해 제어되므로 서버가 클라이언트에게 볼 권한이없는 정보를 제공 할 필요는 없습니다.이 속성은 쓰기 잠금과 관련하여 잠글 수 없습니다 (&lt;a href=&quot;#section-7&quot;&gt;섹션 7&lt;/a&gt; ). &amp;lt;! ELEMENT supportedlock (잠금) *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="35119527bc63f501789916897c0befe464dc6217" translate="yes" xml:space="preserve">
          <source>Name:   timeout

   Purpose:   The number of seconds remaining before a lock expires.

   Value:   TimeType (defined in &lt;a href=&quot;#section-10.7&quot;&gt;Section 10.7&lt;/a&gt;)


      &amp;lt;!ELEMENT timeout (#PCDATA) &amp;gt;</source>
          <target state="translated">이름 : timeout 목적 : 잠금이 만료되기까지 남은 시간 (초). 값 : TimeType ( &lt;a href=&quot;#section-10.7&quot;&gt;섹션 10.7에&lt;/a&gt; 정의 됨 ) &amp;lt;! ELEMENT timeout (#PCDATA)&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d89a920056d92541b3e4aaafcac0f2c97ae89ad3" translate="yes" xml:space="preserve">
          <source>Name:   write

   Purpose:   Specifies a write lock.


   &amp;lt;!ELEMENT write EMPTY &amp;gt;</source>
          <target state="translated">이름 : 쓰기 목적 : 쓰기 잠금을 지정합니다. &amp;lt;! 요소 쓰기 빈&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ef928101d810c7b294edc543143c4a9808fc0cd4" translate="yes" xml:space="preserve">
          <source>Navigate to the web site or web app in question and open the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools&quot;&gt;Developer Tools&lt;/a&gt;.</source>
          <target state="translated">해당 웹 사이트 또는 웹 앱으로 이동하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools&quot;&gt;개발자 도구를&lt;/a&gt; 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="24cfea67414a6051f8ef6f58e4703f34128176fb" translate="yes" xml:space="preserve">
          <source>Navigation directive</source>
          <target state="translated">네비게이션 지시어</target>
        </trans-unit>
        <trans-unit id="6cb820339644262483e0df69ef7b63b3ff7eb0cf" translate="yes" xml:space="preserve">
          <source>Navigation directives</source>
          <target state="translated">탐색 지시문</target>
        </trans-unit>
        <trans-unit id="3d7680d3ffd85eebd63677687a9aa06b50aefc80" translate="yes" xml:space="preserve">
          <source>Navigation directives govern to which location a user can navigate to or submit a form to, for example.</source>
          <target state="translated">탐색 지시문은 예를 들어 사용자가 양식을 탐색하거나 양식을 제출할 수있는 위치를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="b8f17a51486a6c93c18c623fe00bac1bdf6887b8" translate="yes" xml:space="preserve">
          <source>Navigation directives govern to which locations a user can navigate or submit a form, for example.</source>
          <target state="translated">Navigation directives govern to which locations a user can navigate or submit a form, for example.</target>
        </trans-unit>
        <trans-unit id="7d198c1bf717002743411eff6ca257f87f502017" translate="yes" xml:space="preserve">
          <source>Navigation to</source>
          <target state="translated">로 이동</target>
        </trans-unit>
        <trans-unit id="4fd5b390b406ef3a192cb33756658713f813cdd9" translate="yes" xml:space="preserve">
          <source>Navigational upgrades to third-party resources brings a significantly higher potential for breakage, these are not upgraded:</source>
          <target state="translated">타사 리소스로의 탐색 업그레이드는 업그레이드 가능성이 크게 높아지지만 업그레이드되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="1fd128a511cf81f2a11a5b15d991245ba541495b" translate="yes" xml:space="preserve">
          <source>Negotiating an HTTP version</source>
          <target state="translated">HTTP 버전 협상</target>
        </trans-unit>
        <trans-unit id="ed456a86e768ff867a28fdf6f5a786b103d3075c" translate="yes" xml:space="preserve">
          <source>Network Error Logging</source>
          <target state="translated">네트워크 오류 로깅</target>
        </trans-unit>
        <trans-unit id="dbc524ee8191a3484608469f9bf18ce746009948" translate="yes" xml:space="preserve">
          <source>Network Error Logging (NEL) explainer</source>
          <target state="translated">NEL (네트워크 오류 로깅) 설명자</target>
        </trans-unit>
        <trans-unit id="b3085195686e3cf306470fa36a147b8507888942" translate="yes" xml:space="preserve">
          <source>Network Error Logging is a mechanism that can be configured via the &lt;a href=&quot;headers/nel&quot;&gt;&lt;code&gt;NEL&lt;/code&gt;&lt;/a&gt; HTTP &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;response header&lt;/a&gt;&lt;/em&gt;. This experimental header allows web sites and applications to opt-in to receive reports about failed (and, if desired, successful) network fetches from supporting browsers.</source>
          <target state="translated">네트워크 오류 로깅은 &lt;a href=&quot;headers/nel&quot;&gt; &lt;code&gt;NEL&lt;/code&gt; &lt;/a&gt; HTTP &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;응답 헤더&lt;/a&gt;&lt;/em&gt; 를 통해 구성 할 수있는 메커니즘입니다 . 이 실험적 헤더를 사용하면 웹 사이트와 응용 프로그램이 지원 브라우저에서 실패한 (원하는 경우 성공한) 네트워크 가져 오기에 대한 보고서를 수신하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9359b43b3679ffebf30c6ff7f3222f0b6df7956c" translate="yes" xml:space="preserve">
          <source>Network Working Group                                      R. Fielding
Request for Comments: 2616                                   UC Irvine
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt;                                              J. Gettys
Category: Standards Track                                   Compaq/W3C
                                                              J. Mogul
                                                                Compaq
                                                            H. Frystyk
                                                               W3C/MIT
                                                           L. Masinter
                                                                 Xerox
                                                              P. Leach
                                                             Microsoft
                                                        T. Berners-Lee
                                                               W3C/MIT
                                                             June 1999</source>
          <target state="translated">Network Working Group R. Fielding 의견 요청 : 2616 UC Irvine 사용되지 않음 : &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;2068&lt;/a&gt; J. Gettys 카테고리 : 표준 트랙 Compaq / W3C J. Mogul Compaq H. Frystyk W3C / MIT L. Masinter Xerox P. Leach Microsoft T.Berners-Lee W3C / MIT 1999 년 6 월</target>
        </trans-unit>
        <trans-unit id="5428bbcea03dea51ffb7eb6864dea642db9e9245" translate="yes" xml:space="preserve">
          <source>Network Working Group                                   J. Gregorio, Ed.
Request for Comments: 5023                                        Google
Category: Standards Track                                B. de hOra, Ed.
                                                         NewBay Software
                                                            October 2007</source>
          <target state="translated">네트워크 실무 그룹 J. Gregorio, Ed. 의견 요청 : 5023 Google 카테고리 : 표준 Track B. de hOra, Ed. 2007 년 10 월 NewBay 소프트웨어</target>
        </trans-unit>
        <trans-unit id="4d8ae710cb99c4a7621dd240f2f410770ca46d77" translate="yes" xml:space="preserve">
          <source>Network Working Group                                  L. Dusseault, Ed.
Request for Comments: 4918                                   CommerceNet
Obsoletes: &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;2518&lt;/a&gt;                                                June 2007
Category: Standards Track</source>
          <target state="translated">네트워크 실무 그룹 L. Dusseault, Ed. 의견 요청 : 4918 CommerceNet 사용되지 않음 : 2007 년 6 월 &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;2518&lt;/a&gt; 범주 : 표준 트랙</target>
        </trans-unit>
        <trans-unit id="e3623b4b3820bb728eda2dde15946a4290819387" translate="yes" xml:space="preserve">
          <source>Network monitor</source>
          <target state="translated">네트워크 모니터</target>
        </trans-unit>
        <trans-unit id="e50032eb35aad47bed9d5ff741f087c1986c82ba" translate="yes" xml:space="preserve">
          <source>Network operators sometimes require some authentication, acceptance of terms, or other user interaction before granting access (for example in an internet caf&amp;eacute; or at an airport). They often identify clients who have not done so using their Media Access Control (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MAC&quot;&gt;MAC&lt;/a&gt;) addresses.</source>
          <target state="translated">네트워크 운영자는 액세스 권한을 부여하기 전에 (예 : 인터넷 카페 또는 공항에서) 일부 인증, 용어 수락 또는 기타 사용자 상호 작용이 필요한 경우가 있습니다. 종종 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MAC&quot;&gt;MAC&lt;/a&gt; (Media Access Control ) 주소를 사용하여 그렇게하지 않은 클라이언트를 식별 합니다.</target>
        </trans-unit>
        <trans-unit id="6b43fa182a48c949aed212293ef54b74e65782bb" translate="yes" xml:space="preserve">
          <source>Never assume that a browser or a rendering engine only runs on one type of device. Especially don't make different defaults for different browsers or rendering engines.</source>
          <target state="translated">브라우저 또는 렌더링 엔진이 한 유형의 장치에서만 실행된다고 가정하지 마십시오. 특히 브라우저 나 렌더링 엔진마다 다른 기본값을 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="2ec7bc9b9c4ccaf3179748dcdf8d87e35784c21d" translate="yes" xml:space="preserve">
          <source>Never use the OS token to define if a browser is on mobile, tablet or desktop. The OS may run on more than one type of (for example, Android runs on tablets as well as phones).</source>
          <target state="translated">브라우저가 모바일, 태블릿 또는 데스크탑에 있는지 여부를 정의하기 위해 OS 토큰을 사용하지 마십시오. OS는 둘 이상의 유형에서 실행될 수 있습니다 (예 : Android는 태블릿뿐만 아니라 전화에서도 실행).</target>
        </trans-unit>
        <trans-unit id="9f77f8caaa3035ec127bade7a0545aa68e91b610" translate="yes" xml:space="preserve">
          <source>New cookies can also be created via JavaScript using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; property, and if the &lt;code&gt;HttpOnly&lt;/code&gt; flag is not set, existing cookies can be accessed from JavaScript as well.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt; &lt;code&gt;Document.cookie&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 JavaScript를 통해 새 쿠키를 만들 수도 있고 &lt;code&gt;HttpOnly&lt;/code&gt; 플래그를 설정하지 않으면 JavaScript에서도 기존 쿠키에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cabdce1954a6f407085d2e37f45b2e105f92b4ef" translate="yes" xml:space="preserve">
          <source>New cookies can be created via JavaScript using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt;&lt;code&gt;Document.cookie&lt;/code&gt;&lt;/a&gt; property, and existing cookies can be accessed from JavaScript as well, if the &lt;code&gt;HttpOnly&lt;/code&gt; flag is not set.</source>
          <target state="translated">New cookies can be created via JavaScript using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie&quot;&gt; &lt;code&gt;Document.cookie&lt;/code&gt; &lt;/a&gt; property, and existing cookies can be accessed from JavaScript as well, if the &lt;code&gt;HttpOnly&lt;/code&gt; flag is not set.</target>
        </trans-unit>
        <trans-unit id="d5dfd3e32cc719743d36b551e2cc31f5efa09bb4" translate="yes" xml:space="preserve">
          <source>New definition; supplants &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;W3C CORS&lt;/a&gt; specification.</source>
          <target state="translated">새로운 정의; &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;W3C CORS&lt;/a&gt; 사양을 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="07349da357d41ca5084e50db9d4b1c35940a7768" translate="yes" xml:space="preserve">
          <source>New extension directives ought to consider defining:

   o  What it means for a directive to be specified multiple times,

   o  When the directive does not take an argument, what it means when
      an argument is present,

   o  When the directive requires an argument, what it means when it is
      missing,

   o  Whether the directive is specific to requests, responses, or able
      to be used in either.

   See also &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;.</source>
          <target state="translated">새로운 확장 지시어는 다음을 정의하는 것을 고려해야합니다 : o 지시어가 여러 번 지정되는 의미 o 지시어가 인수를 가지지 않을 때, 인수가있을 때의 의미 o 지시어에 인수가 필요한 경우, 그 지시어 o 지시어가 누락 된 경우, o 지시어가 요청, 응답에 고유한지 또는 어느 쪽에서 나 사용할 수 있는지 여부를 의미합니다. &lt;a href=&quot;#section-5.2.3&quot;&gt;섹션 5.2.3&lt;/a&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="e03ab58c9bd12196de6bace27f6b044aff80f31c" translate="yes" xml:space="preserve">
          <source>New specifications MAY require that the &quot;type&quot; parameter be used to
   identify the Atom Document type.  Producers of Atom Entry Documents
   SHOULD use the &quot;type&quot; parameter regardless of whether or not it is
   mandatory.  Producers of Atom Feed Documents MAY use the parameter.

   Atom processors that do not recognize the &quot;type&quot; parameter MUST
   ignore its value and examine the root element to determine the
   document type.

   Atom processors that do recognize the &quot;type&quot; parameter SHOULD detect
   and report inconsistencies between the parameter's value and the
   actual type of the document's root element.</source>
          <target state="translated">새로운 사양에서는 &quot;type&quot;매개 변수를 사용하여 Atom 문서 유형을 식별해야 할 수도 있습니다. Atom Entry Documents 생산자는 필수 여부에 관계없이 &quot;type&quot;매개 변수를 사용해야합니다. Atom Feed Documents 생산자는 매개 변수를 사용할 수 있습니다. &quot;type&quot;매개 변수를 인식하지 않는 원자 프로세서는 해당 값을 무시하고 루트 요소를 검사하여 문서 유형을 결정해야합니다. &quot;type&quot;매개 변수를 인식하는 원자 프로세서는 매개 변수 값과 문서 루트 요소의 실제 유형 사이의 불일치를 감지하고보고해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6f86f1d136025273b58141bacfbb27f4d328e53" translate="yes" xml:space="preserve">
          <source>Next, always make your code dynamic. The user can flip their mobile device on its side, changing the width and height of the page. Or, there might be some weird flip-phone-like device thing in the future where flipping it out extends the screen. Do not be the developer having a headache over how to deal with the flip-phone-like device thing. Never be satisfied with your webpage until you can open up the dev tools side panel and resize the screen while the webpage looks smooth, fluid, and dynamically resized. The simplest way to do this is to separate all the code that moves content around based on screen size to a single function that is called when the page is loaded and at each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event&quot;&gt;resize&lt;/a&gt; event thereafter. If there is a lot calculated by this layout function before it determines the new layout of the page, then consider debouncing the event listener such that it is not called as often. Also note that there is a huge difference between the media queries &lt;code&gt;(max-width: 25em)&lt;/code&gt;, &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt;, and &lt;code&gt;(max-width: 24.99em)&lt;/code&gt;: &lt;code&gt;(max-width: 25em)&lt;/code&gt; excludes &lt;code&gt;(max-width: 25em)&lt;/code&gt;, whereas &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt; includes &lt;code&gt;(max-width: 25em)&lt;/code&gt;. &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; is simply a poor man's version of &lt;code&gt;not all and&amp;nbsp;(min-width: 25em)&lt;/code&gt;: do not use &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; because the layout &lt;em&gt;might&lt;/em&gt; break on very high font sizes on very high definition devices in the future. Always be very deliberate about choosing the right media query and choosing the right &amp;gt;=, &amp;lt;=, &amp;gt;, or &amp;lt; in any corresponding JavaScript because it is very easy to get these mixed up, resulting in the website looking wonking right at the screen size where the layout changes. Thus, thoroughly test the website at the exact widths/heights where layout changes occur to ensure that the layout changes occur properly.</source>
          <target state="translated">Next, always make your code dynamic. The user can flip their mobile device on its side, changing the width and height of the page. Or, there might be some weird flip-phone-like device thing in the future where flipping it out extends the screen. Do not be the developer having a headache over how to deal with the flip-phone-like device thing. Never be satisfied with your webpage until you can open up the dev tools side panel and resize the screen while the webpage looks smooth, fluid, and dynamically resized. The simplest way to do this is to separate all the code that moves content around based on screen size to a single function that is called when the page is loaded and at each &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event&quot;&gt;resize&lt;/a&gt; event thereafter. If there is a lot calculated by this layout function before it determines the new layout of the page, then consider debouncing the event listener such that it is not called as often. Also note that there is a huge difference between the media queries &lt;code&gt;(max-width: 25em)&lt;/code&gt; , &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt; , and &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; : &lt;code&gt;(max-width: 25em)&lt;/code&gt; excludes &lt;code&gt;(max-width: 25em)&lt;/code&gt; , whereas &lt;code&gt;not all and (min-width: 25em)&lt;/code&gt; includes &lt;code&gt;(max-width: 25em)&lt;/code&gt; . &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; is simply a poor man's version of &lt;code&gt;not all and&amp;nbsp;(min-width: 25em)&lt;/code&gt; : do not use &lt;code&gt;(max-width: 24.99em)&lt;/code&gt; because the layout &lt;em&gt;might&lt;/em&gt; break on very high font sizes on very high definition devices in the future. Always be very deliberate about choosing the right media query and choosing the right &amp;gt;=, &amp;lt;=, &amp;gt;, or &amp;lt; in any corresponding JavaScript because it is very easy to get these mixed up, resulting in the website looking wonking right at the screen size where the layout changes. Thus, thoroughly test the website at the exact widths/heights where layout changes occur to ensure that the layout changes occur properly.</target>
        </trans-unit>
        <trans-unit id="a7b12052c0895e1742c7c3344db204110106e883" translate="yes" xml:space="preserve">
          <source>Next, you should configure your server to map the .pac filename extension to the MIME type.</source>
          <target state="translated">다음으로, .pac 파일 이름 확장자를 MIME 유형에 매핑하도록 서버를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="cec384f7e83e464f4943c72ce6f108fdb5f1b9ed" translate="yes" xml:space="preserve">
          <source>Nginx configuration</source>
          <target state="translated">Nginx 구성</target>
        </trans-unit>
        <trans-unit id="4f024b156ff549e7822c3e7d3365e8b43d1fb094" translate="yes" xml:space="preserve">
          <source>Nicholas Zakas article on cookies</source>
          <target state="translated">쿠키에 대한 니콜라스 자 카스 기사</target>
        </trans-unit>
        <trans-unit id="d49005ff40f6342035c0b550381a16bf3992b810" translate="yes" xml:space="preserve">
          <source>Nicholas Zakas article on cookies and security</source>
          <target state="translated">쿠키 및 보안에 대한 Nicholas Zakas 기사</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="2e029a8ccab5f30d2a37a9fb7c59617e13c16abc" translate="yes" xml:space="preserve">
          <source>No &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object is used in the request.</source>
          <target state="translated">요청에 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt; 객체가 사용 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="17a7d28f373846b5f71d72172ff5a2f4594ba504" translate="yes" xml:space="preserve">
          <source>No cache storage at all</source>
          <target state="translated">캐시 스토리지가 전혀 없음</target>
        </trans-unit>
        <trans-unit id="c55e5b38338e0330c22fc379f2150b6de3dd84ba" translate="yes" xml:space="preserve">
          <source>No caching</source>
          <target state="translated">캐싱 없음</target>
        </trans-unit>
        <trans-unit id="9b1fcbda693f085c4d6d33acbf333e420ba23fca" translate="yes" xml:space="preserve">
          <source>No changes.</source>
          <target state="translated">변경 사항 없음.</target>
        </trans-unit>
        <trans-unit id="d4c0e9228f3e84fb358ddccd2e00420664a85404" translate="yes" xml:space="preserve">
          <source>No common browsers send the &lt;code&gt;Expect&lt;/code&gt; header, but some other clients such as cURL do so by default.</source>
          <target state="translated">일반적인 브라우저는 &lt;code&gt;Expect&lt;/code&gt; 헤더를 보내지 않지만 cURL과 같은 다른 클라이언트는 기본적으로 그렇게합니다.</target>
        </trans-unit>
        <trans-unit id="cdd99c30977facc38dbb4433f72792cc98e7b957" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;http.headers.Alt-Svc&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">호환성 데이터가 없습니다. &quot;http.headers.Alt-Svc&quot;(깊이 : 1)에 대한 &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;데이터를 MDN 호환성 데이터 저장소에 제공하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f9ea7be16970fe67508438505a3982b349d0124" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;http.headers.Feature-Policy.document-domain&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">호환성 데이터가 없습니다. &quot;http.headers.Feature-Policy.document-domain&quot;(깊이 1)의 &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;데이터를 MDN 호환성 데이터 저장소에 제공하십시오&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
