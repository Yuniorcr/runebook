<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="bc945b7ff2d2e6b2bc34f07673b1f84668e234f7" translate="yes" xml:space="preserve">
          <source>After creating a new SQLite database using a command such as &lt;code&gt;touch database/database.sqlite&lt;/code&gt;, you can easily configure your environment variables to point to this newly created database by using the database's absolute path:</source>
          <target state="translated">&lt;code&gt;touch database/database.sqlite&lt;/code&gt; 와 같은 명령을 사용하여 새 SQLite 데이터베이스를 작성한 후 데이터베이스의 절대 경로를 사용하여 새로 작성된이 데이터베이스를 가리 키도록 환경 변수를 쉽게 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6850792543fa8fef8d17162db7db9c7efe564ece" translate="yes" xml:space="preserve">
          <source>After creating job middleware, they may be attached to a job by returning them from the job's &lt;code&gt;middleware&lt;/code&gt; method. This method does not exist on jobs scaffolded by the &lt;code&gt;make:job&lt;/code&gt; Artisan command, so you will need to add it to your own job class definition:</source>
          <target state="translated">작업 미들웨어를 생성 한 후 작업의 &lt;code&gt;middleware&lt;/code&gt; 메서드 에서 반환하여 작업에 연결할 수 있습니다 . 이 메서드는 &lt;code&gt;make:job&lt;/code&gt; Artisan 명령에 의해 스캐 폴딩 된 작업에 존재하지 않으므로 자신의 작업 클래스 정의에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8cc98a047e97253c01343d1fe05794339c5a04d9" translate="yes" xml:space="preserve">
          <source>After creating the accessor, add the attribute name to the &lt;code&gt;appends&lt;/code&gt; property on the model. Note that attribute names are typically referenced in &quot;snake case&quot;, even though the accessor is defined using &quot;camel case&quot;:</source>
          <target state="translated">접근자를 생성 한 후 속성 이름을 모델 의 &lt;code&gt;appends&lt;/code&gt; 속성에 추가 하십시오. 접근자가 &quot;카멜 케이스&quot;를 사용하여 정의 되었더라도 속성 이름은 일반적으로 &quot;스네이크 케이스&quot;에서 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="28333e1869ebe4c40cafa7411da0516cc7a8f81f" translate="yes" xml:space="preserve">
          <source>After creating the directory, ensure that the &lt;a href=&quot;https://github.com/laravel/laravel/blob/76369205c8715a4a8d0d73061aa042a74fd402dc/storage/framework/cache/.gitignore&quot;&gt;storage/framework/cache/.gitignore&lt;/a&gt; file is updated.</source>
          <target state="translated">디렉토리를 작성한 후 &lt;a href=&quot;https://github.com/laravel/laravel/blob/76369205c8715a4a8d0d73061aa042a74fd402dc/storage/framework/cache/.gitignore&quot;&gt;storage / framework / cache / .gitignore&lt;/a&gt; 파일이 업데이트 되었는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c1c136bcff3efc5a136db54f1eb2727b29fadc9" translate="yes" xml:space="preserve">
          <source>After creating your personal access client, place the client's ID and plain-text secret value in your application's &lt;code&gt;.env&lt;/code&gt; file:</source>
          <target state="translated">개인 액세스 클라이언트를 만든 후 클라이언트의 ID와 일반 텍스트 비밀 값을 애플리케이션의 &lt;code&gt;.env&lt;/code&gt; 파일에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="67aa05ee2c41d4980d6d1950c6a19062de564470" translate="yes" xml:space="preserve">
          <source>After defining a translation string that has pluralization options, you may use the &lt;code&gt;trans_choice&lt;/code&gt; function to retrieve the line for a given &quot;count&quot;. In this example, since the count is greater than one, the plural form of the translation string is returned:</source>
          <target state="translated">복수 옵션이있는 변환 문자열을 정의한 후 &lt;code&gt;trans_choice&lt;/code&gt; 함수를 사용하여 지정된 &quot;count&quot;에 대한 행을 검색 할 수 있습니다 . 이 예제에서는 개수가 1보다 크므로 복수 형식의 변환 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="faed7a47c43e49a99f2c60b365633986bcf38a4d" translate="yes" xml:space="preserve">
          <source>After defining and mapping your Eloquent events, you may use &lt;a href=&quot;events#defining-listeners&quot;&gt;event listeners&lt;/a&gt; to handle the events.</source>
          <target state="translated">Eloquent 이벤트를 정의하고 맵핑 한 후 &lt;a href=&quot;events#defining-listeners&quot;&gt;이벤트 리스너&lt;/a&gt; 를 사용하여 이벤트를 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="2e6283fd80256b20f7a0085ddfd19e5653971f13" translate="yes" xml:space="preserve">
          <source>After defining the state transformation method, we may use it like so:</source>
          <target state="translated">상태 변환 방법을 정의한 후 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e73974bad59195cb195aa836ab5c0e82b716111" translate="yes" xml:space="preserve">
          <source>After defining your resource collection, it may be returned from a route or controller:</source>
          <target state="translated">자원 콜렉션을 정의한 후 라우트 또는 컨트롤러에서 리턴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="266336d9ec13154f61e5821da1bc6124a29d4ced" translate="yes" xml:space="preserve">
          <source>After exporting the components, the &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; directory will contain a &lt;code&gt;default.css&lt;/code&gt; file. You may customize the CSS in this file and your styles will automatically be in-lined within the HTML representations of your Markdown mail messages.</source>
          <target state="translated">구성 요소를 내 보낸 후 &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; 디렉토리에 &lt;code&gt;default.css&lt;/code&gt; 파일 이 포함 됩니다. 이 파일에서 CSS를 사용자 정의 할 수 있으며 마크 다운 메일 메시지의 HTML 표현 내에 스타일이 자동으로 인라인됩니다.</target>
        </trans-unit>
        <trans-unit id="168871424a62825109ce2de67953c9df7662c108" translate="yes" xml:space="preserve">
          <source>After exporting the components, the &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; directory will contain a &lt;code&gt;default.css&lt;/code&gt; file. You may customize the CSS in this file and your styles will automatically be in-lined within the HTML representations of your Markdown notifications.</source>
          <target state="translated">구성 요소를 내 보낸 후 &lt;code&gt;resources/views/vendor/mail/html/themes&lt;/code&gt; 디렉토리에 &lt;code&gt;default.css&lt;/code&gt; 파일 이 포함 됩니다. 이 파일에서 CSS를 사용자 정의 할 수 있으며 마크 다운 알림의 HTML 표현 내에 스타일이 자동으로 인라인됩니다.</target>
        </trans-unit>
        <trans-unit id="9015c5050f239b8294e634638ca6502b9ba2c8d0" translate="yes" xml:space="preserve">
          <source>After generating the pay link, you may use Cashier's provided &lt;code&gt;paddle-button&lt;/code&gt; Blade component to allow the user to initiate the Paddle widget and complete the charge:</source>
          <target state="translated">지불 링크를 생성 한 후 캐셔가 제공하는 &lt;code&gt;paddle-button&lt;/code&gt; 블레이드 구성 요소를 사용하여 사용자가 패들 위젯을 시작하고 청구를 완료 할 수 있도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5335a7b50c13b00d28febb960171c755b1c6af74" translate="yes" xml:space="preserve">
          <source>After generating the versioned file, you won't know the exact file name. So, you should use Laravel's global &lt;code&gt;mix&lt;/code&gt; function within your &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; to load the appropriately hashed asset. The &lt;code&gt;mix&lt;/code&gt; function will automatically determine the current name of the hashed file:</source>
          <target state="translated">버전이 지정된 파일을 생성 한 후 정확한 파일 이름을 알 수 없습니다. 따라서 &lt;a href=&quot;views&quot;&gt;뷰&lt;/a&gt; 내에서 Laravel의 전역 &lt;code&gt;mix&lt;/code&gt; 기능 을 사용하여 적절하게 해시 된 자산을로드해야합니다. &lt;code&gt;mix&lt;/code&gt; 기능은 자동으로 해시 파일의 현재 이름을 결정합니다 :</target>
        </trans-unit>
        <trans-unit id="98df62441f10bd2ed16f001809403b93b11db1f7" translate="yes" xml:space="preserve">
          <source>After generating your command, you should fill in the &lt;code&gt;signature&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; properties of the class, which will be used when displaying your command on the &lt;code&gt;list&lt;/code&gt; screen. The &lt;code&gt;handle&lt;/code&gt; method will be called when your command is executed. You may place your command logic in this method.</source>
          <target state="translated">명령을 생성 한 후 클래스 의 &lt;code&gt;signature&lt;/code&gt; 및 &lt;code&gt;description&lt;/code&gt; 속성을 입력해야합니다.이 속성은 &lt;code&gt;list&lt;/code&gt; 화면 에 명령을 표시 할 때 사용됩니다 . &lt;code&gt;handle&lt;/code&gt; 명령이 실행될 때 메서드가 호출됩니다. 이 방법으로 명령 논리를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44639e2eb573aad98c447fd5d2148e7690ac54b2" translate="yes" xml:space="preserve">
          <source>After installing Dusk, a base &lt;code&gt;Page&lt;/code&gt; class will be placed in your &lt;code&gt;tests/Browser/Pages&lt;/code&gt; directory. This class contains a &lt;code&gt;siteElements&lt;/code&gt; method which may be used to define global shorthand selectors that should be available on every page throughout your application:</source>
          <target state="translated">Dusk를 설치하면 기본 &lt;code&gt;Page&lt;/code&gt; 클래스가 &lt;code&gt;tests/Browser/Pages&lt;/code&gt; 디렉토리에 배치됩니다 . 이 클래스에는 응용 프로그램의 모든 페이지에서 사용할 수있는 전역 속기 선택자를 정의하는 데 사용할 수 있는 &lt;code&gt;siteElements&lt;/code&gt; 메소드가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a492919127b38dab7e12d3e3cadbc705c64eab0c" translate="yes" xml:space="preserve">
          <source>After installing Horizon, publish its assets using the &lt;code&gt;horizon:install&lt;/code&gt; Artisan command:</source>
          <target state="translated">Horizon을 설치 한 후 &lt;code&gt;horizon:install&lt;/code&gt; Artisan 명령을 사용하여 자산을 게시합니다 .</target>
        </trans-unit>
        <trans-unit id="88d05813238d1fcdcbda1d44ddfe21857dc16ffb" translate="yes" xml:space="preserve">
          <source>After installing Horizon, publish its assets using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">Horizon을 설치 한 후 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan 명령을 사용하여 자산을 게시하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a7777c361800190e746a479043e98e9849e0988" translate="yes" xml:space="preserve">
          <source>After installing Laravel, you may need to configure some permissions. Directories within the &lt;code&gt;storage&lt;/code&gt; and the &lt;code&gt;bootstrap/cache&lt;/code&gt; directories should be writable by your web server or Laravel will not run. If you are using the &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; virtual machine, these permissions should already be set.</source>
          <target state="translated">Laravel을 설치 한 후 일부 권한을 구성해야 할 수 있습니다. 웹 서버 에서 &lt;code&gt;storage&lt;/code&gt; 및 &lt;code&gt;bootstrap/cache&lt;/code&gt; 디렉토리의 디렉토리를 쓸 수 있어야합니다. 그렇지 않으면 Laravel이 실행되지 않습니다. &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; 가상 머신을 사용중인 경우 이러한 권한이 이미 설정되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6c12ff088d9fddc24d04152b41501f8246f75486" translate="yes" xml:space="preserve">
          <source>After installing Laravel, you should configure your web server's document / web root to be the &lt;code&gt;public&lt;/code&gt; directory. The &lt;code&gt;index.php&lt;/code&gt; in this directory serves as the front controller for all HTTP requests entering your application.</source>
          <target state="translated">Laravel을 설치 한 후에는 웹 서버의 문서 / 웹 루트를 &lt;code&gt;public&lt;/code&gt; 디렉토리로 구성해야합니다 . 이 디렉토리 의 &lt;code&gt;index.php&lt;/code&gt; 는 애플리케이션에 들어가는 모든 HTTP 요청에 대한 프론트 컨트롤러 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="8ff35686175e7c11268b26f88db06e74093333c2" translate="yes" xml:space="preserve">
          <source>After installing Scout, you should publish the Scout configuration using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. This command will publish the &lt;code&gt;scout.php&lt;/code&gt; configuration file to your &lt;code&gt;config&lt;/code&gt; directory:</source>
          <target state="translated">Scout을 설치 한 후 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan 명령을 사용하여 Scout 구성을 게시해야합니다 . 이 명령은 &lt;code&gt;scout.php&lt;/code&gt; 구성 파일을 &lt;code&gt;config&lt;/code&gt; 디렉토리에 게시합니다 .</target>
        </trans-unit>
        <trans-unit id="5e89fe530f05df46c8a9d46bca1e6fc477c3b271" translate="yes" xml:space="preserve">
          <source>After installing Telescope, publish its assets using the &lt;code&gt;telescope:install&lt;/code&gt; Artisan command. After installing Telescope, you should also run the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="translated">Telescope를 설치 한 후 &lt;code&gt;telescope:install&lt;/code&gt; Artisan 명령을 사용하여 자산을 게시하십시오 . Telescope를 설치 한 후 &lt;code&gt;migrate&lt;/code&gt; 명령 도 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3c493f1fb6c4d70588b2c54f87784b1e90ba7312" translate="yes" xml:space="preserve">
          <source>After installing the Dusk package, run the &lt;code&gt;dusk:install&lt;/code&gt; Artisan command:</source>
          <target state="translated">Dusk 패키지를 설치 한 후 &lt;code&gt;dusk:install&lt;/code&gt; Artisan 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="40abaead0bade4fc8602bc11a871fc1e8f393765" translate="yes" xml:space="preserve">
          <source>After making a test request to your application, the &lt;code&gt;dump&lt;/code&gt;, &lt;code&gt;dumpHeaders&lt;/code&gt;, and &lt;code&gt;dumpSession&lt;/code&gt; methods may be used to examine and debug the response contents:</source>
          <target state="translated">응용 프로그램에 테스트 요청을 한 후 &lt;code&gt;dump&lt;/code&gt; , &lt;code&gt;dumpHeaders&lt;/code&gt; 및 &lt;code&gt;dumpSession&lt;/code&gt; 메서드를 사용하여 응답 내용을 검사하고 디버깅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1168f5e249efcb974537c403d47486ea8618da13" translate="yes" xml:space="preserve">
          <source>After placing the application in maintenance mode, you may navigate to the application URL matching this token and Laravel will issue a maintenance mode bypass cookie to your browser:</source>
          <target state="translated">애플리케이션을 유지 관리 모드로 설정 한 후이 토큰과 일치하는 애플리케이션 URL로 이동할 수 있으며 Laravel은 브라우저에 유지 관리 모드 우회 쿠키를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="96ef02babab826a2cf15662f8005918a615ee355" translate="yes" xml:space="preserve">
          <source>After publishing Horizon's assets, its primary configuration file will be located at &lt;code&gt;config/horizon.php&lt;/code&gt;. This configuration file allows you to configure your worker options and each configuration option includes a description of its purpose, so be sure to thoroughly explore this file.</source>
          <target state="translated">Horizon의 자산을 게시 한 후 기본 구성 파일은 &lt;code&gt;config/horizon.php&lt;/code&gt; 에 있습니다. 이 구성 파일을 사용하면 작업자 옵션을 구성 할 수 있으며 각 구성 옵션에는 목적에 대한 설명이 포함되므로이 파일을 철저히 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="f9e886ba3919a985d58f0e1bc23bbb1c8af85c28" translate="yes" xml:space="preserve">
          <source>After publishing Telescope's assets, its primary configuration file will be located at &lt;code&gt;config/telescope.php&lt;/code&gt;. This configuration file allows you to configure your watcher options and each configuration option includes a description of its purpose, so be sure to thoroughly explore this file.</source>
          <target state="translated">Telescope의 자산을 게시 한 후 기본 구성 파일은 &lt;code&gt;config/telescope.php&lt;/code&gt; 에 있습니다. 이 구성 파일을 사용하면 감시자 옵션을 구성 할 수 있으며 각 구성 옵션에는 용도에 대한 설명이 포함되어 있으므로이 파일을 철저히 탐색해야합니다.</target>
        </trans-unit>
        <trans-unit id="85ac4824fe3d71d573cc0651c676613c4a0e5672" translate="yes" xml:space="preserve">
          <source>After registering listeners in your &lt;code&gt;EventServiceProvider&lt;/code&gt;, use the &lt;code&gt;event:generate&lt;/code&gt; Artisan command to quickly generate listener classes.</source>
          <target state="translated">당신의 청취자를 등록 후 &lt;code&gt;EventServiceProvider&lt;/code&gt; , 사용 &lt;code&gt;event:generate&lt;/code&gt; 빠르게 리스너 클래스를 생성에 장인 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="68f7c1c22258c7cf713c0b427bba08cecef84937" translate="yes" xml:space="preserve">
          <source>After registering the components, make sure to run &lt;code&gt;npm run dev&lt;/code&gt; to recompile your assets. Once you have recompiled your assets, you may drop the components into one of your application's templates to get started creating clients and personal access tokens:</source>
          <target state="translated">구성 요소를 등록한 후 &lt;code&gt;npm run dev&lt;/code&gt; 를 실행 하여 자산을 다시 컴파일하십시오. 자산을 다시 컴파일 한 후에는 클라이언트 및 개인용 액세스 토큰을 생성하기 위해 구성 요소를 응용 프로그램의 템플릿 중 하나에 드롭 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76253c629ea1bcd7174f54a1ea4d68df35fc72fe" translate="yes" xml:space="preserve">
          <source>After retrieving the prices you may display them however you wish:</source>
          <target state="translated">가격을 검색 한 후 원하는대로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d25a3b36ee07fae64eb483890545a422b693e32" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;telescope:install&lt;/code&gt;, you should remove the &lt;code&gt;TelescopeServiceProvider&lt;/code&gt; service provider registration from your &lt;code&gt;app&lt;/code&gt; configuration file. Instead, manually register the service provider in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;telescope:install&lt;/code&gt; 을 실행 한 후 &lt;code&gt;app&lt;/code&gt; 구성 파일 에서 &lt;code&gt;TelescopeServiceProvider&lt;/code&gt; 서비스 공급자 등록을 제거해야 합니다. 대신 &lt;code&gt;AppServiceProvider&lt;/code&gt; 의 &lt;code&gt;register&lt;/code&gt; 메서드 에서 서비스 공급자를 수동으로 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="ed112ba7d9010ea50c0d9ea576eb39c26ff469f6" translate="yes" xml:space="preserve">
          <source>After running the &lt;code&gt;link&lt;/code&gt; command, you can access the site in your browser at &lt;code&gt;http://app-name.test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 명령을 실행 한 후 브라우저 ( &lt;code&gt;http://app-name.test&lt;/code&gt; ) 의 사이트에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e937a96ec6d237ee175ee7574136a0fcb7eac716" translate="yes" xml:space="preserve">
          <source>After running the &lt;code&gt;passport:install&lt;/code&gt; command, add the &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; trait to your &lt;code&gt;App\Models\User&lt;/code&gt; model. This trait will provide a few helper methods to your model which allow you to inspect the authenticated user's token and scopes:</source>
          <target state="translated">&lt;code&gt;passport:install&lt;/code&gt; 명령을 실행 한 후 &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; 를 &lt;code&gt;App\Models\User&lt;/code&gt; 모델에 추가하십시오. 이 특성은 인증 된 사용자의 토큰과 범위를 검사 할 수있는 몇 가지 도우미 메서드를 모델에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a7d5787f05beff86258d4d580e20829ee5f579c" translate="yes" xml:space="preserve">
          <source>After running the callback, the columns are reset to the original value.</source>
          <target state="translated">콜백을 실행하면 열이 원래 값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f2393d4d739125318458584200e944eac68cabd5" translate="yes" xml:space="preserve">
          <source>After running the command, you will see an Ngrok screen appear which contains the activity log and the publicly accessible URLs for the shared site. If you would like to specify a custom region, subdomain, or other Ngrok runtime option, you may add them to your &lt;code&gt;share&lt;/code&gt; command:</source>
          <target state="translated">명령을 실행하면 활동 로그 및 공유 사이트의 공개적으로 액세스 가능한 URL이 포함 된 Ngrok 화면이 나타납니다. 사용자 정의 리전, 하위 도메인 또는 기타 Ngrok 런타임 옵션을 지정하려면 &lt;code&gt;share&lt;/code&gt; 명령에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cddc7c4f52c431decf1566832be308adcaa7007e" translate="yes" xml:space="preserve">
          <source>After running this command, add the &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; trait to your &lt;code&gt;App\User&lt;/code&gt; model. This trait will provide a few helper methods to your model which allow you to inspect the authenticated user's token and scopes:</source>
          <target state="translated">이 명령을 실행 한 후 &lt;code&gt;Laravel\Passport\HasApiTokens&lt;/code&gt; 특성을 &lt;code&gt;App\User&lt;/code&gt; 모델에 추가하십시오. 이 특성은 인증 된 사용자의 토큰 및 범위를 검사 할 수있는 몇 가지 도우미 방법을 모델에 제공합니다.</target>
        </trans-unit>
        <trans-unit id="df52d8ec7d1a8730422fb42b49b3bdb67b966161" translate="yes" xml:space="preserve">
          <source>After running this command, your cached routes file will be loaded on every request. Remember, if you add any new routes you will need to generate a fresh route cache. Because of this, you should only run the &lt;code&gt;route:cache&lt;/code&gt; command during your project's deployment.</source>
          <target state="translated">이 명령을 실행하면 캐시 된 라우트 파일이 모든 요청에로드됩니다. 새 경로를 추가하면 새로운 경로 캐시를 생성해야합니다. 이 때문에 프로젝트 배포 중 &lt;code&gt;route:cache&lt;/code&gt; 명령 만 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0446f35b0948454063d7300996c356d95428719d" translate="yes" xml:space="preserve">
          <source>After the card has been verified by Stripe, you may pass the resulting &lt;code&gt;setupIntent.payment_method&lt;/code&gt; identifier to your Laravel application, where it can be attached to the customer. The payment method can either be &lt;a href=&quot;#adding-payment-methods&quot;&gt;added as a new payment method&lt;/a&gt; or &lt;a href=&quot;#updating-the-default-payment-method&quot;&gt;used to update the default payment method&lt;/a&gt;. You can also immediately use the payment method identifier to &lt;a href=&quot;#creating-subscriptions&quot;&gt;create a new subscription&lt;/a&gt;.</source>
          <target state="translated">Stripe에서 카드를 확인한 후 결과 &lt;code&gt;setupIntent.payment_method&lt;/code&gt; 식별자를 Laravel 애플리케이션에 전달할 수 있으며, 여기서 고객에게 연결할 수 있습니다. 결제 방법은 &lt;a href=&quot;#adding-payment-methods&quot;&gt;새 결제 방법&lt;/a&gt; 으로 추가 하거나 &lt;a href=&quot;#updating-the-default-payment-method&quot;&gt;기본 결제 방법을 업데이트하는 데 사용할 수&lt;/a&gt; 있습니다. 결제 수단 식별자를 즉시 ​​사용하여 &lt;a href=&quot;#creating-subscriptions&quot;&gt;새 구독&lt;/a&gt; 을 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1cd25c90aee59b958f5c7d6f739f2caffd9acb88" translate="yes" xml:space="preserve">
          <source>After the user has finished their checkout, a &lt;code&gt;subscription_created&lt;/code&gt; webhook will be dispatched from Paddle. Cashier will receive this webhook and setup the subscription for your customer. In order to make sure all webhooks are properly received and handled by your application, ensure you have properly &lt;a href=&quot;#handling-paddle-webhooks&quot;&gt;setup webhook handling&lt;/a&gt;.</source>
          <target state="translated">사용자가 결제를 완료하면 &lt;code&gt;subscription_created&lt;/code&gt; 웹훅이 Paddle에서 발송됩니다. 계산원은이 웹훅을 받고 고객의 구독을 설정합니다. 모든 웹훅이 애플리케이션에서 제대로 수신되고 처리되는지 확인하려면 웹훅 처리를 올바르게 &lt;a href=&quot;#handling-paddle-webhooks&quot;&gt;설정&lt;/a&gt; 했는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="558256ec99522218519097358316f6785f11b748" translate="yes" xml:space="preserve">
          <source>After the user is redirected, you may display the flashed message from the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="translated">사용자가 리디렉션 된 후 &lt;a href=&quot;session&quot;&gt;세션&lt;/a&gt; 에서 플래시 된 메시지를 표시 할 수 있습니다 . 예를 들어, &lt;a href=&quot;blade&quot;&gt;Blade 구문 사용&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="828f58932c9b493f2be4b7786f2f0cc407ba12c8" translate="yes" xml:space="preserve">
          <source>After the variable has been defined in your &lt;code&gt;.env&lt;/code&gt; file, you may access it via the &lt;code&gt;process.env&lt;/code&gt; object. If the value changes while you are running a &lt;code&gt;watch&lt;/code&gt; task, you will need to restart the task:</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; 파일 에 변수가 정의 된 후 &lt;code&gt;process.env&lt;/code&gt; 개체 를 통해 액세스 할 수 있습니다 . &lt;code&gt;watch&lt;/code&gt; 작업을 실행하는 동안 값이 변경 되면 작업을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="85f0e6de2ce0eaea28f22e3645777b82d053b5ad" translate="yes" xml:space="preserve">
          <source>After the variable has been defined in your &lt;code&gt;.env&lt;/code&gt; file, you may access via the &lt;code&gt;process.env&lt;/code&gt; object. If the value changes while you are running a &lt;code&gt;watch&lt;/code&gt; task, you will need to restart the task:</source>
          <target state="translated">변수가 &lt;code&gt;.env&lt;/code&gt; 파일 에 정의 되면 &lt;code&gt;process.env&lt;/code&gt; 객체 를 통해 액세스 할 수 있습니다 . &lt;code&gt;watch&lt;/code&gt; 작업을 실행하는 동안 값이 변경 되면 작업을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="6023665aed7613db0fcd7a52a16aeb533a525e6c" translate="yes" xml:space="preserve">
          <source>After updating the &lt;code&gt;Homestead.yaml&lt;/code&gt;, be sure to re-provision the machine by running &lt;code&gt;vagrant reload --provision&lt;/code&gt;. This will update the PHP-FPM configuration for all of the installed PHP versions and also update the environment for the &lt;code&gt;vagrant&lt;/code&gt; user.</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; 을 업데이트 한 후 &lt;code&gt;vagrant reload --provision&lt;/code&gt; 을 실행하여 머신을 다시 프로비저닝하십시오 . 설치된 모든 PHP 버전에 대한 PHP-FPM 구성이 업데이트되고 &lt;code&gt;vagrant&lt;/code&gt; 사용자 의 환경도 업데이트 됩니다.</target>
        </trans-unit>
        <trans-unit id="8811d631d01f0fa6d9e85ddaec0ba352e0facf38" translate="yes" xml:space="preserve">
          <source>After updating the logic of a Blade directive, you will need to delete all of the cached Blade views. The cached Blade views may be removed using the &lt;code&gt;view:clear&lt;/code&gt; Artisan command.</source>
          <target state="translated">Blade 지시문의 논리를 업데이트 한 후 캐시 된 모든 Blade보기를 삭제해야합니다. 캐시 된 블레이드보기는 &lt;code&gt;view:clear&lt;/code&gt; Artisan 명령을 사용하여 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c5c504b243380b2f8bb1bec6e9949524e990aa6" translate="yes" xml:space="preserve">
          <source>After upgrading, it may be necessary to re-park or re-link your sites.</source>
          <target state="translated">업그레이드 후 사이트를 다시 주차하거나 다시 연결해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b815871876316d838b1e9e6c11f51aec78a850" translate="yes" xml:space="preserve">
          <source>After using the &lt;code&gt;loginAs&lt;/code&gt; method, the user session will be maintained for all tests within the file.</source>
          <target state="translated">&lt;code&gt;loginAs&lt;/code&gt; 메소드를 사용한 후에 는 파일 내의 모든 테스트에 대해 사용자 세션이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="73dce826b5aab638e2ea968fc647c5a48211b07f" translate="yes" xml:space="preserve">
          <source>After writing the subscriber, you are ready to register it with the event dispatcher. You may register subscribers using the &lt;code&gt;$subscribe&lt;/code&gt; property on the &lt;code&gt;EventServiceProvider&lt;/code&gt;. For example, let's add the &lt;code&gt;UserEventSubscriber&lt;/code&gt; to the list:</source>
          <target state="translated">가입자를 작성한 후에는 이벤트 디스패처에 등록 할 준비가되었습니다. &lt;code&gt;EventServiceProvider&lt;/code&gt; 의 &lt;code&gt;$subscribe&lt;/code&gt; 속성을 사용하여 구독자를 등록 할 수 있습니다 . 예를 들어, &lt;code&gt;UserEventSubscriber&lt;/code&gt; 를 목록에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7925753cd9becdbedccfa7bb027f4912160ab9b2" translate="yes" xml:space="preserve">
          <source>After you have created the Setup Intent and passed it to the view, you should attach its secret to the element that will gather the payment method. For example, consider this &quot;update payment method&quot; form:</source>
          <target state="translated">설정 인 텐트를 생성하고 뷰에 전달한 후 결제 방법을 수집 할 요소에 해당 비밀을 첨부해야합니다. 예를 들어 다음과 같은 '결제 수단 업데이트'양식을 생각해보세요.</target>
        </trans-unit>
        <trans-unit id="ed3a0f136faeddca19fc05d209631bb4fa62f8fe" translate="yes" xml:space="preserve">
          <source>After you have registered the provider using the &lt;code&gt;provider&lt;/code&gt; method, you may switch to the new user provider in your &lt;code&gt;auth.php&lt;/code&gt; configuration file. First, define a &lt;code&gt;provider&lt;/code&gt; that uses your new driver:</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 메소드를 사용하여 제공자를 등록한 후 &lt;code&gt;auth.php&lt;/code&gt; 구성 파일 에서 새 사용자 제공자로 전환 할 수 있습니다. 먼저 새 드라이버를 사용 하는 &lt;code&gt;provider&lt;/code&gt; 를 정의 하십시오.</target>
        </trans-unit>
        <trans-unit id="695feea4c76ed2ef4d323476c8a90fc1c030b83e" translate="yes" xml:space="preserve">
          <source>After you have updated the &lt;code&gt;aliases&lt;/code&gt; file, you should re-provision the Homestead machine using the &lt;code&gt;vagrant reload --provision&lt;/code&gt; command. This will ensure that your new aliases are available on the machine.</source>
          <target state="translated">&lt;code&gt;aliases&lt;/code&gt; 파일 을 업데이트 한 후 &lt;code&gt;vagrant reload --provision&lt;/code&gt; 명령을 사용하여 Homestead 머신을 다시 프로비저닝해야합니다 . 이렇게하면 컴퓨터에서 새 별칭을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3888df1fd8563f6ec6730e2bfebd390230e2e53" translate="yes" xml:space="preserve">
          <source>Again, Laravel will generate all of the necessary views for password reset when the &lt;code&gt;make:auth&lt;/code&gt; command is executed. These views are placed in &lt;code&gt;resources/views/auth/passwords&lt;/code&gt;. You are free to customize them as needed for your application.</source>
          <target state="translated">Laravel은 &lt;code&gt;make:auth&lt;/code&gt; 명령이 실행될 때 비밀번호 재설정에 필요한 모든보기를 생성합니다 . 이러한보기는 &lt;code&gt;resources/views/auth/passwords&lt;/code&gt; 에 있습니다. 응용 프로그램에 필요한대로 자유롭게 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0fee7896ec8637b5c1c7aaaf824d5a2a3f3a190" translate="yes" xml:space="preserve">
          <source>Again, if the given condition is &lt;code&gt;false&lt;/code&gt;, these attributes will be removed from the resource response entirely before it is sent to the client.</source>
          <target state="translated">다시 말하지만, 주어진 조건이 &lt;code&gt;false&lt;/code&gt; 이면 이러한 속성은 클라이언트로 전송되기 전에 자원 응답에서 완전히 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="e1d65872df8fc11bdda6c6daf158714da3809809" translate="yes" xml:space="preserve">
          <source>Again, like the &lt;code&gt;less&lt;/code&gt; method, you may compile multiple Sass files into their own respective CSS files and even customize the output directory of the resulting CSS:</source>
          <target state="translated">다시 말하지만 &lt;code&gt;less&lt;/code&gt; 방법 과 마찬가지로 여러 Sass 파일을 자체 CSS 파일로 컴파일하고 결과 CSS의 출력 디렉토리를 사용자 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f006f4da206afecb998191d8cfe01e7627cdeeb" translate="yes" xml:space="preserve">
          <source>Again, notice that we did not have to explicitly bind the error messages to the view in our &lt;code&gt;GET&lt;/code&gt; route. This is because Laravel will check for errors in the session data, and automatically bind them to the view if they are available. The &lt;code&gt;$errors&lt;/code&gt; variable will be an instance of &lt;code&gt;Illuminate\Support\MessageBag&lt;/code&gt;. For more information on working with this object, &lt;a href=&quot;#working-with-error-messages&quot;&gt;check out its documentation&lt;/a&gt;.</source>
          <target state="translated">다시 한 번, 오류 메시지를 &lt;code&gt;GET&lt;/code&gt; 라우트 의 뷰에 명시 적으로 바인딩 할 필요는 없습니다 . Laravel이 세션 데이터에서 오류를 확인하고 사용 가능한 경우 자동으로 뷰에 바인딩하기 때문입니다. &lt;code&gt;$errors&lt;/code&gt; 변수의 인스턴스가 될 것 &lt;code&gt;Illuminate\Support\MessageBag&lt;/code&gt; . 이 오브젝트 작업에 대한 자세한 정보는 &lt;a href=&quot;#working-with-error-messages&quot;&gt;해당 문서를 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66e6f71d50d8cc674a3ae8ef4619051a5d73b7c1" translate="yes" xml:space="preserve">
          <source>Again, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you may pass a class name to the middleware. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="translated">다시, &lt;code&gt;create&lt;/code&gt; 와 같은 일부 작업 에는 모델 인스턴스가 필요하지 않을 수 있습니다. 이러한 상황에서는 클래스 이름을 미들웨어에 전달할 수 있습니다. 클래스 이름은 조치를 승인 할 때 사용할 정책을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="23cf218ba5f7b63866346824d2808f93f995077d" translate="yes" xml:space="preserve">
          <source>Age the flash data for the session.</source>
          <target state="translated">세션의 플래시 데이터를 에이징하십시오.</target>
        </trans-unit>
        <trans-unit id="4244013d1f8097832d5d59d8d0c67b37b9e71851" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider</source>
          <target state="translated">AggregateServiceProvider</target>
        </trans-unit>
        <trans-unit id="9fec6ac500de1bc9ae6f5b7513df52aec3923888" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider (Support)</source>
          <target state="translated">AggregateServiceProvider (지원)</target>
        </trans-unit>
        <trans-unit id="f9bce7008ac8227329b73f384c9a6c840d4eb8f9" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider::provides()</source>
          <target state="translated">AggregateServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="b66267f84818f81cb50e1a05c05cc297d4616a26" translate="yes" xml:space="preserve">
          <source>AggregateServiceProvider::register()</source>
          <target state="translated">AggregateServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="deb507c2bab5b6df1dfb7a527622531bee5bbcae" translate="yes" xml:space="preserve">
          <source>Aggregates</source>
          <target state="translated">Aggregates</target>
        </trans-unit>
        <trans-unit id="a03c5cb69dcd55d29fdc2dfafeaabfc360dcbe87" translate="yes" xml:space="preserve">
          <source>Aggregating Related Models</source>
          <target state="translated">관련 모델 집계</target>
        </trans-unit>
        <trans-unit id="ac9c0909d88fac617bcf8608f451efb94e03f631" translate="yes" xml:space="preserve">
          <source>Aggregating Related Models On Polymorphic Relationships</source>
          <target state="translated">다형성 관계에 대한 관련 모델 집계</target>
        </trans-unit>
        <trans-unit id="0339b97ccad05f8d817e9eadcd1ad2ac024376be" translate="yes" xml:space="preserve">
          <source>Algolia</source>
          <target state="translated">Algolia</target>
        </trans-unit>
        <trans-unit id="52b998b7f08c7e91b51fc0e54a97353ce33706c5" translate="yes" xml:space="preserve">
          <source>Alias a type to a different name.</source>
          <target state="translated">유형을 다른 이름으로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2bdb5cddcb984ca0e1914b408f4d910bd3914eb6" translate="yes" xml:space="preserve">
          <source>Alias for self::timestamps().</source>
          <target state="translated">self :: timestamps ()의 별칭.</target>
        </trans-unit>
        <trans-unit id="14db1f5a90bd8746599570b29acc3ca9c4d71da4" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;avg&quot; method.</source>
          <target state="translated">&quot;avg&quot;방법의 별명.</target>
        </trans-unit>
        <trans-unit id="08621ed78a553773baf87e6d600f77e9f067caaa" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;contains&quot; method.</source>
          <target state="translated">&quot;contains&quot;메소드의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="5733a53b4cf6a5b4da6df5249f594ca10db32dd0" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;currentRouteNamed&quot; method.</source>
          <target state="translated">&quot;currentRouteNamed&quot;메소드의 별명.</target>
        </trans-unit>
        <trans-unit id="15720665c1bf5a0790fe849fc758384f7e133f07" translate="yes" xml:space="preserve">
          <source>Alias for the &quot;currentRouteUses&quot; method.</source>
          <target state="translated">&quot;currentRouteUses&quot;메소드의 별명</target>
        </trans-unit>
        <trans-unit id="c7db52fda6a4aeb52e942fe4e007b651fe9b3f85" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-avg&quot;&gt;&lt;code&gt;avg&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method-avg&quot;&gt; &lt;code&gt;avg&lt;/code&gt; &lt;/a&gt; 방법의 별명 .</target>
        </trans-unit>
        <trans-unit id="0cec41af5ec158796315c94bc22c2c24510aa230" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt; 메소드의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="691e7a114e6bb78af0b3c6873f5461bae5edd217" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-whenempty&quot;&gt;&lt;code&gt;whenEmpty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method-whenempty&quot;&gt; &lt;code&gt;whenEmpty&lt;/code&gt; &lt;/a&gt; 메서드의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="7cdd4b051ddfb41d3820abbe20cec9c4ce21d0e4" translate="yes" xml:space="preserve">
          <source>Alias for the &lt;a href=&quot;#method-whennotempty&quot;&gt;&lt;code&gt;whenNotEmpty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#method-whennotempty&quot;&gt; &lt;code&gt;whenNotEmpty&lt;/code&gt; &lt;/a&gt; 메서드의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="c30c2f80a5fdf2bc8976d40619e546ffe82f6844" translate="yes" xml:space="preserve">
          <source>Alias of &quot;dissociate&quot; method.</source>
          <target state="translated">&quot;분리&quot;메서드의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="73e06b31eb46c25f6466e86d6b5e2023281f09e3" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;$table-&amp;gt;bigIncrements('id')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$table-&amp;gt;bigIncrements('id')&lt;/code&gt; 별칭 .</target>
        </trans-unit>
        <trans-unit id="b06652e41de2fe34c9c924eb3ade8f0ab273b204" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;$table-&amp;gt;unsignedBigInteger('user_id')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$table-&amp;gt;unsignedBigInteger('user_id')&lt;/code&gt; 별칭 .</target>
        </trans-unit>
        <trans-unit id="fda99fa2d95ed63a5cb8fe51c96ade8a695139d8" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;dropSoftDeletes()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;dropSoftDeletes()&lt;/code&gt; 메소드의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="4f66823c3ae69059c17afa8316ccadf750fa81af" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;dropTimestamps()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;dropTimestamps()&lt;/code&gt; 메서드의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="df5c3181912e4a6f962733c3b168f0b962ba8fc4" translate="yes" xml:space="preserve">
          <source>Alias of &lt;code&gt;timestamps()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;timestamps()&lt;/code&gt; 메서드의 별칭</target>
        </trans-unit>
        <trans-unit id="39b187912b64af2d57b6b4dab6346b5d78a8436a" translate="yes" xml:space="preserve">
          <source>Alias to set the &quot;limit&quot; value of the query.</source>
          <target state="translated">쿼리의 &quot;제한&quot;값을 설정하는 별칭</target>
        </trans-unit>
        <trans-unit id="35fad3b5d602564ef4e88186c91012976f3e4fc8" translate="yes" xml:space="preserve">
          <source>Alias to set the &quot;offset&quot; value of the query.</source>
          <target state="translated">쿼리의 &quot;오프셋&quot;값을 설정하는 별칭</target>
        </trans-unit>
        <trans-unit id="dd481ac9de7a273cecb99ad19380a77e7927a671" translate="yes" xml:space="preserve">
          <source>AliasLoader</source>
          <target state="translated">AliasLoader</target>
        </trans-unit>
        <trans-unit id="668134042ff2d3b79cd0e62ad1612af8d501ef12" translate="yes" xml:space="preserve">
          <source>AliasLoader (Foundation)</source>
          <target state="translated">AliasLoader (기초)</target>
        </trans-unit>
        <trans-unit id="71cd382220a005449ec7de1bb9bad49f80ca5826" translate="yes" xml:space="preserve">
          <source>AliasLoader::alias()</source>
          <target state="translated">AliasLoader::alias()</target>
        </trans-unit>
        <trans-unit id="4adc118706184e3a1890b08dbea90a03c2cf37c8" translate="yes" xml:space="preserve">
          <source>AliasLoader::ensureFacadeExists()</source>
          <target state="translated">AliasLoader::ensureFacadeExists()</target>
        </trans-unit>
        <trans-unit id="0f717fdd74dce89c132182ebc148fc04800fa1b9" translate="yes" xml:space="preserve">
          <source>AliasLoader::formatFacadeStub()</source>
          <target state="translated">AliasLoader::formatFacadeStub()</target>
        </trans-unit>
        <trans-unit id="731537fe5b802bcb23125b0e12674d7c6d051691" translate="yes" xml:space="preserve">
          <source>AliasLoader::getAliases()</source>
          <target state="translated">AliasLoader::getAliases()</target>
        </trans-unit>
        <trans-unit id="012f814b33c8ebd4c41d1db8346089a4830eaafd" translate="yes" xml:space="preserve">
          <source>AliasLoader::getInstance()</source>
          <target state="translated">AliasLoader::getInstance()</target>
        </trans-unit>
        <trans-unit id="0e40052d54ca8f03b65094b3e59e79cb1a8b90ea" translate="yes" xml:space="preserve">
          <source>AliasLoader::isRegistered()</source>
          <target state="translated">AliasLoader::isRegistered()</target>
        </trans-unit>
        <trans-unit id="8d0d80a424b83338cc65067253281ce7f56b18d2" translate="yes" xml:space="preserve">
          <source>AliasLoader::load()</source>
          <target state="translated">AliasLoader::load()</target>
        </trans-unit>
        <trans-unit id="14318637f496d855e1b85394e23aba0fd79229f7" translate="yes" xml:space="preserve">
          <source>AliasLoader::loadFacade()</source>
          <target state="translated">AliasLoader::loadFacade()</target>
        </trans-unit>
        <trans-unit id="936f28540c68985e46fe2578b8132c8e0712bd4c" translate="yes" xml:space="preserve">
          <source>AliasLoader::prependToLoaderStack()</source>
          <target state="translated">AliasLoader::prependToLoaderStack()</target>
        </trans-unit>
        <trans-unit id="17f6d0ffb21dcfa09553a7284baa30b568d04dce" translate="yes" xml:space="preserve">
          <source>AliasLoader::register()</source>
          <target state="translated">AliasLoader::register()</target>
        </trans-unit>
        <trans-unit id="fb8b77d329792b82096c901f35e68a568aa9e71b" translate="yes" xml:space="preserve">
          <source>AliasLoader::setAliases()</source>
          <target state="translated">AliasLoader::setAliases()</target>
        </trans-unit>
        <trans-unit id="910a850d6623c86e26ea0eab18d629172155e989" translate="yes" xml:space="preserve">
          <source>AliasLoader::setFacadeNamespace()</source>
          <target state="translated">AliasLoader::setFacadeNamespace()</target>
        </trans-unit>
        <trans-unit id="8c97cf85a95f5747f125a5e72d004b1a1a87e011" translate="yes" xml:space="preserve">
          <source>AliasLoader::setInstance()</source>
          <target state="translated">AliasLoader::setInstance()</target>
        </trans-unit>
        <trans-unit id="ce13296ef8da5603ac2b97d6a2f0444187f8f2fc" translate="yes" xml:space="preserve">
          <source>AliasLoader::setRegistered()</source>
          <target state="translated">AliasLoader::setRegistered()</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="00de94ad58ba0a7b83cc2dba943bfabf2922e80b" translate="yes" xml:space="preserve">
          <source>Aliasing Components</source>
          <target state="translated">앨리어싱 구성 요소</target>
        </trans-unit>
        <trans-unit id="d902146140f922d3e8267146ef61362a62a1b419" translate="yes" xml:space="preserve">
          <source>Aliasing Includes</source>
          <target state="translated">별칭 포함</target>
        </trans-unit>
        <trans-unit id="d626fdb0853a4376d69f8874e5023dd57b93c061" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Illuminate\Bus\Batch&lt;/code&gt; instances are JSON serializable, meaning you can return them directly from one of your application's routes to retrieve a JSON payload containing information about the batch, including its completion progress. To retrieve a batch by its ID, you may use the &lt;code&gt;Bus&lt;/code&gt; facade's &lt;code&gt;findBatch&lt;/code&gt; method:</source>
          <target state="translated">모든 &lt;code&gt;Illuminate\Bus\Batch&lt;/code&gt; 인스턴스는 JSON 직렬화 가능합니다. 즉, 애플리케이션의 경로 중 하나에서 직접 반환하여 완료 진행률을 포함하여 배치에 대한 정보가 포함 된 JSON 페이로드를 검색 할 수 있습니다. ID로 배치를 검색하려면 &lt;code&gt;Bus&lt;/code&gt; 파사드의 &lt;code&gt;findBatch&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8edf6265be5d4087f95ba3f2909ffc6b1dd07d46" translate="yes" xml:space="preserve">
          <source>All Eloquent collections extend the base &lt;a href=&quot;collections&quot;&gt;Laravel collection&lt;/a&gt; object; therefore, they inherit all of the powerful methods provided by the base collection class:</source>
          <target state="translated">모든 &lt;a href=&quot;collections&quot;&gt;Eloquent 컬렉션&lt;/a&gt; 은 기본 Laravel 컬렉션 개체를 확장 합니다. 따라서 기본 콜렉션 클래스에서 제공하는 모든 강력한 메소드를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="34258ddd8a990e70d1615af1251e20f0a1c1ab3b" translate="yes" xml:space="preserve">
          <source>All Eloquent collections extend the base &lt;a href=&quot;collections#available-methods&quot;&gt;Laravel collection&lt;/a&gt; object; therefore, they inherit all of the powerful methods provided by the base collection class.</source>
          <target state="translated">모든 &lt;a href=&quot;collections#available-methods&quot;&gt;Eloquent 컬렉션&lt;/a&gt; 은 기본 Laravel 컬렉션 객체를 확장 합니다. 따라서 기본 컬렉션 클래스에서 제공하는 모든 강력한 메서드를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="7213a7ac4111a64a6cd5d2a9737f1d3c87992d20" translate="yes" xml:space="preserve">
          <source>All Laravel applications include Tinker by default. However, you may install it manually if needed using Composer:</source>
          <target state="translated">모든 Laravel 애플리케이션에는 기본적으로 Tinker가 포함되어 있습니다. 그러나 필요한 경우 Composer를 사용하여 수동으로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efb83e4f74c4e506cc122ddbf93f73ca5c608407" translate="yes" xml:space="preserve">
          <source>All Laravel applications include Tinker, a REPL powered by the &lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt; package. Tinker allows you to interact with your entire Laravel application on the command line, including the Eloquent ORM, jobs, events, and more. To enter the Tinker environment, run the &lt;code&gt;tinker&lt;/code&gt; Artisan command:</source>
          <target state="translated">모든 라 라벨 애플리케이션에는 &lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt; 패키지로 구동되는 REPL Tinker가 포함 됩니다. Tinker를 사용하면 Eloquent ORM, 작업, 이벤트 등을 포함하여 명령 줄에서 전체 Laravel 응용 프로그램과 상호 작용할 수 있습니다. Tinker 환경으로 들어가려면 &lt;code&gt;tinker&lt;/code&gt; Artisan 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0e325768007b71ac078cd7142fa14b0bcd3fe8b" translate="yes" xml:space="preserve">
          <source>All Laravel routes are defined in your route files, which are located in the &lt;code&gt;routes&lt;/code&gt; directory. These files are automatically loaded by the framework. The &lt;code&gt;routes/web.php&lt;/code&gt; file defines routes that are for your web interface. These routes are assigned the &lt;code&gt;web&lt;/code&gt; middleware group, which provides features like session state and CSRF protection. The routes in &lt;code&gt;routes/api.php&lt;/code&gt; are stateless and are assigned the &lt;code&gt;api&lt;/code&gt; middleware group.</source>
          <target state="translated">모든 라 라벨 라우트는 &lt;code&gt;routes&lt;/code&gt; 디렉토리 에있는 라우트 파일에 정의됩니다 . 이러한 파일은 프레임 워크에 의해 자동으로로드됩니다. &lt;code&gt;routes/web.php&lt;/code&gt; 파일은 웹 인터페이스를위한 경로를 정의합니다. 이러한 라우트에는 세션 상태 및 CSRF 보호와 같은 기능을 제공 하는 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹 이 지정됩니다 . &lt;code&gt;routes/api.php&lt;/code&gt; 의 경로 는 stateless이며 &lt;code&gt;api&lt;/code&gt; 미들웨어 그룹에 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="7892092487a607887beec1e254354a43a7a8a163" translate="yes" xml:space="preserve">
          <source>All authorization callbacks receive the currently authenticated user as their first argument and any additional wildcard parameters as their subsequent arguments. In this example, we are using the &lt;code&gt;{orderId}&lt;/code&gt; placeholder to indicate that the &quot;ID&quot; portion of the channel name is a wildcard.</source>
          <target state="translated">모든 권한 부여 콜백은 현재 인증 된 사용자를 첫 번째 인수로 받고 추가 와일드 카드 매개 변수를 후속 인수로받습니다. 이 예에서는 &lt;code&gt;{orderId}&lt;/code&gt; 자리 표시자를 사용 하여 채널 이름의 &quot;ID&quot;부분이 와일드 카드임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c650cf89296885ef9c3280c4d6dbf738d8b2e90b" translate="yes" xml:space="preserve">
          <source>All broadcast notifications are queued for broadcasting. If you would like to configure the queue connection or queue name that is used to queue the broadcast operation, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods of the &lt;code&gt;BroadcastMessage&lt;/code&gt;:</source>
          <target state="translated">모든 브로드 캐스트 알림은 브로드 캐스팅을 위해 대기됩니다. 브로드 캐스트 작업을 큐에 &lt;code&gt;onQueue&lt;/code&gt; 데 사용되는 큐 연결 또는 큐 이름을 구성 하려면 &lt;code&gt;BroadcastMessage&lt;/code&gt; 의 &lt;code&gt;onConnection&lt;/code&gt; 및 onQueue 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d4f26d611af0f1ede0f14133af0d975f177d4fd" translate="yes" xml:space="preserve">
          <source>All broadcast notifications are queued for broadcasting. If you would like to configure the queue connection or queue name that is used to the queue the broadcast operation, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods of the &lt;code&gt;BroadcastMessage&lt;/code&gt;:</source>
          <target state="translated">모든 브로드 캐스트 알림은 브로드 캐스트 대기 중입니다. 브로드 캐스트 조작을 큐에 사용하는 큐 연결 또는 큐 이름을 구성 하려면 &lt;code&gt;BroadcastMessage&lt;/code&gt; 의 &lt;code&gt;onConnection&lt;/code&gt; 및 &lt;code&gt;onQueue&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a4ad481ae262e5c05c80272b34a3db86404321f" translate="yes" xml:space="preserve">
          <source>All collections also serve as iterators, allowing you to loop over them as if they were simple PHP arrays:</source>
          <target state="translated">모든 컬렉션은 반복자 역할도하므로 단순한 PHP 배열 인 것처럼 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a042b6ea3404a01a67132f4fb0eaf2033f8a3d0" translate="yes" xml:space="preserve">
          <source>All cookies created by the Laravel framework are encrypted and signed with an authentication code, meaning they will be considered invalid if they have been changed by the client. To retrieve a cookie value from the request, use the &lt;code&gt;cookie&lt;/code&gt; method on a &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance:</source>
          <target state="translated">라 라벨 프레임 워크에 의해 생성 된 모든 쿠키는 인증 코드로 암호화되고 서명됩니다. 이는 쿠키가 클라이언트에 의해 변경되면 유효하지 않은 것으로 간주됩니다. 요청에서 쿠키 값을 검색하려면 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 에서 &lt;code&gt;cookie&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3269d20ae4505ada02b0e1a1573aa3b97eca29e" translate="yes" xml:space="preserve">
          <source>All cookies created by the Laravel framework are encrypted and signed with an authentication code, meaning they will be considered invalid if they have been changed by the client. To retrieve a cookie value from the request, use the &lt;code&gt;cookie&lt;/code&gt; method on an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance:</source>
          <target state="translated">Laravel 프레임 워크에 의해 생성 된 모든 쿠키는 암호화되고 인증 코드로 서명됩니다. 즉, 클라이언트가 변경 한 경우 유효하지 않은 것으로 간주됩니다. 요청에서 쿠키 값을 검색하려면 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 에서 &lt;code&gt;cookie&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="515631feba859ab9bc717d8197854aefd10e25d4" translate="yes" xml:space="preserve">
          <source>All created response sequences.</source>
          <target state="translated">생성 된 모든 응답 시퀀스.</target>
        </trans-unit>
        <trans-unit id="dec0e0e598335a25f6fc4ee99a221f3d858642f0" translate="yes" xml:space="preserve">
          <source>All custom &quot;condition&quot; handlers.</source>
          <target state="translated">모든 사용자 정의 &quot;조건&quot;핸들러.</target>
        </trans-unit>
        <trans-unit id="c361ba7bb5cdaf813d5088cce575e698279f3265" translate="yes" xml:space="preserve">
          <source>All custom &quot;directive&quot; handlers.</source>
          <target state="translated">모든 사용자 지정 &quot;지시적&quot;처리기</target>
        </trans-unit>
        <trans-unit id="a94d52094cf18b393b3c64956afc1c92eb723482" translate="yes" xml:space="preserve">
          <source>All databases except SQL Server require the columns in the second argument of the &lt;code&gt;upsert&lt;/code&gt; method to have a &quot;primary&quot; or &quot;unique&quot; index.</source>
          <target state="translated">SQL Server를 제외한 모든 데이터베이스에는 &lt;code&gt;upsert&lt;/code&gt; 메서드 의 두 번째 인수에 &quot;primary&quot;또는 &quot;unique&quot;인덱스가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="eb849ef120ffa64a2adc60d927e2571737c726e3" translate="yes" xml:space="preserve">
          <source>All exceptions are handled by the &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class. This class contains a &lt;code&gt;register&lt;/code&gt; method where you may register custom exception reporter and renderer callbacks. We'll examine each of these concepts in detail. Exception reporting is used to log exceptions or send them to an external service like &lt;a href=&quot;https://flareapp.io&quot;&gt;Flare&lt;/a&gt;, &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; or &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;Sentry&lt;/a&gt;. By default, exceptions will be logged based on your &lt;a href=&quot;logging&quot;&gt;logging&lt;/a&gt; configuration. However, you are free to log exceptions however you wish.</source>
          <target state="translated">모든 예외는 &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; 클래스 에서 처리됩니다 . 이 클래스에는 사용자 지정 예외보고 및 렌더러 콜백을 등록 할 수 있는 &lt;code&gt;register&lt;/code&gt; 메서드가 포함되어 있습니다 . 이러한 각 개념을 자세히 살펴 보겠습니다. 예외보고는 예외를 기록하거나 &lt;a href=&quot;https://flareapp.io&quot;&gt;Flare&lt;/a&gt; , &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;Sentry&lt;/a&gt; 와 같은 외부 서비스로 보내는 데 사용됩니다 . 기본적으로 예외는 &lt;a href=&quot;logging&quot;&gt;로깅&lt;/a&gt; 구성 에 따라 기록 됩니다. 그러나 원하는대로 예외를 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe9347cd5dda2a12d41cd83bb2a5d5efe7f0d7e" translate="yes" xml:space="preserve">
          <source>All exceptions are handled by the &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class. This class contains two methods: &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt;. We'll examine each of these methods in detail. The &lt;code&gt;report&lt;/code&gt; method is used to log exceptions or send them to an external service like &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; or &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;Sentry&lt;/a&gt;. By default, the &lt;code&gt;report&lt;/code&gt; method passes the exception to the base class where the exception is logged. However, you are free to log exceptions however you wish.</source>
          <target state="translated">모든 예외는 &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; 클래스에 의해 처리됩니다 . 이 클래스에는 &lt;code&gt;report&lt;/code&gt; 와 &lt;code&gt;render&lt;/code&gt; 의 두 가지 메소드가 있습니다 . 각 방법을 자세히 살펴 보겠습니다. &lt;code&gt;report&lt;/code&gt; 방법은 예외를 기록하거나 같은 외부 서비스로 보내는 데 사용되는 &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/getsentry/sentry-laravel&quot;&gt;센트리&lt;/a&gt; . 기본적으로 &lt;code&gt;report&lt;/code&gt; 메소드는 예외가 로그 된 기본 클래스로 예외를 전달합니다. 그러나 원하는 경우 예외를 기록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60df68fdf56fd9c734af290c1dd418d92afdc39c" translate="yes" xml:space="preserve">
          <source>All language files return an array of keyed strings. For example:</source>
          <target state="translated">모든 언어 파일은 키 문자열 배열을 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d1400fb976d72e35896f9e08193f25f08fbde53" translate="yes" xml:space="preserve">
          <source>All middleware are resolved via the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so you may type-hint any dependencies you need within a middleware's constructor.</source>
          <target state="translated">모든 미들웨어는 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 를 통해 해결 되므로 미들웨어의 생성자 내에서 필요한 종속성을 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d75a68a53f88642f7b72ceae093f1332d70b8797" translate="yes" xml:space="preserve">
          <source>All modifier keys are wrapped in &lt;code&gt;{}&lt;/code&gt; characters, and match the constants defined in the &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; class, which can be &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/WebDriverKeys.php&quot;&gt;found on GitHub&lt;/a&gt;.</source>
          <target state="translated">모든 수정 자 키는 &lt;code&gt;{}&lt;/code&gt; 문자 로 래핑되며 &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; 클래스에 정의 된 상수와 일치하며 &lt;a href=&quot;https://github.com/facebook/php-webdriver/blob/community/lib/WebDriverKeys.php&quot;&gt;GitHub에서 찾을&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75560d9f1e8cb558edbaa05619133f78f74dd631" translate="yes" xml:space="preserve">
          <source>All modifier keys are wrapped in &lt;code&gt;{}&lt;/code&gt; characters, and match the constants defined in the &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; class, which can be &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php&quot;&gt;found on GitHub&lt;/a&gt;.</source>
          <target state="translated">모든 수정 자 키는 &lt;code&gt;{}&lt;/code&gt; 문자 로 래핑되며 &lt;a href=&quot;https://github.com/php-webdriver/php-webdriver/blob/master/lib/WebDriverKeys.php&quot;&gt;GitHub에서 찾을&lt;/a&gt; 수있는 &lt;code&gt;Facebook\WebDriver\WebDriverKeys&lt;/code&gt; 클래스에 정의 된 상수와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="beff7a5cfadae9fa4eced023d357e96478d8ece8" translate="yes" xml:space="preserve">
          <source>All multi-result sets returned by Eloquent are instances of the &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; object, including results retrieved via the &lt;code&gt;get&lt;/code&gt; method or accessed via a relationship. The Eloquent collection object extends the Laravel &lt;a href=&quot;collections&quot;&gt;base collection&lt;/a&gt;, so it naturally inherits dozens of methods used to fluently work with the underlying array of Eloquent models.</source>
          <target state="translated">Eloquent가 리턴 한 모든 다중 결과 세트 는 &lt;code&gt;get&lt;/code&gt; 메소드 를 통해 검색 되거나 관계를 통해 액세스 된 결과를 포함 하여 &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; 오브젝트의 인스턴스입니다 . Eloquent 컬렉션 개체는 Laravel &lt;a href=&quot;collections&quot;&gt;기본 컬렉션을&lt;/a&gt; 확장하므로 기본 Eloquent 모델 배열에 유창하게 작업하는 데 사용되는 수십 가지 메서드를 자연스럽게 상속합니다.</target>
        </trans-unit>
        <trans-unit id="f60573668ce863a7dfc8ae6877e7729dc1c8d3ea" translate="yes" xml:space="preserve">
          <source>All of Laravel's facades are defined in the &lt;code&gt;Illuminate\Support\Facades&lt;/code&gt; namespace. So, we can easily access a facade like so:</source>
          <target state="translated">라 라벨의 모든 파사드는 &lt;code&gt;Illuminate\Support\Facades&lt;/code&gt; 네임 스페이스에 정의되어 있습니다. 따라서 다음과 같이 정면에 쉽게 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b25d7cc65871052a0df3debb0dbe97c852c30e19" translate="yes" xml:space="preserve">
          <source>All of a mailable class' configuration is done in the &lt;code&gt;build&lt;/code&gt; method. Within this method, you may call various methods such as &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;subject&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt;, and &lt;code&gt;attach&lt;/code&gt; to configure the email's presentation and delivery.</source>
          <target state="translated">모든 메일 가능 클래스 구성은 &lt;code&gt;build&lt;/code&gt; 메소드 에서 수행됩니다 . 이 메소드 내 &lt;code&gt;from&lt;/code&gt; , &lt;code&gt;subject&lt;/code&gt; , &lt;code&gt;view&lt;/code&gt; 및 &lt;code&gt;attach&lt;/code&gt; 와 같은 다양한 메소드를 호출 하여 이메일의 프리젠 테이션 및 전달을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0a7823763abe2a6fa1221a4eec821adcf76232f" translate="yes" xml:space="preserve">
          <source>All of the &quot;catch&quot; callbacks for the queued closure.</source>
          <target state="translated">대기중인 클로저에 대한 모든 &quot;catch&quot;콜백입니다.</target>
        </trans-unit>
        <trans-unit id="c6b48fe7c80f812422357cf178e65afaa0e18c66" translate="yes" xml:space="preserve">
          <source>All of the JavaScript dependencies required by your application can be found in the &lt;code&gt;package.json&lt;/code&gt; file in the project's root directory. This file is similar to a &lt;code&gt;composer.json&lt;/code&gt; file except it specifies JavaScript dependencies instead of PHP dependencies. You can install these dependencies using the &lt;a href=&quot;https://www.npmjs.org&quot;&gt;Node package manager (NPM)&lt;/a&gt;:</source>
          <target state="translated">응용 프로그램에 필요한 모든 JavaScript 종속성 은 프로젝트 루트 디렉토리의 &lt;code&gt;package.json&lt;/code&gt; 파일에서 찾을 수 있습니다 . 이 파일은 PHP 종속성 대신 JavaScript 종속성을 지정한다는 점을 제외하고 &lt;code&gt;composer.json&lt;/code&gt; 파일 과 유사합니다 . &lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM (Node Package Manager)을&lt;/a&gt; 사용하여 이러한 종속성을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d906e9255484fac30e0d9f2f755c68b8e9289afc" translate="yes" xml:space="preserve">
          <source>All of the Laravel contracts live in &lt;a href=&quot;https://github.com/illuminate/contracts&quot;&gt;their own GitHub repository&lt;/a&gt;. This provides a quick reference point for all available contracts, as well as a single, decoupled package that may be utilized by package developers.</source>
          <target state="translated">모든 라 라벨 계약 &lt;a href=&quot;https://github.com/illuminate/contracts&quot;&gt;은 자체 GitHub 저장소에&lt;/a&gt; 있습니다. 이는 사용 가능한 모든 계약과 패키지 개발자가 활용할 수있는 분리 된 단일 패키지에 대한 빠른 참조 점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="38f0214d512399ead6a8654a439cea039af73f47" translate="yes" xml:space="preserve">
          <source>All of the after resolving callbacks by class type.</source>
          <target state="translated">클래스 유형별로 콜백을 해결 한 후의 모든 항목</target>
        </trans-unit>
        <trans-unit id="246e4842afd6f390110b5329f515e8ee38ea5b22" translate="yes" xml:space="preserve">
          <source>All of the attributes set on the container.</source>
          <target state="translated">컨테이너에 설정된 모든 속성</target>
        </trans-unit>
        <trans-unit id="6ffb268b27f0325626506f2f502e2f8de1478446" translate="yes" xml:space="preserve">
          <source>All of the attributes set on the fluent instance.</source>
          <target state="translated">유창한 인스턴스에 설정된 모든 속성.</target>
        </trans-unit>
        <trans-unit id="ce97daa945a12116f35cd84263137d74a9319110" translate="yes" xml:space="preserve">
          <source>All of the attributes that are not part of the component's constructor will automatically be added to the component's &quot;attribute bag&quot;. This attribute bag is automatically made available to the component via the &lt;code&gt;$attributes&lt;/code&gt; variable. All of the attributes may be rendered within the component by echoing this variable:</source>
          <target state="translated">구성 요소 생성자의 일부가 아닌 모든 속성은 구성 요소의 &quot;속성 모음&quot;에 자동으로 추가됩니다. 이 속성 모음은 &lt;code&gt;$attributes&lt;/code&gt; 변수 를 통해 구성 요소에서 자동으로 사용할 수 있습니다 . 모든 속성은 다음 변수를 반영하여 구성 요소 내에서 렌더링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d2253295936c1ef28c5f9d28eb5853c9961101b" translate="yes" xml:space="preserve">
          <source>All of the available clause operators.</source>
          <target state="translated">사용 가능한 모든 절 연산자</target>
        </trans-unit>
        <trans-unit id="3335eb120d37065d11c33817aff6cc1936d1d953" translate="yes" xml:space="preserve">
          <source>All of the available compiler functions.</source>
          <target state="translated">사용 가능한 모든 컴파일러 함수</target>
        </trans-unit>
        <trans-unit id="44f1d265e5403fa8f7ef5309bb621ff391fa238b" translate="yes" xml:space="preserve">
          <source>All of the available pipelines.</source>
          <target state="translated">사용 가능한 모든 파이프 라인</target>
        </trans-unit>
        <trans-unit id="1718b30a46582ff9cd5ffd7ff00e4e1d5f6d69c9" translate="yes" xml:space="preserve">
          <source>All of the channels to send the notification to.</source>
          <target state="translated">알림을 보낼 모든 채널.</target>
        </trans-unit>
        <trans-unit id="ec960210cef60a397ef2348cb8f1f96c9a2812b0" translate="yes" xml:space="preserve">
          <source>All of the configuration files for the Laravel framework are stored in the &lt;code&gt;config&lt;/code&gt; directory. Each option is documented, so feel free to look through the files and get familiar with the options available to you.</source>
          <target state="translated">Laravel 프레임 워크의 모든 구성 파일은 &lt;code&gt;config&lt;/code&gt; 디렉토리에 저장됩니다 . 각 옵션은 문서화되어 있으므로 파일을 자유롭게 살펴보고 사용 가능한 옵션에 익숙해 지십시오.</target>
        </trans-unit>
        <trans-unit id="5f82bca30a07df1caad358baadc1a43c6cfe45fb" translate="yes" xml:space="preserve">
          <source>All of the configuration for your application's logging system is housed in the &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. Of course, we'll review a few common options below.</source>
          <target state="translated">응용 프로그램의 로깅 시스템에 대한 모든 구성은 &lt;code&gt;config/logging.php&lt;/code&gt; 구성 파일에 있습니다. 이 파일을 사용하면 응용 프로그램의 로그 채널을 구성 할 수 있으므로 사용 가능한 각 채널과 해당 옵션을 검토하십시오. 물론 아래 몇 가지 일반적인 옵션을 검토하겠습니다.</target>
        </trans-unit>
        <trans-unit id="aff5965e4bf8c51dc379f323fd404b1257cca146" translate="yes" xml:space="preserve">
          <source>All of the configuration for your application's logging system is housed in the &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. This file allows you to configure your application's log channels, so be sure to review each of the available channels and their options. We'll review a few common options below.</source>
          <target state="translated">애플리케이션의 로깅 시스템에 대한 모든 구성은 &lt;code&gt;config/logging.php&lt;/code&gt; 구성 파일에 있습니다. 이 파일을 사용하면 애플리케이션의 로그 채널을 구성 할 수 있으므로 사용 가능한 각 채널과 해당 옵션을 검토해야합니다. 아래에서 몇 가지 일반적인 옵션을 검토하겠습니다.</target>
        </trans-unit>
        <trans-unit id="a9faf54d9ed4ba0d08dfb72c86708957f13bf4f8" translate="yes" xml:space="preserve">
          <source>All of the configuration items.</source>
          <target state="translated">모든 구성 항목</target>
        </trans-unit>
        <trans-unit id="b7710d9f4da0b119b2aa61ca0fe2a8ee3938e714" translate="yes" xml:space="preserve">
          <source>All of the converted files for the request.</source>
          <target state="translated">요청에 대해 변환 된 모든 파일</target>
        </trans-unit>
        <trans-unit id="6dcc39d21bd770f6908e408acf268f476ae867ff" translate="yes" xml:space="preserve">
          <source>All of the cookies queued for sending.</source>
          <target state="translated">전송 대기중인 모든 쿠키</target>
        </trans-unit>
        <trans-unit id="75493eb13c54ca76d963e793dab4bb0ea11b3fa1" translate="yes" xml:space="preserve">
          <source>All of the custom dependent validator extensions.</source>
          <target state="translated">모든 사용자 지정 종속 유효성 검사기 확장</target>
        </trans-unit>
        <trans-unit id="d3f7838904dd5b106fda84e6746bffc9cb13195e" translate="yes" xml:space="preserve">
          <source>All of the custom implicit validator extensions.</source>
          <target state="translated">모든 사용자 지정 암시 적 유효성 검사기 확장</target>
        </trans-unit>
        <trans-unit id="bbcbd76fef96a6cb802f3727df30a69b396fe0c9" translate="yes" xml:space="preserve">
          <source>All of the custom replacer extensions.</source>
          <target state="translated">모든 사용자 정의 교체 프로그램 확장.</target>
        </trans-unit>
        <trans-unit id="5cadc7cb35f41147b566b5ffce986ee0627645e5" translate="yes" xml:space="preserve">
          <source>All of the custom validator extensions.</source>
          <target state="translated">모든 사용자 정의 유효성 검사기 확장.</target>
        </trans-unit>
        <trans-unit id="faf185eaf4bd63c44af687829ff161cca72d3675" translate="yes" xml:space="preserve">
          <source>All of the custom validator message replacers.</source>
          <target state="translated">모든 사용자 정의 유효성 검사기 메시지 교체기.</target>
        </trans-unit>
        <trans-unit id="03928e328c95f68de8c592e8ad66c7a0849a53d3" translate="yes" xml:space="preserve">
          <source>All of the defined abilities using class@method notation.</source>
          <target state="translated">class @ method 표기법을 사용하여 정의 된 모든 능력.</target>
        </trans-unit>
        <trans-unit id="2195673679550f331e156e5ab4979a71312106ba" translate="yes" xml:space="preserve">
          <source>All of the defined abilities.</source>
          <target state="translated">정의 된 모든 능력.</target>
        </trans-unit>
        <trans-unit id="8558217f84f151af03b01980d2eda2026b1005b7" translate="yes" xml:space="preserve">
          <source>All of the defined policies.</source>
          <target state="translated">정의 된 모든 정책.</target>
        </trans-unit>
        <trans-unit id="757ff35636b6e55387e73c323bd9fe321443fe98" translate="yes" xml:space="preserve">
          <source>All of the dispatched jobs.</source>
          <target state="translated">파견 된 모든 직업.</target>
        </trans-unit>
        <trans-unit id="e9b877f0901578f930b3cdd5374c620dc9ebc1d0" translate="yes" xml:space="preserve">
          <source>All of the dispatched notifications.</source>
          <target state="translated">발송 된 모든 알림</target>
        </trans-unit>
        <trans-unit id="6d642d17bfc1b4680e60cf40d290596cf259b542" translate="yes" xml:space="preserve">
          <source>All of the events on the schedule.</source>
          <target state="translated">일정에있는 모든 이벤트.</target>
        </trans-unit>
        <trans-unit id="83798b1769528becbe070bb07496ab722cfdaac3" translate="yes" xml:space="preserve">
          <source>All of the events that have been intercepted keyed by type.</source>
          <target state="translated">유형별로 인터셉트 된 모든 이벤트.</target>
        </trans-unit>
        <trans-unit id="d147f59426f8e790709809af4b2c02e1dbcea4ae" translate="yes" xml:space="preserve">
          <source>All of the expected choice questions.</source>
          <target state="translated">예상되는 모든 선택 질문.</target>
        </trans-unit>
        <trans-unit id="2e5d261d47d8b6774a39636e32fa106c6cbe1393" translate="yes" xml:space="preserve">
          <source>All of the expected ouput tables.</source>
          <target state="translated">예상되는 모든 출력 테이블.</target>
        </trans-unit>
        <trans-unit id="572d36820eddda07e15162e551018ea710048306" translate="yes" xml:space="preserve">
          <source>All of the expected output lines.</source>
          <target state="translated">모든 예상 출력 라인.</target>
        </trans-unit>
        <trans-unit id="55f0fb82a55dd9a59417a2da63024631975f7f28" translate="yes" xml:space="preserve">
          <source>All of the expected questions.</source>
          <target state="translated">모든 예상 질문</target>
        </trans-unit>
        <trans-unit id="28c55daa474be30f43b2b43c0f4e0b5eed5cbc8d" translate="yes" xml:space="preserve">
          <source>All of the extensions to be added to the builder.</source>
          <target state="translated">빌더에 추가 할 모든 확장.</target>
        </trans-unit>
        <trans-unit id="a9e958cf2050e8a3531bf3372951eb98bf622689" translate="yes" xml:space="preserve">
          <source>All of the fallback messages for custom rules.</source>
          <target state="translated">사용자 지정 규칙에 대한 모든 대체 메시지</target>
        </trans-unit>
        <trans-unit id="2084b6802f0d8ce3554b18b1d31e6e8d9ca35510" translate="yes" xml:space="preserve">
          <source>All of the finished, captured prepend sections.</source>
          <target state="translated">완성되고 캡처 된 접두사 섹션이 모두 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a6dbf188be8dcf0285de1041c91e107e9d04e8c" translate="yes" xml:space="preserve">
          <source>All of the finished, captured push sections.</source>
          <target state="translated">완성 된 캡처 된 푸시 섹션이 모두 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0245490f22caa2eae25e11c6e319d70a1062a0f" translate="yes" xml:space="preserve">
          <source>All of the finished, captured sections.</source>
          <target state="translated">완성되고 캡처 된 모든 섹션.</target>
        </trans-unit>
        <trans-unit id="83c56fa0ab0254d1f9f97ff3e3e37347c2f41d3e" translate="yes" xml:space="preserve">
          <source>All of the fired events.</source>
          <target state="translated">해고 된 모든 사건.</target>
        </trans-unit>
        <trans-unit id="dfdeb0c1b34a32fa405818f5dce0e5b8dd5c5168" translate="yes" xml:space="preserve">
          <source>All of the fired model events.</source>
          <target state="translated">해고 된 모든 모델 이벤트</target>
        </trans-unit>
        <trans-unit id="09f0844959ab4a8189f3711356f491f8a3df976f" translate="yes" xml:space="preserve">
          <source>All of the global after resolving callbacks.</source>
          <target state="translated">콜백 해결 후 전 세계</target>
        </trans-unit>
        <trans-unit id="33ccdbc668e0bd63c2b99bdbd2e0de17ef1f85e1" translate="yes" xml:space="preserve">
          <source>All of the global resolving callbacks.</source>
          <target state="translated">모든 글로벌 해결 콜백.</target>
        </trans-unit>
        <trans-unit id="b50f4207f658780d952eddfdbd635e727874ad22" translate="yes" xml:space="preserve">
          <source>All of the globally registered builder macros.</source>
          <target state="translated">글로벌로 등록 된 모든 빌더 매크로</target>
        </trans-unit>
        <trans-unit id="73aa829e3e7018f937ad5d04cbed799631f38b29" translate="yes" xml:space="preserve">
          <source>All of the guards that were checked.</source>
          <target state="translated">확인 된 모든 경비병.</target>
        </trans-unit>
        <trans-unit id="039960822030aef4ec02da1026e1d7d81a14a135" translate="yes" xml:space="preserve">
          <source>All of the items being paginated.</source>
          <target state="translated">페이지가 매겨지는 모든 항목.</target>
        </trans-unit>
        <trans-unit id="0ead721bfd56382ade154bcf6c450c750b536ba9" translate="yes" xml:space="preserve">
          <source>All of the jobs that have been pushed.</source>
          <target state="translated">푸시 된 모든 작업</target>
        </trans-unit>
        <trans-unit id="d9669f6231b0c71be8c8d1efbe10357fe2109b01" translate="yes" xml:space="preserve">
          <source>All of the locally registered builder macros.</source>
          <target state="translated">로컬로 등록 된 모든 빌더 매크로</target>
        </trans-unit>
        <trans-unit id="5701e9e20fcaf0d1d56c738d6a4f52753527f9f4" translate="yes" xml:space="preserve">
          <source>All of the mailables that have been queued.</source>
          <target state="translated">대기중인 모든 메일 가능 항목.</target>
        </trans-unit>
        <trans-unit id="ded305f74f2f50e7decdb5815b64e12807da9a98" translate="yes" xml:space="preserve">
          <source>All of the mailables that have been sent.</source>
          <target state="translated">발송 된 모든 우편물.</target>
        </trans-unit>
        <trans-unit id="4f93c6584683ae9c18840ccaad9115db9f1c54cc" translate="yes" xml:space="preserve">
          <source>All of the middleware groups.</source>
          <target state="translated">모든 미들웨어 그룹.</target>
        </trans-unit>
        <trans-unit id="666b72a8c15c7d8c1d761966b8d9a9964da9308c" translate="yes" xml:space="preserve">
          <source>All of the models keyed by ID.</source>
          <target state="translated">모든 모델은 ID를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="893a185562455abb8edbcded419764710c552517" translate="yes" xml:space="preserve">
          <source>All of the namespace hints.</source>
          <target state="translated">모든 네임 스페이스 힌트</target>
        </trans-unit>
        <trans-unit id="f64d8cb5eab1203cd08241a0dfebe1225b24568a" translate="yes" xml:space="preserve">
          <source>All of the notification routing information.</source>
          <target state="translated">모든 알림 라우팅 정보</target>
        </trans-unit>
        <trans-unit id="12ccc47ffa12851bd57534867256403204d1b217" translate="yes" xml:space="preserve">
          <source>All of the notifications that have been sent.</source>
          <target state="translated">전송 된 모든 알림</target>
        </trans-unit>
        <trans-unit id="908e6d7fc0596b1f6f573c7f1d3a551d16457d24" translate="yes" xml:space="preserve">
          <source>All of the output lines that aren't expected to be displayed.</source>
          <target state="translated">표시되지 않을 것으로 예상되는 모든 출력 라인.</target>
        </trans-unit>
        <trans-unit id="13656ad506ada189dfc779fed68e11038bd428e7" translate="yes" xml:space="preserve">
          <source>All of the ping methods require the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">모든 핑 방법에는 Guzzle HTTP 라이브러리가 필요합니다. Composer 패키지 관리자를 사용하여 프로젝트에 Guzzle을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="460bec8c745c44964da92898bb53a78c3b553440" translate="yes" xml:space="preserve">
          <source>All of the queries run against the connection.</source>
          <target state="translated">모든 쿼리가 연결에 대해 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4f1edcad1d759088c5b49acf96cdacba22c6c6dc" translate="yes" xml:space="preserve">
          <source>All of the registered &quot;after&quot; callbacks.</source>
          <target state="translated">등록 된 모든 &quot;after&quot;콜백</target>
        </trans-unit>
        <trans-unit id="41ef0163d14b1d3cace5f14ae79cbe27af284be6" translate="yes" xml:space="preserve">
          <source>All of the registered after callbacks.</source>
          <target state="translated">등록 된 모든 콜백.</target>
        </trans-unit>
        <trans-unit id="9482ab9722e0a61fdc9dbc08725a85e37a6610ee" translate="yes" xml:space="preserve">
          <source>All of the registered before callbacks.</source>
          <target state="translated">등록 된 모든 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="222949a2230c37efecb77bda2cc24308bbeb5702" translate="yes" xml:space="preserve">
          <source>All of the registered booted callbacks.</source>
          <target state="translated">등록 된 모든 부팅 된 콜백입니다.</target>
        </trans-unit>
        <trans-unit id="af6340ca4054bbb2f7f395578b21a539537c0f7d" translate="yes" xml:space="preserve">
          <source>All of the registered booting callbacks.</source>
          <target state="translated">등록 된 모든 부팅 콜백.</target>
        </trans-unit>
        <trans-unit id="868231060f269496d98b65b3e4370130473c1a52" translate="yes" xml:space="preserve">
          <source>All of the registered connections.</source>
          <target state="translated">등록 된 모든 연결</target>
        </trans-unit>
        <trans-unit id="47f9899eab24c912e113f7752badbc2348de565a" translate="yes" xml:space="preserve">
          <source>All of the registered extensions.</source>
          <target state="translated">등록 된 모든 확장.</target>
        </trans-unit>
        <trans-unit id="eeeb328166a0e6cf51f8335d986339bb82b6117c" translate="yes" xml:space="preserve">
          <source>All of the registered messages.</source>
          <target state="translated">등록 된 모든 메시지</target>
        </trans-unit>
        <trans-unit id="f180b90b882517c566af75163f35f64fe51b2f7b" translate="yes" xml:space="preserve">
          <source>All of the registered paths to JSON translation files.</source>
          <target state="translated">JSON 번역 파일에 등록 된 모든 경로</target>
        </trans-unit>
        <trans-unit id="3f54b0b109736caac8429cb5fe69caf7543777e1" translate="yes" xml:space="preserve">
          <source>All of the registered precompilers.</source>
          <target state="translated">등록 된 모든 사전 컴파일러.</target>
        </trans-unit>
        <trans-unit id="8057f51fc69f81bbf1374471dab75ea4c783303e" translate="yes" xml:space="preserve">
          <source>All of the registered rebound callbacks.</source>
          <target state="translated">등록 된 모든 리바운드 콜백</target>
        </trans-unit>
        <trans-unit id="7d82c1694a0bb7c8a2ae8fc78d8ba5b2ccdf24ce" translate="yes" xml:space="preserve">
          <source>All of the registered service providers.</source>
          <target state="translated">등록 된 모든 서비스 제공 업체</target>
        </trans-unit>
        <trans-unit id="d09c09e992a5a355dfcc82adba20c0238ff3997e" translate="yes" xml:space="preserve">
          <source>All of the registered tags.</source>
          <target state="translated">등록 된 모든 태그</target>
        </trans-unit>
        <trans-unit id="3c6081cc37bd87ec9fb3c1be775bc338d63c1238" translate="yes" xml:space="preserve">
          <source>All of the resolving callbacks by class type.</source>
          <target state="translated">클래스 유형별 모든 해결 콜백.</target>
        </trans-unit>
        <trans-unit id="b3d0c281e3559ff2c0f25bb3b986e107c5a91f22" translate="yes" xml:space="preserve">
          <source>All of the short-hand keys for middlewares.</source>
          <target state="translated">미들웨어의 모든 단축 키.</target>
        </trans-unit>
        <trans-unit id="9dd0dd2a7a7bfc0aab667564f0e3b7090d0fec74" translate="yes" xml:space="preserve">
          <source>All of the translation messages.</source>
          <target state="translated">모든 번역 메시지.</target>
        </trans-unit>
        <trans-unit id="3da9fb279e7b4585107634447c539c8a3275288f" translate="yes" xml:space="preserve">
          <source>All of the user's attributes.</source>
          <target state="translated">모든 사용자 속성.</target>
        </trans-unit>
        <trans-unit id="d282a0c6ff42ab4f253c16edb92369bb7a880cd2" translate="yes" xml:space="preserve">
          <source>All of the variables listed in this file will be loaded into the &lt;code&gt;$_ENV&lt;/code&gt; PHP super-global when your application receives a request. However, you may use the &lt;code&gt;env&lt;/code&gt; helper to retrieve values from these variables in your configuration files. In fact, if you review the Laravel configuration files, you will notice several of the options already using this helper:</source>
          <target state="translated">이 파일에 나열된 모든 변수는 응용 프로그램이 요청을 받으면 &lt;code&gt;$_ENV&lt;/code&gt; PHP 수퍼-글로벌 로로드됩니다 . 그러나 &lt;code&gt;env&lt;/code&gt; 헬퍼를 사용 하여 구성 파일의 이러한 변수에서 값을 검색 할 수 있습니다. 실제로 Laravel 구성 파일을 검토하면이 도우미를 이미 사용하고있는 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ae8dbdc399e7407aff232e12a849f97d4581fd5" translate="yes" xml:space="preserve">
          <source>All of the verbs supported by the router.</source>
          <target state="translated">라우터가 지원하는 모든 동사.</target>
        </trans-unit>
        <trans-unit id="b7efda1773eb740dce3db35b5d5503ad41f9d18b" translate="yes" xml:space="preserve">
          <source>All of your &quot;tap&quot; classes are resolved by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so any constructor dependencies they require will automatically be injected.</source>
          <target state="translated">모든 &quot;탭&quot;클래스는 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너에&lt;/a&gt; 의해 해결 되므로 필요한 생성자 종속성이 자동으로 주입됩니다.</target>
        </trans-unit>
        <trans-unit id="0bdd5e23c8b94b0f2c3e1026d936439f20e5a5d3" translate="yes" xml:space="preserve">
          <source>All of your Envoy tasks should be defined in an &lt;code&gt;Envoy.blade.php&lt;/code&gt; file in the root of your project. Here's an example to get you started:</source>
          <target state="translated">모든 Envoy 작업은 프로젝트 루트의 &lt;code&gt;Envoy.blade.php&lt;/code&gt; 파일에서 정의해야합니다 . 시작하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8b3631f570d35fddbf0737198bd72fe425f4d32" translate="yes" xml:space="preserve">
          <source>All of your application's event broadcasting configuration is stored in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. Laravel supports several broadcast drivers out of the box: &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt;, and a &lt;code&gt;log&lt;/code&gt; driver for local development and debugging. Additionally, a &lt;code&gt;null&lt;/code&gt; driver is included which allows you to totally disable broadcasting. A configuration example is included for each of these drivers in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file.</source>
          <target state="translated">애플리케이션의 모든 이벤트 브로드 캐스트 구성은 &lt;code&gt;config/broadcasting.php&lt;/code&gt; 구성 파일에 저장 됩니다. Laravel은 여러 가지 브로드 캐스트 드라이버를 지원합니다 : &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt; , &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt; 및 로컬 개발 및 디버깅을위한 &lt;code&gt;log&lt;/code&gt; 드라이버. 또한 &lt;code&gt;null&lt;/code&gt; 드라이버가 포함되어있어 브로드 캐스트를 완전히 비활성화 할 수 있습니다. 이러한 각 드라이버에 대한 구성 예제는 &lt;code&gt;config/broadcasting.php&lt;/code&gt; 구성 파일에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aa09bd8b9af3486cbd9f7cf3718c48d2a6eca61" translate="yes" xml:space="preserve">
          <source>All of your application's event broadcasting configuration is stored in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file. Laravel supports several broadcast drivers out of the box: &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt;, and a &lt;code&gt;log&lt;/code&gt; driver for local development and debugging. Additionally, a &lt;code&gt;null&lt;/code&gt; driver is included which allows you to totally disable broadcasting. A configuration example is included for each of these drivers in the &lt;code&gt;config/broadcasting.php&lt;/code&gt; configuration file.</source>
          <target state="translated">애플리케이션의 모든 이벤트 브로드 캐스팅 구성은 &lt;code&gt;config/broadcasting.php&lt;/code&gt; 구성 파일에 저장 됩니다. Laravel은 &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt; , &lt;a href=&quot;redis&quot;&gt;Redis&lt;/a&gt; 및 로컬 개발 및 디버깅을위한 &lt;code&gt;log&lt;/code&gt; 드라이버 와 같은 여러 브로드 캐스트 드라이버를 즉시 지원합니다 . 또한 방송을 완전히 비활성화 할 수 있는 &lt;code&gt;null&lt;/code&gt; 드라이버가 포함되어 있습니다. &lt;code&gt;config/broadcasting.php&lt;/code&gt; 구성 파일 에 이러한 각 드라이버에 대한 구성 예제가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f17d23dcf4ff52eb1222e0963a5f8f8033039fa6" translate="yes" xml:space="preserve">
          <source>All of your worker configuration is stored in a single, simple configuration file, allowing your configuration to stay in source control where your entire team can collaborate.</source>
          <target state="translated">모든 작업자 구성은 하나의 간단한 구성 파일에 저장되므로 전체 팀이 공동 작업 할 수있는 소스 제어 상태로 구성을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f05e84f346fc22b871c89b85965f28353a42685" translate="yes" xml:space="preserve">
          <source>All policies are resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, allowing you to type-hint any needed dependencies in the policy's constructor to have them automatically injected.</source>
          <target state="translated">모든 정책은 Laravel &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 를 통해 해결 되므로 정책 생성자에 필요한 종속성을 입력하여 자동으로 주입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60e6c2390bf80e7795b28a1dc5b9b652dc7bf0a1" translate="yes" xml:space="preserve">
          <source>All presence channels are also private channels; therefore, users must be &lt;a href=&quot;#authorizing-channels&quot;&gt;authorized to access them&lt;/a&gt;. However, when defining authorization callbacks for presence channels, you will not return &lt;code&gt;true&lt;/code&gt; if the user is authorized to join the channel. Instead, you should return an array of data about the user.</source>
          <target state="translated">모든 프리젠 스 채널은 개인 채널이기도합니다. 따라서 사용자는 &lt;a href=&quot;#authorizing-channels&quot;&gt;액세스 권한이&lt;/a&gt; 있어야 합니다 . 그러나 프레즌스 채널에 대한 권한 부여 콜백을 정의 할 때 사용자가 채널에 참여할 권한이있는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환하지 않습니다 . 대신 사용자에 대한 데이터 배열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="973d494be4b73e3b5c6c4bcf586387aaae9e79d6" translate="yes" xml:space="preserve">
          <source>All recipients are stored internally as [['name' =&amp;gt; ?, 'address' =&amp;gt; ?]]</source>
          <target state="translated">모든 수신자는 내부적으로 [[ 'name'=&amp;gt;?, 'address'=&amp;gt;?]]로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="46840c6c902ed1d3148287a2ffa92c90afd59541" translate="yes" xml:space="preserve">
          <source>All routes and controllers should return a response to be sent back to the user's browser. Laravel provides several different ways to return responses. The most basic response is returning a string from a route or controller. The framework will automatically convert the string into a full HTTP response:</source>
          <target state="translated">모든 경로 및 컨트롤러는 응답을 사용자 브라우저로 다시 보내야합니다. Laravel은 응답을 반환하는 여러 가지 방법을 제공합니다. 가장 기본적인 응답은 경로 또는 컨트롤러에서 문자열을 반환하는 것입니다. 프레임 워크는 문자열을 전체 HTTP 응답으로 자동 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f98c598a37763b68582fa975eebfb766503341ed" translate="yes" xml:space="preserve">
          <source>All service providers are registered in the &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This file contains a &lt;code&gt;providers&lt;/code&gt; array where you can list the class names of your service providers. By default, a set of Laravel core service providers are listed in this array. These providers bootstrap the core Laravel components, such as the mailer, queue, cache, and others.</source>
          <target state="translated">모든 서비스 제공자는 &lt;code&gt;config/app.php&lt;/code&gt; 구성 파일에 등록되어 있습니다. 이 파일에는 서비스 제공자의 클래스 이름을 나열 할 수 있는 &lt;code&gt;providers&lt;/code&gt; 배열이 있습니다. 기본적으로이 어레이에는 Laravel 핵심 서비스 공급자 세트가 나열됩니다. 이러한 공급자는 메일러, 대기열, 캐시 등과 같은 핵심 Laravel 구성 요소를 부트 스트랩합니다.</target>
        </trans-unit>
        <trans-unit id="70c56491c0a8307591b1114685a688bc4a071d46" translate="yes" xml:space="preserve">
          <source>All service providers extend the &lt;code&gt;Illuminate\Support\ServiceProvider&lt;/code&gt; class. Most service providers contain a &lt;code&gt;register&lt;/code&gt; and a &lt;code&gt;boot&lt;/code&gt; method. Within the &lt;code&gt;register&lt;/code&gt; method, you should &lt;strong&gt;only bind things into the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;&lt;/strong&gt;. You should never attempt to register any event listeners, routes, or any other piece of functionality within the &lt;code&gt;register&lt;/code&gt; method.</source>
          <target state="translated">모든 서비스 공급자는 &lt;code&gt;Illuminate\Support\ServiceProvider&lt;/code&gt; 클래스를 확장합니다 . 대부분의 서비스 제공 업체는 &lt;code&gt;register&lt;/code&gt; 및 &lt;code&gt;boot&lt;/code&gt; 방법을 포함합니다. &lt;code&gt;register&lt;/code&gt; 메소드 내에서는 &lt;strong&gt;&lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; 에만 항목을 바인딩&lt;/strong&gt; 해야 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;code&gt;register&lt;/code&gt; 메소드 내에서 이벤트 리스너, 라우트 또는 기타 기능을 등록하려고 시도해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="144721155b99875b1cafe381b3bbd341569499f1" translate="yes" xml:space="preserve">
          <source>All three methods receive the &lt;code&gt;$sitePath&lt;/code&gt;, &lt;code&gt;$siteName&lt;/code&gt;, and &lt;code&gt;$uri&lt;/code&gt; values as their arguments. The &lt;code&gt;$sitePath&lt;/code&gt; is the fully qualified path to the site being served on your machine, such as &lt;code&gt;/Users/Lisa/Sites/my-project&lt;/code&gt;. The &lt;code&gt;$siteName&lt;/code&gt; is the &quot;host&quot; / &quot;site name&quot; portion of the domain (&lt;code&gt;my-project&lt;/code&gt;). The &lt;code&gt;$uri&lt;/code&gt; is the incoming request URI (&lt;code&gt;/foo/bar&lt;/code&gt;).</source>
          <target state="translated">세 가지 메소드 모두 &lt;code&gt;$sitePath&lt;/code&gt; , &lt;code&gt;$siteName&lt;/code&gt; 및 &lt;code&gt;$uri&lt;/code&gt; 값을 인수로받습니다. &lt;code&gt;$sitePath&lt;/code&gt; 사이트의 전체 경로는 다음과 같은, 컴퓨터에 제공되는 것입니다 &lt;code&gt;/Users/Lisa/Sites/my-project&lt;/code&gt; . &lt;code&gt;$siteName&lt;/code&gt; 도메인 (의 &quot;호스트&quot;/ &quot;사이트 이름&quot;부분입니다 &lt;code&gt;my-project&lt;/code&gt; ). &lt;code&gt;$uri&lt;/code&gt; 들어오는 요청 URI (인 &lt;code&gt;/foo/bar&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fbdeb5ee047c3c35b468105c7dfda08a045b724b" translate="yes" xml:space="preserve">
          <source>All user supplied arguments and options are wrapped in curly braces. In the following example, the command defines one &lt;strong&gt;required&lt;/strong&gt; argument: &lt;code&gt;user&lt;/code&gt;:</source>
          <target state="translated">모든 사용자 제공 인수 및 옵션은 중괄호로 묶습니다. 다음 예제에서 명령은 하나의 &lt;strong&gt;필수&lt;/strong&gt; 인수를 정의 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;code&gt;user&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4fd1aa5772e245682024b12f5b65aaee6bd5fdac" translate="yes" xml:space="preserve">
          <source>All variables in your &lt;code&gt;.env&lt;/code&gt; files are parsed as strings, so some reserved values have been created to allow you to return a wider range of types from the &lt;code&gt;env()&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; 파일의 모든 변수는 문자열로 구문 분석되므로 &lt;code&gt;env()&lt;/code&gt; 함수 에서 더 광범위한 유형을 리턴 할 수 있도록 일부 예약 된 값이 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b61e5ba362675c630bd94edec4dce99ee78570f3" translate="yes" xml:space="preserve">
          <source>All view composers are resolved via the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so you may type-hint any dependencies you need within a composer's constructor.</source>
          <target state="translated">모든 view composers는 &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; 를 통해 해결 되므로 composer의 생성자 내에서 필요한 모든 의존성을 타이핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e9abc59c2890a5e67d6e45c466ef3c63c185484" translate="yes" xml:space="preserve">
          <source>Allow NULL values to be inserted into the column</source>
          <target state="translated">NULL 값이 열에 삽입되도록 허용</target>
        </trans-unit>
        <trans-unit id="db7a41f432d7c4dad0ab3e5bb5a24f2647754f63" translate="yes" xml:space="preserve">
          <source>Allow the event to only run on one server for each cron expression.</source>
          <target state="translated">각 cron 표현식에 대해 하나의 서버에서만 이벤트가 실행되도록 허용하십시오.</target>
        </trans-unit>
        <trans-unit id="b7c8e8360051a1496c4166bdfa2011f1eae7d201" translate="yes" xml:space="preserve">
          <source>Allowing Failures</source>
          <target state="translated">실패 허용</target>
        </trans-unit>
        <trans-unit id="fb682c565ebbcea89e65b465b408aa2d24a41bd4" translate="yes" xml:space="preserve">
          <source>Allowing Mass Assignment</source>
          <target state="translated">일괄 할당 허용</target>
        </trans-unit>
        <trans-unit id="d5b30a398f0095dac07bbd0378bfcc954c71c5b2" translate="yes" xml:space="preserve">
          <source>Allows (by default) NULL values to be inserted into the column</source>
          <target state="translated">기본적으로 NULL 값을 열에 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1599dcb408fe056c9bb243b60c64c92b5be8c8e4" translate="yes" xml:space="preserve">
          <source>Allows us to not spin through all of the flattened data for some operations.</source>
          <target state="translated">일부 작업에서 평탄화 된 데이터를 모두 살펴볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6cb11ca53c6dbb961b210d1ceb23b3834ff604fe" translate="yes" xml:space="preserve">
          <source>Almost all methods available on the &lt;code&gt;Collection&lt;/code&gt; class are also available on the &lt;code&gt;LazyCollection&lt;/code&gt; class. Both of these classes implement the &lt;code&gt;Illuminate\Support\Enumerable&lt;/code&gt; contract, which defines the following methods:</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 클래스 에서 사용할 수있는 거의 모든 메서드 는 &lt;code&gt;LazyCollection&lt;/code&gt; 클래스 에서도 사용할 수 있습니다 . 이 두 클래스 는 다음 메서드를 정의하는 &lt;code&gt;Illuminate\Support\Enumerable&lt;/code&gt; 계약을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="2ca2d7622c1545ad714bb22c233de2506ceea705" translate="yes" xml:space="preserve">
          <source>Almost all of your service container bindings will be registered within &lt;a href=&quot;providers&quot;&gt;service providers&lt;/a&gt;, so most of these examples will demonstrate using the container in that context.</source>
          <target state="translated">거의 모든 서비스 컨테이너 바인딩이 &lt;a href=&quot;providers&quot;&gt;서비스 제공자&lt;/a&gt; 내에 등록되므로이 예제의 대부분은 해당 컨텍스트에서 컨테이너를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="991fc8d49f2f33cc7f2a96083ae57acf33c01905" translate="yes" xml:space="preserve">
          <source>Alphabetically sorts the imports for the given stub.</source>
          <target state="translated">주어진 스텁에 대한 가져 오기를 알파벳순으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="02d4089dc6f064f1bec0bbca279328f273dabe78" translate="yes" xml:space="preserve">
          <source>Also, you should verify that your &lt;code&gt;users&lt;/code&gt; (or equivalent) table contains a nullable, string &lt;code&gt;remember_token&lt;/code&gt; column of 100 characters. This column will be used to store a token for users that select the &quot;remember me&quot; option when logging into your application.</source>
          <target state="translated">또한 &lt;code&gt;users&lt;/code&gt; (또는 이에 상응하는) 테이블에 Null을 허용 하는 100 개의 문자열 &lt;code&gt;remember_token&lt;/code&gt; 열이 포함되어 있는지 확인해야합니다 . 이 열은 애플리케이션에 로그인 할 때 &quot;기억하기&quot;옵션을 선택하는 사용자를위한 토큰을 저장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2b2238343f466dd85ca108ccfebc94e9a7388c06" translate="yes" xml:space="preserve">
          <source>Alternatively, and importantly, you may &quot;type-hint&quot; the dependency in the constructor of a class that is resolved by the container, including &lt;a href=&quot;controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;events&quot;&gt;event listeners&lt;/a&gt;, &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, and more. Additionally, you may type-hint dependencies in the &lt;code&gt;handle&lt;/code&gt; method of &lt;a href=&quot;queues&quot;&gt;queued jobs&lt;/a&gt;. In practice, this is how most of your objects should be resolved by the container.</source>
          <target state="translated">또는 중요한 것은 &lt;a href=&quot;controllers&quot;&gt;컨트롤러&lt;/a&gt; , &lt;a href=&quot;events&quot;&gt;이벤트 리스너&lt;/a&gt; , &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 등을 포함하여 컨테이너에 의해 해결되는 클래스 생성자의 종속성을 &quot;유형 힌트&quot;할 수 있다는 것입니다 . 또한 &lt;a href=&quot;queues&quot;&gt;대기중인 작업&lt;/a&gt; 의 &lt;code&gt;handle&lt;/code&gt; 메서드에 종속성을 입력 할 수 있습니다 . 실제로 이것은 컨테이너가 대부분의 객체를 해결해야하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="dff1638715a6079aa7f75844f3daeccc27f41ffd" translate="yes" xml:space="preserve">
          <source>Alternatively, and importantly, you may &quot;type-hint&quot; the dependency in the constructor of a class that is resolved by the container, including &lt;a href=&quot;controllers&quot;&gt;controllers&lt;/a&gt;, &lt;a href=&quot;events&quot;&gt;event listeners&lt;/a&gt;, &lt;a href=&quot;queues&quot;&gt;queue jobs&lt;/a&gt;, &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, and more. In practice, this is how most of your objects should be resolved by the container.</source>
          <target state="translated">또는 &lt;a href=&quot;controllers&quot;&gt;컨트롤러&lt;/a&gt; , &lt;a href=&quot;events&quot;&gt;이벤트 리스너&lt;/a&gt; , &lt;a href=&quot;queues&quot;&gt;큐 작업&lt;/a&gt; , &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 등 컨테이너가 해결하는 클래스의 생성자에 대한 종속성을 &quot;유형 힌트&quot;로 사용할 수도 있습니다 . 실제로, 이것은 대부분의 객체가 컨테이너에 의해 해결되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="10c92977e402194e62ac6c1ed177bd4d674439d8" translate="yes" xml:space="preserve">
          <source>Alternatively, if your event uses the &lt;code&gt;Illuminate\Foundation\Events\Dispatchable&lt;/code&gt; trait, you may call the static &lt;code&gt;dispatch&lt;/code&gt; method on the event. Any arguments passed to the &lt;code&gt;dispatch&lt;/code&gt; method will be passed to the event's constructor:</source>
          <target state="translated">또는 이벤트에서 &lt;code&gt;Illuminate\Foundation\Events\Dispatchable&lt;/code&gt; 트레이 트를 사용하는 경우 이벤트 에서 정적 &lt;code&gt;dispatch&lt;/code&gt; 메서드를 호출 할 수 있습니다 . &lt;code&gt;dispatch&lt;/code&gt; 메서드에 전달 된 모든 인수 는 이벤트의 생성자에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="10cec565d315abaf93bd80edfa3a30286455314d" translate="yes" xml:space="preserve">
          <source>Alternatively, once a user is authenticated, you may access the authenticated user via an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance. Remember, type-hinted classes will automatically be injected into your controller methods. By type-hinting the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; object, you may gain convenient access to the authenticated user from any controller method in your application:</source>
          <target state="translated">또는 사용자가 인증되면 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 를 통해 인증 된 사용자에 액세스 할 수 있습니다 . 유형 힌트 클래스는 컨트롤러 메서드에 자동으로 삽입됩니다. &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 객체에 유형 힌트를 지정하면 애플리케이션의 모든 컨트롤러 메서드에서 인증 된 사용자에게 편리하게 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="385c44f632b887fa4155d758cc13e1dae44f7282" translate="yes" xml:space="preserve">
          <source>Alternatively, once a user is authenticated, you may access the authenticated user via an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance. Remember, type-hinted classes will automatically be injected into your controller methods:</source>
          <target state="translated">또는 사용자가 인증되면 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 를 통해 인증 된 사용자에게 액세스 할 수 있습니다 . 타입 힌트 클래스는 컨트롤러 메소드에 자동으로 주입됩니다.</target>
        </trans-unit>
        <trans-unit id="112de5b6e2326d0acc431cd31dd6a0fb3a41cc91" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;dispatchAfterResponse&lt;/code&gt; method delays dispatching a job until after the response is sent to the user's browser. This will still allow the user to begin using the application even though a queued job is still executing. This should typically only be used for jobs that take about a second, such as sending an email:</source>
          <target state="translated">또는 &lt;code&gt;dispatchAfterResponse&lt;/code&gt; 메서드는 응답이 사용자의 브라우저로 전송 될 때까지 작업 디스패치를 ​​지연합니다. 이렇게하면 대기중인 작업이 여전히 실행 중이더라도 사용자가 응용 프로그램 사용을 시작할 수 있습니다. 일반적으로 이메일 전송과 같이 약 1 초가 걸리는 작업에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5db973dcac418a9d5a059917f1aa1fda19111d6a" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;state&lt;/code&gt; method may be called directly on the factory instance to perform an inline state transformation:</source>
          <target state="translated">또는 &lt;code&gt;state&lt;/code&gt; 메서드를 팩토리 인스턴스에서 직접 호출하여 인라인 상태 변환을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee78caccfd9859bed0cff6f111fcb97d50b6c42c" translate="yes" xml:space="preserve">
          <source>Alternatively, validation rules may be specified as arrays of rules instead of a single &lt;code&gt;|&lt;/code&gt; delimited string:</source>
          <target state="translated">또는 유효성 검사 규칙을 단일 &lt;code&gt;|&lt;/code&gt; 구분 된 문자열 :</target>
        </trans-unit>
        <trans-unit id="93aca4329c747b4775416348b3011a1dd96f7ea3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can install the &lt;code&gt;predis/predis&lt;/code&gt; package via Composer:</source>
          <target state="translated">또는 Composer를 통해 &lt;code&gt;predis/predis&lt;/code&gt; 패키지를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ff74dc53279c0d697f0213e4413657541f300bc" translate="yes" xml:space="preserve">
          <source>Alternatively, you can perform more precise customization by catching the &lt;a href=&quot;https://developer.paddle.com/webhook-reference/subscription-alerts/subscription-payment-failed&quot;&gt;&lt;code&gt;subscription_payment_failed&lt;/code&gt;&lt;/a&gt; webhook and enabling the &quot;Subscription Payment Failed&quot; option in the Webhook settings of your Paddle dashboard:</source>
          <target state="translated">또는 &lt;a href=&quot;https://developer.paddle.com/webhook-reference/subscription-alerts/subscription-payment-failed&quot;&gt; &lt;code&gt;subscription_payment_failed&lt;/code&gt; &lt;/a&gt; 웹훅을 포착하고 Paddle 대시 보드의 웹훅 설정에서 &quot;Subscription Payment Failed&quot;옵션을 활성화하여 보다 정확한 사용자 정의를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="399366b6862792012b3820ae860c21facab710b7" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;Cookie&lt;/code&gt; facade to &quot;queue&quot; cookies for attachment to the outgoing response from your application. The &lt;code&gt;queue&lt;/code&gt; method accepts a &lt;code&gt;Cookie&lt;/code&gt; instance or the arguments needed to create a &lt;code&gt;Cookie&lt;/code&gt; instance. These cookies will be attached to the outgoing response before it is sent to the browser:</source>
          <target state="translated">또는 &lt;code&gt;Cookie&lt;/code&gt; 파사드를 사용 하여 응용 프로그램의 발신 응답에 첨부 할 쿠키를 &quot;큐에 넣을&quot;수 있습니다. &lt;code&gt;queue&lt;/code&gt; 방법은 허용 &lt;code&gt;Cookie&lt;/code&gt; 인스턴스 나 만드는 데 필요한 인수 &lt;code&gt;Cookie&lt;/code&gt; 인스턴스를. 이 쿠키는 브라우저로 전송되기 전에 발신 응답에 첨부됩니다.</target>
        </trans-unit>
        <trans-unit id="cadb9181ffcf890de9162fc567724cbabc4990fa" translate="yes" xml:space="preserve">
          <source>Alternatively, you could allow Stripe to handle the payment confirmation for you. In this case, instead of redirecting to the payment confirmation page, you may &lt;a href=&quot;https://dashboard.stripe.com/account/billing/automatic&quot;&gt;setup Stripe's automatic billing emails&lt;/a&gt; in your Stripe dashboard. However, if an &lt;code&gt;IncompletePayment&lt;/code&gt; exception is caught, you should still inform the user they will receive an email with further payment confirmation instructions.</source>
          <target state="translated">또는 Stripe에서 결제 확인을 처리하도록 허용 할 수 있습니다. 이 경우 결제 확인 페이지로 리디렉션하는 대신 Stripe 대시 보드에서 &lt;a href=&quot;https://dashboard.stripe.com/account/billing/automatic&quot;&gt;Stripe의 자동 결제 이메일&lt;/a&gt; 을 설정할 수 있습니다 . 그러나 &lt;code&gt;IncompletePayment&lt;/code&gt; 예외가 발견 된 경우에도 사용자에게 추가 결제 확인 지침이 포함 된 이메일을 받게 될 것이라고 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="474627fffff69c73454753a0f135c9162ff6616c" translate="yes" xml:space="preserve">
          <source>Alternatively, you may add a new plan to an existing subscription at a later time:</source>
          <target state="translated">또는 나중에 기존 구독에 새 플랜을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5107437bf312d178f9d2427508cde38ef26a4371" translate="yes" xml:space="preserve">
          <source>Alternatively, you may also install Laravel by issuing the Composer &lt;code&gt;create-project&lt;/code&gt; command in your terminal:</source>
          <target state="translated">또는 터미널에서 Composer &lt;code&gt;create-project&lt;/code&gt; 명령을 실행하여 Laravel을 설치할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c86d2c2ca7cf4d3c2aa9eb73d24cab765a1310e2" translate="yes" xml:space="preserve">
          <source>Alternatively, you may also pass commands to the server using the &lt;code&gt;command&lt;/code&gt; method, which accepts the name of the command as its first argument, and an array of values as its second argument:</source>
          <target state="translated">또는 &lt;code&gt;command&lt;/code&gt; 이름을 첫 번째 인수로 사용하고 값 배열을 두 번째 인수로 사용하는 명령 메소드를 사용하여 명령을 서버에 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0bf97a124eca0c71bc8598cf6a3a98102b8c515" translate="yes" xml:space="preserve">
          <source>Alternatively, you may assign the &lt;code&gt;Illuminate\Routing\Middleware\ValidateSignature&lt;/code&gt; middleware to the route. If it is not already present, you should assign this middleware a key in your HTTP kernel's &lt;code&gt;routeMiddleware&lt;/code&gt; array:</source>
          <target state="translated">또는 &lt;code&gt;Illuminate\Routing\Middleware\ValidateSignature&lt;/code&gt; 미들웨어를 경로에 할당 할 수 있습니다 . 아직 없으면이 미들웨어에 HTTP 커널의 &lt;code&gt;routeMiddleware&lt;/code&gt; 배열에 키를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b363fc7d5bd015a2996f1908290511b6a62a27e8" translate="yes" xml:space="preserve">
          <source>Alternatively, you may attach the expired cookie to a response instance:</source>
          <target state="translated">또는 만료 된 쿠키를 응답 인스턴스에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b56184c981b0f18d05b1c942c3dc9a2dd6ceacfc" translate="yes" xml:space="preserve">
          <source>Alternatively, you may cast a model or collection to a string, which will automatically call the &lt;code&gt;toJson&lt;/code&gt; method on the model or collection:</source>
          <target state="translated">또는 모델 또는 컬렉션을 문자열로 캐스팅하여 모델 또는 컬렉션에서 &lt;code&gt;toJson&lt;/code&gt; 메서드를 자동으로 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ae425dbeaf6954eccb8aa2908359b543e8a80c0c" translate="yes" xml:space="preserve">
          <source>Alternatively, you may create the index after defining the column. For example:</source>
          <target state="translated">또는 열을 정의한 후 색인을 작성할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="60fd3d083beb1aad7cd03aa439de0be2380b6e35" translate="yes" xml:space="preserve">
          <source>Alternatively, you may customize the widget with custom options instead of using a pay link:</source>
          <target state="translated">또는 유료 링크를 사용하는 대신 사용자 지정 옵션으로 위젯을 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f3615b9d0fdbce0f5a4b83970ba3c360ef4a005" translate="yes" xml:space="preserve">
          <source>Alternatively, you may define a &lt;code&gt;withResponse&lt;/code&gt; method within the resource itself. This method will be called when the resource is returned as the outer-most resource in a response:</source>
          <target state="translated">또는 자원 자체 내에 &lt;code&gt;withResponse&lt;/code&gt; 메소드를 정의 할 수 있습니다. 이 메소드는 자원이 응답에서 가장 바깥 쪽 자원으로 리턴 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d2bf054bc29ebe4cbb759bae946d445358025dbf" translate="yes" xml:space="preserve">
          <source>Alternatively, you may define a &lt;code&gt;withResponse&lt;/code&gt; method within the resource itself. This method will be called when the resource is returned as the outermost resource in a response:</source>
          <target state="translated">또는 리소스 자체 내에 &lt;code&gt;withResponse&lt;/code&gt; 메서드를 정의 할 수 있습니다. 이 메서드는 리소스가 응답에서 가장 바깥 쪽 리소스로 반환 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="22ceab564756d96b2a7619690dd7c740e54e4611" translate="yes" xml:space="preserve">
          <source>Alternatively, you may enable the &lt;code&gt;innodb_large_prefix&lt;/code&gt; option for your database. Refer to your database's documentation for instructions on how to properly enable this option.</source>
          <target state="translated">또는 데이터베이스에 대해 &lt;code&gt;innodb_large_prefix&lt;/code&gt; 옵션을 활성화 할 수 있습니다. 이 옵션을 올바르게 활성화하는 방법에 대한 지침은 데이터베이스 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c778675ca1b8cca42d8296d75a1feaaa9287539d" translate="yes" xml:space="preserve">
          <source>Alternatively, you may install the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;PhpRedis&lt;/a&gt; PHP extension via PECL. The extension is more complex to install but may yield better performance for applications that make heavy use of Redis.</source>
          <target state="translated">또는 PECL을 통해 &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;PhpRedis&lt;/a&gt; PHP 확장을 설치할 수 있습니다 . 확장 기능은 설치가 더 복잡하지만 Redis를 많이 사용하는 응용 프로그램의 성능이 향상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="425860ce6ce7cbba6bc23c3778e2333248cae585" translate="yes" xml:space="preserve">
          <source>Alternatively, you may instruct the &lt;code&gt;RefreshDatabase&lt;/code&gt; trait to automatically seed the database before each test. You may accomplish this by defining a &lt;code&gt;$seed&lt;/code&gt; property on your test class:</source>
          <target state="translated">또는 &lt;code&gt;RefreshDatabase&lt;/code&gt; 특성에 각 테스트 전에 데이터베이스를 자동으로 시드하도록 지시 할 수 있습니다 . 테스트 클래스에 &lt;code&gt;$seed&lt;/code&gt; 속성을 정의하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="579a780afade47624bd5a1e572f2ed2fdd4ff139" translate="yes" xml:space="preserve">
          <source>Alternatively, you may override the &lt;code&gt;resolveRouteBinding&lt;/code&gt; method on your Eloquent model. This method will receive the value of the URI segment and should return the instance of the class that should be injected into the route:</source>
          <target state="translated">또는 Eloquent 모델 에서 &lt;code&gt;resolveRouteBinding&lt;/code&gt; 메서드를 재정의 할 수 있습니다 . 이 메서드는 URI 세그먼트의 값을 수신하고 경로에 삽입해야하는 클래스의 인스턴스를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="650e545c85ee2e6d7667a98ff1411c8282885335" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass a Closure as the second argument to the &lt;code&gt;anticipate&lt;/code&gt; method. The Closure will be called each time the user types an input character. The Closure should accept a string parameter containing the user's input so far, and return an array of options for auto-completion:</source>
          <target state="translated">(가)에 다른 방법으로는 두 번째 인수로 클로저를 통과 할 수 &lt;code&gt;anticipate&lt;/code&gt; 방법. 클로저는 사용자가 입력 문자를 입력 할 때마다 호출됩니다. Closure는 지금까지 사용자의 입력을 포함하는 문자열 매개 변수를 받아들이고 자동 완성을위한 옵션 배열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="3dff155b3b81a88eb098db0d33d42dbdf558a3d0" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass an array containing the column name that holds the foreign key to the &lt;code&gt;dropForeign&lt;/code&gt; method. The array will be automatically converted using the constraint name convention used by Laravel's schema builder:</source>
          <target state="translated">또는 외래 키를 보유하는 열 이름이 포함 된 배열을 &lt;code&gt;dropForeign&lt;/code&gt; 메소드 에 전달할 수 있습니다. 배열은 Laravel의 스키마 빌더가 사용하는 제약 이름 규칙을 사용하여 자동으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2d6b9c5d39faf4f37add29f9561d85c1727ba67b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass an array to the &lt;code&gt;fake&lt;/code&gt; method. The array's keys should represent URL patterns that you wish to fake and their associated responses. The &lt;code&gt;*&lt;/code&gt; character may be used as a wildcard character. Any requests made to URLs that have not been faked will actually be executed. You may use the &lt;code&gt;response&lt;/code&gt; method to construct stub / fake responses for these endpoints:</source>
          <target state="translated">또는 &lt;code&gt;fake&lt;/code&gt; 메소드에 배열을 전달할 수 있습니다 . 배열의 키는 위조하려는 URL 패턴과 관련 응답을 나타내야합니다. &lt;code&gt;*&lt;/code&gt; 문자는 와일드 카드 문자로 사용할 수있다. 위조되지 않은 URL에 대한 요청은 실제로 실행됩니다. &lt;code&gt;response&lt;/code&gt; 방법을 사용하여 다음 엔드 포인트에 대한 스텁 / 가짜 응답을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bab05d65977c1276fa97de0f50ecf3b377ef43b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass in your own callback to search for the first item that passes your truth test:</source>
          <target state="translated">또는 자신의 콜백을 전달하여 진실 테스트를 통과 한 첫 번째 항목을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="200c342bb80cceb9d4ac395102fa2c6c98f05044" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass the entire Artisan command to the &lt;code&gt;call&lt;/code&gt; method as a string:</source>
          <target state="translated">또는 전체 Artisan 명령을 &lt;code&gt;call&lt;/code&gt; 메서드에 문자열로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d20228f527defe539385128c57cdc2a6129df03" translate="yes" xml:space="preserve">
          <source>Alternatively, you may pass your own callback to determine how to sort the collection's values:</source>
          <target state="translated">또는 컬렉션 값을 정렬하는 방법을 결정하기 위해 자체 콜백을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6e1514a10da09471b90d833719ce6137fdd2541" translate="yes" xml:space="preserve">
          <source>Alternatively, you may prefix event classes with a &lt;code&gt;.&lt;/code&gt; when subscribing to them using Echo. This will allow you to always specify the fully-qualified class name:</source>
          <target state="translated">또는 이벤트 클래스 앞에 접두사를 붙일 수 있습니다 &lt;code&gt;.&lt;/code&gt; Echo를 사용하여 구독 할 때 이를 통해 항상 정규화 된 클래스 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="457361a52aefdb56124606a917b8d3a3c2868d02" translate="yes" xml:space="preserve">
          <source>Alternatively, you may run the &lt;code&gt;queue:listen&lt;/code&gt; command. When using the &lt;code&gt;queue:listen&lt;/code&gt; command, you don't have to manually restart the worker when you want to reload your updated code or reset the application state; however, this command is not as efficient as &lt;code&gt;queue:work&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;queue:listen&lt;/code&gt; 명령을 실행할 수 있습니다 . 사용하는 경우 &lt;code&gt;queue:listen&lt;/code&gt; 명령, 당신은 수동으로 업데이트 된 코드를 다시로드하거나 응용 프로그램의 상태를 재설정 할 작업자를 다시 시작할 필요가 없습니다; 그러나이 명령은 &lt;code&gt;queue:work&lt;/code&gt; 만큼 효율적이지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6e0dd005f758240b43fb7e124519fc49587ebb22" translate="yes" xml:space="preserve">
          <source>Alternatively, you may send notifications via the &lt;code&gt;Notification&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. This is useful primarily when you need to send a notification to multiple notifiable entities such as a collection of users. To send notifications using the facade, pass all of the notifiable entities and the notification instance to the &lt;code&gt;send&lt;/code&gt; method:</source>
          <target state="translated">또는 &lt;code&gt;Notification&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 를 통해 알림을 보낼 수 있습니다 . 이것은 주로 사용자 모음과 같은 여러 통지 가능한 엔티티에 알림을 보내야 할 때 유용합니다. 파사드를 사용하여 알림을 보내려면 알림 가능한 모든 엔티티와 알림 인스턴스를 &lt;code&gt;send&lt;/code&gt; 메소드에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="bc159f8450f3b99b769c8fd05a9bbf864a31d7c1" translate="yes" xml:space="preserve">
          <source>Alternatively, you may set a specific quantity using the &lt;code&gt;updateQuantity&lt;/code&gt; method:</source>
          <target state="translated">또는 &lt;code&gt;updateQuantity&lt;/code&gt; 메소드를 사용하여 특정 수량을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ef0bdd4b4c2c42d2e8aec1edb91a533f0f73f49" translate="yes" xml:space="preserve">
          <source>Alternatively, you may specify the maximum number of workers that may simultaneously process a given job. This can be helpful when a queued job is modifying a resource that should only be modified by one job at a time. For example, using the &lt;code&gt;funnel&lt;/code&gt; method, you may limit jobs of a given type to only be processed by one worker at a time:</source>
          <target state="translated">또는 주어진 작업을 동시에 처리 할 수있는 최대 작업자 수를 지정할 수 있습니다. 이는 대기중인 작업이 한 번에 하나의 작업 만 수정해야하는 자원을 수정하는 경우 유용합니다. 예를 들어, &lt;code&gt;funnel&lt;/code&gt; 방법을 사용하면 주어진 유형의 작업이 한 번에 한 명의 작업자 만 처리하도록 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e70594165705261fd3fe695847256cefa4e09e38" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;Cookie&lt;/code&gt; facade to access cookie values:</source>
          <target state="translated">또는 &lt;code&gt;Cookie&lt;/code&gt; 파사드를 사용하여 쿠키 값에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="188ce858b868f1fcb2bee91dd15c186eeae4ec7b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;componentNamespace&lt;/code&gt; method to autoload component classes by convention. For example, a &lt;code&gt;Nightshade&lt;/code&gt; package might have &lt;code&gt;Calendar&lt;/code&gt; and &lt;code&gt;ColorPicker&lt;/code&gt; components that reside within the &lt;code&gt;Package\Views\Components&lt;/code&gt; namespace:</source>
          <target state="translated">또는 &lt;code&gt;componentNamespace&lt;/code&gt; 메서드를 사용하여 규칙에 따라 구성 요소 클래스를 자동로드 할 수 있습니다 . 예를 들어 &lt;code&gt;Nightshade&lt;/code&gt; 패키지 에는 &lt;code&gt;Package\Views\Components&lt;/code&gt; 네임 스페이스 내에있는 &lt;code&gt;Calendar&lt;/code&gt; 및 &lt;code&gt;ColorPicker&lt;/code&gt; 구성 요소가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87f85bc7eee4436aca175600ce3c852d6b8cfcea" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;exclude_unless&lt;/code&gt; rule to not validate a given field unless another field has a given value:</source>
          <target state="translated">또는 &lt;code&gt;exclude_unless&lt;/code&gt; 규칙을 사용하여 다른 필드에 지정된 값이없는 경우 지정된 필드의 유효성을 검사하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ec9a07b2bafe19c066d462a848be263b838f78e" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; methods:</source>
          <target state="translated">또는 &lt;code&gt;limit&lt;/code&gt; 및 &lt;code&gt;offset&lt;/code&gt; 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b6c5c3546ed23adb02c90319b4ab4b5e82c8ddd" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;lockForUpdate&lt;/code&gt; method. A &quot;for update&quot; lock prevents the rows from being modified or from being selected with another shared lock:</source>
          <target state="translated">또는 &lt;code&gt;lockForUpdate&lt;/code&gt; 메소드를 사용할 수 있습니다 . &quot;업데이트&quot;잠금은 행이 수정되거나 다른 공유 잠금으로 선택되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="c8cd33dc61f0b90272a7522f83e3927d9313689b" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use the &lt;code&gt;visible&lt;/code&gt; property to define a white-list of attributes that should be included in your model's array and JSON representation. All other attributes will be hidden when the model is converted to an array or JSON:</source>
          <target state="translated">또는 &lt;code&gt;visible&lt;/code&gt; 속성을 사용하여 모델의 배열 및 JSON 표현에 포함되어야하는 화이트리스트 속성을 정의 할 수 있습니다. 모델이 배열 또는 JSON으로 변환되면 다른 모든 속성은 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="f70584e88ae88b990dcdc410b3423accf8c89203" translate="yes" xml:space="preserve">
          <source>Alternatively, your subscriber's &lt;code&gt;subscribe&lt;/code&gt; method may return an array of event to handler mappings. In this case, the event listener mappings will be registered for you automatically:</source>
          <target state="translated">또는 구독자의 &lt;code&gt;subscribe&lt;/code&gt; 메서드가 핸들러 매핑에 대한 이벤트 배열을 반환 할 수 있습니다. 이 경우 이벤트 리스너 매핑이 자동으로 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="a443c911cb317bc5953e423eb8fe6a83aa462da0" translate="yes" xml:space="preserve">
          <source>Alternatives To Maintenance Mode</source>
          <target state="translated">유지 관리 모드의 대안</target>
        </trans-unit>
        <trans-unit id="d7f6ee30660ebecf3e9bcfc2d4987f8cda6294d4" translate="yes" xml:space="preserve">
          <source>Although we just demonstrated how to write your own rate limiting job middleware, Laravel includes a rate limiting middleware that you may utilize to rate limit jobs. Like &lt;a href=&quot;routing#defining-rate-limiter&quot;&gt;route rate limiters&lt;/a&gt;, job rate limiters are defined using the &lt;code&gt;RateLimiter&lt;/code&gt; facade's &lt;code&gt;for&lt;/code&gt; method.</source>
          <target state="translated">자신의 속도 제한 작업 미들웨어를 작성하는 방법을 방금 시연했지만 Laravel에는 속도 제한 작업에 활용할 수있는 속도 제한 미들웨어가 포함되어 있습니다. &lt;a href=&quot;routing#defining-rate-limiter&quot;&gt;경로 속도 제한 기와&lt;/a&gt; 마찬가지로 작업 속도 제한 &lt;code&gt;RateLimiter&lt;/code&gt; 파사드의 &lt;code&gt;for&lt;/code&gt; 메서드를 사용하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f1f1ca209e9db5d224bc3e912d79bcd99dccb84" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put &quot;bail&quot; in rules.</source>
          <target state="translated">항상 true를 반환합니다. 규칙에 &quot;베일&quot;을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="cb816511144785cb19a959efc4c30c270dde0ff0" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put &quot;nullable&quot; in rules.</source>
          <target state="translated">항상 true를 반환합니다. 규칙에 &quot;널링 가능&quot;을 넣습니다.</target>
        </trans-unit>
        <trans-unit id="65a630df4c93dd26b342723f97cf096d913f6375" translate="yes" xml:space="preserve">
          <source>Always returns true, just lets us put sometimes in rules.</source>
          <target state="translated">항상 참을 돌려줍니다. 가끔 규칙에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="a3f141cb696a1341fb17f49878a43a9bd52ed37b" translate="yes" xml:space="preserve">
          <source>Amazon S3: &lt;code&gt;league/flysystem-aws-s3-v3 ~1.0&lt;/code&gt;</source>
          <target state="translated">Amazon S3 : &lt;code&gt;league/flysystem-aws-s3-v3 ~1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bd81e7ee2af562b899c24e9d9baa207ab2a9b69" translate="yes" xml:space="preserve">
          <source>Amazon SQS: &lt;code&gt;aws/aws-sdk-php ~3.0&lt;/code&gt;</source>
          <target state="translated">Amazon SQS : &lt;code&gt;aws/aws-sdk-php ~3.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="812e27e220b71ff9c6214ea400be39a6b1d33bfc" translate="yes" xml:space="preserve">
          <source>An &quot;implicit&quot; extension only &lt;em&gt;implies&lt;/em&gt; that the attribute is required. Whether it actually invalidates a missing or empty attribute is up to you.</source>
          <target state="translated">&quot;암시 적&quot;확장자 는 속성이 필요하다는 &lt;em&gt;것을 의미&lt;/em&gt; 합니다. 실제로 누락되거나 비어있는 속성을 무효화하는지 여부는 사용자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a14fcf9acc5e3f14230ce088a32825ac072dcc1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExampleTest.php&lt;/code&gt; file is provided in both the &lt;code&gt;Feature&lt;/code&gt; and &lt;code&gt;Unit&lt;/code&gt; test directories. After installing a new Laravel application, run &lt;code&gt;phpunit&lt;/code&gt; on the command line to run your tests.</source>
          <target state="translated">&lt;code&gt;ExampleTest.php&lt;/code&gt; 의 파일이 모두 제공되는 &lt;code&gt;Feature&lt;/code&gt; 및 &lt;code&gt;Unit&lt;/code&gt; 테스트 디렉토리. 새로운 라 라벨 애플리케이션을 설치 한 후 , 명령 행에서 &lt;code&gt;phpunit&lt;/code&gt; 을 실행하여 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9102ba79ba1ba6e8fee0136b062aeaaac442d99f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExampleTest.php&lt;/code&gt; file is provided in both the &lt;code&gt;Feature&lt;/code&gt; and &lt;code&gt;Unit&lt;/code&gt; test directories. After installing a new Laravel application, run &lt;code&gt;vendor/bin/phpunit&lt;/code&gt; on the command line to run your tests.</source>
          <target state="translated">&lt;code&gt;ExampleTest.php&lt;/code&gt; 의 파일이 모두 제공되는 &lt;code&gt;Feature&lt;/code&gt; 및 &lt;code&gt;Unit&lt;/code&gt; 테스트 디렉토리. 새 Laravel 애플리케이션을 설치 한 후 명령 줄에서 &lt;code&gt;vendor/bin/phpunit&lt;/code&gt; 을 실행하여 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="2fbe7acdb1516d33004e38372389ae90926cfe47" translate="yes" xml:space="preserve">
          <source>An Eloquent model's changes are now available to the &lt;code&gt;wasChanged&lt;/code&gt; method &lt;strong&gt;before&lt;/strong&gt; firing the &lt;code&gt;updated&lt;/code&gt; model event. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution. &lt;a href=&quot;https://github.com/laravel/framework/pull/25026&quot;&gt;Please let us know if you encounter any issues surrounding this change&lt;/a&gt;.</source>
          <target state="translated">웅변 모델의 변화는 이제 사용할 수 있습니다 &lt;code&gt;wasChanged&lt;/code&gt; 의 방법 &lt;strong&gt;전에&lt;/strong&gt; 점화 &lt;code&gt;updated&lt;/code&gt; 모델 이벤트를. 일반적으로 이것은 버그 수정으로 간주되어야합니다. 그러나주의를 기울이지 않는 주요 변경 사항으로 표시됩니다. &lt;a href=&quot;https://github.com/laravel/framework/pull/25026&quot;&gt;이 변경과 관련하여 문제가 발생하면 알려주십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52bd60128e6ea9810e59893b94487e8e899e8e61" translate="yes" xml:space="preserve">
          <source>An absolute must for performance is to use a cached adapter. You will need an additional package for this:</source>
          <target state="translated">성능을 위해서는 절대적으로 캐시 된 어댑터를 사용해야합니다. 이를 위해 추가 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5808d8890536420b7ab1d3508876ff93800503d8" translate="yes" xml:space="preserve">
          <source>An aggregate function and column to be run.</source>
          <target state="translated">실행할 집계 함수 및 열</target>
        </trans-unit>
        <trans-unit id="47db33fb9faac4846cffc0eb15e51dfca9eca52a" translate="yes" xml:space="preserve">
          <source>An alias function name for make().</source>
          <target state="translated">make ()의 별명 함수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b89115f19be99edc74372923e4da18f73aacddd6" translate="yes" xml:space="preserve">
          <source>An alternative more semantic shortcut to the message container.</source>
          <target state="translated">메시지 컨테이너에 대한보다 의미론적인 대안입니다.</target>
        </trans-unit>
        <trans-unit id="ef9d355ddd20ca669ce0c40025819623bdfa51d4" translate="yes" xml:space="preserve">
          <source>An array is &quot;associative&quot; if it doesn't have sequential numerical keys beginning with zero.</source>
          <target state="translated">배열은 0으로 시작하는 순차적 숫자 키가없는 경우 &quot;연관&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="20902f0e4931f7f27f428f8d4f22cd7c34dde43c" translate="yes" xml:space="preserve">
          <source>An array of all the registered routes.</source>
          <target state="translated">등록 된 모든 경로의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b939e0eeae7e77433aa109aed2f843a2a99b900f" translate="yes" xml:space="preserve">
          <source>An array of contextual data may also be passed to the function:</source>
          <target state="translated">상황에 맞는 데이터 배열이 함수에 전달 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2630560adfbd98659f63979f83e0b111c04465b9" translate="yes" xml:space="preserve">
          <source>An array of contextual data may also be passed to the log methods. This contextual data will be formatted and displayed with the log message:</source>
          <target state="translated">컨텍스트 데이터 배열이 로그 메소드로 전달 될 수도 있습니다. 이 상황 별 데이터는 다음과 같은 형식으로 로그 메시지와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="29f4b502cf211b7ccf2a42ed14575a5eac3d0842" translate="yes" xml:space="preserve">
          <source>An array of extension to MIME types.</source>
          <target state="translated">MIME 형식에 대한 확장 배열입니다.</target>
        </trans-unit>
        <trans-unit id="5f41d2a939ede614090db8c5c7f3ccfd0cf30f57" translate="yes" xml:space="preserve">
          <source>An array of the route attributes keyed by name.</source>
          <target state="translated">이름으로 입력 된 경로 속성의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b71f4c0b69700796b8750588b5d48d95424a6932" translate="yes" xml:space="preserve">
          <source>An array of the routes keyed by method.</source>
          <target state="translated">메소드별로 키가 지정된 라우트의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="0245c48f90b157adfac52b52e4df6a19df8a0b6b" translate="yes" xml:space="preserve">
          <source>An array of the service provider instances.</source>
          <target state="translated">서비스 제공자 인스턴스의 배열.</target>
        </trans-unit>
        <trans-unit id="af7a9560d0788a5ebe243f47ee849164f44060d8" translate="yes" xml:space="preserve">
          <source>An array of the types that have been resolved.</source>
          <target state="translated">해결 된 유형의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="eb85fa9e9ab2676f14c5414f571e5caa05dfc2fe" translate="yes" xml:space="preserve">
          <source>An array representation of the lock lottery odds.</source>
          <target state="translated">잠금 복권 배당률의 배열 표현입니다.</target>
        </trans-unit>
        <trans-unit id="26dfab2496cb857be7a7869ef3f690808fa2a74c" translate="yes" xml:space="preserve">
          <source>An array to map class names to their morph names in database.</source>
          <target state="translated">데이터베이스에서 클래스 이름을 모프 이름에 매핑하는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="f7c0d8dad07822f6d4cbd41960810c3a17b459fc" translate="yes" xml:space="preserve">
          <source>An event class is a data container which holds the information related to the event. For example, let's assume our generated &lt;code&gt;OrderShipped&lt;/code&gt; event receives an &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; object:</source>
          <target state="translated">이벤트 클래스는 이벤트와 관련된 정보를 보유하는 데이터 컨테이너입니다. 예를 들어, 생성 된 &lt;code&gt;OrderShipped&lt;/code&gt; 이벤트가 Eloquent &lt;a href=&quot;eloquent&quot;&gt;ORM&lt;/a&gt; 오브젝트를 수신 한다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a14ac4a872cea4a61fac3de80b69bef2498e196" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the given identifier can't be resolved. The exception will be an instance of &lt;code&gt;Psr\Container\NotFoundExceptionInterface&lt;/code&gt; if the identifier was never bound. If the identifier was bound but was unable to be resolved, an instance of &lt;code&gt;Psr\Container\ContainerExceptionInterface&lt;/code&gt; will be thrown.</source>
          <target state="translated">주어진 식별자를 확인할 수 없으면 예외가 발생합니다. 식별자가 바인딩되지 않은 경우 &lt;code&gt;Psr\Container\NotFoundExceptionInterface&lt;/code&gt; 의 인스턴스는 예외입니다 . 식별자가 바인딩되었지만 확인할 수없는 경우 &lt;code&gt;Psr\Container\ContainerExceptionInterface&lt;/code&gt; 의 인스턴스 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="293d9e8bceda23dab13d08a85f87f7874c4cfb8c" translate="yes" xml:space="preserve">
          <source>An flattened array of all of the routes.</source>
          <target state="translated">모든 경로의 평평한 배열.</target>
        </trans-unit>
        <trans-unit id="0aed6f34853be050f7de1bd6b5c8221f2bc63d0a" translate="yes" xml:space="preserve">
          <source>An migration instance.</source>
          <target state="translated">마이그레이션 인스턴스.</target>
        </trans-unit>
        <trans-unit id="682ce7a768a6bedf77aa1327062862b160877d0d" translate="yes" xml:space="preserve">
          <source>And, if you would like to get started quickly, we are pleased to recommend &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; as a quick way to start a new Laravel application that already uses our preferred authentication stack of Laravel's built-in authentication services and Laravel Sanctum.</source>
          <target state="translated">그리고 빠르게 시작하고 싶다면 Laravel의 기본 제공 인증 서비스 및 Laravel Sanctum의 선호하는 인증 스택을 이미 사용하는 새로운 Laravel 애플리케이션을 시작하는 빠른 방법으로 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 을 권장 합니다.</target>
        </trans-unit>
        <trans-unit id="c0ddbd79d6440a7e5304989f9e6633b4e041ac10" translate="yes" xml:space="preserve">
          <source>Anonymous Components</source>
          <target state="translated">익명 구성 요소</target>
        </trans-unit>
        <trans-unit id="0507f8c89d571edb84bf58abee022b4194fbfb2f" translate="yes" xml:space="preserve">
          <source>Anonymous Global Scopes</source>
          <target state="translated">익명의 글로벌 범위</target>
        </trans-unit>
        <trans-unit id="4eb6192ba54a0b11760f916a3100ce9f28921a90" translate="yes" xml:space="preserve">
          <source>AnonymousComponent</source>
          <target state="translated">AnonymousComponent</target>
        </trans-unit>
        <trans-unit id="11df36f51ac5b3ef0a1d520903dc32fcfa855427" translate="yes" xml:space="preserve">
          <source>AnonymousComponent (View)</source>
          <target state="translated">AnonymousComponent (보기)</target>
        </trans-unit>
        <trans-unit id="00e9ac200e9384a3def0bd9fd04feb4040f86507" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::__construct()</source>
          <target state="translated">AnonymousComponent::__construct()</target>
        </trans-unit>
        <trans-unit id="0e79a8406f36d8bf91b39f53c00c82a6ce0ed356" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::data()</source>
          <target state="translated">AnonymousComponent::data()</target>
        </trans-unit>
        <trans-unit id="4c27c4bbdb872c182668a39fa2f0a6f0bad52304" translate="yes" xml:space="preserve">
          <source>AnonymousComponent::render()</source>
          <target state="translated">AnonymousComponent::render()</target>
        </trans-unit>
        <trans-unit id="18240bd96d9da0c02797c534fb53cf9ccd58be3a" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable</source>
          <target state="translated">AnonymousNotifiable</target>
        </trans-unit>
        <trans-unit id="7b2c2de08657bcfd3070a1e9d2c7af08b45f0a92" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable (Notifications)</source>
          <target state="translated">AnonymousNotifiable (알림)</target>
        </trans-unit>
        <trans-unit id="ef52c6270cae9d2a8772c01eafa3cc282fa701e3" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::getKey()</source>
          <target state="translated">AnonymousNotifiable::getKey()</target>
        </trans-unit>
        <trans-unit id="420f57097ce76f0852fc53d85eaf5e0551a8e3b7" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::notify()</source>
          <target state="translated">AnonymousNotifiable::notify()</target>
        </trans-unit>
        <trans-unit id="71a2ea7794bf50625200a04aa9eb37398c3652c2" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::notifyNow()</source>
          <target state="translated">AnonymousNotifiable::notifyNow()</target>
        </trans-unit>
        <trans-unit id="34779d172a573789d90f61be59da037a15d960c4" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::route()</source>
          <target state="translated">AnonymousNotifiable::route()</target>
        </trans-unit>
        <trans-unit id="4f68b482bbbf03331d00e735b9ecf3ecf583eabc" translate="yes" xml:space="preserve">
          <source>AnonymousNotifiable::routeNotificationFor()</source>
          <target state="translated">AnonymousNotifiable::routeNotificationFor()</target>
        </trans-unit>
        <trans-unit id="252976420a4d13fd5d7a9481cfc09abf841bebbd" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection</source>
          <target state="translated">AnonymousResourceCollection</target>
        </trans-unit>
        <trans-unit id="24c261fbc0dbd730207becf97723800100860aa4" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection (Http\Resources)</source>
          <target state="translated">AnonymousResourceCollection (Http \ Resources)</target>
        </trans-unit>
        <trans-unit id="452919a6b7740cb69b61eef8f7434feb7d80b6cb" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection::__construct()</source>
          <target state="translated">AnonymousResourceCollection::__construct()</target>
        </trans-unit>
        <trans-unit id="3043814b43b771ba94b5494ba3cd08c6a6414e41" translate="yes" xml:space="preserve">
          <source>Another common use-case for route groups is assigning the same PHP namespace to a group of controllers using the &lt;code&gt;namespace&lt;/code&gt; method:</source>
          <target state="translated">라우팅 그룹의 또 다른 일반적인 사용 사례는 &lt;code&gt;namespace&lt;/code&gt; 메서드를 사용하여 동일한 PHP 네임 스페이스를 컨트롤러 그룹에 할당하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="34100ad6787087d9d2ebda2878141a2222f9cbff" translate="yes" xml:space="preserve">
          <source>Another method of registering custom validation rules is using the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. Let's use this method within a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; to register a custom validation rule:</source>
          <target state="translated">사용자 지정 유효성 검사 규칙을 등록하는 또 다른 방법은 &lt;code&gt;Validator&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;extend&lt;/code&gt; 메서드를 사용하는 것 입니다. &lt;a href=&quot;providers&quot;&gt;서비스 제공자&lt;/a&gt; 내에서이 메소드를 사용 하여 사용자 정의 유효성 검증 규칙을 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="e1e9eb362caf103a397931d5acfd58fa38162e28" translate="yes" xml:space="preserve">
          <source>Another solution provided by Laravel is to set a universal recipient of all emails sent by the framework. This way, all the emails generated by your application will be sent to a specific address, instead of the address actually specified when sending the message. This can be done via the &lt;code&gt;to&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Laravel이 제공하는 또 다른 솔루션은 프레임 워크에서 전송 한 모든 이메일의 전체 수신자를 설정하는 것입니다. 이렇게하면 응용 프로그램에서 생성 된 모든 전자 메일이 실제로 메시지를 보낼 때 지정된 주소 대신 특정 주소로 전송됩니다. 이것은 &lt;code&gt;config/mail.php&lt;/code&gt; 설정 파일 의 &lt;code&gt;to&lt;/code&gt; 옵션을 통해 가능합니다 :</target>
        </trans-unit>
        <trans-unit id="500d69918eafa739164e82894140b8fc1e04127d" translate="yes" xml:space="preserve">
          <source>Any HTML forms pointing to &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; routes that are defined in the &lt;code&gt;web&lt;/code&gt; routes file should include a CSRF token field. Otherwise, the request will be rejected. You can read more about CSRF protection in the &lt;a href=&quot;csrf&quot;&gt;CSRF documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;web&lt;/code&gt; 경로 파일에 정의 된 &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;PATCH&lt;/code&gt; 또는 &lt;code&gt;DELETE&lt;/code&gt; 경로를 가리키는 HTML 양식 은 CSRF 토큰 필드를 포함해야합니다. 그렇지 않으면 요청이 거부됩니다. &lt;a href=&quot;csrf&quot;&gt;CSRF 문서&lt;/a&gt; 에서 CSRF 보호에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0256f47c3bc705a7b265538846fe479eee8a6eb5" translate="yes" xml:space="preserve">
          <source>Any HTML forms pointing to &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; routes that are defined in the &lt;code&gt;web&lt;/code&gt; routes file should include a CSRF token field. Otherwise, the request will be rejected. You can read more about CSRF protection in the &lt;a href=&quot;csrf&quot;&gt;CSRF documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;web&lt;/code&gt; 경로 파일에 정의 된 &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; 또는 &lt;code&gt;DELETE&lt;/code&gt; 경로를 가리키는 HTML 양식 에는 CSRF 토큰 필드가 포함되어야합니다. 그렇지 않으면 요청이 거부됩니다. CSRF 보호에 대한 자세한 내용은 &lt;a href=&quot;csrf&quot;&gt;CSRF 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f91d151a707c464ceb0d8b67bb1ea647958ccb5e" translate="yes" xml:space="preserve">
          <source>Any URL which contains commas must be encoded.</source>
          <target state="translated">쉼표가 포함 된 모든 URL은 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="83e90621f3bee3363ce275016e5951d97adfa85c" translate="yes" xml:space="preserve">
          <source>Any additional &lt;a href=&quot;#column-modifiers&quot;&gt;column modifiers&lt;/a&gt; must be called before &lt;code&gt;constrained&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;constrained&lt;/code&gt; 되기 전에 추가 &lt;a href=&quot;#column-modifiers&quot;&gt;열 수정자를&lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e244618403f8bcb95013d6afa2a253c62434ed7f" translate="yes" xml:space="preserve">
          <source>Any additional array parameters that do not correspond to the route's definition parameters will be added to the URL's query string:</source>
          <target state="translated">경로의 정의 매개 변수와 일치하지 않는 추가 배열 매개 변수는 URL의 쿼리 문자열에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="fab346a485bfa7234925ab49ddcdd1a68d31ecbe" translate="yes" xml:space="preserve">
          <source>Any arguments that can be passed to the &lt;code&gt;phpunit&lt;/code&gt; command may also be passed to the Artisan &lt;code&gt;test&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;phpunit&lt;/code&gt; 명령에 전달할 수있는 모든 인수 는 Artisan &lt;code&gt;test&lt;/code&gt; 명령 에도 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c7d4983b69ee167b2a20a1b1891f40bd22d4219" translate="yes" xml:space="preserve">
          <source>Any overlapping jobs will be released back to the queue. You may also specify the number of seconds that must elapse before the job will be attempted again:</source>
          <target state="translated">겹치는 작업은 대기열로 다시 해제됩니다. 작업을 다시 시도하기 전에 경과해야하는 시간 (초)을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e5a4da5622c1732fcff5c882e0cb9a696c690e6" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for where clauses.</source>
          <target state="translated">where 절에 대한 피벗 테이블 제한</target>
        </trans-unit>
        <trans-unit id="371767eae46f99529d994b5bf74c8b28bbcd823b" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for whereIn clauses.</source>
          <target state="translated">whereIn 절에 대한 피벗 테이블 제한</target>
        </trans-unit>
        <trans-unit id="5c1f9b7bc8b8b547b7da49ee30dc3c85a363a38d" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for whereNull clauses.</source>
          <target state="translated">whereNull 절에 대한 피벗 테이블 제한.</target>
        </trans-unit>
        <trans-unit id="724a8b03bb2781222b77d9811fb469269ff600c1" translate="yes" xml:space="preserve">
          <source>Any policies that are explicitly mapped in your &lt;code&gt;AuthServiceProvider&lt;/code&gt; will take precedence over any potentially auto-discovered policies.</source>
          <target state="translated">&lt;code&gt;AuthServiceProvider&lt;/code&gt; 에 명시 적으로 매핑 된 모든 정책은 잠재적으로 자동 검색된 정책보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="e6691fac29b0a653acfe9cde9c1902d0814d5452" translate="yes" xml:space="preserve">
          <source>Any variable in your &lt;code&gt;.env&lt;/code&gt; file can be overridden by external environment variables such as server-level or system-level environment variables.</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; 파일의 모든 변수는 서버 수준 또는 시스템 수준 환경 변수와 같은 외부 환경 변수로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79efa233f2b65028e906fd348abeea26b3b40b83" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that &lt;a href=&quot;csrf&quot;&gt;the CSRF protection&lt;/a&gt; middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">애플리케이션에서 HTML 양식을 정의 할 때마다 &lt;a href=&quot;csrf&quot;&gt;CSRF 보호&lt;/a&gt; 미들웨어가 요청을 유효성 검증 할 수 있도록 숨겨진 CSRF 토큰 필드를 양식에 포함시켜야합니다 . &lt;code&gt;@csrf&lt;/code&gt; Blade 지시문을 사용하여 토큰 필드를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3772f6a049306114e66d0d2dda4cbe29d1f21488" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that the CSRF protection middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">애플리케이션에서 HTML 양식을 정의 할 때마다 CSRF 보호 미들웨어가 요청을 유효성 검증 할 수 있도록 숨겨진 CSRF 토큰 필드를 양식에 포함시켜야합니다. &lt;code&gt;@csrf&lt;/code&gt; Blade 지시문을 사용하여 토큰 필드를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ce35eb0f688af35828ee52238e4567cd1ef417b" translate="yes" xml:space="preserve">
          <source>Anytime you define an HTML form in your application, you should include a hidden CSRF token field in the form so that &lt;a href=&quot;csrf&quot;&gt;the CSRF protection&lt;/a&gt; middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">애플리케이션에서 HTML 양식을 정의 할 때마다 양식에 숨겨진 CSRF 토큰 필드를 포함 &lt;a href=&quot;csrf&quot;&gt;하여 CSRF 보호&lt;/a&gt; 미들웨어가 요청을 검증 할 수 있도록해야 합니다 . &lt;code&gt;@csrf&lt;/code&gt; Blade 지시문을 사용하여 토큰 필드를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f10d5d7a4a50ab1804e6732223c2a7451efba10" translate="yes" xml:space="preserve">
          <source>Anytime you define an HTML form in your application, you should include a hidden CSRF token field in the form so that the CSRF protection middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="translated">애플리케이션에서 HTML 양식을 정의 할 때마다 양식에 숨겨진 CSRF 토큰 필드를 포함하여 CSRF 보호 미들웨어가 요청을 검증 할 수 있도록해야합니다. &lt;code&gt;@csrf&lt;/code&gt; Blade 지시문을 사용하여 토큰 필드를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="9ce24747cbde6c905c67b527a1e482c823523f4e" translate="yes" xml:space="preserve">
          <source>Apache (Optional)</source>
          <target state="translated">아파치 (선택 사항)</target>
        </trans-unit>
        <trans-unit id="40422147eea538f5de7828de88a5504f9541850d" translate="yes" xml:space="preserve">
          <source>ApcStore</source>
          <target state="translated">ApcStore</target>
        </trans-unit>
        <trans-unit id="70c0b0155b92cb680e9763013900085e50d7de1c" translate="yes" xml:space="preserve">
          <source>ApcStore (Cache)</source>
          <target state="translated">ApcStore (캐시)</target>
        </trans-unit>
        <trans-unit id="04d570b724585b5bc6b0b88e2c90123ee66a53f2" translate="yes" xml:space="preserve">
          <source>ApcStore::__construct()</source>
          <target state="translated">ApcStore::__construct()</target>
        </trans-unit>
        <trans-unit id="42c302976154a82e0ef8ac5b0251545a298deef8" translate="yes" xml:space="preserve">
          <source>ApcStore::decrement()</source>
          <target state="translated">ApcStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4ba9aa08b35de5c267914fb4ba159a7db3cea785" translate="yes" xml:space="preserve">
          <source>ApcStore::flush()</source>
          <target state="translated">ApcStore::flush()</target>
        </trans-unit>
        <trans-unit id="44907b563ad986beae44c56bfad44b0419f293c2" translate="yes" xml:space="preserve">
          <source>ApcStore::forever()</source>
          <target state="translated">ApcStore::forever()</target>
        </trans-unit>
        <trans-unit id="68a3c957dc357e2cba4c6e94ca8ce5f4b7e3c2bb" translate="yes" xml:space="preserve">
          <source>ApcStore::forget()</source>
          <target state="translated">ApcStore::forget()</target>
        </trans-unit>
        <trans-unit id="861349f7bc4bbf6a6ef8ca8349b5f7de0c1202ce" translate="yes" xml:space="preserve">
          <source>ApcStore::get()</source>
          <target state="translated">ApcStore::get()</target>
        </trans-unit>
        <trans-unit id="007adb1f5fa2a7d4067856967b0c74b936938642" translate="yes" xml:space="preserve">
          <source>ApcStore::getPrefix()</source>
          <target state="translated">ApcStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="9995bfec6680db0f0aa78b6087bd998673548f67" translate="yes" xml:space="preserve">
          <source>ApcStore::increment()</source>
          <target state="translated">ApcStore::increment()</target>
        </trans-unit>
        <trans-unit id="52d9dd15175c142e06f40c844cd3d373a1df12de" translate="yes" xml:space="preserve">
          <source>ApcStore::put()</source>
          <target state="translated">ApcStore::put()</target>
        </trans-unit>
        <trans-unit id="880069574b6d6ab83fd30d51e6a697664f7b85ff" translate="yes" xml:space="preserve">
          <source>ApcWrapper</source>
          <target state="translated">ApcWrapper</target>
        </trans-unit>
        <trans-unit id="ff246000b49290c8cf5b0de1cf5198d7b32d26f6" translate="yes" xml:space="preserve">
          <source>ApcWrapper (Cache)</source>
          <target state="translated">ApcWrapper (캐시)</target>
        </trans-unit>
        <trans-unit id="f44b6a46bdc3f00bd93f36a2f56973c2adaa148b" translate="yes" xml:space="preserve">
          <source>ApcWrapper::__construct()</source>
          <target state="translated">ApcWrapper::__construct()</target>
        </trans-unit>
        <trans-unit id="d1ce0063e740088b76e3dcb3b41d536f2ba21629" translate="yes" xml:space="preserve">
          <source>ApcWrapper::decrement()</source>
          <target state="translated">ApcWrapper::decrement()</target>
        </trans-unit>
        <trans-unit id="a7d63bd480d079322b2930a1a7112cda0ede2002" translate="yes" xml:space="preserve">
          <source>ApcWrapper::delete()</source>
          <target state="translated">ApcWrapper::delete()</target>
        </trans-unit>
        <trans-unit id="2f3df5be0f57088a4368d6c5fc8fdf36aee4d0dd" translate="yes" xml:space="preserve">
          <source>ApcWrapper::flush()</source>
          <target state="translated">ApcWrapper::flush()</target>
        </trans-unit>
        <trans-unit id="56a39008bbfec6eeac3959384e1bc2b6d4aec8e4" translate="yes" xml:space="preserve">
          <source>ApcWrapper::get()</source>
          <target state="translated">ApcWrapper::get()</target>
        </trans-unit>
        <trans-unit id="cd812129ad062d8b0e5134f11b72b494d3478c85" translate="yes" xml:space="preserve">
          <source>ApcWrapper::increment()</source>
          <target state="translated">ApcWrapper::increment()</target>
        </trans-unit>
        <trans-unit id="9c3e1ad5d09d2809a0112cb5c59e3c7ac2f05674" translate="yes" xml:space="preserve">
          <source>ApcWrapper::put()</source>
          <target state="translated">ApcWrapper::put()</target>
        </trans-unit>
        <trans-unit id="fc4a695f02a8a53a129dcb9ace91e91ee1e7feb9" translate="yes" xml:space="preserve">
          <source>App</source>
          <target state="translated">App</target>
        </trans-unit>
        <trans-unit id="9b32e15377d7979708f79e1b7c9a50e3c5aac344" translate="yes" xml:space="preserve">
          <source>App (Support\Facades)</source>
          <target state="translated">앱 (지원 \ Facades)</target>
        </trans-unit>
        <trans-unit id="a7e4d2eba68a299a68fa04335471d6994e25a04b" translate="yes" xml:space="preserve">
          <source>App::getFacadeAccessor()</source>
          <target state="translated">App::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a8d92f33064f44b976d2ad0e7e46d44b00f180a4" translate="yes" xml:space="preserve">
          <source>AppNameCommand</source>
          <target state="translated">AppNameCommand</target>
        </trans-unit>
        <trans-unit id="505c2175d14bc3e6fc03d8150224a1e7b12cf5f3" translate="yes" xml:space="preserve">
          <source>AppNameCommand (Foundation)</source>
          <target state="translated">AppNameCommand (기초)</target>
        </trans-unit>
        <trans-unit id="b538b0429b9a87e6b7c272e781de70b7bd7b0015" translate="yes" xml:space="preserve">
          <source>AppNameCommand::__construct()</source>
          <target state="translated">AppNameCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="b6b427c9d6a2d5a3c2f2b9afeea3f41cf50bb2b6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getArguments()</source>
          <target state="translated">AppNameCommand::getArguments()</target>
        </trans-unit>
        <trans-unit id="cf7be8d01ec1d191837128c0119ae613f8b699ba" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getBootstrapPath()</source>
          <target state="translated">AppNameCommand::getBootstrapPath()</target>
        </trans-unit>
        <trans-unit id="6c4f36a0913c378f4fd477a91845374d8430843a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getComposerPath()</source>
          <target state="translated">AppNameCommand::getComposerPath()</target>
        </trans-unit>
        <trans-unit id="b028ece2bf2bbc75788ad3cbd23e814c683891c4" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getConfigPath()</source>
          <target state="translated">AppNameCommand::getConfigPath()</target>
        </trans-unit>
        <trans-unit id="6a997417ce309e45896db746e2f9fb4f8bb3b497" translate="yes" xml:space="preserve">
          <source>AppNameCommand::handle()</source>
          <target state="translated">AppNameCommand::handle()</target>
        </trans-unit>
        <trans-unit id="ef6932631acaf225b24b5ef06ab90f7cf41069a6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceIn()</source>
          <target state="translated">AppNameCommand::replaceIn()</target>
        </trans-unit>
        <trans-unit id="c09fcfb250e568044b111bc1e90a0fe64a00109b" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceNamespace()</source>
          <target state="translated">AppNameCommand::replaceNamespace()</target>
        </trans-unit>
        <trans-unit id="be6026a632b2bd094789daca349c87a0dfbc744a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setAppConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="11b889b08581a7d6963e507d77833fff23ec7ddb" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppDirectoryNamespace()</source>
          <target state="translated">AppNameCommand::setAppDirectoryNamespace()</target>
        </trans-unit>
        <trans-unit id="ff0a6ddcbf466141bca3dfe2df8dd0c7ba48f491" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAuthConfigNamespace()</source>
          <target state="translated">AppNameCommand::setAuthConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="d905a309f14ac295628e0ff949ddb6642cd956b7" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setBootstrapNamespaces()</source>
          <target state="translated">AppNameCommand::setBootstrapNamespaces()</target>
        </trans-unit>
        <trans-unit id="7d8333a2a85745d8e902b41844f01f384808004f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setComposerNamespace()</source>
          <target state="translated">AppNameCommand::setComposerNamespace()</target>
        </trans-unit>
        <trans-unit id="e8fd4cfdd1d70b1ba60c1635d5c461d8bf0a6535" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="cd9d5c2fe982adc64701da0b65c4207d71e4a507" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setDatabaseFactoryNamespaces()</source>
          <target state="translated">AppNameCommand::setDatabaseFactoryNamespaces()</target>
        </trans-unit>
        <trans-unit id="dd36badaeb4736602f9248bf648c57f28ceb433f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setServicesConfigNamespace()</source>
          <target state="translated">AppNameCommand::setServicesConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="3b0206fadc810faffdedd37edebfcd465d780ae4" translate="yes" xml:space="preserve">
          <source>Append an attribute across the entire collection.</source>
          <target state="translated">전체 컬렉션에 속성을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="e838e1ce88b687a540ac6fbefee8c29c79ca5dea" translate="yes" xml:space="preserve">
          <source>Append attributes to query when building a query.</source>
          <target state="translated">쿼리를 작성할 때 쿼리에 속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="2ec00999fd029965c856b35d10fffc8041cf3c06" translate="yes" xml:space="preserve">
          <source>Append content to a given push section.</source>
          <target state="translated">지정된 푸시 섹션에 컨텐츠를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="df3db6a3139d0ec379007ab8b2022f6584d80e9f" translate="yes" xml:space="preserve">
          <source>Append content to a given section.</source>
          <target state="translated">주어진 섹션에 컨텐츠를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="304cfb2668cf2ad2eea4c3a890bdf1b89dda6551" translate="yes" xml:space="preserve">
          <source>Append the character set specifications to a command.</source>
          <target state="translated">문자 세트 스펙을 명령에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0103e26e4825bb9a0e78fdb1450cd809127d740a" translate="yes" xml:space="preserve">
          <source>Append the engine specifications to a command.</source>
          <target state="translated">엔진 사양을 명령에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="01dcf8ab5c421f3a48c60967ca90a07b690447b9" translate="yes" xml:space="preserve">
          <source>Append the file path to the compiled string.</source>
          <target state="translated">컴파일 된 문자열에 파일 경로를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="17691cac04cd6c14eaf20bf3e32807f7ac52ec86" translate="yes" xml:space="preserve">
          <source>Append the given middleware to the given middleware group.</source>
          <target state="translated">주어진 미들웨어를 주어진 미들웨어 그룹에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a1648acce46e9181148c87e5594d3dedf73337fa" translate="yes" xml:space="preserve">
          <source>Append the given middleware to the middleware priority list.</source>
          <target state="translated">주어진 미들웨어를 미들웨어 우선 순위 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ed0012ba578236df39ebe8fd9f736c69043c5856" translate="yes" xml:space="preserve">
          <source>Append the given values to the string.</source>
          <target state="translated">주어진 값을 문자열에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f79885de2151a54a0f3ce2f0da2cdab9a07acb57" translate="yes" xml:space="preserve">
          <source>Append the migration data to the schema dump.</source>
          <target state="translated">마이그레이션 데이터를 스키마 덤프에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="a1c545fc7471b8d582e1fe2975e25dca81758250" translate="yes" xml:space="preserve">
          <source>Append the output of the command to a given location.</source>
          <target state="translated">주어진 위치에 명령의 출력을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5b457acbd6af52727ecf328bf347913a8b3a5c32" translate="yes" xml:space="preserve">
          <source>Append to a file.</source>
          <target state="translated">파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="60a54c2868d455f69a0fcdafbdf011d6674bb704" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue</source>
          <target state="translated">AppendableAttributeValue</target>
        </trans-unit>
        <trans-unit id="5d0cd84837187a990ecc3ec0f8d01bf01699ab1c" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue (View)</source>
          <target state="translated">AppendableAttributeValue (보기)</target>
        </trans-unit>
        <trans-unit id="a7f58520428a70de4ee614950861f8ac12963ac4" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue::__construct()</source>
          <target state="translated">AppendableAttributeValue::__construct()</target>
        </trans-unit>
        <trans-unit id="37675816661d34f871ef738cbac7e990b49f2d97" translate="yes" xml:space="preserve">
          <source>AppendableAttributeValue::__toString()</source>
          <target state="translated">AppendableAttributeValue::__toString()</target>
        </trans-unit>
        <trans-unit id="4cc64ec59878ea659be3149b7f768601efb91dc6" translate="yes" xml:space="preserve">
          <source>Appending At Run Time</source>
          <target state="translated">런타임에 추가</target>
        </trans-unit>
        <trans-unit id="bf3084410c8a83489658bdef410c61d45a8058e4" translate="yes" xml:space="preserve">
          <source>Appending To Pagination Links</source>
          <target state="translated">페이지 매김 링크에 추가</target>
        </trans-unit>
        <trans-unit id="2f13f9a56364da30970ae70da450518e3902fe67" translate="yes" xml:space="preserve">
          <source>Appending Values To JSON</source>
          <target state="translated">JSON에 값 추가</target>
        </trans-unit>
        <trans-unit id="c459dfc68b4d3263e82b29c3e9abb8e00cbc6f2a" translate="yes" xml:space="preserve">
          <source>Applicable to Redis jobs which store attempts in their payload.</source>
          <target state="translated">페이로드에 시도를 저장하는 Redis 작업에 적용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="27960a8519bc91554c2ff9b2afcbb2e866f92958" translate="yes" xml:space="preserve">
          <source>Application (Console)</source>
          <target state="translated">응용 프로그램 (콘솔)</target>
        </trans-unit>
        <trans-unit id="a0255b2098cf007fa6f05ed7f787db5aa80eeaaa" translate="yes" xml:space="preserve">
          <source>Application (Contracts)</source>
          <target state="translated">신청 (계약)</target>
        </trans-unit>
        <trans-unit id="4cf8b2f684ab8e87fe57e2336417764fe2d7bccb" translate="yes" xml:space="preserve">
          <source>Application (Foundation)</source>
          <target state="translated">신청 (기초)</target>
        </trans-unit>
        <trans-unit id="e74f22f5f56240fa5153cc370746f4c4bb4e0caa" translate="yes" xml:space="preserve">
          <source>Application Key</source>
          <target state="translated">응용 프로그램 키</target>
        </trans-unit>
        <trans-unit id="095681f98081ca0c110cf106b634943d02d2ab25" translate="yes" xml:space="preserve">
          <source>Application::__construct()</source>
          <target state="translated">Application::__construct()</target>
        </trans-unit>
        <trans-unit id="1d329038d1a22aed930d71f625ea103235a98195" translate="yes" xml:space="preserve">
          <source>Application::abort()</source>
          <target state="translated">Application::abort()</target>
        </trans-unit>
        <trans-unit id="d0142dd198300930e52148f9c9140fecbe47c910" translate="yes" xml:space="preserve">
          <source>Application::add()</source>
          <target state="translated">Application::add()</target>
        </trans-unit>
        <trans-unit id="703308b74f66efe96a44793591ab57a12ef70550" translate="yes" xml:space="preserve">
          <source>Application::addAbsoluteCachePathPrefix()</source>
          <target state="translated">Application::addAbsoluteCachePathPrefix()</target>
        </trans-unit>
        <trans-unit id="2c8f8dc75d37159ce3a6398daa9455381b40b2da" translate="yes" xml:space="preserve">
          <source>Application::addDeferredServices()</source>
          <target state="translated">Application::addDeferredServices()</target>
        </trans-unit>
        <trans-unit id="e249c705d06ccbb290da674061d3221c9ada2238" translate="yes" xml:space="preserve">
          <source>Application::addToParent()</source>
          <target state="translated">Application::addToParent()</target>
        </trans-unit>
        <trans-unit id="1d8c32e31de67dc02c2aff69b642e2f3394c70d8" translate="yes" xml:space="preserve">
          <source>Application::afterBootstrapping()</source>
          <target state="translated">Application::afterBootstrapping()</target>
        </trans-unit>
        <trans-unit id="be0c3f6bb6b1bfcf188f82f9471a17e02d36ee1c" translate="yes" xml:space="preserve">
          <source>Application::afterLoadingEnvironment()</source>
          <target state="translated">Application::afterLoadingEnvironment()</target>
        </trans-unit>
        <trans-unit id="9b4176e5380beae0b1146f91b216ccd3840e5bd4" translate="yes" xml:space="preserve">
          <source>Application::artisanBinary()</source>
          <target state="translated">Application::artisanBinary()</target>
        </trans-unit>
        <trans-unit id="fe92d70413f74b72d96cd1db765cee0aa341d127" translate="yes" xml:space="preserve">
          <source>Application::basePath()</source>
          <target state="translated">Application::basePath()</target>
        </trans-unit>
        <trans-unit id="eb970cda54a2817fa709838b1731d99062dc8d34" translate="yes" xml:space="preserve">
          <source>Application::beforeBootstrapping()</source>
          <target state="translated">Application::beforeBootstrapping()</target>
        </trans-unit>
        <trans-unit id="73dab88e36a72abac78a447b96778478a39c9665" translate="yes" xml:space="preserve">
          <source>Application::bindPathsInContainer()</source>
          <target state="translated">Application::bindPathsInContainer()</target>
        </trans-unit>
        <trans-unit id="e4ece6a8fba24f0a81f6ccc374f498921f72b002" translate="yes" xml:space="preserve">
          <source>Application::boot()</source>
          <target state="translated">Application::boot()</target>
        </trans-unit>
        <trans-unit id="633571874c1967b54a099103ad4fd15ff9ea17bb" translate="yes" xml:space="preserve">
          <source>Application::bootProvider()</source>
          <target state="translated">Application::bootProvider()</target>
        </trans-unit>
        <trans-unit id="88401aa259ed833720455f69ae8d975376ae9ff0" translate="yes" xml:space="preserve">
          <source>Application::booted()</source>
          <target state="translated">Application::booted()</target>
        </trans-unit>
        <trans-unit id="46755768e2979f548ba83e1bf3a681b6c7edc4e8" translate="yes" xml:space="preserve">
          <source>Application::booting()</source>
          <target state="translated">Application::booting()</target>
        </trans-unit>
        <trans-unit id="6316baed99008f21600f5bc26445e5a809c57408" translate="yes" xml:space="preserve">
          <source>Application::bootstrap()</source>
          <target state="translated">Application::bootstrap()</target>
        </trans-unit>
        <trans-unit id="594d3003617b0a20fea89e34c93ad53a658f8bc6" translate="yes" xml:space="preserve">
          <source>Application::bootstrapPath()</source>
          <target state="translated">Application::bootstrapPath()</target>
        </trans-unit>
        <trans-unit id="51b29301d7883189cbf7c5c4a9303b9c17463e5b" translate="yes" xml:space="preserve">
          <source>Application::bootstrapWith()</source>
          <target state="translated">Application::bootstrapWith()</target>
        </trans-unit>
        <trans-unit id="c60924d01ae60fca6a08aab7c589a7240fe4efb9" translate="yes" xml:space="preserve">
          <source>Application::bound()</source>
          <target state="translated">Application::bound()</target>
        </trans-unit>
        <trans-unit id="dd65f41cc10fa1399442a2af72cefc9296686d0d" translate="yes" xml:space="preserve">
          <source>Application::call()</source>
          <target state="translated">Application::call()</target>
        </trans-unit>
        <trans-unit id="35d8274161ebe91b88c2519d6002a9786acd9d79" translate="yes" xml:space="preserve">
          <source>Application::configPath()</source>
          <target state="translated">Application::configPath()</target>
        </trans-unit>
        <trans-unit id="6c2c949d0e5d0a0ad6f798928720ec6bcc58f099" translate="yes" xml:space="preserve">
          <source>Application::configurationIsCached()</source>
          <target state="translated">Application::configurationIsCached()</target>
        </trans-unit>
        <trans-unit id="2e0349edd86ca6eedcb5a3e1b27a8e32d1da387d" translate="yes" xml:space="preserve">
          <source>Application::databasePath()</source>
          <target state="translated">Application::databasePath()</target>
        </trans-unit>
        <trans-unit id="07bb6284eac9b08952e68e08eaabf55d1d36a7fd" translate="yes" xml:space="preserve">
          <source>Application::detectEnvironment()</source>
          <target state="translated">Application::detectEnvironment()</target>
        </trans-unit>
        <trans-unit id="6c25ca9511522a470db2ac6efc99429cb3d4729f" translate="yes" xml:space="preserve">
          <source>Application::environment()</source>
          <target state="translated">Application::environment()</target>
        </trans-unit>
        <trans-unit id="d27fc30f292f95f86821fecc2473e9cf278162ec" translate="yes" xml:space="preserve">
          <source>Application::environmentFile()</source>
          <target state="translated">Application::environmentFile()</target>
        </trans-unit>
        <trans-unit id="e39fb0d46b95bd7528d120e5f4dcfe57a9d76794" translate="yes" xml:space="preserve">
          <source>Application::environmentFilePath()</source>
          <target state="translated">Application::environmentFilePath()</target>
        </trans-unit>
        <trans-unit id="d7955a6d6114219ba3158a96faf890dd804a2c29" translate="yes" xml:space="preserve">
          <source>Application::environmentPath()</source>
          <target state="translated">Application::environmentPath()</target>
        </trans-unit>
        <trans-unit id="729260d22af787d9d2114ae53ea443ea536e5bd5" translate="yes" xml:space="preserve">
          <source>Application::eventsAreCached()</source>
          <target state="translated">Application::eventsAreCached()</target>
        </trans-unit>
        <trans-unit id="c1f5e77de667143bd8f38ea06d6c4869b883c489" translate="yes" xml:space="preserve">
          <source>Application::fireAppCallbacks()</source>
          <target state="translated">Application::fireAppCallbacks()</target>
        </trans-unit>
        <trans-unit id="77706337f711cbfb7e0bfc135c7f410b084c4932" translate="yes" xml:space="preserve">
          <source>Application::flush()</source>
          <target state="translated">Application::flush()</target>
        </trans-unit>
        <trans-unit id="b876eeea243cfebd466cc40c2880d6097fc417c1" translate="yes" xml:space="preserve">
          <source>Application::forgetBootstrappers()</source>
          <target state="translated">Application::forgetBootstrappers()</target>
        </trans-unit>
        <trans-unit id="a81fd3044bfd0deed0b13cfbe5e790607ce5bda2" translate="yes" xml:space="preserve">
          <source>Application::formatCommandString()</source>
          <target state="translated">Application::formatCommandString()</target>
        </trans-unit>
        <trans-unit id="34fddd5a5bd5629a667aa81fd8a7496cfafd3081" translate="yes" xml:space="preserve">
          <source>Application::getCachedConfigPath()</source>
          <target state="translated">Application::getCachedConfigPath()</target>
        </trans-unit>
        <trans-unit id="9939aa39260ab3d5550e75c3a014732b1b90e78b" translate="yes" xml:space="preserve">
          <source>Application::getCachedEventsPath()</source>
          <target state="translated">Application::getCachedEventsPath()</target>
        </trans-unit>
        <trans-unit id="ab9609c408c958ba20c1bec05a2eff714390a340" translate="yes" xml:space="preserve">
          <source>Application::getCachedPackagesPath()</source>
          <target state="translated">Application::getCachedPackagesPath()</target>
        </trans-unit>
        <trans-unit id="5b93fe34fa700ba3a61d907839f12e932369fd1e" translate="yes" xml:space="preserve">
          <source>Application::getCachedRoutesPath()</source>
          <target state="translated">Application::getCachedRoutesPath()</target>
        </trans-unit>
        <trans-unit id="32eb4973580d045676d6dc83eaa029861aaffe16" translate="yes" xml:space="preserve">
          <source>Application::getCachedServicesPath()</source>
          <target state="translated">Application::getCachedServicesPath()</target>
        </trans-unit>
        <trans-unit id="bf9f4cb090ce4f69537a283c27d73273fa590164" translate="yes" xml:space="preserve">
          <source>Application::getDefaultInputDefinition()</source>
          <target state="translated">Application::getDefaultInputDefinition()</target>
        </trans-unit>
        <trans-unit id="0b09ea0bf5f865c34104d685b41d1d1e34813efd" translate="yes" xml:space="preserve">
          <source>Application::getDeferredServices()</source>
          <target state="translated">Application::getDeferredServices()</target>
        </trans-unit>
        <trans-unit id="0825cb5b04f3297cfd346b021a9214b0a3f8022e" translate="yes" xml:space="preserve">
          <source>Application::getEnvironmentOption()</source>
          <target state="translated">Application::getEnvironmentOption()</target>
        </trans-unit>
        <trans-unit id="d9b995347cefbeb2a48260e367b34c2b9fd1a19d" translate="yes" xml:space="preserve">
          <source>Application::getFallbackLocale()</source>
          <target state="translated">Application::getFallbackLocale()</target>
        </trans-unit>
        <trans-unit id="a95297f28c23189997b6fd07b21d9af6c38d9cb3" translate="yes" xml:space="preserve">
          <source>Application::getLaravel()</source>
          <target state="translated">Application::getLaravel()</target>
        </trans-unit>
        <trans-unit id="a1b529fc875e73590599bd9a1c31a5eb5534ad2d" translate="yes" xml:space="preserve">
          <source>Application::getLoadedProviders()</source>
          <target state="translated">Application::getLoadedProviders()</target>
        </trans-unit>
        <trans-unit id="b6a2929afc83a99cf5c422784d8b8be549cd3904" translate="yes" xml:space="preserve">
          <source>Application::getLocale()</source>
          <target state="translated">Application::getLocale()</target>
        </trans-unit>
        <trans-unit id="1e3491ea726d5ffc26dc6d9795985985efc0765a" translate="yes" xml:space="preserve">
          <source>Application::getNamespace()</source>
          <target state="translated">Application::getNamespace()</target>
        </trans-unit>
        <trans-unit id="219e102dd18abc71d12bdfa7c960fcbf4bcca2c5" translate="yes" xml:space="preserve">
          <source>Application::getProvider()</source>
          <target state="translated">Application::getProvider()</target>
        </trans-unit>
        <trans-unit id="c241699ad44d21302612c66c181a5cfe0efe2e8b" translate="yes" xml:space="preserve">
          <source>Application::getProviders()</source>
          <target state="translated">Application::getProviders()</target>
        </trans-unit>
        <trans-unit id="f39d08f8ae9cfae7622815922c82694df6f47ed6" translate="yes" xml:space="preserve">
          <source>Application::handle()</source>
          <target state="translated">Application::handle()</target>
        </trans-unit>
        <trans-unit id="d47cc17a75c48e36c8de2f4f63556c00b053f89f" translate="yes" xml:space="preserve">
          <source>Application::hasBeenBootstrapped()</source>
          <target state="translated">Application::hasBeenBootstrapped()</target>
        </trans-unit>
        <trans-unit id="e44fc49c97af232ce9b482ad1e2033a82d05a1a6" translate="yes" xml:space="preserve">
          <source>Application::isBooted()</source>
          <target state="translated">Application::isBooted()</target>
        </trans-unit>
        <trans-unit id="4b39151dc9de46999b9dd8bfa6313a862fde767e" translate="yes" xml:space="preserve">
          <source>Application::isDeferredService()</source>
          <target state="translated">Application::isDeferredService()</target>
        </trans-unit>
        <trans-unit id="75521a381036e5ae3e53509c7c3259fc81abcb84" translate="yes" xml:space="preserve">
          <source>Application::isDownForMaintenance()</source>
          <target state="translated">Application::isDownForMaintenance()</target>
        </trans-unit>
        <trans-unit id="6579454299d3edcdb0f23c80bb5c3346c06771c7" translate="yes" xml:space="preserve">
          <source>Application::isLocal()</source>
          <target state="translated">Application::isLocal()</target>
        </trans-unit>
        <trans-unit id="cb4c79f797ce297ad9b446b1076c1a6e76a3e352" translate="yes" xml:space="preserve">
          <source>Application::isLocale()</source>
          <target state="translated">Application::isLocale()</target>
        </trans-unit>
        <trans-unit id="28f3cbb6e415f0e017663617d5d701449087f882" translate="yes" xml:space="preserve">
          <source>Application::isProduction()</source>
          <target state="translated">Application::isProduction()</target>
        </trans-unit>
        <trans-unit id="126f6812f4ca5f79d0ad20406a35dfd100ee04cf" translate="yes" xml:space="preserve">
          <source>Application::langPath()</source>
          <target state="translated">Application::langPath()</target>
        </trans-unit>
        <trans-unit id="1f03cebe6aaefee3979904b54ad88aa2eec8a995" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProvider()</source>
          <target state="translated">Application::loadDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="fd34a8b44aa882647200a35c61e8754d204aea12" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProviderIfNeeded()</source>
          <target state="translated">Application::loadDeferredProviderIfNeeded()</target>
        </trans-unit>
        <trans-unit id="f34fd3a71595a893a3d79f9e7fd50c8ba1ca3b53" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProviders()</source>
          <target state="translated">Application::loadDeferredProviders()</target>
        </trans-unit>
        <trans-unit id="c85b4415a4f2923f988e35f231a2316b5c68522d" translate="yes" xml:space="preserve">
          <source>Application::loadEnvironmentFrom()</source>
          <target state="translated">Application::loadEnvironmentFrom()</target>
        </trans-unit>
        <trans-unit id="a94108b1b7d7e917be52baff153ec4e625b9c37c" translate="yes" xml:space="preserve">
          <source>Application::make()</source>
          <target state="translated">Application::make()</target>
        </trans-unit>
        <trans-unit id="4871859966da9836e82626e451d80a3b883cf6da" translate="yes" xml:space="preserve">
          <source>Application::markAsRegistered()</source>
          <target state="translated">Application::markAsRegistered()</target>
        </trans-unit>
        <trans-unit id="b65fab956cb78228aef7b9c67cc7aa7d8ff05079" translate="yes" xml:space="preserve">
          <source>Application::normalizeCachePath()</source>
          <target state="translated">Application::normalizeCachePath()</target>
        </trans-unit>
        <trans-unit id="d8c287056b7fe54a7922f35a7f82e5c7ced1f59c" translate="yes" xml:space="preserve">
          <source>Application::output()</source>
          <target state="translated">Application::output()</target>
        </trans-unit>
        <trans-unit id="23b2320856316fe2fc7415ffa8702fe52388c47a" translate="yes" xml:space="preserve">
          <source>Application::parseCommand()</source>
          <target state="translated">Application::parseCommand()</target>
        </trans-unit>
        <trans-unit id="5e302c343e495daf1648b913b2776d2340de4fbd" translate="yes" xml:space="preserve">
          <source>Application::path()</source>
          <target state="translated">Application::path()</target>
        </trans-unit>
        <trans-unit id="460bf9b5e80f9f32f42b1690c825e2df4fc0e7bc" translate="yes" xml:space="preserve">
          <source>Application::phpBinary()</source>
          <target state="translated">Application::phpBinary()</target>
        </trans-unit>
        <trans-unit id="0d54de335f463c464b34582497f34676a942a296" translate="yes" xml:space="preserve">
          <source>Application::provideFacades()</source>
          <target state="translated">Application::provideFacades()</target>
        </trans-unit>
        <trans-unit id="09b69ec27df71947298762a9a9bf4d3d51de4c18" translate="yes" xml:space="preserve">
          <source>Application::providerIsLoaded()</source>
          <target state="translated">Application::providerIsLoaded()</target>
        </trans-unit>
        <trans-unit id="46b7487742e8580b1cc29cee54afadd5c156fb73" translate="yes" xml:space="preserve">
          <source>Application::publicPath()</source>
          <target state="translated">Application::publicPath()</target>
        </trans-unit>
        <trans-unit id="43cd13c252829de9f23709311277d4742b1bbfe7" translate="yes" xml:space="preserve">
          <source>Application::register()</source>
          <target state="translated">Application::register()</target>
        </trans-unit>
        <trans-unit id="e6dd38f182ac9c937048919fc4d898aca201ce6c" translate="yes" xml:space="preserve">
          <source>Application::registerBaseBindings()</source>
          <target state="translated">Application::registerBaseBindings()</target>
        </trans-unit>
        <trans-unit id="e5cc60f619ccf56ea8c7b9a03c53a9b99307a143" translate="yes" xml:space="preserve">
          <source>Application::registerBaseServiceProviders()</source>
          <target state="translated">Application::registerBaseServiceProviders()</target>
        </trans-unit>
        <trans-unit id="b8f4217b602d90e32f18329775bf0b7e24a9722d" translate="yes" xml:space="preserve">
          <source>Application::registerConfiguredProviders()</source>
          <target state="translated">Application::registerConfiguredProviders()</target>
        </trans-unit>
        <trans-unit id="41900c19d1708629889e3199b08aefe67fc53680" translate="yes" xml:space="preserve">
          <source>Application::registerCoreContainerAliases()</source>
          <target state="translated">Application::registerCoreContainerAliases()</target>
        </trans-unit>
        <trans-unit id="67556b8d69315e1df9fa60412e0e0c876197220a" translate="yes" xml:space="preserve">
          <source>Application::registerDeferredProvider()</source>
          <target state="translated">Application::registerDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="1305355f22be05293c92046282b16844f7a22f43" translate="yes" xml:space="preserve">
          <source>Application::resolve()</source>
          <target state="translated">Application::resolve()</target>
        </trans-unit>
        <trans-unit id="2bcfe044fd1a84dddd7aecb8c245f7616ee035fb" translate="yes" xml:space="preserve">
          <source>Application::resolveCommands()</source>
          <target state="translated">Application::resolveCommands()</target>
        </trans-unit>
        <trans-unit id="7b7d8311c5aa4902dbfc84eeefd57cd68d8443c2" translate="yes" xml:space="preserve">
          <source>Application::resolveProvider()</source>
          <target state="translated">Application::resolveProvider()</target>
        </trans-unit>
        <trans-unit id="652a7676c5a3d37cdeca67d33c0c943d21fca241" translate="yes" xml:space="preserve">
          <source>Application::resourcePath()</source>
          <target state="translated">Application::resourcePath()</target>
        </trans-unit>
        <trans-unit id="b69b298fa90f778952dbcf19f3b9881e636b503f" translate="yes" xml:space="preserve">
          <source>Application::routesAreCached()</source>
          <target state="translated">Application::routesAreCached()</target>
        </trans-unit>
        <trans-unit id="c800fe80f1e1cdf33e21129cde8ab1fee4e13917" translate="yes" xml:space="preserve">
          <source>Application::run()</source>
          <target state="translated">Application::run()</target>
        </trans-unit>
        <trans-unit id="8dced0bcf40b3a237d0a6c9ee75bec583e5a3938" translate="yes" xml:space="preserve">
          <source>Application::runningInConsole()</source>
          <target state="translated">Application::runningInConsole()</target>
        </trans-unit>
        <trans-unit id="5d5c8ae3112497af0bc67f2b20ad68732e6c5b58" translate="yes" xml:space="preserve">
          <source>Application::runningUnitTests()</source>
          <target state="translated">Application::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="c76241a924a1c5ba23e4d9e24dd4dc92872742cd" translate="yes" xml:space="preserve">
          <source>Application::setBasePath()</source>
          <target state="translated">Application::setBasePath()</target>
        </trans-unit>
        <trans-unit id="b3581d4818d7722bc922e5306c828562582f737b" translate="yes" xml:space="preserve">
          <source>Application::setDeferredServices()</source>
          <target state="translated">Application::setDeferredServices()</target>
        </trans-unit>
        <trans-unit id="b02c4b99932c01ccb9c293181579c6c674ac8f18" translate="yes" xml:space="preserve">
          <source>Application::setFallbackLocale()</source>
          <target state="translated">Application::setFallbackLocale()</target>
        </trans-unit>
        <trans-unit id="603adc5db1468affe121fe27bb0288fa31804dea" translate="yes" xml:space="preserve">
          <source>Application::setLocale()</source>
          <target state="translated">Application::setLocale()</target>
        </trans-unit>
        <trans-unit id="15bde55ee6cd64d41e89f0caf3f0cd67256b5ed2" translate="yes" xml:space="preserve">
          <source>Application::shouldSkipMiddleware()</source>
          <target state="translated">Application::shouldSkipMiddleware()</target>
        </trans-unit>
        <trans-unit id="eec1e7d06265cb406ce8e118d297f0cee0f35e68" translate="yes" xml:space="preserve">
          <source>Application::starting()</source>
          <target state="translated">Application::starting()</target>
        </trans-unit>
        <trans-unit id="367686c420e12a6b51a485f9e00761b5e9b95503" translate="yes" xml:space="preserve">
          <source>Application::storagePath()</source>
          <target state="translated">Application::storagePath()</target>
        </trans-unit>
        <trans-unit id="731a8a20317fc0f1963624cb47c5611421746c43" translate="yes" xml:space="preserve">
          <source>Application::terminate()</source>
          <target state="translated">Application::terminate()</target>
        </trans-unit>
        <trans-unit id="ed975ecdd617948742c238616e7e7ac0052ed4b4" translate="yes" xml:space="preserve">
          <source>Application::terminating()</source>
          <target state="translated">Application::terminating()</target>
        </trans-unit>
        <trans-unit id="b67bdf361db44115b068890c133e6a12d12418ab" translate="yes" xml:space="preserve">
          <source>Application::useAppPath()</source>
          <target state="translated">Application::useAppPath()</target>
        </trans-unit>
        <trans-unit id="246925db8b5a6ee1837ae49646e6a0581024a7a7" translate="yes" xml:space="preserve">
          <source>Application::useDatabasePath()</source>
          <target state="translated">Application::useDatabasePath()</target>
        </trans-unit>
        <trans-unit id="9c2239b5aa5acad84c84b0dadcfbf8ed9695ad83" translate="yes" xml:space="preserve">
          <source>Application::useEnvironmentPath()</source>
          <target state="translated">Application::useEnvironmentPath()</target>
        </trans-unit>
        <trans-unit id="5d991b913aefbcef28ba25e2e8e19b9053abd314" translate="yes" xml:space="preserve">
          <source>Application::useStoragePath()</source>
          <target state="translated">Application::useStoragePath()</target>
        </trans-unit>
        <trans-unit id="779ee6640809f8daa2c85ebddac5831b1524ec04" translate="yes" xml:space="preserve">
          <source>Application::version()</source>
          <target state="translated">Application::version()</target>
        </trans-unit>
        <trans-unit id="5c2f160e765f8859fc7436e9f2f197e0c9ea6937" translate="yes" xml:space="preserve">
          <source>Applied global scopes.</source>
          <target state="translated">적용되는 글로벌 범위.</target>
        </trans-unit>
        <trans-unit id="7c0a02bea0467cc58e0fc5d6fdafebd31d25438c" translate="yes" xml:space="preserve">
          <source>Apply query-time casts to the model instance.</source>
          <target state="translated">모델 인스턴스에 쿼리 시간 캐스트를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="1232f2ee595fdbeec4067f088e1412149a08fe27" translate="yes" xml:space="preserve">
          <source>Apply the active states to the model definition array.</source>
          <target state="translated">활성 상태를 모델 정의 배열에 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="ee0334854b3c5607d19698e7816bea2b7ec7a942" translate="yes" xml:space="preserve">
          <source>Apply the callback if the collection is empty.</source>
          <target state="translated">컬렉션이 비어있는 경우 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="4744643f1fd0db3cfa93e08e1097675ed14aee7f" translate="yes" xml:space="preserve">
          <source>Apply the callback if the collection is not empty.</source>
          <target state="translated">컬렉션이 비어 있지 않은 경우 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="312d8f9bb0dc3186c7d9171a8650cacfd7198a79" translate="yes" xml:space="preserve">
          <source>Apply the callback if the request contains a non-empty value for the given input item key.</source>
          <target state="translated">요청에 지정된 입력 항목 키에 대한 비어 있지 않은 값이 포함 된 경우 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="28cd400e99102fa2d3953420f233e8f6b2f7880c" translate="yes" xml:space="preserve">
          <source>Apply the callback if the request contains the given input item key.</source>
          <target state="translated">요청에 지정된 입력 항목 키가 포함 된 경우 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="0bd15e4f43d62944d12b8095e37bcb6c18629017" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is falsy.</source>
          <target state="translated">값이 잘못된 경우 콜백을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="3711863be678d8ebc33b3480dca9c3120a9cf84f" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is truthy.</source>
          <target state="translated">값이 정확한 경우 콜백을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="feeff03705a487ea46fd3bc6cff8c2b4ad5e534d" translate="yes" xml:space="preserve">
          <source>Apply the callback unless the collection is empty.</source>
          <target state="translated">컬렉션이 비어 있지 않으면 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="234bb4dd1b3798356219ee38be5982d843405563" translate="yes" xml:space="preserve">
          <source>Apply the callback unless the collection is not empty.</source>
          <target state="translated">컬렉션이 비어 있지 않으면 콜백을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="0a38a2ef7d07fe05c932b7d1a0e4b6d3c4a88b05" translate="yes" xml:space="preserve">
          <source>Apply the callback's message changes if the given &quot;value&quot; is false.</source>
          <target state="translated">주어진 &quot;값&quot;이 거짓이면 콜백의 메시지 변경을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f095c2104c4312a1688ea7f238e2e4379c9c8a36" translate="yes" xml:space="preserve">
          <source>Apply the callback's message changes if the given &quot;value&quot; is true.</source>
          <target state="translated">주어진 &quot;값&quot;이 참이면 콜백의 메시지 변경을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="7fe3fadc51752fa0df039a2aa6715c0f7344be2e" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is false.</source>
          <target state="translated">제공된 &quot;값&quot;이 false 인 경우 콜백의 쿼리 변경 사항을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e9ddac0b5e1332cdb39cbc6cef7f68dda9d25819" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is true.</source>
          <target state="translated">주어진 &quot;값&quot;이 참인 경우 콜백의 쿼리 변경 사항을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="be3c45e1ebe78ab2e6e32d6f2c79e2dd842dc173" translate="yes" xml:space="preserve">
          <source>Apply the callback's string changes if the given &quot;value&quot; is true.</source>
          <target state="translated">주어진 &quot;값&quot;이 참이면 콜백의 문자열 변경을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="d39d859bb68d6714edc828508a6cc838f1485a62" translate="yes" xml:space="preserve">
          <source>Apply the configured taps for the logger.</source>
          <target state="translated">로거에 대해 구성된 탭을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="b28ad2c02c67996ae5f21ba050fd86af3fc01ad8" translate="yes" xml:space="preserve">
          <source>Apply the given named scope if possible.</source>
          <target state="translated">가능한 경우 지정된 명명 된 범위를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="c2c4b1ef406e3acca82dbde6a6d17c7bb99ed64b" translate="yes" xml:space="preserve">
          <source>Apply the given named scope on the current builder instance.</source>
          <target state="translated">현재 빌더 인스턴스에 지정된 명명 된 범위를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="c762cb43b86f27b8ea6f37478572513e5ab33dfc" translate="yes" xml:space="preserve">
          <source>Apply the given regular expression to the given parameters.</source>
          <target state="translated">주어진 매개 변수에 주어진 정규식을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e2329a092094b4a6031172b50f5fcf2f8889f77b" translate="yes" xml:space="preserve">
          <source>Apply the given scope on the current builder instance.</source>
          <target state="translated">현재 빌더 인스턴스에 지정된 범위를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="c989fb0529d6d6cb343c8759d6151e951d91ef7d" translate="yes" xml:space="preserve">
          <source>Apply the scope to a given Eloquent query builder.</source>
          <target state="translated">지정된 Eloquent 쿼리 빌더에 범위를 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e2b14580e612108d53398984612fcd352ee5a112" translate="yes" xml:space="preserve">
          <source>Apply the scopes to the Eloquent builder instance and return it.</source>
          <target state="translated">Eloquent 빌더 인스턴스에 범위를 적용하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="1b2fe0904a56b110d35cc0e114cd337df5c604e3" translate="yes" xml:space="preserve">
          <source>Applying Global Scopes</source>
          <target state="translated">글로벌 범위 적용</target>
        </trans-unit>
        <trans-unit id="87700f2f7733be429e5fdded311b9a09812988c1" translate="yes" xml:space="preserve">
          <source>Applying States</source>
          <target state="translated">주 적용</target>
        </trans-unit>
        <trans-unit id="6eda4c543c1cef3ae46fbb1225b6463edecf122c" translate="yes" xml:space="preserve">
          <source>Approving The Request</source>
          <target state="translated">요청 승인</target>
        </trans-unit>
        <trans-unit id="847562465bb8f685764cc265119fe88ba683430c" translate="yes" xml:space="preserve">
          <source>April 6th, 2021</source>
          <target state="translated">2021 년 4 월 6 일</target>
        </trans-unit>
        <trans-unit id="fdbb4f6b1f47a666c99135c9581c3bc71bf00f2f" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher</source>
          <target state="translated">Argon2IdHasher</target>
        </trans-unit>
        <trans-unit id="3dbab0af8289e0fb1c6635d6c04fe42270183797" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher (Hashing)</source>
          <target state="translated">Argon2IdHasher (해싱)</target>
        </trans-unit>
        <trans-unit id="8593dcf306082b2b99bb1f7440582f6ae005f0e4" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::algorithm()</source>
          <target state="translated">Argon2IdHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="622b863df0a09ffa694f45342d4f484b76e3cab8" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::check()</source>
          <target state="translated">Argon2IdHasher::check()</target>
        </trans-unit>
        <trans-unit id="3e39c0c7ca0c47db1db47175428b94506969732e" translate="yes" xml:space="preserve">
          <source>ArgonHasher</source>
          <target state="translated">ArgonHasher</target>
        </trans-unit>
        <trans-unit id="47df8c7f20ad99acc50d2d19fb613a4679c93342" translate="yes" xml:space="preserve">
          <source>ArgonHasher (Hashing)</source>
          <target state="translated">아르곤 해 셔 (해싱)</target>
        </trans-unit>
        <trans-unit id="0f15df341c8abdbf4396bac096584d2bc37d66d4" translate="yes" xml:space="preserve">
          <source>ArgonHasher::__construct()</source>
          <target state="translated">ArgonHasher::__construct()</target>
        </trans-unit>
        <trans-unit id="80f1d5e5d1b79315fd44f509cf836a4292ea1683" translate="yes" xml:space="preserve">
          <source>ArgonHasher::algorithm()</source>
          <target state="translated">ArgonHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="3c4819fa1620c60ca439807f3c58f19727039671" translate="yes" xml:space="preserve">
          <source>ArgonHasher::check()</source>
          <target state="translated">ArgonHasher::check()</target>
        </trans-unit>
        <trans-unit id="33eab82fe49f00ff291e0b96190b51f0b583de27" translate="yes" xml:space="preserve">
          <source>ArgonHasher::make()</source>
          <target state="translated">ArgonHasher::make()</target>
        </trans-unit>
        <trans-unit id="08c74267bae90a0e1414f99724a0b27aa56a9787" translate="yes" xml:space="preserve">
          <source>ArgonHasher::memory()</source>
          <target state="translated">ArgonHasher::memory()</target>
        </trans-unit>
        <trans-unit id="4b434ad802820d2b966eb9dccad4ab7efbbf119d" translate="yes" xml:space="preserve">
          <source>ArgonHasher::needsRehash()</source>
          <target state="translated">ArgonHasher::needsRehash()</target>
        </trans-unit>
        <trans-unit id="6248068298670b145e7c357405aad2204dcbaef2" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setMemory()</source>
          <target state="translated">ArgonHasher::setMemory()</target>
        </trans-unit>
        <trans-unit id="b0255d11003e0fc793eddc754cbca7fe92b5b5b3" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setThreads()</source>
          <target state="translated">ArgonHasher::setThreads()</target>
        </trans-unit>
        <trans-unit id="79f3f06b756cc85acab467f445896b52cc29ce9f" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setTime()</source>
          <target state="translated">ArgonHasher::setTime()</target>
        </trans-unit>
        <trans-unit id="679baae4c9b0d28f337b8babfd4379733eb22a2e" translate="yes" xml:space="preserve">
          <source>ArgonHasher::threads()</source>
          <target state="translated">ArgonHasher::threads()</target>
        </trans-unit>
        <trans-unit id="a00fe6d40b6f3f2de8398801c7aaff6d6b75b428" translate="yes" xml:space="preserve">
          <source>ArgonHasher::time()</source>
          <target state="translated">ArgonHasher::time()</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="5e68d19490cd87ca4a54ccc3a50e5ecbff27e3f0" translate="yes" xml:space="preserve">
          <source>Arr</source>
          <target state="translated">Arr</target>
        </trans-unit>
        <trans-unit id="d14f07e09c8fb6deba2580a76adf6f569ee7043b" translate="yes" xml:space="preserve">
          <source>Arr (Support)</source>
          <target state="translated">Arr (지원)</target>
        </trans-unit>
        <trans-unit id="e4e61cec3a9c05759013e204d2435ef28b73c452" translate="yes" xml:space="preserve">
          <source>Arr::accessible()</source>
          <target state="translated">Arr::accessible()</target>
        </trans-unit>
        <trans-unit id="2edf712f272d1f21ea9cd9765795b515d4b992aa" translate="yes" xml:space="preserve">
          <source>Arr::add()</source>
          <target state="translated">Arr::add()</target>
        </trans-unit>
        <trans-unit id="f29619a049da0d79437eae0cc10e0fd9bd596fef" translate="yes" xml:space="preserve">
          <source>Arr::collapse()</source>
          <target state="translated">Arr::collapse()</target>
        </trans-unit>
        <trans-unit id="4592eeb4a3b971e35c2e6831d4d0d74e74ea3043" translate="yes" xml:space="preserve">
          <source>Arr::crossJoin()</source>
          <target state="translated">Arr::crossJoin()</target>
        </trans-unit>
        <trans-unit id="cd231794234dd94138926a6a2cf99a955141c3c2" translate="yes" xml:space="preserve">
          <source>Arr::divide()</source>
          <target state="translated">Arr::divide()</target>
        </trans-unit>
        <trans-unit id="257a91588df61589442dac5845d7d898309099a8" translate="yes" xml:space="preserve">
          <source>Arr::dot()</source>
          <target state="translated">Arr::dot()</target>
        </trans-unit>
        <trans-unit id="4fa73067e37da53ac0276adaaaa3f30dee09c576" translate="yes" xml:space="preserve">
          <source>Arr::except()</source>
          <target state="translated">Arr::except()</target>
        </trans-unit>
        <trans-unit id="103e5cf1c7a8e05b6c0d96497567ed1ff6bd7c21" translate="yes" xml:space="preserve">
          <source>Arr::exists()</source>
          <target state="translated">Arr::exists()</target>
        </trans-unit>
        <trans-unit id="78d0320f3812984628a4cfd168b52e7d1deb9271" translate="yes" xml:space="preserve">
          <source>Arr::explodePluckParameters()</source>
          <target state="translated">Arr::explodePluckParameters()</target>
        </trans-unit>
        <trans-unit id="a8a620b6b98f8d87a202c7be3a6d4c0be34381ca" translate="yes" xml:space="preserve">
          <source>Arr::first()</source>
          <target state="translated">Arr::first()</target>
        </trans-unit>
        <trans-unit id="bd5487c5ecce7e3a1a9f2bb391322d3d7b6a3e4b" translate="yes" xml:space="preserve">
          <source>Arr::flatten()</source>
          <target state="translated">Arr::flatten()</target>
        </trans-unit>
        <trans-unit id="504f8215f6599e4cd0049498c62d3edaded0d162" translate="yes" xml:space="preserve">
          <source>Arr::forget()</source>
          <target state="translated">Arr::forget()</target>
        </trans-unit>
        <trans-unit id="035da2d8a087a94f7703352845cc835385f9480c" translate="yes" xml:space="preserve">
          <source>Arr::get()</source>
          <target state="translated">Arr::get()</target>
        </trans-unit>
        <trans-unit id="efec61885065ac27b0d1f6fa269300d9295ff6dd" translate="yes" xml:space="preserve">
          <source>Arr::has()</source>
          <target state="translated">Arr::has()</target>
        </trans-unit>
        <trans-unit id="1dc32ff6ec8677bf548fa662e2500e9398560db0" translate="yes" xml:space="preserve">
          <source>Arr::hasAny()</source>
          <target state="translated">Arr::hasAny()</target>
        </trans-unit>
        <trans-unit id="3c1bae690296dc3a1623fc6a05246c7fc7ebd860" translate="yes" xml:space="preserve">
          <source>Arr::isAssoc()</source>
          <target state="translated">Arr::isAssoc()</target>
        </trans-unit>
        <trans-unit id="17c190057f2fbe3dff9934d39c762f823776d0e4" translate="yes" xml:space="preserve">
          <source>Arr::last()</source>
          <target state="translated">Arr::last()</target>
        </trans-unit>
        <trans-unit id="695057c671269fe4b70990aeeb25682f74ef1d67" translate="yes" xml:space="preserve">
          <source>Arr::only()</source>
          <target state="translated">Arr::only()</target>
        </trans-unit>
        <trans-unit id="a1b43500ced9654ee96bdb9f9a0143cd811464e7" translate="yes" xml:space="preserve">
          <source>Arr::pluck()</source>
          <target state="translated">Arr::pluck()</target>
        </trans-unit>
        <trans-unit id="cd8b7af8eede98172c001441986f44803ed20620" translate="yes" xml:space="preserve">
          <source>Arr::prepend()</source>
          <target state="translated">Arr::prepend()</target>
        </trans-unit>
        <trans-unit id="fe690513668c3d97e5ae7df0bb4ffa32c4f7db3e" translate="yes" xml:space="preserve">
          <source>Arr::pull()</source>
          <target state="translated">Arr::pull()</target>
        </trans-unit>
        <trans-unit id="7ccac9d36944b66ed9a888d173e33887a5852279" translate="yes" xml:space="preserve">
          <source>Arr::query()</source>
          <target state="translated">Arr::query()</target>
        </trans-unit>
        <trans-unit id="c480eb9b9b2fa2a5366428135bbfbf6429b9028f" translate="yes" xml:space="preserve">
          <source>Arr::random()</source>
          <target state="translated">Arr::random()</target>
        </trans-unit>
        <trans-unit id="9dae62df556404feee70d1119cc235df5fa1112b" translate="yes" xml:space="preserve">
          <source>Arr::set()</source>
          <target state="translated">Arr::set()</target>
        </trans-unit>
        <trans-unit id="da0d71a3ac61d2abff141c166effc856b27888b5" translate="yes" xml:space="preserve">
          <source>Arr::shuffle()</source>
          <target state="translated">Arr::shuffle()</target>
        </trans-unit>
        <trans-unit id="ea5a29753549a9e6574f2133d47c97304c63ed3d" translate="yes" xml:space="preserve">
          <source>Arr::sort()</source>
          <target state="translated">Arr::sort()</target>
        </trans-unit>
        <trans-unit id="1706fb0c6835f78b211464521e1ad4ec5f425011" translate="yes" xml:space="preserve">
          <source>Arr::sortRecursive()</source>
          <target state="translated">Arr::sortRecursive()</target>
        </trans-unit>
        <trans-unit id="fed395c8e8be02c9556639684677b1b1ef8f45d3" translate="yes" xml:space="preserve">
          <source>Arr::where()</source>
          <target state="translated">Arr::where()</target>
        </trans-unit>
        <trans-unit id="b52fc7889139a9165980e0baf1321cc5438da80d" translate="yes" xml:space="preserve">
          <source>Arr::wrap()</source>
          <target state="translated">Arr::wrap()</target>
        </trans-unit>
        <trans-unit id="1122c0a300fb0d261114087fee5f67b517221056" translate="yes" xml:space="preserve">
          <source>Array &amp;amp; JSON Casting</source>
          <target state="translated">배열 및 JSON 캐스팅</target>
        </trans-unit>
        <trans-unit id="6f5394afdddf2017287dfeba28ee177aaef2d77f" translate="yes" xml:space="preserve">
          <source>Array / JSON Serialization</source>
          <target state="translated">배열 / JSON 직렬화</target>
        </trans-unit>
        <trans-unit id="801ea4cba7f668879ccd61d3e93eea6918104a04" translate="yes" xml:space="preserve">
          <source>Array of failed recipients.</source>
          <target state="translated">실패한 수신자 배열.</target>
        </trans-unit>
        <trans-unit id="c17609136dbbee227095893718af833cbd365b0c" translate="yes" xml:space="preserve">
          <source>Array of footer lines to be added to template.</source>
          <target state="translated">템플릿에 추가 할 바닥 글 줄의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="45e9009fe3f1be64e19fa18bff4e2116244ef530" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for escaped echos.</source>
          <target state="translated">이스케이프 된 에코에 대한 열기 및 닫기 태그 배열.</target>
        </trans-unit>
        <trans-unit id="63e64f8729cabbb7faf2008edc910cd23437493e" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for raw echos.</source>
          <target state="translated">원시 에코에 대한 열기 및 닫기 태그의 배열.</target>
        </trans-unit>
        <trans-unit id="28c328778577fddfc2df4b2c6da5a76622f55f89" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for regular echos.</source>
          <target state="translated">일반 반향을위한 시작 및 종료 태그 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ed1b8e1ce5edb32b8c95e4a6659cffd05914e85b" translate="yes" xml:space="preserve">
          <source>Array to temporary store the raw blocks found in the template.</source>
          <target state="translated">템플릿에서 찾은 원시 블록을 임시로 저장하는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="bade51302a664ab2a520072bfa7c7b1c99ef2837" translate="yes" xml:space="preserve">
          <source>ArrayInput</source>
          <target state="translated">ArrayInput</target>
        </trans-unit>
        <trans-unit id="41eb415c07831f366e7c8a298f4997f3beb0eb62" translate="yes" xml:space="preserve">
          <source>ArrayIterator</source>
          <target state="translated">ArrayIterator</target>
        </trans-unit>
        <trans-unit id="454cabc12562f84792f1a25911e52b68a904dcf0" translate="yes" xml:space="preserve">
          <source>ArrayLoader</source>
          <target state="translated">ArrayLoader</target>
        </trans-unit>
        <trans-unit id="a71f5684eb802f58ae927e22c0b9c79f1a08660c" translate="yes" xml:space="preserve">
          <source>ArrayLoader (Translation)</source>
          <target state="translated">ArrayLoader (번역)</target>
        </trans-unit>
        <trans-unit id="70999955c14da7e2646a70de0f433062e176d989" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addJsonPath()</source>
          <target state="translated">ArrayLoader::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="0928dbfaeb230a10c7d965c1aacbf95d991faf38" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addMessages()</source>
          <target state="translated">ArrayLoader::addMessages()</target>
        </trans-unit>
        <trans-unit id="057894440968de03927ef2b0636854272f78a4a0" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addNamespace()</source>
          <target state="translated">ArrayLoader::addNamespace()</target>
        </trans-unit>
        <trans-unit id="87bcabe5616e7ffde1117ad306332dbb8bddc58e" translate="yes" xml:space="preserve">
          <source>ArrayLoader::load()</source>
          <target state="translated">ArrayLoader::load()</target>
        </trans-unit>
        <trans-unit id="0049e1af40272d8affc2546584bb9d7164114d4f" translate="yes" xml:space="preserve">
          <source>ArrayLoader::namespaces()</source>
          <target state="translated">ArrayLoader::namespaces()</target>
        </trans-unit>
        <trans-unit id="c847bf4318f02a0ac1aae1c5d449ef76e6f9379c" translate="yes" xml:space="preserve">
          <source>ArrayLock</source>
          <target state="translated">ArrayLock</target>
        </trans-unit>
        <trans-unit id="9cf5f7a15073392de36499d75f2b90940a03f617" translate="yes" xml:space="preserve">
          <source>ArrayLock (Cache)</source>
          <target state="translated">ArrayLock (캐시)</target>
        </trans-unit>
        <trans-unit id="a36907db0deb720f892b719e7cd32e6f99a7861e" translate="yes" xml:space="preserve">
          <source>ArrayLock::__construct()</source>
          <target state="translated">ArrayLock::__construct()</target>
        </trans-unit>
        <trans-unit id="7d9d54c4380cfd06ff70c9cfafd826ceb5cb2d1f" translate="yes" xml:space="preserve">
          <source>ArrayLock::acquire()</source>
          <target state="translated">ArrayLock::acquire()</target>
        </trans-unit>
        <trans-unit id="c3bdb8b254af71f7a7d13c5388ec2fe89e6e6dc5" translate="yes" xml:space="preserve">
          <source>ArrayLock::exists()</source>
          <target state="translated">ArrayLock::exists()</target>
        </trans-unit>
        <trans-unit id="0979c921cc5cf4d0e5a6c45e755d3f20860e0e3d" translate="yes" xml:space="preserve">
          <source>ArrayLock::forceRelease()</source>
          <target state="translated">ArrayLock::forceRelease()</target>
        </trans-unit>
        <trans-unit id="6c4f36ab3d4606b269228c095c82ca516be10149" translate="yes" xml:space="preserve">
          <source>ArrayLock::getCurrentOwner()</source>
          <target state="translated">ArrayLock::getCurrentOwner()</target>
        </trans-unit>
        <trans-unit id="dcdc0e897642e59851b080d0876417e70bf9d003" translate="yes" xml:space="preserve">
          <source>ArrayLock::release()</source>
          <target state="translated">ArrayLock::release()</target>
        </trans-unit>
        <trans-unit id="d4dd527b7e41c2ad60b39f33b1545c192f4b053f" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler</source>
          <target state="translated">ArraySessionHandler</target>
        </trans-unit>
        <trans-unit id="a2510a844cb2b3052ff42c3446bc3404c918bf89" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler (Session)</source>
          <target state="translated">ArraySessionHandler (세션)</target>
        </trans-unit>
        <trans-unit id="5c39e03cc6c34bad79922c6fea270920adaf5750" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::__construct()</source>
          <target state="translated">ArraySessionHandler::__construct()</target>
        </trans-unit>
        <trans-unit id="9eaac2576864d478b7e880354c86067934d68578" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::calculateExpiration()</source>
          <target state="translated">ArraySessionHandler::calculateExpiration()</target>
        </trans-unit>
        <trans-unit id="46a1d7d9c8693901f5079ec0b11706508f904d4f" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::close()</source>
          <target state="translated">ArraySessionHandler::close()</target>
        </trans-unit>
        <trans-unit id="9d3eeed5f6bca459fc01e36f41ab32f03978e1e5" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::destroy()</source>
          <target state="translated">ArraySessionHandler::destroy()</target>
        </trans-unit>
        <trans-unit id="dd244e5283330853f8eb991e6261533a92239b04" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::gc()</source>
          <target state="translated">ArraySessionHandler::gc()</target>
        </trans-unit>
        <trans-unit id="c2ee042ea9576a457444658653f4690d48d7c051" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::open()</source>
          <target state="translated">ArraySessionHandler::open()</target>
        </trans-unit>
        <trans-unit id="c306ae7b6035f199de9a1b65efba6df276a1ff0e" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::read()</source>
          <target state="translated">ArraySessionHandler::read()</target>
        </trans-unit>
        <trans-unit id="a4bb7683563ff93b5896eb3f1ce2df75007f011d" translate="yes" xml:space="preserve">
          <source>ArraySessionHandler::write()</source>
          <target state="translated">ArraySessionHandler::write()</target>
        </trans-unit>
        <trans-unit id="1b2e390ef6a4f7ea6ec46cfa9d3bd5b39b96516e" translate="yes" xml:space="preserve">
          <source>ArrayStore</source>
          <target state="translated">ArrayStore</target>
        </trans-unit>
        <trans-unit id="fafb73faa0a39c431648bfcbc4c53ed94b1c920b" translate="yes" xml:space="preserve">
          <source>ArrayStore (Cache)</source>
          <target state="translated">ArrayStore (캐시)</target>
        </trans-unit>
        <trans-unit id="0f76f13d27d58e13179b473c7c52bd0a966ef692" translate="yes" xml:space="preserve">
          <source>ArrayStore::__construct()</source>
          <target state="translated">ArrayStore::__construct()</target>
        </trans-unit>
        <trans-unit id="a31c8b9a0770709240ea7b43e051fae2b2f60e03" translate="yes" xml:space="preserve">
          <source>ArrayStore::calculateExpiration()</source>
          <target state="translated">ArrayStore::calculateExpiration()</target>
        </trans-unit>
        <trans-unit id="3d6874e29958cd2537ce695c16bd872b5fd093b1" translate="yes" xml:space="preserve">
          <source>ArrayStore::decrement()</source>
          <target state="translated">ArrayStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4948aa5cec37607c2443e7fff7be759bbbce3119" translate="yes" xml:space="preserve">
          <source>ArrayStore::flush()</source>
          <target state="translated">ArrayStore::flush()</target>
        </trans-unit>
        <trans-unit id="6874902c9b38dbcf513b795e35bc51dcafc82bf2" translate="yes" xml:space="preserve">
          <source>ArrayStore::forever()</source>
          <target state="translated">ArrayStore::forever()</target>
        </trans-unit>
        <trans-unit id="7cf36327a9da6611653227039f605bafdfc18397" translate="yes" xml:space="preserve">
          <source>ArrayStore::forget()</source>
          <target state="translated">ArrayStore::forget()</target>
        </trans-unit>
        <trans-unit id="ab0d3ebd30c784ac31c1858b921683076e69a033" translate="yes" xml:space="preserve">
          <source>ArrayStore::get()</source>
          <target state="translated">ArrayStore::get()</target>
        </trans-unit>
        <trans-unit id="44b272422a9a784cf5e5bd1acba2a142a145f5ea" translate="yes" xml:space="preserve">
          <source>ArrayStore::getPrefix()</source>
          <target state="translated">ArrayStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="324b4d5aa9c1e626ca445a92e6cf07359ae5cb0e" translate="yes" xml:space="preserve">
          <source>ArrayStore::increment()</source>
          <target state="translated">ArrayStore::increment()</target>
        </trans-unit>
        <trans-unit id="7ddbdaab137796c857451b7d373f48f450e396ab" translate="yes" xml:space="preserve">
          <source>ArrayStore::lock()</source>
          <target state="translated">ArrayStore::lock()</target>
        </trans-unit>
        <trans-unit id="660f89a54bdb59030fdba93b0d0239749bb3a07d" translate="yes" xml:space="preserve">
          <source>ArrayStore::put()</source>
          <target state="translated">ArrayStore::put()</target>
        </trans-unit>
        <trans-unit id="e1e0cd8d9bbf83e812f0931fda6c9ebb6181f8d6" translate="yes" xml:space="preserve">
          <source>ArrayStore::restoreLock()</source>
          <target state="translated">ArrayStore::restoreLock()</target>
        </trans-unit>
        <trans-unit id="f98231a8f2014b9c73dfd2f0bbfd793ceb2d6cac" translate="yes" xml:space="preserve">
          <source>ArrayStore::toTimestamp()</source>
          <target state="translated">ArrayStore::toTimestamp()</target>
        </trans-unit>
        <trans-unit id="4affa554a5b1a50b19f50a90390316ac0552b957" translate="yes" xml:space="preserve">
          <source>ArraySubset</source>
          <target state="translated">ArraySubset</target>
        </trans-unit>
        <trans-unit id="ab9ad4f05377eda6febe0a0b592650952e4e1927" translate="yes" xml:space="preserve">
          <source>ArraySubset (Testing\Constraints)</source>
          <target state="translated">ArraySubset (Testing \ Constraints)</target>
        </trans-unit>
        <trans-unit id="1e58869411be122b98371f8ef37ee53f7923d207" translate="yes" xml:space="preserve">
          <source>ArraySubset::__construct()</source>
          <target state="translated">ArraySubset::__construct()</target>
        </trans-unit>
        <trans-unit id="5824298428d50b4e50ab205d40552aedb549f7b8" translate="yes" xml:space="preserve">
          <source>ArraySubset::evaluate()</source>
          <target state="translated">ArraySubset::evaluate()</target>
        </trans-unit>
        <trans-unit id="b2720776e04cc3ff31d95541f745386ccb767b12" translate="yes" xml:space="preserve">
          <source>ArraySubset::failureDescription()</source>
          <target state="translated">ArraySubset::failureDescription()</target>
        </trans-unit>
        <trans-unit id="e266a329aad0e594a55f36e020f529e11853d3f4" translate="yes" xml:space="preserve">
          <source>ArraySubset::toString()</source>
          <target state="translated">ArraySubset::toString()</target>
        </trans-unit>
        <trans-unit id="834d6a95b15ebc052473de8f40c63eb61c7d407c" translate="yes" xml:space="preserve">
          <source>ArrayTransport</source>
          <target state="translated">ArrayTransport</target>
        </trans-unit>
        <trans-unit id="be4640bda872d0f6d2d6d8cef23c6c1d9aa12551" translate="yes" xml:space="preserve">
          <source>ArrayTransport (Mail\Transport)</source>
          <target state="translated">ArrayTransport (메일 \ 전송)</target>
        </trans-unit>
        <trans-unit id="adb8c49aea3278de871eeef69dcc57bd2393d315" translate="yes" xml:space="preserve">
          <source>ArrayTransport::__construct()</source>
          <target state="translated">ArrayTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="c93846aad6411fe5be5c0d52fce11c23c1acd36c" translate="yes" xml:space="preserve">
          <source>ArrayTransport::flush()</source>
          <target state="translated">ArrayTransport::flush()</target>
        </trans-unit>
        <trans-unit id="b04f63a54fe9d7a3d3d3d0f54965bf21b1e049c6" translate="yes" xml:space="preserve">
          <source>ArrayTransport::messages()</source>
          <target state="translated">ArrayTransport::messages()</target>
        </trans-unit>
        <trans-unit id="c453a0036fbbfe267d32a0093f04dd373dbcc1c2" translate="yes" xml:space="preserve">
          <source>ArrayTransport::send()</source>
          <target state="translated">ArrayTransport::send()</target>
        </trans-unit>
        <trans-unit id="251d6b9928688ee8472250abcd7d376e9f3b00b5" translate="yes" xml:space="preserve">
          <source>Arrayable</source>
          <target state="translated">Arrayable</target>
        </trans-unit>
        <trans-unit id="a2fc57de029e4faae1b34b264411dce1beca612a" translate="yes" xml:space="preserve">
          <source>Arrayable (Contracts)</source>
          <target state="translated">배열 가능 (계약)</target>
        </trans-unit>
        <trans-unit id="2d2186f05e90d1582bc1d56b9ef512e126150357" translate="yes" xml:space="preserve">
          <source>Arrayable::toArray()</source>
          <target state="translated">Arrayable::toArray()</target>
        </trans-unit>
        <trans-unit id="92d5eddca7f63611d722fc945d39e60443b61ab0" translate="yes" xml:space="preserve">
          <source>Arrays &amp;amp; Objects</source>
          <target state="translated">배열 및 객체</target>
        </trans-unit>
        <trans-unit id="fd2f8eb21db2a05d816e94b156d318b089ae4b3c" translate="yes" xml:space="preserve">
          <source>Artisan</source>
          <target state="translated">Artisan</target>
        </trans-unit>
        <trans-unit id="ee9a86c92f54745a42e3a568a1c93e11d4683a0c" translate="yes" xml:space="preserve">
          <source>Artisan (Support\Facades)</source>
          <target state="translated">장인 (지원 \ Facades)</target>
        </trans-unit>
        <trans-unit id="5ebc52ccf6b288d562c34744722794123ad657c7" translate="yes" xml:space="preserve">
          <source>Artisan &lt;code&gt;serve&lt;/code&gt; Improvements</source>
          <target state="translated">장인 &lt;code&gt;serve&lt;/code&gt; 개선</target>
        </trans-unit>
        <trans-unit id="62da37fdf723d03369da1b35bb55cf0fe7f34caa" translate="yes" xml:space="preserve">
          <source>Artisan Console</source>
          <target state="translated">장인 콘솔</target>
        </trans-unit>
        <trans-unit id="e2166a74dcb3ff6ea2c860d6036978360c0f6bc5" translate="yes" xml:space="preserve">
          <source>Artisan Test Runner</source>
          <target state="translated">장인 테스트 러너</target>
        </trans-unit>
        <trans-unit id="f638dda8381c5e54161d1c923176ca6971c52f1a" translate="yes" xml:space="preserve">
          <source>Artisan dispatches three events when running commands: &lt;code&gt;Illuminate\Console\Events\ArtisanStarting&lt;/code&gt;, &lt;code&gt;Illuminate\Console\Events\CommandStarting&lt;/code&gt;, and &lt;code&gt;Illuminate\Console\Events\CommandFinished&lt;/code&gt;. The &lt;code&gt;ArtisanStarting&lt;/code&gt; event is dispatched immediately when Artisan starts running. Next, the &lt;code&gt;CommandStarting&lt;/code&gt; event is dispatched immediately before a command runs. Finally, the &lt;code&gt;CommandFinished&lt;/code&gt; event is dispatched once a command finishes executing.</source>
          <target state="translated">Artisan은 명령을 실행할 때 &lt;code&gt;Illuminate\Console\Events\ArtisanStarting&lt;/code&gt; , &lt;code&gt;Illuminate\Console\Events\CommandStarting&lt;/code&gt; 및 &lt;code&gt;Illuminate\Console\Events\CommandFinished&lt;/code&gt; 세 가지 이벤트를 전달합니다 . &lt;code&gt;ArtisanStarting&lt;/code&gt; 의 장인이 실행 시작할 때 이벤트가 즉시 전달됩니다. 다음으로 &lt;code&gt;CommandStarting&lt;/code&gt; 이벤트는 명령이 실행되기 직전에 전달됩니다. 마지막으로 명령 실행이 완료되면 &lt;code&gt;CommandFinished&lt;/code&gt; 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="8374ea3ad6e3e78da1fd00a2304555c86b879912" translate="yes" xml:space="preserve">
          <source>Artisan is the command-line interface included with Laravel. It provides a number of helpful commands that can assist you while you build your application. To view a list of all available Artisan commands, you may use the &lt;code&gt;list&lt;/code&gt; command:</source>
          <target state="translated">Artisan은 Laravel에 포함 된 명령 줄 인터페이스입니다. 응용 프로그램을 빌드하는 동안 도움이되는 여러 가지 유용한 명령을 제공합니다. 사용 가능한 모든 Artisan 명령 목록을 보려면 &lt;code&gt;list&lt;/code&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a85f0617411e3d2085945991cbb33cf73eceee7" translate="yes" xml:space="preserve">
          <source>Artisan::getFacadeAccessor()</source>
          <target state="translated">Artisan::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="f6e886ccf65c2bb8ff6aae8ccba62153322a87fe" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider</source>
          <target state="translated">ArtisanServiceProvider</target>
        </trans-unit>
        <trans-unit id="4cb86f8fd97c6dd1a71e43d89278671a27284f40" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider (Foundation\Providers)</source>
          <target state="translated">ArtisanServiceProvider (Foundation \ Providers)</target>
        </trans-unit>
        <trans-unit id="3379911a3eddefc3a91c6e53200ffdb9324c53a9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::provides()</source>
          <target state="translated">ArtisanServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="731325da86c9780a11fcda9f3024632a9468ca9d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::register()</source>
          <target state="translated">ArtisanServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="8693cfda280fc51b11e3642cd40251963b93c94f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAppNameCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAppNameCommand()</target>
        </trans-unit>
        <trans-unit id="17ef1041489a227ec19dd12390494b49bf6aa2a2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAuthMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAuthMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7c004c0133c95ba2802312fed2ad5709ea4b6f18" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheClearCommand()</target>
        </trans-unit>
        <trans-unit id="aaaca5d2648f3f80259f379743179111392ba5a1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheForgetCommand()</target>
        </trans-unit>
        <trans-unit id="d1f7bad5c819210a60db18a69a7c95da1cd96919" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheTableCommand()</target>
        </trans-unit>
        <trans-unit id="14db863aa2012c486f328133c07100ee45696b86" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCastMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCastMakeCommand()</target>
        </trans-unit>
        <trans-unit id="c028f08229929fb600836db4a7e9f822fa5068be" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerChannelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerChannelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="23e93dda39c7ebc8ae857047ed4ef7f19baef150" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearCompiledCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearCompiledCommand()</target>
        </trans-unit>
        <trans-unit id="99ecdf8eab33c355d1ace94618e8bef828abf4bd" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearResetsCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearResetsCommand()</target>
        </trans-unit>
        <trans-unit id="5505630f7f8ec7bac029ec0f00ce47fd37df41ca" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCommands()</source>
          <target state="translated">ArtisanServiceProvider::registerCommands()</target>
        </trans-unit>
        <trans-unit id="cbdc8f0193e1af91e45c22af14c5d02a9af8badf" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerComponentMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerComponentMakeCommand()</target>
        </trans-unit>
        <trans-unit id="9ae41f764ccec624d92705b5fa0cb3b2385144d3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigCacheCommand()</target>
        </trans-unit>
        <trans-unit id="57e9640b92e1b3ac791e8237a742dd4056072ac3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigClearCommand()</target>
        </trans-unit>
        <trans-unit id="d028db36df76a23f812c6ce88495310cec1802fa" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConsoleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConsoleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="cfd3d3691595a44642bd54ca2fedf05e5ee4544d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerControllerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerControllerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="2e47790c2adfdfe47457b7289d04d666ff4522de" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerDbWipeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerDbWipeCommand()</target>
        </trans-unit>
        <trans-unit id="fc6359d1ce7185387f604ce50795649ff2fc93eb" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerDownCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerDownCommand()</target>
        </trans-unit>
        <trans-unit id="8aec2e775cef5e1e45ebbe11735758122b8d0615" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEnvironmentCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEnvironmentCommand()</target>
        </trans-unit>
        <trans-unit id="c3ca8e4465c230deff667f4518bcdbc998fe5e13" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventCacheCommand()</target>
        </trans-unit>
        <trans-unit id="a7858e6b62e26f2890bac9e038e26a1adc803b1c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventClearCommand()</target>
        </trans-unit>
        <trans-unit id="eaf224c4e7c4ac03841b514f063561d4c583c7e5" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="3920c9a09e9534ec2161b1523a0acd2ac321e305" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventListCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventListCommand()</target>
        </trans-unit>
        <trans-unit id="8ae051dd9c3071470d7cb03a381b2a87ec1d15ef" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventMakeCommand()</target>
        </trans-unit>
        <trans-unit id="851dae4b12ab60c6ec111892745b571e335f191f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerExceptionMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerExceptionMakeCommand()</target>
        </trans-unit>
        <trans-unit id="ca90e8d1ac428577a4062ad6d3f8cecb6191573c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerFactoryMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerFactoryMakeCommand()</target>
        </trans-unit>
        <trans-unit id="927cb2f52fb09423bead29b259f24961a1eebb34" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerJobMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerJobMakeCommand()</target>
        </trans-unit>
        <trans-unit id="b0110157ec5b6bbbc2776c8c3c09c325d3f9f593" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerKeyGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerKeyGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="4b239bf3fb132f743a66a599405fc77b32bceae9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerListenerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerListenerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bf39ebe17f8a38fd3c95b34da5075802787ddc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMailMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMailMakeCommand()</target>
        </trans-unit>
        <trans-unit id="4abde22335dcd0638a36f625640e3f594a536fc7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMiddlewareMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMiddlewareMakeCommand()</target>
        </trans-unit>
        <trans-unit id="326a794f51954f4c7f343ce03cb4d1f65475ba72" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateCommand()</target>
        </trans-unit>
        <trans-unit id="ad3fee6037239d34c5ba4a97689ce652bd2e0d55" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateFreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateFreshCommand()</target>
        </trans-unit>
        <trans-unit id="788f7f9390fee4916d90645640ee0e68668acb26" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateInstallCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateInstallCommand()</target>
        </trans-unit>
        <trans-unit id="d125d4ffff70d84f565f28a9800f622c6aa66c14" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f379d5bd4e37604c27104b4e7d2b81974ac88248" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRefreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRefreshCommand()</target>
        </trans-unit>
        <trans-unit id="d00617957127b872899afe748e3972f734cb9e12" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateResetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateResetCommand()</target>
        </trans-unit>
        <trans-unit id="19ea455154315293be1064281e2042df7e69492c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRollbackCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRollbackCommand()</target>
        </trans-unit>
        <trans-unit id="1ab36d68611f4fd456958fd364bf1e764012f90f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateStatusCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateStatusCommand()</target>
        </trans-unit>
        <trans-unit id="4abff54a062af1436b9e9c7f5a4c526b74d9f75c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerModelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerModelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="144ee94da546ea97238a609c7b057cb73697a45b" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationMakeCommand()</target>
        </trans-unit>
        <trans-unit id="8021a274e18bacd07cba793707b73480917c7cde" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationTableCommand()</target>
        </trans-unit>
        <trans-unit id="dc4d3ac7423616bc82044bb43b6d96d5e8b03c5c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerObserverMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerObserverMakeCommand()</target>
        </trans-unit>
        <trans-unit id="46c2082d6e47ee61bc7dc752aaecd7950bdf3fdf" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeClearCommand()</target>
        </trans-unit>
        <trans-unit id="974528f286f12664412757e86075418055578a2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeCommand()</target>
        </trans-unit>
        <trans-unit id="f1ccb0655a004dc010683d8f93d33ea193458627" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPackageDiscoverCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPackageDiscoverCommand()</target>
        </trans-unit>
        <trans-unit id="ed9df41b1c126afd41867d8a02703a1a9d48facc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPolicyMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPolicyMakeCommand()</target>
        </trans-unit>
        <trans-unit id="54ed83104f255f323fd94f3fd898eb04a66a007a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPresetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPresetCommand()</target>
        </trans-unit>
        <trans-unit id="5e1a58251abd9cee9c61ec5ed317186039a026cc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerProviderMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerProviderMakeCommand()</target>
        </trans-unit>
        <trans-unit id="19cb7c8d55f09378bd364527917a66428c6dc9ba" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueBatchesTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueBatchesTableCommand()</target>
        </trans-unit>
        <trans-unit id="e3b2a4b9b8310abe9c89662024a3e922dbfc9711" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueClearCommand()</target>
        </trans-unit>
        <trans-unit id="8d4bd71202104963773d824a33833ce51b7a592a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedCommand()</target>
        </trans-unit>
        <trans-unit id="b0050c002644e623589dae89ad9769ac25ab8006" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedTableCommand()</target>
        </trans-unit>
        <trans-unit id="55f814f1deae6b62deab568fd7f250f809b43c96" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFlushCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFlushCommand()</target>
        </trans-unit>
        <trans-unit id="663797eb03b5bffb8bf46362e403d4fb1647cf5d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueForgetCommand()</target>
        </trans-unit>
        <trans-unit id="73ba8b2d8d2df954ab09a1b5296ad8ec12dc0d4d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueListenCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueListenCommand()</target>
        </trans-unit>
        <trans-unit id="2b6520fb330d82f2997c5d1024c8c02c28bb278f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRestartCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRestartCommand()</target>
        </trans-unit>
        <trans-unit id="616d417f84701011e35526febb67aa360a563f2d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRetryBatchCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRetryBatchCommand()</target>
        </trans-unit>
        <trans-unit id="3fc2aeeb8c6d32f4235556f06eb237d977455683" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRetryCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRetryCommand()</target>
        </trans-unit>
        <trans-unit id="93f65b594b61f7e15efb1631cecb9151ee873477" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueTableCommand()</target>
        </trans-unit>
        <trans-unit id="2ec657607c73f7bf588d5cbf9664e1978ff701d7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueWorkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueWorkCommand()</target>
        </trans-unit>
        <trans-unit id="52e9340c6dc28f95010b0b161d48a36cfb0d0e2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRequestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRequestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e09d13a596ed5729c7a03e897783d13ac4e89518" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerResourceMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerResourceMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bd29620dd5f6afd7d627cc9f0711c7de10c21d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteCacheCommand()</target>
        </trans-unit>
        <trans-unit id="34bee012fbdbfb62733f2654232d98c105b82e9f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteClearCommand()</target>
        </trans-unit>
        <trans-unit id="d3d9df45173d173170a69cb839dabfe3be8d604f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteListCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteListCommand()</target>
        </trans-unit>
        <trans-unit id="c39cd8abbd614763bd5e463afa6da48d78bbb471" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRuleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRuleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f6460ed6dd5b7d0cb04c215952db10f57da12ff1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleFinishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleFinishCommand()</target>
        </trans-unit>
        <trans-unit id="f7325e02bf5ef963f8217b0480fe51722d541633" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleRunCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleRunCommand()</target>
        </trans-unit>
        <trans-unit id="9cb291f6369b612dcebde6548d293c4712930e29" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleWorkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleWorkCommand()</target>
        </trans-unit>
        <trans-unit id="7479962a105135ebebfc98c3c4b67b90aaed728f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSchemaDumpCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSchemaDumpCommand()</target>
        </trans-unit>
        <trans-unit id="a6dd393a317978961c18049566c05a3e3ca1fbe2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeedCommand()</target>
        </trans-unit>
        <trans-unit id="7fb5fe19a24237949fbe5d1d5302fa5b75ad3111" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeederMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeederMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7d77ab957739d1670a690cb4e7a14a86b7aec295" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerServeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerServeCommand()</target>
        </trans-unit>
        <trans-unit id="03f37f24c4cb447f9d7a9d57f8fad6ad9ea2d739" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSessionTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSessionTableCommand()</target>
        </trans-unit>
        <trans-unit id="ec59a5ece46495962441b50088a355fef1c2aeea" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerStorageLinkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerStorageLinkCommand()</target>
        </trans-unit>
        <trans-unit id="0d908d2a387887eb6c6105eaff8075555ec8f64f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerStubPublishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerStubPublishCommand()</target>
        </trans-unit>
        <trans-unit id="c19c80753dcb15b6d03537d6fd48e75ee6b3656d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerTestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerTestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="3083a90a814db653ef44a70a718108795f1c30d0" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerUpCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerUpCommand()</target>
        </trans-unit>
        <trans-unit id="5211220ca80e55d1f936999d95742260c3759456" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerVendorPublishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerVendorPublishCommand()</target>
        </trans-unit>
        <trans-unit id="a6a1bfdc83c9009bfba9fcf2f26a210fb988b346" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewCacheCommand()</target>
        </trans-unit>
        <trans-unit id="450ed6faa51e101a30124839ac5d9e793efa5e75" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewClearCommand()</target>
        </trans-unit>
        <trans-unit id="f5d8c00d502a75947613de2efe27edef5f51034d" translate="yes" xml:space="preserve">
          <source>ArtisanStarting</source>
          <target state="translated">ArtisanStarting</target>
        </trans-unit>
        <trans-unit id="5ee981756c1078e5376d25e470b9396a14e5565f" translate="yes" xml:space="preserve">
          <source>ArtisanStarting (Console\Events)</source>
          <target state="translated">장인 시작 (콘솔 \ 이벤트)</target>
        </trans-unit>
        <trans-unit id="5a2734e365cea000b3f909ca4f731ba9adf0e1c6" translate="yes" xml:space="preserve">
          <source>ArtisanStarting::__construct()</source>
          <target state="translated">ArtisanStarting::__construct()</target>
        </trans-unit>
        <trans-unit id="410e5e01b2f5f4a908f7dd9eadf0fcf7c7c6ac79" translate="yes" xml:space="preserve">
          <source>As an alternative to defining how many times a job may be attempted before it fails, you may define a time at which the job should timeout. This allows a job to be attempted any number of times within a given time frame. To define the time at which a job should timeout, add a &lt;code&gt;retryUntil&lt;/code&gt; method to your job class:</source>
          <target state="translated">작업이 실패하기 전에 시도 할 수있는 횟수를 정의하는 대신 작업이 시간 초과되는 시간을 정의 할 수 있습니다. 이를 통해 주어진 시간 내에 작업을 여러 번 시도 할 수 있습니다. 작업이 시간 종료되는 시간을 정의하려면 작업 클래스에 &lt;code&gt;retryUntil&lt;/code&gt; 메소드를 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="92b7b927b26ed7a48fa74051d37dbdb09a308fae" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Bus&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being dispatched. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">조롱의 대안으로 &lt;code&gt;Bus&lt;/code&gt; 파사드의 &lt;code&gt;fake&lt;/code&gt; 방법을 사용하여 작업이 파견되지 않도록 할 수 있습니다 . 가짜를 사용하는 경우 테스트중인 코드가 실행 된 후 어설 션이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1983ca37f63f5cb94e706abb916fd0aed8e40a66" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Event&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent all event listeners from executing. You may then assert that events were dispatched and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">조롱의 대안으로, &lt;code&gt;Event&lt;/code&gt; 파사드의 &lt;code&gt;fake&lt;/code&gt; 메소드를 사용하여 모든 이벤트 리스너가 실행되지 않도록 할 수 있습니다 . 그런 다음 이벤트가 전달되었다고 주장하고 수신 한 데이터를 검사 할 수도 있습니다. 가짜를 사용하는 경우 테스트중인 코드가 실행 된 후 어설 션이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1476928cd7c9743fb486eac8d3de874949314733" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Queue&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being queued. You may then assert that jobs were pushed to the queue and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">조롱에 대한 대안으로, &lt;code&gt;Queue&lt;/code&gt; 파사드의 &lt;code&gt;fake&lt;/code&gt; 방법을 사용하여 작업이 큐에 들어 가지 않도록 할 수 있습니다 . 그런 다음 작업이 대기열로 푸시되었다고 주장하고 수신 한 데이터를 검사 할 수도 있습니다. 가짜를 사용하는 경우 테스트중인 코드가 실행 된 후 어설 션이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b404613919475f3f4730b0f788ffeeb920e05b2f" translate="yes" xml:space="preserve">
          <source>As an example, let's modify the default &lt;code&gt;DatabaseSeeder&lt;/code&gt; class and add a database insert statement to the &lt;code&gt;run&lt;/code&gt; method:</source>
          <target state="translated">예를 들어, 기본 &lt;code&gt;DatabaseSeeder&lt;/code&gt; 클래스를 수정하고 데이터베이스 삽입 명령문을 &lt;code&gt;run&lt;/code&gt; 메소드에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="cbc5541758a779b4f10bf184a684bc06604770e2" translate="yes" xml:space="preserve">
          <source>As an example, we will define a custom cast class that casts multiple model values into a single &lt;code&gt;Address&lt;/code&gt; value object. We will assume the &lt;code&gt;Address&lt;/code&gt; value has two public properties: &lt;code&gt;lineOne&lt;/code&gt; and &lt;code&gt;lineTwo&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 여러 모델 값을 단일 &lt;code&gt;Address&lt;/code&gt; 값 개체 로 캐스팅하는 사용자 지정 캐스트 클래스를 정의 합니다. &lt;code&gt;Address&lt;/code&gt; 값에는 &lt;code&gt;lineOne&lt;/code&gt; 및 &lt;code&gt;lineTwo&lt;/code&gt; 의 두 가지 공용 속성 이 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="18f09b8f6a729582cf7d39c9e55fd1dfcabf6343" translate="yes" xml:space="preserve">
          <source>As demonstrated in the example above, you are free to add additional constraints to relationships when querying them. However, use caution when chaining &lt;code&gt;orWhere&lt;/code&gt; clauses onto a relationship, as the &lt;code&gt;orWhere&lt;/code&gt; clauses will be logically grouped at the same level as the relationship constraint:</source>
          <target state="translated">위의 예에서 설명한 것처럼 관계를 쿼리 할 때 관계에 추가 제약 조건을 자유롭게 추가 할 수 있습니다. 체인 경우에는, 사용을주의 &lt;code&gt;orWhere&lt;/code&gt; 의 관계에 절을 같이 &lt;code&gt;orWhere&lt;/code&gt; 의 절 논리적 관계 제약과 같은 레벨로 분류한다 :</target>
        </trans-unit>
        <trans-unit id="9bb2571c90930f6ccdc6186c5e1f7c914af929a6" translate="yes" xml:space="preserve">
          <source>As discussed elsewhere, much of the decision to use contracts or facades will come down to personal taste and the tastes of your development team. Both contracts and facades can be used to create robust, well-tested Laravel applications. As long as you are keeping your class' responsibilities focused, you will notice very few practical differences between using contracts and facades.</source>
          <target state="translated">다른 곳에서 논의한 바와 같이, 계약 또는 파사드를 사용하기로 한 많은 결정은 개인적인 취향과 개발 팀의 취향에 달려 있습니다. 계약과 파사드를 모두 사용하여 강력하고 검증 된 라 라벨 애플리케이션을 만들 수 있습니다. 수업의 책임에 집중하는 한 계약서와 외관을 사용하는 것 사이에는 실질적인 차이가 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa68aa00185125b0e54ef76e69d203c73195c6f8" translate="yes" xml:space="preserve">
          <source>As discussed in this documentation, you can interact with these authentication services manually to build your application's own authentication layer. However, to help you get started more quickly, we have released free packages that provide robust, modern scaffolding of the entire authentication layer. These packages are &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; and &lt;a href=&quot;https://github.com/laravel/fortify&quot;&gt;Laravel Fortify&lt;/a&gt;.</source>
          <target state="translated">이 문서에 설명 된대로 이러한 인증 서비스와 수동으로 상호 작용하여 애플리케이션의 고유 한 인증 계층을 구축 할 수 있습니다. 그러나보다 빠르게 시작할 수 있도록 전체 인증 계층에 대한 강력하고 현대적인 스캐 폴딩을 제공하는 무료 패키지를 출시했습니다. 이 패키지는 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/laravel/fortify&quot;&gt;Laravel Fortify&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1688ddaa5cdef6bc2f64b360c092552cd8b0a517" translate="yes" xml:space="preserve">
          <source>As mentioned above, the &lt;code&gt;collect&lt;/code&gt; helper returns a new &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; instance for the given array. So, creating a collection is as simple as:</source>
          <target state="translated">위에서 언급했듯이 &lt;code&gt;collect&lt;/code&gt; 도우미는 지정된 배열에 대해 새로운 &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; 인스턴스를 반환합니다 . 따라서 컬렉션을 만드는 것은 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="f6f1713bd16094e7a6fcf2728ca9e687ad45591f" translate="yes" xml:space="preserve">
          <source>As mentioned above, you may call any of the Redis commands on the &lt;code&gt;Redis&lt;/code&gt; facade. Laravel uses magic methods to pass the commands to the Redis server, so pass the arguments the Redis command expects:</source>
          <target state="translated">위에서 언급했듯이 &lt;code&gt;Redis&lt;/code&gt; 파사드 에서 Redis 명령을 호출 할 수 있습니다 . Laravel은 매직 메서드를 사용하여 명령을 Redis 서버에 전달하므로 Redis 명령이 예상하는 인수를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="f4fb3bbfdffa9d233ba90ea74e896d8c3daa048d" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section, the &lt;code&gt;laravel/jetstream&lt;/code&gt; package's &lt;code&gt;php artisan jetstream:install&lt;/code&gt; command will create all of the views you need for authentication and place them in the &lt;code&gt;resources/views/auth&lt;/code&gt; directory.</source>
          <target state="translated">이전 섹션에서 언급했듯이 &lt;code&gt;laravel/jetstream&lt;/code&gt; 패키지의 &lt;code&gt;php artisan jetstream:install&lt;/code&gt; jetstream : install 명령은 인증에 필요한 모든 뷰를 만들고 &lt;code&gt;resources/views/auth&lt;/code&gt; 디렉토리에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="95ccb0301c14c38943d59660bae4f3174520ac73" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section, the &lt;code&gt;php artisan make:auth&lt;/code&gt; command will create all of the views you need for authentication and place them in the &lt;code&gt;resources/views/auth&lt;/code&gt; directory.</source>
          <target state="translated">이전 섹션에서 언급했듯이 &lt;code&gt;php artisan make:auth&lt;/code&gt; 명령은 인증에 필요한 모든보기를 작성하여 &lt;code&gt;resources/views/auth&lt;/code&gt; 디렉토리에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="02eb7e9a5f820d0836793a838564e4d3ace9cad7" translate="yes" xml:space="preserve">
          <source>As mentioned previously, a route should be defined that will return a view instructing the user to click the email verification link that was emailed to them by Laravel. This view will be displayed to users when they try to access other parts of the application without verifying their email address first. Remember, the link is automatically emailed to the user as long as your &lt;code&gt;App\Models\User&lt;/code&gt; model implements the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface:</source>
          <target state="translated">앞서 언급했듯이 사용자에게 Laravel이 이메일로 보낸 이메일 확인 링크를 클릭하도록 지시하는 뷰를 반환하는 경로를 정의해야합니다. 이보기는 사용자가 이메일 주소를 먼저 확인하지 않고 애플리케이션의 다른 부분에 액세스하려고 할 때 표시됩니다. &lt;code&gt;App\Models\User&lt;/code&gt; 모델이 &lt;code&gt;MustVerifyEmail&lt;/code&gt; 인터페이스를 구현하는 한 링크는 자동으로 사용자에게 이메일로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="c067b940478df1f24bde7d4758fd400dca869116" translate="yes" xml:space="preserve">
          <source>As mentioned previously, to determine the table name of the relationship's joining table, Eloquent will join the two related model names in alphabetical order. However, you are free to override this convention. You may do so by passing a second argument to the &lt;code&gt;belongsToMany&lt;/code&gt; method:</source>
          <target state="translated">앞에서 언급 한 것처럼 관계 조인 테이블의 테이블 이름을 결정하기 위해 Eloquent는 두 관련 모델 이름을 알파벳 순서로 조인합니다. 그러나이 규칙을 무시할 수 있습니다. &lt;code&gt;belongsToMany&lt;/code&gt; 메소드에 두번째 인자를 전달하면됩니다 :</target>
        </trans-unit>
        <trans-unit id="151600c8a8e38dad2e96a23dcb7ba06238f099c6" translate="yes" xml:space="preserve">
          <source>As mentioned previously, within the &lt;code&gt;register&lt;/code&gt; method, you should only bind things into the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. You should never attempt to register any event listeners, routes, or any other piece of functionality within the &lt;code&gt;register&lt;/code&gt; method. Otherwise, you may accidentally use a service that is provided by a service provider which has not loaded yet.</source>
          <target state="translated">앞에서 언급했듯이 &lt;code&gt;register&lt;/code&gt; 메소드 내 에서는 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 에만 항목을 바인딩해야합니다 . &lt;code&gt;register&lt;/code&gt; 메소드 내에서 이벤트 리스너, 라우트 또는 기타 기능을 등록하려고 시도해서는 안됩니다 . 그렇지 않으면, 아직로드되지 않은 서비스 제공 업체가 제공 한 서비스를 실수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d862b97d45d7a7a57183cd74a41eab54602ec2f5" translate="yes" xml:space="preserve">
          <source>As mentioned, Laravel 8's model factories contain first class support for relationships. So, assuming our &lt;code&gt;User&lt;/code&gt; model has a &lt;code&gt;posts&lt;/code&gt; relationship method, we may simply run the following code to generate a user with three posts:</source>
          <target state="translated">언급했듯이 Laravel 8의 모델 팩토리에는 관계에 대한 최고 수준의 지원이 포함되어 있습니다. 따라서 &lt;code&gt;User&lt;/code&gt; 모델에 &lt;code&gt;posts&lt;/code&gt; 관계 메소드 가 있다고 가정 하면 다음 코드를 실행하여 3 개의 게시물이있는 사용자를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efaf61419eecb8f737d7fa1f29b7d1db46329008" translate="yes" xml:space="preserve">
          <source>As noted above, soft deleted models will automatically be excluded from query results. However, you may force soft deleted models to appear in a result set using the &lt;code&gt;withTrashed&lt;/code&gt; method on the query:</source>
          <target state="translated">위에서 언급 한 것처럼 소프트 삭제 된 모델은 쿼리 결과에서 자동으로 제외됩니다. 그러나 쿼리 에서 &lt;code&gt;withTrashed&lt;/code&gt; 메서드를 사용하여 소프트 삭제 된 모델이 결과 집합에 나타나도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f25bd43e034df81d38d356bb4c7358b624469f1" translate="yes" xml:space="preserve">
          <source>As noted above, when retrieving attributes that are listed in your &lt;code&gt;$dates&lt;/code&gt; property, they will automatically be cast to &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; instances, allowing you to use any of Carbon's methods on your attributes:</source>
          <target state="translated">위에서 언급 한 바와 같이 &lt;code&gt;$dates&lt;/code&gt; 속성에 나열된 속성을 검색하면 해당 속성이 &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; 인스턴스로 자동 전송되어 속성에서 Carbon의 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed90fd82b9509b2eb508375a2ce8e76fb0ee92fc" translate="yes" xml:space="preserve">
          <source>As noted earlier, attributes from the intermediate table may be accessed on models using the &lt;code&gt;pivot&lt;/code&gt; attribute. However, you are free to customize the name of this attribute to better reflect its purpose within your application.</source>
          <target state="translated">앞에서 언급했듯이 중간 테이블의 속성 은 &lt;code&gt;pivot&lt;/code&gt; 속성을 사용하여 모델에서 액세스 할 수 있습니다 . 그러나이 속성의 이름을 사용자 정의하여 애플리케이션 내에서 그 목적을 더 잘 반영 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2af8bbc11392474e2bebbe12d4e3b3796e815bc9" translate="yes" xml:space="preserve">
          <source>As of Laravel 5.7, these values will be cast to the corresponding PHP constants &lt;code&gt;INF&lt;/code&gt;, &lt;code&gt;-INF&lt;/code&gt;, and &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="translated">Laravel 5.7부터이 값은 해당 PHP 상수 &lt;code&gt;INF&lt;/code&gt; , &lt;code&gt;-INF&lt;/code&gt; 및 &lt;code&gt;NAN&lt;/code&gt; 으로 캐스트됩니다 .</target>
        </trans-unit>
        <trans-unit id="2acc3ed0de2f87bd30b90ca9fa49ac43103bd06f" translate="yes" xml:space="preserve">
          <source>As previously discussed, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you may pass a class name to the &lt;code&gt;authorize&lt;/code&gt; method. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="translated">앞에서 설명한 것처럼 &lt;code&gt;create&lt;/code&gt; 와 같은 일부 작업 에는 모델 인스턴스가 필요하지 않을 수 있습니다. 이러한 경우 클래스 이름을 &lt;code&gt;authorize&lt;/code&gt; 메소드에 전달할 수 있습니다 . 클래스 이름은 조치를 승인 할 때 사용할 정책을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac7adb04fd541c2cca2c3ada074c4adf02ea5be" translate="yes" xml:space="preserve">
          <source>As previously discussed, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you should pass a class name to the &lt;code&gt;authorize&lt;/code&gt; method. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="translated">앞에서 설명한대로 &lt;code&gt;create&lt;/code&gt; 와 같은 일부 작업 에는 모델 인스턴스가 필요하지 않을 수 있습니다. 이러한 상황에서는 &lt;code&gt;authorize&lt;/code&gt; 메서드에 클래스 이름을 전달해야합니다 . 클래스 이름은 작업을 승인 할 때 사용할 정책을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="793af089f394fd7d563f903682900b36be26e4d8" translate="yes" xml:space="preserve">
          <source>As previously documented, you may protect routes so that all incoming requests must be authenticated by attaching the &lt;code&gt;sanctum&lt;/code&gt; authentication guard to the routes. Typically, you will attach this guard to the routes defined within your &lt;code&gt;routes/api.php&lt;/code&gt; file:</source>
          <target state="translated">이전에 문서화 한 바와 같이 경로에 &lt;code&gt;sanctum&lt;/code&gt; 인증 가드를 연결하여 들어오는 모든 요청이 인증되도록 경로를 보호 할 수 있습니다 . 일반적으로 &lt;code&gt;routes/api.php&lt;/code&gt; 파일에 정의 된 경로에이 가드를 연결 합니다.</target>
        </trans-unit>
        <trans-unit id="c76e8a3058306699ffba4c8414be843b80d69a95" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &lt;code&gt;stack&lt;/code&gt; driver allows you to combine multiple channels into a single log channel. To illustrate how to use log stacks, let's take a look at an example configuration that you might see in a production application:</source>
          <target state="translated">앞에서 언급했듯이 &lt;code&gt;stack&lt;/code&gt; 드라이버를 사용하면 여러 채널을 단일 로그 채널로 결합 할 수 있습니다. 로그 스택을 사용하는 방법을 설명하기 위해 프로덕션 응용 프로그램에서 볼 수있는 구성 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="38cd07caa575c92c5d25268721e7e0a6d4cd7bb6" translate="yes" xml:space="preserve">
          <source>As shown above, a &quot;date picker&quot; is an example of a component that might exist throughout your application on a variety of pages. It can become cumbersome to manually write the browser automation logic to select a date in dozens of tests throughout your test suite. Instead, we can define a Dusk component to represent the date picker, allowing us to encapsulate that logic within the component:</source>
          <target state="translated">위에 표시된 것처럼 &quot;날짜 선택기&quot;는 응용 프로그램 전체에서 다양한 페이지에 존재할 수있는 구성 요소의 예입니다. 테스트 스위트 전체에서 수십 개의 테스트 날짜를 선택하기 위해 브라우저 자동화 로직을 수동으로 작성하는 것은 번거로울 수 있습니다. 대신 날짜 선택기를 나타내는 Dusk 구성 요소를 정의하여 구성 요소 내에 해당 논리를 캡슐화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e623d210f9677575c744c1648154ba09645e490" translate="yes" xml:space="preserve">
          <source>As this authorization grant does not provide a client secret, developers will need to generate a combination of a code verifier and a code challenge in order to request a token.</source>
          <target state="translated">이 권한 부여는 클라이언트 시크릿을 제공하지 않으므로 개발자는 토큰을 요청하기 위해 코드 검증기와 코드 챌린지의 조합을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5c66b10f07248c9e5ec084320d0b4eab81e9dac" translate="yes" xml:space="preserve">
          <source>As useful as this feature may be, it's possible that your existing folder structure is already configured in a way you like. If this is the case, you may disable &lt;code&gt;url()&lt;/code&gt; rewriting like so:</source>
          <target state="translated">이 기능이 유용 할 수 있으므로 기존 폴더 구조가 이미 원하는 방식으로 구성되어있을 수 있습니다. 이 경우 다음 과 같이 &lt;code&gt;url()&lt;/code&gt; 다시 쓰기를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="605e0078c7666a3cdf7c1b5c936fa8eec618bdf0" translate="yes" xml:space="preserve">
          <source>As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you would like, you may &quot;squash&quot; your migrations into a single SQL file. To get started, execute the &lt;code&gt;schema:dump&lt;/code&gt; command:</source>
          <target state="translated">애플리케이션을 빌드 할 때 시간이 지남에 따라 더 많은 마이그레이션이 누적 될 수 있습니다. 이로 인해 잠재적으로 수백 번의 마이그레이션으로 인해 마이그레이션 디렉토리가 비대해질 수 있습니다. 원하는 경우 마이그레이션을 단일 SQL 파일로 &quot;스쿼시&quot;할 수 있습니다. 시작하려면 &lt;code&gt;schema:dump&lt;/code&gt; 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb7ab32daa1a712aa9b4299a149c63f71a4da25a" translate="yes" xml:space="preserve">
          <source>As you build your application, you may accumulate more and more migrations over time. This can lead to your migration directory becoming bloated with potentially hundreds of migrations. If you're using MySQL or PostgreSQL, you may now &quot;squash&quot; your migrations into a single SQL file. To get started, execute the &lt;code&gt;schema:dump&lt;/code&gt; command:</source>
          <target state="translated">애플리케이션을 빌드 할 때 시간이 지남에 따라 더 많은 마이그레이션이 누적 될 수 있습니다. 이로 인해 잠재적으로 수백 번의 마이그레이션으로 인해 마이그레이션 디렉토리가 비대해질 수 있습니다. MySQL 또는 PostgreSQL을 사용하는 경우 이제 마이그레이션을 단일 SQL 파일로 &quot;스쿼시&quot;할 수 있습니다. 시작하려면 &lt;code&gt;schema:dump&lt;/code&gt; 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="461ecb39360a387cf0d0582574f806fda29f484d" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the &lt;code&gt;browse&lt;/code&gt; method accepts a callback. A browser instance will automatically be passed to this callback by Dusk and is the main object used to interact with and make assertions against your application.</source>
          <target state="translated">위의 예에서 볼 수 있듯이 &lt;code&gt;browse&lt;/code&gt; 메서드는 콜백을 허용합니다. 브라우저 인스턴스는 Dusk에 의해이 콜백으로 자동 전달되며 응용 프로그램과 상호 작용하고 어설 션을 만드는 데 사용되는 기본 개체입니다.</target>
        </trans-unit>
        <trans-unit id="017918c55e3ba82f4e5d2b9a7a47c1fa58b1081e" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the callback passed to the &lt;code&gt;extend&lt;/code&gt; method should return an implementation of &lt;code&gt;Illuminate\Contracts\Auth\Guard&lt;/code&gt;. This interface contains a few methods you will need to implement to define a custom guard. Once your custom guard has been defined, you may use this guard in the &lt;code&gt;guards&lt;/code&gt; configuration of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">위 예제에서 알 수 있듯이 &lt;code&gt;extend&lt;/code&gt; 메소드에 전달 된 콜백 은 &lt;code&gt;Illuminate\Contracts\Auth\Guard&lt;/code&gt; 의 구현을 반환해야합니다 . 이 인터페이스에는 사용자 지정 가드를 정의하기 위해 구현해야하는 몇 가지 방법이 포함되어 있습니다. 커스텀 가드가 정의되면 &lt;code&gt;auth.php&lt;/code&gt; 구성 파일 의 &lt;code&gt;guards&lt;/code&gt; 구성 에서이 가드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcfff39822c4f4e84b38fc8b81a6248d4373b76f" translate="yes" xml:space="preserve">
          <source>As you can see, an array of &lt;code&gt;@servers&lt;/code&gt; is defined at the top of the file, allowing you to reference these servers in the &lt;code&gt;on&lt;/code&gt; option of your task declarations. The &lt;code&gt;@servers&lt;/code&gt; declaration should always be placed on a single line. Within your &lt;code&gt;@task&lt;/code&gt; declarations, you should place the Bash code that should run on your server when the task is executed.</source>
          <target state="translated">보시다시피, &lt;code&gt;@servers&lt;/code&gt; 의 배열이 파일 상단에 정의되어 있으므로 작업 선언 의 &lt;code&gt;on&lt;/code&gt; 옵션 에서 이러한 서버를 참조 할 수 있습니다 . &lt;code&gt;@servers&lt;/code&gt; 의 선언은 항상 한 줄에 배치해야합니다. &lt;code&gt;@task&lt;/code&gt; 선언 내에 작업이 실행될 때 서버에서 실행되어야하는 Bash 코드를 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="41635a26ba069ccdddb4965faf42385813dfa4e6" translate="yes" xml:space="preserve">
          <source>As you can see, an array of &lt;code&gt;@servers&lt;/code&gt; is defined at the top of the file, allowing you to reference these servers in the &lt;code&gt;on&lt;/code&gt; option of your task declarations. Within your &lt;code&gt;@task&lt;/code&gt; declarations, you should place the Bash code that should run on your server when the task is executed.</source>
          <target state="translated">보시다시피, &lt;code&gt;@servers&lt;/code&gt; 배열이 파일 상단에 정의되어 작업 선언 의 &lt;code&gt;on&lt;/code&gt; 옵션 에서 이러한 서버를 참조 할 수 있습니다 . &lt;code&gt;@task&lt;/code&gt; 선언 내 에서 작업이 실행될 때 서버에서 실행되어야하는 Bash 코드를 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f8554e948d2ae4a10d670539ac56b0b908dca3a" translate="yes" xml:space="preserve">
          <source>As you can see, if the given &lt;code&gt;age&lt;/code&gt; is less than or equal to &lt;code&gt;200&lt;/code&gt;, the middleware will return an HTTP redirect to the client; otherwise, the request will be passed further into the application. To pass the request deeper into the application (allowing the middleware to &quot;pass&quot;), call the &lt;code&gt;$next&lt;/code&gt; callback with the &lt;code&gt;$request&lt;/code&gt;.</source>
          <target state="translated">보시다시피, 주어진 &lt;code&gt;age&lt;/code&gt; 이 &lt;code&gt;200&lt;/code&gt; 이하인 경우 미들웨어는 클라이언트로 HTTP 경로 재 지정을 리턴합니다. 그렇지 않으면 요청이 응용 프로그램으로 추가 전달됩니다. 미들웨어가 &quot;통과&quot;하도록 요청을 애플리케이션에 더 깊이 전달하려면 &lt;code&gt;$request&lt;/code&gt; &lt;code&gt;$next&lt;/code&gt; 콜백을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="efb01ea7eeee1f09cad71ce257bd7ddbda675355" translate="yes" xml:space="preserve">
          <source>As you can see, in their most basic form, factories are classes that extend Laravel's base factory class and define a &lt;code&gt;model&lt;/code&gt; property and &lt;code&gt;definition&lt;/code&gt; method. The &lt;code&gt;definition&lt;/code&gt; method returns the default set of attribute values that should be applied when creating a model using the factory.</source>
          <target state="translated">보시다시피 가장 기본적인 형태에서 팩토리는 라 라벨의 기본 팩토리 클래스를 확장하고 &lt;code&gt;model&lt;/code&gt; 속성과 &lt;code&gt;definition&lt;/code&gt; 메서드를 정의하는 클래스 입니다. &lt;code&gt;definition&lt;/code&gt; 방법은 팩토리를 사용하여 모델을 만들 때 적용 할 속성 값의 기본 집합을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a73bf820071b8e195e3864e911c7b78c179855b" translate="yes" xml:space="preserve">
          <source>As you can see, like &lt;a href=&quot;middleware&quot;&gt;route middleware&lt;/a&gt;, job middleware receive the job being processed and a callback that should be invoked to continue processing the job.</source>
          <target state="translated">보시다시피 &lt;a href=&quot;middleware&quot;&gt;route middleware&lt;/a&gt; 처럼 작업 미들웨어는 처리중인 작업과 작업 처리를 계속하기 위해 호출해야하는 콜백을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="3cf3e3151e041fc86eb160eee42370c96121a024" translate="yes" xml:space="preserve">
          <source>As you can see, passing a &lt;code&gt;Closure&lt;/code&gt; into the &lt;code&gt;where&lt;/code&gt; method instructs the query builder to begin a constraint group. The &lt;code&gt;Closure&lt;/code&gt; will receive a query builder instance which you can use to set the constraints that should be contained within the parenthesis group. The example above will produce the following SQL:</source>
          <target state="translated">보다시피 &lt;code&gt;where&lt;/code&gt; 메소드에 &lt;code&gt;Closure&lt;/code&gt; 를 전달 하면 쿼리 빌더가 제약 그룹을 시작하도록 지시합니다. &lt;code&gt;Closure&lt;/code&gt; 당신이 괄호 그룹에 포함되어야하는 제약 조건을 설정하는 데 사용할 수있는 쿼리 빌더 인스턴스를 받게됩니다. 위의 예는 다음 SQL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e8dd2f9436bb6e6e605d89ced8f012c668786e3f" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;Collection&lt;/code&gt; class allows you to chain its methods to perform fluent mapping and reducing of the underlying array. In general, collections are immutable, meaning every &lt;code&gt;Collection&lt;/code&gt; method returns an entirely new &lt;code&gt;Collection&lt;/code&gt; instance.</source>
          <target state="translated">보시다시피 &lt;code&gt;Collection&lt;/code&gt; 클래스를 사용하면 메서드를 연결하여 기본 배열의 유연한 매핑 및 축소를 수행 할 수 있습니다. 일반적으로 컬렉션은 변경할 수 없습니다. 즉, 모든 &lt;code&gt;Collection&lt;/code&gt; 메서드는 완전히 새로운 &lt;code&gt;Collection&lt;/code&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="5357d27d3d8d1396b2bbf006d4c4f72c0bac8c23" translate="yes" xml:space="preserve">
          <source>As you can see, the first argument passed to the &lt;code&gt;view&lt;/code&gt; helper corresponds to the name of the view file in the &lt;code&gt;resources/views&lt;/code&gt; directory. The second argument is an array of data that should be made available to the view. In this case, we are passing the &lt;code&gt;name&lt;/code&gt; variable, which is displayed in the view using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;.</source>
          <target state="translated">보다시피, &lt;code&gt;view&lt;/code&gt; 헬퍼에 전달 된 첫 번째 인수 는 &lt;code&gt;resources/views&lt;/code&gt; 디렉토리 의 뷰 파일 이름에 해당합니다 . 두 번째 인수는 뷰에서 사용할 수있는 데이터 배열입니다. 이 경우 &lt;a href=&quot;blade&quot;&gt;블레이드 구문을&lt;/a&gt; 사용하여 뷰에 표시되는 &lt;code&gt;name&lt;/code&gt; 변수를 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="884f85a0db30d3dc9b4e4ebd183a81963dec423d" translate="yes" xml:space="preserve">
          <source>As you can see, the object being resolved will be passed to the callback, allowing you to set any additional properties on the object before it is given to its consumer.</source>
          <target state="translated">보시다시피, 해결중인 객체는 콜백으로 전달되어 객체가 소비자에게 제공되기 전에 객체에 대한 추가 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f009023119db64e6ed30d4eee7c1f79469959f56" translate="yes" xml:space="preserve">
          <source>As you can see, the original value of the column is passed to the accessor, allowing you to manipulate and return the value. To access the value of the accessor, you may access the &lt;code&gt;first_name&lt;/code&gt; attribute on a model instance:</source>
          <target state="translated">보시다시피 열의 원래 값이 접근 자에게 전달되어 값을 조작하고 반환 할 수 있습니다. 접근 자의 값에 액세스하려면 모델 인스턴스 의 &lt;code&gt;first_name&lt;/code&gt; 속성에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="acff6853c7a663c9bd04fa87d502167650a0e4f7" translate="yes" xml:space="preserve">
          <source>As you can see, the relationship is defined exactly the same as its &lt;code&gt;User&lt;/code&gt; counterpart, with the exception of referencing the &lt;code&gt;App\Models\User&lt;/code&gt; model. Since we're reusing the &lt;code&gt;belongsToMany&lt;/code&gt; method, all of the usual table and key customization options are available when defining the inverse of many-to-many relationships.</source>
          <target state="translated">보시다시피 관계는 &lt;code&gt;App\Models\User&lt;/code&gt; 모델 을 참조하는 것을 제외 하고는 &lt;code&gt;User&lt;/code&gt; 상대 와 정확히 동일하게 정의됩니다 . &lt;code&gt;belongsToMany&lt;/code&gt; 메소드를 재사용하고 있으므로 다 대다 관계의 역을 정의 할 때 모든 일반적인 테이블 및 키 사용자 정의 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a1c1e3f2e6f8f1dd6837adcc256d7d80deafb73" translate="yes" xml:space="preserve">
          <source>As you can see, the relationship is defined exactly the same as its &lt;code&gt;User&lt;/code&gt; counterpart, with the exception of referencing the &lt;code&gt;App\User&lt;/code&gt; model. Since we're reusing the &lt;code&gt;belongsToMany&lt;/code&gt; method, all of the usual table and key customization options are available when defining the inverse of many-to-many relationships.</source>
          <target state="translated">보시다시피, 관계는 &lt;code&gt;App\User&lt;/code&gt; 모델 을 참조하는 것을 제외 하고는 &lt;code&gt;User&lt;/code&gt; 와 동일하게 정의됩니다 . &lt;code&gt;belongsToMany&lt;/code&gt; 메소드를 재사용하고 있기 때문에 , 다 대 다 관계의 역을 정의 할 때 모든 일반적인 테이블 및 키 사용자 정의 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72c166a419f06e385b3ce10c215eae795048a21f" translate="yes" xml:space="preserve">
          <source>As you can see, this event class contains no logic. It is a container for the &lt;code&gt;Order&lt;/code&gt; instance that was purchased. The &lt;code&gt;SerializesModels&lt;/code&gt; trait used by the event will gracefully serialize any Eloquent models if the event object is serialized using PHP's &lt;code&gt;serialize&lt;/code&gt; function.</source>
          <target state="translated">보시다시피이 이벤트 클래스에는 논리가 없습니다. 구매 한 &lt;code&gt;Order&lt;/code&gt; 인스턴스 의 컨테이너입니다 . &lt;code&gt;SerializesModels&lt;/code&gt; 이벤트 객체가 PHP의 사용 직렬화 된 경우 이벤트에 의해 사용 된 특성은 정상적으로 어떤 웅변 모델을 직렬화 할 &lt;code&gt;serialize&lt;/code&gt; 기능을.</target>
        </trans-unit>
        <trans-unit id="c5683a48d897119f71645ff1cb5e12ee4eab56f9" translate="yes" xml:space="preserve">
          <source>As you can see, this file contains typical HTML mark-up. However, take note of the &lt;code&gt;@section&lt;/code&gt; and &lt;code&gt;@yield&lt;/code&gt; directives. The &lt;code&gt;@section&lt;/code&gt; directive, as the name implies, defines a section of content, while the &lt;code&gt;@yield&lt;/code&gt; directive is used to display the contents of a given section.</source>
          <target state="translated">보다시피이 파일에는 일반적인 HTML 마크 업이 포함되어 있습니다. 그러나 &lt;code&gt;@section&lt;/code&gt; 및 &lt;code&gt;@yield&lt;/code&gt; 지시문에 유의하십시오 . &lt;code&gt;@section&lt;/code&gt; 의 이름이 의미하는 것처럼하면서 지시는, 내용의 절을 정의 &lt;code&gt;@yield&lt;/code&gt; 지시가 주어진 섹션의 내용을 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3ead9ed72883d0918ab47a662f9cb1d6101b3ae6" translate="yes" xml:space="preserve">
          <source>As you can see, we pass the desired validation rules into the &lt;code&gt;validate&lt;/code&gt; method. Again, if the validation fails, the proper response will automatically be generated. If the validation passes, our controller will continue executing normally.</source>
          <target state="translated">보시다시피 원하는 유효성 검사 규칙을 &lt;code&gt;validate&lt;/code&gt; 메서드에 전달합니다 . 유효성 검사가 실패하면 적절한 응답이 자동으로 생성됩니다. 유효성 검사가 통과하면 컨트롤러가 계속 정상적으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="049ad0eb8fe14b9d13f984d479eb6e4c3555c620" translate="yes" xml:space="preserve">
          <source>As you can see, we will chain the &lt;code&gt;format&lt;/code&gt; method onto whatever expression is passed into the directive. So, in this example, the final PHP generated by this directive will be:</source>
          <target state="translated">보시다시피 , 지시문에 전달 된 표현식에 &lt;code&gt;format&lt;/code&gt; 메소드를 연결합니다 . 따라서이 예제에서이 지시문에 의해 생성 된 최종 PHP는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1fc15343a23abef64a94fcc501b60d2fe19c5a84" translate="yes" xml:space="preserve">
          <source>As you have already learned, working with many-to-many relations requires the presence of an intermediate table. Eloquent provides some very helpful ways of interacting with this table. For example, let's assume our &lt;code&gt;User&lt;/code&gt; object has many &lt;code&gt;Role&lt;/code&gt; objects that it is related to. After accessing this relationship, we may access the intermediate table using the &lt;code&gt;pivot&lt;/code&gt; attribute on the models:</source>
          <target state="translated">이미 배운 것처럼 다 대다 관계를 사용하려면 중간 테이블이 있어야합니다. Eloquent는이 테이블과 상호 작용할 수있는 매우 유용한 방법을 제공합니다. 예를 들어, &lt;code&gt;User&lt;/code&gt; 객체 에 관련된 많은 &lt;code&gt;Role&lt;/code&gt; 객체가 있다고 가정 해 봅시다 . 이 관계에 액세스 한 후 모델 의 &lt;code&gt;pivot&lt;/code&gt; 속성을 사용하여 중간 테이블에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fc1402e1b6079206b56dbcdb39312ce2fead97e" translate="yes" xml:space="preserve">
          <source>As you have already read, resources may be returned directly from routes and controllers:</source>
          <target state="translated">이미 읽은 것처럼 라우트 및 컨트롤러에서 직접 리소스가 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3aa0f21644f0500963f5eceb953d7d58b02ec778" translate="yes" xml:space="preserve">
          <source>As you may know, Laravel offers &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;, another local Laravel development environment. Homestead and Valet differ in regards to their intended audience and their approach to local development. Homestead offers an entire Ubuntu virtual machine with automated Nginx configuration. Homestead is a wonderful choice if you want a fully virtualized Linux development environment or are on Windows / Linux.</source>
          <target state="translated">아시다시피, Laravel은 또 다른 로컬 Laravel 개발 환경 인 &lt;a href=&quot;homestead&quot;&gt;Homestead를&lt;/a&gt; 제공 합니다. 농가와 발레 파는 의도 한 청중과 지역 개발에 대한 접근 방식이 다릅니다. Homestead는 자동화 된 Nginx 구성을 갖춘 전체 Ubuntu 가상 머신을 제공합니다. 완전히 가상화 된 Linux 개발 환경을 원하거나 Windows / Linux에있는 경우 Homestead는 훌륭한 선택입니다.</target>
        </trans-unit>
        <trans-unit id="81218a9cd31de9f8af561025433c86a5485c370f" translate="yes" xml:space="preserve">
          <source>As you might expect, the view that is returned by this route should have a form containing a &lt;code&gt;password&lt;/code&gt; field. In addition, feel free to include text within the view that explains that the user is entering a protected area of the application and must confirm their password.</source>
          <target state="translated">예상 할 수 있듯이이 경로에서 반환되는보기에는 &lt;code&gt;password&lt;/code&gt; 필드가 포함 된 양식이 있어야 합니다. 또한 사용자가 응용 프로그램의 보호 영역에 들어가고 암호를 확인해야 함을 설명하는 텍스트를보기 내에 자유롭게 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad4d8311d8cb7d9d0cc59cdcc6360394efa94c56" translate="yes" xml:space="preserve">
          <source>As you saw in the previous examples, you may pass an array of data to views:</source>
          <target state="translated">이전 예제에서 보았 듯이 데이터 배열을 뷰에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4112daed47d2e42285c67e8f15cec42e0e419017" translate="yes" xml:space="preserve">
          <source>AsPivot</source>
          <target state="translated">AsPivot</target>
        </trans-unit>
        <trans-unit id="c5584a5df0cbb3750b37679129e4ebc80312744d" translate="yes" xml:space="preserve">
          <source>AsPivot (Database\Eloquent\Relations)</source>
          <target state="translated">AsPivot (데이터베이스 \ Eloquent \ Relations)</target>
        </trans-unit>
        <trans-unit id="d2bf9b2ade4d24c1f0aed3c25b0757ecfb492a34" translate="yes" xml:space="preserve">
          <source>AsPivot::delete()</source>
          <target state="translated">AsPivot::delete()</target>
        </trans-unit>
        <trans-unit id="1b464dd75af0d892e3aaefcc7339d6abf4821af8" translate="yes" xml:space="preserve">
          <source>AsPivot::fromAttributes()</source>
          <target state="translated">AsPivot::fromAttributes()</target>
        </trans-unit>
        <trans-unit id="831f9e7589e68bd619e7422f8b96b39a9b1f00dc" translate="yes" xml:space="preserve">
          <source>AsPivot::fromRawAttributes()</source>
          <target state="translated">AsPivot::fromRawAttributes()</target>
        </trans-unit>
        <trans-unit id="ba4c1a7da75a28fe6e3ee4a1897dd12808b719fe" translate="yes" xml:space="preserve">
          <source>AsPivot::getCreatedAtColumn()</source>
          <target state="translated">AsPivot::getCreatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="008a50ba443f2ca1eb38d1db2d2a305ab9f39f3f" translate="yes" xml:space="preserve">
          <source>AsPivot::getDeleteQuery()</source>
          <target state="translated">AsPivot::getDeleteQuery()</target>
        </trans-unit>
        <trans-unit id="bf6a76496237e93bab34a8e26727a2ede0865d25" translate="yes" xml:space="preserve">
          <source>AsPivot::getForeignKey()</source>
          <target state="translated">AsPivot::getForeignKey()</target>
        </trans-unit>
        <trans-unit id="32cbeae7043336b4e28c311560641d8cbee64d36" translate="yes" xml:space="preserve">
          <source>AsPivot::getOtherKey()</source>
          <target state="translated">AsPivot::getOtherKey()</target>
        </trans-unit>
        <trans-unit id="87a7274a9b6c96a7529dc569ab323ee667f5a285" translate="yes" xml:space="preserve">
          <source>AsPivot::getQueueableId()</source>
          <target state="translated">AsPivot::getQueueableId()</target>
        </trans-unit>
        <trans-unit id="9e62d199893487c03702d492a60ecdc7934fc091" translate="yes" xml:space="preserve">
          <source>AsPivot::getRelatedKey()</source>
          <target state="translated">AsPivot::getRelatedKey()</target>
        </trans-unit>
        <trans-unit id="65f1ddb6bd578968eb517205fffb27028a8c6f44" translate="yes" xml:space="preserve">
          <source>AsPivot::getTable()</source>
          <target state="translated">AsPivot::getTable()</target>
        </trans-unit>
        <trans-unit id="8aa67aede09f6435334093f8ab47110742b4408e" translate="yes" xml:space="preserve">
          <source>AsPivot::getUpdatedAtColumn()</source>
          <target state="translated">AsPivot::getUpdatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="dc273ed3b7a9855469e0899ce59269bafb32b088" translate="yes" xml:space="preserve">
          <source>AsPivot::hasTimestampAttributes()</source>
          <target state="translated">AsPivot::hasTimestampAttributes()</target>
        </trans-unit>
        <trans-unit id="693ed8fa7256bb62d731f4e8f86095fc7fd63147" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForCollectionRestoration()</source>
          <target state="translated">AsPivot::newQueryForCollectionRestoration()</target>
        </trans-unit>
        <trans-unit id="6f759931305065503fb8d66c5e7a6bfe4542864d" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForRestoration()</source>
          <target state="translated">AsPivot::newQueryForRestoration()</target>
        </trans-unit>
        <trans-unit id="344c94afffa4be8e508b7f2cfe5e2da44fdaaa92" translate="yes" xml:space="preserve">
          <source>AsPivot::setKeysForSaveQuery()</source>
          <target state="translated">AsPivot::setKeysForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="8f0646e0d93123a0a342d1ecb7b789ea1a4fdaf4" translate="yes" xml:space="preserve">
          <source>AsPivot::setKeysForSelectQuery()</source>
          <target state="translated">AsPivot::setKeysForSelectQuery()</target>
        </trans-unit>
        <trans-unit id="43b0306882592104359a0c724826f018b5262483" translate="yes" xml:space="preserve">
          <source>AsPivot::setPivotKeys()</source>
          <target state="translated">AsPivot::setPivotKeys()</target>
        </trans-unit>
        <trans-unit id="03d822004a40cffb654d795e0fe23919d28e386c" translate="yes" xml:space="preserve">
          <source>AsPivot::unsetRelations()</source>
          <target state="translated">AsPivot::unsetRelations()</target>
        </trans-unit>
        <trans-unit id="4ca26d958914bcd4f93538017dc99c2508483e7b" translate="yes" xml:space="preserve">
          <source>Asking For Confirmation</source>
          <target state="translated">확인 요청</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="0956d2d27a603a628c7c56dda24c6e23ed9d58bb" translate="yes" xml:space="preserve">
          <source>Assert (Testing)</source>
          <target state="translated">Assert (테스트)</target>
        </trans-unit>
        <trans-unit id="15cd1c45e6ecc8d3758794753764f1784b212b47" translate="yes" xml:space="preserve">
          <source>Assert how many requests have been recorded.</source>
          <target state="translated">기록 된 요청 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="6656d3f3c1547dd16855219b84066b17da842c87" translate="yes" xml:space="preserve">
          <source>Assert if a batch was dispatched based on a truth-test callback.</source>
          <target state="translated">진실 테스트 콜백을 기반으로 배치가 발송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d0aed7b31da7174c1eadf2beb6ff59ea15f7ba1" translate="yes" xml:space="preserve">
          <source>Assert if a event was dispatched a number of times.</source>
          <target state="translated">이벤트가 여러 번 발송되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7ee93d2adb126a5a89c0d01a3eadd6b581774193" translate="yes" xml:space="preserve">
          <source>Assert if a job was dispatched after the response was sent based on a truth-test callback.</source>
          <target state="translated">진실 테스트 콜백을 기반으로 응답을 보낸 후 작업이 발송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4a79c4a356aae3eccc148427d289f366a05d6fc3" translate="yes" xml:space="preserve">
          <source>Assert if a job was dispatched based on a truth-test callback.</source>
          <target state="translated">실제 테스트 콜백을 기반으로 작업이 발송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9d69ae68c13753b754da05f71a5d515579a6126f" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed a number of times.</source>
          <target state="translated">작업이 여러 번 푸시되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="46ba85108681637660c121ebc6804e45f84fccf7" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed after the response was sent a number of times.</source>
          <target state="translated">응답을 여러 번 보낸 후 작업이 푸시되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ca7d7ea3983f77b7b73480e2c0ffef4ab09b9336" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed based on a truth-test callback.</source>
          <target state="translated">실제 테스트 콜백을 기반으로 작업이 푸시되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a8eba8d91ab6cbc249391e49293721f4eb487fec" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed with an empty chain based on a truth-test callback.</source>
          <target state="translated">진실 테스트 콜백을 기반으로 빈 체인으로 작업이 푸시되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9c0a80fa419fbf4e257242f82867651a26ffda61" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed with chained jobs based on a truth-test callback.</source>
          <target state="translated">실제 테스트 콜백을 기반으로 체인 작업으로 작업이 푸시되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bb6827902ec6d42610792110df12cdaff3f3c2f8" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued a number of times.</source>
          <target state="translated">메일 가능 항목이 여러 번 대기열에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="00f6eafbd088004c577184ac65b11a0bdf01a875" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued based on a truth-test callback.</source>
          <target state="translated">실제 테스트 콜백을 기반으로 메일 러블이 대기열에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cbf4a336b7289ea144e4fc6d9923eb2138105062" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent a number of times.</source>
          <target state="translated">우편물이 여러 번 발송되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="03df0f43d048755c441f63c46cc0e0555143e07a" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent based on a truth-test callback.</source>
          <target state="translated">실제 테스트 콜백을 기반으로 메일 러블이 전송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5745760224dfe0b4e7c730ec10bd16c75479db0e" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent a number of times.</source>
          <target state="translated">알림이 여러 번 전송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7c88283ed0c980b9f8761dfee23223eedf712baf" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent based on a truth-test callback.</source>
          <target state="translated">사실 테스트 콜백을 기반으로 알림이 전송되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ebafa56ab5d93a1f699590a3db89ced37296b50c" translate="yes" xml:space="preserve">
          <source>Assert if an event was dispatched a number of times.</source>
          <target state="translated">이벤트가 여러 번 전달되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a7ce459c712d55f649e9041b89fb300c8b782852" translate="yes" xml:space="preserve">
          <source>Assert if an event was dispatched based on a truth-test callback.</source>
          <target state="translated">사실 테스트 콜백을 기반으로 이벤트가 전달되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="409352841bc9635c3959e9348e017b11557e32a0" translate="yes" xml:space="preserve">
          <source>Assert that a JavaScript dialog with the given message has been opened:</source>
          <target state="translated">주어진 메시지가있는 JavaScript 대화 상자가 열려 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="15d92fde31c3fd8a914a5ed1130bcbe994babf9c" translate="yes" xml:space="preserve">
          <source>Assert that a cookie has a given value:</source>
          <target state="translated">쿠키에 주어진 값이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="4180fbf8f421b42f4f64dab2e7acf35b12dce89e" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property does not match the given value:</source>
          <target state="translated">지정된 Vue 구성 요소 데이터 특성이 지정된 값과 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d2f315c33e142474c2a4405f93487305fb0638a1" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and contains the given value:</source>
          <target state="translated">주어진 Vue 컴포넌트 데이터 속성이 배열이고 주어진 값을 포함한다고 가정합니다 :</target>
        </trans-unit>
        <trans-unit id="b1a8892ba541919b274196e30add5638c3a9d4b6" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and does not contain the given value:</source>
          <target state="translated">주어진 Vue 구성 요소 데이터 속성이 배열이고 주어진 값을 포함하지 않는다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="19a9653fed3aefec51c07a60734ef08bf9f77626" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property matches the given value:</source>
          <target state="translated">주어진 Vue 구성 요소 데이터 특성이 주어진 값과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="071b262c0a157a44a9ae4a021c40447a2f34cf29" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition does not exist in the database.</source>
          <target state="translated">주어진 위치 조건이 데이터베이스에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b608dd8d56a5d61e5a2f24ffdefec5feab556dc1" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition exists in the database.</source>
          <target state="translated">주어진 위치 조건이 데이터베이스에 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3e8cb15559cd4db695c493720defea550543e087" translate="yes" xml:space="preserve">
          <source>Assert that a request / response pair was not recorded matching a given truth test.</source>
          <target state="translated">요청 / 응답 쌍이 주어진 진실 테스트와 일치하는 것으로 기록되지 않았 음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a541aab068510fc0bbb5baa68cb79b7741476a3" translate="yes" xml:space="preserve">
          <source>Assert that a request / response pair was recorded matching a given truth test.</source>
          <target state="translated">요청 / 응답 쌍이 주어진 진실 테스트와 일치하는 것으로 기록되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9e550ee55e4680d47aca89e3bfe103956dab15d2" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database contains the given amount of entries.</source>
          <target state="translated">데이터베이스의 테이블에 주어진 양의 항목이 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4346e04c62fa485f9eb63ca0ab9ef96c700dc201" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database contains the given data.</source>
          <target state="translated">데이터베이스의 테이블에 주어진 데이터가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="475bc14906a24b0717dde8464ed94208fa9f5ddc" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database does not contain the given data.</source>
          <target state="translated">데이터베이스의 테이블에 지정된 데이터가 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="50472bf80896129422ebd8f26db5fb6385280fd4" translate="yes" xml:space="preserve">
          <source>Assert that an encrypted cookie has a given value:</source>
          <target state="translated">암호화 된 쿠키에 주어진 값이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="316221d4ecf8305705d9ad7fe97531700cc47120" translate="yes" xml:space="preserve">
          <source>Assert that an unencrypted cookie has a given value:</source>
          <target state="translated">암호화되지 않은 쿠키에 주어진 값이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="28401c105b5e8bfe2450974cfa646f7fedbd1f09" translate="yes" xml:space="preserve">
          <source>Assert that every created response sequence is empty.</source>
          <target state="translated">생성 된 모든 응답 시퀀스가 ​​비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="695dc8771a30e822ee73091defad22b8f8b84429" translate="yes" xml:space="preserve">
          <source>Assert that no jobs were pushed.</source>
          <target state="translated">어떤 일자리도 밀리지 않았다고 주장한다.</target>
        </trans-unit>
        <trans-unit id="fe38ab8929167784be20b406aa1cce183ec270d5" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were queued.</source>
          <target state="translated">메일 링이 대기되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d060f2ba48b8bbe827e9c660cbbb8d336f81fdce" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were sent.</source>
          <target state="translated">우편물이 발송되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="25e05f8a8abc0401443456beb6f0822e1e32c8a9" translate="yes" xml:space="preserve">
          <source>Assert that no notifications were sent.</source>
          <target state="translated">알림이 전송되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3f6a469a0e90d601709f3ea57e8aba1e889b5de7" translate="yes" xml:space="preserve">
          <source>Assert that no request / response pair was recorded.</source>
          <target state="translated">요청 / 응답 쌍이 기록되지 않았 음을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b9c91682351dcca3e0f0a6f44ed269e9697c86ff" translate="yes" xml:space="preserve">
          <source>Assert that the command has the given exit code.</source>
          <target state="translated">명령에 지정된 종료 코드가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c3e708a6075025948858b69893fa640ed8206cfb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL (without the query string) matches the given string:</source>
          <target state="translated">쿼리 문자열이없는 현재 URL이 주어진 문자열과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="271ae967f40595136a950244a9103433ceab72ef" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host does not match the given host:</source>
          <target state="translated">현재 URL 호스트가 지정된 호스트와 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f0a0a284e9e0b46bd22c45f70a90b5457b48d873" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host matches the given host:</source>
          <target state="translated">현재 URL 호스트가 지정된 호스트와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8f843d9c0eae898e8311c53609a6896d1734f426" translate="yes" xml:space="preserve">
          <source>Assert that the current URL matches the given named route's URL:</source>
          <target state="translated">현재 URL이 지정된 명명 된 경로의 URL과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="15cfc4eb28c4d5e88d09ac1d6b0987be16a2303e" translate="yes" xml:space="preserve">
          <source>Assert that the current URL path begins with the given path:</source>
          <target state="translated">현재 URL 경로가 주어진 경로로 시작한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="b120829e77cfa0fc5952451c690a8b937ceac3bb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port does not match the given port:</source>
          <target state="translated">현재 URL 포트가 지정된 포트와 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3df3d981c8545c99f98d5bb89433bd8c30fa749f" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port matches the given port:</source>
          <target state="translated">현재 URL 포트가 지정된 포트와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a08d74855853249df0318da947387d2a620acfbc" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme does not match the given scheme:</source>
          <target state="translated">현재 URL 체계가 주어진 체계와 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e1af04d5f77ee2561f5c99269475d22d46be4796" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme matches the given scheme:</source>
          <target state="translated">현재 URL 체계가 주어진 체계와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ab0390737b8240c6c74c1a6ccf964f58ac49c0b8" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment begins with the given fragment:</source>
          <target state="translated">현재 조각이 주어진 조각으로 시작한다고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="58ff1c6bdf061d1d6b07771390030e27840ae9f1" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment does not match the given fragment:</source>
          <target state="translated">현재 조각이 주어진 조각과 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9fa51cb9e065b3bcac49c2a1804c18a3218890a4" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment matches the given fragment:</source>
          <target state="translated">현재 조각이 주어진 조각과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2b9c2a0cd4b788f4a3d1faa9d9539ed51f290986" translate="yes" xml:space="preserve">
          <source>Assert that the current location header matches the given URI.</source>
          <target state="translated">현재 위치 헤더가 지정된 URI와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="165bacd63c22b76e7fd512e0946e8926b1b78269" translate="yes" xml:space="preserve">
          <source>Assert that the current path does not match the given path:</source>
          <target state="translated">현재 경로가 주어진 경로와 일치하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b562ac8e0babaeef56680b153855c816e6fb61fc" translate="yes" xml:space="preserve">
          <source>Assert that the current path matches the given path:</source>
          <target state="translated">현재 경로가 주어진 경로와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="98821f466f13e327ded567e5d98ca7b4994159fa" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided aria attribute:</source>
          <target state="translated">주어진 선택자와 일치하는 요소가 제공된 aria 속성에 주어진 값을 가지고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a9851639630d652f7fe38e7de63f35c2963d0839" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided attribute:</source>
          <target state="translated">주어진 선택자와 일치하는 요소가 제공된 속성에 주어진 값을 가지고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6946d587c8e6a69335a7c38dd2305bed893fe1f7" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value in the provided data attribute:</source>
          <target state="translated">주어진 선택자와 일치하는 요소가 제공된 데이터 속성에 주어진 값을 가지고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e88d6dfe4a6357e417726cd941cd7190b587224a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value:</source>
          <target state="translated">주어진 선택기와 일치하는 요소에 주어진 값이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="abf02121baef70e0f7ee03bbd959617c6953e16a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is not visible:</source>
          <target state="translated">주어진 셀렉터와 일치하는 요소가 보이지 않는지 확인하십시오 :</target>
        </trans-unit>
        <trans-unit id="df2eda525f43475a28f1057296319879d5584984" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is present:</source>
          <target state="translated">주어진 선택기와 일치하는 요소가 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="81b17862cc48a0faa56bdd85c4a2d235f6da5e21" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is visible:</source>
          <target state="translated">주어진 선택자와 일치하는 요소가 표시되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2c55ddb9e154910dd0305cf1085eb324179c9aba" translate="yes" xml:space="preserve">
          <source>Assert that the expected value and type exists at the given path in the response.</source>
          <target state="translated">예상 값과 유형이 응답의 지정된 경로에 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8a61d770a6510f86016fb95925fc199974368976" translate="yes" xml:space="preserve">
          <source>Assert that the given JavaScript expression evaluates to the given value:</source>
          <target state="translated">주어진 JavaScript 표현식이 주어진 값으로 평가되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5bbe5b40f24ba0470b7a60978bd743803c306f19" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are available to be selected:</source>
          <target state="translated">주어진 값의 배열을 선택할 수 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="b2bd97429e78ea18855645de1148986208b1b1c6" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are not available to be selected:</source>
          <target state="translated">주어진 값의 배열을 선택할 수 없다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="fe80fec5dc083a5319d9e6a48428f569c23bde26" translate="yes" xml:space="preserve">
          <source>Assert that the given button is disabled:</source>
          <target state="translated">주어진 버튼이 비활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b75ab97db553802e678fad692cb163cd8902aeda" translate="yes" xml:space="preserve">
          <source>Assert that the given button is enabled:</source>
          <target state="translated">주어진 버튼이 활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8fed60164c98d0550fed8025cd3a31aae0f6558c" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is checked:</source>
          <target state="translated">주어진 확인란이 선택되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="923f1eea164ba5600119f7bc32642bf8764eb2b7" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is not checked:</source>
          <target state="translated">주어진 확인란이 선택되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a0323b39d464d185b7e088ec5547bb349bf544c1" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is not present:</source>
          <target state="translated">주어진 쿠키가 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="73e393a4c97942e3343abf109440f4af0933dc15" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is present:</source>
          <target state="translated">주어진 쿠키가 존재하는지 확인하십시오 :</target>
        </trans-unit>
        <trans-unit id="db55b3e73673a3347e684b17fcc78ddfc8c5ce84" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are invalid.</source>
          <target state="translated">주어진 자격 증명이 유효하지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0cacc22587178a7de3d2ebb1191d921d75550add" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are valid.</source>
          <target state="translated">주어진 자격 증명이 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7c1e150ef05941dd101849606e63da1fe167fed3" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown does not have the given value selected:</source>
          <target state="translated">지정된 드롭 다운에 지정된 값이 선택되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c605ef5048b7569a8d12d5c8649f2b88ff96d202" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown has the given value selected:</source>
          <target state="translated">주어진 드롭 다운에 주어진 값이 선택되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3467169c52cf40060e57b1da02a194cb56ec8b7f" translate="yes" xml:space="preserve">
          <source>Assert that the given encrypted cookie is not present:</source>
          <target state="translated">주어진 암호화 된 쿠키가 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="559d3ce90ec760f307cbcd6040c7db20e4775c3d" translate="yes" xml:space="preserve">
          <source>Assert that the given encrypted cookie is present:</source>
          <target state="translated">주어진 암호화 된 쿠키가 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5f83ace0ab97eccfe0fdd7c189f4a6f6e4125b1b" translate="yes" xml:space="preserve">
          <source>Assert that the given field is disabled:</source>
          <target state="translated">주어진 필드가 비활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a49bf226c6ab9963077a750d5b1a4155340a5348" translate="yes" xml:space="preserve">
          <source>Assert that the given field is enabled:</source>
          <target state="translated">주어진 필드가 활성화되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="36406d3eb54904ef57eb42d8e54ff043424c90dc" translate="yes" xml:space="preserve">
          <source>Assert that the given field is focused:</source>
          <target state="translated">주어진 필드에 초점이 맞춰 졌는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="578e59309695a103e96fe39b8682cd0afaf6389d" translate="yes" xml:space="preserve">
          <source>Assert that the given field is not focused:</source>
          <target state="translated">주어진 필드에 초점을 맞추지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="661f0eeb91633bafb5ab08e452edfb2448869b81" translate="yes" xml:space="preserve">
          <source>Assert that the given file does not exist.</source>
          <target state="translated">주어진 파일이 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="eb71de38de0282bbcac3ba5717d3671a48b535e9" translate="yes" xml:space="preserve">
          <source>Assert that the given file exists.</source>
          <target state="translated">주어진 파일이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="14dc81f93c8ce40fd7bc99d6008e3ffa1c2f98de" translate="yes" xml:space="preserve">
          <source>Assert that the given header is not present on the response:</source>
          <target state="translated">주어진 헤더가 응답에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="33ae94b90dbac3de8450d8fc3451a459de497fda" translate="yes" xml:space="preserve">
          <source>Assert that the given header is present on the response:</source>
          <target state="translated">주어진 헤더가 응답에 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6ce9b994bdf44875165b569384068143117e3fe8" translate="yes" xml:space="preserve">
          <source>Assert that the given input field does not have the given value:</source>
          <target state="translated">주어진 입력 필드에 주어진 값이 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82276f7b4b3f6f3d6e1c962eb97b1adc8eb40839" translate="yes" xml:space="preserve">
          <source>Assert that the given input field has the given value:</source>
          <target state="translated">주어진 입력 필드에 주어진 값이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="da379006873cce2f90962d7974f2ccbf18797713" translate="yes" xml:space="preserve">
          <source>Assert that the given link is not present on the page:</source>
          <target state="translated">주어진 링크가 페이지에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d524d1662c7a0d13e86a350f4f2b72080d33ee78" translate="yes" xml:space="preserve">
          <source>Assert that the given link is present on the page:</source>
          <target state="translated">주어진 링크가 페이지에 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="a0fbcfe673f80cd322a938a1b025befe842241b7" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is missing:</source>
          <target state="translated">주어진 쿼리 문자열 매개 변수가 누락되었음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3e315c57dc764079ba4ed8ed8e1657efff3695d2" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present and has a given value:</source>
          <target state="translated">주어진 쿼리 문자열 매개 변수가 존재하며 주어진 값을 가지고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="37b92d423a6cb385f767ea510ae80fd01d4edb37" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present:</source>
          <target state="translated">주어진 쿼리 문자열 매개 변수가 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="10ed870ed63340f20c20cc2a3954ce99291d8ff8" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is not selected:</source>
          <target state="translated">주어진 라디오 필드가 선택되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="22efd9a08ae8716f0188efdac5f77836406466b0" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is selected:</source>
          <target state="translated">주어진 라디오 필드가 선택되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ac00db034fcb979114a51a19f595ee5c8904db23" translate="yes" xml:space="preserve">
          <source>Assert that the given record has been deleted.</source>
          <target state="translated">주어진 레코드가 삭제되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="587f4756d7df5d84ff4571f575ed1243590892d0" translate="yes" xml:space="preserve">
          <source>Assert that the given record has been soft deleted.</source>
          <target state="translated">주어진 레코드가 소프트 삭제되었다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="a1bf76028f9ad9ee3bfbbb82c082bbb4c52163bc" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is not present on the page:</source>
          <target state="translated">주어진 소스 코드가 페이지에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7447609879485837aed1921425e811cd0c5eeca1" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is present on the page:</source>
          <target state="translated">주어진 소스 코드가 페이지에 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="11b784daf14679319fa0629befac15963561c145" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text.</source>
          <target state="translated">주어진 문자열이 응답 텍스트 내에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4e5630b7fb98bc7223673affdb3d71c1c6140ff5" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답 텍스트에 포함되어 있는지 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 주어진 문자열을 자동으로 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="5126e694ec9d4431ce1d61a268fdf5d8bdfb0b7f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text:</source>
          <target state="translated">주어진 문자열이 응답 텍스트에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="870378821de0399751cd0b035872783a61acde0b" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response.</source>
          <target state="translated">주어진 문자열이 응답 내에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="42ede360d56ac5e134ae2a12b39862b52f9312b5" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답에 포함되어 있는지 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 주어진 문자열을 자동으로 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="69af5666288bab079b5efb4825bbd20b271c722f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response:</source>
          <target state="translated">주어진 문자열이 응답 내에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a9ea6d50a8e7fbf4ca77d3dcffbb32073cbaedec" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the view text.</source>
          <target state="translated">주어진 문자열이보기 텍스트 내에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="eb102c3e02e23e8e599a0cc639841eca86dc2127" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the view.</source>
          <target state="translated">주어진 문자열이 뷰 내에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a77e4b5161b50a1b26d3bb40f8e71affac2d5d1d" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text.</source>
          <target state="translated">주어진 문자열이 응답 텍스트에 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b78a64f31c15c9ca0614b559f9a2a345fc5433f6" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답 텍스트에 포함되어 있지 않음을 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 주어진 문자열을 자동으로 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="4dccde5b44670b3732b03dcdfb35cb109d64b286" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text:</source>
          <target state="translated">주어진 문자열이 응답 텍스트에 포함되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="36442623d3335257c0fa3bbdbbdab5dfb3a7b58f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response.</source>
          <target state="translated">주어진 문자열이 응답 내에 포함되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="98bc724cc020dab70b210f5b6d18f2ecf701f084" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response. This assertion will automatically escape the given string unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답에 포함되지 않았 음을 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 주어진 문자열을 자동으로 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="eb46d069dd86ae627726c0d78da3b4964530f740" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response:</source>
          <target state="translated">주어진 문자열이 응답 내에 포함되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e06f19b2e8d1d822cffa6c6c6ad349afc4d872a8" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the view text.</source>
          <target state="translated">주어진 문자열이보기 텍스트에 포함되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="45367370276aba2b75dc43bdb14e60b16d7435de" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the view.</source>
          <target state="translated">주어진 문자열이 뷰에 포함되어 있지 않음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1d6e9ba206d8308c9fb72887b20c5d19b5a682dc" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are contained within the response text.</source>
          <target state="translated">주어진 문자열 또는 문자열 배열이 응답 텍스트에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c4abcbe6869e865c508c59832967c26b717d333e" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are contained within the response.</source>
          <target state="translated">주어진 문자열 또는 문자열 배열이 응답 내에 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="61042c8e24f07afbc9597a987359b4f7ba7a768c" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are not contained within the response text.</source>
          <target state="translated">주어진 문자열 또는 문자열 배열이 응답 텍스트에 포함되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bdf1b08983c7a6db60e168f3e7efc60c3cdde965" translate="yes" xml:space="preserve">
          <source>Assert that the given string or array of strings are not contained within the response.</source>
          <target state="translated">주어진 문자열 또는 문자열 배열이 응답에 포함되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0151d47b3fbe7c8cc06de922a768c272c8284920" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text.</source>
          <target state="translated">주어진 문자열이 응답 텍스트 내에 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5800d0006a4ad2a5fdf26f0310d37d1a66bede6f" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text. This assertion will automatically escape the given strings unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답 텍스트 내에 순서대로 포함되어 있는지 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 자동으로 주어진 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="84adff71eae2f4d8842da16f6fc05497a41df845" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text:</source>
          <target state="translated">주어진 문자열이 응답 텍스트 내에 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a2459c6345a5fb75460fa8d43b1a516bb783e14f" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response.</source>
          <target state="translated">주어진 문자열이 응답 내에 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7332f6c44a9e432da84bdc5e4294a4d94e922bf8" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response. This assertion will automatically escape the given strings unless you pass a second argument of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">주어진 문자열이 응답 내에 순서대로 포함되어 있는지 확인하십시오. 이 주장은 &lt;code&gt;false&lt;/code&gt; 의 두 번째 인수를 전달하지 않는 한 자동으로 주어진 문자열을 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="a52f3773479db77a2733677b1a6dfcf5ffe8c47b" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response:</source>
          <target state="translated">주어진 문자열이 응답 내에 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1f74ade5784fc4463452a338fa2cb09a0c389182" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the view text.</source>
          <target state="translated">주어진 문자열이보기 텍스트 내에 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="52eec0e5383cd029efecd9d4f165dcd05326e089" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the view.</source>
          <target state="translated">주어진 문자열이 뷰 내에서 순서대로 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f829b9f0b58caacf66aee28304bf5f0480cc021c" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present on the page:</source>
          <target state="translated">주어진 텍스트가 페이지에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="457b2039596e2a1666ed4ed3ac0445923051c50a" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present within the selector:</source>
          <target state="translated">주어진 텍스트가 선택자 내에 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ecb9e736900897d23c6bcd0f13976788759162c9" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present on the page:</source>
          <target state="translated">주어진 텍스트가 페이지에 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="97a84c5c3c8d82919b16643973b60325f69626a1" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present within the selector:</source>
          <target state="translated">주어진 텍스트가 선택자 내에 존재한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="2f92f69d64516e3a80d7c7ccbfea867618d6394c" translate="yes" xml:space="preserve">
          <source>Assert that the given unencrypted cookie is not present:</source>
          <target state="translated">주어진 암호화되지 않은 쿠키가 존재하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fb92a74b35f5fc3ad52edd343755bcc05eb96a68" translate="yes" xml:space="preserve">
          <source>Assert that the given unencrypted cookie is present:</source>
          <target state="translated">주어진 암호화되지 않은 쿠키가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fec119a153a09720647a32f79413c7bc9d915f0a" translate="yes" xml:space="preserve">
          <source>Assert that the given user is authenticated.</source>
          <target state="translated">주어진 사용자가 인증되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dabd2cffa8146a072bc2219ff59eb38c875d4afe" translate="yes" xml:space="preserve">
          <source>Assert that the given value is available to be selected on the given field:</source>
          <target state="translated">주어진 필드에서 주어진 값을 선택할 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ca255932b64a7652738f93517bb196c75087a0d2" translate="yes" xml:space="preserve">
          <source>Assert that the given value is not available to be selected:</source>
          <target state="translated">주어진 값을 선택할 수 없음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8e6d9b3225c85cf7178c8c0de6964c93295ade55" translate="yes" xml:space="preserve">
          <source>Assert that the given view was returned by the route:</source>
          <target state="translated">주어진 뷰가 라우트에 의해 리턴되었다고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="83dd02b82b525798b628cd338739a10ddc9d9811" translate="yes" xml:space="preserve">
          <source>Assert that the page title contains the given text:</source>
          <target state="translated">페이지 제목에 지정된 텍스트가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="801dd7b43fa21f9d34ad9c245ac74ded6b474b66" translate="yes" xml:space="preserve">
          <source>Assert that the page title matches the given text:</source>
          <target state="translated">페이지 제목이 주어진 텍스트와 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e44cfe9adcf7852f44ba13db26e2c08f2eed062d" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has an array with the expected number of items at the given key:</source>
          <target state="translated">응답 JSON에 주어진 키에 예상되는 항목 수를 가진 배열이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="b2a862ffa8b71005ae3bb3cc7d851830a625e4ce" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has the expected count of items at the given key.</source>
          <target state="translated">응답 JSON이 주어진 키에서 예상되는 항목 수를 가지고 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="5336a84fbf25e2021a0d232e35667ad4602870ff" translate="yes" xml:space="preserve">
          <source>Assert that the response contains an exact match of the given JSON data:</source>
          <target state="translated">응답에 제공된 JSON 데이터와 정확히 일치하는 내용이 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3ce919b2fba751c319e92267be1bf1146331afa3" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON data:</source>
          <target state="translated">응답에 제공된 JSON 데이터가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="63ae7215c96cb21a1ea5f4bbed4b14cf985533e1" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment.</source>
          <target state="translated">응답에 지정된 JSON 조각이 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5e7ab113412d7b4d95863059f14433437497b5f7" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment:</source>
          <target state="translated">응답에 제공된 JSON 조각이 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8815c98fc42f4ce5db81e308ae98b541e1305bb8" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie (unencrypted):</source>
          <target state="translated">응답에 주어진 쿠키 (암호화되지 않은)가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="59255e887278683b783a9c36b6643a3508b6e7b0" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is expired:</source>
          <target state="translated">응답에 주어진 쿠키가 포함되어 있고 만료되었다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="355033414607c817639f72722e02a5b135da1ee4" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is not expired:</source>
          <target state="translated">응답에 제공된 쿠키가 포함되어 있고 만료되지 않았 음을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6560c446738409b66cdc2b19415dda7cfc650882" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie:</source>
          <target state="translated">응답에 주어진 쿠키가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="10603ec329f0aba21adea9b8b3ed5b79cc40aa71" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given data at the specified path:</source>
          <target state="translated">응답에 지정된 경로에 지정된 데이터가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="65167dd0c83227dacb49ba134cca5727dc355c27" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment.</source>
          <target state="translated">응답에 정확한 JSON 조각이 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="018c41907b7be1b4874913a221b906d8e4af16e1" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment:</source>
          <target state="translated">응답에 정확한 JSON 조각이 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="024a7efa350d568090d95b586a7eee9cc42d5938" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment.</source>
          <target state="translated">응답에 지정된 JSON 조각이 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0aaf3de68b02ae7ad3794735fab972723feaa9bb" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment:</source>
          <target state="translated">응답에 지정된 JSON 조각이 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c73ec795b1960308889b5daac2dfcfdf4034ba1b" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contains the given cookie:</source>
          <target state="translated">응답에 지정된 쿠키가 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="de8459b45e1b8121652a36527b8234db32fe19ed" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code.</source>
          <target state="translated">응답에 200 상태 코드가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="022d6dcca83ed6e8546f9e9b97185dda84ecb898" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code:</source>
          <target state="translated">응답에 200 상태 코드가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="8c9593a07283726de3907d11c87d20fd86922170" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 201 status code.</source>
          <target state="translated">응답에 201 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e8c63a1d371b33cb97170e1980388e21957b8154" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 201 status code:</source>
          <target state="translated">응답에 201 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="366552bc60e795895f5967d46c6289203a8c95af" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden (403) status code:</source>
          <target state="translated">응답에 금지 (403) 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2d6023bfac0349e42ea8773a2250eec13e84f56f" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code.</source>
          <target state="translated">응답에 금지 된 상태 코드가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="f2b8f3095af54a2b3eebd8044646ddb1ebbaadd4" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code:</source>
          <target state="translated">응답에 금지 된 상태 코드가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d048e4afabf601cf74701bf98a98138ad55f5fbe" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure.</source>
          <target state="translated">응답에 주어진 JSON 구조가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="17437cd65a5e741b7967caef6690b5511c5db6b0" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure:</source>
          <target state="translated">응답에 주어진 JSON 구조가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="f1f0163f51744224efef8414a9cd496cfee08e14" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given code:</source>
          <target state="translated">응답에 주어진 코드가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="70ebddfd79a504d2cfeaf6b93d814934f16c70de" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code.</source>
          <target state="translated">응답에 상태 코드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d982f84c237f47ba7858484dfa387f43037f83a7" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code:</source>
          <target state="translated">응답에 상태 코드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fa000daec974ebc0f73b3db659e31b7d480f512e" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful (&amp;gt;= 200 and &amp;lt; 300) status code:</source>
          <target state="translated">응답에 성공 (&amp;gt; = 200 및 &amp;lt;300) 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c87b750ae7772fa4eb89a04725e00116dd1a4db3" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code.</source>
          <target state="translated">응답에 상태 코드가 성공적인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e8faeff0636552ff4fdf83e0e22f20b99f7a8b4e" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code:</source>
          <target state="translated">응답에 상태 코드가 성공적인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cb1378b9ca7b7fc45421a9790806d31956b77a6c" translate="yes" xml:space="preserve">
          <source>Assert that the response has an unauthorized (401) status code:</source>
          <target state="translated">응답에 무단 (401) 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="65e1250069b926a611c06c72ae10f90531fa9eb7" translate="yes" xml:space="preserve">
          <source>Assert that the response has an unauthorized status code.</source>
          <target state="translated">응답에 승인되지 않은 상태 코드가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b934b988342fcd1f113eaacd549a040d524d8f1f" translate="yes" xml:space="preserve">
          <source>Assert that the response has no JSON validation errors for the given keys.</source>
          <target state="translated">지정된 키에 대한 응답에 JSON 유효성 검사 오류가 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5c2e7b5e58b1d42d81adcf1bb80ff97b16a952c3" translate="yes" xml:space="preserve">
          <source>Assert that the response has no JSON validation errors for the given keys:</source>
          <target state="translated">응답에 지정된 키에 대한 JSON 유효성 검사 오류가 없는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7980cf77d192333dc9ed9106c47abd0810bd1d2a" translate="yes" xml:space="preserve">
          <source>Assert that the response has the exact given JSON.</source>
          <target state="translated">응답에 정확한 JSON이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bdabaf2b35245de5ec1e05b06e74c96778b33fac" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys.</source>
          <target state="translated">응답에 주어진 키에 대해 주어진 JSON 유효성 검사 오류가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="04210348bf62e983204c04b6c1e09ba52f85354c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys:</source>
          <target state="translated">응답에 주어진 키에 대해 주어진 JSON 유효성 검사 오류가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="97048793b1eabe2e38588bebe0f7a443167a3176" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors.</source>
          <target state="translated">응답에 지정된 JSON 유효성 검사 오류가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9ea3c5ecb3f19e6e61154397d0179c62c5cbbde7" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors:</source>
          <target state="translated">응답에 지정된 JSON 유효성 검사 오류가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f667c96292bdd82732cbded7186533579d27970c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given URI value in the &lt;code&gt;Location&lt;/code&gt; header:</source>
          <target state="translated">응답에 &lt;code&gt;Location&lt;/code&gt; 헤더 에 지정된 URI 값이 있는지 확인하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
