<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="462c82f039c820b3cd47adb8fb21c984aab48a58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--max-time&lt;/code&gt; option may be used to instruct the worker to process jobs for the given number of seconds and then exit. This option may be useful when combined with &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; so that your workers are automatically restarted after processing jobs for a given amount of time:</source>
          <target state="translated">The &lt;code&gt;--max-time&lt;/code&gt; option may be used to instruct the worker to process jobs for the given number of seconds and then exit. This option may be useful when combined with &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; so that your workers are automatically restarted after processing jobs for a given amount of time:</target>
        </trans-unit>
        <trans-unit id="f57d160f49dd780af502faa810537f72af1dbd98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--message&lt;/code&gt; option of the &lt;code&gt;php artisan down&lt;/code&gt; command has been removed. As an alternative, consider &lt;a href=&quot;configuration#maintenance-mode&quot;&gt;pre-rendering your maintenance mode views&lt;/a&gt; with the message of your choice.</source>
          <target state="translated">The &lt;code&gt;--message&lt;/code&gt; option of the &lt;code&gt;php artisan down&lt;/code&gt; command has been removed. As an alternative, consider &lt;a href=&quot;configuration#maintenance-mode&quot;&gt;pre-rendering your maintenance mode views&lt;/a&gt; with the message of your choice.</target>
        </trans-unit>
        <trans-unit id="9f150d4aa69a652c60371256ad762a62023933e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--model&lt;/code&gt; option may be used to indicate the name of the model created by the factory. This option will pre-fill the generated factory file with the given model:</source>
          <target state="translated">&lt;code&gt;--model&lt;/code&gt; 옵션은 팩토리로 작성된 모델의 이름을 표시하는 데 이용 될 수있다. 이 옵션은 생성 된 팩토리 파일을 주어진 모델로 미리 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="098babe87ba8253060449da0c56a7312a643f962" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--once&lt;/code&gt; option may be used to instruct the worker to only process a single job from the queue:</source>
          <target state="translated">&lt;code&gt;--once&lt;/code&gt; 의 옵션은 대기열에서 하나의 작업을 처리하는 작업자를 지시하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="2c3f21d526f18adae2178c3c8bb56c14c772ba9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--stop-when-empty&lt;/code&gt; option may be used to instruct the worker to process all jobs and then exit gracefully. This option can be useful when working Laravel queues within a Docker container if you wish to shutdown the container after the queue is empty:</source>
          <target state="translated">&lt;code&gt;--stop-when-empty&lt;/code&gt; 옵션은 모든 작업을 처리하는 작업자를 지시하고 정상적으로 종료하는 데 사용할 수 있습니다. 이 옵션은 대기열이 비어있는 후 컨테이너를 종료하려는 경우 Docker 컨테이너 내에서 Laravel 대기열을 작업 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3aca81fb8d1f65cb51d7d3a5dc827021f0eb3eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--table&lt;/code&gt; and &lt;code&gt;--create&lt;/code&gt; options may also be used to indicate the name of the table and whether or not the migration will be creating a new table. These options pre-fill the generated migration stub file with the specified table:</source>
          <target state="translated">The &lt;code&gt;--table&lt;/code&gt; and &lt;code&gt;--create&lt;/code&gt; options may also be used to indicate the name of the table and whether or not the migration will be creating a new table. These options pre-fill the generated migration stub file with the specified table:</target>
        </trans-unit>
        <trans-unit id="b83a80bbfa35a48ec0f2be7e66835368da894903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--table&lt;/code&gt; and &lt;code&gt;--create&lt;/code&gt; options may also be used to indicate the name of the table and whether the migration will be creating a new table. These options pre-fill the generated migration stub file with the specified table:</source>
          <target state="translated">&lt;code&gt;--table&lt;/code&gt; 및 &lt;code&gt;--create&lt;/code&gt; 옵션은 테이블 및 마이그레이션이 새 테이블을 만들 수 있는지 여부를 이름을 표시하는 데 이용 될 수있다. 이 옵션은 생성 된 마이그레이션 스텁 파일을 지정된 테이블로 미리 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="c610311bb119b5b29ca27d0b1adca74bd894636a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--timeout&lt;/code&gt; value should always be at least several seconds shorter than your &lt;code&gt;retry_after&lt;/code&gt; configuration value. This will ensure that a worker processing a given job is always killed before the job is retried. If your &lt;code&gt;--timeout&lt;/code&gt; option is longer than your &lt;code&gt;retry_after&lt;/code&gt; configuration value, your jobs may be processed twice.</source>
          <target state="translated">&lt;code&gt;--timeout&lt;/code&gt; 값은 항상 당신보다 적어도 몇 초에서 짧은해야 &lt;code&gt;retry_after&lt;/code&gt; 의 설정 값입니다. 이를 통해 작업을 재 시도하기 전에 주어진 작업을 처리하는 작업자가 항상 종료됩니다. 귀하의 경우 &lt;code&gt;--timeout&lt;/code&gt; 옵션은 더 이상보다 &lt;code&gt;retry_after&lt;/code&gt; 의 구성 값, 당신의 작업은 두 번 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43d8379f1769731b34a7a09d9b498c9e829bd0d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;/code&gt; symbol may also be used to escape Blade directives:</source>
          <target state="translated">The &lt;code&gt;@&lt;/code&gt; symbol may also be used to escape Blade directives:</target>
        </trans-unit>
        <trans-unit id="add9b6f234b2d2d435494f23286178421b5f6a9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@auth&lt;/code&gt; and &lt;code&gt;@guest&lt;/code&gt; directives may be used to quickly determine if the current user is authenticated or is a guest:</source>
          <target state="translated">&lt;code&gt;@auth&lt;/code&gt; 및 &lt;code&gt;@guest&lt;/code&gt; 현재 사용자가 인증 또는 게스트 인 경우 지시어를 신속하게 결정할 수있다 :</target>
        </trans-unit>
        <trans-unit id="3790c4ee450e64731541e09433dbaa4f895011f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@error&lt;/code&gt; Directive</source>
          <target state="translated">The &lt;code&gt;@error&lt;/code&gt; Directive</target>
        </trans-unit>
        <trans-unit id="f10fe15f97b3731a82bb2ccc60fdfe105b9b368c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@error&lt;/code&gt; directive may be used to quickly check if &lt;a href=&quot;validation#quick-displaying-the-validation-errors&quot;&gt;validation error messages&lt;/a&gt; exist for a given attribute. Within an &lt;code&gt;@error&lt;/code&gt; directive, you may echo the &lt;code&gt;$message&lt;/code&gt; variable to display the error message:</source>
          <target state="translated">The &lt;code&gt;@error&lt;/code&gt; directive may be used to quickly check if &lt;a href=&quot;validation#quick-displaying-the-validation-errors&quot;&gt;validation error messages&lt;/a&gt; exist for a given attribute. Within an &lt;code&gt;@error&lt;/code&gt; directive, you may echo the &lt;code&gt;$message&lt;/code&gt; variable to display the error message:</target>
        </trans-unit>
        <trans-unit id="08bdffc7c917323cdd4eede52213b44ce9b26815" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@inject&lt;/code&gt; directive may be used to retrieve a service from the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. The first argument passed to &lt;code&gt;@inject&lt;/code&gt; is the name of the variable the service will be placed into, while the second argument is the class or interface name of the service you wish to resolve:</source>
          <target state="translated">&lt;code&gt;@inject&lt;/code&gt; 지시어는 Laravel의에서 서비스를 검색 할 수 있습니다 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너를&lt;/a&gt; . &lt;code&gt;@inject&lt;/code&gt; 에 전달 된 첫 번째 인수 는 서비스가 배치 될 변수의 이름이고 두 번째 인수는 해결하려는 서비스의 클래스 또는 인터페이스 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a457a4d7b4f4e1588c2e92f9a351ce1e82fbb65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@lang&lt;/code&gt; directive does not escape any output. You are &lt;strong&gt;fully responsible&lt;/strong&gt; for escaping your own output when using this directive.</source>
          <target state="translated">&lt;code&gt;@lang&lt;/code&gt; 의 지시어는 출력을 탈출하지 않습니다. 이 지시문을 사용할 때 자신의 출력을 피하는 것은 &lt;strong&gt;전적으로&lt;/strong&gt; 귀하의 &lt;strong&gt;책임&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f24ea51662623f2cc965db6befc6ea0f814306a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@once&lt;/code&gt; Directive</source>
          <target state="translated">The &lt;code&gt;@once&lt;/code&gt; Directive</target>
        </trans-unit>
        <trans-unit id="96226ca7a5646312c569ce6d9e2375affa44e653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@once&lt;/code&gt; directive allows you to define a portion of the template that will only be evaluated once per rendering cycle. This may be useful for pushing a given piece of JavaScript into the page's header using &lt;a href=&quot;#stacks&quot;&gt;stacks&lt;/a&gt;. For example, if you are rendering a given &lt;a href=&quot;#components&quot;&gt;component&lt;/a&gt; within a loop, you may wish to only push the JavaScript to the header the first time the component is rendered:</source>
          <target state="translated">The &lt;code&gt;@once&lt;/code&gt; directive allows you to define a portion of the template that will only be evaluated once per rendering cycle. This may be useful for pushing a given piece of JavaScript into the page's header using &lt;a href=&quot;#stacks&quot;&gt;stacks&lt;/a&gt;. For example, if you are rendering a given &lt;a href=&quot;#components&quot;&gt;component&lt;/a&gt; within a loop, you may wish to only push the JavaScript to the header the first time the component is rendered:</target>
        </trans-unit>
        <trans-unit id="f46b7133217b7bc5f3bf92b6d5633de50a06e4b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@verbatim&lt;/code&gt; Directive</source>
          <target state="translated">&lt;code&gt;@verbatim&lt;/code&gt; 지침</target>
        </trans-unit>
        <trans-unit id="a86504136dbe98f116b67762415f55457fa66989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@yield&lt;/code&gt; directive also accepts a default value as its second parameter. This value will be rendered if the section being yielded is undefined:</source>
          <target state="translated">The &lt;code&gt;@yield&lt;/code&gt; directive also accepts a default value as its second parameter. This value will be rendered if the section being yielded is undefined:</target>
        </trans-unit>
        <trans-unit id="8c26fba921a78066ef426992b96bd313bf566f60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::accessible&lt;/code&gt; method checks that the given value is array accessible:</source>
          <target state="translated">The &lt;code&gt;Arr::accessible&lt;/code&gt; method checks that the given value is array accessible:</target>
        </trans-unit>
        <trans-unit id="8b612dc22209a2a0ce4d03825f8cd0804f24fdc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::add&lt;/code&gt; method adds a given key / value pair to an array if the given key doesn't already exist in the array or is set to &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Arr::add&lt;/code&gt; method adds a given key / value pair to an array if the given key doesn't already exist in the array or is set to &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad8c8fcfc594dac2ec37db41cf8964f41e01a769" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::collapse&lt;/code&gt; method collapses an array of arrays into a single array:</source>
          <target state="translated">The &lt;code&gt;Arr::collapse&lt;/code&gt; method collapses an array of arrays into a single array:</target>
        </trans-unit>
        <trans-unit id="b8cb5c9c6dc4cc5640fefc97a83bd4ed5cef25a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::crossJoin&lt;/code&gt; method cross joins the given arrays, returning a Cartesian product with all possible permutations:</source>
          <target state="translated">The &lt;code&gt;Arr::crossJoin&lt;/code&gt; method cross joins the given arrays, returning a Cartesian product with all possible permutations:</target>
        </trans-unit>
        <trans-unit id="201bd50996220fbba6af7c1fc6d06155a4915273" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::divide&lt;/code&gt; method returns two arrays, one containing the keys, and the other containing the values of the given array:</source>
          <target state="translated">The &lt;code&gt;Arr::divide&lt;/code&gt; method returns two arrays, one containing the keys, and the other containing the values of the given array:</target>
        </trans-unit>
        <trans-unit id="6e9bc83bf62b4e870a2ad3e14ad18c09420d217b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::dot&lt;/code&gt; method flattens a multi-dimensional array into a single level array that uses &quot;dot&quot; notation to indicate depth:</source>
          <target state="translated">The &lt;code&gt;Arr::dot&lt;/code&gt; method flattens a multi-dimensional array into a single level array that uses &quot;dot&quot; notation to indicate depth:</target>
        </trans-unit>
        <trans-unit id="b9c41a5b098bd59da260d14b4bb85d9cbca75164" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::except&lt;/code&gt; method removes the given key / value pairs from an array:</source>
          <target state="translated">The &lt;code&gt;Arr::except&lt;/code&gt; method removes the given key / value pairs from an array:</target>
        </trans-unit>
        <trans-unit id="f1f172d01b8b7799d5c753fe92a2e5ab5902486f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::exists&lt;/code&gt; method checks that the given key exists in the provided array:</source>
          <target state="translated">The &lt;code&gt;Arr::exists&lt;/code&gt; method checks that the given key exists in the provided array:</target>
        </trans-unit>
        <trans-unit id="ca358872846646ad924543d8d85177e76aae4bf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::first&lt;/code&gt; method returns the first element of an array passing a given truth test:</source>
          <target state="translated">The &lt;code&gt;Arr::first&lt;/code&gt; method returns the first element of an array passing a given truth test:</target>
        </trans-unit>
        <trans-unit id="47ab769e332046c8d834c96349013b75b4750f61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::flatten&lt;/code&gt; method flattens a multi-dimensional array into a single level array:</source>
          <target state="translated">The &lt;code&gt;Arr::flatten&lt;/code&gt; method flattens a multi-dimensional array into a single level array:</target>
        </trans-unit>
        <trans-unit id="9993ca1695ba45c7509f6464138d6f7d3c29d835" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::forget&lt;/code&gt; method removes a given key / value pair from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">The &lt;code&gt;Arr::forget&lt;/code&gt; method removes a given key / value pair from a deeply nested array using &quot;dot&quot; notation:</target>
        </trans-unit>
        <trans-unit id="d63897e49e8971caabc9bb0482993bf4d2edd3dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::get&lt;/code&gt; method also accepts a default value, which will be returned if the specific key is not found:</source>
          <target state="translated">The &lt;code&gt;Arr::get&lt;/code&gt; method also accepts a default value, which will be returned if the specific key is not found:</target>
        </trans-unit>
        <trans-unit id="7d0256846d75af75fbf811a7811e16186fff929a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::get&lt;/code&gt; method retrieves a value from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">The &lt;code&gt;Arr::get&lt;/code&gt; method retrieves a value from a deeply nested array using &quot;dot&quot; notation:</target>
        </trans-unit>
        <trans-unit id="b2e60b934caa63f318f97b64463269bd2623dbd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::has&lt;/code&gt; method checks whether a given item or items exists in an array using &quot;dot&quot; notation:</source>
          <target state="translated">The &lt;code&gt;Arr::has&lt;/code&gt; method checks whether a given item or items exists in an array using &quot;dot&quot; notation:</target>
        </trans-unit>
        <trans-unit id="22c4a844a71a1fddc75d60178d8da5849ea95758" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::hasAny&lt;/code&gt; method checks whether any item in a given set exists in an array using &quot;dot&quot; notation:</source>
          <target state="translated">The &lt;code&gt;Arr::hasAny&lt;/code&gt; method checks whether any item in a given set exists in an array using &quot;dot&quot; notation:</target>
        </trans-unit>
        <trans-unit id="6a69295e21b5276265214e49da442452685748ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::isAssoc&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given array is an associative array. An array is considered &quot;associative&quot; if it doesn't have sequential numerical keys beginning with zero:</source>
          <target state="translated">The &lt;code&gt;Arr::isAssoc&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the given array is an associative array. An array is considered &quot;associative&quot; if it doesn't have sequential numerical keys beginning with zero:</target>
        </trans-unit>
        <trans-unit id="ebc1b5554b9083f7854ebb94b82dfc7c22f985d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::last&lt;/code&gt; method returns the last element of an array passing a given truth test:</source>
          <target state="translated">The &lt;code&gt;Arr::last&lt;/code&gt; method returns the last element of an array passing a given truth test:</target>
        </trans-unit>
        <trans-unit id="e4a29251accb78e7649b2a7bfaf8cdb004a8b4fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::only&lt;/code&gt; method returns only the specified key / value pairs from the given array:</source>
          <target state="translated">The &lt;code&gt;Arr::only&lt;/code&gt; method returns only the specified key / value pairs from the given array:</target>
        </trans-unit>
        <trans-unit id="8e0aeee2b327269d74cbde0b957685456dae173e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::pluck&lt;/code&gt; method retrieves all of the values for a given key from an array:</source>
          <target state="translated">The &lt;code&gt;Arr::pluck&lt;/code&gt; method retrieves all of the values for a given key from an array:</target>
        </trans-unit>
        <trans-unit id="da4cccedcbbdd491d6fc02910fee23486f47736f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::prepend&lt;/code&gt; method will push an item onto the beginning of an array:</source>
          <target state="translated">The &lt;code&gt;Arr::prepend&lt;/code&gt; method will push an item onto the beginning of an array:</target>
        </trans-unit>
        <trans-unit id="81a2cf9de3cf2c14e9db8b4924fd4bd13c1d38a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::pull&lt;/code&gt; method returns and removes a key / value pair from an array:</source>
          <target state="translated">The &lt;code&gt;Arr::pull&lt;/code&gt; method returns and removes a key / value pair from an array:</target>
        </trans-unit>
        <trans-unit id="4893a0ff3134960287874bdad281b9857b84b197" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::query&lt;/code&gt; method converts the array into a query string:</source>
          <target state="translated">The &lt;code&gt;Arr::query&lt;/code&gt; method converts the array into a query string:</target>
        </trans-unit>
        <trans-unit id="2d6048e38a203aa7ccfea70d75d305207f6ce5a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::random&lt;/code&gt; method returns a random value from an array:</source>
          <target state="translated">The &lt;code&gt;Arr::random&lt;/code&gt; method returns a random value from an array:</target>
        </trans-unit>
        <trans-unit id="2853e1ac256ff34b60b565dcdb3f47e0a51e4b2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::set&lt;/code&gt; method sets a value within a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">The &lt;code&gt;Arr::set&lt;/code&gt; method sets a value within a deeply nested array using &quot;dot&quot; notation:</target>
        </trans-unit>
        <trans-unit id="9a963a93c4451e821a0b34a8ee43ee2aa4e9ef2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::shuffle&lt;/code&gt; method randomly shuffles the items in the array:</source>
          <target state="translated">The &lt;code&gt;Arr::shuffle&lt;/code&gt; method randomly shuffles the items in the array:</target>
        </trans-unit>
        <trans-unit id="0b4b1fec398d4ea0a2a5c9a4ec4daf70de090110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::sort&lt;/code&gt; method sorts an array by its values:</source>
          <target state="translated">The &lt;code&gt;Arr::sort&lt;/code&gt; method sorts an array by its values:</target>
        </trans-unit>
        <trans-unit id="ca18b723efa8dc01295502fa07ba21d086cb7777" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::sortRecursive&lt;/code&gt; method recursively sorts an array using the &lt;code&gt;sort&lt;/code&gt; function for numeric sub=arrays and &lt;code&gt;ksort&lt;/code&gt; for associative subarrays:</source>
          <target state="translated">The &lt;code&gt;Arr::sortRecursive&lt;/code&gt; method recursively sorts an array using the &lt;code&gt;sort&lt;/code&gt; function for numeric sub=arrays and &lt;code&gt;ksort&lt;/code&gt; for associative subarrays:</target>
        </trans-unit>
        <trans-unit id="07eefb86fb74299067c94e1f5b1a81d4be04a2a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::where&lt;/code&gt; method filters an array using the given Closure:</source>
          <target state="translated">The &lt;code&gt;Arr::where&lt;/code&gt; method filters an array using the given Closure:</target>
        </trans-unit>
        <trans-unit id="82734e35abeb49b6c50b58188e722bee4f49bc2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Arr::wrap&lt;/code&gt; method wraps the given value in an array. If the given value is already an array it will not be changed:</source>
          <target state="translated">The &lt;code&gt;Arr::wrap&lt;/code&gt; method wraps the given value in an array. If the given value is already an array it will not be changed:</target>
        </trans-unit>
        <trans-unit id="a61baf726ad1cee29805fb43e8ffa71fc112f42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Authenticate&lt;/code&gt; Middleware</source>
          <target state="translated">&lt;code&gt;Authenticate&lt;/code&gt; 미들웨어</target>
        </trans-unit>
        <trans-unit id="47f075d92f9490c4f3024ffa6e3f20e4bcd8758a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcast::routes&lt;/code&gt; method will automatically place its routes within the &lt;code&gt;web&lt;/code&gt; middleware group; however, you may pass an array of route attributes to the method if you would like to customize the assigned attributes:</source>
          <target state="translated">&lt;code&gt;Broadcast::routes&lt;/code&gt; 방법은 자동으로 내에서 루트 배치됩니다 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹을; 그러나 할당 된 속성을 사용자 정의하려면 라우트 속성 배열을 메소드에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d084db1919e75c703d90ae3d75de2deb845dc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcasting&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Broadcasting&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="4e2b829a00510c0ac3fe2a15dcf8072ab3d21356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcasting&lt;/code&gt; directory contains all of the broadcast channel classes for your application. These classes are generated using the &lt;code&gt;make:channel&lt;/code&gt; command. This directory does not exist by default, but will be created for you when you create your first channel. To learn more about channels, check out the documentation on &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Broadcasting&lt;/code&gt; 디렉토리는 응용 프로그램에 대한 방송 채널의 모든 클래스를 포함합니다. 이 클래스는 &lt;code&gt;make:channel&lt;/code&gt; 명령을 사용하여 생성됩니다 . 이 디렉토리는 기본적으로 존재하지 않지만 첫 번째 채널을 만들 때 생성됩니다. 채널에 대한 자세한 내용은 &lt;a href=&quot;broadcasting&quot;&gt;이벤트 브로드 캐스팅&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cffb67a60c1ada7ef9c0e39deaee633eef1437df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Castable&lt;/code&gt; Interface</source>
          <target state="translated">The &lt;code&gt;Castable&lt;/code&gt; Interface</target>
        </trans-unit>
        <trans-unit id="59edf5cec3a6e9a71d3393d81ed35a7a18fec757" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConnectionInterface&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;ConnectionInterface&lt;/code&gt; 계약</target>
        </trans-unit>
        <trans-unit id="865110ddf8df22e78dd685560105b607d3f9c8d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Console&lt;/code&gt; Directory</source>
          <target state="translated">그만큼 &lt;code&gt;Console&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="61805ff080045f068f4c535ff73a9ad0e18df382" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Console&lt;/code&gt; directory contains all of the custom Artisan commands for your application. These commands may be generated using the &lt;code&gt;make:command&lt;/code&gt; command. This directory also houses your console kernel, which is where your custom Artisan commands are registered and your &lt;a href=&quot;scheduling&quot;&gt;scheduled tasks&lt;/a&gt; are defined.</source>
          <target state="translated">&lt;code&gt;Console&lt;/code&gt; 디렉토리는 응용 프로그램에 대한 사용자 정의 장인의 모든 명령이 포함되어 있습니다. 이러한 명령은 &lt;code&gt;make:command&lt;/code&gt; 명령을 사용하여 생성 될 수 있습니다 . 이 디렉토리에는 콘솔 커널이 들어 있으며, 여기서 사용자 지정 Artisan 명령이 등록되고 &lt;a href=&quot;scheduling&quot;&gt;예약 된 작업&lt;/a&gt; 이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0153aa189fb79aca1922530d9403253ba6a042a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DB&lt;/code&gt; facade's transaction methods control the transactions for both the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DB&lt;/code&gt; 의 외관의 거래 방법은 모두 트랜잭션 제어 &lt;a href=&quot;queries&quot;&gt;쿼리 빌더&lt;/a&gt; 및 &lt;a href=&quot;eloquent&quot;&gt;웅변 ORM을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="319ca19956a191c99db6b4273a8c119ef1e3335b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dispatcher&lt;/code&gt; Contract</source>
          <target state="translated">The &lt;code&gt;Dispatcher&lt;/code&gt; Contract</target>
        </trans-unit>
        <trans-unit id="b3326a7e1ad0c511e0d1e9ad9be47e06e507565c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventServiceProvider&lt;/code&gt; included with your Laravel application provides a convenient place to register all of your application's event listeners. The &lt;code&gt;listen&lt;/code&gt; property contains an array of all events (keys) and their listeners (values). Of course, you may add as many events to this array as your application requires. For example, let's add a &lt;code&gt;OrderShipped&lt;/code&gt; event:</source>
          <target state="translated">Laravel 응용 프로그램에 포함 된 &lt;code&gt;EventServiceProvider&lt;/code&gt; 는 모든 응용 프로그램의 이벤트 리스너를 등록하기에 편리한 장소를 제공합니다. 는 &lt;code&gt;listen&lt;/code&gt; 속성은 모든 이벤트 (키)과 청취자 (값)의 배열을 포함하고 있습니다. 물론 응용 프로그램에 필요한만큼이 배열에 이벤트를 추가 할 수 있습니다. 예를 들어, &lt;code&gt;OrderShipped&lt;/code&gt; 이벤트를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="25b6724ba05c4f08ea71c0f64bec63f5fc581393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventServiceProvider&lt;/code&gt; included with your Laravel application provides a convenient place to register all of your application's event listeners. The &lt;code&gt;listen&lt;/code&gt; property contains an array of all events (keys) and their listeners (values). You may add as many events to this array as your application requires. For example, let's add an &lt;code&gt;OrderShipped&lt;/code&gt; event:</source>
          <target state="translated">The &lt;code&gt;EventServiceProvider&lt;/code&gt; included with your Laravel application provides a convenient place to register all of your application's event listeners. The &lt;code&gt;listen&lt;/code&gt; property contains an array of all events (keys) and their listeners (values). You may add as many events to this array as your application requires. For example, let's add an &lt;code&gt;OrderShipped&lt;/code&gt; event:</target>
        </trans-unit>
        <trans-unit id="affd1cf8cc9da3ab94510e44cb75dd161353ee83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Events&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Events&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="3d0a313b20d4ab5b9d79bd74ddeec407bbea08fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Exceptions&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Exceptions&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="a11d53c32de127bc726ff8ec1ddb765977f3acfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Exceptions&lt;/code&gt; directory contains your application's exception handler and is also a good place to place any exceptions thrown by your application. If you would like to customize how your exceptions are logged or rendered, you should modify the &lt;code&gt;Handler&lt;/code&gt; class in this directory.</source>
          <target state="translated">&lt;code&gt;Exceptions&lt;/code&gt; 디렉토리는 응용 프로그램의 예외 핸들러를 포함하고 또한 당신의 응용 프로그램에 의해 throw 예외를 배치 할 수있는 좋은 장소입니다. 예외가 기록되거나 렌더링되는 방식을 사용자 정의하려면 이 디렉토리에서 &lt;code&gt;Handler&lt;/code&gt; 클래스를 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="16d4d615ff7f2dc62d9828535b34171a5861c733" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Facade&lt;/code&gt; base class makes use of the &lt;code&gt;__callStatic()&lt;/code&gt; magic-method to defer calls from your facade to an object resolved from the container. In the example below, a call is made to the Laravel cache system. By glancing at this code, one might assume that the static method &lt;code&gt;get&lt;/code&gt; is being called on the &lt;code&gt;Cache&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;Facade&lt;/code&gt; 기본 클래스 차종은의 사용 &lt;code&gt;__callStatic()&lt;/code&gt; 컨테이너에서 해결 객체로 외관에서 연기 통화에 마법 방법. 아래 예에서 Laravel 캐시 시스템이 호출됩니다. 이 코드를 살펴보면 정적 메소드 &lt;code&gt;get&lt;/code&gt; 이 &lt;code&gt;Cache&lt;/code&gt; 클래스 에서 호출되고 있다고 가정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adb1adb2cabff6ef3314914ed0cda1bc5af8ad17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GET&lt;/code&gt; route will display a form for the user to create a new blog post, while the &lt;code&gt;POST&lt;/code&gt; route will store the new blog post in the database.</source>
          <target state="translated">The &lt;code&gt;GET&lt;/code&gt; route will display a form for the user to create a new blog post, while the &lt;code&gt;POST&lt;/code&gt; route will store the new blog post in the database.</target>
        </trans-unit>
        <trans-unit id="6277b0abf49cc8a15335fca67cf4f13cd4eb757f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gate&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;Gate&lt;/code&gt; 계약</target>
        </trans-unit>
        <trans-unit id="1c9d08d6df8b2e64ea8c2238b309139e54282068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HasFactory&lt;/code&gt; trait's &lt;code&gt;factory&lt;/code&gt; method will use conventions to determine the proper factory for the model. Specifically, the method will look for a factory in the &lt;code&gt;Database\Factories&lt;/code&gt; namespace that has a class name matching the model name and is suffixed with &lt;code&gt;Factory&lt;/code&gt;. If these conventions do not apply to your particular application or factory, you may overwrite the &lt;code&gt;newFactory&lt;/code&gt; method on your model to return an instance of the model's corresponding factory directly:</source>
          <target state="translated">The &lt;code&gt;HasFactory&lt;/code&gt; trait's &lt;code&gt;factory&lt;/code&gt; method will use conventions to determine the proper factory for the model. Specifically, the method will look for a factory in the &lt;code&gt;Database\Factories&lt;/code&gt; namespace that has a class name matching the model name and is suffixed with &lt;code&gt;Factory&lt;/code&gt; . If these conventions do not apply to your particular application or factory, you may overwrite the &lt;code&gt;newFactory&lt;/code&gt; method on your model to return an instance of the model's corresponding factory directly:</target>
        </trans-unit>
        <trans-unit id="d6d36f2e60a64411734eb61ff15495a440af767f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Http&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="c4475d0dfd839057e787ff6cde1999e922de21c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http&lt;/code&gt; directory contains your controllers, middleware, and form requests. Almost all of the logic to handle requests entering your application will be placed in this directory.</source>
          <target state="translated">&lt;code&gt;Http&lt;/code&gt; 디렉토리는 컨트롤러, 미들웨어 및 양식 요청이 포함되어 있습니다. 응용 프로그램으로 들어오는 요청을 처리하는 거의 모든 논리가이 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="ffc86a1de90be82a34142a4890287c8bcb4bd7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method allows you to instruct the HTTP client to return stubbed / dummy responses when requests are made. For more information on faking outgoing HTTP requests, please consult the &lt;a href=&quot;http-client#testing&quot;&gt;HTTP Client testing documentation&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Http&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method allows you to instruct the HTTP client to return stubbed / dummy responses when requests are made. For more information on faking outgoing HTTP requests, please consult the &lt;a href=&quot;http-client#testing&quot;&gt;HTTP Client testing documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cd733fff0fb0eea7d329bfe03adde8a78c672d0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Bus\Batch&lt;/code&gt; method that is provided to batch completion callbacks has a variety of properties and methods to assist you in interacting with and inspecting a given batch of jobs.</source>
          <target state="translated">The &lt;code&gt;Illuminate\Bus\Batch&lt;/code&gt; method that is provided to batch completion callbacks has a variety of properties and methods to assist you in interacting with and inspecting a given batch of jobs.</target>
        </trans-unit>
        <trans-unit id="0c33071d79534382bee64001d9cceea38c553596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; implementations are only responsible for fetching a &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; implementation out of a persistent storage system, such as MySQL, Riak, etc. These two interfaces allow the Laravel authentication mechanisms to continue functioning regardless of how the user data is stored or what type of class is used to represent it.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; 구현 만 가져 오는 책임이 있습니다 &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; 이 두 인터페이스가 Laravel 인증 메커니즘에 관계없이 계속 작동 할 수 있도록 등 MySQL은, Riak, 같은 영구 저장 시스템에서 구현 사용자 데이터가 저장되는 방법 또는이를 나타내는 데 사용되는 클래스 유형</target>
        </trans-unit>
        <trans-unit id="4522198f07729e762522d7d204b1bc93916cfc36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; implementations are only responsible for fetching an &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; implementation out of a persistent storage system, such as MySQL, Riak, etc. These two interfaces allow the Laravel authentication mechanisms to continue functioning regardless of how the user data is stored or what type of class is used to represent it.</source>
          <target state="translated">The &lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; implementations are only responsible for fetching an &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; implementation out of a persistent storage system, such as MySQL, Riak, etc. These two interfaces allow the Laravel authentication mechanisms to continue functioning regardless of how the user data is stored or what type of class is used to represent it.</target>
        </trans-unit>
        <trans-unit id="438034be0ddb2d7e99a846d2c3dd01fad8394c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; and &lt;code&gt;Illuminate\Contracts\Cache\Repository&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contracts&lt;/a&gt; provide access to Laravel's cache services. The &lt;code&gt;Factory&lt;/code&gt; contract provides access to all cache drivers defined for your application. The &lt;code&gt;Repository&lt;/code&gt; contract is typically an implementation of the default cache driver for your application as specified by your &lt;code&gt;cache&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; 과 &lt;code&gt;Illuminate\Contracts\Cache\Repository&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;계약은&lt;/a&gt; Laravel의 캐시 서비스에 대한 액세스를 제공합니다. &lt;code&gt;Factory&lt;/code&gt; 계약은 응용 프로그램에 대해 정의 된 모든 캐시 드라이버에 대한 액세스를 제공합니다. &lt;code&gt;Repository&lt;/code&gt; 계약은 일반적으로 지정된 응용 프로그램의 기본 캐시 드라이버의 구현입니다 &lt;code&gt;cache&lt;/code&gt; 구성 파일.</target>
        </trans-unit>
        <trans-unit id="dc59e103aa4d993f4705bbe1376c30be315aa2f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Database\ConnectionInterface&lt;/code&gt; contract's &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;selectOne&lt;/code&gt; method signatures have been updated to accommodate the new &lt;code&gt;$useReadPdo&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Database\ConnectionInterface&lt;/code&gt; 계약의 &lt;code&gt;select&lt;/code&gt; 과 &lt;code&gt;selectOne&lt;/code&gt; 메서드 메소드 서명은 새로운 수용하기 위해 업데이트되었습니다 &lt;code&gt;$useReadPdo&lt;/code&gt; 인수를 :</target>
        </trans-unit>
        <trans-unit id="e349fd6e1dc0e7aae320ead011bfa6241d975624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Session\Session&lt;/code&gt; contract has received a new &lt;code&gt;pull&lt;/code&gt; method. If you are implementing this contract manually, you should update your implementation accordingly:</source>
          <target state="translated">The &lt;code&gt;Illuminate\Contracts\Session\Session&lt;/code&gt; contract has received a new &lt;code&gt;pull&lt;/code&gt; method. If you are implementing this contract manually, you should update your implementation accordingly:</target>
        </trans-unit>
        <trans-unit id="de2ac21f52da55e777ba10661093bc559b551879" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; instance has a public &lt;code&gt;$response&lt;/code&gt; property which will allow you to inspect the returned response.</source>
          <target state="translated">The &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; instance has a public &lt;code&gt;$response&lt;/code&gt; property which will allow you to inspect the returned response.</target>
        </trans-unit>
        <trans-unit id="beb5e5663e3e0320ebd3015766b965da19ce3d8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\Client\Response&lt;/code&gt; object also implements the PHP &lt;code&gt;ArrayAccess&lt;/code&gt; interface, allowing you to access JSON response data directly on the response:</source>
          <target state="translated">The &lt;code&gt;Illuminate\Http\Client\Response&lt;/code&gt; object also implements the PHP &lt;code&gt;ArrayAccess&lt;/code&gt; interface, allowing you to access JSON response data directly on the response:</target>
        </trans-unit>
        <trans-unit id="e851e3d392c082918428c1691b8f8fd1c477b456" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance provides a variety of methods for examining the HTTP request for your application and extends the &lt;code&gt;Symfony\Component\HttpFoundation\Request&lt;/code&gt; class. We will discuss a few of the most important methods below.</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스는 응용 프로그램의 HTTP 요청을 조사하기위한 다양한 방법을 제공하고 확장 &lt;code&gt;Symfony\Component\HttpFoundation\Request&lt;/code&gt; 클래스를. 아래에서 가장 중요한 몇 가지 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2e67abdba47fc36de3b1b205cf6476f427c15fbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; class provides a &lt;code&gt;fake&lt;/code&gt; method which may be used to generate dummy files or images for testing. This, combined with the &lt;code&gt;Storage&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method greatly simplifies the testing of file uploads. For example, you may combine these two features to easily test an avatar upload form:</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; 클래스는 제공 &lt;code&gt;fake&lt;/code&gt; 테스트를위한 더미 파일이나 이미지를 생성하기 위해 사용될 수있다 방법. 이는 &lt;code&gt;Storage&lt;/code&gt; 파사드의 &lt;code&gt;fake&lt;/code&gt; 방법 과 결합하여 파일 업로드 테스트를 크게 단순화합니다. 예를 들어,이 두 기능을 결합하여 아바타 업로드 양식을 쉽게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f13092a86505aa027f49083b28ba9cc0d69da88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; class provides a fluent, convenient wrapper for working with arrays of data. For example, check out the following code. We'll use the &lt;code&gt;collect&lt;/code&gt; helper to create a new collection instance from the array, run the &lt;code&gt;strtoupper&lt;/code&gt; function on each element, and then remove all empty elements:</source>
          <target state="translated">&lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; 클래스는 데이터의 배열을 사용하기위한 유창, 편리한 래퍼를 제공합니다. 예를 들어 다음 코드를 확인하십시오. 우리는 사용할 것이다 &lt;code&gt;collect&lt;/code&gt; , 배열에서 새 컬렉션 인스턴스를 생성 한 실행 도우미를 &lt;code&gt;strtoupper&lt;/code&gt; 의 모든 빈 요소를 각 요소에 기능을 한 다음 제거 :</target>
        </trans-unit>
        <trans-unit id="edb2d21a6a6f10dcfa9568dedda94db0583b9e20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Support\Debug\Dumper&lt;/code&gt; and &lt;code&gt;Illuminate\Support\Debug\HtmlDumper&lt;/code&gt; classes have been removed in favor of using Symfony's native variable dumpers: &lt;code&gt;Symfony\Component\VarDumper\VarDumper&lt;/code&gt; and &lt;code&gt;Symfony\Component\VarDumper\Dumper\HtmlDumper&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Illuminate\Support\Debug\Dumper&lt;/code&gt; 와 &lt;code&gt;Illuminate\Support\Debug\HtmlDumper&lt;/code&gt; 클래스는 심포니의 기본 변수 덤프를 사용하여 찬성 제거되었습니다 &lt;code&gt;Symfony\Component\VarDumper\VarDumper&lt;/code&gt; 와 &lt;code&gt;Symfony\Component\VarDumper\Dumper\HtmlDumper&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6723b9e70e0caf6c07d1907ca6ff08d51aa53cf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Jobs&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Jobs&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="381abc17d4d6483f033fc1ce2bc7b7964b4792cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Listeners&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Listeners&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="0b1714b79fd704dd53c83e0e199b96492db40786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mail&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Mail&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="6e2ac74ec7b02cd50e58214b98bbda5d7975cb2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Models&lt;/code&gt; Directory</source>
          <target state="translated">The &lt;code&gt;Models&lt;/code&gt; Directory</target>
        </trans-unit>
        <trans-unit id="2f25294e43c3a227937017864f949884fdb38f48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Models&lt;/code&gt; directory contains all of your Eloquent model classes. The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding &quot;Model&quot; which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.</source>
          <target state="translated">The &lt;code&gt;Models&lt;/code&gt; directory contains all of your Eloquent model classes. The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding &quot;Model&quot; which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.</target>
        </trans-unit>
        <trans-unit id="d91de83413766bd35fc1d3da9e96feadb8dfeff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notifications&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Notifications&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="e4aaa6cb4c2bb64ce3ecdd9b1b90622c4c584ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Paginator&lt;/code&gt; class does not need to know the total number of items in the result set; however, because of this, the class does not have methods for retrieving the index of the last page. The &lt;code&gt;LengthAwarePaginator&lt;/code&gt; accepts almost the same arguments as the &lt;code&gt;Paginator&lt;/code&gt;; however, it does require a count of the total number of items in the result set.</source>
          <target state="translated">&lt;code&gt;Paginator&lt;/code&gt; 클래스는 결과 집합에있는 항목의 총 수를 알 필요가 없다; 그러나이 때문에 클래스에는 마지막 페이지의 색인을 검색하는 메소드가 없습니다. &lt;code&gt;LengthAwarePaginator&lt;/code&gt; 는 와 거의 같은 인수 받아 &lt;code&gt;Paginator&lt;/code&gt; ; 그러나 결과 집합의 총 항목 수는 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a1a77b3f6f28770e9cd870bcbde1f7d890d3f8d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Policies&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Policies&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="aac21db1bc1f2575eae12f3f8806fcfb874ce934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Providers&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Providers&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="0f8311b056e03e6c1479680ccfe5e1de9e782d12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Providers&lt;/code&gt; directory contains all of the &lt;a href=&quot;providers&quot;&gt;service providers&lt;/a&gt; for your application. Service providers bootstrap your application by binding services in the service container, registering events, or performing any other tasks to prepare your application for incoming requests.</source>
          <target state="translated">&lt;code&gt;Providers&lt;/code&gt; 디렉토리는 모든 포함 &lt;a href=&quot;providers&quot;&gt;서비스 제공&lt;/a&gt; 응용 프로그램에 대한합니다. 서비스 공급자는 서비스 컨테이너에 서비스를 바인딩하거나 이벤트를 등록하거나 다른 작업을 수행하여 응용 프로그램이 들어오는 요청을 준비하도록하여 응용 프로그램을 부트 스트랩합니다.</target>
        </trans-unit>
        <trans-unit id="443cfe467962becd2cd129a108f865d784ec8407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResetsPasswords&lt;/code&gt; Trait</source>
          <target state="translated">&lt;code&gt;ResetsPasswords&lt;/code&gt; 형질</target>
        </trans-unit>
        <trans-unit id="f23db26e2495639dd67917079baa2ac1b32e00b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Route::redirect&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;Route::redirect&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="1e80d0aa59442dbcab730cd9b917deef05d8eaf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Route::redirect&lt;/code&gt; method now returns a &lt;code&gt;302&lt;/code&gt; HTTP status code redirect. The &lt;code&gt;permanentRedirect&lt;/code&gt; method has been added to allow &lt;code&gt;301&lt;/code&gt; redirects.</source>
          <target state="translated">&lt;code&gt;Route::redirect&lt;/code&gt; 방법은 이제 반환 &lt;code&gt;302&lt;/code&gt; HTTP 상태 코드 리디렉션. &lt;code&gt;permanentRedirect&lt;/code&gt; 의 방법이 허용하는 추가되어 &lt;code&gt;301&lt;/code&gt; 리디렉션.</target>
        </trans-unit>
        <trans-unit id="e50b626625f6c371e01f924ab96dec2879387138" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rules&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Rules&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="ec35fee719a7b891419d0658551b660990f90bee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; Trait</source>
          <target state="translated">&lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; 형질</target>
        </trans-unit>
        <trans-unit id="82533c5528133a99a444261d7ee4d8f18b729bec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Session&lt;/code&gt; Contract</source>
          <target state="translated">The &lt;code&gt;Session&lt;/code&gt; Contract</target>
        </trans-unit>
        <trans-unit id="29be7994e43c14d23d7816a75782bfa34400f6a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; Interface</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; 인터페이스</target>
        </trans-unit>
        <trans-unit id="05ebca06226728ae61f7405e8227db1b6fa6c6b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface requires our event to define a &lt;code&gt;broadcastOn&lt;/code&gt; method. This method is responsible for returning the channels that the event should broadcast on. An empty stub of this method is already defined on generated event classes, so we only need to fill in its details. We only want the creator of the order to be able to view status updates, so we will broadcast the event on a private channel that is tied to the order:</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; 인터페이스는 정의하는 우리의 이벤트가 필요 &lt;code&gt;broadcastOn&lt;/code&gt; 의 방법을. 이 메소드는 이벤트가 브로드 캐스트해야하는 채널을 리턴합니다. 이 메소드의 빈 스텁은 이미 생성 된 이벤트 클래스에 정의되어 있으므로 세부 사항 만 작성하면됩니다. 주문 작성자 만 상태 업데이트를 볼 수 있기를 원하므로 주문과 연결된 비공개 채널에서 이벤트를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="12da2199f3cf23df9fb289d52b47f641c858bcf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface requires you to implement a single method: &lt;code&gt;broadcastOn&lt;/code&gt;. The &lt;code&gt;broadcastOn&lt;/code&gt; method should return a channel or array of channels that the event should broadcast on. The channels should be instances of &lt;code&gt;Channel&lt;/code&gt;, &lt;code&gt;PrivateChannel&lt;/code&gt;, or &lt;code&gt;PresenceChannel&lt;/code&gt;. Instances of &lt;code&gt;Channel&lt;/code&gt; represent public channels that any user may subscribe to, while &lt;code&gt;PrivateChannels&lt;/code&gt; and &lt;code&gt;PresenceChannels&lt;/code&gt; represent private channels that require &lt;a href=&quot;#authorizing-channels&quot;&gt;channel authorization&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; 의 : 인터페이스는 하나의 메소드 구현하도록 요구 &lt;code&gt;broadcastOn&lt;/code&gt; 을 . &lt;code&gt;broadcastOn&lt;/code&gt; 에 있어서, 상기 이벤트를 방송하도록 채널 또는 채널 배열을 반환한다. 채널은 &lt;code&gt;Channel&lt;/code&gt; , &lt;code&gt;PrivateChannel&lt;/code&gt; 또는 &lt;code&gt;PresenceChannel&lt;/code&gt; 의 인스턴스 여야합니다 . &lt;code&gt;Channel&lt;/code&gt; 인스턴스는 모든 사용자가 구독 할 수있는 퍼블릭 채널을 나타내는 반면 &lt;code&gt;PrivateChannels&lt;/code&gt; 및 &lt;code&gt;PresenceChannels&lt;/code&gt; 는 &lt;a href=&quot;#authorizing-channels&quot;&gt;채널 인증&lt;/a&gt; 이 필요한 프라이빗 채널을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="cea9a35f650e1b1cae5513a7569e6bf6ed123f8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SoftDeletes&lt;/code&gt; trait will automatically cast the &lt;code&gt;deleted_at&lt;/code&gt; attribute to a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance for you.</source>
          <target state="translated">The &lt;code&gt;SoftDeletes&lt;/code&gt; trait will automatically cast the &lt;code&gt;deleted_at&lt;/code&gt; attribute to a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance for you.</target>
        </trans-unit>
        <trans-unit id="81e629702c6505fbbe48dc0ececf8e3d8b079a48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Storage&lt;/code&gt; facade may be used to interact with any of your configured disks. For example, you may use the &lt;code&gt;put&lt;/code&gt; method on the facade to store an avatar on the default disk. If you call methods on the &lt;code&gt;Storage&lt;/code&gt; facade without first calling the &lt;code&gt;disk&lt;/code&gt; method, the method call will automatically be passed to the default disk:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; 외관이 구성된 디스크의와 상호 작용하는 데 사용할 수 있습니다. 예를 들어, 외장 에서 &lt;code&gt;put&lt;/code&gt; 방법을 사용 하여 기본 디스크에 아바타를 저장할 수 있습니다. 당신은 메소드 호출하면 &lt;code&gt;Storage&lt;/code&gt; 먼저 호출하지 않고 외관 &lt;code&gt;disk&lt;/code&gt; 방법을 메서드 호출이 자동으로 기본 디스크에 전달됩니다 :</target>
        </trans-unit>
        <trans-unit id="0aed306fc392e26d22548f25aeb78e98c7200942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Storage&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method allows you to easily generate a fake disk that, combined with the file generation utilities of the &lt;code&gt;UploadedFile&lt;/code&gt; class, greatly simplifies the testing of file uploads. For example:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; 외관의 &lt;code&gt;fake&lt;/code&gt; 방법을 사용하면 쉽게의 파일 생성 유틸리티와 결합 된 가짜 디스크를 생성 할 수 있습니다 &lt;code&gt;UploadedFile&lt;/code&gt; 의 클래스 크게 파일 업로드의 테스트를 단순화합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a99403a491efd8e4821f93967d404f3e24c6bf0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::after&lt;/code&gt; method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:</source>
          <target state="translated">The &lt;code&gt;Str::after&lt;/code&gt; method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:</target>
        </trans-unit>
        <trans-unit id="4d19e88c4caad0db329ecc718d947439fff1de22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::afterLast&lt;/code&gt; method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:</source>
          <target state="translated">The &lt;code&gt;Str::afterLast&lt;/code&gt; method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:</target>
        </trans-unit>
        <trans-unit id="e46413ab9de6b3362eb22893c0fcb833ca7fa360" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::ascii&lt;/code&gt; method will attempt to transliterate the string into an ASCII value:</source>
          <target state="translated">The &lt;code&gt;Str::ascii&lt;/code&gt; method will attempt to transliterate the string into an ASCII value:</target>
        </trans-unit>
        <trans-unit id="afe521f8de4b625707918afd9bf99f7453b57c5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::before&lt;/code&gt; method returns everything before the given value in a string:</source>
          <target state="translated">The &lt;code&gt;Str::before&lt;/code&gt; method returns everything before the given value in a string:</target>
        </trans-unit>
        <trans-unit id="c65b7f3e86f7c567d7be16ffddc33b4224f13eeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::beforeLast&lt;/code&gt; method returns everything before the last occurrence of the given value in a string:</source>
          <target state="translated">The &lt;code&gt;Str::beforeLast&lt;/code&gt; method returns everything before the last occurrence of the given value in a string:</target>
        </trans-unit>
        <trans-unit id="9b1c8086a4a72ef7e573987a672bae1d21c6c747" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::between&lt;/code&gt; method returns the portion of a string between two values:</source>
          <target state="translated">The &lt;code&gt;Str::between&lt;/code&gt; method returns the portion of a string between two values:</target>
        </trans-unit>
        <trans-unit id="e5f3e2e66ebabeff91acf47ddadf429005c74882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::camel&lt;/code&gt; method converts the given string to &lt;code&gt;camelCase&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Str::camel&lt;/code&gt; method converts the given string to &lt;code&gt;camelCase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="520fa397a066f8ddefcce1cdbcebed5acbf5042a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::contains&lt;/code&gt; method determines if the given string contains the given value (case sensitive):</source>
          <target state="translated">The &lt;code&gt;Str::contains&lt;/code&gt; method determines if the given string contains the given value (case sensitive):</target>
        </trans-unit>
        <trans-unit id="ff70de45e4442a9580dc1d0b17c4aacd1f0c1b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::containsAll&lt;/code&gt; method determines if the given string contains all array values:</source>
          <target state="translated">The &lt;code&gt;Str::containsAll&lt;/code&gt; method determines if the given string contains all array values:</target>
        </trans-unit>
        <trans-unit id="c5df475628aed1ed8a12796211517fecbea05579" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::endsWith&lt;/code&gt; method determines if the given string ends with the given value:</source>
          <target state="translated">The &lt;code&gt;Str::endsWith&lt;/code&gt; method determines if the given string ends with the given value:</target>
        </trans-unit>
        <trans-unit id="52d2fb8e59672509d54f46f40c4227136974c19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::finish&lt;/code&gt; method adds a single instance of the given value to a string if it does not already end with the value:</source>
          <target state="translated">The &lt;code&gt;Str::finish&lt;/code&gt; method adds a single instance of the given value to a string if it does not already end with the value:</target>
        </trans-unit>
        <trans-unit id="4b993b96e15fb591fc6d2607381a37cf9017f50d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::is&lt;/code&gt; method determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards:</source>
          <target state="translated">The &lt;code&gt;Str::is&lt;/code&gt; method determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards:</target>
        </trans-unit>
        <trans-unit id="e6a70917e4ed3e46de30697c3ef2a2df6c802e30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::isAscii&lt;/code&gt; method determines if a given string is 7 bit ASCII:</source>
          <target state="translated">The &lt;code&gt;Str::isAscii&lt;/code&gt; method determines if a given string is 7 bit ASCII:</target>
        </trans-unit>
        <trans-unit id="c69a849345c8de57e05c202a5e4b302f424d48d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::isUuid&lt;/code&gt; method determines if the given string is a valid UUID:</source>
          <target state="translated">The &lt;code&gt;Str::isUuid&lt;/code&gt; method determines if the given string is a valid UUID:</target>
        </trans-unit>
        <trans-unit id="7e37b4d176ca317d628176aca4266034e6596e23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::kebab&lt;/code&gt; method converts the given string to &lt;code&gt;kebab-case&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Str::kebab&lt;/code&gt; method converts the given string to &lt;code&gt;kebab-case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f19bd1b501372e0af0f9613668e34cb4ab4eab5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::length&lt;/code&gt; method returns the length of the given string:</source>
          <target state="translated">The &lt;code&gt;Str::length&lt;/code&gt; method returns the length of the given string:</target>
        </trans-unit>
        <trans-unit id="6a17418e8331fdfa752d6dd94432c9ee4de22b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::limit&lt;/code&gt; method truncates the given string at the specified length:</source>
          <target state="translated">The &lt;code&gt;Str::limit&lt;/code&gt; method truncates the given string at the specified length:</target>
        </trans-unit>
        <trans-unit id="68fe6e7cfb9dca2476ee6ad7b8f9690c7503b839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::lower&lt;/code&gt; method converts the given string to lowercase:</source>
          <target state="translated">The &lt;code&gt;Str::lower&lt;/code&gt; method converts the given string to lowercase:</target>
        </trans-unit>
        <trans-unit id="de3dfed6458aafe3fbf565945997542f7e59442b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::orderedUuid&lt;/code&gt; method generates a &quot;timestamp first&quot; UUID that may be efficiently stored in an indexed database column:</source>
          <target state="translated">&lt;code&gt;Str::orderedUuid&lt;/code&gt; 있어서 효율적으로 인덱싱 된 데이터베이스 컬럼에 저장 될 수있는 &quot;타임 스탬프 제&quot;UUID를 생성</target>
        </trans-unit>
        <trans-unit id="225fb579093f3bda2ae93a87332331d82ab92b8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::padBoth&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding both sides of a string with another:</source>
          <target state="translated">The &lt;code&gt;Str::padBoth&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding both sides of a string with another:</target>
        </trans-unit>
        <trans-unit id="b2e93aeb09115abe24ce29f304bcf673181087cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::padLeft&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the left side of a string with another:</source>
          <target state="translated">The &lt;code&gt;Str::padLeft&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the left side of a string with another:</target>
        </trans-unit>
        <trans-unit id="f177fef5ebd7d0345badf74cfea7782256a9b38d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::padRight&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the right side of a string with another:</source>
          <target state="translated">The &lt;code&gt;Str::padRight&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the right side of a string with another:</target>
        </trans-unit>
        <trans-unit id="96eb9945eebb3afc8a0a96678c49c2fe44089876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::plural&lt;/code&gt; method converts a single word string to its plural form. This function currently only supports the English language:</source>
          <target state="translated">The &lt;code&gt;Str::plural&lt;/code&gt; method converts a single word string to its plural form. This function currently only supports the English language:</target>
        </trans-unit>
        <trans-unit id="473daf4009a5112219cba8d0e4ce6d72d77b6c47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::random&lt;/code&gt; method generates a random string of the specified length. This function uses PHP's &lt;code&gt;random_bytes&lt;/code&gt; function:</source>
          <target state="translated">The &lt;code&gt;Str::random&lt;/code&gt; method generates a random string of the specified length. This function uses PHP's &lt;code&gt;random_bytes&lt;/code&gt; function:</target>
        </trans-unit>
        <trans-unit id="3ef0de9cdadd7b3c38f73cad1a5587250ccbcce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::replaceArray&lt;/code&gt; method replaces a given value in the string sequentially using an array:</source>
          <target state="translated">The &lt;code&gt;Str::replaceArray&lt;/code&gt; method replaces a given value in the string sequentially using an array:</target>
        </trans-unit>
        <trans-unit id="bfb56755c375664abe65c698da22d414fa36738b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::replaceFirst&lt;/code&gt; method replaces the first occurrence of a given value in a string:</source>
          <target state="translated">The &lt;code&gt;Str::replaceFirst&lt;/code&gt; method replaces the first occurrence of a given value in a string:</target>
        </trans-unit>
        <trans-unit id="222673964972678977e53c90b300e4edd86109d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::replaceLast&lt;/code&gt; method replaces the last occurrence of a given value in a string:</source>
          <target state="translated">The &lt;code&gt;Str::replaceLast&lt;/code&gt; method replaces the last occurrence of a given value in a string:</target>
        </trans-unit>
        <trans-unit id="b13ea50ef95fd042d106bea4a852664049dad9cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::singular&lt;/code&gt; method converts a string to its singular form. This function currently only supports the English language:</source>
          <target state="translated">The &lt;code&gt;Str::singular&lt;/code&gt; method converts a string to its singular form. This function currently only supports the English language:</target>
        </trans-unit>
        <trans-unit id="97ab80d17bcb7cfbba20e2339f77de53f5f682fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::slug&lt;/code&gt; method generates a URL friendly &quot;slug&quot; from the given string:</source>
          <target state="translated">The &lt;code&gt;Str::slug&lt;/code&gt; method generates a URL friendly &quot;slug&quot; from the given string:</target>
        </trans-unit>
        <trans-unit id="34b81817dcc0b119d2da51037126d6b947d51f15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::snake&lt;/code&gt; method converts the given string to &lt;code&gt;snake_case&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Str::snake&lt;/code&gt; method converts the given string to &lt;code&gt;snake_case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="251f022da574b6d71c164f316c46f2792a0227d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::start&lt;/code&gt; method adds a single instance of the given value to a string if it does not already start with the value:</source>
          <target state="translated">The &lt;code&gt;Str::start&lt;/code&gt; method adds a single instance of the given value to a string if it does not already start with the value:</target>
        </trans-unit>
        <trans-unit id="342327204d8d570feeeec49cfbf6c607d1bab53d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::startsWith&lt;/code&gt; method determines if the given string begins with the given value:</source>
          <target state="translated">The &lt;code&gt;Str::startsWith&lt;/code&gt; method determines if the given string begins with the given value:</target>
        </trans-unit>
        <trans-unit id="f8cc960d7f41f495cada611bd2b74e20880b7895" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::studly&lt;/code&gt; method converts the given string to &lt;code&gt;StudlyCase&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Str::studly&lt;/code&gt; method converts the given string to &lt;code&gt;StudlyCase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6494afdc20b7af2a8ca6df1870060672ec2e124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::substr&lt;/code&gt; method returns the portion of string specified by the start and length parameters:</source>
          <target state="translated">The &lt;code&gt;Str::substr&lt;/code&gt; method returns the portion of string specified by the start and length parameters:</target>
        </trans-unit>
        <trans-unit id="52417edb186b794f90d733fb05b2c1c7080996d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::title&lt;/code&gt; method converts the given string to &lt;code&gt;Title Case&lt;/code&gt;:</source>
          <target state="translated">The &lt;code&gt;Str::title&lt;/code&gt; method converts the given string to &lt;code&gt;Title Case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cfe9bde802e21f0cce562b0687f976bbbaf34059" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::ucfirst&lt;/code&gt; method returns the given string with the first character capitalized:</source>
          <target state="translated">The &lt;code&gt;Str::ucfirst&lt;/code&gt; method returns the given string with the first character capitalized:</target>
        </trans-unit>
        <trans-unit id="f628576f670df1e2e1adc974319c6a8c14a17c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::upper&lt;/code&gt; method converts the given string to uppercase:</source>
          <target state="translated">The &lt;code&gt;Str::upper&lt;/code&gt; method converts the given string to uppercase:</target>
        </trans-unit>
        <trans-unit id="d0be5769152b18d35c6e57b609f4311cf95635d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::uuid&lt;/code&gt; method generates a UUID (version 4):</source>
          <target state="translated">&lt;code&gt;Str::uuid&lt;/code&gt; 방법은 UUID (버전 4)를 생성한다 :</target>
        </trans-unit>
        <trans-unit id="900f224b393c4a0d51b62a5470e60172015d6f10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::words&lt;/code&gt; method limits the number of words in a string:</source>
          <target state="translated">The &lt;code&gt;Str::words&lt;/code&gt; method limits the number of words in a string:</target>
        </trans-unit>
        <trans-unit id="0941779d78ada33775c2a9dcb8221874b0f05647" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestView&lt;/code&gt; object provides the following assertion methods: &lt;code&gt;assertSee&lt;/code&gt;, &lt;code&gt;assertSeeInOrder&lt;/code&gt;, &lt;code&gt;assertSeeText&lt;/code&gt;, &lt;code&gt;assertSeeTextInOrder&lt;/code&gt;, &lt;code&gt;assertDontSee&lt;/code&gt;, and &lt;code&gt;assertDontSeeText&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;TestView&lt;/code&gt; object provides the following assertion methods: &lt;code&gt;assertSee&lt;/code&gt; , &lt;code&gt;assertSeeInOrder&lt;/code&gt; , &lt;code&gt;assertSeeText&lt;/code&gt; , &lt;code&gt;assertSeeTextInOrder&lt;/code&gt; , &lt;code&gt;assertDontSee&lt;/code&gt; , and &lt;code&gt;assertDontSeeText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f952850031fe39c33de614ec967bd9bbbd37931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UploadedFile&lt;/code&gt; class also contains methods for accessing the file's fully-qualified path and its extension. The &lt;code&gt;extension&lt;/code&gt; method will attempt to guess the file's extension based on its contents. This extension may be different from the extension that was supplied by the client:</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; 의 클래스는 파일의 완전한 경로와 그 확장에 액세스하는 방법이 포함되어 있습니다. &lt;code&gt;extension&lt;/code&gt; 방법은 그 내용에 따라 파일의 확장자를 추측하려고 시도합니다. 이 확장은 클라이언트가 제공 한 확장과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dfd4e903db1e6b3c1fcb26d55ccba87393d5c16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;User&lt;/code&gt; model that is included with your Laravel application includes two helpful methods for authorizing actions: &lt;code&gt;can&lt;/code&gt; and &lt;code&gt;cant&lt;/code&gt;. The &lt;code&gt;can&lt;/code&gt; method receives the action you wish to authorize and the relevant model. For example, let's determine if a user is authorized to update a given &lt;code&gt;Post&lt;/code&gt; model:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; : 당신의 Laravel 응용 프로그램에 포함 된 모델은 작업을 승인하기위한 두 가지 유용한 방법이 포함 &lt;code&gt;can&lt;/code&gt; 및 &lt;code&gt;cant&lt;/code&gt; . &lt;code&gt;can&lt;/code&gt; 방법을 사용하면 권한을 부여하고자하는 행동과 관련 모델을 받는다. 예를 들어, 사용자가 지정된 &lt;code&gt;Post&lt;/code&gt; 모델 을 업데이트 할 권한이 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f366592bf9025a9f3a62a81d31949d49aba929bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Validator&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;Validator&lt;/code&gt; 계약</target>
        </trans-unit>
        <trans-unit id="c758be7fae18de0e27eab44ecf4e14e1969562c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VerifyCsrfToken&lt;/code&gt;&lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, which is included in the &lt;code&gt;web&lt;/code&gt; middleware group, will automatically verify that the token in the request input matches the token stored in the session.</source>
          <target state="translated">&lt;code&gt;VerifyCsrfToken&lt;/code&gt; 의&lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 에 포함되는, &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹은 자동으로 요청 입력의 토큰에 저장된 세션 토큰과 일치하는지 확인한다.</target>
        </trans-unit>
        <trans-unit id="2fbc4ed0b05cee2a820057d0f37de8320c4aca56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WithoutOverlapping&lt;/code&gt; middleware requires a cache driver that supports &lt;a href=&quot;cache#atomic-locks&quot;&gt;locks&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;WithoutOverlapping&lt;/code&gt; middleware requires a cache driver that supports &lt;a href=&quot;cache#atomic-locks&quot;&gt;locks&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2fceb537c95ee25371936ad38f60594ca173d286" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__&lt;/code&gt; function translates the given translation string or translation key using your &lt;a href=&quot;localization&quot;&gt;localization files&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;__&lt;/code&gt; 의 기능은 사용 주어진 번역 문자열이나 변환 키 변환 &lt;a href=&quot;localization&quot;&gt;현지화 파일&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="2af2aecb5d3d174ea33d080bfab188d69f825850" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort&lt;/code&gt; function throws &lt;a href=&quot;errors#http-exceptions&quot;&gt;an HTTP exception&lt;/a&gt; which will be rendered by the &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; 기능이 발생 &lt;a href=&quot;errors#http-exceptions&quot;&gt;하는 HTTP 예외&lt;/a&gt; 에 의해 렌더링되는 &lt;a href=&quot;errors#the-exception-handler&quot;&gt;예외 핸들러&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="51327f2b2f9ade3688b0bb2e504bab72a1f64180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort&lt;/code&gt; helper will immediately raise an exception which will be rendered by the exception handler. Optionally, you may provide the response text:</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; 헬퍼 즉시 예외 핸들러에 의해 렌더링되는 예외를 발생시킬 것이다. 선택적으로 응답 텍스트를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4776c7de50efea50d6843ba00650a38cdfbfde8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort_if&lt;/code&gt; function throws an HTTP exception if a given boolean expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;abort_if&lt;/code&gt; 의 기능에 주어진 부울 식 평가되는 경우는 HTTP 예외 발생 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="862623613edb876cd49d86fed1cd22d5310a8d15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort_unless&lt;/code&gt; function throws an HTTP exception if a given boolean expression evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;abort_unless&lt;/code&gt; 기능에 주어진 부울 식 평가되는 경우는 HTTP 예외가 발생 &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="322bc6834483effc87b86ff8d39e25143d55989a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function generates a URL for the given controller action. You do not need to pass the full namespace of the controller. Instead, pass the controller class name relative to the &lt;code&gt;App\Http\Controllers&lt;/code&gt; namespace:</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 함수는 주어진 제어기 동작에 대한 URL을 생성한다. 컨트롤러의 전체 네임 스페이스를 전달할 필요는 없습니다. 대신 &lt;code&gt;App\Http\Controllers&lt;/code&gt; 네임 스페이스와 관련된 컨트롤러 클래스 이름을 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="93f02f586e731df0839fecf684b239761b1b9e0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function generates a URL for the given controller action:</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 함수는 주어진 컨트롤러 액션에 대한 URL을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="389d6316d12a36ba5437e1f0199ca14ddf7a2390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add&lt;/code&gt; method will only add the item to the cache if it does not already exist in the cache store. The method will return &lt;code&gt;true&lt;/code&gt; if the item is actually added to the cache. Otherwise, the method will return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; 이미 캐시 저장소에 존재하지 않는 경우 메소드는 캐시에 항목을 추가합니다. 항목이 실제로 캐시에 추가되면 메소드는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="88d428bfb7dd390991279d4a6e60e9ec360c8dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addRoute&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;addRoute&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="a76c0146fa29decf17a03a3c607d05b12472011c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addRoute&lt;/code&gt; method of the &lt;code&gt;Illuminate\Routing\Router&lt;/code&gt; class has been changed from &lt;code&gt;protected&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Illuminate\Routing\Router&lt;/code&gt; 클래스 의 &lt;code&gt;addRoute&lt;/code&gt; 메소드가 &lt;code&gt;protected&lt;/code&gt; 에서 &lt;code&gt;public&lt;/code&gt; 으로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c6bceb2cc80c94454c3bcf88de6dae4d97c1df19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after&lt;/code&gt; method returns everything after the given value in a string. The entire string will be returned if the value does not exist within the string:</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; 문자열에서 주어진 값 이후 메소드가 복귀 다. 값이 문자열 내에 존재하지 않으면 전체 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="804fcec86d93d4767339bf0a224bc65ec320e077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;afterLast&lt;/code&gt; method returns everything after the last occurrence of the given value in a string. The entire string will be returned if the value does not exist within the string:</source>
          <target state="translated">&lt;code&gt;afterLast&lt;/code&gt; 방법은 문자열에서 주어진 값의 마지막 발생 후 모든 것을 반환합니다. 값이 문자열 내에 존재하지 않으면 전체 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="54f6e0aaa8749e0426714fd1a7912f00a2eca1c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all&lt;/code&gt; method returns the underlying array represented by the collection:</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; 방법은 컬렉션에 의해 나타내지는 기본 배열을 반환 :</target>
        </trans-unit>
        <trans-unit id="9ddcc92d98d51f82e33e04903e2ad77c593d2888" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allOnQueue()&lt;/code&gt; / &lt;code&gt;allOnConnection()&lt;/code&gt; Methods</source>
          <target state="translated">&lt;code&gt;allOnQueue()&lt;/code&gt; / &lt;code&gt;allOnConnection()&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="eb7731f7bcbc51d421928e6d1f32e28161e744f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;anticipate&lt;/code&gt; method can be used to provide auto-completion for possible choices. The user can still choose any answer, regardless of the auto-completion hints:</source>
          <target state="translated">는 &lt;code&gt;anticipate&lt;/code&gt; 방법은 가능한 선택에 대한 자동 완성 기능을 제공 할 수 있습니다. 자동 완성 힌트에 관계없이 사용자는 여전히 모든 답변을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2996bbfb45730106103f3999aedc76bf92fc964" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;api.php&lt;/code&gt; file contains routes that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; places in the &lt;code&gt;api&lt;/code&gt; middleware group, which provides rate limiting. These routes are intended to be stateless, so requests entering the application through these routes are intended to be authenticated via tokens and will not have access to session state.</source>
          <target state="translated">&lt;code&gt;api.php&lt;/code&gt; 의 파일 경로에 포함 된 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 의 의 장소 &lt;code&gt;api&lt;/code&gt; 속도 제한 제공하는 미들웨어 그룹. 이 라우트는 상태 비 저장을 목적으로하므로 이러한 라우트를 통해 애플리케이션에 들어가는 요청은 토큰을 통해 인증되며 세션 상태에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="83cc95853c7483092efc3965712e21e357bd04d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app.js&lt;/code&gt; file will load the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file which bootstraps and configures Vue, Axios, jQuery, and all other JavaScript dependencies. If you have additional JavaScript dependencies to configure, you may do so in this file.</source>
          <target state="translated">&lt;code&gt;app.js&lt;/code&gt; 파일은로드 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 파일을하는 부트 스트랩하고 구성 뷰, Axios의, jQuery를, 그리고 다른 모든 자바 스크립트 종속성. 구성 할 추가 JavaScript 종속성이있는 경우이 파일에서 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d0e3dbc11d71ab76d4ffa51077ee18753778f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="a299ea400a7145d8daa96438acb23717dd9eb0a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; directory contains a variety of additional directories such as &lt;code&gt;Console&lt;/code&gt;, &lt;code&gt;Http&lt;/code&gt;, and &lt;code&gt;Providers&lt;/code&gt;. Think of the &lt;code&gt;Console&lt;/code&gt; and &lt;code&gt;Http&lt;/code&gt; directories as providing an API into the core of your application. The HTTP protocol and CLI are both mechanisms to interact with your application, but do not actually contain application logic. In other words, they are two ways of issuing commands to your application. The &lt;code&gt;Console&lt;/code&gt; directory contains all of your Artisan commands, while the &lt;code&gt;Http&lt;/code&gt; directory contains your controllers, middleware, and requests.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 디렉토리는 다음과 같은 추가 디렉토리의 다양한 포함 &lt;code&gt;Console&lt;/code&gt; , &lt;code&gt;Http&lt;/code&gt; , 그리고 &lt;code&gt;Providers&lt;/code&gt; . &lt;code&gt;Console&lt;/code&gt; 및 &lt;code&gt;Http&lt;/code&gt; 디렉토리는 애플리케이션의 핵심에 API를 제공하는 것으로 생각하십시오 . HTTP 프로토콜과 CLI는 모두 애플리케이션과 상호 작용하는 메커니즘이지만 실제로 애플리케이션 로직을 포함하지는 않습니다. 즉, 응용 프로그램에 명령을 실행하는 두 가지 방법입니다. &lt;code&gt;Console&lt;/code&gt; 그동안 디렉토리는 사용자의 장인 명령이 모두 포함 &lt;code&gt;Http&lt;/code&gt; 디렉토리가 컨트롤러, 미들웨어 및 요청이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f42e5a3508d175f2c1d41e6e42cfe033130cb907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; directory contains the core code of your application. We'll explore this directory in more detail soon; however, almost all of the classes in your application will be in this directory.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 디렉토리는 응용 프로그램의 핵심 코드가 포함되어 있습니다. 곧이 디렉토리를 자세히 살펴 보겠습니다. 그러나 애플리케이션의 거의 모든 클래스가이 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="40b4df5fe13ce80d0fb1d7a2f69b424185048fbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; directory, as you might expect, contains the core code of your application. We'll explore this directory in more detail soon; however, almost all of the classes in your application will be in this directory.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 디렉토리는, 예상대로, 응용 프로그램의 핵심 코드가 포함되어 있습니다. 우리는이 디렉토리를 더 자세히 살펴볼 것입니다. 그러나 응용 프로그램의 거의 모든 클래스가이 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="648bf640cfa04d6d8fd6111d676b9beeda18a679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; function returns the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; instance:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 기능은 반환 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="107ebf4ba9fa6dcd42c38316765e7d5a00680604" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;app&lt;/code&gt; directory. You may also use the &lt;code&gt;app_path&lt;/code&gt; function to generate a fully qualified path to a file relative to the application directory:</source>
          <target state="translated">&lt;code&gt;app_path&lt;/code&gt; 기능은 완전한 경로를 반환 &lt;code&gt;app&lt;/code&gt; 디렉토리. &lt;code&gt;app_path&lt;/code&gt; 함수를 사용 하여 응용 프로그램 디렉토리와 관련된 파일의 정규화 된 경로를 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5da10c1d9ea4ce2e21314a37c73d217d850b9782" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;append&lt;/code&gt; method appends the given values to the string:</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; 방법은 문자열로 주어진 값을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="6f1372cf5f536e24d355fca1618301e293916bbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array&lt;/code&gt; cast type is particularly useful when working with columns that are stored as serialized JSON. For example, if your database has a &lt;code&gt;JSON&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; field type that contains serialized JSON, adding the &lt;code&gt;array&lt;/code&gt; cast to that attribute will automatically deserialize the attribute to a PHP array when you access it on your Eloquent model:</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 직렬화 JSON로 저장 열 작업시 캐스트 타입은 특히 유용하다. 예를 들어, 데이터베이스 에 직렬화 된 JSON을 포함 하는 &lt;code&gt;JSON&lt;/code&gt; 또는 &lt;code&gt;TEXT&lt;/code&gt; 필드 유형 이있는 경우 해당 속성에 &lt;code&gt;array&lt;/code&gt; 캐스트를 추가하면 Eloquent 모델에서 해당 속성에 액세스 할 때 해당 속성이 PHP 배열에 자동으로 직렬화 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="bb60216bc59a61482182c2b30117f82bd7a670dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_add&lt;/code&gt; function adds a given key / value pair to an array if the given key doesn't already exist in the array:</source>
          <target state="translated">&lt;code&gt;array_add&lt;/code&gt; 지정된 키 배열이 이미 존재하지 않으면 함수 배열을 소정의 키 / 값 쌍을 추가</target>
        </trans-unit>
        <trans-unit id="a2dc1322def33e1e6df81f0af3adfa3c31541891" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_collapse&lt;/code&gt; function collapses an array of arrays into a single array:</source>
          <target state="translated">&lt;code&gt;array_collapse&lt;/code&gt; 의 기능은 단일 어레이로 배열의 배열을 축소 :</target>
        </trans-unit>
        <trans-unit id="8ac29411bb34f7e4236a788ce940946e0006dcd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_divide&lt;/code&gt; function returns two arrays, one containing the keys, and the other containing the values of the given array:</source>
          <target state="translated">&lt;code&gt;array_divide&lt;/code&gt; 의 기능은 두 개의 어레이, 하나의 키를 포함하고, 소정의 배열의 값을 포함하는 다른 반환</target>
        </trans-unit>
        <trans-unit id="4cfa9a362b385c1b27b54233a0bae78bef94a50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_dot&lt;/code&gt; function flattens a multi-dimensional array into a single level array that uses &quot;dot&quot; notation to indicate depth:</source>
          <target state="translated">&lt;code&gt;array_dot&lt;/code&gt; 의 기능은 사용이 표기 깊이를 나타 내기 위해 &quot;점&quot;는 단일 레벨 어레이로 다차원 어레이를 병합 :</target>
        </trans-unit>
        <trans-unit id="a34e88993d6e714fd36ee59579b650b307b291a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_except&lt;/code&gt; function removes the given key / value pairs from an array:</source>
          <target state="translated">&lt;code&gt;array_except&lt;/code&gt; 의 함수 배열에서 지정된 키 / 값 쌍을 제거 :</target>
        </trans-unit>
        <trans-unit id="35f563a196bb635113d2bab1e1b3dd4ed434e60e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_first&lt;/code&gt; function returns the first element of an array passing a given truth test:</source>
          <target state="translated">&lt;code&gt;array_first&lt;/code&gt; 함수는 주어진 사실 테스트를 통과 어레이의 첫 번째 요소를 반환</target>
        </trans-unit>
        <trans-unit id="5374597b385d090ef998ff25e6391877f91f8f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_flatten&lt;/code&gt; function flattens a multi-dimensional array into a single level array:</source>
          <target state="translated">&lt;code&gt;array_flatten&lt;/code&gt; 기능은 단일 레벨 어레이로 다차원 어레이를 병합 :</target>
        </trans-unit>
        <trans-unit id="b562bec3b78f14b97ea9afacef7a86e82ca376b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_forget&lt;/code&gt; function removes a given key / value pair from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_forget&lt;/code&gt; 의 기능을 이용하여 중첩 어레이로부터 소정의 키 / 값 쌍을 제거 표기법을 &quot;점&quot;</target>
        </trans-unit>
        <trans-unit id="b4360116d8d15d276b266a594b19d95165a0250a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_get&lt;/code&gt; function also accepts a default value, which will be returned if the specific key is not found:</source>
          <target state="translated">&lt;code&gt;array_get&lt;/code&gt; 의 기능은 특정 키를 찾을 수없는 경우 반환되는 디폴트 값을 허용합니다</target>
        </trans-unit>
        <trans-unit id="367846d592be676d07e4e112875bf1a789e14ce5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_get&lt;/code&gt; function retrieves a value from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_get&lt;/code&gt; 의 기능을 이용하여 중첩 배열의 값이 표기 &quot;점&quot;검색 :</target>
        </trans-unit>
        <trans-unit id="33e56884be014cc4f829c8e7f50ae5467165a5ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_has&lt;/code&gt; function checks whether a given item or items exists in an array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_has&lt;/code&gt; 은 특정 아이템이 사용 배열에 존재하는지 표기 &quot;점&quot;체크 기능 :</target>
        </trans-unit>
        <trans-unit id="b77d4d9018f40ff54d7f776e93bcbef5512a1262" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_last&lt;/code&gt; function returns the last element of an array passing a given truth test:</source>
          <target state="translated">&lt;code&gt;array_last&lt;/code&gt; 함수는 주어진 진실 테스트를 통과하는 배열의 마지막 요소를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="b21e05b4256fcea622c95a7d8053c86af90983c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_only&lt;/code&gt; function returns only the specified key / value pairs from the given array:</source>
          <target state="translated">&lt;code&gt;array_only&lt;/code&gt; 함수 리턴 지정된 배열은 지정된 키 / 값 쌍 :</target>
        </trans-unit>
        <trans-unit id="405b2bd931f206a67425442f250df2ce9313be4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_pluck&lt;/code&gt; function retrieves all of the values for a given key from an array:</source>
          <target state="translated">&lt;code&gt;array_pluck&lt;/code&gt; 의 함수 배열에서 특정 키에 대한 모든 값을 검색한다 :</target>
        </trans-unit>
        <trans-unit id="7fd1b3999fc11cc5f008283c6302d4c08521e99a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_prepend&lt;/code&gt; function will push an item onto the beginning of an array:</source>
          <target state="translated">&lt;code&gt;array_prepend&lt;/code&gt; 의 함수 배열의 선두에있는 항목을 푸시한다 :</target>
        </trans-unit>
        <trans-unit id="0c22ccc5f5b38b638495efb5c239fb4cdbe2e72d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_pull&lt;/code&gt; function returns and removes a key / value pair from an array:</source>
          <target state="translated">&lt;code&gt;array_pull&lt;/code&gt; 의 함수 리턴과 배열에서 한 쌍의 키 / 값을 제거한다 :</target>
        </trans-unit>
        <trans-unit id="7e83b99e7d607b571394acd5f32115e10eb91102" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_random&lt;/code&gt; function returns a random value from an array:</source>
          <target state="translated">&lt;code&gt;array_random&lt;/code&gt; 의 함수 배열에서 랜덤 값을 반환</target>
        </trans-unit>
        <trans-unit id="6823049f9c7aeb8fca670408b5d56a0a0b037039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_set&lt;/code&gt; function sets a value within a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_set&lt;/code&gt; 의 기능을 이용하여 중첩 어레이 내의 값이 표기 &quot;점&quot;으로 설정 :</target>
        </trans-unit>
        <trans-unit id="77fa88857a475f1e3b5fee8670390af57e4ad41a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_sort&lt;/code&gt; function sorts an array by its values:</source>
          <target state="translated">&lt;code&gt;array_sort&lt;/code&gt; 의 함수의 값에 의해 배열을 정렬한다 :</target>
        </trans-unit>
        <trans-unit id="fee6f249a89ace0014a29cfcee8d6721179d6747" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_sort_recursive&lt;/code&gt; function recursively sorts an array using the &lt;code&gt;sort&lt;/code&gt; function for numeric sub=arrays and &lt;code&gt;ksort&lt;/code&gt; for associative sub-arrays:</source>
          <target state="translated">&lt;code&gt;array_sort_recursive&lt;/code&gt; 함수를 반복적으로 사용하여 배열 정렬 &lt;code&gt;sort&lt;/code&gt; 숫자 = 서브 어레이 및 펑션 &lt;code&gt;ksort&lt;/code&gt; 연관 서브 어레이를 들어 :</target>
        </trans-unit>
        <trans-unit id="59d4a4b3d1214a6b120961c589a52c4c1cc8a4b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_where&lt;/code&gt; function filters an array using the given Closure:</source>
          <target state="translated">&lt;code&gt;array_where&lt;/code&gt; 의 함수는 주어진 클로저를 사용하여 배열 필터 :</target>
        </trans-unit>
        <trans-unit id="c6ef8513d6b98dafd58eac0624def8331d272d0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_wrap&lt;/code&gt; function wraps the given value in an array. If the given value is already an array it will not be changed:</source>
          <target state="translated">&lt;code&gt;array_wrap&lt;/code&gt; 의 함수 배열에서 주어진 값을 감싼다. 주어진 값이 이미 배열이면 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea31afbf8184c07e06f093322f0e890f0881eab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ascii&lt;/code&gt; method will attempt to transliterate the string into an ASCII value:</source>
          <target state="translated">&lt;code&gt;ascii&lt;/code&gt; 방법은 ASCII 값으로 문자열을 음역을 시도합니다 :</target>
        </trans-unit>
        <trans-unit id="c8727a5e3954aeb5c9933b28b03fb06315cbd788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="d54eb550941a4de9f2cc8b5a2d3322814b1e61c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert&lt;/code&gt; method may make any assertions necessary to verify that the browser is actually on the given page. Completing this method is not necessary; however, you are free to make these assertions if you wish. These assertions will be run automatically when navigating to the page:</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; 방법은 필요한 모든 주장은 브라우저가 특정 페이지에 실제로 있는지 확인 할 수 있습니다. 이 방법을 완료 할 필요는 없습니다. 그러나 원하는 경우 이러한 어설 션을 자유롭게 만들 수 있습니다. 이 어설 션은 페이지를 탐색 할 때 자동으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="52dd67209e34f30b2f8480c2b419640e3f829842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertDatabaseHas&lt;/code&gt; method and other helpers like it are for convenience. You are free to use any of PHPUnit's built-in assertion methods to supplement your feature tests.</source>
          <target state="translated">&lt;code&gt;assertDatabaseHas&lt;/code&gt; 의 방법과 같은 다른 헬퍼의 편의를위한 것입니다. 기능 테스트를 보완하기 위해 PHPUnit의 내장 어설 션 메소드를 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1ba6121bf76ff6857dc987849db1c8320f7a274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertExactJson&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;assertExactJson&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="069dc224190dcf4fae31b8857d6f4f899d15fe49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertExactJson&lt;/code&gt; method now requires numeric keys of compared arrays to match and be in the same order. If you would like to compare JSON against an array without requiring numerically keyed arrays to have the same order, you may use the &lt;code&gt;assertSimilarJson&lt;/code&gt; method instead.</source>
          <target state="translated">&lt;code&gt;assertExactJson&lt;/code&gt; 의 방법은 이제 일치와 같은 순서로 비교 배열의 숫자 키를 필요로한다. 숫자로 키가 지정된 배열이 동일한 순서를 갖도록 요구하지 않고 JSON을 배열과 비교하려면 대신 &lt;code&gt;assertSimilarJson&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cea1dce9d3092505a05fea575ffe8e176f4fe513" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertJson&lt;/code&gt; method converts the response to an array and utilizes &lt;code&gt;PHPUnit::assertArraySubset&lt;/code&gt; to verify that the given array exists within the JSON response returned by the application. So, if there are other properties in the JSON response, this test will still pass as long as the given fragment is present.</source>
          <target state="translated">&lt;code&gt;assertJson&lt;/code&gt; 의 방법은 어레이에 대한 응답을 이용하여 변환 &lt;code&gt;PHPUnit::assertArraySubset&lt;/code&gt; 지정된 배열은 애플리케이션에 의해 반환 된 응답 JSON 내에 존재하는지 확인. 따라서 JSON 응답에 다른 속성이있는 경우이 테스트는 지정된 조각이 존재하는 한 계속 통과합니다.</target>
        </trans-unit>
        <trans-unit id="49bea2d3cec0522da7554d65ecd899892ae55e50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertSent&lt;/code&gt; method accepts a callback which will be given an &lt;code&gt;Illuminate\Http\Client\Request&lt;/code&gt; instance and should return a boolean value indicating if the request matches your expectations. In order for the test to pass, at least one request must have been issued matching the given expectations:</source>
          <target state="translated">&lt;code&gt;assertSent&lt;/code&gt; 의 방법은 받게됩니다 콜백 수락 &lt;code&gt;Illuminate\Http\Client\Request&lt;/code&gt; 인스턴스와 요청이 여러분의 기대에 일치하는 경우를 나타내는 부울 값을 반환해야합니다. 테스트를 통과하려면 주어진 기대치와 일치하는 하나 이상의 요청이 발행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="1fd748b0335a20b51b190655cbcb15f1e4095463" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asset&lt;/code&gt; function generates a URL for an asset using the current scheme of the request (HTTP or HTTPS):</source>
          <target state="translated">&lt;code&gt;asset&lt;/code&gt; 기능은 요청의 현재 방식을 사용 자산 (HTTP 또는 HTTPS)에 대한 URL을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="a783ff6e0e73e37787879198d47d9156f532cb95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attach&lt;/code&gt; method may be used to attach a file to a &lt;code&gt;file&lt;/code&gt; input element. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a file input with matching &lt;code&gt;name&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 방법은 파일을 첨부하는 데 사용될 수있는 &lt;code&gt;file&lt;/code&gt; 입력 요소. 다른 많은 입력 관련 방법과 마찬가지로 전체 CSS 선택기가 필요하지 않습니다. 정확한 선택기 일치를 찾을 수없는 경우 Dusk는 &lt;code&gt;name&lt;/code&gt; 속성 이 일치하는 파일 입력을 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="07428adb2fe7e7eee1b2dd07cb8605afa283a5b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachData&lt;/code&gt; method may be used to attach a raw string of bytes as an attachment. For example, you might use this method if you have generated a PDF in memory and want to attach it to the email without writing it to disk. The &lt;code&gt;attachData&lt;/code&gt; method accepts the raw data bytes as its first argument, the name of the file as its second argument, and an array of options as its third argument:</source>
          <target state="translated">&lt;code&gt;attachData&lt;/code&gt; 의 방법은 첨부 원시 바이트 스트링을 연결하는데 사용될 수있다. 예를 들어, 메모리에 PDF를 생성하여 디스크에 쓰지 않고 전자 메일에 첨부하려는 경우이 방법을 사용할 수 있습니다. &lt;code&gt;attachData&lt;/code&gt; 에 있어서, 상기 원시 데이터가 첫 번째 인자, 두 번째 인수는 파일의 이름, 그 세 번째 인자와 같은 옵션의 배열로 받아 바이트 :</target>
        </trans-unit>
        <trans-unit id="f3bf53256a8d19705f75643f4d9d2dccc6c807f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachData&lt;/code&gt; method may be used to attach a raw string of bytes as an attachment:</source>
          <target state="translated">&lt;code&gt;attachData&lt;/code&gt; 의 방법은 첨부 원시 바이트 스트링을 연결하는데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="7a1cf432ca8787321a7b55d8366e7f367551836e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachFromStorageDisk&lt;/code&gt; method may be used if you need to specify a storage disk other than your default disk:</source>
          <target state="translated">&lt;code&gt;attachFromStorageDisk&lt;/code&gt; 의 당신이 당신의 기본 디스크 이외의 저장 디스크를 지정해야하는 경우 방법을 사용할 수있다 :</target>
        </trans-unit>
        <trans-unit id="e0cd0c1802646bc6a5eeef0f0420c1c75ff61849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attempt&lt;/code&gt; method accepts an array of key / value pairs as its first argument. The values in the array will be used to find the user in your database table. So, in the example above, the user will be retrieved by the value of the &lt;code&gt;email&lt;/code&gt; column. If the user is found, the hashed password stored in the database will be compared with the &lt;code&gt;password&lt;/code&gt; value passed to the method via the array. You should not hash the password specified as the &lt;code&gt;password&lt;/code&gt; value, since the framework will automatically hash the value before comparing it to the hashed password in the database. If the two hashed passwords match an authenticated session will be started for the user.</source>
          <target state="translated">&lt;code&gt;attempt&lt;/code&gt; 방법은 첫 번째 인수로서 키 / 값 쌍의 어레이를 수용한다. 배열의 값은 데이터베이스 테이블에서 사용자를 찾는 데 사용됩니다. 따라서 위의 예에서 &lt;code&gt;email&lt;/code&gt; 열의 값으로 사용자를 검색합니다 . 사용자가 발견되면 데이터베이스에 저장된 해시 된 비밀번호 가 배열을 통해 메소드에 전달 된 &lt;code&gt;password&lt;/code&gt; 값 과 비교 됩니다. 프레임 워크는 값을 데이터베이스의 해시 된 비밀번호와 비교하기 전에 값을 자동으로 해시하므로 &lt;code&gt;password&lt;/code&gt; 값 으로 지정된 비밀번호를 해시하면 안됩니다 . 두 개의 해시 비밀번호가 일치하면 인증 된 세션이 사용자에 대해 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="75c68e6b3426897eff2ddcf86671579c6d7912e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attempt&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if authentication was successful. Otherwise, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;attempt&lt;/code&gt; 방법은 반환 &lt;code&gt;true&lt;/code&gt; 인증이 성공하면. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c75d1fcbf96d2c2e783757576d4fa331993c205d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auth&lt;/code&gt; function returns an &lt;a href=&quot;authentication&quot;&gt;authenticator&lt;/a&gt; instance. You may use it instead of the &lt;code&gt;Auth&lt;/code&gt; facade for convenience:</source>
          <target state="translated">&lt;code&gt;auth&lt;/code&gt; 함수는 반환 &lt;a href=&quot;authentication&quot;&gt;인증의&lt;/a&gt; 인스턴스를. 편의를 위해 &lt;code&gt;Auth&lt;/code&gt; 파사드 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bc3e5101eb5465d69f022a34d35d82a348bec99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authenticate&lt;/code&gt; method of the &lt;code&gt;Illuminate\Auth\Middleware\Authenticate&lt;/code&gt; middleware has been updated to accept the incoming &lt;code&gt;$request&lt;/code&gt; as its first argument. If you are overriding this method in your own &lt;code&gt;Authenticate&lt;/code&gt; middleware, you should update your middleware's signature:</source>
          <target state="translated">&lt;code&gt;Illuminate\Auth\Middleware\Authenticate&lt;/code&gt; 미들웨어 의 &lt;code&gt;authenticate&lt;/code&gt; 메소드가 들어오는 &lt;code&gt;$request&lt;/code&gt; 를 첫 번째 인수로 수락하도록 업데이트되었습니다 . 자체 &lt;code&gt;Authenticate&lt;/code&gt; 미들웨어 에서이 메소드를 대체하는 경우 미들웨어의 서명을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="0946cd430462515b25455cee224bb9e738f6ac9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authorizeResource&lt;/code&gt; method accepts the model's class name as its first argument, and the name of the route / request parameter that will contain the model's ID as its second argument. You should ensure your &lt;a href=&quot;controllers#resource-controllers&quot;&gt;resource controller&lt;/a&gt; is created with the &lt;code&gt;--model&lt;/code&gt; flag to have the required method signatures and type hints:</source>
          <target state="translated">&lt;code&gt;authorizeResource&lt;/code&gt; 에 있어서 첫 번째 인자와 두 번째 인자로 모델의 ID를 포함 할 노선 / 요청 파라미터의 이름과 모델의 클래스 이름을 받아 들인다. 필요한 메서드 서명과 유형 힌트를 갖도록 &lt;a href=&quot;controllers#resource-controllers&quot;&gt;리소스 컨트롤러&lt;/a&gt; 가 &lt;code&gt;--model&lt;/code&gt; 플래그로 생성 되었는지 확인해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="aacc914d4ce5b5e0cc614b27083d1d3b5b1bd3c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto&lt;/code&gt; strategy adjusts the number of worker processes per queue based on the current workload of the queue. For example, if your &lt;code&gt;notifications&lt;/code&gt; queue has 1,000 waiting jobs while your &lt;code&gt;render&lt;/code&gt; queue is empty, Horizon will allocate more workers to your &lt;code&gt;notifications&lt;/code&gt; queue until it is empty. When the &lt;code&gt;balance&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;, the default Laravel behavior will be used, which processes queues in the order they are listed in your configuration.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; 전략은 큐의 현재 작업 부하에 따라 대기열 당 작업자 프로세스의 수를 조정합니다. 예를 들어 &lt;code&gt;render&lt;/code&gt; 대기열이 비어있는 동안 &lt;code&gt;notifications&lt;/code&gt; 대기열에 1,000 개의 대기 작업 이있는 경우 Horizon은 비어있을 때까지 &lt;code&gt;notifications&lt;/code&gt; 대기열에 더 많은 작업자를 할당합니다 . 때 &lt;code&gt;balance&lt;/code&gt; 옵션이 설정되어 &lt;code&gt;false&lt;/code&gt; , 기본 Laravel 동작은 구성에 나열된 순서대로 큐를 처리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d4eb3170129ccff2d868403160bf48d5d3a77b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;avg&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Average&quot;&gt;average value&lt;/a&gt; of a given key:</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; 방법은 반환 &lt;a href=&quot;https://en.wikipedia.org/wiki/Average&quot;&gt;평균값&lt;/a&gt; 주어진 키를 :</target>
        </trans-unit>
        <trans-unit id="e24f8d6fd67c88b2183b2d08a6d1cd2291725395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;back&lt;/code&gt; function generates a &lt;a href=&quot;responses#redirects&quot;&gt;redirect HTTP response&lt;/a&gt; to the user's previous location:</source>
          <target state="translated">&lt;code&gt;back&lt;/code&gt; 기능은 생성 &lt;a href=&quot;responses#redirects&quot;&gt;리디렉션 HTTP 응답&lt;/a&gt; 사용자의 이전 위치를 :</target>
        </trans-unit>
        <trans-unit id="4991e57b70a91378b4f9614c1f379806983e8dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;balanceMaxShift&lt;/code&gt; and &lt;code&gt;balanceCooldown&lt;/code&gt; configuration values to determine how quickly Horizon will scale to meet worker demand. In the example above, a maximum of one new process will be created or destroyed every three seconds. You are free to tweak these values as necessary based on your application's needs.</source>
          <target state="translated">&lt;code&gt;balanceMaxShift&lt;/code&gt; 및 &lt;code&gt;balanceCooldown&lt;/code&gt; 구성 값은 호라이즌은 근로자 수요를 충족하기 위해 확장 할 수 얼마나 빨리 결정합니다. 위의 예에서 최대 하나의 새 프로세스가 3 초마다 생성되거나 삭제됩니다. 애플리케이션의 필요에 따라 필요에 따라 이러한 값을 자유롭게 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b47e28f97daa975644015a3546d890186a8db9a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base_path&lt;/code&gt; function returns the fully qualified path to the project root. You may also use the &lt;code&gt;base_path&lt;/code&gt; function to generate a fully qualified path to a given file relative to the project root directory:</source>
          <target state="translated">&lt;code&gt;base_path&lt;/code&gt; 의 기능은 프로젝트 루트에 대한 완전한 경로를 반환합니다. &lt;code&gt;base_path&lt;/code&gt; 함수를 사용 하여 프로젝트 루트 디렉토리와 관련하여 주어진 파일에 대한 완전한 경로를 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f57f099699de14a8bd96a07ef5021d114f80a30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;basename&lt;/code&gt; method will return the trailing name component of the given string:</source>
          <target state="translated">&lt;code&gt;basename&lt;/code&gt; 방법은 주어진 문자열의 후행 이름 구성 요소를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="575d0a9a2334896cacd090ce17df0226ed1f1454" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bcrypt&lt;/code&gt; function &lt;a href=&quot;hashing&quot;&gt;hashes&lt;/a&gt; the given value using Bcrypt. You may use it as an alternative to the &lt;code&gt;Hash&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;bcrypt&lt;/code&gt; 함수 는 Bcrypt를 사용하여 지정된 값을 &lt;a href=&quot;hashing&quot;&gt;해시&lt;/a&gt; 합니다. &lt;code&gt;Hash&lt;/code&gt; 파사드 의 대안으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fb1d447d05ae452ba08f92b53346774cd31a0f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before&lt;/code&gt; method of a policy class will not be called if the class doesn't contain a method with a name matching the name of the ability being checked.</source>
          <target state="translated">클래스에 검사중인 기능의 이름과 일치하는 이름을 가진 메소드가 포함되어 있지 않으면 정책 클래스 의 &lt;code&gt;before&lt;/code&gt; 메소드가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d9e52956cc32f7d2a9913e4232dff882a5d61e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before&lt;/code&gt; method returns everything before the given value in a string:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 문자열에서 주어진 값 전에 메소드가 리턴의 모든 :</target>
        </trans-unit>
        <trans-unit id="6b83f77611182a574804768e4a94982259775efd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;beforeLast&lt;/code&gt; method returns everything before the last occurrence of the given value in a string:</source>
          <target state="translated">&lt;code&gt;beforeLast&lt;/code&gt; 문자열에서 주어진 값의 마지막 발생하기 전에 메소드가 리턴의 모든 :</target>
        </trans-unit>
        <trans-unit id="081e8cbd44fb962622e3869a47967640c2898526" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongsTo&lt;/code&gt; relationship allows you to define a default model that will be returned if the given relationship is &lt;code&gt;null&lt;/code&gt;. This pattern is often referred to as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null Object pattern&lt;/a&gt; and can help remove conditional checks in your code. In the following example, the &lt;code&gt;user&lt;/code&gt; relation will return an empty &lt;code&gt;App\User&lt;/code&gt; model if no &lt;code&gt;user&lt;/code&gt; is attached to the post:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 를의 관계는 주어진 관계가있는 경우 반환됩니다 기본 모델을 정의 할 수 있습니다 &lt;code&gt;null&lt;/code&gt; . 이 패턴은 종종 &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null 개체 패턴&lt;/a&gt; 이라고하며 코드에서 조건부 검사를 제거하는 데 도움이 될 수 있습니다. 다음 예 에서 게시물에 첨부 된 &lt;code&gt;user&lt;/code&gt; 가 없는 경우 &lt;code&gt;user&lt;/code&gt; 관계는 빈 &lt;code&gt;App\User&lt;/code&gt; 모델을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e5ef42973b6e49f197e87c807eb308c722dfb4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongsTo&lt;/code&gt;, &lt;code&gt;hasOne&lt;/code&gt;, &lt;code&gt;hasOneThrough&lt;/code&gt;, and &lt;code&gt;morphOne&lt;/code&gt; relationships allow you to define a default model that will be returned if the given relationship is &lt;code&gt;null&lt;/code&gt;. This pattern is often referred to as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null Object pattern&lt;/a&gt; and can help remove conditional checks in your code. In the following example, the &lt;code&gt;user&lt;/code&gt; relation will return an empty &lt;code&gt;App\Models\User&lt;/code&gt; model if no &lt;code&gt;user&lt;/code&gt; is attached to the post:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 를 , &lt;code&gt;hasOne&lt;/code&gt; 의 , &lt;code&gt;hasOneThrough&lt;/code&gt; 및 &lt;code&gt;morphOne&lt;/code&gt; 의 관계는 주어진 관계가있는 경우 반환됩니다 기본 모델을 정의 할 수 &lt;code&gt;null&lt;/code&gt; . 이 패턴은 종종 &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null 개체 패턴&lt;/a&gt; 이라고하며 코드에서 조건부 검사를 제거하는 데 도움이 될 수 있습니다. 다음 예제에서 &lt;code&gt;user&lt;/code&gt; 관계는 게시물에 연결된 &lt;code&gt;user&lt;/code&gt; 가 없는 경우 빈 &lt;code&gt;App\Models\User&lt;/code&gt; 모델을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2691914e41e4bdfbdb2fadf3ceeb7672469f1b26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;between&lt;/code&gt; method may be used to limit the execution of a task based on the time of day:</source>
          <target state="translated">&lt;code&gt;between&lt;/code&gt; 방법은 시간에 따라 태스크의 실행을 제한하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="d7560a005145719a932c4ab497933dd373b4ca5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bindings&lt;/code&gt; And &lt;code&gt;singletons&lt;/code&gt; Properties</source>
          <target state="translated">&lt;code&gt;bindings&lt;/code&gt; 그리고 &lt;code&gt;singletons&lt;/code&gt; 등록</target>
        </trans-unit>
        <trans-unit id="556878d4ee5fd23a652f6aab4019b6f8b6cc32e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blank&lt;/code&gt; function returns whether the given value is &quot;blank&quot;:</source>
          <target state="translated">&lt;code&gt;blank&lt;/code&gt; 주어진 값이 &quot;빈&quot;인지 함수가 반환 :</target>
        </trans-unit>
        <trans-unit id="6696a92f9fbd33588c7fea1f35f5b6bac42799ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;block&lt;/code&gt; method accepts two optional arguments. The first argument accepted by the &lt;code&gt;block&lt;/code&gt; method is the maximum number of seconds the session lock should be held for before it is released. Of course, if the request finishes executing before this time the lock will be released earlier.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 방법은 두 가지 선택적 인수를 사용할 수 있습니다. &lt;code&gt;block&lt;/code&gt; 메소드에서 허용하는 첫 번째 인수 는 세션 잠금이 해제되기 전에 유지되어야하는 최대 시간 (초)입니다. 물론이 시간 전에 요청 실행이 완료되면 잠금이 더 일찍 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="8820ead9dfc6b3debbc43b6f04b04b60c46a0c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="b46dc7b4db6394b9d9c795f3d0f6df18a62a8835" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; directory contains the &lt;code&gt;app.php&lt;/code&gt; file which bootstraps the framework. This directory also houses a &lt;code&gt;cache&lt;/code&gt; directory which contains framework generated files for performance optimization such as the route and services cache files.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; 디렉토리는 포함 &lt;code&gt;app.php&lt;/code&gt; 의 프레임 워크를 부트 스트랩 파일을. 이 디렉토리 에는 경로 및 서비스 캐시 파일과 같은 성능 최적화를 위해 프레임 워크 생성 파일이 포함 된 &lt;code&gt;cache&lt;/code&gt; 디렉토리도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d01fb4eb52b5c8ef7bfa5c295d3d2e796f1d2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;broadcast&lt;/code&gt; channel broadcasts notifications using Laravel's &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt; services, allowing your JavaScript client to catch notifications in realtime. If a notification supports broadcasting, you can define a &lt;code&gt;toBroadcast&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;BroadcastMessage&lt;/code&gt; instance. If the &lt;code&gt;toBroadcast&lt;/code&gt; method does not exist, the &lt;code&gt;toArray&lt;/code&gt; method will be used to gather the data that should be broadcast. The returned data will be encoded as JSON and broadcast to your JavaScript client. Let's take a look at an example &lt;code&gt;toBroadcast&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; Laravel의 사용 채널 방송 알림 &lt;a href=&quot;broadcasting&quot;&gt;이벤트 방송&lt;/a&gt; 서비스를 실시간으로 캐치 알림 자바 스크립트 클라이언트를 허용합니다. 알림이 브로드 캐스팅을 지원하는 경우 알림 클래스에 &lt;code&gt;toBroadcast&lt;/code&gt; 메소드를 정의 할 수 있습니다 . 이 메소드는 &lt;code&gt;$notifiable&lt;/code&gt; 엔티티를 수신 하고 &lt;code&gt;BroadcastMessage&lt;/code&gt; 인스턴스를 반환해야 합니다. 는 IF &lt;code&gt;toBroadcast&lt;/code&gt; 의 방법이 존재하지 않는의 &lt;code&gt;toArray&lt;/code&gt; 의 방법은 방송되어야하는 데이터를 수집하는 데 사용됩니다. 반환 된 데이터는 JSON으로 인코딩되고 JavaScript 클라이언트에 브로드 캐스트됩니다. &lt;code&gt;toBroadcast&lt;/code&gt; 메소드 의 예를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="9ce61cb21bea66446c0d2bc2c82b2537530049e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;broadcast&lt;/code&gt; channel broadcasts notifications using Laravel's &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt; services, allowing your JavaScript client to catch notifications in realtime. If a notification supports broadcasting, you should define a &lt;code&gt;toBroadcast&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;BroadcastMessage&lt;/code&gt; instance. The returned data will be encoded as JSON and broadcast to your JavaScript client. Let's take a look at an example &lt;code&gt;toBroadcast&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; Laravel의 사용 채널 방송 알림 &lt;a href=&quot;broadcasting&quot;&gt;이벤트 방송&lt;/a&gt; 서비스를 실시간으로 캐치 알림 자바 스크립트 클라이언트를 허용합니다. 알림이 브로드 캐스트를 지원하는 경우 알림 클래스에서 &lt;code&gt;toBroadcast&lt;/code&gt; 메서드를 정의해야합니다 . 이 메소드는 &lt;code&gt;$notifiable&lt;/code&gt; 엔티티를 수신 하고 &lt;code&gt;BroadcastMessage&lt;/code&gt; 인스턴스를 리턴해야 합니다. 반환 된 데이터는 JSON으로 인코딩되어 JavaScript 클라이언트로 브로드 캐스트됩니다. &lt;code&gt;toBroadcast&lt;/code&gt; 방법 에 대한 예제를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="fb8afc6728fe2edc950a642c740965754e6c8adf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;broadcast&lt;/code&gt; function &lt;a href=&quot;broadcasting&quot;&gt;broadcasts&lt;/a&gt; the given &lt;a href=&quot;events&quot;&gt;event&lt;/a&gt; to its listeners:</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; 기능은 &lt;a href=&quot;broadcasting&quot;&gt;방송&lt;/a&gt; 주어진 &lt;a href=&quot;events&quot;&gt;이벤트&lt;/a&gt; 의 리스너를 :</target>
        </trans-unit>
        <trans-unit id="7787d617215f7e19a0e1cadbe1f4ddadc299ff5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache&lt;/code&gt; function may be used to get values from the &lt;a href=&quot;cache&quot;&gt;cache&lt;/a&gt;. If the given key does not exist in the cache, an optional default value will be returned:</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; 기능은에서 값을 얻기 위해 사용될 수있는 &lt;a href=&quot;cache&quot;&gt;캐시&lt;/a&gt; . 제공된 키가 캐시에 없으면 선택적 기본값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9ee72dea89b248063dd483e1b055722ba5ca2413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;camel&lt;/code&gt; method converts the given string to &lt;code&gt;camelCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;camel&lt;/code&gt; 방법에 주어진 문자열로 변환 &lt;code&gt;camelCase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c209d2e0081144bf6b09461f817bb8bab51340c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;camel_case&lt;/code&gt; function converts the given string to &lt;code&gt;camelCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;camel_case&lt;/code&gt; 의 기능에 주어진 문자열로 변환 &lt;code&gt;camelCase&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="24b4d530f1937b6757a23525707698b16a728ec3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;castUsing&lt;/code&gt; method of the &lt;code&gt;Castable&lt;/code&gt; interface has been updated to accept an array of arguments. If you are implementing this interface you should update your implementation accordingly:</source>
          <target state="translated">&lt;code&gt;Castable&lt;/code&gt; 인터페이스 의 &lt;code&gt;castUsing&lt;/code&gt; 메소드 가 인수 배열을 허용하도록 업데이트되었습니다. 이 인터페이스를 구현하는 경우 그에 따라 구현을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c759b17977f92730451895dba2eaff66b99f3e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; method allows you to modify some existing column types to a new type or modify the column's attributes. For example, you may wish to increase the size of a string column. To see the &lt;code&gt;change&lt;/code&gt; method in action, let's increase the size of the &lt;code&gt;name&lt;/code&gt; column from 25 to 50:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 방법은 당신이 새로운 유형에 일부 기존의 열 유형을 수정하거나 컬럼의 속성을 수정할 수 있습니다. 예를 들어 문자열 열의 크기를 늘리려 고 할 수 있습니다. 보려면 &lt;code&gt;change&lt;/code&gt; 작업에 방법을,의는의 크기가 증가하게 &lt;code&gt;name&lt;/code&gt; 25 ~ 50에서 열 :</target>
        </trans-unit>
        <trans-unit id="8dcf5679e08e6fed93eff8b6e1babc6b7b64f86b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; method allows you to modify type and attributes of existing columns. For example, you may wish to increase the size of a &lt;code&gt;string&lt;/code&gt; column. To see the &lt;code&gt;change&lt;/code&gt; method in action, let's increase the size of the &lt;code&gt;name&lt;/code&gt; column from 25 to 50:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 방법을 사용하면 유형을 수정 할 수 있으며, 기존 컬럼의 속성. 예를 들어 &lt;code&gt;string&lt;/code&gt; 열의 크기를 늘릴 수 있습니다 . 보려면 &lt;code&gt;change&lt;/code&gt; 작업에 방법을,의는의 크기가 증가하게 &lt;code&gt;name&lt;/code&gt; 25 ~ 50에서 열 :</target>
        </trans-unit>
        <trans-unit id="1019ee04af1f807837e2ee3e1f2f5ef72a68114c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; method accepts two arguments: the name of the channel and a callback which returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating whether the user is authorized to listen on the channel.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 채널의 이름과 반환하는 콜백 : 방법은 두 개의 인수를 받아들이는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 사용자가 채널에서 수신 할 수있는 권한이 있는지 여부를 나타내는합니다.</target>
        </trans-unit>
        <trans-unit id="4839e3d903cfa95a8e0872483646cc572986fa7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channels.php&lt;/code&gt; file is where you may register all of the event broadcasting channels that your application supports.</source>
          <target state="translated">&lt;code&gt;channels.php&lt;/code&gt; 의 당신이 당신의 응용 프로그램이 지원하는 채널을 방송 이벤트를 모두 등록 할 수있는 위치 파일입니다.</target>
        </trans-unit>
        <trans-unit id="35707debc3b39735cf36862d754dd01a13787d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method accepts an array as its second argument, allowing you to pass any options you wish to the underlying Stripe / Braintree charge creation. Consult the Stripe or Braintree documentation regarding the options available to you when creating charges:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 방법은 당신이 기본 스트라이프 / 브레인 충전 창출에 원하는 옵션을 전달 할 수 있도록, 두 번째 인수로 배열을 받아들입니다. 청구 작성시 사용 가능한 옵션에 대해서는 Stripe 또는 Braintree 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1f9142b0c4d1a2c552883895dc2371aafcb060c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method accepts an array as its third argument, allowing you to pass any options you wish to the underlying Paddle pay link creation. Please consult &lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink&quot;&gt;the Paddle documentation&lt;/a&gt; to learn more about the options available to you when creating charges:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 방법은 당신이 기본 패들 유료 링크 생성에 원하는 옵션을 전달 할 수 있도록, 세 번째 인수로 배열을 받아들입니다. 요금을 생성 할 때 사용할 수있는 옵션에 대한 자세한 내용은 &lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink&quot;&gt;Paddle 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cbe9ae099ae5b2f0d93c037e0c7bee8f8227a74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method accepts an array as its third argument, allowing you to pass any options you wish to the underlying Stripe charge creation. Consult the Stripe documentation regarding the options available to you when creating charges:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 방법은 당신이 기본 스트라이프 충전 창출에 원하는 옵션을 전달 할 수 있도록, 세 번째 인수로 배열을 받아들입니다. 요금을 생성 할 때 사용할 수있는 옵션에 대해서는 Stripe 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a2ed044cfee7289a3b31f548d9c4b124d04388f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method accepts the amount you would like to charge in the &lt;strong&gt;lowest denominator of the currency used by your application&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 방법은 당신이에 충전 할 금액을 받아들이는 &lt;strong&gt;응용 프로그램이 사용하는 통화의 가장 낮은 분모&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ce14699e953c9ce1d666c34249697565934a7c5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method will throw an exception if the charge fails. If the charge is successful, an instance of &lt;code&gt;Laravel\Cashier\Payment&lt;/code&gt; will be returned from the method:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 충전이 실패하면 메소드는 예외를 throw합니다. 청구에 성공하면 &lt;code&gt;Laravel\Cashier\Payment&lt;/code&gt; 인스턴스가 메소드에서 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c6b9f331241cc24b30e525ca47a1bed8060da414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method will throw an exception if the charge fails. If the charge is successful, the full Stripe / Braintree response will be returned from the method:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 충전이 실패하면 메소드는 예외를 throw합니다. 청구가 완료되면 메소드에서 전체 Stripe / Braintree 응답이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a5844dcc9e7144777f9e9d27452041c3bb30ec50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chargeProduct&lt;/code&gt; method accepts an array as its second argument, allowing you to pass any options you wish to the underlying Paddle pay link creation. Please consult &lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink&quot;&gt;the Paddle documentation&lt;/a&gt; regarding the options that are available to you when creating charges:</source>
          <target state="translated">&lt;code&gt;chargeProduct&lt;/code&gt; 의 방법을 사용하면 기본 패들 유료 링크 생성에 원하는 옵션을 전달 할 수 있도록, 두 번째 인수로 배열을 받아들입니다. 요금을 생성 할 때 사용할 수있는 옵션에 대해서는 &lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink&quot;&gt;Paddle 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c3c2fc43e359c6aeb11405338a842653617f96c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; method allows you to verify that a given plain-text string corresponds to a given hash. However, if you are using the &lt;code&gt;LoginController&lt;/code&gt;&lt;a href=&quot;authentication&quot;&gt;included with Laravel&lt;/a&gt;, you will probably not need to use this directly, as this controller automatically calls this method:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 방법은 주어진 일반 텍스트 문자열이 주어진 해시에 해당하는지 확인할 수 있습니다. 그러나 &lt;a href=&quot;authentication&quot;&gt;Laravel에 포함 된 &lt;/a&gt; &lt;code&gt;LoginController&lt;/code&gt; 를 사용하는 경우이 컨트롤러가이 메소드를 자동으로 호출하기 때문에이를 직접 사용할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="08539b35cc8d8c2763729cce6a7ea4cef9029ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; method allows you to verify that a given plain-text string corresponds to a given hash:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 방법은 주어진 해시 주어진 일반 텍스트 문자열과 일치하는지 확인할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="518b3fad4d33ee1cdd51ab68f7be46bd9eff83a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; method now &lt;strong&gt;optionally&lt;/strong&gt; checks if the algorithm of the hash matches the configured algorithm.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 방법에 대하여 &lt;strong&gt;임의적으로&lt;/strong&gt; 해시 알고리즘의 구성된 알고리즘 일치 체크한다.</target>
        </trans-unit>
        <trans-unit id="3f62d6300a15f5ebc232fb28110ef236347e0f5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chunk&lt;/code&gt; method breaks the collection into multiple, smaller collections of a given size:</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; 방법은 여러으로 수집, 주어진 크기의 작은 컬렉션을 나누기 :</target>
        </trans-unit>
        <trans-unit id="f4bec67650db71c2fddea0a1c945dfe328db89aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chunkWhile&lt;/code&gt; method breaks the collection into multiple, smaller collections based on the evaluation of the given callback:</source>
          <target state="translated">&lt;code&gt;chunkWhile&lt;/code&gt; 에 있어서, 상기 복수의 집합에 주어진 콜백의 평가에 기초하여 작은 모음 나누기 :</target>
        </trans-unit>
        <trans-unit id="3b5bfc41d5271b8ccd44a77391462383c566e875" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class_basename&lt;/code&gt; function returns the class name of the given class with the class's namespace removed:</source>
          <target state="translated">&lt;code&gt;class_basename&lt;/code&gt; 의 기능은 제거 클래스의 네임 스페이스로 지정된 클래스의 클래스 이름을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="9b86d4e71ffd11ee06945f69b943d41689e19416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class_basename&lt;/code&gt; returns the class name of the given class with the class' namespace removed:</source>
          <target state="translated">&lt;code&gt;class_basename&lt;/code&gt; 이 제거 된 클래스의 네임 스페이스로 지정된 클래스의 클래스 이름을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="844b31604c95d98d5daea459f72ce44bec72ce8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class_uses_recursive&lt;/code&gt; function returns all traits used by a class, including traits used by all of its parent classes:</source>
          <target state="translated">&lt;code&gt;class_uses_recursive&lt;/code&gt; 기능은 상위 클래스의 모든에서 사용하는 특성을 포함하는 클래스가 사용하는 모든 특성을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="145619a31e47f0b86b7fc3cbbb9842d724c1130f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;click&lt;/code&gt; method may be used to &quot;click&quot; on an element matching the given selector:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 방법에 사용될 수있는 소정의 선택과 일치하는 요소의 &quot;클릭&quot;</target>
        </trans-unit>
        <trans-unit id="fb6f398e4a62b073c4428b2c88c8e164c091ed61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clickAndHold&lt;/code&gt; method may be used to simulate a mouse button being clicked and held down. A subsequent call to the &lt;code&gt;releaseMouse&lt;/code&gt; method will undo this behavior and release the mouse button:</source>
          <target state="translated">&lt;code&gt;clickAndHold&lt;/code&gt; 의 방법을 클릭하고 아래로 개최되는 마우스 버튼을 시뮬레이션하는 데 사용할 수 있습니다. &lt;code&gt;releaseMouse&lt;/code&gt; 메서드에 대한 후속 호출 은이 동작을 취소하고 마우스 버튼을 놓습니다 .</target>
        </trans-unit>
        <trans-unit id="da1589eb7c6230303f8f3bca2e5432441657badd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clickAtPoint&lt;/code&gt; method may be used to &quot;click&quot; on the topmost element at a given pair of coordinates relative to the viewable area of the browser:</source>
          <target state="translated">&lt;code&gt;clickAtPoint&lt;/code&gt; 의 방법에 사용될 수있는 브라우저의 가시 영역에 대해서 좌표의 소정 쌍의 최상위 요소의 &quot;클릭&quot;</target>
        </trans-unit>
        <trans-unit id="cc7333184fd7a60d1f47d27537c83143b0ca4eca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clickAtXPath&lt;/code&gt; method may be used to &quot;click&quot; on an element matching the given XPath expression:</source>
          <target state="translated">&lt;code&gt;clickAtXPath&lt;/code&gt; 의 방법은 주어진 XPath 표현에 일치하는 요소의 &quot;클릭&quot;하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="e83e7824edea0e08c363a68ce81ebcd54d0f35e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method, like the &lt;code&gt;open&lt;/code&gt; method, can also usually be disregarded. For most drivers, it is not needed.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; 방법은 같은 &lt;code&gt;open&lt;/code&gt; 방법, 또한 일반적으로 무시 될 수있다. 대부분의 드라이버에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a0471ec3d7d54c503719d25bbc175f555b7bf392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collapse&lt;/code&gt; method collapses a collection of arrays into a single, flat collection:</source>
          <target state="translated">&lt;code&gt;collapse&lt;/code&gt; 방법은 하나의 평면 콜렉션으로 배열의 컬렉션을 축소합니다</target>
        </trans-unit>
        <trans-unit id="0832279b2cd0a2516ce4bcf6799783e7787b1997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collect&lt;/code&gt; function creates a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; instance from the given value:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; 함수는 생성 &lt;a href=&quot;collections&quot;&gt;컬렉션&lt;/a&gt; 주어진 값에서 인스턴스 :</target>
        </trans-unit>
        <trans-unit id="667c6aded7719ce39c772370318c4c1088173948" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collect&lt;/code&gt; method is especially useful when you have an instance of &lt;code&gt;Enumerable&lt;/code&gt; and need a non-lazy collection instance. Since &lt;code&gt;collect()&lt;/code&gt; is part of the &lt;code&gt;Enumerable&lt;/code&gt; contract, you can safely use it to get a &lt;code&gt;Collection&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; 당신의 인스턴스가있을 때 방법은 특히 유용 &lt;code&gt;Enumerable&lt;/code&gt; 에서을 하고 비 게으른 수집 인스턴스가 필요합니다. &lt;code&gt;collect()&lt;/code&gt; 는 &lt;code&gt;Enumerable&lt;/code&gt; 계약의 일부 이므로 안전하게 사용하여 &lt;code&gt;Collection&lt;/code&gt; 인스턴스 를 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40aad42a47068204dec7c8e4434b1d7d2b62890d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collect&lt;/code&gt; method is primarily useful for converting &lt;a href=&quot;#lazy-collections&quot;&gt;lazy collections&lt;/a&gt; into standard &lt;code&gt;Collection&lt;/code&gt; instances:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; 방법은 변환 주로 유용 &lt;a href=&quot;#lazy-collections&quot;&gt;게으른 컬렉션을&lt;/a&gt; 표준으로 &lt;code&gt;Collection&lt;/code&gt; 경우 :</target>
        </trans-unit>
        <trans-unit id="847ba681f69c887086c65de90cbab5887d26ffc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collect&lt;/code&gt; method returns a new &lt;code&gt;Collection&lt;/code&gt; instance with the items currently in the collection:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; 방법은 새 반환 &lt;code&gt;Collection&lt;/code&gt; 현재 컬렉션의 항목 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="162791e72505e4467ba2a262bd0ad307c4b2c23f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;column&lt;/code&gt; option may be used to specify the field's corresponding database column. If the &lt;code&gt;column&lt;/code&gt; option is not specified, the field name will be used.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; 옵션은 필드의 해당 데이터베이스 열을 지정하는 데 사용할 수 있습니다. 경우 &lt;code&gt;column&lt;/code&gt; 옵션이 지정되지 않은 필드 이름이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4049e014c45e16969ece1812caa0336a349f6aa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;combine&lt;/code&gt; method combines the values of the collection, as keys, with the values of another array or collection:</source>
          <target state="translated">는 &lt;code&gt;combine&lt;/code&gt; 다른 배열 또는 모음의 값을 키로서, 컬렉션 방법을 콤바인 값 :</target>
        </trans-unit>
        <trans-unit id="9c4deb726fe55a47613c640b3dec38fdb9e3e397" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;commentable&lt;/code&gt; relation on the &lt;code&gt;Comment&lt;/code&gt; model will return either a &lt;code&gt;Post&lt;/code&gt; or &lt;code&gt;Video&lt;/code&gt; instance, depending on which type of model owns the comment.</source>
          <target state="translated">&lt;code&gt;commentable&lt;/code&gt; 상의 관계 &lt;code&gt;Comment&lt;/code&gt; 모델은 중 하나를 반환합니다 &lt;code&gt;Post&lt;/code&gt; 또는 &lt;code&gt;Video&lt;/code&gt; 모델의 유형이 코멘트를 소유에 따라 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="41baa50f269ff9163d678dc0152bd70ab8d3b8c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;componentName&lt;/code&gt; is equal to the name used in the HTML tag after the &lt;code&gt;x-&lt;/code&gt; prefix. So &lt;code&gt;&amp;lt;x-alert /&amp;gt;&lt;/code&gt;'s &lt;code&gt;componentName&lt;/code&gt; will be &lt;code&gt;alert&lt;/code&gt;. The &lt;code&gt;attributes&lt;/code&gt; element will contain all of the attributes that were present on the HTML tag. The &lt;code&gt;slot&lt;/code&gt; element is an &lt;code&gt;Illuminate\Support\HtmlString&lt;/code&gt; instance with the contents of the slot from the component.</source>
          <target state="translated">&lt;code&gt;componentName&lt;/code&gt; 은 후 HTML 태그에 사용 된 이름과 동일 &lt;code&gt;x-&lt;/code&gt; 접두사. 따라서 &lt;code&gt;&amp;lt;x-alert /&amp;gt;&lt;/code&gt; 의 &lt;code&gt;componentName&lt;/code&gt; 은 &lt;code&gt;alert&lt;/code&gt; 됩니다. &lt;code&gt;attributes&lt;/code&gt; 요소는 HTML 태그에 존재했던 모든 속성이 포함됩니다. &lt;code&gt;slot&lt;/code&gt; 소자는이다 &lt;code&gt;Illuminate\Support\HtmlString&lt;/code&gt; 컴포넌트로부터 슬롯의 내용 예.</target>
        </trans-unit>
        <trans-unit id="b74a2845b843645c4074db899ed5446bf5aa0bc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;composer&lt;/code&gt; method also accepts the &lt;code&gt;*&lt;/code&gt; character as a wildcard, allowing you to attach a composer to all views:</source>
          <target state="translated">&lt;code&gt;composer&lt;/code&gt; 방법은 또한 받아 &lt;code&gt;*&lt;/code&gt; 당신이 모든 뷰에 작곡가를 부착 할 수 있도록 와일드 카드로 문자를 :</target>
        </trans-unit>
        <trans-unit id="c48d6106365cd56f1af306993ffbdebd174078f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat&lt;/code&gt; method appends the given &lt;code&gt;array&lt;/code&gt; or collection values onto the end of the collection:</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 방법은 소정의 추가 &lt;code&gt;array&lt;/code&gt; 컬렉션의 단부 상에 또는 컬렉션 값 :</target>
        </trans-unit>
        <trans-unit id="5e16790a9fa2211051a7d4feb57ff0755302a27b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="dc83f3b5ed6d0b74ee0070878b100c73f52c0df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; directory, as the name implies, contains all of your application's configuration files. It's a great idea to read through all of these files and familiarize yourself with all of the options available to you.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 이름에서 알 수 있듯이 디렉토리는 응용 프로그램의 구성 파일을 제공합니다. 이러한 파일을 모두 읽고 사용 가능한 모든 옵션을 숙지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6bad4bc9d5f4c972a84d033e57b8fa5f19dd90fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; function gets the value of a &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; variable. The configuration values may be accessed using &quot;dot&quot; syntax, which includes the name of the file and the option you wish to access. A default value may be specified and is returned if the configuration option does not exist:</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 함수의 값을 얻는 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 변수. &quot;dot&quot;구문을 사용하여 구성 값에 액세스 할 수 있습니다. 여기에는 파일 이름 및 액세스하려는 옵션이 포함됩니다. 구성 옵션이 존재하지 않으면 기본값이 지정되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="853e6d05d2eca963edda985fb93510389ed48ab0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;config&lt;/code&gt; directory. You may also use the &lt;code&gt;config_path&lt;/code&gt; function to generate a fully qualified path to a given file within the application's configuration directory:</source>
          <target state="translated">&lt;code&gt;config_path&lt;/code&gt; 의 기능은 완전한 경로를 반환 &lt;code&gt;config&lt;/code&gt; 디렉토리를. &lt;code&gt;config_path&lt;/code&gt; 함수를 사용 하여 응용 프로그램의 구성 디렉토리 내에서 지정된 파일에 대한 완전한 경로를 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfe4e9c84cfee9fc6a18b1f60e6eb55521fdb696" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;console.php&lt;/code&gt; file is where you may define all of your Closure based console commands. Each Closure is bound to a command instance allowing a simple approach to interacting with each command's IO methods. Even though this file does not define HTTP routes, it defines console based entry points (routes) into your application.</source>
          <target state="translated">&lt;code&gt;console.php&lt;/code&gt; 의 당신이 당신의 폐쇄 기반 콘솔의 모든 명령을 정의 할 수있는 위치 파일입니다. 각 Closure는 명령 인스턴스에 바인드되어 간단한 접근 방식으로 각 명령의 IO 메소드와 상호 작용할 수 있습니다. 이 파일은 HTTP 라우트를 정의하지 않지만 애플리케이션에 대한 콘솔 기반 진입 점 (라우트)을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7ce5ec3f3f8122e61009658ae5134dfdb7e1a38d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method determines if the given string contains the given value (case sensitive):</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; 메소드는 주어진 문자열에 주어진 값 (대소 문자 구분) 이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bc957ec76749b4c34a80987f4e0a38b53bba65ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method determines whether the collection contains a given item:</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; 메소드는 컬렉션에 주어진 항목 이 포함되어 있는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9ba3aad698ef8666497289262bf088461e9a4d34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method may be used to determine if a given model instance is contained by the collection. This method accepts a primary key or a model instance:</source>
          <target state="translated">가 &lt;code&gt;contains&lt;/code&gt; 있어서 주어진 모델 인스턴스 집합에 포함되어 있는지를 판정하는데 사용될 수있다. 이 메소드는 기본 키 또는 모델 인스턴스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b8ae9f48cafbd158f32f7ec67f625737be8e6bcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-containsstrict&quot;&gt;&lt;code&gt;containsStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">가 &lt;code&gt;contains&lt;/code&gt; 정수 값의 문자열을 의미하는 항목 값을 체크 같은 값의 정수로 동일하다고 할 때 사용하는 방법 &quot;느슨한&quot;비교. &lt;a href=&quot;#method-containsstrict&quot;&gt; &lt;code&gt;containsStrict&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &quot;엄격한&quot;비교를 사용하여 필터링 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a8a8f487bf3401953917a21cf1917e6fd60a502" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;containsAll&lt;/code&gt; method determines if the given string contains all array values:</source>
          <target state="translated">&lt;code&gt;containsAll&lt;/code&gt; 메소드는 주어진 문자열에 모든 배열 값 이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3a0734964a31271d219019e166807effdb76d326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; function creates a new &lt;a href=&quot;requests#cookies&quot;&gt;cookie&lt;/a&gt; instance:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 기능은 새로운 생성 &lt;a href=&quot;requests#cookies&quot;&gt;쿠키&lt;/a&gt; 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="502c281bf674975ba14b5cce9a3fd2deede94789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; method also accepts a few more arguments which are used less frequently. Generally, these arguments have the same purpose and meaning as the arguments that would be given to PHP's native &lt;a href=&quot;https://secure.php.net/manual/en/function.setcookie.php&quot;&gt;setcookie&lt;/a&gt; method:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 방법은 자주 사용되는 몇 가지 더 인수를 받아들입니다. 일반적으로 이러한 인수는 PHP의 기본 &lt;a href=&quot;https://secure.php.net/manual/en/function.setcookie.php&quot;&gt;setcookie&lt;/a&gt; 메소드에 제공되는 인수와 동일한 목적과 의미를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="25bf8243d539e652d9b0905124785efe25aa543e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; method on response instances allows you to easily attach cookies to the response. For example, you may use the &lt;code&gt;cookie&lt;/code&gt; method to generate a cookie and fluently attach it to the response instance like so:</source>
          <target state="translated">응답 인스턴스 의 &lt;code&gt;cookie&lt;/code&gt; 방법을 사용하면 쿠키를 응답에 쉽게 첨부 할 수 있습니다. 예를 들어, &lt;code&gt;cookie&lt;/code&gt; 메소드를 사용하여 쿠키 를 생성하고 다음과 같이 응답 인스턴스에 유창하게 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfe1d18dd2d122a28ae7be967d3e3f3e0005213c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy&lt;/code&gt; method may be used to copy an existing file to a new location on the disk, while the &lt;code&gt;move&lt;/code&gt; method may be used to rename or move an existing file to a new location:</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; 그동안 방법은 디스크의 새 위치에 기존 파일을 복사하는 데 사용할 수 있습니다 &lt;code&gt;move&lt;/code&gt; 방법은 이름을 변경하거나 새 위치로 기존 파일을 이동할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a901538792c9893649f07e65b78ab30cfeb33562" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy&lt;/code&gt; method may be used to copy files and directories to new locations. This can be useful when a particular asset within your &lt;code&gt;node_modules&lt;/code&gt; directory needs to be relocated to your &lt;code&gt;public&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; 방법은 새 위치로 파일과 디렉토리를 복사 할 수 있습니다. &lt;code&gt;node_modules&lt;/code&gt; 디렉토리 내의 특정 자산 을 &lt;code&gt;public&lt;/code&gt; 폴더 로 재배치해야 할 때 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="5ffda6e82da3cc8eb3fed029e8b3f1beb1319abf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; method returns the total number of items in the collection:</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 방법은 컬렉션의 항목의 총 수를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="10c92718529ef306d9238c1df2041f4e4d27c227" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;countBy&lt;/code&gt; method counts the occurrences of values in the collection. By default, the method counts the occurrences of every element:</source>
          <target state="translated">&lt;code&gt;countBy&lt;/code&gt; 의 방법은 컬렉션 값의 발생을 계산합니다. 기본적으로 메서드는 모든 요소의 발생 횟수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="358265776c69e28e004b7d91d075978596360885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="f46e225d7256c2319888a58e210dfed94817834a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method creates model instances and persists them to the database using Eloquent's &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 방법은 웅변의 사용 모델 인스턴스와 데이터베이스에이 지속를 만들어 &lt;code&gt;save&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="0d5e9f2469b395433bf6392c4681a5ba6bc108a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method not only creates the model instances but also saves them to the database using Eloquent's &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 방법뿐만 아니라 모델 인스턴스를 생성뿐만 아니라, 웅변의 사용하여 데이터베이스에 저장합니다 &lt;code&gt;save&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="8f7eecd930e07415f3ea79b41077dbbf65c2d55b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method of the &lt;code&gt;RegisterController&lt;/code&gt; is responsible for creating new &lt;code&gt;App\User&lt;/code&gt; records in your database using the &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;. You are free to modify this method according to the needs of your database.</source>
          <target state="translated">&lt;code&gt;RegisterController&lt;/code&gt; 의 &lt;code&gt;create&lt;/code&gt; 메소드 는 &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM을&lt;/a&gt; 사용하여 데이터베이스에 새로운 &lt;code&gt;App\User&lt;/code&gt; 레코드를 작성합니다 . 데이터베이스의 필요에 따라이 방법을 자유롭게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22be0ae221305236b024b36b79ad022420724144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method will create a pay link which you can use to generate a payment button. The payment button can be generated using the &lt;code&gt;paddle-button&lt;/code&gt; Blade component that ships with Cashier Paddle:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 방법은 당신이 지불 버튼을 생성하는 데 사용할 수있는 유료 링크를 생성합니다. 결제 버튼은 캐셔 패들과 함께 제공되는 패들 &lt;code&gt;paddle-button&lt;/code&gt; 블레이드 구성 요소를 사용하여 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e52d0897899a33a862f4d3671f39b0cb5e8d22ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method, which accepts &lt;a href=&quot;#storing-payment-methods&quot;&gt;a Stripe payment method identifier&lt;/a&gt; or Stripe &lt;code&gt;PaymentMethod&lt;/code&gt; object, will begin the subscription as well as update your database with the customer ID and other relevant billing information.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 받아들이는 방법, &lt;a href=&quot;#storing-payment-methods&quot;&gt;스트라이프 지불 방법 식별자&lt;/a&gt; 또는 스트라이프 &lt;code&gt;PaymentMethod&lt;/code&gt; 목적은 고객의 ID 및 기타 관련 결제 정보와 데이터베이스뿐만 아니라, 갱신 등록을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="1b375468cab55cebf428a3d4423897451de1b7dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method, which accepts a Stripe credit card / source token, will begin the subscription as well as update your database with the customer ID and other relevant billing information.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 스트라이프 신용 카드 / 소스 토큰을 받아들이는 방법은, 고객 ID 및 기타 관련 결제 정보와 데이터베이스뿐만 아니라, 갱신 등록을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2f6e265f01ed02184079ee689e95cb3c880e1007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createOrGetStripeCustomer&lt;/code&gt; method may be used if you want to return the customer object but are not sure whether the billable entity is already a customer within Stripe. This method will create a new customer in Stripe if one does not already exist:</source>
          <target state="translated">&lt;code&gt;createOrGetStripeCustomer&lt;/code&gt; 의 당신이 고객의 개체를 반환하고 싶지만 청구 법인이 이미 스트라이프 내에서 고객인지 확실하지 않은 경우 방법을 사용할 수있다. 이 방법은 이미 존재하지 않는 경우 Stripe에 새 고객을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6df6d1f86ad25ddbe4dcc05e71764a8dd194d3cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cron-expression&lt;/code&gt; Library</source>
          <target state="translated">&lt;code&gt;cron-expression&lt;/code&gt; 라이브러리</target>
        </trans-unit>
        <trans-unit id="dc195e5a53e98ed9e719662216a27588926183eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crossJoin&lt;/code&gt; method cross joins the collection's values among the given arrays or collections, returning a Cartesian product with all possible permutations:</source>
          <target state="translated">&lt;code&gt;crossJoin&lt;/code&gt; 의 방법의 십자가는 모든 가능한 순열과 직교 제품을 반품, 주어진 배열이나 컬렉션 중 컬렉션의 값을 조인</target>
        </trans-unit>
        <trans-unit id="b79aa36198a558e60f0566cf53cd764f298d86ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;csrf_field&lt;/code&gt; function generates an HTML &lt;code&gt;hidden&lt;/code&gt; input field containing the value of the CSRF token. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;csrf_field&lt;/code&gt; 의 함수가 HTML 생성 &lt;code&gt;hidden&lt;/code&gt; CSRF 토큰의 값을 포함하는 입력 필드. 예를 들어, &lt;a href=&quot;blade&quot;&gt;Blade 구문 사용&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="299a6068c735d9a1408032ecebf970b657cab979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;csrf_token&lt;/code&gt; function retrieves the value of the current CSRF token:</source>
          <target state="translated">&lt;code&gt;csrf_token&lt;/code&gt; 함수는 토큰 CSRF 현재 값을 검색한다 :</target>
        </trans-unit>
        <trans-unit id="d9c61e7ea2799a7a4374800a0739f70bba6bd3e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cursor&lt;/code&gt; method allows you to iterate through your database records using a cursor, which will only execute a single query. When processing large amounts of data, the &lt;code&gt;cursor&lt;/code&gt; method may be used to greatly reduce your memory usage:</source>
          <target state="translated">&lt;code&gt;cursor&lt;/code&gt; 방법은 단 하나의 쿼리를 실행하는 커서를 사용하여 데이터베이스 레코드를 통해 반복을 수행 할 수 있습니다. 많은 양의 데이터를 처리 할 때 &lt;code&gt;cursor&lt;/code&gt; 방법을 사용하여 메모리 사용량을 크게 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f97e0186a6c26077a1fe1e71957d5f2574bb31ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cursor&lt;/code&gt; returns an &lt;code&gt;Illuminate\Support\LazyCollection&lt;/code&gt; instance. &lt;a href=&quot;collections#lazy-collections&quot;&gt;Lazy collections&lt;/a&gt; allow you to use many of the collection methods available on typical Laravel collections while only loading a single model into memory at a time:</source>
          <target state="translated">&lt;code&gt;cursor&lt;/code&gt; 반환 &lt;code&gt;Illuminate\Support\LazyCollection&lt;/code&gt; 인스턴스를. &lt;a href=&quot;collections#lazy-collections&quot;&gt;Lazy 컬렉션을&lt;/a&gt; 사용하면 한 번에 단일 모델 만 메모리에로드하는 동안 일반적인 Laravel 컬렉션에서 사용할 수있는 많은 컬렉션 메서드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93ec98300e02dfe1149b50fce58ad019591d99a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_fill&lt;/code&gt; function sets a missing value within a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_fill&lt;/code&gt; 의 기능을 이용하여 중첩 된 어레이 또는 개체 내에서 누락 값이 표기 &quot;점&quot;으로 설정 :</target>
        </trans-unit>
        <trans-unit id="ee1d952c25655b55a6ed0857e9555f5aad9c2584" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_get&lt;/code&gt; function also accepts a default value, which will be returned if the specified key is not found:</source>
          <target state="translated">&lt;code&gt;data_get&lt;/code&gt; 의 기능은 지정된 키가 발견되지 않는 경우 반환되는 디폴트 값을 허용합니다</target>
        </trans-unit>
        <trans-unit id="e0808da32fb0e753fe2f04a5029ad67e0a8c474c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_get&lt;/code&gt; function retrieves a value from a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_get&lt;/code&gt; 의 기능을 이용하여 중첩 배열 또는 객체의 값이 표기 &quot;점&quot;검색 :</target>
        </trans-unit>
        <trans-unit id="efe8dacae9ad6b4933f694001afedc6875a72b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_set&lt;/code&gt; function sets a value within a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_set&lt;/code&gt; 의 기능을 이용하여 중첩 된 어레이 또는 개체 내의 값이 표기 &quot;점&quot;으로 설정 :</target>
        </trans-unit>
        <trans-unit id="363ab6db27d6e99d06b835c4d9281f4e736c49e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="15a8d6cb0d8ecf0f1bba535206fda1a923caf465" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; directory contains your database migrations, model factories, and seeds. If you wish, you may also use this directory to hold an SQLite database.</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 디렉토리는 데이터베이스 마이그레이션, 모델 공장, 씨앗이 포함되어 있습니다. 원하는 경우이 디렉토리를 사용하여 SQLite 데이터베이스를 보유 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ffabe8d779fec0779ced29a5e92c3d1d7ca2ea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; notification channel stores the notification information in a database table. This table will contain information such as the notification type as well as custom JSON data that describes the notification.</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 알림 채널은 데이터베이스 테이블의 알림 정보를 저장합니다. 이 테이블에는 알림 유형과 같은 정보 및 알림을 설명하는 사용자 정의 JSON 데이터가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9a510ec19cc2e849cbbb447f860474250bdbff5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;database&lt;/code&gt; directory. You may also use the &lt;code&gt;database_path&lt;/code&gt; function to generate a fully qualified path to a given file within the database directory:</source>
          <target state="translated">&lt;code&gt;database_path&lt;/code&gt; 의 기능은 완전한 경로를 반환 &lt;code&gt;database&lt;/code&gt; 디렉토리. 또한 &lt;code&gt;database_path&lt;/code&gt; 함수를 사용 하여 데이터베이스 디렉토리 내의 지정된 파일에 대한 완전한 경로를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a72c519d415997d1629479d1ec83d8e57c61cbe6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;days&lt;/code&gt; method may be used to limit the execution of a task to specific days of the week. For example, you may schedule a command to run hourly on Sundays and Wednesdays:</source>
          <target state="translated">&lt;code&gt;days&lt;/code&gt; 방법은 특정 요일에 작업의 실행을 제한 할 수 있습니다. 예를 들어, 일요일과 수요일에 매시간 실행되도록 명령을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ede3b34c93c7cb7d826ebb899360b386f712c796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dd&lt;/code&gt; function dumps the given variables and ends execution of the script:</source>
          <target state="translated">&lt;code&gt;dd&lt;/code&gt; 기능은 스크립트의 특정 변수 단부 실행 덤프 :</target>
        </trans-unit>
        <trans-unit id="569d8d255139f576b7a5c194731b01784637dc88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dd&lt;/code&gt; method dumps the collection's items and ends execution of the script:</source>
          <target state="translated">&lt;code&gt;dd&lt;/code&gt; 방법은 스크립트의 컬렉션의 항목과 끝 실행을 덤프 :</target>
        </trans-unit>
        <trans-unit id="1411634701b70269755f5746f93226c0ad07410f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file determines how much information about an error is actually displayed to the user. By default, this option is set to respect the value of the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable, which is stored in your &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;config/app.php&lt;/code&gt; 구성 파일 의 &lt;code&gt;debug&lt;/code&gt; 옵션 은 실제로 사용자에게 표시되는 오류에 대한 정보의 양을 결정합니다. 기본적으로이 옵션은 &lt;code&gt;.env&lt;/code&gt; 파일에 저장된 &lt;code&gt;APP_DEBUG&lt;/code&gt; 환경 변수 의 값을 존중하도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c561351ad2aca641175fffa44e6867bfcf02c189" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decodeResponseJson&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;decodeResponseJson&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="76c9f88059b16565f839bff28134b4b07a0d1d22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decodeResponseJson&lt;/code&gt; method that belongs to the &lt;code&gt;Illuminate\Testing\TestResponse&lt;/code&gt; class no longer accepts any arguments. Please consider using the &lt;code&gt;json&lt;/code&gt; method instead.</source>
          <target state="translated">&lt;code&gt;decodeResponseJson&lt;/code&gt; 의 에 속하는 방법 &lt;code&gt;Illuminate\Testing\TestResponse&lt;/code&gt; 클래스가 더 이상 인수를지지 않습니다. 사용을 고려하십시오 &lt;code&gt;json&lt;/code&gt; 으로 대신 방법을.</target>
        </trans-unit>
        <trans-unit id="3d9874028e063af26eae71077b80ced1f75ebc14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decrypt&lt;/code&gt; function decrypts the given value using Laravel's &lt;a href=&quot;encryption&quot;&gt;encrypter&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;decrypt&lt;/code&gt; 기능은 Laravel의 사용 주어진 값 해독 &lt;a href=&quot;encryption&quot;&gt;암호화 한을&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f6b365537b03af6ecf3c48f371dae3106915fd50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default&lt;/code&gt; modifier accepts a value or an &lt;code&gt;\Illuminate\Database\Query\Expression&lt;/code&gt; instance. Using an &lt;code&gt;Expression&lt;/code&gt; instance will prevent wrapping the value in quotes and allow you to use database specific functions. One situation where this is particularly useful is when you need to assign default values to JSON columns:</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 수식은 값 또는 허용 &lt;code&gt;\Illuminate\Database\Query\Expression&lt;/code&gt; 인스턴스를. &lt;code&gt;Expression&lt;/code&gt; 인스턴스를 사용하면 값을 따옴표로 묶는 것을 방지하고 데이터베이스 특정 함수를 사용할 수 있습니다. 이것이 특히 유용한 한 가지 상황은 JSON 열에 기본값을 할당해야하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="a660fad70638f0cc4c22d00098e6c52f9c083e1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method accepts a single filename or an array of files to remove from the disk:</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 방법은 단일 파일 이름 또는 디스크에서 제거 할 파일의 배열을 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="f866e87912fdec431da3496fc8553abc55f6f96b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method should be used to delete records from the database. Like &lt;code&gt;update&lt;/code&gt;, the number of rows affected will be returned:</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 방법은 데이터베이스에서 레코드를 삭제하는 데 사용되어야한다. &lt;code&gt;update&lt;/code&gt; 와 마찬가지로 영향을받는 행 수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1395f31473a596b257b7585d429c970bac5fe666" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deletePaymentMethods&lt;/code&gt; method will delete all of the payment method information for the Billable model:</source>
          <target state="translated">&lt;code&gt;deletePaymentMethods&lt;/code&gt; 의 방법은 청구 모델의 결제 수단 정보를 모두 삭제합니다 :</target>
        </trans-unit>
        <trans-unit id="41db5a6b2d6ce010893f97378fecf039cd03f00f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; method loads each model individually and calls the &lt;code&gt;delete&lt;/code&gt; method on them so that the &lt;code&gt;deleting&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; events are fired.</source>
          <target state="translated">는 &lt;code&gt;destroy&lt;/code&gt; 개별적으로 각 모델 방법로드와 호출 &lt;code&gt;delete&lt;/code&gt; 있도록 그들에게 방법을 &lt;code&gt;deleting&lt;/code&gt; 하고 &lt;code&gt;deleted&lt;/code&gt; 이벤트가 발사된다.</target>
        </trans-unit>
        <trans-unit id="1312845cc61840761c3ee0e90e7eda6db699def1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; method should remove the data associated with the &lt;code&gt;$sessionId&lt;/code&gt; from persistent storage.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 방법은와 관련된 데이터를 제거해야합니다 &lt;code&gt;$sessionId&lt;/code&gt; 영구 저장소에서입니다.</target>
        </trans-unit>
        <trans-unit id="13e707dc26e25be9e9d0fd93acec764d0762774f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diff&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its values. This method will return the values in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diff&lt;/code&gt; 방법은 다른 모음 또는 일반 PHP의 컬렉션에 대해 비교 &lt;code&gt;array&lt;/code&gt; 의 값에 기초하여. 이 메소드는 주어진 콜렉션에 존재하지 않는 원래 콜렉션의 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d08208a1fea1871d349f4b27e9e8b02dfacdd1df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diff&lt;/code&gt; method returns all of the models that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diff&lt;/code&gt; 방법은 지정된 컬렉션에없는 모든 모델 반환</target>
        </trans-unit>
        <trans-unit id="fe0948a160c6eb766d347f5b521622aca4ec0b63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diffAssoc&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its keys and values. This method will return the key / value pairs in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diffAssoc&lt;/code&gt; 의 방법은 다른 모음 또는 일반 PHP의 컬렉션에 대해 비교 &lt;code&gt;array&lt;/code&gt; 의 키 값에 기초하여. 이 메소드는 주어진 컬렉션에없는 원래 컬렉션의 키 / 값 쌍을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8771545db20dfd39f09e615540d5a412cfd464e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diffKeys&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its keys. This method will return the key / value pairs in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diffKeys&lt;/code&gt; 의 방법은 다른 모음 또는 일반 PHP의 컬렉션에 대해 비교 &lt;code&gt;array&lt;/code&gt; 의 키에 기초하여. 이 메소드는 주어진 컬렉션에없는 원래 컬렉션의 키 / 값 쌍을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f756055240ba1063c2048a23a32600184331bba8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;directories&lt;/code&gt; method returns an array of all the directories within a given directory. Additionally, you may use the &lt;code&gt;allDirectories&lt;/code&gt; method to get a list of all directories within a given directory and all of its sub-directories:</source>
          <target state="translated">&lt;code&gt;directories&lt;/code&gt; 방법은 주어진 디렉토리 내의 모든 디렉토리의 배열을 반환합니다. 또한 &lt;code&gt;allDirectories&lt;/code&gt; 메소드를 사용하여 지정된 디렉토리 및 모든 서브 디렉토리 내의 모든 디렉토리 목록을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b89c1d5371389135e08eded41d76e9679eed649" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;directories&lt;/code&gt; method returns an array of all the directories within a given directory. Additionally, you may use the &lt;code&gt;allDirectories&lt;/code&gt; method to get a list of all directories within a given directory and all of its subdirectories:</source>
          <target state="translated">&lt;code&gt;directories&lt;/code&gt; 방법은 주어진 디렉토리 내의 모든 디렉토리의 배열을 반환합니다. 또한 &lt;code&gt;allDirectories&lt;/code&gt; 메소드를 사용하여 주어진 디렉토리 및 모든 하위 디렉토리 내의 모든 디렉토리 목록을 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="948f09a3f1dce39ac70357a670a40aaef365640f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirname&lt;/code&gt; method returns the parent directory portion of the given string:</source>
          <target state="translated">&lt;code&gt;dirname&lt;/code&gt; 방법은 지정된 캐릭터 라인의 상위 디렉토리 부분을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="53d01e175389ee481089a69a72e6b2726c9d15a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dispatch&lt;/code&gt; function pushes the given &lt;a href=&quot;queues#creating-jobs&quot;&gt;job&lt;/a&gt; onto the Laravel &lt;a href=&quot;queues&quot;&gt;job queue&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;dispatch&lt;/code&gt; 함수는 주어진 밀어 &lt;a href=&quot;queues#creating-jobs&quot;&gt;작업&lt;/a&gt; Laravel의 위에 &lt;a href=&quot;queues&quot;&gt;작업 큐를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="cac2ec12bd3061a94b075816fbacd8d4e488866f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dispatch&lt;/code&gt; helper function and &lt;code&gt;dispatch&lt;/code&gt; method on the &lt;code&gt;Dispatchable&lt;/code&gt; class depends on garbage collection to place the job on the queue. Therefore, when using tinker, you should use &lt;code&gt;Bus::dispatch&lt;/code&gt; or &lt;code&gt;Queue::push&lt;/code&gt; to dispatch jobs.</source>
          <target state="translated">&lt;code&gt;Dispatchable&lt;/code&gt; 클래스 의 &lt;code&gt;dispatch&lt;/code&gt; 도우미 함수 및 &lt;code&gt;dispatch&lt;/code&gt; 메서드 는 가비지 컬렉션에 따라 작업을 큐에 배치합니다. 따라서 tinker를 사용할 때는 &lt;code&gt;Bus::dispatch&lt;/code&gt; 또는 &lt;code&gt;Queue::push&lt;/code&gt; 를 사용하여 작업을 디스패치 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a78f09173845a84816aaa0f82e2f71e918e154a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dispatch_now&lt;/code&gt; function runs the given &lt;a href=&quot;queues#creating-jobs&quot;&gt;job&lt;/a&gt; immediately and returns the value from its &lt;code&gt;handle&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;dispatch_now&lt;/code&gt; 의 함수는 주어진 실행 &lt;a href=&quot;queues#creating-jobs&quot;&gt;작업을&lt;/a&gt; 즉시 그에서 값 반환 &lt;code&gt;handle&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="12e37a32a78dee36c396bf40a62fe1e8c9cdeac4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;distinct&lt;/code&gt; method allows you to force the query to return distinct results:</source>
          <target state="translated">&lt;code&gt;distinct&lt;/code&gt; 방법을 사용하면 서로 다른 결과를 반환하는 쿼리를 강제 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e27ac65406cee09aa574d9f791329779063e7a75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;doubleClick&lt;/code&gt; method may be used to simulate the double &quot;click&quot; of a mouse:</source>
          <target state="translated">&lt;code&gt;doubleClick&lt;/code&gt; 방법은 마우스의 더블 &quot;클릭&quot;을 시뮬레이션하는 데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="eed2948b9ae9e88a2aa59b1ab36db88382f6f966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download&lt;/code&gt; method may be used to generate a response that forces the user's browser to download the file at the given path. The &lt;code&gt;download&lt;/code&gt; method accepts a file name as the second argument to the method, which will determine the file name that is seen by the user downloading the file. Finally, you may pass an array of HTTP headers as the third argument to the method:</source>
          <target state="translated">&lt;code&gt;download&lt;/code&gt; 방법은 힘 사용자의 브라우저가 주어진 경로에서 파일을 다운로드하는 응답을 생성하는 데 사용할 수 있습니다. &lt;code&gt;download&lt;/code&gt; 방법은 파일을 다운로드하는 사용자가 볼 파일 이름을 결정하는 방법, 두 번째 인수로 파일 이름을 받아들입니다. 마지막으로, HTTP 헤더 배열을 메소드의 세 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a82177bbb11124e47032eb22d2ef44404614f48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;downloadInvoice&lt;/code&gt; method also allows for an optional custom filename as the third parameter. This filename will automatically be suffixed with &lt;code&gt;.pdf&lt;/code&gt; for you:</source>
          <target state="translated">&lt;code&gt;downloadInvoice&lt;/code&gt; 의 방법은 세 번째 매개 변수로 선택 사용자 정의 파일 이름을 수 있습니다. 이 파일 이름은 자동으로 &lt;code&gt;.pdf&lt;/code&gt; 로 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="bd9ef0c4f5e547638b126a678eac7147d8e5a7fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;drag&lt;/code&gt; method may be used to drag an element matching the given selector to another element:</source>
          <target state="translated">&lt;code&gt;drag&lt;/code&gt; 방법은 다른 요소에 주어진 선택 일치하는 요소를 드래그하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="3416d21ba17993f6d1dc80a9c0ecbdd76b5583b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; function dumps the given variables:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 함수는 주어진 변수를 덤프 :</target>
        </trans-unit>
        <trans-unit id="713021b29f1e05aa05d00057dabedf3d698ca1f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; method dumps the collection's items:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 방법은 컬렉션의 항목을 덤프 :</target>
        </trans-unit>
        <trans-unit id="1d361f96819099ad12de3c48ac2084181195d920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;duplicates&lt;/code&gt; method retrieves and returns duplicate values from the collection:</source>
          <target state="translated">는 &lt;code&gt;duplicates&lt;/code&gt; 컬렉션에서 방법을 검색하여 반환 값이 중복 :</target>
        </trans-unit>
        <trans-unit id="ab8e84a90a16f03a3c894136ce2b8850856312b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dusk&lt;/code&gt; command accepts any argument that is normally accepted by the PHPUnit test runner, allowing you to only run the tests for a given &lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group&quot;&gt;group&lt;/a&gt;, etc:</source>
          <target state="translated">&lt;code&gt;dusk&lt;/code&gt; 명령 만 주어진에 대한 테스트를 실행할 수 있도록 일반적으로 phpunit을 테스트 러너에 의해 허용되는 모든 인수를 받아 &lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group&quot;&gt;그룹&lt;/a&gt; 등 :</target>
        </trans-unit>
        <trans-unit id="595b7a2459733a820551fae07660ae2d0ce2924d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;e&lt;/code&gt; function runs PHP's &lt;code&gt;htmlspecialchars&lt;/code&gt; function with the &lt;code&gt;double_encode&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt; by default:</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 기능은 PHP의 실행 &lt;code&gt;htmlspecialchars&lt;/code&gt; 와 기능 &lt;code&gt;double_encode&lt;/code&gt; 의 설정 옵션 &lt;code&gt;true&lt;/code&gt; 기본적으로 :</target>
        </trans-unit>
        <trans-unit id="39d69717d701416c776d9ae5f1caf5031b9f4368" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;each&lt;/code&gt; method iterates over the items in the collection and passes each item to a callback:</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; 방법의 컬렉션의 항목을 반복하고 콜백 각 항목을 전달합니다</target>
        </trans-unit>
        <trans-unit id="489a57901a076c4cba26791246c2c1451cf7ec06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eachSpread&lt;/code&gt; method iterates over the collection's items, passing each nested item value into the given callback:</source>
          <target state="translated">&lt;code&gt;eachSpread&lt;/code&gt; 의 방법은 주어진 콜백에 중첩 된 각 항목의 값을 전달, 컬렉션의 항목을 반복 할 :</target>
        </trans-unit>
        <trans-unit id="eb91f29888a6d6386ace9cac61fdb0e897fee8ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elements&lt;/code&gt; method of pages allows you to define quick, easy-to-remember shortcuts for any CSS selector on your page. For example, let's define a shortcut for the &quot;email&quot; input field of the application's login page:</source>
          <target state="translated">페이지 의 &lt;code&gt;elements&lt;/code&gt; 메소드를 사용하면 페이지의 CSS 선택기에 대한 빠르고 기억하기 쉬운 단축키를 정의 할 수 있습니다. 예를 들어 응용 프로그램 로그인 페이지의 &quot;이메일&quot;입력 필드에 대한 바로 가기를 정의 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="ad58492e47ef4b1177d78e57effae21a8a76e244" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elixir&lt;/code&gt; Helper</source>
          <target state="translated">&lt;code&gt;elixir&lt;/code&gt; 도우미</target>
        </trans-unit>
        <trans-unit id="29a8cd8a9aa3cfdecd807d8571338dd7cbc1eea6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;emailOutputTo&lt;/code&gt;, &lt;code&gt;emailOutputOnFailure&lt;/code&gt;, &lt;code&gt;sendOutputTo&lt;/code&gt;, and &lt;code&gt;appendOutputTo&lt;/code&gt; methods are exclusive to the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; , &lt;code&gt;emailOutputOnFailure&lt;/code&gt; , &lt;code&gt;sendOutputTo&lt;/code&gt; 및 &lt;code&gt;appendOutputTo&lt;/code&gt; 의 방법은에 배타적 &lt;code&gt;command&lt;/code&gt; 과 &lt;code&gt;exec&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="3588815d2dfaf0441b0f82f55fd1c6a75af60deb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;emailOutputTo&lt;/code&gt;, &lt;code&gt;sendOutputTo&lt;/code&gt; and &lt;code&gt;appendOutputTo&lt;/code&gt; methods are exclusive to the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; 는 , &lt;code&gt;sendOutputTo&lt;/code&gt; 및 &lt;code&gt;appendOutputTo&lt;/code&gt; 방법은에 배타적 &lt;code&gt;command&lt;/code&gt; 과 &lt;code&gt;exec&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="7cca0a98b837eb352dcf8a73d9ad8c5c25af86d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encrypt&lt;/code&gt; function encrypts the given value using Laravel's &lt;a href=&quot;encryption&quot;&gt;encrypter&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;encrypt&lt;/code&gt; 함수의 사용 Laravel 지정된 값을 암호화하는 &lt;a href=&quot;encryption&quot;&gt;암호화 기를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a91dae42595f17107ac3591c5a28e3f188ebb68a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endsWith&lt;/code&gt; method determines if the given string ends with the given value:</source>
          <target state="translated">그만큼 &lt;code&gt;endsWith&lt;/code&gt; 의 방법은 소정의 값으로 주어진 문자열 종료 여부를 결정한다 :</target>
        </trans-unit>
        <trans-unit id="ff5b34d9cf60fac28601ca679095194baccdf6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ends_with&lt;/code&gt; function determines if the given string ends with the given value:</source>
          <target state="translated">&lt;code&gt;ends_with&lt;/code&gt; 의 기능은 소정 값으로 지정된 문자열 종료되면 결정</target>
        </trans-unit>
        <trans-unit id="0e8df0261a4290bfb7ad6cfe6647b9260fca3009" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; function retrieves the value of an &lt;a href=&quot;configuration#environment-configuration&quot;&gt;environment variable&lt;/a&gt; or returns a default value:</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 함수는 값 검색 &lt;a href=&quot;configuration#environment-configuration&quot;&gt;환경 변수&lt;/a&gt; 또는 기본 값을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="95fcb0e003dc0ec1ad1459a9dde0ab990d4890d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;environments&lt;/code&gt; method may be used to execute tasks only on the given environments:</source>
          <target state="translated">그만큼 &lt;code&gt;environments&lt;/code&gt; 방법은 주어진 환경에서 작업을 실행하는 데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="d94ca83c0d8f015c71c610169ac6bebaf586f640" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event:list&lt;/code&gt; command may be used to display a list of all events and listeners registered by your application.</source>
          <target state="translated">그만큼 &lt;code&gt;event:list&lt;/code&gt; 명령은 응용 프로그램에 의해 등록 된 모든 이벤트 및 청취자의리스트를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcda578a2786e7b96e7382f52e6b28107db9dec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; function dispatches the given &lt;a href=&quot;events&quot;&gt;event&lt;/a&gt; to its listeners:</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 함수는 주어진 전달 &lt;a href=&quot;events&quot;&gt;이벤트&lt;/a&gt; 의 리스너를 :</target>
        </trans-unit>
        <trans-unit id="4533d0adb7ee0926a10ea31abd911836f262e23a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; method may be used to verify that all elements of a collection pass a given truth test:</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 방법은 컬렉션의 모든 요소가 주어진 사실 테스트를 통과하는지 확인하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="39ecd348136995309e7fa8de56fa68bd0ac624ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exactly&lt;/code&gt; method determines if the given string is an exact match with another string:</source>
          <target state="translated">그만큼 &lt;code&gt;exactly&lt;/code&gt; 주어진 문자열이 다른 문자열과 정확히 일치하는 경우 방법 결정</target>
        </trans-unit>
        <trans-unit id="d4d0764ae5532acac9f7bc0b230a9b79b2a43e96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;except&lt;/code&gt; method returns all items in the collection except for those with the specified keys:</source>
          <target state="translated">&lt;code&gt;except&lt;/code&gt; 메소드는 지정된 키를 가진 사람을 제외하고 컬렉션의 모든 항목을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="368c25c3f81b618bf75d5fee840625c62940248e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;except&lt;/code&gt; method returns all of the models that do not have the given primary keys:</source>
          <target state="translated">그만큼 &lt;code&gt;except&lt;/code&gt; 방법은 주어진 기본 키가없는 모델의 모든 반환</target>
        </trans-unit>
        <trans-unit id="3b1d10ec61e0ffa67c47243e24549530afb0b158" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exec&lt;/code&gt; method may be used to issue a command to the operating system:</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 방법은 운영 체제에 명령을 실행하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="77001c4c16ff6cf5e99358a5c328741d6e574ea0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exists&lt;/code&gt; method may be used to determine if a file exists on the disk:</source>
          <target state="translated">은 &lt;code&gt;exists&lt;/code&gt; 방법은 파일이 디스크에 존재하는지 확인하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e00862519c936afb65d493d79eb473412d96d8b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expires_at&lt;/code&gt; columns on the Passport database tables are read-only and for display purposes only. When issuing tokens, Passport stores the expiration information within the signed and encrypted tokens. If you need to invalidate a token you should revoke it.</source>
          <target state="translated">&lt;code&gt;expires_at&lt;/code&gt; Passport 데이터베이스 테이블 열은 읽기 전용이며 표시 전용입니다. 토큰을 발행 할 때 Passport는 서명되고 암호화 된 토큰 내에 만료 정보를 저장합니다. 토큰을 무효화해야하는 경우 취소해야합니다.</target>
        </trans-unit>
        <trans-unit id="26335c4269b669914a014e5f94b77b75e74aa501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;explode&lt;/code&gt; method splits the string by the given delimiter and returns a collection containing each section of the split string:</source>
          <target state="translated">은 &lt;code&gt;explode&lt;/code&gt; 방법은 주어진 구분자로 문자열을 분할하고 분할 문자열의 각 섹션을 포함하는 컬렉션을 반환 :</target>
        </trans-unit>
        <trans-unit id="b68d0e1c6b04aeddf063dfd9af04f41e0ca4d495" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extend&lt;/code&gt; method allows the modification of resolved services. For example, when a service is resolved, you may run additional code to decorate or configure the service. The &lt;code&gt;extend&lt;/code&gt; method accepts a Closure, which should return the modified service, as its only argument. The Closure receives the service being resolved and the container instance:</source>
          <target state="translated">는 &lt;code&gt;extend&lt;/code&gt; 방법은 해결 서비스의 변경을 할 수 있습니다. 예를 들어 서비스가 해결되면 추가 코드를 실행하여 서비스를 장식하거나 구성 할 수 있습니다. &lt;code&gt;extend&lt;/code&gt; 방법은 유일한 인자로 수정 된 서비스를 반환해야 클로저를 받아 들인다. Closure는 해결되는 서비스와 컨테이너 인스턴스를받습니다.</target>
        </trans-unit>
        <trans-unit id="b4c142b04ac3b5a86d986f497c883d5388781225" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extend&lt;/code&gt; method allows the modification of resolved services. For example, when a service is resolved, you may run additional code to decorate or configure the service. The &lt;code&gt;extend&lt;/code&gt; method accepts a Closure, which should return the modified service, as its only argument:</source>
          <target state="translated">는 &lt;code&gt;extend&lt;/code&gt; 방법은 해결 서비스의 변경을 할 수 있습니다. 예를 들어 서비스가 해결되면 추가 코드를 실행하여 서비스를 꾸미거나 구성 할 수 있습니다. 이 &lt;code&gt;extend&lt;/code&gt; 방법은 유일한 인자로 수정 된 서비스를 반환해야 클로저를 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="271b81791c6fcda8d8df4146fe90f42e56a48806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extendTrial&lt;/code&gt; method allows you to extend the trial period of a subscription after it's been created:</source>
          <target state="translated">&lt;code&gt;extendTrial&lt;/code&gt; 방법은이 생성 된 것 후 가입의 시험 기간을 확장 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f781006d724083d8ba28422d7c38e9cc3058be2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; method may be used to get the file extension of the uploaded file:</source>
          <target state="translated">&lt;code&gt;extension&lt;/code&gt; 방법은 업로드 된 파일의 파일 확장자를 얻는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="92aafa4aa45e123e0d45648fe4ab34e127d09a51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extract&lt;/code&gt; method accepts an array of all libraries or modules that you wish to extract into a &lt;code&gt;vendor.js&lt;/code&gt; file. Using the above snippet as an example, Mix will generate the following files:</source>
          <target state="translated">&lt;code&gt;extract&lt;/code&gt; 방법은 당신이로 추출 할 것을 모든 라이브러리 또는 모듈의 배열 받아 &lt;code&gt;vendor.js&lt;/code&gt; 의 파일을. 위의 스 니펫을 예로 사용하면 Mix는 다음 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="83d709393aa0b4733f23c202e222ed16f22117b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;factory&lt;/code&gt; function creates a model factory builder for a given class, name, and amount. It can be used while &lt;a href=&quot;database-testing#writing-factories&quot;&gt;testing&lt;/a&gt; or &lt;a href=&quot;seeding#using-model-factories&quot;&gt;seeding&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; 함수는 주어진 클래스 이름 및 금액에 대한 모델 공장 빌더를 만듭니다. &lt;a href=&quot;database-testing#writing-factories&quot;&gt;테스트&lt;/a&gt; 또는 &lt;a href=&quot;seeding#using-model-factories&quot;&gt;파종&lt;/a&gt; 중에 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c84535ae1f2d8dcf411e6224c61ead6a5783c921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; method may be used to display a file, such as an image or PDF, directly in the user's browser instead of initiating a download. This method accepts the path to the file as its first argument and an array of headers as its second argument:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 방법은 직접 사용자의 브라우저 대신 다운로드를 시작으로, 이미지 나 PDF 등의 파일을 표시하는 데 사용할 수 있습니다. 이 메소드는 파일의 경로를 첫 번째 인수로, 헤더 배열을 두 번째 인수로 승인합니다.</target>
        </trans-unit>
        <trans-unit id="4e16126a8b67d6a538a8f3ceaee917dc5a3bd544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;files&lt;/code&gt; method returns an array of all of the files in a given directory. If you would like to retrieve a list of all files within a given directory including all sub-directories, you may use the &lt;code&gt;allFiles&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; 방법은 주어진 디렉토리에있는 파일의 배열을 반환합니다. 모든 서브 디렉토리를 포함하여 지정된 디렉토리 내의 모든 파일 목록을 검색하려면 &lt;code&gt;allFiles&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e1f3081f09b0c472ebda667fd6370a0bd3b91a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;files&lt;/code&gt; method returns an array of all of the files in a given directory. If you would like to retrieve a list of all files within a given directory including all subdirectories, you may use the &lt;code&gt;allFiles&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; 방법은 주어진 디렉토리에있는 파일의 배열을 반환합니다. 모든 하위 디렉토리를 포함하여 지정된 디렉토리 내의 모든 파일 목록을 검색하려면 &lt;code&gt;allFiles&lt;/code&gt; 를 사용할 수 있습니다. 메소드를 .</target>
        </trans-unit>
        <trans-unit id="4e08a912734a99c7958876179c8df5f8e18bfb7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filled&lt;/code&gt; function returns whether the given value is not &quot;blank&quot;:</source>
          <target state="translated">&lt;code&gt;filled&lt;/code&gt; 주어진 값이 &quot;빈&quot;여부 함수가 반환 :</target>
        </trans-unit>
        <trans-unit id="9274ab12b5b55e2191322ae6bc6536bbf6166d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; method filters the collection using the given callback, keeping only those items that pass a given truth test:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 방법은 사실 소정의 테스트를 통과하는 항목 만 유지 주어진 콜백을 이용하여 수집, 필터링 :</target>
        </trans-unit>
        <trans-unit id="2e63bf3427204b56a663cd5a7ca8ed55fe215e7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; validator, which uses PHP's &lt;code&gt;filter_var&lt;/code&gt; function under the hood, ships with Laravel and is Laravel's pre-5.8 behavior. The &lt;code&gt;dns&lt;/code&gt; and &lt;code&gt;spoof&lt;/code&gt; validators require the PHP &lt;code&gt;intl&lt;/code&gt; extension.</source>
          <target state="translated">내부적으로 PHP의 &lt;code&gt;filter_var&lt;/code&gt; 함수 를 사용 하는 &lt;code&gt;filter&lt;/code&gt; 유효성 검사기 는 Laravel과 함께 제공되며 Laravel의 5.8 이전 동작입니다. &lt;code&gt;dns&lt;/code&gt; 와 &lt;code&gt;spoof&lt;/code&gt; 유효성 검사기는 PHP의 요구 &lt;code&gt;intl&lt;/code&gt; 확장을.</target>
        </trans-unit>
        <trans-unit id="34f49d80e79233936295a8a5a0071d41cc27aa0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method finds a model that has a given primary key. If &lt;code&gt;$key&lt;/code&gt; is a model instance, &lt;code&gt;find&lt;/code&gt; will attempt to return a model matching the primary key. If &lt;code&gt;$key&lt;/code&gt; is an array of keys, &lt;code&gt;find&lt;/code&gt; will return all models which match the &lt;code&gt;$keys&lt;/code&gt; using &lt;code&gt;whereIn()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 주어진 기본 키가 모델을 찾습니다. 경우 &lt;code&gt;$key&lt;/code&gt; 모델 인스턴스 인, &lt;code&gt;find&lt;/code&gt; 기본 키와 일치하는 모델을 반환하려고 시도합니다. 만약 &lt;code&gt;$key&lt;/code&gt; 키의 배열은, &lt;code&gt;find&lt;/code&gt; 경기 모든 모델 반환 &lt;code&gt;$keys&lt;/code&gt; 사용하여 &lt;code&gt;whereIn()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="093b2abf7fea1feb12c3d40b649d3f095b2f973e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finish&lt;/code&gt; method adds a single instance of the given value to a string if it does not already end with the value:</source>
          <target state="translated">&lt;code&gt;finish&lt;/code&gt; 이미 값으로 끝나지 않는 경우 방법은 문자열로 주어진 값의 단일 인스턴스를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="91fb75980bb748e4dea9e00da4b9f25f7a43db5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method returns the first element in the collection that passes a given truth test:</source>
          <target state="translated">첫 &lt;code&gt;first&lt;/code&gt; 메소드는 주어진 진리 테스트를 통과 한 컬렉션의 첫 번째 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c24a45e98a071c480b19f6006b87c2d723fac97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstOr&lt;/code&gt; method also accepts an array of columns to retrieve:</source>
          <target state="translated">&lt;code&gt;firstOr&lt;/code&gt; 의 방법은 검색 열의 배열을 수용 :</target>
        </trans-unit>
        <trans-unit id="000b67082af9da863014a33b8f09110c358458db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstOrNew&lt;/code&gt; method, like &lt;code&gt;firstOrCreate&lt;/code&gt; will attempt to locate a record in the database matching the given attributes. However, if a model is not found, a new model instance will be returned. Note that the model returned by &lt;code&gt;firstOrNew&lt;/code&gt; has not yet been persisted to the database. You will need to call &lt;code&gt;save&lt;/code&gt; manually to persist it:</source>
          <target state="translated">&lt;code&gt;firstOrNew&lt;/code&gt; 의 같은 방법, &lt;code&gt;firstOrCreate&lt;/code&gt; 는 지정된 속성과 일치하는 데이터베이스의 레코드를 찾을 시도합니다. 그러나 모델을 찾지 못하면 새 모델 인스턴스가 반환됩니다. &lt;code&gt;firstOrNew&lt;/code&gt; 가 리턴 한 모델 이 아직 데이터베이스에 유지되지 않았습니다. &lt;code&gt;save&lt;/code&gt; 수동으로 저장 을 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ce83869743ee1684d1f688e5287d76d9bffce6f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstWhere&lt;/code&gt; method returns the first element in the collection with the given key / value pair:</source>
          <target state="translated">&lt;code&gt;firstWhere&lt;/code&gt; 에 있어서, 상기 소정의 키 / 값 쌍의 컬렉션의 첫 번째 요소를 반환</target>
        </trans-unit>
        <trans-unit id="b5b3063cbd6fc1d7ef6b6ef58f9758e31efd745d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fitContent&lt;/code&gt; method will resize the browser window to match the size of the content:</source>
          <target state="translated">&lt;code&gt;fitContent&lt;/code&gt; 의 브라우저 창 크기를 조정합니다 방법은 콘텐츠의 크기와 일치합니다 :</target>
        </trans-unit>
        <trans-unit id="a15bbfcc0551a6c465e9968bc1e45cc0727cb5aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flash&lt;/code&gt; method on the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class will flash the current input to the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt; so that it is available during the user's next request to the application:</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 클래스 의 &lt;code&gt;flash&lt;/code&gt; 메서드 는 사용자가 다음에 응용 프로그램에 요청하는 동안 사용할 수 있도록 &lt;a href=&quot;session&quot;&gt;세션에&lt;/a&gt; 대한 현재 입력을 플래시합니다 .</target>
        </trans-unit>
        <trans-unit id="9b8c4eed95102ced52b37f5f5d4f6b13470afea1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatMap&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items. Then, the array is flattened by a level:</source>
          <target state="translated">&lt;code&gt;flatMap&lt;/code&gt; 의 방법은 컬렉션을 반복하고, 소정의 콜백 각 값을 전달한다. 콜백은 항목을 자유롭게 수정하고 반환하여 수정 된 항목의 새로운 컬렉션을 형성합니다. 그런 다음 배열이 레벨로 평탄화됩니다.</target>
        </trans-unit>
        <trans-unit id="a02d3e6876e85c6cd6f8660dae6604b52224334f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatten&lt;/code&gt; method flattens a multi-dimensional collection into a single dimension:</source>
          <target state="translated">&lt;code&gt;flatten&lt;/code&gt; 방법은 단일 차원으로 다차원 컬렉션 평면화 :</target>
        </trans-unit>
        <trans-unit id="4a33381ea938daec1c787355d50fbc0072cbc121" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flip&lt;/code&gt; method swaps the collection's keys with their corresponding values:</source>
          <target state="translated">&lt;code&gt;flip&lt;/code&gt; 방법은 해당 값과 모음의 키 스왑 :</target>
        </trans-unit>
        <trans-unit id="fb29cc7edfe18e5416f76c7783cd7900e3e58f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; command may be used to remove all of a model's records from your search indexes:</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; 명령은 검색 인덱스에서 모델의 모든 레코드를 제거하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="9d6468e20c5d040218bb9747471fac0a06bf3bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;folders&lt;/code&gt; property of the &lt;code&gt;Homestead.yaml&lt;/code&gt; file lists all of the folders you wish to share with your Homestead environment. As files within these folders are changed, they will be kept in sync between your local machine and the Homestead environment. You may configure as many shared folders as necessary:</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; 파일 의 &lt;code&gt;folders&lt;/code&gt; 속성은 Homestead 환경과 공유하려는 모든 폴더를 나열합니다. 이 폴더 내의 파일이 변경되면 로컬 컴퓨터와 홈스테드 환경간에 동기화 상태로 유지됩니다. 필요한만큼 공유 폴더를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5bbafc96aeea452b9b65fb0f953db00cceffcc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forPage&lt;/code&gt; method returns a new collection containing the items that would be present on a given page number. The method accepts the page number as its first argument and the number of items to show per page as its second argument:</source>
          <target state="translated">&lt;code&gt;forPage&lt;/code&gt; 의 방법은 특정 페이지 수에있을 것입니다 항목을 포함하는 새 컬렉션을 반환합니다. 이 메소드는 첫 번째 인수로 페이지 번호를, 두 번째 인수로 페이지 당 표시 할 항목 수를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="f24c9fee9ad6c070bb24fe6c65dd7a9194302cb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;foreignId&lt;/code&gt; method is an alias for &lt;code&gt;unsignedBigInteger&lt;/code&gt; while the &lt;code&gt;constrained&lt;/code&gt; method will use convention to determine the table and column name being referenced. If your table name does not match the convention, you may specify the table name by passing it as an argument to the &lt;code&gt;constrained&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;foreignId&lt;/code&gt; 의 방법의 별칭입니다 &lt;code&gt;unsignedBigInteger&lt;/code&gt; 동안 &lt;code&gt;constrained&lt;/code&gt; 테이블 및 열 이름을 결정하는 규칙을 사용하는 방법을 참조하고. 테이블 이름이 규칙과 일치하지 않는 경우 &lt;code&gt;constrained&lt;/code&gt; 메서드에 인수로 전달하여 테이블 이름을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82339ec6fe2a18803287d6742af197a0da3cd54b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forever&lt;/code&gt; method may be used to store an item in the cache permanently. Since these items will not expire, they must be manually removed from the cache using the &lt;code&gt;forget&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forever&lt;/code&gt; 방법은 영구적으로 캐시에 항목을 저장하는 데 사용할 수 있습니다. 이러한 항목은 만료되지 않으므로 &lt;code&gt;forget&lt;/code&gt; 메소드를 사용하여 캐시에서 수동으로 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e98ff6b293325320588e8dc259ce3951cdf1da6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forget&lt;/code&gt; method removes an item from the collection by its key:</source>
          <target state="translated">&lt;code&gt;forget&lt;/code&gt; 방법은 키를 기준으로 컬렉션에서 항목을 제거합니다 :</target>
        </trans-unit>
        <trans-unit id="2b96b202d81153b648458634952b7e5b5ec1459c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forget&lt;/code&gt; method will remove a piece of data from the session. If you would like to remove all data from the session, you may use the &lt;code&gt;flush&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forget&lt;/code&gt; 방법은 세션에서 데이터의 조각을 제거합니다. 세션에서 모든 데이터를 제거하려면 &lt;code&gt;flush&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce2d44bfd45a40192fa5f1e413640ab484835c9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fresh&lt;/code&gt; method retrieves a fresh instance of each model in the collection from the database. In addition, any specified relationships will be eager loaded:</source>
          <target state="translated">그만큼 &lt;code&gt;fresh&lt;/code&gt; 방법은 데이터베이스에서 컬렉션의 각 모델의 새로운 인스턴스를 검색합니다. 또한 지정된 관계가 즉시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="beaa58b6cd6d6a85c1f8707437a1d5e40bfcca6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontControllerPath&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;frontControllerPath&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="51ff410b45877335f46623c17e4b6301c84b30e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontControllerPath&lt;/code&gt; method should return the fully qualified path to your application's &quot;front controller&quot;, which is typically your &quot;index.php&quot; file or equivalent:</source>
          <target state="translated">&lt;code&gt;frontControllerPath&lt;/code&gt; 의 방법은 일반적으로 &quot;의 index.php&quot;파일 또는 동등 응용 프로그램의 &quot;프론트 컨트롤러&quot;의 전체 경로를 반환해야합니다 :</target>
        </trans-unit>
        <trans-unit id="c5d8c0b2b2184ad6042edad29b65c7b3f5ddd99b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gc&lt;/code&gt; method should destroy all session data that is older than the given &lt;code&gt;$lifetime&lt;/code&gt;, which is a UNIX timestamp. For self-expiring systems like Memcached and Redis, this method may be left empty.</source>
          <target state="translated">&lt;code&gt;gc&lt;/code&gt; 방법은 주어진보다 오래된 모든 세션 데이터 파괴한다 &lt;code&gt;$lifetime&lt;/code&gt; 유닉스 타임 스탬프입니다. Memcached 및 Redis와 같은 자체 만료 시스템의 경우이 방법을 비워 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14e0e67cb8329a0a09e2060467b1cfa0a9ea105f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method also accepts a Closure. After the Closure is executed, Laravel will automatically release the lock:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 방법은 클로저를 사용할 수 있습니다. 폐쇄가 실행 된 후 Laravel은 자동으로 잠금을 해제합니다 :</target>
        </trans-unit>
        <trans-unit id="5a490abc775998e6b6381f420cee3ae052417e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method makes a &lt;code&gt;GET&lt;/code&gt; request into the application, while the &lt;code&gt;assertStatus&lt;/code&gt; method asserts that the returned response should have the given HTTP status code. In addition to this simple assertion, Laravel also contains a variety of assertions for inspecting the response headers, content, JSON structure, and more.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 방법은하게 &lt;code&gt;GET&lt;/code&gt; 의 그동안의 응용 프로그램에 요청을 &lt;code&gt;assertStatus&lt;/code&gt; 의 방법은 반환 된 응답이 주어진 HTTP 상태 코드를 가져야한다고 주장한다. 이 간단한 어설 션 외에도 Laravel에는 응답 헤더, 콘텐츠, JSON 구조 등을 검사하기위한 다양한 어설 션이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d0a6833961656b521f54d7e4a9b53c5943a7e77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method may be used to retrieve the contents of a file. The raw string contents of the file will be returned by the method. Remember, all file paths should be specified relative to the &quot;root&quot; location configured for the disk:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 방법은 파일의 내용을 검색 할 수 있습니다. 파일의 원시 문자열 내용은 메소드에 의해 리턴됩니다. 모든 파일 경로는 디스크에 대해 구성된 &quot;루트&quot;위치를 기준으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="acc83ec4bae878e20fa7845475966aca97c14960" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade is used to retrieve items from the cache. If the item does not exist in the cache, &lt;code&gt;null&lt;/code&gt; will be returned. If you wish, you may pass a second argument to the &lt;code&gt;get&lt;/code&gt; method specifying the default value you wish to be returned if the item doesn't exist:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; 파사드 의 &lt;code&gt;get&lt;/code&gt; 메소드는 캐시 에서 항목을 검색하는 데 사용됩니다. 캐시에 해당 항목이 없으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 원하는 경우 항목이 존재하지 않을 경우 반환하려는 기본값을 지정하여 &lt;code&gt;get&lt;/code&gt; 메소드에 두 번째 인수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0ebf7536412b1052f400b99bb67619ac25f5cf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method returns an &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; containing the results where each result is an instance of the PHP &lt;code&gt;stdClass&lt;/code&gt; object. You may access each column's value by accessing the column as a property of the object:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 메소드는 리턴 &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; 각 결과가 PHP의 인스턴스 인 결과를 포함 &lt;code&gt;stdClass&lt;/code&gt; 의 개체를. 열을 객체의 속성으로 액세스하여 각 열의 값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4df7de696cc429ff7dff08cc02336aed16393a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method returns an instance of &lt;code&gt;Illuminate\Http\Client\Response&lt;/code&gt;, which provides a variety of methods that may be used to inspect the response:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 방법의 인스턴스를 반환 &lt;code&gt;Illuminate\Http\Client\Response&lt;/code&gt; 응답을 검사하는 데 사용할 수있는 다양한 방법을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="cfdcab1251d0b713dcb90d1c99f3096aac58ae5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method returns the item at a given key. If the key does not exist, &lt;code&gt;null&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 방법은 주어진 키에있는 항목을 반환합니다. 키가 존재하지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c7fa05480f219788043f4e3c34bb7683f54fa6c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOriginal&lt;/code&gt; method returns an array containing the original attributes of the model regardless of any changes since the model was loaded. You may pass a specific attribute name to get the original value of a particular attribute:</source>
          <target state="translated">그만큼 &lt;code&gt;getOriginal&lt;/code&gt; 방법은, 모델이로드 된 이후에 관계없이 변화 모델의 원래 특성을 포함하는 배열을 반환한다. 특정 속성 이름을 전달하여 특정 속성의 원래 값을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05b780a84da8c78187ce5dbcfcf5d49f22901318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groupBy&lt;/code&gt; and &lt;code&gt;having&lt;/code&gt; methods may be used to group the query results. The &lt;code&gt;having&lt;/code&gt; method's signature is similar to that of the &lt;code&gt;where&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;groupBy&lt;/code&gt; 및 &lt;code&gt;having&lt;/code&gt; 방법은 그룹에 질의 결과를 사용할 수있다. &lt;code&gt;having&lt;/code&gt; 메소드의 서명은 비슷합니다 &lt;code&gt;where&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="a1258fef35a429734f855e88dccc5a7c3a7b71b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groupBy&lt;/code&gt; method groups the collection's items by a given key:</source>
          <target state="translated">&lt;code&gt;groupBy&lt;/code&gt; 방법 그룹 주어진 키에 의해 컬렉션의 항목 :</target>
        </trans-unit>
        <trans-unit id="f1d687b52c209e5219caa86c8ebdb6b7d4505163" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groupByRaw&lt;/code&gt; method may be used to set a raw string as the value of the &lt;code&gt;group by&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;groupByRaw&lt;/code&gt; 에 있어서의 값으로 원시 문자열을 설정하는데 사용될 수있다 &lt;code&gt;group by&lt;/code&gt; 절 :</target>
        </trans-unit>
        <trans-unit id="5ccc3def86aa54b44f6d98bb051cb45bf39abb97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle&lt;/code&gt; method is called when the job is processed by the queue. Note that we are able to type-hint dependencies on the &lt;code&gt;handle&lt;/code&gt; method of the job. The Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; automatically injects these dependencies.</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; 작업이 큐에 의해 처리 될 때 메소드가 호출된다. 작업 의 &lt;code&gt;handle&lt;/code&gt; 방법에 의존성을 타이핑 할 수 있습니다. Laravel &lt;a href=&quot;container&quot;&gt;서비스 컨테이너는&lt;/a&gt; 이러한 종속성을 자동으로 주입합니다.</target>
        </trans-unit>
        <trans-unit id="4384703b30840cae656e6fefca01441c3078abd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method determines if a given key exists in the collection:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 주어진 키 컬렉션에 있는지 결정 방법은 :</target>
        </trans-unit>
        <trans-unit id="ff0f995a7895ab17ff4a69e0507734505aeef484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method may be used to determine if an item exists in the cache. This method will return &lt;code&gt;false&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">는 &lt;code&gt;has&lt;/code&gt; 방법은 항목이 캐시에 존재하는지 결정하는 데 이용 될 수있다. 값이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 인 경우이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="39acc6e95e1c37fde08f743b8b7f21faeb978442" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method may be used to determine if an item exists in the cache. This method will return &lt;code&gt;false&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">는 &lt;code&gt;has&lt;/code&gt; 방법은 항목이 캐시에 존재하는지 결정하는 데 이용 될 수있다. 이 메서드는 값이 다음과 같으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. &lt;code&gt;null&lt;/code&gt; 인 .</target>
        </trans-unit>
        <trans-unit id="0f22bebd6d834405a179e345bf7d377551c8dbfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method may be used to determine if any error messages exist for a given field:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 방법이 에러 메시지는 특정 필드에 존재하는지 결정하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="a6070de5eb80603f06f537e8f50ffa36a4be0124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hasAny&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if any of the specified values are present:</source>
          <target state="translated">&lt;code&gt;hasAny&lt;/code&gt; 의 메소드가 리턴 &lt;code&gt;true&lt;/code&gt; 지정된 값 중 하나가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="3327238d02a0c28d871bdfe0adc844e6f2c36449" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;havingRaw&lt;/code&gt; and &lt;code&gt;orHavingRaw&lt;/code&gt; methods may be used to set a raw string as the value of the &lt;code&gt;having&lt;/code&gt; clause. These methods accept an optional array of bindings as their second argument:</source>
          <target state="translated">&lt;code&gt;havingRaw&lt;/code&gt; 및 &lt;code&gt;orHavingRaw&lt;/code&gt; 방법의 값으로 원시 문자열 설정하는데 사용될 수있다 &lt;code&gt;having&lt;/code&gt; 절. 이 메소드는 선택적 바인딩 배열을 두 번째 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7728f8d34b583a7be36486b9688297d2a25b7c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;head&lt;/code&gt; function returns the first element in the given array:</source>
          <target state="translated">&lt;code&gt;head&lt;/code&gt; 함수는 주어진 어레이의 첫 번째 요소를 반환</target>
        </trans-unit>
        <trans-unit id="05af33415b4c3b7716b257dae0debd8a3a4927bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;here&lt;/code&gt; callback will be executed immediately once the channel is joined successfully, and will receive an array containing the user information for all of the other users currently subscribed to the channel. The &lt;code&gt;joining&lt;/code&gt; method will be executed when a new user joins a channel, while the &lt;code&gt;leaving&lt;/code&gt; method will be executed when a user leaves the channel.</source>
          <target state="translated">&lt;code&gt;here&lt;/code&gt; 콜백 채널이 성공적으로 결합되고, 현재 채널에 등록 된 다른 모든 사용자에 대한 사용자 정보를 포함하는 배열을 받게됩니다 즉시 한 번 실행됩니다. &lt;code&gt;joining&lt;/code&gt; 그동안 새로운 사용자가 채널을 조인 할 때 방법이 실행됩니다 &lt;code&gt;leaving&lt;/code&gt; 방법은 사용자가 채널을 떠날 때 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3bba6ecba45cc14590e7d810761c57e276215841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;horizon&lt;/code&gt; configuration file allows you to configure how long recent and failed jobs should be persisted (in minutes). By default, recent jobs are kept for one hour while failed jobs are kept for a week:</source>
          <target state="translated">그만큼 &lt;code&gt;horizon&lt;/code&gt; 구성 파일은 최근의 실패한 작업이 (분)을 유지해야하는 시간을 구성 할 수 있습니다. 기본적으로 최근 작업은 1 시간 동안 보관되고 실패한 작업은 일주일 동안 보관됩니다.</target>
        </trans-unit>
        <trans-unit id="c4c9db722dc90b6fb608340d7c7c6265e313d6fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imageable&lt;/code&gt; relation on the &lt;code&gt;Image&lt;/code&gt; model will return either a &lt;code&gt;Post&lt;/code&gt; or &lt;code&gt;User&lt;/code&gt; instance, depending on which type of model owns the image. If you need to specify custom &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; columns for the &lt;code&gt;morphTo&lt;/code&gt; relation, always ensure you pass the relationship name (which should exactly match the method name) as the first parameter:</source>
          <target state="translated">&lt;code&gt;imageable&lt;/code&gt; 상의 관련 &lt;code&gt;Image&lt;/code&gt; 모델은 중 하나를 반환합니다 &lt;code&gt;Post&lt;/code&gt; 또는 &lt;code&gt;User&lt;/code&gt; 모델의 유형이 이미지를 소유 한에 따라 인스턴스를. &lt;code&gt;morphTo&lt;/code&gt; 에 대한 사용자 정의 &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;id&lt;/code&gt; 열 을 지정해야하는 경우 관계에 항상 첫 번째 매개 변수로 관계 이름 (메서드 이름과 정확히 일치해야 함)을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="76c0a41a0d873492209796c251f5fbd6811abfdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;implode&lt;/code&gt; method joins the items in a collection. Its arguments depend on the type of items in the collection. If the collection contains arrays or objects, you should pass the key of the attributes you wish to join, and the &quot;glue&quot; string you wish to place between the values:</source>
          <target state="translated">&lt;code&gt;implode&lt;/code&gt; 방법은 컬렉션의 항목을 결합한다. 인수는 컬렉션의 항목 유형에 따라 다릅니다. 컬렉션에 배열 또는 객체가 포함 된 경우 결합하려는 속성의 키와 값 사이에 배치하려는 &quot;접착제&quot;문자열을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4822e250c872450bc7438acc16d0c99492ede5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inRandomOrder&lt;/code&gt; method may be used to sort the query results randomly. For example, you may use this method to fetch a random user:</source>
          <target state="translated">&lt;code&gt;inRandomOrder&lt;/code&gt; 의 방법은 무작위로 질의 결과를 정렬하는 데 사용할 수 있습니다. 예를 들어,이 방법을 사용하여 임의의 사용자를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49ee5baf22df87dbb0462def508532af384fb435" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; methods may be used to adjust the value of integer items in the cache. Both of these methods accept an optional second argument indicating the amount by which to increment or decrement the item's value:</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; 및 &lt;code&gt;decrement&lt;/code&gt; 방법은 캐시의 정수 항목의 값을 조정하는데 사용될 수있다. 이 두 가지 방법 모두 항목 값을 증가 또는 감소시키는 양을 나타내는 선택적 두 번째 인수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c5916b34f4f4ccaeaa4a014f0896ca93a9b80cc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.php&lt;/code&gt; file loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application from &lt;code&gt;bootstrap/app.php&lt;/code&gt; script. The first action taken by Laravel itself is to create an instance of the application / &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;index.php&lt;/code&gt; 파일이로드 합성기 생성 된 자동 로더의 정의는 다음에서 Laravel 응용 프로그램의 인스턴스를 검색 &lt;code&gt;bootstrap/app.php&lt;/code&gt; 스크립트를. Laravel 자체가 취한 첫 번째 조치는 응용 프로그램 / &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 의 인스턴스를 만드는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="2feffd761a6ab63c2ef1b012f8a4e95a0d1ed459" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.php&lt;/code&gt; file loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application from &lt;code&gt;bootstrap/app.php&lt;/code&gt;. The first action taken by Laravel itself is to create an instance of the application / &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;index.php&lt;/code&gt; 파일이로드 합성기 생성 된 자동 로더의 정의는 다음에서 Laravel 응용 프로그램의 인스턴스를 검색 &lt;code&gt;bootstrap/app.php&lt;/code&gt; . 라 라벨 자체가 취한 첫 번째 작업은 애플리케이션의 인스턴스를 만드는 것입니다.&lt;a href=&quot;container&quot;&gt; 서비스 컨테이너&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9bb5ed2c9355fb93fc6215d87e6d4a485fbe12d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; function will write information to the &lt;a href=&quot;errors#logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; 기능은에 정보를 기록합니다 &lt;a href=&quot;errors#logging&quot;&gt;로그&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="98932aa60e7cc725270422ff0e57fb87e3f669ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; function will write information to the &lt;a href=&quot;logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; 기능은 정보를 기록합니다 &lt;a href=&quot;logging&quot;&gt;로그&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f81b609db2685c9fb77c8694cb2befd4f7a16208" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;insertOrIgnore&lt;/code&gt; method will ignore duplicate record errors while inserting records into the database:</source>
          <target state="translated">&lt;code&gt;insertOrIgnore&lt;/code&gt; 데이터베이스에 레코드를 삽입 할 때 방법은 중복 기록 오류를 무시합니다 :</target>
        </trans-unit>
        <trans-unit id="917a5357b0d0e81b97a7aac0ff4c8624454338a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intended&lt;/code&gt; method on the redirector will redirect the user to the URL they were attempting to access before being intercepted by the authentication middleware. A fallback URI may be given to this method in case the intended destination is not available.</source>
          <target state="translated">리디렉터 의 &lt;code&gt;intended&lt;/code&gt; 방법은 인증 미들웨어에 의해 가로 채기 전에 사용자가 액세스하려는 URL로 사용자를 리디렉션합니다. 의도 한 대상을 사용할 수없는 경우이 방법에 대체 URI가 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c527f4e7a3c6ddf553c11a92a86bd7e9d5c1535a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intersect&lt;/code&gt; method removes any values from the original collection that are not present in the given &lt;code&gt;array&lt;/code&gt; or collection. The resulting collection will preserve the original collection's keys:</source>
          <target state="translated">&lt;code&gt;intersect&lt;/code&gt; 있어서 지정된에 존재하지 않는 원래의 집합으로부터 임의의 값을 제거하는 &lt;code&gt;array&lt;/code&gt; 또는 컬렉션. 결과 컬렉션은 원본 컬렉션의 키를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="508f4b2e174226e8e5523e48082292bdffadab08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intersect&lt;/code&gt; method returns all of the models that are also present in the given collection:</source>
          <target state="translated">&lt;code&gt;intersect&lt;/code&gt; 메소드가 리턴도 지정된 컬렉션에 존재하는 모든 모델 :</target>
        </trans-unit>
        <trans-unit id="0f59de5191adb2e449fd8099add8017182cb7316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intersectByKeys&lt;/code&gt; method removes any keys from the original collection that are not present in the given &lt;code&gt;array&lt;/code&gt; or collection:</source>
          <target state="translated">&lt;code&gt;intersectByKeys&lt;/code&gt; 의 방법은 소정의없는 원래 컬렉션에서 어떤 키를 제거 &lt;code&gt;array&lt;/code&gt; 또는 컬렉션 :</target>
        </trans-unit>
        <trans-unit id="c934bec6c2d1d68f7f820e8f92b154e0211b1c56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invoiceFor&lt;/code&gt; method will create a Stripe invoice which will retry failed billing attempts. If you do not want invoices to retry failed charges, you will need to close them using the Stripe API after the first failed charge.</source>
          <target state="translated">&lt;code&gt;invoiceFor&lt;/code&gt; 의 방법은 청구 시도 실패 다시 시도합니다 스트라이프 송장을 생성합니다. 청구서가 청구 실패를 재 시도하지 않게하려면 청구가 처음 실패한 후 Stripe API를 사용하여 청구서를 닫아야합니다.</target>
        </trans-unit>
        <trans-unit id="37d3d5c0feb6e800d5c16caebfe19d475d971974" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; method allows you to verify that the incoming request path matches a given pattern. You may use the &lt;code&gt;*&lt;/code&gt; character as a wildcard when utilizing this method:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; 방법을 사용하면 들어오는 요청의 경로가 지정된 패턴과 일치하는지 확인할 수 있습니다. 이 방법을 사용할 때 &lt;code&gt;*&lt;/code&gt; 문자를 와일드 카드로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="879200c19d1e166d70d746967255e24a93d59723" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; method determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards:</source>
          <target state="translated">은 &lt;code&gt;is&lt;/code&gt; 주어진 문자열이 소정의 패턴에 일치하는 경우에있어서 판정한다. 별표를 사용하여 와일드 카드를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cd4ae979f6b55f353d7b08f60e95fd51a05d766" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; method is also available when using the &lt;code&gt;belongsTo&lt;/code&gt;, &lt;code&gt;hasOne&lt;/code&gt;, &lt;code&gt;morphTo&lt;/code&gt;, and &lt;code&gt;morphOne&lt;/code&gt; relationships. This method is particularly helpful when you would like to compare a related model without issuing a query to retrieve that model:</source>
          <target state="translated">는 &lt;code&gt;is&lt;/code&gt; 은 USING 때 방법도 가능 &lt;code&gt;belongsTo&lt;/code&gt; 를을 , &lt;code&gt;hasOne&lt;/code&gt; 의 , &lt;code&gt;morphTo&lt;/code&gt; 및 &lt;code&gt;morphOne&lt;/code&gt; 관계. 이 방법은 쿼리를 실행하지 않고 관련 모델을 비교하여 해당 모델을 검색하려는 경우 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="29428051ca37ab9f58c80699b24651597b1c69c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isAscii&lt;/code&gt; method determines if a given string is an ASCII string:</source>
          <target state="translated">&lt;code&gt;isAscii&lt;/code&gt; 주어진 문자열을 ASCII 문자열 인 경우 방법 결정</target>
        </trans-unit>
        <trans-unit id="f38d9e8448e1528b280bf81a4f8509aec4164941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isDirty&lt;/code&gt; method determines if any attributes have been changed since the model was loaded. You may pass a specific attribute name to determine if a particular attribute is dirty. The &lt;code&gt;isClean&lt;/code&gt; method is the opposite of &lt;code&gt;isDirty&lt;/code&gt; and also accepts an optional attribute argument:</source>
          <target state="translated">&lt;code&gt;isDirty&lt;/code&gt; 모델이로드 된 이후 어떤 속성이 변경되었는지 방법을 결정합니다. 특정 속성이 더티인지 확인하기 위해 특정 속성 이름을 전달할 수 있습니다. &lt;code&gt;isClean&lt;/code&gt; 방법은 반대 &lt;code&gt;isDirty&lt;/code&gt; 하고 또한 선택적 속성 인수 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="cba5c71750c4d29784b9a7da10b64be8843c1e99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isEmpty&lt;/code&gt; method determines if the given string is empty:</source>
          <target state="translated">&lt;code&gt;isEmpty&lt;/code&gt; 주어진 문자열이 비어있는 경우 방법 결정</target>
        </trans-unit>
        <trans-unit id="a9b6060f5dd0376c515c8cc110de3072a0858952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isEmpty&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection is empty; otherwise, &lt;code&gt;false&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;isEmpty&lt;/code&gt; 방법은 반환 &lt;code&gt;true&lt;/code&gt; 컬렉션이 비어있는 경우; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fbbbd67502d4a023aff94a61acd9ff5ae169cd9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isNotEmpty&lt;/code&gt; method determines if the given string is not empty:</source>
          <target state="translated">&lt;code&gt;isNotEmpty&lt;/code&gt; 의 방법은 주어진 문자열이 비어 있지 않은 경우 결정</target>
        </trans-unit>
        <trans-unit id="ac441b96f9ec4c0c7f24c1d25784e791eb39223f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isNotEmpty&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection is not empty; otherwise, &lt;code&gt;false&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;isNotEmpty&lt;/code&gt; 의 메소드가 반환 &lt;code&gt;true&lt;/code&gt; 컬렉션이 비어 있지 않은 경우; 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9924b55ac36463355a280b755a566cf80bb73fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="39e7a94265fe52e4f4251e307317e7b59b5fd010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; method will only be called if the &lt;code&gt;serves&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for the incoming request and the request URI is not &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; 의 (가) 경우 메소드는 호출됩니다 &lt;code&gt;serves&lt;/code&gt; 메소드가 리턴 &lt;code&gt;true&lt;/code&gt; 들어오는 요청 URI가 아닌 요구를 들어 &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15385ed1c3901f84deae14c5422690abdec2ff43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; should determine if the incoming request is for a file that is &quot;static&quot;, such as an image or a stylesheet. If the file is static, the method should return the fully qualified path to the static file on disk. If the incoming request is not for a static file, the method should return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; 는 들어오는 요청 이미지 나 스타일 시트 등의 &quot;고정&quot;되어있는 파일인지를 결정한다. 파일이 정적이면이 메소드는 디스크의 정적 파일에 대한 완전한 경로를 리턴해야합니다. 들어오는 요청이 정적 파일이 아닌 경우, 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bec1649d700ffad2c61cdeffc59714a35b0156dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isset&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;isset&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="a33c3de0a090bc956b4e6bad85bd58d7cb11f6b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;job&lt;/code&gt; method may be used to schedule a &lt;a href=&quot;queues&quot;&gt;queued job&lt;/a&gt;. This method provides a convenient way to schedule jobs without using the &lt;code&gt;call&lt;/code&gt; method to manually create Closures to queue the job:</source>
          <target state="translated">&lt;code&gt;job&lt;/code&gt; 방법은 예약하기 위해 사용될 수있다 &lt;a href=&quot;queues&quot;&gt;대기 작업을&lt;/a&gt; . 이 메소드는 &lt;code&gt;call&lt;/code&gt; 메소드를 사용하여 작업 을 큐에 대기 할 수동으로 클로저를 작성 하지 않고 작업을 스케줄하는 편리한 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="c6088f195840a9d492c4e7e008f68b54aec63b0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;join&lt;/code&gt; method joins the collection's values with a string:</source>
          <target state="translated">는 &lt;code&gt;join&lt;/code&gt; 방법은 문자열 컬렉션의 값을 조인</target>
        </trans-unit>
        <trans-unit id="5335b412f43832cafc082a5778b97c8cdced1dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json&lt;/code&gt; method will automatically set the &lt;code&gt;Content-Type&lt;/code&gt; header to &lt;code&gt;application/json&lt;/code&gt;, as well as convert the given array to JSON using the &lt;code&gt;json_encode&lt;/code&gt; PHP function:</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; 방법은 자동으로 설정됩니다 &lt;code&gt;Content-Type&lt;/code&gt; 에 헤더 &lt;code&gt;application/json&lt;/code&gt; 뿐만 아니라 사용하여 JSON에 지정된 배열을 변환으로, &lt;code&gt;json_encode&lt;/code&gt; PHP 함수를 :</target>
        </trans-unit>
        <trans-unit id="16f136b7fe1066ba7bdd02f4d5fb9841b035d960" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kebab&lt;/code&gt; method converts the given string to &lt;code&gt;kebab-case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;kebab&lt;/code&gt; 방법에 주어진 문자열로 변환 &lt;code&gt;kebab-case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e8a2a0e80c64fe0e8b39e37faabd55e3fda5ac19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kebab_case&lt;/code&gt; function converts the given string to &lt;code&gt;kebab-case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;kebab_case&lt;/code&gt; 의 기능에 주어진 문자열로 변환 &lt;code&gt;kebab-case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="702c03f570a12b0e835688ba1fa3e3da89c1ab26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keyBy&lt;/code&gt; method keys the collection by the given key. If multiple items have the same key, only the last one will appear in the new collection:</source>
          <target state="translated">&lt;code&gt;keyBy&lt;/code&gt; 의 방법 키 지정된 키에 의해 수집. 여러 항목에 동일한 키가있는 경우 새 항목에 마지막 항목 만 나타납니다.</target>
        </trans-unit>
        <trans-unit id="9f2fb0619e765d1a6c2857ddcb5f848564216965" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; method allows you to provide more complex input sequences to a given element than normally allowed by the &lt;code&gt;type&lt;/code&gt; method. For example, you may hold modifier keys entering values. In this example, the &lt;code&gt;shift&lt;/code&gt; key will be held while &lt;code&gt;taylor&lt;/code&gt; is entered into the element matching the given selector. After &lt;code&gt;taylor&lt;/code&gt; is typed, &lt;code&gt;otwell&lt;/code&gt; will be typed without any modifier keys:</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 방식은 일반적으로 허용하는 것보다 주어진 요소에 대한보다 복잡한 입력 시퀀스를 제공 할 수 있도록 &lt;code&gt;type&lt;/code&gt; 방법. 예를 들어, 값을 입력하는 수정 자 키를 보유 할 수 있습니다. 이 예에서는 지정된 선택기와 일치하는 요소에 &lt;code&gt;taylor&lt;/code&gt; 가 입력되는 동안 &lt;code&gt;shift&lt;/code&gt; 키가 유지됩니다 . 후 &lt;code&gt;taylor&lt;/code&gt; 입력되고, &lt;code&gt;otwell&lt;/code&gt; 는 어떤 보조 키없이 입력합니다 :</target>
        </trans-unit>
        <trans-unit id="b7a77a61d8f74872e01561bda617c55f90804945" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; method returns all of the collection's keys:</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 방법은 컬렉션의 키를 모두 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="f90858417b9bda497590888c39055cd1888cd5c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; function returns the last element in the given array:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 함수는 주어진 배열의 마지막 요소를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="5a8105f8db831eaa74390f673122ebb031fa3c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method returns the last element in the collection that passes a given truth test:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 방법은 주어진 진실 테스트를 통과 컬렉션의 마지막 요소를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="ae978a251588e8a9a6307f3c0eb27e5d169dcc12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastModified&lt;/code&gt; method returns the UNIX timestamp of the last time the file was modified:</source>
          <target state="translated">&lt;code&gt;lastModified&lt;/code&gt; 메소드는 파일이 수정 된 마지막 시간의 UNIX 타임 스탬프를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="5c880af0ef57ec990b6efe21086785ee6b468261" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last_posted_at&lt;/code&gt; attribute on the results of this query will be a raw string. It would be convenient if we could apply a &lt;code&gt;date&lt;/code&gt; cast to this attribute when executing the query. To accomplish this, we may use the &lt;code&gt;withCasts&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;last_posted_at&lt;/code&gt; 이 쿼리의 결과에 대한 속성은 원시 문자열입니다. 쿼리를 실행할 때이 속성에 &lt;code&gt;date&lt;/code&gt; 캐스트를 적용 할 수 있으면 편리 합니다. 이를 위해 &lt;code&gt;withCasts&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bc48fafd11045ca65ad279ff621677939b3e2bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;latest&lt;/code&gt; / &lt;code&gt;oldest&lt;/code&gt; Methods</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; / &lt;code&gt;oldest&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="96eb37f79400002bc20fb658233ab58556574c45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;oldest&lt;/code&gt; methods allow you to easily order results by date. By default, result will be ordered by the &lt;code&gt;created_at&lt;/code&gt; column. Or, you may pass the column name that you wish to sort by:</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; 및 &lt;code&gt;oldest&lt;/code&gt; 방법은 날짜별로 쉽게 주문 결과를 할 수 있습니다. 기본적으로 결과는 &lt;code&gt;created_at&lt;/code&gt; 열에 따라 정렬 됩니다. 또는 정렬하려는 열 이름을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c399435ebaf6a21e5d69980fffd4b04a0a0af05c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; method returns the length of the given string:</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 방법은 주어진 문자열의 길이를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="c02b1ac2ad42cfdcf18769a0f290d58e6dac428a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;less&lt;/code&gt; method may be used to compile &lt;a href=&quot;http://lesscss.org/&quot;&gt;Less&lt;/a&gt; into CSS. Let's compile our primary &lt;code&gt;app.less&lt;/code&gt; file to &lt;code&gt;public/css/app.css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;less&lt;/code&gt; 방법은 컴파일하는 데 사용될 수있다 &lt;a href=&quot;http://lesscss.org/&quot;&gt;이하를&lt;/a&gt; CSS로. 기본 &lt;code&gt;app.less&lt;/code&gt; 파일을 &lt;code&gt;public/css/app.css&lt;/code&gt; 로 컴파일합시다 .</target>
        </trans-unit>
        <trans-unit id="82c4472d0e3943c02126353bddac0c511d9521b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; query builder methods may not be used when constraining eager loads.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 및 &lt;code&gt;take&lt;/code&gt; 열망 부하를 제약 할 때 쿼리 빌더 방법은 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b4757ea65f8f28da9f815625ae0aba42ec376052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; method truncates the given string at the specified length:</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 방법은 지정된 길이에 주어진 문자열을 잘라 :</target>
        </trans-unit>
        <trans-unit id="c0e4f6119c5a5d153fc4ea9481b15a60439a0326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; Command</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="a763177832951a26649b378ae420a21e55abb80a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; command may also be used to serve your Laravel sites. This command is useful if you want to serve a single site in a directory and not the entire directory.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 명령은 또한 Laravel 사이트를 제공하는 데 사용할 수 있습니다. 이 명령은 전체 디렉토리가 아닌 디렉토리에서 단일 사이트를 제공하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="32cdddec6a2d03838aa86cfbd4325219cea838cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;links&lt;/code&gt; method will render the links to the rest of the pages in the result set. Each of these links will already contain the proper &lt;code&gt;page&lt;/code&gt; query string variable. Remember, the HTML generated by the &lt;code&gt;links&lt;/code&gt; method is compatible with the &lt;a href=&quot;https://getbootstrap.com&quot;&gt;Bootstrap CSS framework&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;links&lt;/code&gt; 방법은 결과 집합의 나머지 페이지에 대한 링크를 렌더링합니다. 이러한 각 링크에는 적절한 &lt;code&gt;page&lt;/code&gt; 쿼리 문자열 변수 가 이미 포함되어 있습니다 . &lt;code&gt;links&lt;/code&gt; 메소드로 생성 된 HTML 은 &lt;a href=&quot;https://getbootstrap.com&quot;&gt;Bootstrap CSS 프레임 워크&lt;/a&gt; 와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="52066ff0dca032186cba46b83c1e6f64e767ba8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;links&lt;/code&gt; method will render the links to the rest of the pages in the result set. Each of these links will already contain the proper &lt;code&gt;page&lt;/code&gt; query string variable. Remember, the HTML generated by the &lt;code&gt;links&lt;/code&gt; method is compatible with the &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS framework&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;links&lt;/code&gt; 방법은 결과 집합의 나머지 페이지에 대한 링크를 렌더링합니다. 이러한 각 링크에는 이미 적절한 &lt;code&gt;page&lt;/code&gt; 쿼리 문자열 변수가 포함되어 있습니다 . &lt;code&gt;links&lt;/code&gt; 메소드로 생성 된 HTML 은 &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS 프레임 워크&lt;/a&gt; 와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e7645211eb081d5ef37070c04293b5986d52213" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listen&lt;/code&gt; method of the &lt;code&gt;Illuminate\Contracts\Events\Dispatcher&lt;/code&gt; contract has been updated to make the &lt;code&gt;$listener&lt;/code&gt; property optional. This change was made to support automatic detection of handled event types via reflection. If you are manually implementing this interface, you should update your implementation accordingly:</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Events\Dispatcher&lt;/code&gt; 계약 의 &lt;code&gt;listen&lt;/code&gt; 메서드 가 업데이트되어 &lt;code&gt;$listener&lt;/code&gt; 속성을 선택 사항 으로 만들 수 있습니다. 리플렉션을 통해 처리 된 이벤트 유형의 자동 감지를 지원하기 위해 변경되었습니다. 이 인터페이스를 수동으로 구현하는 경우 그에 따라 구현을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="01484c73454b19c2f438e0749324ec3479d97911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;load&lt;/code&gt; method eager loads the given relationships for all models in the collection:</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 방법은 열망로드 컬렉션의 모든 모델에 사용되는 지정의 관계를 :</target>
        </trans-unit>
        <trans-unit id="c18ff658b3342aec2740f7256f37f1f80e6f57c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadMissing&lt;/code&gt; method eager loads the given relationships for all models in the collection if the relationships are not already loaded:</source>
          <target state="translated">&lt;code&gt;loadMissing&lt;/code&gt; 의 방법은 열망로드 컬렉션의 모든 모델에 사용되는 지정의 관계를 관계가 이미로드되지 않은 경우는 :</target>
        </trans-unit>
        <trans-unit id="316d29a62775baa1118f80c88eb8e401578feb9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logger&lt;/code&gt; function can be used to write a &lt;code&gt;debug&lt;/code&gt; level message to the &lt;a href=&quot;errors#logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;logger&lt;/code&gt; 기능은 작성하는 데 사용할 수있는 &lt;code&gt;debug&lt;/code&gt; 받는 수준 메시지 &lt;a href=&quot;errors#logging&quot;&gt;로그를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="362b98c6bdc0575b8c7f5242d3893f01373c429e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logger&lt;/code&gt; function can be used to write a &lt;code&gt;debug&lt;/code&gt; level message to the &lt;a href=&quot;logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;logger&lt;/code&gt; 기능은 작성하는 데 사용할 수있는 &lt;code&gt;debug&lt;/code&gt; 받는 수준 메시지 &lt;a href=&quot;logging&quot;&gt;로그를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b43322a102ca13bb25dba9be6a9a9456a3a3e1e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lower&lt;/code&gt; method converts the given string to lowercase:</source>
          <target state="translated">&lt;code&gt;lower&lt;/code&gt; 방법 변환 소문자로 지정된 캐릭터 :</target>
        </trans-unit>
        <trans-unit id="a798de76db177aec8382c8045a1c93019c2edfd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ltrim&lt;/code&gt; method left trims the given string:</source>
          <target state="translated">&lt;code&gt;ltrim&lt;/code&gt; 방법은 트림에게 주어진 문자열을 왼쪽 :</target>
        </trans-unit>
        <trans-unit id="e4d0d4b109d023d0a0190fef5c744863245e10ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; function accepts a name as its first argument, and a Closure as its second. The macro's Closure will be executed when calling the macro as a method on a &lt;code&gt;Browser&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 함수는 첫 번째 인수로서 이름과 같은 제 클로저를 받아 들인다. 매크로의 클로저는 &lt;code&gt;Browser&lt;/code&gt; 구현 에서 매크로를 메서드로 호출 할 때 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="d328a848fafc853b000752085277c1b3c1b8d052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; function accepts a name as its first argument, and a Closure as its second. The macro's Closure will be executed when calling the macro name from a &lt;code&gt;Laravel\Scout\Builder&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 함수는 첫 번째 인수로서 이름과 같은 제 클로저를 받아 들인다. &lt;code&gt;Laravel\Scout\Builder&lt;/code&gt; 구현 에서 매크로 이름을 호출 할 때 매크로의 Closure가 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="d5f928104a09bfa3dcd85406f0e9a9a46d8fcb6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; function accepts a name as its first argument, and a Closure as its second. The macro's Closure will be executed when calling the macro name from a &lt;code&gt;ResponseFactory&lt;/code&gt; implementation or the &lt;code&gt;response&lt;/code&gt; helper:</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 함수는 첫 번째 인수로서 이름과 같은 제 클로저를 받아 들인다. 매크로의 클로저는 &lt;code&gt;ResponseFactory&lt;/code&gt; 구현 또는 &lt;code&gt;response&lt;/code&gt; 헬퍼 에서 매크로 이름을 호출 할 때 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="0bc973394687a0e27b6895e6d182d906b20969de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make:auth&lt;/code&gt; command will also create a &lt;code&gt;resources/views/layouts&lt;/code&gt; directory containing a base layout for your application. All of these views use the Bootstrap CSS framework, but you are free to customize them however you wish.</source>
          <target state="translated">&lt;code&gt;make:auth&lt;/code&gt; 명령도 만듭니다 &lt;code&gt;resources/views/layouts&lt;/code&gt; 응용 프로그램에 대한 기본 레이아웃을 포함하는 디렉토리. 이러한 모든 뷰는 Bootstrap CSS 프레임 워크를 사용하지만 원하는대로 자유롭게 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af16489ad097f454b212291267269cf0b1166b2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make:component&lt;/code&gt; command will also create a view template for the component. The view will be placed in the &lt;code&gt;resources/views/components&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;make:component&lt;/code&gt; 명령은 구성 요소에 대한 뷰 템플릿을 생성합니다. 보기는 &lt;code&gt;resources/views/components&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="abf61a4ef7801bd3d04040311c01b50200515b72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make:policy&lt;/code&gt; command will generate an empty policy class. If you would like to generate a class with the basic &quot;CRUD&quot; policy methods already included in the class, you may specify a &lt;code&gt;--model&lt;/code&gt; when executing the command:</source>
          <target state="translated">&lt;code&gt;make:policy&lt;/code&gt; 명령은 빈 정책 클래스를 생성합니다. 클래스에 이미 포함 된 기본 &quot;CRUD&quot;정책 메소드를 사용하여 클래스를 생성 하려면 명령을 실행할 때 &lt;code&gt;--model&lt;/code&gt; 을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e71b4aa3cc47cd822534deb36bc06c5272a5a20c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="6e2e40b07b14ddb9476cb0dd774fa8cd3969f739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makeDirectory&lt;/code&gt; method will create the given directory, including any needed sub-directories:</source>
          <target state="translated">&lt;code&gt;makeDirectory&lt;/code&gt; 방법은 필요한 모든 하위 디렉토리를 포함하여, 지정된 디렉토리를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="ed49e819b5bfbc226f26b739947d7466e51641bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makeDirectory&lt;/code&gt; method will create the given directory, including any needed subdirectories:</source>
          <target state="translated">&lt;code&gt;makeDirectory&lt;/code&gt; 방법은 필요한 모든 서브 디렉토리를 포함하여, 지정된 디렉토리를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="417e3da1ac0d4e602eca06f218796180e02a1c64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makeHidden&lt;/code&gt; method hides attributes that are typically &quot;visible&quot; on each model in the collection:</source>
          <target state="translated">&lt;code&gt;makeHidden&lt;/code&gt; 컬렉션의 각 모델에 일반적으로 &quot;볼 수&quot;있는 방법 가죽의 특성 :</target>
        </trans-unit>
        <trans-unit id="b1db0d13f5e6ed897256a6bfc441bf5bacf3de7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makeVisible&lt;/code&gt; method makes attributes visible that are typically &quot;hidden&quot; on each model in the collection:</source>
          <target state="translated">&lt;code&gt;makeVisible&lt;/code&gt; 방법은 일반적으로 컬렉션의 각 모델의 &quot;숨겨진&quot;되는 볼 속성을합니다 :</target>
        </trans-unit>
        <trans-unit id="e68f73389839c2188b470c3b44d1edcad10b8420" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;map&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items:</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 방법은 컬렉션을 반복하고, 소정의 콜백 각 값을 전달한다. 콜백은 항목을 자유롭게 수정하고 반환하여 수정 된 항목의 새로운 컬렉션을 형성합니다.</target>
        </trans-unit>
        <trans-unit id="759002832c8a0c5977d00a8f2a4b1551a93c4e45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapInto()&lt;/code&gt; method iterates over the collection, creating a new instance of the given class by passing the value into the constructor:</source>
          <target state="translated">&lt;code&gt;mapInto()&lt;/code&gt; 생성자에 값을 전달하여 특정 클래스의 새로운 인스턴스를 생성하는 방법 콜렉션 반복 :</target>
        </trans-unit>
        <trans-unit id="245482d5208f4b52be1cc8f9519aa19cab627cf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapSpread&lt;/code&gt; method iterates over the collection's items, passing each nested item value into the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items:</source>
          <target state="translated">&lt;code&gt;mapSpread&lt;/code&gt; 의 방법은 주어진 콜백에 중첩 된 각 항목의 값을 전달, 컬렉션의 항목을 반복 할. 콜백은 항목을 자유롭게 수정하고 반환하여 수정 된 항목의 새로운 컬렉션을 형성합니다.</target>
        </trans-unit>
        <trans-unit id="c8d9886e090cbd8ed47061a57e74afc1411ab58d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapToGroups&lt;/code&gt; method groups the collection's items by the given callback. The callback should return an associative array containing a single key / value pair, thus forming a new collection of grouped values:</source>
          <target state="translated">&lt;code&gt;mapToGroups&lt;/code&gt; 는 주어진 콜백에 의한 방법 그룹 컬렉션의 항목을. 콜백은 단일 키 / 값 쌍을 포함하는 연관 배열을 반환하여 새로운 그룹화 된 값 모음을 형성해야합니다.</target>
        </trans-unit>
        <trans-unit id="239ca5cadf6671c72f156e95aeef1033945dea02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapWithKeys&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback should return an associative array containing a single key / value pair:</source>
          <target state="translated">&lt;code&gt;mapWithKeys&lt;/code&gt; 방법은 컬렉션을 반복하고, 소정의 콜백 각 값을 전달한다. 콜백은 단일 키 / 값 쌍을 포함하는 연관 배열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="17191f24a7ae319e5bd3c3a9dd1c23a94915ef9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match&lt;/code&gt; method will return the portion of a string that matches a given regular expression pattern:</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 방법은 주어진 정규 표현식 패턴과 일치하는 문자열의 일부를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="8ca594efe08454cf86f3846e0f0125c9bf94c9a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matchAll&lt;/code&gt; method will return a collection containing the portions of a string that match a given regular expression pattern:</source>
          <target state="translated">&lt;code&gt;matchAll&lt;/code&gt; 의 방법은 주어진 정규식 패턴과 일치하는 문자열의 부분을 포함하는 집합을 리턴한다 :</target>
        </trans-unit>
        <trans-unit id="b95a7e846a0481718e35c9de2688703b19d3ab63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; method returns the maximum value of a given key:</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; 방법은 지정된 키의 최대 값을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="c16ebacfb4e303287aab6a0adf3680fe1bd24b66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maximize&lt;/code&gt; method may be used to maximize the browser window:</source>
          <target state="translated">&lt;code&gt;maximize&lt;/code&gt; 방법은 브라우저 창을 최대화하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="7a127cb91d36b68d2c64e7047e0795306a5b6f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;median&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;median value&lt;/a&gt; of a given key:</source>
          <target state="translated">&lt;code&gt;median&lt;/code&gt; 방법은 반환 &lt;a href=&quot;https://en.wikipedia.org/wiki/Median&quot;&gt;중간 값&lt;/a&gt; 주어진 키를 :</target>
        </trans-unit>
        <trans-unit id="a2bff9bee995c7358ce4025ac5922d6a7a5bd456" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;merge&lt;/code&gt; method merges the given array or collection with the original collection. If a string key in the given items matches a string key in the original collection, the given items's value will overwrite the value in the original collection:</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; 방법은 원래의 컬렉션 주어진 어레이 또는 컬렉션을 병합. 주어진 항목의 문자열 키가 원래 컬렉션의 문자열 키와 일치하면 지정된 항목의 값이 원래 컬렉션의 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="c4f491c459867f1fc1db47c2b5cbfbeae106501c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mergeRecursive&lt;/code&gt; method merges the given array or collection recursively with the original collection. If a string key in the given items matches a string key in the original collection, then the values for these keys are merged together into an array, and this is done recursively:</source>
          <target state="translated">&lt;code&gt;mergeRecursive&lt;/code&gt; 방법은 원래의 컬렉션 재귀 주어진 어레이 또는 컬렉션을 병합. 주어진 항목의 문자열 키가 원래 컬렉션의 문자열 키와 일치하면 이러한 키의 값이 배열로 병합되고 이는 재귀 적으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="398f38332d8ae3960e7b621a3fe716b34e39460d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mergeWhen&lt;/code&gt; method should not be used within arrays that mix string and numeric keys. Furthermore, it should not be used within arrays with numeric keys that are not ordered sequentially.</source>
          <target state="translated">&lt;code&gt;mergeWhen&lt;/code&gt; 의 방법은 문자열과 숫자 키를 함께 배열 내에서 사용할 수 없습니다. 또한 순서대로 정렬되지 않은 숫자 키가있는 배열에서는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="640c85078418188c50cac52509c31ebbc2530ded" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; method will return the HTTP verb for the request. You may use the &lt;code&gt;isMethod&lt;/code&gt; method to verify that the HTTP verb matches a given string:</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 방법은 요청에 대한 HTTP 동사를 반환합니다. &lt;code&gt;isMethod&lt;/code&gt; 메소드를 사용하여 HTTP 동사가 주어진 문자열과 일치하는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22e2f9518f81ba4783dfac4477943886f0c42794" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method_field&lt;/code&gt; function generates an HTML &lt;code&gt;hidden&lt;/code&gt; input field containing the spoofed value of the form's HTTP verb. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;method_field&lt;/code&gt; 의 함수는 HTML 생성 &lt;code&gt;hidden&lt;/code&gt; 형태의 HTTP 동사의 스푸핑 된 값을 포함하는 입력 필드를. 예를 들어, &lt;a href=&quot;blade&quot;&gt;Blade 구문 사용&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c4d9438fe9fc806503ae00d75ec69d622303aa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:fresh&lt;/code&gt; command will drop all database tables regardless of their prefix. This command should be used with caution when developing on a database that is shared with other applications.</source>
          <target state="translated">&lt;code&gt;migrate:fresh&lt;/code&gt; 명령은 접두사에 관계없이 모든 데이터베이스 테이블을 삭제합니다. 이 명령은 다른 애플리케이션과 공유되는 데이터베이스에서 개발할 때주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8988c90e84f509d07768de2b867d8b02f10fb7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:fresh&lt;/code&gt; command will drop all tables from the database and then execute the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;migrate:fresh&lt;/code&gt; 명령은 데이터베이스의 모든 테이블을 삭제 한 후 실행합니다 &lt;code&gt;migrate&lt;/code&gt; 명령을 :</target>
        </trans-unit>
        <trans-unit id="5a2d0f1b391f03e254e793a8c42737745d5c4cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:refresh&lt;/code&gt; command will roll back all of your migrations and then execute the &lt;code&gt;migrate&lt;/code&gt; command. This command effectively re-creates your entire database:</source>
          <target state="translated">&lt;code&gt;migrate:refresh&lt;/code&gt; 명령은 마이그레이션을 모두 롤백하고 실행합니다 &lt;code&gt;migrate&lt;/code&gt; 명령을 사용합니다. 이 명령은 전체 데이터베이스를 효과적으로 다시 만듭니다.</target>
        </trans-unit>
        <trans-unit id="48f5170b9af3e3d88f6fe42e14675ce645af2675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;migrate:reset&lt;/code&gt; command will roll back all of your application's migrations:</source>
          <target state="translated">&lt;code&gt;migrate:reset&lt;/code&gt; 명령은 응용 프로그램의 마이그레이션을 모두 롤백합니다 :</target>
        </trans-unit>
        <trans-unit id="6ca7071caa72089e029ff4edcf1c4a9dff0fbbb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min&lt;/code&gt; method returns the minimum value of a given key:</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 방법은, 소정 키의 최소값을 리턴</target>
        </trans-unit>
        <trans-unit id="cab78c322463a09e1ede3937eebf5b215684482f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;missing&lt;/code&gt; method may be used to determine if a file is missing from the disk:</source>
          <target state="translated">&lt;code&gt;missing&lt;/code&gt; 방법은 파일이 디스크로부터 누락 여부를 결정하는데 이용 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="1f1149e735f5c5d42e3772b15a284c23e90605bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mix&lt;/code&gt; function returns the path to a &lt;a href=&quot;mix&quot;&gt;versioned Mix file&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;mix&lt;/code&gt; 함수는 경로를 반환 &lt;a href=&quot;mix&quot;&gt;버전 믹스 파일&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="aacbdbfa47b90a6fcad6995986fcbc164d8795b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;mode value&lt;/a&gt; of a given key:</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 방법은 반환 &lt;a href=&quot;https://en.wikipedia.org/wiki/Mode_(statistics)&quot;&gt;모드 값&lt;/a&gt; 주어진 키를 :</target>
        </trans-unit>
        <trans-unit id="6cb7317d6eeadab82ffe06bf15c13e437a5dbd3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modelKeys&lt;/code&gt; method returns the primary keys for all models in the collection:</source>
          <target state="translated">&lt;code&gt;modelKeys&lt;/code&gt; 의 방법은 컬렉션의 모든 모델에 대한 기본 키를 반환</target>
        </trans-unit>
        <trans-unit id="95df8af425fa27dedb1b2da9f086ffc69a3934a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseover&lt;/code&gt; method may be used when you need to move the mouse over an element matching the given selector:</source>
          <target state="translated">&lt;code&gt;mouseover&lt;/code&gt; 하면 지정된 셀렉터에 일치하는 요소 위로 마우스를 이동해야 할 때 방법을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="05cf2f85700546dde87e90cfedafa0814cccfc0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; method may be used to prefix each route name in the group with a given string. For example, you may want to prefix all of the grouped route's names with &lt;code&gt;admin&lt;/code&gt;. The given string is prefixed to the route name exactly as it is specified, so we will be sure to provide the trailing &lt;code&gt;.&lt;/code&gt; character in the prefix:</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 있어서 소정의 문자열 군에 각각의 경로 이름 앞에하는데 사용될 수있다. 예를 들어 그룹화 된 모든 경로 이름 앞에 &lt;code&gt;admin&lt;/code&gt; 을 붙일 수 있습니다 . 주어진 문자열은 지정된대로 정확하게 경로 이름 앞에 붙습니다. 그래서 우리는 후행을 제공 할 것 &lt;code&gt;.&lt;/code&gt; 접두사의 문자 :</target>
        </trans-unit>
        <trans-unit id="040f6a2749f129342687668914f15817cb00cdc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;needsRehash&lt;/code&gt; function allows you to determine if the work factor used by the hasher has changed since the password was hashed:</source>
          <target state="translated">&lt;code&gt;needsRehash&lt;/code&gt; 의 암호 해시 된 이후 심부름 군이 사용하는 작업 요소가 변경된 경우 기능을 사용하면 확인할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b6026f4a33049fc65741233f9132c57749e409c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;networks&lt;/code&gt; property of the &lt;code&gt;Homestead.yaml&lt;/code&gt; configures network interfaces for your Homestead environment. You may configure as many interfaces as necessary:</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; 의 &lt;code&gt;networks&lt;/code&gt; 속성은 홈스테드 환경에 대한 네트워크 인터페이스를 구성합니다. 필요한만큼 인터페이스를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ba6a5c7a34ce639f0de0ed113a66ecc1ec20ec1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noProrate&lt;/code&gt; method may be used to update the subscription's quantity without pro-rating the charges:</source>
          <target state="translated">&lt;code&gt;noProrate&lt;/code&gt; 방법은 프로 평가 요금없이 가입의 양을 업데이트 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="7a05ec62c1453b5ae9a2d6c036d5fd6a5d6cdc01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noProrate&lt;/code&gt; method may be used to update the subscription's quantity without prorating the charges:</source>
          <target state="translated">&lt;code&gt;noProrate&lt;/code&gt; 방법은 요금을 prorating없이 가입의 양을 업데이트 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f7d70f8a7eeb39223815b593ca3a38c3887318de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;now&lt;/code&gt; function creates a new &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; instance for the current time:</source>
          <target state="translated">&lt;code&gt;now&lt;/code&gt; 함수는 새로운 생성 &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; 현재 시간 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="842bb2958cf6c3adbcf037a1ae8c90d2d8d4a966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm run watch&lt;/code&gt; command will continue running in your terminal and watch all relevant files for changes. Webpack will then automatically recompile your assets when it detects a change:</source>
          <target state="translated">&lt;code&gt;npm run watch&lt;/code&gt; 명령을 터미널에서 계속 실행 및 변경에 대한 모든 관련 파일을 볼 것입니다. 그런 다음 Webpack은 변경 사항을 감지하면 자산을 자동으로 다시 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="134db7b07acd55b76dba0809882e89ac9252d195" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nth&lt;/code&gt; method creates a new collection consisting of every n-th element:</source>
          <target state="translated">&lt;code&gt;nth&lt;/code&gt; 방법은, 매 n 번째 원소로 이루어진 새로운 집합을 생성한다 :</target>
        </trans-unit>
        <trans-unit id="c8d5b94cd42f35d82ef3844ea54bcbd398fb8af7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;old&lt;/code&gt; function &lt;a href=&quot;requests#retrieving-input&quot;&gt;retrieves&lt;/a&gt; an &lt;a href=&quot;requests#old-input&quot;&gt;old input&lt;/a&gt; value flashed into the session:</source>
          <target state="translated">&lt;code&gt;old&lt;/code&gt; 기능 &lt;a href=&quot;requests#retrieving-input&quot;&gt;검색 &lt;/a&gt;&lt;a href=&quot;requests#old-input&quot;&gt;이전 입력&lt;/a&gt; 세션으로 번쩍 값 :</target>
        </trans-unit>
        <trans-unit id="751a10a129c05170dbf74361ad502f6d4d1d5742" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onSuccess&lt;/code&gt; and &lt;code&gt;onFailure&lt;/code&gt; methods allow you to specify code to be executed if the scheduled task succeeds or fails:</source>
          <target state="translated">&lt;code&gt;onSuccess&lt;/code&gt; 와 &lt;code&gt;onFailure&lt;/code&gt; 방법은 예약 된 작업이 성공하거나 실패 할 경우 실행되는 코드를 지정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fb427cd1d8977ff2e1699c203dbcf75759642b91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only&lt;/code&gt; method returns all of the key / value pairs that you request; however, it will not return key / value pairs that are not present on the request.</source>
          <target state="translated">&lt;code&gt;only&lt;/code&gt; 방법은 당신이 요청하는 키 / 값 쌍을 모두 반환 그러나 요청에없는 키 / 값 쌍은 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b17189a9a5736bef5e99e438b0d6211fdea5a34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only&lt;/code&gt; method returns all of the models that have the given primary keys:</source>
          <target state="translated">&lt;code&gt;only&lt;/code&gt; 방법은 기본 키를 준 모델의 모든 반환</target>
        </trans-unit>
        <trans-unit id="be8a8cab6455840c954f0fdc71a7556953d1d307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only&lt;/code&gt; method returns the items in the collection with the specified keys:</source>
          <target state="translated">&lt;code&gt;only&lt;/code&gt; 방법은 지정된 키를 사용하여 컬렉션의 항목을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="af883ebe90263f7e6a3323f4e092b4f3a352e701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onlyTrashed&lt;/code&gt; method will retrieve &lt;strong&gt;only&lt;/strong&gt; soft deleted models:</source>
          <target state="translated">&lt;code&gt;onlyTrashed&lt;/code&gt; 방법은 검색합니다 &lt;strong&gt;에만&lt;/strong&gt; 소프트 삭제 모델 :</target>
        </trans-unit>
        <trans-unit id="65c9831b6f4f0d752df25e88dd02284913903e10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; method would typically be used in file based session store systems. Since Laravel ships with a &lt;code&gt;file&lt;/code&gt; session driver, you will almost never need to put anything in this method. You can leave it as an empty stub. It is a fact of poor interface design (which we'll discuss later) that PHP requires us to implement this method.</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; 방법은 일반적으로 파일 기반 세션 저장 시스템에 사용된다. Laravel은 &lt;code&gt;file&lt;/code&gt; 세션 드라이버 와 함께 제공되므로이 방법으로 아무것도 넣지 않아도됩니다. 빈 스텁으로 남겨 둘 수 있습니다. PHP가 우리에게이 메소드를 구현하도록 요구하는 것은 좋지 않은 인터페이스 디자인 (나중에 설명 할 것임)의 사실입니다.</target>
        </trans-unit>
        <trans-unit id="84359d31350f826c4639dfef5954189909025c6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; function accepts any argument and allows you to access properties or call methods on that object. If the given object is &lt;code&gt;null&lt;/code&gt;, properties and methods will return &lt;code&gt;null&lt;/code&gt; instead of causing an error:</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; 기능은 인수를 승인하고 액세스 속성이나 객체에 호출 방법에 당신을 수 있습니다. 주어진 객체가 &lt;code&gt;null&lt;/code&gt; 인 경우 속성과 메서드는 오류를 발생시키는 대신 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="31e1e9b43f409ccc133138c47639b408f67a23be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optional&lt;/code&gt; function also accepts a Closure as its second argument. The Closure will be invoked if the value provided as the first argument is not null:</source>
          <target state="translated">&lt;code&gt;optional&lt;/code&gt; 기능은 두 번째 인수로 폐쇄을 받아들입니다. 첫 번째 인수로 제공된 값이 널이 아닌 경우 클로저가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8a54834611c3d7ad719a628b634c95c4a1e3b260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;or&lt;/code&gt; Operator</source>
          <target state="translated">&lt;code&gt;or&lt;/code&gt; 운영자</target>
        </trans-unit>
        <trans-unit id="7745a76ea7b7f8cf7e8ec5cf1a363149bd842b6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orderBy&lt;/code&gt; method allows you to sort the result of the query by a given column. The first argument to the &lt;code&gt;orderBy&lt;/code&gt; method should be the column you wish to sort by, while the second argument controls the direction of the sort and may be either &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;orderBy&lt;/code&gt; 방법은 주어진 열을 기준으로 쿼리의 결과를 정렬 할 수 있습니다. &lt;code&gt;orderBy&lt;/code&gt; 메소드 의 첫 번째 인수 는 정렬하려는 열이어야하며 두 번째 인수는 정렬 방향을 제어하며 &lt;code&gt;asc&lt;/code&gt; 또는 &lt;code&gt;desc&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a4c8a33fb26d5c9bc75424d6723db07f691bde2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orderByRaw&lt;/code&gt; method may be used to set a raw string as the value of the &lt;code&gt;order by&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;orderByRaw&lt;/code&gt; 의 방법은 값으로서 원료 문자열 설정하는데 사용될 수있다 &lt;code&gt;order by&lt;/code&gt; 절 :</target>
        </trans-unit>
        <trans-unit id="f38ee8eae5d203c985a302d1de11c2a018fca49b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pad&lt;/code&gt; method will fill the array with the given value until the array reaches the specified size. This method behaves like the &lt;a href=&quot;https://secure.php.net/manual/en/function.array-pad.php&quot;&gt;array_pad&lt;/a&gt; PHP function.</source>
          <target state="translated">&lt;code&gt;pad&lt;/code&gt; 어레이는 지정된 크기에 도달 할 때까지에있어서, 상기 소정의 값을 갖는 배열을 기입 할 것이다. 이 메소드는 &lt;a href=&quot;https://secure.php.net/manual/en/function.array-pad.php&quot;&gt;array_pad&lt;/a&gt; PHP 함수 처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="e7f3a2f0c8538e2dff39563bcf91d0f9a1b10316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padBoth&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding both sides of a string with another:</source>
          <target state="translated">&lt;code&gt;padBoth&lt;/code&gt; 의 방법은 PHP의 랩 &lt;code&gt;str_pad&lt;/code&gt; 의 서로 문자열의 양쪽을 패딩, 기능 :</target>
        </trans-unit>
        <trans-unit id="2c8a9ed5da0a8f1598a7518b3d88efe410334d43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padLeft&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the left side of a string with another:</source>
          <target state="translated">&lt;code&gt;padLeft&lt;/code&gt; 에 있어서의 래핑 PHP &lt;code&gt;str_pad&lt;/code&gt; 의 다른 캐릭터와의 왼쪽 패딩, 기능 :</target>
        </trans-unit>
        <trans-unit id="91b6fee81827384db5de5b2d2e9da4ef56016f77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;padRight&lt;/code&gt; method wraps PHP's &lt;code&gt;str_pad&lt;/code&gt; function, padding the right side of a string with another:</source>
          <target state="translated">&lt;code&gt;padRight&lt;/code&gt; 에 있어서의 래핑 PHP &lt;code&gt;str_pad&lt;/code&gt; 의 다른 캐릭터와 오른쪽 패딩, 기능 :</target>
        </trans-unit>
        <trans-unit id="e2e2b323c7587af2d9566815b8fd0199f4d244ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;papertrail&lt;/code&gt; channel requires the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; configuration options. You can obtain these values from &lt;a href=&quot;https://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-php-apps/#send-events-from-php-app&quot;&gt;Papertrail&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;papertrail&lt;/code&gt; 의 채널은 필요 &lt;code&gt;url&lt;/code&gt; 및 &lt;code&gt;port&lt;/code&gt; 구성 옵션을. &lt;a href=&quot;https://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-php-apps/#send-events-from-php-app&quot;&gt;Papertrail&lt;/a&gt; 에서 이러한 값을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fedaeee06e59942abed77749841943f2110193f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;park&lt;/code&gt; Command</source>
          <target state="translated">&lt;code&gt;park&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="4e4a1e7148b70496eec6aa8d0ec0fa9f7a5a51f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partition&lt;/code&gt; method may be combined with the &lt;code&gt;list&lt;/code&gt; PHP function to separate elements that pass a given truth test from those that do not:</source>
          <target state="translated">&lt;code&gt;partition&lt;/code&gt; 방법은 조합 될 수있다 &lt;code&gt;list&lt;/code&gt; 되지 않는 것으로부터 주어진 사실 테스트를 통과 개별 요소 PHP 함수 :</target>
        </trans-unit>
        <trans-unit id="569671de5fca298904d9e891aafdd49774b02925" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;passport:client&lt;/code&gt; Command</source>
          <target state="translated">&lt;code&gt;passport:client&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="dbdef9370f668b35cd43bde443ac6d29f9e83c4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; method returns the request's path information. So, if the incoming request is targeted at &lt;code&gt;http://domain.com/foo/bar&lt;/code&gt;, the &lt;code&gt;path&lt;/code&gt; method will return &lt;code&gt;foo/bar&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 방법은 요청의 경로 정보를 반환합니다. 따라서 들어오는 요청이 &lt;code&gt;http://domain.com/foo/bar&lt;/code&gt; 를 대상으로 하는 경우 &lt;code&gt;path&lt;/code&gt; 메소드는 &lt;code&gt;foo/bar&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f2924fd31dcc3281f3e89a13234608b6467b9795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paymentMethods&lt;/code&gt; method on the Billable model instance returns a collection of &lt;code&gt;Laravel\Cashier\PaymentMethod&lt;/code&gt; instances:</source>
          <target state="translated">&lt;code&gt;paymentMethods&lt;/code&gt; 의 청구 가능 모델 인스턴스에 대한 방법의 컬렉션을 반환 &lt;code&gt;Laravel\Cashier\PaymentMethod&lt;/code&gt; 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="aa1cc0c6df15a71aa060112e9a2ea15356293bcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pcntl&lt;/code&gt; PHP extension must be installed in order to specify job timeouts.</source>
          <target state="translated">&lt;code&gt;pcntl&lt;/code&gt; 의 PHP 확장은 작업 시간 제한을 지정하기 위해 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="0e050940a6c9fe951bb8d566894b61f4532d0a69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;php artisan down --message&lt;/code&gt; Option</source>
          <target state="translated">&lt;code&gt;php artisan down --message&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="fb6eefe50e67c1563a8f4454f755cd24e92ce363" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;php artisan serve --no-reload&lt;/code&gt; Option</source>
          <target state="translated">&lt;code&gt;php artisan serve --no-reload&lt;/code&gt; 옵션을</target>
        </trans-unit>
        <trans-unit id="338b4100a64523ca7fe6ddda65cab86fa106c1ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pingBeforeIf&lt;/code&gt; and &lt;code&gt;thenPingIf&lt;/code&gt; methods may be used to ping a given URL only if the given condition is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pingBeforeIf&lt;/code&gt; 및 &lt;code&gt;thenPingIf&lt;/code&gt; 방법은 주어진 조건이있는 경우에만 주어진 URL에 ping을 사용할 수 있습니다 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="864a0c6c0f4977c769c5a74fc190b9dc2b95bf6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pingOnSuccess&lt;/code&gt; and &lt;code&gt;pingOnFailure&lt;/code&gt; methods may be used to ping a given URL only if the task succeeds or fails:</source>
          <target state="translated">&lt;code&gt;pingOnSuccess&lt;/code&gt; 및 &lt;code&gt;pingOnFailure&lt;/code&gt; 방법이 작업이 성공하거나 실패 할 경우에만 주어진 URL에 ping을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6ebdb257fc1080f7cb941be5ef25cf644680e545" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipe&lt;/code&gt; method passes the collection to the given callback and returns the result:</source>
          <target state="translated">&lt;code&gt;pipe&lt;/code&gt; 방법은 주어진 콜백 컬렉션을 전달하고 결과를 반환</target>
        </trans-unit>
        <trans-unit id="291739a39469a269b52306e56a0e027dcb30a84e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipeInto&lt;/code&gt; method creates a new instance of the given class and passes the collection into the constructor:</source>
          <target state="translated">&lt;code&gt;pipeInto&lt;/code&gt; 의 방법은 소정의 클래스의 새로운 인스턴스를 생성 생성자로 전달 컬렉션 :</target>
        </trans-unit>
        <trans-unit id="b8ca7a651b7b73d8375e04ceb8a2b2e260083c9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluck&lt;/code&gt; method also supports retrieving nested values using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 방법은 또한, 표기 &quot;점&quot;을 사용하여 중첩 값을 검색 지원</target>
        </trans-unit>
        <trans-unit id="528d9bc815870e1b6376820f7d0020ca03f36b69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluck&lt;/code&gt; method retrieves all of the values for a given key:</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 방법은 주어진 키에 대한 모든 값을 검색합니다</target>
        </trans-unit>
        <trans-unit id="4d28dd2840b376f717a2f1c86248ed3a6426b591" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plural&lt;/code&gt; method converts a single word string to its plural form. This function currently only supports the English language:</source>
          <target state="translated">&lt;code&gt;plural&lt;/code&gt; 방법은 복수의 형태로 하나의 단어 문자열로 변환합니다. 이 기능은 현재 영어 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="0873dc32625778ef83664878d34dfcd5204e636b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;policy&lt;/code&gt; method retrieves a &lt;a href=&quot;authorization#creating-policies&quot;&gt;policy&lt;/a&gt; instance for a given class:</source>
          <target state="translated">&lt;code&gt;policy&lt;/code&gt; 방법은 검색 &lt;a href=&quot;authorization#creating-policies&quot;&gt;정책&lt;/a&gt; 주어진 클래스의 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="385306a144b912f9b4444e82e097a10997114057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pop&lt;/code&gt; method removes and returns the last item from the collection:</source>
          <target state="translated">&lt;code&gt;pop&lt;/code&gt; 방법 제거하고 반환 컬렉션에서 마지막 항목 :</target>
        </trans-unit>
        <trans-unit id="dae893db88b01fd2b7dba099b0e75eb6ce9e6619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; method may be used to prefix each route in the group with a given URI. For example, you may want to prefix all route URIs within the group with &lt;code&gt;admin&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 방법은 소정의 URI와 그룹의 각 행 접두사로서 사용될 수있다. 예를 들어 그룹 내의 모든 라우트 URI 앞에 &lt;code&gt;admin&lt;/code&gt; 을 붙일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a67db8bb38a38a5782b800f8889303beee287f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preg_replace_array&lt;/code&gt; function replaces a given pattern in the string sequentially using an array:</source>
          <target state="translated">&lt;code&gt;preg_replace_array&lt;/code&gt; 기능은 순차적으로 배열하여 문자열에 소정의 패턴을 대체</target>
        </trans-unit>
        <trans-unit id="6ad8f0110f8abc06cdd8e94021f9b0fa3f89df26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; and &lt;code&gt;append&lt;/code&gt; methods allow you to write to the beginning or end of a file:</source>
          <target state="translated">&lt;code&gt;prepend&lt;/code&gt; 및 &lt;code&gt;append&lt;/code&gt; 방법은 당신이 파일의 시작이나 끝으로 쓸 수 :</target>
        </trans-unit>
        <trans-unit id="cb5212702153aa1d2c9668a678aaa3765bb9b347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; method adds an item to the beginning of the collection:</source>
          <target state="translated">그만큼 &lt;code&gt;prepend&lt;/code&gt; 방법은 컬렉션의 시작 부분에 항목을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="13ff50c386794a4adb008590e4da049f5531a922" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend&lt;/code&gt; method prepends the given values onto the string:</source>
          <target state="translated">&lt;code&gt;prepend&lt;/code&gt; 방법 스트링 상에 주어진 값 앞에 추가 :</target>
        </trans-unit>
        <trans-unit id="7c0a2192125e8b2f6c65f3ddbe45b15032f2dd5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; key in your &lt;code&gt;Homestead.yaml&lt;/code&gt; file indicates which Vagrant provider should be used: &lt;code&gt;virtualbox&lt;/code&gt;, &lt;code&gt;vmware_fusion&lt;/code&gt;, &lt;code&gt;vmware_workstation&lt;/code&gt;, &lt;code&gt;parallels&lt;/code&gt; or &lt;code&gt;hyperv&lt;/code&gt;. You may set this to the provider you prefer:</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; 파일 의 &lt;code&gt;provider&lt;/code&gt; 키 는 사용할 Vagrant 제공자를 나타냅니다 : &lt;code&gt;virtualbox&lt;/code&gt; , &lt;code&gt;vmware_fusion&lt;/code&gt; , &lt;code&gt;vmware_workstation&lt;/code&gt; , &lt;code&gt;parallels&lt;/code&gt; 또는 &lt;code&gt;hyperv&lt;/code&gt; . 이것을 원하는 제공자로 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="2399280cfad8769cfcc16175bc23500bc89f1793" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="971c1f44d68fff3e22554f0c9f6c0023cceb80f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; directory contains the &lt;code&gt;index.php&lt;/code&gt; file, which is the entry point for all requests entering your application and configures autoloading. This directory also houses your assets such as images, JavaScript, and CSS.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 디렉토리는 포함 &lt;code&gt;index.php&lt;/code&gt; 신청하고 구성 자동 로딩을 입력하는 모든 요청에 대한 진입 점입니다 파일을. 이 디렉토리에는 이미지, JavaScript 및 CSS와 같은 자산이 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fec7ce553db676131b4b11dec36e83202cf6ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt; disk is intended for files that are going to be publicly accessible. By default, the &lt;code&gt;public&lt;/code&gt; disk uses the &lt;code&gt;local&lt;/code&gt; driver and stores these files in &lt;code&gt;storage/app/public&lt;/code&gt;. To make them accessible from the web, you should create a symbolic link from &lt;code&gt;public/storage&lt;/code&gt; to &lt;code&gt;storage/app/public&lt;/code&gt;. This convention will keep your publicly accessible files in one directory that can be easily shared across deployments when using zero down-time deployment systems like &lt;a href=&quot;https://envoyer.io&quot;&gt;Envoyer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 디스크는 공개적으로 액세스 할 수하려고하는 파일을위한 것입니다. 기본적으로 &lt;code&gt;public&lt;/code&gt; 디스크는 &lt;code&gt;local&lt;/code&gt; 드라이버를 사용하여 이러한 파일을 &lt;code&gt;storage/app/public&lt;/code&gt; 에 저장 합니다. 웹에서 액세스 할 수있게하려면 &lt;code&gt;public/storage&lt;/code&gt; 에서 &lt;code&gt;storage/app/public&lt;/code&gt; 으로 심볼릭 링크를 작성해야합니다 . 이 규칙은 &lt;a href=&quot;https://envoyer.io&quot;&gt;Envoyer&lt;/a&gt; 와 같은 다운 타임이없는 배포 시스템을 사용할 때 배포간에 쉽게 공유 할 수있는 공개적으로 액세스 가능한 파일을 하나의 디렉토리에 유지합니다. .</target>
        </trans-unit>
        <trans-unit id="fd7b6fcc98bf07e6489ddb1dfb681d6fae957d63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;#file-visibility&quot;&gt;visibility&lt;/a&gt; translates to &lt;code&gt;0755&lt;/code&gt; for directories and &lt;code&gt;0644&lt;/code&gt; for files. You can modify the permissions mappings in your &lt;code&gt;filesystems&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;#file-visibility&quot;&gt;가시성&lt;/a&gt; 로 변환 &lt;code&gt;0755&lt;/code&gt; 디렉토리 및 &lt;code&gt;0644&lt;/code&gt; 파일. &lt;code&gt;filesystems&lt;/code&gt; 구성 파일 에서 권한 매핑을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d01d59dbd93ed61c06df9603687b5cb894e10659" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;public&lt;/code&gt; directory. You may also use the &lt;code&gt;public_path&lt;/code&gt; function to generate a fully qualified path to a given file within the public directory:</source>
          <target state="translated">&lt;code&gt;public_path&lt;/code&gt; 의 기능은 완전한 경로를 반환 &lt;code&gt;public&lt;/code&gt; 디렉토리. &lt;code&gt;public_path&lt;/code&gt; 를 사용할 수도 있습니다 함수를 하여 공개 디렉토리 내의 지정된 파일에 대한 완전한 경로를 생성 .</target>
        </trans-unit>
        <trans-unit id="5638cb54cfeb095826943a2c955f08256996f444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pull&lt;/code&gt; method removes and returns an item from the collection by its key:</source>
          <target state="translated">&lt;code&gt;pull&lt;/code&gt; 방법 제거하고 돌아 핵심으로 컬렉션에서 항목 :</target>
        </trans-unit>
        <trans-unit id="b9e6a85969f8cc91570c3830a303f326b98476b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pull&lt;/code&gt; method will retrieve and delete an item from the session in a single statement:</source>
          <target state="translated">&lt;code&gt;pull&lt;/code&gt; 방법을 검색하고 하나의 문에서 세션에서 항목을 삭제합니다 :</target>
        </trans-unit>
        <trans-unit id="e3e32bb82187800ddb1b2160076712cf00f00630" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push&lt;/code&gt; method appends an item to the end of the collection:</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 방법은 컬렉션의 끝에 항목을 하나 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="0e0a43b237d95e9f2c8a822c35e5579795579b20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push&lt;/code&gt; method may be used to push a new value onto a session value that is an array. For example, if the &lt;code&gt;user.teams&lt;/code&gt; key contains an array of team names, you may push a new value onto the array like so:</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 방법은 배열 세션 값에 새로운 값을 푸시하기 위해 사용될 수있다. 예를 들어 &lt;code&gt;user.teams&lt;/code&gt; 키에 팀 이름 배열이 포함되어 있으면 다음 과 같이 배열에 새 값을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77174efee199e7ba957f7a135f62e019a90471d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put&lt;/code&gt; method may be used to store raw file contents on a disk. You may also pass a PHP &lt;code&gt;resource&lt;/code&gt; to the &lt;code&gt;put&lt;/code&gt; method, which will use Flysystem's underlying stream support. Remember, all file paths should be specified relative to the &quot;root&quot; location configured for the disk:</source>
          <target state="translated">&lt;code&gt;put&lt;/code&gt; 방법은 디스크에 원시 파일 내용을 저장하는 데 사용 할 수있다. Flysystem의 기본 스트림 지원을 사용 하는 &lt;code&gt;put&lt;/code&gt; 메서드에 PHP &lt;code&gt;resource&lt;/code&gt; 를 전달할 수도 있습니다 . 모든 파일 경로는 디스크에 대해 구성된 &quot;루트&quot;위치에 상대적으로 지정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="50e0f4943fc019bf02f13e473acebb0628b205dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put&lt;/code&gt; method may be used to store raw file contents on a disk. You may also pass a PHP &lt;code&gt;resource&lt;/code&gt; to the &lt;code&gt;put&lt;/code&gt; method, which will use Flysystem's underlying stream support. Using streams is greatly recommended when dealing with large files:</source>
          <target state="translated">&lt;code&gt;put&lt;/code&gt; 방법은 디스크에 원시 파일 내용을 저장하는 데 사용 할 수있다. Flysystem의 기본 스트림 지원을 사용 하는 &lt;code&gt;put&lt;/code&gt; 메소드에 PHP &lt;code&gt;resource&lt;/code&gt; 를 전달할 수도 있습니다 . 큰 파일을 다룰 때는 스트림을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="df38bafe89832bfd92c9e939ebe01c7dfcfd0df5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put&lt;/code&gt; method sets the given key and value in the collection:</source>
          <target state="translated">&lt;code&gt;put&lt;/code&gt; 방법은 컬렉션에서 지정된 키와 값을 설정한다 :</target>
        </trans-unit>
        <trans-unit id="c67397083187d9e7a084bea34cfbbed90b8654fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;putFile&lt;/code&gt; and &lt;code&gt;putFileAs&lt;/code&gt; methods also accept an argument to specify the &quot;visibility&quot; of the stored file. This is particularly useful if you are storing the file on a cloud disk such as S3 and would like the file to be publicly accessible:</source>
          <target state="translated">&lt;code&gt;putFile&lt;/code&gt; 및 &lt;code&gt;putFileAs&lt;/code&gt; 방법은 저장된 파일의 &quot;가시성&quot;을 지정하는 인수를 받아들입니다. 이는 파일을 S3와 같은 클라우드 디스크에 저장하고 파일을 공개적으로 액세스하려는 경우에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c6cbbb8c18196e38a81e57bdcd46934f98defbbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:failed&lt;/code&gt; command will list the job ID, connection, queue, and failure time. The job ID may be used to retry the failed job. For instance, to retry a failed job that has an ID of &lt;code&gt;5&lt;/code&gt;, issue the following command:</source>
          <target state="translated">&lt;code&gt;queue:failed&lt;/code&gt; 명령은 작업 ID, 연결, 큐, 실패 시간을 나열합니다. 작업 ID는 실패한 작업을 재 시도하는 데 사용될 수 있습니다. 예를 들어, ID가 &lt;code&gt;5&lt;/code&gt; 인 실패한 작업을 재 시도 하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec2508b058028fa437f89d767515acf85079a0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:failed&lt;/code&gt; command will list the job ID, connection, queue, failure time, and other information about the job. The job ID may be used to retry the failed job. For instance, to retry a failed job that has an ID of &lt;code&gt;5&lt;/code&gt;, issue the following command:</source>
          <target state="translated">&lt;code&gt;queue:failed&lt;/code&gt; 명령은 작업에 대한 작업 ID, 연결, 큐, 실패 시간 및 기타 정보를 나열합니다. 작업 ID를 사용하여 실패한 작업을 재 시도 할 수 있습니다. 예를 들어, ID가 &lt;code&gt;5&lt;/code&gt; 인 실패한 작업을 재 시도 하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2e1a45f34a77a9d5179f6e9a8219f22fc0300a4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:work&lt;/code&gt; Artisan command exposes a &lt;code&gt;--timeout&lt;/code&gt; option. The &lt;code&gt;--timeout&lt;/code&gt; option specifies how long the Laravel queue master process will wait before killing off a child queue worker that is processing a job. Sometimes a child queue process can become &quot;frozen&quot; for various reasons, such as an external HTTP call that is not responding. The &lt;code&gt;--timeout&lt;/code&gt; option removes frozen processes that have exceeded that specified time limit:</source>
          <target state="translated">&lt;code&gt;queue:work&lt;/code&gt; 장인 명령은 노출 &lt;code&gt;--timeout&lt;/code&gt; 옵션을 선택합니다. &lt;code&gt;--timeout&lt;/code&gt; 옵션의 지정이 얼마나 오래 Laravel 큐 마스터 프로세스는 작업을 처리하는 아이 큐 노동자 죽이는 전에 기다립니다. 때때로 응답하지 않는 외부 HTTP 호출과 같은 여러 가지 이유로 자식 큐 프로세스가 &quot;동결&quot;될 수 있습니다. &lt;code&gt;--timeout&lt;/code&gt; 옵션은 지정된 시간 제한이 있음을 초과 한 냉동 프로세스를 제거합니다 :</target>
        </trans-unit>
        <trans-unit id="9d58d58091e265084f026c6466690bb0d17ef2ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue:work&lt;/code&gt; Artisan command exposes a &lt;code&gt;--timeout&lt;/code&gt; option. The &lt;code&gt;--timeout&lt;/code&gt; option specifies how long the Laravel queue master process will wait before killing off a child queue worker that is processing a job. Sometimes a child queue process can become &quot;frozen&quot; for various reasons. The &lt;code&gt;--timeout&lt;/code&gt; option removes frozen processes that have exceeded that specified time limit:</source>
          <target state="translated">&lt;code&gt;queue:work&lt;/code&gt; 장인 명령은 노출 &lt;code&gt;--timeout&lt;/code&gt; 옵션을 선택합니다. &lt;code&gt;--timeout&lt;/code&gt; 옵션의 지정이 얼마나 오래 Laravel 큐 마스터 프로세스는 작업을 처리하는 아이 큐 노동자 죽이는 전에 기다립니다. 때때로 자식 큐 프로세스는 다양한 이유로 &quot;고정&quot;될 수 있습니다. &lt;code&gt;--timeout&lt;/code&gt; 옵션은 지정된 시간 제한이 있음을 초과 한 냉동 프로세스를 제거합니다 :</target>
        </trans-unit>
        <trans-unit id="a1c3ea6d15ff16e346a2fac41ed2c51f93c40dbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;random&lt;/code&gt; method returns a random item from the collection:</source>
          <target state="translated">&lt;code&gt;random&lt;/code&gt; 방법은 컬렉션에서 임의의 항목을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="9cd982fec002d3056f6a0c69b646473d6af1808d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; method was changed from &lt;code&gt;protected&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt; visibility. In addition, it &lt;a href=&quot;https://github.com/laravel/framework/pull/25143&quot;&gt;was added to the &lt;code&gt;Illuminate\Contracts\Auth\Access\Gate&lt;/code&gt; contract&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; 방법이 변경되었습니다 &lt;code&gt;protected&lt;/code&gt; 에 &lt;code&gt;public&lt;/code&gt; 가시성. 또한,이 &lt;a href=&quot;https://github.com/laravel/framework/pull/25143&quot;&gt;에 추가 &lt;code&gt;Illuminate\Contracts\Auth\Access\Gate&lt;/code&gt; 계약&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="332ba93b670116207dc56f9ef2e1bdc5428cb313" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method should return the string version of the session data associated with the given &lt;code&gt;$sessionId&lt;/code&gt;. There is no need to do any serialization or other encoding when retrieving or storing session data in your driver, as Laravel will perform the serialization for you.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 방법은 주어진와 관련된 세션 데이터의 문자열 버전을 반환해야합니다 &lt;code&gt;$sessionId&lt;/code&gt; . Laravel이 직렬화를 수행하므로 드라이버에서 세션 데이터를 검색하거나 저장할 때 직렬화 또는 기타 인코딩을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="766833b27d81d2cd9969dc840d5eac3d7eff1885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readStream&lt;/code&gt; and &lt;code&gt;writeStream&lt;/code&gt; methods &lt;a href=&quot;https://github.com/laravel/framework/pull/23755&quot;&gt;have been added to the &lt;code&gt;Illuminate\Contracts\Filesystem\Filesystem&lt;/code&gt; contract&lt;/a&gt;. If you are implementing this interface, you should add these methods to your implementation.</source>
          <target state="translated">&lt;code&gt;readStream&lt;/code&gt; 및 &lt;code&gt;writeStream&lt;/code&gt; 방법은 &lt;a href=&quot;https://github.com/laravel/framework/pull/23755&quot;&gt;받는 사람이 추가되었습니다 &lt;code&gt;Illuminate\Contracts\Filesystem\Filesystem&lt;/code&gt; 계약&lt;/a&gt; . 이 인터페이스를 구현하는 경우 이러한 메소드를 구현에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="39d2a244ff473ceefb253149e4abb1760c0967e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;recurring&lt;/code&gt; method may be used to determine if the user is currently subscribed and is no longer within their trial period:</source>
          <target state="translated">&lt;code&gt;recurring&lt;/code&gt; 사용자가 현재 가입하지 않고 자신의 시험 기간 내에 더 이상 경우 방법을 결정할 수있다 :</target>
        </trans-unit>
        <trans-unit id="ff481d1db22d8ecc19ebbb8cc3897a353368ed56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect&lt;/code&gt; function returns a &lt;a href=&quot;responses#redirects&quot;&gt;redirect HTTP response&lt;/a&gt;, or returns the redirector instance if called with no arguments:</source>
          <target state="translated">&lt;code&gt;redirect&lt;/code&gt; 함수는 반환 &lt;a href=&quot;responses#redirects&quot;&gt;리디렉션 HTTP 응답&lt;/a&gt; , 또는 반환 인수없이 호출하면 리디렉터 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="d096535c97cbbc3cd169d88c8635b4628309d049" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect&lt;/code&gt; method takes care of sending the user to the OAuth provider, while the &lt;code&gt;user&lt;/code&gt; method will read the incoming request and retrieve the user's information from the provider.</source>
          <target state="translated">&lt;code&gt;redirect&lt;/code&gt; 그동안 방법은 OAuth를 공급자로 사용자를 전송을 담당 &lt;code&gt;user&lt;/code&gt; 방법은 들어오는 요청을 읽고 공급자에서 사용자의 정보를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="98d31fff5b64d4c90b888b1bce3a0b86f1434d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectTo&lt;/code&gt; method will take precedence over the &lt;code&gt;redirectTo&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;redirectTo&lt;/code&gt; 의 방법은보다 우선합니다 &lt;code&gt;redirectTo&lt;/code&gt; 의 속성.</target>
        </trans-unit>
        <trans-unit id="d294f19d2ca696ebac27054a9f4091af7d7103d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce&lt;/code&gt; method reduces the collection to a single value, passing the result of each iteration into the subsequent iteration:</source>
          <target state="translated">은 &lt;code&gt;reduce&lt;/code&gt; 방법은 후속 반복에 각각의 반복의 결과를 전달하는 단일 값 집합을 감소 :</target>
        </trans-unit>
        <trans-unit id="25397cfd76e9ddda01a424ec3f52534f1c2e3cd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh&lt;/code&gt; method will re-hydrate the existing model using fresh data from the database. In addition, all of its loaded relationships will be refreshed as well:</source>
          <target state="translated">&lt;code&gt;refresh&lt;/code&gt; 방법은 다시 수화물 것이다 기존 모델을 데이터베이스에서 새 데이터를 사용하여. 또한로드 된 모든 관계도 새로 고쳐집니다.</target>
        </trans-unit>
        <trans-unit id="7e74d06a1a3b9d18388f76259e43316fcedfa665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;register&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="d02bdc513f7d6233ea2183e9e912f421635f8d84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reject&lt;/code&gt; method filters the collection using the given callback. The callback should return &lt;code&gt;true&lt;/code&gt; if the item should be removed from the resulting collection:</source>
          <target state="translated">은 &lt;code&gt;reject&lt;/code&gt; 방법은 주어진 콜백을 사용하여 수집을 필터링한다. 결과 컬렉션에서 항목을 제거해야하는 경우 콜백은 &lt;code&gt;true&lt;/code&gt; 를 반환 해야합니다.</target>
        </trans-unit>
        <trans-unit id="f2cc9feabd7aa8ed9470785df21c0856d6dd4c91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remember&lt;/code&gt; method returns a new lazy collection that will remember any values that have already been enumerated and will not retrieve them again when the collection is enumerated again:</source>
          <target state="translated">는 &lt;code&gt;remember&lt;/code&gt; 메소드가 리턴 이미 열거되어 있고 컬렉션 다시 열거 될 때 다시 검색하지 않습니다 모든 값을 기억하는 새로운 게으른 모음 :</target>
        </trans-unit>
        <trans-unit id="426d6b97b5e856ea50b18bd0d19faccbcdfce7f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method is responsible for converting a given exception into an HTTP response that should be sent back to the browser. By default, the exception is passed to the base class which generates a response for you. However, you are free to check the exception type or return your own custom response:</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 방법은 브라우저로 다시 전송해야 HTTP 응답으로 주어진 예외를 변환 할 책임이 있습니다. 기본적으로 예외는 응답을 생성하는 기본 클래스로 전달됩니다. 그러나 예외 유형을 확인하거나 사용자 정의 응답을 자유롭게 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbb5d1bc04d188b2f061b5c2d517e6075c43eced" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reorder&lt;/code&gt; method allows you to remove all the existing orders and optionally apply a new order. For example, you can remove all the existing orders:</source>
          <target state="translated">&lt;code&gt;reorder&lt;/code&gt; 방법을 사용하면 기존의 모든 명령을 제거하고 선택적으로 새로운 질서를 적용 할 수 있습니다. 예를 들어 기존 주문을 모두 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18bb012ccb9eab891bfbc2f6d15b8d3b50e7a085" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace&lt;/code&gt; method behaves similarly to &lt;code&gt;merge&lt;/code&gt;; however, in addition to overwriting matching items with string keys, the &lt;code&gt;replace&lt;/code&gt; method will also overwrite items in the collection that have matching numeric keys:</source>
          <target state="translated">는 &lt;code&gt;replace&lt;/code&gt; 유사 방법 동작합니다을 &lt;code&gt;merge&lt;/code&gt; ; 그러나 일치하는 항목을 문자열 키로 덮어 쓰는 것 외에도 &lt;code&gt;replace&lt;/code&gt; 메서드는 일치하는 숫자 키가있는 컬렉션의 항목도 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="057df33d4f6cb8e5f58a8c5dfe7656271d620532" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace&lt;/code&gt; method replaces a given string within the string:</source>
          <target state="translated">&lt;code&gt;replace&lt;/code&gt; 방법은 문자열 내의 특정 문자열을 대체합니다</target>
        </trans-unit>
        <trans-unit id="e75732f67aaf458c7f9593c69692c08338457c14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceArray&lt;/code&gt; method replaces a given value in the string sequentially using an array:</source>
          <target state="translated">&lt;code&gt;replaceArray&lt;/code&gt; 의 방법을 순차적으로 배열하여 문자열에 소정의 값을 대체</target>
        </trans-unit>
        <trans-unit id="c680ddfea8509a98d2478bb7bfb661100fc8a409" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceFirst&lt;/code&gt; method replaces the first occurrence of a given value in a string:</source>
          <target state="translated">&lt;code&gt;replaceFirst&lt;/code&gt; 라고 방법은 문자열에 소정 값의 첫 번째 발생을 대체</target>
        </trans-unit>
        <trans-unit id="c1fdeedca569f40fc29e860eb44088b072b1546d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceLast&lt;/code&gt; method replaces the last occurrence of a given value in a string:</source>
          <target state="translated">&lt;code&gt;replaceLast&lt;/code&gt; 의 방법은 문자열에서 주어진 값의 마지막 발생을 대체합니다</target>
        </trans-unit>
        <trans-unit id="559451b4718abde5ff2c51157ce325d071ed8196" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceMatches&lt;/code&gt; method also accepts a Closure that will be invoked with each portion of the string matching the given party, allowing you to perform the replacement logic within the Closure and return the replaced value:</source>
          <target state="translated">&lt;code&gt;replaceMatches&lt;/code&gt; 의 방법은 당신이 폐쇄 내에서 대체 로직을 수행하고 대체 값을 반환 할 수 있도록 주어진 파티를 일치하는 문자열의 각 부분으로 호출됩니다 폐쇄를 허용합니다</target>
        </trans-unit>
        <trans-unit id="33c057b220f9ce76945080e89809f111013658f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceMatches&lt;/code&gt; method replaces all portions of a string matching a given pattern with the given replacement string:</source>
          <target state="translated">&lt;code&gt;replaceMatches&lt;/code&gt; 에 있어서, 상기 소정의 치환 캐릭터 소정 패턴과 일치하는 문자열의 모든 부분을 대체</target>
        </trans-unit>
        <trans-unit id="e27a91a8988770ca8af6e7bab7cf56bf3e429432" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;report&lt;/code&gt; Helper</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; 도우미</target>
        </trans-unit>
        <trans-unit id="70712e89fb6a675a051ba6be6838c7e31c9a010f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;report&lt;/code&gt; function will report an exception using your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;'s &lt;code&gt;report&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; 기능은 사용하여 예외를보고 &lt;a href=&quot;errors#the-exception-handler&quot;&gt;예외 핸들러&lt;/a&gt; 의 &lt;code&gt;report&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="09eb6447216b79fae2f38b845dd4f57cb3acd864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;report&lt;/code&gt; function will report an exception using your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; 기능은 사용하여 예외를보고 &lt;a href=&quot;errors#the-exception-handler&quot;&gt;예외 처리기를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="53f9cbef5b956c918c26aa6cdb425e157fcee3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; function returns the current &lt;a href=&quot;requests&quot;&gt;request&lt;/a&gt; instance or obtains an input item:</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 기능은 현재의 반환 &lt;a href=&quot;requests&quot;&gt;요청&lt;/a&gt; 인스턴스 또는 입력 항목을 획득한다 :</target>
        </trans-unit>
        <trans-unit id="ec1a130c0cf5b9a680f3f1ea0f7ae36b7eb80a82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rescue&lt;/code&gt; function executes the given Closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;'s &lt;code&gt;report&lt;/code&gt; method; however, the request will continue processing:</source>
          <target state="translated">&lt;code&gt;rescue&lt;/code&gt; 함수는 주어진 폐쇄를 실행하고, 그 실행시에 발생하는 예외를 잡는다. 포착 된 모든 예외는 &lt;a href=&quot;errors#the-exception-handler&quot;&gt;예외 처리기&lt;/a&gt; 의 &lt;code&gt;report&lt;/code&gt; 메소드 로 전송됩니다 . 그러나 요청은 계속 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f98706f1f0800c7eaa76a00a0da22c8d6a427485" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rescue&lt;/code&gt; function executes the given Closure and catches any exceptions that occur during its execution. All exceptions that are caught will be sent to your &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;; however, the request will continue processing:</source>
          <target state="translated">&lt;code&gt;rescue&lt;/code&gt; 함수는 주어진 폐쇄를 실행하고, 그 실행시에 발생하는 예외를 잡는다. 포착 된 모든 예외는 &lt;a href=&quot;errors#the-exception-handler&quot;&gt;예외 처리기&lt;/a&gt; 로 전송됩니다 . 그러나 요청은 계속 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0ca09b24d9815d4bc93c96ff4b8effe5646fddca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset&lt;/code&gt; method returns a &quot;status&quot; slug. This status may be translated using Laravel's &lt;a href=&quot;localization&quot;&gt;localization&lt;/a&gt; helpers in order to display a user-friendly message to the user regarding the status of their request. The translation of the password reset status is determined by your application's &lt;code&gt;resources/lang/{lang}/passwords.php&lt;/code&gt; language file. An entry for each possible value of the status slug is located within the &lt;code&gt;passwords&lt;/code&gt; language file.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 방법은 &quot;상태&quot;슬러그를 반환합니다. 이 상태는 요청 상태에 대해 사용자에게 친숙한 메시지를 표시하기 위해 Laravel의 &lt;a href=&quot;localization&quot;&gt;현지화&lt;/a&gt; 도우미를 사용하여 번역 할 수 있습니다 . 비밀번호 재설정 상태의 번역은 애플리케이션의 &lt;code&gt;resources/lang/{lang}/passwords.php&lt;/code&gt; 언어 파일에 의해 결정됩니다 . 상태 슬러그의 가능한 각 값에 대한 항목은 &lt;code&gt;passwords&lt;/code&gt; 언어 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30d85687966c2da6ebc3f3c0bfe976963f1e212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve&lt;/code&gt; function resolves a given class or interface name to its instance using the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; 기능은 사용하여 인스턴스에 지정된 클래스 또는 인터페이스 이름 해결 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="21038d2fe650fc3254fb2b165af30c5d8d511c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resource_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;resources&lt;/code&gt; directory. You may also use the &lt;code&gt;resource_path&lt;/code&gt; function to generate a fully qualified path to a given file within the resources directory:</source>
          <target state="translated">&lt;code&gt;resource_path&lt;/code&gt; 을의 기능은 완전한 경로를 반환 &lt;code&gt;resources&lt;/code&gt; 디렉토리를. &lt;code&gt;resource_path&lt;/code&gt; 함수를 사용 하여 resources 디렉토리 내에서 지정된 파일에 대한 완전한 경로를 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96f8355e2a94c709ed5a44a4284348ae7e014016" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;resources&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="45ac213757d19e21e37c5b9dece41e0db1335a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; directory contains your views as well as your raw, un-compiled assets such as CSS or JavaScript. This directory also houses all of your language files.</source>
          <target state="translated">&lt;code&gt;resources&lt;/code&gt; 디렉토리는 CSS 나 자바 스크립트와 같은 원시, 컴파일되지 않은 자산뿐만 아니라 귀하의 의견이 포함되어 있습니다. 이 디렉토리에는 모든 언어 파일도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb863b0abd74e2ee244bbefa5b2ec3ac1cd2bd95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; directory contains your views as well as your raw, un-compiled assets such as LESS, SASS, or JavaScript. This directory also houses all of your language files.</source>
          <target state="translated">&lt;code&gt;resources&lt;/code&gt; 디렉토리는 귀하의 의견뿐만 아니라 LESS, SASS, 또는 자바 스크립트와 같은 원시, 컴파일되지 않은 자산을 포함하고 있습니다. 이 디렉토리에는 모든 언어 파일이 들어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4bae6e8626d8ef5368db6a9b8fcc00dc88133a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; function creates a &lt;a href=&quot;responses&quot;&gt;response&lt;/a&gt; instance or obtains an instance of the response factory:</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; 함수 생성 &lt;a href=&quot;responses&quot;&gt;응답&lt;/a&gt; 인스턴스 또는 응답 공장의 인스턴스를 얻는다 :</target>
        </trans-unit>
        <trans-unit id="822eca7569c489409918e7898afd53ed149a72b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; helper may be used to generate other types of response instances. When the &lt;code&gt;response&lt;/code&gt; helper is called without arguments, an implementation of the &lt;code&gt;Illuminate\Contracts\Routing\ResponseFactory&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt; is returned. This contract provides several helpful methods for generating responses.</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; 도우미는 응답 인스턴스의 다른 유형을 생성하기 위해 사용될 수있다. 때 &lt;code&gt;response&lt;/code&gt; 도우미가 인수없이 호출,의 구현 &lt;code&gt;Illuminate\Contracts\Routing\ResponseFactory&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;계약은&lt;/a&gt; 반환됩니다. 이 계약은 응답을 생성하는 데 유용한 몇 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7e0b911393c568c82f69436c6dcd9f8984098c81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveByCredentials&lt;/code&gt; method receives the array of credentials passed to the &lt;code&gt;Auth::attempt&lt;/code&gt; method when attempting to sign into an application. The method should then &quot;query&quot; the underlying persistent storage for the user matching those credentials. Typically, this method will run a query with a &quot;where&quot; condition on &lt;code&gt;$credentials['username']&lt;/code&gt;. The method should then return an implementation of &lt;code&gt;Authenticatable&lt;/code&gt;. &lt;strong&gt;This method should not attempt to do any password validation or authentication.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;retrieveByCredentials&lt;/code&gt; 의 방법은 전달 자격 증명의 배열 수신 &lt;code&gt;Auth::attempt&lt;/code&gt; 하는 응용 프로그램에 로그인 할 때 방법을. 그런 다음이 방법은 해당 자격 증명과 일치하는 사용자의 기본 영구 저장소를 &quot;쿼리&quot;해야합니다. 일반적으로이 메소드는 &lt;code&gt;$credentials['username']&lt;/code&gt; 에서 &quot;where&quot;조건으로 쿼리를 실행합니다 . 그런 다음이 메소드는 &lt;code&gt;Authenticatable&lt;/code&gt; 구현을 리턴해야합니다 . &lt;strong&gt;이 방법은 비밀번호 확인 또는 인증을 시도하지 않아야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb62aa0ae24e6e230091aff94755cfb86a48ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveById&lt;/code&gt; function typically receives a key representing the user, such as an auto-incrementing ID from a MySQL database. The &lt;code&gt;Authenticatable&lt;/code&gt; implementation matching the ID should be retrieved and returned by the method.</source>
          <target state="translated">&lt;code&gt;retrieveById&lt;/code&gt; 의 기능은 일반적으로 MySQL 데이터베이스로부터 자동 증가 ID로 사용자를 나타내는 키를 수신한다. &lt;code&gt;Authenticatable&lt;/code&gt; ID와 일치하는 구현은 검색되고 상기 방법에 의해 반환한다.</target>
        </trans-unit>
        <trans-unit id="bfc1f6d69d561d6b8fdda3b989d219e87beb610e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieveByToken&lt;/code&gt; function retrieves a user by their unique &lt;code&gt;$identifier&lt;/code&gt; and &quot;remember me&quot; &lt;code&gt;$token&lt;/code&gt;, stored in a field &lt;code&gt;remember_token&lt;/code&gt;. As with the previous method, the &lt;code&gt;Authenticatable&lt;/code&gt; implementation should be returned.</source>
          <target state="translated">&lt;code&gt;retrieveByToken&lt;/code&gt; 의 기능은 고유하여 사용자를 검색 &lt;code&gt;$identifier&lt;/code&gt; 와 &quot;나를 기억&quot; &lt;code&gt;$token&lt;/code&gt; 필드에 저장, &lt;code&gt;remember_token&lt;/code&gt; . 이전 방법과 마찬가지로 &lt;code&gt;Authenticatable&lt;/code&gt; 구현이 반환되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c3daa20a2b081f7e02537bc3523cb6c0da609f9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieved&lt;/code&gt; event will fire when an existing model is retrieved from the database. When a new model is saved for the first time, the &lt;code&gt;creating&lt;/code&gt; and &lt;code&gt;created&lt;/code&gt; events will fire. If a model already existed in the database and the &lt;code&gt;save&lt;/code&gt; method is called, the &lt;code&gt;updating&lt;/code&gt; / &lt;code&gt;updated&lt;/code&gt; events will fire. However, in both cases, the &lt;code&gt;saving&lt;/code&gt; / &lt;code&gt;saved&lt;/code&gt; events will fire.</source>
          <target state="translated">&lt;code&gt;retrieved&lt;/code&gt; 기존 모델을 데이터베이스에서 검색 할 때 이벤트가 발생합니다. 새 모델을 처음 저장하면 &lt;code&gt;creating&lt;/code&gt; 및 &lt;code&gt;created&lt;/code&gt; 이벤트가 시작됩니다. 데이터베이스에 모델이 이미 존재하고 &lt;code&gt;save&lt;/code&gt; 메소드가 호출되면 &lt;code&gt;updating&lt;/code&gt; / &lt;code&gt;updated&lt;/code&gt; 이벤트가 시작됩니다. 그러나 두 경우 모두 &lt;code&gt;saving&lt;/code&gt; / &lt;code&gt;saved&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1b6b7bedc9e0d2d9819981531fc957173b764717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retrieved&lt;/code&gt; event will fire when an existing model is retrieved from the database. When a new model is saved for the first time, the &lt;code&gt;creating&lt;/code&gt; and &lt;code&gt;created&lt;/code&gt; events will fire. The &lt;code&gt;updating&lt;/code&gt; / &lt;code&gt;updated&lt;/code&gt; events will fire when an existing model is modified and the &lt;code&gt;save&lt;/code&gt; method is called. The &lt;code&gt;saving&lt;/code&gt; / &lt;code&gt;saved&lt;/code&gt; events will fire when a model is created or updated.</source>
          <target state="translated">&lt;code&gt;retrieved&lt;/code&gt; 기존 모델을 데이터베이스에서 검색 할 때 이벤트가 발생합니다. 새 모델이 처음으로 저장되면 &lt;code&gt;creating&lt;/code&gt; 및 &lt;code&gt;created&lt;/code&gt; 이벤트가 실행됩니다. &lt;code&gt;updating&lt;/code&gt; / &lt;code&gt;updated&lt;/code&gt; 기존 모델을 수정하고 때 이벤트가 발생합니다 &lt;code&gt;save&lt;/code&gt; 방법이라고합니다. &lt;code&gt;saving&lt;/code&gt; / &lt;code&gt;saved&lt;/code&gt; 모델을 만들거나 업데이트 할 때 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c7bb541b89ab7ed6ba7ba56ff2acb7e3ef559dec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retry&lt;/code&gt; function attempts to execute the given callback until the given maximum attempt threshold is met. If the callback does not throw an exception, its return value will be returned. If the callback throws an exception, it will automatically be retried. If the maximum attempt count is exceeded, the exception will be thrown:</source>
          <target state="translated">&lt;code&gt;retry&lt;/code&gt; 주어진 최대 시도 임계 값이 충족 될 때까지 기능 시도는 주어진 콜백을 실행합니다. 콜백에서 예외가 발생하지 않으면 반환 값이 반환됩니다. 콜백에서 예외가 발생하면 자동으로 재 시도됩니다. 최대 시도 횟수를 초과하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="99f1181daf16c428b9bc687c10a7c002d785f2a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retryAfter&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;retryAfter&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="7c53d92db0a6a97cabf94de3c454e6b59b0c736d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retry_after&lt;/code&gt; configuration option and the &lt;code&gt;--timeout&lt;/code&gt; CLI option are different, but work together to ensure that jobs are not lost and that jobs are only successfully processed once.</source>
          <target state="translated">&lt;code&gt;retry_after&lt;/code&gt; 의 구성 옵션과 &lt;code&gt;--timeout&lt;/code&gt; CLI 옵션은 다르지만, 함께 작업은 작업이 손실되지 않습니다 그 작업 만 성공적으로 일단 처리하고 있는지 확인할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff767ec54e02a22caaefd9e0152b2e403557cc6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; method reverses the order of the collection's items, preserving the original keys:</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; 방법은 원래의 키를 보존, 컬렉션의 항목의 순서를 반대로 :</target>
        </trans-unit>
        <trans-unit id="9daf495b728d760b524afa2a16c4d17df61c2e40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rightClick&lt;/code&gt; method may be used to simulate the right &quot;click&quot; of a mouse:</source>
          <target state="translated">&lt;code&gt;rightClick&lt;/code&gt; 방법은 마우스의 &quot;클릭&quot;권리를 시뮬레이션하는 데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="183971ae544b21e27df9fe2d1ea566a8a996ca73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; function generates a URL for the given named route:</source>
          <target state="translated">&lt;code&gt;route&lt;/code&gt; 함수는 주어진라는 경로에 대한 URL을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="912c87626047bc9271df64e1d24883f96610c9fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; helper may also be used to generate URLs for routes with multiple parameters:</source>
          <target state="translated">&lt;code&gt;route&lt;/code&gt; 도우미는 여러 매개 변수를 사용하여 경로의 URL을 생성하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ffcb3135a54d5f844c76e3efc92dcafaccc89635" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; helper may be used to generate URLs to named routes. Named routes allow you to generate URLs without being coupled to the actual URL defined on the route. Therefore, if the route's URL changes, no changes need to be made to your &lt;code&gt;route&lt;/code&gt; function calls. For example, imagine your application contains a route defined like the following:</source>
          <target state="translated">&lt;code&gt;route&lt;/code&gt; 도우미의 이름은 루트에 URL을 생성하는 데 사용할 수 있습니다. 명명 된 경로를 사용하면 경로에 정의 된 실제 URL에 연결하지 않고도 URL을 생성 할 수 있습니다. 따라서 경로의 URL이 변경되면 &lt;code&gt;route&lt;/code&gt; 함수 호출 을 변경할 필요가 없습니다 . 예를 들어, 응용 프로그램에 다음과 같이 정의 된 경로가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="01cf5d15f8a2ab2b2b3a5f8902b6ce17d374bd5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routes&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;routes&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="a76a2e6519582fb20cf0b6b5e2e93f7de38f3d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routes&lt;/code&gt; directory contains all of the route definitions for your application. By default, several route files are included with Laravel: &lt;code&gt;web.php&lt;/code&gt;, &lt;code&gt;api.php&lt;/code&gt;, &lt;code&gt;console.php&lt;/code&gt; and &lt;code&gt;channels.php&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;routes&lt;/code&gt; 디렉토리는 응용 프로그램의 경로 정의를 제공합니다. 기본적으로 Laravel에는 &lt;code&gt;web.php&lt;/code&gt; , &lt;code&gt;api.php&lt;/code&gt; , &lt;code&gt;console.php&lt;/code&gt; 및 &lt;code&gt;channels.php&lt;/code&gt; 와 같은 여러 경로 파일이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff62b5c78b0ef78b375b1aea7fb0933fde25a2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rtrim&lt;/code&gt; method right trims the given string:</source>
          <target state="translated">&lt;code&gt;rtrim&lt;/code&gt; 방법은 바로 주어진 문자열 트림 :</target>
        </trans-unit>
        <trans-unit id="4665e9f2b8a562756dc31a380b6a14f9110ccc43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;runInBackground&lt;/code&gt; method may only be used when scheduling tasks via the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;runInBackground&lt;/code&gt; 의 비아 작업 스케줄링 방법 때에 만 사용될 수있는 &lt;code&gt;command&lt;/code&gt; 및 &lt;code&gt;exec&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="49214635ee516b94bcd2ee8bfcd1a99187aedac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass&lt;/code&gt; method allows you to compile &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; into CSS. You may use the method like so:</source>
          <target state="translated">&lt;code&gt;sass&lt;/code&gt; 방법을 사용하면 컴파일 할 수 &lt;a href=&quot;http://sass-lang.com/&quot;&gt;말대꾸를&lt;/a&gt; CSS로. 다음과 같은 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="958432ece4294e2440ee68eb8a1fea85782c28a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass&lt;/code&gt; method allows you to compile &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; into CSS. You may use the method like so:</source>
          <target state="translated">&lt;code&gt;sass&lt;/code&gt; 방법을 사용하면 컴파일 할 수 &lt;a href=&quot;https://sass-lang.com/&quot;&gt;말대꾸를&lt;/a&gt; CSS로. 다음과 같은 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7680e11e7f8a427076f44ee6f1b120a599e9a430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="b9dd93c032aa51d1d54313ac2cc76c91c9c49c1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;saveMany&lt;/code&gt; methods will not add the new models to any in-memory relationships that are already loaded onto the parent model. If you plan on accessing the relationship after using the &lt;code&gt;save&lt;/code&gt; or &lt;code&gt;saveMany&lt;/code&gt; methods, you may wish to use the &lt;code&gt;refresh&lt;/code&gt; method to reload the model and its relationships:</source>
          <target state="translated">는 &lt;code&gt;save&lt;/code&gt; 및 &lt;code&gt;saveMany&lt;/code&gt; 의 방법은 이미 상위 모델에로드되는 모든 메모리의 관계에 새로운 모델을 추가하지 않습니다. &lt;code&gt;save&lt;/code&gt; 또는 &lt;code&gt;saveMany&lt;/code&gt; 메소드를 사용한 후 관계에 액세스 하려는 경우 &lt;code&gt;refresh&lt;/code&gt; 메소드를 사용 하여 모델과 해당 관계를 다시로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3843c8dc1aa6110ffab27d11291447ee08061b70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save&lt;/code&gt; method may also be used to update models that already exist in the database. To update a model, you should retrieve it, set any attributes you wish to update, and then call the &lt;code&gt;save&lt;/code&gt; method. Again, the &lt;code&gt;updated_at&lt;/code&gt; timestamp will automatically be updated, so there is no need to manually set its value:</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 방법은 또한 데이터베이스에 이미 업데이트 모델에 사용할 수있다. 모델을 업데이트하려면 모델을 검색하고 업데이트 할 속성을 설정 한 다음 &lt;code&gt;save&lt;/code&gt; 메소드 를 호출해야합니다 . 또한 &lt;code&gt;updated_at&lt;/code&gt; 타임 스탬프가 자동으로 업데이트되므로 수동으로 값을 설정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4cf48fae4fa404bbae55e67ac1ae8aa09ef4a307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; middleware may be assigned to a route to verify that the incoming request's access token has &lt;em&gt;at least one&lt;/em&gt; of the listed scopes:</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; 미들웨어는 들어오는 요청의 액세스 토큰이 있는지 확인 경로에 할당 될 수 &lt;em&gt;적어도 하나의&lt;/em&gt; 나열된 범위의 :</target>
        </trans-unit>
        <trans-unit id="2a83ca7d5c0fbdd19b98f36a027f34a4cc424277" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scopeIds&lt;/code&gt; method will return an array of all defined IDs / names:</source>
          <target state="translated">&lt;code&gt;scopeIds&lt;/code&gt; 의 방법은 정의 된 모든 아이디 / 이름의 배열을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="e6b5ae4f8e2e673ec857f9525926ce87c25c53d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scopes&lt;/code&gt; method will return an array of all defined scopes as instances of &lt;code&gt;Laravel\Passport\Scope&lt;/code&gt;:</source>
          <target state="translated">는 &lt;code&gt;scopes&lt;/code&gt; 방법의 인스턴스로 정의 된 모든 범위의 배열을 돌려줍니다 &lt;code&gt;Laravel\Passport\Scope&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f6a310bc0ef4ae7e793e54310e3eba6b8f4db1ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scopes&lt;/code&gt; middleware may be assigned to a route to verify that the incoming request's access token has &lt;em&gt;all&lt;/em&gt; of the listed scopes:</source>
          <target state="translated">&lt;code&gt;scopes&lt;/code&gt; 미들웨어 경로에 할당 될 수는 들어오는 요청의 액세스 토큰이 있는지 확인하기 위해 &lt;em&gt;모든&lt;/em&gt; 나열된 범위의를 :</target>
        </trans-unit>
        <trans-unit id="3ccf59b0f8ce36c3cc37d146ade8d673e841a4a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scopesFor&lt;/code&gt; method will return an array of &lt;code&gt;Laravel\Passport\Scope&lt;/code&gt; instances matching the given IDs / names:</source>
          <target state="translated">&lt;code&gt;scopesFor&lt;/code&gt; 에 있어서의 배열 반환 &lt;code&gt;Laravel\Passport\Scope&lt;/code&gt; 지정된 아이디 / 이름과 일치하는 경우를 :</target>
        </trans-unit>
        <trans-unit id="1dda2e9b84941817b7c9d6eb03c8291a5993ce51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search&lt;/code&gt; method searches the collection for the given value and returns its key if found. If the item is not found, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; 방법 검색은 지정된 값과 반환의 키를위한 컬렉션을 발견합니다. 항목을 찾을 수 없으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cee4763c03d0be57249a25d95042a9f0cd32561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchable&lt;/code&gt; method can be considered an &quot;upsert&quot; operation. In other words, if the model record is already in your index, it will be updated. If it does not exist in the search index, it will be added to the index.</source>
          <target state="translated">&lt;code&gt;searchable&lt;/code&gt; 방법은 &quot;upsert&quot;작업으로 간주 될 수있다. 즉, 모델 레코드가 이미 색인에 있으면 업데이트됩니다. 검색 색인에 없으면 색인에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="19c086c0c6f9dec2eeb042548fc0ca687b4c8cdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secret&lt;/code&gt; method is similar to &lt;code&gt;ask&lt;/code&gt;, but the user's input will not be visible to them as they type in the console. This method is useful when asking for sensitive information such as a password:</source>
          <target state="translated">&lt;code&gt;secret&lt;/code&gt; 방법과 비슷 &lt;code&gt;ask&lt;/code&gt; 하지만, 콘솔에 입력 할 때 사용자의 입력 그들에게 표시되지 않습니다. 이 방법은 비밀번호와 같은 민감한 정보를 요청할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a62a6cdd4c4ab71eac011662b003a43be7137b68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secure_asset&lt;/code&gt; function generates a URL for an asset using HTTPS:</source>
          <target state="translated">&lt;code&gt;secure_asset&lt;/code&gt; 기능은 HTTPS를 사용하여 자산에 대한 URL을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="82c6af967111503702995233eda67ec07b73dd02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secure_url&lt;/code&gt; function generates a fully qualified HTTPS URL to the given path:</source>
          <target state="translated">&lt;code&gt;secure_url&lt;/code&gt; 기능은 HTTPS URL 정규화가 지정된 경로에 생성 :</target>
        </trans-unit>
        <trans-unit id="b7f9e0ec9872c5b538987dd1c1e81cb68523dc1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method will always return an &lt;code&gt;array&lt;/code&gt; of results. Each result within the array will be a PHP &lt;code&gt;stdClass&lt;/code&gt; object, allowing you to access the values of the results:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 방법은 항상 반환 &lt;code&gt;array&lt;/code&gt; 결과를. 배열 내의 각 결과는 PHP &lt;code&gt;stdClass&lt;/code&gt; 객체가되어 결과 값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a008e28d7709a3cc8a59c19ba7c964b4c660e8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectRaw&lt;/code&gt; method can be used in place of &lt;code&gt;addSelect(DB::raw(...))&lt;/code&gt;. This method accepts an optional array of bindings as its second argument:</source>
          <target state="translated">&lt;code&gt;selectRaw&lt;/code&gt; 의 방법 대신 사용할 수 있습니다 &lt;code&gt;addSelect(DB::raw(...))&lt;/code&gt; . 이 메서드는 두 번째 인수로 선택적 바인딩 배열을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7e08a681285541ca35226dee6d48a29d9e47f09c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectRaw&lt;/code&gt; method can be used in place of &lt;code&gt;select(DB::raw(...))&lt;/code&gt;. This method accepts an optional array of bindings as its second argument:</source>
          <target state="translated">&lt;code&gt;selectRaw&lt;/code&gt; 의 방법 대신에 사용할 수있는 &lt;code&gt;select(DB::raw(...))&lt;/code&gt; . 이 메소드는 선택적 바인딩 배열을 두 번째 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b6637143e28d609eb67ac80f6a5ec650c3066e32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendNow&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;sendNow&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="392448412a4131d959d89a81f949e1a8a90888a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendResetLink&lt;/code&gt; method returns a &quot;status&quot; slug. This status may be translated using Laravel's &lt;a href=&quot;localization&quot;&gt;localization&lt;/a&gt; helpers in order to display a user-friendly message to the user regarding the status of their request. The translation of the password reset status is determined by your application's &lt;code&gt;resources/lang/{lang}/passwords.php&lt;/code&gt; language file. An entry for each possible value of the status slug is located within the &lt;code&gt;passwords&lt;/code&gt; language file.</source>
          <target state="translated">&lt;code&gt;sendResetLink&lt;/code&gt; 의 방법은 &quot;상태&quot;슬러그를 반환합니다. 이 상태는 요청 상태에 대해 사용자에게 친숙한 메시지를 표시하기 위해 Laravel의 &lt;a href=&quot;localization&quot;&gt;현지화&lt;/a&gt; 도우미를 사용하여 번역 할 수 있습니다 . 비밀번호 재설정 상태의 번역은 애플리케이션의 &lt;code&gt;resources/lang/{lang}/passwords.php&lt;/code&gt; 언어 파일에 의해 결정됩니다 . 상태 슬러그의 가능한 각 값에 대한 항목은 &lt;code&gt;passwords&lt;/code&gt; 언어 파일에 있습니다.</target>
        </trans-unit>
        <trans-unit id="450ab438f995408eacbc1059156f07a0aa129373" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serves&lt;/code&gt; Method</source>
          <target state="translated">가 &lt;code&gt;serves&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="4766d08b723aa2b830ed6800840aec6343bbe478" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serves&lt;/code&gt; method should return &lt;code&gt;true&lt;/code&gt; if your driver should handle the incoming request. Otherwise, the method should return &lt;code&gt;false&lt;/code&gt;. So, within this method you should attempt to determine if the given &lt;code&gt;$sitePath&lt;/code&gt; contains a project of the type you are trying to serve.</source>
          <target state="translated">&lt;code&gt;serves&lt;/code&gt; 방법은 반환해야 &lt;code&gt;true&lt;/code&gt; 드라이버가 들어오는 요청을 처리해야합니다. 그렇지 않으면 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴해야합니다 . 따라서이 방법 내에서 제공된 &lt;code&gt;$sitePath&lt;/code&gt; 에 제공하려는 유형의 프로젝트가 포함되어 있는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1b534c50023d2c67178ed16f560e0cacfe6668f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; function may be used to get or set &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt; values:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 기능을 얻거나 설정하기 위해 사용될 수있다 &lt;a href=&quot;session&quot;&gt;세션&lt;/a&gt; 값 :</target>
        </trans-unit>
        <trans-unit id="957a2b70386f9c78fcfcd6d7f2c57a0f8c8478d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shift&lt;/code&gt; method removes and returns the first item from the collection:</source>
          <target state="translated">&lt;code&gt;shift&lt;/code&gt; 방법 제거하고 반환 컬렉션에서 첫 번째 항목 :</target>
        </trans-unit>
        <trans-unit id="597dd7a6da22be1b12cd1ca3f894ead084019436" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shouldBeSearchable&lt;/code&gt; method is only applied when manipulating models through the &lt;code&gt;save&lt;/code&gt; method, queries, or relationships. Directly making models or collections searchable using the &lt;code&gt;searchable&lt;/code&gt; method will override the result of the &lt;code&gt;shouldBeSearchable&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;shouldBeSearchable&lt;/code&gt; 관통 모델을 조작 할 때 방법에만 적용되는 &lt;code&gt;save&lt;/code&gt; 방법, 쿼리, 또는 관계. &lt;code&gt;searchable&lt;/code&gt; 메서드를 사용하여 모델 또는 컬렉션을 직접 검색 가능 하게 &lt;code&gt;shouldBeSearchable&lt;/code&gt; 메서드 의 결과가 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="352fe67c8d237daee0b7bddf917994e2b371e73b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shuffle&lt;/code&gt; method randomly shuffles the items in the collection:</source>
          <target state="translated">&lt;code&gt;shuffle&lt;/code&gt; 방법은 무작위로 컬렉션의 항목을 섞는다 :</target>
        </trans-unit>
        <trans-unit id="08814e6f0b43dc81c7e120cfe3bc1f23b7081a17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;single&lt;/code&gt; and &lt;code&gt;daily&lt;/code&gt; channels have three optional configuration options: &lt;code&gt;bubble&lt;/code&gt;, &lt;code&gt;permission&lt;/code&gt;, and &lt;code&gt;locking&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;single&lt;/code&gt; 및 &lt;code&gt;daily&lt;/code&gt; : 채널은 세 개의 선택적 구성 옵션이 &lt;code&gt;bubble&lt;/code&gt; , &lt;code&gt;permission&lt;/code&gt; 및 &lt;code&gt;locking&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c91d996919a5633963bd24dca523e7339c79b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;singleton&lt;/code&gt; method binds a class or interface into the container that should only be resolved one time. Once a singleton binding is resolved, the same object instance will be returned on subsequent calls into the container:</source>
          <target state="translated">&lt;code&gt;singleton&lt;/code&gt; 방법은 한 번만 해결해야 용기에 클래스 또는 인터페이스를 결합한다. 싱글 톤 바인딩이 해결되면 컨테이너에 대한 후속 호출에서 동일한 객체 인스턴스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7efe04bd9fd977f5c96718d6f1dc7805a656b159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;singular&lt;/code&gt; method converts a string to its singular form. This function currently only supports the English language:</source>
          <target state="translated">&lt;code&gt;singular&lt;/code&gt; 방법은 단수 형태로 문자열을 변환합니다. 이 기능은 현재 영어 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c90b5cda44ef5cb18fa383a07deafcb33948ce93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method may be seen as the inverse of &lt;code&gt;when&lt;/code&gt;. If the &lt;code&gt;skip&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the scheduled task will not be executed:</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; 방법의 역으로 볼 수있다 . 는 IF &lt;code&gt;skip&lt;/code&gt; 방법은 반환 &lt;code&gt;true&lt;/code&gt; , 예약 된 작업이 실행되지 않습니다 : &lt;code&gt;when&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd6d7e7e3c702368223f7881ce6d642f3fe4024e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method returns a new collection, without the first given amount of items:</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; 방법은 항목의 첫 번째 주어진 양하지 않고, 새로운 컬렉션을 반환 :</target>
        </trans-unit>
        <trans-unit id="98d5dae3b3cc4d3fe53f2b56ea18df6629dd1481" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skipUntil&lt;/code&gt; method skips items until the given callback returns &lt;code&gt;true&lt;/code&gt; and then returns the remaining items in the collection:</source>
          <target state="translated">&lt;code&gt;skipUntil&lt;/code&gt; 의 방법은 콜백 수익을 제공 할 때까지 항목을 건너 뛰고 &lt;code&gt;true&lt;/code&gt; 다음 컬렉션의 나머지 항목을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="012d86610ba0d798bbe715d08191d59c546c8c77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skipWhile&lt;/code&gt; method skips items while the given callback returns &lt;code&gt;true&lt;/code&gt; and then returns the remaining items in the collection:</source>
          <target state="translated">&lt;code&gt;skipWhile&lt;/code&gt; 방법 스킵 항목 주어진 콜백을 반환하면서 &lt;code&gt;true&lt;/code&gt; 다음 컬렉션의 나머지 항목을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="361e1bd5c09cbe65eccb5dd54eb84604eb262430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slack&lt;/code&gt; channel requires a &lt;code&gt;url&lt;/code&gt; configuration option. This URL should match a URL for an &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;incoming webhook&lt;/a&gt; that you have configured for your Slack team.</source>
          <target state="translated">&lt;code&gt;slack&lt;/code&gt; 채널이 필요로 &lt;code&gt;url&lt;/code&gt; 구성 옵션을 선택합니다. 이 URL은 Slack 팀에 대해 구성한 &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;수신 웹 후크&lt;/a&gt; 의 URL과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="87127d301988eeca25dbda67259f177eef7e5d5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slack&lt;/code&gt; channel requires a &lt;code&gt;url&lt;/code&gt; configuration option. This URL should match a URL for an &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;incoming webhook&lt;/a&gt; that you have configured for your Slack team. By default, Slack will only receive logs at the &lt;code&gt;critical&lt;/code&gt; level and above; however, you can adjust this in your &lt;code&gt;logging&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;slack&lt;/code&gt; 채널이 필요로 &lt;code&gt;url&lt;/code&gt; 구성 옵션을 선택합니다. 이 URL은 Slack 팀에 대해 구성한 &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;수신 웹훅&lt;/a&gt; 의 URL과 일치해야합니다 . 기본적으로 Slack은 &lt;code&gt;critical&lt;/code&gt; 수준 이상의 로그 만 수신합니다 . 그러나 &lt;code&gt;logging&lt;/code&gt; 구성 파일 에서이를 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a866a40c9d2102b6f55f9568eb1c01c2feda2bf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; method returns a slice of the collection starting at the given index:</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; 방법은 지정된 인덱스에서 시작하여 컬렉션의 조각을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="94ecfa4ab4338010361b898808e1bdfbe6a50874" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slug&lt;/code&gt; method generates a URL friendly &quot;slug&quot; from the given string:</source>
          <target state="translated">&lt;code&gt;slug&lt;/code&gt; 방법은 주어진 문자열에서 URL 친화적 인 &quot;총알&quot;을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="fb50f7a944201a22d2af60c21e8981e261454c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sms_from&lt;/code&gt; option is the phone number that your SMS messages will be sent from. You should generate a phone number for your application in the Nexmo control panel.</source>
          <target state="translated">&lt;code&gt;sms_from&lt;/code&gt; 의 옵션은 SMS 메시지를에서 전송됩니다 전화 번호입니다. Nexmo 제어판에서 응용 프로그램의 전화 번호를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d07e64edfa519b7748fd4684af69780100ae0ae0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;snake&lt;/code&gt; method converts the given string to &lt;code&gt;snake_case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;snake&lt;/code&gt; 방법에 주어진 문자열로 변환 &lt;code&gt;snake_case&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="6a8eb3115015f39913ddb9e8e4eccb204701ca4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;snake_case&lt;/code&gt; function converts the given string to &lt;code&gt;snake_case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;snake_case&lt;/code&gt; 의 기능에 주어진 문자열로 변환 &lt;code&gt;snake_case&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="3ad58ffee8416bc5d053b969e98a3e548eb43478" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;softDeletesTz&lt;/code&gt; Migration Method</source>
          <target state="translated">&lt;code&gt;softDeletesTz&lt;/code&gt; 마이그레이션 방법</target>
        </trans-unit>
        <trans-unit id="56db5041ae9561deeaf05ee2a513d20895a063bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; method sorts the collection. The sorted collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; 방법은 컬렉션을 정렬합니다. 정렬 된 컬렉션은 원래 배열 키를 유지하므로이 예제에서는 &lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; 메서드를 사용 하여 키를 연속적으로 번호가 매겨진 인덱스로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="77ef76b95b7a145e504c2af650e1f9efcb39ad94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sortBy&lt;/code&gt; method sorts the collection by the given key. The sorted collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="translated">&lt;code&gt;sortBy&lt;/code&gt; 의 방법은 지정된 키에 의해 컬렉션을 정렬합니다. 정렬 된 컬렉션은 원래 배열 키를 유지하므로이 예제에서는 &lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; 메서드를 사용 하여 키를 연속적으로 번호가 매겨진 인덱스로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="467349866e5037da88cbcb494331d88496a2a558" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sortKeys&lt;/code&gt; method sorts the collection by the keys of the underlying associative array:</source>
          <target state="translated">&lt;code&gt;sortKeys&lt;/code&gt; 에 있어서, 상기 하부 결합 배열의 키에 의해 수집 정렬 :</target>
        </trans-unit>
        <trans-unit id="d24adcdedb569516f5b9a14741f40038e1f7f868" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;splice&lt;/code&gt; method removes and returns a slice of items starting at the specified index:</source>
          <target state="translated">&lt;code&gt;splice&lt;/code&gt; 방법 제거하고 반환 지정된 인덱스에서 시작 항목의 조각 :</target>
        </trans-unit>
        <trans-unit id="7d60386a6443f73064b0eda92900e068e2dec667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;split&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="b4ce5a8b7a05d1d212d2bd34d4f3a1f4073f3b47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; method &lt;a href=&quot;https://github.com/laravel/framework/pull/24088&quot;&gt;has been updated to always return the requested number of &quot;groups&quot;&lt;/a&gt;, unless the total number of items in the original collection is less than the requested collection count. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution.</source>
          <target state="translated">&lt;code&gt;split&lt;/code&gt; 방법은 &lt;a href=&quot;https://github.com/laravel/framework/pull/24088&quot;&gt;항상 &quot;그룹&quot;의 요청 수를 반환하도록 업데이트되었습니다&lt;/a&gt; 원래 컬렉션의 항목의 총수가 적은 요청 모음 수보다를하지 않는 한,. 일반적으로 이것은 버그 수정으로 간주되어야합니다. 그러나주의를 기울이지 않는 주요 변경 사항으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f44d07301a85adbcb784b440151955079613aaa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; method breaks a collection into the given number of groups:</source>
          <target state="translated">&lt;code&gt;split&lt;/code&gt; 방법은 그룹의 지정된 수에 컬렉션을 나누기 :</target>
        </trans-unit>
        <trans-unit id="580cf34aa70abc34dba80fc6fd3b40792f86d665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split&lt;/code&gt; method splits a string into a collection using a regular expression:</source>
          <target state="translated">&lt;code&gt;split&lt;/code&gt; 방법은 정규 표현식을 사용하여 모음에 문자열을 분할 :</target>
        </trans-unit>
        <trans-unit id="5ba759ef70179a1f1e5a892e6a99d04e3de0bd57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; method adds a single instance of the given value to a string if it does not already start with the value:</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 이미 값으로 시작되지 않으면 방법은 문자열로 주어진 값의 단일 인스턴스를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="97914ba483571086b0e10f99ff5c49954d579b99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startsWith&lt;/code&gt; method determines if the given string begins with the given value:</source>
          <target state="translated">&lt;code&gt;startsWith&lt;/code&gt; 의 지정된 문자열이 소정의 값으로 시작하는 경우, 방법은 결정</target>
        </trans-unit>
        <trans-unit id="9ef5eb18ebd62febeff4e1c89ac270ae0a85b089" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;starts_with&lt;/code&gt; function determines if the given string begins with the given value:</source>
          <target state="translated">&lt;code&gt;starts_with&lt;/code&gt; 지정된 문자열이 소정의 값으로 시작하는 경우, 함수 결정</target>
        </trans-unit>
        <trans-unit id="fe195a923d78dad4c825a0703027c201544d6672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stateless&lt;/code&gt; method may be used to disable session state verification. This is useful when adding social authentication to an API:</source>
          <target state="translated">&lt;code&gt;stateless&lt;/code&gt; 방법은 사용하지 않도록 세션 상태 검증에 사용할 수있다. 이는 소셜 인증을 API에 추가 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="557eb839d246b1081237432fdffc28fc357703f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sticky&lt;/code&gt; Option</source>
          <target state="translated">&lt;code&gt;sticky&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="2b2c7d09b9a378b5a38b56e1e7912aefcac9379f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sticky&lt;/code&gt; option is an &lt;em&gt;optional&lt;/em&gt; value that can be used to allow the immediate reading of records that have been written to the database during the current request cycle. If the &lt;code&gt;sticky&lt;/code&gt; option is enabled and a &quot;write&quot; operation has been performed against the database during the current request cycle, any further &quot;read&quot; operations will use the &quot;write&quot; connection. This ensures that any data written during the request cycle can be immediately read back from the database during that same request. It is up to you to decide if this is the desired behavior for your application.</source>
          <target state="translated">&lt;code&gt;sticky&lt;/code&gt; 옵션은입니다 &lt;em&gt;옵션&lt;/em&gt; 현재 요청주기 동안 데이터베이스에 기록 된 레코드의 즉각적인 판독을 허용 할 수 있습니다 값. 만약 &lt;code&gt;sticky&lt;/code&gt; 옵션이 활성화되고 &quot;쓰기&quot;작업이 현재 요청주기 동안 데이터베이스에 대해 수행 된, 더 이상이 작업은 &quot;쓰기&quot;연결을 사용합니다 &quot;읽기&quot;. 이를 통해 요청주기 동안 작성된 모든 데이터를 동일한 요청 동안 데이터베이스에서 즉시 다시 읽을 수 있습니다. 이것이 응용 프로그램에 바람직한 동작인지 결정하는 것은 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="a748f2838181e56ea12be5d9f01b7a068a44abfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage/app/public&lt;/code&gt; directory may be used to store user-generated files, such as profile avatars, that should be publicly accessible. You should create a symbolic link at &lt;code&gt;public/storage&lt;/code&gt; which points to this directory. You may create the link using the &lt;code&gt;php artisan storage:link&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;storage/app/public&lt;/code&gt; 디렉토리는 공개적으로 액세스 할 수 있어야합니다 같은 프로필 아바타로 저장하는 사용자가 생성 한 파일에 사용할 수있다. 이 디렉토리를 가리키는 &lt;code&gt;public/storage&lt;/code&gt; 에서 기호 링크를 작성해야합니다 . &lt;code&gt;php artisan storage:link&lt;/code&gt; 사용하여 링크를 만들 수 있습니다 : 명령을 .</target>
        </trans-unit>
        <trans-unit id="a8d39215b2f55526dcc2b5c6ff669534d1201be8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;storage&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="e969ebfb2e3d6873978fcf72a6f565d1338a6820" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage&lt;/code&gt; directory contains your compiled Blade templates, file based sessions, file caches, and other files generated by the framework. This directory is segregated into &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;framework&lt;/code&gt;, and &lt;code&gt;logs&lt;/code&gt; directories. The &lt;code&gt;app&lt;/code&gt; directory may be used to store any files generated by your application. The &lt;code&gt;framework&lt;/code&gt; directory is used to store framework generated files and caches. Finally, the &lt;code&gt;logs&lt;/code&gt; directory contains your application's log files.</source>
          <target state="translated">&lt;code&gt;storage&lt;/code&gt; 디렉토리는 컴파일 된 블레이드 템플릿, 파일 기반 세션, 파일 캐시 및 프레임 워크에 의해 생성 된 다른 파일이 포함되어 있습니다. 이 디렉토리는 &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;framework&lt;/code&gt; 및 &lt;code&gt;logs&lt;/code&gt; 디렉토리로 구분됩니다. &lt;code&gt;app&lt;/code&gt; 디렉토리는 응용 프로그램에 의해 생성 된 모든 파일을 저장하는 데 사용할 수 있습니다. &lt;code&gt;framework&lt;/code&gt; 디렉토리는 저장 프레임 워크 생성 된 파일 및 캐시에 사용된다. 마지막으로 &lt;code&gt;logs&lt;/code&gt; 디렉토리에는 응용 프로그램의 로그 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9f7e30ec3c9bb64e301ef57659123f4a2c1f14b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;storage&lt;/code&gt; directory. You may also use the &lt;code&gt;storage_path&lt;/code&gt; function to generate a fully qualified path to a given file within the storage directory:</source>
          <target state="translated">&lt;code&gt;storage_path&lt;/code&gt; 의 기능은 완전한 경로를 반환 &lt;code&gt;storage&lt;/code&gt; 디렉토리를. &lt;code&gt;storage_path&lt;/code&gt; 함수를 사용 하여 스토리지 디렉토리 내의 지정된 파일에 대한 완전한 경로를 생성 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f19abb4e2d9a34c936e46484efc8e94a9c76f6c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; method accepts the path where the file should be stored relative to the filesystem's configured root directory. This path should not contain a file name, since a unique ID will automatically be generated to serve as the file name.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; 방법은 파일을 파일 시스템의 구성 루트 디렉토리를 기준으로 저장해야합니다 경로를 받아들입니다. 파일 이름으로 사용하기 위해 고유 ID가 자동으로 생성되므로이 경로에는 파일 이름이 포함되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="032f495e417c24c04fb91115588453a8888de037" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; method also accepts an optional second argument for the name of the disk that should be used to store the file. The method will return the path of the file relative to the disk's root:</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; 방법은 파일을 저장하는 데 사용되어야하는 디스크의 이름에 대한 선택적인 두 번째 인수를 받아들입니다. 이 방법은 디스크 루트에 상대적인 파일 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="acd7c318edf37818ad402625d530705f3fc749e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_after&lt;/code&gt; function returns everything after the given value in a string:</source>
          <target state="translated">&lt;code&gt;str_after&lt;/code&gt; 의 함수는 문자열에서 주어진 값 후 모든 반환</target>
        </trans-unit>
        <trans-unit id="a45dea7b5f7999f9da249eb0135057902a28a28b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_before&lt;/code&gt; function returns everything before the given value in a string:</source>
          <target state="translated">&lt;code&gt;str_before&lt;/code&gt; 의 함수는 문자열에서 주어진 값 전에 모든 것을 반환</target>
        </trans-unit>
        <trans-unit id="284d34a82422d83fa6b494d295f7fb5918c0daf7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_contains&lt;/code&gt; function determines if the given string contains the given value (case sensitive):</source>
          <target state="translated">&lt;code&gt;str_contains&lt;/code&gt; 의 지정된 문자열이 소정의 값 (대소 문자 구분)이 포함되어있는 경우 함수 결정</target>
        </trans-unit>
        <trans-unit id="1d581eaed85d42e756b87eb20d387846be7c1d04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_finish&lt;/code&gt; function adds a single instance of the given value to a string if it does not already end with the value:</source>
          <target state="translated">&lt;code&gt;str_finish&lt;/code&gt; 이미 값으로 끝나지 않는 경우, 함수는 문자열에 주어진 값의 단일 인스턴스를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="0f62b85ff640f8d43f47c07ec836df7b1cf61229" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_is&lt;/code&gt; function determines if a given string matches a given pattern. Asterisks may be used to indicate wildcards:</source>
          <target state="translated">&lt;code&gt;str_is&lt;/code&gt; 의 특정 문자열이 소정의 패턴에 일치하는 경우 기능을 결정한다. 와일드 카드를 나타내는 데 별표를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95f1247acee339fcc9e7b9c490c786c163521053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_limit&lt;/code&gt; function truncates the given string at the specified length:</source>
          <target state="translated">&lt;code&gt;str_limit&lt;/code&gt; 의 함수는 지정된 길이로 지정된 캐릭터 라인을 잘라 :</target>
        </trans-unit>
        <trans-unit id="20517375593afdc1a5bd84609c3c581e39395942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_plural&lt;/code&gt; function converts a string to its plural form. This function currently only supports the English language:</source>
          <target state="translated">&lt;code&gt;str_plural&lt;/code&gt; 함수는 복수의 형태로 문자열을 변환합니다. 이 기능은 현재 영어 만 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="39a7db2120814d94a296091d0037e14ca8180825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_random&lt;/code&gt; function generates a random string of the specified length. This function uses PHP's &lt;code&gt;random_bytes&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;str_random&lt;/code&gt; 의 함수는 지정된 길이의 임의의 문자열을 생성합니다. 이 함수는 PHP의 &lt;code&gt;random_bytes&lt;/code&gt; 함수를 사용 합니다 :</target>
        </trans-unit>
        <trans-unit id="07459ebf2a7f1e0e60f462de0b218a7cf7362afa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_array&lt;/code&gt; function replaces a given value in the string sequentially using an array:</source>
          <target state="translated">&lt;code&gt;str_replace_array&lt;/code&gt; 기능은 순차적으로 배열하여 문자열에 소정의 값을 대체</target>
        </trans-unit>
        <trans-unit id="322423cc02bb0a18ad4eea8997d852ca46302015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_first&lt;/code&gt; function replaces the first occurrence of a given value in a string:</source>
          <target state="translated">&lt;code&gt;str_replace_first&lt;/code&gt; 함수는 문자열에 소정의 값의 첫번째 발생을 대체</target>
        </trans-unit>
        <trans-unit id="0c56b65ebc87bb7cf98f7c605654cdb29e5318e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_replace_last&lt;/code&gt; function replaces the last occurrence of a given value in a string:</source>
          <target state="translated">&lt;code&gt;str_replace_last&lt;/code&gt; 함수는 문자열에서 주어진 값의 마지막 발생을 대체합니다</target>
        </trans-unit>
        <trans-unit id="8b56534993e95e16f0044bf56df1c66ef54f5407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_singular&lt;/code&gt; function converts a string to its singular form. This function currently only supports the English language:</source>
          <target state="translated">&lt;code&gt;str_singular&lt;/code&gt; 함수는 단수 형태로 문자열을 변환합니다. 이 기능은 현재 영어 만 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="8665063b576e4a5f0cb343f38c87d38ccdd25aa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_slug&lt;/code&gt; function generates a URL friendly &quot;slug&quot; from the given string:</source>
          <target state="translated">&lt;code&gt;str_slug&lt;/code&gt; 의 함수는 주어진 문자열에서 URL 친화적 인 &quot;총알&quot;을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="0db48883eb91ebcfbb95f9986591fb84771043fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str_start&lt;/code&gt; function adds a single instance of the given value to a string if it does not already start with the value:</source>
          <target state="translated">&lt;code&gt;str_start&lt;/code&gt; 에 이미 값으로 시작되지 않으면 함수는 문자열에 주어진 값의 단일 인스턴스를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="f7e690cc705484277a7116f1a2c51a916e9a1697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;studly&lt;/code&gt; method converts the given string to &lt;code&gt;StudlyCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;studly&lt;/code&gt; 방법에 주어진 문자열로 변환 &lt;code&gt;StudlyCase&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="15a0d62cffd75be135b6750dd5fbddb30b5dcf03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;studly_case&lt;/code&gt; function converts the given string to &lt;code&gt;StudlyCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;studly_case&lt;/code&gt; 의 기능에 주어진 문자열로 변환 &lt;code&gt;StudlyCase&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="46f5be43e77881dfd125a132dd75f303c4eab17a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribed&lt;/code&gt; method also makes a great candidate for a &lt;a href=&quot;middleware&quot;&gt;route middleware&lt;/a&gt;, allowing you to filter access to routes and controllers based on the user's subscription status:</source>
          <target state="translated">&lt;code&gt;subscribed&lt;/code&gt; 방법은도에 대한 좋은 후보하게 &lt;a href=&quot;middleware&quot;&gt;경로 미들웨어를&lt;/a&gt; 사용자의 가입 상태에 따라 경로와 컨트롤러 필터에 액세스 할 수 있도록 :</target>
        </trans-unit>
        <trans-unit id="11e1b86d3fdb3d3ff7613b84ae687db2efbe9ea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribedToPlan&lt;/code&gt; method may be used to determine if the user is subscribed to a given plan based on a given Paddle plan ID. In this example, we will determine if the user's &lt;code&gt;default&lt;/code&gt; subscription is actively subscribed to the monthly plan:</source>
          <target state="translated">&lt;code&gt;subscribedToPlan&lt;/code&gt; 의 방법은 사용자가 주어진 평면 패들 ID에 기초하여 소정의 계획에 가입되어 있는지를 판정하는데 사용될 수있다. 이 예에서는 사용자의 &lt;code&gt;default&lt;/code&gt; 구독이 월간 요금제에 적극적으로 구독되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="01fbfcd5ec7d3d1df5a5bfbd71d6c842c1be0d16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribedToPlan&lt;/code&gt; method may be used to determine if the user is subscribed to a given plan based on a given Stripe / Braintree plan ID. In this example, we will determine if the user's &lt;code&gt;main&lt;/code&gt; subscription is actively subscribed to the &lt;code&gt;monthly&lt;/code&gt; plan:</source>
          <target state="translated">&lt;code&gt;subscribedToPlan&lt;/code&gt; 의 방법은 사용자가 소정의 스트라이프 / 브레인 플랜 ID에 기초하여 소정의 계획에 가입되어 있는지를 판정하는데 사용될 수있다. 이 예에서는 사용자의 &lt;code&gt;main&lt;/code&gt; 가입이 &lt;code&gt;monthly&lt;/code&gt; 요금제에 적극적으로 가입되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="4f0a2bb8cb6c5e07a2025959371550e7e63fc4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribedToPlan&lt;/code&gt; method may be used to determine if the user is subscribed to a given plan based on a given Stripe Price ID. In this example, we will determine if the user's &lt;code&gt;default&lt;/code&gt; subscription is actively subscribed to the &lt;code&gt;monthly&lt;/code&gt; plan:</source>
          <target state="translated">&lt;code&gt;subscribedToPlan&lt;/code&gt; 의 방법은 사용자가 소정의 스트라이프 가격 ID에 기초하여 소정의 계획에 가입되어 있는지를 판정하는데 사용될 수있다. 이 예에서는 사용자의 &lt;code&gt;default&lt;/code&gt; 구독이 &lt;code&gt;monthly&lt;/code&gt; 요금제에 적극적으로 구독되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b144706d55a12abf6f5a8236c944be9f3c2ed6f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substr&lt;/code&gt; method returns the portion of the string specified by the given start and length parameters:</source>
          <target state="translated">&lt;code&gt;substr&lt;/code&gt; 방법은 소정의 시작점과 길이 매개 변수에 의해 지정된 캐릭터의 일부를 반환</target>
        </trans-unit>
        <trans-unit id="7e13d041f04d47cd27a61c48f6780e2c25be1b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sum&lt;/code&gt; method returns the sum of all items in the collection:</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; 방법은 컬렉션에있는 모든 항목의 합계를 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="40ddd5adce2915291a53cedea96f6a4e1a0de384" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;table&lt;/code&gt; method makes it easy to correctly format multiple rows / columns of data. Just pass in the headers and rows to the method. The width and height will be dynamically calculated based on the given data:</source>
          <target state="translated">&lt;code&gt;table&lt;/code&gt; 방법은 쉽게 정확하게 데이터의 여러 행 / 열을 포맷 할 수 있습니다. 헤더와 행을 메소드에 전달하십시오. 너비와 높이는 주어진 데이터를 기반으로 동적으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3ae12b512762d988949b58fe4014a3dfde2cc42d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;table&lt;/code&gt; method on the &lt;code&gt;Schema&lt;/code&gt; facade may be used to update existing tables. Like the &lt;code&gt;create&lt;/code&gt; method, the &lt;code&gt;table&lt;/code&gt; method accepts two arguments: the name of the table and a &lt;code&gt;Closure&lt;/code&gt; that receives a &lt;code&gt;Blueprint&lt;/code&gt; instance you may use to add columns to the table:</source>
          <target state="translated">&lt;code&gt;Schema&lt;/code&gt; 파사드 의 &lt;code&gt;table&lt;/code&gt; 방법을 사용하여 기존 테이블을 업데이트 할 수 있습니다. &lt;code&gt;create&lt;/code&gt; 메소드 와 마찬가지로 &lt;code&gt;table&lt;/code&gt; 메소드는 두 개의 인수를 허용 합니다. 테이블 이름과 테이블 에 열을 추가하는 데 사용할 수 있는 &lt;code&gt;Blueprint&lt;/code&gt; 인스턴스 를 수신하는 &lt;code&gt;Closure&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="54fe69ea873aa4d7abebb79ac2ff6224b13a0e12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method returns a new collection with the specified number of items:</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; 방법은 항목의 지정된 수의 새 컬렉션을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="b7f9001d378d123d2939d701c23bae6b45e93bb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;takeUntil&lt;/code&gt; method returns items in the collection until the given callback returns &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;takeUntil&lt;/code&gt; 컬렉션의 메서드가 반환 항목 주어진 콜백이 반환 될 때까지 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b84d3705ee7d37198fecee869de654b82998cd6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;takeWhile&lt;/code&gt; method returns items in the collection until the given callback returns &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;takeWhile&lt;/code&gt; 컬렉션의 메서드가 반환 항목 주어진 콜백이 반환 될 때까지 &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1d13799ca9fc824666f3c219d3def1a8def52c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tap&lt;/code&gt; function accepts two arguments: an arbitrary &lt;code&gt;$value&lt;/code&gt; and a Closure. The &lt;code&gt;$value&lt;/code&gt; will be passed to the Closure and then be returned by the &lt;code&gt;tap&lt;/code&gt; function. The return value of the Closure is irrelevant:</source>
          <target state="translated">&lt;code&gt;tap&lt;/code&gt; 임의 : 함수는 두 인자 수용 &lt;code&gt;$value&lt;/code&gt; 과 클로저. &lt;code&gt;$value&lt;/code&gt; 클로저로 전달됩니다 다음에 의해 반환 &lt;code&gt;tap&lt;/code&gt; 기능. 클로저의 반환 값은 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="740480cafef47feb1dd6ddde00bf8f84ebe979a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tap&lt;/code&gt; method passes the collection to the given callback, allowing you to &quot;tap&quot; into the collection at a specific point and do something with the items while not affecting the collection itself:</source>
          <target state="translated">&lt;code&gt;tap&lt;/code&gt; 방법은 컬렉션 자체에 영향을주지 않으면 서 특정 지점에서 수집에 &quot;탭&quot;에 당신을 허용하고 상품에 무언가를, 주어진 콜백 컬렉션을 전달합니다</target>
        </trans-unit>
        <trans-unit id="a7a97128f9832209e541685598be2b8e6dbe92ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxPercentage&lt;/code&gt; method enables you to apply a tax rate on a model-by-model basis, which may be helpful for a user base that spans multiple countries and tax rates.</source>
          <target state="translated">&lt;code&gt;taxPercentage&lt;/code&gt; 의 방법은 사용자 기반을 위해 도움이 될 수있는 모델별로 모델을 기준으로 세율을 적용 할 수 있습니다 그 스팬 여러 국가 및 세율.</target>
        </trans-unit>
        <trans-unit id="0f09311868a6866c3840d4466928ccb43c6d025a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxPercentage&lt;/code&gt; method only applies to subscription charges. If you use Cashier to make &quot;one off&quot; charges, you will need to manually specify the tax rate at that time.</source>
          <target state="translated">&lt;code&gt;taxPercentage&lt;/code&gt; 의 메소드는 가입 요금이 적용됩니다. 계산원을 사용하여 &quot;일회성&quot;청구를하는 경우 해당 시점에 세율을 수동으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="09e020cdc4a41348aadd5a0d04a3815fc7db47dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxRates&lt;/code&gt; method enables you to apply a tax rate on a model-by-model basis, which may be helpful for a user base that spans multiple countries and tax rates. If you're working with multiplan subscriptions you can define different tax rates for each plan by implementing a &lt;code&gt;planTaxRates&lt;/code&gt; method on your billable model:</source>
          <target state="translated">&lt;code&gt;taxRates&lt;/code&gt; 의 방법은 사용자 기반을 위해 도움이 될 수있는 모델별로 모델을 기준으로 세율을 적용 할 수 있습니다 그 스팬 여러 국가 및 세율. 다중 계획 구독으로 작업하는 경우 청구 가능 모델에 &lt;code&gt;planTaxRates&lt;/code&gt; 메서드를 구현하여 각 계획에 대해 서로 다른 세율을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be204f4f125954d1ea76f175d6f2458e47929eb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taxRates&lt;/code&gt; method only applies to subscription charges. If you use Cashier to make &quot;one off&quot; charges, you will need to manually specify the tax rate at that time.</source>
          <target state="translated">&lt;code&gt;taxRates&lt;/code&gt; 의 메소드는 가입 요금이 적용됩니다. 캐셔를 사용하여 &quot;일회성&quot;요금을 부과하는 경우 해당 시점에 세율을 수동으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0aee7d97d5a77492473bf3d4e2f22946fa7a7d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terminate&lt;/code&gt; method should receive both the request and the response. Once you have defined a terminable middleware, you should add it to the list of route or global middleware in the &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;terminate&lt;/code&gt; 있어서, 상기 요청 및 응답을 모두 수신한다. 용어 미들웨어를 정의한 후에는 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; 파일 의 라우트 또는 글로벌 미들웨어 목록에 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0d35582c5d540cfa08de9bea0984c3bbfb929add" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tests&lt;/code&gt; Directory</source>
          <target state="translated">는 &lt;code&gt;tests&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="aef21d8e5debd32f6d61985aa668bd1791155f69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tests&lt;/code&gt; directory contains your automated tests. An example &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; is provided out of the box. Each test class should be suffixed with the word &lt;code&gt;Test&lt;/code&gt;. You may run your tests using the &lt;code&gt;phpunit&lt;/code&gt; or &lt;code&gt;php vendor/bin/phpunit&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;tests&lt;/code&gt; 디렉토리는 자동화 된 테스트가 포함되어 있습니다. &lt;a href=&quot;https://phpunit.de/&quot;&gt;기본적으로 PHPUnit&lt;/a&gt; 예가 제공됩니다. 각 테스트 클래스에는 &lt;code&gt;Test&lt;/code&gt; 단어가 접미사로 붙어야합니다 . &lt;code&gt;phpunit&lt;/code&gt; 또는 &lt;code&gt;php vendor/bin/phpunit&lt;/code&gt; 명령을 사용하여 테스트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53ba186966bbaed968cf6659967c268711d237ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tests&lt;/code&gt; directory contains your automated tests. An example &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; test is provided out of the box. Each test class should be suffixed with the word &lt;code&gt;Test&lt;/code&gt;. You may run your tests using the &lt;code&gt;phpunit&lt;/code&gt; or &lt;code&gt;php vendor/bin/phpunit&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;tests&lt;/code&gt; 디렉토리는 자동화 된 테스트가 포함되어 있습니다. &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; 테스트 의 예가 즉시 제공됩니다. 각 테스트 클래스에는 &lt;code&gt;Test&lt;/code&gt; 라는 단어가 추가되어야합니다 . &lt;code&gt;phpunit&lt;/code&gt; 또는 &lt;code&gt;php vendor/bin/phpunit&lt;/code&gt; 명령을 사용하여 테스트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18c1ab2e2ca89a2eeaf925072d62753f9214e785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;text&lt;/code&gt; method may be used to retrieve the display text of an element that matches the given selector:</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 방법은 주어진 선택에 일치하는 요소의 표시 텍스트를 검색하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="a810f84dcc923805801e5f4061c92ef6701060bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw&lt;/code&gt; method returns the response instance if no error occurred, allowing you to chain other operations onto the &lt;code&gt;throw&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; 오류가에 체인을 다른 작업에 당신을 허용 발생하지 않는 경우 메소드는 응답 인스턴스를 반환 &lt;code&gt;throw&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="4aa0179b9244cc5bacf82ba21097ab7c793d344f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw_if&lt;/code&gt; function throws the given exception if a given boolean expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;throw_if&lt;/code&gt; 의 기능에 주어진 부울 표현식의 평가되면 주어진 예외 발생 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd3b300acc31bcc17d637f3fbb6ce3b03fa04204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw_unless&lt;/code&gt; function throws the given exception if a given boolean expression evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;throw_unless&lt;/code&gt; 의 함수에 대한 주어진 부울 표현식 평가되면 지정된 예외 발생 &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a40eeea3d6edb235843844758e036035dd5ef0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeout&lt;/code&gt; feature is optimized for PHP 7.1+ and the &lt;code&gt;pcntl&lt;/code&gt; PHP extension.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 기능은 PHP 7.1 이상과에 최적화되어 &lt;code&gt;pcntl&lt;/code&gt; 의 PHP 확장.</target>
        </trans-unit>
        <trans-unit id="e559bcd3a0ece3e8e33be2a1e2805e761dd6bb1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeout&lt;/code&gt; method may be used to specify the maximum number of seconds to wait for a response:</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 방법은 응답을 대기하는 최대 시간 (초)의 번호를 지정하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="06b3f2aa2b82b2bf1399b3fb3ce7b8cc2477d808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeoutAt&lt;/code&gt; Property</source>
          <target state="translated">&lt;code&gt;timeoutAt&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="766f910ec279bc056a80b6790d083cbf47549953" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeoutAt&lt;/code&gt; property of queued jobs, notifications, and listeners has been renamed to &lt;code&gt;retryUntil&lt;/code&gt;. You should update the name of this property in the relevant classes in your application.</source>
          <target state="translated">&lt;code&gt;timeoutAt&lt;/code&gt; 의 대기 작업, 알림 및 청취자의 속성은 이름이 변경되었습니다 &lt;code&gt;retryUntil&lt;/code&gt; . 애플리케이션의 관련 클래스에서이 속성의 이름을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d1a20970255f27305a0b7be48e77cf8a6fc7c16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title&lt;/code&gt; method converts the given string to &lt;code&gt;Title Case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;title&lt;/code&gt; 방법에 주어진 문자열로 변환 &lt;code&gt;Title Case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4c49ba8659463e2fbb052460f62b262724e88359" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title_case&lt;/code&gt; function converts the given string to &lt;code&gt;Title Case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;title_case&lt;/code&gt; 기능에 주어진 문자열로 변환 &lt;code&gt;Title Case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f866b25e705b4a317fc6059f7df255a31a61b068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toArray&lt;/code&gt; method converts the collection into a plain PHP &lt;code&gt;array&lt;/code&gt;. If the collection's values are &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models, the models will also be converted to arrays:</source>
          <target state="translated">&lt;code&gt;toArray&lt;/code&gt; 의 방법은 일반 PHP의 컬렉션으로 변환 &lt;code&gt;array&lt;/code&gt; . 컬렉션의 값이 &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; 모델 인 경우 모델도 배열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="3d7da7725b224b964acdd0cbbb8319c05f1641da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toArray&lt;/code&gt; method is also used by the &lt;code&gt;broadcast&lt;/code&gt; channel to determine which data to broadcast to your JavaScript client. If you would like to have two different array representations for the &lt;code&gt;database&lt;/code&gt; and &lt;code&gt;broadcast&lt;/code&gt; channels, you should define a &lt;code&gt;toDatabase&lt;/code&gt; method instead of a &lt;code&gt;toArray&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;toArray&lt;/code&gt; 의 방법은 또한에 의해 사용되는 &lt;code&gt;broadcast&lt;/code&gt; 자바 스크립트 클라이언트에 방송되는 데이터를 결정하는 채널입니다. &lt;code&gt;database&lt;/code&gt; 및 &lt;code&gt;broadcast&lt;/code&gt; 채널에 대해 서로 다른 두 개의 배열 표현을 &lt;code&gt;toDatabase&lt;/code&gt; &lt;code&gt;toArray&lt;/code&gt; 메소드 대신 toDatabase 메소드를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="307b837291f33a5c6d08e6b7ae2c0901548b0717" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJson&lt;/code&gt; method converts the collection into a JSON serialized string:</source>
          <target state="translated">&lt;code&gt;toJson&lt;/code&gt; 의 방법은 JSON 직렬화 문자열로 컬렉션을 변환 :</target>
        </trans-unit>
        <trans-unit id="b1bc7ef2764d147e154ee08b266b22f89c3984f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toQuery&lt;/code&gt; method returns an Eloquent query builder instance containing a &lt;code&gt;whereIn&lt;/code&gt; constraint on the collection model's primary keys:</source>
          <target state="translated">&lt;code&gt;toQuery&lt;/code&gt; 의 방법은 포함 웅변 쿼리 빌더 인스턴스 반환 &lt;code&gt;whereIn&lt;/code&gt; 컬렉션 모델의 기본 키에 대한 제약 :</target>
        </trans-unit>
        <trans-unit id="11782d5dd244278d3f5d440f5f3b613bf7f36422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;today&lt;/code&gt; function creates a new &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; instance for the current date:</source>
          <target state="translated">&lt;code&gt;today&lt;/code&gt; 기능은 새로운 생성 &lt;code&gt;Illuminate\Support\Carbon&lt;/code&gt; 현재 날짜에 대한 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="3b11fc9e9f52162aed9eabbc14c2953614314aea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trait_uses_recursive&lt;/code&gt; function returns all traits used by a trait:</source>
          <target state="translated">&lt;code&gt;trait_uses_recursive&lt;/code&gt; 함수는 특징 사용하는 모든 특성을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="c799156af5c04197c505ac3af43aae84ba39331a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trans&lt;/code&gt; function translates the given translation key using your &lt;a href=&quot;localization&quot;&gt;localization files&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;trans&lt;/code&gt; 기능은 사용해, 지정된 변환 키를 변환 &lt;a href=&quot;localization&quot;&gt;현지화 파일&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d04b88218a6fdaadc91d45027351715c4022a00f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trans_choice&lt;/code&gt; function translates the given translation key with inflection:</source>
          <target state="translated">&lt;code&gt;trans_choice&lt;/code&gt; 의 기능은 활용에 주어진 변환 키를 번역 :</target>
        </trans-unit>
        <trans-unit id="da7c3e875ca3569c34d16f19afd5b5e965dd71b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; method accepts an optional second argument which defines the number of times a transaction should be reattempted when a deadlock occurs. Once these attempts have been exhausted, an exception will be thrown:</source>
          <target state="translated">&lt;code&gt;transaction&lt;/code&gt; 방법은 교착 상태가 발생하면 트랜잭션이 재 시도 할 횟수를 정의하는 선택적 두 번째 인수를 받아들입니다. 이러한 시도가 소진되면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e36206e74751a5b8db48fc70402b96827b93593d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; function executes a &lt;code&gt;Closure&lt;/code&gt; on a given value if the value is not &lt;a href=&quot;#method-blank&quot;&gt;blank&lt;/a&gt; and returns the result of the &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">는 &lt;code&gt;transform&lt;/code&gt; 기능이 실행에게 &lt;code&gt;Closure&lt;/code&gt; 값이 아닌 경우 주어진 값에 &lt;a href=&quot;#method-blank&quot;&gt;공백&lt;/a&gt; 및 반환의 결과 &lt;code&gt;Closure&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3517128e034c56cb61a861810f9802ea390e30b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; method iterates over the collection and calls the given callback with each item in the collection. The items in the collection will be replaced by the values returned by the callback:</source>
          <target state="translated">는 &lt;code&gt;transform&lt;/code&gt; 컬렉션을 통해 방법을 반복하고 컬렉션의 각 항목에 주어진 콜백을 호출합니다. 컬렉션의 항목은 콜백에서 반환 된 값으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="d983925a2ded50f5b6afc63c0c7898acc018cc8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trialUntil&lt;/code&gt; method allows you to provide a &lt;code&gt;DateTime&lt;/code&gt; instance to specify when the trial period should end:</source>
          <target state="translated">&lt;code&gt;trialUntil&lt;/code&gt; 의 방법은 당신이 제공 할 수 &lt;code&gt;DateTime&lt;/code&gt; 무료 사용 기간이 종료시기를 지정하는 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="8b1ec0be9e12d9f08bac3aeba52aa43a3e6c0b24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim&lt;/code&gt; method trims the given string:</source>
          <target state="translated">&lt;code&gt;trim&lt;/code&gt; 방법은 주어진 문자열 트림 :</target>
        </trans-unit>
        <trans-unit id="d8c75f94202cd8b5bbba07250740678b004802bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ucfirst&lt;/code&gt; method returns the given string with the first character capitalized:</source>
          <target state="translated">&lt;code&gt;ucfirst&lt;/code&gt; 첫 번째 문자는 대문자와 방법은 주어진 문자열을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="270b488114b3084bd84fb4f1ed385a12c6794644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;union&lt;/code&gt; method adds the given array to the collection. If the given array contains keys that are already in the original collection, the original collection's values will be preferred:</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; 방법은 컬렉션에 특정 배열을 추가한다. 지정된 배열에 원래 컬렉션에 이미있는 키가 포함되어 있으면 원래 컬렉션의 값이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="ac02482c08fc2f473a4c4fc8deb3a7f78ab9ed42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unionAll&lt;/code&gt; method is also available and has the same method signature as &lt;code&gt;union&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unionAll&lt;/code&gt; 의 방법도 가능하고 같은 방법으로 서명이 &lt;code&gt;union&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3be6015f3af83e4909c7d1d5b8c9282b93738100" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; and &lt;code&gt;exists&lt;/code&gt; rules will now respect the specified connection name (accessed via the model's &lt;code&gt;getConnectionName&lt;/code&gt; method) of Eloquent models when performing queries.</source>
          <target state="translated">&lt;code&gt;unique&lt;/code&gt; 하고 &lt;code&gt;exists&lt;/code&gt; 규칙은 이제 모델의를 통해 액세스 지정된 연결 이름 (존중 &lt;code&gt;getConnectionName&lt;/code&gt; 을 쿼리를 수행 할 때 설득력 모델의 방법).</target>
        </trans-unit>
        <trans-unit id="5db7d47dfc47e25950198d6670ec5aa8c6b2c65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; method returns all of the unique items in the collection. The returned collection keeps the original array keys, so in this example we'll use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reset the keys to consecutively numbered indexes:</source>
          <target state="translated">&lt;code&gt;unique&lt;/code&gt; 방법은 모든 컬렉션의 고유 항목의 반환합니다. 반환 된 컬렉션은 원래 배열 키를 유지하므로이 예제에서는 &lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; 메서드를 사용 하여 키를 연속적으로 번호가 매겨진 인덱스로 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="475c9b3103e1b1de9db682e117b7d9b587835b86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; method returns all of the unique models in the collection. Any models of the same type with the same primary key as another model in the collection are removed.</source>
          <target state="translated">&lt;code&gt;unique&lt;/code&gt; 방법은 모든 컬렉션의 독특한 모델로 반환합니다. 컬렉션의 다른 모델과 기본 키가 동일한 동일한 유형의 모든 모델이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ee916100f72aa33e524319308d575e40d86d91b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-uniquestrict&quot;&gt;&lt;code&gt;uniqueStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">&lt;code&gt;unique&lt;/code&gt; 방법 용도는 &quot;느슨한&quot;비교, 항목 값을 검사 정수 값 문자열을 의미 같은 값의 정수로 동일하다고한다. &lt;a href=&quot;#method-uniquestrict&quot;&gt; &lt;code&gt;uniqueStrict&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &quot;엄격한&quot;비교를 사용하여 필터링 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a13414cd1e4f6177f94401048796692a239f3d4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unless&lt;/code&gt; method will execute the given callback unless the first argument given to the method evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;unless&lt;/code&gt; 방법에 대한 방법들을 평가에 주어진 첫 번째 인수하지 않는 한, 지정된 콜백 실행됩니다 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bdfdb3218a2d420ddc4d38ad69d20183cc100937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method expects an array of column and value pairs representing the columns that should be updated.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 방법은 업데이트되어야하는 열을 나타내는 열 및 값 쌍의 어레이를 기대한다.</target>
        </trans-unit>
        <trans-unit id="3fd3bbe52d81b8c79b6a7d08fdad155edda0e99d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method should be used to update existing records in the database. The number of rows affected by the statement will be returned:</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 방법은 데이터베이스의 기존 레코드를 업데이트하는 데 사용되어야한다. 명령문의 영향을받는 행 수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c74907caee5fd9880b36e9b0c53817bda283b810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method will receive a &lt;code&gt;User&lt;/code&gt; and a &lt;code&gt;Post&lt;/code&gt; instance as its arguments, and should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating whether the user is authorized to update the given &lt;code&gt;Post&lt;/code&gt;. So, for this example, let's verify that the user's &lt;code&gt;id&lt;/code&gt; matches the &lt;code&gt;user_id&lt;/code&gt; on the post:</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 방법은받을 &lt;code&gt;User&lt;/code&gt; 와 &lt;code&gt;Post&lt;/code&gt; 인수로 인스턴스를 반환해야 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 사용자가 지정한 업데이트 할 수있는 권한이 있는지 여부를 나타내는 &lt;code&gt;Post&lt;/code&gt; . 따라서이 예에서는 사용자의 &lt;code&gt;id&lt;/code&gt; 가 게시물 의 &lt;code&gt;user_id&lt;/code&gt; 와 일치 하는지 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="7e58fad51635d50a4ef65178ce29f617859c5d6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateCard&lt;/code&gt; method may be used to update a customer's credit card information. This method accepts a Stripe token and will assign the new credit card as the default billing source:</source>
          <target state="translated">&lt;code&gt;updateCard&lt;/code&gt; 의 방법은 고객의 신용 카드 정보를 업데이트하는 데 사용할 수 있습니다. 이 방법은 스트라이프 토큰을 허용하며 새 신용 카드를 기본 청구 처로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d2907d1627fc5fd9a88962395060f82a62802590" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateDefaultPaymentMethod&lt;/code&gt; method may be used to update a customer's default payment method information. This method accepts a Stripe payment method identifier and will assign the new payment method as the default billing payment method:</source>
          <target state="translated">&lt;code&gt;updateDefaultPaymentMethod&lt;/code&gt; 의 방법은 고객의 기본 결제 수단 정보를 업데이트하는 데 사용할 수 있습니다. 이 방법은 Stripe 결제 방법 식별자를 허용하며 새 결제 방법을 기본 결제 방법으로 할당합니다.</target>
        </trans-unit>
        <trans-unit id="fd1f0f8a92fcd41c058254d24337b796f5b8c1e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateOrInsert&lt;/code&gt; method will first attempt to locate a matching database record using the first argument's column and value pairs. If the record exists, it will be updated with the values in the second argument. If the record can not be found, a new record will be inserted with the merged attributes of both arguments:</source>
          <target state="translated">&lt;code&gt;updateOrInsert&lt;/code&gt; 의 방법은 먼저 첫 번째 인수의 열 및 값 쌍을 사용하여 일치하는 데이터베이스 레코드의 위치를 시도합니다. 레코드가 존재하는 경우 두 번째 인수의 값으로 업데이트됩니다. 레코드를 찾을 수없는 경우 두 인수의 병합 된 속성과 함께 새 레코드가 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="6518f6b62118b25b4b1577d228594a1fb7a7df6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateRememberToken&lt;/code&gt; method updates the &lt;code&gt;$user&lt;/code&gt; field &lt;code&gt;remember_token&lt;/code&gt; with the new &lt;code&gt;$token&lt;/code&gt;. A fresh token is assigned on a successful &quot;remember me&quot; login attempt or when the user is logging out.</source>
          <target state="translated">&lt;code&gt;updateRememberToken&lt;/code&gt; 의 방법은 업데이트 &lt;code&gt;$user&lt;/code&gt; 필드 &lt;code&gt;remember_token&lt;/code&gt; 새와 &lt;code&gt;$token&lt;/code&gt; . 새로운 &quot;나를 기억하십시오&quot;로그인 시도 또는 사용자가 로그 아웃 할 때 새 토큰이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="1607cc2b26451ed31330840ed139b9288597966a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upper&lt;/code&gt; method converts the given string to uppercase:</source>
          <target state="translated">&lt;code&gt;upper&lt;/code&gt; 방법은 대문자로 주어진 문자열로 변환 :</target>
        </trans-unit>
        <trans-unit id="a76d7b1864bbcb27ac4558588fed8822019c6927" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upsert&lt;/code&gt; method will insert rows that do not exist and update the rows that already exist with the new values. The method's first argument consists of the values to insert or update, while the second argument lists the column(s) that uniquely identify records within the associated table. The method's third and final argument is an array of columns that should be updated if a matching record already exists in the database:</source>
          <target state="translated">&lt;code&gt;upsert&lt;/code&gt; 의 방법은 존재하고 이미 새 값으로 존재하는 행을 업데이트하지 않는 행을 삽입합니다. 메서드의 첫 번째 인수는 삽입 또는 업데이트 할 값으로 구성되고 두 번째 인수는 연결된 테이블 내에서 레코드를 고유하게 식별하는 열을 나열합니다. 메서드의 세 번째이자 마지막 인수는 일치하는 레코드가 데이터베이스에 이미있는 경우 업데이트해야하는 열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="688a6ad75a9a9f40f92def0735c1236a1c79b263" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="1a3c567e6db1579eee645d660fde06e18269a2a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; function generates a fully qualified URL to the given path:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 함수는 주어진 경로에 대한 정규화 된 URL을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="7cd3d2076a08fd03a5ae34f375e9aab083e70a90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; helper may be used to generate arbitrary URLs for your application. The generated URL will automatically use the scheme (HTTP or HTTPS) and host from the current request:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 헬퍼는 응용 프로그램에 대한 임의의 URL을 생성하는 데 사용할 수 있습니다. 생성 된 URL은 현재 요청에서 체계 (HTTP 또는 HTTPS) 및 호스트를 자동으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="221d8b2500eaeeef3b09f14eb5e6e1a1d6500c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; method should return the path of the URL that represents the page. Dusk will use this URL when navigating to the page in the browser:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 방법은 페이지를 나타내는 URL의 경로를 반환해야합니다. Dusk는 브라우저에서 페이지를 탐색 할 때이 URL을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e6cb4eac2f5e9cdb184948de292fd380ab81c08f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validate&lt;/code&gt; method &lt;a href=&quot;https://github.com/laravel/framework/pull/25128&quot;&gt;was added to the &lt;code&gt;Illuminate\Contracts\Validation\Validator&lt;/code&gt; contract&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;validate&lt;/code&gt; 방법은 &lt;a href=&quot;https://github.com/laravel/framework/pull/25128&quot;&gt;에 추가 &lt;code&gt;Illuminate\Contracts\Validation\Validator&lt;/code&gt; 계약&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="6e573afceb6b2ab2f12b4f601582003e27fba2dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validateCredentials&lt;/code&gt; method should compare the given &lt;code&gt;$user&lt;/code&gt; with the &lt;code&gt;$credentials&lt;/code&gt; to authenticate the user. For example, this method should probably use &lt;code&gt;Hash::check&lt;/code&gt; to compare the value of &lt;code&gt;$user-&amp;gt;getAuthPassword()&lt;/code&gt; to the value of &lt;code&gt;$credentials['password']&lt;/code&gt;. This method should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating on whether the password is valid.</source>
          <target state="translated">&lt;code&gt;validateCredentials&lt;/code&gt; 방법은 주어진 비교해야 &lt;code&gt;$user&lt;/code&gt; 와 &lt;code&gt;$credentials&lt;/code&gt; 사용자를 인증 할 수 있습니다. 예를 &lt;code&gt;$user-&amp;gt;getAuthPassword()&lt;/code&gt; 메소드는 &lt;code&gt;Hash::check&lt;/code&gt; 를 사용하여 $ user-&amp;gt; getAuthPassword () 값을 &lt;code&gt;$credentials['password']&lt;/code&gt; 값과 비교해야합니다 . 이 메소드는 비밀번호가 유효한지 여부를 나타내는 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 를 리턴해야 합니다.</target>
        </trans-unit>
        <trans-unit id="59fe7785fa47c76d7d0e3555beb00b535c06923c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validator&lt;/code&gt; function creates a new &lt;a href=&quot;validation&quot;&gt;validator&lt;/a&gt; instance with the given arguments. You may use it instead of the &lt;code&gt;Validator&lt;/code&gt; facade for convenience:</source>
          <target state="translated">&lt;code&gt;validator&lt;/code&gt; 기능은 새로운 생성 &lt;a href=&quot;validation&quot;&gt;유효성 검사기&lt;/a&gt; 지정된 인수와 인스턴스를. 편의를 위해 &lt;code&gt;Validator&lt;/code&gt; 파사드 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c82f51b471412c871f38a80a441df0b5bf2c74ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validator&lt;/code&gt; method of the &lt;code&gt;RegisterController&lt;/code&gt; contains the validation rules for new users of the application. You are free to modify this method as you wish.</source>
          <target state="translated">&lt;code&gt;RegisterController&lt;/code&gt; 의 &lt;code&gt;validator&lt;/code&gt; 메서드 에는 응용 프로그램의 새로운 사용자에 대한 유효성 검사 규칙이 포함되어 있습니다. 원하는대로이 방법을 자유롭게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e40f8770bc46501f61dec899b8fa75b3ace6bb72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; function returns the value it is given. However, if you pass a &lt;code&gt;Closure&lt;/code&gt; to the function, the &lt;code&gt;Closure&lt;/code&gt; will be executed then its result will be returned:</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 함수는이 주어진 값을 반환합니다. 당신이 통과 할 경우, &lt;code&gt;Closure&lt;/code&gt; 함수에의 &lt;code&gt;Closure&lt;/code&gt; 다음의 결과가 반환됩니다 실행됩니다 :</target>
        </trans-unit>
        <trans-unit id="ee49d72e589b96446102bb851c7ff4a52ea159e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values&lt;/code&gt; method returns a new collection with the keys reset to consecutive integers:</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; 방법은 키를 새 컬렉션 연속 정수로 다시 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="df4fcf8d1598924c32f09118a690b9928eee9dc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;vendor&lt;/code&gt; 디렉토리</target>
        </trans-unit>
        <trans-unit id="1d1a6dc554acf48da89aea8bd131ba04a586bc59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor&lt;/code&gt; directory contains your &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt; dependencies.</source>
          <target state="translated">&lt;code&gt;vendor&lt;/code&gt; 디렉토리는 포함 &lt;a href=&quot;https://getcomposer.org&quot;&gt;작곡가의&lt;/a&gt; 종속성을.</target>
        </trans-unit>
        <trans-unit id="c3364016140be4286ae92f33a3f65e2f5ae801e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; method will automatically append a unique hash to the filenames of all compiled files, allowing for more convenient cache busting:</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; 방법은 자동으로 파열 더 편리 캐시를 허용, 모든 컴파일 된 파일의 파일 이름에 고유 한 해시를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="050cf8f6e37ce355be7fbf7764d11c4322d2766b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;via&lt;/code&gt; method receives a &lt;code&gt;$notifiable&lt;/code&gt; instance, which will be an instance of the class to which the notification is being sent. You may use &lt;code&gt;$notifiable&lt;/code&gt; to determine which channels the notification should be delivered on:</source>
          <target state="translated">&lt;code&gt;via&lt;/code&gt; 방법은 수신 &lt;code&gt;$notifiable&lt;/code&gt; 통지가 전송 될되는 클래스의 인스턴스를 인스턴스 것이다. &lt;code&gt;$notifiable&lt;/code&gt; 을 사용 하여 알림을 전달할 채널을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a3cca286ee66d28729e52885d9e8f4931589cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; function retrieves a &lt;a href=&quot;views&quot;&gt;view&lt;/a&gt; instance:</source>
          <target state="translated">&lt;code&gt;view&lt;/code&gt; 기능은 검색 &lt;a href=&quot;views&quot;&gt;뷰&lt;/a&gt; 인스턴스를 :</target>
        </trans-unit>
        <trans-unit id="df9a56952a3c0d80c616e265363336ed7553e22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitFor&lt;/code&gt; method may be used to pause the execution of the test until the element matching the given CSS selector is displayed on the page. By default, this will pause the test for a maximum of five seconds before throwing an exception. If necessary, you may pass a custom timeout threshold as the second argument to the method:</source>
          <target state="translated">&lt;code&gt;waitFor&lt;/code&gt; 방법은 소정의 CSS 선택자와 일치하는 요소가 페이지에 표시 될 때까지 테스트의 실행을 중지하는데 사용될 수있다. 기본적으로 예외를 발생시키기 전에 최대 5 초 동안 테스트를 일시 중지합니다. 필요한 경우 사용자 정의 시간 초과 임계 값을 메소드의 두 번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef8256c7273069e70e76450a29524f0f98c67900" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitForLink&lt;/code&gt; method may be used to wait until the given link text is displayed on the page:</source>
          <target state="translated">&lt;code&gt;waitForLink&lt;/code&gt; 의 방법은 주어진 링크 텍스트가 페이지에 표시 될 때까지 기다려야하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="951ca8cc17583c422892b432b0a40bea6c03f436" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitForText&lt;/code&gt; method may be used to wait until the given text is displayed on the page:</source>
          <target state="translated">&lt;code&gt;waitForText&lt;/code&gt; 의 방법은 주어진 텍스트가 페이지에 표시 될 때까지 기다려야하기 위해 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="e7b01c1dbfe1b7e194a7b2d45ad1bed9c367d6dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wasChanged&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;wasChanged&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="c317e8161b2c1796c9a37bf2f0c4f066c1f06e46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wasChanged&lt;/code&gt; method determines if any attributes were changed when the model was last saved within the current request cycle. You may also pass an attribute name to see if a particular attribute was changed:</source>
          <target state="translated">&lt;code&gt;wasChanged&lt;/code&gt; 의 모델이 지난 현재 요청주기 내에 저장 될 때 어떤 속성이 변경된다면 방법을 결정합니다. 특정 속성이 변경되었는지 확인하기 위해 속성 이름을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4ff16ba4f56fe472d5a9e0aa00f154c02d8fc28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;web.php&lt;/code&gt; file contains routes that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; places in the &lt;code&gt;web&lt;/code&gt; middleware group, which provides session state, CSRF protection, and cookie encryption. If your application does not offer a stateless, RESTful API, all of your routes will most likely be defined in the &lt;code&gt;web.php&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;web.php&lt;/code&gt; 의 파일 경로에 포함 된 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 의 의 장소 &lt;code&gt;web&lt;/code&gt; 세션 상태, CSRF 보호 및 쿠키 암호화를 제공 미들웨어 그룹. 애플리케이션이 상태 비 저장 RESTful API를 제공하지 않으면 모든 경로가 &lt;code&gt;web.php&lt;/code&gt; 파일에 정의 될 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="1b9afdcc3823ac944ec494d111934ddd1cc5cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webpack.mix.js&lt;/code&gt; file is your entry point for all asset compilation. Think of it as a light configuration wrapper around Webpack. Mix tasks can be chained together to define exactly how your assets should be compiled.</source>
          <target state="translated">&lt;code&gt;webpack.mix.js&lt;/code&gt; 의 파일은 모든 자산 편집에 대한 진입 점입니다. Webpack의 간단한 구성 래퍼로 생각하십시오. 믹스 작업을 서로 연결하여 자산 컴파일 방법을 정확하게 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc709626cea7579198349f724cf88ed417fced48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method also accepts a Closure as its second argument, allowing you to calculate the resulting value only if the given condition is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 방법은 주어진 조건이있는 경우에만이 결과 값을 산출 할 수 있도록, 두 번째 인수로 폐쇄를 받아 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e05b16d71e353e16c19cee63da6fff450effda8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method invokes the given Closure if a given condition is true. The Closure will receive the fluent string instance:</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 메소드 호출 주어진 폐쇄 주어진 조건에 해당하는 경우. 클로저는 유창한 문자열 인스턴스를받습니다.</target>
        </trans-unit>
        <trans-unit id="a167d2902d4141320a7cd5b7af4eef99137d334e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method may be used to limit the execution of a task based on the result of a given truth test. In other words, if the given &lt;code&gt;Closure&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the task will execute as long as no other constraining conditions prevent the task from running:</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 방법은 사실 소정의 테스트의 결과에 기초하여 태스크의 실행을 제한하기 위해 사용될 수있다. 즉, 주어진 &lt;code&gt;Closure&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 다른 제한 조건이 없어도 작업이 실행되지 않는 한 작업이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c9e45add003663af7b0ee91e469eb2c531ce4b97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method only executes the given Closure when the first parameter is &lt;code&gt;true&lt;/code&gt;. If the first parameter is &lt;code&gt;false&lt;/code&gt;, the Closure will not be executed.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 첫 번째 파라미터 인 경우에있어서 만 주어진 폐쇄를 실행 &lt;code&gt;true&lt;/code&gt; . 첫 번째 매개 변수가 &lt;code&gt;false&lt;/code&gt; 이면 클로저가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1cf87d12a9b6c0c4c16bd78877b10b6d9323ad72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; method will execute the given callback when the first argument given to the method evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 방법에게 주어진 첫 번째 인수가 평가할 때 방법은 주어진 콜백을 실행합니다 &lt;code&gt;true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d34ca05a92d0dc6c0b00510c34340a543483b32c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whenEmpty&lt;/code&gt; method invokes the given Closure if the string is empty. If the Closure returns a value, that value will also be returned by the &lt;code&gt;whenEmpty&lt;/code&gt; method. If the Closure does not return a value, the fluent string instance will be returned:</source>
          <target state="translated">&lt;code&gt;whenEmpty&lt;/code&gt; 의 문자열이 비어있는 경우 방법은 주어진 폐쇄를 호출합니다. Closure가 값을 반환하면 해당 값은 &lt;code&gt;whenEmpty&lt;/code&gt; 메서드 에서도 반환됩니다 . 클로저가 값을 반환하지 않으면 유창한 문자열 인스턴스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f35d35f1894e3b4bf90ba2e6770346d75875a541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whenEmpty&lt;/code&gt; method will execute the given callback when the collection is empty:</source>
          <target state="translated">&lt;code&gt;whenEmpty&lt;/code&gt; 의 컬렉션이 비어있을 때 방법은 주어진 콜백을 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="0bb41d8cb0e9a6b84e73ab7ef2c182bd12fc1eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whenFilled&lt;/code&gt; method will execute the given callback if a value is present on the request and is not empty:</source>
          <target state="translated">&lt;code&gt;whenFilled&lt;/code&gt; 값이 요청에 존재하고 비어 있지 않은 경우에있어서, 상기 소정의 콜백을 실행한다 :</target>
        </trans-unit>
        <trans-unit id="9c0d64a92a5a8114ca46d609f22057698b57909e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whenHas&lt;/code&gt; method will execute the given callback if a value is present on the request:</source>
          <target state="translated">&lt;code&gt;whenHas&lt;/code&gt; 의 값은 요청에 존재하는 경우에있어서, 상기 소정의 콜백을 실행한다 :</target>
        </trans-unit>
        <trans-unit id="014b48628a3bedf62a759de33943ec7ff8f07bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whenNotEmpty&lt;/code&gt; method will execute the given callback when the collection is not empty:</source>
          <target state="translated">&lt;code&gt;whenNotEmpty&lt;/code&gt; 의 컬렉션이 비어 있지 않은 경우 방법은 주어진 콜백을 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="410d992dd6549df41bc10972072d08d6911df2d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method filters the collection by a given key / value pair:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 방법은 소정의 키 / 값 쌍의 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="01bd9a083ce332dbb25f9d51689c415a8b59c923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-wherestrict&quot;&gt;&lt;code&gt;whereStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 방법 용도는 &quot;느슨한&quot;비교, 항목 값을 검사 정수 값 문자열을 의미 같은 값의 정수로 동일하다고한다. &quot;엄격한&quot;비교를 사용하여 필터링 하려면 &lt;a href=&quot;#method-wherestrict&quot;&gt; &lt;code&gt;whereStrict&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a04d2a3cea0cba137b28fa33be09475e2bd2ed9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereBetween&lt;/code&gt; method filters the collection within a given range:</source>
          <target state="translated">&lt;code&gt;whereBetween&lt;/code&gt; 의 방법은 소정의 범위 내에서 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="8c466231d08885d8b9e43aa06a56749e535e7b56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereBetween&lt;/code&gt; method verifies that a column's value is between two values:</source>
          <target state="translated">&lt;code&gt;whereBetween&lt;/code&gt; 의 열의 값은 두 값 사이에 있는지를 검증 방법 :</target>
        </trans-unit>
        <trans-unit id="facd195a751497e89437869083bbe8fa6dd55a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereColumn&lt;/code&gt; method can also be passed an array of multiple conditions. These conditions will be joined using the &lt;code&gt;and&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;whereColumn&lt;/code&gt; 의 방법은 여러 조건들의 어레이를 통과 할 수있다. 이러한 조건은 &lt;code&gt;and&lt;/code&gt; 연산자를 사용하여 결합됩니다 .</target>
        </trans-unit>
        <trans-unit id="d054a8e7fea41e1fc2fa5fe065de148fc0f878e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereColumn&lt;/code&gt; method may be used to verify that two columns are equal:</source>
          <target state="translated">&lt;code&gt;whereColumn&lt;/code&gt; 의 방법은 두 개의 열이 동일한 지 확인하는 데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="f560e9404364449f549c120dc05eecb4791163f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereDate&lt;/code&gt; method may be used to compare a column's value against a date:</source>
          <target state="translated">&lt;code&gt;whereDate&lt;/code&gt; 방법은 날짜에 대해 열의 값을 비교하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="69db8265e1882dbefa4a0433435e5db156dbce54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereDay&lt;/code&gt; method may be used to compare a column's value against a specific day of a month:</source>
          <target state="translated">&lt;code&gt;whereDay&lt;/code&gt; 의 방법은 한 달의 특정 일에 대한 열의 값을 비교하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bea6fe8efd22229f45070543000423cb868fdcb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereExists&lt;/code&gt; method allows you to write &lt;code&gt;where exists&lt;/code&gt; SQL clauses. The &lt;code&gt;whereExists&lt;/code&gt; method accepts a &lt;code&gt;Closure&lt;/code&gt; argument, which will receive a query builder instance allowing you to define the query that should be placed inside of the &quot;exists&quot; clause:</source>
          <target state="translated">&lt;code&gt;whereExists&lt;/code&gt; 의 방법은 당신이 쓸 수 &lt;code&gt;where exists&lt;/code&gt; SQL 절을. &lt;code&gt;whereExists&lt;/code&gt; 의 방법은 받아 &lt;code&gt;Closure&lt;/code&gt; 당신이 절에 &quot;존재&quot;의 내부에 배치해야 쿼리를 정의 할 수 있도록 쿼리 빌더 인스턴스를 받게됩니다 인수를 :</target>
        </trans-unit>
        <trans-unit id="538abf161dd6fa54a9381f70f42712e5c7ff8431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method filters the collection by a given key / value contained within the given array:</source>
          <target state="translated">&lt;code&gt;whereIn&lt;/code&gt; 있어서, 상기 소정의 어레이 내에 포함 된 소정의 키 / 값으로 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="8736eb833e3a9a142246a6a4a4256e6480d3454c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-whereinstrict&quot;&gt;&lt;code&gt;whereInStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">&lt;code&gt;whereIn&lt;/code&gt; 방법의 용도는 &quot;느슨한&quot;비교, 항목 값을 검사 정수 값 문자열을 의미 같은 값의 정수로 동일하다고한다. &quot;엄격한&quot;비교를 사용하여 필터링 하려면 &lt;a href=&quot;#method-whereinstrict&quot;&gt; &lt;code&gt;whereInStrict&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4de77fec88fcc5378b177d6bcf21e6e19018cca3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereIn&lt;/code&gt; method verifies that a given column's value is contained within the given array:</source>
          <target state="translated">&lt;code&gt;whereIn&lt;/code&gt; 특정 컬럼의 값이 소정의 어레이에 포함되어 있는지를 검증 방법 :</target>
        </trans-unit>
        <trans-unit id="c279e284a322f29f3050cb5778545b92f191d530" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereInstanceOf&lt;/code&gt; method filters the collection by a given class type:</source>
          <target state="translated">&lt;code&gt;whereInstanceOf&lt;/code&gt; 방법은 지정된 클래스 형으로 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="7f124867947e37c79f185e923c0eaa1c5cc48279" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereMonth&lt;/code&gt; method may be used to compare a column's value against a specific month of a year:</source>
          <target state="translated">&lt;code&gt;whereMonth&lt;/code&gt; 방법은 년의 특정 월에 대한 열의 값을 비교하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="02299fc2f00fc014f3a3ae4006edf85b7c5eeb46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotBetween&lt;/code&gt; method filters the collection within a given range:</source>
          <target state="translated">&lt;code&gt;whereNotBetween&lt;/code&gt; 의 방법은 소정의 범위 내에서 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="d23007edcaa07be8b66242c7370e556076cbc7e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotBetween&lt;/code&gt; method verifies that a column's value lies outside of two values:</source>
          <target state="translated">&lt;code&gt;whereNotBetween&lt;/code&gt; 의 두 값의 칼럼의 값이 거짓의 외부에있어서의 검증한다 :</target>
        </trans-unit>
        <trans-unit id="d5d1bf39ce87844cb8cb70620cc8dee413a3caa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method filters the collection by a given key / value not contained within the given array:</source>
          <target state="translated">&lt;code&gt;whereNotIn&lt;/code&gt; 방법은 소정의 어레이에 포함되지 않은 소정의 키 / 값으로 컬렉션을 필터링 :</target>
        </trans-unit>
        <trans-unit id="aaae8337c2ce98faf771ab436ba9f571ffb387b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-wherenotinstrict&quot;&gt;&lt;code&gt;whereNotInStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">&lt;code&gt;whereNotIn&lt;/code&gt; 에 있어서의 용도는 &quot;느슨한&quot;비교, 항목 값을 검사 정수 값 문자열을 의미 같은 값의 정수로 동일하다고한다. &lt;a href=&quot;#method-wherenotinstrict&quot;&gt; &lt;code&gt;whereNotInStrict&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &quot;엄격한&quot;비교를 사용하여 필터링 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d2f7f031f8f5ed9e696a94e99a5846bb49f1eb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotIn&lt;/code&gt; method verifies that the given column's value is &lt;strong&gt;not&lt;/strong&gt; contained in the given array:</source>
          <target state="translated">&lt;code&gt;whereNotIn&lt;/code&gt; 의 지정된 열의 값이되는 방법을 검증 &lt;strong&gt;하지&lt;/strong&gt; 주어진 배열에 포함 :</target>
        </trans-unit>
        <trans-unit id="9bf30ecd20f82c729e1f7dffde54920323f982e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotNull&lt;/code&gt; method filters items where the given key is not null:</source>
          <target state="translated">&lt;code&gt;whereNotNull&lt;/code&gt; 지정된 키가 null가 아닌 방법 필터 항목 :</target>
        </trans-unit>
        <trans-unit id="9a8e4f70bb765aa86171b4c8329cef3b792ecbd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNotNull&lt;/code&gt; method verifies that the column's value is not &lt;code&gt;NULL&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;whereNotNull&lt;/code&gt; 열의 값이 아니라고 방법를 검증 &lt;code&gt;NULL&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a9b7a53371c294b70dc7179c98366da8b867e3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNull&lt;/code&gt; method filters items where the given key is null:</source>
          <target state="translated">&lt;code&gt;whereNull&lt;/code&gt; 지정된 키가 null의 경우 방법은 항목을 필터링 :</target>
        </trans-unit>
        <trans-unit id="352acd613acbaedf7e686b7f27de67607ef3cb1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereNull&lt;/code&gt; method verifies that the value of the given column is &lt;code&gt;NULL&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;whereNull&lt;/code&gt; 지정된 열의 값인지를 검증 방법 &lt;code&gt;NULL&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="98b9e670524cfa047a29b3de1b28878aa1713d85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereRaw&lt;/code&gt; and &lt;code&gt;orWhereRaw&lt;/code&gt; methods can be used to inject a raw &lt;code&gt;where&lt;/code&gt; clause into your query. These methods accept an optional array of bindings as their second argument:</source>
          <target state="translated">&lt;code&gt;whereRaw&lt;/code&gt; 및 &lt;code&gt;orWhereRaw&lt;/code&gt; 방법은 원료를 주입하는 데 사용할 수있는 &lt;code&gt;where&lt;/code&gt; 절 쿼리에. 이 메소드는 선택적 바인딩 배열을 두 번째 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="449e0b26672891aa912ff68977ec4c047d17f9df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereTime&lt;/code&gt; method may be used to compare a column's value against a specific time:</source>
          <target state="translated">&lt;code&gt;whereTime&lt;/code&gt; 의 방법은 특정 시간에 대하여 열의 값을 비교하는데 사용될 수있다 :</target>
        </trans-unit>
        <trans-unit id="4dc10b91d26041f637e47611f53159e9bb5d9a1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whereYear&lt;/code&gt; method may be used to compare a column's value against a specific year:</source>
          <target state="translated">&lt;code&gt;whereYear&lt;/code&gt; 의 방법은 특정 연도에 대한 열의 값을 비교하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fbf861dc58d410fa0ba8b699b2e520096c6bf787" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with&lt;/code&gt; function returns the value it is given. If a &lt;code&gt;Closure&lt;/code&gt; is passed as the second argument to the function, the &lt;code&gt;Closure&lt;/code&gt; will be executed and its result will be returned:</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 함수는이 주어진 값을 반환합니다. 경우 &lt;code&gt;Closure&lt;/code&gt; 함수의 두 번째 인수로서 전달되면, &lt;code&gt;Closure&lt;/code&gt; 실행되고 그 결과가 반환 될 것이다 :</target>
        </trans-unit>
        <trans-unit id="960c2cef58d938232be13404119f75dbba190f48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withPath&lt;/code&gt; method allows you to customize the URI used by the paginator when generating links. For example, if you want the paginator to generate links like &lt;code&gt;http://example.com/custom/url?page=N&lt;/code&gt;, you should pass &lt;code&gt;custom/url&lt;/code&gt; to the &lt;code&gt;withPath&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;withPath&lt;/code&gt; 의 방법을 사용하면 링크를 생성 할 때 URI가 매기기가 사용하는 사용자 정의 할 수 있습니다. 예를 들어, 페이지 매김자가 &lt;code&gt;http://example.com/custom/url?page=N&lt;/code&gt; 과 같은 링크를 생성 하도록하려면 &lt;code&gt;custom/url&lt;/code&gt; 을 &lt;code&gt;withPath&lt;/code&gt; 메소드에 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e3682fa92140f63a2cad5fce4a0a1b539fb3f6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withSwiftMessage&lt;/code&gt; method of the &lt;code&gt;Mailable&lt;/code&gt; base class allows you to register a callback which will be invoked with the raw SwiftMailer message instance before sending the message. This gives you an opportunity to customize the message before it is delivered:</source>
          <target state="translated">&lt;code&gt;Mailable&lt;/code&gt; 기본 클래스 의 &lt;code&gt;withSwiftMessage&lt;/code&gt; 메소드를 사용하면 메시지를 보내기 전에 원시 SwiftMailer 메시지 인스턴스로 호출 될 콜백을 등록 할 수 있습니다. 그러면 메시지가 배달되기 전에 메시지를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be7e0258b6ba429be0d884e2714a7064e4b62bfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withTrashed&lt;/code&gt; method may also be used on a &lt;a href=&quot;eloquent-relationships&quot;&gt;relationship&lt;/a&gt; query:</source>
          <target state="translated">&lt;code&gt;withTrashed&lt;/code&gt; 방법은 또한에 사용될 수있는 &lt;a href=&quot;eloquent-relationships&quot;&gt;관계&lt;/a&gt; 쿼리 :</target>
        </trans-unit>
        <trans-unit id="bcb564f06b1733d8f78c0055860def57ed1ead3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withoutMiddleware&lt;/code&gt; method can only remove route middleware and does not apply to &lt;a href=&quot;#global-middleware&quot;&gt;global middleware&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;withoutMiddleware&lt;/code&gt; 의 메소드는 경로 미들웨어를 제거 할 수 있습니다와 적용되지 않습니다 &lt;a href=&quot;#global-middleware&quot;&gt;글로벌 미들웨어&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e803f4ac9e01234803d27db50e5880d0291c723" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withoutWrapping&lt;/code&gt; method only affects the outer-most response and will not remove &lt;code&gt;data&lt;/code&gt; keys that you manually add to your own resource collections.</source>
          <target state="translated">&lt;code&gt;withoutWrapping&lt;/code&gt; 의 방법은 가장 바깥 쪽 반응에 영향을 미치고 제거하지 않습니다 &lt;code&gt;data&lt;/code&gt; 수동으로 자신의 자원 콜렉션에 추가하는 것이 키를.</target>
        </trans-unit>
        <trans-unit id="7a09bc597ab62519c7f2da8a179f6db0d448ba14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withoutWrapping&lt;/code&gt; method only affects the outermost response and will not remove &lt;code&gt;data&lt;/code&gt; keys that you manually add to your own resource collections.</source>
          <target state="translated">&lt;code&gt;withoutWrapping&lt;/code&gt; 의 방법은 가장 바깥 쪽 반응에 영향을 미치고 제거하지 않습니다 &lt;code&gt;data&lt;/code&gt; 수동으로 자신의 자원 콜렉션에 추가하는 것이 키를.</target>
        </trans-unit>
        <trans-unit id="bf4d71090910c3b72672280bc906b9b3c31e1943" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;words&lt;/code&gt; method limits the number of words in a string:</source>
          <target state="translated">&lt;code&gt;words&lt;/code&gt; 방법은 문자열에서 단어의 수를 제한합니다 :</target>
        </trans-unit>
        <trans-unit id="e7194173cd4a700b8ff92a13e90f2b2697743bc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method should write the given &lt;code&gt;$data&lt;/code&gt; string associated with the &lt;code&gt;$sessionId&lt;/code&gt; to some persistent storage system, such as MongoDB, Dynamo, etc. Again, you should not perform any serialization - Laravel will have already handled that for you.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 방법은 주어진 작성해야 &lt;code&gt;$data&lt;/code&gt; 과 관련된 문자열 &lt;code&gt;$sessionId&lt;/code&gt; 같은 MongoDB를, 디나모 등 다시 같은 일부 영구 저장 시스템에를, 당신은 어떤 직렬화를 수행해서는 안 - Laravel은 이미 당신을 위해 것을 처리하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4197ee522aac639d56fdc3ad3dd44ba679b6657b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;zip&lt;/code&gt; method merges together the values of the given array with the values of the original collection at the corresponding index:</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; 함께 병합 방법 해당 인덱스의 원래 컬렉션의 값으로 주어진 배열의 값 :</target>
        </trans-unit>
        <trans-unit id="139b1714797076993db0def9c76841f738023179" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ $slot }}&lt;/code&gt; variable will contain the content we wish to inject into the component. Now, to construct this component, we can use the &lt;code&gt;@component&lt;/code&gt; Blade directive:</source>
          <target state="translated">&lt;code&gt;{{ $slot }}&lt;/code&gt; 변수는 우리가 구성 요소에 주입하고자하는 내용이 포함됩니다. 이제이 컴포넌트를 구성하기 위해 &lt;code&gt;@component&lt;/code&gt; Blade 지시문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a51ab42825aa8b1761821dc400fd6167dd9b5c60" translate="yes" xml:space="preserve">
          <source>The APC wrapper instance.</source>
          <target state="translated">APC 랩퍼 인스턴스.</target>
        </trans-unit>
        <trans-unit id="25475893b2eb01d88bafe77d78bc4cf441217cbb" translate="yes" xml:space="preserve">
          <source>The API based drivers such as Mailgun and Postmark are often simpler and faster than SMTP servers. If possible, you should use one of these drivers. All of the API drivers require the Guzzle HTTP library, which may be installed via the Composer package manager:</source>
          <target state="translated">Mailgun 및 Postmark와 같은 API 기반 드라이버는 종종 SMTP 서버보다 더 간단하고 빠릅니다. 가능하면 이러한 드라이버 중 하나를 사용해야합니다. 모든 API 드라이버에는 Composer 패키지 관리자를 통해 설치할 수있는 Guzzle HTTP 라이브러리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3a3ca3e538c3c272a5d5f2699f282498e20e56b4" translate="yes" xml:space="preserve">
          <source>The API based drivers such as Mailgun and SparkPost are often simpler and faster than SMTP servers. If possible, you should use one of these drivers. All of the API drivers require the Guzzle HTTP library, which may be installed via the Composer package manager:</source>
          <target state="translated">Mailgun 및 SparkPost와 같은 API 기반 드라이버는 종종 SMTP 서버보다 단순하고 빠릅니다. 가능하면이 드라이버 중 하나를 사용해야합니다. 모든 API 드라이버에는 Guzzle HTTP 라이브러리가 필요하며 Composer 패키지 관리자를 통해 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="301c07776874fb44ea2a534c274bd6022326d7e2" translate="yes" xml:space="preserve">
          <source>The Amazon SES instance.</source>
          <target state="translated">Amazon SES 인스턴스</target>
        </trans-unit>
        <trans-unit id="bed8835e414caa95ddc2eea515011bcd2fd3b4ab" translate="yes" xml:space="preserve">
          <source>The Amazon SES transmission options.</source>
          <target state="translated">Amazon SES 전송 옵션.</target>
        </trans-unit>
        <trans-unit id="d73a27d21a7df4b693a3269a78ec66e5fa2750f6" translate="yes" xml:space="preserve">
          <source>The Amazon SQS client instance.</source>
          <target state="translated">Amazon SQS 클라이언트 인스턴스.</target>
        </trans-unit>
        <trans-unit id="4edeb1d5b6f5cff40bd82d818fea24bcde5f9663" translate="yes" xml:space="preserve">
          <source>The Amazon SQS instance.</source>
          <target state="translated">Amazon SQS 인스턴스.</target>
        </trans-unit>
        <trans-unit id="42a36b7d449233cd612a03fdecd320df732b1a40" translate="yes" xml:space="preserve">
          <source>The Amazon SQS job instance.</source>
          <target state="translated">Amazon SQS 작업 인스턴스</target>
        </trans-unit>
        <trans-unit id="582b9297843ffde5fb89e7123408450b961f99e6" translate="yes" xml:space="preserve">
          <source>The Amazon SQS queue service has a maximum delay time of 15 minutes.</source>
          <target state="translated">Amazon SQS 대기열 서비스의 최대 지연 시간은 15 분입니다.</target>
        </trans-unit>
        <trans-unit id="ec8b5be5a2804781fe954cbe93c3a6c8cc4915f2" translate="yes" xml:space="preserve">
          <source>The App Directory</source>
          <target state="translated">앱 디렉토리</target>
        </trans-unit>
        <trans-unit id="0811ac3b92a941731f1a6583a7d2737802bd0fba" translate="yes" xml:space="preserve">
          <source>The Argon2i driver requires PHP 7.2.0 or greater and the Argon2id driver requires PHP 7.3.0 or greater.</source>
          <target state="translated">Argon2i 드라이버에는 PHP 7.2.0 이상이 필요하고 Argon2id 드라이버에는 PHP 7.3.0 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b6a1811741a90c46583835239ec14215c0845c20" translate="yes" xml:space="preserve">
          <source>The Artisan &lt;code&gt;serve&lt;/code&gt; command has been improved with automatic reloading when environment variable changes are detected within your local &lt;code&gt;.env&lt;/code&gt; file. Previously, the command had to be manually stopped and restarted.</source>
          <target state="translated">Artisan &lt;code&gt;serve&lt;/code&gt; 명령이 로컬 &lt;code&gt;.env&lt;/code&gt; 파일 내에서 환경 변수 변경이 감지 될 때 자동 다시로드로 개선되었습니다 . 이전에는 명령을 수동으로 중지하고 다시 시작해야했습니다.</target>
        </trans-unit>
        <trans-unit id="b812ae04cfbeeb4b318414708e3a2a2b5ffa0d00" translate="yes" xml:space="preserve">
          <source>The Artisan CLI can generate a new provider via the &lt;code&gt;make:provider&lt;/code&gt; command:</source>
          <target state="translated">Artisan CLI는 &lt;code&gt;make:provider&lt;/code&gt; 명령을 통해 새 공급자를 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6d9cb30d7a3e95963dff46e403f348465030dc0" translate="yes" xml:space="preserve">
          <source>The Artisan application instance.</source>
          <target state="translated">Artisan 애플리케이션 인스턴스.</target>
        </trans-unit>
        <trans-unit id="b890347ba26562cd39f537419d5de7d92fbebd0d" translate="yes" xml:space="preserve">
          <source>The Artisan commands provided by the application.</source>
          <target state="translated">응용 프로그램에서 제공하는 장인 명령.</target>
        </trans-unit>
        <trans-unit id="405e1147e18b32577e93a27841b5803d5a18f9de" translate="yes" xml:space="preserve">
          <source>The Artisan console's &lt;code&gt;make&lt;/code&gt; commands are used to create a variety of classes, such as controllers, jobs, migrations, and tests. These classes are generated using &quot;stub&quot; files that are populated with values based on your input. However, you may sometimes wish to make small changes to files generated by Artisan. To accomplish this, you may use the &lt;code&gt;stub:publish&lt;/code&gt; command to publish the most common stubs for customization:</source>
          <target state="translated">Artisan 콘솔의 &lt;code&gt;make&lt;/code&gt; 명령은 컨트롤러, 작업, 마이그레이션 및 테스트와 같은 다양한 클래스를 만드는 데 사용됩니다. 이러한 클래스는 입력을 기반으로 한 값으로 채워진 &quot;스텁&quot;파일을 사용하여 생성됩니다. 그러나 Artisan이 생성 한 파일을 약간 변경하고자 할 수도 있습니다. 이를 위해 &lt;code&gt;stub:publish&lt;/code&gt; 명령을 사용하여 사용자 정의를위한 가장 일반적인 스텁을 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="627fecde23153b2f37c2029df2e270d916b660d0" translate="yes" xml:space="preserve">
          <source>The Authenticatable Contract</source>
          <target state="translated">인증 가능한 계약</target>
        </trans-unit>
        <trans-unit id="df05ff167e45fd1370f93ca499bb91545ab686cc" translate="yes" xml:space="preserve">
          <source>The Authorization Code grant with &quot;Proof Key for Code Exchange&quot; (PKCE) is a secure way to authenticate single page applications or native applications to access your API. This grant should be used when you can't guarantee that the client secret will be stored confidentially or in order to mitigate the threat of having the authorization code intercepted by an attacker. A combination of a &quot;code verifier&quot; and a &quot;code challenge&quot; replaces the client secret when exchanging the authorization code for an access token.</source>
          <target state="translated">&quot;코드 교환을위한 증명 키&quot;(PKCE)가 포함 된 인증 코드 부여는 단일 페이지 애플리케이션 또는 기본 애플리케이션을 인증하여 API에 액세스하는 안전한 방법입니다. 이 권한은 클라이언트 비밀이 기밀로 저장 될 것이라고 보장 할 수 없거나 공격자가 인증 코드를 가로채는 위협을 완화하기 위해 사용해야합니다. 액세스 토큰에 대한 인증 코드를 교환 할 때 &quot;코드 검증 자&quot;와 &quot;코드 챌린지&quot;의 조합이 클라이언트 암호를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b9e05ba27d0dac24a40fdd0fb391833fbcfeb4b9" translate="yes" xml:space="preserve">
          <source>The Base Collection</source>
          <target state="translated">베이스 컬렉션</target>
        </trans-unit>
        <trans-unit id="a093f7952b1838c4dd6aeda28ea5e1fc38030960" translate="yes" xml:space="preserve">
          <source>The Basics</source>
          <target state="translated">기초</target>
        </trans-unit>
        <trans-unit id="c369a6457a4ec9e5e85887f082a5e39488e72769" translate="yes" xml:space="preserve">
          <source>The Blade &quot;or&quot; operator has been removed in favor of PHP's built-in &lt;code&gt;??&lt;/code&gt; &quot;null coalesce&quot; operator, which has the same purpose and functionality:</source>
          <target state="translated">블레이드 &quot;또는&quot;연산자는 PHP의 내장 &lt;code&gt;??&lt;/code&gt; 동일한 목적과 기능을 가진 &quot;널 병합&quot;연산자 :</target>
        </trans-unit>
        <trans-unit id="dc3bf2103e087a2317c09362d97c210b68379ba8" translate="yes" xml:space="preserve">
          <source>The Blade compiler instance.</source>
          <target state="translated">블레이드 컴파일러 인스턴스</target>
        </trans-unit>
        <trans-unit id="ee00ec3206c354a0ce0d139df2f9dc15d887f13f" translate="yes" xml:space="preserve">
          <source>The Blueprint resolver callback.</source>
          <target state="translated">블루 프린트 리졸버 콜백</target>
        </trans-unit>
        <trans-unit id="443e53b3c6779c58ed300efdd6feb989dbb2ad73" translate="yes" xml:space="preserve">
          <source>The Boot Method</source>
          <target state="translated">부팅 방법</target>
        </trans-unit>
        <trans-unit id="2edc9b3f11d52ea45dd64f6e7131b0096d052a91" translate="yes" xml:space="preserve">
          <source>The Bootstrap Directory</source>
          <target state="translated">부트 스트랩 디렉토리</target>
        </trans-unit>
        <trans-unit id="04ade812a07a1a257ee3ae9e6a975d1ab8ef4b1e" translate="yes" xml:space="preserve">
          <source>The Broadcasting Directory</source>
          <target state="translated">방송 디렉토리</target>
        </trans-unit>
        <trans-unit id="c4ee3fe5e6f9d75ad0c857d142de5a0d12d8db65" translate="yes" xml:space="preserve">
          <source>The Bus dispatcher instance.</source>
          <target state="translated">버스 디스패처 인스턴스</target>
        </trans-unit>
        <trans-unit id="0c4c25f60a5dddb880d4d49a3b8fdd6cb342a6d9" translate="yes" xml:space="preserve">
          <source>The CSRF middleware is automatically disabled when &lt;a href=&quot;testing&quot;&gt;running tests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;testing&quot;&gt;테스트를 실행할&lt;/a&gt; 때 CSRF 미들웨어가 자동으로 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="0bfff69c02840b8b9f3411a8b481bd292605cfaa" translate="yes" xml:space="preserve">
          <source>The CSRF middleware is automatically disabled when running tests.</source>
          <target state="translated">테스트를 실행할 때 CSRF 미들웨어가 자동으로 사용 안함으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="b29b317c7a666531a77e36b2ccadf2dcef4a8354" translate="yes" xml:space="preserve">
          <source>The Cache Helper</source>
          <target state="translated">캐시 도우미</target>
        </trans-unit>
        <trans-unit id="82367729da5b433155c939f63eee45a3a4421563" translate="yes" xml:space="preserve">
          <source>The Carbon factory that should be used when creating dates.</source>
          <target state="translated">날짜를 만들 때 사용해야하는 탄소 공장.</target>
        </trans-unit>
        <trans-unit id="c5fc0be7c36bb038025db5cc5d69ce8eacbcc81b" translate="yes" xml:space="preserve">
          <source>The Cashier service provider registers its own database migration directory, so remember to migrate your database after installing the package. The Cashier migrations will add several columns to your &lt;code&gt;users&lt;/code&gt; table as well as create a new &lt;code&gt;subscriptions&lt;/code&gt; table to hold all of your customer's subscriptions:</source>
          <target state="translated">계산원 서비스 제공 업체는 자체 데이터베이스 마이그레이션 디렉토리를 등록하므로 패키지를 설치 한 후 데이터베이스를 마이그레이션해야합니다. 캐셔 마이그레이션은 &lt;code&gt;users&lt;/code&gt; 테이블 에 여러 열을 추가하고 고객의 모든 &lt;code&gt;subscriptions&lt;/code&gt; 을 보관할 새 구독 테이블을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="25a0c70c8857f118b0c2c7a4e5a6de8252ae92b1" translate="yes" xml:space="preserve">
          <source>The Cashier service provider registers its own database migration directory, so remember to migrate your database after installing the package. The Cashier migrations will create a new &lt;code&gt;customers&lt;/code&gt; table. In addition, a new &lt;code&gt;subscriptions&lt;/code&gt; table will be created to store all of your customer's subscriptions. Finally, a new &lt;code&gt;receipts&lt;/code&gt; table will be created to store all of your receipt information:</source>
          <target state="translated">계산원 서비스 제공 업체는 자체 데이터베이스 마이그레이션 디렉토리를 등록하므로 패키지를 설치 한 후 데이터베이스를 마이그레이션해야합니다. 계산원 마이그레이션은 새 &lt;code&gt;customers&lt;/code&gt; 테이블을 생성 합니다. 또한 고객의 모든 구독을 저장하기 위해 새 &lt;code&gt;subscriptions&lt;/code&gt; 테이블이 생성됩니다. 마지막으로 모든 영수증 정보를 저장 하는 새 &lt;code&gt;receipts&lt;/code&gt; 테이블이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="a3302227ce2dd19975e857bb37ac4f2d96c87635" translate="yes" xml:space="preserve">
          <source>The Closure is bound to the underlying command instance, so you have full access to all of the helper methods you would typically be able to access on a full command class.</source>
          <target state="translated">클로저는 기본 명령 인스턴스에 바인딩되므로 일반적으로 전체 명령 클래스에서 액세스 할 수있는 모든 도우미 메서드에 완전히 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be15aa3f3f04766142932bdcc3e4ed164c091547" translate="yes" xml:space="preserve">
          <source>The Closure should return a string. If the returned string corresponds to an existing view, that view will be rendered; otherwise, the returned string will be evaluated as an inline Blade view.</source>
          <target state="translated">클로저는 문자열을 반환해야합니다. 반환 된 문자열이 기존 뷰에 해당하면 해당 뷰가 렌더링됩니다. 그렇지 않으면 반환 된 문자열이 인라인 블레이드 뷰로 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="7a6f3476c88d39caece37eb5c0acd8fc671bca47" translate="yes" xml:space="preserve">
          <source>The Closure's transformed use variables</source>
          <target state="translated">클로저의 변형 된 사용 변수</target>
        </trans-unit>
        <trans-unit id="0b3e5443f610c4b8b6371427d11438159e462e32" translate="yes" xml:space="preserve">
          <source>The Closure's use variables</source>
          <target state="translated">클로저의 사용 변수</target>
        </trans-unit>
        <trans-unit id="04ff17d4b4a611bda7d92f6f57dcea95503691bf" translate="yes" xml:space="preserve">
          <source>The Composer class instance.</source>
          <target state="translated">Composer 클래스 인스턴스</target>
        </trans-unit>
        <trans-unit id="bd56108d697599887c905a14eb25604c8489f793" translate="yes" xml:space="preserve">
          <source>The Composer instance.</source>
          <target state="translated">Composer 인스턴스</target>
        </trans-unit>
        <trans-unit id="2c26013b5360a9e04cb59d82a55f3f813a7a0ac1" translate="yes" xml:space="preserve">
          <source>The Config Directory</source>
          <target state="translated">구성 디렉토리</target>
        </trans-unit>
        <trans-unit id="0339c6f7a702b65b33234bad2b1977d9c9a8876b" translate="yes" xml:space="preserve">
          <source>The Console Directory</source>
          <target state="translated">콘솔 디렉토리</target>
        </trans-unit>
        <trans-unit id="6444856e117b9eb2955667c60ff70f9912c299fe" translate="yes" xml:space="preserve">
          <source>The Create Method</source>
          <target state="translated">작성 방법</target>
        </trans-unit>
        <trans-unit id="9efa992fda7990df3dbc808b31e95525222cf89e" translate="yes" xml:space="preserve">
          <source>The Cron expression representing the event's frequency.</source>
          <target state="translated">이벤트 빈도를 나타내는 Cron 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="a69b776a26b2608d569e11c844cb25054996a70a" translate="yes" xml:space="preserve">
          <source>The Cron job for the site will be defined in the &lt;code&gt;/etc/cron.d&lt;/code&gt; folder of the virtual machine.</source>
          <target state="translated">사이트의 Cron 작업 은 가상 머신 의 &lt;code&gt;/etc/cron.d&lt;/code&gt; 폴더에 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a41270007681a4741ff9ce92f9696efaec03df7" translate="yes" xml:space="preserve">
          <source>The Database Directory</source>
          <target state="translated">데이터베이스 디렉토리</target>
        </trans-unit>
        <trans-unit id="30b681dbc230a800cac87280ebbe9fd370bca80a" translate="yes" xml:space="preserve">
          <source>The Default Route Files</source>
          <target state="translated">기본 경로 파일</target>
        </trans-unit>
        <trans-unit id="d23f7c547dd7384fcb6d336931999d2cadb1b8a4" translate="yes" xml:space="preserve">
          <source>The DynamoDB client instance.</source>
          <target state="translated">DynamoDB 클라이언트 인스턴스.</target>
        </trans-unit>
        <trans-unit id="dbd13e1c49dfd339aadae35f9ceabbbcf0c08ae0" translate="yes" xml:space="preserve">
          <source>The Eloquent &lt;code&gt;all&lt;/code&gt; method will return all of the results in the model's table. Since each Eloquent model serves as a &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt;, you may also add constraints to queries, and then use the &lt;code&gt;get&lt;/code&gt; method to retrieve the results:</source>
          <target state="translated">Eloquent &lt;code&gt;all&lt;/code&gt; 메소드는 모델 테이블의 모든 결과를 반환합니다. 각 Eloquent 모델은 &lt;a href=&quot;queries&quot;&gt;쿼리 빌더&lt;/a&gt; 역할을하므로 쿼리 에 제한 조건을 추가 한 후 &lt;code&gt;get&lt;/code&gt; 메소드를 사용 하여 결과를 검색 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1773b89586b8883bb4fbd6999ee6e6a22f983ca4" translate="yes" xml:space="preserve">
          <source>The Eloquent ORM included with Laravel provides a beautiful, simple ActiveRecord implementation for working with your database. Each database table has a corresponding &quot;Model&quot; which is used to interact with that table. Models allow you to query for data in your tables, as well as insert new records into the table.</source>
          <target state="translated">Laravel에 포함 된 Eloquent ORM은 데이터베이스 작업을위한 아름답고 간단한 ActiveRecord 구현을 제공합니다. 각 데이터베이스 테이블에는 해당 테이블과 상호 작용하는 데 사용되는 해당 &quot;모델&quot;이 있습니다. 모델을 사용하면 테이블에 데이터를 쿼리하고 테이블에 새 레코드를 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfe0e8f7ed6972ced80c80ea7c384e0835f808a" translate="yes" xml:space="preserve">
          <source>The Eloquent query builder instance.</source>
          <target state="translated">Eloquent 쿼리 빌더 인스턴스</target>
        </trans-unit>
        <trans-unit id="43117125a6f65d0cf5783101517fe1275d6539f0" translate="yes" xml:space="preserve">
          <source>The Eloquent query builder's &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;oldest&lt;/code&gt; methods have been updated to respect custom &quot;created at&quot; timestamp columns that may be specified on your Eloquent models. Generally, this should be considered a bug fix; however, it is listed as a breaking change out of caution.</source>
          <target state="translated">Eloquent 모델에서 지정할 수있는 사용자 정의 &quot;작성시&quot;시간 소인 열을 고려하여 Eloquent Query Builder의 &lt;code&gt;latest&lt;/code&gt; 및 &lt;code&gt;oldest&lt;/code&gt; 방법이 업데이트되었습니다. 일반적으로 이것은 버그 수정으로 간주되어야합니다. 그러나주의를 기울이지 않는 주요 변경 사항으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5abaa704887ee88b153ac2407fe61e608929a7dc" translate="yes" xml:space="preserve">
          <source>The Eloquent user model.</source>
          <target state="translated">Eloquent 사용자 모델.</target>
        </trans-unit>
        <trans-unit id="c28c74cd6ec8e9ba218d7bd969d379ea45226957" translate="yes" xml:space="preserve">
          <source>The Email Verification Column</source>
          <target state="translated">이메일 확인 열</target>
        </trans-unit>
        <trans-unit id="a73bc69119d9bb8c4345c27ed3109938c586f413" translate="yes" xml:space="preserve">
          <source>The Email Verification Handler</source>
          <target state="translated">이메일 확인 처리기</target>
        </trans-unit>
        <trans-unit id="8dc0de8219e062b060f9857647d3b914af99a745" translate="yes" xml:space="preserve">
          <source>The Email Verification Notice</source>
          <target state="translated">이메일 확인 통지</target>
        </trans-unit>
        <trans-unit id="fe8e104f0b61a546a41bb9b5b8a1a9e2d9fcf21c" translate="yes" xml:space="preserve">
          <source>The Enumerable Contract</source>
          <target state="translated">열거 가능한 계약</target>
        </trans-unit>
        <trans-unit id="ecca5baad482f1398d153519712ca4106639c48f" translate="yes" xml:space="preserve">
          <source>The Event Dispatcher.</source>
          <target state="translated">이벤트 디스패처.</target>
        </trans-unit>
        <trans-unit id="d77f0898fd90ddd4fa0c8e710de9d181cd4211b3" translate="yes" xml:space="preserve">
          <source>The Events Directory</source>
          <target state="translated">이벤트 디렉토리</target>
        </trans-unit>
        <trans-unit id="8fe47ba4bbe313684e2f4cde8dce65cde79995a3" translate="yes" xml:space="preserve">
          <source>The Exception Handler</source>
          <target state="translated">예외 처리기</target>
        </trans-unit>
        <trans-unit id="f60a25aba0e4bd19d1f7cf6d252ec710448a2749" translate="yes" xml:space="preserve">
          <source>The Exceptions Directory</source>
          <target state="translated">예외 디렉토리</target>
        </trans-unit>
        <trans-unit id="757d085c4b22e14e05fb7eae81255a8ff968c9ed" translate="yes" xml:space="preserve">
          <source>The Faker instance for the builder.</source>
          <target state="translated">빌더의 Faker 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="882aedcef0a33031b4c69997e44e0fd5118041c0" translate="yes" xml:space="preserve">
          <source>The Faker instance.</source>
          <target state="translated">Faker 인스턴스.</target>
        </trans-unit>
        <trans-unit id="e32af44e540b9cab990dca5bf2d034c1c8ed60bb" translate="yes" xml:space="preserve">
          <source>The Filesystem instance.</source>
          <target state="translated">파일 시스템 인스턴스</target>
        </trans-unit>
        <trans-unit id="2e9f5ef82d7e819321203ab1268d48bac9f6e745" translate="yes" xml:space="preserve">
          <source>The Flysystem filesystem implementation.</source>
          <target state="translated">Flysystem 파일 시스템 구현</target>
        </trans-unit>
        <trans-unit id="80c5e2a787d8639b9b3489e4e17f7c44c755e0d5" translate="yes" xml:space="preserve">
          <source>The Global Session Helper</source>
          <target state="translated">글로벌 세션 도우미</target>
        </trans-unit>
        <trans-unit id="21c909b612c1ea5096a9ae2552100c4e5bab72ea" translate="yes" xml:space="preserve">
          <source>The HTML string.</source>
          <target state="translated">HTML 문자열</target>
        </trans-unit>
        <trans-unit id="e85e5b982448d1b87af3ea9f62077fda90155089" translate="yes" xml:space="preserve">
          <source>The HTML to use for the message.</source>
          <target state="translated">메시지에 사용할 HTML입니다.</target>
        </trans-unit>
        <trans-unit id="80baef633b9c44055537d3a11a61eaf06587f7cf" translate="yes" xml:space="preserve">
          <source>The HTTP client instance.</source>
          <target state="translated">HTTP 클라이언트 인스턴스</target>
        </trans-unit>
        <trans-unit id="86b3235660eb17f27f3b662495b08dc28a3bd390" translate="yes" xml:space="preserve">
          <source>The HTTP kernel also defines a list of HTTP &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; that all requests must pass through before being handled by the application. These middleware handle reading and writing the &lt;a href=&quot;session&quot;&gt;HTTP session&lt;/a&gt;, determining if the application is in maintenance mode, &lt;a href=&quot;csrf&quot;&gt;verifying the CSRF token&lt;/a&gt;, and more.</source>
          <target state="translated">HTTP 커널은 또한 응용 프로그램에서 처리하기 전에 모든 요청이 통과해야하는 HTTP &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 목록을 정의합니다 . 이 미들웨어는 &lt;a href=&quot;session&quot;&gt;HTTP 세션&lt;/a&gt; 읽기 및 쓰기, 애플리케이션이 유지 보수 모드인지 판별 &lt;a href=&quot;csrf&quot;&gt;, CSRF 토큰 확인 등을 처리합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b4663030089860e2207c8c2791a1c80e4ee5251" translate="yes" xml:space="preserve">
          <source>The HTTP kernel extends the &lt;code&gt;Illuminate\Foundation\Http\Kernel&lt;/code&gt; class, which defines an array of &lt;code&gt;bootstrappers&lt;/code&gt; that will be run before the request is executed. These bootstrappers configure error handling, configure logging, &lt;a href=&quot;configuration#environment-configuration&quot;&gt;detect the application environment&lt;/a&gt;, and perform other tasks that need to be done before the request is actually handled.</source>
          <target state="translated">HTTP 커널은 &lt;code&gt;Illuminate\Foundation\Http\Kernel&lt;/code&gt; 클래스를 확장합니다.이 클래스 는 요청이 실행되기 전에 실행될 &lt;code&gt;bootstrappers&lt;/code&gt; 의 배열을 정의합니다 . 이러한 부트 스트랩 퍼는 오류 처리를 구성하고 로깅을 구성 &lt;a href=&quot;configuration#environment-configuration&quot;&gt;하며 응용 프로그램 환경을 감지&lt;/a&gt; 하고 요청이 실제로 처리되기 전에 수행해야하는 다른 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="7bf7a233c10d9ef903da7e13f77b4410077b9321" translate="yes" xml:space="preserve">
          <source>The HTTP methods the route responds to.</source>
          <target state="translated">경로가 응답하는 HTTP 메소드.</target>
        </trans-unit>
        <trans-unit id="e536d4365c5b4034fd1f5488dd6fa742e801451e" translate="yes" xml:space="preserve">
          <source>The Hasher implementation.</source>
          <target state="translated">해셔 구현.</target>
        </trans-unit>
        <trans-unit id="e3ab795192380d0e283a26aeae8d9f556b9d2112" translate="yes" xml:space="preserve">
          <source>The Hosts File</source>
          <target state="translated">호스트 파일</target>
        </trans-unit>
        <trans-unit id="cfd49f0291e229bb356524be1c95c9bd9d5f9ff3" translate="yes" xml:space="preserve">
          <source>The Http Directory</source>
          <target state="translated">HTTP 디렉토리</target>
        </trans-unit>
        <trans-unit id="59daf44b68c5d1eed138d3a5842f3333016b26a6" translate="yes" xml:space="preserve">
          <source>The ID that should be ignored.</source>
          <target state="translated">무시해야 할 ID입니다.</target>
        </trans-unit>
        <trans-unit id="f5fdd60d46f2a8d60cf7d66bfbc949aa6ae9c258" translate="yes" xml:space="preserve">
          <source>The IDs of the jobs that have failed.</source>
          <target state="translated">실패한 작업의 ID입니다.</target>
        </trans-unit>
        <trans-unit id="4ef9fa937e54f16b86ccef11a29cc833760825a7" translate="yes" xml:space="preserve">
          <source>The Illuminate Filesystem instance.</source>
          <target state="translated">Illuminate Filesystem 인스턴스.</target>
        </trans-unit>
        <trans-unit id="163f1ceab9ae0d9f913662d1d86b663da072d96d" translate="yes" xml:space="preserve">
          <source>The Illuminate application instance.</source>
          <target state="translated">Illuminate 응용 프로그램 인스턴스</target>
        </trans-unit>
        <trans-unit id="17a3307986f460de66202f629caf04383c4f23cd" translate="yes" xml:space="preserve">
          <source>The Illuminate cookie creator service.</source>
          <target state="translated">Illuminate 쿠키 생성기 서비스.</target>
        </trans-unit>
        <trans-unit id="7a114daadee0e52223e884240ee159aab0c680ef" translate="yes" xml:space="preserve">
          <source>The IoC container instance.</source>
          <target state="translated">IoC 컨테이너 인스턴스</target>
        </trans-unit>
        <trans-unit id="80371433103608f6ec9d037e6c2180fd26ed36dd" translate="yes" xml:space="preserve">
          <source>The JSON API is guarded by the &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;auth&lt;/code&gt; middleware; therefore, it may only be called from your own application. It is not able to be called from an external source.</source>
          <target state="translated">JSON API는 &lt;code&gt;web&lt;/code&gt; 및 &lt;code&gt;auth&lt;/code&gt; 미들웨어에 의해 보호됩니다 . 따라서 자신의 애플리케이션에서만 호출 할 수 있습니다. 외부 소스에서 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="04681c71ea9d080a52d08897ee26346efdeec116" translate="yes" xml:space="preserve">
          <source>The JSON decoded version of &quot;$job&quot;.</source>
          <target state="translated">&quot;$ job&quot;의 JSON 디코딩 버전.</target>
        </trans-unit>
        <trans-unit id="2ce3273298e876b9170e4623b4545a6efd595cfa" translate="yes" xml:space="preserve">
          <source>The JSON from the paginator will include meta information such as &lt;code&gt;total&lt;/code&gt;, &lt;code&gt;current_page&lt;/code&gt;, &lt;code&gt;last_page&lt;/code&gt;, and more. The actual result objects will be available via the &lt;code&gt;data&lt;/code&gt; key in the JSON array. Here is an example of the JSON created by returning a paginator instance from a route:</source>
          <target state="translated">페이지 매김 기의 JSON에는 &lt;code&gt;total&lt;/code&gt; , &lt;code&gt;current_page&lt;/code&gt; , &lt;code&gt;last_page&lt;/code&gt; 등과 같은 메타 정보가 포함됩니다 . 실제 결과 개체는 JSON 배열 의 &lt;code&gt;data&lt;/code&gt; 키를 통해 사용할 수 있습니다 . 다음은 경로에서 페이지 매김 인스턴스를 반환하여 생성 된 JSON의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7e304a6c8a65ff8a3a097a759a17d898878c68a3" translate="yes" xml:space="preserve">
          <source>The Jobs Directory</source>
          <target state="translated">채용 정보 디렉토리</target>
        </trans-unit>
        <trans-unit id="9cfe54fefe5f4f03ae12660690e686736709cee6" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; is used to resolve all Laravel controllers. As a result, you are able to type-hint any dependencies your controller may need in its constructor. The declared dependencies will automatically be resolved and injected into the controller instance:</source>
          <target state="translated">Laravel &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 는 모든 Laravel 컨트롤러를 해결하는 데 사용됩니다. 결과적으로 컨트롤러가 생성자에 필요할 수있는 종속성을 모두 입력 할 수 있습니다. 선언 된 종속성은 자동으로 해결되어 컨트롤러 인스턴스에 주입됩니다.</target>
        </trans-unit>
        <trans-unit id="27cb1c3ad0a7f769e386a295b8d1a9a64ccb50d9" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;code&gt;Hash&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; provides secure Bcrypt and Argon2 hashing for storing user passwords. If you are using the &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; authentication scaffolding, Bcrypt will be used for registration and authentication by default.</source>
          <target state="translated">Laravel &lt;code&gt;Hash&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 는 사용자 암호를 저장하기위한 안전한 Bcrypt 및 Argon2 해싱을 제공합니다. &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 인증 스캐 폴딩을 사용하는 경우 기본적으로 등록 및 인증에 Bcrypt가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="843b443002526e50cf80a41ba15aa1c4a14bbdb9" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;code&gt;Hash&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; provides secure Bcrypt and Argon2 hashing for storing user passwords. If you are using the built-in &lt;code&gt;LoginController&lt;/code&gt; and &lt;code&gt;RegisterController&lt;/code&gt; classes that are included with your Laravel application, they will use Bcrypt for registration and authentication by default.</source>
          <target state="translated">Laravel &lt;code&gt;Hash&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 는 사용자 암호를 저장하기위한 안전한 Bcrypt 및 Argon2 해싱을 제공합니다. Laravel 응용 프로그램에 포함 된 내장 &lt;code&gt;LoginController&lt;/code&gt; 및 &lt;code&gt;RegisterController&lt;/code&gt; 클래스를 사용하는 경우 기본적으로 등록 및 인증에 Bcrypt를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="47922fe09574ddf0f40edcd73f741bd8c9a91807" translate="yes" xml:space="preserve">
          <source>The Laravel &lt;code&gt;Schema&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; provides database agnostic support for creating and manipulating tables across all of Laravel's supported database systems.</source>
          <target state="translated">Laravel &lt;code&gt;Schema&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 는 Laravel이 지원하는 모든 데이터베이스 시스템에서 테이블을 생성하고 조작하기위한 데이터베이스에 독립적 인 지원을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="45617a8d11945067bf460b8f52a8c73cc3590533" translate="yes" xml:space="preserve">
          <source>The Laravel application instance.</source>
          <target state="translated">라 라벨 애플리케이션 인스턴스.</target>
        </trans-unit>
        <trans-unit id="edc843f975e9f1d327d41325cb4e3547814cbf3d" translate="yes" xml:space="preserve">
          <source>The Laravel code of conduct is derived from the Ruby code of conduct. Any violations of the code of conduct may be reported to Taylor Otwell (taylor@laravel.com):</source>
          <target state="translated">Laravel 행동 강령은 Ruby 행동 강령에서 파생되었습니다. 행동 강령 위반은 Taylor Otwell (taylor@laravel.com)에게보고 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="702c319a20c234dfd61a71af26b88049030c329b" translate="yes" xml:space="preserve">
          <source>The Laravel framework has a few system requirements. All of these requirements are satisfied by the &lt;a href=&quot;homestead&quot;&gt;Laravel Homestead&lt;/a&gt; virtual machine, so it's highly recommended that you use Homestead as your local Laravel development environment.</source>
          <target state="translated">Laravel 프레임 워크에는 몇 가지 시스템 요구 사항이 있습니다. 이러한 모든 요구 사항은 &lt;a href=&quot;homestead&quot;&gt;Laravel Homestead&lt;/a&gt; 가상 머신에 의해 충족 되므로 Homestead를 로컬 Laravel 개발 환경으로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b60cd0b0314ac8b4ee045c56042b1a0baee1fb12" translate="yes" xml:space="preserve">
          <source>The Laravel framework has a few system requirements. Of course, all of these requirements are satisfied by the &lt;a href=&quot;homestead&quot;&gt;Laravel Homestead&lt;/a&gt; virtual machine, so it's highly recommended that you use Homestead as your local Laravel development environment.</source>
          <target state="translated">라 라벨 프레임 워크에는 몇 가지 시스템 요구 사항이 있습니다. 물론 이러한 모든 요구 사항은 &lt;a href=&quot;homestead&quot;&gt;Laravel Homestead&lt;/a&gt; 가상 머신에서 충족 되므로 Homestead를 로컬 Laravel 개발 환경으로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="65607499476ec3df82cfdf119175747ca68664c3" translate="yes" xml:space="preserve">
          <source>The Laravel paginator has been updated to use the &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; framework by default. Tailwind CSS is a highly customizable, low-level CSS framework that gives you all of the building blocks you need to build bespoke designs without any annoying opinionated styles you have to fight to override. Of course, Bootstrap 3 and 4 views remain available as well.</source>
          <target state="translated">Laravel 페이지 관리자는 기본적으로 &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; 프레임 워크 를 사용하도록 업데이트되었습니다 . Tailwind CSS는 사용자 정의가 가능한 저수준 CSS 프레임 워크로, 재정의하기 위해 싸워야하는 성가신 독단적 인 스타일없이 맞춤형 디자인을 구축하는 데 필요한 모든 구성 요소를 제공합니다. 물론 Bootstrap 3 및 4보기도 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b61e69f539a54e50bf77074b0414820fa609bfd9" translate="yes" xml:space="preserve">
          <source>The Laravel paginator result classes implement the &lt;code&gt;Illuminate\Contracts\Support\Jsonable&lt;/code&gt; Interface contract and expose the &lt;code&gt;toJson&lt;/code&gt; method, so it's very easy to convert your pagination results to JSON. You may also convert a paginator instance to JSON by returning it from a route or controller action:</source>
          <target state="translated">Laravel 페이지 매김 결과 클래스는 &lt;code&gt;Illuminate\Contracts\Support\Jsonable&lt;/code&gt; Interface 계약을 구현하고 &lt;code&gt;toJson&lt;/code&gt; 메소드를 노출 하므로 페이지 매김 결과를 JSON으로 매우 쉽게 변환 할 수 있습니다. 경로 또는 컨트롤러 작업에서 페이지 매김 인스턴스를 반환하여 페이지 매김 인스턴스를 변환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="63136f086335c4fe1c83559f0ad25695a9897e58" translate="yes" xml:space="preserve">
          <source>The Laravel query builder uses PDO parameter binding to protect your application against SQL injection attacks. There is no need to clean strings being passed as bindings.</source>
          <target state="translated">Laravel 쿼리 빌더는 PDO 매개 변수 바인딩을 사용하여 SQL 주입 공격으로부터 애플리케이션을 보호합니다. 바인딩으로 전달되는 문자열을 정리할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5797f112c1d0ac0cc89328e4638e6594fc9eddec" translate="yes" xml:space="preserve">
          <source>The Laravel routing component allows all characters except &lt;code&gt;/&lt;/code&gt;. You must explicitly allow &lt;code&gt;/&lt;/code&gt; to be part of your placeholder using a &lt;code&gt;where&lt;/code&gt; condition regular expression:</source>
          <target state="translated">Laravel 라우팅 구성 요소는 &lt;code&gt;/&lt;/code&gt; 를 제외한 모든 문자를 허용합니다 . &lt;code&gt;where&lt;/code&gt; 조건 정규 표현식을 사용하여 &lt;code&gt;/&lt;/code&gt; 가 자리 표시 자의 일부가되도록 명시 적으로 허용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="316107531d2823356e0988e2d5d4db6e46cb2a04" translate="yes" xml:space="preserve">
          <source>The Laravel scheduler provides several convenient methods for working with the output generated by scheduled tasks. First, using the &lt;code&gt;sendOutputTo&lt;/code&gt; method, you may send the output to a file for later inspection:</source>
          <target state="translated">Laravel 스케줄러는 예약 된 작업으로 생성 된 출력으로 작업하기위한 몇 가지 편리한 방법을 제공합니다. 먼저 &lt;code&gt;sendOutputTo&lt;/code&gt; 메소드를 사용하여 나중에 검사 할 수 있도록 출력을 파일로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3869ab4795ba2186173e0dc05fe6487407702a6a" translate="yes" xml:space="preserve">
          <source>The Laravel schema builder supports several types of indexes. The following example creates a new &lt;code&gt;email&lt;/code&gt; column and specifies that its values should be unique. To create the index, we can chain the &lt;code&gt;unique&lt;/code&gt; method onto the column definition:</source>
          <target state="translated">라 라벨 스키마 빌더는 여러 유형의 인덱스를 지원합니다. 다음 예제는 새 &lt;code&gt;email&lt;/code&gt; 열을 만들고 해당 값이 고유해야 함을 지정합니다. 인덱스를 생성하기 위해 &lt;code&gt;unique&lt;/code&gt; 메서드를 열 정의에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da439996b7885cb7970634b650f497e79a558277" translate="yes" xml:space="preserve">
          <source>The Laravel service container is a powerful tool for managing class dependencies and performing dependency injection. Dependency injection is a fancy phrase that essentially means this: class dependencies are &quot;injected&quot; into the class via the constructor or, in some cases, &quot;setter&quot; methods.</source>
          <target state="translated">Laravel 서비스 컨테이너는 클래스 종속성을 관리하고 종속성 주입을 수행하기위한 강력한 도구입니다. 의존성 주입은 본질적으로 이것을 의미하는 멋진 문구입니다. 클래스 의존성은 생성자를 통해 또는 경우에 따라 &quot;세터&quot;메소드를 통해 클래스에 &quot;주입&quot;됩니다.</target>
        </trans-unit>
        <trans-unit id="64500378f3bf6ec69936fc5117bcd6e3b65b1905" translate="yes" xml:space="preserve">
          <source>The Laravel source code is managed on GitHub, and there are repositories for each of the Laravel projects:</source>
          <target state="translated">Laravel 소스 코드는 GitHub에서 관리되며 각 Laravel 프로젝트에 대한 리포지토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c217d6493b69df2f9d57b24d973b99f173037afe" translate="yes" xml:space="preserve">
          <source>The Listeners Directory</source>
          <target state="translated">리스너 디렉토리</target>
        </trans-unit>
        <trans-unit id="473ce358fbb8fb0708f1a1a30001d351916d2b02" translate="yes" xml:space="preserve">
          <source>The Local Driver</source>
          <target state="translated">로컬 드라이버</target>
        </trans-unit>
        <trans-unit id="24b6b39d92d15396f60d018fc7d6970f64859c7d" translate="yes" xml:space="preserve">
          <source>The Log levels.</source>
          <target state="translated">로그 수준.</target>
        </trans-unit>
        <trans-unit id="72d199d11a966a2ff1b111dada2661b9c4d0de12" translate="yes" xml:space="preserve">
          <source>The Logger instance.</source>
          <target state="translated">로거 인스턴스</target>
        </trans-unit>
        <trans-unit id="05a1333467e4b2d3f1d47b4ab3e3e832aaebee1f" translate="yes" xml:space="preserve">
          <source>The Loop Variable</source>
          <target state="translated">루프 변수</target>
        </trans-unit>
        <trans-unit id="2cd054cf59bd03e99b7f585ba14798bd728b8040" translate="yes" xml:space="preserve">
          <source>The MIME type to report.</source>
          <target state="translated">보고 할 MIME 유형입니다.</target>
        </trans-unit>
        <trans-unit id="1cb7889b677e92cbc5596e6f41d17e79d814426c" translate="yes" xml:space="preserve">
          <source>The Mail Directory</source>
          <target state="translated">메일 디렉토리</target>
        </trans-unit>
        <trans-unit id="f799bb2106e789c4894b9879d1feb809541e3796" translate="yes" xml:space="preserve">
          <source>The Mailgun API end-point.</source>
          <target state="translated">Mailgun API 엔드 포인트</target>
        </trans-unit>
        <trans-unit id="811c8321ed576ab54de5e1acc0224f2e56c2a4f5" translate="yes" xml:space="preserve">
          <source>The Mailgun API endpoint.</source>
          <target state="translated">Mailgun API 엔드 포인트.</target>
        </trans-unit>
        <trans-unit id="ac9cfa826f48012af95c3839d10cc5f456fda5ce" translate="yes" xml:space="preserve">
          <source>The Mailgun API key.</source>
          <target state="translated">Mailgun API 키</target>
        </trans-unit>
        <trans-unit id="7d0362084c836e7be97ff3ac9ac55a457621fb05" translate="yes" xml:space="preserve">
          <source>The Mailgun email domain.</source>
          <target state="translated">Mailgun 이메일 도메인.</target>
        </trans-unit>
        <trans-unit id="ef3d47ae94ac63467b12c90248acdf667534d567" translate="yes" xml:space="preserve">
          <source>The Make Method</source>
          <target state="translated">메이크 방법</target>
        </trans-unit>
        <trans-unit id="6553be6f420bb4fb28b4302a28be0c9752b94003" translate="yes" xml:space="preserve">
          <source>The Mandrill API key.</source>
          <target state="translated">Mandrill API 키.</target>
        </trans-unit>
        <trans-unit id="5ad159c763992129b185decb1bf4229a382e9c39" translate="yes" xml:space="preserve">
          <source>The Markdown template for the message (if applicable).</source>
          <target state="translated">메시지의 마크 다운 템플릿 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="11e5852a89522d3f6030f5b84a04ab3d0be20a9f" translate="yes" xml:space="preserve">
          <source>The Markdown template to render (if applicable).</source>
          <target state="translated">렌더링 할 마크 다운 템플릿입니다 (해당되는 경우).</target>
        </trans-unit>
        <trans-unit id="f80f0e68f97889dd4ccb1e6b8b21b7d3ecf78d96" translate="yes" xml:space="preserve">
          <source>The Memcached instance.</source>
          <target state="translated">Memcached 인스턴스</target>
        </trans-unit>
        <trans-unit id="3e9853e35c8722608a45a148df0f12d65caa48e2" translate="yes" xml:space="preserve">
          <source>The Models Directory</source>
          <target state="translated">모델 디렉토리</target>
        </trans-unit>
        <trans-unit id="fa8bf3548f0c48d2d46189f33a8d67ddce8b893f" translate="yes" xml:space="preserve">
          <source>The Nexmo client instance.</source>
          <target state="translated">Nexmo 클라이언트 인스턴스</target>
        </trans-unit>
        <trans-unit id="e67f9b007c94cf8198d3f379096c6b813bcd6771" translate="yes" xml:space="preserve">
          <source>The Notifications Directory</source>
          <target state="translated">알림 디렉토리</target>
        </trans-unit>
        <trans-unit id="fdf49f9c0e9159f50a3803e4b975d156cfd2f65e" translate="yes" xml:space="preserve">
          <source>The OAuth2 password grant allows your other first-party clients, such as a mobile application, to obtain an access token using an e-mail address / username and password. This allows you to issue access tokens securely to your first-party clients without requiring your users to go through the entire OAuth2 authorization code redirect flow.</source>
          <target state="translated">OAuth2 비밀번호 부여를 사용하면 모바일 애플리케이션과 같은 다른 자사 클라이언트가 이메일 주소 / 사용자 이름 및 비밀번호를 사용하여 액세스 토큰을 얻을 수 있습니다. 이를 통해 사용자가 전체 OAuth2 인증 코드 리디렉션 흐름을 거치지 않고도 자사 클라이언트에 액세스 토큰을 안전하게 발급 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72130596b75b8b0351ae6a237395e554d1916e5c" translate="yes" xml:space="preserve">
          <source>The PDO connection options.</source>
          <target state="translated">PDO 연결 옵션.</target>
        </trans-unit>
        <trans-unit id="698483afcdb24b6c5dc06e58238e32a8d6e2d573" translate="yes" xml:space="preserve">
          <source>The PDO statement.</source>
          <target state="translated">PDO 문.</target>
        </trans-unit>
        <trans-unit id="37bbdea7c32e8706f74890d146014014b374252d" translate="yes" xml:space="preserve">
          <source>The PHP-FPM socket used by Valet's Nginx configuration. This will only exist if PHP is running properly.</source>
          <target state="translated">Valet의 Nginx 구성에서 사용하는 PHP-FPM 소켓입니다. 이것은 PHP가 제대로 실행되는 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="858ebbeef90069d0581d09003f7dd8445a1366fe" translate="yes" xml:space="preserve">
          <source>The Paddle checkout widget is asynchronous. Once the user creates or updates a subscription within the widget, Paddle will send our application webhooks so that we may properly update the subscription state in our own database. Therefore, it's important that you properly &lt;a href=&quot;#handling-paddle-webhooks&quot;&gt;set up webhooks&lt;/a&gt; to accommodate for state changes from Paddle.</source>
          <target state="translated">패들 체크 아웃 위젯은 비동기식입니다. 사용자가 위젯 내에서 구독을 생성하거나 업데이트하면 Paddle은 자체 데이터베이스에서 구독 상태를 올바르게 업데이트 할 수 있도록 애플리케이션 웹훅을 보냅니다. 따라서 Paddle의 상태 변경을 수용 할 수 있도록 &lt;a href=&quot;#handling-paddle-webhooks&quot;&gt;웹훅&lt;/a&gt; 을 적절하게 설정하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="6cd0bad05ffb756cd4eead87befa0931d45f0344" translate="yes" xml:space="preserve">
          <source>The Passport service provider registers its own database migration directory with the framework, so you should migrate your database after installing the package. The Passport migrations will create the tables your application needs to store clients and access tokens:</source>
          <target state="translated">Passport 서비스 제공자는 프레임 워크에 자체 데이터베이스 마이그레이션 디렉토리를 등록하므로 패키지를 설치 한 후 데이터베이스를 마이그레이션해야합니다. Passport 마이그레이션은 애플리케이션이 클라이언트 및 액세스 토큰을 저장하는 데 필요한 테이블을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0502eb928f9f061c3334c9d4b7a246cf74f92fb2" translate="yes" xml:space="preserve">
          <source>The Passport service provider registers its own database migration directory with the framework, so you should migrate your database after registering the provider. The Passport migrations will create the tables your application needs to store clients and access tokens:</source>
          <target state="translated">Passport 서비스 공급자는 자체 데이터베이스 마이그레이션 디렉터리를 프레임 워크에 등록하므로 공급자를 등록한 후 데이터베이스를 마이그레이션해야합니다. Passport 마이그레이션은 응용 프로그램이 클라이언트 및 액세스 토큰을 저장하는 데 필요한 테이블을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9d566467ea505b751f73fe527b805d64527873f4" translate="yes" xml:space="preserve">
          <source>The Password Confirmation Form</source>
          <target state="translated">비밀번호 확인 양식</target>
        </trans-unit>
        <trans-unit id="4e269c3f908faa2711e649c94f0ba6206c1924eb" translate="yes" xml:space="preserve">
          <source>The Password Reset Form</source>
          <target state="translated">비밀번호 재설정 양식</target>
        </trans-unit>
        <trans-unit id="04bb7472a4e90c9639021908e2b9561ef51dbf86" translate="yes" xml:space="preserve">
          <source>The Password Reset Link Request Form</source>
          <target state="translated">비밀번호 재설정 링크 요청 양식</target>
        </trans-unit>
        <trans-unit id="640bd5ae5dd08349acadf02631c419d78222787e" translate="yes" xml:space="preserve">
          <source>The Pheanstalk instance.</source>
          <target state="translated">Pheanstalk 인스턴스.</target>
        </trans-unit>
        <trans-unit id="1eb39985ad14fb4408bdbed30697bc33ed4293e8" translate="yes" xml:space="preserve">
          <source>The Pheanstalk job instance.</source>
          <target state="translated">Pheanstalk 작업 인스턴스.</target>
        </trans-unit>
        <trans-unit id="b969bb92f23a3a5c8b8e93639eaa846e6a549890" translate="yes" xml:space="preserve">
          <source>The PhpRedis extension is configured as default at &lt;code&gt;REDIS_CLIENT&lt;/code&gt; env and in your &lt;code&gt;config/database.php&lt;/code&gt;:</source>
          <target state="translated">PhpRedis 확장은 &lt;code&gt;REDIS_CLIENT&lt;/code&gt; 환경과 &lt;code&gt;config/database.php&lt;/code&gt; 에서 기본값으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="18d7f969a81a8c3dbf158316f3336194e01b2e71" translate="yes" xml:space="preserve">
          <source>The Policies Directory</source>
          <target state="translated">정책 디렉토리</target>
        </trans-unit>
        <trans-unit id="f0dafbc4d3849dcce2b7906a0650368efd57c4e3" translate="yes" xml:space="preserve">
          <source>The Predis client.</source>
          <target state="translated">Predis 클라이언트.</target>
        </trans-unit>
        <trans-unit id="dd0384ae8bc7c4e33787c290a62a31a4814a95bb" translate="yes" xml:space="preserve">
          <source>The Presence Verifier implementation.</source>
          <target state="translated">존재 검증기 구현.</target>
        </trans-unit>
        <trans-unit id="ea17561f571ab5f439b595364605b7b7f1084341" translate="yes" xml:space="preserve">
          <source>The Providers Directory</source>
          <target state="translated">제공자 디렉토리</target>
        </trans-unit>
        <trans-unit id="ec4d66d26d98435f4bba3763f332e503ee29dd33" translate="yes" xml:space="preserve">
          <source>The Public Directory</source>
          <target state="translated">공공 디렉토리</target>
        </trans-unit>
        <trans-unit id="139b3584416dda76043901b8387e46a4f2c17683" translate="yes" xml:space="preserve">
          <source>The Public Disk</source>
          <target state="translated">공개 디스크</target>
        </trans-unit>
        <trans-unit id="173e5748d91cb1c51ba1b962885d473689d531bb" translate="yes" xml:space="preserve">
          <source>The Pusher SDK instance.</source>
          <target state="translated">Pusher SDK 인스턴스</target>
        </trans-unit>
        <trans-unit id="781d3da5271f6cf8751636dc79983ba6ee79820d" translate="yes" xml:space="preserve">
          <source>The Redis Facade</source>
          <target state="translated">Redis 외관</target>
        </trans-unit>
        <trans-unit id="6026efeb0b8f403c2bf30b1191b3e7665e8f1c7e" translate="yes" xml:space="preserve">
          <source>The Redis broadcaster will broadcast messages using Redis' pub / sub feature; however, you will need to pair this with a WebSocket server that can receive the messages from Redis and broadcast them to your WebSocket channels.</source>
          <target state="translated">Redis 브로드 캐스터는 Redis의 pub / sub 기능을 사용하여 메시지를 브로드 캐스트합니다. 그러나이를 Redis에서 메시지를 수신하여 WebSocket 채널로 브로드 캐스트 할 수있는 WebSocket 서버와 페어링해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba4488de367656b8cb4cccc5ba2e900f1827d31e" translate="yes" xml:space="preserve">
          <source>The Redis client.</source>
          <target state="translated">Redis 클라이언트.</target>
        </trans-unit>
        <trans-unit id="d40a11b17bd967ba7a39499177b4de3956bfe372" translate="yes" xml:space="preserve">
          <source>The Redis command that was executed.</source>
          <target state="translated">실행 된 Redis 명령</target>
        </trans-unit>
        <trans-unit id="326bed2d2a81d02b1594aa11437a2683f50c4931" translate="yes" xml:space="preserve">
          <source>The Redis configuration for your application is located in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file. Within this file, you will see a &lt;code&gt;redis&lt;/code&gt; array containing the Redis servers utilized by your application:</source>
          <target state="translated">애플리케이션의 Redis 구성은 &lt;code&gt;config/database.php&lt;/code&gt; 구성 파일에 있습니다. 이 파일에는 애플리케이션에서 사용하는 Redis 서버가 포함 된 &lt;code&gt;redis&lt;/code&gt; 배열이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f31d91d4e01a229101b0a60866f140964aa34e8a" translate="yes" xml:space="preserve">
          <source>The Redis connection instance.</source>
          <target state="translated">Redis 연결 인스턴스</target>
        </trans-unit>
        <trans-unit id="0856b25ef788202584d71398b3d5c887c4e6aaec" translate="yes" xml:space="preserve">
          <source>The Redis connection name.</source>
          <target state="translated">Redis 연결 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0e2ec35b8b3290a59dcb26421a128faf511d0615" translate="yes" xml:space="preserve">
          <source>The Redis connection that should be used.</source>
          <target state="translated">사용해야하는 Redis 연결.</target>
        </trans-unit>
        <trans-unit id="ee1b5b6e1427465ea843fc626cd75239666078d4" translate="yes" xml:space="preserve">
          <source>The Redis connection to use for broadcasting.</source>
          <target state="translated">방송에 사용할 Redis 연결.</target>
        </trans-unit>
        <trans-unit id="c308ed25d3dbfd5964775e7ab9b58f6fe6dbce0f" translate="yes" xml:space="preserve">
          <source>The Redis connection.</source>
          <target state="translated">Redis 연결.</target>
        </trans-unit>
        <trans-unit id="74a93dc27a4fac2b5fa66702cb93a7a63578ebae" translate="yes" xml:space="preserve">
          <source>The Redis connections.</source>
          <target state="translated">Redis 연결.</target>
        </trans-unit>
        <trans-unit id="5cb9d3a8d76647d45a7540fabe32ad81a6ece126" translate="yes" xml:space="preserve">
          <source>The Redis database instance.</source>
          <target state="translated">Redis 데이터베이스 인스턴스</target>
        </trans-unit>
        <trans-unit id="09f02387dbc55dbd7f02efa360935ba52ac45692" translate="yes" xml:space="preserve">
          <source>The Redis factory implementation.</source>
          <target state="translated">Redis 팩토리 구현.</target>
        </trans-unit>
        <trans-unit id="f5df3192820caf2d455bb10810e3217f00d8f2df" translate="yes" xml:space="preserve">
          <source>The Redis instance.</source>
          <target state="translated">Redis 인스턴스</target>
        </trans-unit>
        <trans-unit id="e87f79e665c81bd1b604d1552ba56e9d67e6d982" translate="yes" xml:space="preserve">
          <source>The Redis job payload inside the reserved queue.</source>
          <target state="translated">예약 대기열 내의 Redis 작업 페이로드.</target>
        </trans-unit>
        <trans-unit id="d9d3389cd95ce176a85b0f178814a3e3cc8a74a6" translate="yes" xml:space="preserve">
          <source>The Redis key prefix.</source>
          <target state="translated">Redis 키 접두사.</target>
        </trans-unit>
        <trans-unit id="9e0197538f42dfce3cbe8b158cd89447730fa308" translate="yes" xml:space="preserve">
          <source>The Redis queue instance.</source>
          <target state="translated">Redis 큐 인스턴스</target>
        </trans-unit>
        <trans-unit id="5cf457870ad627b4883a494ff833f4a6ef5ad348" translate="yes" xml:space="preserve">
          <source>The Redis raw job payload.</source>
          <target state="translated">Redis 원시 작업 페이로드</target>
        </trans-unit>
        <trans-unit id="2964115659b934e1a733e32d8e78cba75a56b8be" translate="yes" xml:space="preserve">
          <source>The Redis server configurations.</source>
          <target state="translated">Redis 서버 구성.</target>
        </trans-unit>
        <trans-unit id="3ca9d6226ddd4af3da7f7395a7177dbbf6c34283" translate="yes" xml:space="preserve">
          <source>The Redis watcher records all Redis commands executed by your application. If you are using Redis for caching, cache commands will also be recorded by the Redis Watcher.</source>
          <target state="translated">Redis 감시자는 애플리케이션에서 실행 한 모든 Redis 명령을 기록합니다. Redis를 캐싱에 사용하는 경우 캐시 명령도 Redis Watcher에 의해 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="4457c3c81ea3fa5906aed88c149fc02a0ed0ab6e" translate="yes" xml:space="preserve">
          <source>The Register Method</source>
          <target state="translated">등록 방법</target>
        </trans-unit>
        <trans-unit id="02f4044aed19f58e681f5a4d8c0384d41d9dcd8b" translate="yes" xml:space="preserve">
          <source>The Render Method</source>
          <target state="translated">렌더 방법</target>
        </trans-unit>
        <trans-unit id="e2d0ec9874192f4d5d8a643c58b26075b33b7292" translate="yes" xml:space="preserve">
          <source>The Report Method</source>
          <target state="translated">보고 방법</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
