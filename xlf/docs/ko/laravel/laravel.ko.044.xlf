<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="42c13b8f9ea74fceeebc09d4f7b094796a124ac3" translate="yes" xml:space="preserve">
          <source>Upgrading Socialite</source>
          <target state="translated">Socialite 업그레이드</target>
        </trans-unit>
        <trans-unit id="e223cb7cddb4169a6690d71ba96c2ab2263286d1" translate="yes" xml:space="preserve">
          <source>Upgrading Telescope</source>
          <target state="translated">망원경 업그레이드</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">5.6에서 5.7.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="dff068beb807d9b771c5e73de83346dc5fab73af" translate="yes" xml:space="preserve">
          <source>Upgrading To 8.0 From 7.x</source>
          <target state="translated">7.x에서 8.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">Valet 2.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">UploadedFile (Http)</target>
        </trans-unit>
        <trans-unit id="891a51edb29c30d3cf856e8dbf435840a6e1615e" translate="yes" xml:space="preserve">
          <source>UploadedFile::clientExtension()</source>
          <target state="translated">UploadedFile::clientExtension()</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="d722f8772a10eda25d2382dd9f73e58571c41a50" translate="yes" xml:space="preserve">
          <source>UriInterface</source>
          <target state="translated">UriInterface</target>
        </trans-unit>
        <trans-unit id="cedd7ec3ef52de0d1eed81f7d9f6353902052acf" translate="yes" xml:space="preserve">
          <source>UriInterface
    effectiveUri()</source>
          <target state="translated">UriInterface 효과적인 Uri ()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (라우팅 \ 매칭)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (라우팅 \ 예외)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (계약)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (라우팅)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="e8418f58d10ca59ef65eb911712c3acf8c077408" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasCorrectSignature()</source>
          <target state="translated">UrlGenerator::hasCorrectSignature()</target>
        </trans-unit>
        <trans-unit id="277e48c12c3941ad209732eea7965055f06dd152" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidRelativeSignature()</source>
          <target state="translated">UrlGenerator::hasValidRelativeSignature()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="5cf090cc105e37125ff3d98bc5204a85b039548a" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signatureHasNotExpired()</source>
          <target state="translated">UrlGenerator::signatureHasNotExpired()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (계약)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="31cb23620e46182ad5a67b605614e703296d3372" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveChildRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveChildRouteBinding()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (매개)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="1eacdee234ef1b0e0b0211b90a5e5ca754328790" translate="yes" xml:space="preserve">
          <source>Use the default date class when generating dates.</source>
          <target state="translated">날짜를 생성 할 때 기본 날짜 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0f3d075a25e14a0e6d5ebf97174a7206edf23a62" translate="yes" xml:space="preserve">
          <source>Use the given Carbon factory when generating dates.</source>
          <target state="translated">날짜를 생성 할 때 주어진 탄소 공장을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d083a4731a08d850d3ebe74d8451ce258de7317b" translate="yes" xml:space="preserve">
          <source>Use the given date type (class) when generating dates.</source>
          <target state="translated">날짜를 생성 할 때 주어진 날짜 유형 (클래스)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ac8ad0b96f0102b8578078d30950925cf13fbfe0" translate="yes" xml:space="preserve">
          <source>Use the given handler when generating dates (class name, callable, or factory).</source>
          <target state="translated">날짜 (클래스 이름, 호출 가능 또는 팩토리)를 생성 할 때 지정된 핸들러를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">쿼리에 쓰기 pdo를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e4f4a0ed9e21405e675e8b19940bbbf737969532" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions</source>
          <target state="translated">UsePusherChannelConventions</target>
        </trans-unit>
        <trans-unit id="f22835b3432dfa66e1e5dc1fffe499d98f38c199" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions (Broadcasting\Broadcasters)</source>
          <target state="translated">UsePusherChannelConventions (Broadcasting \ Broadcasters)</target>
        </trans-unit>
        <trans-unit id="3574d67353af85f96380c9eddb23fda7cae133eb" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::isGuardedChannel()</source>
          <target state="translated">UsePusherChannelConventions::isGuardedChannel()</target>
        </trans-unit>
        <trans-unit id="46c184f534d49637912f77649a76dc5e9e61ad17" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::normalizeChannelName()</source>
          <target state="translated">UsePusherChannelConventions::normalizeChannelName()</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">빠른 반복을 위해 데이터의 하위 섹션을 추출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">사용자 (Foundation \ Auth)</target>
        </trans-unit>
        <trans-unit id="3dead4fbc02efb51af5fbf25b8189d6cb3e4cc57" translate="yes" xml:space="preserve">
          <source>User Customizations</source>
          <target state="translated">사용자 정의</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">사용자 식별</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">사용자 선호 로케일</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">사용자가 관찰 가능한 이벤트를 노출했습니다.</target>
        </trans-unit>
        <trans-unit id="0ac94d25b6b0c34e1f5760af0a042b7043e679c5" translate="yes" xml:space="preserve">
          <source>User log for Nginx errors.</source>
          <target state="translated">Nginx 오류에 대한 사용자 로그입니다.</target>
        </trans-unit>
        <trans-unit id="6ce36742b51d45166a8f8937eca8a3d174310237" translate="yes" xml:space="preserve">
          <source>User log for PHP errors.</source>
          <target state="translated">PHP 오류에 대한 사용자 로그.</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">UserProvider (계약)</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">사용자 이름 사용자 정의</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">주소 &lt;code&gt;from&lt;/code&gt; 글로벌 사용</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">예제 응용 프로그램 사용</target>
        </trans-unit>
        <trans-unit id="62e9f45ef979b380dbcb1184e2215f7d004bdca7" translate="yes" xml:space="preserve">
          <source>Using An Existing Client Instance</source>
          <target state="translated">기존 클라이언트 인스턴스 사용</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">다른 도메인 사용</target>
        </trans-unit>
        <trans-unit id="1cfff2a1417bb9f3fa6ef651cf3c78ac02039444" translate="yes" xml:space="preserve">
          <source>Using Attributes &amp;amp; Slots Inside The Class</source>
          <target state="translated">클래스 내 속성 및 슬롯 사용</target>
        </trans-unit>
        <trans-unit id="e79b57a72e1ee274f7267c00a9af517c0d13725c" translate="yes" xml:space="preserve">
          <source>Using Bootstrap</source>
          <target state="translated">부트 스트랩 사용</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">클로저 사용</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">컴포넌트 사용</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">커서 사용</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">확장 사용</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">공장 사용</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">양식 사용</target>
        </trans-unit>
        <trans-unit id="c4a2849b37e855e210cf7bff023adbf8def68ec4" translate="yes" xml:space="preserve">
          <source>Using Magic Methods</source>
          <target state="translated">마법 방법 사용</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">모델 팩토리 사용</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">여러 데이터베이스 연결 사용</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">여러 Redis 연결 사용</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">명명 된 바인딩 사용</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">인증 코드와 함께 OAuth2를 사용하면 대부분의 개발자가 OAuth2에 익숙해집니다. 인증 코드를 사용하면 클라이언트 응용 프로그램은 사용자를 서버로 리디렉션하여 클라이언트에 대한 액세스 토큰 발급 요청을 승인하거나 거부합니다.</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">다른 브라우저 사용</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">반응 사용</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">규칙 객체 사용</target>
        </trans-unit>
        <trans-unit id="3d7a463ee7e4d28ba8333eaae5d3584b6aea8c25" translate="yes" xml:space="preserve">
          <source>Using Seeds</source>
          <target state="translated">씨앗 사용</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">단축키 사용</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">사용 &lt;code&gt;from&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">암호화 기 사용</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">키보드 사용</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">마우스 사용</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">통지 가능한 특성 사용</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">알림 파사드 사용</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">세션 사용</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">변환 문자열을 키로 사용</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">몇 가지 간단한 방법 을 사용하면 요청에 사용 된 HTTP 동사에 대해 걱정하지 않고 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 에서 모든 사용자 입력에 액세스 할 수 있습니다 . HTTP 동사에 관계없이 &lt;code&gt;input&lt;/code&gt; 방법을 사용하여 사용자 입력을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9fda880257aba205c2a22d38cfb42a74e3c5c03" translate="yes" xml:space="preserve">
          <source>Using automatic hostnames works best for &quot;per project&quot; installations of Homestead. If you host multiple sites on a single Homestead instance, you may add the &quot;domains&quot; for your web sites to the &lt;code&gt;hosts&lt;/code&gt; file on your machine. The &lt;code&gt;hosts&lt;/code&gt; file will redirect requests for your Homestead sites into your Homestead machine. On Mac and Linux, this file is located at &lt;code&gt;/etc/hosts&lt;/code&gt;. On Windows, it is located at &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;. The lines you add to this file will look like the following:</source>
          <target state="translated">자동 호스트 이름을 사용하는 것은 Homestead의 &quot;프로젝트 별&quot;설치에 가장 적합합니다. 단일 Homestead 인스턴스에서 여러 사이트를 호스팅하는 경우 웹 사이트의 &quot;도메인&quot;을 컴퓨터 의 &lt;code&gt;hosts&lt;/code&gt; 파일에 추가 할 수 있습니다 . &lt;code&gt;hosts&lt;/code&gt; 파일은 농가 기계로 농가 사이트에 대한 요청을 리디렉션합니다. Mac 및 Linux에서이 파일은 &lt;code&gt;/etc/hosts&lt;/code&gt; 에 있습니다. Windows에서는 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 있습니다. 이 파일에 추가하는 행은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="499b7bb5cc827ba820779c1f492f97fb13dcac85" translate="yes" xml:space="preserve">
          <source>Using contextual binding, you may resolve this dependency by providing the &lt;code&gt;give&lt;/code&gt; method with a Closure that returns an array of resolved &lt;code&gt;Filter&lt;/code&gt; instances:</source>
          <target state="translated">컨텍스트 바인딩을 사용하면 해결 된 &lt;code&gt;Filter&lt;/code&gt; 인스턴스 의 배열을 반환하는 Closure가 있는 &lt;code&gt;give&lt;/code&gt; 메서드를 제공하여이 종속성을 해결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17438b1ca0a4af5dbc616107d6d56a129c0a5e4d" translate="yes" xml:space="preserve">
          <source>Using directives such as &lt;code&gt;@env&lt;/code&gt; directly on a component is not supported at this time.</source>
          <target state="translated">구성 요소에서 직접 &lt;code&gt;@env&lt;/code&gt; 와 같은 지시문을 사용 하는 것은 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">중 하나를 사용 &lt;code&gt;pingBefore($url)&lt;/code&gt; 또는 &lt;code&gt;thenPing($url)&lt;/code&gt; 기능은 목구멍 HTTP 라이브러리가 필요합니다. Composer 패키지 관리자를 사용하여 프로젝트에 Guzzle을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">실시간 파사드를 사용하면 응용 프로그램의 모든 클래스를 파사드 인 것처럼 취급 할 수 있습니다. 이것이 어떻게 사용되는지 설명하기 위해 대안을 살펴 보자. 예를 들어, &lt;code&gt;Podcast&lt;/code&gt; 모델에 &lt;code&gt;publish&lt;/code&gt; 방법 이 있다고 가정합니다 . 그러나 팟 캐스트를 발행하려면 &lt;code&gt;Publisher&lt;/code&gt; 인스턴스 를 주입해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; 파사드를 사용하면 &lt;code&gt;store&lt;/code&gt; 메소드 를 통해 다양한 캐시 저장소에 액세스 할 수 있습니다 . &lt;code&gt;store&lt;/code&gt; 메소드에 전달 된 키는 &lt;code&gt;cache&lt;/code&gt; 구성 파일 의 &lt;code&gt;stores&lt;/code&gt; 구성 배열에 나열된 상점 중 하나에 해당해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; 메서드를 사용하면 들어오는 요청과 일치하는 다른 경로가 없을 때 실행될 경로를 정의 할 수 있습니다. 일반적으로 처리되지 않은 요청은 응용 프로그램의 예외 처리기를 통해 &quot;404&quot;페이지를 자동으로 렌더링합니다. 그러나 &lt;code&gt;routes/web.php&lt;/code&gt; 파일 내에 &lt;code&gt;fallback&lt;/code&gt; 경로를 정의 할 수 있으므로 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹 의 모든 미들웨어 가 해당 경로에 적용됩니다. 물론 필요에 따라이 경로에 추가 미들웨어를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69fb67d90753e9b38d58d2e4f323adafcad646da" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. You are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; 메서드를 사용하면 수신 요청과 일치하는 다른 경로가 없을 때 실행될 경로를 정의 할 수 있습니다. 일반적으로 처리되지 않은 요청은 애플리케이션의 예외 처리기를 통해 자동으로 &quot;404&quot;페이지를 렌더링합니다. 그러나 &lt;code&gt;routes/web.php&lt;/code&gt; 파일 내 에서 &lt;code&gt;fallback&lt;/code&gt; 경로를 정의 할 수 있으므로 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹 의 모든 미들웨어 가 경로에 적용됩니다. 필요에 따라이 경로에 추가 미들웨어를 자유롭게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 메소드를 사용하여 대기중인 작업이 처리되기 전이나 후에 실행될 콜백을 지정할 수 있습니다. 이러한 콜백은 대시 보드에 대한 추가 로깅 또는 증분 통계를 수행 할 수있는 좋은 기회입니다. 일반적으로 &lt;a href=&quot;providers&quot;&gt;서비스 제공 업체&lt;/a&gt; 에서이 메소드를 호출해야합니다 . 예를 들어 Laravel에 포함 된 &lt;code&gt;AppServiceProvider&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 메소드를 사용하여 예약 된 작업이 완료되기 전후에 실행될 코드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56c4c76e7391f602da6b92e92ebf5057f621b782" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;catch&lt;/code&gt; method, you may provide a Closure that should be executed if the queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; 메서드를 사용하면 대기열의 구성된 재 시도를 모두 사용한 후 대기열에있는 Closure가 성공적으로 완료되지 않을 경우 실행해야하는 Closure를 제공 ​​할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; 메소드를 사용하여 출력을 선택한 이메일 주소로 이메일로 보낼 수 있습니다. 작업 출력을 이메일로 보내기 전에 Laravel의 &lt;a href=&quot;mail&quot;&gt;이메일 서비스를&lt;/a&gt; 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 방법을 사용하면 주어진보기 배열에 존재하는 첫 번째보기를 만들 수 있습니다. 응용 프로그램이나 패키지에서보기를 사용자 정의하거나 덮어 쓸 수있는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7a926a83ee058b1589aa1d7379c1abc5befa110a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may render the first attribute in a given attribute bag:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 방법을 사용하여 주어진 속성 모음에서 첫 번째 속성을 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;looping&lt;/code&gt; 방법을 사용하여 작업자가 대기열에서 작업을 가져 오기 전에 실행되는 콜백을 지정할 수 있습니다. 예를 들어, 이전에 실패한 작업으로 열린 트랜잭션을 롤백하기 위해 Closure를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">은 Using &lt;code&gt;pingBefore&lt;/code&gt; 및 &lt;code&gt;thenPing&lt;/code&gt; 작업이 완료되기 전에 또는 그 이후에 방법, 스케줄러는 자동으로 해당 URL을 Ping 할 수 있습니다. 이 방법은 &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt; 와 같은 외부 서비스에 예약 된 작업이 시작되었거나 실행이 완료 되었음을 알리는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;psubscribe&lt;/code&gt; 메소드를 사용하면 와일드 카드 채널을 구독 할 수 있으며 모든 채널의 모든 메시지를 포착하는 데 유용 할 수 있습니다. &lt;code&gt;$channel&lt;/code&gt; 이름이 제공 콜백에 두 번째 인수로 전달됩니다 &lt;code&gt;Closure&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">&lt;code&gt;Artisan&lt;/code&gt; 파사드 에서 &lt;code&gt;queue&lt;/code&gt; 방법을 사용하면 &lt;a href=&quot;queues&quot;&gt;대기열 작업자&lt;/a&gt; 가 백그라운드에서 처리하도록 Artisan 명령을 대기열에 넣을 수도 있습니다 . 이 방법을 사용하기 전에 큐를 구성하고 큐 리스너를 실행 중인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; 방법을 사용하여 예약 된 작업 시간을 지정된 시간대 내에서 해석하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Memcached 드라이버를 사용하려면 &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL 패키지&lt;/a&gt; 가 설치되어 있어야합니다. &lt;code&gt;config/cache.php&lt;/code&gt; 구성 파일 에 모든 Memcached 서버를 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58f310a81c605f751594a4ca39a2a50c4c3577f4" translate="yes" xml:space="preserve">
          <source>Using the new &lt;code&gt;catch&lt;/code&gt; method, you may now provide a Closure that should be executed if a queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">새로운 &lt;code&gt;catch&lt;/code&gt; 메서드를 사용 하여 큐에 구성된 모든 재시도 시도를 소진 한 후 대기중인 Closure가 성공적으로 완료되지 않을 경우 실행해야하는 Closure를 제공 ​​할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78a2d37146e8eba2af43a7613e424eb034b4424b" translate="yes" xml:space="preserve">
          <source>Using the subquery functionality available to the &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;addSelect&lt;/code&gt; methods, we can select all of the &lt;code&gt;destinations&lt;/code&gt; and the name of the flight that most recently arrived at that destination using a single query:</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 및 &lt;code&gt;addSelect&lt;/code&gt; 메서드에서 사용할 수있는 하위 쿼리 기능을 사용하여 단일 쿼리를 사용하여 가장 최근에 해당 목적지에 도착한 모든 &lt;code&gt;destinations&lt;/code&gt; 와 항공편 이름을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34b17c91b4d18aaebbbfe1050a5a592f42520a50" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationship counts:</source>
          <target state="translated">이러한 모델 정의 및 관계를 사용하여 &lt;code&gt;ActivityFeed&lt;/code&gt; 모델 인스턴스를 검색 하고 모든 &lt;code&gt;parentable&lt;/code&gt; 모델과 각각의 중첩 된 관계 수를 즉시 로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b635005fa10ad4dd5e39fb5d08120a6cfc28c7a" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationships:</source>
          <target state="translated">이러한 모델 정의 및 관계를 사용하여 &lt;code&gt;ActivityFeed&lt;/code&gt; 모델 인스턴스를 검색 하고 모든 &lt;code&gt;parentable&lt;/code&gt; 모델과 각각의 중첩 된 관계를 즉시 로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c31156efed35ee7814650f8971c3698059440e3" translate="yes" xml:space="preserve">
          <source>Util</source>
          <target state="translated">Util</target>
        </trans-unit>
        <trans-unit id="3381deb6de2c946be91070f6793edeb6ed737dd5" translate="yes" xml:space="preserve">
          <source>Util (Container)</source>
          <target state="translated">Util (컨테이너)</target>
        </trans-unit>
        <trans-unit id="7a113dca44af51991a38c445f7c89b4c32510c62" translate="yes" xml:space="preserve">
          <source>Util::arrayWrap()</source>
          <target state="translated">Util::arrayWrap()</target>
        </trans-unit>
        <trans-unit id="14baba7ebe94810f45f2044da2f65072e5533037" translate="yes" xml:space="preserve">
          <source>Util::getParameterClassName()</source>
          <target state="translated">Util::getParameterClassName()</target>
        </trans-unit>
        <trans-unit id="b5ba942a8e2c83fbd24f49896a6252d63736f617" translate="yes" xml:space="preserve">
          <source>Util::unwrapIfClosure()</source>
          <target state="translated">Util::unwrapIfClosure()</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">로컬 범위 활용</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="a9b75398a82b8ed5247b1501be51d83c1e6df52b" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a length.</source>
          <target state="translated">길이가있는 VARCHAR 해당 컬럼.</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">선택적 길이의 VARCHAR 동등한 열.</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0은 Valet의 기본 웹 서버를 Caddy에서 Nginx로 전환합니다. 이 버전으로 업그레이드하기 전에 다음 명령을 실행하여 기존 Caddy 데몬을 중지하고 설치 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5f60770e7d6e5e9ec19004e18065c8dd0579aca" translate="yes" xml:space="preserve">
          <source>Valet Directories &amp;amp; Files</source>
          <target state="translated">Valet 디렉터리 및 파일</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">발렛 또는 농가</target>
        </trans-unit>
        <trans-unit id="262d72c5ab80eeb0c46ac525c5515c7c340d1a45" translate="yes" xml:space="preserve">
          <source>Valet allows you to switch PHP versions using the &lt;code&gt;valet use php@version&lt;/code&gt; command. Valet will install the specified PHP version via Brew if it is not already installed:</source>
          <target state="translated">Valet에서는 &lt;code&gt;valet use php@version&lt;/code&gt; 명령을 사용 하여 PHP 버전을 전환 할 수 있습니다 . Valet은 아직 설치되지 않은 경우 Brew를 통해 지정된 PHP 버전을 설치합니다.</target>
        </trans-unit>
        <trans-unit id="b860762aa48e6e66610e929c3e05dead400a78ea" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world, providing an easy way to test your site on mobile devices or share it with team members and clients. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet에는 로컬 사이트를 전 세계와 공유하는 명령도 포함되어있어 모바일 장치에서 사이트를 쉽게 테스트하거나 팀 구성원 및 클라이언트와 공유 할 수 있습니다. Valet가 설치되면 추가 소프트웨어 설치가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet에는 로컬 사이트를 전세계와 공유하는 명령도 포함되어 있습니다. Valet를 설치 한 후에는 추가 소프트웨어를 설치할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">Valet은 Mac 미니멀리스트를위한 Laravel 개발 환경입니다. 방랑 없음, &lt;code&gt;/etc/hosts&lt;/code&gt; 파일 없음 로컬 터널을 사용하여 사이트를 공개적으로 공유 할 수도 있습니다. &lt;em&gt;예, 우리도 좋아합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9075b144ccce6118130d572163d5c32c096b2c8" translate="yes" xml:space="preserve">
          <source>Valet only serves one PHP version at a time, even if you have multiple PHP versions installed.</source>
          <target state="translated">Valet는 여러 PHP 버전이 설치되어 있어도 한 번에 하나의 PHP 버전 만 제공합니다.</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">Valet은 Mac 만 지원하며 PHP와 데이터베이스 서버를 로컬 컴퓨터에 직접 설치해야합니다. 이것은 &lt;code&gt;brew install php&lt;/code&gt; 및 &lt;code&gt;brew install mysql&lt;/code&gt; 과 같은 명령으로 &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; 를 사용하여 쉽게 수행 할 수 있습니다 . Valet는 최소한의 리소스 소비로 놀라 울 정도로 빠른 로컬 개발 환경을 제공하므로 PHP / MySQL 만 필요하고 완전히 가상화 된 개발 환경이 필요하지 않은 개발자에게 적합합니다.</target>
        </trans-unit>
        <trans-unit id="4a0f3915baa54a174906bade2cc3e085088fdd3b" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">Valet는 Mac 만 지원하며 로컬 컴퓨터에 PHP와 데이터베이스 서버를 직접 설치해야합니다. 이것은 &lt;code&gt;brew install php&lt;/code&gt; 및 &lt;code&gt;brew install mysql&lt;/code&gt; 과 같은 명령과 함께 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; 를 사용하여 쉽게 수행 할 수 있습니다 . Valet는 최소한의 리소스 소비로 초고속 로컬 개발 환경을 제공하므로 PHP / MySQL 만 필요하고 완전히 가상화 된 개발 환경이 필요하지 않은 개발자에게 적합합니다.</target>
        </trans-unit>
        <trans-unit id="5f4dba68eec7fd8faf4182ea5b8911c03fb7055b" translate="yes" xml:space="preserve">
          <source>Valet restricts incoming traffic to the internal &lt;code&gt;127.0.0.1&lt;/code&gt; interface by default. This way your development machine isn't exposed to security risks from the Internet.</source>
          <target state="translated">Valet 는 기본적으로 들어오는 트래픽을 내부 &lt;code&gt;127.0.0.1&lt;/code&gt; 인터페이스로 제한 합니다. 이렇게하면 개발 시스템이 인터넷의 보안 위험에 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">Valet는 컴퓨터가 부팅 할 때마다 데몬을 자동으로 시작합니다. 최초 Valet 설치가 완료된 후에는 &lt;code&gt;valet start&lt;/code&gt; 또는 &lt;code&gt;valet install&lt;/code&gt; 을 다시 실행할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6ed72a875afbc5ee507bace92ae70597f3e95336" translate="yes" xml:space="preserve">
          <source>Valet's master configuration file</source>
          <target state="translated">Valet의 마스터 구성 파일</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">주어진 속성을 규칙과 비교하여 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">경로 및 요청에 대해 지정된 규칙의 유효성을 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">주어진 자격 증명에 대한 비밀번호 재설정을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">주어진 자격 증명에 대해 사용자를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">사용자의 자격 증명을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">속성이 값 목록에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">속성이 값 목록에 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">속성이 다른 값 중에서 고유한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">사용자 정의 규칙 오브젝트를 사용하여 속성을 유효성 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">디코딩 된 응답 JSON을 유효성 검증하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">필수 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">속성에 영숫자, 대시 및 밑줄 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">속성에 영숫자 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">속성에 알파벳 문자 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">속성이 정규식 검사를 통과하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">채워지지 않은 경우에도 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">다른 모든 속성이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">다른 모든 속성이 존재하는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">다른 속성에 지정된 값이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">다른 속성이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">다른 속성에 지정된 값이있는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">다른 속성이 존재하는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">속성에 주어진 자릿수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">속성에 일치하는 확인이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">속성이 부울인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">속성이 문자열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">속성이 유효한 IP인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">속성이 유효한 IPv4인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">속성이 유효한 IPv6인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">속성이 유효한 URL인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="619b7bce58701df04f09f543200d3d93f5415b9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid UUID.</source>
          <target state="translated">속성이 유효한 UUID인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">속성이 유효한 날짜인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">속성이 유효한 전자 메일 주소인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">속성이 유효한 시간대인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">속성이 활성 URL인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">속성이 배열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">속성이 정수인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">속성이 주어진 자릿수 사이에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">속성이 다른 속성과 다른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">속성이 다른 날짜와 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">속성이 다른 속성보다 큰지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">속성이 다른 속성보다 크거나 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">속성이 다른 속성보다 작은 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">속성이 다른 속성보다 작거나 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">속성이 숫자인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">속성이 날짜 형식과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">속성이 정규식 검사를 통과했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">속성이 &quot;수락&quot;되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="214716c83b0d8ef48101601818e20150cf81439e" translate="yes" xml:space="preserve">
          <source>Validate that the current logged in user's password matches the given value.</source>
          <target state="translated">현재 로그인 한 사용자의 암호가 주어진 값과 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0497e984636cc2b1a09153ebcaf9c91dc833ac08" translate="yes" xml:space="preserve">
          <source>Validate that the values of an attribute is in another attribute.</source>
          <target state="translated">속성 값이 다른 속성에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e6d9e9c96da34104c09bdf7def6a6b29e8ad179f" translate="yes" xml:space="preserve">
          <source>Validate that two attributes match.</source>
          <target state="translated">두 속성이 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e3620446f2ca1f3fd2eca3a72554a36095785f33" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file is an image MIME type.</source>
          <target state="translated">파일의 MIME 유형이 이미지 MIME 유형인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="20d0e2474bb0af729d0be9b0f3da8607546ace69" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file upload attribute is in a set of MIME types.</source>
          <target state="translated">파일 업로드 속성의 MIME 유형이 MIME 유형 세트에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4735a342c86e55fbaf6f547d236a4ecbe4e1a8c9" translate="yes" xml:space="preserve">
          <source>Validate the attribute ends with a given substring.</source>
          <target state="translated">주어진 하위 문자열로 끝나는 속성의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="f1d6cb4266f5555fc71ac82e87b714a3efef1d28" translate="yes" xml:space="preserve">
          <source>Validate the attribute is a valid JSON string.</source>
          <target state="translated">속성이 유효한 JSON 문자열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="069770360d7bc9432f7161dabac97ae81fd3e6fb" translate="yes" xml:space="preserve">
          <source>Validate the attribute starts with a given substring.</source>
          <target state="translated">속성이 주어진 하위 문자열로 시작하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="094f2e7e7466c3b3e93038e2ecc51d3c78089a4e" translate="yes" xml:space="preserve">
          <source>Validate the class instance.</source>
          <target state="translated">클래스 인스턴스를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d21701b21e598af31812a5f02aeae2fc9e40cfde" translate="yes" xml:space="preserve">
          <source>Validate the date is after a given date.</source>
          <target state="translated">날짜가 지정된 날짜 이후인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d2c308a3f37b8b513d1ae686ec9d1848e706ac18" translate="yes" xml:space="preserve">
          <source>Validate the date is before a given date.</source>
          <target state="translated">날짜가 지정된 날짜 이전인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="08cccbea395497c23ee52b3ca3ead2731090f2a1" translate="yes" xml:space="preserve">
          <source>Validate the date is before or equal a given date.</source>
          <target state="translated">날짜가 지정된 날짜 이전인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1383019b7afaf43a658a091823aed663aa6dbbbd" translate="yes" xml:space="preserve">
          <source>Validate the date is equal or after a given date.</source>
          <target state="translated">날짜가 동일하거나 지정된 날짜 이후인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6e0ae6e12f0427b9ede930f5818916eb1d993090" translate="yes" xml:space="preserve">
          <source>Validate the dimensions of an image matches the given values.</source>
          <target state="translated">이미지의 치수가 주어진 값과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3256a9ae08572e6cb6c4fb4f05a59c2263fa2591" translate="yes" xml:space="preserve">
          <source>Validate the email for the given request.</source>
          <target state="translated">주어진 요청에 대한 이메일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="09317486b20a4311e63713a86fa34d0a5e4c3e81" translate="yes" xml:space="preserve">
          <source>Validate the existence of an attribute value in a database table.</source>
          <target state="translated">데이터베이스 테이블에 속성 값이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b57c98634df5e8051a1f41f40f38d512056c788e" translate="yes" xml:space="preserve">
          <source>Validate the given attribute is filled if it is present.</source>
          <target state="translated">주어진 속성이 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5cfe149dddd63fa3b2492865a1f39a47d6c2dad5" translate="yes" xml:space="preserve">
          <source>Validate the given class instance.</source>
          <target state="translated">주어진 클래스 인스턴스를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3660f89a504538689f3c45669e1dd095fa7a901b" translate="yes" xml:space="preserve">
          <source>Validate the given data against the provided rules.</source>
          <target state="translated">제공된 규칙에 따라 지정된 데이터의 유효성을 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="ffdf88ff2af0273270f74150dc03f87346410085" translate="yes" xml:space="preserve">
          <source>Validate the given password reset token.</source>
          <target state="translated">지정된 비밀번호 재설정 토큰을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="63727740ce5927e5def18a144f697d48a1213352" translate="yes" xml:space="preserve">
          <source>Validate the given request with the given rules.</source>
          <target state="translated">주어진 규칙으로 주어진 요청을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="eafa4f3a58dd76f8787ca2d5a54e2c0a12045092" translate="yes" xml:space="preserve">
          <source>Validate the given value is a valid file.</source>
          <target state="translated">주어진 값이 유효한 파일인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6a3174d73527340cc452ac07b0971673cfaebde5" translate="yes" xml:space="preserve">
          <source>Validate the guessed extension of a file upload is in a set of file extensions.</source>
          <target state="translated">파일 업로드의 추측 된 확장자가 파일 확장자 세트에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="731f426adc01f941a4e923878af9bf8761dc583a" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is between a set of values.</source>
          <target state="translated">속성 크기가 값 집합 사이인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef99e0ecfba33c15ccde77b1af91ac175eb3bcfe" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is greater than a minimum value.</source>
          <target state="translated">속성의 크기가 최소값보다 큰지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d8a76feae4da54a55c9bf40196ca3592d3a18129" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is less than a maximum value.</source>
          <target state="translated">속성의 크기가 최대 값보다 작은 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9cc9e9b58dfac3310ea4be7a22d7c6b456bdd57b" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute.</source>
          <target state="translated">속성의 크기를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4de2dad5038df71f5d1f6215011c8210c3282559" translate="yes" xml:space="preserve">
          <source>Validate the uniqueness of an attribute value on a given database table.</source>
          <target state="translated">주어진 데이터베이스 테이블에서 속성 값의 고유성을 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="de38fa8a655f8b5e50625c17a41dfeea1cf2a23a" translate="yes" xml:space="preserve">
          <source>Validate the user login request.</source>
          <target state="translated">사용자 로그인 요청을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8c241a937c862bd3d5631ca459661d2e8dde74fa" translate="yes" xml:space="preserve">
          <source>Validate the value of an attribute is a multiple of a given value.</source>
          <target state="translated">속성 값이 주어진 값의 배수인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ebe65eabeb395f7b300063479ce1fcebed8a77c9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize</source>
          <target state="translated">ValidatePostSize</target>
        </trans-unit>
        <trans-unit id="92bd9f078a7aa54cbfd9792ee811214cfd88639c" translate="yes" xml:space="preserve">
          <source>ValidatePostSize (Foundation\Http)</source>
          <target state="translated">ValidatePostSize (Foundation \ Http)</target>
        </trans-unit>
        <trans-unit id="785c4f87ee49ded109f858c636de1b67a57e5ba9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::getPostMaxSize()</source>
          <target state="translated">ValidatePostSize::getPostMaxSize()</target>
        </trans-unit>
        <trans-unit id="ce2714ef0c280eb8a650cc2c484823120e6e7b0e" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::handle()</source>
          <target state="translated">ValidatePostSize::handle()</target>
        </trans-unit>
        <trans-unit id="afc878921cac9b9f093e4550b344fbf95dcc3443" translate="yes" xml:space="preserve">
          <source>ValidateSignature</source>
          <target state="translated">ValidateSignature</target>
        </trans-unit>
        <trans-unit id="15ae3bafa217f181e654e04ece79a81cf1c10448" translate="yes" xml:space="preserve">
          <source>ValidateSignature (Routing\Middleware)</source>
          <target state="translated">서명 확인 (라우팅 \ 미들웨어)</target>
        </trans-unit>
        <trans-unit id="3d6f80ddfb2b22707b6eedb50d2343d46f1d51a4" translate="yes" xml:space="preserve">
          <source>ValidateSignature::handle()</source>
          <target state="translated">ValidateSignature::handle()</target>
        </trans-unit>
        <trans-unit id="75444607bba6453dbace639fe614c84c90652bc0" translate="yes" xml:space="preserve">
          <source>Validated</source>
          <target state="translated">Validated</target>
        </trans-unit>
        <trans-unit id="a1ef2d5c2c524e09ce3c10a46e7bbf44d7bbe886" translate="yes" xml:space="preserve">
          <source>Validated (Auth\Events)</source>
          <target state="translated">검증 됨 (Auth \ Events)</target>
        </trans-unit>
        <trans-unit id="c41c2c41f57eb8b83498386cfc1f9d93b2c6c1b4" translate="yes" xml:space="preserve">
          <source>Validated::__construct()</source>
          <target state="translated">Validated::__construct()</target>
        </trans-unit>
        <trans-unit id="15a564685a9be19b2555452b38bbeb7aa085d56c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes</source>
          <target state="translated">ValidatesAttributes</target>
        </trans-unit>
        <trans-unit id="c2da878831cc17d046f3cfcae6dd4d9feaa41185" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes (Validation\Concerns)</source>
          <target state="translated">속성 확인 (유효성 확인 \ 문제)</target>
        </trans-unit>
        <trans-unit id="f26a2829eb4c948a520201c9bc4d7c5aaa353ea0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::allFailingRequired()</source>
          <target state="translated">ValidatesAttributes::allFailingRequired()</target>
        </trans-unit>
        <trans-unit id="17ab6463be9869ca7decd2725c86ae6804cbdceb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::anyFailingRequired()</source>
          <target state="translated">ValidatesAttributes::anyFailingRequired()</target>
        </trans-unit>
        <trans-unit id="b4ea82aee8dd7955d918c7575049dd4b50815cce" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::checkDateTimeOrder()</source>
          <target state="translated">ValidatesAttributes::checkDateTimeOrder()</target>
        </trans-unit>
        <trans-unit id="36b3f6be1ccd7c4a65473959921e9e6c2f980799" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compare()</source>
          <target state="translated">ValidatesAttributes::compare()</target>
        </trans-unit>
        <trans-unit id="9d6ef883fb6aab2c4fd83f3a574c5317da9e0537" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compareDates()</source>
          <target state="translated">ValidatesAttributes::compareDates()</target>
        </trans-unit>
        <trans-unit id="2ecdab7f49465a08395a49c363503ae61a364390" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToBoolean()</source>
          <target state="translated">ValidatesAttributes::convertValuesToBoolean()</target>
        </trans-unit>
        <trans-unit id="26bd520421a9cfef6922b12577a7d7faa25420cd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToNull()</source>
          <target state="translated">ValidatesAttributes::convertValuesToNull()</target>
        </trans-unit>
        <trans-unit id="3281493509b34c2dac4009357805683d4b43b8f2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::extractDistinctValues()</source>
          <target state="translated">ValidatesAttributes::extractDistinctValues()</target>
        </trans-unit>
        <trans-unit id="9755ba6b5238da9ef1ba9e1f70786033f5868155" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsBasicDimensionChecks()</source>
          <target state="translated">ValidatesAttributes::failsBasicDimensionChecks()</target>
        </trans-unit>
        <trans-unit id="b8a65b66e00f6b810b38658964776cc50657d1de" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsRatioCheck()</source>
          <target state="translated">ValidatesAttributes::failsRatioCheck()</target>
        </trans-unit>
        <trans-unit id="53f16e6a6081e9637ef6829aec91a770c6e22e34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateFormat()</source>
          <target state="translated">ValidatesAttributes::getDateFormat()</target>
        </trans-unit>
        <trans-unit id="caa5d0f93765937c0c1368dc0092fa540a7e4b10" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTime()</source>
          <target state="translated">ValidatesAttributes::getDateTime()</target>
        </trans-unit>
        <trans-unit id="ea75627158edec50e9d016c73b7becaa7e58ec13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimeWithOptionalFormat()</source>
          <target state="translated">ValidatesAttributes::getDateTimeWithOptionalFormat()</target>
        </trans-unit>
        <trans-unit id="bca1c394d5b0ff34d91dd10bc7841344e4ac9b71" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimestamp()</source>
          <target state="translated">ValidatesAttributes::getDateTimestamp()</target>
        </trans-unit>
        <trans-unit id="0d5fb1c4ce501f52c739b45e8be65320ce0c42e1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDistinctValues()</source>
          <target state="translated">ValidatesAttributes::getDistinctValues()</target>
        </trans-unit>
        <trans-unit id="926b2d79fbb05c380c51b3c3a37eff4d2ba44b99" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExistCount()</source>
          <target state="translated">ValidatesAttributes::getExistCount()</target>
        </trans-unit>
        <trans-unit id="f59abd6262f05833531c2e1033b06bcbc244b6dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExtraConditions()</source>
          <target state="translated">ValidatesAttributes::getExtraConditions()</target>
        </trans-unit>
        <trans-unit id="c52e25b945d3eb212e97b4affb4d3cac676c8f25" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getQueryColumn()</source>
          <target state="translated">ValidatesAttributes::getQueryColumn()</target>
        </trans-unit>
        <trans-unit id="8455c55feabd6d7ce068a01e09c2c6b8486ae69b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getSize()</source>
          <target state="translated">ValidatesAttributes::getSize()</target>
        </trans-unit>
        <trans-unit id="cceefab8c9b2d78f2f606ee90fb219980224da07" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueExtra()</source>
          <target state="translated">ValidatesAttributes::getUniqueExtra()</target>
        </trans-unit>
        <trans-unit id="3fe4af36e6c262b3fe29811105062a2795c4dbb4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueIds()</source>
          <target state="translated">ValidatesAttributes::getUniqueIds()</target>
        </trans-unit>
        <trans-unit id="c5eefe1190bfed327c0a31ea17d8d187c18c3957" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::guessColumnForQuery()</source>
          <target state="translated">ValidatesAttributes::guessColumnForQuery()</target>
        </trans-unit>
        <trans-unit id="e7449d6991f3b58e1ec312a92db888b445e44425" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isSameType()</source>
          <target state="translated">ValidatesAttributes::isSameType()</target>
        </trans-unit>
        <trans-unit id="a155e9709c503da5a1b7e6a8aef90390e9558fcc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isTestingRelativeDateTime()</source>
          <target state="translated">ValidatesAttributes::isTestingRelativeDateTime()</target>
        </trans-unit>
        <trans-unit id="0c73aa79a25c0b52ca96aab466ed860a9f4aae12" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isValidFileInstance()</source>
          <target state="translated">ValidatesAttributes::isValidFileInstance()</target>
        </trans-unit>
        <trans-unit id="2e7951962e3ab51b64a56f4c2ef90c52fab55c86" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseNamedParameters()</source>
          <target state="translated">ValidatesAttributes::parseNamedParameters()</target>
        </trans-unit>
        <trans-unit id="313db3e4762d349a8645e5e253080597a0e3269e" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseTable()</source>
          <target state="translated">ValidatesAttributes::parseTable()</target>
        </trans-unit>
        <trans-unit id="ee8b24b967f1c30b09de39f3bc3de07fcfc1d8dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareUniqueId()</source>
          <target state="translated">ValidatesAttributes::prepareUniqueId()</target>
        </trans-unit>
        <trans-unit id="f98ec13ef9fc729e83b949a3c3959ec266cb777b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareValuesAndOther()</source>
          <target state="translated">ValidatesAttributes::prepareValuesAndOther()</target>
        </trans-unit>
        <trans-unit id="cdd183c2c64bf139e4dae5056616c2b65dcc74f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireParameterCount()</source>
          <target state="translated">ValidatesAttributes::requireParameterCount()</target>
        </trans-unit>
        <trans-unit id="bcb5dd1a9bb118e26d5f232b2d1dc2964a585dbb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireSameType()</source>
          <target state="translated">ValidatesAttributes::requireSameType()</target>
        </trans-unit>
        <trans-unit id="0d13a5838a4f0c4da19adb3fd2f5bf2390ad77cc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBeNumeric()</source>
          <target state="translated">ValidatesAttributes::shouldBeNumeric()</target>
        </trans-unit>
        <trans-unit id="b85ae9ecaf5bfcf31309841360332b1c8b1c8b0d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBlockPhpUpload()</source>
          <target state="translated">ValidatesAttributes::shouldBlockPhpUpload()</target>
        </trans-unit>
        <trans-unit id="fb265ae64eae56feb408d97f16b4feb7c582c644" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAccepted()</source>
          <target state="translated">ValidatesAttributes::validateAccepted()</target>
        </trans-unit>
        <trans-unit id="c87931bddfb6a2f076925a4e18bc1e0910f42c6d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateActiveUrl()</source>
          <target state="translated">ValidatesAttributes::validateActiveUrl()</target>
        </trans-unit>
        <trans-unit id="9cf63454c83006cd41430505eff7f202fc032510" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfter()</source>
          <target state="translated">ValidatesAttributes::validateAfter()</target>
        </trans-unit>
        <trans-unit id="3056108db86af1490a780f054255d83d296f54a4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfterOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateAfterOrEqual()</target>
        </trans-unit>
        <trans-unit id="13306c88f3ec881df7cb477c3be669dddfde7cc3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlpha()</source>
          <target state="translated">ValidatesAttributes::validateAlpha()</target>
        </trans-unit>
        <trans-unit id="4747544e4302a6d6faaa18284256d8dca0d12930" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaDash()</source>
          <target state="translated">ValidatesAttributes::validateAlphaDash()</target>
        </trans-unit>
        <trans-unit id="179edefc28013c221b375bebe12a4b737637fce7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaNum()</source>
          <target state="translated">ValidatesAttributes::validateAlphaNum()</target>
        </trans-unit>
        <trans-unit id="35575d7897a1687dbea2c9f4c592b83a5f60dd43" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateArray()</source>
          <target state="translated">ValidatesAttributes::validateArray()</target>
        </trans-unit>
        <trans-unit id="ca04e58627c5ed01c71cd5901386a1e3f4e39fdf" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBail()</source>
          <target state="translated">ValidatesAttributes::validateBail()</target>
        </trans-unit>
        <trans-unit id="98a0b2dd0a7ceacf8b5581df347c661f68655ee8" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBefore()</source>
          <target state="translated">ValidatesAttributes::validateBefore()</target>
        </trans-unit>
        <trans-unit id="4c15f1f2d71d6f89df4030f93d8db0a3ecf9cc21" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBeforeOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateBeforeOrEqual()</target>
        </trans-unit>
        <trans-unit id="b034f66d1277663bc78b1845a81a3eeb33d6c659" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBetween()</source>
          <target state="translated">ValidatesAttributes::validateBetween()</target>
        </trans-unit>
        <trans-unit id="b219e2fbe777d8e86b558fa850073798abd251bb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBoolean()</source>
          <target state="translated">ValidatesAttributes::validateBoolean()</target>
        </trans-unit>
        <trans-unit id="2dc8ea025cbc8d856957aea0c5549f0b0b5da787" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateConfirmed()</source>
          <target state="translated">ValidatesAttributes::validateConfirmed()</target>
        </trans-unit>
        <trans-unit id="e254bff7405cb3d982d25ef153a5cd2d2a896a9a" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDate()</source>
          <target state="translated">ValidatesAttributes::validateDate()</target>
        </trans-unit>
        <trans-unit id="544bc49f8febf9d72c4ec18536f98c0a6f839e1d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateEquals()</source>
          <target state="translated">ValidatesAttributes::validateDateEquals()</target>
        </trans-unit>
        <trans-unit id="7d940bcf4d3615819f8f922bd36723b3eb0a5d6b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateFormat()</source>
          <target state="translated">ValidatesAttributes::validateDateFormat()</target>
        </trans-unit>
        <trans-unit id="152be1cad8c8ae7404d166e8ee7b14f06937a348" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDifferent()</source>
          <target state="translated">ValidatesAttributes::validateDifferent()</target>
        </trans-unit>
        <trans-unit id="a99d5ef40bf60b4794a19274b96ffebd235918d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigits()</source>
          <target state="translated">ValidatesAttributes::validateDigits()</target>
        </trans-unit>
        <trans-unit id="3117683274fdc9599428dca5febe4b55b47412e7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigitsBetween()</source>
          <target state="translated">ValidatesAttributes::validateDigitsBetween()</target>
        </trans-unit>
        <trans-unit id="ad641c00870bc9c718ad875a9fbb3124bea942c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDimensions()</source>
          <target state="translated">ValidatesAttributes::validateDimensions()</target>
        </trans-unit>
        <trans-unit id="032d50039ab84604f989aa7bcce2f07eda5286c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDistinct()</source>
          <target state="translated">ValidatesAttributes::validateDistinct()</target>
        </trans-unit>
        <trans-unit id="99e3429d1b02317737400ed6a351bc4ec2bab7ca" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEmail()</source>
          <target state="translated">ValidatesAttributes::validateEmail()</target>
        </trans-unit>
        <trans-unit id="f9e60d6180cb4d20186c1b498a72d647d2973e9f" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEndsWith()</source>
          <target state="translated">ValidatesAttributes::validateEndsWith()</target>
        </trans-unit>
        <trans-unit id="3269ae3af0f30561fcdd5ebe257cc39cfb060635" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeIf()</source>
          <target state="translated">ValidatesAttributes::validateExcludeIf()</target>
        </trans-unit>
        <trans-unit id="a5c4e6ba4161a32ba1f7aa7fbef4fa19bacf0c80" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeUnless()</source>
          <target state="translated">ValidatesAttributes::validateExcludeUnless()</target>
        </trans-unit>
        <trans-unit id="22216f83687e2b6fc60403a832cd6227fb18d101" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeWithout()</source>
          <target state="translated">ValidatesAttributes::validateExcludeWithout()</target>
        </trans-unit>
        <trans-unit id="9588b6001d8ef93fec693d3ed14c4ae6adf97ada" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExists()</source>
          <target state="translated">ValidatesAttributes::validateExists()</target>
        </trans-unit>
        <trans-unit id="a0bfd3226e2644da8585cf113b09b2c1a2eeb7e3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFile()</source>
          <target state="translated">ValidatesAttributes::validateFile()</target>
        </trans-unit>
        <trans-unit id="9c0f1429368dcf05a8df3c8ee6e40499948fb023" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFilled()</source>
          <target state="translated">ValidatesAttributes::validateFilled()</target>
        </trans-unit>
        <trans-unit id="9b4e9f6e2a47f7f65d950a900ebb383353b384b3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGt()</source>
          <target state="translated">ValidatesAttributes::validateGt()</target>
        </trans-unit>
        <trans-unit id="13ba7fa1cd8c3e233c52f75d9f47289de7f987c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGte()</source>
          <target state="translated">ValidatesAttributes::validateGte()</target>
        </trans-unit>
        <trans-unit id="72c6c145fdaeee7e546e8cfdd2ee95f78b7faece" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateImage()</source>
          <target state="translated">ValidatesAttributes::validateImage()</target>
        </trans-unit>
        <trans-unit id="c851a75a89f0e58991ca4c32567a9725bb8c91c2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIn()</source>
          <target state="translated">ValidatesAttributes::validateIn()</target>
        </trans-unit>
        <trans-unit id="c9cf7aa36bb6d0c11a492a9543064154d8a7482b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInArray()</source>
          <target state="translated">ValidatesAttributes::validateInArray()</target>
        </trans-unit>
        <trans-unit id="8543936699e4126458a989d337713b544f546b06" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInteger()</source>
          <target state="translated">ValidatesAttributes::validateInteger()</target>
        </trans-unit>
        <trans-unit id="d291f469bf1aec308ee24c46d6ba0c9c4c10b931" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIp()</source>
          <target state="translated">ValidatesAttributes::validateIp()</target>
        </trans-unit>
        <trans-unit id="819ffe6dc31a9afc0ea9e1dff2a89db682ec7b4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv4()</source>
          <target state="translated">ValidatesAttributes::validateIpv4()</target>
        </trans-unit>
        <trans-unit id="4c4e32702f18f5a821ae0769351b7ef892f8ff0c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv6()</source>
          <target state="translated">ValidatesAttributes::validateIpv6()</target>
        </trans-unit>
        <trans-unit id="06a81f5a919432b01dd535f7d9b99f141d6d723b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateJson()</source>
          <target state="translated">ValidatesAttributes::validateJson()</target>
        </trans-unit>
        <trans-unit id="cb5bf08eb2c8df8949b434cebbc1543dab8bf1e6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLt()</source>
          <target state="translated">ValidatesAttributes::validateLt()</target>
        </trans-unit>
        <trans-unit id="88d78fe29f6ac523e756ae962df9aa9abba815f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLte()</source>
          <target state="translated">ValidatesAttributes::validateLte()</target>
        </trans-unit>
        <trans-unit id="1385baff2fe83e3de5283fba0cb9c77782729aeb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMax()</source>
          <target state="translated">ValidatesAttributes::validateMax()</target>
        </trans-unit>
        <trans-unit id="505c9f683890eef9a7c5ef3fbdc92a35d27f0db1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimes()</source>
          <target state="translated">ValidatesAttributes::validateMimes()</target>
        </trans-unit>
        <trans-unit id="a95fb3ba2981c6c221afae864c64e58c0a8ec067" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimetypes()</source>
          <target state="translated">ValidatesAttributes::validateMimetypes()</target>
        </trans-unit>
        <trans-unit id="dc961644487cb442024adaabb77563d02b8a494b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMin()</source>
          <target state="translated">ValidatesAttributes::validateMin()</target>
        </trans-unit>
        <trans-unit id="43dc8f0aa309acfae1c55fe1f78cd2ff870945a1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMultipleOf()</source>
          <target state="translated">ValidatesAttributes::validateMultipleOf()</target>
        </trans-unit>
        <trans-unit id="f5bc035770e261fcd54fd8f8cfb01c95199383e0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotIn()</source>
          <target state="translated">ValidatesAttributes::validateNotIn()</target>
        </trans-unit>
        <trans-unit id="ac4723039d23b91d4352f60c3fed4cc6b9bb1b55" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotRegex()</source>
          <target state="translated">ValidatesAttributes::validateNotRegex()</target>
        </trans-unit>
        <trans-unit id="376978bdd35c4e52b342505163f7f860c39ba418" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNullable()</source>
          <target state="translated">ValidatesAttributes::validateNullable()</target>
        </trans-unit>
        <trans-unit id="86c84b9d951f1bb91a41049c228b4d352e07b967" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNumeric()</source>
          <target state="translated">ValidatesAttributes::validateNumeric()</target>
        </trans-unit>
        <trans-unit id="592182a7a458be6b8a8e61bb2aed0dbfe3d5b7d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePassword()</source>
          <target state="translated">ValidatesAttributes::validatePassword()</target>
        </trans-unit>
        <trans-unit id="c4e8973fa41f090d021cd8e2f08f0600ae8fe3dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePresent()</source>
          <target state="translated">ValidatesAttributes::validatePresent()</target>
        </trans-unit>
        <trans-unit id="b9ed19d61ba5cfae1a5b66d04ef25095b7417918" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRegex()</source>
          <target state="translated">ValidatesAttributes::validateRegex()</target>
        </trans-unit>
        <trans-unit id="93b9483de8cb19e716c9b2f981cdacf987665b18" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequired()</source>
          <target state="translated">ValidatesAttributes::validateRequired()</target>
        </trans-unit>
        <trans-unit id="3c96edce9f256e20fdabb4c53eca4a9b7bc16da4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredIf()</source>
          <target state="translated">ValidatesAttributes::validateRequiredIf()</target>
        </trans-unit>
        <trans-unit id="df14ccbac1f6968f91992ea832fedb75710c218d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredUnless()</source>
          <target state="translated">ValidatesAttributes::validateRequiredUnless()</target>
        </trans-unit>
        <trans-unit id="6625f42f8ac126be9f4e250b6b487ff3f42257c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWith()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWith()</target>
        </trans-unit>
        <trans-unit id="d6af8c8b502420f2d63168ce305b0185e424e831" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithAll()</target>
        </trans-unit>
        <trans-unit id="516354e47c82f19903911d2d0a54947d6a98afdb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithout()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithout()</target>
        </trans-unit>
        <trans-unit id="dba63898509349c82911d1755cca577c5d9921c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithoutAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithoutAll()</target>
        </trans-unit>
        <trans-unit id="df2d92d4c290fe822d31bec9c262872e61139dc7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSame()</source>
          <target state="translated">ValidatesAttributes::validateSame()</target>
        </trans-unit>
        <trans-unit id="a757fa81a30699fb11a5951771a326ba238107c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSize()</source>
          <target state="translated">ValidatesAttributes::validateSize()</target>
        </trans-unit>
        <trans-unit id="79dcee6e817014cca8bb1f6290fe530003761a4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSometimes()</source>
          <target state="translated">ValidatesAttributes::validateSometimes()</target>
        </trans-unit>
        <trans-unit id="788ba8e5b0240e3da85815432bbae103e411c551" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateStartsWith()</source>
          <target state="translated">ValidatesAttributes::validateStartsWith()</target>
        </trans-unit>
        <trans-unit id="751232d79c720436f26c06749e3b8058000be3fb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateString()</source>
          <target state="translated">ValidatesAttributes::validateString()</target>
        </trans-unit>
        <trans-unit id="26e84c4b92f57ae5eee015ff2e2aa99b693247b2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateTimezone()</source>
          <target state="translated">ValidatesAttributes::validateTimezone()</target>
        </trans-unit>
        <trans-unit id="947212bbac1c5ea9b2d210e8704b3b5958ca0d34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUnique()</source>
          <target state="translated">ValidatesAttributes::validateUnique()</target>
        </trans-unit>
        <trans-unit id="4316f8e2be1cf266bf11de489843b05f831b8b13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUrl()</source>
          <target state="translated">ValidatesAttributes::validateUrl()</target>
        </trans-unit>
        <trans-unit id="7a09356834e14b14774e34cc03804c367ddd1733" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUuid()</source>
          <target state="translated">ValidatesAttributes::validateUuid()</target>
        </trans-unit>
        <trans-unit id="dc4e00c068a8796f6dcd067679a6b471ff5cedfd" translate="yes" xml:space="preserve">
          <source>ValidatesRequests</source>
          <target state="translated">ValidatesRequests</target>
        </trans-unit>
        <trans-unit id="c7313f87e451a4fed617cfecb6c360020c54e4f9" translate="yes" xml:space="preserve">
          <source>ValidatesRequests (Foundation\Validation)</source>
          <target state="translated">ValidatesRequests (Foundation \ Validation)</target>
        </trans-unit>
        <trans-unit id="d7aa60a5c48dabb9207ddfe5cd5080de6c2faec5" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::getValidationFactory()</source>
          <target state="translated">ValidatesRequests::getValidationFactory()</target>
        </trans-unit>
        <trans-unit id="bf943b1ea7666b2e346af49da9d27ffb566683d4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validate()</source>
          <target state="translated">ValidatesRequests::validate()</target>
        </trans-unit>
        <trans-unit id="dc0a77f883907caa6346b31aa02594e835a999f1" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWith()</source>
          <target state="translated">ValidatesRequests::validateWith()</target>
        </trans-unit>
        <trans-unit id="eaad482e5b4fdd3613dd02038395f3271e68eab4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWithBag()</source>
          <target state="translated">ValidatesRequests::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="36d14d9e65e3d3bb292e77b97d10971dfaa0eef5" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved</source>
          <target state="translated">ValidatesWhenResolved</target>
        </trans-unit>
        <trans-unit id="58c723e903ed899e23a0b50054de836a970d4963" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved (Contracts)</source>
          <target state="translated">해결시 확인 (계약)</target>
        </trans-unit>
        <trans-unit id="2f6a1b408ae12ea348c7ca3acaadd11ece13b70c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved::validateResolved()</source>
          <target state="translated">ValidatesWhenResolved::validateResolved()</target>
        </trans-unit>
        <trans-unit id="aa59a86ea9bada8b6bea60bd9bb399421b0fbfc7" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait</source>
          <target state="translated">ValidatesWhenResolvedTrait</target>
        </trans-unit>
        <trans-unit id="a81f355a3fb20177fa52fa2d8681ad008df73849" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait (Validation)</source>
          <target state="translated">해결 될 때 유효성 검사 (검증)</target>
        </trans-unit>
        <trans-unit id="c1f993d41e2e43ba5fc223fb73128ffc5f48ad1d" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedAuthorization()</target>
        </trans-unit>
        <trans-unit id="342916d642613af3ffbb5442bea7ca11981405e0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedValidation()</target>
        </trans-unit>
        <trans-unit id="f24db7e28f078c5d7cd9dc2d3b9ec7af380949b0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::getValidatorInstance()</source>
          <target state="translated">ValidatesWhenResolvedTrait::getValidatorInstance()</target>
        </trans-unit>
        <trans-unit id="09e3d4c8c719fdbb74606212ff353c64ce10a24c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passedValidation()</target>
        </trans-unit>
        <trans-unit id="d79a5fc20ac340eb7118cde054ad9e5bd5eecd5e" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passesAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passesAuthorization()</target>
        </trans-unit>
        <trans-unit id="1410346c3e4d95e25b60527831a5f72191d7b263" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::prepareForValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::prepareForValidation()</target>
        </trans-unit>
        <trans-unit id="cb4a3ddd52e06806692d81e29a6f1f5981f17679" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::validateResolved()</source>
          <target state="translated">ValidatesWhenResolvedTrait::validateResolved()</target>
        </trans-unit>
        <trans-unit id="6150496ab8f08515e54f318062f96918132f6d84" translate="yes" xml:space="preserve">
          <source>Validating Arrays</source>
          <target state="translated">배열 검증</target>
        </trans-unit>
        <trans-unit id="ac5e983d5791afb94472f53a83d93a9b149da9bd" translate="yes" xml:space="preserve">
          <source>Validating Signed Route Requests</source>
          <target state="translated">서명 된 라우트 요청 확인</target>
        </trans-unit>
        <trans-unit id="6ca99c365771929f7eb3b62133c00b9482307d2b" translate="yes" xml:space="preserve">
          <source>Validating Successful Uploads</source>
          <target state="translated">성공적인 업로드 확인</target>
        </trans-unit>
        <trans-unit id="3172d5c82735caa5b592b69796a580cc233f01a4" translate="yes" xml:space="preserve">
          <source>Validating When Present</source>
          <target state="translated">존재하는 경우 유효성 검사</target>
        </trans-unit>
        <trans-unit id="84b9626d4dae03e41511b7c72e2c70065bf5ddbc" translate="yes" xml:space="preserve">
          <source>Validating array based form input fields doesn't have to be a pain. You may use &quot;dot notation&quot; to validate attributes within an array. For example, if the incoming HTTP request contains a &lt;code&gt;photos[profile]&lt;/code&gt; field, you may validate it like so:</source>
          <target state="translated">배열 기반 양식 입력 필드의 유효성을 검사 할 필요가 없습니다. &quot;점 표기법&quot;을 사용하여 배열 내의 속성을 확인할 수 있습니다. 예를 들어, 들어오는 HTTP 요청에 &lt;code&gt;photos[profile]&lt;/code&gt; 필드 가 포함되어 있으면 다음 과 같이 유효성을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="64663fbc455226f25626eb6e66c56aff0aefa7ac" translate="yes" xml:space="preserve">
          <source>Validation / Storage Customization</source>
          <target state="translated">유효성 검사 / 스토리지 사용자 지정</target>
        </trans-unit>
        <trans-unit id="21e01fb19ea64886f4d64d5a6d8f7601d4d3b1b7" translate="yes" xml:space="preserve">
          <source>Validation Errors</source>
          <target state="translated">유효성 검사 오류</target>
        </trans-unit>
        <trans-unit id="0600289276ade2488c6f3dd4f302a27cb9ba9013" translate="yes" xml:space="preserve">
          <source>Validation Quickstart</source>
          <target state="translated">유효성 검사 빠른 시작</target>
        </trans-unit>
        <trans-unit id="dd3016277bd4a88df4607f705afe045c61fae853" translate="yes" xml:space="preserve">
          <source>ValidationData</source>
          <target state="translated">ValidationData</target>
        </trans-unit>
        <trans-unit id="2a74245b1ef9b77b941415400e5ac7bd92f9563d" translate="yes" xml:space="preserve">
          <source>ValidationException</source>
          <target state="translated">ValidationException</target>
        </trans-unit>
        <trans-unit id="746c009697ef1ccba2be12bbc057998a227a0617" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser</source>
          <target state="translated">ValidationRuleParser</target>
        </trans-unit>
        <trans-unit id="c6111fc19b1d2bc9cd9b18bbc9890b5d20bff13e" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser::parseParameters</source>
          <target state="translated">ValidationRuleParser::parseParameters</target>
        </trans-unit>
        <trans-unit id="9144d57180c146f2ac0c502d79f742d9d8e77279" translate="yes" xml:space="preserve">
          <source>ValidationServiceProvider</source>
          <target state="translated">ValidationServiceProvider</target>
        </trans-unit>
        <trans-unit id="39a878fb3195097e6c3030e570840bca668989de" translate="yes" xml:space="preserve">
          <source>Validation\Concerns</source>
          <target state="translated">Validation\Concerns</target>
        </trans-unit>
        <trans-unit id="817048f1cede9167f31e7cb1cf94bcde4df7235a" translate="yes" xml:space="preserve">
          <source>Validation\Rules</source>
          <target state="translated">Validation\Rules</target>
        </trans-unit>
        <trans-unit id="6e5b7a60980482ab39ae77b25489457b817517cd" translate="yes" xml:space="preserve">
          <source>Validator</source>
          <target state="translated">Validator</target>
        </trans-unit>
        <trans-unit id="f9f9d594159e3f2c3f8d28d216615dd715ca0095" translate="yes" xml:space="preserve">
          <source>Validator (Contracts)</source>
          <target state="translated">유효성 검사기 (계약자)</target>
        </trans-unit>
        <trans-unit id="09e0fe7247e34cdb327e39e585234667cab29469" translate="yes" xml:space="preserve">
          <source>Validator (Instance)</source>
          <target state="translated">검사기 (인스턴스)</target>
        </trans-unit>
        <trans-unit id="0b336addaaa239952fb415f7fd85918e65045df7" translate="yes" xml:space="preserve">
          <source>Validator (Support\Facades)</source>
          <target state="translated">유효성 검사기 (지원 \ Facades)</target>
        </trans-unit>
        <trans-unit id="a5abb5e3af805ac643b776d8760f718835ae744b" translate="yes" xml:space="preserve">
          <source>Validator (Validation)</source>
          <target state="translated">유효성 검사기 (유효성 검사)</target>
        </trans-unit>
        <trans-unit id="8bef6aa283c23efb213d9dffadf61beb55b65477" translate="yes" xml:space="preserve">
          <source>Validator::__call()</source>
          <target state="translated">Validator::__call()</target>
        </trans-unit>
        <trans-unit id="9bde66161ccef1cb590c46e57ac88ac2533bad14" translate="yes" xml:space="preserve">
          <source>Validator::__construct()</source>
          <target state="translated">Validator::__construct()</target>
        </trans-unit>
        <trans-unit id="1abd94f00b3df4694c659478ad29690e3fa0a57f" translate="yes" xml:space="preserve">
          <source>Validator::addCustomAttributes()</source>
          <target state="translated">Validator::addCustomAttributes()</target>
        </trans-unit>
        <trans-unit id="21594937b1ffe86b61baeaa36f41801ea5169136" translate="yes" xml:space="preserve">
          <source>Validator::addCustomValues()</source>
          <target state="translated">Validator::addCustomValues()</target>
        </trans-unit>
        <trans-unit id="a6dde80edd8816711bb5c3b2806786c0fac34b71" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtension()</source>
          <target state="translated">Validator::addDependentExtension()</target>
        </trans-unit>
        <trans-unit id="716ad347ca4d768925dde99fc3cd4d79cccfc6ad" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtensions()</source>
          <target state="translated">Validator::addDependentExtensions()</target>
        </trans-unit>
        <trans-unit id="c0df5c0e13371d977c068af45e2a497911bb143f" translate="yes" xml:space="preserve">
          <source>Validator::addExtension()</source>
          <target state="translated">Validator::addExtension()</target>
        </trans-unit>
        <trans-unit id="9eb5329d9f6d63d5f0359959849c3c333bd1efaa" translate="yes" xml:space="preserve">
          <source>Validator::addExtensions()</source>
          <target state="translated">Validator::addExtensions()</target>
        </trans-unit>
        <trans-unit id="026a5248f1127c432ba53ac2f495d3a73a3a4f5f" translate="yes" xml:space="preserve">
          <source>Validator::addFailure()</source>
          <target state="translated">Validator::addFailure()</target>
        </trans-unit>
        <trans-unit id="01a28e92d6873f4bb574bbe5c5f54cd3ac614511" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtension()</source>
          <target state="translated">Validator::addImplicitExtension()</target>
        </trans-unit>
        <trans-unit id="f80a828b2833ef3a11050fa47855612257a51326" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtensions()</source>
          <target state="translated">Validator::addImplicitExtensions()</target>
        </trans-unit>
        <trans-unit id="ba0488e8ba658aa57c58a61987f9f5a40bcd9532" translate="yes" xml:space="preserve">
          <source>Validator::addReplacer()</source>
          <target state="translated">Validator::addReplacer()</target>
        </trans-unit>
        <trans-unit id="d7d68509a66123cdb1024e383163792b3521a444" translate="yes" xml:space="preserve">
          <source>Validator::addReplacers()</source>
          <target state="translated">Validator::addReplacers()</target>
        </trans-unit>
        <trans-unit id="27230774d3beaa78570d935e27f429a1f9e0d73c" translate="yes" xml:space="preserve">
          <source>Validator::addRules()</source>
          <target state="translated">Validator::addRules()</target>
        </trans-unit>
        <trans-unit id="abe6805240f5ec8b4addcc8cddbfa3b06f5da284" translate="yes" xml:space="preserve">
          <source>Validator::after()</source>
          <target state="translated">Validator::after()</target>
        </trans-unit>
        <trans-unit id="fa54f2778577b1670233c279e5ae64fc39148337" translate="yes" xml:space="preserve">
          <source>Validator::attributes()</source>
          <target state="translated">Validator::attributes()</target>
        </trans-unit>
        <trans-unit id="d823cef5024bb45f86dcf960916bb5b47f043315" translate="yes" xml:space="preserve">
          <source>Validator::attributesThatHaveMessages()</source>
          <target state="translated">Validator::attributesThatHaveMessages()</target>
        </trans-unit>
        <trans-unit id="f681eee205ce9473a40d7962536b6c00c6e1233d" translate="yes" xml:space="preserve">
          <source>Validator::callClassBasedExtension()</source>
          <target state="translated">Validator::callClassBasedExtension()</target>
        </trans-unit>
        <trans-unit id="bdbc39c0af702f572d39b7e3118d2e8cd2251bed" translate="yes" xml:space="preserve">
          <source>Validator::callExtension()</source>
          <target state="translated">Validator::callExtension()</target>
        </trans-unit>
        <trans-unit id="6f0533704a007ebeef16357656dc7870bff7b77f" translate="yes" xml:space="preserve">
          <source>Validator::dependsOnOtherFields()</source>
          <target state="translated">Validator::dependsOnOtherFields()</target>
        </trans-unit>
        <trans-unit id="88882a126316707bfc806bd1b5fcde47feea3519" translate="yes" xml:space="preserve">
          <source>Validator::errors()</source>
          <target state="translated">Validator::errors()</target>
        </trans-unit>
        <trans-unit id="273def9425464059f65c1aaee06d223b09d3e930" translate="yes" xml:space="preserve">
          <source>Validator::excludeAttribute()</source>
          <target state="translated">Validator::excludeAttribute()</target>
        </trans-unit>
        <trans-unit id="9ebafc5e71635a883e8afc895d7242d6eba290a0" translate="yes" xml:space="preserve">
          <source>Validator::failed()</source>
          <target state="translated">Validator::failed()</target>
        </trans-unit>
        <trans-unit id="488b98eeb868d233b0c30d414a69069f5731ae79" translate="yes" xml:space="preserve">
          <source>Validator::fails()</source>
          <target state="translated">Validator::fails()</target>
        </trans-unit>
        <trans-unit id="25ae2bca3b6115498d3f7d42de77f69e69bbe1fe" translate="yes" xml:space="preserve">
          <source>Validator::getData()</source>
          <target state="translated">Validator::getData()</target>
        </trans-unit>
        <trans-unit id="551ec908fa41f84996feb5a92c20996c7c4dc170" translate="yes" xml:space="preserve">
          <source>Validator::getExplicitKeys()</source>
          <target state="translated">Validator::getExplicitKeys()</target>
        </trans-unit>
        <trans-unit id="a0303d5906e1bfc36bd833212aa3ba10f00e9652" translate="yes" xml:space="preserve">
          <source>Validator::getFacadeAccessor()</source>
          <target state="translated">Validator::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="45835e605f92b1382945edb67a836e63ddc4d03c" translate="yes" xml:space="preserve">
          <source>Validator::getMessageBag()</source>
          <target state="translated">Validator::getMessageBag()</target>
        </trans-unit>
        <trans-unit id="ba703451e38ca9b4eb087266d90da35d0ebf26ec" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifier()</source>
          <target state="translated">Validator::getPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="c7f0d2ed13b35efd587255a5fac70dc9203e0407" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifierFor()</source>
          <target state="translated">Validator::getPresenceVerifierFor()</target>
        </trans-unit>
        <trans-unit id="de2adaa115b4190ffd5e9641b37486d723ce95f3" translate="yes" xml:space="preserve">
          <source>Validator::getPrimaryAttribute()</source>
          <target state="translated">Validator::getPrimaryAttribute()</target>
        </trans-unit>
        <trans-unit id="7de7dbfc7c4805fc1a4d2cbaf55b32153d955f8a" translate="yes" xml:space="preserve">
          <source>Validator::getRule()</source>
          <target state="translated">Validator::getRule()</target>
        </trans-unit>
        <trans-unit id="32c0e39b6a0adfdc422299b3e86f75639259eda2" translate="yes" xml:space="preserve">
          <source>Validator::getRules()</source>
          <target state="translated">Validator::getRules()</target>
        </trans-unit>
        <trans-unit id="8e520480b181e3bc995f91f3852a72d39c677c0c" translate="yes" xml:space="preserve">
          <source>Validator::getTranslator()</source>
          <target state="translated">Validator::getTranslator()</target>
        </trans-unit>
        <trans-unit id="9aa84aebc80134eddc22d691525b5bd77647b5fb" translate="yes" xml:space="preserve">
          <source>Validator::getValue()</source>
          <target state="translated">Validator::getValue()</target>
        </trans-unit>
        <trans-unit id="d8131288f8329952e472cd70e4a22699ed44e310" translate="yes" xml:space="preserve">
          <source>Validator::hasNotFailedPreviousRuleIfPresenceRule()</source>
          <target state="translated">Validator::hasNotFailedPreviousRuleIfPresenceRule()</target>
        </trans-unit>
        <trans-unit id="62885d41cea839c09c03ee34c05e26b947e4d06d" translate="yes" xml:space="preserve">
          <source>Validator::hasRule()</source>
          <target state="translated">Validator::hasRule()</target>
        </trans-unit>
        <trans-unit id="0eca29b14b4ed23a63d5f393240708d56e00c501" translate="yes" xml:space="preserve">
          <source>Validator::invalid()</source>
          <target state="translated">Validator::invalid()</target>
        </trans-unit>
        <trans-unit id="ce101d689a80b1fa1056d68054fb1c4046505982" translate="yes" xml:space="preserve">
          <source>Validator::isImplicit()</source>
          <target state="translated">Validator::isImplicit()</target>
        </trans-unit>
        <trans-unit id="024c957288d4def17d50978022c0e415c37ff174" translate="yes" xml:space="preserve">
          <source>Validator::isNotNullIfMarkedAsNullable()</source>
          <target state="translated">Validator::isNotNullIfMarkedAsNullable()</target>
        </trans-unit>
        <trans-unit id="d58201bd96d770516c5006e4567fcf86bec0768d" translate="yes" xml:space="preserve">
          <source>Validator::isValidatable()</source>
          <target state="translated">Validator::isValidatable()</target>
        </trans-unit>
        <trans-unit id="908e4e0cc3b11ad728317e77aebef8f1885f5f73" translate="yes" xml:space="preserve">
          <source>Validator::messages()</source>
          <target state="translated">Validator::messages()</target>
        </trans-unit>
        <trans-unit id="058a94a4751640bbbbf1faada3bc723e76578cde" translate="yes" xml:space="preserve">
          <source>Validator::parseData()</source>
          <target state="translated">Validator::parseData()</target>
        </trans-unit>
        <trans-unit id="243e56898e63baf5d7f1eaec889fa497350ec157" translate="yes" xml:space="preserve">
          <source>Validator::passes()</source>
          <target state="translated">Validator::passes()</target>
        </trans-unit>
        <trans-unit id="7ba4e61f18f7580719f8c6cc4519c4fd7c9860dd" translate="yes" xml:space="preserve">
          <source>Validator::passesOptionalCheck()</source>
          <target state="translated">Validator::passesOptionalCheck()</target>
        </trans-unit>
        <trans-unit id="f36d3e2269c50e3feaa8898fe67261623b14d1a2" translate="yes" xml:space="preserve">
          <source>Validator::presentOrRuleIsImplicit()</source>
          <target state="translated">Validator::presentOrRuleIsImplicit()</target>
        </trans-unit>
        <trans-unit id="e92fdb3c657c6ed54727488be4b3140a0a8d73ba" translate="yes" xml:space="preserve">
          <source>Validator::removeAttribute()</source>
          <target state="translated">Validator::removeAttribute()</target>
        </trans-unit>
        <trans-unit id="ff795c4327fdb9332cc1ab298a6e995898d74bc7" translate="yes" xml:space="preserve">
          <source>Validator::replaceAsterisksInParameters()</source>
          <target state="translated">Validator::replaceAsterisksInParameters()</target>
        </trans-unit>
        <trans-unit id="f44780a0f916f0e6ff8419167e90c9e3a4d578b1" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholderInString()</source>
          <target state="translated">Validator::replacePlaceholderInString()</target>
        </trans-unit>
        <trans-unit id="801a3ed45b0347f0ecf4d36feb973381e12d031e" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholders()</source>
          <target state="translated">Validator::replacePlaceholders()</target>
        </trans-unit>
        <trans-unit id="175a6b8827fa8473e598f73a9547c26758e998be" translate="yes" xml:space="preserve">
          <source>Validator::setAttributeNames()</source>
          <target state="translated">Validator::setAttributeNames()</target>
        </trans-unit>
        <trans-unit id="cca0f5a13ad192478ff6811d3b9379a92a606317" translate="yes" xml:space="preserve">
          <source>Validator::setContainer()</source>
          <target state="translated">Validator::setContainer()</target>
        </trans-unit>
        <trans-unit id="7d73b27013df883b23bb5bae638b5ba9e668cfcf" translate="yes" xml:space="preserve">
          <source>Validator::setCustomMessages()</source>
          <target state="translated">Validator::setCustomMessages()</target>
        </trans-unit>
        <trans-unit id="1cde8278eec1d98a44e571080a49b782ae5741d1" translate="yes" xml:space="preserve">
          <source>Validator::setData()</source>
          <target state="translated">Validator::setData()</target>
        </trans-unit>
        <trans-unit id="9b90d18719adc21aa647d63e0c00de0c7c5ce9c9" translate="yes" xml:space="preserve">
          <source>Validator::setFallbackMessages()</source>
          <target state="translated">Validator::setFallbackMessages()</target>
        </trans-unit>
        <trans-unit id="5daa160b7cefd119a59718d1baa556ca8c2af8b2" translate="yes" xml:space="preserve">
          <source>Validator::setImplicitAttributesFormatter()</source>
          <target state="translated">Validator::setImplicitAttributesFormatter()</target>
        </trans-unit>
        <trans-unit id="307bf903285fad521eb54283c712361a5a065b97" translate="yes" xml:space="preserve">
          <source>Validator::setPresenceVerifier()</source>
          <target state="translated">Validator::setPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="6dd7618a7102607f8b0f32531337fb77a5771bc0" translate="yes" xml:space="preserve">
          <source>Validator::setRules()</source>
          <target state="translated">Validator::setRules()</target>
        </trans-unit>
        <trans-unit id="9030e63023d5174b967ff2a1cec338abbdbb1380" translate="yes" xml:space="preserve">
          <source>Validator::setTranslator()</source>
          <target state="translated">Validator::setTranslator()</target>
        </trans-unit>
        <trans-unit id="a3e36752cbe9dc5a3458be9da925e8f46cd6b6b1" translate="yes" xml:space="preserve">
          <source>Validator::setValueNames()</source>
          <target state="translated">Validator::setValueNames()</target>
        </trans-unit>
        <trans-unit id="8f391b1993669ab762ec40b8fa1295cae3a89bba" translate="yes" xml:space="preserve">
          <source>Validator::shouldBeExcluded()</source>
          <target state="translated">Validator::shouldBeExcluded()</target>
        </trans-unit>
        <trans-unit id="f75dcc3d8c3f533e2fb56de17fa9d57b8070e98e" translate="yes" xml:space="preserve">
          <source>Validator::shouldStopValidating()</source>
          <target state="translated">Validator::shouldStopValidating()</target>
        </trans-unit>
        <trans-unit id="30fdccd1bede135087c2b485275afe154c5a238c" translate="yes" xml:space="preserve">
          <source>Validator::sometimes()</source>
          <target state="translated">Validator::sometimes()</target>
        </trans-unit>
        <trans-unit id="2b03ca2fde9207c2edc07aeea2002841e071f8da" translate="yes" xml:space="preserve">
          <source>Validator::valid()</source>
          <target state="translated">Validator::valid()</target>
        </trans-unit>
        <trans-unit id="83093e901543a93a05fa8ae6b5e80bfddbbbfdfa" translate="yes" xml:space="preserve">
          <source>Validator::validate()</source>
          <target state="translated">Validator::validate()</target>
        </trans-unit>
        <trans-unit id="3f8fef8aee038d0909ae6f72fa46c8d0843eedc7" translate="yes" xml:space="preserve">
          <source>Validator::validateAttribute()</source>
          <target state="translated">Validator::validateAttribute()</target>
        </trans-unit>
        <trans-unit id="a314bfa45b3adf1256a77ec0f066e1b68c27d1fa" translate="yes" xml:space="preserve">
          <source>Validator::validateUsingCustomRule()</source>
          <target state="translated">Validator::validateUsingCustomRule()</target>
        </trans-unit>
        <trans-unit id="bb2984cd881777e14ae533f4707d6f78deebc9cb" translate="yes" xml:space="preserve">
          <source>Validator::validateWithBag()</source>
          <target state="translated">Validator::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="61e22c307c152eff386d5c15ce9bcb799927108b" translate="yes" xml:space="preserve">
          <source>Validator::validated()</source>
          <target state="translated">Validator::validated()</target>
        </trans-unit>
        <trans-unit id="807e4053bc45088b15dc83ec9738651b61bfa267" translate="yes" xml:space="preserve">
          <source>ValidatorInterface</source>
          <target state="translated">ValidatorInterface</target>
        </trans-unit>
        <trans-unit id="59289c44d296d208a7e3dbb4618747129c7e86cd" translate="yes" xml:space="preserve">
          <source>ValidatorInterface (Routing\Matching)</source>
          <target state="translated">ValidatorInterface (라우팅 \ 매칭)</target>
        </trans-unit>
        <trans-unit id="d2c6cf39d743bcf396be72a4c5516afd721d621e" translate="yes" xml:space="preserve">
          <source>ValidatorInterface::matches()</source>
          <target state="translated">ValidatorInterface::matches()</target>
        </trans-unit>
        <trans-unit id="1d8ccb2516de3489ebb8b2748614c95303b60f7e" translate="yes" xml:space="preserve">
          <source>Value Object Casting</source>
          <target state="translated">가치 객체 캐스팅</target>
        </trans-unit>
        <trans-unit id="12fbe14b21876e01b721ca8b147ccd3e14bef69f" translate="yes" xml:space="preserve">
          <source>ValuePrefix</source>
          <target state="translated">ValuePrefix</target>
        </trans-unit>
        <trans-unit id="72461ac8b6fbc994b5aef6bf388f203910dfe9f8" translate="yes" xml:space="preserve">
          <source>ValuePrefix::create()</source>
          <target state="translated">ValuePrefix::create()</target>
        </trans-unit>
        <trans-unit id="a806f567a0da9636c575eb6b626d06a5efcaee5b" translate="yes" xml:space="preserve">
          <source>ValuePrefix::remove()</source>
          <target state="translated">ValuePrefix::remove()</target>
        </trans-unit>
        <trans-unit id="5c5a080a2368930bf1b1117949e48fda2eccab46" translate="yes" xml:space="preserve">
          <source>Vanilla JS</source>
          <target state="translated">바닐라 JS</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="846e7a77bc3a6be34611b593969a1111633f94e2" translate="yes" xml:space="preserve">
          <source>Variables that are dynamically passed to mailable views &lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;are now automatically &quot;camel cased&quot;&lt;/a&gt;, which makes mailable dynamic variable behavior consistent with dynamic view variables. Dynamic mailable variables are not a documented Laravel feature, so likelihood of impact to your application is low.</source>
          <target state="translated">메일 가능 뷰에 동적으로 전달되는 변수 &lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;는 이제 자동으로 &quot;낙타&quot;&lt;/a&gt; 되어 메일 가능 동적 변수 동작을 동적 뷰 변수와 일치시킵니다. 동적 메일 가능 변수는 문서화 된 Laravel 기능이 아니므로 응용 프로그램에 대한 영향 가능성이 낮습니다.</target>
        </trans-unit>
        <trans-unit id="1b28ca470fa7964b7fb6dd599c8350918ba34169" translate="yes" xml:space="preserve">
          <source>Variadic Tag Dependencies</source>
          <target state="translated">가변 태그 종속성</target>
        </trans-unit>
        <trans-unit id="27ea8d3e9f119ebc625127ec1eae5ffef60fc7ff" translate="yes" xml:space="preserve">
          <source>Vendor Extraction</source>
          <target state="translated">공급 업체 추출</target>
        </trans-unit>
        <trans-unit id="60aa156aec8b7900f2fcc7555572da6806ed404e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand</source>
          <target state="translated">VendorPublishCommand</target>
        </trans-unit>
        <trans-unit id="ba9aac51bbeeb2b8d94ded984e70d3278877151e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand (Foundation)</source>
          <target state="translated">공급 업체 게시 명령 (기초)</target>
        </trans-unit>
        <trans-unit id="5eb11c73725827e1bf3217624dac6d495d0eda45" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::__construct()</source>
          <target state="translated">VendorPublishCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="6d82e346662fc447c071b0cb9304cd16d75cd7ce" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::createParentDirectory()</source>
          <target state="translated">VendorPublishCommand::createParentDirectory()</target>
        </trans-unit>
        <trans-unit id="f9426e4e3b8601829b71ab0d712db62c60fc9844" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::determineWhatShouldBePublished()</source>
          <target state="translated">VendorPublishCommand::determineWhatShouldBePublished()</target>
        </trans-unit>
        <trans-unit id="3a2f6ccad9f3376dc271b765f26ce750a8629028" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::handle()</source>
          <target state="translated">VendorPublishCommand::handle()</target>
        </trans-unit>
        <trans-unit id="a7e16ac2b2e2a07358e63547ba94c2f80f30d0a1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::moveManagedFiles()</source>
          <target state="translated">VendorPublishCommand::moveManagedFiles()</target>
        </trans-unit>
        <trans-unit id="2321b05d3cee837eb16954813b3d18815973beaa" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::parseChoice()</source>
          <target state="translated">VendorPublishCommand::parseChoice()</target>
        </trans-unit>
        <trans-unit id="88279687627a36a1ea7f2f4e0bcf6e3d8b1ff47a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::pathsToPublish()</source>
          <target state="translated">VendorPublishCommand::pathsToPublish()</target>
        </trans-unit>
        <trans-unit id="af47432168b02e3d2e775ca075c44c328e220635" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::promptForProviderOrTag()</source>
          <target state="translated">VendorPublishCommand::promptForProviderOrTag()</target>
        </trans-unit>
        <trans-unit id="1574c7712ed5265ae681647bd3f975f1591bff19" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishDirectory()</source>
          <target state="translated">VendorPublishCommand::publishDirectory()</target>
        </trans-unit>
        <trans-unit id="81d597f62cffda77e3329a775f8a264509b5e7e1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishFile()</source>
          <target state="translated">VendorPublishCommand::publishFile()</target>
        </trans-unit>
        <trans-unit id="856a988a5bb31e9afe36f80b79672d4874093d5a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishItem()</source>
          <target state="translated">VendorPublishCommand::publishItem()</target>
        </trans-unit>
        <trans-unit id="c1cfd1f2871a32069e214897bf1f63a2f5749c94" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishTag()</source>
          <target state="translated">VendorPublishCommand::publishTag()</target>
        </trans-unit>
        <trans-unit id="8a735a1d49e6abfb0f6decb90440d59ad0559cf6" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishableChoices()</source>
          <target state="translated">VendorPublishCommand::publishableChoices()</target>
        </trans-unit>
        <trans-unit id="25c54d5fb6ae5f31f733098e7e205e7e4e894bf3" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::status()</source>
          <target state="translated">VendorPublishCommand::status()</target>
        </trans-unit>
        <trans-unit id="33817a63b651d4a84e7a5d740d58bef5f67a6a2a" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="translated">Verb</target>
        </trans-unit>
        <trans-unit id="aed3b8c6a7c0fbbdbffa59a082415b138a87a6a6" translate="yes" xml:space="preserve">
          <source>Verified</source>
          <target state="translated">Verified</target>
        </trans-unit>
        <trans-unit id="4990372b20215a80d9461942ec22c6a264e5c95b" translate="yes" xml:space="preserve">
          <source>Verified (Auth\Events)</source>
          <target state="translated">확인 됨 (Auth \ Events)</target>
        </trans-unit>
        <trans-unit id="1e0d19fc5305547873e0fb9363de406bef84d26b" translate="yes" xml:space="preserve">
          <source>Verified::__construct()</source>
          <target state="translated">Verified::__construct()</target>
        </trans-unit>
        <trans-unit id="ee90d7d5543cc2e1f5f4aad1d2eaf90d83c96549" translate="yes" xml:space="preserve">
          <source>VerifiesEmails</source>
          <target state="translated">VerifiesEmails</target>
        </trans-unit>
        <trans-unit id="72daaad87bd915f988de1ef417449fd19be953ef" translate="yes" xml:space="preserve">
          <source>VerifiesEmails (Foundation\Auth)</source>
          <target state="translated">전자 메일 확인 (Foundation \ Auth)</target>
        </trans-unit>
        <trans-unit id="ff533e166c7180ef75e6440b243f94b76893ac74" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::resend()</source>
          <target state="translated">VerifiesEmails::resend()</target>
        </trans-unit>
        <trans-unit id="fb00b91262a52e9a6ff5e59654dc1638e2af0ddc" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::show()</source>
          <target state="translated">VerifiesEmails::show()</target>
        </trans-unit>
        <trans-unit id="11039d8339d484b0840bdb6953f5b77792c6eb53" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::verify()</source>
          <target state="translated">VerifiesEmails::verify()</target>
        </trans-unit>
        <trans-unit id="f09c1a37a38b85cd68b664b013db3c35702c3a9e" translate="yes" xml:space="preserve">
          <source>Verify that the encryption payload is valid.</source>
          <target state="translated">암호화 페이로드가 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82e851551f83af80c4fd460e7dce35b9c25fe81f" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken</source>
          <target state="translated">VerifyCsrfToken</target>
        </trans-unit>
        <trans-unit id="481bca3f16c19b1c667d5d078c5a774f386a275b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken (Foundation\Http)</source>
          <target state="translated">VerifyCsrfToken (Foundation \ Http)</target>
        </trans-unit>
        <trans-unit id="a5b38088228e470a5d75e318ba73e736ba95bd6e" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::__construct()</source>
          <target state="translated">VerifyCsrfToken::__construct()</target>
        </trans-unit>
        <trans-unit id="7e6e12f9159344da2b6c521f0aa96e5d1dc6c0c4" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::addCookieToResponse()</source>
          <target state="translated">VerifyCsrfToken::addCookieToResponse()</target>
        </trans-unit>
        <trans-unit id="6af8a4e33186e8a9a29edb243d9a356ae84b7c74" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::getTokenFromRequest()</source>
          <target state="translated">VerifyCsrfToken::getTokenFromRequest()</target>
        </trans-unit>
        <trans-unit id="300aeeedac93060543f4fe4dd397b60afa043dc0" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::handle()</source>
          <target state="translated">VerifyCsrfToken::handle()</target>
        </trans-unit>
        <trans-unit id="955c69feda3cd458fd7daffa6f49a66f69268cd3" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::inExceptArray()</source>
          <target state="translated">VerifyCsrfToken::inExceptArray()</target>
        </trans-unit>
        <trans-unit id="a9814f4b5f82d2e62700728b15778cea7be6d819" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::isReading()</source>
          <target state="translated">VerifyCsrfToken::isReading()</target>
        </trans-unit>
        <trans-unit id="cdc8e5b5a6f1413c075d35904ad14868615d112b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::runningUnitTests()</source>
          <target state="translated">VerifyCsrfToken::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="234104e58b89c3d5c6084eb95bd18d66f91947cf" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::serialized()</source>
          <target state="translated">VerifyCsrfToken::serialized()</target>
        </trans-unit>
        <trans-unit id="04d3868387074252929691e7bf30dff30f3240aa" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::shouldAddXsrfTokenCookie()</source>
          <target state="translated">VerifyCsrfToken::shouldAddXsrfTokenCookie()</target>
        </trans-unit>
        <trans-unit id="73aa614209b04bd56d58fa37ddb497da79f05ca9" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::tokensMatch()</source>
          <target state="translated">VerifyCsrfToken::tokensMatch()</target>
        </trans-unit>
        <trans-unit id="3c6be84b1a0b232d34c6744c5051d91d4f2c89b3" translate="yes" xml:space="preserve">
          <source>VerifyEmail</source>
          <target state="translated">VerifyEmail</target>
        </trans-unit>
        <trans-unit id="28c25950bf5161b431f8eaca12c08d4c676ad0cb" translate="yes" xml:space="preserve">
          <source>VerifyEmail (Auth\Notifications)</source>
          <target state="translated">이메일 확인 (인증 \ 알림)</target>
        </trans-unit>
        <trans-unit id="dfdae09afd0e8b72428282852c5357335fdf7f2a" translate="yes" xml:space="preserve">
          <source>VerifyEmail::buildMailMessage()</source>
          <target state="translated">VerifyEmail::buildMailMessage()</target>
        </trans-unit>
        <trans-unit id="8a03c0cd496b925addd52fcdf10d1a5ebfd7c5d3" translate="yes" xml:space="preserve">
          <source>VerifyEmail::createUrlUsing()</source>
          <target state="translated">VerifyEmail::createUrlUsing()</target>
        </trans-unit>
        <trans-unit id="6372cb0fd0c2f730f37afcaf4e3243c27ec9661b" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMail()</source>
          <target state="translated">VerifyEmail::toMail()</target>
        </trans-unit>
        <trans-unit id="747395ae35e22dcd74852d7ffd4969abeb6733f7" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMailUsing()</source>
          <target state="translated">VerifyEmail::toMailUsing()</target>
        </trans-unit>
        <trans-unit id="77f66035652829511a6c585913671d4e3dc07684" translate="yes" xml:space="preserve">
          <source>VerifyEmail::verificationUrl()</source>
          <target state="translated">VerifyEmail::verificationUrl()</target>
        </trans-unit>
        <trans-unit id="13433abad2e71f2638abe9774c3cdc74102f7764" translate="yes" xml:space="preserve">
          <source>VerifyEmail::via()</source>
          <target state="translated">VerifyEmail::via()</target>
        </trans-unit>
        <trans-unit id="47bb88094ae980a3488e26d5c06c61f56262541c" translate="yes" xml:space="preserve">
          <source>Verifying A Password Against A Hash</source>
          <target state="translated">해시에 대한 비밀번호 확인</target>
        </trans-unit>
        <trans-unit id="ede44ecd9dab58dbdb53971a85a66c62fb10a50f" translate="yes" xml:space="preserve">
          <source>Verifying An Exact JSON Match</source>
          <target state="translated">정확한 JSON 일치 확인</target>
        </trans-unit>
        <trans-unit id="87fc16e974f29a9261e02a6b67b6e18ae3100c86" translate="yes" xml:space="preserve">
          <source>Verifying JSON Paths</source>
          <target state="translated">JSON 경로 확인</target>
        </trans-unit>
        <trans-unit id="634bee50d59107ceb4e2fd3e849d66c1600b8fdb" translate="yes" xml:space="preserve">
          <source>Verifying Webhook Signatures</source>
          <target state="translated">Webhook 서명 확인</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="81bc56b974a9f54ba6d3db31f2adbf63a8300ee6" translate="yes" xml:space="preserve">
          <source>Versioning / Cache Busting</source>
          <target state="translated">버전 관리 / 캐시 버스 팅</target>
        </trans-unit>
        <trans-unit id="e22fc540f2af12c8ec78a747a89bd3b49988f423" translate="yes" xml:space="preserve">
          <source>Versioning Scheme</source>
          <target state="translated">버전 관리 체계</target>
        </trans-unit>
        <trans-unit id="fd8a8491cc0bd951bd841f43ac95a43993e12abd" translate="yes" xml:space="preserve">
          <source>Via Blade Templates</source>
          <target state="translated">비아 블레이드 템플릿</target>
        </trans-unit>
        <trans-unit id="4c53eb56ef64e0264243d307fc1960a19960ab80" translate="yes" xml:space="preserve">
          <source>Via Composer Create-Project</source>
          <target state="translated">Composer Create-Project를 통해</target>
        </trans-unit>
        <trans-unit id="73db5daddd56688e1dda7d522a9b062cd64a0dce" translate="yes" xml:space="preserve">
          <source>Via Controller Helpers</source>
          <target state="translated">컨트롤러 도우미를 통해</target>
        </trans-unit>
        <trans-unit id="d0025b51c080b8656aab5b271be5145d2badee46" translate="yes" xml:space="preserve">
          <source>Via Laravel Installer</source>
          <target state="translated">라 라벨 설치 프로그램을 통해</target>
        </trans-unit>
        <trans-unit id="b303f4566c13cdee6542f610dba3260651a07126" translate="yes" xml:space="preserve">
          <source>Via Middleware</source>
          <target state="translated">미들웨어를 통해</target>
        </trans-unit>
        <trans-unit id="304b7868d1c04a6b3e24553f168d73d19a0eaacb" translate="yes" xml:space="preserve">
          <source>Via Public Properties</source>
          <target state="translated">공공 재산을 통해</target>
        </trans-unit>
        <trans-unit id="81b33d9592194e2212f54c6a8926eb12365a7ca1" translate="yes" xml:space="preserve">
          <source>Via The &lt;code&gt;with&lt;/code&gt; Method:</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 방법을 통해 :</target>
        </trans-unit>
        <trans-unit id="e3b61f5d3d2be4aa656894845ce145e491635ee3" translate="yes" xml:space="preserve">
          <source>Via The User Model</source>
          <target state="translated">사용자 모델을 통해</target>
        </trans-unit>
        <trans-unit id="689d1952b8b1ed7e7ee1f9efd94e37fb4541cb4f" translate="yes" xml:space="preserve">
          <source>Via the &lt;code&gt;faker&lt;/code&gt; property, factories have access to the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">&lt;code&gt;faker&lt;/code&gt; 속성을 통해 공장은 &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP 라이브러리에 액세스 할 수 있으므로 테스트를 위해 다양한 종류의 임의 데이터를 편리하게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="636384962685e7a27a4f3552b6bf81bfe178bd9b" translate="yes" xml:space="preserve">
          <source>View (Contracts)</source>
          <target state="translated">보기 (계약)</target>
        </trans-unit>
        <trans-unit id="c38a4568f526f342e8fcf688778413b79264f388" translate="yes" xml:space="preserve">
          <source>View (Instance)</source>
          <target state="translated">보기 (인스턴스)</target>
        </trans-unit>
        <trans-unit id="ac2091b347f21fadce61dbd640950009db3acb59" translate="yes" xml:space="preserve">
          <source>View (Support\Facades)</source>
          <target state="translated">보기 (지원 \ Facades)</target>
        </trans-unit>
        <trans-unit id="fce585b3bc9ac6775d43e718a94f4cfbf8f3832e" translate="yes" xml:space="preserve">
          <source>View &lt;strong&gt;creators&lt;/strong&gt; are very similar to view composers; however, they are executed immediately after the view is instantiated instead of waiting until the view is about to render. To register a view creator, use the &lt;code&gt;creator&lt;/code&gt; method:</source>
          <target state="translated">뷰 &lt;strong&gt;제작자&lt;/strong&gt; 는 뷰 작곡가와 매우 유사합니다. 그러나 뷰가 렌더링 될 때까지 기다리지 않고 뷰가 인스턴스화 된 직후에 실행됩니다. 뷰 작성자를 등록하려면 &lt;code&gt;creator&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a617c39de9912a57b038bc089fac9aef2fcd602e" translate="yes" xml:space="preserve">
          <source>View Components</source>
          <target state="translated">구성 요소보기</target>
        </trans-unit>
        <trans-unit id="b8beebfe4516b39e3e9cd125c3b013717fc8fba3" translate="yes" xml:space="preserve">
          <source>View Composers</source>
          <target state="translated">작곡가보기</target>
        </trans-unit>
        <trans-unit id="1a887ed3d5c0a73c479f298946b97ae34b6cb6c7" translate="yes" xml:space="preserve">
          <source>View Creators</source>
          <target state="translated">제작자보기</target>
        </trans-unit>
        <trans-unit id="0b356ea8e0756a911b2013cd62103873365bcb04" translate="yes" xml:space="preserve">
          <source>View Data</source>
          <target state="translated">데이터보기</target>
        </trans-unit>
        <trans-unit id="216fac9acc90914885a8b9e2f5ece0b60d24a1cb" translate="yes" xml:space="preserve">
          <source>View Responses</source>
          <target state="translated">응답보기</target>
        </trans-unit>
        <trans-unit id="fad0fbfb5b81d3b4cdda705944cbe470d375c4ce" translate="yes" xml:space="preserve">
          <source>View Routes</source>
          <target state="translated">경로보기</target>
        </trans-unit>
        <trans-unit id="617d854bfb196f4bbe39ef242236cce9417f1b5a" translate="yes" xml:space="preserve">
          <source>View Watcher</source>
          <target state="translated">감시자보기</target>
        </trans-unit>
        <trans-unit id="a6af680459d0b11a021f6dc182a15b0bea1a0595" translate="yes" xml:space="preserve">
          <source>View a list of logs which are written by Valet's services.</source>
          <target state="translated">Valet의 서비스에서 작성한 로그 목록을 봅니다.</target>
        </trans-unit>
        <trans-unit id="bb642ffd803c6d11460735424c344786a7414834" translate="yes" xml:space="preserve">
          <source>View all of your &quot;parked&quot; paths.</source>
          <target state="translated">&quot;주차 된&quot;경로를 모두 봅니다.</target>
        </trans-unit>
        <trans-unit id="e476fc63786200bda3d812334fb2f3c95b57a2fc" translate="yes" xml:space="preserve">
          <source>View composers are callbacks or class methods that are called when a view is rendered. If you have data that you want to be bound to a view each time that view is rendered, a view composer can help you organize that logic into a single location.</source>
          <target state="translated">뷰 작성기는 뷰가 렌더링 될 때 호출되는 콜백 또는 클래스 메서드입니다. 뷰가 렌더링 될 때마다 뷰에 바인딩하려는 데이터가있는 경우 뷰 작성기는 해당 논리를 단일 위치로 구성하는 데 도움을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05c5d346faeb325d0ff51bae601a7260f9617b1d" translate="yes" xml:space="preserve">
          <source>View directory names should not contain the &lt;code&gt;.&lt;/code&gt; character.</source>
          <target state="translated">보기 디렉토리 이름에는 &lt;code&gt;.&lt;/code&gt; 캐릭터.</target>
        </trans-unit>
        <trans-unit id="2ef694be0731d775be969e9dee2904c709e275e7" translate="yes" xml:space="preserve">
          <source>View::getData()</source>
          <target state="translated">View::getData()</target>
        </trans-unit>
        <trans-unit id="12d718b41cea54e89300e228033dc8210dc7ab81" translate="yes" xml:space="preserve">
          <source>View::getFacadeAccessor()</source>
          <target state="translated">View::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="3ecef7336a07ca36532e5ac1234cc535c16a1d99" translate="yes" xml:space="preserve">
          <source>View::name()</source>
          <target state="translated">View::name()</target>
        </trans-unit>
        <trans-unit id="c002348c4cbfabae7f2aa2a0a353278eb8fc7e59" translate="yes" xml:space="preserve">
          <source>View::with()</source>
          <target state="translated">View::with()</target>
        </trans-unit>
        <trans-unit id="92b25985c03cdcff5335fe20c390c36551184e23" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand</source>
          <target state="translated">ViewCacheCommand</target>
        </trans-unit>
        <trans-unit id="68d3e66bb32bed77f80396350b2630d0e4fe7fef" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand (Foundation)</source>
          <target state="translated">ViewCacheCommand (기초)</target>
        </trans-unit>
        <trans-unit id="fa12ebbd1ebe10822612b0886b83da2ba4bc9c1e" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::bladeFilesIn()</source>
          <target state="translated">ViewCacheCommand::bladeFilesIn()</target>
        </trans-unit>
        <trans-unit id="7bb687c6fe711efd3db1f8f5fd9fe66ab594ac3d" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::compileViews()</source>
          <target state="translated">ViewCacheCommand::compileViews()</target>
        </trans-unit>
        <trans-unit id="84d24ca6ac83d82e1e73ae828043db1ae7ffa173" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::handle()</source>
          <target state="translated">ViewCacheCommand::handle()</target>
        </trans-unit>
        <trans-unit id="9da4330c86144a2696923548a4ebb695880c12ca" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::paths()</source>
          <target state="translated">ViewCacheCommand::paths()</target>
        </trans-unit>
        <trans-unit id="c1e60e26f0f206f77b5851b78a6269c2fadb089b" translate="yes" xml:space="preserve">
          <source>ViewClearCommand</source>
          <target state="translated">ViewClearCommand</target>
        </trans-unit>
        <trans-unit id="8e6e83d8b2d895bb88cee297b02622bfebae916d" translate="yes" xml:space="preserve">
          <source>ViewClearCommand (Foundation)</source>
          <target state="translated">ViewClearCommand (기초)</target>
        </trans-unit>
        <trans-unit id="a6cd454a2d601bf5996be869dc74f5a458da5f8c" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::__construct()</source>
          <target state="translated">ViewClearCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="fd48eeeccbb7cf4f670ee13b18bfe76e7f32fd17" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::handle()</source>
          <target state="translated">ViewClearCommand::handle()</target>
        </trans-unit>
        <trans-unit id="36e0c76f563736f6c88b0432a721b2418d20b3b7" translate="yes" xml:space="preserve">
          <source>ViewController</source>
          <target state="translated">ViewController</target>
        </trans-unit>
        <trans-unit id="9e6cb8dd74a9d9e5e8e455d7a7c4e142859204ff" translate="yes" xml:space="preserve">
          <source>ViewController (Routing)</source>
          <target state="translated">ViewController (라우팅)</target>
        </trans-unit>
        <trans-unit id="909287a7c532f879ef5c0cc229d7cba3d44ad1c4" translate="yes" xml:space="preserve">
          <source>ViewController::__construct()</source>
          <target state="translated">ViewController::__construct()</target>
        </trans-unit>
        <trans-unit id="4d4a135538ea1460881b660c21dc3e029b8a5fdf" translate="yes" xml:space="preserve">
          <source>ViewController::__invoke()</source>
          <target state="translated">ViewController::__invoke()</target>
        </trans-unit>
        <trans-unit id="aea61113b1842710f9ac25fd963f7283f452f182" translate="yes" xml:space="preserve">
          <source>ViewErrorBag</source>
          <target state="translated">ViewErrorBag</target>
        </trans-unit>
        <trans-unit id="f7963e44f1ebe85f265d10e7148da4475e6f1c62" translate="yes" xml:space="preserve">
          <source>ViewErrorBag (Support)</source>
          <target state="translated">ViewErrorBag (지원)</target>
        </trans-unit>
        <trans-unit id="d409e2f2ba61778a136c5f6c9c5e1a86e251f6a0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__call()</source>
          <target state="translated">ViewErrorBag::__call()</target>
        </trans-unit>
        <trans-unit id="f4923f90dd20358f3ef924b3446496f85862bb9f" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__get()</source>
          <target state="translated">ViewErrorBag::__get()</target>
        </trans-unit>
        <trans-unit id="1d1b8ef16c752ac7d411f83e2a5222322cf542cc" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__set()</source>
          <target state="translated">ViewErrorBag::__set()</target>
        </trans-unit>
        <trans-unit id="6bd33ca55c4589c854d75bac447bd5d12acd98fb" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__toString()</source>
          <target state="translated">ViewErrorBag::__toString()</target>
        </trans-unit>
        <trans-unit id="a436fe71d64f9c550e9d310dffa42cf461b8628b" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::any()</source>
          <target state="translated">ViewErrorBag::any()</target>
        </trans-unit>
        <trans-unit id="d06414ba3824b8f3f2c2698c8938a27155d41926" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::count()</source>
          <target state="translated">ViewErrorBag::count()</target>
        </trans-unit>
        <trans-unit id="aec4a0c9600fcd41c2f70eb24a68f5ff8f83631e" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBag()</source>
          <target state="translated">ViewErrorBag::getBag()</target>
        </trans-unit>
        <trans-unit id="f2ac1a9a9e028846168aa39e5c657673e479ecaa" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBags()</source>
          <target state="translated">ViewErrorBag::getBags()</target>
        </trans-unit>
        <trans-unit id="b9fb491fc002a38275b35a93bf88f10abc8d17e0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::hasBag()</source>
          <target state="translated">ViewErrorBag::hasBag()</target>
        </trans-unit>
        <trans-unit id="6b09df207b989c9cb5b3a60ac64d8e93d8e71ee6" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::put()</source>
          <target state="translated">ViewErrorBag::put()</target>
        </trans-unit>
        <trans-unit id="e46a0b36d1391d2e2fcd5b8a15363ea9a3069be0" translate="yes" xml:space="preserve">
          <source>ViewFinderInterface</source>
          <target state="translated">ViewFinderInterface</target>
        </trans-unit>
        <trans-unit id="8c814cb87f281c21b5263b1341d5b98df7322113" translate="yes" xml:space="preserve">
          <source>ViewName</source>
          <target state="translated">ViewName</target>
        </trans-unit>
        <trans-unit id="bd159f6b18e6b33ba7d6277d6eef99edb5c9680d" translate="yes" xml:space="preserve">
          <source>ViewServiceProvider</source>
          <target state="translated">ViewServiceProvider</target>
        </trans-unit>
        <trans-unit id="2da6064b2d9fe83acd521ec78b23c36ae3317d6b" translate="yes" xml:space="preserve">
          <source>View\Compilers</source>
          <target state="translated">View\Compilers</target>
        </trans-unit>
        <trans-unit id="f5066f522b00a9f6b984a4528eaa66c2a265a8cd" translate="yes" xml:space="preserve">
          <source>View\Concerns</source>
          <target state="translated">View\Concerns</target>
        </trans-unit>
        <trans-unit id="3ef9c7846ad7408ed1ca056b587f44ba52f217a0" translate="yes" xml:space="preserve">
          <source>View\Engines</source>
          <target state="translated">View\Engines</target>
        </trans-unit>
        <trans-unit id="6f410dbe82914b0c5bf0317bbb149c6280f12c32" translate="yes" xml:space="preserve">
          <source>View\Middleware</source>
          <target state="translated">View\Middleware</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="c4ad283f6ad2ced43a72af53523fbb898b795783" translate="yes" xml:space="preserve">
          <source>Views contain the HTML served by your application and separate your controller / application logic from your presentation logic. Views are stored in the &lt;code&gt;resources/views&lt;/code&gt; directory. A simple view might look something like this:</source>
          <target state="translated">뷰에는 응용 프로그램에서 제공하는 HTML이 포함되며 컨트롤러 / 응용 프로그램 논리와 프레젠테이션 논리를 구분합니다. 뷰는 &lt;code&gt;resources/views&lt;/code&gt; 디렉토리에 저장됩니다 . 간단한보기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c94ddf422987d16f0164145c01e88a54f263be3" translate="yes" xml:space="preserve">
          <source>Views may also be nested within subdirectories of the &lt;code&gt;resources/views&lt;/code&gt; directory. &quot;Dot&quot; notation may be used to reference nested views. For example, if your view is stored at &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt;, you may reference it like so:</source>
          <target state="translated">보기는 &lt;code&gt;resources/views&lt;/code&gt; 디렉터리의 하위 디렉터리 내에 중첩 될 수도 있습니다 . &quot;점&quot;표기법을 사용하여 중첩 된 뷰를 참조 할 수 있습니다. 예를 들어보기가 &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt; 에 저장되어 있다면 다음 과 같이 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0016aa1d302b4434ce107416ddbe852b5be6b50" translate="yes" xml:space="preserve">
          <source>Views rendered via &lt;code&gt;@each&lt;/code&gt; do not inherit the variables from the parent view. If the child view requires these variables, you should use &lt;code&gt;@foreach&lt;/code&gt; and &lt;code&gt;@include&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; 를 통해 렌더링 된 뷰는 상위 뷰에서 변수를 상속하지 않습니다. 자식 뷰에 이러한 변수가 필요한 경우 &lt;code&gt;@foreach&lt;/code&gt; 및 &lt;code&gt;@include&lt;/code&gt; 를 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="09237dbacbb33a0831b186279d9a2723fdcb6836" translate="yes" xml:space="preserve">
          <source>Vue</source>
          <target state="translated">Vue</target>
        </trans-unit>
        <trans-unit id="9c98b2cfaa9d4765b9e2cfb3f936b31569dd6962" translate="yes" xml:space="preserve">
          <source>Vue (Foundation\Console)</source>
          <target state="translated">Vue (Foundation \ Console)</target>
        </trans-unit>
        <trans-unit id="e6579d8fdec926cbc1031ee4bdaa166a7ab5940c" translate="yes" xml:space="preserve">
          <source>Vue::install()</source>
          <target state="translated">Vue::install()</target>
        </trans-unit>
        <trans-unit id="8649e69091a6d5c4eb2d2d03d7b4bb1f158d41ae" translate="yes" xml:space="preserve">
          <source>Vue::updateBootstrapping()</source>
          <target state="translated">Vue::updateBootstrapping()</target>
        </trans-unit>
        <trans-unit id="cbcd70a74512eeadab3512921cb7d817164457c4" translate="yes" xml:space="preserve">
          <source>Vue::updateComponent()</source>
          <target state="translated">Vue::updateComponent()</target>
        </trans-unit>
        <trans-unit id="2b2e1df8765b3d354d8b0924e1cc455ecd831db4" translate="yes" xml:space="preserve">
          <source>Vue::updatePackageArray()</source>
          <target state="translated">Vue::updatePackageArray()</target>
        </trans-unit>
        <trans-unit id="5a7ded80f30477b8e1df7a28ca05d7fae8123953" translate="yes" xml:space="preserve">
          <source>Vue::updateWebpackConfiguration()</source>
          <target state="translated">Vue::updateWebpackConfiguration()</target>
        </trans-unit>
        <trans-unit id="a86e95a3de6c6d679d6527aad5d93c5216555e6f" translate="yes" xml:space="preserve">
          <source>WEDNESDAY</source>
          <target state="translated">WEDNESDAY</target>
        </trans-unit>
        <trans-unit id="33d30632848d3fd0ed2340adbd7be3e3e8e61010" translate="yes" xml:space="preserve">
          <source>Waiting</source>
          <target state="translated">Waiting</target>
        </trans-unit>
        <trans-unit id="9dcf209dcba3241aed59f7200135e60eaf14fe05" translate="yes" xml:space="preserve">
          <source>Waiting For Elements</source>
          <target state="translated">요소를 기다리는 중</target>
        </trans-unit>
        <trans-unit id="ed6061f202f89fcf8a46854ddd6e953ac4d52bf4" translate="yes" xml:space="preserve">
          <source>Waiting For Links</source>
          <target state="translated">링크를 기다리는 중</target>
        </trans-unit>
        <trans-unit id="6c06973b4a2eae112161738c9e56fef2bf19a56f" translate="yes" xml:space="preserve">
          <source>Waiting For Selectors</source>
          <target state="translated">선택자를 기다리는 중</target>
        </trans-unit>
        <trans-unit id="8915cfb76f2a79cd2bcef3566a351979bbf7b6f5" translate="yes" xml:space="preserve">
          <source>Waiting For Text</source>
          <target state="translated">텍스트를 기다리는 중</target>
        </trans-unit>
        <trans-unit id="f3a93e906bd1e623a66b1a5edc4c444c1cb143fb" translate="yes" xml:space="preserve">
          <source>Waiting On JavaScript Expressions</source>
          <target state="translated">JavaScript 표현식 대기</target>
        </trans-unit>
        <trans-unit id="0ac24870fd2eb25329b6b68d56f0522cc9a7a394" translate="yes" xml:space="preserve">
          <source>Waiting On The Page Location</source>
          <target state="translated">페이지 위치에서 대기 중</target>
        </trans-unit>
        <trans-unit id="33002fb30e1011c3479252eaf5d8d9ae9eeae1ae" translate="yes" xml:space="preserve">
          <source>Waiting On Vue Expressions</source>
          <target state="translated">Vue 표현식 대기</target>
        </trans-unit>
        <trans-unit id="66f079e10a7d7aec45467c653706f4284c46e572" translate="yes" xml:space="preserve">
          <source>Waiting With A Callback</source>
          <target state="translated">콜백으로 대기</target>
        </trans-unit>
        <trans-unit id="f3ec1f68508f56c1e6d4c0a48a87e9c014546b05" translate="yes" xml:space="preserve">
          <source>Waiting for Page Reloads</source>
          <target state="translated">페이지 다시로드를 기다리는 중</target>
        </trans-unit>
        <trans-unit id="995340db620c223b34855337a153200471060564" translate="yes" xml:space="preserve">
          <source>Want to create a Laravel project with login, registration, and more features already built for you? Check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">로그인, 등록 및 이미 구축 된 더 많은 기능으로 Laravel 프로젝트를 만들고 싶습니까? &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5560ea8a458f1e9c46b7acfb8d66ba581e4fa337" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system!</source>
          <target state="translated">빠르게 시작하고 싶으십니까? 새로운 Laravel 애플리케이션에 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 을 설치 합니다. 데이터베이스를 마이그레이션 한 후 브라우저에서 &lt;code&gt;/register&lt;/code&gt; 또는 애플리케이션에 지정된 다른 URL 로 이동하십시오 . Jetstream은 전체 인증 시스템을 스캐 폴딩합니다!</target>
        </trans-unit>
        <trans-unit id="94ba1b6436197f2871eed9afacebad288a2e7f89" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including email verification support!</source>
          <target state="translated">빠르게 시작하고 싶으십니까? 새로운 Laravel 애플리케이션에 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 을 설치 합니다. 데이터베이스를 마이그레이션 한 후 브라우저에서 &lt;code&gt;/register&lt;/code&gt; 또는 애플리케이션에 지정된 다른 URL 로 이동하십시오 . Jetstream은 이메일 확인 지원을 포함하여 전체 인증 시스템을 스캐 폴딩합니다!</target>
        </trans-unit>
        <trans-unit id="6c94f606e7fac0dd6a8d9ff76ae21bbf5b7ec6c8" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including resetting passwords!</source>
          <target state="translated">빠르게 시작하고 싶으십니까? 새로운 Laravel 애플리케이션에 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; 을 설치 합니다. 데이터베이스를 마이그레이션 한 후 브라우저에서 &lt;code&gt;/register&lt;/code&gt; 또는 애플리케이션에 지정된 다른 URL 로 이동하십시오 . Jetstream은 비밀번호 재설정을 포함하여 전체 인증 시스템을 스캐 폴딩합니다!</target>
        </trans-unit>
        <trans-unit id="a8059e31694578c1b0344a76a345357dd60e8f01" translate="yes" xml:space="preserve">
          <source>Warning[]</source>
          <target state="translated">Warning[]</target>
        </trans-unit>
        <trans-unit id="2518c5bcf1dbf29e31772ad830ac92c36e2f45e7" translate="yes" xml:space="preserve">
          <source>Warning[]
    getWarnings()</source>
          <target state="translated">경고 [] getWarnings ()</target>
        </trans-unit>
        <trans-unit id="31079e2838d6a488df71812a6406f9902113cf4a" translate="yes" xml:space="preserve">
          <source>Watching Assets For Changes</source>
          <target state="translated">변경 사항에 대한 자산 감시</target>
        </trans-unit>
        <trans-unit id="10d45f8067cbf5c49bec145ca14df4b3e6457d76" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">&lt;code&gt;laravel/laravel&lt;/code&gt; &lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub 리포지토리&lt;/a&gt; 의 변경 사항을 확인하는 것이 좋습니다 . 이러한 많은 변경이 필요하지는 않지만 이러한 파일을 응용 프로그램과 동기화 된 상태로 유지할 수 있습니다. 이러한 변경 사항 중 일부는이 업그레이드 안내서에서 다루지 만 구성 파일 또는 주석 변경과 같은 다른 사항은 다루지 않습니다. &lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub 비교 도구를 사용&lt;/a&gt; 하여 변경 사항을 쉽게보고 중요한 업데이트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="188331b21c24108bd714dd53a2d51ad4768df41c" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">&lt;code&gt;laravel/laravel&lt;/code&gt; &lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub 리포지토리&lt;/a&gt; 에서 변경 사항을 확인하는 것도 좋습니다 . 이러한 변경 사항 중 많은 부분이 필수는 아니지만 이러한 파일을 애플리케이션과 동기화 상태로 유지할 수 있습니다. 이러한 변경 사항 중 일부는이 업그레이드 가이드에서 다루지 만 구성 파일이나 설명에 대한 변경 사항과 같은 다른 사항은 다루지 않습니다. &lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub 비교 도구를 사용&lt;/a&gt; 하여 변경 사항을 쉽게보고 중요한 업데이트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7156481a1a1be6ca98c965d55920fe22b53ec5fb" translate="yes" xml:space="preserve">
          <source>We attempt to document every possible breaking change. Since some of these breaking changes are in obscure parts of the framework only a portion of these changes may actually affect your application.</source>
          <target state="translated">우리는 가능한 모든 주요 변경 사항을 문서화하려고 시도합니다. 이러한 주요 변경 사항 중 일부는 프레임 워크의 불분명 한 부분이므로 변경 사항 중 일부만 실제로 애플리케이션에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef98fd09547c6700ab606df12b038c51fc1c802b" translate="yes" xml:space="preserve">
          <source>We can mock the call to the &lt;code&gt;Cache&lt;/code&gt; facade by using the &lt;code&gt;shouldReceive&lt;/code&gt; method, which will return an instance of a &lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;Mockery&lt;/a&gt; mock. Since facades are actually resolved and managed by the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, they have much more testability than a typical static class. For example, let's mock our call to the &lt;code&gt;Cache&lt;/code&gt; facade's &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">우리는 호출 조롱 할 수 &lt;code&gt;Cache&lt;/code&gt; 사용하여 외관을 &lt;code&gt;shouldReceive&lt;/code&gt; (A)의 인스턴스를 반환 방법, &lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;조롱의&lt;/a&gt; 모의. Laravel &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 는 실제로 파사드를 확인하고 관리하기 때문에 일반적인 정적 클래스보다 테스트 가능성이 훨씬 높습니다. 예를 들어, &lt;code&gt;Cache&lt;/code&gt; 파사드의 &lt;code&gt;get&lt;/code&gt; 메소드에 대한 호출을 조롱 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="bedef6004beb50d50d9aff32fc5f57658ab3cb12" translate="yes" xml:space="preserve">
          <source>We can write the following test to verify that the &lt;code&gt;Cache::get&lt;/code&gt; method was called with the argument we expected:</source>
          <target state="translated">다음 테스트를 작성하여 예상 한 인수로 &lt;code&gt;Cache::get&lt;/code&gt; 메소드가 호출 되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bdcc0d5946ce4f8ac5185ba8c4fc842448e9f58" translate="yes" xml:space="preserve">
          <source>We could also modify a column to be nullable:</source>
          <target state="translated">열을 nullable로 수정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="eac69c1fb918fc92ab1fd0cd3256e8335a8c9d26" translate="yes" xml:space="preserve">
          <source>We just need to implement each of these methods using a MongoDB connection. For an example of how to implement each of these methods, take a look at the &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; in the framework source code. Once our implementation is complete, we can finish our custom driver registration.</source>
          <target state="translated">MongoDB 연결을 사용하여 이러한 각 메소드를 구현하면됩니다. 이러한 각 메소드를 구현하는 방법에 대한 예제 는 프레임 워크 소스 코드에서 &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; 를 살펴보십시오 . 구현이 완료되면 사용자 정의 드라이버 등록을 완료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0e8cdaa63c430e37eb846ab6630af2dade84df5" translate="yes" xml:space="preserve">
          <source>We may pass content to the &lt;code&gt;slot&lt;/code&gt; by injecting content into the component:</source>
          <target state="translated">컴포넌트에 콘텐츠를 삽입하여 콘텐츠를 &lt;code&gt;slot&lt;/code&gt; 에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a472d31daf95235421ff5f44ec9bfde21808fb22" translate="yes" xml:space="preserve">
          <source>We will access Laravel's authentication services via the &lt;code&gt;Auth&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, so we'll need to make sure to import the &lt;code&gt;Auth&lt;/code&gt; facade at the top of the class. Next, let's check out the &lt;code&gt;attempt&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;Auth&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt; 를 통해 Laravel의 인증 서비스에 액세스 할 것이므로 클래스 상단에 &lt;code&gt;Auth&lt;/code&gt; 파사드 를 가져와야합니다 . 다음으로 &lt;code&gt;attempt&lt;/code&gt; 방법을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d719f706c1e82d33414649974d7dfe68600e2c6" translate="yes" xml:space="preserve">
          <source>We've already examined how to pass data attributes to a component; however, sometimes you may need to specify additional HTML attributes, such as &lt;code&gt;class&lt;/code&gt;, that are not part of the data required for a component to function. Typically, you want to pass these additional attributes down to the root element of the component template. For example, imagine we want to render an &lt;code&gt;alert&lt;/code&gt; component like so:</source>
          <target state="translated">우리는 이미 데이터 속성을 구성 요소에 전달하는 방법을 검토했습니다. 그러나 때로는 구성 요소가 작동하는 데 필요한 데이터의 일부가 아닌 &lt;code&gt;class&lt;/code&gt; 와 같은 추가 HTML 속성을 지정해야 할 수도 있습니다. 일반적으로 이러한 추가 속성을 구성 요소 템플릿의 루트 요소로 전달하려고합니다. 예를 들어 다음 과 같이 &lt;code&gt;alert&lt;/code&gt; 구성 요소 를 렌더링한다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="26037b5b0bfa3f49c1a4763e25ee1bee011d319d" translate="yes" xml:space="preserve">
          <source>Web Server Configuration</source>
          <target state="translated">웹 서버 구성</target>
        </trans-unit>
        <trans-unit id="e21fe93b150dc90da16caac8eecd7697af124c0b" translate="yes" xml:space="preserve">
          <source>Web Servers</source>
          <target state="translated">웹 서버</target>
        </trans-unit>
        <trans-unit id="08893e6585bd4f8739b3fe8d6a5a6848a7267e29" translate="yes" xml:space="preserve">
          <source>Webdriver &amp;amp; Laravel Dusk Utilities</source>
          <target state="translated">Webdriver 및 Laravel Dusk 유틸리티</target>
        </trans-unit>
        <trans-unit id="aded54ec3ed315a888256b00507f341b77a42b8e" translate="yes" xml:space="preserve">
          <source>Webhooks &amp;amp; CSRF Protection</source>
          <target state="translated">웹 후크 및 CSRF 보호</target>
        </trans-unit>
        <trans-unit id="2c3f5842543c3f35e7df5231d55cc2b67a7d32bc" translate="yes" xml:space="preserve">
          <source>Webpack offers a variety of &lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;source mapping styles&lt;/a&gt;. By default, Mix's source mapping style is set to &lt;code&gt;eval-source-map&lt;/code&gt;, which provides a fast rebuild time. If you want to change the mapping style, you may do so using the &lt;code&gt;sourceMaps&lt;/code&gt; method:</source>
          <target state="translated">Webpack은 다양한 &lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;소스 매핑 스타일을 제공&lt;/a&gt; 합니다. 기본적으로 Mix의 소스 매핑 스타일은 빠른 재 구축 시간을 제공하는 &lt;code&gt;eval-source-map&lt;/code&gt; 으로 설정됩니다 . 매핑 스타일을 변경하려면 &lt;code&gt;sourceMaps&lt;/code&gt; 메서드를 사용하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="de833b27867cf0dabdf48eedb5c8d371dafab45b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. As noted above, all you need to do is point a route to the controller:</source>
          <target state="translated">고객의 신용 카드가 만료되면 어떻게됩니까? 걱정할 필요 없음-Cashier에는 고객의 구독을 쉽게 취소 할 수있는 Webhook 컨트롤러가 포함되어 있습니다. 위에서 언급했듯이 컨트롤러에 경로를 지정하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="87919cd5573ff73c0b5eeb8d810478cacaea886b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. Just point a route to the controller:</source>
          <target state="translated">고객의 신용 카드가 만료되면 어떻게됩니까? 걱정할 필요 없음-Cashier에는 고객의 구독을 쉽게 취소 할 수있는 Webhook 컨트롤러가 포함되어 있습니다. 컨트롤러에 경로를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="7428637e3488d0eccd1517040f158683c29113b3" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Paddle determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">고객의 신용 카드가 만료되면 어떻게됩니까? 걱정하지 마세요. 캐셔의 Webhook 컨트롤러가 고객의 구독을 취소합니다. 실패한 지불은 컨트롤러에 의해 자동으로 캡처되고 처리됩니다. Paddle이 구독에 실패했다고 판단하면 컨트롤러는 고객의 구독을 취소합니다 (일반적으로 세 번의 결제 시도 실패 후).</target>
        </trans-unit>
        <trans-unit id="6ba21b4776f95280cd7a6a81340dd1a564900e5e" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Stripe determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">고객의 신용 카드가 만료되면 어떻게됩니까? 걱정하지 마세요. 캐셔의 Webhook 컨트롤러가 고객의 구독을 취소합니다. 실패한 지불은 컨트롤러에 의해 자동으로 캡처되고 처리됩니다. 컨트롤러는 Stripe에서 구독이 실패했다고 판단하면 (일반적으로 세 번의 결제 시도 실패 후) 고객의 구독을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="9a66d4a0910eaef54ed1f2355f51b009b4f380d6" translate="yes" xml:space="preserve">
          <source>When Issuing Personal Access Tokens</source>
          <target state="translated">개인용 액세스 토큰을 발행 할 때</target>
        </trans-unit>
        <trans-unit id="892983fe50cf425a97431f2e54dc9df64982ec00" translate="yes" xml:space="preserve">
          <source>When Requesting Authorization Codes</source>
          <target state="translated">인증 코드를 요청할 때</target>
        </trans-unit>
        <trans-unit id="14d90ed812d7b5f98aac8f60b0355bb851e3ff13" translate="yes" xml:space="preserve">
          <source>When To Use Contracts</source>
          <target state="translated">계약서 사용시기</target>
        </trans-unit>
        <trans-unit id="2426ce7e94e748b33b9c4a6addc3c07e09f43ed2" translate="yes" xml:space="preserve">
          <source>When To Use Facades</source>
          <target state="translated">외관을 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="5fcecf31209da042c789df78979d8c91ae942cdf" translate="yes" xml:space="preserve">
          <source>When a batch job fails, the &lt;code&gt;catch&lt;/code&gt; callback (if assigned) will be invoked. This callback is only invoked for the job that fails within the batch.</source>
          <target state="translated">일괄 작업이 실패하면 &lt;code&gt;catch&lt;/code&gt; 콜백 (할당 된 경우)이 호출됩니다. 이 콜백은 배치 내에서 실패한 작업에 대해서만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9ee6e36d9ea3a168ea2a90f52b68861939ab5a5f" translate="yes" xml:space="preserve">
          <source>When a client is created, it will be issued a client ID and client secret. These values will be used when requesting access tokens from your application. The client creation route will return the new client instance:</source>
          <target state="translated">클라이언트가 작성되면 클라이언트 ID 및 클라이언트 시크릿이 발행됩니다. 이 값은 애플리케이션에서 액세스 토큰을 요청할 때 사용됩니다. 클라이언트 생성 경로는 새 클라이언트 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79664f80c60a7601888248326f1a8fc76cf3fa74" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, and of course a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance, and the date's value will automatically be correctly stored in your database:</source>
          <target state="translated">열이 날짜로 간주되면 해당 값을 UNIX 타임 스탬프, 날짜 문자열 ( &lt;code&gt;Y-m-d&lt;/code&gt; ), 날짜-시간 문자열 및 물론 &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; 인스턴스로 설정하면 날짜 값이 데이터베이스에 자동으로 올바르게 저장됩니다 :</target>
        </trans-unit>
        <trans-unit id="38409375bc40cf2cf018c471fb7393ef58c466aa" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, or a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance. The date's value will be correctly converted and stored in your database:</source>
          <target state="translated">열이 날짜로 간주되면 해당 값을 UNIX 타임 스탬프, 날짜 문자열 ( &lt;code&gt;Y-m-d&lt;/code&gt; ), 날짜-시간 문자열 또는 &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; 인스턴스로 설정할 수 있습니다 . 날짜 값이 올바르게 변환되어 데이터베이스에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b74cc881b7ad29ba66430297949ddfc45d719b6f" translate="yes" xml:space="preserve">
          <source>When a job within a batch fails, Laravel will automatically mark the batch as &quot;cancelled&quot;. If you wish, you may disable this behavior so that a job failure does not automatically mark the batch as cancelled. This may be accomplished by calling the &lt;code&gt;allowFailures&lt;/code&gt; method while dispatching the batch:</source>
          <target state="translated">배치 내의 작업이 실패하면 Laravel은 배치를 &quot;취소됨&quot;으로 자동 표시합니다. 원하는 경우이 동작을 비활성화하여 작업 실패가 자동으로 일괄 처리를 취소됨으로 표시하지 않도록 할 수 있습니다. 배치를 디스패치하는 동안 &lt;code&gt;allowFailures&lt;/code&gt; 메서드를 호출하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="125590675e6bd15a02a86c5eb8b4805c385c6c14" translate="yes" xml:space="preserve">
          <source>When a model &lt;code&gt;belongsTo&lt;/code&gt; or &lt;code&gt;belongsToMany&lt;/code&gt; another model, such as a &lt;code&gt;Comment&lt;/code&gt; which belongs to a &lt;code&gt;Post&lt;/code&gt;, it is sometimes helpful to update the parent's timestamp when the child model is updated. For example, when a &lt;code&gt;Comment&lt;/code&gt; model is updated, you may want to automatically &quot;touch&quot; the &lt;code&gt;updated_at&lt;/code&gt; timestamp of the owning &lt;code&gt;Post&lt;/code&gt;. Eloquent makes it easy. Just add a &lt;code&gt;touches&lt;/code&gt; property containing the names of the relationships to the child model:</source>
          <target state="translated">모델의 경우 &lt;code&gt;belongsTo&lt;/code&gt; 를 또는 &lt;code&gt;belongsToMany&lt;/code&gt; 등 같은 다른 모델, &lt;code&gt;Comment&lt;/code&gt; 에 속하는 &lt;code&gt;Post&lt;/code&gt; , 그것은 부모의 타임 스탬프를 업데이트하는 것이 도움이 될 자식 모델이 업데이트 될 때. 예를 들어, &lt;code&gt;Comment&lt;/code&gt; 모델이 업데이트되면 소유 &lt;code&gt;Post&lt;/code&gt; 의 &lt;code&gt;updated_at&lt;/code&gt; 타임 스탬프 를 자동으로 &quot;터치&quot;할 수 있습니다 . Eloquent는 쉬워졌습니다. 자식 모델과의 관계 이름을 포함 하는 &lt;code&gt;touches&lt;/code&gt; 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfa7b3468c37ed0ba4e4753a360920a868dd4045" translate="yes" xml:space="preserve">
          <source>When a model is being unserialized, check if it needs to be booted.</source>
          <target state="translated">모델이 직렬화 해제 될 때 부팅해야하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="28308971c138caf83500a5fefb8ef266d7b98000" translate="yes" xml:space="preserve">
          <source>When a notification is sent, the &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; event is fired by the notification system. This contains the &quot;notifiable&quot; entity and the notification instance itself. You may register listeners for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">알림이 전송되면 알림 시스템 에서 &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; 이벤트를 시작합니다. 여기에는 &quot;알릴 수있는&quot;엔티티와 알림 인스턴스 자체가 포함됩니다. 이 이벤트의 리스너를 &lt;code&gt;EventServiceProvider&lt;/code&gt; 에 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38397c32243598bc3d6649cbdc7987be437fa21c" translate="yes" xml:space="preserve">
          <source>When a payment needs additional confirmation, the subscription will remain in an &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;past_due&lt;/code&gt; state as indicated by its &lt;code&gt;stripe_status&lt;/code&gt; database column. Cashier will automatically activate the customer's subscription via a webhook as soon as payment confirmation is complete.</source>
          <target state="translated">결제에 추가 확인이 필요한 경우 구독은 &lt;code&gt;stripe_status&lt;/code&gt; 데이터베이스 열에 표시된대로 &lt;code&gt;incomplete&lt;/code&gt; 또는 &lt;code&gt;past_due&lt;/code&gt; 상태로 유지 됩니다. 계산원은 결제 확인이 완료되는 즉시 웹훅을 통해 고객의 구독을 자동으로 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b1805c87f7bdbb2805f83a454c29953e2114c423" translate="yes" xml:space="preserve">
          <source>When a remote service needs to authenticate to access an API, cookies are not typically used because there is no web browser. Instead, the remote service sends an API token to the API on each request. The application may validate the incoming token against a table of valid API tokens and &quot;authenticate&quot; the request as being performed by the user associated with that API token.</source>
          <target state="translated">원격 서비스가 API에 액세스하기 위해 인증해야하는 경우 웹 브라우저가 없기 때문에 일반적으로 쿠키가 사용되지 않습니다. 대신 원격 서비스는 각 요청에 대해 API 토큰을 API로 보냅니다. 애플리케이션은 유효한 API 토큰 테이블에 대해 수신 토큰의 유효성을 검사하고 해당 API 토큰과 관련된 사용자가 수행하는 요청을 &quot;인증&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="620ac5e7d1e3b6cc566be2f5b51ac5041d2234d8" translate="yes" xml:space="preserve">
          <source>When a soft deleted model is permanently deleted using &lt;code&gt;forceDelete&lt;/code&gt;, Scout will remove it from the search index automatically.</source>
          <target state="translated">&lt;code&gt;forceDelete&lt;/code&gt; 를 사용하여 소프트 삭제 된 모델을 영구적으로 삭제하면 스카우트가 자동으로 검색 색인에서 해당 모델 을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="41b64d2b7c503175ee376c52d910344d28230a0b" translate="yes" xml:space="preserve">
          <source>When a subscription has an incomplete payment, you should direct the user to Cashier's payment confirmation page, passing the &lt;code&gt;latestPayment&lt;/code&gt; identifier. You may use the &lt;code&gt;latestPayment&lt;/code&gt; method available on subscription instance to retrieve this identifier:</source>
          <target state="translated">구독에 불완전한 결제가있는 경우 사용자를 계산원의 결제 확인 페이지로 안내하여 &lt;code&gt;latestPayment&lt;/code&gt; 식별자를 전달해야합니다 . 당신은 사용할 수 있습니다 &lt;code&gt;latestPayment&lt;/code&gt; 이 식별자를 검색 할 구독 인스턴스에서 사용할 수 방법 :</target>
        </trans-unit>
        <trans-unit id="ac1174138ecc9999919ae0f8c84cfc8a18b6d75f" translate="yes" xml:space="preserve">
          <source>When a subscription has multiple plans, it will have multiple subscription &quot;items&quot; stored in your database's &lt;code&gt;subscription_items&lt;/code&gt; table. You may access these via the &lt;code&gt;items&lt;/code&gt; relationship on the subscription:</source>
          <target state="translated">구독에 여러 계획이있는 경우 데이터베이스의 &lt;code&gt;subscription_items&lt;/code&gt; 테이블 에 여러 구독 &quot;항목&quot;이 저장됩니다 . 구독 의 &lt;code&gt;items&lt;/code&gt; 관계를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bed68a026f2be6ba6a1ba11b81caac39b109879" translate="yes" xml:space="preserve">
          <source>When a subscription is cancelled, Cashier will automatically set the &lt;code&gt;ends_at&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;subscribed&lt;/code&gt; method should begin returning &lt;code&gt;false&lt;/code&gt;. For example, if a customer cancels a subscription on March 1st, but the subscription was not scheduled to end until March 5th, the &lt;code&gt;subscribed&lt;/code&gt; method will continue to return &lt;code&gt;true&lt;/code&gt; until March 5th.</source>
          <target state="translated">가입이 취소되면 Cashier는 데이터베이스에서 &lt;code&gt;ends_at&lt;/code&gt; 열을 자동으로 설정 합니다. 이 열은 &lt;code&gt;subscribed&lt;/code&gt; 메소드가 언제 &lt;code&gt;false&lt;/code&gt; 를 리턴해야하는지 알기 위해 사용됩니다 . 예를 들어, 고객이 3 월 1 일에 구독을 취소했지만 3 월 5 일까지 구독이 종료되지 않은 경우 &lt;code&gt;subscribed&lt;/code&gt; 메서드는 3 월 5 일까지 계속해서 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="829d53700c3d9a7a9970d2ced4f9499c9f73abda" translate="yes" xml:space="preserve">
          <source>When a subscription is in a &lt;code&gt;past_due&lt;/code&gt; state it cannot be changed until payment information has been updated. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in a &lt;code&gt;past_due&lt;/code&gt; state.</source>
          <target state="translated">구독이 &lt;code&gt;past_due&lt;/code&gt; 상태 인 경우 결제 정보가 업데이트 될 때까지 변경할 수 없습니다. 따라서 구독이 &lt;code&gt;past_due&lt;/code&gt; 상태 일 때 &lt;code&gt;swap&lt;/code&gt; 및 &lt;code&gt;updateQuantity&lt;/code&gt; 메서드에서 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="e90473ecb434fd03572601e96ec88d6c2f75b216" translate="yes" xml:space="preserve">
          <source>When a subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state it cannot be changed until the payment is confirmed. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state.</source>
          <target state="translated">구독이 &lt;code&gt;incomplete&lt;/code&gt; 상태 인 경우 결제가 확인 될 때까지 변경할 수 없습니다. 따라서 구독이 &lt;code&gt;incomplete&lt;/code&gt; 상태 일 때 &lt;code&gt;swap&lt;/code&gt; 및 &lt;code&gt;updateQuantity&lt;/code&gt; 메서드에서 예외가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="ec208e717edbb6899fa3abe4664a9bac177caf55" translate="yes" xml:space="preserve">
          <source>When a subscription is past due, you should instruct the user to &lt;a href=&quot;#updating-payment-information&quot;&gt;update their payment information&lt;/a&gt;. You may configure how past due subscriptions are handled in your &lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddle subscription settings&lt;/a&gt;.</source>
          <target state="translated">구독 기한이 지난 경우 사용자에게 &lt;a href=&quot;#updating-payment-information&quot;&gt;결제 정보&lt;/a&gt; 를 업데이트하도록 안내해야합니다 . &lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddle 구독 설정&lt;/a&gt; 에서 연체 구독을 처리하는 방법을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ac4faf211138e88fb57d75fa30602c561011117" translate="yes" xml:space="preserve">
          <source>When a subscription is paused, Cashier will automatically set the &lt;code&gt;paused_from&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;paused&lt;/code&gt; method should begin returning &lt;code&gt;true&lt;/code&gt;. For example, if a customer pauses a subscription on March 1st, but the subscription was not scheduled to recur until March 5th, the &lt;code&gt;paused&lt;/code&gt; method will continue to return &lt;code&gt;false&lt;/code&gt; until March 5th.</source>
          <target state="translated">구독이 일시 중지되면 캐셔는 데이터베이스에서 &lt;code&gt;paused_from&lt;/code&gt; 열을 자동으로 설정 합니다. 이 열은 &lt;code&gt;paused&lt;/code&gt; 메서드가 &lt;code&gt;true&lt;/code&gt; 반환을 시작해야하는 시기를 확인하는 데 사용됩니다 . 예를 들어 고객이 3 월 1 일에 구독을 일시 중지했지만 구독이 3 월 5 일까지 반복되도록 예약되지 않은 경우 &lt;code&gt;paused&lt;/code&gt; 메서드는 3 월 5 일까지 계속 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0ae5724a796109eb543fbe47159eca8929375bc3" translate="yes" xml:space="preserve">
          <source>When a test fails, Dusk will automatically resize the browser to fit the content prior to taking a screenshot. You may disable this feature by calling the &lt;code&gt;disableFitOnFailure&lt;/code&gt; method within your test:</source>
          <target state="translated">테스트가 실패하면 Dusk는 스크린 샷을 찍기 전에 콘텐츠에 맞게 브라우저 크기를 자동으로 조정합니다. 테스트 내 에서 &lt;code&gt;disableFitOnFailure&lt;/code&gt; 메서드 를 호출하여이 기능을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44a5e34bab8939d35b562af47d0351b53d839269" translate="yes" xml:space="preserve">
          <source>When a user has finished updating their information, a &lt;code&gt;subscription_updated&lt;/code&gt; webhook will be dispatched by Paddle and the subscription details will be updated in your application's database.</source>
          <target state="translated">사용자가 정보 업데이트를 마치면 Paddle 에서 &lt;code&gt;subscription_updated&lt;/code&gt; 웹훅을 발송하고 애플리케이션 데이터베이스에서 구독 세부 정보를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5c425cb0adacc52cf2cf300360d7e8e80a1cd201" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect location by defining a &lt;code&gt;redirectTo&lt;/code&gt; property on the &lt;code&gt;LoginController&lt;/code&gt;, &lt;code&gt;RegisterController&lt;/code&gt;, &lt;code&gt;ResetPasswordController&lt;/code&gt;, and &lt;code&gt;VerificationController&lt;/code&gt;:</source>
          <target state="translated">사용자가 성공적으로 인증되면 &lt;code&gt;/home&lt;/code&gt; URI 로 리디렉션됩니다 . &lt;code&gt;LoginController&lt;/code&gt; , &lt;code&gt;RegisterController&lt;/code&gt; , &lt;code&gt;ResetPasswordController&lt;/code&gt; 및 &lt;code&gt;VerificationController&lt;/code&gt; 에 &lt;code&gt;redirectTo&lt;/code&gt; 속성을 정의하여 사후 인증 리디렉션 위치를 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9aac150840300add0edd70cb094dc507d556d551" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will typically be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect path using the &lt;code&gt;HOME&lt;/code&gt; constant defined in your &lt;code&gt;RouteServiceProvider&lt;/code&gt;:</source>
          <target state="translated">사용자가 성공적으로 인증되면 일반적으로 &lt;code&gt;/home&lt;/code&gt; URI 로 리디렉션됩니다 . &lt;code&gt;RouteServiceProvider&lt;/code&gt; 에 정의 된 &lt;code&gt;HOME&lt;/code&gt; 상수를 사용하여 사후 인증 리디렉션 경로를 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1ca86eee0721c970f4f0f707759a4e87ba67aab" translate="yes" xml:space="preserve">
          <source>When a user is viewing one of their orders, we don't want them to have to refresh the page to view status updates. Instead, we want to broadcast the updates to the application as they are created. So, we need to mark the &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event with the &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface. This will instruct Laravel to broadcast the event when it is fired:</source>
          <target state="translated">사용자가 주문 중 하나를보고있을 때 상태 업데이트를보기 위해 페이지를 새로 고치지 않아도됩니다. 대신, 업데이트가 생성 될 때 업데이트를 응용 프로그램에 브로드 캐스트하려고합니다. 따라서 &lt;code&gt;ShouldBroadcast&lt;/code&gt; 인터페이스를 사용하여 &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; 이벤트 를 표시해야합니다 . 이렇게하면 Laravel이 이벤트가 시작될 때 이벤트를 브로드 캐스트하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="11599e295b83f1af295523f73811bb41e23c9a15" translate="yes" xml:space="preserve">
          <source>When accessing Eloquent relationships as properties, the relationship data is &quot;lazy loaded&quot;. This means the relationship data is not actually loaded until you first access the property. However, Eloquent can &quot;eager load&quot; relationships at the time you query the parent model. Eager loading alleviates the N + 1 query problem. To illustrate the N + 1 query problem, consider a &lt;code&gt;Book&lt;/code&gt; model that is related to &lt;code&gt;Author&lt;/code&gt;:</source>
          <target state="translated">속성으로 Eloquent 관계에 액세스 할 때 관계 데이터는 &quot;지연로드&quot;됩니다. 즉, 속성에 처음 액세스 할 때까지 관계 데이터가 실제로로드되지 않습니다. 그러나 Eloquent는 부모 모델을 쿼리 할 때 관계를 &quot;열심히&quot;할 수 있습니다. 로딩이 빠르면 N + 1 쿼리 문제가 완화됩니다. N + 1 쿼리 문제를 설명하려면 &lt;code&gt;Author&lt;/code&gt; 와 관련된 &lt;code&gt;Book&lt;/code&gt; 모델을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="b323ee3069c4b6808ea86369838a7ae662f6bb46" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the absence of a relationship. For example, imagine you want to retrieve all blog posts that &lt;strong&gt;don't&lt;/strong&gt; have any comments. To do so, you may pass the name of the relationship to the &lt;code&gt;doesntHave&lt;/code&gt; and &lt;code&gt;orDoesntHave&lt;/code&gt; methods:</source>
          <target state="translated">모델의 레코드에 액세스 할 때 관계가없는 경우 결과를 제한 할 수 있습니다. 예를 들어, 의견 &lt;strong&gt;이없는&lt;/strong&gt; 모든 블로그 게시물을 검색하려고한다고 가정하십시오 . 이를 위해 관계 이름을 &lt;code&gt;doesntHave&lt;/code&gt; 및 &lt;code&gt;orDoesntHave&lt;/code&gt; 메소드에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c053f435d68621cde60c6767a2dccee97f31915" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the existence of a relationship. For example, imagine you want to retrieve all blog posts that have at least one comment. To do so, you may pass the name of the relationship to the &lt;code&gt;has&lt;/code&gt; and &lt;code&gt;orHas&lt;/code&gt; methods:</source>
          <target state="translated">모델의 레코드에 액세스 할 때 관계의 존재에 따라 결과를 제한 할 수 있습니다. 예를 들어, 하나 이상의 주석이있는 모든 블로그 게시물을 검색하려고한다고 가정하십시오. 그렇게하기 위해, 관계의 이름을 &lt;code&gt;has&lt;/code&gt; 및 &lt;code&gt;orHas&lt;/code&gt; 메소드에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c97c0ea18ee09f224057523fdf1b4729c3f6635c" translate="yes" xml:space="preserve">
          <source>When accessing this hidden route, you will then be redirected to the &lt;code&gt;/&lt;/code&gt; route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode.</source>
          <target state="translated">이 숨겨진 경로에 액세스 하면 응용 프로그램 의 &lt;code&gt;/&lt;/code&gt; 경로 로 리디렉션됩니다 . 쿠키가 브라우저에 발급되면 유지 관리 모드가 아닌 것처럼 정상적으로 응용 프로그램을 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed5edd420fb1b9abde903c3b3241bd9d695e535f" translate="yes" xml:space="preserve">
          <source>When adding a &quot;morph map&quot; to your existing application, every morphable &lt;code&gt;*_type&lt;/code&gt; column value in your database that still contains a fully-qualified class will need to be converted to its &quot;map&quot; name.</source>
          <target state="translated">기존 응용 프로그램에 &quot;모프 맵&quot;을 추가 할 때 데이터베이스의 모든 모핑 가능한 &lt;code&gt;*_type&lt;/code&gt; 열 값에는 여전히 정규화 된 클래스가 포함되어 있습니다. &quot;맵&quot;이름으로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="a8fbe56b17580829f6ed4e37be9ced4b0fd9c8fd" translate="yes" xml:space="preserve">
          <source>When all of Laravel's services are neatly defined within simple interfaces, it is very easy to determine the functionality offered by a given service. &lt;strong&gt;The contracts serve as succinct documentation to the framework's features.&lt;/strong&gt;</source>
          <target state="translated">Laravel의 모든 서비스가 간단한 인터페이스 내에 깔끔하게 정의되어 있으면 주어진 서비스가 제공하는 기능을 매우 쉽게 결정할 수 있습니다. &lt;strong&gt;계약은 프레임 워크 기능에 대한 간결한 문서로 사용됩니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5235b27a68a522bbaa59b773fd1854fcd5b8b8e6" translate="yes" xml:space="preserve">
          <source>When all of the responses in a response sequence have been consumed, any further requests will cause the response sequence to throw an exception. If you would like to specify a default response that should be returned when a sequence is empty, you may use the &lt;code&gt;whenEmpty&lt;/code&gt; method:</source>
          <target state="translated">응답 시퀀스의 모든 응답이 사용 된 경우 추가 요청으로 인해 응답 시퀀스에서 예외가 발생합니다. 시퀀스가 비어있을 때 반환되어야하는 기본 응답을 지정하려면 &lt;code&gt;whenEmpty&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3d352571b21e5443c5cc66f8deca03023cd91ba" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to JSON, its loaded relationships will automatically be included as attributes on the JSON object. Also, though Eloquent relationship methods are defined using &quot;camel case&quot;, a relationship's JSON attribute will be &quot;snake case&quot;.</source>
          <target state="translated">Eloquent 모델이 JSON으로 변환되면로드 된 관계가 JSON 객체의 속성으로 자동으로 포함됩니다. 또한 Eloquent 관계 메소드는 &quot;camel case&quot;를 사용하여 정의되지만 관계의 JSON 속성은 &quot;snake case&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="667565a9e6b7c0a2cf584ee328747e96c0baa854" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to an array or JSON using the &lt;code&gt;toArray&lt;/code&gt; method, your custom cast value objects will typically be serialized as well as long as they implement the &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; and &lt;code&gt;JsonSerializable&lt;/code&gt; interfaces. However, when using value objects provided by third-party libraries, you may not have the ability to add these interfaces to the object.</source>
          <target state="translated">Eloquent 모델이 &lt;code&gt;toArray&lt;/code&gt; 메서드를 사용하여 배열 또는 JSON으로 변환 될 때 , 사용자 지정 캐스트 값 객체는 일반적으로 &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; 및 &lt;code&gt;JsonSerializable&lt;/code&gt; 인터페이스 를 구현하는 한 직렬화됩니다 . 그러나 타사 라이브러리에서 제공하는 값 개체를 사용하는 경우 이러한 인터페이스를 개체에 추가하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fb8366001d90bc865426f48a5271e4ae0523cd6" translate="yes" xml:space="preserve">
          <source>When an event is broadcast, all of its &lt;code&gt;public&lt;/code&gt; properties are automatically serialized and broadcast as the event's payload, allowing you to access any of its public data from your JavaScript application. So, for example, if your event has a single public &lt;code&gt;$user&lt;/code&gt; property that contains an Eloquent model, the event's broadcast payload would be:</source>
          <target state="translated">이벤트가 브로드 캐스트되면 모든 &lt;code&gt;public&lt;/code&gt; 속성이 자동으로 직렬화되어 이벤트 페이로드로 브로드 캐스트되므로 JavaScript 응용 프로그램에서 퍼블릭 데이터에 액세스 할 수 있습니다. 예를 들어 이벤트 에 Eloquent 모델이 포함 된 단일 공용 &lt;code&gt;$user&lt;/code&gt; 속성이있는 경우 이벤트의 브로드 캐스트 페이로드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="969808d80333b9dba3eb634c42582d4394dc25f4" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_blacklist&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">예외가 포착되지 않고 &lt;code&gt;APP_DEBUG&lt;/code&gt; 환경 변수가 &lt;code&gt;true&lt;/code&gt; 인 경우 디버그 페이지에 모든 환경 변수 및 해당 내용이 표시됩니다. 경우에 따라 특정 변수를 모호하게 할 수도 있습니다. &lt;code&gt;config/app.php&lt;/code&gt; 구성 파일 에서 &lt;code&gt;debug_blacklist&lt;/code&gt; 옵션 을 업데이트하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="bccc1757c37bcc547282bc6cc09d8a305d208adb" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_hide&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">예외가 포착되지 않고 &lt;code&gt;APP_DEBUG&lt;/code&gt; 환경 변수가 &lt;code&gt;true&lt;/code&gt; 이면 디버그 페이지에 모든 환경 변수와 해당 내용이 표시됩니다. 어떤 경우에는 특정 변수를 숨기고 싶을 수 있습니다. &lt;code&gt;config/app.php&lt;/code&gt; 구성 파일 에서 &lt;code&gt;debug_hide&lt;/code&gt; 옵션 을 업데이트하여 이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fc5815db9657aee6bfe9d117db29bd6bd81b6d4" translate="yes" xml:space="preserve">
          <source>When assigning JSON columns, each column's mass-assignable key must be specified in your model's &lt;code&gt;$fillable&lt;/code&gt; array. For security, Laravel does not support updating nested JSON attributes when using the &lt;code&gt;guarded&lt;/code&gt; property:</source>
          <target state="translated">JSON 열을 할당 할 때 각 열의 대량 할당 가능 키는 모델의 &lt;code&gt;$fillable&lt;/code&gt; 배열에 지정되어야합니다 . 보안을 위해 Laravel은 &lt;code&gt;guarded&lt;/code&gt; 속성을 사용할 때 중첩 된 JSON 속성 업데이트를 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c3d6994a2f5c467954d1b24849e183b214e2e0ea" translate="yes" xml:space="preserve">
          <source>When assigning middleware to a group of routes, you may occasionally need to prevent the middleware from being applied to an individual route within the group. You may accomplish this using the &lt;code&gt;withoutMiddleware&lt;/code&gt; method:</source>
          <target state="translated">라우트 그룹에 미들웨어를 할당 할 때 때때로 미들웨어가 그룹 내의 개별 라우트에 적용되는 것을 방지해야 할 수 있습니다. &lt;code&gt;withoutMiddleware&lt;/code&gt; 메소드를 사용 하여이 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c60a9c7919beaa0268ba1595d1baa54eb25e8c3" translate="yes" xml:space="preserve">
          <source>When assigning middleware, you may also pass the fully qualified class name:</source>
          <target state="translated">미들웨어를 지정할 때 완전한 클래스 이름을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="276cfcc69d0e274dfb553ef69778ff0607833be0" translate="yes" xml:space="preserve">
          <source>When attaching a custom cast to a model, cast parameters may be specified by separating them from the class name using a &lt;code&gt;:&lt;/code&gt; character and comma-delimiting multiple parameters. The parameters will be passed to the constructor of the cast class:</source>
          <target state="translated">커스텀 캐스트를 모델에 연결할 때 캐스트 매개 변수는 &lt;code&gt;:&lt;/code&gt; 문자를 사용하여 클래스 이름에서 분리하고 여러 매개 변수를 쉼표로 구분 하여 지정할 수 있습니다 . 매개 변수는 캐스트 클래스의 생성자에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b2c1ed07264972afba59ae985f0771dd7af8def5" translate="yes" xml:space="preserve">
          <source>When attaching a relationship to a model, you may also pass an array of additional data to be inserted into the intermediate table:</source>
          <target state="translated">모델에 관계를 연결할 때 중간 테이블에 삽입 할 추가 데이터 배열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="55b662eeb5711cd71c5942a26509a1ff97f04732" translate="yes" xml:space="preserve">
          <source>When attaching files to a message, you may also specify the display name and / or MIME type by passing an &lt;code&gt;array&lt;/code&gt; as the second argument to the &lt;code&gt;attach&lt;/code&gt; method:</source>
          <target state="translated">메시지에 파일을 첨부 할 때 , &lt;code&gt;attach&lt;/code&gt; 메소드에 두 번째 인수로 &lt;code&gt;array&lt;/code&gt; 을 전달하여 표시 이름 및 / 또는 MIME 유형을 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1510a7793661573c67e22803651201b30d0eb3be" translate="yes" xml:space="preserve">
          <source>When attaching the &lt;code&gt;auth&lt;/code&gt; middleware to a route, you may also specify which guard should be used to authenticate the user. The guard specified should correspond to one of the keys in the &lt;code&gt;guards&lt;/code&gt; array of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;auth&lt;/code&gt; 미들웨어를 경로에 연결할 때 사용자를 인증하는 데 사용해야하는 가드를 지정할 수도 있습니다. 지정된 guard는 &lt;code&gt;auth.php&lt;/code&gt; 설정 파일 의 &lt;code&gt;guards&lt;/code&gt; 배열에 있는 키 중 하나에 해당해야합니다</target>
        </trans-unit>
        <trans-unit id="5eed1c27c5d4578e0e9486b83cc660b5c928070d" translate="yes" xml:space="preserve">
          <source>When attempting to determine if the authenticated user can update a given post, we can invoke this policy method like so:</source>
          <target state="translated">인증 된 사용자가 주어진 게시물을 업데이트 할 수 있는지 확인하려고 할 때 다음과 같이이 정책 메서드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c00752cacbe43d19f0a902ea201cbf46ea5c6312" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;email&lt;/code&gt; attribute of your model as the &quot;username&quot;. However, you may customize this behavior by defining a &lt;code&gt;findForPassport&lt;/code&gt; method on your model:</source>
          <target state="translated">암호 부여를 사용하여 인증 할 때 Passport는 모델 의 &lt;code&gt;email&lt;/code&gt; 속성을 &quot;사용자 이름&quot;으로 사용합니다. 그러나 모델 에서 &lt;code&gt;findForPassport&lt;/code&gt; 메소드를 정의하여이 동작을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66a5889f4169ed4c816c8e5730e5fba639aa6bd9" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;password&lt;/code&gt; attribute of your model to validate the given password. If your model does not have a &lt;code&gt;password&lt;/code&gt; attribute or you wish to customize the password validation logic, you can define a &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; method on your model:</source>
          <target state="translated">암호 부여를 사용하여 인증 할 때 Passport는 모델 의 &lt;code&gt;password&lt;/code&gt; 속성을 사용 하여 주어진 암호의 유효성을 검사합니다. 모델에 &lt;code&gt;password&lt;/code&gt; 속성이 없거나 암호 유효성 검사 논리를 사용자 지정하려는 경우 모델에 &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; 메서드를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91a779e6ecbb6d1f9ac1482cb55158b88b51a760" translate="yes" xml:space="preserve">
          <source>When authorizing actions using policies, you may pass an array as the second argument to the various authorization functions and helpers. The first element in the array will be used to determine which policy should be invoked, while the rest of the array elements are passed as parameters to the policy method and can be used for additional context when making authorization decisions. For example, consider the following &lt;code&gt;PostPolicy&lt;/code&gt; method definition which contains an additional &lt;code&gt;$category&lt;/code&gt; parameter:</source>
          <target state="translated">정책을 사용하여 작업을 인증 할 때 배열을 두 번째 인수로 다양한 인증 함수 및 도우미에 전달할 수 있습니다. 배열의 첫 번째 요소는 호출해야하는 정책을 결정하는 데 사용되며 나머지 배열 요소는 정책 메서드에 매개 변수로 전달되며 권한 결정을 내릴 때 추가 컨텍스트에 사용할 수 있습니다. 예를 들어 다음 &lt;code&gt;PostPolicy&lt;/code&gt; 를 고려하십시오. 추가 &lt;code&gt;$category&lt;/code&gt; 매개 변수 를 포함하는 메소드 정의를 .</target>
        </trans-unit>
        <trans-unit id="8df2b7303c72f1b951c8a60f4f94155afd6b0ca9" translate="yes" xml:space="preserve">
          <source>When available, Mix will automatically display OS notifications for each bundle. This will give you instant feedback, as to whether the compilation was successful or not. However, there may be instances when you'd prefer to disable these notifications. One such example might be triggering Mix on your production server. Notifications may be deactivated, via the &lt;code&gt;disableNotifications&lt;/code&gt; method.</source>
          <target state="translated">가능한 경우 Mix는 각 번들에 대한 OS 알림을 자동으로 표시합니다. 이렇게하면 컴파일 성공 여부에 대한 즉각적인 피드백이 제공됩니다. 그러나 이러한 알림을 사용하지 않으려는 경우가있을 수 있습니다. 그러한 예제 중 하나는 프로덕션 서버에서 믹스를 트리거하는 것일 수 있습니다. &lt;code&gt;disableNotifications&lt;/code&gt; 메소드 를 통해 알림을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="636db3c2aaed2d253bb2842f4a4fc4e26cfe414d" translate="yes" xml:space="preserve">
          <source>When building JSON APIs, you will often need to convert your models and relationships to arrays or JSON. Eloquent includes convenient methods for making these conversions, as well as controlling which attributes are included in your serializations.</source>
          <target state="translated">JSON API를 빌드 할 때 종종 모델과 관계를 배열 또는 JSON으로 변환해야합니다. Eloquent에는 이러한 변환을 수행 할 수있는 편리한 방법과 직렬화에 포함되는 속성을 제어하는 ​​방법이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fb85b7adab979c027e20c432bc822368c3c1ed2" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file registers the value of the &lt;code&gt;csrf-token&lt;/code&gt; meta tag with the Axios HTTP library. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">JavaScript 기반 애플리케이션을 빌드 할 때 JavaScript HTTP 라이브러리가 모든 발신 요청에 자동으로 CSRF 토큰을 첨부하도록하는 것이 편리합니다. 기본적으로 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 파일은 &lt;code&gt;csrf-token&lt;/code&gt; 메타 태그 의 값을 Axios HTTP 라이브러리에 등록합니다. 이 라이브러리를 사용하지 않는 경우 응용 프로그램에 대해이 동작을 수동으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f3067d0c3770f7632d9510135c70f42fa772ec9a" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the Axios HTTP library provided in the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file automatically sends an &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header using the value of the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">JavaScript 기반 애플리케이션을 빌드 할 때 JavaScript HTTP 라이브러리가 모든 나가는 요청에 CSRF 토큰을 자동으로 첨부하도록하는 것이 편리합니다. 기본적으로 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 파일에 제공된 Axios HTTP 라이브러리 는 암호화 된 값을 사용하여 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 헤더를 자동으로 보냅니다. &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 쿠키 . 이 라이브러리를 사용하지 않는 경우 애플리케이션에 대해이 동작을 수동으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="12a0cff7b2a84dfe7bdec52e1d3fab79e37be94a" translate="yes" xml:space="preserve">
          <source>When building a third-party package that interacts with Laravel, it's better to inject &lt;a href=&quot;contracts&quot;&gt;Laravel contracts&lt;/a&gt; instead of using facades. Since packages are built outside of Laravel itself, you will not have access to Laravel's facade testing helpers.</source>
          <target state="translated">Laravel과 상호 작용하는 타사 패키지를 구축 할 때는 정면을 사용하는 대신 &lt;a href=&quot;contracts&quot;&gt;Laravel 계약&lt;/a&gt; 을 삽입하는 것이 좋습니다 . 패키지는 Laravel 자체 외부에 구축되므로 Laravel의 외관 테스트 도우미에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7378e497110554a6b1844f41f18a6eec883e8c4" translate="yes" xml:space="preserve">
          <source>When building an API, it can be extremely useful to be able to consume your own API from your JavaScript application. This approach to API development allows your own application to consume the same API that you are sharing with the world. The same API may be consumed by your web application, mobile applications, third-party applications, and any SDKs that you may publish on various package managers.</source>
          <target state="translated">API를 빌드 할 때 JavaScript 애플리케이션에서 고유 한 API를 사용할 수있는 것이 매우 유용 할 수 있습니다. API 개발에 대한 이러한 접근 방식을 통해 고유 한 응용 프로그램은 세계와 공유하는 것과 동일한 API를 사용할 수 있습니다. 웹 응용 프로그램, 모바일 응용 프로그램, 타사 응용 프로그램 및 다양한 패키지 관리자에 게시 할 수있는 모든 SDK에서 동일한 API를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6be3eacbbca4b74796539528c666baec5cc7d86c" translate="yes" xml:space="preserve">
          <source>When building an API, you may need a transformation layer that sits between your Eloquent models and the JSON responses that are actually returned to your application's users. Laravel's resource classes allow you to expressively and easily transform your models and model collections into JSON.</source>
          <target state="translated">API를 빌드 할 때 Eloquent 모델과 실제로 애플리케이션 사용자에게 리턴되는 JSON 응답 사이에있는 변환 계층이 필요할 수 있습니다. Laravel의 리소스 클래스를 사용하면 모델 및 모델 컬렉션을 표현 적으로 쉽고 쉽게 JSON으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6607885304fb61d14c604ddeb24934795e6cd0a" translate="yes" xml:space="preserve">
          <source>When building an application that utilizes event broadcasting, you may substitute the &lt;code&gt;event&lt;/code&gt; function with the &lt;code&gt;broadcast&lt;/code&gt; function. Like the &lt;code&gt;event&lt;/code&gt; function, the &lt;code&gt;broadcast&lt;/code&gt; function dispatches the event to your server-side listeners:</source>
          <target state="translated">이벤트 브로드 캐스팅을 활용하는 응용 프로그램을 빌드 할 때 &lt;code&gt;event&lt;/code&gt; 기능을 &lt;code&gt;broadcast&lt;/code&gt; 기능으로 대체 할 수 있습니다. &lt;code&gt;event&lt;/code&gt; 함수 와 마찬가지로 &lt;code&gt;broadcast&lt;/code&gt; 함수는 이벤트를 서버 측 리스너에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d9e69dc2d180d0cabba430a89f31271b220f0d1d" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\Models\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">데이터베이스 스키마를 구축 할 때 &lt;code&gt;App\Models\User&lt;/code&gt; 모델에 암호 열의 길이가 60 자 이상인지 확인하십시오. 기본 문자열 열 길이 인 255자를 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="45b9c4684696d6586f0197e97981726f66bb33b5" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">&lt;code&gt;App\User&lt;/code&gt; 모델 의 데이터베이스 스키마를 빌드 할 때 비밀번호 열의 길이는 60 자 이상이어야합니다. 기본 문자열 열 길이를 255 자로 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="82ad7c629a170f1e3a5c02f3772396de4a4513de" translate="yes" xml:space="preserve">
          <source>When calling routes that are protected by Passport, your application's API consumers should specify their access token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header of their request. For example, when using the Guzzle HTTP library:</source>
          <target state="translated">Passport로 보호되는 경로를 호출 할 때 응용 프로그램의 API 소비자는 요청 의 &lt;code&gt;Authorization&lt;/code&gt; 헤더에 액세스 토큰을 &lt;code&gt;Bearer&lt;/code&gt; 토큰 으로 지정해야합니다 . 예를 들어, Guzzle HTTP 라이브러리를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="fb37fc3e51eccf912c60dabe31580d5db666d650" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;paginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt;. When calling the &lt;code&gt;simplePaginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt;. These objects provide several methods that describe the result set. In addition to these helpers methods, the paginator instances are iterators and may be looped as an array. So, once you have retrieved the results, you may display the results and render the page links using &lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;paginate&lt;/code&gt; 메소드를 호출하면 &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt; 의 인스턴스가 수신됩니다 . &lt;code&gt;simplePaginate&lt;/code&gt; 메소드를 호출하면 &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt; 인스턴스가 수신됩니다 . 이러한 개체는 결과 집합을 설명하는 여러 가지 방법을 제공합니다. 이러한 도우미 메서드 외에도 페이지 매김 인스턴스는 반복자이며 배열로 반복 될 수 있습니다. 따라서 결과를 검색 한 후 &lt;a href=&quot;blade&quot;&gt;Blade를&lt;/a&gt; 사용하여 결과를 표시하고 페이지 링크를 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cba0dc201c3755c53f3cf2c114d2d45911248180" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method.</source>
          <target state="translated">미들웨어 에서 &lt;code&gt;terminate&lt;/code&gt; 메소드를 호출하면 Laravel은 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 에서 미들웨어의 새로운 인스턴스를 분석합니다 . &lt;code&gt;handle&lt;/code&gt; 및 &lt;code&gt;terminate&lt;/code&gt; 메소드가 호출 될 때 동일한 미들웨어 인스턴스를 사용하려면 컨테이너의 &lt;code&gt;singleton&lt;/code&gt; 메소드를 사용하여 미들웨어를 컨테이너에 등록하십시오 .</target>
        </trans-unit>
        <trans-unit id="09fb136514b95b79aa9029e0f00f5c2901a77cbf" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method. Typically this should be done in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider.php&lt;/code&gt;:</source>
          <target state="translated">미들웨어 에서 &lt;code&gt;terminate&lt;/code&gt; 메소드를 호출 할 때 Laravel은 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 에서 미들웨어의 새로운 인스턴스를 해결합니다 . &lt;code&gt;handle&lt;/code&gt; 및 &lt;code&gt;terminate&lt;/code&gt; 메소드가 호출 될 때 동일한 미들웨어 인스턴스를 사용하려면 컨테이너의 &lt;code&gt;singleton&lt;/code&gt; 메소드를 사용하여 컨테이너에 미들웨어를 등록하십시오 . 일반적으로이 작업은 &lt;code&gt;AppServiceProvider.php&lt;/code&gt; 의 &lt;code&gt;register&lt;/code&gt; 메서드 에서 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6f297356b226ef75b0e7ea8079e6c0e23182df35" translate="yes" xml:space="preserve">
          <source>When calling this method, the &lt;code&gt;user&lt;/code&gt; arguments may be passed in order to the command line. For example, the following command will set the value of &lt;code&gt;user&lt;/code&gt; to &lt;code&gt;['foo', 'bar']&lt;/code&gt;:</source>
          <target state="translated">이 메소드를 호출 할 때 명령 행에 &lt;code&gt;user&lt;/code&gt; 인수가 전달 될 수 있습니다. 예를 들어 다음 명령은 &lt;code&gt;user&lt;/code&gt; 값 을 &lt;code&gt;['foo', 'bar']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="935b068a3bb97d04e8da75d3774fb37afa4012da" translate="yes" xml:space="preserve">
          <source>When casting to value objects, any changes made to the value object will automatically be synced back to the model before the model is saved:</source>
          <target state="translated">값 개체로 캐스팅 할 때 값 개체에 대한 변경 사항은 모델이 저장되기 전에 자동으로 모델에 다시 동기화됩니다.</target>
        </trans-unit>
        <trans-unit id="3c7a93c6bb474e06fd2f2fb4113a72d9048ffd05" translate="yes" xml:space="preserve">
          <source>When chaining jobs, you may use the &lt;code&gt;catch&lt;/code&gt; method to specify a Closure that should be invoked if a job within the chain fails. The given callback will receive the exception instance that caused the job failure:</source>
          <target state="translated">작업을 연결할 때 &lt;code&gt;catch&lt;/code&gt; 메서드를 사용하여 체인 내의 작업이 실패 할 경우 호출해야하는 Closure를 지정할 수 있습니다. 주어진 콜백은 작업 실패를 일으킨 예외 인스턴스를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="f49a63636a46e32fd5e6d49e596bcc2ccb56bc76" translate="yes" xml:space="preserve">
          <source>When changing the hard-coded Tax Rate IDs returned by the &lt;code&gt;taxRates&lt;/code&gt; method, the tax settings on any existing subscriptions for the user will remain the same. If you wish to update the tax value for existing subscriptions with the returned &lt;code&gt;taxTaxRates&lt;/code&gt; values, you should call the &lt;code&gt;syncTaxRates&lt;/code&gt; method on the user's subscription instance:</source>
          <target state="translated">&lt;code&gt;taxRates&lt;/code&gt; 메소드에서 반환 된 하드 코딩 된 세율 ID를 변경할 때 사용자의 기존 구독에 대한 세금 설정은 동일하게 유지됩니다. 반환 된 &lt;code&gt;taxTaxRates&lt;/code&gt; 값으로 기존 구독의 세금 값을 업데이트 하려면 사용자의 구독 인스턴스 에서 &lt;code&gt;syncTaxRates&lt;/code&gt; 메서드를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0b6652aed5cd44d989a49ea31c8110db618dbe29" translate="yes" xml:space="preserve">
          <source>When copying a directory, the &lt;code&gt;copy&lt;/code&gt; method will flatten the directory's structure. To maintain the directory's original structure, you should use the &lt;code&gt;copyDirectory&lt;/code&gt; method instead:</source>
          <target state="translated">디렉토리를 복사 할 때 &lt;code&gt;copy&lt;/code&gt; 메소드는 디렉토리 구조를 평평하게합니다. 디렉토리의 원래 구조를 유지하려면 대신 &lt;code&gt;copyDirectory&lt;/code&gt; 메소드를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2667b25c72d01d0e8833759f9e7eaacaf7a1626c" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom place-holder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">사용자 지정 유효성 검사 규칙을 만들 때 오류 메시지에 대한 사용자 지정 자리 표시 자 대체를 정의해야 할 수도 있습니다. 위에서 설명한대로 커스텀 Validator를 생성 한 다음 &lt;code&gt;Validator&lt;/code&gt; 파사드 에서 &lt;code&gt;replacer&lt;/code&gt; 메소드를 호출하면 됩니다. &lt;a href=&quot;providers&quot;&gt;서비스 제공 업체&lt;/a&gt; 의 &lt;code&gt;boot&lt;/code&gt; 방법 으로이 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4309846d3eb245c338bacc3d783c9cd4c7c9e3c5" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom placeholder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">사용자 지정 유효성 검사 규칙을 만들 때 때때로 오류 메시지에 대한 사용자 지정 자리 표시 자 대체를 정의해야 할 수 있습니다. 위에서 설명한대로 사용자 정의 Validator를 생성 한 다음 &lt;code&gt;Validator&lt;/code&gt; 파사드 에서 &lt;code&gt;replacer&lt;/code&gt; 메서드를 호출하면 됩니다. &lt;code&gt;boot&lt;/code&gt; 방법 내에서이 작업을 수행 할 수 있습니다 .&lt;a href=&quot;providers&quot;&gt;서비스 제공 업체&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9a99910cb4d97355a9a894395c4a50b27c322de" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection must be made over TLS (by default, when &lt;code&gt;forceTLS&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, a non-TLS connection will be made if the page was loaded over HTTP, or as a fallback if a TLS connection fails):</source>
          <target state="translated">&lt;code&gt;pusher&lt;/code&gt; 커넥터 를 사용하는 Echo 인스턴스를 만들 때 &lt;code&gt;cluster&lt;/code&gt; 를 지정하고 TLS를 통해 연결해야하는지 여부 도 지정할 수 있습니다 (기본적으로 &lt;code&gt;forceTLS&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 인 경우 페이지가로드 된 경우 비 TLS 연결이 만들어집니다. HTTP를 통해 또는 TLS 연결이 실패 할 경우 대체로) :</target>
        </trans-unit>
        <trans-unit id="a70de08feb757b5533e6ef8fb54644f5fb74a762" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection should be encrypted:</source>
          <target state="translated">&lt;code&gt;pusher&lt;/code&gt; 커넥터 를 사용하는 Echo 인스턴스를 작성할 때 연결을 암호화해야하는지 여부뿐만 아니라 &lt;code&gt;cluster&lt;/code&gt; 를 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1683526f8b6bad10b61652ae2df835962171ee2e" translate="yes" xml:space="preserve">
          <source>When creating files using the &lt;code&gt;fake&lt;/code&gt; method, you may specify the width, height, and size of the image in order to better test your validation rules:</source>
          <target state="translated">&lt;code&gt;fake&lt;/code&gt; 방법을 사용하여 파일을 만들 때 유효성 검사 규칙을 더 잘 테스트하기 위해 이미지의 너비, 높이 및 크기를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9297c0c887cd5b6a96e0c51fb4b5bf876388c407" translate="yes" xml:space="preserve">
          <source>When creating the table, you may use any of the schema builder's &lt;a href=&quot;#creating-columns&quot;&gt;column methods&lt;/a&gt; to define the table's columns.</source>
          <target state="translated">테이블을 생성 할 때 스키마 빌더의 &lt;a href=&quot;#creating-columns&quot;&gt; 열 메소드&lt;/a&gt; 를 사용하여 테이블의 열을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="518235eb7ee927b1366faedbaa7565832ec969ce" translate="yes" xml:space="preserve">
          <source>When customizing Homestead, Ubuntu may ask you if you would like to keep a package's original configuration or overwrite it with a new configuration file. To avoid this, you should use the following command when installing packages to avoid overwriting any configuration previously written by Homestead:</source>
          <target state="translated">홈스테드를 커스터마이징 할 때 우분투는 패키지의 원래 설정을 유지할 것인지 새 설정 파일로 덮어 쓸 것인지 묻습니다. 이를 방지하려면 패키지를 설치할 때 Homestead가 이전에 작성한 구성을 겹쳐 쓰지 않도록 다음 명령을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="30135835125895fbd65984848b9e15fe258d1385" translate="yes" xml:space="preserve">
          <source>When dealing with HTML elements like checkboxes, your application may receive &quot;truthy&quot; values that are actually strings. For example, &quot;true&quot; or &quot;on&quot;. For convenience, you may use the &lt;code&gt;boolean&lt;/code&gt; method to retrieve these values as booleans. The &lt;code&gt;boolean&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for 1, &quot;1&quot;, true, &quot;true&quot;, &quot;on&quot;, and &quot;yes&quot;. All other values will return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">확인란과 같은 HTML 요소를 처리 할 때 응용 프로그램은 실제로 문자열 인 &quot;진정한&quot;값을받을 수 있습니다. 예 : &quot;true&quot;또는 &quot;on&quot;. 편의를 위해 &lt;code&gt;boolean&lt;/code&gt; 메소드를 사용하여 이러한 값을 boolean으로 검색 할 수 있습니다 . &lt;code&gt;boolean&lt;/code&gt; 메소드가 리턴 &lt;code&gt;true&lt;/code&gt; 1, &quot;1&quot; &quot;예&quot;사실 &quot;에&quot;, &quot;참 true&quot;. 다른 모든 값은 &lt;code&gt;false&lt;/code&gt; 를 반환합니다. .</target>
        </trans-unit>
        <trans-unit id="ea89923970ce3f554740212e339e023bb926040b" translate="yes" xml:space="preserve">
          <source>When dealing with nested arrays or objects, you may specify the key used to determine uniqueness:</source>
          <target state="translated">중첩 배열 또는 객체를 처리 할 때 고유성을 결정하는 데 사용되는 키를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcc6e8b59c43b0a62074ded6ffbd2735d6014359" translate="yes" xml:space="preserve">
          <source>When debugging functional tests that make requests to the web server, it is easier to autostart debugging rather than modifying tests to pass through a custom header or cookie to trigger debugging. To force Xdebug to start automatically, modify &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; inside your Vagrant box and add the following configuration:</source>
          <target state="translated">웹 서버에 요청하는 기능 테스트를 디버깅 할 때 디버깅을 트리거하기 위해 사용자 지정 헤더 또는 쿠키를 통과하도록 테스트를 수정하는 것보다 디버깅을 자동 시작하는 것이 더 쉽습니다. Xdebug가 자동으로 시작되도록하려면 Vagrant 상자에서 &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; 를 수정 하고 다음 구성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c9dab00d5c672e6fa72dd329131c98099d23d99d" translate="yes" xml:space="preserve">
          <source>When declaring a resource route, you may specify a subset of actions the controller should handle instead of the full set of default actions:</source>
          <target state="translated">자원 라우트를 선언 할 때 전체 기본 조치 세트 대신 제어기가 처리해야하는 조치의 서브 세트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6c69d8fed783cacda4127746365d2a2e451cce" translate="yes" xml:space="preserve">
          <source>When declaring resource routes that will be consumed by APIs, you will commonly want to exclude routes that present HTML templates such as &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt;. For convenience, you may use the &lt;code&gt;apiResource&lt;/code&gt; method to automatically exclude these two routes:</source>
          <target state="translated">API에서 사용할 리소스 경로를 선언 할 때 일반적으로 &lt;code&gt;create&lt;/code&gt; 및 &lt;code&gt;edit&lt;/code&gt; 와 같은 HTML 템플릿이있는 경로를 제외하려고합니다 . 편의상 &lt;code&gt;apiResource&lt;/code&gt; 메소드를 사용하여 다음 두 경로를 자동으로 제외 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b475c89219d52d249fc059c174753fe77faaf88b" translate="yes" xml:space="preserve">
          <source>When defining a Closure based command, you may use the &lt;code&gt;describe&lt;/code&gt; method to add a description to the command. This description will be displayed when you run the &lt;code&gt;php artisan list&lt;/code&gt; or &lt;code&gt;php artisan help&lt;/code&gt; commands:</source>
          <target state="translated">폐쇄 기반 명령을 정의 할 때 &lt;code&gt;describe&lt;/code&gt; 메소드를 사용 하여 명령에 설명을 추가 할 수 있습니다 . 이 설명은 &lt;code&gt;php artisan list&lt;/code&gt; 또는 &lt;code&gt;php artisan help&lt;/code&gt; 명령 을 실행할 때 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="032bac906d489a90c95e8a9209c6eb78ef73404c" translate="yes" xml:space="preserve">
          <source>When defining a child view, use the Blade &lt;code&gt;@extends&lt;/code&gt; directive to specify which layout the child view should &quot;inherit&quot;. Views which extend a Blade layout may inject content into the layout's sections using &lt;code&gt;@section&lt;/code&gt; directives. Remember, as seen in the example above, the contents of these sections will be displayed in the layout using &lt;code&gt;@yield&lt;/code&gt;:</source>
          <target state="translated">자식 뷰를 정의 할 때 Blade &lt;code&gt;@extends&lt;/code&gt; 지시문을 사용하여 자식 뷰가 &quot;상속&quot;할 레이아웃을 지정하십시오. 블레이드 레이아웃을 확장하는 뷰는 &lt;code&gt;@section&lt;/code&gt; 지시문을 사용하여 레이아웃 섹션에 내용을 삽입 할 수 있습니다 . 위의 예에서 볼 수 &lt;code&gt;@yield&lt;/code&gt; 섹션의 내용은 @yield를 사용하여 레이아웃에 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="493ca91f41aa9fd9d6b54a0ee7ce85fe6e316e51" translate="yes" xml:space="preserve">
          <source>When defining an option that expects an array input, each option value passed to the command should be prefixed with the option name:</source>
          <target state="translated">배열 입력이 필요한 옵션을 정의 할 때 명령에 전달 된 각 옵션 값 앞에 옵션 이름이 붙어야합니다.</target>
        </trans-unit>
        <trans-unit id="8904e2b72a344813981270ebd7c1243c01a6474b" translate="yes" xml:space="preserve">
          <source>When defining dynamic relationships, always provide explicit key name arguments to the Eloquent relationship methods.</source>
          <target state="translated">동적 관계를 정의 할 때 항상 Eloquent 관계 메서드에 명시적인 키 이름 인수를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="70da2087238022ca8997c2a2a9b0219c46ccdf11" translate="yes" xml:space="preserve">
          <source>When defining policy methods that will not receive a model instance, such as a &lt;code&gt;create&lt;/code&gt; method, it will not receive a model instance. Instead, you should define the method as only expecting the authenticated user:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 메소드 와 같이 모델 인스턴스를 수신하지 않는 정책 메소드를 정의 할 때는 모델 인스턴스를 수신하지 않습니다. 대신 인증 된 사용자 만 기대하는 방법을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb95e7ac5a38d028f0226bb542549d0ddf8d0b5a" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;RoleUser&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">정의 할 때 &lt;code&gt;RoleUser&lt;/code&gt; 모델을 &lt;code&gt;Pivot&lt;/code&gt; 클래스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="e49ba9c0bf3574b04acbb6568be9590832dfa438" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;UserRole&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;UserRole&lt;/code&gt; 모델을 정의 할 때 &lt;code&gt;Pivot&lt;/code&gt; 클래스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="7cf72653b8e40816e43dee62856576bb7c94604b" translate="yes" xml:space="preserve">
          <source>When deploying Passport to your production servers for the first time, you will likely need to run the &lt;code&gt;passport:keys&lt;/code&gt; command. This command generates the encryption keys Passport needs in order to generate access token. The generated keys are not typically kept in source control:</source>
          <target state="translated">프로덕션 서버에 Passport를 처음으로 배포 할 경우 &lt;code&gt;passport:keys&lt;/code&gt; 명령 을 실행해야합니다 . 이 명령은 Passport가 액세스 토큰을 생성하기 위해 필요한 암호화 키를 생성합니다. 생성 된 키는 일반적으로 소스 제어에 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d2ad0d9cde7eb3b1a3fb631e23c38ecc60e2bc9" translate="yes" xml:space="preserve">
          <source>When deploying to production, make sure that you are optimizing Composer's class autoloader map so Composer can quickly find the proper file to load for a given class:</source>
          <target state="translated">프로덕션 환경에 배포 할 때 Composer가 지정된 클래스에로드 할 적절한 파일을 빠르게 찾을 수 있도록 Composer의 클래스 오토로더 맵을 최적화하고 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bab4c3c9170da76afa526f48ea600d0420dab84e" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;config:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">애플리케이션을 프로덕션에 배치 할 때 배치 프로세스 중에 &lt;code&gt;config:cache&lt;/code&gt; Artisan 명령을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="12ab09ffb9fa52591e6e6c5e2fd0b802b845f959" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;view:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">애플리케이션을 프로덕션에 배포 할 때 배포 프로세스 중에 &lt;code&gt;view:cache&lt;/code&gt; Artisan 명령을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b37a50ed76cf914e07270baaf09fc1dd22f0e4a3" translate="yes" xml:space="preserve">
          <source>When designing a mail notification template, it is convenient to quickly preview the rendered mail message in your browser like a typical Blade template. For this reason, Laravel allows you to return any mail message generated by a mail notification directly from a route Closure or controller. When a &lt;code&gt;MailMessage&lt;/code&gt; is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">메일 알림 템플릿을 디자인 할 때 일반적인 블레이드 템플릿처럼 브라우저에서 렌더링 된 메일 메시지를 빠르게 미리 보는 것이 편리합니다. 이러한 이유로 Laravel을 사용하면 경로 Closure 또는 컨트롤러에서 직접 메일 알림에 의해 생성 된 모든 메일 메시지를 반환 할 수 있습니다. 때 &lt;code&gt;MailMessage&lt;/code&gt; 반환되고, 그것은 렌더링을 받고 신속하게 실제 이메일 주소로 보낼 필요없이 디자인을 미리 볼 수 있도록 브라우저에 표시 :</target>
        </trans-unit>
        <trans-unit id="28b560fcfb364682e703668f064af491a9541439" translate="yes" xml:space="preserve">
          <source>When designing a mailable's template, it is convenient to quickly preview the rendered mailable in your browser like a typical Blade template. For this reason, Laravel allows you to return any mailable directly from a route Closure or controller. When a mailable is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">메일 가능 템플릿을 디자인 할 때 브라우저에서 렌더링 된 메일 가능을 일반적인 블레이드 템플릿처럼 빠르게 미리 보는 것이 편리합니다. 이러한 이유로 Laravel을 사용하면 경로 마감 또는 컨트롤러에서 직접 우편물을 반환 할 수 있습니다. 메일 러블이 반환되면 브라우저에 렌더링되어 표시되어 실제 이메일 주소로 보내지 않고도 디자인을 빠르게 미리 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c099c2d3c0ed83534c5ae0df6449f696583293fb" translate="yes" xml:space="preserve">
          <source>When developing an application that sends email, you probably don't want to actually send emails to live email addresses. Laravel provides several ways to &quot;disable&quot; the actual sending of emails during local development.</source>
          <target state="translated">전자 메일을 보내는 응용 프로그램을 개발할 때 실제 전자 메일 주소로 실제로 전자 메일을 보내지 않을 수 있습니다. Laravel은 로컬 개발 중에 실제 이메일 전송을 &quot;비활성화&quot;하는 몇 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d066770c417c971ee86970897b32126b29387c57" translate="yes" xml:space="preserve">
          <source>When executing a mass delete statement via Eloquent, the &lt;code&gt;deleting&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the deleted models. This is because the models are never actually retrieved when executing the delete statement.</source>
          <target state="translated">Eloquent를 통해 대량 삭제 문을 실행하면 &lt;code&gt;deleting&lt;/code&gt; &lt;code&gt;deleted&lt;/code&gt; 모델에 대해 삭제 및 삭제 된 모델 이벤트가 시작되지 않습니다. delete 문을 실행할 때 모델이 실제로 검색되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ec3b939c6ae0eeae4fc27cd1bd057ac8bd430bec" translate="yes" xml:space="preserve">
          <source>When executing the code above, the underlying subscription item with the &lt;code&gt;basic-plan&lt;/code&gt; is deleted and the one with the &lt;code&gt;chat-plan&lt;/code&gt; is preserved. Additionally, a new subscription item for the new &lt;code&gt;pro-plan&lt;/code&gt; is created.</source>
          <target state="translated">위 코드를 실행하면 &lt;code&gt;basic-plan&lt;/code&gt; 이 있는 기본 구독 항목 이 삭제되고 &lt;code&gt;chat-plan&lt;/code&gt; 이있는 항목이 유지됩니다. 또한 새로운 구독 항목을 &lt;code&gt;pro-plan&lt;/code&gt; 이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2078110991c2cb517f80e63597da66f796b090f9" translate="yes" xml:space="preserve">
          <source>When faking requests, HTTP client middleware are not executed. You should define expectations for faked responses as if these middleware have run correctly.</source>
          <target state="translated">위조 요청시 HTTP 클라이언트 미들웨어가 실행되지 않습니다. 이러한 미들웨어가 올바르게 실행 된 것처럼 가짜 응답에 대한 기대치를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="14eea13dc2b6be36270c96abb8931250facc6f1d" translate="yes" xml:space="preserve">
          <source>When faking responses, you may occasionally wish to inspect the requests the client receives in order to make sure your application is sending the correct data or headers. You may accomplish this by calling the &lt;code&gt;Http::assertSent&lt;/code&gt; method after calling &lt;code&gt;Http::fake&lt;/code&gt;.</source>
          <target state="translated">가짜 응답을 할 때 응용 프로그램이 올바른 데이터 또는 헤더를 전송하는지 확인하기 위해 클라이언트가 수신하는 요청을 검사 할 수 있습니다. &lt;code&gt;Http::fake&lt;/code&gt; 호출 한 후 &lt;code&gt;Http::assertSent&lt;/code&gt; 메서드 를 호출하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8bbba5dea965ae2dd54f4f5383ed17fd26b796e3" translate="yes" xml:space="preserve">
          <source>When getting started with Laravel, many developers are confused by the lack of a &lt;code&gt;models&lt;/code&gt; directory. However, the lack of such a directory is intentional. We find the word &quot;models&quot; ambiguous since it means many different things to many different people. Some developers refer to an application's &quot;model&quot; as the totality of all of its business logic, while others refer to &quot;models&quot; as classes that interact with a relational database.</source>
          <target state="translated">Laravel을 시작할 때 많은 개발자들이 &lt;code&gt;models&lt;/code&gt; 디렉토리 가 없기 때문에 혼란스러워합니다 . 그러나 그러한 디렉토리의 부족은 의도적입니다. &quot;모델&quot;이라는 단어는 많은 사람들에게 다른 많은 것을 의미하기 때문에 모호합니다. 일부 개발자는 응용 프로그램의 &quot;모델&quot;을 모든 비즈니스 논리의 총체라고 말하고 다른 개발자는 &quot;모델&quot;을 관계형 데이터베이스와 상호 작용하는 클래스라고합니다.</target>
        </trans-unit>
        <trans-unit id="611d51d36dc67aff091e4f2a7be4bc9ec356b5e6" translate="yes" xml:space="preserve">
          <source>When given an array, the &lt;code&gt;has&lt;/code&gt; method will determine if all of the specified values are present:</source>
          <target state="translated">배열이 주어지면 &lt;code&gt;has&lt;/code&gt; 메소드는 지정된 모든 값이 존재 하는지를 결정합니다 :</target>
        </trans-unit>
        <trans-unit id="885bd7735d5aa27fcff220e5f9a01155cb9d9730" translate="yes" xml:space="preserve">
          <source>When handling an incoming request authenticated by Sanctum, you may determine if the token has a given ability using the &lt;code&gt;tokenCan&lt;/code&gt; method:</source>
          <target state="translated">Sanctum에서 인증 한 수신 요청을 처리 할 때 &lt;code&gt;tokenCan&lt;/code&gt; 메서드를 사용하여 토큰에 주어진 기능이 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce11ad0a398efedb0607c3112c42d1b116894b60" translate="yes" xml:space="preserve">
          <source>When hiding relationships, use the relationship's method name.</source>
          <target state="translated">관계를 숨길 때는 관계의 메소드 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ae01e7b52e1d18b232afcf2de3de0f4c1d57311c" translate="yes" xml:space="preserve">
          <source>When in a nested loop, the parent's loop variable.</source>
          <target state="translated">중첩 루프에있을 때 부모의 루프 변수</target>
        </trans-unit>
        <trans-unit id="b9a519d5ad3076c7df6ad8c41a3fcaf2c900c8c7" translate="yes" xml:space="preserve">
          <source>When injecting a model ID to a route or controller action, you will often query to retrieve the model that corresponds to that ID. Laravel route model binding provides a convenient way to automatically inject the model instances directly into your routes. For example, instead of injecting a user's ID, you can inject the entire &lt;code&gt;User&lt;/code&gt; model instance that matches the given ID.</source>
          <target state="translated">모델 ID를 라우트 또는 컨트롤러 조치에 주입 할 때 종종 해당 ID에 해당하는 모델을 검색하도록 조회합니다. Laravel 경로 모델 바인딩은 모델 인스턴스를 경로에 직접 자동으로 주입하는 편리한 방법을 제공합니다. 예를 들어, 사용자의 ID를 주입하는 대신 주어진 ID와 일치하는 전체 &lt;code&gt;User&lt;/code&gt; 모델 인스턴스를 주입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e87b699f41db3a57b8fb75bd606266db3c825a24" translate="yes" xml:space="preserve">
          <source>When injecting an Eloquent model into a job, it is automatically serialized before being placed on the queue and restored when the job is processed. However, if the model has been deleted while the job was waiting to be processed by a worker, your job may fail with a &lt;code&gt;ModelNotFoundException&lt;/code&gt;.</source>
          <target state="translated">Eloquent 모델을 작업에 삽입하면 큐에 배치되기 전에 자동으로 직렬화되고 작업이 처리 될 때 복원됩니다. 그러나 작업이 작업자에 의해 처리되기를 기다리는 동안 모델이 삭제 된 경우 작업이 &lt;code&gt;ModelNotFoundException&lt;/code&gt; 과 함께 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="570d91dd65073b79d750be698d666985f01a318d" translate="yes" xml:space="preserve">
          <source>When interacting with uploaded files, you may use the &lt;code&gt;storePublicly&lt;/code&gt; and &lt;code&gt;storePubliclyAs&lt;/code&gt; methods to store the uploaded file with &lt;code&gt;public&lt;/code&gt; visibility:</source>
          <target state="translated">업로드 된 파일과 상호 작용할 때 &lt;code&gt;storePublicly&lt;/code&gt; 및 &lt;code&gt;storePubliclyAs&lt;/code&gt; 메서드를 사용하여 업로드 된 파일을 &lt;code&gt;public&lt;/code&gt; 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="249f34c33e6a94024054b76a71f98eebd2fbeab9" translate="yes" xml:space="preserve">
          <source>When interpreting the words and actions of others, participants should always assume good intentions.</source>
          <target state="translated">다른 사람의 말과 행동을 해석 할 때 참가자는 항상 좋은 의도를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="5f8c53532795061653ab60af8bb7bf8e4052ccfb" translate="yes" xml:space="preserve">
          <source>When issuing a mass update or delete via Eloquent, the &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updated&lt;/code&gt;, &lt;code&gt;deleting&lt;/code&gt;, and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the affected models. This is because the models are never actually retrieved when issuing a mass update or delete.</source>
          <target state="translated">Eloquent를 통해 대량 업데이트 또는 삭제를 할 때 &lt;code&gt;saved&lt;/code&gt; , &lt;code&gt;updated&lt;/code&gt; , &lt;code&gt;deleting&lt;/code&gt; , &lt;code&gt;deleted&lt;/code&gt; 모델 이벤트는 영향을받는 모델에 대해 발생하지 않습니다. 이는 대량 업데이트 또는 삭제를 실행할 때 모델이 실제로 검색되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="59838b8d4c3d40af66dbfad5a0a5ca84f28599b7" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saved&lt;/code&gt; and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">Eloquent를 통해 대량 업데이트를 실행하면 업데이트 &lt;code&gt;updated&lt;/code&gt; 모델에 대해 &lt;code&gt;saved&lt;/code&gt; 및 업데이트 된 모델 이벤트가 시작되지 않습니다. 대량 업데이트를 실행할 때 모델이 실제로 검색되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="0ed9982b4c7c93de60e9b8eadcba9cc2e3a3ce19" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saving&lt;/code&gt;, &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updating&lt;/code&gt;, and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">Eloquent를 통해 대량 업데이트를 실행할 때, &lt;code&gt;saving&lt;/code&gt; , &lt;code&gt;saved&lt;/code&gt; , &lt;code&gt;updating&lt;/code&gt; 및 &lt;code&gt;updated&lt;/code&gt; 모델 이벤트는 업데이트 된 모델에 대해 발생하지 않습니다. 이는 대량 업데이트를 실행할 때 모델이 실제로 검색되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f5db836e6f3715e38e3e0e8d21d918ba72abf0b2" translate="yes" xml:space="preserve">
          <source>When issuing tokens for a mobile application, you are also free to specify &lt;a href=&quot;#token-abilities&quot;&gt;token abilities&lt;/a&gt;</source>
          <target state="translated">모바일 애플리케이션 용 토큰을 발행 할 때 &lt;a href=&quot;#token-abilities&quot;&gt;토큰 기능을&lt;/a&gt; 자유롭게 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="badd832e930e49cc7f3a838f8f1497107483fe29" translate="yes" xml:space="preserve">
          <source>When jobs are available on the queue, the worker will keep processing jobs with no delay in between them. However, the &lt;code&gt;sleep&lt;/code&gt; option determines how long (in seconds) the worker will &quot;sleep&quot; if there are no new jobs available. While sleeping, the worker will not process any new jobs - the jobs will be processed after the worker wakes up again.</source>
          <target state="translated">대기열에서 작업을 사용할 수 있으면 작업자는 작업 사이에 지연없이 작업을 계속 처리합니다. 그러나 &lt;code&gt;sleep&lt;/code&gt; 옵션은 사용 가능한 새 작업이없는 경우 작업자가 &quot;잠자기&quot;기간을 초 단위로 결정합니다. 잠자는 동안 작업자는 새 작업을 처리하지 않습니다. 작업자가 다시 깨어 난 후에 작업이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce94f10f68e74600dc843e2e60d84b6ce303e24" translate="yes" xml:space="preserve">
          <source>When listing the invoices for the customer, you may use the invoice's helper methods to display the relevant invoice information. For example, you may wish to list every invoice in a table, allowing the user to easily download any of them:</source>
          <target state="translated">고객에 대한 송장을 나열 할 때 송장의 도우미 방법을 사용하여 관련 송장 정보를 표시 할 수 있습니다. 예를 들어, 모든 송장을 표에 나열하여 사용자가 쉽게 송장을 다운로드 할 수 있도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9eab307f3b3056835aefd5a1bb7af35cea64621" translate="yes" xml:space="preserve">
          <source>When listing the receipts for the customer, you may use the receipt's helper methods to display the relevant receipt information. For example, you may wish to list every receipt in a table, allowing the user to easily download any of the receipts:</source>
          <target state="translated">고객에 대한 영수증을 나열 할 때 영수증의 도우미 메서드를 사용하여 관련 영수증 정보를 표시 할 수 있습니다. 예를 들어, 테이블에 모든 영수증을 나열하여 사용자가 영수증을 쉽게 다운로드 할 수 있도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="630491cd1fb162df1d41d18373cd26e63a591db7" translate="yes" xml:space="preserve">
          <source>When looping, a &lt;code&gt;$loop&lt;/code&gt; variable will be available inside of your loop. This variable provides access to some useful bits of information such as the current loop index and whether this is the first or last iteration through the loop:</source>
          <target state="translated">루핑 할 때 &lt;code&gt;$loop&lt;/code&gt; 변수를 루프 내부에서 사용할 수 있습니다. 이 변수는 현재 루프 인덱스 및 이것이 루프를 통한 첫 번째 반복인지 마지막 반복인지와 같은 유용한 정보 비트에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1c04573d3d5765e7c8354d81a1f28088357b68c2" translate="yes" xml:space="preserve">
          <source>When looping, you may use the &lt;a href=&quot;#the-loop-variable&quot;&gt;loop variable&lt;/a&gt; to gain valuable information about the loop, such as whether you are in the first or last iteration through the loop.</source>
          <target state="translated">루핑 할 때 루프를 처음 또는 마지막으로 반복하는지 여부와 같이 &lt;a href=&quot;#the-loop-variable&quot;&gt;루프 변수&lt;/a&gt; 를 사용하여 루프 에 대한 유용한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fd8422a7db5f61bc851553a8d572990ab747eea" translate="yes" xml:space="preserve">
          <source>When making &lt;code&gt;GET&lt;/code&gt; requests, you may either append a query string to the URL directly or pass an array of key / value pairs as the second argument to the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; 요청을 할 때 쿼리 문자열을 URL에 직접 추가하거나 키 / 값 쌍의 배열을 &lt;code&gt;get&lt;/code&gt; 메서드 의 두 번째 인수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37a87a030b094e3f3c88d7997812b03c6b5877bb" translate="yes" xml:space="preserve">
          <source>When making a path assertion such as &lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt;, the assertion can fail if &lt;code&gt;window.location.pathname&lt;/code&gt; is being updated asynchronously. You may use the &lt;code&gt;waitForLocation&lt;/code&gt; method to wait for the location to be a given value:</source>
          <target state="translated">&lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt; 와 같은 경로 어설 션을 만들 때 &lt;code&gt;window.location.pathname&lt;/code&gt; 이 비동기 적으로 업데이트 되면 어설 션이 실패 할 수 있습니다 . &lt;code&gt;waitForLocation&lt;/code&gt; 메소드를 사용하여 위치가 지정된 값이 될 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="112e6bee110402287d445aaaa363d31734163c0c" translate="yes" xml:space="preserve">
          <source>When manually creating a paginator instance, you should manually &quot;slice&quot; the array of results you pass to the paginator. If you're unsure how to do this, check out the &lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP function.</source>
          <target state="translated">페이지 매김 인스턴스를 수동으로 작성하는 경우 페이지에 전달하는 결과 배열을 수동으로 &quot;조각화&quot;해야합니다. 이 작업을 수행하는 방법을 잘 모를 경우 &lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP 함수를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3997b6ee918c58bec94022a8b090aeb8ae0eb42" translate="yes" xml:space="preserve">
          <source>When manually implementing email verification, you are required to define the contents of the verification notice view yourself. If you would like scaffolding that includes all necessary authentication and verification views, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">이메일 확인을 수동으로 구현하는 경우 확인 알림보기의 내용을 직접 정의해야합니다. 필요한 모든 인증 및 확인 뷰를 포함하는 스캐 폴딩을 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;원한다면 Laravel Jetstream을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9916b7441b1355d7a1a57fdefe45a3d44db0b8cd" translate="yes" xml:space="preserve">
          <source>When manually implementing password resets, you are required to define the contents of the views and routes yourself. If you would like scaffolding that includes all necessary authentication and verification logic, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">비밀번호 재설정을 수동으로 구현할 때보기의 내용을 정의하고 직접 경로를 지정해야합니다. 필요한 모든 인증 및 검증 로직을 포함하는 스캐 폴딩을 &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;원한다면 Laravel Jetstream을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a60e8976240c19309b6131cde05de8544a79ab4b" translate="yes" xml:space="preserve">
          <source>When merging attributes that are not &lt;code&gt;class&lt;/code&gt; attributes, the values provided to the &lt;code&gt;merge&lt;/code&gt; method will be considered the &quot;default&quot; values of attribute which can be overwritten by the component's consumer. Unlike &lt;code&gt;class&lt;/code&gt; attributes, non-class attributes are not appended to each other. For example, a &lt;code&gt;button&lt;/code&gt; component may look like the following:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 속성 이 아닌 속성을 병합 할 때 &lt;code&gt;merge&lt;/code&gt; 메서드에 제공된 값은 구성 요소의 소비자가 덮어 쓸 수있는 속성의 &quot;기본값&quot;값으로 간주됩니다. &lt;code&gt;class&lt;/code&gt; 속성 과 달리 클래스가 아닌 속성은 서로 추가되지 않습니다. 예를 들어 &lt;code&gt;button&lt;/code&gt; 구성 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="997bdd68cd01c1f694df0ebacf68cfd611f464b6" translate="yes" xml:space="preserve">
          <source>When mocking an object that is going to be injected into your application via Laravel's service container, you will need to bind your mocked instance into the container as an &lt;code&gt;instance&lt;/code&gt; binding. This will instruct the container to use your mocked instance of the object instead of constructing the object itself:</source>
          <target state="translated">Laravel의 서비스 컨테이너를 통해 애플리케이션에 주입 될 객체를 모의 할 때, 모의 인스턴스를 컨테이너에 인스턴스로 바인딩해야 &lt;code&gt;instance&lt;/code&gt; 바인딩으로 바인딩해야합니다. 이렇게하면 컨테이너가 개체 자체를 생성하는 대신 개체의 모의 인스턴스를 사용하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="a7e0426f2335d7f8f4061e58791752606c1d0ce5" translate="yes" xml:space="preserve">
          <source>When passing information in this manner, the data should be an array with key / value pairs. Inside your view, you can then access each value using its corresponding key, such as &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt;. As an alternative to passing a complete array of data to the &lt;code&gt;view&lt;/code&gt; helper function, you may use the &lt;code&gt;with&lt;/code&gt; method to add individual pieces of data to the view:</source>
          <target state="translated">이러한 방식으로 정보를 전달할 때 데이터는 키 / 값 쌍이있는 배열이어야합니다. 뷰 내에서 &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt; 와 같은 해당 키를 사용하여 각 값에 액세스 할 수 있습니다 . ?&amp;gt; . 전체 데이터 배열을 &lt;code&gt;view&lt;/code&gt; 도우미 함수 에 전달하는 대신 &lt;code&gt;with&lt;/code&gt; 메소드를 사용하여 개별 데이터 조각을 뷰에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cee1b7f11aeea844f3e37c303c175b5c6b6fed7" translate="yes" xml:space="preserve">
          <source>When providing metadata, please avoid using &lt;code&gt;subscription_name&lt;/code&gt; as a metadata key. This key is reserved for internal use by Cashier.</source>
          <target state="translated">메타 데이터를 제공 할 때 &lt;code&gt;subscription_name&lt;/code&gt; 을 메타 데이터 키로 사용하지 마십시오 . 이 키는 캐셔 내부 용으로 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6f7f5f784ae24b730ca163e333bc620653b7876" translate="yes" xml:space="preserve">
          <source>When receiving authorization requests, Passport will automatically display a template to the user allowing them to approve or deny the authorization request. If they approve the request, they will be redirected back to the &lt;code&gt;redirect_uri&lt;/code&gt; that was specified by the consuming application. The &lt;code&gt;redirect_uri&lt;/code&gt; must match the &lt;code&gt;redirect&lt;/code&gt; URL that was specified when the client was created.</source>
          <target state="translated">인증 요청을 받으면 Passport는 사용자에게 인증 요청을 승인하거나 거부 할 수있는 템플릿을 자동으로 표시합니다. 요청을 승인 하면 소비 애플리케이션이 지정한 redirect_uri로 다시 &lt;code&gt;redirect_uri&lt;/code&gt; . &lt;code&gt;redirect_uri&lt;/code&gt; 로는 경기해야한다 &lt;code&gt;redirect&lt;/code&gt; 클라이언트를 만들 때 지정된 URL을.</target>
        </trans-unit>
        <trans-unit id="2832860d0939db625b735827d5fd2e980923b294" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;5.7.*&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">라 라벨의 주요 릴리스에는 변경 사항이 포함 되므로 라 라벨 프레임 워크 또는 애플리케이션 또는 패키지에서 해당 컴포넌트를 참조 할 때는 항상 &lt;code&gt;5.7.*&lt;/code&gt; 와 같은 버전 제약 조건을 사용해야합니다 . 그러나 우리는 항상 귀하가 하루 안에 새로운 주요 릴리스로 업데이트 할 수 있도록 노력하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecc2962ca6b6d6ad9094131317c7b960e5941338" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;^8.0&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">애플리케이션이나 패키지에서 라 라벨 프레임 워크 또는 그 구성 요소를 참조 할 때는 항상 &lt;code&gt;^8.0&lt;/code&gt; 과 같은 버전 제약 조건을 사용해야합니다 . 라 라벨의 주요 릴리스에는 주요 변경 사항이 포함되어 있기 때문입니다. 그러나 우리는 항상 하루 이내에 새로운 주요 릴리스로 업데이트 할 수 있도록 노력하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d477ea5139573bfab84fe05919a01eb014fbc63" translate="yes" xml:space="preserve">
          <source>When registering event listeners manually, you may wrap the listener Closure within the &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; function to instruct Laravel to execute the listener using the &lt;a href=&quot;queues&quot;&gt;queue&lt;/a&gt;:</source>
          <target state="translated">이벤트 리스너를 수동으로 등록 할 때 &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; 함수 내에 리스너 클로저를 래핑하여 라 라벨에게 &lt;a href=&quot;queues&quot;&gt;큐를&lt;/a&gt; 사용하여 리스너를 실행하도록 지시 할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="67740bd53dd394d2ca478a0a40cbbcb6f6dd2970" translate="yes" xml:space="preserve">
          <source>When registering routes for single action controllers, you do not need to specify a method:</source>
          <target state="translated">단일 조치 제어기의 라우트를 등록 할 때 메소드를 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="85796647e4fa4a49763539cbd680e854a8f5d50d" translate="yes" xml:space="preserve">
          <source>When removing a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;dissociate&lt;/code&gt; method. This method will set the relationship's foreign key to &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 관계를 제거 할 때 &lt;code&gt;dissociate&lt;/code&gt; 메소드를 사용할 수 있습니다 . 이 메소드는 관계의 외래 키를 &lt;code&gt;null&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a7bf667a1788129a6fa64adeb77396163dd8f8f7" translate="yes" xml:space="preserve">
          <source>When requesting an access token using the authorization code grant, consumers should specify their desired scopes as the &lt;code&gt;scope&lt;/code&gt; query string parameter. The &lt;code&gt;scope&lt;/code&gt; parameter should be a space-delimited list of scopes:</source>
          <target state="translated">인증 코드 부여를 사용하여 액세스 토큰을 요청할 때 소비자는 원하는 범위를 &lt;code&gt;scope&lt;/code&gt; 쿼리 문자열 매개 변수 로 지정해야합니다 . &lt;code&gt;scope&lt;/code&gt; 매개 변수는 범위의 공백으로 구분 된 목록이어야합니다 :</target>
        </trans-unit>
        <trans-unit id="a8af0df12da61722f088cdc349e3a263f56a034e" translate="yes" xml:space="preserve">
          <source>When returning a resource collection from a route, Laravel resets the collection's keys so that they are in simple numerical order. However, you may add a &lt;code&gt;preserveKeys&lt;/code&gt; property to your resource class indicating if collection keys should be preserved:</source>
          <target state="translated">경로에서 리소스 컬렉션을 반환 할 때 Laravel은 컬렉션의 키를 간단한 숫자 순서로 재설정합니다. 그러나 컬렉션 키를 보존해야하는지 여부를 나타내는 &lt;code&gt;preserveKeys&lt;/code&gt; 속성을 리소스 클래스에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f34f7552a82bf023f8adb374ea206e28d2b9b04" translate="yes" xml:space="preserve">
          <source>When returning additional meta data from your resources, you never have to worry about accidentally overriding the &lt;code&gt;links&lt;/code&gt; or &lt;code&gt;meta&lt;/code&gt; keys that are automatically added by Laravel when returning paginated responses. Any additional &lt;code&gt;links&lt;/code&gt; you define will be merged with the links provided by the paginator.</source>
          <target state="translated">리소스에서 추가 메타 데이터를 반환 할 때 페이지 매김 된 응답을 반환 할 때 Laravel이 자동으로 추가 한 &lt;code&gt;links&lt;/code&gt; 또는 &lt;code&gt;meta&lt;/code&gt; 키를 실수로 무시할 염려가 없습니다 . 정의한 추가 &lt;code&gt;links&lt;/code&gt; 는 페이지 매김자가 제공 한 링크와 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="3b659e248971c7cad5e72326fc37d62e8eba5142" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your gate, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">게이트에서 인증 응답을 반환 할 때 &lt;code&gt;Gate::allows&lt;/code&gt; 메서드는 여전히 간단한 부울 값을 반환합니다. 그러나 &lt;code&gt;Gate::inspect&lt;/code&gt; 메서드를 사용하여 게이트에서 반환 된 전체 승인 응답을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e542c7317b65712ce596fe952430f795900ad12" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your policy, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">정책에서 승인 응답을 반환 할 때 &lt;code&gt;Gate::allows&lt;/code&gt; 메서드는 여전히 간단한 부울 값을 반환합니다. 그러나 &lt;code&gt;Gate::inspect&lt;/code&gt; 사용할 수 있습니다. 메서드를 반환 된 전체 승인 응답을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="235950e59c45df6dbd55d8c7429704a2775b8a87" translate="yes" xml:space="preserve">
          <source>When returning paginated collections in a resource response, Laravel will wrap your resource data in a &lt;code&gt;data&lt;/code&gt; key even if the &lt;code&gt;withoutWrapping&lt;/code&gt; method has been called. This is because paginated responses always contain &lt;code&gt;meta&lt;/code&gt; and &lt;code&gt;links&lt;/code&gt; keys with information about the paginator's state:</source>
          <target state="translated">리소스 응답에서 페이지 매김 된 컬렉션을 반환하면 라 라벨은 &lt;code&gt;withoutWrapping&lt;/code&gt; 메서드가 호출 된 경우에도 리소스 데이터를 &lt;code&gt;data&lt;/code&gt; 키로 래핑합니다 . 페이지가 매겨진 응답이 항상 포함되어 있기 때문입니다 &lt;code&gt;meta&lt;/code&gt; 와 &lt;code&gt;links&lt;/code&gt; 페이지 배열의 상태에 대한 정보와 함께 키를 :</target>
        </trans-unit>
        <trans-unit id="55aef540220ab8c145c79470cc7804f48f7e641b" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">&lt;code&gt;phpunit&lt;/code&gt; 을 통해 테스트를 실행할 때 Laravel은 &lt;code&gt;phpunit.xml&lt;/code&gt; 파일에 정의 된 환경 변수 때문에 구성 환경을 &lt;code&gt;testing&lt;/code&gt; 자동 설정 합니다. Laravel은 또한 테스트하는 동안 세션 및 캐시를 &lt;code&gt;array&lt;/code&gt; 드라이버에 자동으로 구성하므로 테스트 중에 세션 또는 캐시 데이터가 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba33530bda7d5433d01b7b160dec5838a201d990" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;vendor/bin/phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">&lt;code&gt;vendor/bin/phpunit&lt;/code&gt; 을 통해 테스트를 실행할 때 Laravel은 &lt;code&gt;phpunit.xml&lt;/code&gt; 파일에 정의 된 환경 변수로 인해 구성 환경을 &lt;code&gt;testing&lt;/code&gt; 자동 설정 합니다. 또한 Laravel은 테스트하는 동안 세션 및 캐시를 &lt;code&gt;array&lt;/code&gt; 드라이버에 자동으로 구성하므로 테스트하는 동안 세션 또는 캐시 데이터가 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3642a6010302d9a2d8571729ccc47dd22312b0f6" translate="yes" xml:space="preserve">
          <source>When running tests, Dusk will back-up your &lt;code&gt;.env&lt;/code&gt; file and rename your Dusk environment to &lt;code&gt;.env&lt;/code&gt;. Once the tests have completed, your &lt;code&gt;.env&lt;/code&gt; file will be restored.</source>
          <target state="translated">테스트를 실행할 때 Dusk는 &lt;code&gt;.env&lt;/code&gt; 파일을 백업 하고 Dusk 환경의 이름을 &lt;code&gt;.env&lt;/code&gt; 로 바꿉니다 . 테스트가 완료되면 &lt;code&gt;.env&lt;/code&gt; 파일이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="e548e334c81e5793d6808a41993a74d99fa7f376" translate="yes" xml:space="preserve">
          <source>When running your applications behind a load balancer that terminates TLS / SSL certificates, you may notice your application sometimes does not generate HTTPS links. Typically this is because your application is being forwarded traffic from your load balancer on port 80 and does not know it should generate secure links.</source>
          <target state="translated">TLS / SSL 인증서를 종료하는로드 밸런서 뒤에서 응용 프로그램을 실행하면 응용 프로그램이 HTTPS 링크를 생성하지 않는 경우가 있습니다. 일반적으로 이는 애플리케이션이 포트 80의로드 밸런서에서 트래픽을 전달하고 있으며 보안 링크를 생성해야한다는 것을 모르기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="69c1f1f03f6870f116f900338c453c7b441c7d2f" translate="yes" xml:space="preserve">
          <source>When sending JSON requests to your application, you may access the JSON data via the &lt;code&gt;input&lt;/code&gt; method as long as the &lt;code&gt;Content-Type&lt;/code&gt; header of the request is properly set to &lt;code&gt;application/json&lt;/code&gt;. You may even use &quot;dot&quot; syntax to dig into JSON arrays:</source>
          <target state="translated">JSON 요청을 애플리케이션에 보낼 때 요청 의 &lt;code&gt;Content-Type&lt;/code&gt; 헤더가 &lt;code&gt;application/json&lt;/code&gt; 으로 올바르게 설정되어 있으면 &lt;code&gt;input&lt;/code&gt; 방법을 통해 JSON 데이터에 액세스 할 수 있습니다 . &quot;dot&quot;구문을 사용하여 JSON 배열을 파헤칠 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae17b9d6ffa7bc93026e7359a3c906c2bac4b23f" translate="yes" xml:space="preserve">
          <source>When sending mail notifications, be sure to set the &lt;code&gt;name&lt;/code&gt; value in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This value will be used in the header and footer of your mail notification messages.</source>
          <target state="translated">메일 알림을 보낼 때 &lt;code&gt;config/app.php&lt;/code&gt; 구성 파일 에서 &lt;code&gt;name&lt;/code&gt; 값을 설정하십시오. 이 값은 메일 알림 메시지의 머리글과 바닥 글에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a57bedb41b07e62fe43b1a2fd5924faeb27f2ee0" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;mail&lt;/code&gt; channel, the notification system will automatically look for an &lt;code&gt;email&lt;/code&gt; property on your notifiable entity. You may customize which email address is used to deliver the notification by defining a &lt;code&gt;routeNotificationForMail&lt;/code&gt; method on the entity:</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; 채널을 통해 알림을 보내면 알림 시스템이 알림 가능한 엔터티에서 &lt;code&gt;email&lt;/code&gt; 속성을 자동으로 찾습니다 . 엔티티에 &lt;code&gt;routeNotificationForMail&lt;/code&gt; 메소드를 정의하여 알림을 전달하는 데 사용되는 이메일 주소를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25492d9feabe4c50f8dd3f0051c456deb51f87bd" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;nexmo&lt;/code&gt; channel, the notification system will automatically look for a &lt;code&gt;phone_number&lt;/code&gt; attribute on the notifiable entity. If you would like to customize the phone number the notification is delivered to, define a &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; method on the entity:</source>
          <target state="translated">&lt;code&gt;nexmo&lt;/code&gt; 채널을 통해 알림을 보낼 때 알림 시스템은 알림 가능한 엔티티에서 &lt;code&gt;phone_number&lt;/code&gt; 속성을 자동으로 찾습니다 . 알림이 전달되는 전화 번호를 사용자 정의 하려면 엔티티 에서 &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; 메소드를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed35dc09fc8b95398c7fe494f4b20ba8a4a48e0a" translate="yes" xml:space="preserve">
          <source>When storing credit cards to a customer for future use, the Stripe Setup Intents API must be used to securely gather the customer's payment method details. A &quot;Setup Intent&quot; indicates to Stripe the intention to charge a customer's payment method. Cashier's &lt;code&gt;Billable&lt;/code&gt; trait includes the &lt;code&gt;createSetupIntent&lt;/code&gt; to easily create a new Setup Intent. You should call this method from the route or controller that will render the form which gathers your customer's payment method details:</source>
          <target state="translated">향후 사용을 위해 고객에게 신용 카드를 저장할 때 Stripe Setup Intents API를 사용하여 고객의 결제 방법 세부 정보를 안전하게 수집해야합니다. &quot;Setup Intent&quot;는 고객의 결제 수단을 청구 할 의사를 Stripe에 나타냅니다. 계산원의 &lt;code&gt;Billable&lt;/code&gt; 특성에는 &lt;code&gt;createSetupIntent&lt;/code&gt; 가 포함됩니다. 새 설정 의도를 쉽게 만들 수 가 . 고객의 결제 방법 세부 정보를 수집하는 양식을 렌더링 할 경로 또는 컨트롤러에서이 방법을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c6c348b0b8a7777e0eaf4112f46152e440a338c" translate="yes" xml:space="preserve">
          <source>When testing Laravel applications, you may wish to &quot;mock&quot; certain aspects of your application so they are not actually executed during a given test. For example, when testing a controller that dispatches an event, you may wish to mock the event listeners so they are not actually executed during the test. This allows you to only test the controller's HTTP response without worrying about the execution of the event listeners, since the event listeners can be tested in their own test case.</source>
          <target state="translated">Laravel 응용 프로그램을 테스트 할 때 특정 테스트 중에 실제로 실행되지 않도록 응용 프로그램의 특정 측면을 &quot;모의&quot;할 수 있습니다. 예를 들어, 이벤트를 전달하는 컨트롤러를 테스트 할 때 테스트 중에 실제로 실행되지 않도록 이벤트 리스너를 조롱 할 수 있습니다. 이벤트 리스너는 자체 테스트 케이스에서 테스트 할 수 있으므로 이벤트 리스너 실행에 대한 걱정없이 컨트롤러의 HTTP 응답 만 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fa45a32d5f7a441183697a40360a3f6807b3295" translate="yes" xml:space="preserve">
          <source>When testing an application that uses Cashier, you may mock the actual HTTP requests to the Stripe API; however, this requires you to partially re-implement Cashier's own behavior. Therefore, we recommend allowing your tests to hit the actual Stripe API. While this is slower, it provides more confidence that your application is working as expected and any slow tests may be placed within their own PHPUnit testing group.</source>
          <target state="translated">Cashier를 사용하는 애플리케이션을 테스트 할 때 Stripe API에 대한 실제 HTTP 요청을 모의 할 수 있습니다. 그러나이를 위해서는 계산원 자신의 행동을 부분적으로 다시 구현해야합니다. 따라서 테스트가 실제 Stripe API에 도달하도록 허용하는 것이 좋습니다. 속도는 느리지 만 애플리케이션이 예상대로 작동하고 있으며 느린 테스트는 자체 PHPUnit 테스트 그룹에 배치 될 수 있다는 확신을 더 제공합니다.</target>
        </trans-unit>
        <trans-unit id="98cd3ef6c47c5747bd1a5816f545f1bf53150caa" translate="yes" xml:space="preserve">
          <source>When testing applications that use JavaScript extensively, it often becomes necessary to &quot;wait&quot; for certain elements or data to be available before proceeding with a test. Dusk makes this a cinch. Using a variety of methods, you may wait for elements to be visible on the page or even wait until a given JavaScript expression evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">JavaScript를 광범위하게 사용하는 응용 프로그램을 테스트 할 때 테스트를 진행하기 전에 특정 요소 나 데이터를 사용할 수있을 때까지 &quot;대기&quot;해야하는 경우가 종종 있습니다. 황혼은 이것을 꼬집음으로 만듭니다. 다양한 메소드를 사용하면 페이지에 요소가 표시 될 때까지 기다리거나 지정된 JavaScript 표현식이 &lt;code&gt;true&lt;/code&gt; 로 평가 될 때까지 기다릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45e677ccec4561abdeec928c2288738d1f583e95" translate="yes" xml:space="preserve">
          <source>When testing call to the global &lt;code&gt;cache&lt;/code&gt; function, you may use the &lt;code&gt;Cache::shouldReceive&lt;/code&gt; method just as if you were &lt;a href=&quot;mocking#mocking-facades&quot;&gt;testing a facade&lt;/a&gt;.</source>
          <target state="translated">글로벌 &lt;code&gt;cache&lt;/code&gt; 함수에 대한 호출을 테스트 할 때 &lt;a href=&quot;mocking#mocking-facades&quot;&gt;, 정면&lt;/a&gt; 을 테스트하는 것처럼 &lt;code&gt;Cache::shouldReceive&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a879fb5da9e0f8123c074c9f2797e2b8d5418858" translate="yes" xml:space="preserve">
          <source>When testing, it can be helpful to assert that certain events were dispatched without actually triggering their listeners. Laravel's &lt;a href=&quot;mocking#event-fake&quot;&gt;built-in testing helpers&lt;/a&gt; makes it a cinch.</source>
          <target state="translated">테스트 할 때 실제로 리스너를 트리거하지 않고 특정 이벤트가 전달되었다고 주장하는 것이 도움이 될 수 있습니다. 라 라벨의 &lt;a href=&quot;mocking#event-fake&quot;&gt;내장 된 테스트 헬퍼&lt;/a&gt; 는이를 도와줍니다.</target>
        </trans-unit>
        <trans-unit id="ad592c5fb0da8b655064dc1f9a4b6466c974b717" translate="yes" xml:space="preserve">
          <source>When testing, remember that that Cashier itself already has a great test suite, so you should only focus on testing the subscription and payment flow of your own application and not every underlying Cashier behavior.</source>
          <target state="translated">테스트 할 때 Cashier 자체에는 이미 훌륭한 테스트 제품군이 있으므로 모든 기본 Cashier 동작이 아닌 자체 애플리케이션의 구독 및 결제 흐름 테스트에만 집중해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f51875db37eb34fb69b4ffd328d97078e4182fd" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories.</source>
          <target state="translated">테스트 할 때 테스트를 실행하기 전에 데이터베이스에 몇 가지 레코드를 삽입해야 할 수 있습니다. 이 테스트 데이터를 생성 할 때 각 열의 값을 수동으로 지정하는 대신 Laravel을 사용하면 모델 팩토리를 사용하여 각 Eloquent &lt;a href=&quot;eloquent&quot;&gt;모델에&lt;/a&gt; 대한 기본 속성 세트를 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c0334a3d63f52a743121f1e734015e741d4e1e6" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories. To get started, take a look at the &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; file in your application. Out of the box, this file contains one factory definition:</source>
          <target state="translated">테스트 할 때 테스트를 실행하기 전에 데이터베이스에 몇 개의 레코드를 삽입해야 할 수도 있습니다. 이 테스트 데이터를 생성 할 때 각 열의 값을 수동으로 지정하는 대신 Laravel에서는 모델 팩토리를 사용하여 각 Eloquent &lt;a href=&quot;eloquent&quot;&gt;모델에&lt;/a&gt; 대한 기본 속성 세트를 정의 할 수 있습니다 . 시작하려면 응용 프로그램에서 &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; 파일을 살펴보십시오. 기본적으로이 파일에는 하나의 팩토리 정의가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="18605dfbf414d2ce71ab0ba28ee9ec60393ae157" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">테스트 할 때 때때로 &lt;code&gt;now&lt;/code&gt; 또는 &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; 와 같은 도우미가 반환 한 시간을 수정해야 할 수 있습니다 . 이제 Laravel의 기본 기능 테스트 클래스에는 현재 시간을 조작 할 수있는 도우미가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ff9f4d22bc3a97a80d04c0e9e83159b3e4b7fb7" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Thankfully, Laravel's base feature test class includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">테스트 할 때 때때로 &lt;code&gt;now&lt;/code&gt; 또는 &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; 와 같은 도우미가 반환 한 시간을 수정해야 할 수 있습니다 . 고맙게도 Laravel의 기본 기능 테스트 클래스에는 현재 시간을 조작 할 수있는 도우미가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="970d26f19b3db6121d4d650d9fa03c5f92a78c3f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;auth&lt;/code&gt; middleware detects an unauthorized user, it will redirect the user to the &lt;code&gt;login&lt;/code&gt;&lt;a href=&quot;routing#named-routes&quot;&gt;named route&lt;/a&gt;. You may modify this behavior by updating the &lt;code&gt;redirectTo&lt;/code&gt; function in your &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; file:</source>
          <target state="translated">때 &lt;code&gt;auth&lt;/code&gt; 미들웨어가 권한이없는 사용자를 감지, 그것은로 사용자 리디렉션 &lt;code&gt;login&lt;/code&gt; &lt;a href=&quot;routing#named-routes&quot;&gt;라는 이름의 경로를&lt;/a&gt; . &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; 파일 에서 &lt;code&gt;redirectTo&lt;/code&gt; 함수를 업데이트하여이 동작을 수정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6927e9f4a719ab090764b6563414ed96325c3f4d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cache&lt;/code&gt; function is called without any arguments, it returns an instance of the &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; implementation, allowing you to call other caching methods:</source>
          <target state="translated">하면 &lt;code&gt;cache&lt;/code&gt; 기능이 인수없이 호출, 그것의 인스턴스를 반환 &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; 다른 캐싱 메소드를 호출 할 수 있도록 구현 :</target>
        </trans-unit>
        <trans-unit id="f97e5983ec21aef682e4dee19437164ddbb5135f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method is invoked, the user's other sessions will be invalidated entirely, meaning they will be &quot;logged out&quot; of all guards they were previously authenticated by.</source>
          <target state="translated">때 &lt;code&gt;logoutOtherDevices&lt;/code&gt; 의 메소드가 호출, 사용자의 다른 세션들이있을 것입니다 의미를 완전히 무효화 될 것이다 그들이 이전에 인증 된 모든 경비의 &quot;로그 아웃&quot;.</target>
        </trans-unit>
        <trans-unit id="8a4506bd3f2bcaabec92b890a813cc98d2844cda" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;preserveKeys&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, collection keys will be preserved:</source>
          <target state="translated">때 &lt;code&gt;preserveKeys&lt;/code&gt; 의 속성이 설정되어 &lt;code&gt;true&lt;/code&gt; , 수집 키는 보존 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="4a150d50b68b5dd86a664d159484fd6e0ae8bbc9" translate="yes" xml:space="preserve">
          <source>When the Redis broadcaster publishes an event, it will be published on the event's specified channel names and the payload will be a JSON encoded string containing the event name, a &lt;code&gt;data&lt;/code&gt; payload, and the user that generated the event's socket ID (if applicable).</source>
          <target state="translated">Redis 브로드 캐스터가 이벤트를 게시하면 이벤트가 지정된 채널 이름으로 게시되고 페이로드는 이벤트 이름, &lt;code&gt;data&lt;/code&gt; 페이로드 및 이벤트의 소켓 ID를 생성 한 사용자 (해당되는 경우)를 포함하는 JSON 인코딩 문자열 이됩니다.</target>
        </trans-unit>
        <trans-unit id="686e4a6bf4809ba17038302a4daa525c2d2af0a2" translate="yes" xml:space="preserve">
          <source>When the application should next be available.</source>
          <target state="translated">다음에 응용 프로그램을 사용할 수 있어야 할 때.</target>
        </trans-unit>
        <trans-unit id="344323d682cb8cc0c9f899bf1982545dc353be11" translate="yes" xml:space="preserve">
          <source>When the application was put in maintenance mode.</source>
          <target state="translated">응용 프로그램이 유지 보수 모드에있을 때.</target>
        </trans-unit>
        <trans-unit id="488b9060c48efe2f9f3131028816e44f046dc38c" translate="yes" xml:space="preserve">
          <source>When the event listener is resolved, the service container will read the type-hints on the constructor of the class, and inject the appropriate value. To learn more about registering things in the service container, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">이벤트 리스너가 해결되면 서비스 컨테이너는 클래스 생성자에서 유형 힌트를 읽고 적절한 값을 삽입합니다. 서비스 컨테이너에 등록하는 방법에 대한 자세한 내용은 &lt;a href=&quot;container&quot;&gt;설명서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c23a45d5c8794af9b6ffe6e2cc871f1486574413" translate="yes" xml:space="preserve">
          <source>When the mobile device uses the token to make an API request to your application, it should pass the token in the &lt;code&gt;Authorization&lt;/code&gt; header as a &lt;code&gt;Bearer&lt;/code&gt; token.</source>
          <target state="translated">모바일 장치가 토큰을 사용하여 애플리케이션에 API 요청을 할 때 &lt;code&gt;Authorization&lt;/code&gt; 헤더 의 토큰을 &lt;code&gt;Bearer&lt;/code&gt; 토큰 으로 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5f8b6e745ba2d80daa8f5ba25b868f7786122b11" translate="yes" xml:space="preserve">
          <source>When the real-time facade is used, the publisher implementation will be resolved out of the service container using the portion of the interface or class name that appears after the &lt;code&gt;Facades&lt;/code&gt; prefix. When testing, we can use Laravel's built-in facade testing helpers to mock this method call:</source>
          <target state="translated">실시간 파사드를 사용하는 경우 &lt;code&gt;Facades&lt;/code&gt; 접두사 뒤에 나타나는 인터페이스 또는 클래스 이름 부분을 사용하여 게시자 컨테이너 구현이 서비스 컨테이너에서 해결됩니다 . 테스트 할 때 Laravel의 내장 된 파사드 테스트 도우미를 사용하여이 메소드 호출을 조롱 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f14f8f84d1785d45a0514e55bfe9ed7ad825bb64" translate="yes" xml:space="preserve">
          <source>When this configuration option is &lt;code&gt;true&lt;/code&gt;, Scout will not remove soft deleted models from the search index. Instead, it will set a hidden &lt;code&gt;__soft_deleted&lt;/code&gt; attribute on the indexed record. Then, you may use the &lt;code&gt;withTrashed&lt;/code&gt; or &lt;code&gt;onlyTrashed&lt;/code&gt; methods to retrieve the soft deleted records when searching:</source>
          <target state="translated">이 구성 옵션이 &lt;code&gt;true&lt;/code&gt; 이면 스카우트는 검색 색인에서 소프트 삭제 된 모델을 제거하지 않습니다. 대신 인덱스 된 레코드에 숨겨진 &lt;code&gt;__soft_deleted&lt;/code&gt; 속성을 설정합니다 . 그런 다음 &lt;code&gt;withTrashed&lt;/code&gt; 또는 &lt;code&gt;onlyTrashed&lt;/code&gt; 메소드를 사용하여 검색시 일시 삭제 된 레코드를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5440ce33fe8ac340b1479e54e8644fb75af5dc1c" translate="yes" xml:space="preserve">
          <source>When tokens have been revoked or expired, you might want to purge them from the database. Passport ships with a command that can do this for you:</source>
          <target state="translated">토큰이 해지되거나 만료 된 경우 데이터베이스에서 토큰을 제거 할 수 있습니다. Passport는이를 수행 할 수있는 명령과 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8b773bed645d2b4ac2b4f65c1235d68883d46172" translate="yes" xml:space="preserve">
          <source>When truncating a PostgreSQL database, the &lt;code&gt;CASCADE&lt;/code&gt; behavior will be applied. This means that all foreign key related records in other tables will be deleted as well.</source>
          <target state="translated">PostgreSQL 데이터베이스를 &lt;code&gt;CASCADE&lt;/code&gt; 때 CASCADE 동작이 적용됩니다. 즉, 다른 테이블의 모든 외래 키 관련 레코드도 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="1b041f976ae9e44b805b8454282f50cacb752aaa" translate="yes" xml:space="preserve">
          <source>When updating a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;associate&lt;/code&gt; method. This method will set the foreign key on the child model:</source>
          <target state="translated">업데이트 할 때 &lt;code&gt;belongsTo&lt;/code&gt; 를의 관계를, 당신은 사용할 수 있습니다 &lt;code&gt;associate&lt;/code&gt; 방법. 이 방법은 자식 모델에 외래 키를 설정합니다 :</target>
        </trans-unit>
        <trans-unit id="1913d09c3c12a86264959aca973242f378ad9afe" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is only supported on MySQL 5.7+:</source>
          <target state="translated">JSON 열을 업데이트 할 때 &lt;code&gt;-&amp;gt;&lt;/code&gt; 구문을 사용하여 JSON 객체의 적절한 키에 액세스 해야 합니다. 이 작업은 MySQL 5.7 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="34bce56b04bb877046b507a8ad38bedd9c7a7f7c" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is supported on MySQL 5.7+ and PostgreSQL 9.5+:</source>
          <target state="translated">JSON 열을 업데이트 할 때 &lt;code&gt;-&amp;gt;&lt;/code&gt; 구문을 사용하여 JSON 개체의 적절한 키에 액세스 해야 합니다. 이 작업은 MySQL 5.7 이상 및 PostgreSQL 9.5 이상에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c14fa222a11fc35bdbdf128483fafed140d93574" translate="yes" xml:space="preserve">
          <source>When updating or deleting records inside the chunk callback, any changes to the primary key or foreign keys could affect the chunk query. This could potentially result in records not being included in the chunked results.</source>
          <target state="translated">청크 콜백 내에서 레코드를 업데이트하거나 삭제할 때 기본 키 또는 외래 키를 변경하면 청크 쿼리에 영향을 줄 수 있습니다. 이로 인해 청크 결과에 레코드가 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6eb9fa3c083d8054cf4168e7dfe04e3975ecd73" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Horizon, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Horizon의 새로운 주 버전으로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="5cd203c85243093773901b9d0398466a505678e4" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Passport, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Passport의 새로운 주 버전으로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="2e2e39cc595156553d060b37d7df1789ba4f28ac" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Socialite, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Socialite의 새로운 주요 버전으로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="5562574548224d99cf412a46ff14c36772cfa9b5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Telescope, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">새로운 주요 버전의 Telescope로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="96f6e1736f192ffbf16f8303ba1366ac3e23d462" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">새 버전의 Cashier로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="57e16f9c00c94249d576fe8cdfc7e2493ce927d5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">새 버전의 Cashier로 업그레이드 할 때 업그레이드 &lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;가이드&lt;/a&gt; 를주의 깊게 검토 하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="1aceb1d4fa7b4a7b46fe4e5edd04fc97b5c88321" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; or &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;, pretty URLs will be automatically configured.</source>
          <target state="translated">&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; 또는 &lt;a href=&quot;valet&quot;&gt;Valet를&lt;/a&gt; 사용하면 예쁜 URL이 자동으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="24047ad51fead7786269f4b53b38af1fb1ab633d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:clear&lt;/code&gt; command to clear jobs from the queue instead of the &lt;code&gt;queue:clear&lt;/code&gt; command.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;horizon&quot;&gt;지평선을&lt;/a&gt; , 당신은 사용해야 &lt;code&gt;horizon:clear&lt;/code&gt; 큐 대신에서 명확한 작업에 명령을 &lt;code&gt;queue:clear&lt;/code&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="fdb363deb2068fc4b8c818dc07b73e035bc6f1eb" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:forget&lt;/code&gt; command to delete a failed job instead of the &lt;code&gt;queue:forget&lt;/code&gt; command.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;horizon&quot;&gt;지평선을&lt;/a&gt; , 당신은 사용해야 &lt;code&gt;horizon:forget&lt;/code&gt; 의 대신 실패한 작업을 삭제하는 명령을 &lt;code&gt;queue:forget&lt;/code&gt; 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ecd61bddd3a1dc42d585f8616c3054fe14e1bcdc" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;, Laravel dispatches &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the email verification process. If you are manually handling email verification for your application, you may wish to manually dispatch these events after verification is completed. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream을&lt;/a&gt; 사용할 때 Laravel 은 이메일 확인 프로세스 중에 &lt;a href=&quot;events&quot;&gt;이벤트를&lt;/a&gt; 전달 합니다 . 애플리케이션에 대한 이메일 확인을 수동으로 처리하는 경우 확인이 완료된 후 이러한 이벤트를 수동으로 전달할 수 있습니다. &lt;code&gt;EventServiceProvider&lt;/code&gt; 에서 이러한 이벤트에 리스너를 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6de0de645ff2c56e811a930e72310aeb6eeeb2a2" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;https://pusher.com&quot;&gt;푸셔를&lt;/a&gt; , 당신은 당신의 '앱 설정 &quot;섹션에서&quot;클라이언트 이벤트 &quot;옵션을 활성화해야합니다 &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;응용 프로그램 대시 보드를&lt;/a&gt; 클라이언트 이벤트를 전송하기 위해.</target>
        </trans-unit>
        <trans-unit id="ea7fd4c2f1b2bbf591f24dba35a9dcb49a0babfd" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">&lt;a href=&quot;https://pusher.com/channels&quot;&gt;푸셔 채널을&lt;/a&gt; 사용할 때 클라이언트 이벤트 를 보내 려면 &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;애플리케이션 대시 보드&lt;/a&gt; 의 &quot;앱 설정&quot;섹션에서 &quot;클라이언트 이벤트&quot;옵션을 활성화해야 합니다.</target>
        </trans-unit>
        <trans-unit id="f68494c4d28c57e1e6fc1997fc79e5a3abd9315f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Castable&lt;/code&gt; classes, you may still provide arguments in the &lt;code&gt;$casts&lt;/code&gt; definition. The arguments will be passed directly to the caster class:</source>
          <target state="translated">&lt;code&gt;Castable&lt;/code&gt; 클래스를 사용할 때 &lt;code&gt;$casts&lt;/code&gt; 정의에 인수를 계속 제공 할 수 있습니다 . 인수는 캐스터 클래스에 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3e96dca2c345a790abda7560a20e54b18efeea10" translate="yes" xml:space="preserve">
          <source>When using Channels and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">Channels 및 &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo를&lt;/a&gt; 사용 하는 경우 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 파일 에서 Echo 인스턴스를 인스턴스화 할 때 원하는 브로드 캐스터로 &lt;code&gt;pusher&lt;/code&gt; 를 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="61cb3e27532ba695e24bd6bee50a914c831f2921" translate="yes" xml:space="preserve">
          <source>When using Homestead in a team setting, you may want to tweak Homestead to better fit your personal development style. You may create a &lt;code&gt;user-customizations.sh&lt;/code&gt; file in the root of your Homestead directory (The same directory containing your &lt;code&gt;Homestead.yaml&lt;/code&gt;). Within this file, you may make any customization you would like; however, the &lt;code&gt;user-customizations.sh&lt;/code&gt; should not be version controlled.</source>
          <target state="translated">팀 환경에서 홈스테드를 사용할 때 개인 개발 스타일에 더 잘 맞도록 홈스테드를 조정할 수 있습니다. Homestead 디렉토리의 루트에 &lt;code&gt;user-customizations.sh&lt;/code&gt; 파일을 생성 할 수 있습니다 ( &lt;code&gt;Homestead.yaml&lt;/code&gt; 을 포함하는 동일한 디렉토리 ). 이 파일 내에서 원하는대로 사용자 정의 할 수 있습니다. 그러나 &lt;code&gt;user-customizations.sh&lt;/code&gt; 는 버전을 제어하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="cdd7397bf10a53b326194aa43c868e38ce95696c" translate="yes" xml:space="preserve">
          <source>When using Laravel Jetstream, the Jetstream installation process will change the value of the &lt;code&gt;HOME&lt;/code&gt; constant to &lt;code&gt;/dashboard&lt;/code&gt;.</source>
          <target state="translated">Laravel Jetstream을 사용할 때 Jetstream 설치 프로세스는 &lt;code&gt;HOME&lt;/code&gt; 상수 값 을 &lt;code&gt;/dashboard&lt;/code&gt; 로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="45dee84ffcfb56127e6e7b5e741427cf328064b0" translate="yes" xml:space="preserve">
          <source>When using NFS on Windows, you should consider installing the &lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">Windows에서 NFS를 사용하는 경우 &lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt; 플러그인 설치를 고려해야합니다 . 이 플러그인은 Homestead 상자 내의 파일 및 디렉토리에 대한 올바른 사용자 / 그룹 권한을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="6522a2d06c3352beb6a40bc917412e81cdcfced1" translate="yes" xml:space="preserve">
          <source>When using NFS, you should consider installing the &lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">NFS를 사용하는 경우 &lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt; 플러그인 설치를 고려해야합니다 . 이 플러그인은 홈스테드 박스 내의 파일 및 디렉토리에 대한 올바른 사용자 / 그룹 권한을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="1484c73f3c1d4c1a3104cb05fbbec4cf0011594f" translate="yes" xml:space="preserve">
          <source>When using PostgreSQL the &lt;code&gt;insertGetId&lt;/code&gt; method expects the auto-incrementing column to be named &lt;code&gt;id&lt;/code&gt;. If you would like to retrieve the ID from a different &quot;sequence&quot;, you may pass the column name as the second parameter to the &lt;code&gt;insertGetId&lt;/code&gt; method.</source>
          <target state="translated">PostgreSQL을 사용할 때 &lt;code&gt;insertGetId&lt;/code&gt; 메소드는 자동 증가 열의 이름이 &lt;code&gt;id&lt;/code&gt; 로 예상 됩니다. 다른 &quot;시퀀스&quot;에서 ID를 검색하려는 경우 열 이름을 두 번째 매개 변수로 &lt;code&gt;insertGetId&lt;/code&gt; 메소드에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4dd74beac11303272bc7f7e8bba0864ea85df693" translate="yes" xml:space="preserve">
          <source>When using Pusher and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">Pusher 및 &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo를&lt;/a&gt; 사용 하는 경우 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; 파일 에서 Echo 인스턴스를 인스턴스화 할 때 &lt;code&gt;pusher&lt;/code&gt; 를 원하는 브로드 캐스터로 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c9b05bd9b613ec493e02e30023e6d99dd88d2683" translate="yes" xml:space="preserve">
          <source>When using Stripe, the &lt;code&gt;charge&lt;/code&gt; method accepts the amount you would like to charge in the &lt;strong&gt;lowest denominator of the currency used by your application&lt;/strong&gt;. However, when using Braintree, you should pass the full dollar amount to the &lt;code&gt;charge&lt;/code&gt; method:</source>
          <target state="translated">Stripe을 사용할 때 &lt;code&gt;charge&lt;/code&gt; 방법은 &lt;strong&gt;애플리케이션에서 사용하는 통화&lt;/strong&gt; 의 &lt;strong&gt;최저 분모&lt;/strong&gt; 로 청구하려는 금액을 수락합니다 . 그러나 Braintree를 사용하는 경우 &lt;code&gt;charge&lt;/code&gt; 방법에 전체 금액을 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3b8709feab1bd96a016534a70feb2b8815b1296a" translate="yes" xml:space="preserve">
          <source>When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. In this case, it will be assumed that the &lt;code&gt;User&lt;/code&gt; model has a relationship named &lt;code&gt;posts&lt;/code&gt; (the plural of the route parameter name) which can be used to retrieve the &lt;code&gt;Post&lt;/code&gt; model.</source>
          <target state="translated">커스텀 키 암시 적 바인딩을 중첩 된 경로 매개 변수로 사용할 때, Laravel은 부모의 관계 이름을 추측하는 규칙을 사용하여 부모별로 중첩 된 모델을 검색하도록 쿼리 범위를 자동으로 지정합니다. 이 경우, &lt;code&gt;User&lt;/code&gt; 모델은 &lt;code&gt;Post&lt;/code&gt; 모델 을 검색하는 데 사용할 수있는 &lt;code&gt;posts&lt;/code&gt; (라우트 매개 변수 이름의 복수) 라는 관계를 가지고 있다고 가정 합니다 .</target>
        </trans-unit>
        <trans-unit id="2a2f1124ea2f284bd890f6886a27ff0c96b5bade" translate="yes" xml:space="preserve">
          <source>When using any tool in the &quot;real world&quot;, you feel more confident if you understand how that tool works. Application development is no different. When you understand how your development tools function, you feel more comfortable and confident using them.</source>
          <target state="translated">&quot;실제 세계&quot;에서 도구를 사용할 때 해당 도구의 작동 방식을 이해하면 자신감이 생깁니다. 응용 프로그램 개발도 다르지 않습니다. 개발 도구의 기능을 이해하면보다 편안하고 자신감있게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88d048fec3b9053ff80ecb7fe533eab762daa3a3" translate="yes" xml:space="preserve">
          <source>When using chained &lt;code&gt;when&lt;/code&gt; methods, the scheduled command will only execute if all &lt;code&gt;when&lt;/code&gt; conditions return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">체인 된 &lt;code&gt;when&lt;/code&gt; 메소드를 사용 하는 경우, 스케줄 된 명령은 모든 &lt;code&gt;when&lt;/code&gt; 조건이 &lt;code&gt;true&lt;/code&gt; 를 리턴 하는 경우에만 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="8e81bf67420b6c95c99b248363594ecca214fc72" translate="yes" xml:space="preserve">
          <source>When using dynamic properties, Laravel will first look for the parameter's value in the request payload. If it is not present, Laravel will search for the field in the route parameters.</source>
          <target state="translated">동적 속성을 사용할 때 Laravel은 먼저 요청 페이로드에서 매개 변수 값을 찾습니다. 존재하지 않으면 Laravel은 경로 매개 변수에서 필드를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="3aac47c28302ef25207a2f8c26a0a14076896fb9" translate="yes" xml:space="preserve">
          <source>When using loops you may also end the loop or skip the current iteration:</source>
          <target state="translated">루프를 사용할 때 루프를 종료하거나 현재 반복을 건너 뛸 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8996ce7cf64005261674f42191374cf740335998" translate="yes" xml:space="preserve">
          <source>When using magic methods to create factory relationships, you may pass an array of attributes to override on the related models:</source>
          <target state="translated">매직 메서드를 사용하여 팩토리 관계를 생성 할 때 관련 모델에서 재정의 할 속성 배열을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4c0b7d7245475edf68836aeeb8ec57c828c16ba" translate="yes" xml:space="preserve">
          <source>When using multiple connections, you may access each connection via the &lt;code&gt;connection&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. The &lt;code&gt;name&lt;/code&gt; passed to the &lt;code&gt;connection&lt;/code&gt; method should correspond to one of the connections listed in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">여러 연결을 사용하는 경우 &lt;code&gt;DB&lt;/code&gt; 파사드 의 &lt;code&gt;connection&lt;/code&gt; 방법을 통해 각 연결에 액세스 할 수 있습니다 . &lt;code&gt;connection&lt;/code&gt; 방법에 전달 된 &lt;code&gt;name&lt;/code&gt; 은 &lt;code&gt;config/database.php&lt;/code&gt; 구성 파일에 나열된 연결 중 하나와 일치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="4fce4aab719e44f7672a30acf3d3e6e45be4face" translate="yes" xml:space="preserve">
          <source>When using rate limiting, the number of attempts your job will need to run successfully can be hard to determine. Therefore, it is useful to combine rate limiting with &lt;a href=&quot;#time-based-attempts&quot;&gt;time based attempts&lt;/a&gt;.</source>
          <target state="translated">속도 제한을 사용하면 작업을 성공적으로 실행해야하는 횟수를 결정하기가 어려울 수 있습니다. 따라서 속도 제한을 &lt;a href=&quot;#time-based-attempts&quot;&gt;시간 기반 시도&lt;/a&gt; 와 결합하는 것이 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="005905e899a962b119ad1285316c4dc3346d85a2" translate="yes" xml:space="preserve">
          <source>When using route parameters in redirect routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;destination&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;.</source>
          <target state="translated">경로 재 지정 경로에서 경로 매개 변수를 사용할 때 다음 매개 변수는 라 라벨에 의해 예약되며 사용할 수 없습니다 : &lt;code&gt;destination&lt;/code&gt; 및 &lt;code&gt;status&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32cede9dc479ae7e5cda81cd3178a4614c5b228b" translate="yes" xml:space="preserve">
          <source>When using route parameters in view routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">뷰 라우트에서 라우트 매개 변수를 사용할 때, 다음 매개 변수는 라 라벨에 의해 예약되며 사용할 수 없습니다 : &lt;code&gt;view&lt;/code&gt; , &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;status&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3969e297196b80f1cb1c114ea0d139fccc6eb70c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;AuthenticateSession&lt;/code&gt; middleware in combination with a custom route name for the &lt;code&gt;login&lt;/code&gt; route, you must override the &lt;code&gt;unauthenticated&lt;/code&gt; method on your application's exception handler to properly redirect users to your login page.</source>
          <target state="translated">&lt;code&gt;login&lt;/code&gt; 경로에 대한 사용자 지정 경로 이름과 함께 &lt;code&gt;AuthenticateSession&lt;/code&gt; 미들웨어를 사용하는 경우 사용자를 로그인 페이지로 올바르게 리디렉션하려면 응용 프로그램의 예외 처리기 에서 &lt;code&gt;unauthenticated&lt;/code&gt; 메서드를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="224c22a60896a71e6b2aa67bf0bdccbfaacc5675" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;auto&lt;/code&gt; strategy, you may define the &lt;code&gt;minProcesses&lt;/code&gt; and &lt;code&gt;maxProcesses&lt;/code&gt; configuration options to control the minimum and maximum number of processes Horizon should scale up and down to:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;auto&lt;/code&gt; 전략을, 당신은 정의 할 수 &lt;code&gt;minProcesses&lt;/code&gt; 및 &lt;code&gt;maxProcesses&lt;/code&gt; 수평선 위로 및 아래로 확장되는 최소 및 최대 프로세스 수를 제어하는 구성 옵션 :</target>
        </trans-unit>
        <trans-unit id="060017671d28b92f1de8c33e481a36133f145e7d" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache items. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 캐시 드라이버를 사용할 때 캐시 항목을 포함하도록 테이블을 설정해야합니다. 아래 표에 대한 &lt;code&gt;Schema&lt;/code&gt; 선언 의 예가 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="43bd8864c82e9ccad39519877b117f943f9f9c7c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache locks. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 캐시 드라이버를 사용할 때 캐시 잠금을 포함하도록 테이블을 설정해야합니다. 아래 표에 대한 예제 &lt;code&gt;Schema&lt;/code&gt; 선언을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c1369a5d7b887edd8c0089a9246dd4e1584078b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; session driver, you will need to create a table to contain the session items. Below is an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;database&lt;/code&gt; 세션 드라이버를, 당신은 세션 항목을 포함하는 테이블을 만들어야합니다. 아래는 테이블에 대한 &lt;code&gt;Schema&lt;/code&gt; 선언 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="db432e3db28bc364782a402cb132e6e05220834b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;datetime&lt;/code&gt; cast type, you may specify the date's format. This format will be used when the &lt;a href=&quot;eloquent-serialization&quot;&gt;model is serialized to an array or JSON&lt;/a&gt;:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;date&lt;/code&gt; 또는 &lt;code&gt;datetime&lt;/code&gt; 캐스트 유형을, 당신은 날짜의 형식을 지정할 수 있습니다. 이 형식은 &lt;a href=&quot;eloquent-serialization&quot;&gt;모델이 배열 또는 JSON으로 직렬화&lt;/a&gt; 될 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="958c5b1380f26ac69564b18768c71396326d34a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your &lt;code&gt;filesystems&lt;/code&gt; configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 드라이버를 사용할 때 모든 파일 작업은 &lt;code&gt;filesystems&lt;/code&gt; 구성 파일에 정의 된 &lt;code&gt;root&lt;/code&gt; 디렉토리에 상대적 입니다. 기본적으로이 값은 &lt;code&gt;storage/app&lt;/code&gt; 디렉토리로 설정됩니다 . 따라서 다음 방법은 &lt;code&gt;storage/app/file.txt&lt;/code&gt; 에 파일을 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="975207209fb503f35b85c7445edb8e37482b448e" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 드라이버를 사용할 때 모든 파일 작업은 구성 파일에 정의 된 &lt;code&gt;root&lt;/code&gt; 디렉토리와 관련됩니다. 기본적으로이 값은 &lt;code&gt;storage/app&lt;/code&gt; 디렉토리로 설정됩니다 . 따라서 다음 방법은 파일을 &lt;code&gt;storage/app/file.txt&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="f40a031cef6f7515a2c4e7f970d1e576db93d0fb" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all files that should be publicly accessible should be placed in the &lt;code&gt;storage/app/public&lt;/code&gt; directory. Furthermore, you should &lt;a href=&quot;#the-public-disk&quot;&gt;create a symbolic link&lt;/a&gt; at &lt;code&gt;public/storage&lt;/code&gt; which points to the &lt;code&gt;storage/app/public&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 드라이버를 사용할 때 공개적으로 액세스 할 수 있어야하는 모든 파일은 &lt;code&gt;storage/app/public&lt;/code&gt; 디렉토리 에 있어야합니다 . 또한 &lt;code&gt;public/storage&lt;/code&gt; 에 &lt;code&gt;storage/app/public&lt;/code&gt; 디렉토리 를 가리키는 &lt;a href=&quot;#the-public-disk&quot;&gt;심볼릭 링크&lt;/a&gt; 를 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="60121d5a9fed079847dabfa1e29e2954d3f33bad" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, the return value of &lt;code&gt;url&lt;/code&gt; is not URL encoded. For this reason, we recommend always storing your files using names that will create valid URLs.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 드라이버를 사용할 때 &lt;code&gt;url&lt;/code&gt; 의 반환 값은 URL 인코딩이 아닙니다. 따라서 항상 유효한 URL을 생성하는 이름을 사용하여 파일을 저장하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5d5149325692771bf45eac67e1516dc3046e2ce5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;handler_with&lt;/code&gt; configuration option:</source>
          <target state="translated">&lt;code&gt;monolog&lt;/code&gt; 드라이버를 사용할 때 &lt;code&gt;handler&lt;/code&gt; 구성 옵션을 사용하여 인스턴스화 할 핸들러를 지정합니다. 선택적으로 &lt;code&gt;handler_with&lt;/code&gt; 구성 옵션을 사용하여 핸들러에 필요한 생성자 매개 변수를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="21b6853c585da3785b96b5648001bc25ba342eb1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;with&lt;/code&gt; configuration option:</source>
          <target state="translated">&lt;code&gt;monolog&lt;/code&gt; 드라이버를 사용할 때 &lt;code&gt;handler&lt;/code&gt; 구성 옵션을 사용하여 인스턴스화 할 핸들러를 지정합니다. 선택적으로 핸들러에 필요한 생성자 매개 변수는 &lt;code&gt;with&lt;/code&gt; 구성 옵션을 사용하여 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5baeb3a4ec8d37aa04f4500b2a756a17f5b4d5b8" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the Monolog &lt;code&gt;LineFormatter&lt;/code&gt; will be used as the default formatter. However, you may customize the type of formatter passed to the handler using the &lt;code&gt;formatter&lt;/code&gt; and &lt;code&gt;formatter_with&lt;/code&gt; configuration options:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;monolog&lt;/code&gt; 드라이버의 독백 &lt;code&gt;LineFormatter&lt;/code&gt; 는 기본 포맷으로 사용됩니다. 그러나 &lt;code&gt;formatter&lt;/code&gt; 및 &lt;code&gt;formatter_with&lt;/code&gt; 구성 옵션을 사용하여 핸들러에 전달 된 포맷터 유형을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="088bca3fd2a3772ad5312bcbed3957b8f21e70f5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;with&lt;/code&gt; method, be careful not to pass any reserved keywords such as &lt;code&gt;state&lt;/code&gt; or &lt;code&gt;response_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 메소드를 사용할 때 &lt;code&gt;state&lt;/code&gt; 또는 &lt;code&gt;response_type&lt;/code&gt; 과 같은 예약 된 키워드를 전달하지 않도록주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="035bf286ac2fafb2cf3e7acbebec61e5f5df3614" translate="yes" xml:space="preserve">
          <source>When using the Algolia driver, you should configure your Algolia &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; credentials in your &lt;code&gt;config/scout.php&lt;/code&gt; configuration file. Once your credentials have been configured, you will also need to install the Algolia PHP SDK via the Composer package manager:</source>
          <target state="translated">Algolia 드라이버를 사용하는 경우 &lt;code&gt;config/scout.php&lt;/code&gt; 구성 파일 에서 Algolia &lt;code&gt;id&lt;/code&gt; 및 &lt;code&gt;secret&lt;/code&gt; 자격 증명을 구성해야합니다. 자격 증명이 구성되면 Composer 패키지 관리자를 통해 Algolia PHP SDK를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e151ae4c86e4a30e0b76b511e1aab919bbaff7b" translate="yes" xml:space="preserve">
          <source>When using the Redis queue, you may use the &lt;code&gt;block_for&lt;/code&gt; configuration option to specify how long the driver should wait for a job to become available before iterating through the worker loop and re-polling the Redis database.</source>
          <target state="translated">Redis 대기열 을 사용하는 경우 작업자 루프를 반복하고 Redis 데이터베이스를 다시 폴링하기 전에 드라이버가 작업을 사용할 수 있도록 대기하는 시간을 지정 하기 위해 &lt;code&gt;block_for&lt;/code&gt; 구성 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32578e7398163114d07960009102a9a691496c09" translate="yes" xml:space="preserve">
          <source>When using the password grant or client credentials grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; or &lt;code&gt;client_credentials&lt;/code&gt; grant:</source>
          <target state="translated">암호 부여 또는 클라이언트 자격 증명 부여를 사용할 때 애플리케이션에서 지원하는 모든 범위에 대해 토큰을 인증 할 수 있습니다. &lt;code&gt;*&lt;/code&gt; 범위 를 요청하여이를 수행 할 수 있습니다 . &lt;code&gt;*&lt;/code&gt; 범위 를 요청하면 토큰 인스턴스 의 &lt;code&gt;can&lt;/code&gt; 메서드는 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 이 범위는 &lt;code&gt;password&lt;/code&gt; 또는 &lt;code&gt;client_credentials&lt;/code&gt; 부여를 사용하여 발급 된 토큰에만 할당 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e042e11be5e4262a14b7850799d15c3fe08b23bf" translate="yes" xml:space="preserve">
          <source>When using the password grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; grant:</source>
          <target state="translated">비밀번호 부여를 사용하는 경우 애플리케이션에서 지원하는 모든 범위에 대한 토큰을 승인 할 수 있습니다. &lt;code&gt;*&lt;/code&gt; 범위 를 요청하여이를 수행 할 수 있습니다 . &lt;code&gt;*&lt;/code&gt; 범위 를 요청하면 토큰 인스턴스 의 &lt;code&gt;can&lt;/code&gt; 메소드는 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 이 범위는 &lt;code&gt;password&lt;/code&gt; 부여를 사용하여 발행 된 토큰에만 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4122dd8f1dd7a56b5b82fbafce61e0d633d93c0c" translate="yes" xml:space="preserve">
          <source>When using the prices API, Paddle only allows to apply coupons to one-time purchase products and not to subscription plans.</source>
          <target state="translated">가격 API를 사용할 때 Paddle은 일회성 구매 제품에만 쿠폰을 적용 할 수 있으며 구독 플랜에는 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c525bae0b6eb5b0556a3b3e66a413496ee3683a" translate="yes" xml:space="preserve">
          <source>When using the scheduler, you only need to add the following Cron entry to your server. If you do not know how to add Cron entries to your server, consider using a service such as &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; which can manage the Cron entries for you:</source>
          <target state="translated">스케줄러를 사용하는 경우 서버에 다음 Cron 항목 만 추가하면됩니다. 서버에 Cron 항목을 추가하는 방법을 모르는 경우 Cron 항목을 관리 할 수있는 &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; 와 같은 서비스를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4e3391abda9e2f429dffb416ac7ca38cde1fb97f" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column and any relevant foreign key columns in the list of columns you wish to retrieve.</source>
          <target state="translated">이 기능을 사용할 때는 항상 검색하려는 열 목록에 &lt;code&gt;id&lt;/code&gt; 열과 관련 외래 키 열을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="50ce1962e60dfe805da26e6644a89cff5823d7e4" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column in the list of columns you wish to retrieve.</source>
          <target state="translated">이 기능을 사용할 때는 항상 검색하려는 열 목록에 &lt;code&gt;id&lt;/code&gt; 열을 포함시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="9f6c827a9584805185a2ecb1010e308e855cdeeb" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, the default Laravel JavaScript scaffolding instructs Axios to always send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; and &lt;code&gt;X-Requested-With&lt;/code&gt; headers. However, you should be sure to include your CSRF token in a &lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTML meta tag&lt;/a&gt;:</source>
          <target state="translated">이 인증 방법을 사용할 때 기본 Laravel JavaScript 스캐 폴딩은 Axios가 항상 &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; 및 &lt;code&gt;X-Requested-With&lt;/code&gt; 헤더를 보내도록 지시 합니다. 그러나 CSRF 토큰을 &lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTML 메타 태그&lt;/a&gt; 에 포함시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="6d0f67e1965944881dc9d4536792d13ebcfbbda1" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, you will need to ensure a valid CSRF token header is included in your requests. The default Laravel JavaScript scaffolding includes an Axios instance, which will automatically use the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie value to send a &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header on same-origin requests.</source>
          <target state="translated">이 인증 방법을 사용할 때 유효한 CSRF 토큰 헤더가 요청에 포함되어 있는지 확인해야합니다. 기본 Laravel JavaScript 스캐 폴딩에는 Axios 인스턴스가 포함되어 있으며, 이는 암호화 된 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 쿠키 값을 자동으로 사용하여 동일 출처 요청에 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 헤더 를 전송 합니다.</target>
        </trans-unit>
        <trans-unit id="03710a21777c297cc8f9b1dd25cd98ee4a8a60f2" translate="yes" xml:space="preserve">
          <source>When using timestamps on pivot tables, the table is required to have both &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamp columns.</source>
          <target state="translated">피벗 테이블에서 타임 스탬프를 사용하는 경우 테이블에는 &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; 타임 스탬프 열 .</target>
        </trans-unit>
        <trans-unit id="1884f13aa2df9bfb73e4a9d59650f01cb94587dd" translate="yes" xml:space="preserve">
          <source>When working with a many-to-many relationship, the &lt;code&gt;save&lt;/code&gt; method accepts an array of additional intermediate table attributes as its second argument:</source>
          <target state="translated">다 대 다 관계로 작업 할 때 &lt;code&gt;save&lt;/code&gt; 메소드는 추가 중간 테이블 속성 배열을 두 번째 인수로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e8648315aa7bbb121adb19a0757243a88b48a69e" translate="yes" xml:space="preserve">
          <source>When working with arrays, the field under validation must not have any duplicate values.</source>
          <target state="translated">배열 작업시 유효성 검사중인 필드에 중복 값이 ​​없어야합니다.</target>
        </trans-unit>
        <trans-unit id="6799025f3bf5fb8864a4b2cd3e82c390e9886b68" translate="yes" xml:space="preserve">
          <source>When working with forms that contain array inputs, use &quot;dot&quot; notation to access the arrays:</source>
          <target state="translated">배열 입력이 포함 된 양식으로 작업 할 때 &quot;점&quot;표기법을 사용하여 배열에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="5a85f5a0dc2be400e445988ef760d66c17d0a778" translate="yes" xml:space="preserve">
          <source>When writing Blade templates, you may wish to display a portion of the page only if the user is authorized to perform a given action. For example, you may wish to show an update form for a blog post only if the user can actually update the post. In this situation, you may use the &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; family of directives:</source>
          <target state="translated">블레이드 템플릿을 작성할 때 사용자가 특정 작업을 수행 할 권한이있는 경우에만 페이지의 일부를 표시 할 수 있습니다. 예를 들어, 사용자가 실제로 게시물을 업데이트 할 수있는 경우에만 블로그 게시물에 대한 업데이트 양식을 표시 할 수 있습니다. 이 상황에서 &lt;code&gt;@can&lt;/code&gt; 및 &lt;code&gt;@cannot&lt;/code&gt; 지시문 패밀리를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0aa36c20cce0d0c6487d4249a4bc2ef3da13f812" translate="yes" xml:space="preserve">
          <source>When writing a Laravel application, it generally does not matter if you use contracts or facades since both provide essentially equal levels of testability. However, when writing packages, your package will not typically have access to all of Laravel's testing helpers. If you would like to be able to write your package tests as if they existed inside a typical Laravel application, you may use the &lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;Orchestral Testbench&lt;/a&gt; package.</source>
          <target state="translated">라 라벨 애플리케이션을 작성할 때, 계약 또는 파사드를 사용하는지 여부는 둘 다 본질적으로 동일한 수준의 테스트 가능성을 제공하므로 일반적으로 중요하지 않습니다. 그러나 패키지를 작성할 때 패키지는 일반적으로 모든 라 라벨의 테스트 도우미에 액세스 할 수 없습니다. 일반적인 라 라벨 애플리케이션 내에 존재하는 것처럼 패키지 테스트를 작성하려면 &lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;오케스트라 테스트 벤치&lt;/a&gt; 패키지를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="792e3add795d39f86830b180ab90b6a09b743fa3" translate="yes" xml:space="preserve">
          <source>When writing a command which expects a confirmation in the form of a &quot;yes&quot; or &quot;no&quot; answer, you may utilize the &lt;code&gt;expectsConfirmation&lt;/code&gt; method:</source>
          <target state="translated">&quot;예&quot;또는 &quot;아니오&quot;응답의 형식으로 확인을 기대하는 명령을 작성할 때 &lt;code&gt;expectsConfirmation&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4976d85ffddcbf3295e29d754443db351d9aefe0" translate="yes" xml:space="preserve">
          <source>When writing components for your own application, components are automatically discovered within the &lt;code&gt;app/View/Components&lt;/code&gt; directory and &lt;code&gt;resources/views/components&lt;/code&gt; directory.</source>
          <target state="translated">자신의 응용 프로그램에 대한 구성 요소를 작성할 때 구성 요소는 &lt;code&gt;app/View/Components&lt;/code&gt; 디렉터리 및 &lt;code&gt;resources/views/components&lt;/code&gt; 디렉터리 .</target>
        </trans-unit>
        <trans-unit id="3c13554cd7d9b753d166649e0c4ffb885bcbdeed" translate="yes" xml:space="preserve">
          <source>When writing console commands, it is common to gather input from the user through arguments or options. Laravel makes it very convenient to define the input you expect from the user using the &lt;code&gt;signature&lt;/code&gt; property on your commands. The &lt;code&gt;signature&lt;/code&gt; property allows you to define the name, arguments, and options for the command in a single, expressive, route-like syntax.</source>
          <target state="translated">콘솔 명령을 작성할 때 인수 또는 옵션을 통해 사용자로부터 입력을 수집하는 것이 일반적입니다. Laravel을 사용하면 명령 에서 &lt;code&gt;signature&lt;/code&gt; 속성을 사용하여 사용자가 기대하는 입력을 매우 편리하게 정의 할 수 있습니다 . &lt;code&gt;signature&lt;/code&gt; 속성은 구문 경로-처럼, 당신은 하나의 표현에 명령의 이름, 인수 및 옵션을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8e67771d3f128dd48744241bc0d69fab76ffe29" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;redirect&lt;/code&gt; helper with no parameters, an instance of &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; is returned, allowing you to call any method on the &lt;code&gt;Redirector&lt;/code&gt; instance. For example, to generate a &lt;code&gt;RedirectResponse&lt;/code&gt; to a named route, you may use the &lt;code&gt;route&lt;/code&gt; method:</source>
          <target state="translated">매개 변수없이 &lt;code&gt;redirect&lt;/code&gt; 도우미 를 호출하면 &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; 인스턴스 가 반환되어 &lt;code&gt;Redirector&lt;/code&gt; 인스턴스의 모든 메서드를 호출 할 수 있습니다 . 예를 들어, 지정된 경로에 대한 &lt;code&gt;RedirectResponse&lt;/code&gt; 를 생성 하려면 &lt;code&gt;route&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b37be7c7b323b032098f32d1e54adbd8d282290" translate="yes" xml:space="preserve">
          <source>When you execute this command, Laravel will write a &quot;schema&quot; file to your &lt;code&gt;database/schema&lt;/code&gt; directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump.</source>
          <target state="translated">이 명령을 실행하면 라 라벨은 &quot;스키마&quot;파일을 &lt;code&gt;database/schema&lt;/code&gt; 디렉토리에 . 이제 데이터베이스 마이그레이션을 시도하고 다른 마이그레이션이 실행되지 않은 경우 Laravel은 먼저 스키마 파일의 SQL을 실행합니다. 스키마 파일의 명령을 실행 한 후 Laravel은 스키마 덤프의 일부가 아닌 나머지 마이그레이션을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c787b4f49b323409347db8769be4f9b1ab2a8d6b" translate="yes" xml:space="preserve">
          <source>When you have multiple plans set on a subscription the &lt;code&gt;stripe_plan&lt;/code&gt; and &lt;code&gt;quantity&lt;/code&gt; attributes on the &lt;code&gt;Subscription&lt;/code&gt; model will be &lt;code&gt;null&lt;/code&gt;. To access the individual plans, you should use the &lt;code&gt;items&lt;/code&gt; relationship available on the &lt;code&gt;Subscription&lt;/code&gt; model.</source>
          <target state="translated">구독에 여러 계획이 설정되어있는 경우 &lt;code&gt;Subscription&lt;/code&gt; 모델 의 &lt;code&gt;stripe_plan&lt;/code&gt; 및 &lt;code&gt;quantity&lt;/code&gt; 속성 은 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 개별 계획에 액세스하려면 &lt;code&gt;items&lt;/code&gt; 사용해야합니다. &lt;code&gt;Subscription&lt;/code&gt; 모델 에서 사용할 수 관계를 .</target>
        </trans-unit>
        <trans-unit id="ed75b1e1ffe2c1b7a2f3ac6fa85f1ad5bef06fdb" translate="yes" xml:space="preserve">
          <source>When you initialize a Laravel Echo instance, a socket ID is assigned to the connection. If you are using &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; and &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;, the socket ID will automatically be attached to every outgoing request as a &lt;code&gt;X-Socket-ID&lt;/code&gt; header. Then, when you call the &lt;code&gt;toOthers&lt;/code&gt; method, Laravel will extract the socket ID from the header and instruct the broadcaster to not broadcast to any connections with that socket ID.</source>
          <target state="translated">Laravel Echo 인스턴스를 초기화하면 소켓 ID가 연결에 할당됩니다. 당신이 사용하는 경우 &lt;a href=&quot;https://vuejs.org&quot;&gt;뷰&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios의를&lt;/a&gt; , 소켓 ID는 자동으로 모든 나가는 요청에 첨부됩니다 &lt;code&gt;X-Socket-ID&lt;/code&gt; 헤더입니다. 그런 다음 &lt;code&gt;toOthers&lt;/code&gt; 메소드 를 호출하면 Laravel 은 헤더에서 소켓 ID를 추출하여 해당 소켓 ID와의 연결로 브로드 캐스트하지 않도록 브로드 캐스터에게 지시합니다.</target>
        </trans-unit>
        <trans-unit id="6d5131b8b32b3766211e7b4ed7c56dbf81acec99" translate="yes" xml:space="preserve">
          <source>When you register a custom exception reporting callback using the &lt;code&gt;reportable&lt;/code&gt; method, Laravel will still log the exception using the default logging configuration for the application. If you wish to stop the propagation of the exception to the default logging stack, you may use the &lt;code&gt;stop&lt;/code&gt; method when defining your reporting callback or return &lt;code&gt;false&lt;/code&gt; from the callback:</source>
          <target state="translated">&lt;code&gt;reportable&lt;/code&gt; 메서드를 사용하여 사용자 지정 예외보고 콜백을 등록 할 때 Laravel은 애플리케이션의 기본 로깅 구성을 사용하여 예외를 계속 기록합니다. 기본 로깅 스택으로의 예외 전파를 중지하려면 보고 콜백을 정의 할 때 &lt;code&gt;stop&lt;/code&gt; 메서드를 사용 하거나 콜백에서 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6eaf2c8fc8dcff2cb8a2a58bd5e1f2dddf66b75" translate="yes" xml:space="preserve">
          <source>When you retrieve an item from the session, you may also pass a default value as the second argument to the &lt;code&gt;get&lt;/code&gt; method. This default value will be returned if the specified key does not exist in the session. If you pass a &lt;code&gt;Closure&lt;/code&gt; as the default value to the &lt;code&gt;get&lt;/code&gt; method and the requested key does not exist, the &lt;code&gt;Closure&lt;/code&gt; will be executed and its result returned:</source>
          <target state="translated">세션에서 항목을 검색 할 때 &lt;code&gt;get&lt;/code&gt; 메소드 의 두 번째 인수로 기본값을 전달할 수도 있습니다 . 지정된 키가 세션에 존재하지 않으면이 기본값이 리턴됩니다. &lt;code&gt;get&lt;/code&gt; 메소드에 기본값으로 &lt;code&gt;Closure&lt;/code&gt; 를 전달했는데 요청 된 키가 존재하지 않으면 &lt;code&gt;Closure&lt;/code&gt; 가 실행되고 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0c4a95aaa0dd5bd045f4e5de5a25fb047935e714" translate="yes" xml:space="preserve">
          <source>When you start a new Laravel project, error and exception handling is already configured for you. The &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class is where all exceptions triggered by your application are logged and then rendered back to the user. We'll dive deeper into this class throughout this documentation.</source>
          <target state="translated">새 Laravel 프로젝트를 시작할 때 오류 및 예외 처리가 이미 구성되어 있습니다. &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; 응용 프로그램에 의해 트리거 모든 예외가 기록하고 다시 사용자에게 렌더링되는 경우 클래스입니다. 이 문서 전체에서이 수업에 대해 자세히 알아 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="8da04af1c2a8772ddf7eb3cae2e9ab1b145622d2" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;loadViewsFrom&lt;/code&gt; method, Laravel actually registers two locations for your views: the application's &lt;code&gt;resources/views/vendor&lt;/code&gt; directory and the directory you specify. So, using the &lt;code&gt;courier&lt;/code&gt; example, Laravel will first check if a custom version of the view has been provided by the developer in &lt;code&gt;resources/views/vendor/courier&lt;/code&gt;. Then, if the view has not been customized, Laravel will search the package view directory you specified in your call to &lt;code&gt;loadViewsFrom&lt;/code&gt;. This makes it easy for package users to customize / override your package's views.</source>
          <target state="translated">&lt;code&gt;loadViewsFrom&lt;/code&gt; 메소드 를 사용하는 경우 , Laravel은 실제로 뷰의 두 위치, 즉 애플리케이션의 &lt;code&gt;resources/views/vendor&lt;/code&gt; 디렉토리와 사용자가 지정한 디렉토리를 등록합니다. 따라서 &lt;code&gt;courier&lt;/code&gt; 예제를 사용하여 Laravel은 먼저 개발자가 &lt;code&gt;resources/views/vendor/courier&lt;/code&gt; 에서 뷰의 사용자 정의 버전을 제공했는지 확인합니다 . 그런 다음 뷰가 사용자 정의되지 않은 경우 Laravel은 &lt;code&gt;loadViewsFrom&lt;/code&gt; 호출에서 지정한 패키지 뷰 디렉토리를 검색합니다 . 이를 통해 패키지 사용자가 패키지보기를 쉽게 사용자 정의하거나 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cc13b4803a1ec87f6cae3d6d25e63ac6354875d" translate="yes" xml:space="preserve">
          <source>When you're ready to deploy your Laravel application to production, there are some important things you can do to make sure your application is running as efficiently as possible. In this document, we'll cover some great starting points for making sure your Laravel application is deployed properly.</source>
          <target state="translated">Laravel 응용 프로그램을 프로덕션 환경에 배포 할 준비가되면 응용 프로그램이 최대한 효율적으로 실행되도록하기 위해 수행 할 수있는 중요한 작업이 있습니다. 이 문서에서는 Laravel 응용 프로그램이 올바르게 배포되었는지 확인하기위한 몇 가지 훌륭한 시작점을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="47fbbfb19e44d5d9e3f714f99352c688a15ae7eb" translate="yes" xml:space="preserve">
          <source>When your application is in maintenance mode, a custom view will be displayed for all requests into your application. This makes it easy to &quot;disable&quot; your application while it is updating or when you are performing maintenance. A maintenance mode check is included in the default middleware stack for your application. If the application is in maintenance mode, a &lt;code&gt;MaintenanceModeException&lt;/code&gt; will be thrown with a status code of 503.</source>
          <target state="translated">애플리케이션이 유지 보수 모드 인 경우 애플리케이션에 대한 모든 요청에 ​​대해 사용자 정의보기가 표시됩니다. 따라서 응용 프로그램을 업데이트하거나 유지 관리 할 때 응용 프로그램을 쉽게 &quot;비활성화&quot;할 수 있습니다. 유지 관리 모드 검사는 응용 프로그램의 기본 미들웨어 스택에 포함되어 있습니다. 응용 프로그램이 유지 관리 모드 인 경우 상태 코드가 503 인 &lt;code&gt;MaintenanceModeException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2a95975a7ea0515482d09a4283e205f8bdf7fa04" translate="yes" xml:space="preserve">
          <source>When your component is rendered, you may display the contents of your component's public variables by echoing the variables by name:</source>
          <target state="translated">컴포넌트가 렌더링되면 이름으로 변수를 에코하여 컴포넌트의 공용 변수 내용을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8105c4e435a6b685fd63cb1690cf638601272d" translate="yes" xml:space="preserve">
          <source>When your test requires migrations, like the authentication example above, you should never use the &lt;code&gt;RefreshDatabase&lt;/code&gt; trait. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait leverages database transactions which will not be applicable across HTTP requests. Instead, use the &lt;code&gt;DatabaseMigrations&lt;/code&gt; trait:</source>
          <target state="translated">위의 인증 예제와 같이 테스트에 마이그레이션이 필요한 경우 &lt;code&gt;RefreshDatabase&lt;/code&gt; 특성을 사용해서는 안됩니다 . &lt;code&gt;RefreshDatabase&lt;/code&gt; HTTP 요청에 걸쳐 적용되지 않습니다 특징 레버리지 데이터베이스 트랜잭션. 대신 &lt;code&gt;DatabaseMigrations&lt;/code&gt; 특성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8927b41637f70b1b39424c0db6bb52ea5a4ee207" translate="yes" xml:space="preserve">
          <source>Where Clauses</source>
          <target state="translated">절</target>
        </trans-unit>
        <trans-unit id="45a28d7d2d0dd2cb9b7907b4877467fce02c6307" translate="yes" xml:space="preserve">
          <source>Where Exists Clauses</source>
          <target state="translated">존재하는 조항</target>
        </trans-unit>
        <trans-unit id="c6a57c97033ad3276ea8ba77176e146c7e9a261f" translate="yes" xml:space="preserve">
          <source>Where Is The Models Directory?</source>
          <target state="translated">모델 디렉토리는 어디에 있습니까?</target>
        </trans-unit>
        <trans-unit id="7d90aea7516067d74aa6f8aa3ea4345185144d10" translate="yes" xml:space="preserve">
          <source>Whether a middleware runs before or after a request depends on the middleware itself. For example, the following middleware would perform some task &lt;strong&gt;before&lt;/strong&gt; the request is handled by the application:</source>
          <target state="translated">미들웨어가 요청 전후에 실행되는지 여부는 미들웨어 자체에 따라 다릅니다. 예를 들어, 다음 미들웨어는 애플리케이션이 요청을 처리 &lt;strong&gt;하기 전에&lt;/strong&gt; 일부 태스크 &lt;strong&gt;를&lt;/strong&gt; 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="9f7a25630eb4179adc804fc453752c5d62da540d" translate="yes" xml:space="preserve">
          <source>Whether the content is short.</source>
          <target state="translated">내용이 짧은 지 여부</target>
        </trans-unit>
        <trans-unit id="09e3af47fd3e79db546ede96c7b4d1b579dbfa72" translate="yes" xml:space="preserve">
          <source>Whether this is an even iteration through the loop.</source>
          <target state="translated">이것이 루프를 통한 짝수 반복인지 여부.</target>
        </trans-unit>
        <trans-unit id="858cdbf32fe7a994509943c6b3ba4b27baba0cca" translate="yes" xml:space="preserve">
          <source>Whether this is an odd iteration through the loop.</source>
          <target state="translated">루프를 통한 이상한 반복인지 여부.</target>
        </trans-unit>
        <trans-unit id="f0b83a248e4a6417c2c0d8dff3e585f6dabb687a" translate="yes" xml:space="preserve">
          <source>Whether this is the first iteration through the loop.</source>
          <target state="translated">이것이 루프를 통한 첫 번째 반복인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f70eb7c3912465a5e233f4177b665abf06b0a23f" translate="yes" xml:space="preserve">
          <source>Whether this is the last iteration through the loop.</source>
          <target state="translated">이것이 루프를 통한 마지막 반복인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="80db56d223d186d805865ba25df831f6e1804ab7" translate="yes" xml:space="preserve">
          <source>Whether to make the table temporary.</source>
          <target state="translated">테이블을 임시로 만들지 여부</target>
        </trans-unit>
        <trans-unit id="c2f093f639eff40a14afd0f1f43a1aed22b9eaff" translate="yes" xml:space="preserve">
          <source>Whether use write pdo for select.</source>
          <target state="translated">select에 write pdo를 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="66476ef8f19664adebfa07a61854b1ed85501074" translate="yes" xml:space="preserve">
          <source>Which Branch?</source>
          <target state="translated">어느 지점?</target>
        </trans-unit>
        <trans-unit id="17255d7a182033fd562457a5d56ad2f20ccb04ea" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;$fillable&lt;/code&gt; serves as a &quot;white list&quot; of attributes that should be mass assignable, you may also choose to use &lt;code&gt;$guarded&lt;/code&gt;. The &lt;code&gt;$guarded&lt;/code&gt; property should contain an array of attributes that you do not want to be mass assignable. All other attributes not in the array will be mass assignable. So, &lt;code&gt;$guarded&lt;/code&gt; functions like a &quot;black list&quot;. Of course, you should use either &lt;code&gt;$fillable&lt;/code&gt; or &lt;code&gt;$guarded&lt;/code&gt; - not both. In the example below, all attributes &lt;strong&gt;except for &lt;code&gt;price&lt;/code&gt;&lt;/strong&gt; will be mass assignable:</source>
          <target state="translated">&lt;code&gt;$fillable&lt;/code&gt; 은 대량 할당이 가능한 속성의 &quot;화이트리스트&quot;역할을 하지만 $ &lt;code&gt;$guarded&lt;/code&gt; 를 사용할 수도 있습니다 . &lt;code&gt;$guarded&lt;/code&gt; 당신이 대량 할당되고 싶어하지 않는 것이 속성은 속성의 배열을 포함해야합니다. 배열에없는 다른 모든 속성은 대량 할당 가능합니다. 따라서 &lt;code&gt;$guarded&lt;/code&gt; 는 &quot;블랙리스트&quot;와 같은 기능을합니다. 물론 &lt;code&gt;$fillable&lt;/code&gt; 또는 &lt;code&gt;$guarded&lt;/code&gt; 중 하나만 사용해야합니다 . 아래 예 &lt;strong&gt;에서 &lt;code&gt;price&lt;/code&gt; &lt;/strong&gt; 을 &lt;strong&gt;제외한&lt;/strong&gt; 모든 속성 은 대량 할당 가능합니다.</target>
        </trans-unit>
        <trans-unit id="2aed4accf02e625fe1315b3f0ab6be75cbac0add" translate="yes" xml:space="preserve">
          <source>While Blade provides this feature, using it frequently may be a signal that you have too much logic embedded within your template.</source>
          <target state="translated">Blade가이 기능을 제공하지만 자주 사용하면 템플릿에 너무 많은 로직이 포함되어 있다는 신호일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b94b7745d0960b8631e85fcbe3ace61ee839af3" translate="yes" xml:space="preserve">
          <source>While Laravel does not dictate which JavaScript or CSS pre-processors you use, it does provide a basic starting point using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; and &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; that will be helpful for many applications. By default, Laravel uses &lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt; to install both of these frontend packages.</source>
          <target state="translated">Laravel은 사용하는 JavaScript 또는 CSS 전처리기를 지정하지 않지만 &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; 및 &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; 를 사용하여 많은 응용 프로그램에 도움이 되는 기본 시작점을 제공합니다 . 기본적으로 Laravel은 &lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt; 을 사용하여 이러한 프런트 엔드 패키지를 모두 설치합니다.</target>
        </trans-unit>
        <trans-unit id="ef2ab498fc6769cc7f430cc61ac7674e52d43b9c" translate="yes" xml:space="preserve">
          <source>While building your application, you may occasionally have actions that should require the user to confirm their password before the action is performed. Laravel includes built-in middleware to make this process a breeze. Implementing this feature will require you to define two routes: one route to display a view asking the user to confirm their password, and one route to confirm that the password is valid and redirect the user to their intended destination.</source>
          <target state="translated">응용 프로그램을 빌드하는 동안 작업을 수행하기 전에 사용자가 암호를 확인해야하는 작업이있을 수 있습니다. 라 라벨은이 프로세스를 쉽게 만들어주는 내장 미들웨어를 포함하고 있습니다. 이 기능을 구현하려면 두 가지 경로를 정의해야합니다. 하나는 사용자에게 암호 확인을 요청하는보기를 표시하는 경로이고 다른 하나는 암호가 유효한지 확인하고 사용자를 원하는 대상으로 리디렉션하는 경로입니다.</target>
        </trans-unit>
        <trans-unit id="73cd8373457f7076bbd4e0b85064aa7782070f49" translate="yes" xml:space="preserve">
          <source>While handling an incoming request, you may access the authenticated user via the &lt;code&gt;Auth&lt;/code&gt; facade:</source>
          <target state="translated">들어오는 요청을 처리하는 동안 &lt;code&gt;Auth&lt;/code&gt; 파사드 를 통해 인증 된 사용자에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6a04181a51071225c942d3ac82feebdaa36baeb" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, Laravel will display the maintenance mode view for all application URLs the user attempts to access. If you wish, you may instruct Laravel to redirect all requests to a specific URL. This may be accomplished using the &lt;code&gt;redirect&lt;/code&gt; option. For example, you may wish to redirect all requests to the &lt;code&gt;/&lt;/code&gt; URI:</source>
          <target state="translated">유지 관리 모드에있는 동안 Laravel은 사용자가 액세스하려는 모든 애플리케이션 URL에 대한 유지 관리 모드보기를 표시합니다. 원하는 경우 모든 요청을 특정 URL로 리디렉션하도록 Laravel에 지시 할 수 있습니다. &lt;code&gt;redirect&lt;/code&gt; 옵션을 사용하여 수행 할 수 있습니다 . 예를 들어 모든 요청을 &lt;code&gt;/&lt;/code&gt; URI 로 리디렉션 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb1f051cfb47dfffc69e9178d4ab4f98bc199a99" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, you may use the &lt;code&gt;secret&lt;/code&gt; option to specify a maintenance mode bypass token:</source>
          <target state="translated">유지 관리 모드에있는 동안 &lt;code&gt;secret&lt;/code&gt; 옵션을 사용하여 유지 관리 모드 우회 토큰을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eef2f7a197f14052fc6560df4ffa3d071341260e" translate="yes" xml:space="preserve">
          <source>While most Eloquent collection methods return a new instance of an Eloquent collection, the &lt;code&gt;pluck&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;collapse&lt;/code&gt;, &lt;code&gt;flatten&lt;/code&gt; and &lt;code&gt;flip&lt;/code&gt; methods return a &lt;a href=&quot;collections&quot;&gt;base collection&lt;/a&gt; instance. Likewise, if a &lt;code&gt;map&lt;/code&gt; operation returns a collection that does not contain any Eloquent models, it will be automatically cast to a base collection.</source>
          <target state="translated">가장 설득력 수집 방법이 설득력 컬렉션의 새로운 인스턴스를 리턴하면서 &lt;code&gt;pluck&lt;/code&gt; , &lt;code&gt;keys&lt;/code&gt; , &lt;code&gt;zip&lt;/code&gt; , &lt;code&gt;collapse&lt;/code&gt; , &lt;code&gt;flatten&lt;/code&gt; 및 &lt;code&gt;flip&lt;/code&gt; 메소드는 반환 &lt;a href=&quot;collections&quot;&gt;베이스 컬렉션&lt;/a&gt; 인스턴스. 마찬가지로, &lt;code&gt;map&lt;/code&gt; 조작이 Eloquent 모델을 포함하지 않는 콜렉션을 리턴하면 자동으로 기본 콜렉션으로 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="348c94bc88df6a4ae4554be4717014a2ad4e2291" translate="yes" xml:space="preserve">
          <source>While not strictly required to use Scout, you should strongly consider configuring a &lt;a href=&quot;queues&quot;&gt;queue driver&lt;/a&gt; before using the library. Running a queue worker will allow Scout to queue all operations that sync your model information to your search indexes, providing much better response times for your application's web interface.</source>
          <target state="translated">Scout을 반드시 사용해야하는 것은 아니지만 라이브러리를 사용하기 전에 &lt;a href=&quot;queues&quot;&gt;큐 드라이버&lt;/a&gt; 구성을 고려해야합니다 . 대기열 작업자를 실행하면 스카우트가 모델 정보를 검색 색인에 동기화하는 모든 작업을 대기열에 넣을 수 있으므로 응용 프로그램의 웹 인터페이스에 대한 응답 시간이 훨씬 단축됩니다.</target>
        </trans-unit>
        <trans-unit id="48ddd56f9a6e231b28ec09bf06984ec9bbede44d" translate="yes" xml:space="preserve">
          <source>While resources translate a single model into an array, resource collections translate a collection of models into an array. It is not absolutely necessary to define a resource collection class for each one of your model types since all resources provide a &lt;code&gt;collection&lt;/code&gt; method to generate an &quot;ad-hoc&quot; resource collection on the fly:</source>
          <target state="translated">자원이 단일 모델을 배열로 변환하는 동안 자원 콜렉션은 모델 콜렉션을 배열로 변환합니다. 모든 자원 은 &quot;ad-hoc&quot;자원 콜렉션을 즉시 생성 하기위한 &lt;code&gt;collection&lt;/code&gt; 메소드를 제공하므로 모든 모델 유형에 대한 자원 콜렉션 클래스를 정의 할 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8970eed14eb8bd493a983eb3b0caaacfac8fb563" translate="yes" xml:space="preserve">
          <source>While testing, the &lt;code&gt;Sanctum::actingAs&lt;/code&gt; method may be used to authenticate a user and specify which abilities are granted to their token:</source>
          <target state="translated">테스트하는 동안 &lt;code&gt;Sanctum::actingAs&lt;/code&gt; 메서드를 사용하여 사용자를 인증하고 토큰에 부여되는 능력을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ff2199a9c114dabc5f912ad7ed349c40a4cec00" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;each&lt;/code&gt; method calls the given callback for each item in the collection right away, the &lt;code&gt;tapEach&lt;/code&gt; method only calls the given callback as the items are being pulled out of the list one by one:</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; 메서드는 컬렉션의 각 항목에 대해 지정된 콜백을 즉시 호출 하지만 &lt;code&gt;tapEach&lt;/code&gt; 의 메소드는 항목이 하나 목록을 하나 꺼내되고있다으로 주어진 콜백을 호출</target>
        </trans-unit>
        <trans-unit id="72fd6999c01e2ad34b06bf4430a0447529506b30" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;filter&lt;/code&gt; callback filters data for individual entries, you may use the &lt;code&gt;filterBatch&lt;/code&gt; method to register a callback that filters all data for a given request or console command. If the callback returns &lt;code&gt;true&lt;/code&gt;, all of the entries are recorded by Telescope:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 콜백이 개별 항목에 대한 데이터를 필터링 하는 동안 &lt;code&gt;filterBatch&lt;/code&gt; 메서드를 사용하여 주어진 요청 또는 콘솔 명령에 대한 모든 데이터를 필터링하는 콜백을 등록 할 수 있습니다 . 콜백이 &lt;code&gt;true&lt;/code&gt; 를 반환하는 경우 하면 모든 항목이 Telescope에 의해 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="18db8efbc5b2962f19f9abc43ec5664dc4d5ecac" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">그동안 &lt;code&gt;input&lt;/code&gt; 방법 (쿼리 스트링을 포함한) 모든 요청의 페이로드의 값을 검색하고 상기 &lt;code&gt;query&lt;/code&gt; 방법은 질의 스트링의 값을 검색한다 :</target>
        </trans-unit>
        <trans-unit id="73c46ec032ad965202c61dc0d4b466a27af74713" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from the entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">그동안 &lt;code&gt;input&lt;/code&gt; 방법 (쿼리 스트링을 포함한) 전체 요청의 페이로드의 값을 검색하고 상기 &lt;code&gt;query&lt;/code&gt; 방법은 질의 스트링의 값을 검색한다 :</target>
        </trans-unit>
        <trans-unit id="26948efa7cc67c3f1b9d2912661f8bae8df20721" translate="yes" xml:space="preserve">
          <source>While this code is valid, the structure of the &lt;code&gt;handle&lt;/code&gt; method becomes noisy since it is cluttered with Redis rate limiting logic. In addition, this rate limiting logic must be duplicated for any other jobs that we want to rate limit.</source>
          <target state="translated">이 코드는 유효하지만 &lt;code&gt;handle&lt;/code&gt; 메서드 Redis 속도 제한 논리로 복잡해지기 때문에 노이즈가 발생합니다. 또한이 속도 제한 논리는 속도 제한을 원하는 다른 작업에 대해 복제되어야합니다.</target>
        </trans-unit>
        <trans-unit id="94252da4cd002dac9c35c12822ce732b2cee0343" translate="yes" xml:space="preserve">
          <source>While trialing and collecting payment method details up front, Paddle prevents any subscription changes such as swapping plans or updating quantities. If you want to allow a customer to swap plans during a trial the subscription must be cancelled and recreated.</source>
          <target state="translated">지불 방법 세부 정보를 미리 평가하고 수집하는 동안 Paddle은 계획 교체 또는 수량 업데이트와 같은 구독 변경을 방지합니다. 평가판 중에 고객이 요금제를 교체 할 수 있도록하려면 구독을 취소하고 다시 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="388db48a80bdd2f36afecf8de5947265a4847a19" translate="yes" xml:space="preserve">
          <source>While working with Cashier we recommend you also refer to Paddle's &lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;user guides&lt;/a&gt; and &lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">계산원과 작업하는 동안 Paddle의 &lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;사용자 가이드&lt;/a&gt; 및 &lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;API 문서&lt;/a&gt; 도 참조하는 것이 좋습니다. .</target>
        </trans-unit>
        <trans-unit id="c3263ee6474bc0189a33e9cf3b3cf7df16488e09" translate="yes" xml:space="preserve">
          <source>While your application is in maintenance mode, no &lt;a href=&quot;queues&quot;&gt;queued jobs&lt;/a&gt; will be handled. The jobs will continue to be handled as normal once the application is out of maintenance mode.</source>
          <target state="translated">응용 프로그램이 유지 관리 모드 인 동안에는 &lt;a href=&quot;queues&quot;&gt;대기중인 작업&lt;/a&gt; 이 처리 되지 않습니다 . 응용 프로그램이 유지 관리 모드를 벗어나도 작업은 계속 정상적으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9fc8481f8e98f789cfa820faf45077429352efa1" translate="yes" xml:space="preserve">
          <source>While your command is executing, you will obviously need to access the values for the arguments and options accepted by your command. To do so, you may use the &lt;code&gt;argument&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; methods:</source>
          <target state="translated">명령이 실행되는 동안 명령에서 허용되는 인수 및 옵션의 값에 액세스해야합니다. 이를 위해 &lt;code&gt;argument&lt;/code&gt; 및 &lt;code&gt;option&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8342c13ed330ab09b6fedcb2b457b5e7e116519" translate="yes" xml:space="preserve">
          <source>WhoopsHandler</source>
          <target state="translated">WhoopsHandler</target>
        </trans-unit>
        <trans-unit id="2b7534a5342ff1d72a12f61109f6083d5575204f" translate="yes" xml:space="preserve">
          <source>WhoopsHandler (Foundation\Exceptions)</source>
          <target state="translated">WhoopsHandler (기초 \ 예외)</target>
        </trans-unit>
        <trans-unit id="922b394baa31a45941be8c5060c62134e9545195" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::directoriesExceptVendor()</source>
          <target state="translated">WhoopsHandler::directoriesExceptVendor()</target>
        </trans-unit>
        <trans-unit id="c6eba6524006ccf60161800e05a6efb5bfaee42a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::forDebug()</source>
          <target state="translated">WhoopsHandler::forDebug()</target>
        </trans-unit>
        <trans-unit id="655639dfd77d3df9e19f85700bc94444c3195f0a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerApplicationPaths()</source>
          <target state="translated">WhoopsHandler::registerApplicationPaths()</target>
        </trans-unit>
        <trans-unit id="0632e6b2726312f02ee6cbbcd6c27d6acc56d2fa" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerBlacklist()</source>
          <target state="translated">WhoopsHandler::registerBlacklist()</target>
        </trans-unit>
        <trans-unit id="8af9375d26e068a95bbeecd00d64c3112a1a7040" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerEditor()</source>
          <target state="translated">WhoopsHandler::registerEditor()</target>
        </trans-unit>
        <trans-unit id="7533329b81e951b47322623b641f6f462ec5b6b3" translate="yes" xml:space="preserve">
          <source>Wildcard Event Listeners</source>
          <target state="translated">와일드 카드 이벤트 리스너</target>
        </trans-unit>
        <trans-unit id="b787678841b65ab6be1b8553eaade2085596111f" translate="yes" xml:space="preserve">
          <source>Wildcard SSL</source>
          <target state="translated">와일드 카드 SSL</target>
        </trans-unit>
        <trans-unit id="1dc9d20817df4c4c0f23d475a957e54e2ba23dbc" translate="yes" xml:space="preserve">
          <source>Wildcard Subscriptions</source>
          <target state="translated">와일드 카드 구독</target>
        </trans-unit>
        <trans-unit id="e3982a53d2b255a3d7522bb44900c219168ecb8e" translate="yes" xml:space="preserve">
          <source>Will be removed in a future Laravel version.</source>
          <target state="translated">향후 Laravel 버전에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="56103090882d5808ad3598385120c914d3c77ee4" translate="yes" xml:space="preserve">
          <source>Windows users should not use the &lt;code&gt;~/&lt;/code&gt; path syntax and instead should use the full path to their project, such as &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt;.</source>
          <target state="translated">Windows 사용자는 &lt;code&gt;~/&lt;/code&gt; 경로 구문을 사용하지 말고 대신 &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt; 과 같은 프로젝트의 전체 경로를 사용해야합니다 . .</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Windows:</target>
        </trans-unit>
        <trans-unit id="11f85e2e9a84fe1a17f5a1b93f3d4513b411a6af" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</source>
          <target state="translated">Windows : &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d864d109c167a76425e1d9a229f9b784d3417dcd" translate="yes" xml:space="preserve">
          <source>WipeCommand</source>
          <target state="translated">WipeCommand</target>
        </trans-unit>
        <trans-unit id="03a000aac90e8f2ecb4da4adb760bc9efc0ed6c5" translate="yes" xml:space="preserve">
          <source>WipeCommand (Database)</source>
          <target state="translated">WipeCommand (데이터베이스)</target>
        </trans-unit>
        <trans-unit id="2525634b9fa27a5eaeddda2735fdd03b8dab63c5" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTables()</source>
          <target state="translated">WipeCommand::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="8c7ab45e39df754c52c70c34a97c3f7fdb6a7468" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTypes()</source>
          <target state="translated">WipeCommand::dropAllTypes()</target>
        </trans-unit>
        <trans-unit id="2f66bc085e7e1a627d4e5b30631196899d3a4663" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllViews()</source>
          <target state="translated">WipeCommand::dropAllViews()</target>
        </trans-unit>
        <trans-unit id="5f100c3f802a37891cb69e66414299067df17084" translate="yes" xml:space="preserve">
          <source>WipeCommand::getOptions()</source>
          <target state="translated">WipeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="69cba5155c88423262d3c4d6d03502bc5875ae77" translate="yes" xml:space="preserve">
          <source>WipeCommand::handle()</source>
          <target state="translated">WipeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="f6cdf2f1377b4f1da070d015c6228f3de75910f6" translate="yes" xml:space="preserve">
          <source>With Credit Card Up Front</source>
          <target state="translated">신용 카드 앞면</target>
        </trans-unit>
        <trans-unit id="583a679104cb88f1b20e29da230b00299a9fe96f" translate="yes" xml:space="preserve">
          <source>With Payment Method Up Front</source>
          <target state="translated">결제 수단을 선불로</target>
        </trans-unit>
        <trans-unit id="18427497c463b152591bf88ca6911e9e7ea8b083" translate="yes" xml:space="preserve">
          <source>With this addition to your &lt;code&gt;webpack.mix.js&lt;/code&gt; file, Mix will no longer match any &lt;code&gt;url()&lt;/code&gt; or copy assets to your public directory. In other words, the compiled CSS will look just like how you originally typed it:</source>
          <target state="translated">&lt;code&gt;webpack.mix.js&lt;/code&gt; 파일 에이 추가하면 Mix는 더 이상 &lt;code&gt;url()&lt;/code&gt; 과 일치 하거나 자산을 공용 디렉토리에 복사 하지 않습니다 . 다시 말해, 컴파일 된 CSS는 원래 입력 한 방식과 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="f96228eccaf6f329d5c25f92f15be89fec18bc36" translate="yes" xml:space="preserve">
          <source>With this single line of code, you may now take advantage of:</source>
          <target state="translated">이 한 줄의 코드로 다음을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fea6acffe87e259a90dacff8c8e0282eadd35430" translate="yes" xml:space="preserve">
          <source>WithFaker</source>
          <target state="translated">WithFaker</target>
        </trans-unit>
        <trans-unit id="d9ce4c57668fd41b5c29bd07f403151a4a3f7a5e" translate="yes" xml:space="preserve">
          <source>WithFaker (Foundation\Testing)</source>
          <target state="translated">WithFaker (Foundation \ Testing)</target>
        </trans-unit>
        <trans-unit id="ded64d3b2d821c90553044af2e3d008f20ea5f49" translate="yes" xml:space="preserve">
          <source>WithFaker::faker()</source>
          <target state="translated">WithFaker::faker()</target>
        </trans-unit>
        <trans-unit id="aded131891a4294d825381a0bd4c5ae5ab968b74" translate="yes" xml:space="preserve">
          <source>WithFaker::makeFaker()</source>
          <target state="translated">WithFaker::makeFaker()</target>
        </trans-unit>
        <trans-unit id="7c304dcbfd22a06c97c6e6f7753d76d681b12cc9" translate="yes" xml:space="preserve">
          <source>WithFaker::setUpFaker()</source>
          <target state="translated">WithFaker::setUpFaker()</target>
        </trans-unit>
        <trans-unit id="48c1d19901383c95d312198345b6e82b271efe7b" translate="yes" xml:space="preserve">
          <source>Within a mailable class' &lt;code&gt;build&lt;/code&gt; method, you may use the &lt;code&gt;view&lt;/code&gt; method to specify which template should be used when rendering the email's contents. Since each email typically uses a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt; to render its contents, you have the full power and convenience of the Blade templating engine when building your email's HTML:</source>
          <target state="translated">메일 가능 클래스의 &lt;code&gt;build&lt;/code&gt; 메소드 내 에서 &lt;code&gt;view&lt;/code&gt; 메소드를 사용하여 이메일 컨텐츠를 렌더링 할 때 사용해야하는 템플리트를 지정할 수 있습니다. 각 전자 메일은 일반적으로 &lt;a href=&quot;blade&quot;&gt;블레이드 템플릿&lt;/a&gt; 을 사용하여 내용을 렌더링하므로 전자 메일 HTML을 작성할 때 블레이드 템플릿 엔진의 모든 기능과 편리함을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6747d9675ebd9f5e1f14782ecab150a332f9d10e" translate="yes" xml:space="preserve">
          <source>Within a service provider, you always have access to the container via the &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; property. We can register a binding using the &lt;code&gt;bind&lt;/code&gt; method, passing the class or interface name that we wish to register along with a &lt;code&gt;Closure&lt;/code&gt; that returns an instance of the class:</source>
          <target state="translated">서비스 제공 업체 내에서는 항상 &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; 속성을 통해 컨테이너에 액세스 할 수 있습니다. &lt;code&gt;bind&lt;/code&gt; 메소드를 사용하여 바인딩 을 등록하고 등록하려는 클래스 또는 인터페이스 이름을 클래스의 인스턴스를 리턴하는 &lt;code&gt;Closure&lt;/code&gt; 와 함께 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6167527c55baed6217aa6e69545a373e1bccfc8" translate="yes" xml:space="preserve">
          <source>Within an event listener, you may access the &lt;code&gt;notifiable&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;, and &lt;code&gt;channel&lt;/code&gt; properties on the event to learn more about the notification recipient or the notification itself:</source>
          <target state="translated">이벤트 리스너 내에서 이벤트의 &lt;code&gt;notifiable&lt;/code&gt; , &lt;code&gt;notification&lt;/code&gt; 및 &lt;code&gt;channel&lt;/code&gt; 특성에 액세스 하여 알림 수신자 또는 알림 자체에 대해 자세히 알아볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28219899d00e79d2951ad1c31159913e70e55bd1" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, the following migration creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">이 두 가지 방법 내에서 Laravel 스키마 빌더를 사용하여 테이블을 표현 적으로 생성하고 수정할 수 있습니다. &lt;code&gt;Schema&lt;/code&gt; 빌더에서 사용 가능한 모든 메소드에 대해 알아 보려면 &lt;a href=&quot;#creating-tables&quot;&gt;해당 문서를 확인하십시오&lt;/a&gt; . 예를 들어 다음 마이그레이션은 &lt;code&gt;flights&lt;/code&gt; 생성 합니다. 테이블을 .</target>
        </trans-unit>
        <trans-unit id="e83283f5c7e6ff3dec1324ea5704c72ae1ac6122" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, this migration example creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">이 두 가지 방법 모두에서 Laravel 스키마 빌더를 사용하여 테이블을 표현하고 생성 할 수 있습니다. &lt;code&gt;Schema&lt;/code&gt; 빌더에서 사용 가능한 모든 메소드에 대해 학습하려면 &lt;a href=&quot;#creating-tables&quot;&gt;해당 문서를 확인하십시오&lt;/a&gt; . 예를 들어이 마이그레이션 예제는 &lt;code&gt;flights&lt;/code&gt; 테이블을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4072e2b4bfe33dad8f8ec117143a2854d1ea7955" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;DatabaseSeeder&lt;/code&gt; class, you may use the &lt;code&gt;call&lt;/code&gt; method to execute additional seed classes. Using the &lt;code&gt;call&lt;/code&gt; method allows you to break up your database seeding into multiple files so that no single seeder class becomes overwhelmingly large. Pass the name of the seeder class you wish to run:</source>
          <target state="translated">&lt;code&gt;DatabaseSeeder&lt;/code&gt; 클래스 내에서 &lt;code&gt;call&lt;/code&gt; 메소드를 사용하여 추가 시드 클래스를 실행할 수 있습니다. 은 Using &lt;code&gt;call&lt;/code&gt; 방법은 단일 시더 클래스가 압도적으로 커지게되지 않도록 여러 파일로 데이터베이스 파종을 중단 할 수 있습니다. 실행하려는 시더 클래스의 이름을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="38cecc6db844791d812b59edd96474959871daac" translate="yes" xml:space="preserve">
          <source>Within the Closure, which serves as the factory definition, you may return the default test values of all attributes on the model. The Closure will receive an instance of the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">팩토리 정의 역할을하는 클로저 내에서 모델의 모든 속성에 대한 기본 테스트 값을 반환 할 수 있습니다. 클로저는 &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP 라이브러리 의 인스턴스를 받게되며 , 테스트를 위해 다양한 종류의 랜덤 데이터를 편리하게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac61635a9bf84973d2e9e3970c12af375ccb2e7c" translate="yes" xml:space="preserve">
          <source>Without Credit Card Up Front</source>
          <target state="translated">신용 카드없이</target>
        </trans-unit>
        <trans-unit id="7140780d0751593a64bd453da071949e464b5d8a" translate="yes" xml:space="preserve">
          <source>Without Payment Method Up Front</source>
          <target state="translated">결제 수단없이 선불</target>
        </trans-unit>
        <trans-unit id="b910306744dcdff16bb3f5ea2df65b93ae9a6b62" translate="yes" xml:space="preserve">
          <source>Without pruning, the &lt;code&gt;telescope_entries&lt;/code&gt; table can accumulate records very quickly. To mitigate this, you should schedule the &lt;code&gt;telescope:prune&lt;/code&gt; Artisan command to run daily:</source>
          <target state="translated">가지 치기없이 &lt;code&gt;telescope_entries&lt;/code&gt; 테이블은 레코드를 매우 빠르게 누적 할 수 있습니다. 이를 완화하려면 &lt;code&gt;telescope:prune&lt;/code&gt; 예약해야합니다 . Artisan 명령이 매일 실행되도록 합니다.</target>
        </trans-unit>
        <trans-unit id="4df11ff8ee3b580245718abb3b6d106cd59ce60e" translate="yes" xml:space="preserve">
          <source>WithoutEvents</source>
          <target state="translated">WithoutEvents</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
