<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="46cd537ce421be1ab78a0a57b026eaa08237c03c" translate="yes" xml:space="preserve">
          <source>Targeting specific DOM element will help avoid visual changes from component &amp;ldquo;X&amp;rdquo; breaking tests in other unrelated components.</source>
          <target state="translated">특정 DOM 요소를 대상으로 지정하면 관련없는 다른 구성 요소에서 구성 요소 &quot;X&quot;의 시각적 변경을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0e02fe52a7524597a122925192b6eb5f21a197c" translate="yes" xml:space="preserve">
          <source>Targeting the element above by &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; is very volatile and highly subject to change. You may swap out the element, you may refactor CSS and update ID&amp;rsquo;s, or you may add or remove classes that affect the style of the element.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; , &lt;code&gt;class&lt;/code&gt; 또는 &lt;code&gt;id&lt;/code&gt; 로 위의 요소를 타겟팅하면 변동성이 높고 변경 될 수 있습니다. 요소를 교체하거나 CSS를 리팩터링하고 ID를 업데이트하거나 요소 스타일에 영향을주는 클래스를 추가하거나 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed672f0d303bcf15159beca38483d0c2a2d11a4f" translate="yes" xml:space="preserve">
          <source>Tasks are merged automatically</source>
          <target state="translated">작업이 자동으로 병합됩니다</target>
        </trans-unit>
        <trans-unit id="a06e62da0340bb602ffbe3e95da5882ac31107e3" translate="yes" xml:space="preserve">
          <source>Tasks must end</source>
          <target state="translated">작업을 종료해야합니다</target>
        </trans-unit>
        <trans-unit id="4501d02d62245855e16d36daca8a82e7db839dff" translate="yes" xml:space="preserve">
          <source>Tasks registered in the plugins file with the &amp;lsquo;task&amp;rsquo; event are merged with any tasks registered by previous calls to &lt;code&gt;on('task')&lt;/code&gt;, instead of overwriting the previous tasks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;#2284&lt;/a&gt;.</source>
          <target state="translated">'task'이벤트로 플러그인 파일에 등록 된 &lt;code&gt;on('task')&lt;/code&gt; 은 이전 작업을 덮어 쓰는 대신 on ( 'task')에 대한 이전 호출로 등록 된 모든 작업과 병합됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;# 2284&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3183c1609c7e644095493678e46ceee67a34f8c3" translate="yes" xml:space="preserve">
          <source>Tasks that do not end are not supported</source>
          <target state="translated">끝나지 않은 작업은 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="658b6d3aca3d0b2d0a646705881424c846b0a1e4" translate="yes" xml:space="preserve">
          <source>Technically the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, and first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the example below all contain &amp;ldquo;apples&amp;rdquo;.</source>
          <target state="translated">기술적으로 아래 예에서 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 및 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 는 모두&amp;ldquo;사과&amp;rdquo;를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="5f335cd60c716771bd7383f170ff4943875ed401" translate="yes" xml:space="preserve">
          <source>Temporarily ignoring the &lt;code&gt;--reporter&lt;/code&gt; option for headless / CI runs. Currently it is locked to the &lt;code&gt;spec&lt;/code&gt; reporter, which is the default. This will be fixed in the next few patch releases.</source>
          <target state="translated">헤드리스 / CI 실행의 경우 &lt;code&gt;--reporter&lt;/code&gt; 옵션을 일시적으로 무시합니다 . 현재는 &lt;code&gt;spec&lt;/code&gt; 리포터 (기본 설정 )에 잠겨 있습니다. 이것은 다음 몇 가지 패치 릴리스에서 수정 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="a0a01341c0f853915868524cf2486d0b5478d5e6" translate="yes" xml:space="preserve">
          <source>Temporary trade-offs:</source>
          <target state="translated">일시적인 절충 :</target>
        </trans-unit>
        <trans-unit id="1ecdafaa980fea1d90e97830ce7b1eb728dc022f" translate="yes" xml:space="preserve">
          <source>Test Angular component using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 각도 구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="45b447602b36cf493856860d1acb9e37b9f5c43f" translate="yes" xml:space="preserve">
          <source>Test Code causing error</source>
          <target state="translated">오류를 일으키는 테스트 코드</target>
        </trans-unit>
        <trans-unit id="b3b22029d6c82b1352e5e952f1c15a89c8280b8b" translate="yes" xml:space="preserve">
          <source>Test Configuration</source>
          <target state="translated">테스트 구성</target>
        </trans-unit>
        <trans-unit id="684040738bd04ccfa68be014ee4a6b87c8ec87d2" translate="yes" xml:space="preserve">
          <source>Test Cycle.js components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 Cycle.js 컴포넌트 테스트</target>
        </trans-unit>
        <trans-unit id="9ac21f97f2f4903c9ac59320708a58ef2ddcdc01" translate="yes" xml:space="preserve">
          <source>Test Failures</source>
          <target state="translated">테스트 실패</target>
        </trans-unit>
        <trans-unit id="cac96a74d0be4987ba8a26863c497ad605566650" translate="yes" xml:space="preserve">
          <source>Test File Errors</source>
          <target state="translated">테스트 파일 오류</target>
        </trans-unit>
        <trans-unit id="97c56f7b0b5b324631c5113e306924e2d7bb2150" translate="yes" xml:space="preserve">
          <source>Test Hyperapp components and applications using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 Hyperapp 구성 요소 및 애플리케이션 테스트</target>
        </trans-unit>
        <trans-unit id="1b3f6c43c3fdfa3791f14217f9bc76c0c9ffc66c" translate="yes" xml:space="preserve">
          <source>Test IDs have been removed. You will no longer see Cypress insert IDs into your test files. This was a feature we implemented on day 1 - the idea being we could track test performance and do regression analysis. Unfortunately, it will be a long time before we actually implement the data science to make this happen. For the time being, IDs presented unnecessary technical complexity and challenges with no real upside. We recommend you remove all of your existing IDs. We&amp;rsquo;ve added a new command to the CLI tool that can do this in one shot. &lt;code&gt;cypress remove:ids&lt;/code&gt; You may see IDs be reintroduced at a later time when we provide analytics.</source>
          <target state="translated">테스트 ID가 제거되었습니다. Cypress 삽입 ID가 테스트 파일에 더 이상 표시되지 않습니다. 이는 1 일에 구현 한 기능으로, 테스트 성능을 추적하고 회귀 분석을 수행 할 수 있다는 아이디어입니다. 불행히도 실제로 데이터 과학을 구현하기 위해 오랜 시간이 걸릴 것입니다. 당분간 ID는 불필요한 기술적 복잡성과 도전 과제를 보여주었습니다. 기존 ID를 모두 제거하는 것이 좋습니다. CLI 도구에 한 번에이를 수행 할 수있는 새로운 명령이 추가되었습니다. &lt;code&gt;cypress remove:ids&lt;/code&gt; 나중에 분석을 제공 할 때 ID가 다시 소개 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="079919ff5fc4373dfcb24a2ad44fd01025032425" translate="yes" xml:space="preserve">
          <source>Test React components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 React 구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="ba23c3620e9948b76588caefb2603502db66c5a1" translate="yes" xml:space="preserve">
          <source>Test Runner</source>
          <target state="translated">테스트 러너</target>
        </trans-unit>
        <trans-unit id="cda4f532ce99974cb637e8d6f67e4706bfbe7571" translate="yes" xml:space="preserve">
          <source>Test Runner errors</source>
          <target state="translated">테스트 러너 오류</target>
        </trans-unit>
        <trans-unit id="a223bfbd68697f8e9fc89de83eefd9ae1e285aab" translate="yes" xml:space="preserve">
          <source>Test Structure</source>
          <target state="translated">테스트 구조</target>
        </trans-unit>
        <trans-unit id="88dbcf96fc5b5729297cd88ad60e3d7f31ee5511" translate="yes" xml:space="preserve">
          <source>Test Svelte components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 Svelte 구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="20dca8620c56eeea52221b877b96c856386b8250" translate="yes" xml:space="preserve">
          <source>Test Vue.js components using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner를 사용하여 Vue.js 컴포넌트 테스트</target>
        </trans-unit>
        <trans-unit id="3be2bd05b49605e590fd06cfc5eec534c08a69e6" translate="yes" xml:space="preserve">
          <source>Test WebSocket connections with Cypress</source>
          <target state="translated">Cypress로 WebSocket 연결 테스트</target>
        </trans-unit>
        <trans-unit id="c3820dfcc1b257d6b9f196f52bf1a07e5340333c" translate="yes" xml:space="preserve">
          <source>Test configuration: &lt;code&gt;browser&lt;/code&gt;</source>
          <target state="translated">테스트 구성 : &lt;code&gt;browser&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="785c5615fa9e747dec82330a8553899ccd55ddfd" translate="yes" xml:space="preserve">
          <source>Test coverage around server endpoints</source>
          <target state="translated">서버 엔드 포인트에 대한 테스트 범위</target>
        </trans-unit>
        <trans-unit id="fe862656c41fd2b7f1ad701941cf16e817f5737e" translate="yes" xml:space="preserve">
          <source>Test duration is now correct and only updates when tests finish.</source>
          <target state="translated">테스트 기간이 이제 정확하고 테스트가 완료된 후에 만 ​​업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="4c35b759a061459f65e34712cde826c33cc179bc" translate="yes" xml:space="preserve">
          <source>Test edge cases like &amp;lsquo;empty views&amp;rsquo; by forcing your server to send empty responses.</source>
          <target state="translated">서버가 빈 응답을 보내도록하여 '빈 뷰'와 같은 최첨단 사례를 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="5f8c2e3e872919f39dd711b1b7aa61d67dc9f0d5" translate="yes" xml:space="preserve">
          <source>Test email and SMS messages using Mailosaur</source>
          <target state="translated">Mailosaur를 사용하여 이메일 및 SMS 메시지 테스트</target>
        </trans-unit>
        <trans-unit id="13f59ca81ca01c147b6c425183bbd058e680331f" translate="yes" xml:space="preserve">
          <source>Test file</source>
          <target state="translated">테스트 파일</target>
        </trans-unit>
        <trans-unit id="5cb661edf85cf7a89931f11d9df57469a7519ae8" translate="yes" xml:space="preserve">
          <source>Test file:</source>
          <target state="translated">테스트 파일 :</target>
        </trans-unit>
        <trans-unit id="b0aea331ff22ddf611bb144442b32469de7af26a" translate="yes" xml:space="preserve">
          <source>Test files</source>
          <target state="translated">테스트 파일</target>
        </trans-unit>
        <trans-unit id="1c67907bb75ac9bc7af8d108be1e9ff81781d51a" translate="yes" xml:space="preserve">
          <source>Test files are located in &lt;code&gt;cypress/integration&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory. Test files may be written as:</source>
          <target state="translated">테스트 파일은 기본적으로 &lt;code&gt;cypress/integration&lt;/code&gt; 에 있지만 다른 디렉토리 로 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;구성&lt;/a&gt; 할 수 있습니다 . 테스트 파일은 다음과 같이 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cff28057f5463951009da03ec203080455f94932" translate="yes" xml:space="preserve">
          <source>Test files with JS syntax errors are now &lt;a href=&quot;error-messages&quot;&gt;handled&lt;/a&gt; and we provide a GUI that points to the exact line/column number. Additionally we print these out during &lt;code&gt;cypress run&lt;/code&gt; and exit the process with &lt;code&gt;code 1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;#293&lt;/a&gt;.</source>
          <target state="translated">JS 구문 오류가있는 테스트 파일이 이제 &lt;a href=&quot;error-messages&quot;&gt;처리&lt;/a&gt; 되며 정확한 행 / 열 번호를 가리키는 GUI를 제공합니다. 또한 우리는 &lt;code&gt;cypress run&lt;/code&gt; 중에 이것을 출력 하고 &lt;code&gt;code 1&lt;/code&gt; 프로세스를 종료합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;# 293&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc7bec86e616f154ed51616f33587b0101622fd3" translate="yes" xml:space="preserve">
          <source>Test how your application responds to errors on your server by &lt;a href=&quot;../../api/commands/route&quot;&gt;modifying response status codes to be 500&lt;/a&gt; so that timers or polls automatically fire without having to wait for the required time in your tests.</source>
          <target state="translated">테스트 에서 필요한 시간 동안 기다릴 필요없이 타이머 또는 폴링이 자동으로 실행되도록 &lt;a href=&quot;../../api/commands/route&quot;&gt;응답 상태 코드를 500&lt;/a&gt; 으로 수정 하여 애플리케이션이 서버의 오류에 응답하는 방식을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="4d4924c788e474a6f6f835f31abc044aab8482c7" translate="yes" xml:space="preserve">
          <source>Test retries display</source>
          <target state="translated">재시도 테스트 표시</target>
        </trans-unit>
        <trans-unit id="f8a02496888c99a946d36ee9a569eec11d55f3a9" translate="yes" xml:space="preserve">
          <source>Test that your application was redirected</source>
          <target state="translated">애플리케이션이 리디렉션되었는지 테스트</target>
        </trans-unit>
        <trans-unit id="3cb5130b197cdce7360c93e1118149d60b2bc107" translate="yes" xml:space="preserve">
          <source>TestRail Reporter which auto-set status for specific TestRun for Cypress.</source>
          <target state="translated">Cypress 용 특정 TestRun의 상태를 자동 설정하는 TestRail Reporter.</target>
        </trans-unit>
        <trans-unit id="a5fc42bb7b3a718d11213075b60c9ef2803237c1" translate="yes" xml:space="preserve">
          <source>Testing Strategies</source>
          <target state="translated">테스트 전략</target>
        </trans-unit>
        <trans-unit id="49e5de6fdda8606102fc8691dbe10c9bec340297" translate="yes" xml:space="preserve">
          <source>Testing Your App</source>
          <target state="translated">앱 테스트</target>
        </trans-unit>
        <trans-unit id="87359bb81cb05c7edf5ce752c31754c53803626b" translate="yes" xml:space="preserve">
          <source>Testing a chart with Cypress and Applitools</source>
          <target state="translated">Cypress 및 Applitools를 사용하여 차트 테스트</target>
        </trans-unit>
        <trans-unit id="c44ae5dd646e7249556f2ac4515fec404f156bf8" translate="yes" xml:space="preserve">
          <source>Testing a datalist</source>
          <target state="translated">데이터 목록 테스트</target>
        </trans-unit>
        <trans-unit id="9dcbec88eff56a20a82e5e2ead9ad80b847e97ab" translate="yes" xml:space="preserve">
          <source>Testing drag and drop is now possible using the new &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. See our &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;new recipe&lt;/a&gt; for details on how. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;#386&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 끌어서 놓기 테스트가 가능해 졌습니다 . &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;방법에&lt;/a&gt; 대한 자세한 내용은 새로운 레시피 를 참조하십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;# 386&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f26bd8c55d1a6f05d12859bc42e204f28166f380" translate="yes" xml:space="preserve">
          <source>Testing file downloads is application specific.</source>
          <target state="translated">파일 다운로드 테스트는 응용 프로그램에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6218432ce729be2532355a40274a692c0797ea06" translate="yes" xml:space="preserve">
          <source>Testing file uploads is application specific.</source>
          <target state="translated">파일 업로드 테스트는 애플리케이션마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9323db978d34c408e5948d20005b479de390a5c5" translate="yes" xml:space="preserve">
          <source>Testing how an application renders a drawing with Cypress and Percy</source>
          <target state="translated">Cypress 및 Percy를 사용하여 응용 프로그램에서 도면을 렌더링하는 방법 테스트</target>
        </trans-unit>
        <trans-unit id="820f2385c6bb09513ada4d656767795478210480" translate="yes" xml:space="preserve">
          <source>Testing in Cypress is all about &lt;strong&gt;readability&lt;/strong&gt; and &lt;strong&gt;simplicity&lt;/strong&gt;. You don&amp;rsquo;t have to do that much actual programming to get a lot done. You also don&amp;rsquo;t need to worry about keeping your code as DRY as possible. Test code serves a different purpose than app code. Understandability and debuggability should be prioritized above all else.</source>
          <target state="translated">Cypress에서의 테스트는 &lt;strong&gt;가독성&lt;/strong&gt; 과 &lt;strong&gt;단순성&lt;/strong&gt; 에 관한 &lt;strong&gt;것&lt;/strong&gt; 입니다. 많은 실제 프로그래밍을 할 필요가 없습니다. 또한 가능한 한 코드를 DRY로 유지하는 것에 대해 걱정할 필요가 없습니다. 테스트 코드는 앱 코드와 다른 목적으로 사용됩니다. 이해 성과 디버깅 가능성은 무엇보다 우선 순위를 정해야합니다.</target>
        </trans-unit>
        <trans-unit id="987fb38c63f084d377d5e8e7b83c17d2bebe4c2c" translate="yes" xml:space="preserve">
          <source>Testing log in when your app uses another provider via OAuth.</source>
          <target state="translated">앱이 OAuth를 통해 다른 공급자를 사용할 때 로그인 테스트.</target>
        </trans-unit>
        <trans-unit id="a0af8ba8d2ce34d8769504c4e3a1a1f0f04fed61" translate="yes" xml:space="preserve">
          <source>Testing strategies</source>
          <target state="translated">테스트 전략</target>
        </trans-unit>
        <trans-unit id="19a78762a693323b4863f8b567d657f5448f8977" translate="yes" xml:space="preserve">
          <source>Testing this in Cypress is possible.</source>
          <target state="translated">Cypress에서이를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f0d65a8af0949e08dc54174556e334ee7dac2c3" translate="yes" xml:space="preserve">
          <source>Testing web navigation, DOM querying, and writing assertions.</source>
          <target state="translated">웹 탐색, DOM 쿼리 및 어설 션 작성 테스트</target>
        </trans-unit>
        <trans-unit id="767dc218c420e0ddc259107428118fa4f0ee6115" translate="yes" xml:space="preserve">
          <source>Tests are more robust with much less flake.</source>
          <target state="translated">플레이크가 훨씬 적어 테스트가 더욱 강력 해졌습니다.</target>
        </trans-unit>
        <trans-unit id="612ac8c57ae50bf5a7484b94d7275d3b10ef625d" translate="yes" xml:space="preserve">
          <source>Tests in the Command Log now automatically expand when specific commands take longer than &lt;code&gt;1000ms&lt;/code&gt; to run. Previously when running more than 1 test we did not expand commands until a test failed. Now they will be expanded and automatically collapsed whenever a single command is taking a long time to finish.</source>
          <target state="translated">특정 명령 을 실행하는 데 &lt;code&gt;1000ms&lt;/code&gt; 보다 오래 걸리면 명령 로그의 테스트가 자동으로 확장됩니다 . 이전에는 둘 이상의 테스트를 실행할 때 테스트가 실패 할 때까지 명령을 확장하지 않았습니다. 이제 단일 명령을 완료하는 데 시간이 오래 걸리면 확장되고 자동으로 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="b0169128041b3957ed44e94d98d0829e14961c16" translate="yes" xml:space="preserve">
          <source>Tests run</source>
          <target state="translated">테스트 실행</target>
        </trans-unit>
        <trans-unit id="0bbcaca79f1e7b9635d46bb164447d7de370801c" translate="yes" xml:space="preserve">
          <source>Tests should reload inside of Cypress faster when they are changed.</source>
          <target state="translated">Cypress 내부의 테스트는 변경 될 때 더 빨리 다시로드되어야합니다.</target>
        </trans-unit>
        <trans-unit id="bcd4c87389930f2e529910fcb4bcf95e4dbdfc41" translate="yes" xml:space="preserve">
          <source>Tests written in Cypress are easy to read and understand. Our API comes fully baked, on top of tools you are familiar with already.</source>
          <target state="translated">Cypress로 작성된 테스트는 읽고 이해하기 쉽습니다. 우리의 API는 이미 잘 알고있는 도구 위에 완전히 구워졌습니다.</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="0ab4fd8cd60aba5aadde57dad2f92ed39a5a6668" translate="yes" xml:space="preserve">
          <source>Text Content</source>
          <target state="translated">텍스트 내용</target>
        </trans-unit>
        <trans-unit id="8b07c7a76738a0d0742c58a0fd9c4b096a90a2dd" translate="yes" xml:space="preserve">
          <source>Text Content:</source>
          <target state="translated">텍스트 내용 :</target>
        </trans-unit>
        <trans-unit id="c913e1fc617797e412febd0a9835387588be75fd" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may also include any of these modifier character sequences:</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 전달 된 텍스트 에는 다음과 같은 수정 자 문자 시퀀스가 ​​포함될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="004ee48204cbf8f6e50a249678385dc28deeafd1" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 전달 된 텍스트 에는 아래의 특수 문자 시퀀스가 ​​포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="500a2afe5961bdf6037b8c8c1a71294834e1855b" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below. These characters will pass along the correct &lt;code&gt;keyCode&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, and &lt;code&gt;which&lt;/code&gt; codes to any events issued during &lt;code&gt;.type()&lt;/code&gt;. Some of the special character sequences may perform actions during typing such as &lt;code&gt;{movetoend}&lt;/code&gt;, &lt;code&gt;{movetostart}&lt;/code&gt;, or &lt;code&gt;{selectall}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 전달 된 텍스트는 아래의 특수 문자 시퀀스를 포함 할 수 있습니다. 이러한 문자는 올바른 함께 전달합니다 &lt;code&gt;keyCode&lt;/code&gt; 를 , &lt;code&gt;key&lt;/code&gt; , 그리고 &lt;code&gt;which&lt;/code&gt; 동안 발행 된 모든 이벤트에 코드 &lt;code&gt;.type()&lt;/code&gt; . 일부 특수 문자 시퀀스는 &lt;code&gt;{movetoend}&lt;/code&gt; , &lt;code&gt;{movetostart}&lt;/code&gt; 또는 &lt;code&gt;{selectall}&lt;/code&gt; 과 같은 입력 중에 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="faf6dd9f5ae7bd37c385bcaa86a34ff7cccc7efc" translate="yes" xml:space="preserve">
          <source>That is fine - but even if this is the case, it should not go in an &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hook. Why? So far we have been talking about logging out, but let&amp;rsquo;s use a different example. Let&amp;rsquo;s use the pattern of needing to reset your database.</source>
          <target state="translated">괜찮습니다. 그러나이 경우에도 각 &lt;code&gt;after&lt;/code&gt; 또는 후 후크에 &lt;code&gt;afterEach&lt;/code&gt; . 왜? 지금까지 로그 아웃에 대해 이야기했지만 다른 예를 사용하겠습니다. 데이터베이스를 재설정해야하는 패턴을 사용합시다.</target>
        </trans-unit>
        <trans-unit id="ea2ff1b57db012138aa92fb7e611c0e7d4186bdd" translate="yes" xml:space="preserve">
          <source>That is it! In any other circumstance you will have flaky tests if you try to rely on the state of the DOM for conditional testing.</source>
          <target state="translated">그게 다야! 다른 상황에서는 조건부 테스트를 위해 DOM의 상태에 의존하려고하면 비정상적인 테스트를 받게됩니다.</target>
        </trans-unit>
        <trans-unit id="1300f8ec5ea171cc2d2f00e23cbbc505627c6df6" translate="yes" xml:space="preserve">
          <source>That leaves most other commands including all DOM based commands to time out by default after 4000ms.</source>
          <target state="translated">모든 DOM 기반 명령을 포함한 대부분의 다른 명령은 기본적으로 4000ms 후에 시간 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="3b9c1d4c4a52e35083bd36e43700ea84e4aa5c6b" translate="yes" xml:space="preserve">
          <source>That means that your event listener callbacks will be invoked, but don&amp;rsquo;t expect the browser to actually &amp;ldquo;do&amp;rdquo; anything for these events. For the most part, it shouldn&amp;rsquo;t matter, which is why &lt;code&gt;.trigger()&lt;/code&gt; is an excellent stop-gap if the command / event you&amp;rsquo;re looking for hasn&amp;rsquo;t been implemented yet.</source>
          <target state="translated">즉, 이벤트 리스너 콜백이 호출되지만 브라우저가 이러한 이벤트에 대해 실제로 &quot;할&quot;것을 기대하지는 않습니다. 대부분의 경우 중요하지 않으므로 &lt;code&gt;.trigger()&lt;/code&gt; 는 찾고있는 명령 / 이벤트가 아직 구현되지 않은 경우 탁월한 스톱 갭입니다.</target>
        </trans-unit>
        <trans-unit id="b94b5f5a01c6059a803e03e24028191a3878f6cc" translate="yes" xml:space="preserve">
          <source>That means you do not have to visit a login page, type in a username and password and wait for the page to load and/or redirect for every test you run. Cypress gives you the ability to take shortcuts and programmatically log in. With commands like &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, you can send HTTP requests directly, yet have those requests synchronized with the browser. Cookies are automatically sent and applied back. Worried about CORS? Don&amp;rsquo;t be, it is completely bypassed. The power to choose when to test like a user and when to skip slow and repetitive parts is yours.</source>
          <target state="translated">즉, 로그인 페이지를 방문 할 필요가 없으며 사용자 이름과 비밀번호를 입력하고 실행하는 모든 테스트에 대해 페이지가로드 및 / 또는 리디렉션 될 때까지 기다리십시오. Cypress를 사용하면 바로 가기를 사용하고 프로그래밍 방식으로 로그인 할 수 있습니다. &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 같은 명령을 사용하면 HTTP 요청을 직접 보낼 수 있지만 해당 요청을 브라우저와 동기화 할 수 있습니다. 쿠키는 자동으로 전송되어 다시 적용됩니다. CORS가 걱정 되십니까? 절대로 우회하지 마십시오. 사용자처럼 테스트 할 때와 느리고 반복적 인 부분을 건너 뛸시기를 선택할 수있는 능력은 귀하의 몫입니다.</target>
        </trans-unit>
        <trans-unit id="ba33067743b99d97ffad5f5bd4b128afc17a4664" translate="yes" xml:space="preserve">
          <source>That said, modern web testing has a few wrinkles that every team experiences, so here are some quick tips on common situations you&amp;rsquo;re likely to run into.</source>
          <target state="translated">즉, 최신 웹 테스트에는 모든 팀이 경험하는 몇 가지 주름이 있으므로 일반적인 상황에 대한 간단한 팁이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ec74667e0e561a8e38fb999b86e217be3516b2b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! It couldn&amp;rsquo;t be simpler!</source>
          <target state="translated">그게 다야! 더 간단하지 못했습니다!</target>
        </trans-unit>
        <trans-unit id="fefe48b45c69ed04e4712438e1f0ac95b90bfac1" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s no problem - you just have to reinstall them &lt;strong&gt;once&lt;/strong&gt; in the Cypress launched browser. We&amp;rsquo;ll continue to use this Cypress testing profile on subsequent launches so all of your configuration will be preserved.</source>
          <target state="translated">문제 없습니다 . Cypress 시작 브라우저에서 &lt;strong&gt;한 번만&lt;/strong&gt; 다시 설치 &lt;strong&gt;하면&lt;/strong&gt; 됩니다. 이후 출시시이 Cypress 테스트 프로필을 계속 사용하므로 모든 구성이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="65a6fe73a977ff8262258084d334745480bb8a09" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why the test should be written like this.</source>
          <target state="translated">그래서 테스트를 이렇게 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="042507a703992c18597517c49feab94f84062bfe" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Can&amp;rsquo;t start server&amp;rdquo; error displayed in the Desktop-GUI no longer prevents you from interacting in the Desktop App. It now displays as a warning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;#407&lt;/a&gt;.</source>
          <target state="translated">Desktop-GUI에 표시된 &quot;서버를 시작할 수 없습니다&quot;오류가 더 이상 Desktop App에서 상호 작용하는 것을 방해하지 않습니다. 이제 경고로 표시됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;# 407&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cec37857697fa0e206424fca893a94130d50b5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; argument can be set to &amp;ldquo;chrome&amp;rdquo;, &amp;ldquo;canary&amp;rdquo;, &amp;ldquo;chromium&amp;rdquo;, or &amp;ldquo;electron&amp;rdquo; to launch a browser detected on your system. Cypress will attempt to automatically find the installed browser for you.</source>
          <target state="translated">&quot;browser&quot;인수는 &quot;chrome&quot;, &quot;canary&quot;, &quot;chromium&quot;또는 &quot;electron&quot;으로 설정하여 시스템에서 감지 된 브라우저를 시작할 수 있습니다. Cypress가 설치된 브라우저를 자동으로 찾도록 시도합니다.</target>
        </trans-unit>
        <trans-unit id="1be9b25201f7ea05530acb9b484716955fcce74c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; option allows you to specify the path to a custom browser to use with Cypress:</source>
          <target state="translated">&quot;브라우저&quot;옵션을 사용하면 Cypress와 함께 사용할 사용자 정의 브라우저의 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cb2b71ccaaec730e76706cfb04ac5382bce55f4" translate="yes" xml:space="preserve">
          <source>The --ci-build-id, --group, or --parallel flags can only be used when recording</source>
          <target state="translated">--ci-build-id, --group 또는 --parallel 플래그는 기록 할 때만 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="10271412ed48e7b2c3a821760f7f3e21fdc28ef8" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be having issues outside of your control.</source>
          <target state="translated">타사 사이트에서 관리 할 수없는 문제가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45fa958b109e3120bb7b68f4af8ae88f264bebe1" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be running A/B campaigns.</source>
          <target state="translated">타사 사이트에서 A / B 캠페인을 운영하고있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69b160a0d513b1031830e4e9865539c67f783654" translate="yes" xml:space="preserve">
          <source>The 3rd party site may detect you are testing via a script and block you.</source>
          <target state="translated">타사 사이트에서 스크립트를 통해 테스트하고 있음을 감지하고 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ea95e01a638b35f63d896c5a28cc82c06705c81" translate="yes" xml:space="preserve">
          <source>The 3rd party site may have changed or updated its content.</source>
          <target state="translated">타사 사이트가 내용을 변경하거나 업데이트했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d1329eeccee5ff8ee28e3dfe3710d40f17336ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to a new page</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 새로운 페이지</target>
        </trans-unit>
        <trans-unit id="47ae6fd59bc7328ff982b66e65bc0fee55a59d11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; type definition now allows for type &lt;code&gt;Date&lt;/code&gt;. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;#4106&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 유형 정의는 이제 형이 가능 &lt;code&gt;Date&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;# 4106&lt;/a&gt; 에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d6da30a23ecacb7c6f53a464950ef025c72a82e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; command is capable of accessing aliases with a special syntax using the &lt;code&gt;@&lt;/code&gt; character:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 특정 구문 별명 액세스 할 &lt;code&gt;@&lt;/code&gt; 의 문자 :</target>
        </trans-unit>
        <trans-unit id="7260030afa06bcb585f32c860d142af2d281f369" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/route&quot;&gt;Routes instrument panel&lt;/a&gt; now displays the column: &lt;code&gt;Stubbed&lt;/code&gt; instead of &lt;code&gt;Status&lt;/code&gt;, which indicates whether a route is stubbing matching XHR&amp;rsquo;s.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt;경로의 계기판&lt;/a&gt; : 이제 열 표시 &lt;code&gt;Stubbed&lt;/code&gt; 대신 &lt;code&gt;Status&lt;/code&gt; , 경로는 XHR의 일치 스텁 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1c5a8a7995f1ebf4a272d577387cd9a18f7268d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command allows us to pass a callback function that takes the yielded subject as its first argument. This works just like &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, except Cypress automatically &lt;strong&gt;waits and retries&lt;/strong&gt; for everything inside of the callback function to pass.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 명령은 우리가 첫 번째 인수로 수득 주제를 취하는 콜백 함수를 전달할 수 있습니다. Cypress 가 콜백 함수 내부의 모든 항목이 자동으로 &lt;strong&gt;대기하고 다시 시도&lt;/strong&gt; 한다는 점을 제외하고 는 &lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 과 동일하게 작동합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b76fbb9133c48e761b008ec73d333358dd278227" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; type definition now expects its &lt;code&gt;options&lt;/code&gt; to be &lt;code&gt;ObjectLike&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;#3809&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 유형 정의는 이제 기대 &lt;code&gt;options&lt;/code&gt; 으로 &lt;code&gt;ObjectLike&lt;/code&gt; . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;# 3809&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d31d8614c0301eace71fcf608f563b71e4402d1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;주제는&lt;/a&gt; 해야합니다 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbd572b69828dfbeee72d0c970b6599bba7aa480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;선택기 놀이터&lt;/a&gt; 할 수 있도록 API를 공개 :</target>
        </trans-unit>
        <trans-unit id="d6109af2426a8ff9fc0ddb8ef114204a07285fe4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 가이드</target>
        </trans-unit>
        <trans-unit id="22c468919272bac2becb72a65e7a98a73d01814e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 가이드는 당신이 그들을 설정할 수있는 다른 방법을 설명 &lt;em&gt;하여 시험의 외부&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ee7e4f35bd6916f173438d20a40cb83c1418c07b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 가이드는 일반적인 사용 사례를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3f63fbe806d11f13628dfbdcf2b758df62e75aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 가이드는 당신이 당신의 테스트를 위해 환경 변수를 설정할 수있는 다른 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="855b7d4fc17c92cd8289f3dbaa220fd75eb0f9ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; now shows the new &lt;code&gt;VISIT&lt;/code&gt; action.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;명령 로그는&lt;/a&gt; 이제 새 보여줍니다 &lt;code&gt;VISIT&lt;/code&gt; 행동을.</target>
        </trans-unit>
        <trans-unit id="3369a25eaeb1be1170e917a3e514d3c00d809840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; automatically follows these best practices.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;선택기 놀이터는&lt;/a&gt; 자동으로 이러한 모범 사례를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="1f6dc7d06c52601c5e1fac7e400ab08f50a3cca6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; has been updated to automatically prefer &lt;code&gt;data-cy&lt;/code&gt;, &lt;code&gt;data-test&lt;/code&gt; or &lt;code&gt;data-testid&lt;/code&gt; attributes when providing the unique selector for an element. Additionally it now exposes a &lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;public API&lt;/a&gt; that you can use to control how it determines which selector to use. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;#1135&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;선택기 놀이터는&lt;/a&gt; 자동으로 선호에 업데이트 된 &lt;code&gt;data-cy&lt;/code&gt; , &lt;code&gt;data-test&lt;/code&gt; 또는 &lt;code&gt;data-testid&lt;/code&gt; 요소의 독특한 선택을 제공 할 때 속성. 또한 이제는 사용할 선택기를 결정하는 방법을 제어하는 ​​데 사용할 수 있는 &lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;공개 API&lt;/a&gt; 를 제공합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;# 1135&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f21854dc14b78084e411eb4e6ac148235bd66e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line&quot;&gt;CLI&lt;/a&gt; now respects config values and environment variables put in your &lt;code&gt;.npmrc&lt;/code&gt; file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;#1399&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;#1853&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;CLI는&lt;/a&gt; 이제면 설정 값 및 환경 변수는에 넣어 &lt;code&gt;.npmrc&lt;/code&gt; 의 파일. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;# 1399&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;# 1853을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="78c61758652d29d3d43e3f3b0b9eedd5f1d294cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;reporter&lt;/code&gt;&lt;/a&gt; CLI option is now working again.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;reporter&lt;/code&gt; &lt;/a&gt; CLI 옵션은 이제 다시 노력하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8272a960aafd2cbeb1d57e33c88e32d94109494" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/command-line&quot;&gt;Command Line&lt;/a&gt; and the &lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt;&lt;code&gt;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; have been updated to allow passing a &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;#1026&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; 인수&lt;/a&gt; 의 &lt;a href=&quot;../guides/command-line&quot;&gt;명령 행&lt;/a&gt; 과 &lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt; &lt;code&gt;browser&lt;/code&gt; 인수&lt;/a&gt; 의 &lt;a href=&quot;../guides/module-api&quot;&gt;모듈 API는&lt;/a&gt; 통과 할 수 있도록 업데이트 된 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;# 1026&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc0b589727b107f46af4cb4c541a290c2d4ae35f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; module can be &lt;code&gt;required&lt;/code&gt;&lt;/a&gt; in your own node projects to programmatically control Cypress the same way you would from the command line.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; 모듈은 할 수 &lt;code&gt;required&lt;/code&gt; &lt;/a&gt; 프로그램 싸이프레스에게 명령 줄에서하는 것과 같은 방법을 제어하려면 자신의 노드 프로젝트에.</target>
        </trans-unit>
        <trans-unit id="88ac78f61a4bedaff09c94fe6303968173baeebb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; now returns the &lt;code&gt;runUrl&lt;/code&gt; from &lt;code&gt;cypress.run()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;#2596&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt;모듈 API는&lt;/a&gt; 이제 반환 &lt;code&gt;runUrl&lt;/code&gt; 에서 &lt;code&gt;cypress.run()&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;# 2596&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="cf6ef20cff3aa3022180f65f7370d9d0c0269c22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;module API&lt;/a&gt; accepts &lt;code&gt;reporterOptions&lt;/code&gt; as an object literal like it does for the &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;#899&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt;모듈 API는&lt;/a&gt; 받아 &lt;code&gt;reporterOptions&lt;/code&gt; 를 그것은을 위해하는 것처럼 객체 리터럴로 &lt;code&gt;env&lt;/code&gt; 및 &lt;code&gt;config&lt;/code&gt; 속성. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;# 899&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="cb9399edca685c170760ae9bb154627f3edc1ddc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters&quot;&gt;reporter&lt;/a&gt; used during &lt;code&gt;cypress run&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 중 사용 된 &lt;a href=&quot;../tooling/reporters&quot;&gt;기자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7a8815937b1293c5c1f5d85a143bb7125f94687" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;reporter options&lt;/a&gt; used. Supported options depend on the reporter.</source>
          <target state="translated">사용 된 &lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;기자 옵션&lt;/a&gt; . 지원되는 옵션은 기자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="53804cc5358f78ec057779b7130a1abeba81d611" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;error-messages&quot;&gt;error message when Cypress detects that a test has ended early&lt;/a&gt; (there are still commands left in the queue) now displays a list of these commands with a much improved explanation.</source>
          <target state="translated">&lt;a href=&quot;error-messages&quot;&gt;오류 메시지가 때 싸이프레스는 시험이 조기 종료되었음을 감지&lt;/a&gt; (여전히 큐에 남아 명령이 있습니다) 지금은 많이 개선 된 설명과 함께이 명령의 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f9ac329aa1bc70b0ac5cd96526f421ae18aef391" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;jQuery element&lt;/a&gt; that you want to get the selector value for.</source>
          <target state="translated">&lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;의 jQuery 요소&lt;/a&gt; 당신의 선택 값을 얻을 것인지.</target>
        </trans-unit>
        <trans-unit id="52813a3aa71f31b400f20f0538e21ac20fb0e982" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://api.jquery.com/Types/#jQuery&quot;&gt;jQuery element&lt;/a&gt; that you want to get the selector value for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b58ad7025878c6b78f82e08d87a14a6003ff6a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;주제는&lt;/a&gt; 해야합니다 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8136b8e56a18e858f237cccdc2659669bab0f251" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Selector-Playground&quot;&gt;선택기 놀이터&lt;/a&gt; 할 수 있도록 API를 공개 :</target>
        </trans-unit>
        <trans-unit id="62b65b90a6490ab08697c934663e0936da9572a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;환경 변수&lt;/a&gt; 가이드</target>
        </trans-unit>
        <trans-unit id="938108c23113328e76f859569633f729a3f5eac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;환경 변수&lt;/a&gt; 가이드는 당신이 그들을 설정할 수있는 다른 방법을 설명 &lt;em&gt;하여 시험의 외부&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="99c08f03e531700a6c091c0712998f0c21a9ad02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;환경 변수&lt;/a&gt; 가이드는 일반적인 사용 사례를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="34c2e8d5702477aaef6c3b8705259158dfdb536f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;환경 변수&lt;/a&gt; 가이드는 당신이 당신의 테스트를 위해 환경 변수를 설정할 수있는 다른 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fbdd1bb81c0e215f5db1092415e1b120338d03b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink&lt;/a&gt; and &lt;code&gt;example_spec.js&lt;/code&gt; have been updated to reflect the newest changes and features of &lt;code&gt;0.17.1&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;주방 싱크&lt;/a&gt; 와 &lt;code&gt;example_spec.js&lt;/code&gt; 은 의 최신 변경과 기능을 반영하기 위해 업데이트되었습니다 &lt;code&gt;0.17.1&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="424ce0cb0605e2e5a09526573836f577f276c631" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSON schema file&lt;/a&gt; used for &lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;intelligent code completion&lt;/a&gt; for the Cypress configuration file has been updated to match our documentation.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSON 스키마 파일&lt;/a&gt; 에 사용되는 &lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;지능형 코드 완성&lt;/a&gt; 싸이프레스 구성 파일은 우리의 문서와 일치하도록 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="57d103b3c8a16c34ca59cbdbc7cdbfb17d28b855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt; is a service that gives you access to recorded tests - typically when running Cypress tests from your &lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI provider&lt;/a&gt;. The Dashboard provides you insight into what happened when your tests ran.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;싸이프레스 대시 보드는&lt;/a&gt; 당신에게 기록 된 테스트에 대한 액세스를 제공하는 서비스입니다 - 일반적에서 싸이프레스 테스트를 실행할 때 &lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI 제공&lt;/a&gt; . 대시 보드는 테스트 실행시 발생한 상황에 대한 통찰력을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f03e8e973bc635caee6b5976e40bb423bb40d392" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; enables you to view your recorded runs, manage projects, create organizations, invite users and set permissions.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;대시 보드는&lt;/a&gt; 당신이 당신의 기록 실행을 볼 프로젝트를 관리, 조직을 만들고, 사용자와 권한을 설정 초대 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6fa6a40a4314b29795b77940ebf6a3e2617e65b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; npm package&lt;/a&gt; now checks the currently installed version on &lt;code&gt;install&lt;/code&gt; and &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; and does not re-install Cypress if it is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;#396&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; NPM 패키지는&lt;/a&gt; 현재 검사에 현재 설치된 버전 &lt;code&gt;install&lt;/code&gt; 및 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 하고 이미 설치되어있는 경우 싸이프레스을 설치 다시하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;# 396&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9569367021c0f5bc9bf4cc681504592c8ee282dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt;&lt;code&gt;cypress-cli&lt;/code&gt; npm package&lt;/a&gt; has been deprecated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;#316&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt; &lt;code&gt;cypress-cli&lt;/code&gt; NPM 패키지는&lt;/a&gt; 사용되지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;# 316&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="41206f8abe72a1550e1a526c0fe07fadc405e902" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; shows both commands and assertions with passing assertions showing in green.</source>
          <target state="translated">&lt;a href=&quot;test-runner#Command-Log&quot;&gt;명령 로그는&lt;/a&gt; 명령과 녹색으로 표시 통과 주장과 주장을 모두 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="33ff5c94b1e2a8e0b6dfaa5cdd075805268e673e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;types&quot;&lt;/code&gt; will tell the TypeScript compiler to only include type definitions from Cypress. This will address instances where the project also uses &lt;code&gt;@types/chai&lt;/code&gt; or &lt;code&gt;@types/jquery&lt;/code&gt;. Since &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQuery&lt;/a&gt; are namespaces (globals), incompatible versions will cause the package manager (&lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;) to nest and include multiple definitions and cause conflicts.</source>
          <target state="translated">&lt;code&gt;&quot;types&quot;&lt;/code&gt; 단지 싸이프레스 유형 정의를 포함하도록 타이프 스크립트 컴파일러를 말할 것이다. 이것은 프로젝트가 &lt;code&gt;@types/chai&lt;/code&gt; 또는 &lt;code&gt;@types/jquery&lt;/code&gt; 도 사용하는 인스턴스를 처리합니다 . 때문에 &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;차이&lt;/a&gt; 와 &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;JQuery와&lt;/a&gt; 네임 스페이스 (전역)이 있으며, 호환되지 않는 버전의 패키지 관리자 (원인이됩니다 &lt;code&gt;yarn&lt;/code&gt; 또는 &lt;code&gt;npm&lt;/code&gt; 둥지를) 여러 정의와 원인 충돌을 포함한다.</target>
        </trans-unit>
        <trans-unit id="e32f0411f34f26707ececffb5f88e36e3221840d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt; flag is used to either group or parallelize multiple runs together.</source>
          <target state="translated">&lt;code&gt;--ci-build-id&lt;/code&gt; 플래그는 두 그룹 모두에 사용되거나 함께 여러 실행을 병렬화한다.</target>
        </trans-unit>
        <trans-unit id="44eeb2a207152e869b8bea3c9a031509a4adbe25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt;, &lt;code&gt;--group&lt;/code&gt;, or &lt;code&gt;--parallel&lt;/code&gt; flags can only be used when recording</source>
          <target state="translated">&lt;code&gt;--ci-build-id&lt;/code&gt; , &lt;code&gt;--group&lt;/code&gt; , 또는 &lt;code&gt;--parallel&lt;/code&gt; 플래그는 경우에만 녹화 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="043a9756e0778be585824f05b0212c11215f0e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--silent&lt;/code&gt; flag should now be respected during &lt;code&gt;npm install cypress&lt;/code&gt; on all OSes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;#817&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--silent&lt;/code&gt; 플래그는 지금 동안 존중되어야 &lt;code&gt;npm install cypress&lt;/code&gt; 모든 운영체제에. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;# 817&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="09ff12ab5069dfb91af35ee8b5e56de69f1971ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--spec&lt;/code&gt; option is now normalized against the current working directory &lt;code&gt;cwd&lt;/code&gt; instead of the project that you are running Cypress in. That means passing a path from the command line to a spec file will now work even when the project path is not &lt;code&gt;cwd&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;#1159&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--spec&lt;/code&gt; 옵션이 이제 현재 작업 디렉토리에 대해 정규화는 &lt;code&gt;cwd&lt;/code&gt; 당신이 싸이프레스을 실행하는 대신 프로젝트의. 프로젝트 경로가되지 않은 경우 사양 파일에 명령 줄에서 경로를 통과하는 그 말은 지금도 작동합니다 &lt;code&gt;cwd&lt;/code&gt; . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;# 1159&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30e277b186a082f5b8bce2da885a46971e208804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--spec&lt;/code&gt; option now works correctly. You now must pass a relative or absolute path to your spec file. This is much less confusing, allows you to easily autocomplete entries from bash, and will support &lt;code&gt;unitFolder&lt;/code&gt; later when it&amp;rsquo;s added. Assuming you want to run a spec file that is located in &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; you would pass: &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt;. Previously you could just pass &lt;code&gt;--spec foo_spec.js&lt;/code&gt; which now no longer works (and was broken anyway). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;#120&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-s&lt;/code&gt; 또는 &lt;code&gt;--spec&lt;/code&gt; 옵션이 올바르게 작동합니다. 이제 스펙 파일의 상대 또는 절대 경로를 전달해야합니다. 이것은 훨씬 덜 혼란스럽고 bash에서 항목을 쉽게 자동 완성 할 수 &lt;code&gt;unitFolder&lt;/code&gt; 나중에 추가 될 때 unitFolder 를 지원 합니다. 당신이에 위치한 스펙 파일을 실행하려는 가정 &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; 당신이 통과 할 것 : &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt; . 이전에는 &lt;code&gt;--spec foo_spec.js&lt;/code&gt; 를 전달하면 더 이상 작동하지 않으며 어쨌든 고장났습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;# 120&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4b8adb1081d10255096dd62976255ee26bd91555" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in combination with the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command in order to simulate character sequences while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;. In order to keep the modifier key active, &lt;code&gt;{release: false}&lt;/code&gt; should be passed to the options of the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 명령은 또한 조합 키 개질제로 발사 될 수있다 &lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 와 같은 클릭하는 동안 시뮬레이션 문자 시퀀스를 위해 명령 &lt;code&gt;ALT + click&lt;/code&gt; . 수정 자 키를 활성 상태로 유지하려면 &lt;code&gt;{release: false}&lt;/code&gt; 가 &lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 명령 의 옵션으로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6f7b3f498b8757ad79ab4be5c015a892d23a15e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 명령은 또한 다음과 같은 버튼을 클릭하는 동안 키 조합을 들고 시뮬레이션하기 위해 키 수정으로 발사 할 수있다 &lt;code&gt;ALT + click&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="063ad032ddddf455cf82727b73ab8673b62c65a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command will automatically wait until multiple built-in assertion checks like these pass, and then it will attempt to click just once.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 여러 내장까지이 통과 같은 주장 검사 명령은 자동으로 대기하고 그냥 한 번 클릭을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="70e519f352ed6ae4abc18571991a2b7de3a99b80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.dblclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while double clicking, such as &lt;code&gt;SHIFT + double click&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 명령은 키 조합을 들고 시뮬레이션하기 위해 키 수정으로 발사 할 수있다와 같은 더블 클릭, 동안 &lt;code&gt;SHIFT + double click&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="550c4b5ffe42c6bf012845dba6df28e2e12ee5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.rightclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while right clicking, such as &lt;code&gt;ALT + rightclick&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.rightclick()&lt;/code&gt; 명령은 키 조합을 들고 시뮬레이션하기 위해 키 수정으로 발사 할 수있다 등을 마우스 오른쪽 버튼으로 클릭 반면, &lt;code&gt;ALT + rightclick&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db5c80bfb7ceeed915785b70debfbf07aec2fff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when it&amp;rsquo;s already as simple as typing: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.shouldBeVisible()&lt;/code&gt; 이 입력 한 간단 이미 때 사용자 정의 명령은 문제 또는 추상화 가치가되지 않습니다 : &lt;code&gt;.should('be.visible')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b2e1a0c076d3d149f58db0f51fc1e9da22f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when you can already use: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.shouldBeVisible()&lt;/code&gt; 사용자 정의 명령이 문제하거나 이미 사용할 수있는 추상화 가치가되지 않습니다 : &lt;code&gt;.should('be.visible')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98125cfaed04874547ce6ee322782dcab25e61ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt;, &lt;code&gt;4x&lt;/code&gt; group prefix used here is an adopted convention to indicate the level of parallelism for each run, and &lt;em&gt;is not required or essential&lt;/em&gt;.</source>
          <target state="translated">여기에 사용 된 &lt;code&gt;1x&lt;/code&gt; , &lt;code&gt;2x&lt;/code&gt; , &lt;code&gt;4x&lt;/code&gt; 그룹 접두사는 각 실행의 병렬 수준을 나타 내기 위해 채택 된 규칙 &lt;em&gt;이며 필수 또는 필수는 아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="46225bb45e238c99bcdc7d8274950fa51f8d975e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env option has been removed in favor of the &lt;code&gt;debug&lt;/code&gt; module and &lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt;&lt;code&gt;DEBUG=cypress:*&lt;/code&gt;&lt;/a&gt; usage.</source>
          <target state="translated">&lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; 의 ENV 옵션이 찬성 제거 된 &lt;code&gt;debug&lt;/code&gt; 모듈 &lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt; &lt;code&gt;DEBUG=cypress:*&lt;/code&gt; &lt;/a&gt; 사용.</target>
        </trans-unit>
        <trans-unit id="6f5844326f3b3e375be74d9d6317c78453492e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_VERSION&lt;/code&gt; environment variable is gone because now the version of the binary is controlled by the npm module version. If for some reason you want to download the binary of a different version you can use the new &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; environment variable - but you&amp;rsquo;ll get a warning message when the versions don&amp;rsquo;t match.</source>
          <target state="translated">&lt;code&gt;CYPRESS_VERSION&lt;/code&gt; 의 이진의 현재 버전은 NPM 모듈 버전에 의해 제어되기 때문에 환경 변수가 사라 졌어요. 어떤 이유로 다른 버전의 바이너리를 다운로드하려는 경우 새로운 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 환경 변수를 사용할 수 있지만 버전이 일치하지 않으면 경고 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e5011852afde7df403868c3466295cfe652b2d3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Linux&lt;/code&gt; version of Cypress now works correctly for GUI Desktop versions (tested on Ubuntu Desktop). Previously it would only worked during &lt;code&gt;cypress run&lt;/code&gt; in server versions. The &lt;code&gt;tray&lt;/code&gt; used in OSX does not work with the &lt;code&gt;Linux&lt;/code&gt;, so in &lt;code&gt;Linux&lt;/code&gt; we just use a standard window + menu.</source>
          <target state="translated">Cypress 의 &lt;code&gt;Linux&lt;/code&gt; 버전은 이제 GUI 데스크탑 버전 (Ubuntu Desktop에서 테스트)에 대해 올바르게 작동합니다. 이전에는 서버 버전에서 &lt;code&gt;cypress run&lt;/code&gt; 하는 동안에 만 작동했습니다 . &lt;code&gt;tray&lt;/code&gt; OSX에서 사용은 함께 일을하지 않는 &lt;code&gt;Linux&lt;/code&gt; 정도면, &lt;code&gt;Linux&lt;/code&gt; 우리는 표준 윈도우 + 메뉴를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6b9dbead8280cc73432d72db75d4745f240556bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VISIT&lt;/code&gt; displays a &lt;strong&gt;blue pending state&lt;/strong&gt; until the page finishes loading.</source>
          <target state="translated">&lt;code&gt;VISIT&lt;/code&gt; 디스플레이한다 &lt;strong&gt;블루 보류 상태&lt;/strong&gt; 페이지 완료 로딩 될 때까지.</target>
        </trans-unit>
        <trans-unit id="1dd2a1a80c2da68ac838583516aa38396e181f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__cypress.initial&lt;/code&gt; cookie should now be removed during any &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, which should fix some edge cases with the proxy accidentally injecting content when it shouldn&amp;rsquo;t. We also added a ton more e2e tests covering these edge cases and other behavior.</source>
          <target state="translated">&lt;code&gt;__cypress.initial&lt;/code&gt; 쿠키는 이제 어떤 동안 제거되어야 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 말아야 때 우연히 콘텐츠를 주입 프록시 일부 엣지의 경우를 해결한다. 또한 이러한 엣지 케이스 및 기타 동작을 다루는 더 많은 e2e 테스트를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="daf8f5c114743a6ad859bf6d6e8f7dff388c080a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:run&lt;/code&gt; event fires after a run is finished. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after:run&lt;/code&gt; 실행 후 이벤트가 발생이 완료됩니다. 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때만 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="c2581819beffec1be3cd9651d1c0427aa689e7b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:spec&lt;/code&gt; event fires after a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after:spec&lt;/code&gt; 스펙 파일 이후에 이벤트가 발생이 실행됩니다. 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때만 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="6bfe4cb6c9e9f7a2ff4e7b5632ce48eff7cd26cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:run&lt;/code&gt; event fires before a run starts. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before:run&lt;/code&gt; 실행이 시작되기 전에 이벤트가 발생합니다. 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때만 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="bf468fdd59ff7be0e5ec2caa895f89d5b107723e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:spec&lt;/code&gt; event fires before a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before:spec&lt;/code&gt; 스펙 파일 전에 이벤트 화재가 실행됩니다. 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때만 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="bd21065e604d16761bbd7ccfafc6fd4e5f8878fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blackout&lt;/code&gt; argument passed in via &lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&amp;ldquo;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;blackout&lt;/code&gt; 통해 전달 된 인수 &lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; () &quot;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4967ffcb21a340a6a01361a7852171c5f58d68d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;button&lt;/code&gt; element is yielded</source>
          <target state="translated">&lt;code&gt;button&lt;/code&gt; 소자가 수득된다</target>
        </trans-unit>
        <trans-unit id="eabefb6080c3d4b47507ca37237114e43fda7e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ciBuildId&lt;/code&gt; is automatically detected if you are running Cypress in most &lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CI providers&lt;/a&gt;. Please review the &lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;natively recognized environment variables&lt;/a&gt; for your CI provider.</source>
          <target state="translated">&lt;code&gt;ciBuildId&lt;/code&gt; 는 가장 사이프러스 실행하는 경우 자동으로 감지됩니다 &lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CI 공급자&lt;/a&gt; . CI 제공자에 대해 &lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;기본적으로 인식 된 환경 변수&lt;/a&gt; 를 검토하십시오 .</target>
        </trans-unit>
        <trans-unit id="e37f910d367fbd5f303f01cbba5bd5998da27d4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; event now properly fires on &lt;code&gt;file&lt;/code&gt; when manually closing the browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;#1560&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; 이벤트가 제대로에 발사 &lt;code&gt;file&lt;/code&gt; 수동으로 브라우저를 닫을 때. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;# 1560&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9c96ee1c486e67f1cf2d1e8ccf94af0c5fef0970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; object also includes the following extra values that are not part of the standard configuration. &lt;strong&gt;These values are read only and cannot be modified from the plugins file.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 객체는 표준 구성의 일부가 아닌 별도의 값은 다음을 포함한다. &lt;strong&gt;이러한 값은 읽기 전용이며 플러그인 파일에서 수정할 수 없습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d97dddea49f484c9f666e123441557cdabf1eaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contain&lt;/code&gt; assertion chainer from &lt;code&gt;chai-jquery&lt;/code&gt; has been extended to match the same selector logic as &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; - meaning it now checks the &lt;code&gt;value&lt;/code&gt; of &lt;code&gt;input[type=submit]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chai-jquery&lt;/code&gt; 의 &lt;code&gt;contain&lt;/code&gt; 어설 션 체인은 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 와 동일한 선택기 논리와 일치하도록 확장되었습니다. 이제 &lt;code&gt;input[type=submit]&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; 을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="40b8f07ad3eb8b4e9318ceffd2c25ecf2a1bddec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy.now()&lt;/code&gt; command is an internal command and may change in the future.</source>
          <target state="translated">&lt;code&gt;cy.now()&lt;/code&gt; 명령은 내부 명령입니다 및 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="762732ec80ffe579ad3ccf14d5b85b189cfc61c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy&lt;/code&gt; object is bound to each individual test. Events bound to &lt;code&gt;cy&lt;/code&gt; will &lt;strong&gt;automatically&lt;/strong&gt; be removed when the test ends. You don&amp;rsquo;t have to worry about cleanup, and your event listeners will only be called for the duration of the single test.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 목적은 각 테스트에 결합된다. 바인딩 이벤트 &lt;code&gt;cy&lt;/code&gt; 것입니다 &lt;strong&gt;자동으로&lt;/strong&gt; 할 때 테스트 끝을 제거 할 수. 정리에 대해 걱정할 필요가 없으며 단일 테스트 기간 동안 만 이벤트 리스너가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e0ddc08028d5b2d6b7847239cc1c09aa5b1f03da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress ci&lt;/code&gt; command has been deprecated</source>
          <target state="translated">&lt;code&gt;cypress ci&lt;/code&gt; 명령은 사용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="da72614877d452a5438247d1993f841f5cb7d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress&lt;/code&gt; npm package now has the correct &lt;code&gt;engines&lt;/code&gt; set in &lt;code&gt;package.json&lt;/code&gt;. This was accidentally getting overwritten and caused errors when &lt;code&gt;engineStrict&lt;/code&gt; was set in environments using &lt;code&gt;node&lt;/code&gt; older than &lt;code&gt;8.2.1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;#1373&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress&lt;/code&gt; NPM 패키지는 이제 올바른 있습니다 &lt;code&gt;engines&lt;/code&gt; 에서 설정 &lt;code&gt;package.json&lt;/code&gt; 을 . &lt;code&gt;8.2.1&lt;/code&gt; 보다 오래된 &lt;code&gt;node&lt;/code&gt; 사용하는 환경에서 &lt;code&gt;engineStrict&lt;/code&gt; 를 설정할 때 실수로 덮어 쓰여지고 오류가 발생 했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;# 1373&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cab61747885842a8f18b61546f3bf695d1c16e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data-cy&lt;/code&gt; attribute will not change from CSS style or JS behavioral changes, meaning it&amp;rsquo;s not coupled to the &lt;strong&gt;behavior&lt;/strong&gt; or &lt;strong&gt;styling&lt;/strong&gt; of an element.</source>
          <target state="translated">&lt;code&gt;data-cy&lt;/code&gt; 속성은이 결합 아니에요 의미, CSS 스타일 또는 JS 행동 변화에서 변경되지 않습니다 &lt;strong&gt;행동&lt;/strong&gt; 이나 &lt;strong&gt;스타일링&lt;/strong&gt; 요소의.</target>
        </trans-unit>
        <trans-unit id="e9302ffb632f7759378030d24e5769c551ef97fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;example_spec.js&lt;/code&gt; file that gets seeded on a new project no longer fails on &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;#414&lt;/a&gt;.</source>
          <target state="translated">새 프로젝트에서 시드 되는 &lt;code&gt;example_spec.js&lt;/code&gt; 파일은 더 이상 &lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 에서 실패하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;# 414&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b78733791e2eef9567e667ecd468930a65f594d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function has the following properties:</source>
          <target state="translated">콜백 함수에 전달 된 &lt;code&gt;file&lt;/code&gt; 객체에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="052bc12176eb387ef261b7c38e9f2921641685aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;Event Emitter&lt;/a&gt;.</source>
          <target state="translated">콜백 함수에 전달 된 &lt;code&gt;file&lt;/code&gt; 객체는 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;이벤트 이미 터&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ab13214b3de1bf10b4be9e1c5b6c605fb7104e91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;includes&lt;/code&gt; assertion chainers now correctly work the same as &lt;code&gt;contain&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt; assertion chainers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">은 &lt;code&gt;include&lt;/code&gt; 하고 &lt;code&gt;includes&lt;/code&gt; 으로 주장 chainers가 올바르게 같은 일을 &lt;code&gt;contain&lt;/code&gt; 하고 &lt;code&gt;contains&lt;/code&gt; 주장 chainers을. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;# 4833&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d585f72eba1877827974f6d07bab61ed42d3c32d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nyc&lt;/code&gt; and &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; only instrument the application code and not 3rd party dependencies from &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nyc&lt;/code&gt; 과 &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; 에서만 악기 응용 프로그램 코드가 아닌 제 3 자 종속성 &lt;code&gt;node_modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8ef2e4215ce34afc26973dfcddb79af11b61795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be replaced.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가지고 &lt;code&gt;method&lt;/code&gt; 교환한다.</target>
        </trans-unit>
        <trans-unit id="fa87337659ecf6f626ddfb0f5f234dff0425e19a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be wrapped.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 가지고 &lt;code&gt;method&lt;/code&gt; 래핑한다.</target>
        </trans-unit>
        <trans-unit id="64ee58e2ef1b91755a13f5dcecdae2e7e19ea678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt; callbacks provide an opportunity to synchronously change the DOM to create a more consistent state for the screenshot.</source>
          <target state="translated">&lt;code&gt;onBeforeScreenshot&lt;/code&gt; 및 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 콜백은 동 기적으로 스크린 샷을위한보다 일관된 상태를 만들기 위해 DOM을 변경 할 수있는 기회를 제공한다.</target>
        </trans-unit>
        <trans-unit id="9cfb7f4e385fce64e67f24a24b145867511b78ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onChange&lt;/code&gt; event callback for React now works (again) on &lt;code&gt;input&lt;/code&gt; type &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;#816&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;#770&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;onChange&lt;/code&gt; 지금 반작용에 대한 이벤트 콜백에 (다시) 작동 &lt;code&gt;input&lt;/code&gt; 타입 &lt;code&gt;number&lt;/code&gt; 또는 &lt;code&gt;email&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;# 816&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;# 770&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a8e4a18a77addd421bf47f34a9ccc7dbc68b4a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onConsole&lt;/code&gt; information related to an XHR has been updated to make it easier to understand why a route was or was not stubbed, and its associated request and response headers.</source>
          <target state="translated">&lt;code&gt;onConsole&lt;/code&gt; 의 XHR에 관한 정보는 경로이었다 또는 스텁 및 관련 요청 및 응답 헤더되지 않은 이유를 쉽게 이해할 수 있도록 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="c6604feee55fbaf272de5bf1af41cff42af8bbcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluginsFile&lt;/code&gt; now supports an absolute path instead of just a relative one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;#1837&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pluginsFile&lt;/code&gt; 는 이제 대신 상대적인 하나의 절대 경로를 지원한다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;# 1837&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bcba02b0569457fff68717bd919b31b6b705f34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prevSubject&lt;/code&gt; accepts the following values:</source>
          <target state="translated">&lt;code&gt;prevSubject&lt;/code&gt; 는 다음 값을 사용할 수</target>
        </trans-unit>
        <trans-unit id="0b0a9e330363566e36f525bfc270f9b6fcce68b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; in now displayed in the configuration in the Test Runner settings like all other configuration values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;#4500&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;projectId&lt;/code&gt; 지금의 다른 모든 구성 값과 같은 테스트 러너 설정의 구성에 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;# 4500&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b181b8b380eb43c7ae2b0e325431d558b459f24f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; is a 6 character string in your &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;projectId&lt;/code&gt; 은 당신의 6 문자열입니다 &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42765373465d4545e353b081cc42f44a711e296e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectedToUrl&lt;/code&gt; property is a special Cypress property that normalizes the URL the browser would normally follow during a redirect.</source>
          <target state="translated">&lt;code&gt;redirectedToUrl&lt;/code&gt; 의 속성은 브라우저가 정상적으로 리디렉션 동안 따를 URL을 정규화 특별한 싸이프레스의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="668eca0dcf90d4d829112b3d5b89a66fcdec89ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporter&lt;/code&gt; can now be resized. We persist this state locally so it should &amp;ldquo;stick&amp;rdquo; between browser launches / app restarts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;#204&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;code&gt;reporter&lt;/code&gt; 크기를 조정할 수 있습니다. 이 상태는 로컬로 유지되므로 브라우저 시작 / 앱 다시 시작 사이에 &quot;고정&quot;되어야합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;# 204&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4c3cb66ac6d9b1de6b74e7894fa4fa33571ee979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routeHandler&lt;/code&gt; defines what will happen with a request if the &lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`routeMatcher`&lt;/a&gt; matches. It can be used to &lt;a href=&quot;#Stubbing-a-response&quot;&gt;statically define a response&lt;/a&gt; for matching requests, or a function can be passed to &lt;a href=&quot;#Intercepting-a-request&quot;&gt;dynamically intercept the outgoing request&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;routeHandler&lt;/code&gt; 은 은 if 요청에 무슨 일이 일어날 지 정의 &lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`routeMatcher`의&lt;/a&gt; 일치. 일치하는 요청에 &lt;a href=&quot;#Stubbing-a-response&quot;&gt;대한 응답&lt;/a&gt; 을 정적으로 정의하는 데 사용 하거나 &lt;a href=&quot;#Intercepting-a-request&quot;&gt;, 나가는 요청&lt;/a&gt; 을 동적으로 가로 채기 위해 함수를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03124703c0ad29e37f8b4ef25df3f3bca3e798bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportFolder&lt;/code&gt; option was removed from Cypress in version &lt;a href=&quot;changelog#0-18-0&quot;&gt;&lt;code&gt;0.18.0&lt;/code&gt;&lt;/a&gt; and was replaced by module support and the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">&lt;code&gt;supportFolder&lt;/code&gt; 의 옵션은 버전에 싸이프레스에서 제거 &lt;a href=&quot;changelog#0-18-0&quot;&gt; &lt;code&gt;0.18.0&lt;/code&gt; &lt;/a&gt; 및 모듈 지원에 의해 대체되었다 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; 의&lt;/a&gt; 구성 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="dfeb06f53eff6ab5252769c37896097dc747f94c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; or text content of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; to be selected.</source>
          <target state="translated">&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 의 &lt;code&gt;value&lt;/code&gt; 또는 텍스트 내용을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="1b8a61c4209d89efa493d0ead6343e9969628fcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;watchForFileChanges&lt;/code&gt; property is only in effect when running Cypress using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;watchForFileChanges&lt;/code&gt; 의 사용 싸이프레스을 실행할 때 속성은 유효 아니라 &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fecf04c2f6948f8610e27add339db0cedcba4851" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whitelist&lt;/code&gt; callback function of &lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt;&lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt;&lt;/a&gt; now receives a &lt;code&gt;cookie object&lt;/code&gt; instead of just the &lt;code&gt;cookies name&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt; &lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;whitelist&lt;/code&gt; 콜백 함수는 이제 &lt;code&gt;cookies name&lt;/code&gt; 대신 문자열로 &lt;code&gt;cookie object&lt;/code&gt; 를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="ee83369615eb53c7a0cbfc50a828a09c40b458e6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;total&lt;/em&gt; amount of time Cypress will wait for &lt;em&gt;all&lt;/em&gt; of the assertions to pass is for the duration of the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;timeout&lt;/code&gt; (which is 4 seconds).</source>
          <target state="translated">Cypress가 &lt;em&gt;모든&lt;/em&gt; 어설 션이 전달 될 때까지 대기 하는 &lt;em&gt;총&lt;/em&gt; 시간 은 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; 기간 (4 초)입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e160536966d7accaad011259f2eda48b6c0b432" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;before&lt;/strong&gt; snapshot is taken prior to the click event firing. The &lt;strong&gt;after&lt;/strong&gt; snapshot is taken immediately after the click event. Although this click event caused our browser to load a new page, it&amp;rsquo;s not an instantaneous transition. Depending on how fast your page loaded, you may still see the same page, or a blank screen as the page is unloading and in transition.</source>
          <target state="translated">&lt;strong&gt;전에&lt;/strong&gt; 스냅 샷은 클릭 이벤트 발사 이전에 취해진 다. &lt;strong&gt;이후의&lt;/strong&gt; 스냅 샷은 클릭 이벤트 후 즉시 촬영됩니다. 이 클릭 이벤트로 인해 브라우저가 새 페이지를로드했지만 순간적인 전환은 아닙니다. 페이지로드 속도에 따라 페이지가 언로드되고 전환되는 동안 여전히 동일한 페이지 또는 빈 화면이 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d7cc88ff7777390469d48f898273cd69d887962" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;only&lt;/strong&gt; way to do conditional testing on the DOM is if you are 100% sure that the state has &amp;ldquo;settled&amp;rdquo; and there is no possible way for it to change.</source>
          <target state="translated">DOM에서 조건부 테스트를 수행 하는 &lt;strong&gt;유일한&lt;/strong&gt; 방법은 상태가 &quot;정착&quot;되었는지 100 % 확신 할 수 있고이를 변경할 수있는 방법이없는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="f751a1d4e12183e384450022e001882bf7637014" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;sweet spot&lt;/strong&gt; of Cypress is to be used as a tool to test your own application &lt;strong&gt;as you build it&lt;/strong&gt;. It is built for developers and QA engineers, not manual testers or exploratory testing.</source>
          <target state="translated">&lt;strong&gt;스위트 스폿 (sweet spot)&lt;/strong&gt; 싸이프레스의 자신의 응용 프로그램을 테스트하기위한 도구로서 사용되는 &lt;strong&gt;당신이 그것을 구축으로&lt;/strong&gt; . 수동 테스터 나 탐색 테스트가 아닌 개발자 및 QA 엔지니어를 위해 제작되었습니다.</target>
        </trans-unit>
        <trans-unit id="ff8e3b379e3ce478ef2fb3e0214f73076e68396b" translate="yes" xml:space="preserve">
          <source>The AUT also displays in the size and orientation specified in your tests. You can change the size or orientation with the &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command or in your &lt;a href=&quot;../references/configuration#Viewport&quot;&gt;Cypress configuration&lt;/a&gt;. If the AUT does not fit within the current browser window, it is scaled appropriately to fit within the window.</source>
          <target state="translated">AUT는 테스트에 지정된 크기와 방향으로도 표시됩니다. &lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 명령 또는 &lt;a href=&quot;../references/configuration#Viewport&quot;&gt;Cypress 구성&lt;/a&gt; 에서 크기 또는 방향을 변경할 수 있습니다 . AUT가 현재 브라우저 창에 맞지 ​​않으면 창에 맞도록 적절하게 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="4e980d08fd113d90f36052ec1c8d470b3662ceaf" translate="yes" xml:space="preserve">
          <source>The Aurelia CLI is the official command line tool for Aurelia.</source>
          <target state="translated">Aurelia CLI는 Aurelia의 공식 명령 줄 도구입니다.</target>
        </trans-unit>
        <trans-unit id="9e737aee3a667e0afcffa08b6a9b485bbb2757bb" translate="yes" xml:space="preserve">
          <source>The Bar Chart View charts the lengths of each spec file. This view is helpful to determine which spec files or tests are running longer than others.</source>
          <target state="translated">막대 차트보기는 각 스펙 파일의 길이를 차트로 표시합니다. 이보기는 어떤 스펙 파일 또는 테스트가 다른 스펙 파일보다 오래 실행되는지 판별하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="66f6088f517b6bc02477752b800bccb6f630afce" translate="yes" xml:space="preserve">
          <source>The Bar Chart View visualizes the &lt;strong&gt;duration&lt;/strong&gt; of your spec files relative to each other.</source>
          <target state="translated">막대 차트보기는 스펙 파일 의 &lt;strong&gt;지속 시간&lt;/strong&gt; 을 서로에 대해 시각화합니다 .</target>
        </trans-unit>
        <trans-unit id="723da8cc4f043fdfe9576683583b7579ff227eba" translate="yes" xml:space="preserve">
          <source>The Browserify Preprocessor handles:</source>
          <target state="translated">Browserify 전처리 기는 다음을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="5b3df72f1bedfcacc825ec2eb969c8aa30097437" translate="yes" xml:space="preserve">
          <source>The CLI command tells Cypress to use the &lt;code&gt;mocha-multi-reporters&lt;/code&gt; module and points at the config file.</source>
          <target state="translated">CLI 명령은 Cypress에 &lt;code&gt;mocha-multi-reporters&lt;/code&gt; 모듈을 사용하고 구성 파일을 가리 키 도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="2a88f2beead5608e18be7764214944cf40ca64cb" translate="yes" xml:space="preserve">
          <source>The CLI now sends &lt;code&gt;arch&lt;/code&gt; parameter to the download server so we can build and serve multiple binaries for Windows + Linux.</source>
          <target state="translated">CLI는 이제 &lt;code&gt;arch&lt;/code&gt; 매개 변수를 다운로드 서버로 전송 하여 Windows + Linux 용 다중 바이너리를 빌드하고 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48de35cf1f4bc591562ca5e714e9b8e7f03cd8fc" translate="yes" xml:space="preserve">
          <source>The CLI now treats &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; and &lt;code&gt;help&lt;/code&gt; as valid commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;#645&lt;/a&gt;.</source>
          <target state="translated">CLI는 이제 &lt;code&gt;-h&lt;/code&gt; 및 &lt;code&gt;--help&lt;/code&gt; 및 &lt;code&gt;help&lt;/code&gt; 를 유효한 명령으로 취급 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;# 645&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e28b00e7a7757e089a846796d6c8fc308705808b" translate="yes" xml:space="preserve">
          <source>The Chrome browser is evergreen - meaning it will automatically update itself, sometimes causing a breaking change in your automated tests. We host &lt;a href=&quot;https://chromium.cypress.io&quot;&gt;chromium.cypress.io&lt;/a&gt; with links to download a specific released version of Chrome (dev, Canary and stable) for every platform.</source>
          <target state="translated">Chrome 브라우저는 항상 녹색입니다. 즉, 자동 업데이트되어 자동 테스트에서 주요 변경 사항이 발생할 수 있습니다. 우리는 &lt;a href=&quot;https://chromium.cypress.io&quot;&gt;chromeium.cypress.io&lt;/a&gt; 를 호스팅 하여 모든 플랫폼에 대해 특정 릴리스 버전의 Chrome (dev, Canary 및 안정 버전)을 다운로드 할 수있는 링크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="67cd4484df6cf7896131e72ec5ed216b322ca1e4" translate="yes" xml:space="preserve">
          <source>The Chromium Renderer process just crashed</source>
          <target state="translated">Chromium 렌더러 프로세스가 중단되었습니다</target>
        </trans-unit>
        <trans-unit id="7522c5445757f07f38c1d122c5b615225e543e80" translate="yes" xml:space="preserve">
          <source>The Cypress API is not an exact 1:1 implementation of Promises. They have Promise like qualities and yet there are important differences you should be aware of.</source>
          <target state="translated">Cypress API는 약속의 정확한 1 : 1 구현이 아닙니다. 그들은 자질과 같은 약속을 가지고 있지만 알아야 할 중요한 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="149fd7237e1bd703353a2a711876ba2f11bbfdd4" translate="yes" xml:space="preserve">
          <source>The Cypress Chrome extension now has a static ID of &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt;. This allows Cypress to be added to extension whitelists for those working under corporate policies that prohibit extensions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;#3673&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;#1239&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;#2494&lt;/a&gt;.</source>
          <target state="translated">Cypress Chrome 확장 프로그램의 정적 ID는 &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt; 입니다. 이를 통해 확장을 금지하는 회사 정책 하에서 작업하는 사람들을 위해 Cypress를 확장 화이트리스트에 추가 할 수 있습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;# 3673&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;# 1239&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;2494 #&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ce5dc2d981848beaf412425e818c7bd0de9c8ad" translate="yes" xml:space="preserve">
          <source>The Cypress CircleCI Orb is a piece of configuration set in your &lt;code&gt;circle.yml&lt;/code&gt; file to correctly install, cache and run Cypress with very little effort.</source>
          <target state="translated">Cypress CircleCI Orb는 약간의 노력으로 Cypress를 올바르게 설치, 캐시 및 실행하기 위해 &lt;code&gt;circle.yml&lt;/code&gt; 파일에 설정된 구성입니다 .</target>
        </trans-unit>
        <trans-unit id="ed0f7f2cc7404f16f5197b863dce897487d0e154" translate="yes" xml:space="preserve">
          <source>The Cypress Dashboard can integrate your Cypress tests with your GitHub workflow via commit &lt;a href=&quot;#Status-checks&quot;&gt;status checks&lt;/a&gt; and &lt;a href=&quot;#Pull-request-comments&quot;&gt;pull-request comments&lt;/a&gt;.</source>
          <target state="translated">Cypress 대시 보드는 커밋 &lt;a href=&quot;#Status-checks&quot;&gt;상태 확인&lt;/a&gt; 및 &lt;a href=&quot;#Pull-request-comments&quot;&gt;풀 요청 주석을&lt;/a&gt; 통해 Cypress 테스트를 GitHub 워크 플로우와 통합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="734453ed8ccec92af8bcdb6d41aa861afb986659" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App can provide detailed test information within pull requests via comments that include:</source>
          <target state="translated">Cypress GitHub 앱은 다음을 포함하는 주석을 통해 풀 요청 내에서 자세한 테스트 정보를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c0b9da1ca25904d85c4ce3b84414f74f15947d2" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App reports commit status checks in two separate styles:</source>
          <target state="translated">Cypress GitHub 앱은 커밋 상태 확인을 두 가지 별도 스타일로보고합니다.</target>
        </trans-unit>
        <trans-unit id="6bfd4432efd54a8d4e5539e7e47d892a552fef1b" translate="yes" xml:space="preserve">
          <source>The Cypress Test Runner attempts to find all compatible browsers on the user&amp;rsquo;s machine. The drop down to select a different browser is in the top right corner of the Test Runner.</source>
          <target state="translated">Cypress Test Runner는 사용자 컴퓨터에서 호환되는 모든 브라우저를 찾으려고합니다. 다른 브라우저를 선택하기위한 드롭 다운은 Test Runner의 오른쪽 상단에 있습니다.</target>
        </trans-unit>
        <trans-unit id="47e67ff0ae6e0340197ee3e515f8f8c3551ab353" translate="yes" xml:space="preserve">
          <source>The Cypress Test with &lt;code&gt;cy.invoke()&lt;/code&gt; awaiting the promise:</source>
          <target state="translated">약속을 기다리는 &lt;code&gt;cy.invoke()&lt;/code&gt; 를 사용한 Cypress 테스트 :</target>
        </trans-unit>
        <trans-unit id="57403cf681171cbc5d54f2059aa6f5b17a8fb36a" translate="yes" xml:space="preserve">
          <source>The Cypress launched browser automatically:</source>
          <target state="translated">Cypress가 자동으로 브라우저를 시작했습니다.</target>
        </trans-unit>
        <trans-unit id="737fa205c8e97015df823b61f461e49e1218db3e" translate="yes" xml:space="preserve">
          <source>The Cypress tray icon has been updated. It&amp;rsquo;s much better now.</source>
          <target state="translated">Cypress 트레이 아이콘이 업데이트되었습니다. 지금 훨씬 나아졌습니다.</target>
        </trans-unit>
        <trans-unit id="2c71105207b76e74dbe9566bb0a0379bb96f1c97" translate="yes" xml:space="preserve">
          <source>The Cypress version</source>
          <target state="translated">싸이프레스 버전</target>
        </trans-unit>
        <trans-unit id="c27e531e77f118432d98b83f1c7c78418516bf0d" translate="yes" xml:space="preserve">
          <source>The DOM element must be in an &amp;ldquo;interactable&amp;rdquo; state prior to the triggered event happening (it must be visible and not disabled).</source>
          <target state="translated">DOM 요소는 트리거 된 이벤트가 발생하기 전에 &quot;상호 작용 가능&quot;상태 여야합니다 (표시되어야하고 비활성화되어서는 안 됨).</target>
        </trans-unit>
        <trans-unit id="a898b6897f6d5f115de55e773d31576e8bb04885" translate="yes" xml:space="preserve">
          <source>The DOM has not loaded yet.</source>
          <target state="translated">DOM이 아직로드되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="c795b4540030ed3c1fb27937f96d645fe13e6a82" translate="yes" xml:space="preserve">
          <source>The DOM is unstable</source>
          <target state="translated">DOM이 불안정하다</target>
        </trans-unit>
        <trans-unit id="c1283498102e3ae44ef34d23c876ef26e181e791" translate="yes" xml:space="preserve">
          <source>The Dashboard Service has been updated to show you more visual information about what happened during a run. You can see how specs were parallelized and you can calculate the effect of adding or removing machines to help reduce the overall run time.</source>
          <target state="translated">실행 중에 발생한 상황에 대한보다 시각적 인 정보를 표시하도록 대시 보드 서비스가 업데이트되었습니다. 스펙이 병렬화되는 방법을 볼 수 있으며 전체 런타임을 줄이는 데 도움이되는 기계 추가 또는 제거의 영향을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15a48b8b370fe21d50fc87d225e055fc7a9b1f9" translate="yes" xml:space="preserve">
          <source>The Dashboard has been upgraded to make it easier to understand the results of each spec run. This was done in anticipation of providing you the ability to parallelize and load balance your spec files automatically in CI.</source>
          <target state="translated">각 사양 실행의 결과를보다 쉽게 ​​이해할 수 있도록 대시 보드가 업그레이드되었습니다. 이는 CI에서 스펙 파일을 자동으로 병렬화하고로드 밸런스 할 수있는 기능을 제공하기 위해 수행되었습니다.</target>
        </trans-unit>
        <trans-unit id="8cecd28d4242ecf92652ccf3dd30cc3f87604e2d" translate="yes" xml:space="preserve">
          <source>The Desktop App has been re-skinned with misc GUI enhancements such as help text, popovers, clearer errors, better loading indicators, etc.</source>
          <target state="translated">데스크탑 텍스트는 도움말 텍스트, 팝 오버, 더 명확한 오류, 더 나은 표시기 표시 등과 같은 기타 GUI 개선 사항으로 다시 스킨되었습니다.</target>
        </trans-unit>
        <trans-unit id="2dbe0afb9f448c35544cfcbecb8dadf4b7966aa7" translate="yes" xml:space="preserve">
          <source>The Desktop App&amp;rsquo;s file size is now much smaller and unzips much faster. In the next release there will be a special &lt;code&gt;CI&lt;/code&gt; build which removes the need to run Xvfb.</source>
          <target state="translated">데스크톱 앱의 파일 크기가 훨씬 작아지고 압축이 훨씬 빨라집니다. 다음 릴리스에는 Xvfb를 실행할 필요 가없는 특수 &lt;code&gt;CI&lt;/code&gt; 빌드 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="322a0c3549e2d65cfa88fc4e401921dbe0b76b41" translate="yes" xml:space="preserve">
          <source>The Desktop GUI properly renders folders that contain specs in Windows now. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;#1335&lt;/a&gt;.</source>
          <target state="translated">데스크탑 GUI는 이제 Windows에 스펙이 포함 된 폴더를 올바르게 렌더링합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;# 1335&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b59a45aad64c2e16e3562e274f463f18da4c99f" translate="yes" xml:space="preserve">
          <source>The Desktop-GUI has been updated to get the new routes provided by the Cypress API for runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;#2189&lt;/a&gt;.</source>
          <target state="translated">실행을 위해 Cypress API가 제공하는 새로운 경로를 얻도록 Desktop-GUI가 업데이트되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;# 2189&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="667b7db9c90d2b1060bfb8a20f57db58ddb02ae8" translate="yes" xml:space="preserve">
          <source>The Electron browser has two unique advantages:</source>
          <target state="translated">Electron 브라우저에는 두 가지 고유 한 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="267db1fbd681d2b01e896f01c955233c91006e2d" translate="yes" xml:space="preserve">
          <source>The Electron browser now runs Chrome Version 61. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;#4000&lt;/a&gt;.</source>
          <target state="translated">Electron 브라우저는 이제 Chrome 버전 61을 실행 합니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;# 4000&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc648f8d216380c9f950a407a9aef64ec1ba9dbc" translate="yes" xml:space="preserve">
          <source>The GitHub branch, pull request, author, commit sha and commit message associated with the run (if any)</source>
          <target state="translated">GitHub 브랜치, 풀 요청, 작성자, 커밋 sha 및 커밋 메시지 (실행 된 경우)</target>
        </trans-unit>
        <trans-unit id="fed769fa3a9ac06f96b17d72858f9793bd1fae82" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the request</source>
          <target state="translated">요청에 사용할 HTTP 메소드</target>
        </trans-unit>
        <trans-unit id="9b56b8bf9001cef07a0a5ef756c9664463293789" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the visit. Can be &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">방문에서 사용할 HTTP 메소드입니다. &lt;code&gt;GET&lt;/code&gt; 또는 &lt;code&gt;POST&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="85b3be1d0f546b15fb96b04375b14950022ced4d" translate="yes" xml:space="preserve">
          <source>The Kitchen Sink application has been loaded into the &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt; pane.</source>
          <target state="translated">키친 싱크 응용 프로그램이 &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;앱 미리보기&lt;/a&gt; 창 에로드되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1cf826e4a28ec68a0b9fe0bbf70fa4ea604cb28c" translate="yes" xml:space="preserve">
          <source>The Machines View charts spec files by the machines that executed them. This view makes it easy to evaluate the contribution of each machine to the overall test run.</source>
          <target state="translated">머신보기 스펙 파일을 실행 한 머신별로 차트를 표시합니다. 이보기를 통해 전체 테스트 실행에 대한 각 머신의 기여도를 쉽게 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b89c8de24c9423ec96f6cb9acaa41f22e64f632" translate="yes" xml:space="preserve">
          <source>The OSX Cypress App was not being properly signed (since 0.10.0) due to an oversight in our deployment process. This has been fixed now and additional checks have been added to ensure the deployed version is properly signed. Updating within the app was unaffected. This bug only effected fresh downloads from the internet.</source>
          <target state="translated">배포 프로세스의 감독으로 인해 OSX Cypress 앱이 0.10.0부터 올바르게 서명되지 않았습니다. 이 문제는 현재 해결되었으며 배포 된 버전이 올바르게 서명되었는지 확인하기위한 추가 검사가 추가되었습니다. 앱 내 업데이트는 영향을받지 않았습니다. 이 버그는 인터넷에서 새로 다운로드 한 경우에만 영향을 미쳤습니다.</target>
        </trans-unit>
        <trans-unit id="12d6e108059d8871957f07700d81f0600f9b0b5f" translate="yes" xml:space="preserve">
          <source>The Plugins API allows you to hook into and extend Cypress behavior.</source>
          <target state="translated">플러그인 API를 사용하면 Cypress 동작에 연결하고 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a79f306df4007f5975a6169f9220fffc377a922f" translate="yes" xml:space="preserve">
          <source>The Plugins API is relatively new.</source>
          <target state="translated">플러그인 API는 비교적 새롭습니다.</target>
        </trans-unit>
        <trans-unit id="ef3ca6dc6414b0afa685947487c8bb95c3c647e8" translate="yes" xml:space="preserve">
          <source>The Runner UI no longer appears to be &amp;ldquo;running&amp;rdquo; when there is a spec bundle error in the &lt;code&gt;supportFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;supportFile&lt;/code&gt; 에 스펙 번들 오류가있는 경우 러너 UI가 더 이상 &quot;실행 중&quot;인 것처럼 보이지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="58c9c4698fef81c10b7721bfbed6894597389fa3" translate="yes" xml:space="preserve">
          <source>The Screenshot API allows you set defaults for how screenshots are captured during &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;.screenshot&lt;/code&gt;&lt;/a&gt; and automatic screenshots taken during test failures. You can set defaults for the following:</source>
          <target state="translated">스크린 샷 API를 사용하면 &lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;.screenshot&lt;/code&gt; &lt;/a&gt; 중에 스크린 샷을 캡처하는 방법 과 테스트 실패 중에 자동 스크린 샷을 캡처하는 방법에 대한 기본값을 설정할 수 있습니다 . 다음에 대한 기본값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d5b7f375467dc1ceac8e6e7563ffc7b9e1dd29d" translate="yes" xml:space="preserve">
          <source>The Selector Playground is an interactive feature that helps you:</source>
          <target state="translated">선택기 놀이터는 다음을 지원하는 대화식 기능입니다.</target>
        </trans-unit>
        <trans-unit id="d9852e853f52b99d210e86b2f56cc55c3202aeb4" translate="yes" xml:space="preserve">
          <source>The Selector Playground now works correctly in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;#1086&lt;/a&gt;.</source>
          <target state="translated">전자 브라우저에서 선택기 놀이터가 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;# 1086&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="18428e92a03294d76a3cba7d05f44d578b405863" translate="yes" xml:space="preserve">
          <source>The Test Runner</source>
          <target state="translated">테스트 러너</target>
        </trans-unit>
        <trans-unit id="0df353fce0af4d6c4d300b3b9e4c8aae8cae1926" translate="yes" xml:space="preserve">
          <source>The Test Runner can now have projects added by being &amp;lsquo;dragged&amp;rsquo; in. Fixes</source>
          <target state="translated">테스트 러너는 이제 '드래그 드'되어 프로젝트를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90b1002eaf26fdb995b6decdd2f3d04d22a92052" translate="yes" xml:space="preserve">
          <source>The Test Runner displays the scrollbar correctly when the update banner is displayed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;#803&lt;/a&gt;.</source>
          <target state="translated">업데이트 배너가 표시되면 테스트 러너에 스크롤 막대가 올바르게 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;# 803&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="01ff55d9ea08dd21f018dd51886c4ded0c930f3e" translate="yes" xml:space="preserve">
          <source>The Test Runner now accounts for cypress being installed per project as npm module. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;#500&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;#514&lt;/a&gt;.</source>
          <target state="translated">테스트 러너는 이제 npm 모듈로 프로젝트 당 설치되는 cypress를 설명합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;# 500&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;# 514를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="15942512a9b81779474c6448b3e4e656adb2ead2" translate="yes" xml:space="preserve">
          <source>The Test Runner now displays &lt;code&gt;skipped&lt;/code&gt; tests differently than &lt;code&gt;pending&lt;/code&gt; tests. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;#244&lt;/a&gt;.</source>
          <target state="translated">테스트 러너는 이제 &lt;code&gt;skipped&lt;/code&gt; 테스트를 &lt;code&gt;pending&lt;/code&gt; 테스트 와 다르게 표시 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;# 244&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ca2ba6d9a5a580951c21bc908bcac23b055a964" translate="yes" xml:space="preserve">
          <source>The Test Runner now enables you to collapse folders when displaying a list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;#760&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne&lt;/a&gt;.</source>
          <target state="translated">이제 테스트 러너를 사용하면 사양 목록을 표시 할 때 폴더를 축소 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;# 760&lt;/a&gt; 수정 . 로 기여 &lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae05cf351f79c4fbe6fb389278cb73a1930cd1dd" translate="yes" xml:space="preserve">
          <source>The Test Runner now retries node-originated errors from our internal API requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;#2341&lt;/a&gt;</source>
          <target state="translated">테스트 러너는 이제 내부 API 요청에서 노드 생성 오류를 재 시도합니다. 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;# 2341&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1b0802754545c7dba149944410074df851d418b" translate="yes" xml:space="preserve">
          <source>The Test Runner update window now has messaging about &lt;code&gt;package.json&lt;/code&gt; versioning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;#513&lt;/a&gt;.</source>
          <target state="translated">Test Runner 업데이트 창에 &lt;code&gt;package.json&lt;/code&gt; 버전 관리 에 대한 메시지가 표시 됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;# 513&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="74d4db61a84b73f5e5e7ae74d25c95179efd7242" translate="yes" xml:space="preserve">
          <source>The Test Runner will now display your email address when you have not set a name in GitHub.</source>
          <target state="translated">GitHub에서 이름을 설정하지 않으면 테스트 러너에 이메일 주소가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="203a719c5b14a76523e4796f4015f6f3493fdf4d" translate="yes" xml:space="preserve">
          <source>The Test Runner&amp;rsquo;s search now resets when switching between projects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;#2512&lt;/a&gt;.</source>
          <target state="translated">이제 프로젝트 간 전환시 테스트 러너의 검색이 재설정됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;# 2512&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e633f13624865ed1c7325dfe2aa98cd04d9f3ea0" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran chronologically across all available machines.</source>
          <target state="translated">타임 라인보기는 스펙 파일이 서로 상대적으로 실행됨을 차트로 표시합니다. 이는 사용 가능한 모든 시스템에서 테스트가 시간순으로 실행되는 방식을 시각화하려는 경우 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ec29c274c2bde9efcba2e7722fe78066d5108363" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran in &lt;a href=&quot;../guides/parallelization&quot;&gt;parallel&lt;/a&gt;.</source>
          <target state="translated">타임 라인보기는 스펙 파일이 서로 상대적으로 실행됨을 차트로 표시합니다. 테스트가 어떻게 &lt;a href=&quot;../guides/parallelization&quot;&gt;병렬로&lt;/a&gt; 실행되는지 시각화 할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bb1584aa60107a47c0411543f4232ea16f9fc261" translate="yes" xml:space="preserve">
          <source>The URL property on all XHR&amp;rsquo;s is now completely decoded, even on URLs which were originally encoded. The reason is for easier assertions and debugging. This URL property is specific to Cypress and does not actually affect the underlying XHR.</source>
          <target state="translated">모든 XHR의 URL 속성은 이제 원래 인코딩 된 URL에서도 완전히 디코딩됩니다. 그 이유는 더 쉬운 어설 션과 디버깅에 있습니다. 이 URL 속성은 Cypress에만 적용되며 실제로 기본 XHR에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f22b69fbf16b28ee54e3bc3fee5917aedd132e5c" translate="yes" xml:space="preserve">
          <source>The URL to make the request to</source>
          <target state="translated">요청하는 URL</target>
        </trans-unit>
        <trans-unit id="16849e6ba858750f570e0ac6074a29582bf3cb85" translate="yes" xml:space="preserve">
          <source>The URL to make the request to.</source>
          <target state="translated">요청할 URL입니다.</target>
        </trans-unit>
        <trans-unit id="6803d6ac24b6a9b7e4de860a696b95f324248653" translate="yes" xml:space="preserve">
          <source>The URL to visit.</source>
          <target state="translated">방문 할 URL입니다.</target>
        </trans-unit>
        <trans-unit id="47224b103ed560a9d78a230a0199d46293d1fdf7" translate="yes" xml:space="preserve">
          <source>The URL to visit. Behaves the same as the &lt;code&gt;url&lt;/code&gt; argument.</source>
          <target state="translated">방문 할 URL입니다. &lt;code&gt;url&lt;/code&gt; 인수 와 동일하게 동작합니다 .</target>
        </trans-unit>
        <trans-unit id="2d9bb6ecc650140fa45e8526eeca8f62fce701aa" translate="yes" xml:space="preserve">
          <source>The URL will now automatically be restored when hovering over the Command Log to indicate the state of the URL at the time the command ran.</source>
          <target state="translated">명령 로그를 가리키면 명령이 실행될 때 URL의 상태를 나타 내기 위해 URL이 자동으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="0c70c3de81fd42c77b414f73a363f84b76df0361" translate="yes" xml:space="preserve">
          <source>The URL will now highlight in a yellow background during a revert DOM snapshot.</source>
          <target state="translated">DOM 되돌리기 되돌리기 중에 URL이 노란색 배경으로 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="01257de0ccd29de0fd21eac3c466f390cedb0c38" translate="yes" xml:space="preserve">
          <source>The XHR object which is returned to you to via &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; is now more consistent with other return values such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. It should be much easier to work with &lt;code&gt;request body&lt;/code&gt;, &lt;code&gt;request headers&lt;/code&gt;, &lt;code&gt;response body&lt;/code&gt; and &lt;code&gt;response headers&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 를 통해 사용자에게 반환되는 XHR 개체 는 이제 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 같은 다른 반환 값과 더 일관성이 있습니다. &lt;code&gt;request body&lt;/code&gt; , &lt;code&gt;request headers&lt;/code&gt; , &lt;code&gt;response body&lt;/code&gt; 및 &lt;code&gt;response headers&lt;/code&gt; 로 작업하는 것이 훨씬 쉬워야 합니다.</target>
        </trans-unit>
        <trans-unit id="0ea80d625147d4e908537a921b72ad6f1fe1dea1" translate="yes" xml:space="preserve">
          <source>The XHR&amp;rsquo;s URL property will now always return you a &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; including the origin, port, host, etc. Previously the URL property represented whatever the XHR was opened with. We&amp;rsquo;ve worked around this difference by when checking whether an XHR should be stubbed, the origin is tested both as present and omitted.</source>
          <target state="translated">XHR의 URL 속성은 이제 항상 원본, 포트, 호스트 등을 포함한 &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; 을 반환합니다 . 이전에는 URL 속성이 XHR이 열린 모든 것을 나타 냈습니다. 우리는 XHR이 스터 빙되어야하는지 여부를 확인할 때이 차이를 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="adbb198ee5a2397ad030329fc6b5dd92db2b6f15" translate="yes" xml:space="preserve">
          <source>The ability to open the context menu to see &amp;ldquo;Inspect Element&amp;rdquo; has been reenabled in the Electron browser. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;#4002&lt;/a&gt;.</source>
          <target state="translated">컨텍스트 메뉴를 열어 &quot;요소 검사&quot;를 볼 수있는 기능이 Electron 브라우저에서 다시 활성화되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;# 4002&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b90a9bb25749482764e4e2263bead3acde0547e8" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; urls are temporary - they are purged after 30 days. The format of the url is as follows:</source>
          <target state="translated">위의 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; URL은 임시 URL이며 30 일 후에 제거됩니다. URL 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cab283e12e1349e25747a508574de2b72f0f9837" translate="yes" xml:space="preserve">
          <source>The above configuration will output the JUnit report to &lt;code&gt;STDOUT&lt;/code&gt; and save it into an XML file. Reporter options differ depending on the reporter (and may not be supported at all). Refer to the documentation for the reporter you are using for details on which options are supported.</source>
          <target state="translated">위의 구성은 JUnit 보고서를 &lt;code&gt;STDOUT&lt;/code&gt; 으로 출력하여 XML 파일로 저장합니다. 리포터 옵션은 리포터에 따라 다르며 전혀 지원되지 않을 수 있습니다. 지원되는 옵션에 대한 자세한 내용은 사용중인 기자의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ca86aa9b0982e894455dd56eaa5d5687a162634" translate="yes" xml:space="preserve">
          <source>The above example is an oversimplification. Let&amp;rsquo;s look at a more complex example.</source>
          <target state="translated">위의 예는 지나치게 단순화 된 것입니다. 좀 더 복잡한 예를 봅시다.</target>
        </trans-unit>
        <trans-unit id="1b0b651e666142d29f127e43f442376cddd42313" translate="yes" xml:space="preserve">
          <source>The absolute path to the image.</source>
          <target state="translated">이미지의 절대 경로입니다.</target>
        </trans-unit>
        <trans-unit id="6f6168cdaa18c3d88d0ac6c39afc63867b920b5c" translate="yes" xml:space="preserve">
          <source>The absolute path to the spec file (e.g. &lt;code&gt;/Users/janelane/my-app/cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="translated">사양 파일의 절대 경로 (예 : &lt;code&gt;/Users/janelane/my-app/cypress/integration/login_spec.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ba21fd66a205ce0682c59454a500efc0ec0c92d5" translate="yes" xml:space="preserve">
          <source>The algorithm for replaying aliased commands is now much more accurate, handles stale element references better, and will not replay commands which have a side effect (like action commands). The end result is Cypress will now almost always find the desired element by determining the minimum number of re-queries and is not susceptible to stale element references. Additionally using assertions on aliased elements now works (where previously using a &lt;em&gt;Command Option&lt;/em&gt; on an alias would just be ignored. This was very difficult to implement but should be 100% solid. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;#36&lt;/a&gt;.</source>
          <target state="translated">앨리어싱 된 명령을 재생하는 알고리즘이 훨씬 정확 해져 부실 요소 참조를 더 잘 처리하며 부작용이있는 명령 (예 : 동작 명령)을 재생하지 않습니다. 최종 결과는 Cypress가 이제 최소 재시도 횟수를 결정하여 원하는 요소를 거의 항상 찾게되며 오래된 요소 참조에 영향을받지 않습니다. 또한 이전에 사용 지금 어디 (작동 별명 요소 주장을 사용하여 &lt;em&gt;명령 옵션&lt;/em&gt; 별칭에 그냥 무시 될 것이다.이 구현하기가 매우 어려웠다하지만 100 % 고체. 수정해야 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;# 36&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="230d5bfb2e55eaae4e75347d1b9f82f06cc6cea1" translate="yes" xml:space="preserve">
          <source>The algorithm that ensures an element is not covered now calculates this at the center coordinates instead of the top left. This should yield more accurate results, be closer to the default expectations of users, and bypass fractional pixel problems we were having. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;#655&lt;/a&gt;.</source>
          <target state="translated">요소가 적용되지 않도록하는 알고리즘은 이제 왼쪽 상단 대신 중심 좌표에서이를 계산합니다. 이를 통해보다 정확한 결과를 얻을 수 있으며 사용자의 기본 기대치에 더 가까우며 소수의 픽셀 문제를 우회 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;# 655&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8023c7ade591c22761b1a5dbe56b000a52ddb297" translate="yes" xml:space="preserve">
          <source>The amount of time to wait in milliseconds.</source>
          <target state="translated">대기 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="6732f6ed22322fd0f9c08e2a03a4b4c06f4ce7af" translate="yes" xml:space="preserve">
          <source>The answer is usually &lt;strong&gt;yes&lt;/strong&gt;. Here&amp;rsquo;s an example:</source>
          <target state="translated">대답은 보통 &lt;strong&gt;그렇습니다&lt;/strong&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fef60c6ed9526c71cd3cfb41efef875280ec1f04" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;arg&lt;/code&gt; sent via &lt;code&gt;cy.task(name, arg)&lt;/code&gt; should be serializable; it cannot have circular dependencies (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/5539&quot;&gt;#5539&lt;/a&gt;). If there are any special fields like &lt;code&gt;Date&lt;/code&gt;, you are responsible for their conversion (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4980&quot;&gt;#4980&lt;/a&gt;):</source>
          <target state="translated">&lt;code&gt;cy.task(name, arg)&lt;/code&gt; 를 통해 전송 된 인수 &lt;code&gt;arg&lt;/code&gt; 는 직렬화 가능해야합니다. 순환 종속성을 가질 수 없습니다 (문제 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/5539&quot;&gt;# 5539&lt;/a&gt; ). &lt;code&gt;Date&lt;/code&gt; 와 같은 특수 필드 가있는 경우 해당 변환에 대한 책임이 있습니다 (문제 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4980&quot;&gt;# 4980&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3a86971f643a552776be29192c39b703fc551bdb" translate="yes" xml:space="preserve">
          <source>The arguments, without transforming them (they are the real arguments)</source>
          <target state="translated">인수를 변형시키지 않고 인수 (실제 인수 임)</target>
        </trans-unit>
        <trans-unit id="f303fdc44400b5249d2c24e01d26c966a4517603" translate="yes" xml:space="preserve">
          <source>The associated Cypress project</source>
          <target state="translated">관련 Cypress 프로젝트</target>
        </trans-unit>
        <trans-unit id="9e4029d2b05a03bf22e19ee9ac0ea65731c08eb3" translate="yes" xml:space="preserve">
          <source>The auto generated &lt;code&gt;example_spec.js&lt;/code&gt; no longer errors on &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; since that file would likely not locally exist.</source>
          <target state="translated">자동으로 생성 된 &lt;code&gt;example_spec.js&lt;/code&gt; 는 더 이상 &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; 에서 오류 가 발생하지 않습니다. 해당 파일이 로컬에 없을 가능성이 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5d5f090dee7604485dcd59c8b000462d0bdb7258" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;req&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;req&lt;/code&gt; 에서 사용 가능한 기능 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7ffb7105687b21bdd90113b22f435bec775c677" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;res&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;res&lt;/code&gt; 에서 사용할 수있는 기능 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3ca22c7b0845719d5c1c36260d5657c5d4a1f60" translate="yes" xml:space="preserve">
          <source>The base name of the spec file (e.g. &lt;code&gt;login_spec.js&lt;/code&gt;)</source>
          <target state="translated">사양 파일의 기본 이름 (예 : &lt;code&gt;login_spec.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d81b05325b34deb81e363d64a96c30968573c6d7" translate="yes" xml:space="preserve">
          <source>The below example matches all &lt;code&gt;DELETE&lt;/code&gt; requests to &amp;ldquo;/users&amp;rdquo; and stubs a response with an empty JSON object.</source>
          <target state="translated">아래 예제는 모든 &lt;code&gt;DELETE&lt;/code&gt; 요청을&amp;ldquo;/ users&amp;rdquo;에 일치 시키고 빈 JSON 객체로 응답을 스텁합니다.</target>
        </trans-unit>
        <trans-unit id="9b29ba2075d125bf31dabfdd6e054e9789810696" translate="yes" xml:space="preserve">
          <source>The below example will return the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the &lt;code&gt;#header&lt;/code&gt; since that is the &lt;em&gt;first&lt;/em&gt; element that contains the text &amp;ldquo;Jane Lane&amp;rdquo;.</source>
          <target state="translated">아래 예는 텍스트 &quot;Jane Lane&quot;을 포함하는 &lt;em&gt;첫 번째&lt;/em&gt; 요소 이므로 &lt;code&gt;#header&lt;/code&gt; 에서 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 를 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02420601b94e62e3629b9b542951288782b7a8bd" translate="yes" xml:space="preserve">
          <source>The binary cache now correctly works and will not reinstall Cypress if an existing version is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;#1813&lt;/a&gt;.</source>
          <target state="translated">이진 캐시는 이제 올바르게 작동하며 기존 버전이 이미 설치되어 있으면 Cypress를 다시 설치하지 않습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;# 1813&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d572f92da6a17728ee2040b4736a6ef4833d8950" translate="yes" xml:space="preserve">
          <source>The box at the top that displays the selector is also a text input.</source>
          <target state="translated">선택기를 표시하는 상단의 상자도 텍스트 입력입니다.</target>
        </trans-unit>
        <trans-unit id="b532e903135e51091bdb69ca9d752c6c3b4889a8" translate="yes" xml:space="preserve">
          <source>The branch name is now properly collected when recording in Buildkite CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;#777&lt;/a&gt;.</source>
          <target state="translated">이제 Buildkite CI에서 레코딩 할 때 분기 이름이 올바르게 수집됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;# 777&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="87e305fdc79003a9f2ed4c3c32a6b6bf6e8803a2" translate="yes" xml:space="preserve">
          <source>The browser and version</source>
          <target state="translated">브라우저와 버전</target>
        </trans-unit>
        <trans-unit id="7cd486cc860cf0e865d5c5fa67f6d827c8cd8fab" translate="yes" xml:space="preserve">
          <source>The build number and url to CI for tests run within &lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt; are now captured and displayed on the run within the Dashboard. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;#1709&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt; 내에서 테스트를 실행하기위한 빌드 번호 및 CI URL 이 이제 대시 보드 내에서 캡처되어 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;# 1709&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c8891e911caa1cb7218669a59d2a11ce43dcc620" translate="yes" xml:space="preserve">
          <source>The build process of the driver has been modernized. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;#429&lt;/a&gt;.</source>
          <target state="translated">드라이버의 빌드 프로세스가 현대화되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;# 429&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a4293704d7380861d3cb8690f9a39b0f91e496a7" translate="yes" xml:space="preserve">
          <source>The built in &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;&lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt;&lt;/a&gt; was bumped to &lt;code&gt;1.1.0&lt;/code&gt;. This supports more JavaScript features by default, including async/await, object rest spread, and class properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;#2254&lt;/a&gt;.</source>
          <target state="translated">내장 된 &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt; &lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;1.1.0&lt;/code&gt; 으로 충돌했습니다 . 이는 기본적으로 비동기 / 대기, 오브젝트 레스트 스프레드 및 클래스 특성을 포함하여 더 많은 JavaScript 기능을 지원합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;# 2254&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="00c9bbca84b5320488a962eaea3e1912c2b1f8b4" translate="yes" xml:space="preserve">
          <source>The built in XHR response delay has been removed since now all requests really go over the HTTP stack, which inherently has its own delay. You can still optionally force responses to be delayed by a set amount.</source>
          <target state="translated">내장 된 XHR 응답 지연은 이제 모든 요청이 본질적으로 자체 지연이있는 HTTP 스택을 통과하므로 제거되었습니다. 선택적으로 설정된 양만큼 응답을 지연시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a98420d459273865977dedece36368e58b6cd00" translate="yes" xml:space="preserve">
          <source>The built in default &lt;code&gt;Electron&lt;/code&gt; browser has been bumped from version &lt;code&gt;53&lt;/code&gt; to &lt;code&gt;59&lt;/code&gt;. This version represents the version of &lt;code&gt;Chromium&lt;/code&gt; that Electron is using. In other words, running &lt;code&gt;cypress run&lt;/code&gt; (or via &lt;code&gt;Electron&lt;/code&gt;) will be like running your tests in &lt;code&gt;Chrome 59&lt;/code&gt; now. Although it is unlikely this would actually &lt;em&gt;break&lt;/em&gt; any of your tests - it is technically possible they could behave differently. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;#895&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;#891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;#823&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;#860&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;#1011&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;#1252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;#1276&lt;/a&gt;.</source>
          <target state="translated">내장 된 기본 &lt;code&gt;Electron&lt;/code&gt; 브라우저는 버전 &lt;code&gt;53&lt;/code&gt; 에서 &lt;code&gt;59&lt;/code&gt; 로 충돌했습니다 . 이 버전은 Electron이 사용중인 &lt;code&gt;Chromium&lt;/code&gt; 버전을 나타냅니다 . 다시 말해, &lt;code&gt;cypress run&lt;/code&gt; (또는 &lt;code&gt;Electron&lt;/code&gt; )을 실행하는 것은 이제 &lt;code&gt;Chrome 59&lt;/code&gt; 에서 테스트를 실행하는 것과 같습니다 . 이것이 실제로 테스트를 &lt;em&gt;중단&lt;/em&gt; 할 가능성은 낮지 만 기술적으로 다르게 작동 할 수 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;# 895&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;# 891&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;# 823&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;# 860&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;# 1011&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;# 1252&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;# 1276&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4328658648fdf26bd388b4844fda0d993d8a3ee" translate="yes" xml:space="preserve">
          <source>The bundled version of FFmpeg has now been bumped from &lt;code&gt;3.x.x&lt;/code&gt; to &lt;code&gt;4.x.x&lt;/code&gt;. This may help with some issues users were experiencing when recording videos. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;#1972&lt;/a&gt;.</source>
          <target state="translated">번들로 제공되는 FFmpeg 버전은 이제 &lt;code&gt;3.x.x&lt;/code&gt; 에서 &lt;code&gt;4.x.x&lt;/code&gt; 로 충돌했습니다 . 동영상을 녹화 할 때 발생하는 일부 문제에 도움이 될 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;# 1972&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b03dc4395f907cf3c251df5831287b964700e570" translate="yes" xml:space="preserve">
          <source>The call count (and total number of calls)</source>
          <target state="translated">통화 횟수 (및 총 통화 수)</target>
        </trans-unit>
        <trans-unit id="12a04970c45f32bb5eea0c0dffe2ac66672ffa5a" translate="yes" xml:space="preserve">
          <source>The callback function is called any time a file is requested by the browser. This happens on each run of the tests.</source>
          <target state="translated">콜백 함수는 브라우저가 파일을 요청할 때마다 호출됩니다. 이것은 각 테스트 실행에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54dc858f124923023700410355f03e7529940fc3" translate="yes" xml:space="preserve">
          <source>The callback function should return one of the following:</source>
          <target state="translated">콜백 함수는 다음 중 하나를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="2abe30b400fb277b6ccb01d29db083dd9e2877f2" translate="yes" xml:space="preserve">
          <source>The callback function will be retried over and over again until no assertions within it throw.</source>
          <target state="translated">콜백 함수는 어설 션이 발생하지 않을 때까지 계속해서 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="edfc022c0645f5ff57f9e678bfa92155e52887db" translate="yes" xml:space="preserve">
          <source>The caret now correctly moves on &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;#1108&lt;/a&gt;.</source>
          <target state="translated">캐럿이 이제 &lt;code&gt;[contenteditable]&lt;/code&gt; 요소 에서 올바르게 이동 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;# 1108&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65f95298189dcbd21a1b24e79e1994cd281bf75a" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="translated">&lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; 또는 &lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; 에서 온 체인 러 는 항상 자신이 반환하는 것을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="257e6622aad94b5474a2b25c4d50d371eba3f89e" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai&quot;&gt;Chai&lt;/a&gt; 또는 &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; 에서 온 체 이너 는 항상 반환 내용을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="50161b2801a17ba2edc50dd76a5fe7b0391c260e" translate="yes" xml:space="preserve">
          <source>The changes in version &lt;a href=&quot;#01711-11162016&quot;&gt;&lt;code&gt;0.17.11&lt;/code&gt;&lt;/a&gt; below are in preparation for Cypress￢ﾀﾙ platform service: a portal where screenshots, videos, config, and logs of your builds are accessible.</source>
          <target state="translated">아래 버전 &lt;a href=&quot;#01711-11162016&quot;&gt; &lt;code&gt;0.17.11&lt;/code&gt; &lt;/a&gt; 의 변경 사항은 Cypress￢ ﾀ ﾙ 플랫폼 서비스를 준비 중입니다. 빌드의 스크린 샷, 비디오, 구성 및 로그에 액세스 할 수있는 포털입니다.</target>
        </trans-unit>
        <trans-unit id="12b9db6cd52a6c5288eb66a7b667ae65cacfaa59" translate="yes" xml:space="preserve">
          <source>The click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="translated">아래 클릭은 요소 내부에서 발생합니다 (왼쪽에서 15px, 상단에서 40px).</target>
        </trans-unit>
        <trans-unit id="feffbf3db4f2aa3a96de8110d25691dc900d83d8" translate="yes" xml:space="preserve">
          <source>The clock object is also available via &lt;code&gt;this.clock&lt;/code&gt; in any &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">clock 객체는 &lt;code&gt;this.clock&lt;/code&gt; 을 통해 모든 &lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 콜백 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12d527e46dab797c7b08982aaa8c907f0aeab918" translate="yes" xml:space="preserve">
          <source>The clock starts at the unix epoch (timestamp of 0). This means that when you instantiate &lt;code&gt;new Date&lt;/code&gt; in your application, it will have a time of &lt;code&gt;January 1st, 1970&lt;/code&gt;.</source>
          <target state="translated">시계는 유닉스 시대 (타임 스탬프 0)에서 시작합니다. 즉 , 응용 프로그램에서 &lt;code&gt;new Date&lt;/code&gt; 를 인스턴스화하면 &lt;code&gt;January 1st, 1970&lt;/code&gt; 의 시간이 됩니다.</target>
        </trans-unit>
        <trans-unit id="49ad6a4c2e98e8b2d168cd5e8e8acca85b5148fa" translate="yes" xml:space="preserve">
          <source>The code above displays in the Command Log as shown below, with the console properties shown on click of the command.</source>
          <target state="translated">위의 코드는 아래와 같이 명령 로그에 표시되며 명령을 클릭하면 콘솔 속성이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6558692f7710b544a27041ca9277f785de11e73c" translate="yes" xml:space="preserve">
          <source>The code above will produce a suite with 4 tests:</source>
          <target state="translated">위의 코드는 4 가지 테스트로 구성된 제품군을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d0fb8faf7f819b5cd70df24f148a83c15cffb94c" translate="yes" xml:space="preserve">
          <source>The code contains comments that explain how it utilizes the preprocessor API.</source>
          <target state="translated">이 코드에는 전 처리기 API를 활용하는 방법을 설명하는 주석이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cf720a27a083234446b5670de5305307937fdb7" translate="yes" xml:space="preserve">
          <source>The code coverage information in unit tests and end-to-end tests has the same format; the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin automatically grabs both and saves the combined report. Thus we can see the code coverage from the &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; file after running the test.</source>
          <target state="translated">단위 테스트와 엔드-투-엔드 테스트의 코드 범위 정보는 형식이 동일합니다. &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; 플러그인은 자동으로 양쪽을 잡고 결합 된 보고서를 저장합니다. 따라서 테스트를 실행 한 후 &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; 파일 에서 코드 적용 범위를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5bc7ae3b77cd0b515289d58070df8ad743f925ce" translate="yes" xml:space="preserve">
          <source>The command UI now displays pending requests as a &lt;code&gt;pending command&lt;/code&gt;.</source>
          <target state="translated">명령 UI가 보류중인 요청을 &lt;code&gt;pending command&lt;/code&gt; 으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="245021e0026bccf39d3ba8f1a9da62d8b1656c5f" translate="yes" xml:space="preserve">
          <source>The command above will display in the Command Log as:</source>
          <target state="translated">위의 명령은 다음과 같이 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2f2e96cc6c8da251bc9647783d0cb79ff5e5e3af" translate="yes" xml:space="preserve">
          <source>The commands above will display in the Command Log as:</source>
          <target state="translated">위의 명령은 다음과 같이 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f0725906d4c2b2ca52188d3ad8d1c30d5cd2bf7c" translate="yes" xml:space="preserve">
          <source>The commands outside of the &lt;code&gt;.then()&lt;/code&gt; will not run until all of the nested commands finish.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 외부의 명령 은 모든 중첩 명령이 완료 될 때까지 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f4a9031715a9c5d74d63d1a1c3ee1723f57d20c" translate="yes" xml:space="preserve">
          <source>The companion blog for the Cypress + Percy webinar</source>
          <target state="translated">Cypress + Percy 웹 세미나를위한 동반자 블로그</target>
        </trans-unit>
        <trans-unit id="4168d86596e0f6919fda725c4ea31e0613890cca" translate="yes" xml:space="preserve">
          <source>The companion slides for the Cypress + Percy webinar</source>
          <target state="translated">Cypress + Percy 웨비나의 동반자 슬라이드</target>
        </trans-unit>
        <trans-unit id="ee226a689fadf8930085a1220f1d39c15724f50d" translate="yes" xml:space="preserve">
          <source>The component responsible for the file-watching behavior in Cypress is the &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;Cypress Browserify Preprocessor&lt;/a&gt;. This is the default file-watcher packaged with Cypress.</source>
          <target state="translated">Cypress의 파일 감시 동작을 담당하는 구성 요소는 &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;Cypress Browserify Preprocessor&lt;/a&gt; 입니다. Cypress와 함께 패키지 된 기본 파일 감시자입니다.</target>
        </trans-unit>
        <trans-unit id="02e7ca3e2e6d1a4b6f203ba2b06c2581d64cf1f9" translate="yes" xml:space="preserve">
          <source>The compression step will be skipped completely, so the video will be large, but the processing should be faster.</source>
          <target state="translated">압축 단계를 완전히 건너 뛰어 비디오가 커지지 만 처리 속도는 빨라집니다.</target>
        </trans-unit>
        <trans-unit id="f3276a644711d9a23c186c57f7ef22d4aae4e8e6" translate="yes" xml:space="preserve">
          <source>The configuration includes the list of browsers found on your system that are available to Cypress.</source>
          <target state="translated">구성에는 Cypress에서 사용할 수있는 시스템에서 찾은 브라우저 목록이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8da7d874dd5824a52d50687860fed9cc12482328" translate="yes" xml:space="preserve">
          <source>The console log when clicking on the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command now displays its resolved &lt;code&gt;options&lt;/code&gt; arguments. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;#3721&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 명령을 클릭하면 콘솔 로그에 해결 된 &lt;code&gt;options&lt;/code&gt; 인수 가 표시됩니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;# 3721&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d61a7f3b5c4b2caf0cc5e0e3bb469d54f06266e" translate="yes" xml:space="preserve">
          <source>The constructor for creating the event object (e.g. &lt;code&gt;MouseEvent&lt;/code&gt;, &lt;code&gt;KeyboardEvent&lt;/code&gt;)</source>
          <target state="translated">이벤트 객체를 생성하기위한 생성자 (예 : &lt;code&gt;MouseEvent&lt;/code&gt; , &lt;code&gt;KeyboardEvent&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c261841b981d947e574c27b1941722d29f151caf" translate="yes" xml:space="preserve">
          <source>The contents to be written to the file.</source>
          <target state="translated">파일에 쓸 내용입니다.</target>
        </trans-unit>
        <trans-unit id="b3f774babd27a472199a3b4de4db145c6fa70f1e" translate="yes" xml:space="preserve">
          <source>The context the function was invoked with</source>
          <target state="translated">함수가 호출 된 컨텍스트</target>
        </trans-unit>
        <trans-unit id="24f5d878b392be08728b21c455c6f6495f8a9dad" translate="yes" xml:space="preserve">
          <source>The contributing Readme&amp;rsquo;s have been updated and improved for each package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;#995&lt;/a&gt;.</source>
          <target state="translated">제공되는 추가 정보가 각 패키지에 대해 업데이트 및 개선되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;# 995&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="30d3170cf03d96b57aed3cf5f74972ae222dcd93" translate="yes" xml:space="preserve">
          <source>The cookie path</source>
          <target state="translated">쿠키 경로</target>
        </trans-unit>
        <trans-unit id="aac7d447ad2ee9ddbd748f064c60234ea6c1382c" translate="yes" xml:space="preserve">
          <source>The coordinates we fired the event at will generally be available when clicking the command in the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;.</source>
          <target state="translated">이벤트를 시작한 좌표는 일반적으로 &lt;a href=&quot;test-runner#Command-Log&quot;&gt;명령 로그&lt;/a&gt; 에서 명령을 클릭 할 때 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f4a61a68e3a2b1f2e6104af9f25e662e55b17d8" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code is using Mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt; to signify it is asynchronous.</source>
          <target state="translated">위의 테스트 코드를 작성하는 올바른 방법은 모카의 사용 &lt;code&gt;done&lt;/code&gt; 가 비동기 의미 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dadcab1f323ca88bc211ec417914f0d0c1b622fe" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code would be to return our &lt;code&gt;Promise&lt;/code&gt;:</source>
          <target state="translated">위의 테스트 코드를 작성하는 올바른 방법은 &lt;code&gt;Promise&lt;/code&gt; 를 반환하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="27c22bf4fb5535fec37a2a7fe63992d37be4f061" translate="yes" xml:space="preserve">
          <source>The current DOM element is yielded</source>
          <target state="translated">현재 DOM 요소가 생성됩니다</target>
        </trans-unit>
        <trans-unit id="eebe03b2aca7630c1d74c0bfba491a55474b8327" translate="yes" xml:space="preserve">
          <source>The current size and scale of the AUT is displayed in the top right corner of the window.</source>
          <target state="translated">AUT의 현재 크기와 스케일이 창의 오른쪽 상단에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4781942186930dff32c0d286ce4f66dc245b30bc" translate="yes" xml:space="preserve">
          <source>The current subject is yielded</source>
          <target state="translated">현재 주제가 산출됩니다</target>
        </trans-unit>
        <trans-unit id="f50dd660e4239422730d72a74c0cce1293a692a8" translate="yes" xml:space="preserve">
          <source>The current subject that is yielded by the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; is exposed as the variable &lt;code&gt;subject&lt;/code&gt; within your Developer Tools so that you can interact with it in the console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 현재 주제는 개발자 도구 내 에서 변수 &lt;code&gt;subject&lt;/code&gt; 로 노출되어 콘솔에서 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b383ab8ae28caca8c87a0868b45774437ee2d8b3" translate="yes" xml:space="preserve">
          <source>The currently running test is now scrolled into view. This behavior can be turned off by scrolling in the Command Log or selecting to disable auto-scroll at the top of the Command Log. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;#194&lt;/a&gt;</source>
          <target state="translated">현재 실행중인 테스트가 이제 스크롤되어 표시됩니다. 이 동작은 명령 로그에서 스크롤하거나 명령 로그 맨 위에서 자동 스크롤을 비활성화하도록 선택하여 해제 할 수 있습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;# 194&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b05b04fac4794bff342571ce4f7b33076a445505" translate="yes" xml:space="preserve">
          <source>The cypress ci command has been deprecated</source>
          <target state="translated">cypress ci 명령은 더 이상 사용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="42db91dee6f849b3cf1c07fa68a38ba9b7ae8dd2" translate="yes" xml:space="preserve">
          <source>The date and time the screenshot was taken. ISO 8601 format in UTC (example: &lt;code&gt;'2020-03-09T07:30:37.686Z'&lt;/code&gt;)</source>
          <target state="translated">스크린 샷을 찍은 날짜와 시간입니다. UTC의 ISO 8601 형식 (예 : &lt;code&gt;'2020-03-09T07:30:37.686Z'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f7adb7486d8b6a25dabea88934af9a5dcf464f77" translate="yes" xml:space="preserve">
          <source>The debug window now works again.</source>
          <target state="translated">이제 디버그 창이 다시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="87da6011496aa3691ab6b3d72205bb8349b58ecc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;browserify&lt;/code&gt; plugin no longer fires &lt;code&gt;watched:file:changed&lt;/code&gt; twice leading to an uncaught exception that was popping up in the console. Also fixed a minor state bug in the &lt;code&gt;browserify&lt;/code&gt; package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;#968&lt;/a&gt;.</source>
          <target state="translated">기본 &lt;code&gt;browserify&lt;/code&gt; 플러그인이 더 이상 &lt;code&gt;watched:file:changed&lt;/code&gt; 를 두 번 실행하지 않아 콘솔에 팝업되지 않은 예외가 발생합니다. &lt;code&gt;browserify&lt;/code&gt; 패키지 의 경미한 버그도 수정 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;# 968&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="93e542c6c97f6e19c72fff0a9669a38634323629" translate="yes" xml:space="preserve">
          <source>The default XHR configuration can now be overwritten in a single area.</source>
          <target state="translated">이제 기본 XHR 구성을 단일 영역에서 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b220714521cf81a6fb967f162d7a8403c43f032d" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; has changed from &lt;code&gt;force404: true&lt;/code&gt; to become &lt;code&gt;force404: false&lt;/code&gt;. In other words, Cypress will no longer forcibly send XHR&amp;rsquo;s to 404 status when these XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;. This change better aligns with predictable usage for most Cypress users.</source>
          <target state="translated">의 기본 동작 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 변경된 &lt;code&gt;force404: true&lt;/code&gt; 되기 위해 &lt;code&gt;force404: false&lt;/code&gt; . 다시 말해, Cypress는 XHR이 기존 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 와 일치하지 않을 때 더 이상 XHR을 404 상태로 강제로 보내지 않습니다 . 이 변경은 대부분의 Cypress 사용자의 예측 가능한 사용량에 더 잘 맞습니다.</target>
        </trans-unit>
        <trans-unit id="e4e9eda288d479899c5070e3fd8ca817076639f1" translate="yes" xml:space="preserve">
          <source>The default behavior of Cypress can be modified by supplying any of the following configuration options. Below is a list of available options and their default values.</source>
          <target state="translated">Cypress의 기본 동작은 다음 구성 옵션 중 하나를 제공하여 수정할 수 있습니다. 다음은 사용 가능한 옵션 및 해당 기본값 목록입니다.</target>
        </trans-unit>
        <trans-unit id="dadbead9d9ff3ff83e3d3024df9c3fa5fbc08537" translate="yes" xml:space="preserve">
          <source>The default options passed to &lt;code&gt;minimatch&lt;/code&gt; when using glob strings to match URLs</source>
          <target state="translated">glob 문자열을 사용하여 URL과 일치 할 때 &lt;code&gt;minimatch&lt;/code&gt; 매치에 전달 된 기본 옵션</target>
        </trans-unit>
        <trans-unit id="656569fc7a8c5735f9199c51324e2ff1e5b8d7a7" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;port&lt;/code&gt; within a project&amp;rsquo;s global &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; has changed from &lt;code&gt;2020&lt;/code&gt; to now being a random open port. You can still configure a specific &lt;code&gt;port&lt;/code&gt; if needed within the &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">프로젝트의 전역 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 내 &lt;code&gt;port&lt;/code&gt; 의 기본값 이 &lt;code&gt;2020&lt;/code&gt; 에서 이제 임의의 열린 포트로 변경되었습니다 . 당신은 여전히 특정의 구성 할 수있는 &lt;code&gt;port&lt;/code&gt; 내에서 필요한 경우 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c045d97cef57725b7e5a1c7d7b084ee34492c3ec" translate="yes" xml:space="preserve">
          <source>The desktop application has been completely redesigned. We have moved from a tray application to a standard dock application. The list of projects is now in the same window as the list of tests in a project. As each test runs, the application highlights the currently running spec and displays the browser version running. The configuration of a project is now displayed in its own tab. There is now a Desktop Menu where you can logout, check for updates, or view help links.</source>
          <target state="translated">데스크톱 응용 프로그램이 완전히 재 설계되었습니다. 트레이 응용 프로그램에서 표준 독 응용 프로그램으로 이동했습니다. 프로젝트 목록은 이제 프로젝트의 테스트 목록과 동일한 창에 있습니다. 각 테스트가 실행될 때 응용 프로그램은 현재 실행중인 사양을 강조 표시하고 실행중인 브라우저 버전을 표시합니다. 이제 프로젝트 구성이 자체 탭에 표시됩니다. 이제 로그 아웃, 업데이트 확인 또는 도움말 링크를 볼 수있는 데스크탑 메뉴가 있습니다.</target>
        </trans-unit>
        <trans-unit id="84620e58ffab27c5c7f1b25b98727dbe1c3688b5" translate="yes" xml:space="preserve">
          <source>The difference in running times and machines used is very clear when looking at the &lt;a href=&quot;#Machines-View&quot;&gt;Machines View&lt;/a&gt; on the Dashboard. Notice how the run parallelized across 2 machines automatically ran all specs based on their duration, while the run without parallelization did not.</source>
          <target state="translated">실행 시간과 사용 된 시스템의 차이 는 대시 보드에서 시스템 &lt;a href=&quot;#Machines-View&quot;&gt;보기&lt;/a&gt; 를 볼 때 매우 분명 합니다. 두 머신에서 병렬화 된 실행이 지속 기간을 기준으로 모든 스펙을 자동으로 실행하는 반면 병렬화없는 실행은 그렇지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3c0e12d3e8a6e8a148ecd00e3f23503fa3043a15" translate="yes" xml:space="preserve">
          <source>The direct download will always grab the latest available version. Your platform will be detected automatically.</source>
          <target state="translated">직접 다운로드는 항상 사용 가능한 최신 버전을 가져옵니다. 플랫폼이 자동으로 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="aaa8453925f36821d210443898f7bbd43f7082ff" translate="yes" xml:space="preserve">
          <source>The direction to navigate.</source>
          <target state="translated">탐색 방향.</target>
        </trans-unit>
        <trans-unit id="12955aeff648f9bf99b7d35972af5d6521b9b4df" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;considered animating&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;애니메이션&lt;/a&gt; 으로 간주 되기 위해 시간이 지남에 따라 요소가 초과해야하는 거리 (픽셀) 입니다.</target>
        </trans-unit>
        <trans-unit id="87831849a3c72449502f9290e2e9d7a48fddbe79" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be considered animating</source>
          <target state="translated">애니메이션으로 간주 되려면 요소가 시간이 지남에 따라 초과해야하는 픽셀 단위의 거리</target>
        </trans-unit>
        <trans-unit id="9f00c259add40268007481b9b7b23cbe9f8f37c4" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s left to trigger the event.</source>
          <target state="translated">이벤트를 트리거하기 위해 요소의 왼쪽에서 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="84f9ead7c8116a292eee10ab3a179f8009806f93" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s top to trigger the event.</source>
          <target state="translated">이벤트를 트리거하기위한 요소의 상단부터의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="2b5e5ea14de7c1d69850b4c258690bbfb398c989" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the click.</source>
          <target state="translated">클릭을 발생시키는 요소의 왼쪽에서 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="8b0907a1b12c2afc11cfaabeda830378efead1d0" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the double click.</source>
          <target state="translated">더블 클릭을 발행하기위한 요소의 왼쪽으로부터의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="702a5646e5a77ea6d043ac06725e983326dab03c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the right click.</source>
          <target state="translated">오른쪽 클릭을 실행하는 요소의 왼쪽에서 픽셀 단위의 거리입니다.</target>
        </trans-unit>
        <trans-unit id="058daa11285b49de690704beee7e9e80583e10bd" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the click.</source>
          <target state="translated">클릭을 발생시키는 요소의 상단으로부터의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="139cd6856b44a5da7370e9b28a38a10b8d73198f" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the double click.</source>
          <target state="translated">더블 클릭을 실행하기위한 요소 상단으로부터의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="fc4ec431b6ade65c9a5c185be8c080616b5caa39" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the right click.</source>
          <target state="translated">오른쪽 클릭을 실행하는 요소의 상단으로부터의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="2ceeaaaa0de1fae94612033134e1948a67423d8c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s left or percentage of the window/element&amp;rsquo;s width to scroll to.</source>
          <target state="translated">창 / 요소의 왼쪽 또는 스크롤 할 창 / 요소 너비의 백분율로부터의 거리 (픽셀 단위)입니다.</target>
        </trans-unit>
        <trans-unit id="5f90015069dd995c1aba9c1530ade43fb58b0772" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s top or percentage of the window/element&amp;rsquo;s height to scroll to.</source>
          <target state="translated">창 / 요소의 상단 또는 스크롤 할 창 / 요소 높이의 백분율로부터의 거리 (픽셀 단위)입니다.</target>
        </trans-unit>
        <trans-unit id="bc3ea69b7360744d05bb93f8ae6f767ffc990c02" translate="yes" xml:space="preserve">
          <source>The docs have not yet been updated to reflect the changes to &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">워드 프로세서는 아직에 대한 변경 사항을 반영하도록 업데이트되지 않은 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6cd8428dd11106d767a00d4a0975a15492a52aae" translate="yes" xml:space="preserve">
          <source>The domain the cookie is visible to</source>
          <target state="translated">쿠키가 보이는 도메인</target>
        </trans-unit>
        <trans-unit id="10e5b447eb11390c3666876771f76899ac971dba" translate="yes" xml:space="preserve">
          <source>The double click below will be issued inside of the element (30px from the left and 10px from the top).</source>
          <target state="translated">아래 더블 클릭은 요소 내부에서 실행됩니다 (왼쪽에서 30px, 상단에서 10px).</target>
        </trans-unit>
        <trans-unit id="b5ad8169dbed2921957df939c24b0a9bd5dee0d7" translate="yes" xml:space="preserve">
          <source>The download server URL is &lt;code&gt;https://download.cypress.io&lt;/code&gt;.</source>
          <target state="translated">다운로드 서버 URL은 &lt;code&gt;https://download.cypress.io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0f5fafcb4e06713527bba1e2c4d16d7dfbefb70" translate="yes" xml:space="preserve">
          <source>The easiest way to check that this happened is likely with a unit or integration test at the server level and not at the end-to-end level. You generally do not need to test things only your server interacts with like side effects and services.</source>
          <target state="translated">이러한 상황이 발생했는지 확인하는 가장 쉬운 방법은 엔드 투 엔드 레벨이 아닌 서버 레벨에서 유닛 또는 통합 테스트를하는 것입니다. 일반적으로 서버 만 부작용 및 서비스와 상호 작용하는 것을 테스트 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="b11ce10c86a2197eaccc24d1e613d430b5f1cb3b" translate="yes" xml:space="preserve">
          <source>The el subject is changed with another command</source>
          <target state="translated">el 주제는 다른 명령으로 변경됩니다</target>
        </trans-unit>
        <trans-unit id="77de30354c22e5ec8dd645947362de5b7cec125d" translate="yes" xml:space="preserve">
          <source>The element is being covered by another element</source>
          <target state="translated">요소가 다른 요소로 덮여 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a632603f722d7f42f6e33adf0509d3384d6c9d6" translate="yes" xml:space="preserve">
          <source>The element is disabled</source>
          <target state="translated">요소가 비활성화되었습니다</target>
        </trans-unit>
        <trans-unit id="c7119acb5137f8a22445f07ef3629e78c9da3828" translate="yes" xml:space="preserve">
          <source>The element is not visible</source>
          <target state="translated">요소가 보이지 않습니다</target>
        </trans-unit>
        <trans-unit id="5493bb07248f38cd959d9e153e545952c54d513b" translate="yes" xml:space="preserve">
          <source>The element is queried, and Cypress automatically waits and retries for a few moments if it isn&amp;rsquo;t found immediately.</source>
          <target state="translated">요소가 쿼리되고 Cypress가 즉시 발견되지 않으면 자동으로 잠시 기다렸다가 다시 시도합니다.</target>
        </trans-unit>
        <trans-unit id="2d4734d9db362c541365dbb5bf3af37bb8451ae6" translate="yes" xml:space="preserve">
          <source>The element must first reach actionability</source>
          <target state="translated">요소는 먼저 실행 가능성에 도달해야합니다</target>
        </trans-unit>
        <trans-unit id="62a2de0cf7b48d63f3d28689f77aa2911c184179" translate="yes" xml:space="preserve">
          <source>The element we want to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; on could be covered by another element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 하려는 요소 다른 요소로 덮일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51971fd36c549ea21390e40e13a475a94d591718" translate="yes" xml:space="preserve">
          <source>The element where you want finding next siblings to stop.</source>
          <target state="translated">다음 형제를 찾기 위해 멈추려는 요소.</target>
        </trans-unit>
        <trans-unit id="b2eaca189274f418348f69f9446ee71d73342006" translate="yes" xml:space="preserve">
          <source>The element where you want finding parent ancestors to stop.</source>
          <target state="translated">부모 조상 찾기를 중지하려는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="3dc1fd5f7be297c87f2069dc9187d17dede629c8" translate="yes" xml:space="preserve">
          <source>The element where you want finding previous siblings to stop.</source>
          <target state="translated">이전 형제를 찾기 위해 중지하려는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="9517b492e4e12f5080cf5d8e24b162fe5c92bd53" translate="yes" xml:space="preserve">
          <source>The element&amp;rsquo;s center is hidden from view</source>
          <target state="translated">요소의 중심은 보이지 않습니다</target>
        </trans-unit>
        <trans-unit id="bdde7add66a8402ff4a1b697154d2cb179f643ba" translate="yes" xml:space="preserve">
          <source>The encoding to be used when reading the file. The following encodings are supported:</source>
          <target state="translated">파일을 읽을 때 사용되는 인코딩입니다. 다음과 같은 인코딩이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="a8b40510ed82ab023b00045c5eda22d07440c34a" translate="yes" xml:space="preserve">
          <source>The encoding to be used when serializing the response body. The following encodings are supported: &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;latin1&lt;/code&gt;, &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;ucs2&lt;/code&gt;, &lt;code&gt;ucs-2&lt;/code&gt;, &lt;code&gt;utf16le&lt;/code&gt;, &lt;code&gt;utf-16le&lt;/code&gt;</source>
          <target state="translated">응답 본문을 직렬화 할 때 사용할 인코딩입니다. 다음 인코딩이 지원됩니다 : &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;base64&lt;/code&gt; , &lt;code&gt;binary&lt;/code&gt; , &lt;code&gt;hex&lt;/code&gt; , &lt;code&gt;latin1&lt;/code&gt; , &lt;code&gt;utf8&lt;/code&gt; , &lt;code&gt;utf-8&lt;/code&gt; , &lt;code&gt;ucs2&lt;/code&gt; , &lt;code&gt;ucs-2&lt;/code&gt; , &lt;code&gt;utf16le&lt;/code&gt; , &lt;code&gt;utf-16le&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96ca51aba74d07f5f8cf66230fc93720efa58ef0" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file</source>
          <target state="translated">파일에 쓸 때 사용되는 인코딩</target>
        </trans-unit>
        <trans-unit id="e2fd717ca3b4626fc6e12af6ba37d567cb4e2448" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file. The following encodings are supported:</source>
          <target state="translated">파일에 쓸 때 사용되는 인코딩입니다. 다음과 같은 인코딩이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="139e20870845dc46ba46bac9091f5cc25631ba50" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; has been removed. You should use the equivalent environment variable &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; instead.</source>
          <target state="translated">환경 변수 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 이 제거되었습니다. 동등한 환경 변수 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 를 사용해야합니다.대신 합니다.</target>
        </trans-unit>
        <trans-unit id="5be6368bc3a0e3503078cdfd866f0a19f0a6e570" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; has been removed. To skip the binary install, set &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; 이 제거되었습니다. 이진 설치를 건너 뛰려면 &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; 을 설정 하십시오. .</target>
        </trans-unit>
        <trans-unit id="2ecdf036563a0aff74b83c357a4dcfe4ab1d7525" translate="yes" xml:space="preserve">
          <source>The error message when visiting a site with an invalid content-type now prints the correct content-type of the response Cypress received from the web server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">유효하지 않은 컨텐츠 유형을 가진 사이트를 방문 할 때 오류 메시지가 이제 웹 서버에서 수신 한 Cypress 응답의 올바른 컨텐츠 유형을 인쇄합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;# 3101&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="14d255f944f14c38878f32d811f977f90001707d" translate="yes" xml:space="preserve">
          <source>The error message: &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; has been rewritten to provide much clearer information on why this is happening, including a string representation of your DOM element. Additionally it will have its own error page dedicated to explaining how this happens and what you can do to prevent it.</source>
          <target state="translated">오류 메시지 : &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; DOM 요소의 문자열 표현을 포함하여이 문제가 발생하는 이유에 대한보다 명확한 정보를 제공하도록 다시 작성되었습니다. 또한이 오류가 발생하는 방법과이를 방지하기 위해 수행 할 수있는 작업을 설명하는 자체 오류 페이지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="75829d89fbb6e250c1bcb9fa477b161458e717b2" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;after:screenshot&lt;/code&gt; is called after a screenshot is taken and saved to disk.</source>
          <target state="translated">&lt;code&gt;after:screenshot&lt;/code&gt; 을 생성하여 디스크에 저장 한 후 after : screenshot 이벤트 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ef7a4925512fa023fe9bd6ef34d2a29ebf2c1281" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;before:browser:launch&lt;/code&gt; can be used to modify the launch arguments for each particular browser.</source>
          <target state="translated">&lt;code&gt;before:browser:launch&lt;/code&gt; 이벤트 는 각 특정 브라우저의 시작 인수를 수정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3d99a46ca819e2e53166bba97742dd15e920a4a" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;file:preprocessor&lt;/code&gt; is used to customize how your test code is transpiled and sent to the browser. By default Cypress handles CoffeeScript and ES6 using &lt;code&gt;babel&lt;/code&gt; and then uses &lt;code&gt;browserify&lt;/code&gt; to package it for the browser.</source>
          <target state="translated">이벤트 &lt;code&gt;file:preprocessor&lt;/code&gt; 테스트 코드를 변환하고 브라우저로 보내는 방법을 사용자 정의하는 데 사용됩니다. 기본적으로 Cypress는 &lt;code&gt;babel&lt;/code&gt; 을 사용 하여 CoffeeScript 및 ES6을 처리 한 다음 &lt;code&gt;browserify&lt;/code&gt; 를 사용 하여 브라우저 용으로 패키지합니다.</target>
        </trans-unit>
        <trans-unit id="bddb4f59232d188de74910418f286f2856636e48" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;task&lt;/code&gt; is used in conjunction with the &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command. It allows you to write arbitrary code in Node to accomplish tasks that aren&amp;rsquo;t possible in the browser.</source>
          <target state="translated">이벤트 &lt;code&gt;task&lt;/code&gt; 은 &lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 사용됩니다 . 브라우저에서 불가능한 작업을 수행하기 위해 Node에서 임의의 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb85755389a7698ff9f2131259f0b689236412dd" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which &lt;code&gt;cypress run&lt;/code&gt; is called.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 실행될 때마다 발생합니다 . 결과적으로 사양을 &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;병렬로&lt;/a&gt; 실행 하는 경우 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 이 호출 되는 각 시스템에 대해 한 번씩 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="a341b7038edecf8e8d3556690dcac81893d12f6b" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which the tests are run.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;cypress run&lt;/code&gt; 실행될 때마다 발생합니다 . 결과적으로 사양을 &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;병렬&lt;/a&gt; 로 실행하는 경우 테스트가 실행되는 각 머신에 대해 이벤트가 한 번씩 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="a417040e835b0b4bf3df08c1b7eb5dbd3fea0707" translate="yes" xml:space="preserve">
          <source>The events are fired to spec, including the coordinates of where the event took place.</source>
          <target state="translated">이벤트는 이벤트가 발생한 위치의 좌표를 포함하여 사양에 따라 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="de7c385dad035257621ade048482ab3f07cac274" translate="yes" xml:space="preserve">
          <source>The exact default configuration options &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;can be found here&lt;/a&gt;.</source>
          <target state="translated">정확한 기본 구성 옵션 &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;은 여기에서 찾을 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="910bea55225cac32deb7ac98572ed969a1c517e6" translate="yes" xml:space="preserve">
          <source>The example above would resolve in the following order:</source>
          <target state="translated">위의 예는 다음 순서로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="b58ede9f165be804049ed9aa3d8d05f50412f5b2" translate="yes" xml:space="preserve">
          <source>The example below gets the text contained within one element and saves it in a closure variable. Then the test gets the text in another element and asserts that the two text values are the same after normalizing.</source>
          <target state="translated">아래 예제는 한 요소에 포함 된 텍스트를 가져 와서 클로저 변수에 저장합니다. 그런 다음 테스트는 다른 요소의 텍스트를 가져 와서 정규화 후 두 텍스트 값이 동일하다고 주장합니다.</target>
        </trans-unit>
        <trans-unit id="47e706104c1f7dc9f26c4beb05980501c2d936d7" translate="yes" xml:space="preserve">
          <source>The example below is a use case where we are asserting across multiple elements. Using a &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; callback function is a great way to query from a &lt;strong&gt;parent&lt;/strong&gt; into multiple children elements and assert something about their state.</source>
          <target state="translated">아래 예제는 여러 요소에 걸쳐 주장하는 사용 사례입니다. 사용 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 콜백 함수 것은에서 쿼리 할 수있는 좋은 방법입니다 &lt;strong&gt;부모&lt;/strong&gt; 여러 아이들 요소로 자신의 상태에 대해 뭔가 주장한다.</target>
        </trans-unit>
        <trans-unit id="49acc9498a2a7c541c7d366c6fdc2ca30f545f46" translate="yes" xml:space="preserve">
          <source>The example below shows how to delete the recorded video for a spec with no failing tests.</source>
          <target state="translated">아래 예는 테스트에 실패하지 않은 사양에 대해 녹화 된 비디오를 삭제하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4981ca5bd4758d48f00c30b0218bc04b93b9b47d" translate="yes" xml:space="preserve">
          <source>The example below will fail because you&amp;rsquo;ve forcibly terminated the test early with mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt;.</source>
          <target state="translated">mocha 's &lt;code&gt;done&lt;/code&gt; 으로 테스트를 조기에 강제 종료했기 때문에 아래 예제는 실패 합니다 .</target>
        </trans-unit>
        <trans-unit id="bc951f38f465f285721a93cef38e6e2654d44667" translate="yes" xml:space="preserve">
          <source>The example_spec from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;kitchen-sink&lt;/a&gt; will never accidentally be seeded when running &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a brand new project.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;주방 싱크대&lt;/a&gt; 의 example_spec은 실수로 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 을 실행할&lt;/a&gt; 때 시드되지 않습니다. 새로운 프로젝트 을 .</target>
        </trans-unit>
        <trans-unit id="783659466354f78195d97cb44d5d0aae35d7873e" translate="yes" xml:space="preserve">
          <source>The examples below are from a run of our &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink Example&lt;/a&gt; project. You can see the results of this run on the &lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">아래 예제는 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink Example&lt;/a&gt; 프로젝트를 실행 한 것 입니다. &lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;Cypress 대시 보드&lt;/a&gt; 에서이 실행 결과를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0813eac0d04e75c8c78a9844e0f09353daf385a5" translate="yes" xml:space="preserve">
          <source>The existing &lt;code&gt;.cy&lt;/code&gt; cache and settings are now correctly copied again after an app update.</source>
          <target state="translated">앱 업데이트 후 기존 &lt;code&gt;.cy&lt;/code&gt; 캐시 및 설정이 다시 올바르게 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="72f0e27cd05c046a77ed8585ffd6cb1cc65b9462" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내 보낸 함수는 &lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 으로 프로젝트를 열 때마다 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="55a3989fcb4da64675c724ee8d4e6a26b14baf01" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내 보낸 함수는 &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 으로 프로젝트를 열 때마다 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="b7563b9989f1b2d437a36185b7a53dead9aed4fd" translate="yes" xml:space="preserve">
          <source>The file not existing</source>
          <target state="translated">존재하지 않는 파일</target>
        </trans-unit>
        <trans-unit id="23a49b9ea91850653755c70fdf57eefa7c124be7" translate="yes" xml:space="preserve">
          <source>The first 10 failures are displayed with a link to more.</source>
          <target state="translated">처음 10 개의 실패는 더 많은 링크와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="06769657bc571e4f949e981a579c5c437feb6e92" translate="yes" xml:space="preserve">
          <source>The first and most important concept you should recognize is&amp;hellip;</source>
          <target state="translated">가장 먼저 알아야 할 가장 중요한 개념은&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0ff467d5777b46834de143161a318bc5b7fc4507" translate="yes" xml:space="preserve">
          <source>The first group can be called &lt;code&gt;Windows/Chrome 69&lt;/code&gt;.</source>
          <target state="translated">첫 번째 그룹은 &lt;code&gt;Windows/Chrome 69&lt;/code&gt; 라고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="55ee8f7dd7dcbfa53e5e642cdd583c30e9c765ec" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="translated">첫 번째 기간은 일치하는 요청이 브라우저를 떠나기를 기다립니다. 이 기간은 &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt; 옵션으로 구성되며 기본값은 &lt;code&gt;5000&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="567af7f315e8ecb7312738fa618eda9e0172eb25" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="translated">첫 번째 기간은 일치하는 요청이 브라우저를 떠나기를 기다립니다. 이 기간은 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt; 옵션으로 구성되며 기본값은 &lt;code&gt;5000&lt;/code&gt; ms 입니다.</target>
        </trans-unit>
        <trans-unit id="58ec06f0aaa09e291124df55221d849d361b8bb4" translate="yes" xml:space="preserve">
          <source>The first solution we recommend is to avoid unnecessarily splitting commands that query elements. In our case we first query elements using &lt;code&gt;cy.get()&lt;/code&gt; and then query from that list of elements using &lt;code&gt;.find()&lt;/code&gt;. We can combine two separate queries into one - forcing the combined query to be retried.</source>
          <target state="translated">우리가 권장하는 첫 번째 해결책은 요소를 쿼리하는 명령을 불필요하게 분할하지 않는 것입니다. 이 경우 먼저 &lt;code&gt;cy.get()&lt;/code&gt; 사용하여 요소를 쿼리 한 다음 &lt;code&gt;.find()&lt;/code&gt; 사용하여 해당 요소 목록에서 쿼리 합니다. 두 개의 개별 쿼리를 하나로 결합하여 결합 된 쿼리를 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e71cb3a301013cd595e3290885e5c7fab4c3f8c3" translate="yes" xml:space="preserve">
          <source>The folder, the files within the folder, and all child folders and their files (recursively) are watched.</source>
          <target state="translated">폴더, 폴더 내의 파일 및 모든 하위 폴더 및 해당 파일 (재귀 적으로)이 감시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae3bbb8555c8359e3faefc48ca2f99d8f8c4745b" translate="yes" xml:space="preserve">
          <source>The following XHR&amp;rsquo;s which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="translated">이 URL을 가진 &lt;code&gt;xhr.open(...)&lt;/code&gt; 다음 XHR은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="7917b639dd89e87c70cf394ebb0d89f5bf79f91a" translate="yes" xml:space="preserve">
          <source>The following XHRs which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="translated">이 URL 이있는 &lt;code&gt;xhr.open(...)&lt;/code&gt; 다음 XHR은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="fba11f3de4cc3cfbc18c034553c987492a50f8a3" translate="yes" xml:space="preserve">
          <source>The following calculations factor in CSS translations and transforms.</source>
          <target state="translated">다음 계산은 CSS 변환 및 변환에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="c08b63b39c67e0e98916e387da32b4be7861f1d8" translate="yes" xml:space="preserve">
          <source>The following events are available:</source>
          <target state="translated">다음 이벤트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="646319b2697e628c52ae3f9eca7a2cf66dcf0f09" translate="yes" xml:space="preserve">
          <source>The following events will be fired based on what key was pressed identical to the event spec:</source>
          <target state="translated">이벤트 스펙과 동일한 키를 눌렀을 때 다음 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7a6d568435c548045433b9a553e45e05f3cc5f51" translate="yes" xml:space="preserve">
          <source>The following key can be combined with &lt;code&gt;.rightclick()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;..</source>
          <target state="translated">다음 키는 &lt;code&gt;options&lt;/code&gt; 통해 &lt;code&gt;.rightclick()&lt;/code&gt; 과 결합 할 수 있습니다 ..</target>
        </trans-unit>
        <trans-unit id="4445f0557056b006b77daa78dbb61b44b3467902" translate="yes" xml:space="preserve">
          <source>The following keys can be combined with &lt;code&gt;.click()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">다음 키는 &lt;code&gt;options&lt;/code&gt; 통해 &lt;code&gt;.click()&lt;/code&gt; 과 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91b21ab704b594f6370b5796dde61db82f8eebae" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.click()&lt;/code&gt;.</source>
          <target state="translated">다음 수정자는 &lt;code&gt;.click()&lt;/code&gt; 과 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="887afe261a5c4479dd3dcdee34523debc4bf098d" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="translated">다음 수정자는 &lt;code&gt;.dblclick()&lt;/code&gt; 과 결합 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2bc92c734921c9a90f718550029eb698e194f027" translate="yes" xml:space="preserve">
          <source>The following options are merged in as default options to &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음 옵션은 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 기본 옵션으로 병합되었습니다.</target>
        </trans-unit>
        <trans-unit id="d34fe2e5b1592268188b96861ce12c62585addd1" translate="yes" xml:space="preserve">
          <source>The following options control the behavior of the server affecting all requests</source>
          <target state="translated">다음 옵션은 모든 요청에 ​​영향을주는 서버의 동작을 제어합니다</target>
        </trans-unit>
        <trans-unit id="93f76fe41eee293d26c9929ac78caec13c4c6857" translate="yes" xml:space="preserve">
          <source>The following rules have been implemented that match real browser behavior (and the spec):</source>
          <target state="translated">실제 브라우저 동작 (및 사양)과 일치하는 다음 규칙이 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="66894db59ad64d0d1a3e02e706341f7af869dda1" translate="yes" xml:space="preserve">
          <source>The full file path is now included in console output for &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">전체 파일 경로가 &lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 콘솔 출력에 포함되었습니다 .</target>
        </trans-unit>
        <trans-unit id="52dbe520b802a2b6d0ab935022601462043ae180" translate="yes" xml:space="preserve">
          <source>The full path to the source file.</source>
          <target state="translated">소스 파일의 전체 경로</target>
        </trans-unit>
        <trans-unit id="2fb2662c58e729e5289edcd2c336a9de944bc0ce" translate="yes" xml:space="preserve">
          <source>The full source code for this guide can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io/cypress-example-todomvc-redux&lt;/a&gt; repository.</source>
          <target state="translated">이 안내서의 전체 소스 코드는 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io / cypress-example-todomvc-redux&lt;/a&gt; 저장소 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44d4e77f37936b84589875e5484286e06463b50f" translate="yes" xml:space="preserve">
          <source>The full source code for this section can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; repository.</source>
          <target state="translated">이 섹션의 전체 소스 코드는 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt; 에서 찾을 수 있습니다. 저장소 .</target>
        </trans-unit>
        <trans-unit id="3eb3b289e1a6ce3364f66d4f34c7dc1f3a8bbe33" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; is executed, with the found element yielded to it.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 전달 된 함수 가 발견되고 찾은 요소가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3dc420de6ac3a3d53b7ef1e6f1012fde08e99eb2" translate="yes" xml:space="preserve">
          <source>The function used to replace the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">함수는 대체하는 데 &lt;code&gt;method&lt;/code&gt; 온 &lt;code&gt;object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="517d512f6e459bb09e8ff4252b8f0f79d55c5494" translate="yes" xml:space="preserve">
          <source>The good news here is that it is extremely rare to need to visit two different superdomains in a single test. Why? Because the browser has a natural security barrier called &lt;code&gt;origin policy&lt;/code&gt; that means that state like &lt;code&gt;localStorage&lt;/code&gt;, &lt;code&gt;cookies&lt;/code&gt;, &lt;code&gt;service workers&lt;/code&gt; and many other APIs are not shared between them.</source>
          <target state="translated">여기서 좋은 소식은 한 번의 테스트로 두 개의 서로 다른 수퍼 도메인을 방문해야하는 경우가 거의 없다는 것입니다. 왜? 브라우저에는 &lt;code&gt;origin policy&lt;/code&gt; 이라는 기본 보안 장벽이 있기 때문에 &lt;code&gt;localStorage&lt;/code&gt; , &lt;code&gt;cookies&lt;/code&gt; , &lt;code&gt;service workers&lt;/code&gt; 및 기타 여러 API와 같은 상태 는 서로간에 공유되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6038afe5773657ada3181c00c8ae95cc804bc98d" translate="yes" xml:space="preserve">
          <source>The good news is that we aren&amp;rsquo;t Selenium, nor are we a traditional e2e testing tool. That means we&amp;rsquo;re not bound to the same restrictions.</source>
          <target state="translated">좋은 소식은 우리가 셀레늄이 아니며 전통적인 e2e 테스트 도구가 아니라는 것입니다. 이는 우리가 동일한 제한에 구속되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d3a05cd54e98b8eeab634eaef1dc6a2aac4c46e8" translate="yes" xml:space="preserve">
          <source>The idea is that we never want to interfere with static assets that are fetched via Ajax.</source>
          <target state="translated">아이디어는 Ajax를 통해 가져온 정적 자산을 방해하고 싶지 않다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="af282f8e157d1b3edbaaa6794a00bde62a7f9081" translate="yes" xml:space="preserve">
          <source>The image below shows that our application is displaying at &lt;code&gt;1000px&lt;/code&gt; width, &lt;code&gt;660px&lt;/code&gt; height and scaled to &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="translated">우리의 응용 프로그램에 표시되는 것을 보여주는 아래 이미지 &lt;code&gt;1000px&lt;/code&gt; 폭 &lt;code&gt;660px&lt;/code&gt; 높이를 조정할 &lt;code&gt;100%&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecc51b70f97a0da9968b597d88238ff4b0320790" translate="yes" xml:space="preserve">
          <source>The implicit form is much shorter! So when would you want to use the explicit form?</source>
          <target state="translated">암시 적 형태는 훨씬 짧습니다! 언제 명시적인 형식을 사용하고 싶습니까?</target>
        </trans-unit>
        <trans-unit id="ba91399d40baecd72aa8838e29b4664ca133d2e9" translate="yes" xml:space="preserve">
          <source>The in-page JS (the application under test) could throw an error.</source>
          <target state="translated">인 페이지 JS (테스트중인 애플리케이션)에서 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad438b013d33821acb075992087685309c90b75b" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f9e46f4c71463a3b7675e36d412ca68a59268dc" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; could respond with something other than success.</source>
          <target state="translated">초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 성공 이외의 것으로 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df74d0b2e050f81f7a98f7c81c5cc356fbb27628" translate="yes" xml:space="preserve">
          <source>The initial imported plugins file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">가져온 초기 플러그인 파일 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;을 다른 파일&lt;/a&gt; 로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6bfa6b4e18e2d1d79e9b69ce6a6bdfda96703dee" translate="yes" xml:space="preserve">
          <source>The initial imported support file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">초기 반입 된 지원 파일 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;을 다른 파일&lt;/a&gt; 로 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3fa4db4ff7d088eca70cb22b7d83516e75e4fcb5" translate="yes" xml:space="preserve">
          <source>The input we want to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; into could be disabled.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 하려는 입력을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61ba64555e3bcf6c81720711aba0a9ce8c0ea5b4" translate="yes" xml:space="preserve">
          <source>The insanity that is URL parsing to figure out absolute, relative, absolute-path-relative, http, sub domains, and local files should work in most cases. In other words, Cypress has implemented the vast majority of url parsing based on the &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL spec&lt;/a&gt;.</source>
          <target state="translated">절대, 상대, 절대 경로 상대, http, 하위 도메인 및 로컬 파일을 파악하기 위해 URL 구문 분석 인 광기는 대부분의 경우 작동해야합니다. 즉, Cypress는 &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL spec을&lt;/a&gt; 기반으로 대부분의 URL 구문 분석을 구현했습니다 .</target>
        </trans-unit>
        <trans-unit id="3c1430628b956c688b6d0241cc0bfaa3412293ac" translate="yes" xml:space="preserve">
          <source>The installed Test Runner comes with the fully transpiled, unobfuscated JavaScript source code that you can hack on. You might want to directly modify the installed Test Runner code to:</source>
          <target state="translated">설치된 Test Runner는 완벽하게 변환되고 난독 처리되지 않은 JavaScript 소스 코드와 함께 제공됩니다. 설치된 Test Runner 코드를 직접 수정하여 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fc86127c7a522f90bf8e07dbcac1df2efc77009" translate="yes" xml:space="preserve">
          <source>The instructions in Cypress&amp;rsquo;s update window now include &lt;code&gt;yarn&lt;/code&gt; update instructions alongside &lt;code&gt;npm&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;#2871&lt;/a&gt;.</source>
          <target state="translated">Cypress 업데이트 창의 지침 에는 이제 &lt;code&gt;npm&lt;/code&gt; 과 함께 &lt;code&gt;yarn&lt;/code&gt; 업데이트 지침이 포함됩니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;# 2871&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="082ca562fdc4fdabd33a9b0843ebfe3adda58f63" translate="yes" xml:space="preserve">
          <source>The instrumentation takes your original code like this fragment&amp;hellip;</source>
          <target state="translated">인스 트루먼 테이션은이 조각과 같은 원래 코드를 사용합니다&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="611ea9a5233c8e3b28251385dd27faf6dfab5c71" translate="yes" xml:space="preserve">
          <source>The intention of &lt;a href=&quot;request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 의 의도 는 프런트 엔드 애플리케이션을 시작하지 않고도 실제 실행중인 서버에서 엔드 포인트를 확인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a4a220d891bf10e366988261b97e540636287bc3" translate="yes" xml:space="preserve">
          <source>The intention of &lt;code&gt;cy.request()&lt;/code&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; 의 의도 는 프론트 엔드 애플리케이션을 시작하지 않고 실제 실행중인 서버에서 엔드 포인트를 점검하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="44694c765085a539b94664b5d15d4c92e4301eba" translate="yes" xml:space="preserve">
          <source>The intercept was registered too late</source>
          <target state="translated">요격이 너무 늦게 등록되었습니다</target>
        </trans-unit>
        <trans-unit id="6cf9f7f7d3deb6aa4449b5dc10deb111b5d4be36" translate="yes" xml:space="preserve">
          <source>The interface for writing custom commands has been deprecated. &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;Please read our docs on the new custom commands interface&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;#436&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;#465&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 명령을 작성하기위한 인터페이스는 더 이상 사용되지 않습니다. &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;새로운 사용자 정의 명령 인터페이스에 대한 문서를 읽으십시오&lt;/a&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;# 436&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;# 465를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1fe3b413647e5524cb9a8eb759e3711e3e2c7e6f" translate="yes" xml:space="preserve">
          <source>The internal Cypress proxy now forcibly responds to requests taking longer than &lt;code&gt;responseTimeout&lt;/code&gt;. Currently this sends back &lt;code&gt;text/html&lt;/code&gt; with the &lt;code&gt;ETIMEDOUT&lt;/code&gt; error, but this likely needs to be configurable. The reason we are now forcibly applying timeouts is to prevent &lt;code&gt;socket pooling exhaustion&lt;/code&gt; where tests are running and a 3rd party server never responds to the request.</source>
          <target state="translated">내부 Cypress 프록시는 이제 &lt;code&gt;responseTimeout&lt;/code&gt; 보다 오래 걸리는 요청에 강제로 응답합니다 . 현재 이것은 &lt;code&gt;ETIMEDOUT&lt;/code&gt; 오류 와 함께 &lt;code&gt;text/html&lt;/code&gt; 을 다시 보내지 만 구성 할 수 있어야합니다. 현재 시간 초과를 강제 적용하는 이유는 테스트가 실행되고 타사 서버가 요청에 응답하지 않는 &lt;code&gt;socket pooling exhaustion&lt;/code&gt; 를 방지하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e78dd9a731fa9965824416262a86b07ce38f0d6e" translate="yes" xml:space="preserve">
          <source>The internal retry loop of Cypress now runs at &lt;code&gt;60fps&lt;/code&gt;, instead of &lt;code&gt;20fps&lt;/code&gt;.</source>
          <target state="translated">Cypress의 내부 재시도 루프는 이제 &lt;code&gt;20fps&lt;/code&gt; 대신 &lt;code&gt;60fps&lt;/code&gt; 로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b03e91dc47b3f73bfef22e00361142205f95b71" translate="yes" xml:space="preserve">
          <source>The internal version of &lt;code&gt;node&lt;/code&gt; which is built into Cypress is now &lt;code&gt;6.1.0&lt;/code&gt;.</source>
          <target state="translated">Cypress에 내장 된 &lt;code&gt;node&lt;/code&gt; 의 내부 버전 은 이제 &lt;code&gt;6.1.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="740e4a044ae31f522828c809213aba3c21bab974" translate="yes" xml:space="preserve">
          <source>The last group can be called &lt;code&gt;package/guest&lt;/code&gt;:</source>
          <target state="translated">마지막 그룹은 &lt;code&gt;package/guest&lt;/code&gt; 라고 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="98c0cfacf75a55888963139cea9090dc420be18d" translate="yes" xml:space="preserve">
          <source>The last, and probably most important reason why you want to test against local servers, is the ability to &lt;strong&gt;control them&lt;/strong&gt;. When your application is running in production you can&amp;rsquo;t control it.</source>
          <target state="translated">로컬 서버에 대해 테스트하려는 마지막 가장 중요한 이유는 서버를 &lt;strong&gt;제어 할 수 있기 때문&lt;/strong&gt; 입니다. 응용 프로그램이 프로덕션 환경에서 실행중인 경우 제어 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eb87a90f67a3d6751fca3c25e5bb985d9d1e73f0" translate="yes" xml:space="preserve">
          <source>The latest version of Cypress can be downloaded here: &lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http://download.cypress.io/latest&lt;/a&gt;.</source>
          <target state="translated">Cypress의 최신 버전은 &lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http://download.cypress.io/latest에서&lt;/a&gt; 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4546e37121e645a0402d6434a03fbb4574bdb049" translate="yes" xml:space="preserve">
          <source>The latest version of the &lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI&lt;/a&gt; now accepts passing arguments to &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;. Example: &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt;. This enables you to set and override local &lt;code&gt;cypress.json&lt;/code&gt; configuration and additionally set environment variables.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI&lt;/a&gt; 의 최신 버전에서는 이제 인수를 &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; 에&lt;/a&gt; 전달할 수 있습니다 . 예 : &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt; 입니다. 이를 통해 로컬 &lt;code&gt;cypress.json&lt;/code&gt; 구성 을 설정 및 대체 하고 추가로 환경 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08d2b1553d7b97a29336b7996cff75ccac5f23ed" translate="yes" xml:space="preserve">
          <source>The lefthand side of the Test Runner is a visual representation of your test suite. Each test block is properly nested and each test, when clicked, displays every Cypress command and assertion executed within the test&amp;rsquo;s block as well as any command or assertion executed in relevant &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;beforeEach&lt;/code&gt;, &lt;code&gt;afterEach&lt;/code&gt;, and &lt;code&gt;after&lt;/code&gt; hooks.</source>
          <target state="translated">테스트 러너의 왼쪽은 테스트 스위트의 시각적 표현입니다. 각 테스트 블록은 제대로 중첩되고 클릭하면 잘 어떤 명령이나 주장으로 관련 실행 각 시험은, 디스플레이 모든 싸이프레스 명령과 주장은 시험의 블록 내에서 실행 &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;beforeEach&lt;/code&gt; , &lt;code&gt;afterEach&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 후크.</target>
        </trans-unit>
        <trans-unit id="5cad922a466bd845aaf9cf10c55d543fbfbc9dc9" translate="yes" xml:space="preserve">
          <source>The list of tests now automatically refresh when test files are renamed, deleted, or added. In addition, because the list of tests is now displayed in the desktop application, we now synchronize the state of the current running spec.</source>
          <target state="translated">테스트 파일의 이름을 바꾸거나 삭제하거나 추가하면 테스트 목록이 자동으로 새로 고쳐집니다. 또한 테스트 목록이 이제 데스크톱 응용 프로그램에 표시되므로 현재 실행중인 사양의 상태를 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="89a9ec3f90b6a288c6858dc00bc808c3021e6805" translate="yes" xml:space="preserve">
          <source>The lists of spec files now display at the correct indentation level when they are nested more than 5 directories deep. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;#3652&lt;/a&gt;.</source>
          <target state="translated">스펙 파일 목록은 5 개 이상의 디렉토리에 중첩 될 때 올바른 들여 쓰기 레벨로 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;# 3652&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="84900bfd5a7a40ed2d96e85ee78e91e18e58cf2a" translate="yes" xml:space="preserve">
          <source>The main difference between &lt;code&gt;cy.spy()&lt;/code&gt; and &lt;a href=&quot;stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; is that &lt;code&gt;cy.spy()&lt;/code&gt; does not replace the method, it only wraps it. So, while invocations are recorded, the original method is still called. This can be very useful when testing methods on native browser objects. You can verify a method is being called by your test and still have the original method action invoked.</source>
          <target state="translated">&lt;code&gt;cy.spy()&lt;/code&gt; 와 &lt;a href=&quot;stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; 의 주요 차이점은 cy.spy () 가 메소드를 대체하지 않고 &lt;code&gt;cy.spy()&lt;/code&gt; 다는 것입니다. 따라서 호출이 기록되는 동안 원래 메소드가 여전히 호출됩니다. 네이티브 브라우저 객체에서 메소드를 테스트 할 때 매우 유용합니다. 테스트에서 메소드를 호출하고 원래 메소드 조치를 계속 호출했는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc0eb4178b7ee7c54a3a37e5233234e3c9472584" translate="yes" xml:space="preserve">
          <source>The major version number of the browser.</source>
          <target state="translated">브라우저의 주 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="1f457a081ab6043108c8709f568b57afe52f8959" translate="yes" xml:space="preserve">
          <source>The minimum viewport size has been lowered from &lt;code&gt;200&lt;/code&gt; pixels to &lt;code&gt;20&lt;/code&gt; pixels. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;#1169&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;#1444&lt;/a&gt;.</source>
          <target state="translated">최소 뷰포트 크기가 &lt;code&gt;200&lt;/code&gt; 픽셀에서 &lt;code&gt;20&lt;/code&gt; 픽셀로 줄었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;# 1169&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;# 1444를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="d18c1a85deabc98e63b589386ea049cdb4f7afc1" translate="yes" xml:space="preserve">
          <source>The most common situation where you might encounter this error is when you click on an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; that navigates to another superdomain.</source>
          <target state="translated">이 오류가 발생할 수있는 가장 일반적인 상황은 다른 수퍼 도메인으로 이동 하는 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 를 클릭하는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="2d934058e66d33283cabb50fd02646551ebc83cb" translate="yes" xml:space="preserve">
          <source>The most common use case for preserving cookies is to prevent having to log in to your application before each individual test. This is a problem if the majority of each test is spent logging in a user.</source>
          <target state="translated">쿠키를 보존하는 가장 일반적인 사용 사례는 각 개별 테스트 전에 응용 프로그램에 로그인하지 않아도되는 것입니다. 각 테스트의 대부분이 사용자 로그인에 소비되는 경우에 문제가됩니다.</target>
        </trans-unit>
        <trans-unit id="495264eeb4f77fa4fe3af4e450d8fbe742f50db7" translate="yes" xml:space="preserve">
          <source>The most common use case for sharing context is when dealing with &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">컨텍스트 공유를위한 가장 일반적인 사용 사례는 &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 처리 할 때 입니다.</target>
        </trans-unit>
        <trans-unit id="ac2d2a2b4a7a61df0b86a12cf22e7bdfe6243e23" translate="yes" xml:space="preserve">
          <source>The most common use case is adding your own chrome extension.</source>
          <target state="translated">가장 일반적인 사용 사례는 고유 한 크롬 확장 프로그램을 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b5585ccc99acb821be59403211430d659e6f8f7f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;event&lt;/code&gt; to be triggered on the DOM element.</source>
          <target state="translated">DOM 요소에서 트리거 될 &lt;code&gt;event&lt;/code&gt; 의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="f6a436a2e855f7d061597050a3f6aad039087dea" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt; to be wrapped.</source>
          <target state="translated">랩핑 할 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;method&lt;/code&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e1fce31618869e21b5dde0d27bcdbc06dad64b14" translate="yes" xml:space="preserve">
          <source>The name of the alias to be referenced later within a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command using an &lt;code&gt;@&lt;/code&gt; prefix.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; 접두사를 사용하여 &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 명령 에서 나중에 참조 할 별명의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="d22f1965478b52c5923a415704ca6dd8e7b6b895" translate="yes" xml:space="preserve">
          <source>The name of the browser (case-insensitive) you want to check against. Name can be prepended with a &lt;code&gt;!&lt;/code&gt; character to inverse the check.</source>
          <target state="translated">확인할 브라우저의 이름 (대소 문자 구분 안 함)입니다. 이름 앞에 &lt;code&gt;!&lt;/code&gt; 수표를 반전하는 문자.</target>
        </trans-unit>
        <trans-unit id="74483ed362b7641341a57573d6835a3a80146dca" translate="yes" xml:space="preserve">
          <source>The name of the command you&amp;rsquo;re either adding or overwriting.</source>
          <target state="translated">추가하거나 덮어 쓰는 명령의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="66bebc87e8e746433b524d2a144338ea076869cd" translate="yes" xml:space="preserve">
          <source>The name of the configuration to get or set.</source>
          <target state="translated">가져 오거나 설정할 구성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f50face8ca9ecf422378ade1f59c1bed76d8a278" translate="yes" xml:space="preserve">
          <source>The name of the cookie to be cleared.</source>
          <target state="translated">지울 쿠키의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="312258dd244dd26ca31529fca52bec44d240d4c2" translate="yes" xml:space="preserve">
          <source>The name of the cookie to get. Required.</source>
          <target state="translated">가져올 쿠키의 이름입니다. 필수입니다.</target>
        </trans-unit>
        <trans-unit id="3d5793e8f6927c436df1e125e654bf9591dd0ce0" translate="yes" xml:space="preserve">
          <source>The name of the cookie to set.</source>
          <target state="translated">설정할 쿠키의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4e52f119e0878b0d6164e957ceef736d5824b473" translate="yes" xml:space="preserve">
          <source>The name of the environment variable to get or set.</source>
          <target state="translated">가져 오거나 설정할 환경 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b1e50cc91b0d9c692fdebf7b505ed959edf3978d" translate="yes" xml:space="preserve">
          <source>The name of the specfile where the screenshot was taken.</source>
          <target state="translated">스크린 샷을 찍은 스펙 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6acbe8f46d7c5392dfd63aed2c6e3b9169beb27c" translate="yes" xml:space="preserve">
          <source>The names and purposes of the visual parts of the Cypress Test Runner</source>
          <target state="translated">Cypress Test Runner의 시각적 부분의 이름과 목적</target>
        </trans-unit>
        <trans-unit id="820a57469c0c44fd27922b35e924334168df80c0" translate="yes" xml:space="preserve">
          <source>The number is yielded from previous command</source>
          <target state="translated">이전 명령에서 얻은 숫자</target>
        </trans-unit>
        <trans-unit id="675422abbcf8973c5fdf35a28250ded7b25b8291" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;milliseconds&lt;/code&gt; to move the clock. Any timers within the affected range of time will be called.</source>
          <target state="translated">수 &lt;code&gt;milliseconds&lt;/code&gt; 시계를 이동합니다. 영향을받는 시간 범위 내의 모든 타이머가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dbce6f2b24c7e0e0ff9e09c7912413a2dcdbee3b" translate="yes" xml:space="preserve">
          <source>The number of logs printed when installing Cypress in docker has been reduced. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;#1243&lt;/a&gt;.</source>
          <target state="translated">Docker에 Cypress를 설치할 때 인쇄되는 로그 수가 줄었습니다. 부분적으로 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;# 1243을 처리&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3f6360040d9a9b279f825ed1858e4e2caed850a3" translate="yes" xml:space="preserve">
          <source>The number of machines dedicated for each &lt;code&gt;cypress run&lt;/code&gt; call is based on your CI configuration for the project.</source>
          <target state="translated">각 &lt;code&gt;cypress run&lt;/code&gt; 호출 전용 시스템 수 는 프로젝트의 CI 구성을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="7b899fd2822c2462e0dd5b3cbb3ba4c54a99da18" translate="yes" xml:space="preserve">
          <source>The number of skipped, pending, passing, and failing tests.</source>
          <target state="translated">건너 뛴 테스트, 보류중인 테스트, 합격 및 실패한 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="2af2fa800fac8319bf97a3540e05d1333f0f0b88" translate="yes" xml:space="preserve">
          <source>The number of tests for which snapshots and command data are kept in memory. Reduce this number if you are experiencing high memory consumption in your browser during a test run.</source>
          <target state="translated">스냅 샷 및 명령 데이터가 메모리에 유지되는 테스트 수입니다. 테스트 실행 중 브라우저에서 메모리 소비가 많은 경우이 수를 줄이십시오.</target>
        </trans-unit>
        <trans-unit id="516a974004069c3d3277a625e9910084eb472b45" translate="yes" xml:space="preserve">
          <source>The number subject is changed by returning</source>
          <target state="translated">번호 제목은 반환하여 변경됩니다</target>
        </trans-unit>
        <trans-unit id="ceb05b37622137b6073eeb7df3db0cde0cbb11e6" translate="yes" xml:space="preserve">
          <source>The number subject is changed with another command</source>
          <target state="translated">번호 명령은 다른 명령으로 변경됩니다</target>
        </trans-unit>
        <trans-unit id="aa44bafd0eb0e05262574ed874ccaef3817a3c48" translate="yes" xml:space="preserve">
          <source>The object has the following properties:</source>
          <target state="translated">개체에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="translated">테스트 할 개체입니다.</target>
        </trans-unit>
        <trans-unit id="db327ba030716ff0b1187a489e847e64de982175" translate="yes" xml:space="preserve">
          <source>The object you receive after waiting on an XHR alias is now different. Previously this was a &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; object which came from Sinon.js. Now it is a special &lt;code&gt;XMLHttpRequest&lt;/code&gt; object which comes from Cypress. You may need to rewrite some of your assertions but we&amp;rsquo;ve tried to keep the signatures as close as possible.</source>
          <target state="translated">XHR 별칭을 기다린 후받는 개체가 달라졌습니다. 이전에는 &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; 에서 가져온 FakeXMLHttpRequest 객체였습니다. 이제 Cypress에서 제공되는 특수 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 객체입니다. 어설 션 중 일부를 다시 작성해야 할 수도 있지만 서명을 최대한 가깝게 유지하려고했습니다.</target>
        </trans-unit>
        <trans-unit id="531e904ce3710972156633b273597c7e834ce072" translate="yes" xml:space="preserve">
          <source>The official &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@cypress/code-coverage&lt;/a&gt; plugin</source>
          <target state="translated">공식 &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@ cypress / code-coverage&lt;/a&gt; 플러그인</target>
        </trans-unit>
        <trans-unit id="de6ef17207a672a527da92a709276b20d42a9114" translate="yes" xml:space="preserve">
          <source>The one exception to this rule is when you are dealing with mutable objects (that change state). When things change state you often want to compare an object&amp;rsquo;s previous value to the next value.</source>
          <target state="translated">이 규칙의 한 가지 예외는 변경 가능한 객체 (상태 변경)를 처리 할 때입니다. 상황이 바뀌면 종종 객체의 이전 값과 다음 값을 비교하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6f078d69eccad934d447c9e7a151b423ab7fdab8" translate="yes" xml:space="preserve">
          <source>The only times you &lt;strong&gt;ever&lt;/strong&gt; need to clean up state, is if the operations that one test runs affects another test downstream. In only those cases do you need state cleanup.</source>
          <target state="translated">당신이 유일한 시간이 &lt;strong&gt;지금까지&lt;/strong&gt; 작업 한 테스트 실행 다른 테스트가 다운 스트림 영향을 경우 상태를 정리해야이다. 그러한 경우에만 상태 정리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8738834bbc79ac83a3be7ba8a32736a89ce6ffa9" translate="yes" xml:space="preserve">
          <source>The only way for you to easily &amp;ldquo;see&amp;rdquo; and debug why Cypress thought an element was not visible is to use a &lt;code&gt;debugger&lt;/code&gt; statement.</source>
          <target state="translated">Cypress가 요소를 볼 수 없다고 생각한 이유를 쉽게 &quot;보고&quot;디버그 할 수있는 유일한 방법은 &lt;code&gt;debugger&lt;/code&gt; 문 을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c3c4d02deb75be8128a804ed27cb4cc25e389c74" translate="yes" xml:space="preserve">
          <source>The operating system and version</source>
          <target state="translated">운영 체제 및 버전</target>
        </trans-unit>
        <trans-unit id="c40284c070808a3ebe43d545e821f63222385a3e" translate="yes" xml:space="preserve">
          <source>The order of hook and test execution is as follows:</source>
          <target state="translated">후크 및 테스트 실행 순서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e82e1e207597f80e52fbba928c04a568112dbd4b" translate="yes" xml:space="preserve">
          <source>The orientation of the screen. The &lt;em&gt;default orientation&lt;/em&gt; is &lt;code&gt;portrait&lt;/code&gt;. Pass &lt;code&gt;landscape&lt;/code&gt; as the orientation to reverse the width/height.</source>
          <target state="translated">화면의 방향입니다. &lt;em&gt;기본 방향은&lt;/em&gt; 이다 &lt;code&gt;portrait&lt;/code&gt; . 패스 &lt;code&gt;landscape&lt;/code&gt; 너비 / 높이를 반대하는 방향으로.</target>
        </trans-unit>
        <trans-unit id="17a1b39f194f869a1407fe40768f7950fb624201" translate="yes" xml:space="preserve">
          <source>The page is visited, and Cypress waits for it to load.</source>
          <target state="translated">페이지가 방문하고 Cypress가로드 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="d261216987cde9246824d716277997b8370d25d7" translate="yes" xml:space="preserve">
          <source>The parameters passed to &lt;code&gt;qs&lt;/code&gt; will be merged into existing query parameters on the &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;qs&lt;/code&gt; 에 전달 된 매개 변수는 &lt;code&gt;url&lt;/code&gt; 의 기존 쿼리 매개 변수에 병합됩니다 .</target>
        </trans-unit>
        <trans-unit id="815d0f6065479fe26708a4fd9c9eabd096b40e51" translate="yes" xml:space="preserve">
          <source>The path above is relative to where your &lt;code&gt;cypress.json&lt;/code&gt; is located.</source>
          <target state="translated">위의 경로는 &lt;code&gt;cypress.json&lt;/code&gt; 의 위치와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ba4f47e330246706360965944807d1b11cbd81a" translate="yes" xml:space="preserve">
          <source>The path to the spec file, relative to the project root (e.g. &lt;code&gt;cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="translated">프로젝트 루트에 상대적인 사양 파일 경로 (예 : &lt;code&gt;cypress/integration/login_spec.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a130638fa195780908caff03f0a4195eb99701ff" translate="yes" xml:space="preserve">
          <source>The pattern of doing something conditionally based on whether or not certain text is present is identical to element existence above.</source>
          <target state="translated">특정 텍스트가 있는지 여부에 따라 조건부로 작업을 수행하는 패턴은 위의 요소 존재와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b7d1918499e2102e6875cc7688a3422e59ec7345" translate="yes" xml:space="preserve">
          <source>The patterns we&amp;rsquo;ll explore below are useful in and outside of Cypress.</source>
          <target state="translated">아래에서 살펴볼 패턴은 Cypress 내부 및 외부에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e192581f2c1a279eba5014c6a46a4cc9b977113e" translate="yes" xml:space="preserve">
          <source>The permissions for each user role for the Dashboard Service.</source>
          <target state="translated">대시 보드 서비스의 각 사용자 역할에 대한 권한</target>
        </trans-unit>
        <trans-unit id="4cda402afdbe0e2dc78d05fe36b114811a5f2cea" translate="yes" xml:space="preserve">
          <source>The plugins file must export a function with the following signature:</source>
          <target state="translated">플러그인 파일은 다음 서명이있는 함수를 내 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="3e428c0a9a199a549aed23bdc8b71131b95597f5" translate="yes" xml:space="preserve">
          <source>The point of Cypress is to be a tool you use every day to build and test &lt;strong&gt;your own applications&lt;/strong&gt;.</source>
          <target state="translated">Cypress의 핵심은 매일 &lt;strong&gt;자신의 응용 프로그램&lt;/strong&gt; 을 구축하고 테스트하는 데 사용하는 도구 입니다.</target>
        </trans-unit>
        <trans-unit id="85e1417ef20e040c1d3f3506e725e5bc219947ad" translate="yes" xml:space="preserve">
          <source>The position where the click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">클릭이 발생해야하는 위치입니다. &lt;code&gt;center&lt;/code&gt; 위치는 기본 위치입니다. 유효한 위치는 &lt;code&gt;topLeft&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topRight&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;center&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottomLeft&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; 및 &lt;code&gt;bottomRight&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a47e3cc02495212b1e603eb47937a7d4164472b2" translate="yes" xml:space="preserve">
          <source>The position where the double click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">더블 클릭을해야하는 위치입니다. &lt;code&gt;center&lt;/code&gt; 위치는 기본 위치입니다. 유효한 위치는 &lt;code&gt;topLeft&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topRight&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;center&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottomLeft&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; 및 &lt;code&gt;bottomRight&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9ddfe3ba8ef846ad4188c609f43e29a9d0567472" translate="yes" xml:space="preserve">
          <source>The position where the event should be triggered. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">이벤트가 트리거되어야하는 위치입니다. &lt;code&gt;center&lt;/code&gt; 위치는 기본 위치입니다. 유효한 위치는 &lt;code&gt;topLeft&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topRight&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;center&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottomLeft&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; 및 &lt;code&gt;bottomRight&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9335ae6ecf7e00e4cc44805a0e9a9b079342ca3f" translate="yes" xml:space="preserve">
          <source>The position where the right click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">오른쪽 클릭을해야하는 위치입니다. &lt;code&gt;center&lt;/code&gt; 위치는 기본 위치입니다. 유효한 위치는 &lt;code&gt;topLeft&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;topRight&lt;/code&gt; , &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;center&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; , &lt;code&gt;bottomLeft&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; 및 &lt;code&gt;bottomRight&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0dfe71cebc9453363e766adae8104e56f89d272" translate="yes" xml:space="preserve">
          <source>The previous subject will automatically be yielded to the callback function.</source>
          <target state="translated">이전 주제는 자동으로 콜백 함수로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="8a9400005c3bca2486ac5d4f71c851ac612c4135" translate="yes" xml:space="preserve">
          <source>The problem</source>
          <target state="translated">문제</target>
        </trans-unit>
        <trans-unit id="8c1f0715b111d17a87a9fce9693cba5938592b77" translate="yes" xml:space="preserve">
          <source>The problem is - what happens if your server takes time to boot? There is no guarantee that when the next command runs (&lt;code&gt;cypress run&lt;/code&gt;) that your web server is up and available. So your Cypress test may start and try to visit your local server before it is ready to be visited.</source>
          <target state="translated">문제는-서버 부팅에 시간이 걸리면 어떻게됩니까? 다음 명령이 실행될 때 ( &lt;code&gt;cypress run&lt;/code&gt; ) 웹 서버가 가동되어 사용 가능 하다는 보장은 없습니다 . 따라서 Cypress 테스트를 시작하여 로컬 서버를 방문하기 전에 로컬 서버를 방문 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a59b57cc3fb45d5de325a58f3909addc756cc8" translate="yes" xml:space="preserve">
          <source>The problem is - while first appearing simple, writing tests in this fashion often leads to flaky tests, random failures, and difficult to track down edge cases.</source>
          <target state="translated">문제는-처음에는 단순하게 나타나는 반면, 이런 방식으로 테스트를 작성하는 것은 종종 비정상적인 테스트, 임의의 실패 및 다운 사례를 추적하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="e5fe82c8a50d60e49aeb9fad3ad7b188c41fd2a3" translate="yes" xml:space="preserve">
          <source>The problem looks weird - I can clearly see the label &amp;ldquo;todo B&amp;rdquo; present in the list, so why isn&amp;rsquo;t Cypress finding it? What is going on?</source>
          <target state="translated">문제가 이상하게 보입니다. 목록에 &quot;todo B&quot;레이블이있는 것을 명확하게 볼 수 있습니다. 왜 Cypress에서 찾을 수 없습니까? 무슨 일이야?</target>
        </trans-unit>
        <trans-unit id="ad0cbaf52f72d6fd201e9a44230036f52946b8b3" translate="yes" xml:space="preserve">
          <source>The problem with &lt;strong&gt;conditional testing&lt;/strong&gt; is that it can only be used when the state has stabilized. In modern day applications, knowing when state is stable is oftentimes impossible.</source>
          <target state="translated">&lt;strong&gt;조건부 테스트&lt;/strong&gt; 의 문제점 은 상태가 안정화 된 경우에만 사용할 수 있다는 것입니다. 현대의 응용 프로그램에서 상태가 안정적인시기를 아는 것은 종종 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="a653f42cae2e012716d05927d4c3035de2a2636c" translate="yes" xml:space="preserve">
          <source>The problem with this is that if the wizard renders asynchronously (as it likely does) you cannot use the DOM to conditionally dismiss it.</source>
          <target state="translated">이 문제는 마법사가 비동기 적으로 렌더링하는 경우 DOM을 사용하여 조건부로 닫을 수 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c027ae8b3bc0fa16df969bd2198365f87e4d5c6c" translate="yes" xml:space="preserve">
          <source>The problem with this question is that this type of conditional control flow ends up being non-deterministic. This means it&amp;rsquo;s impossible for a script (or robot), to follow it 100% consistently.</source>
          <target state="translated">이 질문의 문제점은 이러한 유형의 조건부 제어 흐름이 결정적이지 않다는 것입니다. 이는 스크립트 (또는 로봇)가 100 % 일관성있게 따라갈 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b729d30e14c9badd23b8643d7abc79d9901a2424" translate="yes" xml:space="preserve">
          <source>The produced HTML report shows 99% code coverage</source>
          <target state="translated">생성 된 HTML 보고서는 99 %의 코드 범위를 보여줍니다</target>
        </trans-unit>
        <trans-unit id="ea2ebeced198abba4de7d35b582a8fde4fa5b269" translate="yes" xml:space="preserve">
          <source>The prompt to &amp;ldquo;Restore pages?&amp;rdquo; is no longer displayed within Chrome upon restarting a crashed Chrome window. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;#2048&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;페이지를 복원 하시겠습니까?&amp;rdquo;라는 프롬프트 충돌 한 Chrome 창을 다시 시작하면 Chrome에 더 이상 표시되지 않습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;# 2048&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9095904993039bb7dc83a2bcde163a4d5fa021af" translate="yes" xml:space="preserve">
          <source>The proper error is now thrown when passing &lt;code&gt;{log: false}&lt;/code&gt; to a Cypress command that failed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;#3847&lt;/a&gt;.</source>
          <target state="translated">실패한 Cypress 명령에 &lt;code&gt;{log: false}&lt;/code&gt; 를 전달하면 올바른 오류가 발생 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;# 3847&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65ff1c8352b857304a62da31a7f96aee77a4676f" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;).</source>
          <target state="translated">속성은 스크린 샷 세부 정보에 병합되고 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 콜백에 전달됩니다 ( &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults ()&lt;/a&gt; 및 / 또는 &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot ()로&lt;/a&gt; 정의 된 경우 ).</target>
        </trans-unit>
        <trans-unit id="0071a0ee508b63fc99edce02b71dd4dce400dd71" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;). Any other properties besides &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;size&lt;/em&gt;, and &lt;em&gt;dimensions&lt;/em&gt; will be ignored.</source>
          <target state="translated">속성은 스크린 샷 세부 정보로 병합되어 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 콜백 ( &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults ()&lt;/a&gt; 및 / 또는 &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot ()으로&lt;/a&gt; 정의 된 경우)으로 전달됩니다 . &lt;em&gt;path&lt;/em&gt; , &lt;em&gt;size&lt;/em&gt; 및 &lt;em&gt;dimension&lt;/em&gt; 이외의 다른 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="cccd71717a8c41be41515296fe384b80356736c4" translate="yes" xml:space="preserve">
          <source>The proxy now restricts its injection to only &lt;code&gt;Content-Type: text/html&lt;/code&gt; headers so it will not accidentally inject into the wrong responses.</source>
          <target state="translated">프록시는 이제 주입을 &lt;code&gt;Content-Type: text/html&lt;/code&gt; 헤더 로만 제한 하므로 실수로 잘못된 응답에 주입하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86b1ae5b1f6582a5f613c8cfb4a4171bbd5ee43e" translate="yes" xml:space="preserve">
          <source>The proxy server can now correctly proxy content on a &lt;code&gt;ipv6&lt;/code&gt; host only. We had to patch node core to get this in, as by default node prefers &lt;code&gt;ipv4&lt;/code&gt;. We now concurrently test all hosts via &lt;code&gt;dns.lookup&lt;/code&gt; to find the first one that responds. This updated behavior now matches how other clients, like &lt;code&gt;curl&lt;/code&gt;, and browsers resolve hosts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;#112&lt;/a&gt;.</source>
          <target state="translated">프록시 서버는 이제 &lt;code&gt;ipv6&lt;/code&gt; 호스트의 컨텐츠 만 올바르게 프록시 할 수 있습니다 . 기본적으로 노드가 &lt;code&gt;ipv4&lt;/code&gt; 를 선호하기 때문에 이것을 가져 오기 위해 노드 코어를 패치해야했습니다 . 이제 &lt;code&gt;dns.lookup&lt;/code&gt; 을 통해 모든 호스트를 동시에 테스트 하여 응답하는 첫 번째 호스트를 찾습니다. 이 업데이트 된 동작은 &lt;code&gt;curl&lt;/code&gt; 및 브라우저와 같은 다른 클라이언트가 호스트를 확인 하는 방법과 일치 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;# 112&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9a2b43e63a034ee4997d095f86ad3f22788e8cb" translate="yes" xml:space="preserve">
          <source>The quality setting for the video compression, in Constant Rate Factor (CRF). The value can be &lt;code&gt;false&lt;/code&gt; to disable compression or a value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;51&lt;/code&gt;, where a lower value results in better quality (at the expense of a higher file size).</source>
          <target state="translated">CRF (Constant Rate Factor)의 비디오 압축 품질 설정입니다. 압축을 사용하지 않으려면 값을 &lt;code&gt;false&lt;/code&gt; 로 설정하거나 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;51&lt;/code&gt; 사이의 값을 사용하십시오. 값 이 낮을수록 품질이 향상됩니다 (높은 파일 크기를 희생 함).</target>
        </trans-unit>
        <trans-unit id="f89067c46de9cbac856617c606b8a987ed9c1132" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command is similar to how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt; &lt;code&gt;$(&amp;hellip;)&lt;/code&gt; &lt;/a&gt; 작동 하는 방식과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="c9b0f21cf4d02e652bbbae92901377ffaccb0936" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command is similar to how &lt;a href=&quot;https://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33d9384bde7f0377ea14bfe2d251644ad148160" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/children&quot;&gt;&lt;code&gt;.children()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/children&quot;&gt; &lt;code&gt;.children()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="9d8432f6da2e184cded12d9982a55d834b2ed898" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/closest&quot;&gt;&lt;code&gt;.closest()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/closest&quot;&gt; &lt;code&gt;.closest()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="bda6266f25e4ff6cd23feea5107bba5b6dbc8c4a" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; works in jQuery. Its behavior is also similar to that of the CSS pseudo-class &lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt;&lt;code&gt;:nth-child()&lt;/code&gt;&lt;/a&gt; selector.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 . 이것의 동작은 CSS 의사 클래스 &lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt; &lt;code&gt;:nth-child()&lt;/code&gt; &lt;/a&gt; 선택기 의 동작과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="6d0ef2d48a5d36dac1ca67fde341c0ba5c9ce1ef" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="2a1ca271bf27573182e9ffe0716a9134d879fac3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="c657bb7b5132132da2ed605362f91ee4cba6b4ea" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="fab41f8c308d7604317c8a3976edc0bcc6755220" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt; &lt;code&gt;$(&amp;hellip;)&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="7a5a410ccc5435cfafbf7f43b72636408d7df049" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/last&quot;&gt;&lt;code&gt;.last()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/last&quot;&gt; &lt;code&gt;.last()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="299072e32b4b4670ebaafce9744ce963c508c9d2" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/next&quot;&gt;&lt;code&gt;.next()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/next&quot;&gt; &lt;code&gt;.next()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="6e6186d9908c77fd34884b3b46007e07fa29fc91" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt; &lt;code&gt;.nextAll()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="189cc06406542b8a4eadc96285d9469280712ee8" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt; &lt;code&gt;.nextUntil()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="94b85c123580764e2e7732b7c3e62fd80caa9ef6" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/not&quot;&gt; &lt;code&gt;.not()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="777282d025492a0fd9c1baf0fc794b6dc5b53c3b" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parent&quot;&gt;&lt;code&gt;.parent()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/parent&quot;&gt; &lt;code&gt;.parent()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="d41943ec63c3f5f2d7e199b73d6d15ae1a2cce00" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="544e3c939462bf691563593037c51fd6e522ef2c" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt; &lt;code&gt;.parentsUntil()&lt;/code&gt; &lt;/a&gt; 작동 하는 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="ee9867ecc1e1b911af35ec08087f2eccb0a10657" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prev&quot;&gt;&lt;code&gt;.prev()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/prev&quot;&gt; &lt;code&gt;.prev()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="315998380b634a4d4b0a2f5ed2f482aba143a367" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt; &lt;code&gt;.prevAll()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="25f3b4d78859b15e5a073181e251e9737d52f6f3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">이 명령의 쿼리 동작은 jQuery에서 &lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt; &lt;code&gt;.prevUntil()&lt;/code&gt; &lt;/a&gt; 작동 방식과 정확히 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="5970334b22cdc8c684ceebff644cd189275e5738" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/children&quot;&gt;&lt;code&gt;.children()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a06fca3743a2ffce6463d415857e50ab2e9c54" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/closest&quot;&gt;&lt;code&gt;.closest()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7575aec3d2e187eb9c2f59e386f768c6d4a9f7" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; works in jQuery. Its behavior is also similar to that of the CSS pseudo-class &lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt;&lt;code&gt;:nth-child()&lt;/code&gt;&lt;/a&gt; selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218e7e5d1838f7a97ab4c8a9dc1efc897197aea5" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8545281fd9b75cc5ac2e67bb66656b225843ba87" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11edd117e814ac7247f6b6faa0dcd72d1c95cc6" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9612ace0d875e4e731314861cc8c07016c4ab45" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/last&quot;&gt;&lt;code&gt;.last()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929ad1433c249447b397eea7856302888e457577" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/next&quot;&gt;&lt;code&gt;.next()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffd288f0000094e9cf6348f01e7e7a9b8b59a3d" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/nextAll&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb838602177eb35f5fbe96fcf08e0bf18298955" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/nextUntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c438f2643f5bbb0a83aefcf402c49f6e147fb1e" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a74be843f9e7e1a14c341c039b900ecb2987067" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/parent&quot;&gt;&lt;code&gt;.parent()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d16c2117a1dfbe4bb2d949355e353042ff49f65" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d90ab458b4ad7192bdc3f0681fe10648f681879" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/parentsUntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc93106bd2165d4f38877e25543ecba0f705370" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/prev&quot;&gt;&lt;code&gt;.prev()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3fd1b7285c9d0206717e52f65b787da47a8eb1" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/prevAll&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1487426dde74aadbd2ad56ffb907e1c7a5d8e40d" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;https://api.jquery.com/prevUntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4628417eea51fed2b221bb2c01160482495b6d7b" translate="yes" xml:space="preserve">
          <source>The question is: how important is the &lt;code&gt;Submit&lt;/code&gt; text content to your test? If the text changed from &lt;code&gt;Submit&lt;/code&gt; to &lt;code&gt;Save&lt;/code&gt; - would you want the test to fail?</source>
          <target state="translated">문제는 테스트에 텍스트 내용 &lt;code&gt;Submit&lt;/code&gt; 이 얼마나 중요 합니까? 텍스트가 &lt;code&gt;Submit&lt;/code&gt; 에서 &lt;code&gt;Save&lt;/code&gt; 변경된 경우 테스트에 실패 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="832d0f608aa3dce489a24b42cbb16ea13c394135" translate="yes" xml:space="preserve">
          <source>The reason for using &lt;code&gt;const&lt;/code&gt; is because the &lt;code&gt;$span&lt;/code&gt; object is mutable. Whenever you have mutable objects and you&amp;rsquo;re trying to compare them, you&amp;rsquo;ll need to store their values. Using &lt;code&gt;const&lt;/code&gt; is a perfect way to do that.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 를 사용하는 이유 는 &lt;code&gt;$span&lt;/code&gt; 객체가 변경 가능 하기 때문 입니다. 변경 가능한 객체가 있고 비교하려고 할 때마다 해당 값을 저장해야합니다. &lt;code&gt;const&lt;/code&gt; 를 사용 하는 것이 완벽한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="e2332863f7342ce8e194642f40c3469e1c70bcb6" translate="yes" xml:space="preserve">
          <source>The reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.</source>
          <target state="translated">이것이 경고가 아닌 오류 인 이유는 Cypress가 내부적으로 명령을 대기열에 대기시키는 반면 약속은 호출 되 자마자 실행되기 때문입니다. 이를 조정하려고 시도하면 Cypress가 해결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f5c4809c9c27cdb18a1771b2867e3ac1e88ccd9" translate="yes" xml:space="preserve">
          <source>The reason this is even possible to do in the Promise world is because you have the power to execute multiple asynchronous actions in parallel. Under the hood, each promise &amp;lsquo;chain&amp;rsquo; returns a promise instance that tracks the relationship between linked parent and child instances.</source>
          <target state="translated">Promise 세계에서 이것이 가능한 이유는 여러 비동기 작업을 병렬로 실행할 수 있기 때문입니다. 후드 아래에서 각 promise 'chain'은 연결된 부모 인스턴스와 자식 인스턴스 간의 관계를 추적하는 promise 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="154c7ee9b9136ebf1eb2d12f5bf175d3c48376dc" translate="yes" xml:space="preserve">
          <source>The reason we scroll an element into view when hovering over a snapshot is just to help you to see which element(s) were found by that corresponding command. It&amp;rsquo;s a purely visual feature and does not necessarily reflect what your page looked like when the command ran.</source>
          <target state="translated">스냅 샷 위로 마우스를 가져갈 때 요소를 스크롤하여 보는 이유는 해당 명령으로 찾은 요소를 확인하는 데 도움이됩니다. 순수한 시각적 기능이며 명령 실행시 페이지의 모습을 반드시 반영하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="741ce430257dc2797efcdc070f54bcde38cba49e" translate="yes" xml:space="preserve">
          <source>The recommended approach is to install Cypress with &lt;code&gt;npm&lt;/code&gt; because :</source>
          <target state="translated">권장되는 방법은 다음과 같은 이유로 Cypress를 &lt;code&gt;npm&lt;/code&gt; 과 함께 설치하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="7d004abe4ea60408199e7d1090fa66306815c24a" translate="yes" xml:space="preserve">
          <source>The record key is used to authenticate that your project is &lt;em&gt;allowed&lt;/em&gt; to record tests to the Dashboard Service. As long as your record key stays &lt;em&gt;private&lt;/em&gt;, nobody will be able to record test runs for your project - even if they have your &lt;code&gt;projectId&lt;/code&gt;.</source>
          <target state="translated">레코드 키는 프로젝트에서 테스트를 대시 보드 서비스에 기록 &lt;em&gt;할 수&lt;/em&gt; 있는지 인증하는 데 사용됩니다 . 레코드 키가 &lt;em&gt;비공개로&lt;/em&gt; 유지 되는 한 프로젝트 &lt;code&gt;projectId&lt;/code&gt; 가 있더라도 아무도 프로젝트에 대한 테스트 실행을 기록 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="782e934647aaf46e267b9e2994b503b6ceb94eae" translate="yes" xml:space="preserve">
          <source>The relationship between Cypress and your back end</source>
          <target state="translated">Cypress와 백엔드의 관계</target>
        </trans-unit>
        <trans-unit id="86767f6f9298a0ccef95be7ee182369b685aa005" translate="yes" xml:space="preserve">
          <source>The reporter now more intelligently scrolls to prevent commands from being cut off. Useful in screenshots / video recording. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;#228&lt;/a&gt;.</source>
          <target state="translated">리포터는 명령이 잘리지 않도록보다 지능적으로 스크롤됩니다. 스크린 샷 / 비디오 녹화에 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;# 228&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb961ae4754815cd1b9d935db64457dd730740d1" translate="yes" xml:space="preserve">
          <source>The reporter now updates the duration every &lt;code&gt;100ms&lt;/code&gt; instead of only when a test changes.</source>
          <target state="translated">리포터는 이제 테스트 변경시에만 &lt;code&gt;100ms&lt;/code&gt; 마다 지속 시간을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="ebc26485c6e3c6b30603411dc1165d16fc408b87" translate="yes" xml:space="preserve">
          <source>The request matched multiple intercepts</source>
          <target state="translated">요청이 여러 인터셉트와 일치했습니다.</target>
        </trans-unit>
        <trans-unit id="1e0d76a96e8727bc65f9abd4125e82c8f2902dc4" translate="yes" xml:space="preserve">
          <source>The response was cached</source>
          <target state="translated">응답이 캐시되었습니다.</target>
        </trans-unit>
        <trans-unit id="d0039958a5af4a5799d4ea0cdb86070e4837053f" translate="yes" xml:space="preserve">
          <source>The retry-ability allows the tests to complete each command as soon as the assertion passes, without hard-coding waits. If your application takes a few milliseconds or even seconds to render each DOM element - no big deal, the test does not have to change at all. For example, let&amp;rsquo;s introduce an artificial delay of 3 seconds when refreshing the application&amp;rsquo;s UI below in an example TodoMVC model code:</source>
          <target state="translated">재시도 기능을 사용하면 하드 코딩 대기없이 어설 션이 통과되는 즉시 테스트에서 각 명령을 완료 할 수 있습니다. 응용 프로그램이 각 DOM 요소를 렌더링하는 데 몇 밀리 초 또는 몇 초가 걸리더라도 크게 변경하지 않아도됩니다. 예를 들어 아래 TodoMVC 모델 코드에서 응용 프로그램 UI를 새로 고칠 때 3 초의 인위적인 지연을 소개하겠습니다.</target>
        </trans-unit>
        <trans-unit id="71bc331e6aac9e3eb2c8fe091951ba06336fb2eb" translate="yes" xml:space="preserve">
          <source>The return value of the function</source>
          <target state="translated">함수의 반환 값</target>
        </trans-unit>
        <trans-unit id="5475168849b55756904f67ba5f5927702fc5cd88" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;launchOptions&lt;/code&gt; object will become the new launch options for the browser.</source>
          <target state="translated">반환 된 &lt;code&gt;launchOptions&lt;/code&gt; 객체는 브라우저의 새로운 시작 옵션이됩니다.</target>
        </trans-unit>
        <trans-unit id="edcff548a201cf2cbeab03884e41ca15627351e5" translate="yes" xml:space="preserve">
          <source>The right click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="translated">아래 오른쪽 클릭은 요소 내부에서 실행됩니다 (왼쪽에서 15px, 상단에서 40px).</target>
        </trans-unit>
        <trans-unit id="2b348d0a86845c8ceb7394e67cb9264b277dac55" translate="yes" xml:space="preserve">
          <source>The righthand side of the Test Runner is used to display the Application Under Test (AUT): the application that was navigated to using a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or any subsequent routing calls made from the visited application.</source>
          <target state="translated">Test Runner의 오른쪽은 AUT (Application Under Test) : &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 사용하여 탐색 된 애플리케이션 또는 방문한 애플리케이션에서 수행 된 후속 라우팅 호출 을 표시하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="20ccabfca08c80324032b660312bf288570f5f54" translate="yes" xml:space="preserve">
          <source>The root element yielded is &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; by default. However, when calling &lt;code&gt;.root()&lt;/code&gt; from a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; command, the root element will point to the element you are &amp;ldquo;within&amp;rdquo;.</source>
          <target state="translated">생성 된 루트 요소는 기본적으로 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 입니다. 그러나 &lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt; 명령 에서 &lt;code&gt;.root()&lt;/code&gt; 를 호출 할 때 루트 요소는 &quot;내부&quot;요소를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="5b1bd9a24b648423ec3686dbb22073a50661093e" translate="yes" xml:space="preserve">
          <source>The rules are:</source>
          <target state="translated">규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aadce9498b17e758a86f40d9ae98f9a3640bdcce" translate="yes" xml:space="preserve">
          <source>The run you are attempting access to is already complete and will not accept new groups.</source>
          <target state="translated">액세스하려는 실행이 이미 완료되었으며 새 그룹을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b91f2dcdffa4ff0300650744bcc55d68af71bc7" translate="yes" xml:space="preserve">
          <source>The runner is now responsive. It will correctly scale down URLs on smaller screen sizes instead of looking completely broken in CSS. We also designed a much better loading indicator.</source>
          <target state="translated">러너는 이제 반응합니다. CSS에서 완전히 깨진 것처럼 보이지 않고 작은 화면 크기에서 URL을 올바르게 축소합니다. 또한 훨씬 더 나은 로딩 표시기를 설계했습니다.</target>
        </trans-unit>
        <trans-unit id="744f89a32257af4cef30575d297defcb2298d35b" translate="yes" xml:space="preserve">
          <source>The runner no longer appears to &amp;ldquo;hang&amp;rdquo; if a &lt;code&gt;before&lt;/code&gt; hook fails in a test with siblings. Previously the test would never generate a &lt;code&gt;status&lt;/code&gt; and look pending forever. This was a visual bug only. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;#1343&lt;/a&gt;.</source>
          <target state="translated">경우 주자는 더 이상 &quot;정지&quot;로 나타납니다 &lt;code&gt;before&lt;/code&gt; 후크 형제와 테스트에 실패합니다. 이전에는 테스트에서 &lt;code&gt;status&lt;/code&gt; 생성되지 않고 계속 대기 중입니다. 이것은 시각적 버그 일뿐입니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;# 1343&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58248b14b36017671f91d641a616c8f7c6655e6f" translate="yes" xml:space="preserve">
          <source>The same principles we introduced many times before apply to this situation. If you want to access what a command yields you have to do it in a closure using a &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">우리가이 상황에 적용하기 전에 여러 번 소개 한 것과 동일한 원칙이 적용됩니다. 명령이 생성하는 것에 액세스하려면 &lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 사용하여 클로저에서 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="da087ce901acf8f64536c6694cd13c6121e0a3c7" translate="yes" xml:space="preserve">
          <source>The same subject they were originally yielded: &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원래 생성 된 것과 동일한 주제 : &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="616f1ebfb12be022e71b1e7312dc0657084c5e29" translate="yes" xml:space="preserve">
          <source>The scaffolded &lt;code&gt;spec_helper.js&lt;/code&gt; now correctly returns its object literal in the &lt;code&gt;onConsole&lt;/code&gt; callback.</source>
          <target state="translated">스캐 폴딩 된 &lt;code&gt;spec_helper.js&lt;/code&gt; 는 이제 &lt;code&gt;onConsole&lt;/code&gt; 콜백 에서 객체 리터럴을 올바르게 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="77ec6af1d48ca1702a265ac799dd5b3e5f28002e" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">스크린 샷은 기본적으로 &lt;code&gt;cypress/screenshots&lt;/code&gt; 폴더에 저장됩니다. &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;구성&lt;/a&gt; 에서 스크린 샷이 저장되는 디렉토리를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2806f2f253541c74359b4b5eddeefd82c06c7ace" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">스크린 샷은 기본적으로 &lt;code&gt;cypress/screenshots&lt;/code&gt; 폴더에 저장됩니다. &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;구성&lt;/a&gt; 에서 스크린 샷이 저장되는 디렉토리를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d6edcf18de10be4a2c17192050ea340363e0d60" translate="yes" xml:space="preserve">
          <source>The scrolling algorithm works by scrolling the top, leftmost point of the element we issued the command on to the top, leftmost scrollable point of its scrollable container.</source>
          <target state="translated">스크롤 알고리즘은 명령을 실행 한 요소의 맨 왼쪽 끝을 스크롤 가능한 컨테이너의 맨 왼쪽 스크롤 가능한 지점으로 스크롤하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5522a3bf222d37bdd3cdf0c1b8d08578e5788f02" translate="yes" xml:space="preserve">
          <source>The second group can be called &lt;code&gt;Mac/Chrome 70&lt;/code&gt;.</source>
          <target state="translated">두 번째 그룹은 &lt;code&gt;Mac/Chrome 70&lt;/code&gt; 이라고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fc34125a565889afe865b6c9fd020b60647a340" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file has been replaced by an &lt;code&gt;examples&lt;/code&gt; folder with several spec files. This more closely reflects the recommended use of Cypress - as smaller groups of tests split among many files that will now be run in isolation. The tests were also updated from ES5 to ES6. You can see all changes in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;&lt;code&gt;cypress-example-kitchensink&lt;/code&gt; repo&lt;/a&gt; Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;#1460&lt;/a&gt;.</source>
          <target state="translated">seeded &lt;code&gt;example_spec.js&lt;/code&gt; 파일은 여러 스펙 파일이 있는 &lt;code&gt;examples&lt;/code&gt; 폴더 로 대체되었습니다 . 이는 더 작은 그룹의 테스트가 현재 독립적으로 실행될 많은 파일로 나뉘어 짐에 따라 Cypress의 권장 사용을보다 자세히 반영합니다. 테스트는 ES5에서 ES6으로 업데이트되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt; &lt;code&gt;cypress-example-kitchensink&lt;/code&gt; 저장소&lt;/a&gt; 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;# 1460의&lt;/a&gt; 모든 변경 사항을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0ff7ed00bb89a367e0369a10505032a1cf6dc2e" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file no longer fails in Windows on the &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; test. It now conditionally runs a command appropriate for Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;#1097&lt;/a&gt;.</source>
          <target state="translated">시드 된 &lt;code&gt;example_spec.js&lt;/code&gt; 파일은 Windows의 &lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 테스트 에서 더 이상 실패하지 않습니다 . 이제 조건부로 Windows에 적합한 명령을 실행합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;# 1097&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="298b205a13d32dbd7241fc9d144b1f1be96f75cd" translate="yes" xml:space="preserve">
          <source>The seeded Kitchen Sink examples have some new examples showing how to add a message to assertions, how to compare the text content of two elements, and how to make assertions about &lt;code&gt;data&lt;/code&gt; attributes. The examples also have some small typo fixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;#502&lt;/a&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;#3272&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;#3287&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;#3700&lt;/a&gt;.</source>
          <target state="translated">시드 된 주방 싱크 예제에는 어설 션에 메시지를 추가하는 방법, 두 요소의 텍스트 내용을 비교하는 방법 및 &lt;code&gt;data&lt;/code&gt; 속성 에 대한 어설 션을 만드는 방법을 보여주는 몇 가지 새로운 예제가 있습니다 . 예제에는 약간의 오타 수정 사항도 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;# 502&lt;/a&gt; . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;# 3272&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;# 3287&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;# 3700&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a092fcd3d2c2f2c51d80e6ddaaccfc4c4e6cb92e" translate="yes" xml:space="preserve">
          <source>The selector where you want finding next siblings to stop.</source>
          <target state="translated">다음 형제를 찾는 중지하려는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="d2e7aba59dd21c2dbf43910b949e804cf99208b5" translate="yes" xml:space="preserve">
          <source>The selector where you want finding parent ancestors to stop.</source>
          <target state="translated">부모 조상 찾기를 중지하려는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="f8c13841a7cc9952554fbf15cca0f35f8a5b7f10" translate="yes" xml:space="preserve">
          <source>The selector where you want finding previous siblings to stop.</source>
          <target state="translated">이전 형제를 찾는 중지하려는 선택기입니다.</target>
        </trans-unit>
        <trans-unit id="5c3fa19e6d68b5c04ffb7d22b5766f6abf54c4dc" translate="yes" xml:space="preserve">
          <source>The simplest solution here is to move your reset code to &lt;strong&gt;before&lt;/strong&gt; the test runs.</source>
          <target state="translated">여기서 가장 간단한 해결책 은 테스트 실행 &lt;strong&gt;전에&lt;/strong&gt; 리셋 코드를 옮기는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7326d486873e849329a7995dc389459b7a485672" translate="yes" xml:space="preserve">
          <source>The simplest way to find the pre-release version of the Test Runner matching this commit is to look at the commits made on our projects under test at &lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt;. You will see individual commits for each built platform and architecture: &lt;code&gt;darwin&lt;/code&gt; (Mac), &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;win 32bit&lt;/code&gt; and &lt;code&gt;win 64bit&lt;/code&gt;. The built commit SHA &lt;code&gt;e5106d9&lt;/code&gt; is in the subject line of the test commit:</source>
          <target state="translated">이 커밋과 일치하는 시험판의 시험판 버전을 찾는 가장 간단한 방법은 &lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt; 에서 테스트중인 프로젝트에서 커밋을 확인하는 것 입니다. &lt;code&gt;darwin&lt;/code&gt; (Mac), &lt;code&gt;linux&lt;/code&gt; , &lt;code&gt;win 32bit&lt;/code&gt; , &lt;code&gt;win 64bit&lt;/code&gt; 비트 등 각각의 빌드 된 플랫폼과 아키텍처에 대한 개별 커밋을 볼 수 있습니다. 빌드 된 커밋 SHA &lt;code&gt;e5106d9&lt;/code&gt; 는 테스트 커밋의 제목 줄에 있습니다.</target>
        </trans-unit>
        <trans-unit id="4922ad4546a0c80d9103f709606363d960023b10" translate="yes" xml:space="preserve">
          <source>The simplest way to see IntelliSense when typing a Cypress command or assertion is to add a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;triple-slash directive&lt;/a&gt; to the head of your JavaScript or TypeScript testing file. This will turn the IntelliSense on a per file basis. Just copy the comment line below and paste it into your spec file.</source>
          <target state="translated">Cypress 명령 또는 어설 션을 입력 할 때 IntelliSense를 보는 가장 간단한 방법은 JavaScript 또는 TypeScript 테스트 파일의 헤드에 &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;3 중 슬래시 지시문&lt;/a&gt; 을 추가하는 것 입니다. 그러면 파일별로 IntelliSense가 설정됩니다. 아래 주석 줄을 복사하여 사양 파일에 붙여 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="6e005c42a16c60f4791cac1922a1de9a2c11e5a8" translate="yes" xml:space="preserve">
          <source>The situations</source>
          <target state="translated">상황</target>
        </trans-unit>
        <trans-unit id="bfecdae994d59e9351f4d782d3beba01301c1c39" translate="yes" xml:space="preserve">
          <source>The size of the image file (in bytes).</source>
          <target state="translated">이미지 파일의 크기 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="7eece8a51628f7550e564a37f2924316f0112393" translate="yes" xml:space="preserve">
          <source>The solution</source>
          <target state="translated">해결책</target>
        </trans-unit>
        <trans-unit id="c05d2e56eb827cf6c977fe1d6b78afb5627a0ff8" translate="yes" xml:space="preserve">
          <source>The solution here is to use multiple reporters. You will have the benefit of both worlds.</source>
          <target state="translated">여기서 해결책은 여러 기자를 사용하는 것입니다. 두 세계의 혜택을 누리게됩니다.</target>
        </trans-unit>
        <trans-unit id="db247f1f81db3157aef3cd6887ea3dc4e6d0c53c" translate="yes" xml:space="preserve">
          <source>The source line not covered by the end-to-end tests shows an edge case NOT reachable from the UI. Yet this switch case is definitely worth testing - at least to avoid accidentally changing its behavior during future refactoring.</source>
          <target state="translated">엔드 투 엔드 테스트에서 다루지 않은 소스 라인은 UI에서 도달 할 수없는 엣지 케이스를 보여줍니다. 그러나이 스위치 케이스는 확실히 테스트 할 가치가 있습니다. 최소한 향후 리팩토링 중에 실수로 동작이 변경되는 것을 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="e420d2e02ca27a058dc670499b6960faa1c8a7d0" translate="yes" xml:space="preserve">
          <source>The sources line not covered marked in yellow (the switch cases the test missed) and red (regular statements) are a great guide for writing more end-to-end tests. We need tests that delete todo items, edit them, mark all of them as completed at once and clear completed items. When we cover every switch statement in &lt;code&gt;src/reducers/todos.js&lt;/code&gt; we probably will achieve close to 100% code coverage. Even more importantly, we will cover the main features of the application the user is expected to use.</source>
          <target state="translated">노란색으로 표시되지 않은 소스 라인 (테스트에서 놓친 스위치 케이스)과 빨간색 (정규적인 명령문)은 더 많은 엔드 투 엔드 테스트를 작성하기위한 훌륭한 안내서입니다. 할일 항목을 삭제하고 편집하며 모든 항목을 한 번에 완료된 것으로 표시하고 완료된 항목을 지우는 테스트가 필요합니다. &lt;code&gt;src/reducers/todos.js&lt;/code&gt; 의 모든 switch 문을 다루면 100 %에 가까운 코드 범위를 달성 할 수 있습니다. 더 중요한 것은 사용자가 사용할 것으로 예상되는 응용 프로그램의 주요 기능을 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="1ee947ce102f16e81ff6c392bd028cc14209fcfe" translate="yes" xml:space="preserve">
          <source>The spec defines the &amp;ldquo;submit&amp;rdquo; button as the first &lt;code&gt;input[type=submit]&lt;/code&gt; or &lt;code&gt;button[type!=button]&lt;/code&gt; from the form.</source>
          <target state="translated">스펙은 &quot;제출&quot;버튼을 양식의 첫 번째 &lt;code&gt;input[type=submit]&lt;/code&gt; 또는 &lt;code&gt;button[type!=button]&lt;/code&gt; 으로 정의합니다.</target>
        </trans-unit>
        <trans-unit id="aa52cfa7b66849aeb1e1e20a02c8323a892ac97d" translate="yes" xml:space="preserve">
          <source>The spec file&amp;rsquo;s font weight has been increased within the Test Runner for better readability. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;#3065&lt;/a&gt;.</source>
          <target state="translated">가독성을 높이기 위해 테스트 러너 내에서 스펙 파일의 글꼴 무게가 증가되었습니다. 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;# 3065&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8ab5600bcf8258f904e13ebf56de677e7ac204b6" translate="yes" xml:space="preserve">
          <source>The spec states what should happen if the element clicked is removed from the DOM during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;, but Cypress is not currently factoring this in. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">이 사양은 &lt;code&gt;mousedown&lt;/code&gt; 또는 &lt;code&gt;mouseup&lt;/code&gt; 동안 클릭 한 요소가 DOM에서 제거 되었지만 Cypress가 현재이를 고려하지 않은 경우 어떻게되는지 알려줍니다 .이 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제를 해결하려면 문제&lt;/a&gt; 를여십시오.</target>
        </trans-unit>
        <trans-unit id="05791ba30f36d790f5202b44eb7363004981a14e" translate="yes" xml:space="preserve">
          <source>The spinner animation should more smoothly spin when a command is pending in the Test Runner. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;#4005&lt;/a&gt;.</source>
          <target state="translated">테스트 러너에서 명령이 보류 중이면 스피너 애니메이션이 더 부드럽게 회전해야합니다. 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;# 4005&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee6e315f5406c519d65ceffeaf6709cf4dc537cf" translate="yes" xml:space="preserve">
          <source>The standard output has been redesigned to better visualize spec files running in isolation and to be more visually appealing. This may break any specialized logic written that expected the standard output to be structured in a specific way or contain specific words. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;#1588&lt;/a&gt;.</source>
          <target state="translated">표준 출력은 개별적으로 실행중인 스펙 파일을보다 잘 시각화하고보다 시각적으로 호소하도록 재 설계되었습니다. 이로 인해 표준 출력이 특정 방식으로 구성되거나 특정 단어를 포함 할 것으로 예상되는 특수 논리가 작성되지 않을 수 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;# 1588&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4eba702a046b370fe55e1ae443a0698e1baa5c96" translate="yes" xml:space="preserve">
          <source>The strategies</source>
          <target state="translated">전략</target>
        </trans-unit>
        <trans-unit id="5953668a2bc7e87a40e41d6bc6562ef18608eb9a" translate="yes" xml:space="preserve">
          <source>The suggested path for saving the preprocessed file to disk. This is unique to the source file. A preprocessor can choose to write the file elsewhere, but Cypress automatically provides you this value as a convenient default.</source>
          <target state="translated">사전 처리 된 파일을 디스크에 저장하기 위해 제안 된 경로입니다. 이것은 소스 파일에 고유합니다. 전처리 기는 다른 곳에 파일을 쓰도록 선택할 수 있지만 Cypress는 자동으로이 값을 편리한 기본값으로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cf4f68de9e3414117e00fe81f998018fef423d19" translate="yes" xml:space="preserve">
          <source>The support file is a great place to put reusable behavior such as Custom Commands or global overrides that you want applied and available to all of your spec files.</source>
          <target state="translated">지원 파일은 모든 스펙 파일에 적용 할 수있는 사용자 정의 명령 또는 전역 대체와 같은 재사용 가능한 동작을 배치하기에 좋은 장소입니다.</target>
        </trans-unit>
        <trans-unit id="edf9fe7e13ebc4e1a9e695dcbee0a2f47e2da124" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;cy.task(name, arg, options)&lt;/code&gt; only has place for a single argument to be passed from the test code to the plugins code. In the situations where you would like to pass multiple arguments, place them into an object to be destructured inside the task code. For example, if you would like to execute a database query and pass the database profile name you could do:</source>
          <target state="translated">&lt;code&gt;cy.task(name, arg, options)&lt;/code&gt; 구문 에는 테스트 코드에서 플러그인 코드로 전달되는 단일 인수 만 있습니다. 여러 인수를 전달하려는 상황에서는 태스크 코드 내에서 구조화 될 객체에 인수를 배치합니다. 예를 들어 데이터베이스 쿼리를 실행하고 데이터베이스 프로필 이름을 전달하려면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dc5fb064027d5425dcb06031eb04d3f26b8ef98" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains &lt;code&gt;cypress.json&lt;/code&gt;).</source>
          <target state="translated">프로젝트 루트 ( &lt;code&gt;cypress.json&lt;/code&gt; 을 포함하는 디렉토리)에서 실행할 시스템 명령 입니다.</target>
        </trans-unit>
        <trans-unit id="5c2a51af150d91cd26df789000e0b2aff74aa3e2" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains the default &lt;code&gt;cypress.json&lt;/code&gt; configuration file).</source>
          <target state="translated">프로젝트 루트 (기본 &lt;code&gt;cypress.json&lt;/code&gt; 구성 파일 이 포함 된 디렉터리)에서 실행할 시스템 명령 입니다.</target>
        </trans-unit>
        <trans-unit id="a9ecfc5dbe854c8e87cfad618aa3452f417851ae" translate="yes" xml:space="preserve">
          <source>The test &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;runner&lt;/a&gt; has been rebuilt from the ground up in &lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;. The left side of the runner called the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;reporter&lt;/a&gt; is now a separate application. This, as well as other changes, markedly improved the performance of running tests. &lt;em&gt;Your tests will now run faster.&lt;/em&gt; This will also enable you to test your application in full screen. Additionally this paves the way for being able to spawn multiple browsers at once and synchronize testing across them. This also means we&amp;rsquo;ll be able to support mobile browsers. The UI for doing this hasn&amp;rsquo;t been implemented but the vast majority of the work to accomplish this is done now.</source>
          <target state="translated">테스트 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;러너&lt;/a&gt; 는 &lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt; 에서 처음 부터 다시 빌드되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;기자&lt;/a&gt; 라는 러너의 왼쪽 은 이제 별도의 응용 프로그램입니다. 이것은 다른 변경 사항뿐만 아니라 테스트 실행 성능을 크게 향상 시켰습니다. &lt;em&gt;테스트가 더 빨라집니다. &lt;/em&gt;또한 전체 화면에서 응용 프로그램을 테스트 할 수 있습니다. 또한 여러 브라우저를 한 번에 생성하고 여러 브라우저에서 테스트를 동기화 할 수있는 방법을 제공합니다. 또한 모바일 브라우저를 지원할 수 있습니다. 이를위한 UI는 아직 구현되지 않았지만이를 달성하기위한 대부분의 작업이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="1fde190f7aaf2b43a3df989474cb26010c916855" translate="yes" xml:space="preserve">
          <source>The test has finished but Cypress still has commands in its queue</source>
          <target state="translated">테스트가 완료되었지만 Cypress는 여전히 대기열에 명령을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="408e2a30fb8dbe380e7c5c68d1429ad4b2fa87ca" translate="yes" xml:space="preserve">
          <source>The test interface borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; provides &lt;code&gt;describe()&lt;/code&gt;, &lt;code&gt;context()&lt;/code&gt;, &lt;code&gt;it()&lt;/code&gt; and &lt;code&gt;specify()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; 에서 빌린 테스트 인터페이스 는 &lt;code&gt;describe()&lt;/code&gt; , &lt;code&gt;context()&lt;/code&gt; , &lt;code&gt;it()&lt;/code&gt; 및 &lt;code&gt;specify()&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="6b2b83102a63a3d2cae202ad98c0882149e26154" translate="yes" xml:space="preserve">
          <source>The test is green, even though we made no assertions.</source>
          <target state="translated">우리는 어떤 주장도하지 않았지만 테스트는 녹색입니다.</target>
        </trans-unit>
        <trans-unit id="3b26a746152c5e6951d14cd04a6705a9da5da25b" translate="yes" xml:space="preserve">
          <source>The test name text is now selectable inside the Command Log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;#1476&lt;/a&gt;.</source>
          <target state="translated">테스트 이름 텍스트는 이제 명령 로그 내에서 선택할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;# 1476&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="677c13d47b66766d5de3330e8ee6846e01da614e" translate="yes" xml:space="preserve">
          <source>The test passes in Cypress without a hitch.</source>
          <target state="translated">시험은 장애없이 Cypress에서 통과합니다.</target>
        </trans-unit>
        <trans-unit id="cebd2ba13455213fb1fd8eb55b2140bb21d388c3" translate="yes" xml:space="preserve">
          <source>The test passes, because the second &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; is retried with its own assertion now &lt;code&gt;.should('have.length', 2)&lt;/code&gt;. Only after successfully finding two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, the command &lt;code&gt;.find('label')&lt;/code&gt; and its assertion starts, and by now, the item with correct &amp;ldquo;todo B&amp;rdquo; label has been correctly queried.</source>
          <target state="translated">두 번째 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; 이 이제 자체 &lt;code&gt;.should('have.length', 2)&lt;/code&gt; 자체 주장으로 재 시도 되기 때문에 테스트가 통과 됩니다. 두 개의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소를 성공적으로 찾은 후에 만 &lt;code&gt;.find('label')&lt;/code&gt; 명령 과 해당 어설 션이 시작되고 이제는 올바른 &quot;Todo B&quot;레이블이있는 항목이 올바르게 쿼리되었습니다.</target>
        </trans-unit>
        <trans-unit id="55fad155c13bf4c36076952735aacf49f42a1326" translate="yes" xml:space="preserve">
          <source>The test passes, even if the there is no web application visited.</source>
          <target state="translated">방문한 웹 응용 프로그램이 없어도 테스트가 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="de71d3aad8061eada0c3c81692d2f2152a641df7" translate="yes" xml:space="preserve">
          <source>The tests titles and headers in the Command Log no longer truncate with elipsis when the text is longer than that width of the Command Log. Instead the text wraps so that all text is shown. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;#3947&lt;/a&gt;.</source>
          <target state="translated">텍스트가 명령 로그의 너비보다 길면 명령 로그의 테스트 제목과 헤더가 더 이상 줄임표로 잘리지 않습니다. 대신 텍스트가 줄 바꿈되어 모든 텍스트가 표시됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;# 3947&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcb89de9b094a31924c4a38456d9bbb4c947bee1" translate="yes" xml:space="preserve">
          <source>The text to be typed into the DOM element.</source>
          <target state="translated">DOM 요소에 입력 할 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="9f9bdd3c02a97c74a6b21a32af18e5d40cea8f4f" translate="yes" xml:space="preserve">
          <source>The third group can be called &lt;code&gt;Linux/Electron&lt;/code&gt;. &lt;em&gt;Electron is the default browser used in Cypress runs&lt;/em&gt;.</source>
          <target state="translated">세 번째 그룹은 &lt;code&gt;Linux/Electron&lt;/code&gt; 이라고 할 수 있습니다 . &lt;em&gt;전자는 Cypress 실행에 사용되는 기본 브라우저&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3480a52688819ceb9188befe7f88086aa53ebf27" translate="yes" xml:space="preserve">
          <source>The time the run started and finished as well as the duration.</source>
          <target state="translated">실행이 시작되고 완료된 시간과 지속 시간</target>
        </trans-unit>
        <trans-unit id="789cf010b55608cf61521c415f3472efba58ac36" translate="yes" xml:space="preserve">
          <source>The times the run, each spec file, and test started and ended.</source>
          <target state="translated">실행, 각 스펙 파일 및 테스트가 시작 및 종료 된 시간</target>
        </trans-unit>
        <trans-unit id="1ab1f7ba5e441060b3e47ee6ec9ef1015a985796" translate="yes" xml:space="preserve">
          <source>The title of your project is now the title of the browser tab (so you can easily tell Cypress tabs from one another).</source>
          <target state="translated">프로젝트의 제목은 이제 브라우저 탭의 제목입니다 (따라서 Cypress 탭을 서로 쉽게 구분할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="aca5f31247cc57de12011ed72a9362d0578d654c" translate="yes" xml:space="preserve">
          <source>The trade-off here is that doing everything in the browser (basically all of your tests) is a much better experience in Cypress. But doing things outside of the browser may take a little extra work.</source>
          <target state="translated">여기서의 단점은 브라우저에서 모든 작업 (기본적으로 모든 테스트)을 수행하는 것이 Cypress에서 훨씬 더 나은 경험이라는 것입니다. 그러나 브라우저 외부에서 작업을 수행하려면 약간의 추가 작업이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66800d02a42414569d04adc313282995eafd7015" translate="yes" xml:space="preserve">
          <source>The tray icon in OSX will now change colors. It will turn blue when you&amp;rsquo;re running a Cypress project and red on any kind of failures such as syntax errors in &lt;code&gt;cypress.json&lt;/code&gt;. It will turn back black when nothing is actively running.</source>
          <target state="translated">OSX의 트레이 아이콘이 이제 색상이 변경됩니다. Cypress 프로젝트를 실행하면 파란색으로 바뀌고 &lt;code&gt;cypress.json&lt;/code&gt; 의 구문 오류와 같은 모든 종류의 오류에 대해 빨간색이됩니다 . 아무것도 실행 중이 아니면 검은 색으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="a09aac7dae774f70172432961f1b259397ef93d1" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; now correctly supports a function argument.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt; 의 유형 정의는 이제 함수 인수를 올바르게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="13e70dc4fe63c68c728bf6572edb7d362407e557" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt;&lt;code&gt;.scrollIntoView()&lt;/code&gt;&lt;/a&gt; no longer errors when passed a &lt;code&gt;duration&lt;/code&gt; option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;#1606&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt; 옵션을 전달할 때 &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt; &lt;code&gt;.scrollIntoView()&lt;/code&gt; &lt;/a&gt; 의 유형 정의가 더 이상 오류가 발생하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;# 1606&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e9d05cb6f9125a2a31db69026779516fc5793c3c" translate="yes" xml:space="preserve">
          <source>The types for the &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains(content, options)&lt;/code&gt;&lt;/a&gt; syntax have been added. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;#4727&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains(content, options)&lt;/code&gt; &lt;/a&gt; 구문 의 유형 이 추가되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;# 4727&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8fc59ef10843743e04fa2db214438ec33017997" translate="yes" xml:space="preserve">
          <source>The updated hidden rules apply to all assertions like &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt;, and how Cypress indicates an element is hidden displays in the Command Log.</source>
          <target state="translated">업데이트 된 숨겨진 규칙은 &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt; 와 같은 모든 어설 션에 적용되며 Cypress에서 요소가 숨겨져 있음을 나타내는 방법은 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="739f9feb3c19d40dc4a125fe4555d7c28a426ec9" translate="yes" xml:space="preserve">
          <source>The upsides to this are that tests should consistently pass or fail regardless of a developers&amp;rsquo; screen size. Tests will also consistently run in &lt;code&gt;CI&lt;/code&gt; because all of the viewports will be the same no matter what machine Cypress runs on.</source>
          <target state="translated">이것의 단점은 개발자의 화면 크기에 관계없이 테스트가 지속적으로 통과하거나 실패해야한다는 것입니다. Cypress가 실행되는 시스템에 관계없이 모든 뷰포트가 동일하기 때문에 테스트는 &lt;code&gt;CI&lt;/code&gt; 에서도 일관되게 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="b4caa8e4a8e4a89d3536d09c4562d45b2a718bd1" translate="yes" xml:space="preserve">
          <source>The url to view the run in the Dashboard is now printed to output during &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;#494&lt;/a&gt;.</source>
          <target state="translated">이제 대시 보드에서 실행을 보는 URL이 &lt;code&gt;cypress run&lt;/code&gt; 동안 출력 되도록 인쇄됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;# 494&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2b781df5aa0f1e73ea6e6bedbdf69961275a4e1" translate="yes" xml:space="preserve">
          <source>The user will receive an invitation email with a link to accept the invitation.</source>
          <target state="translated">사용자는 초대를 수락 할 수있는 링크가 포함 된 초대 이메일을받습니다.</target>
        </trans-unit>
        <trans-unit id="affe373c25c897b5146614a48726413036bbe8bd" translate="yes" xml:space="preserve">
          <source>The value of the configuration to set.</source>
          <target state="translated">설정할 구성 값입니다.</target>
        </trans-unit>
        <trans-unit id="aee0eeb0ca06180df3004e90447f374c0f22b786" translate="yes" xml:space="preserve">
          <source>The value of the cookie to set.</source>
          <target state="translated">설정할 쿠키의 값입니다.</target>
        </trans-unit>
        <trans-unit id="96934814cb0c76cf32368945ad1a8f1bf08f17e7" translate="yes" xml:space="preserve">
          <source>The value of the environment variable to set.</source>
          <target state="translated">설정할 환경 변수의 값입니다.</target>
        </trans-unit>
        <trans-unit id="7abae0cf181bef848fd2ad2b5706a9792a8085ec" translate="yes" xml:space="preserve">
          <source>The viewport dropdown helper in the Runner now displays string quoted JSON instead of an object literal. This better matches how you should write those options in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;#1350&lt;/a&gt;.</source>
          <target state="translated">러너의 뷰포트 드롭 다운 도우미에 객체 리터럴 대신 문자열 인용 JSON이 표시됩니다. 이것은 &lt;code&gt;cypress.json&lt;/code&gt; 에서 해당 옵션을 작성하는 방법과 더 잘 일치합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;# 1350&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0ee043998be1aa7cada273bf5c6e7d62842686f0" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s dimensions will now dynamically display accurately as they are changed in the header area.</source>
          <target state="translated">뷰포트의 치수가 이제 헤더 영역에서 변경 될 때 정확하게 동적으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e257e09cebb37573b035d2956f13438f996c9c01" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s scale will now dynamically display accurately as it is changed.</source>
          <target state="translated">뷰포트의 축척이 변경 될 때 동적으로 정확하게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a9990208162ffe1f694e9cb04fd7f1fabeddcdd5" translate="yes" xml:space="preserve">
          <source>The visibility algorithm has been considerably improved. Should fix most if not all visibility problems. We accounted for CSS transforms, translations, and added a new branch of logic for &lt;code&gt;position: fixed&lt;/code&gt; elements which should be much more accurate. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;#631&lt;/a&gt;.</source>
          <target state="translated">가시성 알고리즘이 상당히 향상되었습니다. 모든 가시성 문제가 아닌 경우 대부분 수정해야합니다. CSS 변환, 변환을 설명하고 위치에 대한 새로운 논리 분기를 추가했습니다 &lt;code&gt;position: fixed&lt;/code&gt; 요소는 훨씬 정확해야합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;# 631&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a303c902d6e00e4ac0998294f99999c0f87a3cae" translate="yes" xml:space="preserve">
          <source>The warning messages when going over test recording limits have been updated to correctly display &amp;lsquo;monthly tests&amp;rsquo; and &amp;lsquo;private tests&amp;rsquo; where necessary. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;#4024&lt;/a&gt;.</source>
          <target state="translated">테스트 기록 한계를 초과 할 때 경고 메시지가 업데이트되어 필요한 경우 '매월 테스트'및 '개인 테스트'가 올바르게 표시됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;# 4024&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="06c5b9fdf12dd7776c5bc6898db63e2835b8256a" translate="yes" xml:space="preserve">
          <source>The webpack preprocessor handles:</source>
          <target state="translated">웹팩 전처리 기는 다음을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c2b6005e7b660fcea7a6dad3c772b094b3c4d62c" translate="yes" xml:space="preserve">
          <source>The whole intention of Cypress (and what makes it very different from other testing tools) is to create consistent, non-flaky tests that perform identically from one run to the next. Making this happen isn&amp;rsquo;t free - there are some trade-offs we make that may initially seem unfamiliar to developers accustomed to working with Promises.</source>
          <target state="translated">Cypress (및 다른 테스트 도구와 다른 점)의 전체 의도는 한 실행에서 다음 실행에 동일하게 수행되는 일관되고 비 정확한 테스트를 작성하는 것입니다. 이런 일을하는 것은 무료가 아닙니다. 처음에는 약속에 익숙한 개발자들에게는 익숙하지 않은 트레이드 오프가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc1dbc3bb5ced51aab772a3bb44a84bc81f7d0f" translate="yes" xml:space="preserve">
          <source>The width and height of the image in pixels (example: &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt;)</source>
          <target state="translated">이미지의 너비와 높이 (예 : &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3ab08ea645e2bc37eccbd5f8e042d55feaec14d7" translate="yes" xml:space="preserve">
          <source>Then add a separate &lt;code&gt;reporter-config.json&lt;/code&gt; file that enables &lt;code&gt;spec&lt;/code&gt; and &lt;code&gt;junit&lt;/code&gt; reporters and directs the &lt;code&gt;junit&lt;/code&gt; reporter to save a separate XML files.</source>
          <target state="translated">그리고 별도의 추가 &lt;code&gt;reporter-config.json&lt;/code&gt; 수 파일 &lt;code&gt;spec&lt;/code&gt; 과 &lt;code&gt;junit&lt;/code&gt; 기자와 지시 &lt;code&gt;junit&lt;/code&gt; 별도의 XML 파일 저장에 기자를.</target>
        </trans-unit>
        <trans-unit id="cb0a062de3d1ce91993195752db0dd65088d0498" translate="yes" xml:space="preserve">
          <source>Then add the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; 에&lt;/a&gt; 아래 코드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c13c428cd2b73a1a953b21ccf2210567f582d9a" translate="yes" xml:space="preserve">
          <source>Then the URL should include &lt;code&gt;/commands/actions&lt;/code&gt;</source>
          <target state="translated">그런 다음 URL에 &lt;code&gt;/commands/actions&lt;/code&gt; 가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dc0c66b1cd8a60e04a32da100b4c70789c97790f" translate="yes" xml:space="preserve">
          <source>Then you can add the &lt;code&gt;dataCy&lt;/code&gt; command to the global Cypress Chainable interface (so called because commands are chained together) by creating a new TypeScript definitions file beside your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt;, in this case at &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 옆에 새 TypeScript 정의 파일 ( 이 경우 &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; )을 작성 하여 &lt;code&gt;dataCy&lt;/code&gt; 명령을 글로벌 Cypress Chainable 인터페이스 (명령이 서로 연결되어 있기 때문에 호출 됨)에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef83fb30a1896682f7e2738066df4c2466a7c41c" translate="yes" xml:space="preserve">
          <source>There are 5 different ways to set environment variables. Each has a slightly different use case.</source>
          <target state="translated">환경 변수를 설정하는 방법에는 5 가지가 있습니다. 각각 사용 사례가 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="68f6fd791a58783dfd93f03e91caaafe61553448" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;likely&lt;/em&gt; better ways to do this, but this isn&amp;rsquo;t well documented at the moment. Every application is different and there is no one-size-fits-all solution. For the moment, if you&amp;rsquo;re using session-based cookies, this method will work.</source>
          <target state="translated">이 작업을 수행하는 더 좋은 방법 이 &lt;em&gt;있을 수&lt;/em&gt; 있지만 현재로서는 잘 설명되어 있지 않습니다. 모든 응용 프로그램이 다르며 모든 솔루션에 적합한 솔루션은 없습니다. 현재 세션 기반 쿠키를 사용하는 경우이 방법이 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="aa0ce497980c81746403a7cfdc4840a87b9f1596" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;very&lt;/em&gt; specific reasons these limitations are built into the Cypress API.</source>
          <target state="translated">이러한 제한이 Cypress API에 내장 된 &lt;em&gt;매우&lt;/em&gt; 구체적인 이유 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6f2a24a7884566fc57012f8f4ee95663731f417" translate="yes" xml:space="preserve">
          <source>There are a few simple workarounds to these common situations:</source>
          <target state="translated">이러한 일반적인 상황에 대한 몇 가지 간단한 해결 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="180b50ce51e5cbede0052b127d76e4d9b09f4c59" translate="yes" xml:space="preserve">
          <source>There are a myriad of other events Cypress fires to communicate with the Node server process, automation servers, mocha, the runner, and the reporter. They are strictly internal to the way Cypress works and not useful for users.</source>
          <target state="translated">Cypress가 노드 서버 프로세스, 자동화 서버, 모카, 러너 및 리포터와 통신하기 위해 발생하는 수많은 다른 이벤트가 있습니다. Cypress 작동 방식의 내부에 있으며 사용자에게는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da6d06463b0ec87461115a001155bf1163762085" translate="yes" xml:space="preserve">
          <source>There are actually dozens of methods attached to &lt;code&gt;Cypress.dom&lt;/code&gt; that are not documented below. These methods are used internally by Cypress in nearly every single built in command.</source>
          <target state="translated">실제로 &lt;code&gt;Cypress.dom&lt;/code&gt; 에 첨부 된 수십 가지 방법 이 아래에 설명되어 있지 않습니다. 이러한 방법은 Cypress가 거의 모든 내장 명령에서 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="38d7f3b5c5785f106f663b2188928e8a30cc29d6" translate="yes" xml:space="preserve">
          <source>There are hundreds of custom error messages describing the exact reason Cypress failed your test.</source>
          <target state="translated">Cypress가 테스트에 실패한 정확한 이유를 설명하는 수백 가지의 사용자 정의 오류 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d7a9f669cdb60f8f1826fa41f750e4c74ec667" translate="yes" xml:space="preserve">
          <source>There are many simple and easy ways to reference, compare and utilize the objects that Cypress commands yield you.</source>
          <target state="translated">Cypress 명령이 생성하는 객체를 참조, 비교 및 ​​활용하는 간단하고 쉬운 방법이 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="707a2b6aaec820af9fb8f45959f8f689e6ebd86f" translate="yes" xml:space="preserve">
          <source>There are newly added examples in the TypeScript definitions for &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt;, &lt;a href=&quot;../../api/commands/location&quot;&gt;&lt;code&gt;cy.location()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;#3684&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;#4715&lt;/a&gt;.</source>
          <target state="translated">대한 타이프 라이터 정의에 새로 추가 된 사례가 있습니다 &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;사용자 정의 명령&lt;/a&gt; , &lt;a href=&quot;../../api/commands/location&quot;&gt; &lt;code&gt;cy.location()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;# 3684&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;# 4715&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c43d9359f00be63d9d4867a4e526adb66611e41b" translate="yes" xml:space="preserve">
          <source>There are no more global, in-app updates. Versioning should be primarily &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;controlled via &lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; like every other package / dependency in your project. For users not using &lt;code&gt;npm&lt;/code&gt; you can manually download new versions of Cypress when they&amp;rsquo;re released.</source>
          <target state="translated">더 이상 글로벌 인앱 업데이트가 없습니다. 버전 관리는 주로 프로젝트의 다른 모든 패키지 / 종속성과 같이 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt; &lt;code&gt;npm&lt;/code&gt; 을&lt;/a&gt; 통해 제어 해야합니다 . &lt;code&gt;npm&lt;/code&gt; 을 사용하지 않는 사용자의 경우 새 버전의 Cypress가 릴리스 될 때 수동으로 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccaf6816c2014dcd825d2bb1d4794f2d218669c9" translate="yes" xml:space="preserve">
          <source>There are no servers, drivers, or any other dependencies to install or configure. You can write your first passing test in 60 seconds.</source>
          <target state="translated">설치 또는 구성 할 서버, 드라이버 또는 기타 종속성이 없습니다. 60 초 안에 첫 번째 합격 시험을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4acfc9514edcd410f9982908c58e1120cfc1558d" translate="yes" xml:space="preserve">
          <source>There are now &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Getting Started&lt;/a&gt; docs including &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; for &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 을 포함한 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;시작하기&lt;/a&gt; 문서 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca3f36279a85a1026ce410f83f3d9781f88382c3" translate="yes" xml:space="preserve">
          <source>There are now a series of checks that are run during download of Cypress to verify that the zip file downloaded is the correct file. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;#812&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;#3515&lt;/a&gt;.</source>
          <target state="translated">Cypress를 다운로드하는 동안 다운로드 한 zip 파일이 올바른 파일인지 확인하기 위해 일련의 검사가 수행됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;# 812&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;# 3515&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="163ab5841ac9fe32c8ecb747fcbbfc2839409549" translate="yes" xml:space="preserve">
          <source>There are now several new CLI commands for interacting with the binary cache: &lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt;&lt;code&gt;cypress cache list&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt;&lt;code&gt;cypress cache clear&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;#1856&lt;/a&gt;.</source>
          <target state="translated">이진 캐시와 상호 작용하기위한 몇 가지 새로운 CLI 명령 인 &lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt; &lt;code&gt;cypress cache list&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt; &lt;code&gt;cypress cache clear&lt;/code&gt; 가&lt;/a&gt; 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;# 1856&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e3378d57e3ba4d5c11a3fd553547fc1b207c24cb" translate="yes" xml:space="preserve">
          <source>There are other excellent tools that are optimized for doing each item listed above.</source>
          <target state="translated">위에 나열된 각 항목을 수행하도록 최적화 된 다른 우수한 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e53bc7e519f00c6fbc86ff1a8b6d370297971c0" translate="yes" xml:space="preserve">
          <source>There are several levels of &lt;code&gt;DEBUG&lt;/code&gt; messages</source>
          <target state="translated">여러 레벨의 &lt;code&gt;DEBUG&lt;/code&gt; 메시지가 있습니다</target>
        </trans-unit>
        <trans-unit id="fded19319531f91063d0c2fc25a2c7285a3065a7" translate="yes" xml:space="preserve">
          <source>There are several new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; properties for video recording: &lt;code&gt;videoRecording&lt;/code&gt;, &lt;code&gt;videoCompression&lt;/code&gt;, and &lt;code&gt;videosFolder&lt;/code&gt;.</source>
          <target state="translated">비디오 녹화에 대한 몇 가지 새로운 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 속성 인 &lt;code&gt;videoRecording&lt;/code&gt; , &lt;code&gt;videoCompression&lt;/code&gt; 및 &lt;code&gt;videosFolder&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a9864720db7294c00877158df389b1472455db7" translate="yes" xml:space="preserve">
          <source>There are several published, open source plugins, listed in the &lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;Visual Testing plugins&lt;/a&gt; section, and several commercial companies have developed visual testing solutions on top of the Cypress Test Runner listed below.</source>
          <target state="translated">&lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;Visual Testing plugins&lt;/a&gt; 섹션에 나열된 여러 공개 소스 플러그인이 있으며 일부 상용 회사는 아래에 나열된 Cypress Test Runner를 통해 시각적 테스트 솔루션을 개발했습니다.</target>
        </trans-unit>
        <trans-unit id="fa0c09a5d907fc5a81651b57997ccf823a357828" translate="yes" xml:space="preserve">
          <source>There are situations when it is useful to control your application&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt; in order to override its behavior or avoid slow tests.</source>
          <target state="translated">동작을 무시하거나 느린 테스트를 피하기 위해 응용 프로그램의 &lt;code&gt;date&lt;/code&gt; 와 &lt;code&gt;time&lt;/code&gt; 을 제어하는 ​​것이 유용한 상황이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ec510a7115384622bdf806fc23045336183d411" translate="yes" xml:space="preserve">
          <source>There are times when you will encounter errors or unexpected behavior with Cypress itself. In this situation, we recommend checking these support resources &lt;strong&gt;first&lt;/strong&gt;.</source>
          <target state="translated">Cypress 자체에서 오류가 발생하거나 예기치 않은 동작이 발생할 수 있습니다. 이러한 상황에서는 &lt;strong&gt;먼저&lt;/strong&gt; 이러한 지원 리소스를 확인하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="99819c525097a56827a5efaee0977c9b214c5fb3" translate="yes" xml:space="preserve">
          <source>There are two types of methods you can call in your Cypress tests: &lt;strong&gt;commands&lt;/strong&gt; and &lt;strong&gt;assertions&lt;/strong&gt;. For example, there are 6 commands and 2 assertions in the test below.</source>
          <target state="translated">Cypress 테스트에서 호출 할 수있는 두 가지 유형의 메소드가 있습니다 ( &lt;strong&gt;명령&lt;/strong&gt; 및 &lt;strong&gt;어설 션)&lt;/strong&gt; . 예를 들어 아래 테스트에는 6 개의 명령과 2 개의 어설 션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="edd0c8f24df34d4f4efd4882e258c13a5f0d27da" translate="yes" xml:space="preserve">
          <source>There are two ways to write assertions in Cypress:</source>
          <target state="translated">Cypress에서 어설 션을 작성하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f90a254bcdbcdf0217f289fa6fe55e32c8bd325" translate="yes" xml:space="preserve">
          <source>There have been situations where Cypress does not correctly allow you to interact with an element that should be interactable. If that&amp;rsquo;s the case, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 상호 작용할 수있는 요소와 상호 작용할 수없는 상황이있었습니다. 이 경우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이슈 열기를 엽니 다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="846f089ba2dceeca206f450533e974240eb00438" translate="yes" xml:space="preserve">
          <source>There is a better / more helpful experience around passing unknown options to the CLI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;#837&lt;/a&gt;.</source>
          <target state="translated">알 수없는 옵션을 CLI에 전달하는 데 더 좋고 도움이되는 경험이 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;# 837&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7cb0a4f82ff308a4a655e5df1ab9a5514c43c847" translate="yes" xml:space="preserve">
          <source>There is a new &amp;ldquo;Download Chromium&amp;rdquo; menu item in the &amp;ldquo;Help&amp;rdquo; menu of the Test Runner links to Cypress&amp;rsquo;s &lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromium Download Tool&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;#3977&lt;/a&gt;</source>
          <target state="translated">테스트 러너의 &quot;도움말&quot;메뉴에 Cypress의 &lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromium 다운로드 도구&lt;/a&gt; 링크에 새로운 &quot;Download Chromium&quot;메뉴 항목이 있습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;# 3977&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8a888938384b901f545ade5d304637c1fbd4789" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command that can execute any arbitrary system command. Additionally there is a new &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;execTimeout&lt;/code&gt;&lt;/a&gt; configuration option which is set to &lt;code&gt;60s&lt;/code&gt; by default. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;#126&lt;/a&gt;.</source>
          <target state="translated">임의의 시스템 명령을 실행할 수 있는 새로운 &lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 명령이 있습니다. 또한 새로운 &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;execTimeout&lt;/code&gt; &lt;/a&gt; 구성 옵션이 기본적 으로 &lt;code&gt;60s&lt;/code&gt; 초로 설정되어 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;# 126&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b695443b7ff680b400a74fdbb62042e3ed95a68" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command for executing any arbitrary &lt;code&gt;node&lt;/code&gt; code.</source>
          <target state="translated">임의의 &lt;code&gt;node&lt;/code&gt; 코드 를 실행하기위한 새로운 &lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="acb4d381b0d91e1db21a6bee9a8bc26677281fa6" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command that enables you to go outside the browser to perform tasks directly in &lt;code&gt;node&lt;/code&gt;. This will make it easy to setup, scaffold, seed, talk to your database, or anything else useful on a back end.</source>
          <target state="translated">새로운이 &lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 직접에서 작업을 수행하기 위해 브라우저 외부에서 이동 할 수 있습니다 명령 &lt;code&gt;node&lt;/code&gt; . 이를 통해 설정, 비계, 시드, 데이터베이스와의 대화 또는 백엔드에서 유용한 모든 것을 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="080c45c55e1a8e8bc7f30cae801b7b6ff44731de" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config&lt;/code&gt;&lt;/a&gt; interface - akin to &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;&lt;code&gt;Cypress.env&lt;/code&gt;&lt;/a&gt; which provides access to configuration values.</source>
          <target state="translated">구성 값에 액세스 할 수있는 &lt;a href=&quot;../../api/cypress-api/env&quot;&gt; &lt;code&gt;Cypress.env&lt;/code&gt; &lt;/a&gt; 와 유사한 새로운 &lt;a href=&quot;../../api/cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config&lt;/code&gt; &lt;/a&gt; 인터페이스 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a89616a7b0bd75512c95d76eb76237279081ff" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;&lt;code&gt;Cypress.Cookies&lt;/code&gt;&lt;/a&gt; interface which enables you to &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and even &lt;code&gt;preserve&lt;/code&gt; cookies throughout your test. Useful to preserve cookie-based sessions between your tests. &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;Documentation is written here&lt;/a&gt;.</source>
          <target state="translated">새로운이 &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt; &lt;code&gt;Cypress.Cookies&lt;/code&gt; 의&lt;/a&gt; 당신이 할 수 있도록 인터페이스를 &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; , 심지어 &lt;code&gt;preserve&lt;/code&gt; 테스트를 통해 쿠키. 테스트간에 쿠키 기반 세션을 유지하는 데 유용합니다. &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;설명서가 여기에 작성됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bc11c9a3ea0446140035e06a82277064c463a3c" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Screenshot API&lt;/a&gt; and new &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; options that allow you set defaults for how screenshots are captured, whether to scale your app, disable timers and animations, or which elements to black out in the screenshot. You can also set defaults for whether to automatically take screenshots when there are test failures or whether to wait for the Command Log to synchronize before taking the screenshot. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;#1424&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;스크린 샷 API&lt;/a&gt; 및 새로운 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 옵션이있어 스크린 샷 캡처 방법, 앱 크기 조정, 타이머 및 애니메이션 사용 안함 또는 스크린 샷에서 블랙 아웃 할 요소에 대한 기본값을 설정할 수 있습니다. 테스트 실패시 스크린 샷을 자동으로 찍을 것인지 또는 스크린 샷을 찍기 전에 명령 로그가 동기화 될 때까지 기다릴 것인지에 대한 기본값을 설정할 수도 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;# 1424&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="79bb1d052f1ca789b903deb46d7befdbcd7171dd" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt;&lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt;&lt;/a&gt; environment variable for installing Cypress at a mirror url. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;#2609&lt;/a&gt;.</source>
          <target state="translated">미러 URL에 Cypress를 설치하기위한 새로운 &lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt; &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; &lt;/a&gt; 환경 변수가 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;# 2609&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="83beffa5e35c0631c3a7b574f10ad9d102e5087a" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; option&lt;/a&gt; that lets you change the browser that runs from the command line. This works the same way as changing the browser in the GUI, with the exception that any browser other than the default &lt;code&gt;electron&lt;/code&gt; browser will &lt;strong&gt;not&lt;/strong&gt; record a video. This is solvable but requires more work.</source>
          <target state="translated">명령 줄에서 실행되는 브라우저를 변경할 수 있는 새로운 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; 옵션&lt;/a&gt; 이 있습니다. 기본 &lt;code&gt;electron&lt;/code&gt; 브라우저 이외의 브라우저가 비디오를 녹화 &lt;strong&gt;하지 않는&lt;/strong&gt; 것을 제외하고는 GUI에서 브라우저를 변경하는 것과 같은 방식으로 작동합니다 . 이것은 해결할 수 있지만 더 많은 작업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="04b2955c1440e10490167f19b06f746205a4bc88" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; property called: &lt;del&gt;&lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt;&lt;/del&gt; (This was changed to &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; in &lt;a href=&quot;#3.0.0&quot;&gt;&lt;code&gt;3.0.0&lt;/code&gt;&lt;/a&gt;) that is set to &lt;code&gt;true&lt;/code&gt; by default and will automatically clear out screenshots + videos folders before each run. These files are not deleted, they are just moved to your trash.</source>
          <target state="translated">다음과 같은 새로운 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 속성이 있습니다.&lt;del&gt; &lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt; &lt;/del&gt;(이 변경되었습니다 &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; 에서 &lt;a href=&quot;#3.0.0&quot;&gt; &lt;code&gt;3.0.0&lt;/code&gt; &lt;/a&gt; )로 설정되어 있는지 &lt;code&gt;true&lt;/code&gt; 기본적으로 자동으로 각 실행하기 전에 스크린 샷 + 비디오 폴더를 삭제합니다. 이 파일은 삭제되지 않고 휴지통으로 이동됩니다.</target>
        </trans-unit>
        <trans-unit id="d06af4861e389b3f4b76596a41ef326764789959" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;blacklistHosts&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt; that allows you to block requests made to those hosts. Blocked requests will respond with a &lt;code&gt;503&lt;/code&gt; status code. This is useful for blocking 3rd party domains like Google Analytics. We have added a &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;new &amp;lsquo;Stubbing Google Analytics&amp;rsquo; recipe&lt;/a&gt; demonstrating this. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;#442&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 에 새로운 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;blacklistHosts&lt;/code&gt; &lt;/a&gt; 호스트 옵션 이있어 해당 호스트에 대한 요청을 차단할 수 있습니다. 차단 된 요청은 &lt;code&gt;503&lt;/code&gt; 상태 코드로 응답 합니다. 이는 Google 웹 로그 분석과 같은 타사 도메인을 차단하는 데 유용합니다. 이를 보여주는 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;새로운 'Stubbing Google Analytics'레시피를&lt;/a&gt; 추가했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;# 442&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="71b68cacc333c70b80b6a6041d7af0737e4db7a7" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;userAgent&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt;. This enables you to change the &lt;code&gt;userAgent&lt;/code&gt; of the browser for the entire browsing session. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;#364&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 에 새로운 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;userAgent&lt;/code&gt; &lt;/a&gt; 옵션이 있습니다. 이를 통해 전체 브라우징 세션에 대한 브라우저 의 &lt;code&gt;userAgent&lt;/code&gt; 를 변경할 수 있습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;# 364&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ae9764d255bdd93bf742848a0bb91319330c74db" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;numTestsKeptInMemory&lt;/code&gt;&lt;/a&gt; configuration option that controls how many test&amp;rsquo;s snapshots and command data is kept in memory while tests are running. Reducing this number will reduce the memory used in the browser while tests are running. Whatever this number is - is how many tests you can walk back in time when inspecting their snapshots and return values. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;#142&lt;/a&gt;.</source>
          <target state="translated">테스트가 실행되는 동안 얼마나 많은 테스트 스냅 샷과 명령 데이터가 메모리에 유지되는지 제어하는 새로운 &lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; &lt;/a&gt; 구성 옵션이 있습니다. 이 숫자를 줄이면 테스트가 실행되는 동안 브라우저에서 사용되는 메모리가 줄어 듭니다. 이 숫자가 무엇이든간에-스냅 샷 및 반환 값을 검사 할 때 시간을 거슬러 수있는 테스트 수입니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;# 142&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02ec5dfd34f0346bdb7f35c6274b1cdf4305181b" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;recipe showcasing these new features&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;이러한 새로운 기능을 보여주는&lt;/a&gt; 새로운 레시피가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ad10514dd752d91913d4759b5ee5e3aa5c451ca" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; service that displays your recorded runs.</source>
          <target state="translated">기록 된 달리기를 표시 하는 새로운 &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;대시 보드&lt;/a&gt; 서비스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="77e7f0018a19b9c64db1fa23dd2cf5d0368ab527" translate="yes" xml:space="preserve">
          <source>There is a new &lt;code&gt;--global&lt;/code&gt; option useful with &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; to force Cypress to open in global mode. This is helpful when you have multiple nested Cypress projects but only want to install Cypress once in the root project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;#889&lt;/a&gt;.</source>
          <target state="translated">Cypress를 전역 모드로 강제로 &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; 도록 cypress open 에 유용한 새로운 &lt;code&gt;--global&lt;/code&gt; 옵션이 있습니다. 중첩 된 Cypress 프로젝트가 여러 개 있지만 루트 프로젝트에 Cypress를 한 번만 설치하려는 경우에 유용합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;# 889&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="972bd5bca2f0bc5c2b24402e52b432f624b1be26" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; that reads files on your file system and changes the subject to the contents. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">파일 시스템에서 파일을 읽고 제목을 내용으로 변경 하는 새로운 명령 &lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 이 있습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;# 179&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f68ca9f2a891dbd0987580099aec34c7ea3695f8" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; that creates and/or writes contents to files on your file system. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">파일 시스템의 파일에 내용을 작성 및 / 또는 작성하는 &lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 명령이 새로 추가되었습니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;# 179&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f04cef119eadde70093d340e263053fbf3b48903" translate="yes" xml:space="preserve">
          <source>There is a new docs section related to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard&lt;/a&gt; and the new features.</source>
          <target state="translated">&lt;a href=&quot;../dashboard/introduction&quot;&gt;대시 보드&lt;/a&gt; 및 새로운 기능과 관련된 새로운 문서 섹션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7cbc4a231272b5474fcb2e0ba0ed37f41073f64e" translate="yes" xml:space="preserve">
          <source>There is a performance tradeoff here: &lt;strong&gt;tests that have longer timeout periods take longer to fail&lt;/strong&gt;. Commands always proceed as soon as their expected criteria is met, so working tests will be performed as fast as your application allows. A test that fails due to timeout will consume the entire timeout period, by design. This means that while you &lt;em&gt;may&lt;/em&gt; want to increase your timeout period to suit specific parts of your app, you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to make it &amp;ldquo;extra long, just in case&amp;rdquo;.</source>
          <target state="translated">: 여기에 성능 트레이드 오프가 &lt;strong&gt;더 이상 타임 아웃 기간이 실패 할 오래 걸릴 수 있습니다 테스트&lt;/strong&gt; . 명령은 항상 예상 기준이 충족되는 즉시 진행되므로 작업 테스트는 응용 프로그램이 허용하는 한 빨리 수행됩니다. 시간 초과로 인해 실패한 테스트는 설계 상 전체 시간 초과 기간을 소비합니다. 당신이 동안이 수단 &lt;em&gt;수도있다&lt;/em&gt; 앱 정장 특정 부품에 제한 시간을 늘리려면, 당신은 &lt;em&gt;하지 않는다&lt;/em&gt; &quot;여분의 긴, 다만 경우에&quot;그것을 만들고 싶어.</target>
        </trans-unit>
        <trans-unit id="dd3a8251112c22a0bf1975273531d4e8b487f70c" translate="yes" xml:space="preserve">
          <source>There is a rich UI which visually shows you the command execution, assertions, network requests, spies, stubs, page loads, or URL changes.</source>
          <target state="translated">명령 실행, 어설 션, 네트워크 요청, 스파이, 스텁, 페이지로드 또는 URL 변경을 시각적으로 보여주는 풍부한 UI가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a27c68a7274ff829a1c32f0ddaa955ab21da8cd4" translate="yes" xml:space="preserve">
          <source>There is also a new menu panel. Some commands (like action commands) will take multiple snapshots: &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt;. We can now cycle through these.</source>
          <target state="translated">새로운 메뉴 패널도 있습니다. 일부 명령은 (조치 명령 등) 여러 스냅 샷을 취합니다 &lt;strong&gt;이전&lt;/strong&gt; 과 &lt;strong&gt;이후&lt;/strong&gt; . 이제 이것들을 순환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa53acc79e5c716d6dacd70ed6a73be45bd0a23" translate="yes" xml:space="preserve">
          <source>There is another way to fix our flaky test. Whenever you write a longer test, we recommend alternating commands with assertions. In this case, I will add an assertion after the &lt;code&gt;cy.get()&lt;/code&gt; command, but before the &lt;code&gt;.find()&lt;/code&gt; command.</source>
          <target state="translated">비정상적인 테스트를 수정하는 또 다른 방법이 있습니다. 더 긴 테스트를 작성할 때마다 어설 션이있는 대체 명령을 사용하는 것이 좋습니다. 이 경우 &lt;code&gt;cy.get()&lt;/code&gt; 명령 뒤에 &lt;code&gt;.find()&lt;/code&gt; 명령 앞에 어설 션을 추가하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="a64be5e933222b58a58d0dc12fc430763fee796f" translate="yes" xml:space="preserve">
          <source>There is essentially never any reason to visit a site that you don&amp;rsquo;t control in your tests. It&amp;rsquo;s prone to error and slow.</source>
          <target state="translated">테스트에서 제어하지 않는 사이트를 방문해야 할 이유는 없습니다. 오류가 발생하기 쉽고 속도가 느립니다.</target>
        </trans-unit>
        <trans-unit id="0f57c2f2f40538e31abaeb9ca943454fea6a83b3" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;cy.tab()&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;cy.tab()&lt;/code&gt; 명령 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="63c8a89efb3a159630b4a57805e55542e49129c6" translate="yes" xml:space="preserve">
          <source>There is no cross browser support other than Chrome and Electron.</source>
          <target state="translated">Chrome 및 Electron 이외의 브라우저 간 지원은 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2888ef848492fdb6210260238b98e33f56f1761" translate="yes" xml:space="preserve">
          <source>There is no longer a separate &lt;code&gt;cypress install&lt;/code&gt; step, but this command still exists if you want to &lt;strong&gt;reinstall&lt;/strong&gt; the binary for whatever reason.</source>
          <target state="translated">더 이상 별도의 &lt;code&gt;cypress install&lt;/code&gt; 단계는 없지만 어떤 이유로 든 바이너리 를 &lt;strong&gt;다시 설치&lt;/strong&gt; 하려는 경우이 명령이 계속 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="d7ee6819fe6735c70035545a66c943933e18f0a3" translate="yes" xml:space="preserve">
          <source>There is no longer an error when scaffolding a new Cypress project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;#326&lt;/a&gt;.</source>
          <target state="translated">새로운 Cypress 프로젝트를 스캐 폴딩 할 때 더 이상 오류가 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;# 326&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9e5b5cac87e35310da0c85810ef9686073735b2a" translate="yes" xml:space="preserve">
          <source>There is no need to ever &lt;code&gt;return&lt;/code&gt; Cypress commands.</source>
          <target state="translated">Cypress 명령을 &lt;code&gt;return&lt;/code&gt; 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="04248a622963ddde849ee6b6b3cc76f561cc2699" translate="yes" xml:space="preserve">
          <source>There is not any native or mobile events support.</source>
          <target state="translated">기본 또는 모바일 이벤트 지원이 없습니다.</target>
        </trans-unit>
        <trans-unit id="56ba7b31c83ad7595d7e2a55b3d565c08e9e4369" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../../api/commands/log&quot;&gt;&lt;code&gt;cy.log()&lt;/code&gt;&lt;/a&gt; command for displaying an arbitrary message and args. Useful for providing context while testing and debugging long tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;#342&lt;/a&gt;.</source>
          <target state="translated">이제 임의의 메시지와 인수를 표시하기위한 &lt;a href=&quot;../../api/commands/log&quot;&gt; &lt;code&gt;cy.log()&lt;/code&gt; &lt;/a&gt; 명령이 있습니다. 긴 테스트를 테스트하고 디버깅하는 동안 컨텍스트를 제공하는 데 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;# 342&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1f598dc9501427974ff4c2428fff185f34c313be" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../tooling/plugins-guide&quot;&gt;Plugins API interface&lt;/a&gt;. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;#684&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;a href=&quot;../tooling/plugins-guide&quot;&gt;플러그인 API 인터페이스가&lt;/a&gt; 있습니다. 부분적으로 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;# 684를 처리&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cd8c373bd5d7046717bbf32038f260e70f1ce97d" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;cy.cmd&lt;/code&gt; and &lt;code&gt;cy.command&lt;/code&gt; method which enables you to invoke commands by their string name. This is most useful when using &lt;em&gt;namespaced&lt;/em&gt; custom commands. So &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; can be accessed by &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt;. (Docs have not been written yet).</source>
          <target state="translated">이제 문자열 이름으로 명령을 호출 할 수 있는 &lt;code&gt;cy.cmd&lt;/code&gt; 및 &lt;code&gt;cy.command&lt;/code&gt; 메소드가 있습니다. &lt;em&gt;네임 스페이스&lt;/em&gt; 사용자 지정 명령을 사용할 때 가장 유용 합니다. 따라서 &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; 는 &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt; 로 액세스 할 수 있습니다 . (문서는 아직 작성되지 않았습니다).</target>
        </trans-unit>
        <trans-unit id="cf4dcd5d8ab032b57d20ae25b94743436a377785" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;cy.type()&lt;/code&gt;&lt;/a&gt; that disables parsing the special character sequences found between the &lt;code&gt;{}&lt;/code&gt; characters. This will now type what you&amp;rsquo;ve provided literally without any special parsing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;#4287&lt;/a&gt;.</source>
          <target state="translated">편지가 &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; 에 옵션 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;cy.type()&lt;/code&gt; &lt;/a&gt; 특수 문자 시퀀스를 구문 분석 비활성화가 사이에 발견 &lt;code&gt;{}&lt;/code&gt; 문자. 특수 파싱없이 문자 그대로 제공 한 내용이 입력됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;# 4287&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f940c11367f334900f9fe9e3847e283e77bc3c67" translate="yes" xml:space="preserve">
          <source>There is now a Search Bar in the Desktop GUI that enables you to filter the list of specs. Helpful for projects with a ton of spec files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;#1098&lt;/a&gt;.</source>
          <target state="translated">이제 데스크탑 GUI에 사양 목록을 필터링 할 수있는 검색 막대가 있습니다. 사양 파일이 많은 프로젝트에 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;# 1098&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="da7265af3da9c2c16aa77c8b980a05010fcc3eda" translate="yes" xml:space="preserve">
          <source>There is now a default &lt;code&gt;cypress&lt;/code&gt; folder that contains your test files, a &lt;code&gt;fixtures&lt;/code&gt; folder with an example fixture, and a &lt;code&gt;support&lt;/code&gt; folder with example support files. Inside &lt;code&gt;cypress&lt;/code&gt; there is an &lt;code&gt;integration&lt;/code&gt; folder that will contain your integration tests.</source>
          <target state="translated">이제 테스트 파일이 들어 있는 기본 &lt;code&gt;cypress&lt;/code&gt; 폴더, &lt;code&gt;fixtures&lt;/code&gt; 예제가 포함 된 픽스처 폴더 및 예제 지원 파일이 포함 된 &lt;code&gt;support&lt;/code&gt; 폴더가 있습니다. 내부 &lt;code&gt;cypress&lt;/code&gt; 이 생길 것입니다 &lt;code&gt;integration&lt;/code&gt; 하여 통합 테스트가 포함됩니다 폴더.</target>
        </trans-unit>
        <trans-unit id="8067cf3b90d7d9883abc59cd1f0a83808d2633b4" translate="yes" xml:space="preserve">
          <source>There is now a download service to access the latest version of Cypress and previous versions.</source>
          <target state="translated">최신 버전의 Cypress 및 이전 버전에 액세스 할 수있는 다운로드 서비스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e83110a4355fa79db9a3fcdf83a41acfd6cb91aa" translate="yes" xml:space="preserve">
          <source>There is now a link to our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt; in the navigation of the web app.</source>
          <target state="translated">이제 &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;웹앱&lt;/a&gt; 탐색에 채팅 링크가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e09ba3f0dfb49b58e71d412e80b4a4f4ac968a2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt;&lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt;&lt;/a&gt; flag you can pass during &lt;code&gt;npm install&lt;/code&gt; which skips the binary installation after the &lt;code&gt;cypress&lt;/code&gt; npm module completes its installation. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;#1005&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;code&gt;cypress&lt;/code&gt; npm 모듈이 설치를 완료 한 후 이진 설치를 건너 뛰는 &lt;code&gt;npm install&lt;/code&gt; 중에 전달할 수 있는 새로운 &lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt; &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; &lt;/a&gt; 플래그가 있습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;# 1005&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d0c122f435064136c25d3c102646962651950d9f" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration&quot;&gt;configuration option&lt;/a&gt;: &lt;code&gt;watchForFileChanges&lt;/code&gt; that, when set to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt;, will prevent Cypress from attempting to watch for file changes and restart your tests.</source>
          <target state="translated">새로운 지금이 &lt;a href=&quot;configuration&quot;&gt;구성 옵션&lt;/a&gt; : &lt;code&gt;watchForFileChanges&lt;/code&gt; 로 설정, &lt;code&gt;false&lt;/code&gt; 에서 &lt;code&gt;cypress.json&lt;/code&gt; 는 , 파일 변경을 감시하려고 시도 싸이프레스을 방지하고 테스트를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="dfa7b44660cfd433a495758bb2afdce65afa3004" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;chromeWebSecurity&lt;/code&gt;&lt;/a&gt; option you can set in &lt;code&gt;cypress.json&lt;/code&gt; to turn off Chrome&amp;rsquo;s Web Security features. We&amp;rsquo;ve written a brand new reference that details why and how you could use this. &lt;a href=&quot;../guides/web-security&quot;&gt;Cypress Web Security&lt;/a&gt;. This option can be used for accessing &lt;code&gt;cross origin&lt;/code&gt;&lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; or if your application needs to test navigation across super domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;#262&lt;/a&gt;.</source>
          <target state="translated">새로운 지금이 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;chromeWebSecurity&lt;/code&gt; 의&lt;/a&gt; 당신은에서 설정할 수있는 옵션 &lt;code&gt;cypress.json&lt;/code&gt; 크롬의 웹 보안 기능을 해제 할 수는. 우리는 왜 그리고 어떻게 이것을 사용할 수 있는지에 대한 새로운 참조를 작성했습니다. &lt;a href=&quot;../guides/web-security&quot;&gt;Cypress 웹 보안&lt;/a&gt; . 이 옵션은 &lt;code&gt;cross origin&lt;/code&gt; &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; 에 액세스 하거나 애플리케이션이 수퍼 도메인에서 탐색을 테스트해야하는 경우에 사용할 수 있습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;# 262&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9c13d06cd6f7be441a440e0a5e52a3c17d46efa2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;error-messages&quot;&gt;Error Messages Page&lt;/a&gt; which will provide additional explanation when you are getting errors from Cypress. These errors will be directly linked to (like how Angular provides errors).</source>
          <target state="translated">Cypress에서 오류가 발생했을 때 추가 설명을 제공 하는 새로운 &lt;a href=&quot;error-messages&quot;&gt;오류 메시지 페이지&lt;/a&gt; 가 있습니다. 이러한 오류는 Angular가 오류를 제공하는 방법과 같이 직접 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="3da6d69e75441af501cee5b60ff76c2820e29e9d" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;code&gt;videoUploadOnPasses&lt;/code&gt; configuration option in &lt;code&gt;cypress.json&lt;/code&gt;. Turning this off will only compress and upload videos on failures. This only affects projects which are setup to record to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;#460&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@carlos-granados&lt;/a&gt;.</source>
          <target state="translated">새로운 지금이 &lt;code&gt;videoUploadOnPasses&lt;/code&gt; 의 에서 구성 옵션 &lt;code&gt;cypress.json&lt;/code&gt; 은 . 이 기능을 끄면 오류가 발생한 경우에만 비디오를 압축하고 업로드합니다. 이는 대시 보드에 기록하도록 설정된 프로젝트에만 영향을줍니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;# 460&lt;/a&gt; 수정 . 로 기여 &lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@ 카를로스 - 그라나도 스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b83ca6f75548f1429229de20a9aeb6fe96b722c" translate="yes" xml:space="preserve">
          <source>There is now an &lt;a href=&quot;configuration&quot;&gt;&lt;code&gt;ignoreTestFiles&lt;/code&gt;&lt;/a&gt; configuration option that accepts an array of &lt;code&gt;glob&lt;/code&gt; patterns. This enables you to ignore extraneous spec files that may be created during a build process. The default pattern is &lt;code&gt;*.hot-update.js&lt;/code&gt; which will ignore dynamically generated webpack hot module swapping files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;#159&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;glob&lt;/code&gt; 패턴 배열을 허용 하는 &lt;a href=&quot;configuration&quot;&gt; &lt;code&gt;ignoreTestFiles&lt;/code&gt; &lt;/a&gt; 구성 옵션이 있습니다. 이를 통해 빌드 프로세스 중에 작성 될 수있는 외부 스펙 파일을 무시할 수 있습니다. 기본 패턴은 &lt;code&gt;*.hot-update.js&lt;/code&gt; 이며 동적으로 생성 된 웹팩 핫 모듈 스와핑 파일은 무시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;# 159&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a99195291987f66dbf8c3f3569ecafb008dcf9e5" translate="yes" xml:space="preserve">
          <source>There is now an &lt;code&gt;example_spec.js&lt;/code&gt; file that is scaffolded on new projects. This allows new users to instantly see Cypress successfully running on an example project and will answer many questions on writing your first tests. This &lt;code&gt;example_spec.js&lt;/code&gt; file contains every single Cypress command and has approximately 70 tests.</source>
          <target state="translated">이제 새 프로젝트에서 스캐 폴딩 되는 &lt;code&gt;example_spec.js&lt;/code&gt; 파일이 있습니다. 이를 통해 새로운 사용자는 예제 프로젝트에서 Cypress가 성공적으로 실행되고 있음을 즉시 확인할 수 있으며 첫 번째 테스트 작성에 대한 많은 질문에 대답 할 수 있습니다. 이 &lt;code&gt;example_spec.js&lt;/code&gt; 파일에는 모든 단일 Cypress 명령이 포함되어 있으며 약 70 개의 테스트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="031d431a1eb00c36efe82a7c28512d172ecf63ac" translate="yes" xml:space="preserve">
          <source>There was a bug when checking / unchecking &lt;code&gt;:checkbox&lt;/code&gt; where it did not properly receive focus.</source>
          <target state="translated">포커스를 제대로받지 못한 &lt;code&gt;:checkbox&lt;/code&gt; 를 체크 / 체크 해제 할 때 버그가 발생 했습니다.</target>
        </trans-unit>
        <trans-unit id="a9e92b0b59182c86132b2dd07a89e0f5a3605c11" translate="yes" xml:space="preserve">
          <source>There was no performance penalty splitting up multiple tests because they run really fast</source>
          <target state="translated">여러 테스트를 정말 빠르게 실행하기 때문에 여러 테스트를 나눌 때 성능 저하가 발생하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="c34832326aef46eb63697ba55a2cd1f3899baa6c" translate="yes" xml:space="preserve">
          <source>There will never be support for &lt;a href=&quot;#Multiple-tabs&quot;&gt;multiple browser tabs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Multiple-tabs&quot;&gt;다중 브라우저 탭은&lt;/a&gt; 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="18a6526be1610a630eea6faeec2d18843eba2750" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new &amp;lsquo;canceled&amp;rsquo; XHR status shown on the Command Log to indicate the difference between calling &lt;code&gt;xhr.abort()&lt;/code&gt; and the browser canceling the request due to page navigation. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;#3973&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;xhr.abort()&lt;/code&gt; 호출 과 페이지 탐색으로 인해 브라우저가 요청을 취소 하는 것의 차이를 나타 내기 위해 명령 로그에 새로운 '취소 된'XHR 상태가 표시됩니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;# 3973&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ecc8bbb3c2b7a877c0207765fdec3d2b56839b06" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new warning when mouse interactions fail displaying that it failed due to the element having CSS &lt;code&gt;pointer-events: none&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;#3164&lt;/a&gt;.</source>
          <target state="translated">CSS &lt;code&gt;pointer-events: none&lt;/code&gt; 가진 요소로 인해 마우스 상호 작용이 실패했음을 표시하지 못하는 새로운 경고가 있습니다 : none . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;# 3164&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9060e00ab79a3906c7c6bc48a22ab6f0c6b6395" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;open discussion&lt;/a&gt; about this behavior.</source>
          <target state="translated">있습니다 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;공개 토론&lt;/a&gt; 이 문제에 대한이.</target>
        </trans-unit>
        <trans-unit id="fe5170237743e929b01a3f5de39d11c73b643c24" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s no reason to add this level of complexity when you&amp;rsquo;re only wrapping a couple commands.</source>
          <target state="translated">몇 개의 명령 만 래핑 할 때이 수준의 복잡성을 추가 할 이유가 없습니다.</target>
        </trans-unit>
        <trans-unit id="18735493b2590b0d17f1fc15d89f5fca60430728" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now a proper &amp;ldquo;empty view&amp;rdquo; when you go to setup your project to record on our Dashboard and you have not created any Organizations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;#1306&lt;/a&gt;.</source>
          <target state="translated">이제 대시 보드에 기록하도록 프로젝트를 설정하고 조직을 만들지 않은 경우 적절한 &quot;빈보기&quot;가 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;# 1306&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f7484ee1a39bf81b8695c10efcae8524d0b44cb" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now an &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;&lt;code&gt;after:screenshot&lt;/code&gt; plugin event&lt;/a&gt; you can use in your &lt;code&gt;pluginsFile&lt;/code&gt; to work with screenshots after they are taken. This enables you to rename them, move their location, resize them, send them to a service, etc. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;#2039&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pluginsFile&lt;/code&gt; 에서 사용할 수 있는 &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt; &lt;code&gt;after:screenshot&lt;/code&gt; 플러그인 이벤트가&lt;/a&gt; 있습니다 . 이렇게하면 이름을 바꾸거나 위치를 이동하거나 크기를 조정하거나 서비스로 보낼 수 있습니다. 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;# 2039&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="397710a06288d53d07c3614c5133df2eef06b538" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s often much more efficient to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">따라서 &lt;code&gt;.blur()&lt;/code&gt; 직접 블러 동작을 테스트하는 것이 훨씬 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="7214495cbcc91eebe33a6442febcf1a56b9f0eef" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s oftentimes much easier and simpler to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">따라서 종종 &lt;code&gt;.blur()&lt;/code&gt; 직접 블러 동작을 테스트하는 것이 훨씬 쉽고 간단합니다 .</target>
        </trans-unit>
        <trans-unit id="fc5e5447eb3b4803d9fc6039f9cde3ac326cd017" translate="yes" xml:space="preserve">
          <source>Therefore what you do on one site could not possibly affect another.</source>
          <target state="translated">따라서 한 사이트에서 수행 한 작업은 다른 사이트에 영향을 줄 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="85f6fdb916332f8ec1dc5dfa8588b7bda489bf11" translate="yes" xml:space="preserve">
          <source>These actions will always happen serially (one after the other), never in parallel (at the same time). Why?</source>
          <target state="translated">이러한 작업은 항상 연속적으로 (병렬로) 동시에 수행되지는 않습니다. 왜?</target>
        </trans-unit>
        <trans-unit id="28743c5ca6bfcc7515dfeba2957983dc47734790" translate="yes" xml:space="preserve">
          <source>These are helpful to set conditions that you want to run before a set of tests or before each test. They&amp;rsquo;re also helpful to clean up conditions after a set of tests or after each test.</source>
          <target state="translated">이는 일련의 테스트 전에 또는 각 테스트 전에 실행할 조건을 설정하는 데 도움이됩니다. 또한 일련의 테스트 후 또는 각 테스트 후 조건을 정리하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="45674c33ac9f89ac283ff637d8946d43e4731d26" translate="yes" xml:space="preserve">
          <source>These are just simple examples. Remember - you have the full power of Node at your disposal.</source>
          <target state="translated">이것들은 단순한 예입니다. 기억하십시오-귀하는 귀하의 처분에 따라 노드의 모든 권한을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="eb65f75ddd6fd4c1ccef4ce326b6f6c85b9af13c" translate="yes" xml:space="preserve">
          <source>These assertions are available for TDD assertions (&lt;code&gt;assert&lt;/code&gt;). You can see the entire list of available Chai assertions &lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이러한 어설 션은 TDD 어설 션 ( &lt;code&gt;assert&lt;/code&gt; )에 사용할 수 있습니다 . 사용 가능한 Chai 어설 션의 전체 목록은 &lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;여기&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4953b3893626062263f824a1960bd2a77b100e7a" translate="yes" xml:space="preserve">
          <source>These binary names should work for most Linux distributions. If your distribution packages browsers under a different binary name, you can add a symlink using the expected binary name so that Cypress can detect it.</source>
          <target state="translated">이 바이너리 이름은 대부분의 Linux 배포판에서 작동합니다. 배포판에서 다른 이진 이름으로 브라우저를 패키지하는 경우 Cypress에서 검색 할 수 있도록 예상 이진 이름을 사용하여 심볼릭 링크를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a1196bf431f1cfe6164bd4d103522bb3a9b52e7" translate="yes" xml:space="preserve">
          <source>These chainers are available for BDD assertions (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;). Aliases listed can be used interchangeably with their original chainer. You can see the entire list of available BDD Chai assertions &lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이러한 체인은 BDD 어설 션에 사용할 수 있습니다 ( &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ). 나열된 별칭은 원래 체인과 상호 교환하여 사용할 수 있습니다. 사용 가능한 BDD 차이 어설 션의 전체 목록은 &lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;여기&lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0195e7b826291e8c9d2e6c2760f471b63c7092b4" translate="yes" xml:space="preserve">
          <source>These chainers are available when asserting about a DOM object.</source>
          <target state="translated">이러한 체인은 DOM 객체에 대해 주장 할 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68422c27f1633a2980af5c4c02cb2fc4a047c124" translate="yes" xml:space="preserve">
          <source>These chainers are used on assertions with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 체인은 &lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 사용한 어설 션에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="20515bec0d95724a47bc745c03c73fa522fbb5ff" translate="yes" xml:space="preserve">
          <source>These commands are useful when writing both &lt;strong&gt;unit tests&lt;/strong&gt; and &lt;strong&gt;integration tests&lt;/strong&gt;.</source>
          <target state="translated">이 명령은 &lt;strong&gt;단위 테스트&lt;/strong&gt; 와 &lt;strong&gt;통합 테스트를&lt;/strong&gt; 작성할 때 유용 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1cfb20200e9dc3b22d4476cb1bb20d5b8ced0ba3" translate="yes" xml:space="preserve">
          <source>These commands ensure &lt;a href=&quot;interacting-with-elements&quot;&gt;some guarantees&lt;/a&gt; about what the state of the elements should be prior to performing their actions.</source>
          <target state="translated">이 명령 은 요소를 수행하기 전에 요소의 상태를 &lt;a href=&quot;interacting-with-elements&quot;&gt;보증&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="881d844366384bae117147c3598ae8922f86ef5b" translate="yes" xml:space="preserve">
          <source>These commands have their own particular timeout values which are documented in our &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">이러한 명령에는 자체 &lt;a href=&quot;../references/configuration&quot;&gt;구성에&lt;/a&gt; 설명되어있는 고유 한 시간 초과 값이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="83633488b1538060384db695faf6778dfd27c136" translate="yes" xml:space="preserve">
          <source>These commands simulate a user interacting with your application. Under the hood, Cypress fires the events a browser would fire thus causing your application&amp;rsquo;s event bindings to fire.</source>
          <target state="translated">이 명령은 사용자가 응용 프로그램과 상호 작용하는 것을 시뮬레이션합니다. Cypress는 브라우저에서 발생하는 이벤트를 발생시켜 애플리케이션의 이벤트 바인딩을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="52211a23efcbd36ca425b4c7bbb10e85f46d5957" translate="yes" xml:space="preserve">
          <source>These days modern JavaScript applications are highly dynamic and mutable. Their state and the DOM are continuously changing over a period of time.</source>
          <target state="translated">요즘 최신 JavaScript 응용 프로그램은 매우 동적이며 변경 가능합니다. 그들의 상태와 DOM은 일정 기간 동안 지속적으로 변화하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="609ce6a7c382a53ea655a06896d2ab06c5aff2c2" translate="yes" xml:space="preserve">
          <source>These design patterns ensure we can create &lt;strong&gt;deterministic&lt;/strong&gt;, &lt;strong&gt;repeatable&lt;/strong&gt;, &lt;strong&gt;consistent&lt;/strong&gt; tests that are &lt;strong&gt;flake free&lt;/strong&gt;.</source>
          <target state="translated">이러한 디자인 패턴 은 &lt;strong&gt;플레이크가없는 &lt;/strong&gt;&lt;strong&gt;결정&lt;/strong&gt; 적이고 &lt;strong&gt;반복 가능&lt;/strong&gt; 하며 &lt;strong&gt;일관된&lt;/strong&gt; 테스트를 만들 수 있도록 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="442e0ac562d6a14e9a81ecbfe21544963edd5783" translate="yes" xml:space="preserve">
          <source>These events are useful not only to control your application&amp;rsquo;s behavior, but also for debugging purposes.</source>
          <target state="translated">이러한 이벤트는 응용 프로그램의 동작을 제어 할뿐만 아니라 디버깅 목적으로도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b07694fc42f8b832051755f59f4778b9b5c2ff23" translate="yes" xml:space="preserve">
          <source>These events come from Cypress as it issues commands and reacts to their state. These are all useful to listen to for debugging purposes.</source>
          <target state="translated">이러한 이벤트는 명령을 실행하고 해당 상태에 반응 할 때 Cypress에서 발생합니다. 이것들은 모두 디버깅 목적으로 듣는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="043a6687e4b1a3f18da73f4c9bfca2d806aa03f1" translate="yes" xml:space="preserve">
          <source>These events come from the application currently under test (your application). These are the most useful events for you to listen to.</source>
          <target state="translated">이러한 이벤트는 현재 테스트중인 응용 프로그램 (응용 프로그램)에서 발생합니다. 이것들은 당신이들을 수있는 가장 유용한 행사입니다.</target>
        </trans-unit>
        <trans-unit id="359374f9c462810b631ecda55c5d66a04f382d01" translate="yes" xml:space="preserve">
          <source>These examples were implemented in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt; 에서 구현되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8d32cf151178383caef9aa8ad927132ef9f35294" translate="yes" xml:space="preserve">
          <source>These flags can only be used when recording to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">이 플래그는 &lt;a href=&quot;../dashboard/introduction&quot;&gt;대시 보드 서비스에&lt;/a&gt; 기록 할 때만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7e81141ee1393dfcb7b048723fc44e40ef45f80" translate="yes" xml:space="preserve">
          <source>These getters are also available for BDD assertions. They don&amp;rsquo;t actually do anything, but they enable you to write simple, english sentences.</source>
          <target state="translated">이러한 게터는 BDD 어설 션에도 사용할 수 있습니다. 그들은 실제로 아무것도하지 않지만 간단한 영어 문장을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d327b39b833509ec1e2b285b87bef79067b06fe0" translate="yes" xml:space="preserve">
          <source>These means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="translated">즉, 여러 구성 파일을 저장하고 다음과 같이 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa5357b2c9c52398ef9491e8a83e910435c1ec16" translate="yes" xml:space="preserve">
          <source>These new APIs will work well in both &lt;code&gt;unit&lt;/code&gt; tests and &lt;code&gt;integration&lt;/code&gt; tests.</source>
          <target state="translated">이 새로운 API는 &lt;code&gt;unit&lt;/code&gt; 테스트와 &lt;code&gt;integration&lt;/code&gt; 테스트 모두에서 잘 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="d28942c040600bc3ed5d1ad0f4c559d04b54555b" translate="yes" xml:space="preserve">
          <source>These patterns are pretty much the same as before:</source>
          <target state="translated">이러한 패턴은 이전과 거의 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ed3414d62d52af3e5b6b1c3baec988723b167eb7" translate="yes" xml:space="preserve">
          <source>These pre-release builds are platform-specific. Choose the platform that matches your platform; for example if you are on a Mac, click on the commit &amp;ldquo;Testing new darwin x64 &amp;hellip;&amp;rdquo;. This commit has a custom message that shows a special temporary URL of the built binary for Mac OS and the matching npm &lt;code&gt;cypress&lt;/code&gt; package.</source>
          <target state="translated">이 시험판 빌드는 플랫폼에 따라 다릅니다. 플랫폼에 맞는 플랫폼을 선택하십시오. 예를 들어 Mac을 사용하는 경우&amp;ldquo;새 darwin x64 테스트&amp;hellip;&amp;rdquo;커밋을 클릭하십시오. 이 커밋에는 Mac OS 용 빌드 바이너리의 특수 임시 URL과 일치하는 npm &lt;code&gt;cypress&lt;/code&gt; 패키지 를 표시하는 사용자 정의 메시지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0931e8b6577933aa64d3d15bef574bad710dfe9" translate="yes" xml:space="preserve">
          <source>These rules are pretty intuitive, and most commands give you the flexibility to override or bypass the default ways they can fail, typically by passing a &lt;code&gt;{force: true}&lt;/code&gt; option.</source>
          <target state="translated">이 규칙은 매우 직관적이며 대부분의 명령은 일반적으로 &lt;code&gt;{force: true}&lt;/code&gt; 옵션 을 전달하여 실패 할 수있는 기본 방법을 무시하거나 무시할 수있는 유연성을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="c94d28aa75cb493037d863adcd2aa5c1fb923810" translate="yes" xml:space="preserve">
          <source>These script patterns are antiquated and deprecated security techniques to prevent clickjacking and framebusting. They are a relic of the past and are no longer necessary in modern browsers. However many sites and applications still implement them.</source>
          <target state="translated">이러한 스크립트 패턴은 클릭 재킹 및 프레임 버스트를 방지하기 위해 구식이며 더 이상 사용되지 않는 보안 기술입니다. 그것들은 과거의 유물이며 더 이상 최신 브라우저에서 필요하지 않습니다. 그러나 많은 사이트와 응용 프로그램에서 여전히이를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="a6f5e5c1784077e3dd22aeace20664d5f86a292a" translate="yes" xml:space="preserve">
          <source>These string messages will be shown in the Command Log giving each assertion more context.</source>
          <target state="translated">이 문자열 메시지는 각 어설 션에 더 많은 컨텍스트를 제공하는 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="137c32ae358ef4e80bd8c0f9d2bfd375c3b8c32d" translate="yes" xml:space="preserve">
          <source>These techniques prevent Cypress from working, and they can be safely removed without altering any of your application&amp;rsquo;s behavior.</source>
          <target state="translated">이러한 기술은 Cypress가 작동하지 못하게하며 응용 프로그램의 동작을 변경하지 않고도 안전하게 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba8ab5864f9d929861e35ef5cdddeda01c8f1431" translate="yes" xml:space="preserve">
          <source>These two commands work together to control the behavior of your responses within the command&amp;rsquo;s options. &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; enables stubbing, while &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; provides a routing table so Cypress understands which response should go with which request.</source>
          <target state="translated">이 두 명령은 함께 작동하여 명령 옵션 내에서 응답의 동작을 제어합니다. &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 는 스터 빙을 활성화하는 반면, &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 는 라우팅 테이블을 제공하므로 Cypress는 어떤 응답이 어떤 요청과 관련되어야하는지 이해합니다.</target>
        </trans-unit>
        <trans-unit id="0f8e5a57c4af6b7a9d473a9ea0690cbaf075a71a" translate="yes" xml:space="preserve">
          <source>These various timeouts are defined in the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;Configuration&lt;/a&gt; document.</source>
          <target state="translated">이러한 다양한 시간 초과는 &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;구성&lt;/a&gt; 문서에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="382ee2e21da5c19509b40972f28f3052b6936f0a" translate="yes" xml:space="preserve">
          <source>They are liable to change at any moment which will break tests.</source>
          <target state="translated">테스트를 중단 할 수있는 순간에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a56ac5d0ec9176f5af01c758c59cb008aea8f2f" translate="yes" xml:space="preserve">
          <source>They may detect you are a script and block your access (Google does this).</source>
          <target state="translated">그들은 당신이 스크립트임을 감지하고 귀하의 액세스를 차단할 수 있습니다 (Google이이를 수행함).</target>
        </trans-unit>
        <trans-unit id="9b893017ae4ab49a916aeb9e55edfb2e2e81b3ca" translate="yes" xml:space="preserve">
          <source>They may do A/B testing which makes it impossible to get consistent results.</source>
          <target state="translated">일관된 결과를 얻는 것이 불가능한 A / B 테스트를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54f161b1dd790ed2c62a644ac0b51ec37f613527" translate="yes" xml:space="preserve">
          <source>They may have security features enabled which prevent Cypress from working.</source>
          <target state="translated">Cypress가 작동하지 못하게하는 보안 기능이 활성화되어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8166a5ce7e3f579f8602955ae86ac6e886a6270" translate="yes" xml:space="preserve">
          <source>Think of your record key as the key that enables you to &lt;em&gt;write and create&lt;/em&gt; runs. However, it has nothing to do with being able to &lt;em&gt;read or see&lt;/em&gt; runs once they are recorded.</source>
          <target state="translated">기록 키를 런 을 &lt;em&gt;작성하고 작성할&lt;/em&gt; 수있는 키로 생각하십시오 . 그러나 기록 된 런 을 &lt;em&gt;읽거나 보는&lt;/em&gt; 것과는 아무런 관련이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="cb5d527fd6e86a1fa5b13a95c00fa9a30ee49021" translate="yes" xml:space="preserve">
          <source>Third Party Plugins</source>
          <target state="translated">타사 플러그인</target>
        </trans-unit>
        <trans-unit id="beb22e8ea527b5438942d3117fcb17861927b5ef" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLI tool is now published on NPM&lt;/a&gt;, though the documentation still needs to be written.</source>
          <target state="translated">이 &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLI 도구는 이제 NPM에 게시&lt;/a&gt; 되었지만 설명서를 여전히 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b3e5b9b025b2c29064f0a9adbd48298a462718a" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;delay is 60 seconds by default&lt;/strong&gt;, but is &lt;a href=&quot;project&quot;&gt;configurable within the Dashboard&lt;/a&gt;.</source>
          <target state="translated">이 &lt;strong&gt;지연 시간은 기본적으로 60 초&lt;/strong&gt; 이지만 &lt;a href=&quot;project&quot;&gt;대시 보드 내에서 구성 할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62b7158c582db223557ebeec57ef5d313adb2953" translate="yes" xml:space="preserve">
          <source>This GitHub Action for npm enables arbitrary actions with the npm command-line client, including testing with cypress.io and publishing to a registry.</source>
          <target state="translated">이 npm 용 GitHub 작업은 cypress.io 테스트 및 레지스트리 게시를 포함하여 npm 명령 줄 클라이언트에서 임의의 작업을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="f502ab0df6197a9e24c93b25d8862a3da4752490" translate="yes" xml:space="preserve">
          <source>This above example is ideal because now we are resetting the state between each test and ensuring nothing in previous tests leaks into subsequent ones.</source>
          <target state="translated">위의 예제는 각 테스트 사이의 상태를 재설정하고 이전 테스트에서 누출이 발생하지 않도록하기 때문에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="8017be0f0fbcd16a8130b36b3cef709434d85acf" translate="yes" xml:space="preserve">
          <source>This above test will pass even if the &lt;code&gt;.active&lt;/code&gt; class is applied to the button asynchronously - or after a indeterminate period of time.</source>
          <target state="translated">이 테스트는 &lt;code&gt;.active&lt;/code&gt; 클래스가 버튼에 비동기 적으로 적용되거나 일정 시간이 지난 후에도 통과 합니다.</target>
        </trans-unit>
        <trans-unit id="8197155d64bb509765e88f2bc29f6dfabe8fd875" translate="yes" xml:space="preserve">
          <source>This allows you to inspect the web application, the DOM, the network, and any storage after each command to make sure everything happens as expected.</source>
          <target state="translated">이를 통해 웹 응용 프로그램, DOM, 네트워크 및 각 명령 이후의 저장소를 검사하여 모든 것이 예상대로 발생하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a189af4537a7f46576d2e1073b9b0ce3ceb116" translate="yes" xml:space="preserve">
          <source>This allows you to isolate the problem a little better</source>
          <target state="translated">이렇게하면 문제를 조금 더 잘 격리 할 수 ​​있습니다</target>
        </trans-unit>
        <trans-unit id="9248a84a17934c3b2e08562ecd3c59b31b003634" translate="yes" xml:space="preserve">
          <source>This allows you to record those details or manipulate the image as needed. You can also return updated details about the image.</source>
          <target state="translated">이를 통해 세부 정보를 기록하거나 필요에 따라 이미지를 조작 할 수 있습니다. 이미지에 대한 업데이트 된 세부 정보를 반환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="006fa58cf505c99b58517df432b0dc5e3fdd2f4d" translate="yes" xml:space="preserve">
          <source>This allows you to record those details, manipulate the image as needed, and return the updated details about the image.</source>
          <target state="translated">이를 통해 이러한 세부 정보를 기록하고 필요에 따라 이미지를 조작하고 이미지에 대한 업데이트 된 세부 정보를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfa32b59fca9866e2a6798a8078e8df509bf9e96" translate="yes" xml:space="preserve">
          <source>This also applies to custom assertions such as when passing a callback:</source>
          <target state="translated">콜백을 전달할 때와 같은 사용자 지정 어설 ​​션에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="13b599015c16556bcb01f0b0b1af61920c3719eb" translate="yes" xml:space="preserve">
          <source>This also causes the commands to be queued on the wrong test. We will get the error in the next test that Cypress detected it had commands in its command queue.</source>
          <target state="translated">이로 인해 명령이 잘못된 테스트에서 대기하게됩니다. 다음 테스트에서 Cypress가 명령 대기열에 명령을 가지고 있음을 감지 한 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c230dabe195bf9d8fb5f3a0be2b16160cde50bef" translate="yes" xml:space="preserve">
          <source>This also helps prevent flake when interacting with your application in tests. You can usually override this behavior with a &lt;code&gt;force&lt;/code&gt; option.</source>
          <target state="translated">또한 테스트에서 응용 프로그램과 상호 작용할 때 플레이크를 방지하는 데 도움이됩니다. 일반적으로 &lt;code&gt;force&lt;/code&gt; 옵션을 사용 하여이 동작을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14448f79e0ac836cf66b84d5943d534b44db3bf7" translate="yes" xml:space="preserve">
          <source>This avoids ever needing a second open browser, but still gives you an end-to-end test that provides 100% confidence that the two clients can communicate with each other.</source>
          <target state="translated">이렇게하면 두 번째로 열린 브라우저가 필요하지 않지만 두 클라이언트가 서로 통신 할 수 있다는 100 % 신뢰도를 제공하는 엔드 투 엔드 테스트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ffcc27dd8d3d6805806d62fb4df70d8e4b4b2c7e" translate="yes" xml:space="preserve">
          <source>This avoids ever needing to touch the UI of another application.</source>
          <target state="translated">이렇게하면 다른 응용 프로그램의 UI를 건드릴 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6e22effe331f1fdf51d1986d8d2bccff5c8400a8" translate="yes" xml:space="preserve">
          <source>This behavior can be turned off by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults ()&lt;/a&gt; 에서 &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하면이 동작을 끌 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0566cbd883d43a8c86b451848b07afc8b7f203e" translate="yes" xml:space="preserve">
          <source>This behavior is defined here: &lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;Form Implicit Submission&lt;/a&gt;.</source>
          <target state="translated">이 동작은 여기에 정의됩니다 : &lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;Form Implicit Submission&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2116d7396edebf7fccda746381ebe5befffeb66e" translate="yes" xml:space="preserve">
          <source>This behavior is due to the function invocation &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt;, which call the functions immediately to return a Promise.</source>
          <target state="translated">이 동작은 Promise를 반환하기 위해 즉시 함수를 호출하는 함수 호출 &lt;code&gt;foo()&lt;/code&gt; 및 &lt;code&gt;bar()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d1026fd09572361af21bed1bf4b794694e0898a" translate="yes" xml:space="preserve">
          <source>This callback function can and &lt;em&gt;will&lt;/em&gt; be called multiple times with the same &lt;code&gt;filePath&lt;/code&gt;.</source>
          <target state="translated">이 콜백 함수는 동일한 &lt;code&gt;filePath&lt;/code&gt; 로 여러 번 호출 &lt;em&gt;될&lt;/em&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2bac7b14e8624933e72c9418239623c0167ec9a4" translate="yes" xml:space="preserve">
          <source>This code below is just for demonstration.</source>
          <target state="translated">아래 코드는 데모 용입니다.</target>
        </trans-unit>
        <trans-unit id="75615113c2d80617aac68b6dd269cb04f5d5ead7" translate="yes" xml:space="preserve">
          <source>This configuration contains all of the values that get passed into the browser for your project.</source>
          <target state="translated">이 구성에는 프로젝트의 브라우저로 전달되는 모든 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="371ef096eb0b125d658a2f2ef3a3dd9f8a83043a" translate="yes" xml:space="preserve">
          <source>This delay could be the source of our flaky tests when the application is running on our CI server. Here is how to see the source of the problem. In the Command Log, hover over each command to see which elements Cypress found at each step.</source>
          <target state="translated">이 지연은 응용 프로그램이 CI 서버에서 실행될 때 비정상적인 테스트의 원인이 될 수 있습니다. 문제의 원인을 확인하는 방법은 다음과 같습니다. 명령 로그에서 각 명령 위로 마우스를 가져가 Cypress가 각 단계에서 찾은 요소를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ff1b84f7cc713a7b67c14bf06ec7b03bbab39581" translate="yes" xml:space="preserve">
          <source>This document assumes you have &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;installed Cypress&lt;/a&gt;.</source>
          <target state="translated">이 문서는 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Cypress를 설치&lt;/a&gt; 했다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="020536ae917c3782dcc90d3dc111ecdfbdb2be36" translate="yes" xml:space="preserve">
          <source>This document is only a reference to every assertion Cypress supports.</source>
          <target state="translated">이 문서는 Cypress가 지원하는 모든 주장에 대한 참조 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="c1f0c96a94930859c838edf61cdb01af7f3809ed" translate="yes" xml:space="preserve">
          <source>This does not set a &lt;code&gt;debugger&lt;/code&gt; in your code, unlike &lt;a href=&quot;debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 와 달리 코드에 &lt;code&gt;debugger&lt;/code&gt; 를 설정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9779d44142da4b1a1220ae52daf2de6e6e2862c9" translate="yes" xml:space="preserve">
          <source>This element must be an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with type &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">이 요소는 유형 &lt;code&gt;checkbox&lt;/code&gt; 또는 &lt;code&gt;radio&lt;/code&gt; 가있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6bc94d74173cda2d4b50e8be921b70e7926d0532" translate="yes" xml:space="preserve">
          <source>This element must currently be in focus. If you want to ensure an element is focused before blurring, try using &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">이 요소는 현재 초점이 맞아야합니다. 흐리게하기 전에 요소의 초점을 맞추려면 &lt;code&gt;.blur()&lt;/code&gt; 전에 &lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b784395f09c8450da725aae7e805800788376c23" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;strong&gt;write faster&lt;/strong&gt;, &lt;strong&gt;easier&lt;/strong&gt; and &lt;strong&gt;more reliable&lt;/strong&gt; tests.</source>
          <target state="translated">이것은 당신이 할 수 있습니다 &lt;strong&gt;빠른 쓰기&lt;/strong&gt; , &lt;strong&gt;쉽게&lt;/strong&gt; 그리고 &lt;strong&gt;보다 안정적인&lt;/strong&gt; 테스트를.</target>
        </trans-unit>
        <trans-unit id="58a48b9c86e75737932d798f1146f66f67bd81bb" translate="yes" xml:space="preserve">
          <source>This enables you to do things like:</source>
          <target state="translated">이를 통해 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="186a2861b069094eadc51cc83089bd154ae1d05e" translate="yes" xml:space="preserve">
          <source>This enables you to install Cypress in a top level &lt;code&gt;node_modules&lt;/code&gt; folder but run Cypress in a nested folder. This is also helpful when you have multiple Cypress projects in your repo.</source>
          <target state="translated">이를 통해 최상위 수준 &lt;code&gt;node_modules&lt;/code&gt; 폴더에 Cypress를 설치할 수 있지만 중첩 된 폴더에서 Cypress를 실행할 수 있습니다. Repo에 여러 Cypress 프로젝트가있는 경우에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f3bcbd7c053354fdbf03492caa4697d8426f5606" translate="yes" xml:space="preserve">
          <source>This enables you to iterate on plugin code even with Cypress already running.</source>
          <target state="translated">이를 통해 Cypress가 이미 실행중인 경우에도 플러그인 코드를 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89af8029028e4bfa24db3c32e987386c12cf4276" translate="yes" xml:space="preserve">
          <source>This enables you to test how your application reacts to accepted confirmations and rejected confirmations.</source>
          <target state="translated">이를 통해 응용 프로그램이 승인 된 확인 및 거부 된 확인에 어떻게 반응하는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5e605a365181abbfcfd3afe52eb12cc5e615006" translate="yes" xml:space="preserve">
          <source>This error likely appeared because:</source>
          <target state="translated">이 오류는 다음과 같은 이유로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="17994ab2d722939bcc1783a1da860dccd8bed388" translate="yes" xml:space="preserve">
          <source>This error means that your application navigated to a superdomain that Cypress was not bound to. Initially when you &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, Cypress changes the browser&amp;rsquo;s URL to match the &lt;code&gt;url&lt;/code&gt; passed to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. This enables Cypress to communicate with your application to bypasses all same-origin security policies among other things.</source>
          <target state="translated">이 오류는 애플리케이션이 Cypress가 바인딩되지 않은 수퍼 도메인으로 이동했음을 의미합니다. 당신이 때 처음 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; , 싸이프레스는 일치하도록 브라우저의 URL 변경 &lt;code&gt;url&lt;/code&gt; 로 전달 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; . 이를 통해 Cypress는 애플리케이션과 통신하여 무엇보다도 동일한 원본 보안 정책을 우회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="925d43e1578a638a7a410d2181de40bc9404a475" translate="yes" xml:space="preserve">
          <source>This error occurs in CI when using &lt;code&gt;cypress run&lt;/code&gt; without a valid Cypress binary cache installed on the system (on linux that&amp;rsquo;s &lt;code&gt;~/.cache/Cypress&lt;/code&gt;).</source>
          <target state="translated">이 오류 는 시스템에 유효한 Cypress 이진 캐시 ( &lt;code&gt;~/.cache/Cypress&lt;/code&gt; 인 Linux)가 설치되어 있지 않은 &lt;code&gt;cypress run&lt;/code&gt; 을 사용할 때 CI에서 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="994ed8888854f2fd39138521dca1154fcc2e6426" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; as an object, and &lt;code&gt;args&lt;/code&gt; which are the default arguments used to launch the browser.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;browser&lt;/code&gt; 를 객체로 만들고 &lt;code&gt;args&lt;/code&gt; 는 브라우저를 시작하는 데 사용되는 기본 인수입니다.</target>
        </trans-unit>
        <trans-unit id="8da72b14e09b80684c53759305f0abe88f30ec34" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; object, which gives you information about the browser, and the &lt;code&gt;launchOptions&lt;/code&gt; object, which allows you to modify how the browser is launched.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;browser&lt;/code&gt; 에 대한 정보를 제공 하는 브라우저 개체와 브라우저가 시작되는 방식을 수정할 수 있는 &lt;code&gt;launchOptions&lt;/code&gt; 개체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="75ec60c1bbc3a89890c61d440fd22825efc368e0" translate="yes" xml:space="preserve">
          <source>This example below will only override &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;clearTimeout&lt;/code&gt; and leave the other time-related functions as they are.</source>
          <target state="translated">아래의이 예제는 &lt;code&gt;setTimeout&lt;/code&gt; 및 &lt;code&gt;clearTimeout&lt;/code&gt; 만 재정의 하고 다른 시간 관련 함수는 그대로 둡니다.</target>
        </trans-unit>
        <trans-unit id="574a0ccd310c4f2791c6bc19528a452ac997edfb" translate="yes" xml:space="preserve">
          <source>This example comes from the recipe &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#testing-the-dom&quot;&gt;Root style&lt;/a&gt;. Imagine an application code where the method &lt;code&gt;setProperty&lt;/code&gt; is called to change a CSS variable:</source>
          <target state="translated">이 예제는 레시피 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#testing-the-dom&quot;&gt;Root 스타일&lt;/a&gt; 에서 비롯됩니다 . CSS 변수를 변경하기 위해 &lt;code&gt;setProperty&lt;/code&gt; 메소드 가 호출 되는 애플리케이션 코드를 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="a3797bf9144c86e8afbc5c97d4ced710dd36795e" translate="yes" xml:space="preserve">
          <source>This example is shown in the branch &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;. We want to output a &amp;ldquo;spec&amp;rdquo; report to &lt;code&gt;STDOUT&lt;/code&gt;, save an individual Mochawesome JSON file per test file, and then combine all JSON reports into a single report.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb의 &lt;/a&gt; &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; 분기에 표시 되어 있습니다 . &quot;spec&quot;보고서를 &lt;code&gt;STDOUT&lt;/code&gt; 에 출력하고 테스트 파일 당 개별 Mochawesome JSON 파일을 저장 한 다음 모든 JSON 보고서를 단일 보고서로 결합하려고합니다.</target>
        </trans-unit>
        <trans-unit id="80bfd23661913e232e1a163192ec31dab8b9b283" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt; to always have the &lt;code&gt;matchCase&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">이 예제 는 항상 &lt;code&gt;matchCase&lt;/code&gt; 옵션이 &lt;code&gt;false&lt;/code&gt; 로 설정되도록 &lt;a href=&quot;../commands/contains&quot;&gt; &lt;code&gt;.contains()&lt;/code&gt; &lt;/a&gt; 를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="43e32c08a83188fd47e1f2906151fdee8dbb29bc" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to always wait until a certain element is visible.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 을 덮어 써 특정 요소가 표시 될 때까지 항상 대기합니다.</target>
        </trans-unit>
        <trans-unit id="36289e0b721daa2e30700a485da483d10e11f60b" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;code&gt;screenshot&lt;/code&gt; to always wait until a certain element is visible.</source>
          <target state="translated">이 예제 는 특정 요소가 표시 될 때까지 항상 대기하도록 &lt;code&gt;screenshot&lt;/code&gt; 을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="84b75cfc84db6a7cb9f50830b12a942ddc2e841b" translate="yes" xml:space="preserve">
          <source>This first custom command is really just wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="translated">이 첫 번째 사용자 정의 명령은 실제로 &lt;code&gt;cy.get(selector).click()&lt;/code&gt; 래핑하는 것 입니다. 이 경로를 낮추면 가능한 모든 요소 상호 작용 조합을 포괄하는 수십 또는 수백 개의 사용자 지정 명령이 생성됩니다. 완전히 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="450bcc1e13c871a286e1c1ffe73e202b86f8a1f0" translate="yes" xml:space="preserve">
          <source>This first custom command is wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="translated">이 첫 번째 사용자 정의 명령은 &lt;code&gt;cy.get(selector).click()&lt;/code&gt; 래핑 합니다. 이 경로를 따라 가면 요소 상호 작용의 가능한 모든 조합을 포함하는 수십 또는 수백 개의 사용자 지정 명령을 만들 수 있습니다. 완전히 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="66709d66883cc344e666a243e5c265282a2f66a3" translate="yes" xml:space="preserve">
          <source>This first test below will pass and shows you that Cypress tries to prevent leaving commands behind in the queue in every test.</source>
          <target state="translated">아래의 첫 번째 테스트는 통과하고 Cypress가 모든 테스트에서 대기열에 명령을 남기지 않도록 시도한다는 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5384797d7b8aa061a7fe215e3014a87afd4afe7f" translate="yes" xml:space="preserve">
          <source>This following section utilizes a concept known as &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Aliasing&lt;/a&gt;. If you&amp;rsquo;re new to Cypress you might want to check that out first.</source>
          <target state="translated">다음 섹션에서는 &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Aliasing&lt;/a&gt; 이라는 개념을 사용합니다 . Cypress를 처음 사용하는 경우 먼저 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cdf7aa1fdc9f5ad8166591e7a53d3e050c7b15d3" translate="yes" xml:space="preserve">
          <source>This gives you the best of both worlds - a fast error feedback loop when requests never go out and a much longer duration for the actual external response.</source>
          <target state="translated">이렇게하면 요청이 발생하지 않을 때 빠른 오류 피드백 루프와 실제 외부 응답에 대한 시간이 훨씬 길어집니다.</target>
        </trans-unit>
        <trans-unit id="8e984abbd486f40e4b83a59f61e6a6bb728ea6e9" translate="yes" xml:space="preserve">
          <source>This gives you the option to do things like override the &lt;code&gt;baseUrl&lt;/code&gt; or environment variables.</source>
          <target state="translated">이를 통해 &lt;code&gt;baseUrl&lt;/code&gt; 또는 환경 변수 대체와 같은 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7de14dd549d0c4ac1646e9e757ca22fee0f2cb69" translate="yes" xml:space="preserve">
          <source>This guide assumes you already have your project running and &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;recording&lt;/a&gt; within Continuous Integration. If you have not set up your project yet, check out our &lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration guide&lt;/a&gt;.</source>
          <target state="translated">이 안내서는 Continuous Integration 내에서 이미 프로젝트를 실행하고 &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;기록&lt;/a&gt; 하고 있다고 가정합니다 . 아직 프로젝트를 설정하지 않은 경우 &lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration 안내서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5db417ee2d08131fe1bd60293e19a7173370710" translate="yes" xml:space="preserve">
          <source>This guide assumes you&amp;rsquo;ve already read our &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Installing Cypress&lt;/a&gt; guide and installed Cypress as an &lt;code&gt;npm&lt;/code&gt; module. After installing you&amp;rsquo;ll be able to execute all of the commands in this document from your &lt;strong&gt;project root&lt;/strong&gt;.</source>
          <target state="translated">이 안내서는 이미 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Cypress 설치&lt;/a&gt; 안내서를 읽고 Cypress를 &lt;code&gt;npm&lt;/code&gt; 모듈 로 설치 했다고 가정합니다 . 설치 후에는 &lt;strong&gt;프로젝트 루트&lt;/strong&gt; 에서이 문서의 모든 명령을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23ffdb834bcafffe7ee8957ab3cc85d02ae67258" translate="yes" xml:space="preserve">
          <source>This guide explains how to find what parts of your application code are covered by Cypress tests so you can have 100% confidence that your tests aren&amp;rsquo;t missing cruicial parts of your application. The collected information can be sent to external services, automatically run during pull request reviews, and integrated into CI.</source>
          <target state="translated">이 안내서는 Cypress 테스트에서 다루는 애플리케이션 코드 부분을 찾는 방법을 설명하므로 테스트에 애플리케이션의 결정적인 부분이 없는지 100 % 확신 할 수 있습니다. 수집 된 정보는 외부 서비스로 전송되고 풀 요청 검토 중에 자동으로 실행되며 CI에 통합 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="486a389d6fb9cfc3cfed4c651f0e33830dc83379" translate="yes" xml:space="preserve">
          <source>This guide explains how to instrument the application source code using common tools. Then we show how to save the coverage information and generate reports using the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. After reading this guide you should be able to better target your tests using the code coverage information.</source>
          <target state="translated">이 안내서는 일반적인 도구를 사용하여 응용 프로그램 소스 코드를 계측하는 방법을 설명합니다. 그런 다음 커버리지 정보를 저장하고 &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; Cypress 플러그인을 사용하여 보고서를 생성하는 방법을 보여줍니다 . 이 안내서를 읽은 후에는 코드 범위 정보를 사용하여 테스트를보다 효과적으로 타겟팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e61a970aa8707e6efff0947eea6f0b515f8b79a" translate="yes" xml:space="preserve">
          <source>This guide explores many common patterns for writing good Cypress code that can handle even the most complex situations.</source>
          <target state="translated">이 안내서는 가장 복잡한 상황에서도 처리 할 수있는 우수한 Cypress 코드 작성을위한 많은 공통 패턴을 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="8d863ff08437a4477f1f2d5887b49d9f900c8112" translate="yes" xml:space="preserve">
          <source>This helps us uniquely identify your project. If you manually alter this, &lt;strong&gt;Cypress will no longer be able to identify your project or find the recorded builds for it&lt;/strong&gt;.</source>
          <target state="translated">이를 통해 프로젝트를 고유하게 식별 할 수 있습니다. 이를 수동으로 변경하면 &lt;strong&gt;Cypress는 더 이상 프로젝트를 식별하거나 기록 된 빌드를 찾을 수 없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d3898e06d0b65989b6f12ff084eb3a12f8a3f6e0" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">이는 다른 특수 키 조합에도 적용됩니다 (OS에 따라 다를 수 있음). 예를 들어 OSX에서 &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; 를 입력 하면 특수 문자 &lt;code&gt;&lt;/code&gt; 이 생성 됩니다. 대문자와 마찬가지로 &lt;code&gt;.type()&lt;/code&gt; 은 &lt;code&gt;&lt;/code&gt; 을 출력하지 않고 문자 &lt;code&gt;k&lt;/code&gt; 를 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="d0131967fa7bae19e8e35274e046a4d4497764e8" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need modifier effects to be implemented.</source>
          <target state="translated">이것은 다른 특수 키 조합에도 적용됩니다 (OS에 따라 다를 수 있음). 예를 들어 OSX에서 &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; 를 입력 하면 특수 문자 &lt;code&gt;&lt;/code&gt; 가 생성 됩니다. 대문자와 마찬가지로 &lt;code&gt;.type()&lt;/code&gt; 은 &lt;code&gt;&lt;/code&gt; 를 출력하지 않고 문자 &lt;code&gt;k&lt;/code&gt; 를 출력 합니다. 수정 자 효과를 구현해야하는 경우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51b8d6d387613f057f58e9e27bfeb31b7ff6168f" translate="yes" xml:space="preserve">
          <source>This is a great way to &lt;em&gt;synchronously&lt;/em&gt; query for elements when debugging from Developer Tools.</source>
          <target state="translated">개발자 도구에서 디버깅 할 때 요소 를 &lt;em&gt;동 기적으로&lt;/em&gt; 쿼리 할 수있는 좋은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="362d62d5a45488560fa7b7f004366ae919b1423d" translate="yes" xml:space="preserve">
          <source>This is a less complicated example. Remember - you have the full power of Node at your disposal.</source>
          <target state="translated">이것은 덜 복잡한 예입니다. 기억하십시오-Node의 모든 기능을 마음대로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b3b0521e3b98570ccae50fdf1b4baa4f16afd72" translate="yes" xml:space="preserve">
          <source>This is a relatively simple, straightforward test, but consider how much code has been covered by it, both on the client and the server!</source>
          <target state="translated">이것은 비교적 간단하고 간단한 테스트이지만 클라이언트와 서버 모두에서 얼마나 많은 코드를 다루 었는지 고려하십시오!</target>
        </trans-unit>
        <trans-unit id="fe468e21d4548acdb1c6534bd40ad0d47b37fae5" translate="yes" xml:space="preserve">
          <source>This is actually much more intuitive than it sounds.</source>
          <target state="translated">이것은 실제로 소리보다 훨씬 직관적입니다.</target>
        </trans-unit>
        <trans-unit id="1b50dfd2552d2381eb213119a8c24ed08a84b281" translate="yes" xml:space="preserve">
          <source>This is also a great opportunity to use &lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;root level hooks in mocha&lt;/a&gt;. A perfect place to put these is in the &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;&lt;code&gt;cypress/support/index.js&lt;/code&gt; file&lt;/a&gt; because it is always evaluated before any test code from your spec files.</source>
          <target state="translated">이것은 또한 &lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;mocha에서 루트 레벨 후크&lt;/a&gt; 를 사용할 수있는 좋은 기회 입니다. &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt; &lt;code&gt;cypress/support/index.js&lt;/code&gt; 파일&lt;/a&gt; 은 스펙 파일의 테스트 코드보다 먼저 평가되기 때문에이를 배치하기에 완벽한 장소 입니다.</target>
        </trans-unit>
        <trans-unit id="2493b234352cea3152aeec7ecbe290f832cbf4e4" translate="yes" xml:space="preserve">
          <source>This is an &lt;strong&gt;excellent&lt;/strong&gt; opportunity for you to &lt;strong&gt;use&lt;/strong&gt; your application in the state the tests finished! This enables you to write &lt;strong&gt;partial tests&lt;/strong&gt; that drive your application step by step, writing your test and application code at the same time.</source>
          <target state="translated">테스트가 완료된 상태에서 애플리케이션 을 &lt;strong&gt;사용할&lt;/strong&gt; 수 있는 &lt;strong&gt;훌륭한&lt;/strong&gt; 기회입니다 . 이를 통해 단계별로 응용 프로그램을 구동하는 &lt;strong&gt;부분 테스트&lt;/strong&gt; 를 작성하고 테스트 및 응용 프로그램 코드를 동시에 작성할 수 있습니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73680df5ea2c8602ef7ff481daf3b10324c141d0" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('hash')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('hash')&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="027a8a41afe59d5100370ece415b0888b1dab9c6" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('href')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('href')&lt;/code&gt; &lt;/a&gt; 의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="3090660a8417722f61bd0153ff0a62997ee753bd" translate="yes" xml:space="preserve">
          <source>This is because many commands have a built in &lt;a href=&quot;#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt; which offer you a high level of guarantee.</source>
          <target state="translated">많은 명령에 &lt;a href=&quot;#Default-Assertions&quot;&gt;기본&lt;/a&gt; 보증 이 내장되어 있기 때문에 높은 수준의 보증을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="416bd3baca145a080a73741b07189669d2f382b6" translate="yes" xml:space="preserve">
          <source>This is difficult to do (if not impossible) without making changes to your application. You could use a library like &lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.js&lt;/a&gt;, but even that does not capture every async possibility.</source>
          <target state="translated">응용 프로그램을 변경하지 않고는 불가능하지는 않지만 수행하기가 어렵습니다. &lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.js&lt;/a&gt; 와 같은 라이브러리를 사용할 수 있지만 모든 비동기 가능성을 캡처하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="c81c954c2ff8806221c8d9bad49ede745ce35336" translate="yes" xml:space="preserve">
          <source>This is especially useful when running in CI. Typically we see users using the default &lt;code&gt;spec&lt;/code&gt; reporter to show up in &lt;code&gt;stdout&lt;/code&gt; but then also generate an actual report file for &lt;code&gt;junit&lt;/code&gt;.</source>
          <target state="translated">CI에서 실행할 때 특히 유용합니다. 일반적으로 기본 &lt;code&gt;spec&lt;/code&gt; 리포터를 사용하여 &lt;code&gt;stdout&lt;/code&gt; 에 표시 되지만 &lt;code&gt;junit&lt;/code&gt; 에 대한 실제 보고서 파일을 생성하는 사용자를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="937a71c3b5de9dc4ee2f1f1174e918095025ba20" translate="yes" xml:space="preserve">
          <source>This is helpful to modify, remove, or add your own arguments.</source>
          <target state="translated">이것은 자신의 인수를 수정, 제거 또는 추가하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="4f480a1f1a006462f1044dbf874aff6ecf664e89" translate="yes" xml:space="preserve">
          <source>This is helpful when writing tests from the perspective of a user interacting with your app. They just know they want to click the button labeled &amp;ldquo;Submit&amp;rdquo;, they have no idea that it has a &lt;code&gt;type&lt;/code&gt; attribute of &lt;code&gt;submit&lt;/code&gt;, or a CSS class of &lt;code&gt;my-submit-button&lt;/code&gt;.</source>
          <target state="translated">이는 사용자가 앱과 상호 작용하는 관점에서 테스트를 작성할 때 유용합니다. 그들은&amp;ldquo;Submit&amp;rdquo;이라는 레이블이 붙은 버튼을 클릭하기를 원한다는 것을 알고 있으며, &lt;code&gt;type&lt;/code&gt; 속성이 &lt;code&gt;submit&lt;/code&gt; 이거나 CSS 클래스가 &lt;code&gt;my-submit-button&lt;/code&gt; 인지 알 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b792e8040301bd0acb2b395f7ea8abde6c91d0e4" translate="yes" xml:space="preserve">
          <source>This is known as a &lt;code&gt;timeout&lt;/code&gt;, and most commands can be customized with specific timeout periods (&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;the default timeout is 4 seconds&lt;/a&gt;). These Commands will list a &lt;code&gt;timeout&lt;/code&gt; option in their API documentation, detailing how to set the number of milliseconds you want to continue to try finding the element.</source>
          <target state="translated">이를 &lt;code&gt;timeout&lt;/code&gt; 라고 하며 대부분의 명령은 특정 시간 초과 기간으로 사용자 지정할 수 있습니다 ( &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;기본 시간 초과는 4 초&lt;/a&gt; ). 이 명령은 API 문서에 &lt;code&gt;timeout&lt;/code&gt; 옵션을 나열하며 요소 찾기를 계속 시도하려는 밀리 초 수를 설정하는 방법을 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9241cf6c65f3e1ca58164db9dd575dd8751913e6" translate="yes" xml:space="preserve">
          <source>This is probably the hardest situation to test because it&amp;rsquo;s usually happening due to another cause. You will need to figure out why your JavaScript code is redirecting. Perhaps you&amp;rsquo;re not logged in, and you need to handle that setup elsewhere? Perhaps you&amp;rsquo;re using a Single sign-on (SSO) server and you just need to read the previous section about working around that?</source>
          <target state="translated">일반적으로 다른 원인으로 발생하기 때문에 테스트하기 가장 어려운 상황 일 수 있습니다. JavaScript 코드가 리디렉션되는 이유를 알아야합니다. 아마도 로그인하지 않았으며 다른 곳에서 해당 설정을 처리해야합니까? 아마도 SSO (Single Sign-On) 서버를 사용하고 있고 해당 문제를 해결하기위한 이전 섹션을 읽어야합니까?</target>
        </trans-unit>
        <trans-unit id="16934bd6f87e620c0972f9bb2d9978c401b12b41" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">이것은 Cypress가 결국 수행 할 작업이며 Chrome의 반응 형 모바일 브라우징 시뮬레이션 작동 방식과 일치합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이 문제를 해결하려면 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a26334daece3d32e2bf8919a447a066e4ae159bc" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. Follow &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7075&quot;&gt;#7075&lt;/a&gt; if you need this supported.</source>
          <target state="translated">이것은 Cypress가 궁극적으로 할 일이며 Chrome의 반응 형 모바일 브라우징 시뮬레이션이 작동하는 방식과 일치합니다. 이 지원이 필요한 경우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7075&quot;&gt;# 7075를&lt;/a&gt; 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="6dcc7f6d030b58ad59ae4203de8bd28466d52447" translate="yes" xml:space="preserve">
          <source>This is the big secret of Cypress: we&amp;rsquo;ve taken our favorite pattern for composing JavaScript code, Promises, and built them right into the fabric of Cypress. Above, when we say we&amp;rsquo;re enqueuing actions to be taken later, we could restate that as &amp;ldquo;adding Promises to a chain of Promises&amp;rdquo;.</source>
          <target state="translated">이것이 Cypress의 가장 큰 비밀입니다. JavaScript 코드 인 Promises를 구성하는 데 가장 좋아하는 패턴을 취하여 Cypress의 패브릭에 바로 구축했습니다. 위에서 우리가 나중에 취해야 할 조치를 취하고 있다고 말할 때 우리는&amp;ldquo;약속의 약속에 약속을 추가하는 것&amp;rdquo;으로 다시 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3753eacdd29e84d634ea0cb12683093d1ef9dc7e" translate="yes" xml:space="preserve">
          <source>This is the heart of flaky tests. At Cypress we have designed our API to combat this type of flakiness at every step.</source>
          <target state="translated">이것은 비정상적인 테스트의 핵심입니다. Cypress에서는 모든 단계에서 이러한 유형의 약점을 없애기 위해 API를 설계했습니다.</target>
        </trans-unit>
        <trans-unit id="0c5538cc1bd8f312a53608d9587f80a4d91e9323" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what get&amp;rsquo;s printed to the Command Log.</source>
          <target state="translated">이것은 명령 로그에 인쇄되는 내용을 제어하기위한 내부 API입니다.</target>
        </trans-unit>
        <trans-unit id="bb71fb0e5b6458a3a3eb3b93c5f85351e8539b15" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what gets printed to the Command Log.</source>
          <target state="translated">이것은 명령 로그에 인쇄되는 내용을 제어하기위한 내부 API입니다.</target>
        </trans-unit>
        <trans-unit id="1613df640b73f82e16e95dfa4a713357d7d07a31" translate="yes" xml:space="preserve">
          <source>This is useful against GraphQL endpoints to wait for specific Queries and Mutations.</source>
          <target state="translated">이는 GraphQL 엔드 포인트가 특정 쿼리 및 변형을 기다리는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="45ca3bef48f4448ec8509512e12d846cbd196204" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and just want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="translated">디버깅 할 때 유용하며 테스트 실패 또는 응용 프로그램에서 포착되지 않은 예외와 같은 항목을 추적하기 위해 단일 &quot;캐치 올 (catch-all)&quot;이벤트 만 추가하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b188e0d93f1c48f7ac3cdada5298a2a3a0c9d878" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="translated">이는 디버깅 중이고 단일 &quot;범용&quot;이벤트를 추가하여 테스트 실패 또는 응용 프로그램에서 포착되지 않은 예외와 같은 것을 추적하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e17a8d466ede6a0c1ff320a52b0da9ab959f1373" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re polling a server for a response that may take awhile to complete.</source>
          <target state="translated">완료하는 데 시간이 걸릴 수있는 응답을 위해 서버를 폴링 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ee441496733ae8f12a6ec82934302047c786dd8b" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out a &lt;code&gt;baseUrl&lt;/code&gt; that both &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; use. Set the &lt;code&gt;baseUrl&lt;/code&gt; configuration property in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default) and override it with the &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; environment variable.</source>
          <target state="translated">이것은 싸이프레스는 이미 밖으로 스왑으로 구성되어 있기 때문에 일반적으로 불필요 &lt;code&gt;baseUrl&lt;/code&gt; 그 두 &lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 사용. 설정 &lt;code&gt;baseUrl&lt;/code&gt; 당신의 구성 등록 정보를 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성&lt;/a&gt; 파일 ( &lt;code&gt;cypress.json&lt;/code&gt; 기본적으로)와 그것을 무시 &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; 의 환경 변수.</target>
        </trans-unit>
        <trans-unit id="c81f14f69a0d08483eccd3e2f9835a57c779454a" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out baseUrl&amp;rsquo;s that both &lt;code&gt;cy.visit()&lt;/code&gt; and &lt;code&gt;cy.request()&lt;/code&gt; use. Just set the &lt;code&gt;baseUrl&lt;/code&gt; config property in &lt;code&gt;cypress.json&lt;/code&gt; and override it with environment variable &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;cy.visit()&lt;/code&gt; 와 &lt;code&gt;cy.request()&lt;/code&gt; 가 모두 사용하는 baseUrl을 교체하도록 이미 구성되어 있기 때문에 이것은 일반적으로 불필요 합니다. 그냥 설정 &lt;code&gt;baseUrl&lt;/code&gt; 의 구성 속성 &lt;code&gt;cypress.json&lt;/code&gt; 을 환경 변수로 재정의 &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7438b0034ef2f49cda2d43dc6868ebe59057e7d" translate="yes" xml:space="preserve">
          <source>This is why all of our examples use the regular &lt;code&gt;function () {}&lt;/code&gt; syntax as opposed to the lambda &amp;ldquo;fat arrow&amp;rdquo; syntax &lt;code&gt;() =&amp;gt; {}&lt;/code&gt;.</source>
          <target state="translated">이것이 우리의 모든 예제 가 람다 &quot;뚱뚱한 화살표&quot;구문 &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; 과 반대로 일반 &lt;code&gt;function () {}&lt;/code&gt; 구문을 사용하는 이유 입니다.</target>
        </trans-unit>
        <trans-unit id="e40f1ff06970e07212ca7d1cf8bdc73d20b2d6ad" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#dates-and-times&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">이것은 사용자가 날짜 입력에 정확히 입력하는 방법은 아니지만 날짜 입력 지원은 브라우저마다 다르고 형식은 로케일에 따라 다르기 때문에 해결 방법입니다. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; 는 &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#dates-and-times&quot;&gt;W3 사양에&lt;/a&gt; 필요한 형식 이며 브라우저 또는 로케일에 관계없이 입력 &lt;code&gt;value&lt;/code&gt; 이 설정되는 형식입니다.</target>
        </trans-unit>
        <trans-unit id="50cafd2a717c2013a8367ce226bec9d3d9b1784c" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">이것은 사용자가 날짜 입력을 정확하게 입력하는 방법은 아니지만 날짜 입력 지원은 브라우저마다 다르고 형식은 로케일에 따라 다르므로 해결 방법입니다. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; 는 &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;W3 사양에&lt;/a&gt; 필요한 형식 이며 브라우저 또는 로캘에 관계없이 입력 &lt;code&gt;value&lt;/code&gt; 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="56d6913d4d90022dcb7f14c4fc76dccdbb9f5bdc" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a month input, but is a workaround since month input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">이것은 사용자가 월 입력을 입력하는 방식은 아니지만 월 입력 지원은 브라우저마다 다르고 형식은 로케일에 따라 다르므로 해결 방법입니다. &lt;code&gt;yyyy-MM&lt;/code&gt; 은 &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;W3 사양에&lt;/a&gt; 필요한 형식 이며 브라우저 또는 로캘에 관계없이 입력 &lt;code&gt;value&lt;/code&gt; 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0c41513fff4a312d05254c97b1ee7ef44e64dbf7" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">이것은 사용자가 주 입력에 정확히 입력하는 방법은 아니지만 주 입력 지원은 브라우저마다 다르고 형식은 로케일에 따라 다르기 때문에 해결 방법입니다. &lt;code&gt;yyyy-Www&lt;/code&gt; 는 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string&quot;&gt;W3 사양에&lt;/a&gt; 필요한 형식 이며 브라우저 또는 로케일에 관계없이 입력 &lt;code&gt;value&lt;/code&gt; 이 설정되는 형식입니다.</target>
        </trans-unit>
        <trans-unit id="bb901bfb0f0a8bc8800561d4444df892e7d03325" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">이것은 사용자가 주 입력을 정확히 입력하는 방법은 아니지만 주 입력 지원은 브라우저마다 다르고 형식은 로케일에 따라 달라지기 때문에 해결 방법입니다. &lt;code&gt;yyyy-Www&lt;/code&gt; 는 &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;W3 사양에&lt;/a&gt; 필요한 형식 이며 브라우저 또는 로캘에 관계없이 입력 &lt;code&gt;value&lt;/code&gt; 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2617afa6cdf460caeefc66bad292f940a0fe3c98" translate="yes" xml:space="preserve">
          <source>This lets us reuse our DOM queries for faster tests when the element is still in the DOM, and it automatically handles re-querying the DOM for us when it is not immediately found in the DOM. This is particularly helpful when dealing with front end frameworks that do a lot of re-rendering!</source>
          <target state="translated">이를 통해 요소가 아직 DOM에있을 때 더 빠른 테스트를 위해 DOM 쿼리를 재사용 할 수 있으며 DOM에서 즉시 찾을 수없는 경우 DOM을 다시 쿼리하는 것을 자동으로 처리합니다. 이것은 다시 렌더링을 많이하는 프론트 엔드 프레임 워크를 다룰 때 특히 유용합니다!</target>
        </trans-unit>
        <trans-unit id="c8a4292c1ee5dcfa1ce525c64b1320cb2717c366" translate="yes" xml:space="preserve">
          <source>This limitation exists because Cypress switches to the domain under each specific test when it runs.</source>
          <target state="translated">Cypress가 실행될 때 각 특정 테스트에서 도메인으로 전환하기 때문에 이러한 제한이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a4ab29b9f338e4896f2d56159be7f3ea3b0eb64e" translate="yes" xml:space="preserve">
          <source>This machine is sending different environment parameters than the first machine that started this parallel run.</source>
          <target state="translated">이 머신은이 병렬 실행을 시작한 첫 번째 머신과 다른 환경 매개 변수를 전송합니다.</target>
        </trans-unit>
        <trans-unit id="d7287dd7490355f6bbed13566ea5931ebfad1e07" translate="yes" xml:space="preserve">
          <source>This makes Cypress robust and immune to dozens of common problems that occur in other testing tools. Consider all the circumstances that could cause querying a DOM element to fail:</source>
          <target state="translated">이로 인해 Cypress는 다른 테스트 도구에서 발생하는 수십 가지 일반적인 문제에 강력하고 영향을받지 않습니다. DOM 요소 쿼리가 실패 할 수있는 모든 상황을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="a3c6624973b93aac7a03e0c0e00944970b402d26" translate="yes" xml:space="preserve">
          <source>This makes for a productive development experience because you can add and edit tests as you&amp;rsquo;re implementing a feature and the Cypress user interface will always reflect the results of your latest edits.</source>
          <target state="translated">기능을 구현할 때 테스트를 추가하고 편집 할 수 있고 Cypress 사용자 인터페이스에는 항상 최신 편집 결과가 반영되므로 생산성이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="0147dcdb70fd37741942d1f43bef0fcdb3d665dd" translate="yes" xml:space="preserve">
          <source>This may not work exactly as you are expecting. As you may remember from the &lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Introduction to Cypress&lt;/a&gt;, &lt;code&gt;cy&lt;/code&gt; commands enqueue an action to be taken later. Can you see what the test above will do given that perspective?</source>
          <target state="translated">예상대로 정확하게 작동하지 않을 수 있습니다. 당신이에서 기억다시피 &lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;싸이프레스 소개&lt;/a&gt; , &lt;code&gt;cy&lt;/code&gt; 명령은 작업이 나중에 수행 할 대기열. 위의 테스트에서 그러한 관점이 무엇을하는지 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="062d06e3107076e15ff8f4f923613eb36257a315" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this XHR. If no response is detected, you will get an error message that looks like this:</source>
          <target state="translated">이는 Cypress가 외부 서버가이 XHR에 응답 할 때까지 최대 20 초 동안 대기 함을 의미합니다. 응답이 없으면 다음과 같은 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="01c5ed9fb27f63027e813cd9ccd0ac180d96f8f5" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this request. If no response is detected, you will get an error message that looks like this:</source>
          <target state="translated">즉, Cypress는 이제 외부 서버가이 요청에 응답 할 때까지 최대 20 초를 기다립니다. 응답이 감지되지 않으면 다음과 같은 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d899e3c172fd29e29ee20eed6c45d53d6586c20f" translate="yes" xml:space="preserve">
          <source>This means that instead of resetting the database, or seeding it with the state we want, you can just force the server to respond with &lt;strong&gt;whatever&lt;/strong&gt; you want it to. In this way, we not only prevent needing to synchronize the state between the server and browser, but we also prevent mutating state from our tests. That means tests won&amp;rsquo;t build up state that may affect other tests.</source>
          <target state="translated">즉, 데이터베이스를 재설정하거나 원하는 상태로 시드하는 대신 서버가 원하는 &lt;strong&gt;대로&lt;/strong&gt; 응답하도록 할 수 있습니다 . 이러한 방식으로 서버와 브라우저 사이의 상태를 동기화 할 필요가 없을뿐만 아니라 테스트에서 상태 변경을 방지 할 수 있습니다. 즉, 테스트는 다른 테스트에 영향을 줄 수있는 상태를 구축하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="15f552af7b476efada5ccbe19d1e003e55815913" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased XHR, Cypress will wait up to 5 seconds for a matching XHR to be created. If no matching XHR is found, you will get an error message that looks like this:</source>
          <target state="translated">이는 별칭 XHR 대기를 시작할 때 Cypress가 일치하는 XHR이 생성 될 때까지 최대 5 초 동안 대기 함을 의미합니다. 일치하는 XHR이 없으면 다음과 같은 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4f24977d0e87342872e59e80a5681fe9f5e8cfaf" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased request, Cypress will wait up to 5 seconds for a matching request to be created. If no matching request is found, you will get an error message that looks like this:</source>
          <target state="translated">즉, 별칭이 지정된 요청을 기다리기 시작하면 Cypress가 일치하는 요청이 생성 될 때까지 최대 5 초 동안 대기합니다. 일치하는 요청이 없으면 다음과 같은 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c235428eedeb2633f9060e29cabe9344635dec46" translate="yes" xml:space="preserve">
          <source>This means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="translated">즉, 여러 구성 파일을 저장하고 다음과 같이 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c325bd0857cc8cda3777f44fcc54da309e8e609" translate="yes" xml:space="preserve">
          <source>This means you can take advantage of &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; glob support. This makes it &lt;em&gt;much&lt;/em&gt; easier to route against dynamic segments without having to build up a complex &lt;code&gt;RegExp&lt;/code&gt;.</source>
          <target state="translated">이는 &lt;code&gt;*&lt;/code&gt; 및 &lt;code&gt;**&lt;/code&gt; glob 지원 을 활용할 수 있음을 의미합니다 . 이를 통해 복잡한 &lt;code&gt;RegExp&lt;/code&gt; 를 만들지 않고도 동적 세그먼트를 &lt;em&gt;보다&lt;/em&gt; 쉽게 라우팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecd0bd2485807bbf241a08719355878cf83ae353" translate="yes" xml:space="preserve">
          <source>This message means that Cypress encountered an error when compiling and/or bundling your test file. Cypress automatically compiles and bundles your test code so you can use ES2015, CoffeeScript, modules, etc.</source>
          <target state="translated">이 메시지는 테스트 파일을 컴파일 및 번들링 할 때 Cypress에 오류가 발생했음을 의미합니다. Cypress는 테스트 코드를 자동으로 컴파일 및 번들하여 ES2015, CoffeeScript, 모듈 등을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb55575187f576f80eac0bd90ecbd928dd31fb14" translate="yes" xml:space="preserve">
          <source>This message means that Cypress was unable to find tests in the specified file. You&amp;rsquo;ll likely get this message if you have an empty test file and have not yet written any tests.</source>
          <target state="translated">이 메시지는 Cypress가 지정된 파일에서 테스트를 찾을 수 없음을 의미합니다. 테스트 파일이 비어 있고 아직 테스트를 작성하지 않은 경우이 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbe65c9ea60d05bea293f697ec5b63a2a1bba347" translate="yes" xml:space="preserve">
          <source>This message means you tried to execute one or more Cypress commands outside of a currently running test. Cypress has to be able to associate commands to a specific test.</source>
          <target state="translated">이 메시지는 현재 실행중인 테스트 외부에서 하나 이상의 Cypress 명령을 실행하려했음을 나타냅니다. Cypress는 명령을 특정 테스트에 연결할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="26473ed6f3277cbaabd952641ad6cb2eef61f768" translate="yes" xml:space="preserve">
          <source>This open source plugin compares the baseline and the current images side by side within the Cypress Test Runner if pixel difference is above the threshold; notice how the baseline image (&lt;em&gt;Expected result&lt;/em&gt;) has the label text with the line through, while the new image (&lt;em&gt;Actual result&lt;/em&gt;) does not have it.</source>
          <target state="translated">이 오픈 소스 플러그인은 픽셀 차이가 임계 값보다 높은 경우 Cypress Test Runner 내에서 기준선과 현재 이미지를 나란히 비교합니다. 기준 이미지 ( &lt;em&gt;예상 결과&lt;/em&gt; )에 줄이있는 레이블 텍스트가 있고 새 이미지 ( &lt;em&gt;실제 결과&lt;/em&gt; )에는없는 텍스트 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1874ce110d1b622e8bf6df18a651ee21a552fa7" translate="yes" xml:space="preserve">
          <source>This overrides the default auto-positioning based on the element itself. Useful for events like &lt;code&gt;mousemove&lt;/code&gt; where you need the position to be outside the element itself.</source>
          <target state="translated">이것은 요소 자체에 기반한 기본 자동 위치 지정을 무시합니다. 요소 자체 외부에 위치가 필요한 &lt;code&gt;mousemove&lt;/code&gt; 와 같은 이벤트에 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="18fce04b31ee489e860ee35e6ca5a37c91bfada2" translate="yes" xml:space="preserve">
          <source>This page is currently a work in progress and is not fully documented.</source>
          <target state="translated">이 페이지는 현재 진행중인 작업이며 완전히 문서화되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d49acb671f06c70483fdc4771de2c9b01b581769" translate="yes" xml:space="preserve">
          <source>This part of the API is documented here.</source>
          <target state="translated">API의이 부분은 여기에 문서화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ee7aebde7b2957a142c631b053ee06988aee05" translate="yes" xml:space="preserve">
          <source>This pattern is especially useful for projects in a monorepo. Each segment of the monorepo can be assigned its own group, and larger segments can be parallelized to speed up their testing.</source>
          <target state="translated">이 패턴은 특히 모노 레포 프로젝트에 유용합니다. 모노 레포의 각 세그먼트에는 자체 그룹을 할당 할 수 있으며 더 큰 세그먼트를 병렬화하여 테스트 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d20be6f286a4b55595d0a69af5286da52cd24b61" translate="yes" xml:space="preserve">
          <source>This principle applies to everything in Cypress. Do not test what does not need testing. It is slow, brittle, and adds zero value. Only test the underlying thing that causes the behavior you care about testing.</source>
          <target state="translated">이 원칙은 Cypress의 모든 항목에 적용됩니다. 테스트가 필요없는 것을 테스트하지 마십시오. 느리고 취성이며 0 값을 추가합니다. 테스트와 관련하여 문제가되는 기본 사항 만 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0085003eb564d3c84be846ee443b880929c5b062" translate="yes" xml:space="preserve">
          <source>This queries the entire &lt;code&gt;document&lt;/code&gt; for the content.</source>
          <target state="translated">내용에 대한 전체 &lt;code&gt;document&lt;/code&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="031f0350d47d961e920a47e00907ab6be3352d0c" translate="yes" xml:space="preserve">
          <source>This release marks a major change in the underlying algorithms used to prevent testing flake. It is a major goal of Cypress to combat and prevent &lt;strong&gt;all&lt;/strong&gt; test flake. These algorithm changes go a long way towards making this a reality, and have been months in the making.</source>
          <target state="translated">이 릴리스는 테스트 플레이크를 방지하는 데 사용되는 기본 알고리즘이 크게 변경되었습니다. &lt;strong&gt;모든&lt;/strong&gt; 시험 플레이크 와 싸우고 방지하는 &lt;strong&gt;것이&lt;/strong&gt; Cypress의 주요 목표입니다 . 이러한 알고리즘 변경은이를 실현하기 위해 먼 길을 가고 있으며 몇 달이 지났습니다.</target>
        </trans-unit>
        <trans-unit id="12dc69acb18ebdb8295c65ef78b40c1e72a11b98" translate="yes" xml:space="preserve">
          <source>This scrolling logic only applies to &lt;a href=&quot;#Actionability&quot;&gt;commands that are actionable above&lt;/a&gt;. &lt;strong&gt;We do not scroll elements&lt;/strong&gt; into view when using DOM commands such as &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 스크롤 로직 &lt;a href=&quot;#Actionability&quot;&gt;은 위에서 실행 가능한 명령&lt;/a&gt; 에만 적용됩니다 . &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; 와 같은 DOM 명령을 사용할 때 &lt;strong&gt;요소&lt;/strong&gt; 를보기에 &lt;strong&gt;스크롤하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="44d6a6a59cd93a62ba3def39d82319ec28c11d0b" translate="yes" xml:space="preserve">
          <source>This scrolls the &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;window&lt;/code&gt; 스크롤합니다 .</target>
        </trans-unit>
        <trans-unit id="0a81d3ecd936d4a0e1a59e4ac38ed570cfd8e6ae" translate="yes" xml:space="preserve">
          <source>This section refers to your operating system&amp;rsquo;s environment variables, &lt;em&gt;not&lt;/em&gt;&lt;a href=&quot;../guides/environment-variables&quot;&gt;Cypress environment variables&lt;/a&gt;</source>
          <target state="translated">이 섹션은 &lt;a href=&quot;../guides/environment-variables&quot;&gt;Cypress 환경 변수가 &lt;/a&gt;&lt;em&gt;아닌&lt;/em&gt; 운영 체제 환경 변수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="18b2bf87c76063db55cce706eb4eb526e575a0b8" translate="yes" xml:space="preserve">
          <source>This security vulnerability exists &lt;strong&gt;even if&lt;/strong&gt; your web server forces a &lt;code&gt;301 redirect&lt;/code&gt; back to the HTTPS site. The original HTTP request was still made once, exposing insecure session information.</source>
          <target state="translated">이 보안 취약점 은 웹 서버가 &lt;code&gt;301 redirect&lt;/code&gt; 을 HTTPS 사이트로 다시 강제로 리디렉션 &lt;strong&gt;하더라도&lt;/strong&gt; 존재 합니다. 원래 HTTP 요청은 여전히 ​​한 번 이루어 졌으므로 안전하지 않은 세션 정보가 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="12403c31a93ebd5156b8be6bc1e9a47fda0d2e36" translate="yes" xml:space="preserve">
          <source>This service has now been fully integrated into the Desktop Application. There is a new on-boarding process that helps you setup projects for recording.</source>
          <target state="translated">이 서비스는 이제 데스크톱 응용 프로그램에 완전히 통합되었습니다. 레코딩을위한 프로젝트를 설정하는 데 도움이되는 새로운 온 보딩 프로세스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff80366bdd429c06afb5d5ecf245be6bfd01c8b8" translate="yes" xml:space="preserve">
          <source>This setting changes the display size of the screen and does not affect the &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; set in the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;. The &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; only affect the size of the application under test displayed inside the Test Runner.</source>
          <target state="translated">이 설정은 화면의 표시 크기를 변경 하며 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성에&lt;/a&gt; 설정된 &lt;code&gt;viewportWidth&lt;/code&gt; 및 &lt;code&gt;viewportHeight&lt;/code&gt; 에 영향을주지 않습니다 . &lt;code&gt;viewportWidth&lt;/code&gt; 및 &lt;code&gt;viewportHeight&lt;/code&gt; 은 단지 테스트중인 응용 프로그램의 크기가 테스트 러너 안에 표시에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="2d09642a6e1d006cbc5410327b8aa5d639c52c4a" translate="yes" xml:space="preserve">
          <source>This single test has achieved 100% code coverage - every function and every statement has been executed at least once. Of course in real world applications, achieving 100% code coverage requires multiple tests.</source>
          <target state="translated">이 단일 테스트는 100 % 코드 적용을 달성했습니다. 모든 기능과 모든 명령문은 적어도 한 번 실행되었습니다. 물론 실제 응용 프로그램에서 100 % 코드 적용 범위를 달성하려면 여러 테스트가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="53155aafe0d1b0cb4b1ae2fb540a7e7ae14216e9" translate="yes" xml:space="preserve">
          <source>This strategy is useful because if you add &lt;code&gt;cypress.env.json&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; file, the values in here can be different for each developer machine.</source>
          <target state="translated">이 전략은 &lt;code&gt;cypress.env.json&lt;/code&gt; 을 &lt;code&gt;.gitignore&lt;/code&gt; 파일에 추가하면 여기의 값이 각 개발자 시스템마다 다를 수 있으므로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="85e8c09c493e496ce61478ce7f468f70ff8ee2e6" translate="yes" xml:space="preserve">
          <source>This trade-off means it makes it a little bit harder to communicate with the back end - like your server or database. You will not be able to connect or import those server-side libraries or modules directly. Although you can of course require &lt;code&gt;node_modules&lt;/code&gt; which can be used in the browser. Additionally, you have the ability to use Node to import or talk directly to your back end scripts using &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;our Plugins API&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 절충은 서버 나 데이터베이스와 같은 백엔드와 통신하기가 조금 더 어렵다는 것을 의미합니다. 해당 서버 측 라이브러리 또는 모듈을 직접 연결하거나 가져올 수 없습니다. 물론 브라우저에서 사용할 수있는 &lt;code&gt;node_modules&lt;/code&gt; 가 필요할 수 있습니다. 또한 &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;Plugins API&lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 를 사용하여 Node를 사용하여 백엔드 스크립트를 가져 오거나 직접 대화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad1692a5205711f0259bd9a24e583d51b4a07fca" translate="yes" xml:space="preserve">
          <source>This update represents mostly a lot of internal structure changes. We swapped out the underlying Desktop architecture and refactored all of the back end code to prepare for an open source release.</source>
          <target state="translated">이 업데이트는 대부분 내부 구조가 많이 변경되었습니다. 우리는 기본 데스크탑 아키텍처를 교체하고 모든 백엔드 코드를 리팩터링하여 오픈 소스 릴리스를 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="bde9d67f7ea1b6bbffc28ee2eb2e11ccd499a09f" translate="yes" xml:space="preserve">
          <source>This utility may be useful when writing &lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;plugins&lt;/a&gt; for Cypress and you want to determine if a value is a valid Cypress chainable.</source>
          <target state="translated">이 유틸리티는 Cypress 용 &lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;플러그인&lt;/a&gt; 을 작성할 때 유용 할 수 있으며 값이 유효한 Cypress 체인 가능인지 판별하려고합니다.</target>
        </trans-unit>
        <trans-unit id="c7fb18ad55637b4d42e7ee8e4e55a10f2c56dc30" translate="yes" xml:space="preserve">
          <source>This value should be automatically detected for most CI providers and is unnecessary to define unless Cypress is unable to determine it.</source>
          <target state="translated">이 값은 대부분의 CI 제공자에 대해 자동으로 감지되어야하며 Cypress가이를 판별 할 수 없으면 정의 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="460c60e8297ce00bb79384a1b188340507c62d70" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you have to write Node code which is compatible with this version.</source>
          <target state="translated">이 버전의 Node는 로컬로 설치된 버전과 &lt;strong&gt;아무 관련&lt;/strong&gt; 이 &lt;strong&gt;없습니다&lt;/strong&gt; . 따라서이 버전과 호환되는 노드 코드를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="458d2eb63e4e07f929764431b90c0c1732aa7aa3" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you may want to write Node code which is compatible with this version or document that the user of your plugin will need to set a specific &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Node-version&quot;&gt;&lt;code&gt;nodeVersion&lt;/code&gt;&lt;/a&gt; in their configuration.</source>
          <target state="translated">이 Node 버전은 로컬에 설치된 버전과 &lt;strong&gt;관련&lt;/strong&gt; 이 &lt;strong&gt;없습니다&lt;/strong&gt; . 따라서이 버전과 호환되는 노드 코드를 작성하거나 플러그인 사용자가 구성에서 특정 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Node-version&quot;&gt; &lt;code&gt;nodeVersion&lt;/code&gt; &lt;/a&gt; 을 설정해야한다는 문서를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd7496a752fe65eae6fe303dd223860cb20e04a0" translate="yes" xml:space="preserve">
          <source>This waiting period is called the &lt;strong&gt;run completion delay&lt;/strong&gt; and it begins after the last known CI machine has completed as shown in the diagram below:</source>
          <target state="translated">이 대기 시간을 &lt;strong&gt;실행 완료 지연&lt;/strong&gt; 이라고하며 아래 다이어그램과 같이 마지막으로 알려진 CI 시스템이 완료된 후 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="fdb244e4d607ad9461b14dfafbd9b9a5418ec674" translate="yes" xml:space="preserve">
          <source>This will automatically &lt;strong&gt;prefix&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; commands with this baseUrl.</source>
          <target state="translated">그러면 이 baseUrl이 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 명령 &lt;strong&gt;앞에&lt;/strong&gt; 자동으로 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdf8303387051e38b6dda431a745ea682a363a4f" translate="yes" xml:space="preserve">
          <source>This will clear out all installed versions of Cypress that may be cached on your machine.</source>
          <target state="translated">그러면 컴퓨터에 캐시 될 수있는 설치된 모든 Cypress 버전이 지워집니다.</target>
        </trans-unit>
        <trans-unit id="702164fa3d2706b7e206a0c8a954ebf0bcccfa22" translate="yes" xml:space="preserve">
          <source>This will create separate XML files in the &lt;code&gt;results&lt;/code&gt; folder. You can then merge the output reports using a separate step using 3rd party tool. For example, for &lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; reporter, there is &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; tool.</source>
          <target state="translated">&lt;code&gt;results&lt;/code&gt; 폴더 에 별도의 XML 파일이 생성됩니다 . 그런 다음 타사 도구를 사용하여 별도의 단계를 사용하여 출력 보고서를 병합 할 수 있습니다. 예를 들어 &lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; 기자의 경우 &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="81652586dedbdddba4f333e7507b06fa12f2f254" translate="yes" xml:space="preserve">
          <source>This will install Cypress locally as a dev dependency for your project.</source>
          <target state="translated">Cypress를 로컬로 프로젝트의 개발자 종속성으로 설치합니다.</target>
        </trans-unit>
        <trans-unit id="562c045e2090c70631e9ee513370681d27245006" translate="yes" xml:space="preserve">
          <source>This will query inside of the &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">이것은 &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; 요소 내부에서 쿼리 합니다.</target>
        </trans-unit>
        <trans-unit id="bf7d8c8672a29fbd843543b08f1be727b64d3de9" translate="yes" xml:space="preserve">
          <source>This will scroll the &lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">&lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; 요소 를 스크롤합니다 .</target>
        </trans-unit>
        <trans-unit id="3f7e6174502ca4e71353d0fdc59742a115acf22e" translate="yes" xml:space="preserve">
          <source>This will set the height and width throughout the duration of the tests, then return it to the default &lt;code&gt;viewportHeight&lt;/code&gt; and &lt;code&gt;viewportWidth&lt;/code&gt; when complete.</source>
          <target state="translated">이렇게하면 테스트 기간 동안 높이와 너비가 설정되고 완료되면 기본 &lt;code&gt;viewportHeight&lt;/code&gt; 및 &lt;code&gt;viewportWidth&lt;/code&gt; 로 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="3838f6980902467f5951cb7c9281394b1303f24f" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;execTimeout&lt;/code&gt; when complete.</source>
          <target state="translated">이렇게하면 테스트 기간 동안 시간 제한이 설정되고 완료되면 기본 &lt;code&gt;execTimeout&lt;/code&gt; 으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="5c8c134bbe5d879e028bc1975a535d01e136f6b7" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;taskTimeout&lt;/code&gt; when complete.</source>
          <target state="translated">이렇게하면 테스트 기간 동안 시간 제한이 설정되고 완료되면 기본 &lt;code&gt;taskTimeout&lt;/code&gt; 으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="6a685a05ffe4ec927b0f3930ea8cd549596b1585" translate="yes" xml:space="preserve">
          <source>This will take you to the directory in your file system where your App Data is stored. If you cannot open Cypress, search your file system for a directory named &lt;code&gt;cy&lt;/code&gt; whose content should look something like this:</source>
          <target state="translated">앱 데이터가 저장된 파일 시스템의 디렉토리로 이동합니다. Cypress를 열 수 없으면 파일 시스템에서 &lt;code&gt;cy&lt;/code&gt; 라는 디렉토리를 찾으십시오. 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="53030ab92091f2959fc411e78c94fbff8b824e20" translate="yes" xml:space="preserve">
          <source>This would enable you to do things like this:</source>
          <target state="translated">이를 통해 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdc82c657fa4b0f3a1abbb474c304fff3a5607dd" translate="yes" xml:space="preserve">
          <source>This would match the following blacklisted hosts:</source>
          <target state="translated">다음과 같은 블랙리스트에있는 호스트와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="1c14ba4323cc66553ff74c0e8548fd3051b05554" translate="yes" xml:space="preserve">
          <source>Those folder paths refer to the &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;default folder paths&lt;/a&gt;. If you&amp;rsquo;ve configured Cypress to use different folder paths then the folders specific to your configuration will be watched.</source>
          <target state="translated">이러한 폴더 경로는 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;기본 폴더 경로를 나타&lt;/a&gt; 냅니다. 다른 폴더 경로를 사용하도록 Cypress를 구성한 경우 구성과 관련된 폴더가 감시됩니다.</target>
        </trans-unit>
        <trans-unit id="a203f3c60b0f975939f6724e53fff39f0e5d8faa" translate="yes" xml:space="preserve">
          <source>Though Cypress has built out &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;an excellent Test Runner&lt;/a&gt; to help you understand what is happening in your application and your tests, there&amp;rsquo;s no replacing all the amazing work browser teams have done on their built-in development tools. Once again, we see that Cypress goes &lt;em&gt;with&lt;/em&gt; the flow of the modern ecosystem, opting to leverage these tools wherever possible.</source>
          <target state="translated">Cypress는 애플리케이션 및 테스트에서 발생하는 상황을 이해하는 데 도움이 &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;되는 우수한 테스트 러너&lt;/a&gt; 를 구축했지만 내장 된 개발 도구에서 수행 한 놀라운 작업 브라우저 팀을 모두 대체 할 수는 없습니다. 다시 한 번, Cypress가 현대 생태계의 흐름 &lt;em&gt;과 함께&lt;/em&gt; 진행 &lt;em&gt;되며&lt;/em&gt; 가능한 경우 이러한 도구를 활용할 것을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="dd4ced4e9a7f501a1d4a421e58f7a96f07565df1" translate="yes" xml:space="preserve">
          <source>Though it may not look like much, this upgrade was a long time in the making. There were limitations in the way we were currently handling headless / CI builds which restricted our ability to make updates or fix bugs. Additionally CI runs would randomly crash for no good reason. We decided to split out the headless / CI process into its own independent Chromium application which is now independently controlled, and is much more reliable. This upgrade enables us to handle CI features coming down the pipe and was necessary for moving forward.</source>
          <target state="translated">많이 보이지는 않지만이 업그레이드는 오랜 시간이 걸렸습니다. 현재 헤드리스 / CI 빌드를 처리하는 방식에 제한이있어 업데이트 또는 버그 수정 기능이 제한되었습니다. 또한 CI 실행은 아무 이유없이 임의로 중단됩니다. 우리는 헤드리스 / CI 프로세스를 독립적으로 제어되고 훨씬 더 안정적인 자체 Chromium 애플리케이션으로 분리하기로 결정했습니다. 이 업그레이드를 통해 파이프로 내려 오는 CI 기능을 처리 할 수 ​​있었으며 앞으로 나아가 야했습니다.</target>
        </trans-unit>
        <trans-unit id="05042fa7041f8b8530048a78d997204314cb21fa" translate="yes" xml:space="preserve">
          <source>Throw explicit error for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;&quot;&quot;&lt;/code&gt; arguments to &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;#24&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; 및 &lt;code&gt;&quot;&quot;&lt;/code&gt; 인수에 대해 명시적인 오류를 발생 시킵니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;# 24&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="958bd43bc0312835eb96d1524baaf0627ec311d3" translate="yes" xml:space="preserve">
          <source>Throw on &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; when it cannot find a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;. Also throw when &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is disabled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;#91&lt;/a&gt;.</source>
          <target state="translated">일치하는 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 을 찾을 수 없으면 &lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 던져보십시오 . 또한 경우에 던져 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 또는 일치하는 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 을 사용할 수 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;# 91&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a073142787a1c947c30eef810fce18423c0b95d1" translate="yes" xml:space="preserve">
          <source>Thus the Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get&lt;/code&gt;&lt;/a&gt; command has to be smarter and expect the application to potentially update. The &lt;code&gt;cy.get()&lt;/code&gt; queries the application&amp;rsquo;s DOM, finds the elements that match the selector, and then tries the assertion that follows it (in our case &lt;code&gt;should('have.length', 2)&lt;/code&gt;) against the list of found elements.</source>
          <target state="translated">따라서 Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get&lt;/code&gt; &lt;/a&gt; 명령은 더 똑똑해야하고 애플리케이션이 잠재적으로 업데이트 될 것으로 예상해야합니다. &lt;code&gt;cy.get()&lt;/code&gt; , 응용 프로그램의 DOM을 쿼리 셀렉터와 일치하는 요소를 발견하고 그것을 다음과 주장을 시도합니다 (우리의 경우에 &lt;code&gt;should('have.length', 2)&lt;/code&gt; 발견 요소의 목록에 대해).</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="fb377762792866dda43ce836874a2f28a7e96eac" translate="yes" xml:space="preserve">
          <source>Time Inputs</source>
          <target state="translated">시간 입력</target>
        </trans-unit>
        <trans-unit id="88dc2535a499ed3b3baa756d368f078268ecf304" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.blur()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.blur()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e964b583c6245a8054356ca2602db72f45be6dee" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.check()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.check()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8714d68e6a41993a7a02e0d2ef5349b3e22bee97" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.children()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.children()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42766190d5f779a4954bcbb9d0224bd6fdb40b0d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.clear()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.clear()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65268e932e8c9b1e866d2e17a080138ae6a60d70" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.click()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.click()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c7ab1a4adedb3f88bd7975a6d8cacf2ae95686c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.closest()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">시간을 기다리는 &lt;code&gt;.closest()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1304e9c7f6886fd442252d07b899ac84222857a9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.contains()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.contains()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="420d4a0dfd4eb785a630b5557178281d091b5322" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.dblclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.dblclick()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e74f719ac6b1951693dfc64835b6fb3446d51a6" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.eq()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.eq()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a43fc4e1662ada497daff7acee2c0536b65e19f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.filter()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.filter()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="388def00bf32877141ecfc44a3a2b9dc39a85f01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.find()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.find()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6b781cd6bef6b4d558024a0c641b2fc1c3d915" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.first()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">시간을 기다리는 &lt;code&gt;.first()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db750ae3c2ed952c29a8422390030149b1cc6750" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.focus()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.focus()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f38bb64c3fb466172860cca43b478619c72bc39" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.invoke()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">시간을 기다리는 &lt;code&gt;.invoke()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92aa5d45d13fa137a0e2d2265bc86bc9cfbf121" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.its()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.its()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165f56b81fc569b196c1a161d610591ddce3b2e5" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.last()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.last()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5be1fbad6d7e9ad23221c675719e687049574f88" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.next()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.next()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ec5b908c2803245b687f0838f5eb4acc14c5078" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.nextAll()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4f6affa595413b128383e184ff26391c9d4d2c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.nextUntil()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a054f442cd6beddb622e8e8b413cf8b37c68671" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.not()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.not()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5549ec7792821c25ef4654b7a284633c02aa8d96" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parent()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.parent()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d618b75427451f917b68090a20cd882d8902c37" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parents()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.parents()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49afe551ecca44d819db4bb4320d50434717f654" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parentsUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.parentsUntil()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cfdb0e942557ddb11e9cca3de6cb6c7df1587fe" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prev()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.prev()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="410a3e98bfe875fe057e50db80a7c80bb5f99cb9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.prevAll()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f468fc82bed12efc1d6260bca2dbcccf0ad488" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.prevUntil()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fe4b0bfe7d09bf9b201d824d88750d98852d852" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.rightclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.rightclick()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b73a9bc8db50f3af07dc4c4cd94bb2474eeff58b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.screenshot()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.screenshot()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="584ccb8fd673724e5045b7e6c5809fa6a7566382" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollIntoView()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.scrollIntoView()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b09e275d45641fc6631c2bbbd2c89d02423a232" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollTo()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.scrollTo()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de788277124c1cf9010adfd939cf84ed676c94ab" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.select()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.select()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65aa08d31a1e48f8a51ac5984a927546fd516295" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.siblings()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.siblings()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d3880cb58a04fb6b7a625660713643f33416ab4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.spread()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.spread()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc89004ffc7de6417ea577a496ca395776e25bad" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.submit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">시간을 기다리는 &lt;code&gt;.submit()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4117b83b56d69fca2378861d045a33b6ce1b0ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.then()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.then()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0cf637f982bf1b2da1a81d816c3139428f1bf30" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.trigger()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.trigger()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c89f7a8fe1531f08b84d61ecc6842ed5158df" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.type()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.type()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd67bc722544edc6f172216ff8d9bd7c5826a064" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.uncheck()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;.uncheck()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2c5c4ec69581238a100de43d5af9dddf3d5563d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.clearCookie()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4053ef4b697063b4748025fa77e497c4f331855" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.clearCookies()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3d6db5918d4f148887a0e3c95ce9f9b6ff011ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.document()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.document()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e75155a30f951accc30abc04aeedc4275825b60c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.exec()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.exec()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352b3ef87cfaf15c14d8a1c3e35bbbaf26b527b1" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.fixture()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.fixture()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bf773b6fc1b29d34746ddda1de614cb59aa805d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.focused()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다릴 시간 &lt;code&gt;cy.focused()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e3b71d0171d3d10899909459a165c2dc1af0e2f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.get()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.get()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53b1fe4a9c07e99e385dcf0404d30fedf5854e01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.getCookie()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="505e9a66550a11fc305c7683ffd0c1c2b5b20521" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.getCookies()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53ff75ff1641cbdbc2e36036c0dd13e1145beaa2" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.go()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.go()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8bd35228efe7bb55db2782771cd3032c54d12fc" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.hash()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.hash()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eab7aa933d4d9be345ef1205e5b365b2e535fa8" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.location()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.location()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb4c680019f6d8740c8f5bb74deea7d37a9a6921" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.readFile()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.readFile()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea5e14348cc5c6d94364feec8c429d8d62118cf" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.reload()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.reload()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e78c691f4793cade51b7c754c1635dce547fef" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.request()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">시간을 기다리는 &lt;code&gt;cy.request()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1eac61a26416247dab8c13a4179f97bf42e600f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.root()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.root()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6784df3d3f8f434396c622aba69e10a5fe3178f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.setCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.setCookie()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63095a61eabe65c5fbfcd67ae7faf8c0177fa798" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.task()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.task()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a43ea5f07f0780bd49601af102865e8166ec4795" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.title()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.title()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b5e67ea51611f1769bfc9a11b1f4203b0706b07" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.url()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.url()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3fa63bd72e57894dc0b1ac8d09273c67d54a64f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.visit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.visit()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cd89775a57ef2c3eca328667913bd52968cdf8b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wait()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.wait()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7c4a53d839c7221e60163da8643405315c31ee4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.window()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.window()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3525850b0ceddc318ca744537e813b31ef3ec47" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wrap()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">기다리는 시간 &lt;code&gt;cy.wrap()&lt;/code&gt; 전에 해결에 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534f9712426325b6e244c8d63eebb857c08f63fa" translate="yes" xml:space="preserve">
          <source>Time travel</source>
          <target state="translated">시간 여행</target>
        </trans-unit>
        <trans-unit id="0d8585da73a6dab1f6352a0b062f08dc502b59da" translate="yes" xml:space="preserve">
          <source>Time traveling snapshots now preserve the styles of empty &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags with programmatically inserted CSS rules. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;#1226&lt;/a&gt;.</source>
          <target state="translated">시간 여행 스냅 샷은 이제 프로그래밍 방식으로 삽입 된 CSS 규칙과 함께 빈 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 의 스타일을 유지합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;# 1226&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95e7882d490e20f536a21a152bb7b88fca473d5c" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for &lt;code&gt;page transition events&lt;/code&gt; or &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; commands to fire their page &lt;code&gt;load&lt;/code&gt; events. Network requests are limited by the underlying operating system, and may still time out if this value is increased.</source>
          <target state="translated">&lt;code&gt;page transition events&lt;/code&gt; 또는 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt; 명령이 페이지 &lt;code&gt;load&lt;/code&gt; 이벤트를 시작 하기를 기다리는 시간 (밀리 초 ) 입니다. 네트워크 요청은 기본 운영 체제에 의해 제한되며이 값이 증가하면 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4546e794b872db0e7f830414bef8b6efa3d2ef" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a system command to finish executing during a &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 명령 중에 시스템 명령의 실행이 완료 될 때까지 기다리는 시간 (밀리 초 )</target>
        </trans-unit>
        <trans-unit id="0344658b2d3334f23a6c04344746702ee05e7675" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a task to finish executing during a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 명령 중에 작업이 완료 될 때까지 기다리는 시간 (밀리 초 )</target>
        </trans-unit>
        <trans-unit id="3c5906723e4f284c898154f299293697c6bfcd46" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for an XHR request to go out in a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 명령 에서 XHR 요청이 종료 될 때까지 기다리는 시간 (밀리 초 )</target>
        </trans-unit>
        <trans-unit id="6d1f46641205758c830e1f2ce073f3383d3a8c2d" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until a response in a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; commands</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt; 의 응답까지 기다릴 시간 (밀리 초 ) 입니다. clearCookie () , &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 명령</target>
        </trans-unit>
        <trans-unit id="bcb9984691d12ff5b389e5efd5cbdee4b151c661" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until most DOM based commands are considered timed out</source>
          <target state="translated">대부분의 DOM 기반 명령이 시간 초과 된 것으로 간주 될 때까지 대기하는 시간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="4182206cc797a1bcb67e79ac48df54d729afa0e6" translate="yes" xml:space="preserve">
          <source>Timeline View</source>
          <target state="translated">타임 라인보기</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="b76904852aa459926a2540777944b33a445df8b2" translate="yes" xml:space="preserve">
          <source>Timeouts can be modified per command and this will affect all default assertions and any assertions chained after that command.</source>
          <target state="translated">시간 초과는 명령마다 수정 될 수 있으며 이는 모든 기본 어설 션 및 해당 명령 뒤에 연결된 모든 어설 션에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="c1ed8235cc72d513556db585f63b8b50c409da7a" translate="yes" xml:space="preserve">
          <source>To a human - if something changes 10ms or 100ms from now, we may not even notice this change and assume the state was always the same.</source>
          <target state="translated">인간에게-지금부터 무언가가 10ms 또는 100ms 변경되면, 우리는 심지어 이러한 변화를 알아 차리지 못하고 상태가 항상 같다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="27f0ffae9421d91f5eb31f78f9c0b061bfa92cc4" translate="yes" xml:space="preserve">
          <source>To a robot - even 10ms represents billions+ of clock cycles. The timescale difference is incredible.</source>
          <target state="translated">로봇에게는 10ms조차도 수십억 + 클럭 사이클을 나타냅니다. 타임 스케일의 차이는 놀랍습니다.</target>
        </trans-unit>
        <trans-unit id="f08c1bb201c73b8dba3c1484535bd11c4ea25af7" translate="yes" xml:space="preserve">
          <source>To access the fixtures nested within the &lt;code&gt;images&lt;/code&gt; folder, include the folder in your &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; 폴더 안에 내포 된 조명기들에 접근하려면 , &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 명령 에 폴더를 포함 시키십시오 .</target>
        </trans-unit>
        <trans-unit id="c9fed4e71db24e7c4149b57d7906a94f0e8a9eb6" translate="yes" xml:space="preserve">
          <source>To access what each Cypress command yields you use &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 Cypress 명령이 생성하는 내용에 액세스하려면 &lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d143bbc2b45230f9eef594ce36d97ec57c0ced7" translate="yes" xml:space="preserve">
          <source>To accomplish the same thing in Powershell:</source>
          <target state="translated">Powershell에서 동일한 작업을 수행하려면</target>
        </trans-unit>
        <trans-unit id="166e710ba165eea3de8ec85b1e7054e579c0d1f5" translate="yes" xml:space="preserve">
          <source>To alias something you&amp;rsquo;d like to share use the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">공유하려는 대상의 별칭을 지정하려면 &lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4393a0c96e6ef66b82cf156c3663950bdbd68985" translate="yes" xml:space="preserve">
          <source>To apply specific Cypress &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; values to a suite or test, you can pass a &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt; object to the test or suite function.</source>
          <target state="translated">특정 Cypress &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성&lt;/a&gt; 값을 제품군 또는 테스트에 적용하기 위해 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;테스트 구성&lt;/a&gt; 개체를 테스트 또는 제품군 기능에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b849f57310aa9d236088e30496763d15362e20a2" translate="yes" xml:space="preserve">
          <source>To blacklist a host:</source>
          <target state="translated">호스트를 블랙리스트에 올리려면 :</target>
        </trans-unit>
        <trans-unit id="ae6908980609de5de702a7e380fd9f74d9923708" translate="yes" xml:space="preserve">
          <source>To bypass the proxy for certain domains, a &lt;code&gt;NO_PROXY&lt;/code&gt; environment variable can be set to a comma-separated list of domain names to not proxy traffic for. By default, traffic to &lt;code&gt;localhost&lt;/code&gt; will not be proxied.</source>
          <target state="translated">특정 도메인에 대한 프록시를 무시하기 위해 &lt;code&gt;NO_PROXY&lt;/code&gt; 환경 변수를 쉼표로 구분 된 도메인 이름 목록으로 설정하여 트래픽을 프록시하지 않을 수 있습니다. 기본적으로 &lt;code&gt;localhost&lt;/code&gt; 로의 트래픽 은 프록시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="323c865f1f1a3f1f1618192abd40f0f9dd096a76" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we check the current and previous positions of the element itself. If the distance exceeds the &lt;a href=&quot;../references/configuration#Animations&quot;&gt;&lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;/a&gt;, then we consider the element to be animating.</source>
          <target state="translated">요소가 애니메이션인지 여부를 계산하기 위해 요소 자체의 현재 위치와 이전 위치를 확인합니다. 거리가 &lt;a href=&quot;../references/configuration#Animations&quot;&gt; &lt;code&gt;animationDistanceThreshold&lt;/code&gt; 를&lt;/a&gt; 초과 하면 요소가 애니메이션으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ac0e341c5c9460191beed1f6898bcc274484d0fe" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we take a sample of the last positions it was at and calculate the element&amp;rsquo;s slope. You might remember this from 8th grade algebra. 😉</source>
          <target state="translated">요소가 애니메이션인지 여부를 계산하기 위해 마지막 위치의 샘플을 가져 와서 요소의 기울기를 계산합니다. 8 학년 대수에서 이것을 기억할 것입니다. 😉</target>
        </trans-unit>
        <trans-unit id="68b42cd41f72ca3ee00ee6ce82b38a9bb6118f00" translate="yes" xml:space="preserve">
          <source>To catch a single uncaught exception</source>
          <target state="translated">포착되지 않은 단일 예외를 포착하려면</target>
        </trans-unit>
        <trans-unit id="bb659afe0807004757a7b576c8e20bda29a5fd70" translate="yes" xml:space="preserve">
          <source>To clear App Data</source>
          <target state="translated">앱 데이터를 지우려면</target>
        </trans-unit>
        <trans-unit id="7825fc1e2b2f652c63c26c24c688acf9cc0e17cb" translate="yes" xml:space="preserve">
          <source>To confirm this, let&amp;rsquo;s remove the artificial delay to see what&amp;rsquo;s happening in the passing test.</source>
          <target state="translated">이를 확인하기 위해 인공 지연을 제거하여 통과 테스트에서 발생하는 상황을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0b6146f951a93d278cd3d940af0923b48d8c93c9" translate="yes" xml:space="preserve">
          <source>To disable parsing special characters sequences, set the &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">특수 문자 시퀀스 구문 분석을 사용하지 않으려면 &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="37eac453f8695de56c3215e3eaae120d0cf07f2b" translate="yes" xml:space="preserve">
          <source>To do this - you would need a background process outside of the browser to make the underlying WebSocket connection that you can then communicate with and control.</source>
          <target state="translated">이를 위해-통신하고 제어 할 수있는 기본 WebSocket 연결을 설정하려면 브라우저 외부에서 백그라운드 프로세스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6e06070a0e4d6d166551de0e62761dab42de8bea" translate="yes" xml:space="preserve">
          <source>To express this in Cypress you&amp;rsquo;d write:</source>
          <target state="translated">Cypress에서 이것을 표현하려면 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="83049f38a853aca72cb58f3e189b3b2b3721623e" translate="yes" xml:space="preserve">
          <source>To express this with an assertion you&amp;rsquo;d write:</source>
          <target state="translated">이것을 단언으로 표현하려면 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="96b23fbe50516013b6e01e4b9a35c1256f514102" translate="yes" xml:space="preserve">
          <source>To find this element by its contents, we&amp;rsquo;ll use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내용으로이 요소를 찾으려면 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="149e9bbd69575b3273720fd628fbb128987d85a2" translate="yes" xml:space="preserve">
          <source>To fix this error, follow instructions on &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;caching the cypress binary in CI&lt;/a&gt;, then bump the version of your CI cache to ensure a clean build.</source>
          <target state="translated">이 오류를 해결하려면 &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;CI에서 cypress 바이너리 캐싱에 대한&lt;/a&gt; 지시 사항을 따른 후 CI 캐시 버전을 충돌시켜 깔끔하게 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="7575ddba789b6b072835dcb92594fc7e2c7b843d" translate="yes" xml:space="preserve">
          <source>To get around these restrictions, Cypress implements some strategies involving JavaScript code, the browser&amp;rsquo;s internal APIs, and &lt;code&gt;network proxying&lt;/code&gt; to &lt;em&gt;play by the rules&lt;/em&gt; of &lt;code&gt;same-origin policy&lt;/code&gt;. It is our goal to fully automate the application under test without you needing to modify your application&amp;rsquo;s code - and we are &lt;em&gt;mostly&lt;/em&gt; able to do this.</source>
          <target state="translated">이러한 제한을 해결하기 위해, 싸이프레스는 자바 스크립트 코드, 브라우저의 내부 API 및 관련된 몇 가지 전략 구현 &lt;code&gt;network proxying&lt;/code&gt; 에 &lt;em&gt;규칙에 의해 재생&lt;/em&gt; 의 &lt;code&gt;same-origin policy&lt;/code&gt; . 응용 프로그램 코드를 수정할 필요없이 테스트중인 응용 프로그램을 완전히 자동화하는 것이 우리의 목표이며 &lt;em&gt;대부분&lt;/em&gt; 이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aeb9503bd3439b8e356bd49941cec1a2eb97780" translate="yes" xml:space="preserve">
          <source>To get started, open up this file:</source>
          <target state="translated">시작하려면이 파일을여십시오.</target>
        </trans-unit>
        <trans-unit id="fb9adb651d7d95d104ed2f1f7d71628ecf9bd8f2" translate="yes" xml:space="preserve">
          <source>To handle code coverage collected during each test, we created a &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. It merges coverage from each test and saves the combined result. It also calls &lt;code&gt;nyc&lt;/code&gt; (its peer dependency) to generate static HTML reports for human consumption.</source>
          <target state="translated">각 테스트 중에 수집 된 코드 적용 범위를 처리하기 위해 &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; Cypress 플러그인을 만들었습니다 . 각 테스트의 적용 범위를 병합하고 결합 된 결과를 저장합니다. 또한 &lt;code&gt;nyc&lt;/code&gt; (피어 종속성)를 호출 하여 사람이 소비 할 정적 HTML 보고서를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="280f8c6479cffa347916d707a00e83bf7e38e0ae" translate="yes" xml:space="preserve">
          <source>To help with these common challenges, the Selector Playground automatically prefers certain &lt;code&gt;data-*&lt;/code&gt; attributes when determining a unique selector.</source>
          <target state="translated">이러한 일반적인 문제를 해결하기 위해 Selector Playground 는 고유 한 선택기를 결정할 때 특정 &lt;code&gt;data-*&lt;/code&gt; 속성을 자동으로 선호합니다 .</target>
        </trans-unit>
        <trans-unit id="1e93657473d313debb6683ed7ed730e3c3c28a66" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s revisit that list of actions and expose some of the hidden &lt;strong&gt;✨ magic ✨&lt;/strong&gt; Cypress does for us at each step:</source>
          <target state="translated">이를 설명하기 위해 해당 작업 목록을 다시 살펴보고 각 단계에서 우리를 위해 숨겨진 &lt;strong&gt;✨ 마술 ✨&lt;/strong&gt; Cypress를 공개하십시오.</target>
        </trans-unit>
        <trans-unit id="2203f011ae04f2af8d4f15c66e1819faf35fc910" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s take a very simple example of trying to conditionally test unstable state.</source>
          <target state="translated">이를 설명하기 위해 불안정한 상태를 조건부로 테스트하는 간단한 예를 들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="b793cfab7761a6eace3a477332c312e87ac064ac" translate="yes" xml:space="preserve">
          <source>To include code before your test files, set the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; path. By default, &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; is set to look for one of the following files:</source>
          <target state="translated">테스트 파일 앞에 코드를 포함 시키려면 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 경로를 설정하십시오 . 기본적으로 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 은 다음 파일 중 하나를 찾도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="868c314890aef6646e5ee278ea0f8f20f34d6f59" translate="yes" xml:space="preserve">
          <source>To install this pre-release binary on Mac, you need to set the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to the shown &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; value and run &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt;. The command in the terminal will be:</source>
          <target state="translated">Mac에이 시험판 바이너리를 설치하려면 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 환경 변수를 &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; 값으로 설정하고 &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt; 실행 해야합니다. /cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz . 터미널의 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f3723db383e31a5a33ea33d689ddb173481ad5c9" translate="yes" xml:space="preserve">
          <source>To instrument the application code located in your &lt;code&gt;src&lt;/code&gt; folder and save it in an &lt;code&gt;instrumented&lt;/code&gt; folder use the following command:</source>
          <target state="translated">악기로에있는 응용 프로그램 코드 &lt;code&gt;src&lt;/code&gt; 에 폴더와이 폴더에 저장 &lt;code&gt;instrumented&lt;/code&gt; 폴더에는 다음 명령을 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="48e22197bbbb6bd1d59b8937f02a4c9bca6a8bea" translate="yes" xml:space="preserve">
          <source>To interact with a range input (slider), we need to set its value and</source>
          <target state="translated">범위 입력 (슬라이더)과 상호 작용하려면 값을 설정하고</target>
        </trans-unit>
        <trans-unit id="c74ecb884f3f0bba1023c924193577e2a3820fc9" translate="yes" xml:space="preserve">
          <source>To keep a modifier activated between commands, specify &lt;code&gt;{release: false}&lt;/code&gt; in the options.</source>
          <target state="translated">명령간에 수정자를 활성화하려면 옵션에서 &lt;code&gt;{release: false}&lt;/code&gt; 를 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="dfc215f81a144908f83ffd1f95ded8c2bbc16ce1" translate="yes" xml:space="preserve">
          <source>To make a browser installed at a different path be auto-detected, create a symbolic link using &lt;code&gt;mklink&lt;/code&gt; in the location that Cypress expects to find your browser.</source>
          <target state="translated">다른 경로에 설치된 브라우저를 자동 감지 하려면 Cypress가 브라우저를 찾을 것으로 예상되는 위치에서 &lt;code&gt;mklink&lt;/code&gt; 를 사용하여 기호 링크를 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="735f3bce713d52a0668f239c7df40905de18c181" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add these commands to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">이러한 변경 사항을 영구적으로 유지하려면이 명령을 쉘의 &lt;code&gt;~/.profile&lt;/code&gt; ( &lt;code&gt;~/.zsh_profile&lt;/code&gt; , &lt;code&gt;~/.bash_profile&lt;/code&gt; 등)에 추가하여 모든 로그인에서 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9892449df8e876b379575308ba31dcb1d0760ee9" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add this command to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">이러한 변경 사항을 영구적으로 유지하기 위해이 명령을 쉘의 &lt;code&gt;~/.profile&lt;/code&gt; ( &lt;code&gt;~/.zsh_profile&lt;/code&gt; , &lt;code&gt;~/.bash_profile&lt;/code&gt; 등)에 추가하여 모든 로그인에서 실행할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
