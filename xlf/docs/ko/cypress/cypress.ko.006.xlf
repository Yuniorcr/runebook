<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="2a47508471ea10dee78dd57cf2fcdc3c1f3bfa39" translate="yes" xml:space="preserve">
          <source>If you were using the environment variable &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt;, rename it to&lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;.</source>
          <target state="translated">환경 변수 &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt; 를 사용 중인 경우 이름을 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="4b709e350a4aecb7a53788fc3dda1358f417bb3e" translate="yes" xml:space="preserve">
          <source>If you wish to continue chaining commands after your &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, you&amp;rsquo;ll need to specify the subject you want to yield to those commands, which you can achieve with a simple return value other than &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Cypress will yield that to the next command for you.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 다음에 명령을 계속 연결 하려면 해당 명령에 대해 생성하려는 주제를 지정해야합니다.이 명령은 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 이외의 간단한 반환 값으로 얻을 수 있습니다 . Cypress는 다음 명령으로이를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bcad8d20c8fa3c62441ed9d593a57637beece082" translate="yes" xml:space="preserve">
          <source>If you would like to change the default option for &lt;strong&gt;ALL&lt;/strong&gt;&lt;code&gt;cy.server()&lt;/code&gt; you &lt;a href=&quot;../cypress-api/cypress-server#Options&quot;&gt;can change this option permanently&lt;/a&gt;.</source>
          <target state="translated">당신의 기본 옵션을 변경하려면 &lt;strong&gt;ALL의 &lt;/strong&gt; &lt;code&gt;cy.server()&lt;/code&gt; 사용하면 &lt;a href=&quot;../cypress-api/cypress-server#Options&quot;&gt;영구적으로이 옵션을 변경할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca143e0d558ba1dde31fa7556fc88cd2fbd6446c" translate="yes" xml:space="preserve">
          <source>If you would like to check the response data of each response of an aliased route, you can use several &lt;code&gt;cy.wait()&lt;/code&gt; calls.</source>
          <target state="translated">별명 라우트의 각 응답에 대한 응답 데이터를 확인하려면 여러 &lt;code&gt;cy.wait()&lt;/code&gt; 호출을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3e8ddb52d7e1304f23f1df11a7077ca70501382" translate="yes" xml:space="preserve">
          <source>If you would like to interact with your app while the Selector Playground is open, the element highlighting might get in the way. Toggling the highlighting off will allow you to interact with your app more easily.</source>
          <target state="translated">선택기 놀이터가 열린 상태에서 앱과 상호 작용하려면 요소 강조 표시가 방해 될 수 있습니다. 강조 표시를 끄면 앱과 더 쉽게 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="257345e20741273bc8aebc5b4227337dc3209c6c" translate="yes" xml:space="preserve">
          <source>If you would like to opt out of sending any exception data to Cypress, you can do so by setting &lt;code&gt;CYPRESS_CRASH_REPORTS=0&lt;/code&gt; in your system environment variables.</source>
          <target state="translated">Cypress에 예외 데이터를 보내지 않으 려면 시스템 환경 변수에서 &lt;code&gt;CYPRESS_CRASH_REPORTS=0&lt;/code&gt; 을 설정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ec7269dd0ddcbbd541803b25d55649a227b9a2c" translate="yes" xml:space="preserve">
          <source>If you wrap the asynchronous functions in &lt;code&gt;cy.wrap()&lt;/code&gt;, then &lt;code&gt;bar()&lt;/code&gt; may be called prematurely before the required data is available:</source>
          <target state="translated">당신이 비동기 기능을 포장하는 경우 &lt;code&gt;cy.wrap()&lt;/code&gt; , 다음 &lt;code&gt;bar()&lt;/code&gt; 필요한 데이터 전에 조기 호출 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d9f828d6b029b5fc2a0dd131813027ec78e819f4" translate="yes" xml:space="preserve">
          <source>If you write &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt; and provide TypeScript definitions for them, you can use the triple slash directives to show IntelliSense, even if your project uses only JavaScript. For example, if your custom commands are written in &lt;code&gt;cypress/support/commands.js&lt;/code&gt; and you describe them in &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; use:</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;사용자 정의 명령&lt;/a&gt; 을 작성 하고 TypeScript 정의를 제공하는 경우 프로젝트에서 JavaScript 만 사용하더라도 삼중 슬래시 지시문을 사용하여 IntelliSense를 표시 할 수 있습니다. 예를 들어, 사용자 정의 명령이 &lt;code&gt;cypress/support/commands.js&lt;/code&gt; commands.js로 작성 되고 &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; 에 설명되어있는 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e0c5fb1cd97eadb56927777df1149e1ef56b5749" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Cypress to automatically send requests that do &lt;em&gt;NOT&lt;/em&gt; match routes the following response:</source>
          <target state="translated">Cypress가 일치 하지 &lt;em&gt;않는&lt;/em&gt; 요청을 자동으로 보내 려면 다음 응답을 라우팅합니다.</target>
        </trans-unit>
        <trans-unit id="07f9119d637c76f137670adee7ae1ac277c5a2a6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to contribute directly to the Cypress code, we&amp;rsquo;d love to have your help! Please check out our &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt; to learn about the many ways you can contribute.</source>
          <target state="translated">Cypress 코드에 직접 기여하려면 도움을 요청하십시오. &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/CONTRIBUTING.md&quot;&gt;기여 가이드&lt;/a&gt; 를 확인하여 기여할 수있는 여러 가지 방법에 대해 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="a31bcb7fcf9edc392674ed9f19ff3eab0d7e8c9f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to learn more about handling asynchronous Cypress Commands please read our &lt;a href=&quot;variables-and-aliases&quot;&gt;Core Concept Guide&lt;/a&gt;.</source>
          <target state="translated">비동기 Cypress 명령 처리에 대한 자세한 내용은 &lt;a href=&quot;variables-and-aliases&quot;&gt;핵심 개념 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6612ee1c4997412de093222d9c00de68da458fcd" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to override these built-in checks, provide the &lt;code&gt;{force: true}&lt;/code&gt; option to the action itself. Refer to each command for their available options, additional use cases, and argument usage.</source>
          <target state="translated">이러한 내장 검사를 무시 하려면 조치 자체에 &lt;code&gt;{force: true}&lt;/code&gt; 옵션을 제공하십시오. 사용 가능한 옵션, 추가 사용 사례 및 인수 사용법에 대해서는 각 명령을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="79a3552ac4e20ee3c91582932cf9a9765ac3c173" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to override this, explicitly pass in &lt;code&gt;headers&lt;/code&gt; as an object literal.</source>
          <target state="translated">이를 재정의하려면 &lt;code&gt;headers&lt;/code&gt; 를 객체 리터럴로 명시 적으로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="397a0ada5ff3e4ff64036bb5f68f8e7335b5f4ed" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to see (the huge) stream of events that Cypress emits you can pop open your Dev Tools and write this line in the console.</source>
          <target state="translated">Cypress에서 발생하는 (거대한) 이벤트 스트림을 보려면 Dev Tools를 열고 콘솔에이 줄을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc38c2776039636f87a8d14ddb692422627c92a4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a modern JS programmer you might hear &amp;ldquo;asynchronous&amp;rdquo; and think: &lt;strong&gt;why can&amp;rsquo;t I just use &lt;code&gt;async/await&lt;/code&gt;&lt;/strong&gt; instead of learning some proprietary API?</source>
          <target state="translated">현대식 JS 프로그래머라면&amp;ldquo;비동기식&amp;rdquo;이라고 들리고 생각할 &lt;strong&gt;수 &lt;code&gt;async/await&lt;/code&gt; &lt;/strong&gt; 독점 API를 배우는 대신 &lt;strong&gt;비동기 / 대기만&lt;/strong&gt;&lt;strong&gt; 사용할 수없는 이유는&lt;/strong&gt; 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="aab1685bc6de35aba42818473854d58988d957ec" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re developing using a modern JS-based web application stack then you&amp;rsquo;ve likely got support for some form of hot module replacement which is responsible for watching your application code&amp;mdash;HTML, CSS, JS, etc.&amp;mdash;and transparently reloading your application in response to changes.</source>
          <target state="translated">최신 JS 기반 웹 응용 프로그램 스택을 사용하여 개발하는 경우 응용 프로그램 코드 (HTML, CSS, JS 등)를보고 투명하게 다시로드하는 일부 형태의 핫 모듈 교체를 지원할 수 있습니다. 변경에 대한 응답으로 응용 프로그램.</target>
        </trans-unit>
        <trans-unit id="b0151c4866ea1f65ef47c82597be6b39f46675b0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re familiar with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;native Promises&lt;/a&gt; the Cypress &lt;code&gt;.then()&lt;/code&gt; works the same way. You can continue to nest more Cypress commands inside of the &lt;code&gt;.then()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;네이티브 Promises에&lt;/a&gt; 익숙하다면 Cypress &lt;code&gt;.then()&lt;/code&gt; 같은 방식으로 작동합니다. &lt;code&gt;.then()&lt;/code&gt; 안에 더 많은 Cypress 명령을 계속 중첩시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6398aeebd96fdad7efb346e26e781b17073909fb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re familiar with Cypress commands already, but find yourself using &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt; then you&amp;rsquo;re typically trying to do one of two things:</source>
          <target state="translated">Cypress 명령에 이미 익숙하지만 &lt;code&gt;const&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; 또는 &lt;code&gt;var&lt;/code&gt; 를 사용하여 자신을 찾으면 일반적으로 두 가지 중 하나를 수행하려고합니다.</target>
        </trans-unit>
        <trans-unit id="90a3204f17130c904eee3d822ba7552a50c50835" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re familiar with writing tests in JavaScript, then writing tests in Cypress will be a breeze.</source>
          <target state="translated">JavaScript로 테스트를 작성하는 데 익숙하다면 Cypress에서 테스트를 작성하는 것이 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="48163e06e6271e83b1007a0e84670bdca1d5715d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re having an issue during installation of Cypress, try removing the contents of the Cypress cache.</source>
          <target state="translated">Cypress를 설치하는 동안 문제가 발생하면 Cypress 캐시의 내용을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="90e3f49a1c0d7c9e8171ff957e37dacab6d491b4" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re in a situation where you don&amp;rsquo;t control the code, or otherwise cannot work around this, you can bypass this restriction in Cypress by &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">코드를 제어하지 않거나이 문제를 해결할 수없는 상황에서는 &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;웹 보안&lt;/a&gt; 을 비활성화 하여 Cypress에서이 제한을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af78d3b5edaa3283e443ab02165983526a9cf924" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in understanding more, we&amp;rsquo;ve written &lt;a href=&quot;../references/trade-offs&quot;&gt;an entire guide&lt;/a&gt; on this topic.</source>
          <target state="translated">더 이해하고 싶다면 이 주제에 &lt;a href=&quot;../references/trade-offs&quot;&gt;대한 전체 가이드&lt;/a&gt; 를 작성 했습니다 .</target>
        </trans-unit>
        <trans-unit id="cf577a2dcd8a201ed583c60ac9f9aa31d097fc31" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking to understand &lt;strong&gt;how&lt;/strong&gt; to use these assertions please read about assertions in our &lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;Introduction to Cypress&lt;/a&gt;.</source>
          <target state="translated">이러한 어설 션을 사용 &lt;strong&gt;하는 방법&lt;/strong&gt; 을 이해 &lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;하려면 Cypress 소개&lt;/a&gt; 에서 어설 션에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="8af4808d5bb633153c33775dcd081b988cb4cb54" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using Node or &lt;code&gt;npm&lt;/code&gt; in your project or you just want to try Cypress out quickly, you can always &lt;a href=&quot;https://download.cypress.io/desktop&quot;&gt;download Cypress directly from our CDN&lt;/a&gt;.</source>
          <target state="translated">프로젝트에서 Node 또는 &lt;code&gt;npm&lt;/code&gt; 을 사용하지 않거나 Cypress를 신속하게 시험 해보고 싶다면 항상 &lt;a href=&quot;https://download.cypress.io/desktop&quot;&gt;CDN에서 직접 Cypress를 다운로드&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1906afa3a0aaf176eb25afa3593af9ececb7a879" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re running &lt;code&gt;node.js&lt;/code&gt; on your server, you might add a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hook that executes an &lt;code&gt;npm&lt;/code&gt; task.</source>
          <target state="translated">서버 에서 &lt;code&gt;node.js&lt;/code&gt; 를 실행중인 경우 &lt;code&gt;npm&lt;/code&gt; 태스크 를 실행하는 &lt;code&gt;before&lt;/code&gt; 또는 &lt;code&gt;beforeEach&lt;/code&gt; 후크를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29cd81df6830db2d21c23a922f4a678d201d46b6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re struggling with writing the correct pattern you can iterate much faster by testing directly in your Developer Tools console.</source>
          <target state="translated">올바른 패턴을 작성하는 데 어려움을 겪고 있다면 개발자 도구 콘솔에서 직접 테스트하여 훨씬 빠르게 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db72c14e3605aa39163bff502db3500deba464f9" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using our &lt;a href=&quot;module-api&quot;&gt;Module API&lt;/a&gt; then you can write a script that boots and then shuts down the server later. As a bonus you can easily work with the results and do other things.</source>
          <target state="translated">&lt;a href=&quot;module-api&quot;&gt;모듈 API&lt;/a&gt; 를 사용하는 경우 나중에 서버를 부팅 한 다음 종료하는 스크립트를 작성할 수 있습니다. 보너스로 쉽게 결과로 작업하고 다른 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="857911eb4c5c9c4babb34646680345a6f5337c69" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using source control, we recommend that you check your &lt;code&gt;cypress.json&lt;/code&gt;, including the &lt;code&gt;projectId&lt;/code&gt;, into source control. If you don&amp;rsquo;t want your &lt;code&gt;projectId&lt;/code&gt; visible in your source code you can set it as an environment variable using the name &lt;code&gt;CYPRESS_PROJECT_ID&lt;/code&gt;. The exact mechanism for doing so depends on your system but could be as simple as:</source>
          <target state="translated">당신이 소스 제어를 사용하는 경우, 우리는 당신이 당신의 확인하는 것이 좋습니다 &lt;code&gt;cypress.json&lt;/code&gt; 을 포함 &lt;code&gt;projectId&lt;/code&gt; 소스 제어에. 소스 코드에 &lt;code&gt;projectId&lt;/code&gt; 를 표시 하지 않으려면 CYPRESS_PROJECT_ID 이름을 사용하여 &lt;code&gt;CYPRESS_PROJECT_ID&lt;/code&gt; 변수를 환경 변수로 설정할 수 있습니다 . 이를 수행하는 정확한 메커니즘은 시스템에 따라 다르지만 다음과 같이 간단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3ca61cf369f9cb670a267457e5be980da07e5ba" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re working on a &lt;code&gt;search_spec.js&lt;/code&gt; file and want to compose several repeatable actions together, you should first ask yourself:</source>
          <target state="translated">&lt;code&gt;search_spec.js&lt;/code&gt; 파일을 작업 중이고 여러 반복 가능한 작업을 함께 구성하려면 먼저 스스로에게 물어보십시오.</target>
        </trans-unit>
        <trans-unit id="c09b6d1a0633f326d322ec72835ebdcb06ab6f25" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve been reading along, then you should already have a grasp on why trying to implement conditional code with asynchronous rendering is not a good idea. If the test writer cannot accurately predict the given state of the system, then neither can Cypress. Error handling offers no additional proof this can be done deterministically.</source>
          <target state="translated">함께 읽고 있다면 비동기 렌더링으로 조건부 코드를 구현하는 것이 좋지 않은 이유를 이미 이해하고 있어야합니다. 테스트 기록기가 시스템의 주어진 상태를 정확하게 예측할 수 없으면 Cypress도 마찬가지입니다. 오류 처리는 결정적으로 수행 할 수있는 추가 증거를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d152a777af1651a876c73e112b5e83c8a153b2f1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve started your server, then you should see your application loaded and working.</source>
          <target state="translated">서버를 시작한 경우 응용 프로그램이로드되어 작동하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a51b93fb470dc449759d0d8f4c8df6dcf9764ba" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; before, you may be used to querying for elements like this:</source>
          <target state="translated">이전에 &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; 를 사용한 적이 있다면 다음 과 같은 요소를 쿼리하는 데 익숙 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e62c43f907228e54c54a15b78209d390669cb0b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve worked in &lt;a href=&quot;http://chaijs.com/&quot;&gt;Chai&lt;/a&gt; before, you will recognize that &lt;code&gt;.and()&lt;/code&gt; matches the same fluent assertion syntax.</source>
          <target state="translated">&lt;a href=&quot;http://chaijs.com/&quot;&gt;Chai에서&lt;/a&gt; 전에 일한 적이 있다면 &lt;code&gt;.and()&lt;/code&gt; 가 유창한 어설 션 구문과 일치 한다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6301358721c49fd060835e6bf5ce15ce964f5320" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;pluginsFile&lt;/code&gt; has an uncaught exception, an unhandled rejection from a promise, a syntax error, or anything else - we will automatically catch those and display them to you inside of the console and even in the Test Runner itself.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;pluginsFile&lt;/code&gt; 이 잡히지 않은 예외, 약속, 구문 오류, 또는 다른 어떤에서 처리되지 않은 거부가 있습니다 - 우리는 자동으로 사람들을 잡아 콘솔의 내부, 심지어 테스트 러너 자체가 당신에게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="48617617a160057ac3e4ee541085f64eed5d32d3" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;pluginsFile&lt;/code&gt; has an uncaught exception, an unhandled rejection from a promise, or a syntax error - we will automatically catch those and display them to you inside of the console and even in the Test Runner itself.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;pluginsFile&lt;/code&gt; 이 잡히지 않은 예외, 약속, 또는 구문 오류에서 처리되지 않은 거부가 있습니다 - 우리는 자동으로 사람들을 잡아 콘솔의 내부, 심지어 테스트 러너 자체가 당신에게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d45a4ee8912fe4bbfb83ed748f7b205163bde32a" translate="yes" xml:space="preserve">
          <source>If your Record Key is accidentally exposed, you should &lt;a href=&quot;#Delete-record-key&quot;&gt;delete it&lt;/a&gt; and &lt;a href=&quot;#Create-new-record-key&quot;&gt;create a new one&lt;/a&gt;.</source>
          <target state="translated">당신의 기록 키가 실수로 노출되면, 당신은해야 &lt;a href=&quot;#Delete-record-key&quot;&gt;삭제&lt;/a&gt; 하고 &lt;a href=&quot;#Create-new-record-key&quot;&gt;새로 만듭니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="450c0c90faf8c245e199c06666424f8562cf7971" translate="yes" xml:space="preserve">
          <source>If your administrator has set any of the following Chrome GPOs, it can prevent your tests from running in Chrome:</source>
          <target state="translated">관리자가 다음 Chrome GPO를 설정 한 경우 테스트가 Chrome에서 실행되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c918f1c46e4a769dd4560399b137e05d9f18db1d" translate="yes" xml:space="preserve">
          <source>If your app is translated into multiple languages for i18n, make sure you consider the implications of using user-facing text to find DOM elements!</source>
          <target state="translated">앱이 i18n에 대해 여러 언어로 번역 된 경우 DOM 요소를 찾기 위해 사용자 용 텍스트를 사용하는 의미를 고려해야합니다!</target>
        </trans-unit>
        <trans-unit id="d94c360e593adaedc1e2b08f74fc2d7133f24347" translate="yes" xml:space="preserve">
          <source>If your application is server side rendered without JavaScript that asynchronously modifies the DOM - congratulations, you can easily do conditional testing on the DOM!</source>
          <target state="translated">응용 프로그램이 DOM없이 비동기 적으로 수정되는 JavaScript없이 서버 측 렌더링 된 경우 DOM에서 조건부 테스트를 쉽게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2671c271ca9fb3c0f6865e39e2fe992db49b6b5" translate="yes" xml:space="preserve">
          <source>If your back end server handling the &lt;code&gt;/submit&lt;/code&gt; route does a &lt;code&gt;30x&lt;/code&gt; redirect to a different superdomain, you will get a &lt;code&gt;cross origin&lt;/code&gt; error.</source>
          <target state="translated">&lt;code&gt;/submit&lt;/code&gt; 라우트를 처리하는 백엔드 서버 가 다른 수퍼 도메인 으로 &lt;code&gt;30x&lt;/code&gt; 경로 재 지정을 수행하는 경우 &lt;code&gt;cross origin&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e638b849e3e497b9d491a634ddbf0794dd8e2aa2" translate="yes" xml:space="preserve">
          <source>If your callback function returns a &lt;code&gt;Promise&lt;/code&gt;, it will be awaited before iterating over the next element in the collection.</source>
          <target state="translated">콜백 함수가 &lt;code&gt;Promise&lt;/code&gt; 를 반환 하면 컬렉션의 다음 요소를 반복하기 전에 대기합니다.</target>
        </trans-unit>
        <trans-unit id="7db70995f28dedb8765483bbaeaf1301c0dcc648" translate="yes" xml:space="preserve">
          <source>If your end-to-end tests become full of assertions checking visibility, color and other style properties, it might be time to start using visual diffing to verify the page appearance.</source>
          <target state="translated">엔드 투 엔드 테스트에서 가시성, 색상 및 기타 스타일 속성을 확인하는 어설 션이 가득 차면 시각적 차이를 사용하여 페이지 모양을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="afe8980f8c12c10868130b21bebe1afa23668b71" translate="yes" xml:space="preserve">
          <source>If your environment variables match a standard configuration key, then instead of setting an &lt;code&gt;environment variable&lt;/code&gt; they will instead override the configuration value.</source>
          <target state="translated">환경 변수는 표준 구성 키와 일치하는 경우, 대신에 설정하는 &lt;code&gt;environment variable&lt;/code&gt; 그들은 대신에 구성 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="7bb90797045230df4a57116841d7511b0ecb17e2" translate="yes" xml:space="preserve">
          <source>If your organization signs up for one of our &lt;a href=&quot;https://www.cypress.io/pricing/&quot;&gt;paid plans&lt;/a&gt;, you can get dedicated email support, which gives you one-on-one help from our team.</source>
          <target state="translated">귀사가 &lt;a href=&quot;https://www.cypress.io/pricing/&quot;&gt;유료 요금제&lt;/a&gt; 중 하나에 가입 하면 전담 이메일 지원을받을 수 있으며,이를 통해 팀의 일대일 도움을받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e83f4d1be8c008408e3a808dcebb5bde0df59a60" translate="yes" xml:space="preserve">
          <source>If your project has a large number of tests, it can take a long time for tests to complete running serially on one machine. Running tests in parallel across many virtual machines can save your team time and money when running tests in Continuous Integration (CI).</source>
          <target state="translated">프로젝트에 많은 수의 테스트가있는 경우 한 시스템에서 테스트가 직렬로 완료되는 데 시간이 오래 걸릴 수 있습니다. 여러 가상 머신에서 테스트를 병렬로 실행하면 CI (Continuous Integration)에서 테스트를 실행할 때 팀 시간과 비용을 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="972a2e4f1d881a662f849d9da6c11e1da1fc50e3" translate="yes" xml:space="preserve">
          <source>If your server uses hapi, include &lt;code&gt;middleware/hapi&lt;/code&gt;</source>
          <target state="translated">서버가 hapi를 사용하는 경우 &lt;code&gt;middleware/hapi&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35dc3ac6f9d4bc1a2b69448fca5b7e96b1efcd96" translate="yes" xml:space="preserve">
          <source>If your site embeds an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; that is a cross-origin frame, Cypress will not be able to automate or communicate with this &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">사이트에 교차 출처 프레임 인 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 이 포함되어 있으면 Cypress에서이 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 을 자동화하거나 통신 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4cc14e90118f684031598010e6951eeee1954f4f" translate="yes" xml:space="preserve">
          <source>If your spec files have a long run duration, you might notice a time gap between a finished spec and a new spec starting during &lt;code&gt;cypress run&lt;/code&gt;. During this time, Cypress is encoding the captured video and possibly uploading it to the Dashboard.</source>
          <target state="translated">스펙 파일의 실행 시간이 길면 완료된 스펙과 &lt;code&gt;cypress run&lt;/code&gt; 중에 시작되는 새 스펙 사이의 시간 간격이있을 수 있습니다 . 이 기간 동안 Cypress는 캡처 한 비디오를 인코딩하여 대시 보드에 업로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9763b7614af0243e3fafa15044725c99cce0582" translate="yes" xml:space="preserve">
          <source>If your specs files are in TypeScript, you should include the TypeScript definition file, &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt;, with the rest of the source files.</source>
          <target state="translated">스펙 파일이 &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; 에있는 경우 나머지 소스 파일과 함께 TypeScript 정의 파일 cypress / support / index.d.ts를 포함시켜야 합니다.</target>
        </trans-unit>
        <trans-unit id="4566c8c95f04052245fda9e142ccfec9ec55f3e4" translate="yes" xml:space="preserve">
          <source>If, for example, the source file is &lt;code&gt;spec.coffee&lt;/code&gt;, the preprocessor should:</source>
          <target state="translated">예를 들어 소스 파일이 &lt;code&gt;spec.coffee&lt;/code&gt; 인 경우 전처리 기는 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="840c871c346b319879c8eb853624aaf51bf83ae9" translate="yes" xml:space="preserve">
          <source>If, for whatever reason, Cypress cannot communicate with the automation servers, your testing session will immediately end and you&amp;rsquo;ll have the ability to re-spawn the browser.</source>
          <target state="translated">어떤 이유로 든 Cypress가 자동화 서버와 통신 할 수없는 경우 테스트 세션이 즉시 종료되고 브라우저를 다시 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e0fee1c2641dd555f1c1bad3340ac9feb443a86" translate="yes" xml:space="preserve">
          <source>If, hypothetically, you have written this command because it &lt;strong&gt;has&lt;/strong&gt; to run before the next test does, then the absolute &lt;strong&gt;worst place&lt;/strong&gt; to put it is in an &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hook.</source>
          <target state="translated">, 가설,이 명령을 작성한 경우가 있기 때문에 &lt;strong&gt;이&lt;/strong&gt; 다음 테스트 후, 절대보다 먼저 실행하는 &lt;strong&gt;최악의 장소&lt;/strong&gt; 그것이에 넣어 &lt;code&gt;after&lt;/code&gt; 또는 &lt;code&gt;afterEach&lt;/code&gt; 훅을.</target>
        </trans-unit>
        <trans-unit id="295b7cc4ef2ab9f4a9603b7774c355dfa1b31a2a" translate="yes" xml:space="preserve">
          <source>Iframes are now correctly handled when we restore snapshots. Previously, we removed iframes which would change the page layout and the hitboxes&amp;rsquo; coordinates we drew were wrong. Now we insert iframe placeholders that prevent the page layout from changing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/234&quot;&gt;#234&lt;/a&gt;.</source>
          <target state="translated">스냅 샷을 복원 할 때 iframe이 올바르게 처리됩니다. 이전에는 페이지 레이아웃을 변경하는 iframe을 제거하고 그린 히트 박스 좌표가 잘못되었습니다. 이제 페이지 레이아웃이 변경되지 않도록하는 iframe 자리 표시자를 삽입합니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/234&quot;&gt;# 234&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ef38483a93250e520f89a8bbbebfc58b0b8455f" translate="yes" xml:space="preserve">
          <source>Ignore built-in error checking</source>
          <target state="translated">내장 오류 검사 무시</target>
        </trans-unit>
        <trans-unit id="ed9917af3f24331b10fa356d066f586ae0104d1a" translate="yes" xml:space="preserve">
          <source>Ignores certificate errors.</source>
          <target state="translated">인증서 오류를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="86babcad8f01e1bf1a0b598ae0e6c8ff84262776" translate="yes" xml:space="preserve">
          <source>Image Fixture</source>
          <target state="translated">이미지 비품</target>
        </trans-unit>
        <trans-unit id="c6710ca3583d7013d43636ee35c7fd947d72dc23" translate="yes" xml:space="preserve">
          <source>Image fixtures are sent as &lt;code&gt;base64&lt;/code&gt;</source>
          <target state="translated">이미지 비품은 &lt;code&gt;base64&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b956a40d46b4cd0728e2de70828549219afdf868" translate="yes" xml:space="preserve">
          <source>Image fixtures will be sent back as a &lt;code&gt;base64&lt;/code&gt; string.</source>
          <target state="translated">이미지 비품은 &lt;code&gt;base64&lt;/code&gt; 로 다시 전송됩니다 문자열 .</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="4513b6761ce835e6212684f50a737b86fcbdf6d4" translate="yes" xml:space="preserve">
          <source>Imagine we load the above instrumented source file from our test spec file. Immediately some counters will be incremented!</source>
          <target state="translated">테스트 스펙 파일에서 위의 인스트루먼트 된 소스 파일을로드한다고 가정하십시오. 즉시 일부 카운터가 증가합니다!</target>
        </trans-unit>
        <trans-unit id="1e83d6215f35398bb51293f5f120782b52a65a7c" translate="yes" xml:space="preserve">
          <source>Imagine you have a button:</source>
          <target state="translated">버튼이 있다고 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="24b4ed9bf98f198033e93677c87fd1e3d8ac7052" translate="yes" xml:space="preserve">
          <source>Imagine you have a nested navigation structure where the user must hover over and move the mouse in a very specific pattern to reach the desired link.</source>
          <target state="translated">사용자가 원하는 링크에 도달하기 위해 마우스를 매우 특정한 패턴으로 가져 가서 움직여야하는 중첩 된 탐색 구조가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="e12ad3c8e988f212753edfa4bc105c46859f3cf9" translate="yes" xml:space="preserve">
          <source>Imagine you&amp;rsquo;re testing the functionality of a &lt;strong&gt;Shopping Cart&lt;/strong&gt;. To test this, you need the ability to add products to that cart. Well where do the products come from? Should you use your UI to login to the admin area, and then create all of the products including their descriptions, categories, and images? Once that&amp;rsquo;s done should you then visit each product and add each one to the shopping cart?</source>
          <target state="translated">&lt;strong&gt;쇼핑 카트&lt;/strong&gt; 의 기능을 테스트한다고 상상해보십시오 . 이를 테스트하려면 해당 장바구니에 제품을 추가 할 수 있어야합니다. 제품의 출처는 어디입니까? UI를 사용하여 관리 영역에 로그인 한 다음 설명, 카테고리 및 이미지를 포함한 모든 제품을 작성해야합니까? 완료되면 각 제품을 방문하여 각 제품을 장바구니에 추가해야합니까?</target>
        </trans-unit>
        <trans-unit id="566491edc9d62340e3c6a132a8942efac39e2f06" translate="yes" xml:space="preserve">
          <source>Implicit Subjects</source>
          <target state="translated">암시 적 주제</target>
        </trans-unit>
        <trans-unit id="cf477996796d1f1e0450b8ac052a7dd0a9274bd6" translate="yes" xml:space="preserve">
          <source>Implicit form submission behavior</source>
          <target state="translated">암시 적 양식 제출 동작</target>
        </trans-unit>
        <trans-unit id="ceea8996382aff9fe78b5e01926378f70c5f2ea7" translate="yes" xml:space="preserve">
          <source>Improved &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;cypress ci&lt;/code&gt; headless output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/306&quot;&gt;#306&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;cypress ci&lt;/code&gt; 헤드리스 출력이 향상되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/306&quot;&gt;# 306&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc813306f6acf875228b7315bd382b47baa1b66" translate="yes" xml:space="preserve">
          <source>Improved &lt;code&gt;onConsole&lt;/code&gt; message for &lt;a href=&quot;../../api/commands/focused&quot;&gt;&lt;code&gt;cy.focused()&lt;/code&gt;&lt;/a&gt; when no element was returned. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/23&quot;&gt;#23&lt;/a&gt;.</source>
          <target state="translated">요소가 반환되지 않은 경우 &lt;a href=&quot;../../api/commands/focused&quot;&gt; &lt;code&gt;cy.focused()&lt;/code&gt; &lt;/a&gt; 대한 &lt;code&gt;onConsole&lt;/code&gt; 메시지가 개선 되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/23&quot;&gt;# 23&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8be175fa25df67e38fdd3f4a4b7899db413fbd67" translate="yes" xml:space="preserve">
          <source>Improved accessibility of Test Runner for screen readers. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3850&quot;&gt;#3850&lt;/a&gt;.</source>
          <target state="translated">스크린 리더를위한 Test Runner의 접근성이 향상되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3850&quot;&gt;# 3850&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f2a13dc80d0bdb5e140f0519a5c90516c8387df" translate="yes" xml:space="preserve">
          <source>Improved clicking algorithm to reduce edge cases where element could not be clicked but should have been able to be clicked.</source>
          <target state="translated">클릭 알고리즘을 개선하여 요소를 클릭 할 수 없었지만 클릭 할 수 있었던 에지 사례를 줄였습니다.</target>
        </trans-unit>
        <trans-unit id="26c3840709d197d5090b792b8c718a0588711bf2" translate="yes" xml:space="preserve">
          <source>Improved command errors and normalized many of them. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/137&quot;&gt;#137&lt;/a&gt;.</source>
          <target state="translated">명령 오류를 개선하고 많은 오류를 정규화했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/137&quot;&gt;# 137&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0079ba670fc7406dd72cb13a76e2e79ed8e6cc8c" translate="yes" xml:space="preserve">
          <source>Improved command subject validation error messages.</source>
          <target state="translated">명령 주제 유효성 검사 오류 메시지가 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="74dfd904cdd11d00b81ae50365c01467a12398f8" translate="yes" xml:space="preserve">
          <source>Improved crash reporting when the binary throws an uncaught error.</source>
          <target state="translated">이진 파일에 잡히지 않은 오류가 발생할 때 충돌보고 기능이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="06848fcd0a27917f97653952ba6663ed45f9ac7d" translate="yes" xml:space="preserve">
          <source>Improved displaying list of Tutorials, Recipes, Applications, and Docker examples</source>
          <target state="translated">튜토리얼, 레시피, 애플리케이션 및 도커 예제 목록 표시 개선</target>
        </trans-unit>
        <trans-unit id="d901ffa123fb70088a50387566c488b5b3de71a1" translate="yes" xml:space="preserve">
          <source>Improved dozens of error messages.</source>
          <target state="translated">수십 개의 오류 메시지가 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="e822ae58f01d47a3917a83810d36528353a05695" translate="yes" xml:space="preserve">
          <source>Improved element display in Command Log when multiple elements are part of an assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/96&quot;&gt;#96&lt;/a&gt;.</source>
          <target state="translated">여러 요소가 어설 션의 일부인 경우 명령 로그에서 요소 표시가 향상되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/96&quot;&gt;# 96&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c89f05a9dad058acf481a167fb569de38b4b1279" translate="yes" xml:space="preserve">
          <source>Improved error message displayed for &lt;code&gt;cypress cache&lt;/code&gt; to not display &lt;code&gt;[object Object]&lt;/code&gt; and made &lt;code&gt;--help&lt;/code&gt; labels more descriptive. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2589&quot;&gt;#2589&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress cache&lt;/code&gt; 에서 &lt;code&gt;[object Object]&lt;/code&gt; 를 표시하지 않도록 개선 된 오류 메시지가 표시 되고 &lt;code&gt;--help&lt;/code&gt; 레이블이보다 설명 적입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2589&quot;&gt;# 2589&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="22f67255037b6cc1bc249cb0edbe6a12a30b661e" translate="yes" xml:space="preserve">
          <source>Improved error message when attempting to use &lt;code&gt;cy.agents&lt;/code&gt; or anything else which requires a remote sandbox. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/12&quot;&gt;#12&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.agents&lt;/code&gt; 또는 원격 샌드 박스가 필요한 다른 것을 사용하려고 할 때 오류 메시지가 개선되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/12&quot;&gt;# 12&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b65001dddbe732d7b52b947c65b159a18865ed4d" translate="yes" xml:space="preserve">
          <source>Improved error messages for &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 대한 오류 메시지가 개선되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2a064c031c08696360e6bbf4e8b948a04debcb9d" translate="yes" xml:space="preserve">
          <source>Improved error messages for invalid &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/20&quot;&gt;#20&lt;/a&gt;.</source>
          <target state="translated">잘못된 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 인수에 대한 오류 메시지가 개선되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/20&quot;&gt;# 20&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="252e7ddbffce22ae202c3a169dfa5b9285348f95" translate="yes" xml:space="preserve">
          <source>Improved error messages for traversal failures. Errors now include the parent context DOM element. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/11&quot;&gt;#11&lt;/a&gt;.</source>
          <target state="translated">순회 오류에 대한 오류 메시지가 개선되었습니다. 이제 오류에는 상위 컨텍스트 DOM 요소가 포함됩니다. 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/11&quot;&gt;# 11&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc2e133b65b998b88433f9a583a813183a950144" translate="yes" xml:space="preserve">
          <source>Improved error when &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; fails. The request parameters are now included in the error. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/134&quot;&gt;#134&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 가 실패 할 때 오류가 개선되었습니다 . 요청 매개 변수가 이제 오류에 포함됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/134&quot;&gt;# 134&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6068976492ac9da6b70d05c82e9cb604fa898dc" translate="yes" xml:space="preserve">
          <source>Improved errors shown when opening a project in the Desktop Application. The design is more readable and the error&amp;rsquo;s stack trace is now expandable. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2955&quot;&gt;#2955&lt;/a&gt;.</source>
          <target state="translated">데스크톱 응용 프로그램에서 프로젝트를 열 때 표시되는 오류가 개선되었습니다. 디자인이 더 읽기 쉽고 오류의 스택 추적이 확장 가능합니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2955&quot;&gt;# 2955&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1ba1aecea97b21b1e473a7bbe2a28a4e914e288" translate="yes" xml:space="preserve">
          <source>Improved experience of search in Desktop Application when there are no results. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3146&quot;&gt;#3146&lt;/a&gt;.</source>
          <target state="translated">결과가 없을 때 데스크톱 응용 프로그램의 검색 경험이 향상되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3146&quot;&gt;# 3146&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf104430b20ab94d5d8562c1dcce5c4ebcac9b3" translate="yes" xml:space="preserve">
          <source>Improved headless performance, and added optimizations for early and often GC.</source>
          <target state="translated">헤드리스 성능이 향상되었으며 초기 및 종종 GC에 대한 최적화가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="aaccc99da6954af13e6294a931c8df21f58f9ca7" translate="yes" xml:space="preserve">
          <source>Improved initial Desktop Application startup performance by about &lt;code&gt;1.5s&lt;/code&gt;.</source>
          <target state="translated">초기 데스크톱 응용 프로그램 시작 성능이 약 &lt;code&gt;1.5s&lt;/code&gt; 향상되었습니다 .</target>
        </trans-unit>
        <trans-unit id="4aaecbabaabfac9f34870586de9a9edaebe6db4d" translate="yes" xml:space="preserve">
          <source>Improved options logging and argument logging for all commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/8&quot;&gt;#8&lt;/a&gt;.</source>
          <target state="translated">모든 명령에 대한 옵션 로깅 및 인수 로깅이 개선되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/8&quot;&gt;# 8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55e75b36e99319d57066673a634846441b91874a" translate="yes" xml:space="preserve">
          <source>Improved performance by preventing &lt;code&gt;snapshots&lt;/code&gt; from being taken during headless runs.</source>
          <target state="translated">헤드리스 실행 중에 &lt;code&gt;snapshots&lt;/code&gt; 이 생성되지 않도록하여 성능이 향상되었습니다 .</target>
        </trans-unit>
        <trans-unit id="da41a6fab9284055cae9ffba69b0c0519d609ab3" translate="yes" xml:space="preserve">
          <source>Improved performance of formatting fixtures.</source>
          <target state="translated">형식 지정 픽스처의 성능이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="79354d3b6c2b87282c39b3ad05ff13372bd1c3e0" translate="yes" xml:space="preserve">
          <source>Improved performance when running &lt;code&gt;cypress run&lt;/code&gt; by caching the last bundled spec. This prevents having the same spec file rebundled each time &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; caused a full page navigation. You should see a moderate improvement in test run time. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/370&quot;&gt;#370&lt;/a&gt;.</source>
          <target state="translated">마지막 번들 스펙을 캐싱하여 &lt;code&gt;cypress run&lt;/code&gt; 을 실행할 때 성능이 향상되었습니다 . 이는 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 가 전체 페이지 탐색을 유발할 때마다 동일한 스펙 파일이 다시 번들 되는 것을 방지합니다 . 테스트 실행 시간이 약간 향상되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/370&quot;&gt;# 370&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="703f10390cde2fb7bb83b317e4b2ace6524a7e5f" translate="yes" xml:space="preserve">
          <source>Improved reliability for displaying the remote url.</source>
          <target state="translated">원격 URL 표시에 대한 안정성이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="16e39974c1762c69a407c7513a4d370ee3cb0335" translate="yes" xml:space="preserve">
          <source>Improved the &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/74#issuecomment-208422453&quot;&gt;error message&lt;/a&gt; displayed to users on Windows attempting to download the Cypress Desktop app.</source>
          <target state="translated">Cypress Desktop 앱을 다운로드하려는 Windows 사용자에게 표시 되는 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/74#issuecomment-208422453&quot;&gt;오류 메시지가&lt;/a&gt; 개선되었습니다 .</target>
        </trans-unit>
        <trans-unit id="67acb5ba4500405f155be15da50cb281965298a5" translate="yes" xml:space="preserve">
          <source>Improved the calculations to calculate an elements visibility. Additionally updated error messages to be clearer whenever an element isn&amp;rsquo;t considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/613&quot;&gt;#613&lt;/a&gt;</source>
          <target state="translated">요소 가시성을 계산하기 위해 계산이 개선되었습니다. 또한 요소가 보이지 않는 경우 명확하게 표시되도록 오류 메시지를 업데이트했습니다. 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/613&quot;&gt;# 613&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b88681d8483932fe365c217e142947af1e1bba42" translate="yes" xml:space="preserve">
          <source>Improved the element detachment error messages (when you try to interact with an element that&amp;rsquo;s become stale / detached from the document).</source>
          <target state="translated">요소 분리 오류 메시지를 개선했습니다 (문서에서 오래되거나 분리 된 요소와 상호 작용하려고 할 때).</target>
        </trans-unit>
        <trans-unit id="92596101c48f6d47c1bc13230dd426124e45de22" translate="yes" xml:space="preserve">
          <source>Improved the reporter&amp;rsquo;s responsive design so controls still show at narrower widths. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/544&quot;&gt;#544&lt;/a&gt;.</source>
          <target state="translated">리포터의 반응 형 디자인이 개선되어 컨트롤의 너비가 더 좁아졌습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/544&quot;&gt;# 544&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a25e1d51c3d2713bcd39f6d37f1e5f69d3127b7" translate="yes" xml:space="preserve">
          <source>Improved verifying the binary for the first time after an &lt;code&gt;npm install&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/709&quot;&gt;#709&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; 후 처음으로 이진 확인 기능이 향상되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/709&quot;&gt;# 709&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eca4359f4f67e96fd9312096e6628697698cac42" translate="yes" xml:space="preserve">
          <source>In CI, the window size (not the viewport) has been changed from &lt;code&gt;1024x768&lt;/code&gt; to &lt;code&gt;1280x720&lt;/code&gt;. This will only affect &lt;code&gt;screenshot&lt;/code&gt; artifacts which are taken automatically with &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; (coming soon) or whenever a test fails (also coming soon).</source>
          <target state="translated">CI에서 창 크기 (뷰포트가 아님)가 &lt;code&gt;1024x768&lt;/code&gt; 에서 &lt;code&gt;1280x720&lt;/code&gt; 으로 변경되었습니다 . 이는 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; (곧 제공 될) 또는 테스트가 실패 할 때마다 (또는 곧 제공 될) &lt;code&gt;screenshot&lt;/code&gt; 아티팩트 에만 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="1e4b013137369ed2b06a5fb376399217a8fac236" translate="yes" xml:space="preserve">
          <source>In Cypress there is no built in error recovery from a failed command. A command and its assertions all &lt;em&gt;eventually&lt;/em&gt; pass, or if one fails, all remaining commands are not run, and the test fails.</source>
          <target state="translated">Cypress에는 실패한 명령에서 기본 제공되는 오류 복구가 없습니다. 명령과 그 주장은 모두 &lt;em&gt;결국&lt;/em&gt; 통과, 또는 하나가 실패 할 경우, 남아있는 모든 명령이 실행되지 않습니다 및 테스트가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="8f50116473ece617233977357a4883828c892141" translate="yes" xml:space="preserve">
          <source>In Cypress, &amp;ldquo;environment variables&amp;rdquo; are variables that are accessible via &lt;code&gt;Cypress.env&lt;/code&gt;. These are not the same as OS-level environment variables. However, &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-3-CYPRESS&quot;&gt;it is possible to set Cypress environment variables from OS-level environment variables&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 &quot;환경 변수&quot;는 &lt;code&gt;Cypress.env&lt;/code&gt; 를 통해 액세스 할 수있는 변수입니다 . 이는 OS 수준 환경 변수와 동일하지 않습니다. 그러나 &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-3-CYPRESS&quot;&gt;OS 수준 환경 변수에서 Cypress 환경 변수를 설정할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0d55e4cc0ea2cf5d444b8bfcff8fb4264bd554d" translate="yes" xml:space="preserve">
          <source>In Cypress, querying elements is the same:</source>
          <target state="translated">Cypress에서 요소 쿼리는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c4ae9e544f2d81fa393bf995be3feae899249191" translate="yes" xml:space="preserve">
          <source>In Cypress, when you want to interact with a DOM element directly, call &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; with a callback function that receives the element as its first argument. When you want to skip the retry-and-timeout functionality entirely and perform traditional synchronous work, use &lt;a href=&quot;../../api/utilities/%24&quot;&gt;&lt;code&gt;Cypress.$&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 DOM 요소와 직접 상호 작용 하려면 요소를 첫 번째 인수로받는 콜백 함수를 사용하여 &lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . 재시도 및 시간 초과 기능을 완전히 건너 뛰고 전통적인 동기 작업을 수행하려면 &lt;a href=&quot;../../api/utilities/%24&quot;&gt; &lt;code&gt;Cypress.$&lt;/code&gt; 를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93dc3a56cc98e9a5da2045fbad38633a61a8b168" translate="yes" xml:space="preserve">
          <source>In Cypress, you almost never need to use &lt;code&gt;cy.wait()&lt;/code&gt; for an arbitrary amount of time. If you are finding yourself doing this, there is likely a much better, simpler way.</source>
          <target state="translated">Cypress에서는 &lt;code&gt;cy.wait()&lt;/code&gt; 를 임의의 시간 동안 사용할 필요가 거의 없습니다 . 이 작업을 수행하고 있다면 훨씬 더 좋고 간단한 방법 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="83afb0e7a862e44031c0c1176f1d0fe6caae0f69" translate="yes" xml:space="preserve">
          <source>In Docker</source>
          <target state="translated">도커에서</target>
        </trans-unit>
        <trans-unit id="23d0b9b709accae2ccb336b4bd7475f91e65a70c" translate="yes" xml:space="preserve">
          <source>In February 2018 we gave a &amp;ldquo;Best Practices&amp;rdquo; conference talk at AssertJS. This video demonstrates how to approach writing fast, scalable tests.</source>
          <target state="translated">2018 년 2 월 AssertJS에서 &quot;Best Practices&quot;컨퍼런스 토크를 진행했습니다. 이 비디오는 빠르고 확장 가능한 테스트 작성 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="217ea5cca9699504b57fcecb48b0029845d1abba" translate="yes" xml:space="preserve">
          <source>In a nutshell</source>
          <target state="translated">간단히 말해서</target>
        </trans-unit>
        <trans-unit id="0cfcf679328437fea7ca63674e0875324d46aa18" translate="yes" xml:space="preserve">
          <source>In a real browser, if a user holds &lt;code&gt;SHIFT&lt;/code&gt; and types &lt;code&gt;a&lt;/code&gt;, a capital &lt;code&gt;A&lt;/code&gt; will be typed into the input. Currently, Cypress does not simulate that behavior.</source>
          <target state="translated">실제 브라우저에서 사용자가 보유하고있는 경우 &lt;code&gt;SHIFT&lt;/code&gt; 및 유형 &lt;code&gt;a&lt;/code&gt; , 자본 &lt;code&gt;A&lt;/code&gt; 는 입력에 입력됩니다. 현재 Cypress는 해당 동작을 시뮬레이션하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fc81d665c6573b797ef9731d4199a3fa5775693" translate="yes" xml:space="preserve">
          <source>In a real browser, preventing &lt;code&gt;mousedown&lt;/code&gt; on a form field will prevent it from receiving focus and thus prevent it from being able to be typed into. Currently, Cypress does not factor this in. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">실제 브라우저에서는 양식 필드에서 &lt;code&gt;mousedown&lt;/code&gt; 를 사용하지 않으면 포커스를받지 못하므로 입력 할 수 없습니다. 현재 Cypress에서는이를 고려하지 않습니다.이 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제를 해결하려면 문제&lt;/a&gt; 를여십시오.</target>
        </trans-unit>
        <trans-unit id="320d28f497aadcc5b422e2819000cb122757a814" translate="yes" xml:space="preserve">
          <source>In action</source>
          <target state="translated">행동</target>
        </trans-unit>
        <trans-unit id="66c2b6aed0a9de1021112edd369a9f8559aa7c32" translate="yes" xml:space="preserve">
          <source>In addition to controlling the command&amp;rsquo;s implicit behavior you can also add declarative subject validations such as:</source>
          <target state="translated">명령의 암시 적 동작을 제어하는 ​​것 외에도 다음과 같은 선언적 주제 유효성 검사를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51f29c6b3af38b802d9213596ba6361aa65273ef" translate="yes" xml:space="preserve">
          <source>In addition to having a helpful UI, there are also special commands dedicated to the task of debugging.</source>
          <target state="translated">유용한 UI가있을뿐 아니라 디버깅 작업 전용 명령도 있습니다.</target>
        </trans-unit>
        <trans-unit id="96aae7a4198787988c8fe087f5568f27d3da7538" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;DEBUG&lt;/code&gt; messages, Cypress also emits multiple events you can listen to as shown below. &lt;a href=&quot;../../api/events/catalog-of-events#Logging-All-Events&quot;&gt;Read more about logging events in the browser here&lt;/a&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;DEBUG&lt;/code&gt; 메시지 외에도 아래에 표시된대로들을 수있는 여러 이벤트를 생성합니다. &lt;a href=&quot;../../api/events/catalog-of-events#Logging-All-Events&quot;&gt;브라우저에서 이벤트 로깅에 대한 자세한 내용은 여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bc2b29e552e115209ada03b0c740b4c8ea36f37" translate="yes" xml:space="preserve">
          <source>In addition to the browsers found on your system, you&amp;rsquo;ll notice that Electron is an available browser. The Electron browser is a version of Chromium that comes with &lt;a href=&quot;https://electron.atom.io/&quot;&gt;Electron&lt;/a&gt;.</source>
          <target state="translated">시스템에있는 브라우저 외에도 Electron이 사용 가능한 브라우저임을 알 수 있습니다. 전자 브라우저와 함께 제공 크롬의 버전입니다 &lt;a href=&quot;https://electron.atom.io/&quot;&gt;전자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfa444adf9ce49e02f71a3745577a26190472e06" translate="yes" xml:space="preserve">
          <source>In additional to controlling the command&amp;rsquo;s implicit behavior you can also add declarative subject validations such as:</source>
          <target state="translated">명령의 내재 된 동작을 제어하는 ​​것 외에도 다음과 같은 선언적 주제 검증을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c98561952b227b72d8d063fd8a2755bcb59940d2" translate="yes" xml:space="preserve">
          <source>In all cases, the fact that the binary was installed from a custom location &lt;em&gt;is not saved in your &lt;code&gt;package.json&lt;/code&gt; file&lt;/em&gt;. Every repeated installation needs to use the same environment variable to install the same binary.</source>
          <target state="translated">모든 경우에 바이너리가 사용자 정의 위치에서 설치되었다는 사실은 &lt;em&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/em&gt;&lt;em&gt; 파일에 &lt;/em&gt;&lt;em&gt;저장되지 않습니다&lt;/em&gt; . 모든 반복 설치는 동일한 바이너리를 설치하기 위해 동일한 환경 변수를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e556245dccc8b934e56ce11b57126a1352618544" translate="yes" xml:space="preserve">
          <source>In all cases, you are using &lt;code&gt;run&lt;/code&gt; and &lt;code&gt;install&lt;/code&gt; job definitions that Cypress provides inside the orb. Using the orb brings simplicity and static checks of parameters to CircleCI configuration.</source>
          <target state="translated">모든 경우에 Cypress가 orb 내부에서 제공 하는 &lt;code&gt;run&lt;/code&gt; 및 &lt;code&gt;install&lt;/code&gt; 작업 정의를 사용 하고 있습니다. orb를 사용하면 CircleCI 구성에 대한 매개 변수의 단순성 및 정적 검사가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e2544fa406c5d3a4a0393145b666362aac681f4f" translate="yes" xml:space="preserve">
          <source>In case you missed it before - Cypress tests run inside of the browser! This means we can do things nobody else can. There is no object serialization or JSON wire protocols. You have real, native access to everything in your application under test. It is impossible for Cypress to &amp;lsquo;miss&amp;rsquo; elements and it always knows the moment your application fires any kind of event.</source>
          <target state="translated">Cypress 테스트는 브라우저 내부에서 실행됩니다! 이것은 우리가 다른 사람이 할 수없는 일을 할 수 있다는 것을 의미합니다. 객체 직렬화 또는 JSON 와이어 프로토콜이 없습니다. 테스트중인 응용 프로그램의 모든 항목에 실제로 액세스 할 수 있습니다. Cypress가 요소를 '누락'하는 것은 불가능하며 응용 프로그램이 모든 종류의 이벤트를 시작하는 순간을 항상 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="06db0e869e5b5019e15cfcf65f101aeda26d156d" translate="yes" xml:space="preserve">
          <source>In each of these examples, it&amp;rsquo;s important to note that Cypress will automatically &lt;em&gt;wait&lt;/em&gt; until these assertions pass. This prevents you from having to know or care about the precise moment your elements eventually do reach this state.</source>
          <target state="translated">이러한 각 예에서 Cypress는 이러한 어설 션이 통과 할 &lt;em&gt;때&lt;/em&gt; 까지 자동으로 &lt;em&gt;대기&lt;/em&gt; 한다는 점에 유의 해야합니다. 이렇게하면 요소가 결국이 상태에 도달하는 정확한 순간을 알거나 신경 쓸 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="957cedd2227871d2848a63a9c4d6c999d1cb3089" translate="yes" xml:space="preserve">
          <source>In each of these situations, Cypress will lose the ability to automate your application and will immediately error.</source>
          <target state="translated">이러한 각 상황에서 Cypress는 응용 프로그램을 자동화하는 기능을 잃고 즉시 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d455e0cf9f8dec0308d2c03ee28d251b870d0a43" translate="yes" xml:space="preserve">
          <source>In fact we can likely bypass the initial visit altogether and just &lt;code&gt;POST&lt;/code&gt; directly to your &lt;code&gt;SSO&lt;/code&gt; server.</source>
          <target state="translated">실제로 우리는 초기 방문을 모두 우회하고 &lt;code&gt;SSO&lt;/code&gt; 서버에 직접 &lt;code&gt;POST&lt;/code&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b828d2cc65ff6901d0db67ba050dd72135ffb14" translate="yes" xml:space="preserve">
          <source>In fact we only ever scroll elements into view when actionable commands are running using the above algorithms. We &lt;em&gt;do not&lt;/em&gt; scroll elements into view on regular DOM commands like &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">실제로 우리는 실행 가능한 명령이 위의 알고리즘을 사용하여 실행될 때만 요소를 스크롤하여 볼 수 있습니다. 우리는 &lt;em&gt;하지 않습니다&lt;/em&gt; 같은 일반 DOM의 명령에보기에 요소 스크롤 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="972e3b350e94808ddfad132c9667f5d95eba221c" translate="yes" xml:space="preserve">
          <source>In fact, Cypress &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;bundles jQuery&lt;/a&gt; and exposes many of its DOM traversal methods to you so you can work with complex HTML structures with ease using APIs you&amp;rsquo;re already familiar with.</source>
          <target state="translated">실제로 Cypress 는 &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQuery를 번들로&lt;/a&gt; 제공하고 많은 DOM 순회 메소드를 제공하므로 이미 익숙한 API를 사용하여 복잡한 HTML 구조로 쉽게 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cfb46617eb16e37fba8d76bf4e0fbd123bfb6db" translate="yes" xml:space="preserve">
          <source>In general, it should not be necessary to manually restore the native functions that &lt;code&gt;cy.clock()&lt;/code&gt; overrides since this is done automatically between tests. But if you need to, the &lt;code&gt;clock&lt;/code&gt; object yield has a &lt;code&gt;.restore()&lt;/code&gt; method.</source>
          <target state="translated">일반적으로 &lt;code&gt;cy.clock()&lt;/code&gt; 이 테스트간에 자동으로 수행되므로 cy.clock ()이 재정의 하는 기본 함수를 수동으로 복원 할 필요는 없습니다 . 그러나 필요한 경우 &lt;code&gt;clock&lt;/code&gt; 객체 수율에는 &lt;code&gt;.restore()&lt;/code&gt; 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f65ca0977b8d4f0f635988d0d1f96d0e636bf9a" translate="yes" xml:space="preserve">
          <source>In general, there are only a handful of very specific situations where you &lt;em&gt;can&lt;/em&gt; create control flow. Asking to recover from errors is actually just asking for another &lt;code&gt;if/else&lt;/code&gt; control flow.</source>
          <target state="translated">일반적으로 제어 흐름을 만들 &lt;em&gt;수&lt;/em&gt; 있는 매우 구체적인 상황은 소수입니다 . 오류 복구를 요청하는 것은 실제로 다른 &lt;code&gt;if/else&lt;/code&gt; 제어 흐름을 요구하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="9a36d58b1789bc4d3558b6ff8edc263c58dfa4f4" translate="yes" xml:space="preserve">
          <source>In green, we highlighted the 4 statements present in that file. The first three statements were each executed once and the last statement was never executed (it probably was inside an &lt;code&gt;if&lt;/code&gt; statement). By using the application, we can both increment the counters and flip some of the zero counters into positive numbers.</source>
          <target state="translated">녹색으로, 우리는 그 파일에 존재하는 4 가지 진술을 강조했습니다. 처음 세 명령문은 각각 한 번 실행되었으며 마지막 명령문은 실행되지 않았습니다 (아마 &lt;code&gt;if&lt;/code&gt; 문 내부에 있음 ). 응용 프로그램을 사용하면 카운터를 증가시키고 0 카운터 중 일부를 양수로 뒤집을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ce9da97dae73d511f76748460799579cde4725e" translate="yes" xml:space="preserve">
          <source>In many single-page JavaScript applications the DOM re-renders parts of the application constantly. If you alias DOM elements that have been removed from the DOM by the time you call &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; with the alias, Cypress automatically re-queries the DOM to find these elements again.</source>
          <target state="translated">많은 단일 페이지 JavaScript 응용 프로그램에서 DOM은 응용 프로그램의 일부를 지속적으로 다시 렌더링합니다. 별명으로 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 을 호출 할 때 DOM에서 제거 된 DOM 요소 의 별명을 지정하면 Cypress는 자동으로 DOM을 다시 조회하여 이러한 요소를 다시 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3b8f64d724638ed5c83f51001e0f2a341e271119" translate="yes" xml:space="preserve">
          <source>In modern JavaScript frameworks, DOM elements are regularly re-rendered - meaning that the old element is thrown away and a new one is put in its place. Because this happens so fast, it may &lt;em&gt;appear&lt;/em&gt; as if nothing has visibly changed to the user. But if you are in the middle of executing test commands, it&amp;rsquo;s possible the element you&amp;rsquo;re interacting with has become &amp;ldquo;dead&amp;rdquo;. To deal with this situation you must:</source>
          <target state="translated">최신 JavaScript 프레임 워크에서 DOM 요소는 정기적으로 다시 렌더링됩니다. 즉, 이전 요소는 버리고 새 요소가 대신 사용됩니다. 이렇게 빨리 발생하기 때문에 사용자에게 눈에 띄게 변경되지 않은 &lt;em&gt;것처럼 보일&lt;/em&gt; 수 있습니다 . 그러나 테스트 명령을 실행하는 중이라면 상호 작용하는 요소가 &quot;죽은&quot;상태 일 수 있습니다. 이 상황을 처리하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c0b6f380fda038fbcafdd75cab9a5d02d486aa59" translate="yes" xml:space="preserve">
          <source>In most cases they will be the same, but they could be different if you have installed a different version of the npm package and for some reason could not install the matching binary.</source>
          <target state="translated">대부분의 경우 이들은 동일하지만 다른 버전의 npm 패키지를 설치했으며 어떤 이유로 일치하는 바이너리를 설치할 수없는 경우에는 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00c6f6264b87e2dbd6e00057ddc1337aac8cff3a" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;.and()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;.and()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="55903538ca91ab3f5216aa568a05e5bdbeb4127d" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;.should()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;.should()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="89b0743460f4cc378c0dc73810f513fdeb375908" translate="yes" xml:space="preserve">
          <source>In most cases, it&amp;rsquo;s easier to use &lt;a href=&quot;tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt; to move time, but you can also use the &lt;code&gt;clock&lt;/code&gt; object yielded by &lt;code&gt;cy.clock()&lt;/code&gt;.</source>
          <target state="translated">대부분의 경우, 사용하기 쉽게 &lt;a href=&quot;tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt; 시간을 이동하지만, 당신은 또한 사용할 수 있습니다 &lt;code&gt;clock&lt;/code&gt; 에 의해 산출 객체 &lt;code&gt;cy.clock()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f076236ad2ec6acc7d572774df0df507bc59afc9" translate="yes" xml:space="preserve">
          <source>In order for the &lt;code&gt;@cypress/code-coverage&lt;/code&gt; plugin to know that it should request the back end coverage, add the new endpoint to the &lt;code&gt;cypress.json&lt;/code&gt; environment settings under &lt;code&gt;env.codeCoverage.url&lt;/code&gt; key. For example, if the application back end is running at port 3000 and we are using the default &amp;ldquo;GET /&lt;strong&gt;coverage&lt;/strong&gt;&amp;ldquo; endpoint, set the following:</source>
          <target state="translated">위해서는 &lt;code&gt;@cypress/code-coverage&lt;/code&gt; 는 백 엔드 범위를 요청해야합니다 알고 플러그인의 새 엔드 포인트를 추가 &lt;code&gt;cypress.json&lt;/code&gt; 의 아래 환경 설정 &lt;code&gt;env.codeCoverage.url&lt;/code&gt; 의 키를 누릅니다. 예를 들어, 애플리케이션 백엔드가 포트 3000에서 실행 중이고 기본 &quot;GET / &lt;strong&gt;Coverage&lt;/strong&gt; &quot;엔드 포인트를 사용중인 경우 다음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="baf3bf60042422bbe31cf06d5cda76bbd9dd6c4e" translate="yes" xml:space="preserve">
          <source>In order to properly configure your proxy configuration, it can be helpful to know how to view currently set environment variables, unset unwanted environment variables, and set environment variables depending on your operating system.</source>
          <target state="translated">프록시 구성을 올바르게 구성하려면 운영 체제에 따라 현재 설정된 환경 변수를보고 원하지 않는 환경 변수를 설정 해제하고 환경 변수를 설정하는 방법을 아는 것이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58b3c0815dffd24ae8198b86de21463a624f1b5d" translate="yes" xml:space="preserve">
          <source>In order to run in parallel mode each machine must send identical environment parameters such as:</source>
          <target state="translated">병렬 모드에서 실행하려면 각 머신은 다음과 같은 동일한 환경 매개 변수를 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="960ecf2a8bb32c6c051d1950abd6d2c10ef9886c" translate="yes" xml:space="preserve">
          <source>In order to use either of these parameters a &lt;code&gt;ciBuildId&lt;/code&gt; must be determined.</source>
          <target state="translated">이러한 매개 변수 중 하나를 사용하려면 &lt;code&gt;ciBuildId&lt;/code&gt; 를 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="757fbb0c7658d315aa68d0d75d1e33fe4e732269" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;cy.request()&lt;/code&gt; transparently performs all of the underlying functions as if it came from the browser.</source>
          <target state="translated">즉, &lt;code&gt;cy.request()&lt;/code&gt; 는 브라우저에서 온 것처럼 모든 기본 함수를 투명하게 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b445cba6faffc900548081af28b090a31c4d2a28" translate="yes" xml:space="preserve">
          <source>In other words, Cypress will look inside of the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; containing &amp;ldquo;Delete User&amp;rdquo; for the content: &amp;ldquo;Yes, Delete!&amp;rdquo;, which is not what we intended.</source>
          <target state="translated">다시 말해, Cypress는 &amp;ldquo;사용자 삭제&amp;rdquo;가 포함 된 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 내부에서 &amp;ldquo;예, 삭제!&amp;rdquo;라는 콘텐츠 를 찾습니다 . 이는 우리가 의도 한 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c7fd92ad95f41e3f9a80069cdc87e37caf3899b0" translate="yes" xml:space="preserve">
          <source>In other words, based on the commands and the events happening, Cypress automatically alters its expected timeouts to match web application behavior.</source>
          <target state="translated">다시 말해, Cypress는 명령 및 발생하는 이벤트에 따라 웹 응용 프로그램 동작과 일치하도록 예상 시간 초과를 자동으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="dd08023cd2b43573ac20a805bf980289cfe9cd99" translate="yes" xml:space="preserve">
          <source>In other words, what&amp;rsquo;s the difference between:</source>
          <target state="translated">즉, 차이점은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="9f20db83fc921929320420426f7f2eb3f45eba78" translate="yes" xml:space="preserve">
          <source>In other words, you can have confidence your server is sending the correct data in the correct structure to your client to consume. It is a good idea to have &lt;em&gt;end-to-end&lt;/em&gt; tests around your application&amp;rsquo;s &lt;em&gt;critical paths&lt;/em&gt;. These typically include user login, signup, or other critical paths such as billing.</source>
          <target state="translated">다시 말해, 서버가 올바른 구조의 올바른 데이터를 클라이언트에 전송하여 자신이 소비 할 것이라는 확신을 가질 수 있습니다. 응용 프로그램의 &lt;em&gt;중요한 경로에 대해 &lt;/em&gt;&lt;em&gt;종단 간&lt;/em&gt; 테스트 를하는 것이 좋습니다 . 여기에는 일반적으로 사용자 로그인, 가입 또는 청구와 같은 기타 중요한 경로가 포함됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f074992d34b093b8250574c6e893a7e33326ae2" translate="yes" xml:space="preserve">
          <source>In other words, you cannot do conditional testing safely if you want your tests to run 100% consistently.</source>
          <target state="translated">즉, 테스트를 100 % 일관되게 실행하려면 조건부 테스트를 안전하게 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e171c64eb19d826206200e5d26a2b563c2afe04a" translate="yes" xml:space="preserve">
          <source>In other words, you cannot get a correct visual representation of what Cypress &amp;ldquo;saw&amp;rdquo; when looking at a previous snapshot.</source>
          <target state="translated">다시 말해, 이전 스냅 샷을 볼 때 Cypress가 &quot;톱&quot;을 정확하게 시각적으로 표현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="92669c73359bc8943897aa378ff69c32cbfdada6" translate="yes" xml:space="preserve">
          <source>In our case it would re-issue the commands: &lt;code&gt;cy.get('#todos li').first()&lt;/code&gt;. Everything just works because the new &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; is found.</source>
          <target state="translated">이 경우 &lt;code&gt;cy.get('#todos li').first()&lt;/code&gt; 명령을 다시 실행합니다 . 새로운 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 가 발견 되었기 때문에 모든 것이 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="26178a5fe7b914d6ed00a2f239b56df67d688cb8" translate="yes" xml:space="preserve">
          <source>In our example above we can assert about the request object to verify that it sent data as a query string in the URL. Although we&amp;rsquo;re mocking the response, we can still verify that our application sends the correct request.</source>
          <target state="translated">위의 예에서 요청 객체에 대해 주장하여 URL에서 쿼리 문자열로 데이터를 보냈는지 확인할 수 있습니다. 응답을 조롱하고 있지만 애플리케이션이 올바른 요청을 보내는 지 여전히 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc66356f8684948999e9b56da8c86da2d45fdde7" translate="yes" xml:space="preserve">
          <source>In our example above, we added an assertion to the display of the search results.</source>
          <target state="translated">위의 예에서는 검색 결과 표시에 어설 션을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="cbd09423e8d8b6b60544024b0180eeb79623cdfd" translate="yes" xml:space="preserve">
          <source>In real promises it&amp;rsquo;s very easy to &amp;lsquo;lose&amp;rsquo; a nested Promise if you don&amp;rsquo;t return it or chain it correctly.</source>
          <target state="translated">실제 약속에 따르면 중첩 된 약속을 반환하지 않거나 올바르게 연결하지 않으면 매우 쉽게 약속을 잃을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe475bc5771e4e48a486de0206a21291a10d5ba0" translate="yes" xml:space="preserve">
          <source>In short: each Test Runner sends a list of the spec files to the Dashboard Service, and the service sends back one spec at a time to each Test Runner to run.</source>
          <target state="translated">한마디로 : 각 테스트 러너는 사양 파일 목록을 대시 보드 서비스로 보내고 서비스는 한 번에 하나의 사양을 각 테스트 러너에게 보내서 실행합니다.</target>
        </trans-unit>
        <trans-unit id="b2702e8c706482bb57ea15ead38c09b0c3cc3468" translate="yes" xml:space="preserve">
          <source>In summary, &lt;code&gt;{ force: true }&lt;/code&gt; skips the checks, and it will always fire the event at the desired element.</source>
          <target state="translated">요약하면 &lt;code&gt;{ force: true }&lt;/code&gt; 는 검사를 건너 뛰고 원하는 요소에서 항상 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5b128d58ca001409e86451f0c96ce0bae6522382" translate="yes" xml:space="preserve">
          <source>In test file</source>
          <target state="translated">테스트 파일에서</target>
        </trans-unit>
        <trans-unit id="ddbfcf2f900b721463e0197d2741c0c7e30a1d9b" translate="yes" xml:space="preserve">
          <source>In that case, use the &lt;code&gt;eventConstructor&lt;/code&gt; option.</source>
          <target state="translated">이 경우 &lt;code&gt;eventConstructor&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7d47f109594cd38d016e5a421f2ceca2de108aa" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI tool&lt;/a&gt; package version &lt;code&gt;0.11.1&lt;/code&gt;, you can now pass the &lt;code&gt;--spec&lt;/code&gt; option to &lt;code&gt;cypress ci&lt;/code&gt;. This enables you to run a specific spec file as opposed to all tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/161&quot;&gt;#161&lt;/a&gt;.</source>
          <target state="translated">에서 &lt;a href=&quot;../guides/command-line&quot;&gt;싸이프레스 CLI 도구&lt;/a&gt; 패키지 버전 &lt;code&gt;0.11.1&lt;/code&gt; , 이제 통과 할 수 &lt;code&gt;--spec&lt;/code&gt; 에 옵션 &lt;code&gt;cypress ci&lt;/code&gt; . 이를 통해 모든 테스트와 달리 특정 사양 파일을 실행할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/161&quot;&gt;# 161&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e548e59ef9c1834daff6987fa3dae2477d409463" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;task&lt;/code&gt; plugin event, the command will fail if &lt;code&gt;undefined&lt;/code&gt; is returned. This helps catch typos or cases where the task event is not handled.</source>
          <target state="translated">에서 &lt;code&gt;task&lt;/code&gt; 하는 경우 플러그인 이벤트, 명령이 실패합니다 &lt;code&gt;undefined&lt;/code&gt; 반환됩니다. 이를 통해 작업 이벤트가 처리되지 않은 오타 나 사례를 잡을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f454795faa20c2cbbedb4921ca14516cef861e0f" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;best&lt;/strong&gt; case scenario, we have wasted at LEAST 4 seconds waiting on the &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; element to possibly exist before we errored and continued on.</source>
          <target state="translated">에서 &lt;strong&gt;가장 좋은&lt;/strong&gt; 시나리오, 우리는 적어도 4를 기다리고 초 낭비 &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; 우리는 오류가 발생한 및에 계속하기 전에 가능성에 요소가 존재합니다.</target>
        </trans-unit>
        <trans-unit id="c6ddf3f2715bb8b202d71d3c892e47fa1bdbea66" translate="yes" xml:space="preserve">
          <source>In the above examples, the subject was an object, but &lt;code&gt;cy.invoke&lt;/code&gt; also works on arrays and allows using numerical index to pick a function to run.</source>
          <target state="translated">위의 예에서 주제는 객체 였지만 &lt;code&gt;cy.invoke&lt;/code&gt; 는 배열에서도 작동하며 숫자 인덱스를 사용하여 실행할 함수를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edd2b868139cae76a520ce3fbf3e663f3cea5e1c" translate="yes" xml:space="preserve">
          <source>In the case where you &lt;strong&gt;are&lt;/strong&gt; trying to use the DOM to do conditional testing, you can utilize the ability to synchronously query for elements in Cypress to create control flow.</source>
          <target state="translated">당신이 경우에 &lt;strong&gt;하는&lt;/strong&gt; 조건 테스트를 수행 할 DOM을 사용하려고, 당신은 제어 흐름을 만들 수있는 싸이프레스의 요소에 대한 동기 쿼리 기능을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af8e46f6692be60a06f94bec5c36c9a457f0ab0e" translate="yes" xml:space="preserve">
          <source>In the case where you cannot control it, you can still conditionally dismiss it &lt;strong&gt;if&lt;/strong&gt; you know whether it is going to be shown.</source>
          <target state="translated">제어 할 수없는 &lt;strong&gt;경우 표시 여부&lt;/strong&gt; 를 알고 &lt;strong&gt;있으면&lt;/strong&gt; 조건부로 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b780dbd10d62f32c288dc68d699654e289fb3be5" translate="yes" xml:space="preserve">
          <source>In the corresponding Application Preview below, you can see &lt;code&gt;https://example.cypress.io&lt;/code&gt; is being displayed in the righthand side. Not only is the application visible, but it is fully interactable. You can open your developer tools to inspect elements as you would your normal application. The DOM is completely available for debugging.</source>
          <target state="translated">아래의 해당 애플리케이션 미리보기 에서 오른쪽에 &lt;code&gt;https://example.cypress.io&lt;/code&gt; 가 표시되는 것을 볼 수 있습니다 . 응용 프로그램이 표시 될뿐만 아니라 완전히 상호 작용할 수 있습니다. 개발자 도구를 열어 일반적인 응용 프로그램처럼 요소를 검사 할 수 있습니다. DOM은 디버깅에 완전히 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="724f36d11e3292b6f98fd52ad540c1e33ae08a1a" translate="yes" xml:space="preserve">
          <source>In the event you did not read a word above and skipped down here, we will reiterate it one more time:</source>
          <target state="translated">위의 단어를 읽지 않고 여기에서 건너 뛴 경우 한 번 더 반복합니다.</target>
        </trans-unit>
        <trans-unit id="1e8a71e8ca92d8291e8879ff3d151c47acc69ff5" translate="yes" xml:space="preserve">
          <source>In the example above, a lowercase &lt;code&gt;a&lt;/code&gt; will be typed, because that&amp;rsquo;s the literal character specified. To type a capital &lt;code&gt;A&lt;/code&gt;, you can use &lt;code&gt;.type('{shift}A')&lt;/code&gt; (or &lt;code&gt;.type('A')&lt;/code&gt; if you don&amp;rsquo;t care about the &lt;code&gt;shiftKey&lt;/code&gt; property on any key events).</source>
          <target state="translated">위의 예에서 소문자 &lt;code&gt;a&lt;/code&gt; 는 입력 된 문자이기 때문에 소문자 a 가 입력됩니다. 자본 입력합니다 &lt;code&gt;A&lt;/code&gt; , 당신은 사용할 수 있습니다 &lt;code&gt;.type('{shift}A')&lt;/code&gt; (또는 &lt;code&gt;.type('A')&lt;/code&gt; 당신이 걱정하지 않는 경우 &lt;code&gt;shiftKey&lt;/code&gt; 의 모든 키 이벤트에 대한 속성).</target>
        </trans-unit>
        <trans-unit id="dbc64ac6d10e528c5dd0d59f366d067fbeecd5c2" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;cy:run&lt;/code&gt; command will only be executed when the URL &lt;code&gt;http://localhost:3030&lt;/code&gt; responds with an HTTP status code of 200. The server will also shut down when the tests complete.</source>
          <target state="translated">위 예에서 &lt;code&gt;cy:run&lt;/code&gt; 명령은 URL &lt;code&gt;http://localhost:3030&lt;/code&gt; 이 HTTP 상태 코드 200으로 응답 할 때만 실행됩니다. 테스트가 완료되면 서버도 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="36aa59bac872c548ec5c4844f5228652bcec4f87" translate="yes" xml:space="preserve">
          <source>In the example below, we forget to return the &lt;code&gt;Promise&lt;/code&gt; in our test. This means the test passes synchronously but our &lt;code&gt;Promise&lt;/code&gt; resolves in the next test.</source>
          <target state="translated">아래 예에서는 테스트 에서 &lt;code&gt;Promise&lt;/code&gt; 을 반환하는 것을 잊었습니다 . 이는 테스트가 동 기적으로 통과하지만 다음 테스트에서 &lt;code&gt;Promise&lt;/code&gt; 가 해결됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4d34ae3c0b5a56416754aa0ee709bc378be03638" translate="yes" xml:space="preserve">
          <source>In the example below, we use &lt;code&gt;.invoke()&lt;/code&gt; to force a hidden div to be &lt;code&gt;'display: block'&lt;/code&gt; so we can interact with its children elements.</source>
          <target state="translated">아래 예에서는 &lt;code&gt;.invoke()&lt;/code&gt; 를 사용 하여 숨겨진 div를 &lt;code&gt;'display: block'&lt;/code&gt; 으로 설정하여 자식 요소와 상호 작용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="f27417c0747c77a446165a6754921ffe06e5f8bc" translate="yes" xml:space="preserve">
          <source>In the example below, we wrote the following code in our test file:</source>
          <target state="translated">아래 예제에서 테스트 파일에 다음 코드를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="2c3fd6d848f681a8962c6e80e0b5e298a6910b03" translate="yes" xml:space="preserve">
          <source>In the failing test, the first label was indeed found correctly:</source>
          <target state="translated">실패한 테스트에서 첫 번째 레이블이 실제로 올바르게 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="dc4f496da8638b96d4ce34bbfb37866667239e3a" translate="yes" xml:space="preserve">
          <source>In the future we &lt;strong&gt;do&lt;/strong&gt; have plans to release back end adapters for other languages.</source>
          <target state="translated">앞으로 우리는 &lt;strong&gt;어떻게&lt;/strong&gt; 다른 언어에 대한 백엔드 어댑터를 출시 할 계획을 가지고있다.</target>
        </trans-unit>
        <trans-unit id="9f17a7e89132ce690ba65f235d11f373c553da68" translate="yes" xml:space="preserve">
          <source>In the meantime, you can use the experimental &lt;a href=&quot;https://github.com/Bkucera/cypress-plugin-tab&quot;&gt;cypress-plugin-tab&lt;/a&gt; and can thumbs up &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/299&quot;&gt;this issue&lt;/a&gt;.</source>
          <target state="translated">그 동안 실험적인 &lt;a href=&quot;https://github.com/Bkucera/cypress-plugin-tab&quot;&gt;cypress-plugin-tab&lt;/a&gt; 을 사용 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/299&quot;&gt;하여이 문제를 해결할&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2aff2b7ccdcec5e32c4a2e7b02e2db1586ac8631" translate="yes" xml:space="preserve">
          <source>In the plugins file, you can filter the list of browsers passed inside the &lt;code&gt;config&lt;/code&gt; object and return the list of browsers you want available for selection during &lt;code&gt;cypress open&lt;/code&gt;.</source>
          <target state="translated">플러그인 파일에서 &lt;code&gt;config&lt;/code&gt; 객체 내부에 전달 된 브라우저 목록을 필터링하고 &lt;code&gt;cypress open&lt;/code&gt; 동안 선택할 수있는 브라우저 목록을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ec7dc43a85ae43215bb3280a0f9cc20341b1b44" translate="yes" xml:space="preserve">
          <source>In the reporter, suites that are pending or contain only pending tests have the blue &amp;ldquo;pending&amp;rdquo; indicator on the left instead of the white &amp;ldquo;processing&amp;rdquo; indicator.</source>
          <target state="translated">리포터에서 보류 중이거나 보류중인 테스트 만 포함 된 제품군에는 흰색 &quot;처리 중&quot;표시기 대신 왼쪽에 파란색 &quot;보류 중&quot;표시기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a69eccd9bb40f73f185ff0c943557c487d55274e" translate="yes" xml:space="preserve">
          <source>In this example let&amp;rsquo;s assume you visit your website and the content will be different based on which A/B campaign your server decides to send. Perhaps it is based on geo-location, IP address, time of day, locale, or other factors that are difficult to control. How can you write tests in this manner?</source>
          <target state="translated">이 예에서는 웹 사이트를 방문하고 서버가 전송하기로 결정한 A / B 캠페인에 따라 내용이 다르다고 가정합니다. 아마도 지리적 위치, IP 주소, 시간, 로케일 또는 제어하기 어려운 다른 요소를 기반으로합니다. 이 방법으로 시험을 어떻게 작성할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="4ea8c3945e2f52e1de5bdf1d7b536abba51eb026" translate="yes" xml:space="preserve">
          <source>In this example we have a little text input field and we invoke an async action which will disable this input field.</source>
          <target state="translated">이 예제에서는 작은 텍스트 입력 필드가 있고이 입력 필드를 비활성화하는 비동기 작업을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="654e84b325996c6895471a04a6f7915066a8ecd3" translate="yes" xml:space="preserve">
          <source>In this example we use &lt;a href=&quot;and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; which is identical to &lt;code&gt;.should()&lt;/code&gt;.</source>
          <target state="translated">이 예에서는 &lt;code&gt;.should()&lt;/code&gt; 동일한 &lt;a href=&quot;and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="e416902b989d2600c051c0e9f8ab3e2f63b31266" translate="yes" xml:space="preserve">
          <source>In this example, a single machine runs a job named &lt;code&gt;1x-electron&lt;/code&gt;, defined in the project&amp;rsquo;s &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/circle.yml&quot;&gt;circle.yml&lt;/a&gt; file. Cypress runs all 19 spec files one by one alphabetically in this job. It takes &lt;strong&gt;1:51&lt;/strong&gt; to complete all of the tests.</source>
          <target state="translated">이 예제에서 단일 시스템은 프로젝트의 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/circle.yml&quot;&gt;circle.yml&lt;/a&gt; 파일에 정의 된 &lt;code&gt;1x-electron&lt;/code&gt; 이라는 작업을 실행 합니다. Cypress는이 작업에서 19 개 사양 파일을 모두 알파벳 순서대로 하나씩 실행합니다. 모든 테스트를 완료하려면 &lt;strong&gt;1:51&lt;/strong&gt; 이 필요 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2643a67dae18365b8b6d2a95e30a99ef71ff487c" translate="yes" xml:space="preserve">
          <source>In this example, imagine there is a clock in your app showing the current time. This can cause screenshots to be non-deterministic, which could create false negatives when screenshot diffing. You can use &lt;code&gt;onBeforeScreenshot&lt;/code&gt; to hide the clock and then show it again with &lt;code&gt;onAfterScreenshot&lt;/code&gt;.</source>
          <target state="translated">이 예에서는 앱에 현재 시간을 보여주는 시계가 있다고 가정합니다. 이로 인해 스크린 샷이 결정적이지 않게되어 스크린 샷 디핑시 잘못된 부정이 발생할 수 있습니다. &lt;code&gt;onBeforeScreenshot&lt;/code&gt; 을 사용 하여 시계를 숨기고 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 과 함께 다시 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a07dd6b5d361acae3ffa1068fce4a9b7a33bb16e" translate="yes" xml:space="preserve">
          <source>In this example, let&amp;rsquo;s imagine you are running a bunch of tests and each time you load your application, it may show a &amp;ldquo;Welcome Wizard&amp;rdquo; modal.</source>
          <target state="translated">이 예제에서는 많은 테스트를 실행하고 애플리케이션을로드 할 때마다 &quot;시작 마법사&quot;모달이 표시 될 수 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="fafa4f19520320378cadbfdf56dbbc2434c0bc91" translate="yes" xml:space="preserve">
          <source>In this example, on first login our server sends us back a session cookie.</source>
          <target state="translated">이 예제에서 처음 로그인 할 때 서버는 세션 쿠키를 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="7210a6e4d1ffd24e18e8d24883b3b00e3ced26ae" translate="yes" xml:space="preserve">
          <source>In this example, on first login our server sends us back a session cookie. After invoking &lt;code&gt;cy.clearCookies()&lt;/code&gt; this clears the session cookie, and upon navigating to an unauthorized page, our server should have redirected us back to login.</source>
          <target state="translated">이 예제에서 처음 로그인 할 때 서버는 세션 쿠키를 다시 보냅니다. &lt;code&gt;cy.clearCookies()&lt;/code&gt; 를 호출 하면 세션 쿠키가 지워지고 승인되지 않은 페이지로 이동하면 서버가 다시 로그인하도록 리디렉션해야합니다.</target>
        </trans-unit>
        <trans-unit id="85c42c93845e2fef29497af7ebc2d6d884e3e475" translate="yes" xml:space="preserve">
          <source>In this example, on first login, our server sends us back a session cookie.</source>
          <target state="translated">이 예에서, 처음 로그인 할 때 서버는 세션 쿠키를 다시 보냅니다.</target>
        </trans-unit>
        <trans-unit id="799dbbc93386c9ff6001443b5847cefadcb8013d" translate="yes" xml:space="preserve">
          <source>In this example, on first login, our server sends us back a session cookie. After invoking &lt;code&gt;cy.clearCookie('session_id')&lt;/code&gt;, this clears the session cookie. Then upon navigating to an unauthorized page, we asset that our server has redirected us back to login.</source>
          <target state="translated">이 예에서, 처음 로그인 할 때 서버는 세션 쿠키를 다시 보냅니다. &lt;code&gt;cy.clearCookie('session_id')&lt;/code&gt; 를 호출 한 후 세션 쿠키가 지워집니다. 그런 다음 승인되지 않은 페이지로 이동하면 서버가 다시 로그인하도록 리디렉션했다고 자산을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7297a60e52bc9bb948168460d36d99e4b7589f7e" translate="yes" xml:space="preserve">
          <source>In this example, our matching requests will be delayed 1000ms and have a status of &lt;code&gt;422&lt;/code&gt;, but its &lt;code&gt;response&lt;/code&gt; will be what was set in &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 예에서 일치하는 요청은 1000ms 지연되고 상태는 &lt;code&gt;422&lt;/code&gt; 이지만 &lt;code&gt;response&lt;/code&gt; 은 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 에 설정된 것입니다 .</target>
        </trans-unit>
        <trans-unit id="bf08c406fc81bfa00e9fdfaffe9c326c6d728148" translate="yes" xml:space="preserve">
          <source>In this example, there are many possible sources of failure. In most testing tools, if our request failed to go out, we would normally only ever get an error once we attempt to find the results in the DOM and see that there is no matching element. This is problematic because it&amp;rsquo;s unknown &lt;em&gt;why&lt;/em&gt; the results failed to be displayed. Was there a problem with our rendering code? Did we modify or change an attribute such as an &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; on an element? Perhaps our server sent us different Book items.</source>
          <target state="translated">이 예에는 가능한 많은 실패 원인이 있습니다. 대부분의 테스트 도구에서 요청이 실패한 경우 DOM에서 결과를 찾고 일치하는 요소가없는 경우 오류가 발생합니다. 결과가 표시되지 않은 &lt;em&gt;이유를&lt;/em&gt; 알 수 없기 때문에 문제가 됩니다. 렌더링 코드에 문제가 있습니까? 요소 의 &lt;code&gt;id&lt;/code&gt; 또는 &lt;code&gt;class&lt;/code&gt; 와 같은 속성을 수정하거나 변경 했습니까 ? 서버에서 다른 도서 항목을 보냈을 것입니다.</target>
        </trans-unit>
        <trans-unit id="26c579e70948f3a1f956cb155892f61465c6d265" translate="yes" xml:space="preserve">
          <source>In this guide we will lay out what some of the trade-offs are - and specifically how you can work around them.</source>
          <target state="translated">이 안내서에서는 일부 장단점이 무엇인지, 특히 어떻게 해결할 수 있는지를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a3303302589adc4ad15584529c87e66119817327" translate="yes" xml:space="preserve">
          <source>In this situation, not only did we wait a long period of time, but when the &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; element was eventually shown it&amp;rsquo;s likely caused an error downstream on other commands.</source>
          <target state="translated">이 상황에서 오랜 시간을 &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; 뿐만 아니라 &amp;lt;#wizard&amp;gt; 요소가 표시되면 다른 명령에서 다운 스트림 오류가 발생했을 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4202b0f92e36d449c7b45c72de6f38215f13650" translate="yes" xml:space="preserve">
          <source>In this situation, you want to close the wizard when it is present and ignore it if it is not.</source>
          <target state="translated">이 상황에서는 마법사가있는 경우 마법사를 닫고없는 경우 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="3c09ca3ad405df1d96dace4aa01304bfb583b1eb" translate="yes" xml:space="preserve">
          <source>In version &lt;a href=&quot;changelog&quot;&gt;&lt;code&gt;0.20.0&lt;/code&gt;&lt;/a&gt;, we removed the commands for adding custom commands and replaced them with, what we believe to be, a simpler interface.</source>
          <target state="translated">&lt;a href=&quot;changelog&quot;&gt; &lt;code&gt;0.20.0&lt;/code&gt; &lt;/a&gt; 버전에서는 사용자 정의 명령을 추가하는 명령을 제거하고 더 단순한 인터페이스로 대체했습니다.</target>
        </trans-unit>
        <trans-unit id="674a03f401da3ae13913196cc8830c75d7101199" translate="yes" xml:space="preserve">
          <source>In versions before &lt;a href=&quot;changelog&quot;&gt;&lt;code&gt;0.20.0&lt;/code&gt;&lt;/a&gt; of Cypress we automatically detected this and forced the &lt;code&gt;cy&lt;/code&gt; commands to be returned. To make things less magical and clearer, we are now throwing an error.</source>
          <target state="translated">Cypress &lt;a href=&quot;changelog&quot;&gt; &lt;code&gt;0.20.0&lt;/code&gt; &lt;/a&gt; 이전 버전에서는 이를 자동으로 감지하여 &lt;code&gt;cy&lt;/code&gt; 명령이 반환되도록했습니다. 일을 덜 마술적이고 명확하게하기 위해, 우리는 이제 오류를 던지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd7419a89ff7022ec510bff41c55069b8119c312" translate="yes" xml:space="preserve">
          <source>In very rare cases you might want to install the pre-release version of Cypress to verify a fix from the &lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt; branch, that has not been published yet.</source>
          <target state="translated">매우 드문 경우에 아직 공개되지 않은 &lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt; &lt;code&gt;develop&lt;/code&gt; &lt;/a&gt; 브랜치 에서 수정 사항을 검증하기 위해 시험판 버전의 Cypress를 설치하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0163ac93d42d63bd37548aa08e795fe9630f509a" translate="yes" xml:space="preserve">
          <source>In your application code, you set &lt;code&gt;cookies&lt;/code&gt; and store a session on the browser. Now let&amp;rsquo;s imagine you have a single &lt;code&gt;insecure&lt;/code&gt; link (or JavaScript redirect) in your application code.</source>
          <target state="translated">애플리케이션 코드에서 &lt;code&gt;cookies&lt;/code&gt; 를 설정 하고 브라우저에 세션을 저장합니다. 이제 애플리케이션 코드에 하나의 &lt;code&gt;insecure&lt;/code&gt; 링크 (또는 JavaScript 리디렉션) 가 있다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="50a3e186589c6f6b457bc1a4566cf2eda5511e90" translate="yes" xml:space="preserve">
          <source>In your server, insert another middleware from &lt;code&gt;@cypress/code-coverage&lt;/code&gt;. If you use an Express server, include &lt;code&gt;middleware/express&lt;/code&gt;:</source>
          <target state="translated">서버에서 &lt;code&gt;@cypress/code-coverage&lt;/code&gt; 다른 미들웨어를 삽입하십시오 . Express 서버를 사용하는 경우 &lt;code&gt;middleware/express&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b70ff70ff7c5d78a34d4e32b3bf2a2948bd6297" translate="yes" xml:space="preserve">
          <source>Include the port other than &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;80&lt;/code&gt; 및 &lt;code&gt;443&lt;/code&gt; 이외의 포트 포함</target>
        </trans-unit>
        <trans-unit id="7ff904b2e78fa3e369d1cc645a00ef32f2b6d10b" translate="yes" xml:space="preserve">
          <source>Incorrect usage of --ci-build-id flag</source>
          <target state="translated">--ci-build-id 플래그의 잘못된 사용법</target>
        </trans-unit>
        <trans-unit id="eed10255d07b47a63a72e87b88c1d7f2895705ab" translate="yes" xml:space="preserve">
          <source>Incorrect usage of &lt;code&gt;--ci-build-id&lt;/code&gt; flag</source>
          <target state="translated">&lt;code&gt;--ci-build-id&lt;/code&gt; 플래그 의 잘못된 사용법</target>
        </trans-unit>
        <trans-unit id="2934b39a8c2dae9682547a1c6726dd6892991929" translate="yes" xml:space="preserve">
          <source>Incorrectly handling query params on redirects fixed.</source>
          <target state="translated">리디렉션에서 쿼리 매개 변수를 잘못 처리하는 문제가 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="7f73e5c2402c202a68a0e14f165f5e8af1d21f98" translate="yes" xml:space="preserve">
          <source>Increased &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; timeout from &lt;strong&gt;15s&lt;/strong&gt; to &lt;strong&gt;20s&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 시간 초과가 &lt;strong&gt;15 초&lt;/strong&gt; 에서 &lt;strong&gt;20 &lt;/strong&gt;초로 증가 했습니다 .</target>
        </trans-unit>
        <trans-unit id="73b2ebc8af102151cec09c774a4534a9a37f10b7" translate="yes" xml:space="preserve">
          <source>Increased &lt;code&gt;visitTimeout&lt;/code&gt; from &lt;code&gt;20s&lt;/code&gt; to &lt;code&gt;30s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visitTimeout&lt;/code&gt; 을 &lt;code&gt;20s&lt;/code&gt; &lt;code&gt;30s&lt;/code&gt; 에서 30 초로 늘 렸습니다 .</target>
        </trans-unit>
        <trans-unit id="60d8ca1d362434d7d992fe5d5e9bf7b5c74aa4be" translate="yes" xml:space="preserve">
          <source>Increased max viewport size to &lt;code&gt;4000&lt;/code&gt;</source>
          <target state="translated">최대 뷰포트 크기를 &lt;code&gt;4000&lt;/code&gt; 으로 늘 렸습니다.</target>
        </trans-unit>
        <trans-unit id="3b4c8073854add7c1e8d30cfbcc5c0e6d772861a" translate="yes" xml:space="preserve">
          <source>Increased timeout for browser to make a connection when running during &lt;code&gt;cypress run&lt;/code&gt; from 10 seconds to 30 seconds.</source>
          <target state="translated">Cypress 실행 중에 &lt;code&gt;cypress run&lt;/code&gt; 때 브라우저가 연결하는 시간 초과 가 10 초에서 30 초로 증가했습니다.</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="9dc579b03a1575bb8ca231f018fa24b7b9a268c7" translate="yes" xml:space="preserve">
          <source>Index From End</source>
          <target state="translated">끝에서 색인</target>
        </trans-unit>
        <trans-unit id="ff434e2f139c0722f744e0fe3834ea8cc93ed511" translate="yes" xml:space="preserve">
          <source>Index, name of property or name of nested properties (with dot notation) to get.</source>
          <target state="translated">가져올 인덱스, 속성 이름 또는 중첩 속성 이름 (점 표기법 포함)입니다.</target>
        </trans-unit>
        <trans-unit id="d4ee2e4bfdb02384be06a48400b72c41760759b0" translate="yes" xml:space="preserve">
          <source>Indexing the web</source>
          <target state="translated">웹 색인 생성</target>
        </trans-unit>
        <trans-unit id="dc9fedd2d661f73b8ab1a9e196c1bcc8275bbee9" translate="yes" xml:space="preserve">
          <source>Initially you may be tempted to use &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or use Cypress to traverse to the 3rd party login window.</source>
          <target state="translated">처음에는 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 사용 하거나 Cypress를 사용하여 타사 로그인 창으로 이동 하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a8cd3a01c2a7003359df7223ec6ad3c420afb36" translate="yes" xml:space="preserve">
          <source>Injects &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/domain&quot;&gt;&lt;code&gt;document.domain&lt;/code&gt;&lt;/a&gt; into &lt;code&gt;text/html&lt;/code&gt; pages.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/domain&quot;&gt; &lt;code&gt;document.domain&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;text/html&lt;/code&gt; 페이지에 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="2097134c11ba44805655781d022efeab896310da" translate="yes" xml:space="preserve">
          <source>Inlined Google Fonts into &lt;code&gt;vendor.css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vendor.css&lt;/code&gt; 에 인라인 Google 글꼴이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a59f621afdf9fe7451526c2bf4126b406bd45519" translate="yes" xml:space="preserve">
          <source>Input ranges are now more easily testable using the new &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. See our &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;new recipe&lt;/a&gt; for details on how. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/287&quot;&gt;#287&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 입력 범위를보다 쉽게 ​​테스트 할 수 있습니다 . &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;방법에&lt;/a&gt; 대한 자세한 내용은 새로운 레시피 를 참조하십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/287&quot;&gt;# 287&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65a38d0cf0c91f4dfc5a43b6d5241eda136a85cd" translate="yes" xml:space="preserve">
          <source>Input/Textarea</source>
          <target state="translated">Input/Textarea</target>
        </trans-unit>
        <trans-unit id="f62457422b43396556bf83cc4805844e73d8e90a" translate="yes" xml:space="preserve">
          <source>Insecure Content</source>
          <target state="translated">안전하지 않은 콘텐츠</target>
        </trans-unit>
        <trans-unit id="6dd0dc1ea10721e352e9a173ee7ca71cf27090fa" translate="yes" xml:space="preserve">
          <source>Inserts character to the right of the cursor</source>
          <target state="translated">커서 오른쪽에 문자 삽입</target>
        </trans-unit>
        <trans-unit id="7574261097e865c28a259c681701fd0a35918d87" translate="yes" xml:space="preserve">
          <source>Inside of a callback passed to &lt;code&gt;req.reply()&lt;/code&gt;, you can access the destination server&amp;rsquo;s real response.</source>
          <target state="translated">&lt;code&gt;req.reply()&lt;/code&gt; 전달 된 콜백 내 에서 대상 서버의 실제 응답에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="815f7d20ba4f5e3c004cb8cbfa36da5dd979b66a" translate="yes" xml:space="preserve">
          <source>Inside of this file, you will export a function. Cypress will call this function, pass you the project&amp;rsquo;s configuration, and enable you to bind to the events exposed.</source>
          <target state="translated">이 파일 내에서 함수를 내 보냅니다. Cypress는이 기능을 호출하고 프로젝트 구성을 전달하며 노출 된 이벤트에 바인딩 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="24d6c2f6a92b25dfecd8ca5c21464abceb4d09f6" translate="yes" xml:space="preserve">
          <source>Inside the browser</source>
          <target state="translated">브라우저 내부</target>
        </trans-unit>
        <trans-unit id="7bdc4cee10367f81fa94c2dd050062b1c1da3d71" translate="yes" xml:space="preserve">
          <source>Install a version different than the default npm package.</source>
          <target state="translated">기본 npm 패키지와 다른 버전을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="c9c1f3821545c8e75ca62658cd68f8d6ebd0eb96" translate="yes" xml:space="preserve">
          <source>Install binary</source>
          <target state="translated">바이너리 설치</target>
        </trans-unit>
        <trans-unit id="6420671ac39b9dc0aa1e29413441339c84e8453d" translate="yes" xml:space="preserve">
          <source>Install pre-release version</source>
          <target state="translated">시험판 버전 설치</target>
        </trans-unit>
        <trans-unit id="ac03b5988480f0cf04e149075af86a6e1fe7f84c" translate="yes" xml:space="preserve">
          <source>Install the Cypress GitHub app</source>
          <target state="translated">Cypress GitHub 앱 설치</target>
        </trans-unit>
        <trans-unit id="9a539696de966a99368f5d0fe4395d7a76ef9f7b" translate="yes" xml:space="preserve">
          <source>Install the plugin</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="3f3bfafdc36e0eb870cdb18cc9c59efb1ce7f065" translate="yes" xml:space="preserve">
          <source>Install via organization integration settings</source>
          <target state="translated">조직 통합 설정을 통해 설치</target>
        </trans-unit>
        <trans-unit id="a7d37c03d6b82b4cf9c24a59b72de2aa85ff8fa1" translate="yes" xml:space="preserve">
          <source>Install via project settings</source>
          <target state="translated">프로젝트 설정을 통해 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="859ed9192b8b065cfabff634c98cfe3e2f2e507a" translate="yes" xml:space="preserve">
          <source>Installing Cypress</source>
          <target state="translated">Cypress 설치</target>
        </trans-unit>
        <trans-unit id="4a1047bfa9593c168e832a865502e77d69a31196" translate="yes" xml:space="preserve">
          <source>Installing Cypress via &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;&lt;code&gt;yarn&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://yarnpkg.com/&quot;&gt; &lt;code&gt;yarn&lt;/code&gt; &lt;/a&gt; 를 통한 Cypress 설치 :</target>
        </trans-unit>
        <trans-unit id="4fc87b674ce76b66283308c75af1a20c59064192" translate="yes" xml:space="preserve">
          <source>Installing Cypress via &lt;code&gt;npm&lt;/code&gt; is easy:</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 을 통해 Cypress를 설치하는 것은 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="bad94515f6d136d2603333a9eb3cf4a918bebd46" translate="yes" xml:space="preserve">
          <source>Installing plugins</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="75ee6728c4c28a14541dea084abd70aef23fc383" translate="yes" xml:space="preserve">
          <source>Instantiate a new bluebird promise.</source>
          <target state="translated">새로운 블루 버드 약속을 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="1ea2f9a830363440bf8fcb6fb1c6fdcea44f8cb4" translate="yes" xml:space="preserve">
          <source>Instead of hard coding external documentation, we now link everything through a redirection portal. This will prevent any links / documentation from ever breaking due to reorganization or renaming.</source>
          <target state="translated">외부 문서를 하드 코딩하는 대신 이제 리디렉션 포털을 통해 모든 것을 연결합니다. 이렇게하면 재구성 또는 이름 변경으로 인해 링크 / 문서가 손상되는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed3418d486f2d3efc9dfa13f1a5241e231595548" translate="yes" xml:space="preserve">
          <source>Instead of hard coding it into your run command like this:</source>
          <target state="translated">다음과 같이 실행 명령으로 하드 코딩하는 대신 :</target>
        </trans-unit>
        <trans-unit id="1f563a271ac755feeb3fbff53c9077285499286a" translate="yes" xml:space="preserve">
          <source>Instead of hard coding this in your tests:</source>
          <target state="translated">테스트에서 이것을 하드 코딩하는 대신 :</target>
        </trans-unit>
        <trans-unit id="178b11451aece3bb113e51341d1126d93801be03" translate="yes" xml:space="preserve">
          <source>Instead of hardcoding the URL you can use the &lt;code&gt;baseUrl&lt;/code&gt; of the &lt;a href=&quot;../../guides/references/configuration&quot;&gt;Cypress configuration&lt;/a&gt;.</source>
          <target state="translated">URL을 하드 코딩하는 대신 &lt;a href=&quot;../../guides/references/configuration&quot;&gt;Cypress 구성&lt;/a&gt; 의 &lt;code&gt;baseUrl&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5ffae783d76ca79da46abc91ce1a00297b625cb" translate="yes" xml:space="preserve">
          <source>Instead of hardcoding the URL you can use the &lt;code&gt;baseUrl&lt;/code&gt; of the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;Cypress configuration&lt;/a&gt;.</source>
          <target state="translated">URL을 하드 코딩하는 대신 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;Cypress 구성&lt;/a&gt; 의 &lt;code&gt;baseUrl&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b582649a31b9537e7a392d9367d7850a86e5085" translate="yes" xml:space="preserve">
          <source>Instead of having your test code bypass OAuth, you could also ask your server for help. Perhaps all an OAuth token does is generate a user in your database. Oftentimes OAuth is only useful initially and your server establishes its own session with the client. If that is the case, just use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to get the session directly from your server and bypass the provider altogether.</source>
          <target state="translated">테스트 코드가 OAuth를 우회하도록하는 대신 서버에 도움을 요청할 수도 있습니다. 아마도 모든 OAuth 토큰은 데이터베이스에서 사용자를 생성하는 것입니다. 종종 OAuth는 처음에만 유용하며 서버는 클라이언트와의 자체 세션을 설정합니다. 이 경우 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 하여 서버에서 직접 세션을 가져 공급자를 모두 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="629bec7aac0e872cbe7d626036314386f3323c28" translate="yes" xml:space="preserve">
          <source>Instead of just executing a system command, you may want more flexibility and could expose a series of routes only when running in a test environment.</source>
          <target state="translated">시스템 명령을 실행하는 대신 테스트 환경에서 실행할 때만 유연성을 높이고 일련의 경로를 노출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f01e5be95b1bf47441299b767044f92ed41bd546" translate="yes" xml:space="preserve">
          <source>Instead of seeing &lt;code&gt;Script error.&lt;/code&gt; - cross origins script errors are now handled specially and we throw a very long and exciting error explaining what just happened. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/241&quot;&gt;#241&lt;/a&gt;.</source>
          <target state="translated">대신 보는 &lt;code&gt;Script error.&lt;/code&gt; -교차 출처 스크립트 오류는 이제 특별하게 처리되며 방금 발생한 일을 설명하는 매우 길고 흥미로운 오류가 발생합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/241&quot;&gt;# 241&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d18ac78a128a806e1c302d719659a6cc0174ffdf" translate="yes" xml:space="preserve">
          <source>Instead of setting environment variables in a file, you can use plugins to dynamically set them with Node code. This enables you to do things like use &lt;code&gt;fs&lt;/code&gt; and read off configuration values and dynamically change them.</source>
          <target state="translated">파일에서 환경 변수를 설정하는 대신 플러그인을 사용하여 노드 코드로 동적으로 변수를 설정할 수 있습니다. 이를 통해 &lt;code&gt;fs&lt;/code&gt; 사용 및 구성 값 읽기 및 동적 변경과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ebf20150edf99407e68b3406dd94d76e87f380" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;npx instrument&lt;/code&gt; command, we can use &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; to instrument the code as part of its transpilation. Add this plugin to the &lt;code&gt;.babelrc&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;npx instrument&lt;/code&gt; 명령 을 사용하는 대신 &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; &lt;/a&gt; 을 사용하여 코드 변환의 일부로 코드를 계측 할 수 있습니다 . 이 플러그인을 &lt;code&gt;.babelrc&lt;/code&gt; 파일에 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="2998155e2741051ec0a7e752a6f926056b9ba0ea" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;this.*&lt;/code&gt; syntax, there is another way to access aliases.</source>
          <target state="translated">&lt;code&gt;this.*&lt;/code&gt; 구문 을 사용하는 대신 별명에 액세스하는 다른 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea08e736ffcfed67863099290e6d89016c3fff8b" translate="yes" xml:space="preserve">
          <source>Instead of waiting until commands resolve, commands are immediately inserted with a &lt;code&gt;pending&lt;/code&gt; status.</source>
          <target state="translated">명령이 해결 될 때까지 기다리지 않고 명령이 즉시 &lt;code&gt;pending&lt;/code&gt; 상태로 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec3730b710019e0d0b7125d426b50267f140b583" translate="yes" xml:space="preserve">
          <source>Instead of writing a response inline you can automatically connect a response with a &lt;a href=&quot;fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응답을 인라인으로 작성하는 대신 응답을 &lt;a href=&quot;fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 자동 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8e54126a8d91a8e59e34800c4f7893c875f3819" translate="yes" xml:space="preserve">
          <source>Instead, adding the &lt;code&gt;data-cy&lt;/code&gt; attribute to the element gives us a targeted selector that&amp;rsquo;s only used for testing.</source>
          <target state="translated">대신 &lt;code&gt;data-cy&lt;/code&gt; 속성을 요소에 추가하면 테스트에만 사용되는 대상 선택기가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="af3f0d790b3484834d544ee886d3c75f240f8b1f" translate="yes" xml:space="preserve">
          <source>Instead, all you need to test is that the &lt;code&gt;href&lt;/code&gt; property is correct!</source>
          <target state="translated">대신 &lt;code&gt;href&lt;/code&gt; 속성이 정확 하다는 것만 테스트하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="e28c659f1fc6fb8a50e8a542f95f7c0abd2f3060" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;a href=&quot;then&quot;&gt;&lt;code&gt;cy.then()&lt;/code&gt;&lt;/a&gt; callback to check the value.</source>
          <target state="translated">대신 &lt;a href=&quot;then&quot;&gt; &lt;code&gt;cy.then()&lt;/code&gt; &lt;/a&gt; 콜백을 사용 하여 값을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="74ef1173d7b9183cda0d76d8d9b9bfb65a5b1d48" translate="yes" xml:space="preserve">
          <source>Instead, you should build a docker container for your project&amp;rsquo;s version of cypress.</source>
          <target state="translated">대신, 프로젝트 버전의 cypress에 대한 도커 컨테이너를 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="139273c40f59c240e55fe300580a238e66c7d66c" translate="yes" xml:space="preserve">
          <source>Instrument Panel</source>
          <target state="translated">계기판</target>
        </trans-unit>
        <trans-unit id="30cce81e55c85561b3c24a6c6ea38eaef83e25d8" translate="yes" xml:space="preserve">
          <source>Instrumenting code</source>
          <target state="translated">계측 코드</target>
        </trans-unit>
        <trans-unit id="3f7f3bf0c28229b845074a2404d80beaf96ac5fc" translate="yes" xml:space="preserve">
          <source>Integrate Cypress into GitHub via &lt;a href=&quot;github-integration#Pull-request-comments&quot;&gt;pull requests&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;github-integration#Pull-request-comments&quot;&gt;풀 요청을&lt;/a&gt; 통해 Cypress를 GitHub에 통합</target>
        </trans-unit>
        <trans-unit id="8fefe595d387ac96a5a56e0b9a7d898d1d18a92e" translate="yes" xml:space="preserve">
          <source>Integrate with GitHub</source>
          <target state="translated">GitHub와 통합</target>
        </trans-unit>
        <trans-unit id="ce2d6691d9d9eb7e24fc3b0d2685f541b7efd5df" translate="yes" xml:space="preserve">
          <source>Integrate your Cypress tests with your GitHub workflow via commit &lt;a href=&quot;github-integration#Status-checks&quot;&gt;status checks&lt;/a&gt;</source>
          <target state="translated">커밋 &lt;a href=&quot;github-integration#Status-checks&quot;&gt;상태 확인을&lt;/a&gt; 통해 Cypress 테스트를 GitHub 워크 플로우와 통합</target>
        </trans-unit>
        <trans-unit id="f16b98b1e2980b72ddcf6467c1ba1c24a6704e6e" translate="yes" xml:space="preserve">
          <source>Integrates Allure reporter with Cypress. Command logging and screenshot attachment out of the box.</source>
          <target state="translated">Allure 리포터를 Cypress와 통합합니다. 즉시 사용 가능한 명령 로깅 및 스크린 샷 첨부.</target>
        </trans-unit>
        <trans-unit id="1a9b9bfc859afc93862f3511b4c483f1d2a686aa" translate="yes" xml:space="preserve">
          <source>Integration and Extensions</source>
          <target state="translated">통합 및 확장</target>
        </trans-unit>
        <trans-unit id="8391e14b3c43387f52504bec0babee16188c1fe0" translate="yes" xml:space="preserve">
          <source>Integration tests</source>
          <target state="translated">통합 테스트</target>
        </trans-unit>
        <trans-unit id="1f3bca9783a181f0387ffd5b50900c7ff7893e6c" translate="yes" xml:space="preserve">
          <source>Integration with open source service for visual testing and managing its results.</source>
          <target state="translated">시각적 테스트 및 결과 관리를 위해 오픈 소스 서비스와 통합합니다.</target>
        </trans-unit>
        <trans-unit id="7f5a9c0f6a734e94e85a46d82a89f815b9c96120" translate="yes" xml:space="preserve">
          <source>IntelliSense is available for Cypress while editing your &lt;code&gt;cypress.json&lt;/code&gt; file. &lt;a href=&quot;../tooling/intelligent-code-completion&quot;&gt;Learn how to set up Intelligent Code Completion.&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 파일 을 편집하는 동안 Cypress에 IntelliSense를 사용할 수 있습니다 . &lt;a href=&quot;../tooling/intelligent-code-completion&quot;&gt;지능형 코드 완성을 설정하는 방법을 배웁니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b337d1f12d5e5b495cd81755b7b5f3d5998afe0" translate="yes" xml:space="preserve">
          <source>IntelliSense is available for Cypress. It offers intelligent code suggestions directly in your IDE while writing tests. A typical IntelliSense popup shows command definition, a code example and a link to the full documentation page.</source>
          <target state="translated">Cypress에 IntelliSense를 사용할 수 있습니다. 테스트를 작성하는 동안 IDE에서 직접 지능형 코드 제안을 제공합니다. 일반적인 IntelliSense 팝업에는 명령 정의, 코드 예제 및 전체 설명서 페이지에 대한 링크가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f18cfc36f4f9f94cbd1fb8f20de9b282adaeb658" translate="yes" xml:space="preserve">
          <source>Intelligent Code Completion</source>
          <target state="translated">지능형 코드 완성</target>
        </trans-unit>
        <trans-unit id="856a93b4361932980473a8fb3311b9ea2c301155" translate="yes" xml:space="preserve">
          <source>Intelligent code completion using JSON schemas is supported by default in &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; and &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;. All other editors will require extra configuration or plugins for JSON schema support.</source>
          <target state="translated">JSON 스키마를 사용한 지능형 코드 완성은 기본적으로 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; 및 &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt; 에서 지원됩니다 . 다른 모든 편집기에는 JSON 스키마 지원을위한 추가 구성 또는 플러그인이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8f38d1ecc140acef2d9f5582d2d1cb48e2c05275" translate="yes" xml:space="preserve">
          <source>Intelligently handle defaultPrevented events from descendants.</source>
          <target state="translated">자손의 defaultPrevented 이벤트를 지능적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c5684bf0251f67aed31969310a29107e69d8bf67" translate="yes" xml:space="preserve">
          <source>Interact with a range input (slider)</source>
          <target state="translated">범위 입력 (슬라이더)과 상호 작용</target>
        </trans-unit>
        <trans-unit id="7bb43fc0728072e2523ce8de6dd4b4325b0d3d60" translate="yes" xml:space="preserve">
          <source>Interact with that element.</source>
          <target state="translated">해당 요소와 상호 작용하십시오.</target>
        </trans-unit>
        <trans-unit id="5533fd2ae269ffec5ff40e8ec9c81ff86a38ca11" translate="yes" xml:space="preserve">
          <source>Interacting With Elements</source>
          <target state="translated">요소와 상호 작용</target>
        </trans-unit>
        <trans-unit id="7a7209ae3fe1d1613751f606535395a7b5bfede0" translate="yes" xml:space="preserve">
          <source>Interacting with Elements</source>
          <target state="translated">요소와 상호 작용</target>
        </trans-unit>
        <trans-unit id="9fddd7885ecc9e94bca6c0627c009d2153cf69bc" translate="yes" xml:space="preserve">
          <source>Intercepting a request</source>
          <target state="translated">요청 가로 채기</target>
        </trans-unit>
        <trans-unit id="68ba181eb3c6f4a2c8f320938ad974253d586841" translate="yes" xml:space="preserve">
          <source>Intercepting a response</source>
          <target state="translated">응답 가로 채기</target>
        </trans-unit>
        <trans-unit id="7dccb7d7f013ef6ffc105874dfb5ced54d432c57" translate="yes" xml:space="preserve">
          <source>Interested in the best practices for selecting elements? &lt;a href=&quot;../references/best-practices#Selecting-Elements&quot;&gt;Read here&lt;/a&gt;.</source>
          <target state="translated">요소를 선택하는 모범 사례에 관심이 있습니까? &lt;a href=&quot;../references/best-practices#Selecting-Elements&quot;&gt;여기를 읽으십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="921ffd2755b90606f913c1460d96bcf0d244ec77" translate="yes" xml:space="preserve">
          <source>Internal API changes for &lt;code&gt;$Commands&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$Commands&lt;/code&gt; 내부 API 변경 사항 .</target>
        </trans-unit>
        <trans-unit id="52f21819b854a9784c2db643b1522586ed08f07d" translate="yes" xml:space="preserve">
          <source>Internal changes to our API structure and communication. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1170&quot;&gt;#1170&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1413&quot;&gt;#1413&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1415&quot;&gt;#1415&lt;/a&gt;.</source>
          <target state="translated">API 구조 및 커뮤니케이션에 대한 내부 변경. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1170&quot;&gt;# 1170&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1413&quot;&gt;# 1413&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1415&quot;&gt;# 1415&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bf544a33742e82395b839d9d4a981bc5fc63018" translate="yes" xml:space="preserve">
          <source>Internal refactor / improvements to support long lived runnable objects to work with page events.</source>
          <target state="translated">페이지 이벤트를 처리하기 위해 오래 실행 가능한 실행 가능 오브젝트를 지원하기위한 내부 리팩터링 / 개선.</target>
        </trans-unit>
        <trans-unit id="157197151b0a4d0adfba14ac302478ff89daeb9c" translate="yes" xml:space="preserve">
          <source>Internal refactoring to &lt;code&gt;Cypress.Mouse&lt;/code&gt;.</source>
          <target state="translated">내부 리팩토링 &lt;code&gt;Cypress.Mouse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b5a7c797bec5b174af546a6e927e3044e5694b8" translate="yes" xml:space="preserve">
          <source>Internal routing errors in Cypress are now gracefully handled with &lt;code&gt;x-cypress-error&lt;/code&gt; and &lt;code&gt;x-cypress-stack&lt;/code&gt; set on response headers.</source>
          <target state="translated">Cypress의 내부 라우팅 오류는 이제 응답 헤더에 설정된 &lt;code&gt;x-cypress-error&lt;/code&gt; 및 &lt;code&gt;x-cypress-stack&lt;/code&gt; 으로 정상적으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="c72e6571cd87805043d6ff824199fef507cb65cb" translate="yes" xml:space="preserve">
          <source>Internally Cypress does account for this, and will polyfill the blur events when necessary to replicate what the browser does. Unfortunately the browser will still behave differently when not in focus - for instance it may throttle async events. Your best bet here is to keep Cypress focused when working on a test.</source>
          <target state="translated">내부적으로 Cypress는이를 설명하며 브라우저가 수행하는 작업을 복제하는 데 필요할 때 흐림 이벤트를 polyfill합니다. 불행히도 브라우저는 초점이 맞지 않을 때 여전히 다르게 작동합니다. 예를 들어 브라우저가 비동기 이벤트를 조절할 수 있습니다. 여기서 가장 좋은 방법은 테스트를 할 때 Cypress에 집중하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a272838493ed5297b778c148fbcb938ec5db8a46" translate="yes" xml:space="preserve">
          <source>Internally our built in commands make use of every single one of these combinations above.</source>
          <target state="translated">내부적으로 내장 명령은 위의 조합 중 하나를 모두 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0a6c0e39c71a508a816c659333b19d3aa2ca1aa5" translate="yes" xml:space="preserve">
          <source>Internally refactored Cypress for easier testability / debuggability.</source>
          <target state="translated">테스트 용이성 / 디버깅 성이 용이하도록 내부 리팩토링 된 Cypress</target>
        </trans-unit>
        <trans-unit id="ae1dabe147bee7e07cfaf98b6f39f019fd111f2b" translate="yes" xml:space="preserve">
          <source>Internally refactored how browsers are added and spawned in preparation of us adding cross browser support.</source>
          <target state="translated">크로스 브라우저 지원을 추가하기 위해 브라우저를 추가하고 생성하는 방법을 내부적으로 리팩터링했습니다.</target>
        </trans-unit>
        <trans-unit id="6d2bf3bf97d7110e76dbf631a8d5f08b70486dc2" translate="yes" xml:space="preserve">
          <source>Internally, Cypress has made a reference to the &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; collection returned as the alias &amp;ldquo;rows&amp;rdquo;. To reference these same &amp;ldquo;rows&amp;rdquo; later, you can use the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">내부적으로 Cypress는 별칭 &quot;행&quot;으로 반환 된 &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 컬렉션을 참조 했습니다. 나중에 동일한 &quot;행&quot;을 참조하기 위해 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d69183212fcfe1542f38a5df9e8d4a7011169e19" translate="yes" xml:space="preserve">
          <source>Introduced new &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 명령이 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="15570a42c8d0090306099d26d01331b13063fa9b" translate="yes" xml:space="preserve">
          <source>Introduced new &lt;strong&gt;command option&lt;/strong&gt;&lt;code&gt;length&lt;/code&gt; which cues Cypress into not resolving matched elements until their length matches the option provided.</source>
          <target state="translated">Cypress가 길이가 제공된 옵션과 일치 할 때까지 일치하는 요소를 해석하지 않도록 신호를주는 새로운 &lt;strong&gt;명령 옵션 &lt;/strong&gt; &lt;code&gt;length&lt;/code&gt; 를 도입 했습니다.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="1e3df84601bda6f6c3662c05c057adf074a426d2" translate="yes" xml:space="preserve">
          <source>Introduction to Cypress</source>
          <target state="translated">Cypress 소개</target>
        </trans-unit>
        <trans-unit id="19704f243c889fd8081b9ea58fe747cb415143c5" translate="yes" xml:space="preserve">
          <source>Invalid cookie values no longer crash Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/962&quot;&gt;#962&lt;/a&gt;.</source>
          <target state="translated">유효하지 않은 쿠키 값은 더 이상 Cypress와 충돌하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/962&quot;&gt;# 962&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2288ac5fc4461a2811be53687ea7cd7c43e275e4" translate="yes" xml:space="preserve">
          <source>Invalid username / password</source>
          <target state="translated">잘못된 사용자 이름 / 비밀번호</target>
        </trans-unit>
        <trans-unit id="ad3ad21f22a0dea7c53804a19001fb6e698cd76f" translate="yes" xml:space="preserve">
          <source>Invite &amp;lsquo;admin&amp;rsquo; to organization</source>
          <target state="translated">'관리자'를 조직에 초대</target>
        </trans-unit>
        <trans-unit id="36693165be36c67188bff1bff1bfc7701213a1d7" translate="yes" xml:space="preserve">
          <source>Invite &amp;lsquo;member&amp;rsquo; to organization</source>
          <target state="translated">'회원'을 조직에 초대</target>
        </trans-unit>
        <trans-unit id="347eb9ff3bad1a574d79ae444188fc379f78bf8e" translate="yes" xml:space="preserve">
          <source>Invite &amp;lsquo;owner&amp;rsquo; to organization</source>
          <target state="translated">'소유자'를 조직에 초대</target>
        </trans-unit>
        <trans-unit id="86ff18d2c897eb70e44accff7d9f889361c34d7e" translate="yes" xml:space="preserve">
          <source>Invite a user to an organization:</source>
          <target state="translated">사용자를 조직에 초대하십시오.</target>
        </trans-unit>
        <trans-unit id="69d42209324e467625ff0472353eddf0ba29aa27" translate="yes" xml:space="preserve">
          <source>Invite and edit user&amp;rsquo;s roles for organizations</source>
          <target state="translated">조직의 사용자 역할 초대 및 편집</target>
        </trans-unit>
        <trans-unit id="416bba0c81753e21fba73796c1fc9f7a549b9cd2" translate="yes" xml:space="preserve">
          <source>Invite users</source>
          <target state="translated">사용자 초대</target>
        </trans-unit>
        <trans-unit id="c65605adf5270f5065089b0189da542274d30db0" translate="yes" xml:space="preserve">
          <source>Invoke</source>
          <target state="translated">Invoke</target>
        </trans-unit>
        <trans-unit id="ec417f97085e4623c23f8655854d04156e0e11ff" translate="yes" xml:space="preserve">
          <source>Invoke a function on the previously yielded subject.</source>
          <target state="translated">이전에 생성 된 주제에 대해 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d315b3fdccae782b8f67272f62e777033d41fe07" translate="yes" xml:space="preserve">
          <source>Invoke the function on the subject in wrap and return the new value</source>
          <target state="translated">랩에서 주제에 대한 함수를 호출하고 새 값을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="a4b1f6caeb6dc4d8f76a066a34621313e6b8c42f" translate="yes" xml:space="preserve">
          <source>Invoking an async function</source>
          <target state="translated">비동기 함수 호출</target>
        </trans-unit>
        <trans-unit id="3fd34f6d72837602be97a0ae744b2653093c3973" translate="yes" xml:space="preserve">
          <source>Invoking it like this would error:</source>
          <target state="translated">다음과 같이 호출하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b6cf35572474cd34fdfc18029c9173661fc34e06" translate="yes" xml:space="preserve">
          <source>Is DOM</source>
          <target state="translated">DOM</target>
        </trans-unit>
        <trans-unit id="a9c48cbffd0926ca435f0a6aa07f5b44e0cb83d2" translate="yes" xml:space="preserve">
          <source>Is attached</source>
          <target state="translated">첨부</target>
        </trans-unit>
        <trans-unit id="1a5737d16c0caf17174bf8c64656e315fcf633f1" translate="yes" xml:space="preserve">
          <source>Is descendent</source>
          <target state="translated">후손</target>
        </trans-unit>
        <trans-unit id="302d3b31f903ddcac8adf13f2827d7a482164c73" translate="yes" xml:space="preserve">
          <source>Is detached</source>
          <target state="translated">분리</target>
        </trans-unit>
        <trans-unit id="5c3aa00cf387fd5b00fd2be49e286cfa6a922ead" translate="yes" xml:space="preserve">
          <source>Is document</source>
          <target state="translated">문서</target>
        </trans-unit>
        <trans-unit id="337b849276e69cb43521fdaea7db7d4271706083" translate="yes" xml:space="preserve">
          <source>Is element</source>
          <target state="translated">요소</target>
        </trans-unit>
        <trans-unit id="c5a816892ab8af8686fc83b9c6d7ff49932ec118" translate="yes" xml:space="preserve">
          <source>Is focusable</source>
          <target state="translated">집중 가능</target>
        </trans-unit>
        <trans-unit id="c513aca72b5565cd78d991c82deba5101d1d4c5e" translate="yes" xml:space="preserve">
          <source>Is focused</source>
          <target state="translated">집중</target>
        </trans-unit>
        <trans-unit id="92cbb18d46585cfcf3aac2bd9744763325b27bc7" translate="yes" xml:space="preserve">
          <source>Is hidden</source>
          <target state="translated">숨겨져 있습니다</target>
        </trans-unit>
        <trans-unit id="1cb26dc76ce6c121b781908083e74bc7caeb15a3" translate="yes" xml:space="preserve">
          <source>Is jQuery</source>
          <target state="translated">jQuery입니다</target>
        </trans-unit>
        <trans-unit id="0b4cab04a45465e47883d63fab5c59f92151ba1b" translate="yes" xml:space="preserve">
          <source>Is resetting the state necessary?</source>
          <target state="translated">상태를 재설정해야합니까?</target>
        </trans-unit>
        <trans-unit id="5d1d57e2ee232a5355d7315c07f0ca8742e6551c" translate="yes" xml:space="preserve">
          <source>Is scrollable</source>
          <target state="translated">스크롤 가능</target>
        </trans-unit>
        <trans-unit id="5ea8391c45995b583f6b1235a1326f8f1cc82faf" translate="yes" xml:space="preserve">
          <source>Is the element behind another element?</source>
          <target state="translated">요소가 다른 요소 뒤에 있습니까?</target>
        </trans-unit>
        <trans-unit id="5a7e766f4d95000632b60abba0b2c5c4cafc7af4" translate="yes" xml:space="preserve">
          <source>Is the element invisible?</source>
          <target state="translated">요소가 보이지 않습니까?</target>
        </trans-unit>
        <trans-unit id="00a5eb5be6d0e0275a142afb158897a4a831d272" translate="yes" xml:space="preserve">
          <source>Is this worth trying to replicate when you&amp;rsquo;re testing?</source>
          <target state="translated">테스트 할 때 복제하려고 노력할 가치가 있습니까?</target>
        </trans-unit>
        <trans-unit id="db711e8244acdbb422d0057f6b2e38460719d54c" translate="yes" xml:space="preserve">
          <source>Is visible</source>
          <target state="translated">보이는</target>
        </trans-unit>
        <trans-unit id="e1bd30fba2d2ceb9e89834c2084380287de0029e" translate="yes" xml:space="preserve">
          <source>Is window</source>
          <target state="translated">창</target>
        </trans-unit>
        <trans-unit id="1884b1c046724c12caad7ac9535bb681e1c79107" translate="yes" xml:space="preserve">
          <source>Isolate the Problem</source>
          <target state="translated">문제 분리</target>
        </trans-unit>
        <trans-unit id="73781a127ec1294a42a6bd6b81266946ff4be5b3" translate="yes" xml:space="preserve">
          <source>Issue</source>
          <target state="translated">Issue</target>
        </trans-unit>
        <trans-unit id="7dfe538fef5659381b9d285d4320a6802e39e9d9" translate="yes" xml:space="preserve">
          <source>Issue a JavaScript redirect in your application, such as &lt;code&gt;window.location.href = '...'&lt;/code&gt;, to a different superdomain.</source>
          <target state="translated">응용 프로그램에서 &lt;code&gt;window.location.href = '...'&lt;/code&gt; 와 같은 JavaScript 리디렉션을 다른 수퍼 도메인으로 발행하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d4a689a54881b45cfb9f81abe79746e9cf4aa4c" translate="yes" xml:space="preserve">
          <source>Issue a simple HTTP request</source>
          <target state="translated">간단한 HTTP 요청을 발행</target>
        </trans-unit>
        <trans-unit id="7ee5e4b43f88a6841552130a17aaa8aa88d0254b" translate="yes" xml:space="preserve">
          <source>Issue an HTTP request</source>
          <target state="translated">HTTP 요청 발행</target>
        </trans-unit>
        <trans-unit id="692ba34138d2513c2acea648571557cb0adef435" translate="yes" xml:space="preserve">
          <source>Issuing Cypress Commands inside of a Promise now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/111&quot;&gt;#111&lt;/a&gt;.</source>
          <target state="translated">Promise 내부에서 Cypress 명령을 실행하면 이제 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/111&quot;&gt;# 111&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="dee2e0973907cfa359ccd0df171a7e26c022e6b7" translate="yes" xml:space="preserve">
          <source>It assumes there is a &lt;code&gt;.git&lt;/code&gt; folder and uses Git commands to get each property, like &lt;code&gt;git show -s --pretty=%B&lt;/code&gt; to get commit message, see &lt;a href=&quot;https://github.com/cypress-io/commit-info/blob/master/src/git-api.js&quot;&gt;src/git-api.js&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.git&lt;/code&gt; 폴더 가 있다고 가정 하고 Git 명령을 사용 하여 커밋 메시지를 얻기 위해 &lt;code&gt;git show -s --pretty=%B&lt;/code&gt; 와 같은 각 속성 을 가져옵니다 ( &lt;a href=&quot;https://github.com/cypress-io/commit-info/blob/master/src/git-api.js&quot;&gt;src / git-api.js 참조)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d7d0de77ccdda3a2a187a7b8e78c458ac11bf60" translate="yes" xml:space="preserve">
          <source>It can be difficult to debug problems when elements are not considered actionable by Cypress.</source>
          <target state="translated">Cypress에서 요소를 실행 가능한 것으로 간주하지 않으면 문제를 디버깅하기가 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98fe5df6c7157e79098cc5adf264e9dbe0f66498" translate="yes" xml:space="preserve">
          <source>It can be run headlessly.</source>
          <target state="translated">헤드리스로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eab1062950ccb91bfac00fbcc20a78ab95c5f218" translate="yes" xml:space="preserve">
          <source>It comes baked into Cypress and does not need to be installed separately.</source>
          <target state="translated">Cypress에 구워지며 별도로 설치할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e08fe0558387b8908f22a5d18bb76e07d18b0252" translate="yes" xml:space="preserve">
          <source>It fails. But the interesting thing is that the type of &lt;code&gt;event&lt;/code&gt; is &lt;code&gt;KeyboardEvent&lt;/code&gt; when you &lt;code&gt;console.log(event)&lt;/code&gt;.</source>
          <target state="translated">실패합니다. 그러나 흥미로운 점은 &lt;code&gt;console.log(event)&lt;/code&gt; 때 &lt;code&gt;event&lt;/code&gt; 유형 이 &lt;code&gt;KeyboardEvent&lt;/code&gt; 라는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="9fd1be0a7f50e587da2eb19d6f0d71a2591d1f1d" translate="yes" xml:space="preserve">
          <source>It generates the beautiful standalone HTML report file &lt;code&gt;mochawesome-report/mochawesome.html&lt;/code&gt; shown below. As you can see all test results, timing information, and even test bodies are included.</source>
          <target state="translated">아름다운 독립형 HTML 보고서 파일 &lt;code&gt;mochawesome-report/mochawesome.html&lt;/code&gt; 을 생성합니다.아래에 표시된 . 모든 테스트 결과를 볼 수 있듯이 타이밍 정보 및 테스트 바디도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="39136691a806ecd4ede3234a57363343020ed269" translate="yes" xml:space="preserve">
          <source>It is common for tests in Cypress to issue 30+ commands. Because nearly every command has a default assertion (and can therefore fail), even by limiting your assertions you&amp;rsquo;re not saving yourself anything because &lt;strong&gt;any single command could implicitly fail&lt;/strong&gt;.</source>
          <target state="translated">Cypress의 테스트에서 30 개 이상의 명령을 실행하는 것이 일반적입니다. 거의 모든 명령에는 기본 어설 션이 있으므로 실패 할 수 있으므로 어설 션을 제한하더라도 &lt;strong&gt;단일 명령이 암시 적으로 실패 할 수&lt;/strong&gt; 있기 때문에 &lt;strong&gt;아무&lt;/strong&gt; 것도 저장 &lt;strong&gt;하지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c747b31deacd2080c345077d706ed1ebf0b2fd34" translate="yes" xml:space="preserve">
          <source>It is crucial that you understand how your application works else you will write flaky tests.</source>
          <target state="translated">응용 프로그램 작동 방식을 이해하는 것이 중요합니다. 그렇지 않으면 색다른 테스트를 작성하게됩니다.</target>
        </trans-unit>
        <trans-unit id="be413bf9ba03e137bb850af2935df0123b1aaa8b" translate="yes" xml:space="preserve">
          <source>It is incredibly time consuming and slows down your tests.</source>
          <target state="translated">시간이 많이 걸리고 테스트 속도가 느려집니다.</target>
        </trans-unit>
        <trans-unit id="7d30012372de91ccedf2455e8c6a978fbbd46ee2" translate="yes" xml:space="preserve">
          <source>It is very important to understand that Cypress commands don&amp;rsquo;t do anything at the moment they are invoked, but rather enqueue themselves to be run later. This is what we mean when we say Cypress commands are asynchronous.</source>
          <target state="translated">Cypress 명령은 호출 된 순간에 아무 작업도 수행하지 않고 나중에 실행되도록 대기열에 추가한다는 점을 이해하는 것이 중요합니다. 이것이 Cypress 명령이 비동기라고 말할 때의 의미입니다.</target>
        </trans-unit>
        <trans-unit id="9ce21251dca34ef1a436adc21881c5a7d1ce13a9" translate="yes" xml:space="preserve">
          <source>It should look something like &lt;strong&gt;http://localhost:8080&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;http : // localhost : 8080&lt;/strong&gt; 과 비슷해야합니다 .</target>
        </trans-unit>
        <trans-unit id="80b7742976b8adf460d2d2aeb2886a8468365602" translate="yes" xml:space="preserve">
          <source>It simplifies running Cypress in &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/continuous-integration&quot;&gt;연속 통합&lt;/a&gt; 에서 Cypress 실행을 단순화합니다 .</target>
        </trans-unit>
        <trans-unit id="1ee5eaf554a89f33a67614769634524a529f93dd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a great idea to get your signup and login flow under test coverage since it is very important to all of your users and you never want it to break.</source>
          <target state="translated">가입 및 로그인 흐름을 테스트 적용 범위 내에 두는 것이 좋습니다. 모든 사용자에게 매우 중요하며 사용자가 침입하기를 원하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="fdf1af60bbdc583e41dcea4a260c119b88956670" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s actually &lt;em&gt;possible&lt;/em&gt; for Cypress to accommodate these situations the same way Selenium does, but you will never have &lt;em&gt;native&lt;/em&gt; access to these iframes from inside of Cypress.</source>
          <target state="translated">그것은 사실입니다 &lt;em&gt;수&lt;/em&gt; 싸이프레스는 이러한 상황을 셀레늄이하는 같은 방법을 수용 할 수 있지만, 당신은하지 않습니다에 대한 &lt;em&gt;기본&lt;/em&gt; 싸이프레스의 내부에서 이러한 iframe을에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e768f10fff402864eeaab9272cadf49b69c0c93" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all downside with no upside:</source>
          <target state="translated">그것은 거꾸로되지 않은 모든 단점입니다.</target>
        </trans-unit>
        <trans-unit id="170b7b6f80c240695138216f1a14ebd2feeafdd5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s because the Test Runner uses an &lt;code&gt;iframe&lt;/code&gt; to load the application under test. In other words, the &lt;code&gt;KeyboardEvent&lt;/code&gt; used in the the code above and the &lt;code&gt;KeyboardEvent&lt;/code&gt; class from which the &lt;code&gt;event&lt;/code&gt; variable is constructed are different &lt;code&gt;KeyboardEvent&lt;/code&gt;s.</source>
          <target state="translated">Test Runner가 &lt;code&gt;iframe&lt;/code&gt; 을 사용하여 테스트중인 애플리케이션을로드 하기 때문 입니다. 즉, 위 코드에서 사용 된 &lt;code&gt;KeyboardEvent&lt;/code&gt; 와 &lt;code&gt;event&lt;/code&gt; 변수가 생성 되는 &lt;code&gt;KeyboardEvent&lt;/code&gt; 클래스 는 서로 다른 &lt;code&gt;KeyboardEvent&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="df5ee67cce4958a1e097362f1ecc1e29ce35767e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that although we do our &lt;strong&gt;very best&lt;/strong&gt; to ensure your application works normally inside of Cypress, there &lt;em&gt;are&lt;/em&gt; some limitations you need to be aware of.</source>
          <target state="translated">그것은 우리가 할 수 있지만,주의하는 것이 중요 &lt;strong&gt;최선을&lt;/strong&gt; 응용 프로그램은 싸이프레스의 내부 정상적으로 작동하는지 확인하기 위해, 거기에 &lt;em&gt;있습니다&lt;/em&gt; 당신이 알아야 할 몇 가지 제한이.</target>
        </trans-unit>
        <trans-unit id="3e97d2f36e753347978d17dde27a0e2abc95a1c2" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to understand why you&amp;rsquo;d want to bind to either &lt;code&gt;Cypress&lt;/code&gt; or &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress&lt;/code&gt; 또는 &lt;code&gt;cy&lt;/code&gt; 에 바인딩하려는 이유를 이해하는 것이 중요합니다 .</target>
        </trans-unit>
        <trans-unit id="334b2ddb847b165d4c039dc54bf5b6af4255a7d9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to enable debugging these scripts by adding the &lt;code&gt;crossorigin&lt;/code&gt; attribute and setting a &lt;code&gt;CORS&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;crossorigin&lt;/code&gt; 속성 을 추가하고 &lt;code&gt;CORS&lt;/code&gt; 헤더를 설정 하여 이러한 스크립트를 디버깅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="657a07f2be60684130376ca86fceb04fc3e5f766" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s still useful to load a setup file before your test code. If you are setting Cypress defaults or utilizing custom Cypress commands, instead of needing to import/require those defaults/commands in every test file, you can use the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">테스트 코드 전에 설정 파일을로드하는 것이 여전히 유용합니다. Cypress 기본값을 설정하거나 사용자 정의 Cypress 명령을 사용하는 경우 모든 테스트 파일에서 해당 기본값 / 명령을 가져 오거나 요구하지 않고 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 구성 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2cb6a6443a633c3a158d58be0f5fede03d79e6f7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s very important to understand the mechanism Cypress uses to chain commands together. It manages a Promise chain on your behalf, with each command yielding a &amp;lsquo;subject&amp;rsquo; to the next command, until the chain ends or an error is encountered. The developer should not need to use Promises directly, but understanding how they work is helpful!</source>
          <target state="translated">Cypress가 명령을 함께 연결하는 데 사용하는 메커니즘을 이해하는 것이 매우 중요합니다. 체인을 종료하거나 오류가 발생할 때까지 각 명령이 다음 명령에 '제목'을 생성하여 사용자 대신 Promise 체인을 관리합니다. 개발자는 약속을 직접 사용할 필요는 없지만 작동 방식을 이해하면 도움이됩니다!</target>
        </trans-unit>
        <trans-unit id="43a1419b0a16467bcb3ceadf516778d211fab736" translate="yes" xml:space="preserve">
          <source>Iterate through an array like structure (arrays or objects with a &lt;code&gt;length&lt;/code&gt; property).</source>
          <target state="translated">구조체와 같은 배열 ( &lt;code&gt;length&lt;/code&gt; 속성을 가진 배열 또는 객체)을 반복합니다 .</target>
        </trans-unit>
        <trans-unit id="e0c004fb3f415f03826dcbf579bbcc9503d137b4" translate="yes" xml:space="preserve">
          <source>Its &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">그 &lt;code&gt;width&lt;/code&gt; 또는 &lt;code&gt;height&lt;/code&gt; 이다 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e9865a8842f87c81f0188117d466d92c66748e6" translate="yes" xml:space="preserve">
          <source>Its CSS property (or ancestors) is &lt;code&gt;display: none&lt;/code&gt;.</source>
          <target state="translated">그것의 CSS 속성 (또는 조상)입니다 &lt;code&gt;display: none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c62d091c0bf41bc4cf1929cbfc41afaced5389bc" translate="yes" xml:space="preserve">
          <source>Its CSS property (or ancestors) is &lt;code&gt;visibility: hidden&lt;/code&gt;.</source>
          <target state="translated">CSS 속성 (또는 조상)은 &lt;code&gt;visibility: hidden&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0d01899d7eac45b85bcaa9827cc3ee4480c18cf4" translate="yes" xml:space="preserve">
          <source>Its CSS property is &lt;code&gt;position: fixed&lt;/code&gt; and it&amp;rsquo;s offscreen or covered up.</source>
          <target state="translated">CSS 속성은 &lt;code&gt;position: fixed&lt;/code&gt; 이며 화면이 꺼져 있거나 덮여 있습니다.</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="5d6ee3c1b91a4f3e6dfca851d66a0f0944b4c263" translate="yes" xml:space="preserve">
          <source>JSON fixtures with unicode escape sequences are now parsed correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/964&quot;&gt;#964&lt;/a&gt;.</source>
          <target state="translated">유니 코드 이스케이프 시퀀스가있는 JSON 픽스처가 이제 올바르게 구문 분석됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/964&quot;&gt;# 964&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e15ddc552daca5b41bfb140c68f1f25c6da5e7bc" translate="yes" xml:space="preserve">
          <source>JSX and CJSX</source>
          <target state="translated">JSX와 CJSX</target>
        </trans-unit>
        <trans-unit id="d66ed2254c1744f6803e5dc84b262f6d290da4c9" translate="yes" xml:space="preserve">
          <source>JavaScript Redirects</source>
          <target state="translated">자바 스크립트 리디렉션</target>
        </trans-unit>
        <trans-unit id="5f61712d6fc2cae7116b6916efcc16204b0c2aed" translate="yes" xml:space="preserve">
          <source>JavaScript arrays and objects are stringified and formatted into text.</source>
          <target state="translated">JavaScript 배열 및 객체는 문자열로 묶어 텍스트로 형식화됩니다.</target>
        </trans-unit>
        <trans-unit id="4200ab363a2bbec801370b191a1404dca14c89ab" translate="yes" xml:space="preserve">
          <source>JavaScript popup blocking is now disabled and will not interfere with running tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/125&quot;&gt;#125&lt;/a&gt;.</source>
          <target state="translated">JavaScript 팝업 차단이 이제 비활성화되었으며 테스트 실행을 방해하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/125&quot;&gt;# 125&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="0c2c5c506cef0ed2d3ad2b7e45e97980b66f5520" translate="yes" xml:space="preserve">
          <source>Jenkinsfile</source>
          <target state="translated">Jenkinsfile</target>
        </trans-unit>
        <trans-unit id="b5b8bd2dde132deaa5d4e014fa98dd4029a66224" translate="yes" xml:space="preserve">
          <source>Jump to failed tests</source>
          <target state="translated">실패한 테스트로 이동</target>
        </trans-unit>
        <trans-unit id="7cdd0a39f39601525c6c1fb41dee66f38e4478fa" translate="yes" xml:space="preserve">
          <source>Just as you would when writing TypeScript files in your project, you will have to handle transpiling your TypeScript test files. Cypress exposes a &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;&lt;code&gt;file:preprocessor&lt;/code&gt; event&lt;/a&gt; you can use to customize how your test code is transpiled and sent to the browser.</source>
          <target state="translated">프로젝트에서 TypeScript 파일을 작성할 때와 마찬가지로 TypeScript 테스트 파일의 변환을 처리해야합니다. Cypress는 &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt; &lt;code&gt;file:preprocessor&lt;/code&gt; 이벤트&lt;/a&gt; 를 제공하여 테스트 코드를 변환하고 브라우저로 보내는 방법을 사용자 정의하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f46351566b7bab6e81796aa2cde4e4b3a16d22f5" translate="yes" xml:space="preserve">
          <source>Just be sure &lt;em&gt;not&lt;/em&gt; to include any code that has side effects in your callback function.</source>
          <target state="translated">그냥 확실 &lt;em&gt;하지&lt;/em&gt; 콜백 함수에 부작용이있는 코드를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="784324892fb89e718e64e6169b2c7f6e3bac488a" translate="yes" xml:space="preserve">
          <source>Just be sure &lt;em&gt;not&lt;/em&gt; to include any code that has side effects in your callback function. The callback function will be retried over and over again until no assertions within it throw.</source>
          <target state="translated">그냥 확실 &lt;em&gt;하지&lt;/em&gt; 콜백 함수에 부작용이있는 코드를 포함 할 수 있습니다. 콜백 함수는 어설 션이 발생하지 않을 때까지 계속해서 다시 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="00504ece5558f7cee1907345a51121045921205d" translate="yes" xml:space="preserve">
          <source>Just like Promises, you can return any compatible &amp;ldquo;thenable&amp;rdquo; (anything that has a &lt;code&gt;.then()&lt;/code&gt; interface) and Cypress will wait for that to resolve before continuing forward through the chain of commands.</source>
          <target state="translated">약속과 마찬가지로 호환 가능한 &quot;thenable&quot;(. &lt;code&gt;.then()&lt;/code&gt; 인터페이스 가있는 모든 것)을 반환 할 수 있으며 Cypress는 명령 체인을 계속 진행하기 전에 해당 문제가 해결 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="3b3398bb5c649b30e2db6fc94c81b3132106125c" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;command-line&quot;&gt;Command Line options&lt;/a&gt; for &lt;code&gt;cypress run&lt;/code&gt;, you can pass options that modify how Cypress runs.</source>
          <target state="translated">그냥 같은 &lt;a href=&quot;command-line&quot;&gt;명령 줄 옵션&lt;/a&gt; 에 대한 &lt;code&gt;cypress run&lt;/code&gt; , 당신은 싸이프레스가 실행되는 방법을 수정 옵션을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ee3b2c9db3bd2ce0b81005461c49e6cfad51475" translate="yes" xml:space="preserve">
          <source>Just like the &lt;a href=&quot;command-line&quot;&gt;Command Line options&lt;/a&gt;, you can pass options that modify how Cypress runs.</source>
          <target state="translated">&lt;a href=&quot;command-line&quot;&gt;명령 행 옵션&lt;/a&gt; 과 마찬가지로 Cypress 실행 방식을 수정하는 옵션을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0577f4f324e393ae3d72c81193996ac3e8f07715" translate="yes" xml:space="preserve">
          <source>Just like with multiple tabs - Cypress does not support controlling more than 1 open browser at a time.</source>
          <target state="translated">여러 탭과 마찬가지로 Cypress는 한 번에 둘 이상의 열린 브라우저 제어를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac66d9188443ba391152d22f101054ec2945a03e" translate="yes" xml:space="preserve">
          <source>Just like with your test files, the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; can use ES2015+ (or CoffeeScript) and modules, so you can import/require other files as needed.</source>
          <target state="translated">테스트 파일과 마찬가지로 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt; 은 ES2015 + (또는 CoffeeScript) 및 모듈을 사용할 수 있으므로 필요에 따라 다른 파일을 가져 오거나 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7d4bb38752df4300cd5554ef8dd04226945030c" translate="yes" xml:space="preserve">
          <source>Just manually unzip and double click. Cypress will run without needing to install any dependencies.</source>
          <target state="translated">수동으로 압축을 풀고 두 번 클릭하십시오. Cypress는 종속성을 설치할 필요없이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c9fdbdd9e6318c0bb604e7e9ad1b6812d9a45ba2" translate="yes" xml:space="preserve">
          <source>Keep Cypress Test Runner open after tests in a spec file run</source>
          <target state="translated">사양 파일 실행에서 테스트 후 Cypress Test Runner를 열어 둡니다.</target>
        </trans-unit>
        <trans-unit id="54750ea67025a99e6f4fcde0f725e5f7b10e8bd2" translate="yes" xml:space="preserve">
          <source>Keep Cypress open after all tests run</source>
          <target state="translated">모든 테스트가 실행 된 후 Cypress를 열어 두십시오.</target>
        </trans-unit>
        <trans-unit id="bfd4238847f221fc0b9d92bc87ddd9c5d82d3102" translate="yes" xml:space="preserve">
          <source>Keep a modifier activated between commands</source>
          <target state="translated">명령 사이에 수정자를 활성화하십시오</target>
        </trans-unit>
        <trans-unit id="262ad766f219d25be086be5cc099772d711a7e0b" translate="yes" xml:space="preserve">
          <source>Keep in mind - code executed in plugins &lt;strong&gt;may&lt;/strong&gt; be executed by the Node version that comes bundled in Cypress itself.</source>
          <target state="translated">명심하십시오-플러그인에서 실행되는 코드 는 Cypress 자체에 번들로 제공되는 Node 버전에서 실행될 &lt;strong&gt;수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9f503ed838e0a7cf35077660aba33cdb448e219" translate="yes" xml:space="preserve">
          <source>Keep in mind - code executed in plugins is executed &lt;strong&gt;by the Node version&lt;/strong&gt; that comes bundled in Cypress itself.</source>
          <target state="translated">플러그인에서 실행 &lt;strong&gt;되는&lt;/strong&gt; 코드 는 Cypress 자체에 번들로 제공되는 &lt;strong&gt;노드 버전에 의해&lt;/strong&gt; 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="f30ef21f41a06ebf6d4a07c00044760f541cf433" translate="yes" xml:space="preserve">
          <source>Keep in mind that there are use cases for both approaches because they have different ergonomics.</source>
          <target state="translated">두 인체 공학은 인체 공학이 다르기 때문에 두 가지 방법 모두에 대한 사용 사례가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f638df9bc16cb7019014edeb557c54677e4c03fa" translate="yes" xml:space="preserve">
          <source>Keep in mind, setting something in a global hook will render it less flexible for changes and for testing its behavior down the road.</source>
          <target state="translated">전역 후크에 무언가를 설정하면 변경 사항과 도로에서의 동작 테스트에 대한 유연성이 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="ba28782ce21f499aeb0e691c016ca977d8ab3db6" translate="yes" xml:space="preserve">
          <source>Keep the form as the subject</source>
          <target state="translated">주제를 주제로 유지</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="f708a1aed2b98a10d5f99aa0de892e1c6fedef57" translate="yes" xml:space="preserve">
          <source>Key Combinations</source>
          <target state="translated">키 조합</target>
        </trans-unit>
        <trans-unit id="c2b024ab82e3ea96b24576523563cf4ea3318647" translate="yes" xml:space="preserve">
          <source>Key Cypress features</source>
          <target state="translated">주요 Cypress 기능</target>
        </trans-unit>
        <trans-unit id="93cac4d9c2f3ba888dfbaa5efc279cd8395bc3d0" translate="yes" xml:space="preserve">
          <source>Key Differences</source>
          <target state="translated">주요 차이점</target>
        </trans-unit>
        <trans-unit id="70ca15755321c55d088710350beef00d5ec91b4e" translate="yes" xml:space="preserve">
          <source>Key Events Table</source>
          <target state="translated">주요 이벤트 표</target>
        </trans-unit>
        <trans-unit id="857d6f33d5eb33ba41809c31a6688e5f86c13fce" translate="yes" xml:space="preserve">
          <source>Keyboard shortcuts where the listener is on the &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">리스너가 &lt;code&gt;document&lt;/code&gt; 나 &lt;code&gt;body&lt;/code&gt; 에있는 키보드 단축키 .</target>
        </trans-unit>
        <trans-unit id="b6f86635fbab459c3dfca553452917a169023767" translate="yes" xml:space="preserve">
          <source>Kick off other builds or scripts</source>
          <target state="translated">다른 빌드 또는 스크립트 시작</target>
        </trans-unit>
        <trans-unit id="cd9aabc75704dec1a8701384247294faf9245eaa" translate="yes" xml:space="preserve">
          <source>Killing processes</source>
          <target state="translated">죽이는 과정</target>
        </trans-unit>
        <trans-unit id="2a73fbcd9674e09cb33a5adbfcf79b0b3d853d96" translate="yes" xml:space="preserve">
          <source>Knapsack Pro Cypress</source>
          <target state="translated">배낭 프로 사이프러스</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">알려진 문제</target>
        </trans-unit>
        <trans-unit id="d36b5e0832a8d6cca58d3315be6a7ae1ba8b0b97" translate="yes" xml:space="preserve">
          <source>Known Issues:</source>
          <target state="translated">알려진 문제 :</target>
        </trans-unit>
        <trans-unit id="8c5ce75c7a54b8f3a8f4f82c3cd0ebb1e308b951" translate="yes" xml:space="preserve">
          <source>Labeling these groups in this manner helps up later when we review our test runs in the Cypress Dashboard, as shown below:</source>
          <target state="translated">이러한 방식으로 이러한 그룹에 레이블을 지정하면 다음과 같이 Cypress 대시 보드에서 테스트 실행을 검토 할 때 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="d2460f98e9d33f3715ead8c78027879fad8595b1" translate="yes" xml:space="preserve">
          <source>Last but not least - trying to shoehorn tests to an already built application is much more difficult than building it as you write tests. You&amp;rsquo;ll likely encounter a series of initial up front challenges / hurdles that would have otherwise been avoided writing tests from the start.</source>
          <target state="translated">마지막으로, 이미 빌드 된 응용 프로그램에 테스트를 시도하는 것은 테스트를 작성할 때 작성하는 것보다 훨씬 어렵습니다. 처음부터 테스트를 작성하지 않는 일련의 초기 선행 과제 / 장애물을 경험하게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="b7ad4898fc7c25e90e113f44efde477ec19a3ead" translate="yes" xml:space="preserve">
          <source>Lastly you can pass in environment variables as options when &lt;a href=&quot;command-line#cypress-run&quot;&gt;using the CLI tool&lt;/a&gt;.</source>
          <target state="translated">마지막으로 &lt;a href=&quot;command-line#cypress-run&quot;&gt;CLI 도구&lt;/a&gt; 를 사용할 때 환경 변수를 옵션으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f131c7bc4486c7900913e25aac88bf30cf8d7b28" translate="yes" xml:space="preserve">
          <source>Later in this guide we&amp;rsquo;ll go into much more detail about &lt;a href=&quot;#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; and &lt;a href=&quot;#Timeouts&quot;&gt;Timeouts&lt;/a&gt;.</source>
          <target state="translated">이 가이드의 뒷부분에서 &lt;a href=&quot;#Default-Assertions&quot;&gt;기본 어설 션&lt;/a&gt; 및 &lt;a href=&quot;#Timeouts&quot;&gt;시간 초과&lt;/a&gt; 에 대해 훨씬 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="8b1c5691506cde7010b7e4c2a7a229d772d075d0" translate="yes" xml:space="preserve">
          <source>Launch Cypress in interactive mode.</source>
          <target state="translated">대화식 모드에서 Cypress를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="351e9082a029d1b2e09b40d6b23edeb85ca13c34" translate="yes" xml:space="preserve">
          <source>Launching Browsers</source>
          <target state="translated">브라우저 시작</target>
        </trans-unit>
        <trans-unit id="6208680f7a552dc0169086e364a08af5f96eb97d" translate="yes" xml:space="preserve">
          <source>Launching browsers</source>
          <target state="translated">브라우저 시작</target>
        </trans-unit>
        <trans-unit id="2da1539877c9a2dc579ca754fe07a3ec6c4711a6" translate="yes" xml:space="preserve">
          <source>Launching by a path</source>
          <target state="translated">경로로 시작</target>
        </trans-unit>
        <trans-unit id="a4447863b6af851e202f216b37d31a5ff214b746" translate="yes" xml:space="preserve">
          <source>Leading, trailing, duplicate whitespaces aren&amp;rsquo;t ignored in &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag</source>
          <target state="translated">선행, 후행, 중복 공백은 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 태그 에서 무시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="ebb7c80c25a220250f85a8f41208f771a5c7bea6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add a &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;cy.pause()&lt;/code&gt;&lt;/a&gt; to our test code and see what happens.</source>
          <target state="translated">테스트 코드에 &lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;cy.pause()&lt;/code&gt; &lt;/a&gt; 를 추가하고 어떻게되는지 봅시다 .</target>
        </trans-unit>
        <trans-unit id="885416ab834937446cf45c3677249c258e6a577c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add it to our test and see what happens:</source>
          <target state="translated">테스트에 추가하고 어떻게되는지 보자 :</target>
        </trans-unit>
        <trans-unit id="bca0aabc49f54952b8d68e3527b487ce9d2aa118" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add the &lt;code&gt;baseUrl&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;baseUrl&lt;/code&gt; 옵션을 추가해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="4682502d1494cb1079bfccac9d577db191eefe43" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s compare the prior example to a fictional version of it as raw, Promise-based code:</source>
          <target state="translated">이전 예제를 원시 Promise 기반 코드의 가상 버전과 비교해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="443ba0d20ca2baebed62685e4aee136a11020247" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a new file in the &lt;code&gt;cypress/integration&lt;/code&gt; folder that was created for us:</source>
          <target state="translated">우리를 위해 만들어진 &lt;code&gt;cypress/integration&lt;/code&gt; 폴더 에 새로운 파일을 만들어 봅시다 :</target>
        </trans-unit>
        <trans-unit id="e20c030f5691819171fa2bbabf0527387bca6c87" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s delete the &lt;code&gt;examples&lt;/code&gt; folder that Cypress created for you, since we learned about this in the previous tutorial.</source>
          <target state="translated">이전 자습서에서 이에 대해 알게되었으므로 Cypress에서 생성 한 &lt;code&gt;examples&lt;/code&gt; 폴더를 삭제하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="eae5647b7bda4db6cdf6119d4436916ef3b38cb3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s examine several different ways you may get this error message. In every situation, you&amp;rsquo;ll need to change something in your test code to prevent the error.</source>
          <target state="translated">이 오류 메시지가 나타날 수있는 여러 가지 방법을 살펴 보겠습니다. 모든 상황에서 오류를 방지하기 위해 테스트 코드에서 무언가를 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a51a29403bd30329942e71ffef291897daafd19" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s explore a few examples.</source>
          <target state="translated">몇 가지 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="2c20749b7bfe220ee9548ce34452cb4a1a5ff666" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s explore some examples of conditional testing that will pass or fail 100% of the time.</source>
          <target state="translated">시간의 100 %를 통과하거나 실패하는 조건부 테스트의 몇 가지 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="712f316fb9c26562a172e33dc77b8e70b16c80e9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s find both list items that contain the work &amp;ldquo;Services&amp;rdquo;</source>
          <target state="translated">작업 &quot;서비스&quot;가 포함 된 두 목록 항목을 찾아 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="ce6143bc468fb0ff760d94fee09d340a7044567c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine a scenario where you click a button to delete a user and a dialog appears asking you to confirm this deletion.</source>
          <target state="translated">버튼을 클릭하여 사용자를 삭제하고이 삭제를 확인하는 대화 상자가 나타나는 시나리오를 상상해보십시오.</target>
        </trans-unit>
        <trans-unit id="c5a46fe5fdc9d5fcfc253a3f6eb0d85baf8e45e1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine the following Node code:</source>
          <target state="translated">다음 노드 코드를 상상해 봅시다.</target>
        </trans-unit>
        <trans-unit id="fafc64da2669147d85d4713f0ba11e20192dead2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine the following examples:</source>
          <target state="translated">다음 예제를 상상해 봅시다.</target>
        </trans-unit>
        <trans-unit id="b4a87247f21941ab8d0c11cbf2d5e8e698497657" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine the following test that is filling out the form.</source>
          <target state="translated">양식을 작성하는 다음 테스트를 상상해 봅시다.</target>
        </trans-unit>
        <trans-unit id="8deca3882603b4815b813aad98f1ef40a383d1ea" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine we have a scenario where our application may do two separate things that we are unable to control. In other words you tried every strategy above and for whatever reason you were unable to know ahead of time what your application will do.</source>
          <target state="translated">애플리케이션이 제어 할 수없는 두 가지 작업을 수행 할 수있는 시나리오가 있다고 가정 해 봅시다. 다시 말해, 위의 모든 전략과 어떤 이유로 든 애플리케이션이 무엇을하는지 미리 알 수 없었습니다.</target>
        </trans-unit>
        <trans-unit id="35284e0f921dfe7652bde3f7e411fc7b9585cfaf" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s imagine when we click the &lt;code&gt;.edit&lt;/code&gt; button that our &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; is re-rendered in the DOM. Instead of displaying the edit button it instead displays an &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; text field allowing you to edit the todo. The previous &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; has been &lt;em&gt;completely&lt;/em&gt; removed from the DOM and a new &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; is rendered in its place.</source>
          <target state="translated">&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 가 DOM에서 다시 렌더링 된다는 &lt;code&gt;.edit&lt;/code&gt; 버튼을 클릭했을 때를 상상해 봅시다 . 편집 버튼을 표시하는 대신 할일을 편집 할 수 있는 &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; 텍스트 필드 를 표시합니다 . 이전 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 는 DOM에서 &lt;em&gt;완전히&lt;/em&gt; 제거되었으며 대신 새 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 가 렌더링됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d808bde7c34ec6ca0d3c30277078b7dabd82ab8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate and tease apart why.</source>
          <target state="translated">이유를 조사하고 애타게합시다.</target>
        </trans-unit>
        <trans-unit id="2e3bba187abd89b66a59680a6e194fbadd3521e0" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate both strategies, why you would use one versus the other, and why you should regularly use both.</source>
          <target state="translated">두 가지 전략, 왜 하나를 사용하고 다른 하나를 사용하고 왜 정기적으로 사용해야하는지 조사해 봅시다.</target>
        </trans-unit>
        <trans-unit id="2d4f9815304d15e5a17e7df1310baffe82204eb0" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate each benefit.</source>
          <target state="translated">각 혜택을 조사해 봅시다.</target>
        </trans-unit>
        <trans-unit id="169149ed9f430b57d016c6dd935c9c8095167568" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate how we could target it:</source>
          <target state="translated">타겟팅 방법을 조사해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="3084907eb2a8dd371b0d137bd4562cbd3493cca9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate how you might encounter cross-origin errors in your test code and break down how to work around them in Cypress.</source>
          <target state="translated">테스트 코드에서 출처 간 오류가 발생하는 방법을 조사하고 Cypress에서 오류를 해결하는 방법을 자세히 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="bc565d7abfa48de2e072f0cb705331e2f6ec8d6f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s investigate why and how you can overcome these problems&amp;hellip;</source>
          <target state="translated">이러한 문제를 극복 할 수있는 이유와 방법에 대해 알아 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="8896a36074dfd4485880af3371c84962a831cb50" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at a few strategies for dealing with these situations.</source>
          <target state="translated">이러한 상황을 처리하기위한 몇 가지 전략을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="d172a231ad56188812168291eea6a5fd8742b6b4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at an example:</source>
          <target state="translated">예를 보자.</target>
        </trans-unit>
        <trans-unit id="6eb61cda1a1cde839ea1830e853af24649f2e66a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at how you&amp;rsquo;d describe an assertion in english:</source>
          <target state="translated">어설 션을 영어로 설명하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="f0e7cab14e7daaa858f50a25da386c2c86aa0f8a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at our previous example with aliases.</source>
          <target state="translated">별칭을 사용하여 이전 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="43b793ba529829706eb45ceb2c8d4400697c82b1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at the last command and assertion pair:</source>
          <target state="translated">마지막 명령과 어설 션 쌍을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="539e870868d193929f3aae87ef230c265994444e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at the one file that has a &amp;ldquo;missed&amp;rdquo; line. It is the &lt;code&gt;src/selectors/index.js&lt;/code&gt; file shown below.</source>
          <target state="translated">&amp;ldquo;누락 된&amp;rdquo;줄이있는 파일 하나를 봅시다. 그것은이다 &lt;code&gt;src/selectors/index.js&lt;/code&gt; 아래 그림 파일.</target>
        </trans-unit>
        <trans-unit id="0b8d4c98a18ff40c1aa1cdef1ea3d45b4e0c78be" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at why this is not really necessary.</source>
          <target state="translated">이것이 실제로 필요하지 않은 이유를 살펴 봅시다.</target>
        </trans-unit>
        <trans-unit id="2473b3ecdba2b7127b07b2c802f7b00878278040" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at why this is&amp;hellip;</source>
          <target state="translated">왜 이런지 보자 ...</target>
        </trans-unit>
        <trans-unit id="9a054ff013460ad6926f9fa58186e2d76b0ad8dd" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s make an assertion about something on the new page we clicked into. Perhaps we&amp;rsquo;d like to make sure the new URL is the expected URL. We can do that by looking up the URL and chaining an assertion to it with &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">클릭 한 새 페이지의 내용에 대해 어설 션을 작성해 보겠습니다. 새 URL이 예상 URL인지 확인하고 싶을 것입니다. URL을 찾아서 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 어설 션을 연결하여 그렇게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f32f42b3a1cb48d3adbca6e14af7ebc3b75ef494" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s reimagine our &amp;ldquo;Welcome Wizard&amp;rdquo; example from before.</source>
          <target state="translated">우리의&amp;ldquo;Welcome Wizard&amp;rdquo;예제를 이전부터 다시 상상해 봅시다.</target>
        </trans-unit>
        <trans-unit id="988ea2d35cf0a2611265cba0d2e2a98f99c5709f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s revisit the example from above but assume we&amp;rsquo;re testing some other part of the system.</source>
          <target state="translated">위의 예를 다시 살펴 보지만 시스템의 다른 부분을 테스트한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="1358f012d696ae41e62d5cafe06bce42c151cd16" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we do not know whether our &lt;code&gt;table&lt;/code&gt; element is scrollable. Sometimes the &lt;code&gt;table&lt;/code&gt; may be scrollable (with 2,000 rows) and sometimes the &lt;code&gt;table&lt;/code&gt; may not be scrollable (with 5 rows). You can ignore the error checking to ensure the element is scrollable by passing &lt;code&gt;ensureScrollable: false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;table&lt;/code&gt; 요소가 스크롤 가능한지 여부를 모른다고 가정 해 보겠습니다 . 때로는 &lt;code&gt;table&lt;/code&gt; 스크롤 할 수 있고 (2,000 행) &lt;code&gt;table&lt;/code&gt; 스크롤 할 수없는 경우 (5 행)도 있습니다. &lt;code&gt;ensureScrollable: false&lt;/code&gt; 를 전달하여 요소를 스크롤 할 수 있는지 확인하기 위해 오류 검사를 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="39257fadd856fa2ad1912a62339a162eb3e7c1b3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have an application that has a &lt;em&gt;customer facing portal&lt;/em&gt;, &lt;em&gt;guest facing portal&lt;/em&gt; and an &lt;em&gt;administration facing portal&lt;/em&gt;. You could organize and test these three parts of your application within the same run:</source>
          <target state="translated">&lt;em&gt;고객 대면 포털&lt;/em&gt; , &lt;em&gt;게스트 대면 포털&lt;/em&gt; 및 &lt;em&gt;관리 대면 포털&lt;/em&gt; 이있는 응용 프로그램이 있다고 가정 합니다. 동일한 실행 내에서 애플리케이션의 다음 세 부분을 구성하고 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c832551e4b0cffe1a46ffb672aa0a6c9c019d7b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you want to check the type of the events. You might write code like below:</source>
          <target state="translated">이벤트 유형을 확인하고 싶다고 가정 해 보겠습니다. 다음과 같은 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f795908eb24847d3eda606084a425d84b5bff198" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see some of this in action using our existing test code.</source>
          <target state="translated">기존 테스트 코드를 사용하여이 중 일부를 실제로 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="37cb465b301b765dd01870d548ebf5a0ea656c1a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look at an example below.</source>
          <target state="translated">아래 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e3855576fc69b0e44654912c35e5aa717c7cab40" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a look at each trade-off in depth:</source>
          <target state="translated">각 장단점을 자세히 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="1f47c90e757d9d1c4642991d58d8426850cdba9b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s use &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; to tap into the Cypress command during execution and add a &lt;code&gt;debugger&lt;/code&gt; at the appropriate time:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 을 사용 하여 실행 중에 Cypress 명령을 탭 하고 적절한 시간에 &lt;code&gt;debugger&lt;/code&gt; 를 추가 합시다 .</target>
        </trans-unit>
        <trans-unit id="f002882ff00789e7c6a104fabd6688a95e127f7a" translate="yes" xml:space="preserve">
          <source>Libraries and Tools</source>
          <target state="translated">라이브러리 및 도구</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="5e30eb09d78f62a6dcfe537c5c3654674d6e6725" translate="yes" xml:space="preserve">
          <source>Like most image comparison tools, the plugin also shows a difference view on mouse hover:</source>
          <target state="translated">대부분의 이미지 비교 도구와 마찬가지로 플러그인도 마우스 호버에 대한 차이점보기를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="b6f43bfcec5d8865957543b9f612c2425b3918ee" translate="yes" xml:space="preserve">
          <source>Linking CI machines for parallelization or grouping</source>
          <target state="translated">병렬화 또는 그룹화를 위해 CI 시스템 연결</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="d64113ad4719ae7e5b985168742fe374fd6ff36d" translate="yes" xml:space="preserve">
          <source>Linux 64-bit (&lt;code&gt;?platform=linux&lt;/code&gt;)</source>
          <target state="translated">Linux 64 비트 ( &lt;code&gt;?platform=linux&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="775d9b892894ff25bc2027d1e2649f194b953bdd" translate="yes" xml:space="preserve">
          <source>Linux or macOS</source>
          <target state="translated">리눅스 또는 macOS</target>
        </trans-unit>
        <trans-unit id="2087ebad183f29af2b58cf518a65de92b8bedf1f" translate="yes" xml:space="preserve">
          <source>Linux/OSX</source>
          <target state="translated">Linux/OSX</target>
        </trans-unit>
        <trans-unit id="73da9a3053f1ab8fa7772b7c663d9b1efb80a862" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;~/.cache/Cypress&lt;/code&gt;</source>
          <target state="translated">리눅스 : &lt;code&gt;~/.cache/Cypress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a40a8f8da308121ab1813f8a8be34f4423c5e470" translate="yes" xml:space="preserve">
          <source>List of Assertions</source>
          <target state="translated">어설 션 목록</target>
        </trans-unit>
        <trans-unit id="f5e95c32033408678a4374d5c71acddfd248b0f7" translate="yes" xml:space="preserve">
          <source>List of available Chai Assertions</source>
          <target state="translated">사용 가능한 Chai Assertions 목록</target>
        </trans-unit>
        <trans-unit id="1f39b028fa28484b73cc6b80bdef24a830069b3d" translate="yes" xml:space="preserve">
          <source>List of available Chai-jQuery Assertions</source>
          <target state="translated">사용 가능한 Chai-jQuery 어설 션 목록</target>
        </trans-unit>
        <trans-unit id="573573a7b64d43e99354afff9d510f81301513e1" translate="yes" xml:space="preserve">
          <source>List of available Sinon-Chai Assertions</source>
          <target state="translated">사용 가능한 Sinon-Chai Assertions 목록</target>
        </trans-unit>
        <trans-unit id="0c4ad782ed47f4ab54dcefd9357da3b5f48ed433" translate="yes" xml:space="preserve">
          <source>List of events</source>
          <target state="translated">이벤트 목록</target>
        </trans-unit>
        <trans-unit id="dc33149633cd3f0a0e0b7cf4ad1aad9aef6e1a06" translate="yes" xml:space="preserve">
          <source>List of plugins</source>
          <target state="translated">플러그인 목록</target>
        </trans-unit>
        <trans-unit id="8f6a83346dedadca53ddbaf6a4aa0b98a2c19890" translate="yes" xml:space="preserve">
          <source>List the contents of the default &lt;code&gt;cypress.json&lt;/code&gt; configuration file</source>
          <target state="translated">기본 &lt;code&gt;cypress.json&lt;/code&gt; 구성 파일 의 내용 나열</target>
        </trans-unit>
        <trans-unit id="5b21f31a036e2a6f9710615a40b7caa5490588b3" translate="yes" xml:space="preserve">
          <source>Listed in the &lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;Visual Testing plugins&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;비주얼 테스트 플러그인&lt;/a&gt; 섹션에 나열되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="237700d410e20f496fd8c4a94154acaff5624a3e" translate="yes" xml:space="preserve">
          <source>Listen for &lt;code&gt;alert&lt;/code&gt; or &lt;code&gt;confirm&lt;/code&gt; calls and change the &lt;code&gt;confirm&lt;/code&gt; behavior</source>
          <target state="translated">&lt;code&gt;alert&lt;/code&gt; 수신 또는 전화 &lt;code&gt;confirm&lt;/code&gt; 및 &lt;code&gt;confirm&lt;/code&gt; 동작 변경</target>
        </trans-unit>
        <trans-unit id="44f7822fff2bcb1d65145af4cc472ca31943aecf" translate="yes" xml:space="preserve">
          <source>Listen for &lt;code&gt;command:retry&lt;/code&gt; events to understand why Cypress is internally retrying for debugging purposes</source>
          <target state="translated">를 수신 &lt;code&gt;command:retry&lt;/code&gt; 이벤트를 싸이프레스는 내부적으로 디버깅을 위해 재 시도하는 이유를 이해하기</target>
        </trans-unit>
        <trans-unit id="0b65b3442c4678df19f79af70aeb3b85cd0d9b47" translate="yes" xml:space="preserve">
          <source>Listen for &lt;code&gt;uncaught exceptions&lt;/code&gt; and prevent Cypress from failing the test</source>
          <target state="translated">&lt;code&gt;uncaught exceptions&lt;/code&gt; 듣고 Cypress가 테스트에 실패하지 않도록 방지</target>
        </trans-unit>
        <trans-unit id="47aa4a124779f7c540a6ccdf3ec8fdfacca9d60f" translate="yes" xml:space="preserve">
          <source>Listen for &lt;code&gt;window:before:load&lt;/code&gt; events and modify the &lt;code&gt;window&lt;/code&gt; before any of your app code runs between page transitions</source>
          <target state="translated">를 수신 &lt;code&gt;window:before:load&lt;/code&gt; 이벤트와 수정 &lt;code&gt;window&lt;/code&gt; 페이지 전환 사이의 앱 코드 실행의 전</target>
        </trans-unit>
        <trans-unit id="b1614eb657113262f4021ee8457c8ca1b765a5f5" translate="yes" xml:space="preserve">
          <source>Listen for a route matching a returned object literal from a callback function. Functions that return a &lt;code&gt;Promise&lt;/code&gt; will automatically be awaited.</source>
          <target state="translated">콜백 함수에서 반환 된 객체 리터럴과 일치하는 경로를 수신합니다. &lt;code&gt;Promise&lt;/code&gt; 를 반환하는 함수 는 자동으로 대기합니다.</target>
        </trans-unit>
        <trans-unit id="89654886ae49143524677f1870f38103571dcfbb" translate="yes" xml:space="preserve">
          <source>Listen for a route matching the specific URL.</source>
          <target state="translated">특정 URL과 일치하는 경로를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="beaa121c5df16babeee394d78065d7bb26a5e196" translate="yes" xml:space="preserve">
          <source>Live reload performance improvements when tests are changed.</source>
          <target state="translated">테스트가 변경 될 때 라이브 리로드 성능이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="4ca95322cb587284d05c12ebecb42e6b5ec18c31" translate="yes" xml:space="preserve">
          <source>Load a &lt;code&gt;users.json&lt;/code&gt; fixture</source>
          <target state="translated">&lt;code&gt;users.json&lt;/code&gt; 픽스쳐 로드</target>
        </trans-unit>
        <trans-unit id="9286ab58e426f84c50b0ead6fe1430b8f5b2a37a" translate="yes" xml:space="preserve">
          <source>Load a Chrome extension</source>
          <target state="translated">Chrome 확장 프로그램로드</target>
        </trans-unit>
        <trans-unit id="8ab913b1d6275e9ceb48e922a517e827e35aefae" translate="yes" xml:space="preserve">
          <source>Load a fixed set of data located in a file.</source>
          <target state="translated">파일에있는 고정 데이터 세트를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="d44f34c1919153fa4a809df474a5dd961b2cc7ac" translate="yes" xml:space="preserve">
          <source>Load your own chrome extension</source>
          <target state="translated">나만의 크롬 확장 프로그램로드</target>
        </trans-unit>
        <trans-unit id="11c4e1c1659aa650ee14c2bbcbea3ceac20633cf" translate="yes" xml:space="preserve">
          <source>Local Reporters</source>
          <target state="translated">지역 기자</target>
        </trans-unit>
        <trans-unit id="810e36e49199a8ab0597bf823d81609511f832a8" translate="yes" xml:space="preserve">
          <source>Location of Cypress binary at run-time</source>
          <target state="translated">런타임시 Cypress 바이너리 위치</target>
        </trans-unit>
        <trans-unit id="a9071ba51a818c8eb370704470363c350b2a603c" translate="yes" xml:space="preserve">
          <source>Log Cypress events</source>
          <target state="translated">Cypress 이벤트 로그</target>
        </trans-unit>
        <trans-unit id="b1d1e882234b2a9dfe68f933a15adb9744659020" translate="yes" xml:space="preserve">
          <source>Log browser information</source>
          <target state="translated">로그 브라우저 정보</target>
        </trans-unit>
        <trans-unit id="7a18ea1089142721abf404ef0bd3e4eed88046db" translate="yes" xml:space="preserve">
          <source>Log in command using UI</source>
          <target state="translated">UI를 사용하여 명령에 로그인</target>
        </trans-unit>
        <trans-unit id="1961857dd16e8d04354a31f83363ca420784d0b5" translate="yes" xml:space="preserve">
          <source>Log in command using request</source>
          <target state="translated">요청을 사용하여 명령에 로그인</target>
        </trans-unit>
        <trans-unit id="7245a63b158afcf7a8fd676b255be8d6a05bc366" translate="yes" xml:space="preserve">
          <source>Log out command using &lt;code&gt;localStorage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;localStorage&lt;/code&gt; 를 사용하여 명령 로그 아웃</target>
        </trans-unit>
        <trans-unit id="863ccf079eb499445be3d23c4be4fc5952c5dd7c" translate="yes" xml:space="preserve">
          <source>Log out command using UI</source>
          <target state="translated">UI를 사용하여 명령 로그 아웃</target>
        </trans-unit>
        <trans-unit id="f8e1df79330e79373110a99d92a83704cbcc5c10" translate="yes" xml:space="preserve">
          <source>Log out when cookie values are created, modified or deleted</source>
          <target state="translated">쿠키 값이 생성, 수정 또는 삭제되면 로그 아웃</target>
        </trans-unit>
        <trans-unit id="f822df594b4c2a8cb991782337e6739e209866e6" translate="yes" xml:space="preserve">
          <source>Log spec information</source>
          <target state="translated">로그 사양 정보</target>
        </trans-unit>
        <trans-unit id="c6a917ed1a993e13e9fa8095e055b8d7b1754e0f" translate="yes" xml:space="preserve">
          <source>Log the browser and the number of specs that will be run</source>
          <target state="translated">브라우저와 실행할 사양 수를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="08943e8f55087c5506a5f7ca1a681ea61695a7d6" translate="yes" xml:space="preserve">
          <source>Log the number of passed tests of a run</source>
          <target state="translated">실행의 통과 된 테스트 수를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="44b281df965d24971b203a14f8af6f35c2a65e27" translate="yes" xml:space="preserve">
          <source>Log the relative spec path to stdout after the spec is run</source>
          <target state="translated">사양 실행 후 상대 사양 경로를 stdout에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="234abbf21838e54fefbf7b32f054beaab3203a3e" translate="yes" xml:space="preserve">
          <source>Log the relative spec path to stdout before the spec is run</source>
          <target state="translated">사양이 실행되기 전에 상대 사양 경로를 stdout에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="565bb1bfc0e94fc7f4da5a09fb311dd6c7563ef6" translate="yes" xml:space="preserve">
          <source>Log when cookie values are created, modified or deleted</source>
          <target state="translated">쿠키 값이 생성, 수정 또는 삭제 될 때 기록</target>
        </trans-unit>
        <trans-unit id="23013e805cdcccfccb9957860e652d1d267f4008" translate="yes" xml:space="preserve">
          <source>Logging All Events</source>
          <target state="translated">모든 이벤트 기록</target>
        </trans-unit>
        <trans-unit id="783f02798d5892e34e2b6c2aa451f3417f080785" translate="yes" xml:space="preserve">
          <source>Logging in</source>
          <target state="translated">로그인</target>
        </trans-unit>
        <trans-unit id="52377cdc16227649b3402555a5029ff43a990fd0" translate="yes" xml:space="preserve">
          <source>Logging in can be more complex than what we&amp;rsquo;ve just covered.</source>
          <target state="translated">로그인은 방금 설명한 것보다 더 복잡 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70a6992b1f5281374b3aedd90080e8a316e124b5" translate="yes" xml:space="preserve">
          <source>Logging in, viewing runs, and setting up new projects to record requires connecting to an external API server. This error displays when we failed to connect to the API server.</source>
          <target state="translated">로그인, 실행보기 및 기록 할 새 프로젝트를 설정하려면 외부 API 서버에 연결해야합니다. 이 오류는 API 서버에 연결하지 못한 경우 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="257fee490b2bcfb2ec4815f6049deb4aee902e57" translate="yes" xml:space="preserve">
          <source>Logs cypress commands, route request data and browser console errors and warnings to terminal when tests fail on CI.</source>
          <target state="translated">CI에서 테스트가 실패하면 cypress 명령을 기록하고 요청 데이터와 브라우저 콘솔 오류 및 경고를 터미널로 라우팅합니다.</target>
        </trans-unit>
        <trans-unit id="1f0ff0e51a4cdf9cedf302bd85dd5af4c210e752" translate="yes" xml:space="preserve">
          <source>Look at the &lt;a href=&quot;screenshots-and-videos&quot;&gt;video recordings and screenshots&lt;/a&gt;.</source>
          <target state="translated">상기 봐 &lt;a href=&quot;screenshots-and-videos&quot;&gt;비디오 녹화 및 스크린 샷&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7595c7cbfa6c48479b1f4e56957d8d40692498ac" translate="yes" xml:space="preserve">
          <source>Look in the following locations for the policy settings listed above:</source>
          <target state="translated">위에 나열된 정책 설정에 대해서는 다음 위치를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2bac4f8fe4751a77f0becc124925f87f3173634a" translate="yes" xml:space="preserve">
          <source>Luckily Cypress supports this use case. Reverse the order of the commands:</source>
          <target state="translated">운 좋게 Cypress는이 사용 사례를 지원합니다. 명령 순서를 반대로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="76866d2f6c76c061d1da6fed916f2d2184b886dc" translate="yes" xml:space="preserve">
          <source>Luckily, Cypress gives a stable platform for &lt;a href=&quot;plugins-guide&quot;&gt;writing plugins&lt;/a&gt; that &lt;em&gt;can perform visual testing&lt;/em&gt;.</source>
          <target state="translated">다행히, 싸이프레스는을위한 안정적인 플랫폼을 제공 &lt;a href=&quot;plugins-guide&quot;&gt;플러그인 작성 &lt;/a&gt;&lt;em&gt;시각 테스트를 수행 할 수 있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8edb68df1cb3adc8b9a4351e7a73a3beae0ca860" translate="yes" xml:space="preserve">
          <source>Luckily, it is very easy to avoid both of these problems.</source>
          <target state="translated">다행스럽게도이 두 가지 문제를 피하는 것이 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="bce5cbbc84d3e261a03b3a1d0c106e050710935a" translate="yes" xml:space="preserve">
          <source>Luckily, once we understand how retry-ability works and how only the last command is used for assertion retries, we can fix this test for good.</source>
          <target state="translated">다행히 재 시도의 작동 방식과 어설 션 재 시도에 마지막 명령 만 사용하는 방법을 이해하면이 테스트를 잘 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7306f557ac38a698c07eb0909cd6b734c28b509e" translate="yes" xml:space="preserve">
          <source>Luckily, there are some solutions for this. Instead of introducing arbitrary waits (like &lt;code&gt;sleep 20&lt;/code&gt;) you can use a better option.</source>
          <target state="translated">운 좋게도 이에 대한 해결책이 있습니다. 임의 대기 (예 : &lt;code&gt;sleep 20&lt;/code&gt; )를 도입하는 대신 더 나은 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08bce2d9a3206bf0d7143d86833197a8534fabc6" translate="yes" xml:space="preserve">
          <source>Mac</source>
          <target state="translated">Mac</target>
        </trans-unit>
        <trans-unit id="4554e883566e450fcbbf053758da9e9575455342" translate="yes" xml:space="preserve">
          <source>Machine-friendly name, like &lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;electron&lt;/code&gt;, or &lt;code&gt;firefox&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chrome&lt;/code&gt; , &lt;code&gt;electron&lt;/code&gt; , &lt;code&gt;firefox&lt;/code&gt; 등 기계 친화적 인 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="2fb86d9566b3f968bc70b61eaf2f9726efef6367" translate="yes" xml:space="preserve">
          <source>Machines View</source>
          <target state="translated">기계보기</target>
        </trans-unit>
        <trans-unit id="d0922fb4c1fbea914b1fb1ed0015789ffc4e57f4" translate="yes" xml:space="preserve">
          <source>Major browser version</source>
          <target state="translated">주요 브라우저 버전</target>
        </trans-unit>
        <trans-unit id="b540d3540057125828d76f4e0eed6a4573deab7b" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;GET&lt;/code&gt; request</source>
          <target state="translated">메이크업 &lt;code&gt;GET&lt;/code&gt; 의 요청을</target>
        </trans-unit>
        <trans-unit id="48dc1bdca0dcc6adf40f54791e606df71a0fa6dd" translate="yes" xml:space="preserve">
          <source>Make a request using a specific method. If no method is defined, Cypress uses the &lt;code&gt;GET&lt;/code&gt; method by default.</source>
          <target state="translated">특정 방법을 사용하여 요청하십시오. 정의 된 방법이 없으면 Cypress는 기본적으로 &lt;code&gt;GET&lt;/code&gt; 방법을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="cebb171a26b6cbebac4e0186fcb263d23c59626e" translate="yes" xml:space="preserve">
          <source>Make an HTTP request.</source>
          <target state="translated">HTTP 요청을하십시오.</target>
        </trans-unit>
        <trans-unit id="ce97028323163e41f64fdde91f5280c6c32b921e" translate="yes" xml:space="preserve">
          <source>Make an assertion about the document</source>
          <target state="translated">문서에 대한 주장</target>
        </trans-unit>
        <trans-unit id="c3d6c8953e63806cf660c6022400447a4cfbaa00" translate="yes" xml:space="preserve">
          <source>Make an assertion about the resulting application state.</source>
          <target state="translated">결과 응용 프로그램 상태에 대한 어설 션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f2517822c2371847d9cdd708bfbf40096367aca1" translate="yes" xml:space="preserve">
          <source>Make an assertion on the 3rd row of a table</source>
          <target state="translated">표의 3 번째 행에 대해 어설 션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1614221dfe745bd295f21b986c5166c0fbc9c529" translate="yes" xml:space="preserve">
          <source>Make an assertion on the focused element</source>
          <target state="translated">집중된 요소에 대한 주장</target>
        </trans-unit>
        <trans-unit id="3ae23d7b673045b84d0697d075bb2527d3bb9bf0" translate="yes" xml:space="preserve">
          <source>Make assertions about every location property</source>
          <target state="translated">모든 위치 속성에 대한 어설 션 만들기</target>
        </trans-unit>
        <trans-unit id="f8b88a39a2318a470e92995b216437be91a61196" translate="yes" xml:space="preserve">
          <source>Make multiple assertions against the same subject.</source>
          <target state="translated">같은 주제에 대해 여러 가지 주장을한다.</target>
        </trans-unit>
        <trans-unit id="0a53eb093ff04b19bf374891359d8465dc82f9f7" translate="yes" xml:space="preserve">
          <source>Make sure not to start a new watcher each time it is called. Instead, cache the watcher and, on subsequent calls, return a promise that resolves when the latest version of the file has been processed.</source>
          <target state="translated">전화 할 때마다 새 감시자를 시작하지 마십시오. 대신 감시자를 캐시하고 후속 호출에서 최신 버전의 파일이 처리 될 때 해결되는 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ff705689fab9890b9783256609183ae05158795" translate="yes" xml:space="preserve">
          <source>Make sure that you have already run &lt;a href=&quot;https://docs.npmjs.com/cli/init&quot;&gt;&lt;code&gt;npm init&lt;/code&gt;&lt;/a&gt; or have a &lt;code&gt;node_modules&lt;/code&gt; folder or &lt;code&gt;package.json&lt;/code&gt; file in the root of your project to ensure cypress is installed in the correct directory.</source>
          <target state="translated">당신이 이미 실행했는지 확인 &lt;a href=&quot;https://docs.npmjs.com/cli/init&quot;&gt; &lt;code&gt;npm init&lt;/code&gt; &lt;/a&gt; 하거나이 &lt;code&gt;node_modules&lt;/code&gt; 폴더 또는 &lt;code&gt;package.json&lt;/code&gt; 올바른 디렉토리에 설치되어있는 노송을 보장하기 위해 프로젝트의 루트에 파일을.</target>
        </trans-unit>
        <trans-unit id="4222f7cb17edf447486ac1c51fb1e178f2db8fc0" translate="yes" xml:space="preserve">
          <source>Make sure you &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;install&lt;/a&gt; and &lt;a href=&quot;../getting-started/installing-cypress#Opening-Cypress&quot;&gt;open&lt;/a&gt; it first!</source>
          <target state="translated">먼저 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;설치&lt;/a&gt; 하고 &lt;a href=&quot;../getting-started/installing-cypress#Opening-Cypress&quot;&gt;열어야&lt;/a&gt; 합니다!</target>
        </trans-unit>
        <trans-unit id="ab4c2e49c8df5c39471365b8b727448c92d15cc5" translate="yes" xml:space="preserve">
          <source>Make sure your Developer Tools are open and you can get pretty close to &amp;ldquo;seeing&amp;rdquo; the calculations Cypress is performing.</source>
          <target state="translated">개발자 도구가 열려 있는지 확인하고 Cypress가 수행하는 계산을&amp;ldquo;볼&amp;rdquo;수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a2761f8fc063acf9a5c332f3a583b75037e497d" translate="yes" xml:space="preserve">
          <source>Make your custom commands composable and as unopinionated as possible. Cramming too much into them makes them inflexible and requires more and more options passing to control their behavior.</source>
          <target state="translated">사용자 정의 명령을 작성 가능하고 가능한 한 분류하지 마십시오. 너무 많이 넣으면 융통성이 없으며 행동을 제어하기 위해 점점 더 많은 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="78fa83e50f14e9c6022319a4984431cf4991bfba" translate="yes" xml:space="preserve">
          <source>Making multiple requests to the same route</source>
          <target state="translated">동일한 경로에 여러 요청 만들기</target>
        </trans-unit>
        <trans-unit id="e78c1f318260b5dc42548187badf43499117b433" translate="yes" xml:space="preserve">
          <source>Manage organizations</source>
          <target state="translated">조직 관리</target>
        </trans-unit>
        <trans-unit id="b7ee3c4dd0a46c8618da4ec41c685dff32c86d6e" translate="yes" xml:space="preserve">
          <source>Manage users</source>
          <target state="translated">사용자 관리</target>
        </trans-unit>
        <trans-unit id="27553769f18b12c6edb40359e7d0c44ecc8e7bab" translate="yes" xml:space="preserve">
          <source>Managing Organizations</source>
          <target state="translated">조직 관리</target>
        </trans-unit>
        <trans-unit id="06127dcf56e6c198e1007c1bb15671dfa19e9ffc" translate="yes" xml:space="preserve">
          <source>Manipulate the screenshot image by resizing or cropping it</source>
          <target state="translated">스크린 샷 이미지의 크기를 조정하거나 잘라서 조작</target>
        </trans-unit>
        <trans-unit id="f09ef90b04cf487cb5b71882220ba013a593a394" translate="yes" xml:space="preserve">
          <source>Manipulating a database (seeding, reading, writing, etc.)</source>
          <target state="translated">데이터베이스 조작 (시드, 읽기, 쓰기 등)</target>
        </trans-unit>
        <trans-unit id="699e2c5353d23f547aa773828ab0e3393d57e921" translate="yes" xml:space="preserve">
          <source>Manual navigation after tests run now works reliably.</source>
          <target state="translated">테스트 실행 후 수동 탐색이 이제 안정적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7a8edb137bcaa335484528651807038fc4caaff4" translate="yes" xml:space="preserve">
          <source>Many OAuth providers also throttle the number of web requests you can make to them. For instance, if you try to test Google, Google will &lt;strong&gt;automatically&lt;/strong&gt; detect that you are not a human and instead of giving you an OAuth login screen, they will make you fill out a captcha.</source>
          <target state="translated">많은 OAuth 제공 업체도 웹 요청 수를 제한합니다. 예를 들어 Google을 테스트하려고하면 Google은 사용자가 사람이 아니라는 것을 &lt;strong&gt;자동으로&lt;/strong&gt; 감지하여 OAuth 로그인 화면을 제공하지 않고 보안 문자를 작성하게합니다.</target>
        </trans-unit>
        <trans-unit id="302b90335ecbeb483cdd007f3a8c592ec180fe89" translate="yes" xml:space="preserve">
          <source>Many OAuth providers run A/B experiments, which means that their login screen is dynamically changing. This makes automated testing difficult.</source>
          <target state="translated">많은 OAuth 공급자가 A / B 실험을 실행하므로 로그인 화면이 동적으로 변경됩니다. 이로 인해 자동 테스트가 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="58b8ebec583e7f9587bcb766eac86fe1c6f5cff2" translate="yes" xml:space="preserve">
          <source>Many additional tests added to the multi-os deployment process.</source>
          <target state="translated">다중 OS 배포 프로세스에 많은 추가 테스트가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="49aeb3c9b116e9c0ff3e3425fdabe7ea3186b382" translate="yes" xml:space="preserve">
          <source>Many applications will have already begun routing, initialization, and requests by the time the &lt;code&gt;cy.visit()&lt;/code&gt; in the above code resolves. Therefore creating a &lt;a href=&quot;intercept&quot;&gt;&lt;code&gt;cy.intercept()&lt;/code&gt;&lt;/a&gt; route will happen too late, and Cypress will not process the requests.</source>
          <target state="translated">위 코드 의 &lt;code&gt;cy.visit()&lt;/code&gt; 가 해결 될 때까지 많은 애플리케이션이 이미 라우팅, 초기화 및 요청을 시작했습니다 . 따라서 &lt;a href=&quot;intercept&quot;&gt; &lt;code&gt;cy.intercept()&lt;/code&gt; &lt;/a&gt; 라우트 생성은 너무 늦게 이루어지며 Cypress는 요청을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41cfb5d324a03fa4926fd5cd22853342474b7e1e" translate="yes" xml:space="preserve">
          <source>Many applications will have already begun routing, initialization, and requests by the time the &lt;code&gt;cy.visit()&lt;/code&gt; in the above code resolves. Therefore creating a &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; will happen too late, and Cypress will not process the requests.</source>
          <target state="translated">위의 코드에서 &lt;code&gt;cy.visit()&lt;/code&gt; 가 해결 될 때까지 많은 응용 프로그램에서 이미 라우팅, 초기화 및 요청을 시작했습니다 . 따라서 &lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 생성은 너무 늦게 발생하며 Cypress는 요청을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5b17f1b6812165887f5b5827b59116e76e35e72" translate="yes" xml:space="preserve">
          <source>Many browsers such as Firefox, Safari, and Internet Explorer are not currently supported. Support for more browsers is on our roadmap. You can read an exhaustive explanation about our future cross browser testing strategy &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/310&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Firefox, Safari 및 Internet Explorer와 같은 많은 브라우저는 현재 지원되지 않습니다. 더 많은 브라우저에 대한 지원은 로드맵에 있습니다. 미래의 교차 브라우저 테스트 전략에 대한 자세한 설명은 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/310&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="deccd58d208bf0efdcd7527a95ebdeb681d59e65" translate="yes" xml:space="preserve">
          <source>Many commands have a default, built-in assertion, or rather have requirements that may cause it to fail without needing an explicit assertion you&amp;rsquo;ve added.</source>
          <target state="translated">많은 명령에는 기본 제공 기본 제공 어설 션이 있거나 추가 한 명시 적 어설 션이 없어도 실패 할 수있는 요구 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9212119d80329bd222fa4e9c75948d57ed9efeb5" translate="yes" xml:space="preserve">
          <source>Many error messages have been rewritten to be much more fluent and easier to understand.</source>
          <target state="translated">훨씬 더 유창하고 이해하기 쉽게 많은 오류 메시지가 재 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b67d956a31853a13b263fb151fe1f802bc843c4" translate="yes" xml:space="preserve">
          <source>Many first time users look at Cypress code and think it runs synchronously.</source>
          <target state="translated">많은 사용자들이 Cypress 코드를보고 동 기적으로 실행한다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="b627362b19722478ab857b3e0670013bf0bd5bf3" translate="yes" xml:space="preserve">
          <source>Many internal development / debugging processes improved.</source>
          <target state="translated">많은 내부 개발 / 디버깅 프로세스가 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="0578bbe35f4cd3360c635588c2bd18aa71e0aaf7" translate="yes" xml:space="preserve">
          <source>Many new configuration options are available for controlling how XHR&amp;rsquo;s are stubbed.</source>
          <target state="translated">XHR의 스터 빙 방식을 제어하기 위해 많은 새로운 구성 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91450740a314f8d06185e9abd63eb52ed6c619b6" translate="yes" xml:space="preserve">
          <source>Many of our users ask how they can recover from failed commands.</source>
          <target state="translated">많은 사용자가 실패한 명령을 복구하는 방법을 묻습니다.</target>
        </trans-unit>
        <trans-unit id="ebad1da53b473c981bee1a4aa1baaf38d821b85f" translate="yes" xml:space="preserve">
          <source>Many of our users ask how to accomplish this seemingly simple idiom in Cypress.</source>
          <target state="translated">많은 사용자들이 Cypress에서이 단순한 관용구를 달성하는 방법을 묻습니다.</target>
        </trans-unit>
        <trans-unit id="45d1659b5cf476f2b90f2ec2a4b45355baab986a" translate="yes" xml:space="preserve">
          <source>Many of our users run the &lt;em&gt;majority&lt;/em&gt; of their integration tests against a local development server, but then reserve a smaller set of &lt;strong&gt;smoke tests&lt;/strong&gt; that run only against a deployed production app.</source>
          <target state="translated">많은 사용자 가 로컬 개발 서버에 대해 &lt;em&gt;대부분&lt;/em&gt; 의 통합 &lt;strong&gt;테스트&lt;/strong&gt; 를 실행 한 다음 배포 된 프로덕션 앱에 대해서만 실행 되는 소규모 &lt;strong&gt;연기 테스트&lt;/strong&gt; 를 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="66e29d1e52684cd06ac76fbdd13a73851655b327" translate="yes" xml:space="preserve">
          <source>Many of these issues are currently being worked on or are on our &lt;a href=&quot;roadmap&quot;&gt;Roadmap&lt;/a&gt;.</source>
          <target state="translated">이러한 문제 중 많은 부분이 현재 진행 중이거나 &lt;a href=&quot;roadmap&quot;&gt;로드맵에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f31c471784fde97058873281cbcf93de4eefb85" translate="yes" xml:space="preserve">
          <source>Many people approach this situation by running a command like the following:</source>
          <target state="translated">많은 사람들이 다음과 같은 명령을 실행하여이 상황에 접근합니다.</target>
        </trans-unit>
        <trans-unit id="8856cb6286f546e2c07c8c24380ecb11c0baed1d" translate="yes" xml:space="preserve">
          <source>Margin on zero client width / client height is now displayed correctly on command hover and more accurately mimics the way Chrome Dev Tools highlights elements.</source>
          <target state="translated">클라이언트 너비 / 클라이언트 높이의 여백이 이제 명령 호버에서 올바르게 표시되고 Chrome 개발자 도구가 요소를 강조 표시하는 방식을보다 정확하게 모방합니다.</target>
        </trans-unit>
        <trans-unit id="dba90dd018ee4e6023343ea7d3bbe39b4c1e7b70" translate="yes" xml:space="preserve">
          <source>Massage the subject in some way prior to making the assertion</source>
          <target state="translated">주장하기 전에 어떤 식 으로든 주제를 마사지하십시오.</target>
        </trans-unit>
        <trans-unit id="df045e1dda9af207ebdd22cc46cb4c822dc1b316" translate="yes" xml:space="preserve">
          <source>Match route against any UserId</source>
          <target state="translated">모든 UserId와 일치하는 경로</target>
        </trans-unit>
        <trans-unit id="e3f881aff307db56b041aabd99009eac81961bf6" translate="yes" xml:space="preserve">
          <source>Match the route to a specific method (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, etc).</source>
          <target state="translated">경로를 특정 방법 ( &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; 등)에 일치시킵니다 .</target>
        </trans-unit>
        <trans-unit id="836f70fd7d82393c2699b8755613486047b49b3c" translate="yes" xml:space="preserve">
          <source>Matcher</source>
          <target state="translated">Matcher</target>
        </trans-unit>
        <trans-unit id="8ffced42002a2fa5617b200f8f8fbd54a128af5e" translate="yes" xml:space="preserve">
          <source>Matchers</source>
          <target state="translated">Matchers</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="d08b9e8784711a6011e4dbb1e80d47913982b39f" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;*google.com&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*google.com&lt;/code&gt; 과 일치</target>
        </trans-unit>
        <trans-unit id="a10953a8fb2f1334f3b753eba54b9eb6f7f5199f" translate="yes" xml:space="preserve">
          <source>Matches &lt;code&gt;google.com&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;google.com&lt;/code&gt; 과 일치</target>
        </trans-unit>
        <trans-unit id="6110e7f5a76f37e450eeeec323764e57b7003ded" translate="yes" xml:space="preserve">
          <source>Matching URL</source>
          <target state="translated">일치하는 URL</target>
        </trans-unit>
        <trans-unit id="12cbe10e02e70dd3222978103128ac46f497d423" translate="yes" xml:space="preserve">
          <source>Matching origins and non origin URL&amp;rsquo;s</source>
          <target state="translated">일치하는 출처 및 비 원본 URL</target>
        </trans-unit>
        <trans-unit id="ce3222a53551b76e3d865f9d5a33f75d3f991d4a" translate="yes" xml:space="preserve">
          <source>Matching requests and routes</source>
          <target state="translated">일치하는 요청 및 경로</target>
        </trans-unit>
        <trans-unit id="2efbcbe6aa01bcece60387200b3c69ef872b2cb3" translate="yes" xml:space="preserve">
          <source>Maybe not! For these scenarios we give you a simple escape hatch to bypass all of the checks above and just force events to happen!</source>
          <target state="translated">아마! 이 시나리오에서는 위의 모든 검사를 무시하고 이벤트가 발생하도록하는 간단한 탈출 해치를 제공합니다!</target>
        </trans-unit>
        <trans-unit id="431c09700fcab65da1715e0f662680af5c825f3f" translate="yes" xml:space="preserve">
          <source>Memory optimizations in CI.</source>
          <target state="translated">CI의 메모리 최적화.</target>
        </trans-unit>
        <trans-unit id="d12885576bb1823b9e1c4cce59321dfbf5b05837" translate="yes" xml:space="preserve">
          <source>Memory usage improvements.</source>
          <target state="translated">메모리 사용량 개선</target>
        </trans-unit>
        <trans-unit id="8e8a0736134cc1207e9b9c709ee22329176acbb8" translate="yes" xml:space="preserve">
          <source>Merges multiple mochawesome JSON reports</source>
          <target state="translated">여러 가지 멋진 JSON 보고서를 병합</target>
        </trans-unit>
        <trans-unit id="2e002ffc65162e59c29d93e6f7a9ddbb30ca09c9" translate="yes" xml:space="preserve">
          <source>Merging queries</source>
          <target state="translated">쿼리 병합</target>
        </trans-unit>
        <trans-unit id="07a9c92e56c3913ed2b7410987cce0db987e75ea" translate="yes" xml:space="preserve">
          <source>Merry Christmas everyone ;-)</source>
          <target state="translated">메리 크리스마스 여러분 ;-)</target>
        </trans-unit>
        <trans-unit id="19955b50e1890263325c103ee200ecdbb71035f9" translate="yes" xml:space="preserve">
          <source>Merry Christmas everyone!</source>
          <target state="translated">메리 크리스마스 여러분!</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="cef6aba945ae2a8391fb0b6ab9733b6400f87525" translate="yes" xml:space="preserve">
          <source>Message to be printed to Cypress Command Log. Accepts a Markdown formatted message.</source>
          <target state="translated">Cypress 명령 로그에 인쇄 될 메시지입니다. 마크 다운 형식의 메시지를 수락합니다.</target>
        </trans-unit>
        <trans-unit id="bb2469146b0b0ca67690cb92451e53de5427570d" translate="yes" xml:space="preserve">
          <source>Message: &lt;code&gt;COMMIT_INFO_MESSAGE&lt;/code&gt;</source>
          <target state="translated">메시지 : &lt;code&gt;COMMIT_INFO_MESSAGE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="3583720023ed685351cee9bf652377a3f0e66a18" translate="yes" xml:space="preserve">
          <source>Method and URL</source>
          <target state="translated">방법 및 URL</target>
        </trans-unit>
        <trans-unit id="479945670b01027341d48afec46812b492c18ac0" translate="yes" xml:space="preserve">
          <source>Method and Value</source>
          <target state="translated">방법과 가치</target>
        </trans-unit>
        <trans-unit id="235d62c34b5da2f99dbd542ba942c4ea6d60bbf0" translate="yes" xml:space="preserve">
          <source>Method to match against requests</source>
          <target state="translated">요청과 일치하는 방법</target>
        </trans-unit>
        <trans-unit id="38f44181f4d91c52c894dfa6d08bb60ae8a6f477" translate="yes" xml:space="preserve">
          <source>Method, URL, and Body</source>
          <target state="translated">메소드, URL 및 본문</target>
        </trans-unit>
        <trans-unit id="11df8b01186108002422ecfc886c7cbc9528bde7" translate="yes" xml:space="preserve">
          <source>Migrating &lt;code&gt;cy.route()&lt;/code&gt; to &lt;code&gt;cy.intercept()&lt;/code&gt;</source>
          <target state="translated">마이그레이션 &lt;code&gt;cy.route()&lt;/code&gt; 에 &lt;code&gt;cy.intercept()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bc93878c3ba17340102ebf0f740f8c3302add0b" translate="yes" xml:space="preserve">
          <source>Milliseconds</source>
          <target state="translated">Milliseconds</target>
        </trans-unit>
        <trans-unit id="509e2230d08e6046ee2ef1e68e1c2d66e4ce5243" translate="yes" xml:space="preserve">
          <source>Mimic user typing behavior</source>
          <target state="translated">사용자 입력 동작 모방</target>
        </trans-unit>
        <trans-unit id="cfd23a6e536b1366fa441556525d84fb56ca0562" translate="yes" xml:space="preserve">
          <source>Minor improvements to contributing docs and scripts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1665&quot;&gt;#1665&lt;/a&gt;.</source>
          <target state="translated">문서 및 스크립트에 약간의 개선이있었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1665&quot;&gt;# 1665&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="124e85abbb2009c7204c3bf0ef8e142433a502d4" translate="yes" xml:space="preserve">
          <source>Mirroring</source>
          <target state="translated">Mirroring</target>
        </trans-unit>
        <trans-unit id="0a893ece8e469a3ca3d935c49f41d08d04b75ecc" translate="yes" xml:space="preserve">
          <source>Misc</source>
          <target state="translated">Misc</target>
        </trans-unit>
        <trans-unit id="315d4987ea678a3937a8ad8dd5906795fea294bc" translate="yes" xml:space="preserve">
          <source>Mix and match, typically have one true end-to-end test, and then stub the rest</source>
          <target state="translated">믹스 앤 매치, 일반적으로 하나의 진정한 엔드 투 엔드 테스트를 거친 후 나머지는 스텁</target>
        </trans-unit>
        <trans-unit id="f8455bb68e35c806ea06e6d44559f99c3c5014ce" translate="yes" xml:space="preserve">
          <source>Mobile testing helper for Cypress</source>
          <target state="translated">Cypress 용 모바일 테스트 도우미</target>
        </trans-unit>
        <trans-unit id="814d5c9075ac58da08deb4e3d88f6089a78f380d" translate="yes" xml:space="preserve">
          <source>Mocha</source>
          <target state="translated">Mocha</target>
        </trans-unit>
        <trans-unit id="09299d24728ba4d7f2ab3e4726b8dc2a351b8d2b" translate="yes" xml:space="preserve">
          <source>Mocha automatically shares contexts for us across all applicable hooks for each test. Additionally these aliases and properties are automatically cleaned up after each test.</source>
          <target state="translated">Mocha는 각 테스트에 적용 가능한 모든 후크에서 자동으로 컨텍스트를 공유합니다. 또한 이러한 별칭 및 속성은 각 테스트 후에 자동으로 정리됩니다.</target>
        </trans-unit>
        <trans-unit id="70c4693bafb11398e35d34e3b4baa1b0a03e19d0" translate="yes" xml:space="preserve">
          <source>Mocha&amp;rsquo;s built-in reporters</source>
          <target state="translated">모카 내장 기자</target>
        </trans-unit>
        <trans-unit id="9b10a344b67ae24fcc616378433969201b4947ff" translate="yes" xml:space="preserve">
          <source>Mochawesome now works correctly and outputs files in all versions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/551&quot;&gt;#551&lt;/a&gt;.</source>
          <target state="translated">Mochawesome은 이제 모든 버전에서 올바르게 작동하고 파일을 출력합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/551&quot;&gt;# 551&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3ba4fd3a12340764d2d6185f0628b20bfae2a6db" translate="yes" xml:space="preserve">
          <source>Mochawesome will exit correctly with code &lt;code&gt;1&lt;/code&gt; when a hook fails. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1063&quot;&gt;#1063&lt;/a&gt;.</source>
          <target state="translated">후크가 실패하면 Mochawesome이 코드 &lt;code&gt;1&lt;/code&gt; 로 올바르게 종료됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1063&quot;&gt;# 1063&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e982a9fbd6d7ea055f3583daa61b8cf12dcdfb83" translate="yes" xml:space="preserve">
          <source>Modified the &lt;code&gt;document.hasFocus()&lt;/code&gt; method to return &lt;code&gt;true&lt;/code&gt; if the top window (Cypress window) is in focus. This should now correctly match how your application behaves outside of Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1940&quot;&gt;#1940&lt;/a&gt;.</source>
          <target state="translated">상단 윈도우 (Cypress window)에 포커스가있는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하도록 &lt;code&gt;document.hasFocus()&lt;/code&gt; 메서드를 수정했습니다 . 이제 Cypress 외부에서 애플리케이션이 작동하는 방식과 올바르게 일치해야합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1940&quot;&gt;# 1940&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1f7dd5e6b53a181538f5b496c3e397f65fcff0fb" translate="yes" xml:space="preserve">
          <source>Modifier effects</source>
          <target state="translated">수정 자 효과</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="5a53f153d15be1c568be25f585edd0190baca4a1" translate="yes" xml:space="preserve">
          <source>Modifiers are automatically released between tests, even with &lt;code&gt;{release: false}&lt;/code&gt;.</source>
          <target state="translated">수정자는 &lt;code&gt;{release: false}&lt;/code&gt; 로도 테스트간에 자동으로 해제됩니다 .</target>
        </trans-unit>
        <trans-unit id="26d367dff38eac0b85a9568bde2c53c2423d004a" translate="yes" xml:space="preserve">
          <source>Modifiers are simulated by setting their corresponding values to &lt;code&gt;true&lt;/code&gt; for key and click events. So, for example, activating the &lt;code&gt;{shift}&lt;/code&gt; modifier will set &lt;code&gt;event.shiftKey&lt;/code&gt; to true for any key events, such as &lt;code&gt;keydown&lt;/code&gt;.</source>
          <target state="translated">키 및 클릭 이벤트에 대해 해당 값을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 수정자를 시뮬레이션 합니다. 예를 들어 &lt;code&gt;{shift}&lt;/code&gt; 수정자를 활성화하면 &lt;code&gt;keydown&lt;/code&gt; 과 같은 모든 주요 이벤트에 대해 &lt;code&gt;event.shiftKey&lt;/code&gt; 가 true로 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="682e67798b95a80ed10baf13833a0428f45ff4c3" translate="yes" xml:space="preserve">
          <source>Modify Electron app switches</source>
          <target state="translated">Electron 앱 스위치 수정</target>
        </trans-unit>
        <trans-unit id="ef6bdfed66bc550b98a08f356b417584d018e6c7" translate="yes" xml:space="preserve">
          <source>Modify args based on browser</source>
          <target state="translated">브라우저를 기반으로 args 수정</target>
        </trans-unit>
        <trans-unit id="9f6cb2abde0bfdde4e12f1e9893c3c51c906387d" translate="yes" xml:space="preserve">
          <source>Modify browser launch arguments, preferences, and extensions</source>
          <target state="translated">브라우저 실행 인수, 환경 설정 및 확장 수정</target>
        </trans-unit>
        <trans-unit id="0b343474d47e423ff4e127d031d52708ec8b2267" translate="yes" xml:space="preserve">
          <source>Modify browser launch arguments:</source>
          <target state="translated">브라우저 실행 인수를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="32d0c25b785344d57cd3b1dd991846a745b59161" translate="yes" xml:space="preserve">
          <source>Modify options for TypeScript compilation</source>
          <target state="translated">TypeScript 컴파일 옵션 수정</target>
        </trans-unit>
        <trans-unit id="2d6f161a8054c6e895ee899296c1384958a789cb" translate="yes" xml:space="preserve">
          <source>Modify screenshot details</source>
          <target state="translated">스크린 샷 세부 정보 수정</target>
        </trans-unit>
        <trans-unit id="9f4f49b27873da79133502b4415ba8406222f55c" translate="yes" xml:space="preserve">
          <source>Modify screenshot path</source>
          <target state="translated">스크린 샷 경로 수정</target>
        </trans-unit>
        <trans-unit id="f854a4df77032cb21feee6480ee2489d112f2d87" translate="yes" xml:space="preserve">
          <source>Modify your Application before it loads after page transitions</source>
          <target state="translated">페이지 전환 후로드하기 전에 응용 프로그램 수정</target>
        </trans-unit>
        <trans-unit id="c32630d3c0ae2ff96b5fb18c71fff0357e46ddaf" translate="yes" xml:space="preserve">
          <source>Modifying an incoming response</source>
          <target state="translated">수신 응답 수정</target>
        </trans-unit>
        <trans-unit id="89cab456f9d18bc059b465ce59388cf3ea441cb9" translate="yes" xml:space="preserve">
          <source>Modifying an outgoing request</source>
          <target state="translated">나가는 요청 수정</target>
        </trans-unit>
        <trans-unit id="20a8393b6cce3c25730fdedc4368d43e36a833c4" translate="yes" xml:space="preserve">
          <source>Modifying fixture data before using it</source>
          <target state="translated">사용하기 전에 조명기 데이터 수정</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">모듈 API</target>
        </trans-unit>
        <trans-unit id="018c7f864edc24dac6c48e2bea114c9d3ee3c3d6" translate="yes" xml:space="preserve">
          <source>Module for adding visual regression testing to Cypress.</source>
          <target state="translated">Cypress에 시각적 회귀 테스트를 추가하기위한 모듈.</target>
        </trans-unit>
        <trans-unit id="f1c9b76d560c89c55f48f9d201f33ee01912eeed" translate="yes" xml:space="preserve">
          <source>Month Inputs</source>
          <target state="translated">월 입력</target>
        </trans-unit>
        <trans-unit id="45b8f20869e24872df19def36622f5cffb3b60e7" translate="yes" xml:space="preserve">
          <source>More &lt;code&gt;cy.spy()&lt;/code&gt; examples</source>
          <target state="translated">더 많은 &lt;code&gt;cy.spy()&lt;/code&gt; 예제</target>
        </trans-unit>
        <trans-unit id="4560ff401774bfb5b2711a3156e92fb27b6be5ac" translate="yes" xml:space="preserve">
          <source>More &lt;code&gt;cy.stub()&lt;/code&gt; examples</source>
          <target state="translated">더 많은 &lt;code&gt;cy.stub()&lt;/code&gt; 예제</target>
        </trans-unit>
        <trans-unit id="a033cdaa694d2f3dab32939161991cb126b374dd" translate="yes" xml:space="preserve">
          <source>More Info:</source>
          <target state="translated">더 많은 정보:</target>
        </trans-unit>
        <trans-unit id="c7edc0bf54b3bf2bdd3b7b485cef9f4031121657" translate="yes" xml:space="preserve">
          <source>More changes to prepare for server adapters,</source>
          <target state="translated">서버 어댑터를 준비하기위한 추가 변경 사항</target>
        </trans-unit>
        <trans-unit id="98fbe8b660ac4b398b4966666617d52580c9d094" translate="yes" xml:space="preserve">
          <source>More content was added to our &lt;a href=&quot;../tooling/code-coverage&quot;&gt;Code Coverage&lt;/a&gt; doc.</source>
          <target state="translated">더 많은 내용이 &lt;a href=&quot;../tooling/code-coverage&quot;&gt;Code Coverage&lt;/a&gt; 문서 에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6f099371f505f33a215bcb52e60d5c2746d87e5a" translate="yes" xml:space="preserve">
          <source>Most CI providers will automatically kill background processes so you don&amp;rsquo;t have to worry about cleaning up your server process once Cypress finishes.</source>
          <target state="translated">대부분의 CI 제공 업체는 백그라운드 프로세스를 자동으로 종료하므로 Cypress가 완료된 후 서버 프로세스를 정리할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="af6c80da5531ea12bcd3adc0689e100aa64af93d" translate="yes" xml:space="preserve">
          <source>Most likely fixed a bug that was crashing Cypress due to &lt;code&gt;Cannot set headers after they've been sent&lt;/code&gt;. We were unable to write a test for this since we could not recreate the error, but analyzed how it &lt;em&gt;may&lt;/em&gt; happen and fixed the code there. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you see this error, it will be obvious since Cypress will literally crash.</source>
          <target state="translated">&lt;code&gt;Cannot set headers after they've been sent&lt;/code&gt; 때문에 Cypress가 충돌하던 버그를 수정했습니다 . 오류를 재현 할 수 없어서 테스트를 작성할 수 없었지만 오류 &lt;em&gt;가&lt;/em&gt; 발생 하는 방식을 분석 하여 코드를 수정했습니다. 이 오류가 표시되면 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제를여십시오&lt;/a&gt; . Cypress가 문자 그대로 충돌하기 때문에 분명합니다.</target>
        </trans-unit>
        <trans-unit id="f394c1de5256dc0e2025bdec29ee0354d43290a0" translate="yes" xml:space="preserve">
          <source>Most of the action commands now take multiple snapshots (giving you a precise look at an action prior to it happening, and then afterwards).</source>
          <target state="translated">대부분의 작업 명령은 이제 여러 스냅 샷을 생성합니다 (작업이 발생하기 전과 후에 정확하게 작업을 볼 수 있도록 함).</target>
        </trans-unit>
        <trans-unit id="b9543f0af4fafcd6d2a2a813d8ce702ba83f3a2c" translate="yes" xml:space="preserve">
          <source>Most of the time this use case is needed when users click an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; that opens a new tab. Users then want to switch to that tab to verify that the content loaded. But, you shouldn&amp;rsquo;t need to do this. In fact we have &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;recipes of showing you how to test this without multiple tabs&lt;/a&gt;.</source>
          <target state="translated">이 사용 사례는 대부분 사용자가 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 를 클릭하여 새 탭을 열 때 필요합니다 . 그런 다음 사용자는 해당 탭으로 전환하여 내용이로드되었는지 확인하려고합니다. 그러나이 작업을 수행 할 필요는 없습니다. 실제로 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;여러 탭없이 이것을 테스트하는 방법을 보여주는 레시피&lt;/a&gt; 가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f098ddab7cd85595b7bc50c469384586ac99b82" translate="yes" xml:space="preserve">
          <source>Most of the time, when querying for elements, you expect them to eventually exist. But sometimes you wish to wait until they &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; exist.</source>
          <target state="translated">대부분의 경우 요소를 쿼리 할 때 결국 요소가 존재할 것으로 예상합니다. 그러나 때로는 존재 &lt;em&gt;하지 않을&lt;/em&gt; 때까지 기다릴 &lt;em&gt;수도&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a782808551f348930fba38dd0a762c24097d5e" translate="yes" xml:space="preserve">
          <source>Most testing tools (like Selenium) operate by running outside of the browser and executing remote commands across the network. &lt;em&gt;Cypress is the exact opposite.&lt;/em&gt; Cypress is executed in the same run loop as your application.</source>
          <target state="translated">Selenium과 같은 대부분의 테스트 도구는 브라우저 외부에서 실행하고 네트워크에서 원격 명령을 실행하여 작동합니다. &lt;em&gt;Cypress는 정반대입니다. &lt;/em&gt;Cypress는 애플리케이션과 동일한 실행 루프에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="80c34b003b881af372ec0bfca3c68bc5dfc2cdb0" translate="yes" xml:space="preserve">
          <source>Mounting a project directory with an existing &lt;code&gt;node_modules&lt;/code&gt; into a &lt;code&gt;cypress/base&lt;/code&gt; docker image &lt;strong&gt;will not work&lt;/strong&gt;:</source>
          <target state="translated">기존에 프로젝트 디렉토리에 설치 &lt;code&gt;node_modules&lt;/code&gt; 을 에 &lt;code&gt;cypress/base&lt;/code&gt; 고정 표시기 이미지 &lt;strong&gt;하지 않습니다 일&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="b239ecd4f1b125963a812db57dc3cec60573502b" translate="yes" xml:space="preserve">
          <source>Mouse Events</source>
          <target state="translated">마우스 이벤트</target>
        </trans-unit>
        <trans-unit id="889d0cd771f51813c36f0a1326540e6442b615e4" translate="yes" xml:space="preserve">
          <source>Mousedown cancellation will not cause focus</source>
          <target state="translated">마우스 다운 취소로 인해 초점이 맞지 않습니다</target>
        </trans-unit>
        <trans-unit id="04a4551cf8f2ffd2cc7a1a6a262a29951c273d43" translate="yes" xml:space="preserve">
          <source>Move repeated code in previous tests to &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hooks.</source>
          <target state="translated">이전 테스트에서 반복 된 코드를 &lt;code&gt;beforeEach&lt;/code&gt; 후크 &lt;code&gt;before&lt;/code&gt; 또는 이전으로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="be2fa0dc690b284e6dfe99319975f6a05b5fcc89" translate="yes" xml:space="preserve">
          <source>Move the clock a number of milliseconds. Any timers within the affected range of time will be called.</source>
          <target state="translated">시계를 밀리 초만큼 움직입니다. 영향을받는 시간 범위 내의 모든 타이머가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9b5d46d6dc554aac1eec9c8a2ac1ff34ba5998da" translate="yes" xml:space="preserve">
          <source>Move the clock the specified number of &lt;code&gt;milliseconds&lt;/code&gt;. Any timers within the affected range of time will be called.</source>
          <target state="translated">시계를 지정된 &lt;code&gt;milliseconds&lt;/code&gt; 수만큼 이동하십시오 . 영향을받는 시간 범위 내의 모든 타이머가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5c61bb0d107be71155afebcab18cb29288fb208e" translate="yes" xml:space="preserve">
          <source>Move those Cypress commands into an &lt;code&gt;it(...)&lt;/code&gt; block and everything will work correctly.</source>
          <target state="translated">Cypress 명령을 &lt;code&gt;it(...)&lt;/code&gt; 블록으로 옮기면 모든 것이 올바르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5761e4eb671f9f4f0945b4f525ec85951b39678d" translate="yes" xml:space="preserve">
          <source>Move time after overriding a native time function with &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 으로 기본 시간 함수를 대체 한 후 시간을 이동하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c3b0ec167613968f727aab461572d5e6997faa5" translate="yes" xml:space="preserve">
          <source>Moved snapshot message to be affixed to the bottom of the remote app in preparation for cycling through multiple snapshots.</source>
          <target state="translated">여러 스냅 샷을 순환하기 위해 스냅 샷 메시지를 원격 앱의 하단에 부착하도록 옮겼습니다.</target>
        </trans-unit>
        <trans-unit id="4c80111af24ff29caaa5295aff90a78cb9762c99" translate="yes" xml:space="preserve">
          <source>Moves cursor down</source>
          <target state="translated">커서를 아래로 이동</target>
        </trans-unit>
        <trans-unit id="82954d32c3ed425a1b14e632c4d60273e2189cde" translate="yes" xml:space="preserve">
          <source>Moves cursor left</source>
          <target state="translated">커서를 왼쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="10e5d58b6d0c9baed5e17aa003f42e4579268bfe" translate="yes" xml:space="preserve">
          <source>Moves cursor right</source>
          <target state="translated">커서를 오른쪽으로 이동</target>
        </trans-unit>
        <trans-unit id="51e610897322b968cf2cb4fb55f659138cdff9a6" translate="yes" xml:space="preserve">
          <source>Moves cursor to end of typeable element</source>
          <target state="translated">커서를 입력 가능한 요소의 끝으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="18f72522a36155f6dfce19e97f98e42ba361987b" translate="yes" xml:space="preserve">
          <source>Moves cursor to the end of the line</source>
          <target state="translated">커서를 줄의 끝으로 이동</target>
        </trans-unit>
        <trans-unit id="e76fe25f1f40f9931fb081a54b8a92064fef6334" translate="yes" xml:space="preserve">
          <source>Moves cursor to the start of the line</source>
          <target state="translated">커서를 줄의 시작 부분으로 이동</target>
        </trans-unit>
        <trans-unit id="647a380e2712638453169ad2cd221bbce09d9b98" translate="yes" xml:space="preserve">
          <source>Moves cursor to the start of typeable element</source>
          <target state="translated">커서를 입력 가능한 요소의 시작으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1457b152a68551e25968913f5e97eb00d849a67b" translate="yes" xml:space="preserve">
          <source>Moves cursor up</source>
          <target state="translated">커서를 위로 이동</target>
        </trans-unit>
        <trans-unit id="ed358fdd2c6c1b1051e1dbf45e846f478f5e4e6a" translate="yes" xml:space="preserve">
          <source>Much better. But still coupled to text content that may change.</source>
          <target state="translated">훨씬 낫다. 그러나 여전히 변경 될 수있는 텍스트 내용과 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77765cac3c7ce5c92f09833a369c83486c36ffe" translate="yes" xml:space="preserve">
          <source>Much slower</source>
          <target state="translated">훨씬 느려</target>
        </trans-unit>
        <trans-unit id="f248990047836f9af40f0eb02ccb3f884aff4b66" translate="yes" xml:space="preserve">
          <source>Multiple &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; calls can be labeled and associated to a &lt;strong&gt;single&lt;/strong&gt; run by passing in the &lt;a href=&quot;command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;--group &amp;lt;name&amp;gt;&lt;/code&gt; flag&lt;/a&gt;, where &lt;code&gt;name&lt;/code&gt; is an arbitrary reference label. The group name must be unique within the associated test run.</source>
          <target state="translated">&lt;a href=&quot;command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;--group &amp;lt;name&amp;gt;&lt;/code&gt; &lt;/a&gt; 플래그 를 전달하여 여러 개의 &lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 호출에 레이블을 지정하고 &lt;strong&gt;단일&lt;/strong&gt; 실행에 연결할 수 있습니다 . 여기서 &lt;code&gt;name&lt;/code&gt; 은 임의의 참조 레이블입니다. 그룹 이름은 관련 테스트 실행 내에서 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="48e99bc02a5c317d584a54fa0a48818f479c8440" translate="yes" xml:space="preserve">
          <source>Multiple Assertions</source>
          <target state="translated">다중 어설 션</target>
        </trans-unit>
        <trans-unit id="0922553b0e0a73ead1266b4da2d2a38a75162ebf" translate="yes" xml:space="preserve">
          <source>Multiple Reporters</source>
          <target state="translated">여러 기자</target>
        </trans-unit>
        <trans-unit id="331f9a2c732ec80c48d077d1d11d4db5cb14e773" translate="yes" xml:space="preserve">
          <source>Multiple assertions</source>
          <target state="translated">다중 어설 션</target>
        </trans-unit>
        <trans-unit id="57ec357675f2389696871840a18642befa15466c" translate="yes" xml:space="preserve">
          <source>Multiple browsers open at the same time</source>
          <target state="translated">여러 브라우저가 동시에 열립니다</target>
        </trans-unit>
        <trans-unit id="29bb8368a994515e3d19c89c63c64c0f07edd985" translate="yes" xml:space="preserve">
          <source>Multiple reporters examples</source>
          <target state="translated">여러 기자 예</target>
        </trans-unit>
        <trans-unit id="9148fbb8304f4463eb369efa0553bac9a7195cb9" translate="yes" xml:space="preserve">
          <source>Multiple snapshots are now cycled automatically on hover, and the name of the snapshot is displayed.</source>
          <target state="translated">여러 개의 스냅 샷이 호버링시 자동으로 순환되고 스냅 샷의 이름이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d69ed4b1357c7fe8fad86436eeb947e3961769c3" translate="yes" xml:space="preserve">
          <source>Multiple tabs</source>
          <target state="translated">여러 탭</target>
        </trans-unit>
        <trans-unit id="c7a46952c5c2d8fd100a6fbd4c2bcad60f83e8db" translate="yes" xml:space="preserve">
          <source>Multiple values must be separated by a comma, not a space.</source>
          <target state="translated">여러 값은 공백이 아닌 쉼표로 구분해야합니다.</target>
        </trans-unit>
        <trans-unit id="54ecc4f4fd90a0d84f23eaec608679503bc43cc3" translate="yes" xml:space="preserve">
          <source>My application does A/B testing, how do I account for that?</source>
          <target state="translated">내 응용 프로그램은 A / B 테스트를 수행하는데 어떻게 처리합니까?</target>
        </trans-unit>
        <trans-unit id="cecb686770f745c887257951b8338a595eac593d" translate="yes" xml:space="preserve">
          <source>My test still passes! The last &lt;code&gt;cy.get('.todo-list')&lt;/code&gt; and the assertion &lt;code&gt;should('have.length', 2)&lt;/code&gt; are clearly showing the spinning indicators, meaning Cypress is requerying for them.</source>
          <target state="translated">내 시험은 여전히 ​​통과! 마지막 &lt;code&gt;cy.get('.todo-list')&lt;/code&gt; 및 어설 션 &lt;code&gt;should('have.length', 2)&lt;/code&gt; 는 회전 표시기를 명확하게 표시하므로 Cypress가 다시 쿼리한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="7b43145da4a748e6bed58068e2758ad0437c7292" translate="yes" xml:space="preserve">
          <source>My users receive a &amp;ldquo;welcome wizard&amp;rdquo;, but existing ones don&amp;rsquo;t. Can I always close the wizard in case it&amp;rsquo;s shown, and ignore it when it&amp;rsquo;s not?</source>
          <target state="translated">내 사용자에게는 &quot;환영 마법사&quot;가 제공되지만 기존 사용자에게는 그렇지 않습니다. 표시되는 경우 항상 마법사를 닫을 수 있고 표시되지 않으면 무시해도됩니까?</target>
        </trans-unit>
        <trans-unit id="ac489d5ae4982a9a391ccbe6c4f85b759a49ec66" translate="yes" xml:space="preserve">
          <source>NPM module for create-react-app applications to instrument source code without ejecting react-scripts</source>
          <target state="translated">반응 스크립트를 꺼내지 않고 소스 코드를 계측하기위한 create-react-app 애플리케이션 용 NPM 모듈</target>
        </trans-unit>
        <trans-unit id="d4e7cb43e2a14f0d564f130472a1f8db5d1c42b7" translate="yes" xml:space="preserve">
          <source>NTLM authentication support for Cypress</source>
          <target state="translated">Cypress에 대한 NTLM 인증 지원</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="f9d2933e9257b6e2af23e64c57ebdf5085947fcd" translate="yes" xml:space="preserve">
          <source>Name Value</source>
          <target state="translated">이름 값</target>
        </trans-unit>
        <trans-unit id="b8c2e6ae0fa23d551c1843ea039ab0e3553786e7" translate="yes" xml:space="preserve">
          <source>Name and Value</source>
          <target state="translated">이름과 가치</target>
        </trans-unit>
        <trans-unit id="fbe5d2f276bca82410d5e445fc3cb42570fbdb36" translate="yes" xml:space="preserve">
          <source>Name of function to be invoked.</source>
          <target state="translated">호출 할 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="cdc8ab8381e03a2b2e7079e785d3c581334c1d52" translate="yes" xml:space="preserve">
          <source>Name of native functions that clock should override.</source>
          <target state="translated">클럭이 재정의해야하는 기본 함수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a5060069b5ed173f8884cf707dad275d318888c8" translate="yes" xml:space="preserve">
          <source>Name of property or nested properties (with dot notation) to get.</source>
          <target state="translated">가져올 속성 또는 중첩 속성 (점 표기법 포함)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7f5dbb53b1fbd7441597e2204594eaa622731421" translate="yes" xml:space="preserve">
          <source>Named the spec + app iframe so that inside of Chrome Dev Tools the iframe selector will clearly distinguish which iframe is your application versus Cypress.</source>
          <target state="translated">Chrome 개발자 도구 내에서 iframe 선택기는 애플리케이션과 Cypress와 비교하여 iframe 선택기를 명확하게 구분할 수 있도록 spec + app iframe으로 명명되었습니다.</target>
        </trans-unit>
        <trans-unit id="a61ae26a7f8c60a906482146649f22e33b0fee98" translate="yes" xml:space="preserve">
          <source>Names given to &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; now work properly when they contain a &lt;code&gt;.&lt;/code&gt; character. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3512&quot;&gt;#3512&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 지정된 이름은 이제를 포함 할 때 올바르게 작동합니다 &lt;code&gt;.&lt;/code&gt; 캐릭터. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3512&quot;&gt;# 3512&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="bc893c6af718324576f34765093d5f20b6c54411" translate="yes" xml:space="preserve">
          <source>Names of cookies to be preserved. Pass an unlimited number of arguments.</source>
          <target state="translated">보존 할 쿠키의 이름입니다. 무제한의 인수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="47b8b73453024c16a33ac79654339beda985ce39" translate="yes" xml:space="preserve">
          <source>Namespaced all cypress internal routes.</source>
          <target state="translated">모든 사이프러스 내부 경로의 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="34803b64f16548b242233b7132d75f6e5f8fe8e6" translate="yes" xml:space="preserve">
          <source>Naming conventions</source>
          <target state="translated">명명 규칙</target>
        </trans-unit>
        <trans-unit id="801f35e25fc9a9c80bc8e37a7c4aaa9359f4f20b" translate="yes" xml:space="preserve">
          <source>Native Location</source>
          <target state="translated">기본 위치</target>
        </trans-unit>
        <trans-unit id="2e30cc097892427215e0b5070bcb34797f4a0b84" translate="yes" xml:space="preserve">
          <source>Native access</source>
          <target state="translated">기본 액세스</target>
        </trans-unit>
        <trans-unit id="ce5f99883c519caeab9bed25f6e57393b35f5359" translate="yes" xml:space="preserve">
          <source>Navigate back or forward to the previous or next URL in the browser&amp;rsquo;s history.</source>
          <target state="translated">브라우저 기록에서 이전 또는 다음 URL로 앞뒤로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="3d054fd3b1c68cde4d6675a4072249d0aa5824b2" translate="yes" xml:space="preserve">
          <source>Navigate to any superdomain without cross-origin errors</source>
          <target state="translated">교차 출처 오류없이 수퍼 도메인으로 이동</target>
        </trans-unit>
        <trans-unit id="f003138d5b0ef4f3d03123419a03c71510d01b29" translate="yes" xml:space="preserve">
          <source>Navigating between full page refreshes during tests now works reliably.</source>
          <target state="translated">테스트 중에 전체 페이지 새로 고침을 탐색하면 이제 안정적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ea53187d0b8860192e4cc973b4edf4179ca436b1" translate="yes" xml:space="preserve">
          <source>Nested Properties</source>
          <target state="translated">중첩 속성</target>
        </trans-unit>
        <trans-unit id="71c8d5da6b113edf1a2be1e1db3f1c016c79d602" translate="yes" xml:space="preserve">
          <source>Nested directories under &lt;code&gt;cypress/support&lt;/code&gt; no longer cause a &lt;code&gt;500&lt;/code&gt; when tests run. This was due to Cypress not ignoring directories and trying to serve them as regular files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/163&quot;&gt;#163&lt;/a&gt;.</source>
          <target state="translated">테스트가 실행될 때 &lt;code&gt;cypress/support&lt;/code&gt; 에 중첩 된 디렉토리가 더 이상 &lt;code&gt;500&lt;/code&gt; 을 발생시키지 않습니다 . Cypress가 디렉토리를 무시하지 않고 일반 파일로 제공하려고했기 때문입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/163&quot;&gt;# 163&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="ec2c20162d70708dfac963668d643cffd68cdc19" translate="yes" xml:space="preserve">
          <source>Network Requests</source>
          <target state="translated">네트워크 요청</target>
        </trans-unit>
        <trans-unit id="9747f0ed594c9375b5488666b1886defe05defc7" translate="yes" xml:space="preserve">
          <source>Network XHR Requests</source>
          <target state="translated">네트워크 XHR 요청</target>
        </trans-unit>
        <trans-unit id="5b10e6f550f2b5b63058d3b037b51be856d701eb" translate="yes" xml:space="preserve">
          <source>Network requests in Kitchen Sink example</source>
          <target state="translated">키친 싱크 예제의 네트워크 요청</target>
        </trans-unit>
        <trans-unit id="80c3052d33ccdee15ffaaa110c5c39072495fe63" translate="yes" xml:space="preserve">
          <source>Never</source>
          <target state="translated">Never</target>
        </trans-unit>
        <trans-unit id="727da35b772915d16f0be7fd55bf558b6f956678" translate="yes" xml:space="preserve">
          <source>Nevertheless, if you &lt;strong&gt;did&lt;/strong&gt; want to write a test in Cypress, you already have the tools to do this without involving the UI.</source>
          <target state="translated">당신은 그럼에도 불구하고, &lt;strong&gt;않았다&lt;/strong&gt; 싸이프레스의 테스트를 작성하려면, 당신은 이미 UI를 포함하지 않고이 작업을 수행 할 수있는 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5add408b5e4bcec582f1bccaff5cb1b25bb8aea7" translate="yes" xml:space="preserve">
          <source>Nevertheless, it is useful if your command can work in multiple ways - either with an existing subject or without one.</source>
          <target state="translated">그럼에도 불구하고, 당신의 명령이 기존의 주제와 관계없이 또는 여러 가지 방식으로 작동 할 수 있다면 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5623546efbfd7982de21607d02a7a20acfe8f552" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;.scrollIntoView()&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;.scrollIntoView ()&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="e0a66b791889a58e42d204ab7dc1a3dff26a1467" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;.trigger()&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;.trigger ()&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b11235404026cea94c965fa477255344baa5b4c7" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Catalog of Events&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;이벤트 카탈로그&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="48e7e007baf22fdeecebb2e2b6e81b0c61fad499" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Cypress.Commands&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;Cypress.Commands&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="66df5a0b16ae1791ab99c356063f69f065ba8e80" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Cypress.log&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;Cypress.log&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="79a92c7c66ee582b9058fd5fc553efb82f6784cb" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;Module API&amp;rdquo; doc</source>
          <target state="translated">새로운&amp;ldquo;모듈 API&amp;rdquo;문서</target>
        </trans-unit>
        <trans-unit id="e8bd1252f42e4fca4c6f8c22a10c97df31c87907" translate="yes" xml:space="preserve">
          <source>New &amp;ldquo;cy.scrollTo()&amp;rdquo;</source>
          <target state="translated">새로운&amp;ldquo;cy.scrollTo ()&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b52b08cd047ce32efc9e565d8c671f3272a9cdd2" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt;&lt;code&gt;.scrollIntoView()&lt;/code&gt;&lt;/a&gt; command. Useful for scrolling an element into view. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/498&quot;&gt;#498&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;#313&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/519&quot;&gt;#519&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt; &lt;code&gt;.scrollIntoView()&lt;/code&gt; &lt;/a&gt; 명령 요소를보기로 스크롤하는 데 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/498&quot;&gt;# 498&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;# 313&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/519&quot;&gt;# 519를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="b7e8d0643ac2842fa896462c58262be2feebb1a2" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/scrollto&quot;&gt;&lt;code&gt;cy.scrollTo()&lt;/code&gt;&lt;/a&gt; command. Useful for having a container scroll to a specific position. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/497&quot;&gt;#497&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;#313&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/scrollto&quot;&gt; &lt;code&gt;cy.scrollTo()&lt;/code&gt; &lt;/a&gt; 명령. 컨테이너를 특정 위치로 스크롤하는 데 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/497&quot;&gt;# 497&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/313&quot;&gt;# 313&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4636a29df1b03ce68f001c75d68df33a20fadda0" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. Useful for triggering arbitrary events. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/406&quot;&gt;#406&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; 명령 임의의 이벤트를 트리거하는 데 유용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/406&quot;&gt;# 406&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0c4966b657880f92ffedb3a818a05218a9361bfe" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;Retryability&lt;/a&gt; doc &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1278&quot;&gt;#1278&lt;/a&gt;</source>
          <target state="translated">새로운 &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;재시도&lt;/a&gt; 문서 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1278&quot;&gt;# 1278&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6224abd6d37e4b7df6d8246615dc2e521f2908e" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../tooling/code-coverage&quot;&gt;Code Coverage&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1744&quot;&gt;#1744&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../tooling/code-coverage&quot;&gt;코드 적용 범위&lt;/a&gt; 문서. &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1744&quot;&gt;# 1744&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="c06c51e5ad34aca96b655ef329585dcce09bcbb3" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;../tooling/visual-testing&quot;&gt;Visual Testing&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1536&quot;&gt;#1744&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;../tooling/visual-testing&quot;&gt;비주얼 테스팅&lt;/a&gt; 문서. &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1536&quot;&gt;# 1744&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="45a9bfcb0bae540505a183166364c68991379059" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;https://docs.cypress.io/examples/media/courses-media.html&quot;&gt;Courses&lt;/a&gt; doc to list online courses that teach end-to-end testing with Cypress. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1766&quot;&gt;#1766&lt;/a&gt;.</source>
          <target state="translated">Cypress로 엔드 투 엔드 테스트를 가르치는 온라인 코스를 나열하는 새로운 &lt;a href=&quot;https://docs.cypress.io/examples/media/courses-media.html&quot;&gt;코스&lt;/a&gt; 문서. 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1766&quot;&gt;# 1766&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c01771f4befd1d341915bfa2ad870e4c15335501" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;a href=&quot;proxy-configuration&quot;&gt;프록시 구성&lt;/a&gt; 문서. 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1486&quot;&gt;# 1486&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c527fb79cbaeebb2b4d7e342ffe60b64f0c2be75" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;Screenshot API&lt;/code&gt; doc</source>
          <target state="translated">새로운 &lt;code&gt;Screenshot API&lt;/code&gt; 문서</target>
        </trans-unit>
        <trans-unit id="fb1f191336063c46e75bf06b257f420bddc66788" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;cy.message&lt;/code&gt; and &lt;code&gt;cy.msg&lt;/code&gt; commands in preparation for &lt;code&gt;cypress-ruby&lt;/code&gt;, &lt;code&gt;cypress-node&lt;/code&gt;, &lt;code&gt;cypress-*&lt;/code&gt; packages/gem to talk directly to your back end.</source>
          <target state="translated">&lt;code&gt;cypress-ruby&lt;/code&gt; , &lt;code&gt;cypress-node&lt;/code&gt; , &lt;code&gt;cypress-*&lt;/code&gt; 패키지 / gem가 백엔드와 직접 통신 할 수 있도록 준비하는 새로운 &lt;code&gt;cy.message&lt;/code&gt; 및 &lt;code&gt;cy.msg&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="ccf0fb932c68af719e0a3d8893b501ddb1476526" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;cy.task()&lt;/code&gt; doc</source>
          <target state="translated">새로운 &lt;code&gt;cy.task()&lt;/code&gt; 문서</target>
        </trans-unit>
        <trans-unit id="66ff046fcdd5c831a44707609c477fdf4fc22189" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;options&lt;/code&gt; object replaces old &lt;code&gt;args&lt;/code&gt; as second argument to &lt;code&gt;before:browser:launch&lt;/code&gt;</source>
          <target state="translated">새로운 &lt;code&gt;options&lt;/code&gt; 목적은 이전 대체 &lt;code&gt;args&lt;/code&gt; 로 두 번째 인수 등을 &lt;code&gt;before:browser:launch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="186b048c1fffc54afa5ae5b45c6126f9121aeb12" translate="yes" xml:space="preserve">
          <source>New Example CircleCI Orb</source>
          <target state="translated">새로운 예 CircleCI Orb</target>
        </trans-unit>
        <trans-unit id="b2467835ef4ced59e6a3bb4425ddfca35436f27a" translate="yes" xml:space="preserve">
          <source>New chromium upgrade fixes situation where extremely long CI runs would sometimes randomly crash.</source>
          <target state="translated">새로운 크롬 업그레이드는 매우 긴 CI 실행이 때때로 무작위로 충돌하는 상황을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="3b0e81f655692a4b78802718e1525f4e3835cb13" translate="yes" xml:space="preserve">
          <source>New chromium upgrade prevents synchronous XHR freezes.</source>
          <target state="translated">새로운 크롬 업그레이드는 동기 XHR 동결을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="1fdfb5d0314648f4a63cf251b79e32ac9cc3ef54" translate="yes" xml:space="preserve">
          <source>New error message added about policy settings to our &lt;a href=&quot;error-messages&quot;&gt;Error Messages&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1754&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">정책 설정에 대한 새 오류 메시지가 &lt;a href=&quot;error-messages&quot;&gt;오류 메시지&lt;/a&gt; 문서에 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1754&quot;&gt;# 1567&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="e7d56bb4dd4e297805352880152d0c5342017f31" translate="yes" xml:space="preserve">
          <source>New kind of testing</source>
          <target state="translated">새로운 종류의 테스트</target>
        </trans-unit>
        <trans-unit id="caca8abdda6b7542ba4c27d38eba79a35954c0b3" translate="yes" xml:space="preserve">
          <source>New testing approaches not possible before</source>
          <target state="translated">이전에는 불가능했던 새로운 테스트 방법</target>
        </trans-unit>
        <trans-unit id="c5f21993ea2385024912dcdd7a29e743d3166f67" translate="yes" xml:space="preserve">
          <source>New traversal commands &lt;a href=&quot;../../api/commands/nextall&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/nextuntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/parentsuntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/prevall&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/prevuntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; have been added. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/432&quot;&gt;#432&lt;/a&gt;.</source>
          <target state="translated">새로운 순회 명령 &lt;a href=&quot;../../api/commands/nextall&quot;&gt; &lt;code&gt;.nextAll()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/nextuntil&quot;&gt; &lt;code&gt;.nextUntil()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/parentsuntil&quot;&gt; &lt;code&gt;.parentsUntil()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/prevall&quot;&gt; &lt;code&gt;.prevAll()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/prevuntil&quot;&gt; &lt;code&gt;.prevUntil()&lt;/code&gt; &lt;/a&gt; 이 추가되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/432&quot;&gt;# 432&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18528c67a4d488dec41975e8099583755bdee915" translate="yes" xml:space="preserve">
          <source>New users to Cypress may initially find it challenging to work with the asynchronous nature of our APIs.</source>
          <target state="translated">Cypress를 처음 사용하는 사용자는 처음에 API의 비동기 특성을 다루는 것이 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7f33b9b463e7684059101ae962fbdc5db1e5eb2" translate="yes" xml:space="preserve">
          <source>Newer CLI versions will not work on versions of Cypress &amp;lt; &lt;code&gt;0.19.0&lt;/code&gt; (but we don&amp;rsquo;t know why this would ever even happen).</source>
          <target state="translated">최신 CLI 버전은 Cypress &amp;lt; &lt;code&gt;0.19.0&lt;/code&gt; 버전에서는 작동 하지 않습니다 (그러나 이것이 왜 발생하는지는 알 수 없습니다).</target>
        </trans-unit>
        <trans-unit id="ce5f24d36c8abb2269675688704d20ef1014084d" translate="yes" xml:space="preserve">
          <source>Next Right Now - Next.js Boilerplate</source>
          <target state="translated">다음 바로 지금-Next.js Boilerplate</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">다음 단계</target>
        </trans-unit>
        <trans-unit id="4d8dec2a98dee7b543854ea9ac1414ab296149bb" translate="yes" xml:space="preserve">
          <source>Next.js boilerplate with Jest/Cypress and CI/CD pipeline built-in (monorepo, multi-tenants)</source>
          <target state="translated">Jest / Cypress 및 CI / CD 파이프 라인이 내장 된 Next.js 상용구 (모노 레포, 다중 테넌트)</target>
        </trans-unit>
        <trans-unit id="d9441960e4fb0272e22515014d077fe67c2c191b" translate="yes" xml:space="preserve">
          <source>No Args</source>
          <target state="translated">아니 아르 그스</target>
        </trans-unit>
        <trans-unit id="4702ee68581472fd4527dd9500e19add3644dbf5" translate="yes" xml:space="preserve">
          <source>No Arguments</source>
          <target state="translated">인수 없음</target>
        </trans-unit>
        <trans-unit id="a1b7763da3d955e87848a6114813163fb8ded722" translate="yes" xml:space="preserve">
          <source>No code changes to your server or client code</source>
          <target state="translated">서버 또는 클라이언트 코드에 대한 코드 변경 없음</target>
        </trans-unit>
        <trans-unit id="af6e4ce551c0eb1d83b368d3f348545f83330e27" translate="yes" xml:space="preserve">
          <source>No guarantee your stubbed responses match the actual data the server sends</source>
          <target state="translated">스텁 된 응답이 서버가 전송하는 실제 데이터와 일치한다고 보장 할 수 없음</target>
        </trans-unit>
        <trans-unit id="43930eae8e41956ec9cbaac1e2bb044c5f664376" translate="yes" xml:space="preserve">
          <source>No longer force &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to navigate to &lt;code&gt;about:blank&lt;/code&gt; prior to navigating to the real url. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/208&quot;&gt;#208&lt;/a&gt;.</source>
          <target state="translated">실제 URL로 이동하기 전에 더 이상 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;about:blank&lt;/code&gt; 로 이동 하지 않아도 됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/208&quot;&gt;# 208&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e094a3bccff8bff43909d7b73794f40dad03e972" translate="yes" xml:space="preserve">
          <source>No longer send back a 500 message when initial response status code is 4xx.</source>
          <target state="translated">초기 응답 상태 코드가 4xx 인 경우 더 이상 500 메시지를 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd0af6cfca75c5899cf7e65ad84cc8da0f0de726" translate="yes" xml:space="preserve">
          <source>No matches</source>
          <target state="translated">맞지 않는다</target>
        </trans-unit>
        <trans-unit id="8ac2290a52ee02b49ea6e0279864b4588412aa0f" translate="yes" xml:space="preserve">
          <source>No matter what is returned in the callback function, &lt;code&gt;.each()&lt;/code&gt; will always yield the original array.</source>
          <target state="translated">콜백 함수에서 반환되는 내용에 관계없이 &lt;code&gt;.each()&lt;/code&gt; 는 항상 원래 배열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c31694cf5d9a2189eff15a33f1789ab2d94a82f3" translate="yes" xml:space="preserve">
          <source>No need to use &lt;code&gt;cypress-cli&lt;/code&gt; anymore to manage Cypress versions. &lt;strong&gt;You will need to uninstall the &lt;code&gt;cypress-cli&lt;/code&gt; by running &lt;code&gt;npm uninstall -g cypress-cli&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">Cypress 버전을 관리하기 위해 더 이상 &lt;code&gt;cypress-cli&lt;/code&gt; 를 사용할 필요가 없습니다 . &lt;strong&gt; &lt;code&gt;npm uninstall -g cypress-cli&lt;/code&gt; 를&lt;/strong&gt;&lt;strong&gt; 실행 &lt;/strong&gt;&lt;strong&gt;하여 &lt;code&gt;cypress-cli&lt;/code&gt; 를 제거해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f65df38c7e949221b62a26df819cc0c36acb4fad" translate="yes" xml:space="preserve">
          <source>No need to use &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window.location&lt;/code&gt; 을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="92121508d5b64ac294a224e238d7f7498cbc576a" translate="yes" xml:space="preserve">
          <source>No test coverage on some server endpoints</source>
          <target state="translated">일부 서버 엔드 포인트에서 테스트 범위가 없음</target>
        </trans-unit>
        <trans-unit id="89c328f07e40d30f614e6be57ebfe6bc97f6ebe0" translate="yes" xml:space="preserve">
          <source>No tests found in your file</source>
          <target state="translated">파일에서 테스트를 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="bd8da0e92eefcdc8f7fd083b2c8b0072d320891a" translate="yes" xml:space="preserve">
          <source>No. You shouldn&amp;rsquo;t do that.</source>
          <target state="translated">아뇨. 그렇게해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8d2610c4471324b190316825676fc0d1a3cc45a5" translate="yes" xml:space="preserve">
          <source>Node module dependencies updated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1674&quot;&gt;#1674&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1942&quot;&gt;#1942&lt;/a&gt;.</source>
          <target state="translated">노드 모듈 종속성이 업데이트되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1674&quot;&gt;# 1674&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1942&quot;&gt;# 1942를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="c0ec20d7d237f7dd2bed4aa1a814f5612442a295" translate="yes" xml:space="preserve">
          <source>Noisy Promise demonstration. Not valid code.</source>
          <target state="translated">시끄러운 약속 데모. 유효한 코드가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f2bcd72b46f4701a431727ea4d7ded249c651144" translate="yes" xml:space="preserve">
          <source>Non-breaking space</source>
          <target state="translated">깨지지 않는 공간</target>
        </trans-unit>
        <trans-unit id="2a722c38749360de9de7d36887717cd5c07dd04b" translate="yes" xml:space="preserve">
          <source>None of the above commands are &lt;em&gt;idempotent&lt;/em&gt;; they all cause side effects. Racing commands is not possible because commands must be run in a controlled, serial manner in order to create consistency. Because integration and e2e tests primarily mimic the actions of a real user, Cypress models its command execution model after a real user working step by step.</source>
          <target state="translated">위의 명령 중 어느 것도 &lt;em&gt;dem 등하 지 않습니다&lt;/em&gt; . 그들은 모두 부작용을 일으킨다. 일관성을 유지하기 위해 명령을 제어 된 직렬 방식으로 실행해야하므로 레이싱 명령은 불가능합니다. 통합 및 e2e 테스트는 주로 실제 사용자의 동작을 모방하기 때문에 Cypress는 실제 사용자가 단계별로 작업 한 후 명령 실행 모델을 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="136e1359b2167ed4940dc7011f47c048ebbf84a5" translate="yes" xml:space="preserve">
          <source>Normally Cypress would return the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; since that is the &lt;em&gt;deepest&lt;/em&gt; element that contains &amp;ldquo;apples&amp;rdquo;.</source>
          <target state="translated">일반적으로 Cypress는 &quot;사과&quot;를 포함 하는 &lt;em&gt;가장 깊은&lt;/em&gt; 요소 이므로 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 를 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbb80e5c1388bb43baa21d06596eac6b5b6750f1" translate="yes" xml:space="preserve">
          <source>Normally when the browser detects a cross-origin HTTP request, it will send an &lt;code&gt;OPTIONS&lt;/code&gt; preflight check to ensure the server allows cross-origin requests, but &lt;code&gt;cy.request()&lt;/code&gt; bypasses CORS entirely.</source>
          <target state="translated">일반적으로 브라우저가 교차 출처 HTTP 요청을 감지 하면 서버가 교차 출처 요청을 허용하는지 확인하기 위해 &lt;code&gt;OPTIONS&lt;/code&gt; 프리 플라이트 검사를 보내지 만 &lt;code&gt;cy.request()&lt;/code&gt; 는 CORS를 완전히 무시합니다.</target>
        </trans-unit>
        <trans-unit id="60c68d02159f6c09765eb2d51789a8bc8a91e260" translate="yes" xml:space="preserve">
          <source>Normally when writing code in Node, you typically have to restart the process after changing any files.</source>
          <target state="translated">일반적으로 Node에서 코드를 작성할 때 일반적으로 파일을 변경 한 후 프로세스를 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="5895514fbcf3d6a0a79d277bea6c345ee0e68fd4" translate="yes" xml:space="preserve">
          <source>Normally, as a user, all of your test code, your application, and Cypress commands are executed in the browser. But Cypress is also a Node process that plugins can use.</source>
          <target state="translated">일반적으로 사용자는 모든 테스트 코드, 응용 프로그램 및 Cypress 명령이 브라우저에서 실행됩니다. 그러나 Cypress는 플러그인이 사용할 수있는 노드 프로세스이기도합니다.</target>
        </trans-unit>
        <trans-unit id="f85f0b503b65b1678bdce73ea41fe49e76217e0f" translate="yes" xml:space="preserve">
          <source>Not all config values can be changed at all times</source>
          <target state="translated">모든 구성 값을 항상 변경할 수있는 것은 아닙니다</target>
        </trans-unit>
        <trans-unit id="28cb651d278e081430effd741894a40be95a885e" translate="yes" xml:space="preserve">
          <source>Not all configuration values can be changed during runtime. See &lt;a href=&quot;#Notes&quot;&gt;Notes&lt;/a&gt; below for details.</source>
          <target state="translated">런타임 중에 모든 구성 값을 변경할 수있는 것은 아닙니다. 자세한 내용은 아래 참고 &lt;a href=&quot;#Notes&quot;&gt;사항을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="85fd0d0ffa97e270a4ab26d63942281b93421215" translate="yes" xml:space="preserve">
          <source>Not animating</source>
          <target state="translated">애니메이션하지 않음</target>
        </trans-unit>
        <trans-unit id="5366b56df28a7932bc55b4017c02a8b44da0b7bd" translate="yes" xml:space="preserve">
          <source>Not as obvious where values come from versus the other options.</source>
          <target state="translated">다른 옵션과 비교하여 가치가 어디에서 나오는지 분명하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c349d5ff60c494ffad3b9f757b51009d93ef609" translate="yes" xml:space="preserve">
          <source>Not as useful if you&amp;rsquo;re using traditional server side HTML rendering</source>
          <target state="translated">전통적인 서버 측 HTML 렌더링을 사용하는 경우 유용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="da1f35a0206cefa29e7666c416ac420783e39328" translate="yes" xml:space="preserve">
          <source>Not being covered</source>
          <target state="translated">보장되지 않음</target>
        </trans-unit>
        <trans-unit id="a163b430350a9df04cde13de3a705eb78295db95" translate="yes" xml:space="preserve">
          <source>Not being disabled</source>
          <target state="translated">비활성화되지 않음</target>
        </trans-unit>
        <trans-unit id="cd731ff87fc20c23d0d1b846dad17c1b59fdba80" translate="yes" xml:space="preserve">
          <source>Not being hidden</source>
          <target state="translated">숨겨지지 않음</target>
        </trans-unit>
        <trans-unit id="368c42f19cbb713ff7e310c6608e770c006cf667" translate="yes" xml:space="preserve">
          <source>Not every command is retried</source>
          <target state="translated">모든 명령이 재 시도되는 것은 아닙니다</target>
        </trans-unit>
        <trans-unit id="a33a096a90c1b37a8c60d11eddfac93efa5ecd1f" translate="yes" xml:space="preserve">
          <source>Not only is this an anti-pattern, but it&amp;rsquo;s an actual logical fallacy.</source>
          <target state="translated">이것은 반 패턴 일뿐만 아니라 실제 논리적 오류입니다.</target>
        </trans-unit>
        <trans-unit id="7b35de0a431c4174b24ed042b20257be5bcce575" translate="yes" xml:space="preserve">
          <source>Not sure what a part of the URL a host is? &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_strings_and_url_objects&quot;&gt;Use this guide as a reference.&lt;/a&gt;</source>
          <target state="translated">호스트의 URL 부분이 확실하지 않습니까? &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_strings_and_url_objects&quot;&gt;이 안내서를 참조하십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c49d64a3504b2d01592e1f16bdeb1bbc1991fc31" translate="yes" xml:space="preserve">
          <source>Not working for you? Don&amp;rsquo;t know how to set your token? If you still need to be able to be redirected to your SSO server, you can read about &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">당신을 위해 작동하지 않습니까? 토큰을 설정하는 방법을 모르십니까? 여전히 SSO 서버로 경로 재 지정할 수 있어야하는 경우 &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;웹 보안 사용 안함&lt;/a&gt; 에 대해 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="47dc41d0b3977e9e3b8385257e5356565087cc58" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;cy.clock()&lt;/code&gt; only applies to the &lt;code&gt;top&lt;/code&gt; window on a web page. It will not override the time functions of any &lt;code&gt;iframe&lt;/code&gt; embedded on the page.</source>
          <target state="translated">그 주 &lt;code&gt;cy.clock()&lt;/code&gt; 에만 적용 &lt;code&gt;top&lt;/code&gt; 웹 페이지에서 창을여십시오. 페이지에 내장 된 &lt;code&gt;iframe&lt;/code&gt; 의 시간 기능을 무시하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="87651ea2e0d84f0f10bc925332a3b282754cef2c" translate="yes" xml:space="preserve">
          <source>Note that some implementations may rely on the &lt;code&gt;input&lt;/code&gt; event instead, which is fired as a user moves the slider, but is not supported by some browsers.</source>
          <target state="translated">일부 구현은 &lt;code&gt;input&lt;/code&gt; 이벤트 에 의존 할 수 있습니다.이 이벤트는 사용자가 슬라이더를 움직일 때 발생하지만 일부 브라우저에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5575c70cc86ec9c4720a3f53e208af696e204860" translate="yes" xml:space="preserve">
          <source>Note that you must specify &lt;code&gt;Date&lt;/code&gt; in order to override the current datetime. The example below affects the current datetime without affecting scheduled timers.</source>
          <target state="translated">현재 날짜 / 시간을 재정의하려면 &lt;code&gt;Date&lt;/code&gt; 를 지정해야합니다 . 아래 예는 예약 된 타이머에 영향을주지 않고 현재 날짜 / 시간에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="e99c89f5564fd39e1eb10d60903f06d0aec1f3e7" translate="yes" xml:space="preserve">
          <source>Note that you must specify &lt;code&gt;Date&lt;/code&gt; in order to override the current datetime. The example below just affects the current datetime without affecting scheduled timers.</source>
          <target state="translated">현재 날짜 시간을 재정의하려면 &lt;code&gt;Date&lt;/code&gt; 를 지정해야합니다 . 아래 예제는 예약 된 타이머에 영향을주지 않고 현재 날짜 시간에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="71ec3c80bcdb34ce90a7bc671a4276d3079d0125" translate="yes" xml:space="preserve">
          <source>Note the use of the standard function syntax. Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; to access aliases via &lt;code&gt;this&lt;/code&gt; won&amp;rsquo;t work because of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#No_separate_this&quot;&gt;the lexical binding&lt;/a&gt; of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">표준 함수 구문을 사용하십시오. 사용 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;화살표 기능을&lt;/a&gt; 통해 액세스 별칭 &lt;code&gt;this&lt;/code&gt; 때문에 작동하지 않습니다 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#No_separate_this&quot;&gt;어휘 바인딩&lt;/a&gt; 의 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e141c018aca524e87e39832519a7ec93ce1f73ed" translate="yes" xml:space="preserve">
          <source>Note: we are still updating all of the docs to reflect all the 0.20.0 changes.</source>
          <target state="translated">참고 : 모든 0.20.0 변경 사항을 반영하도록 여전히 모든 문서를 업데이트하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="702c4b52cb899216c608d3c5323569745437248e" translate="yes" xml:space="preserve">
          <source>Note: we recommend deleting all files from the &lt;code&gt;cypress/results&lt;/code&gt; folder before running this command, since each run will output new XML files. For example, we can add the npm script commands below to our &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">참고 : 이 명령을 실행하기 전에 &lt;code&gt;cypress/results&lt;/code&gt; 폴더 에서 모든 파일을 삭제하는 것이 좋습니다. 각 실행마다 새 XML 파일이 출력되기 때문입니다. 예를 들어 아래 npm 스크립트 명령을 &lt;code&gt;package.json&lt;/code&gt; 에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="3deb92bf54af02cc1eec5104e1ad9e096cd8041f" translate="yes" xml:space="preserve">
          <source>Nothing slows a test suite down like having to log in, but all the good parts of your application most likely require an authenticated user! Here are some tips.</source>
          <target state="translated">로그인해야하는 것처럼 테스트 스위트 속도를 늦출 수있는 것은 없지만, 애플리케이션의 모든 좋은 부분에는 인증 된 사용자가 필요할 가능성이 높습니다! 다음은 몇 가지 팁입니다.</target>
        </trans-unit>
        <trans-unit id="1f4d0504f06214721b4cc87be5bcd3a4fe6afec9" translate="yes" xml:space="preserve">
          <source>Notice Cypress displays a message about this being the default page &lt;a href=&quot;../core-concepts/test-runner#Application-Under-Test&quot;&gt;on the righthand side&lt;/a&gt;. Cypress assumes you&amp;rsquo;ll want to go out and &lt;a href=&quot;../../api/commands/visit&quot;&gt;visit&lt;/a&gt; a URL on the internet - but it can also work just fine without that.</source>
          <target state="translated">유의 사항 Cypress는이 페이지 &lt;a href=&quot;../core-concepts/test-runner#Application-Under-Test&quot;&gt;가 오른쪽에&lt;/a&gt; 기본 페이지라는 메시지를 표시합니다 . Cypress는 인터넷 에서 나가서 URL을 &lt;a href=&quot;../../api/commands/visit&quot;&gt;방문&lt;/a&gt; 하고 싶다고 가정 하지만 그 없이도 잘 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22652f894a9c82a24b8671df27088b0aeac39e3d" translate="yes" xml:space="preserve">
          <source>Notice Cypress displays the message that it couldn&amp;rsquo;t find any tests. This is normal - we haven&amp;rsquo;t written any tests! Sometimes you&amp;rsquo;ll also see this message if there was an error parsing your test file. You can always open your &lt;strong&gt;Dev Tools&lt;/strong&gt; to inspect the Console for any syntax or parsing errors that prevented Cypress from reading your tests.</source>
          <target state="translated">Cypress가 테스트를 찾을 수 없다는 메시지를 표시합니다. 이것은 정상입니다-우리는 어떤 테스트도 작성하지 않았습니다! 테스트 파일을 구문 분석하는 중에 오류가 발생한 경우에도이 메시지가 표시됩니다. Cypress가 테스트를 읽지 못하게하는 구문 또는 구문 분석 오류가 있는지 콘솔을 검사하기 위해 항상 &lt;strong&gt;Dev Tools&lt;/strong&gt; 를 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33c3bfdf64f122f7b954198ce15c9be09f144ac8" translate="yes" xml:space="preserve">
          <source>Notice how the &lt;strong&gt;ADD_TODO&lt;/strong&gt; action was executed 3 times - because our test has added 3 todo items, and the &lt;strong&gt;COMPLETE_TODO&lt;/strong&gt; action was executed just once - because our test has marked 1 todo item as completed.</source>
          <target state="translated">테스트에서 3 개의 할 일 항목을 추가하고 &lt;strong&gt;COMPLETE_TODO&lt;/strong&gt; 작업이 한 번만 실행 &lt;strong&gt;되었으므로 ADD_TODO&lt;/strong&gt; 작업이 3 번 실행 된 방법에 주목 하십시오. 테스트에서 1 개의 할 일 항목이 완료된 것으로 표시 되었기 때문입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe42e5841f7dd5db49be4591cec035f4c039baf3" translate="yes" xml:space="preserve">
          <source>Notice it highlights in purple. This did three things worth noting&amp;hellip;</source>
          <target state="translated">자주색으로 강조 표시됩니다. 이것은 주목할만한 세 가지 일을했습니다 ...</target>
        </trans-unit>
        <trans-unit id="238657d12f0a7b02a469ac4e3a4519d186623156" translate="yes" xml:space="preserve">
          <source>Notice that the Cypress &lt;code&gt;npm&lt;/code&gt; package is a wrapper around the Cypress binary. The version of the &lt;code&gt;npm&lt;/code&gt; package determines the version of the binary downloaded.</source>
          <target state="translated">Cypress &lt;code&gt;npm&lt;/code&gt; 패키지는 Cypress 바이너리를 감싸는 래퍼입니다. 의 버전 &lt;code&gt;npm&lt;/code&gt; 패키지는 바이너리 다운로드의 버전을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9903bd272894a0e9daec4e2d6b6900a9810ad430" translate="yes" xml:space="preserve">
          <source>Notice that this timeout has flowed down to all assertions and Cypress will now wait &lt;em&gt;up to 10 seconds total&lt;/em&gt; for all of them to pass.</source>
          <target state="translated">이 시간 초과는 모든 어설 션으로 흘러 내려 갔으며 이제 Cypress는 모든 어설 션이 전달 될 때까지 &lt;em&gt;최대 10 초 동안&lt;/em&gt; 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="3b8adffbbb12a9d3f3e55a8a61bf959f11057efd" translate="yes" xml:space="preserve">
          <source>Notice that when adding up the spec&amp;rsquo;s run times (&lt;strong&gt;0:55&lt;/strong&gt;), they add up to less than the total time for the run to complete (&lt;strong&gt;1:51&lt;/strong&gt;) . There is extra time in the run for each spec: starting the browser, encoding and uploading the video to the dashboard, requesting the next spec to run.</source>
          <target state="translated">스펙의 실행 시간을 합산 할 때 ( &lt;strong&gt;0:55&lt;/strong&gt; ) 실행이 완료되는 데 걸리는 총 시간 ( &lt;strong&gt;1:51&lt;/strong&gt; ) 보다 더 작습니다 . 각 사양에 대해 실행시 추가 시간이 있습니다. 브라우저 시작, 비디오 인코딩 및 대시 보드에 비디오 업로드, 다음 사양 실행 요청.</target>
        </trans-unit>
        <trans-unit id="9624ce694f9532e0a1f18bdfdac0b62b0a3c119f" translate="yes" xml:space="preserve">
          <source>Notice the calls to &lt;code&gt;cov_18hmhptych.s[0]++&lt;/code&gt; and &lt;code&gt;cov_18hmhptych.s[1]++&lt;/code&gt; that increment the statement counters. All counters and additional book-keeping information is stored in a single object attached to the browser&amp;rsquo;s &lt;code&gt;window&lt;/code&gt; object. We can see the counters if we serve the &lt;code&gt;instrumented&lt;/code&gt; folder instead of &lt;code&gt;src&lt;/code&gt; and open the application.</source>
          <target state="translated">명령문 카운터를 증가시키는 &lt;code&gt;cov_18hmhptych.s[0]++&lt;/code&gt; 및 &lt;code&gt;cov_18hmhptych.s[1]++&lt;/code&gt; 대한 호출에 주목하십시오 . 모든 카운터 및 추가 부기 정보는 브라우저의 &lt;code&gt;window&lt;/code&gt; 개체에 연결된 단일 개체에 저장됩니다 . &lt;code&gt;src&lt;/code&gt; 대신 &lt;code&gt;instrumented&lt;/code&gt; 폴더를 제공 하고 응용 프로그램을 열면 카운터를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de412f24bbb31a65dd952f9c05bace08a5b750da" translate="yes" xml:space="preserve">
          <source>Notice there is also a funny looking Log called: &lt;code&gt;(PAGE LOAD)&lt;/code&gt; followed by another entry for &lt;code&gt;(NEW URL)&lt;/code&gt;. Neither of these was a command that we issued - rather Cypress itself will log out important events from your application when they occur. Notice these look different (they are gray and without a number).</source>
          <target state="translated">&lt;code&gt;(PAGE LOAD)&lt;/code&gt; 라는 재미있는 로그가 있고 &lt;code&gt;(NEW URL)&lt;/code&gt; 에 대한 다른 항목이 있습니다. 이들 중 어느 것도 우리가 발행 한 명령이 아니 었습니다. Cypress 자체는 중요한 이벤트가 발생할 때 애플리케이션에서 로그 아웃합니다. 이것들은 다르게 보입니다 (그들은 회색이며 숫자가 없습니다).</target>
        </trans-unit>
        <trans-unit id="24cdc108df5164363adcb76832f8e0d0e38369f2" translate="yes" xml:space="preserve">
          <source>Notification center</source>
          <target state="translated">알림 센터</target>
        </trans-unit>
        <trans-unit id="e3b82040565bb4be6b11f778a2e3df327ed20a3b" translate="yes" xml:space="preserve">
          <source>Now</source>
          <target state="translated">Now</target>
        </trans-unit>
        <trans-unit id="0ba27239348a0b8a7c3cf9341f29b0bfe7c93ada" translate="yes" xml:space="preserve">
          <source>Now Cypress provides us a UI (similar to debugger) to step forward through each command.</source>
          <target state="translated">이제 Cypress는 각 명령을 단계별로 진행할 수있는 UI (디버거와 유사)를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="266f3950523b343bd5c5677017facb6866ab80f4" translate="yes" xml:space="preserve">
          <source>Now Cypress will skip its install phase once the npm module is installed.</source>
          <target state="translated">이제 npm 모듈이 설치되면 Cypress는 설치 단계를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="49c8371146058b533c1499d33f31da187dcac8a0" translate="yes" xml:space="preserve">
          <source>Now What?</source>
          <target state="translated">이제 뭐?</target>
        </trans-unit>
        <trans-unit id="7fa182979af5cac1ec7bf0589ad69639c606aafd" translate="yes" xml:space="preserve">
          <source>Now click on the &lt;code&gt;home_page_spec.js&lt;/code&gt; file and watch Cypress open your browser.</source>
          <target state="translated">이제 &lt;code&gt;home_page_spec.js&lt;/code&gt; 파일을 클릭 하고 Cypress가 브라우저를 여는 것을보십시오.</target>
        </trans-unit>
        <trans-unit id="2dfbc1e12d5e26a42c257dd231c78514f58bf2fc" translate="yes" xml:space="preserve">
          <source>Now if you remember at the end of the test we ended up on a different URL:</source>
          <target state="translated">테스트가 끝났다는 것을 기억하면 다른 URL로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="b3ba9f46bbe2a37812dd34fb8f1df86ac794d0e9" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to write our first test. We&amp;rsquo;re going to:</source>
          <target state="translated">이제 첫 번째 테스트를 작성해야합니다. 우리는 :</target>
        </trans-unit>
        <trans-unit id="216a4c11ea65937fd8b60a10401654c21c6737dd" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s create our own spec file called &lt;code&gt;home_page_spec.js&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;home_page_spec.js&lt;/code&gt; 라는 자체 사양 파일을 만들어 봅시다 .</target>
        </trans-unit>
        <trans-unit id="8563b7b571860be5a8cfa144d4f84d4faf733115" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s test out &lt;code&gt;**&lt;/code&gt; support.</source>
          <target state="translated">이제 &lt;code&gt;**&lt;/code&gt; 지원을 테스트 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="255bec658b34ad387514345f89f1abf76c973b27" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s write our first failing test.</source>
          <target state="translated">이제 첫 번째 실패한 테스트를 작성해 봅시다.</target>
        </trans-unit>
        <trans-unit id="86f5521cf7a6e67a5e0fb88c5f502ca9a89f5128" translate="yes" xml:space="preserve">
          <source>Now our sensitive password is not printed to the Test Runner&amp;rsquo;s Command Log when &lt;code&gt;sensitive: true&lt;/code&gt; is passed as an option to &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이제 &lt;code&gt;sensitive: true&lt;/code&gt; 가 옵션으로 &lt;a href=&quot;../commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 전달 되면 민감한 암호가 테스트 실행자의 명령 로그에 인쇄되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="995f8411e28ba80a702fad3dcc54d3dbaba88eee" translate="yes" xml:space="preserve">
          <source>Now that we understand the real reason behind the flaky test, we need to think about why the default retry-ability has not helped us in this situation. Why hasn&amp;rsquo;t Cypress found the 2 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements after the second one was added?</source>
          <target state="translated">비정상적인 테스트의 실제 원인을 이해 했으므로 기본 재시도 기능이이 상황에서 왜 도움이되지 않았는 지에 대해 생각해야합니다. Cypress 가 두 번째 요소를 추가 한 후 2 개의 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소를 찾지 못한 이유는 무엇 입니까?</target>
        </trans-unit>
        <trans-unit id="b46e50ef610c979ce2b8f47e16658fb4b9f70a23" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve got a page loaded, we need to take some action on it. Why don&amp;rsquo;t we click a link on the page? Sounds easy enough, let&amp;rsquo;s go look for one we like&amp;hellip; how about &lt;code&gt;type&lt;/code&gt;?</source>
          <target state="translated">이제 페이지가로드되었으므로 조치를 취해야합니다. 왜 페이지에서 링크를 클릭하지 않습니까? 충분히 쉬운 소리, 우리가 좋아하는 것을 찾으러 가자 ... &lt;code&gt;type&lt;/code&gt; 어떻습니까?</target>
        </trans-unit>
        <trans-unit id="46bd4086c35d1a0a0419b97130003bbdbfdfb479" translate="yes" xml:space="preserve">
          <source>Now there is not even a need to do conditional testing since you are able to know ahead of time what campaign was sent. Yes, this may require server side updates, but you have to make an untestable app testable if you want to test it!</source>
          <target state="translated">이제 어떤 캠페인이 전송되었는지 미리 알 수 있으므로 조건부 테스트를 수행 할 필요조차 없습니다. 예. 서버 측 업데이트가 필요할 수 있지만 테스트하려면 테스트 할 수없는 앱을 테스트 가능하게 만들어야합니다!</target>
        </trans-unit>
        <trans-unit id="957e1785a201ad0e252eced449556775304b7836" translate="yes" xml:space="preserve">
          <source>Now we can assert something about this new page!</source>
          <target state="translated">이제이 새 페이지에 대해 무언가를 주장 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="e96096fb7f7005ab49c42a203dbfeb9051f1cb72" translate="yes" xml:space="preserve">
          <source>Now we can put an &lt;code&gt;.only&lt;/code&gt; on this test and it will run successfully irrespective of any other test. The ideal Cypress workflow is writing and iterating on a single test at a time.</source>
          <target state="translated">이제이 테스트에 &lt;code&gt;.only&lt;/code&gt; 만 넣을 수 있으며 다른 테스트에 관계없이 성공적으로 실행됩니다. 이상적인 Cypress 워크 플로는 한 번에 단일 테스트를 작성하고 반복하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d23a28df61541bff515f2a089246b970b7cbda0d" translate="yes" xml:space="preserve">
          <source>Now we know exactly why our test failed. It had nothing to do with the DOM. Instead we can see that either our request never went out or a request went out to the wrong URL.</source>
          <target state="translated">이제 테스트가 실패한 이유를 정확히 알게되었습니다. DOM과는 아무런 관련이 없습니다. 대신 요청이 나오지 않았거나 요청이 잘못된 URL로 이동했음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6081c1c3d3e8cf637f9851c8f48bc235a9ecfe55" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;re in business! The first time through, &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; chain (with its &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; attached) are enqueued for Cypress to execute. The &lt;code&gt;it&lt;/code&gt; block exits, and Cypress starts its work:</source>
          <target state="translated">이제 우리는 사업을 시작했습니다! 처음으로 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 체인 ( &lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 첨부 된)이 Cypress가 실행되도록 대기열에 추가됩니다. 은 &lt;code&gt;it&lt;/code&gt; 출구를 차단하고, 싸이프레스는 작업을 시작합니다</target>
        </trans-unit>
        <trans-unit id="6346f423c98bd78f8a03335522a1fef94fa618db" translate="yes" xml:space="preserve">
          <source>Now when Cypress logs cookies they will only include the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Cypress가 쿠키를 기록 할 때 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;value&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="5029d6be001ccee71bc634614aecc53d7da7d5bd" translate="yes" xml:space="preserve">
          <source>Now when you click the giant yellow failure messages if the error is a &lt;code&gt;CypressError&lt;/code&gt; instead of logging nothing it will now find the command associated to that error and display the same message as if you clicked the failed command.</source>
          <target state="translated">오류가 &lt;code&gt;CypressError&lt;/code&gt; 가 아닌 경우 거대한 노란색 실패 메시지를 클릭하면 아무것도 기록하지 않고 해당 오류와 관련된 명령을 찾고 실패한 명령을 클릭 한 것과 동일한 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="498258ae1992a17e6d44069d5f999af0dce7fada" translate="yes" xml:space="preserve">
          <source>Now you can create parent, dual, and child commands using the same &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;&lt;code&gt;Cypress.Commands.add()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">이제 동일한 &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt; &lt;code&gt;Cypress.Commands.add()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 상위, 이중 및 하위 명령을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="603b03047f2e00b82e57c8b074d14b7126ccf5c5" translate="yes" xml:space="preserve">
          <source>Now you can invoke the command from your project root like so:</source>
          <target state="translated">이제 다음과 같이 프로젝트 루트에서 명령을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2058e831fd601da2f65563ddd1ac46c697b4bdfd" translate="yes" xml:space="preserve">
          <source>Now you can omit the &lt;code&gt;--key&lt;/code&gt; flag.</source>
          <target state="translated">이제 &lt;code&gt;--key&lt;/code&gt; 플래그를 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af51545390e59575c0deca7a0e6e036d9a5e4b3a" translate="yes" xml:space="preserve">
          <source>Now you can open Cypress from your &lt;strong&gt;project root&lt;/strong&gt; one of the following ways:</source>
          <target state="translated">이제 다음 방법 중 하나를 &lt;strong&gt;프로젝트 루트&lt;/strong&gt; 에서 Cypress를 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="376832d2b7e49b3bb27ada5cb0d457814ec1003e" translate="yes" xml:space="preserve">
          <source>Now you can select the error text in the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/344&quot;&gt;#344&lt;/a&gt;.</source>
          <target state="translated">이제 GUI에서 오류 텍스트를 선택할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/344&quot;&gt;# 344&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="43a0dc8aaf42def2f849b846d113b2dea48018d5" translate="yes" xml:space="preserve">
          <source>Now you may be thinking, &lt;em&gt;This sounds like a problem with Cypress because when I work with my application outside of Cypress it works just fine.&lt;/em&gt;😒</source>
          <target state="translated">지금 당신은 생각 될 수 &lt;em&gt;내가 싸이프레스의 내 응용 프로그램의 외부와 작업 할 때 그것을 잘 작동하기 때문에 싸이프레스에 문제가 같은이 소리. &lt;/em&gt;😒</target>
        </trans-unit>
        <trans-unit id="3a698bf27667db64b11c913c5a6b57513f656804" translate="yes" xml:space="preserve">
          <source>Now you should see a view explaining how to record your first run.</source>
          <target state="translated">이제 첫 번째 달리기를 기록하는 방법을 설명하는 뷰가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7be3c60885c07c6fe478a6044314f3cda9005978" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ll need to add in the following code in your test file to visit your server:</source>
          <target state="translated">이제 테스트 파일에 다음 코드를 추가하여 서버를 방문해야합니다.</target>
        </trans-unit>
        <trans-unit id="c061855a4a69d4fb8ffbb939fd779556fe668065" translate="yes" xml:space="preserve">
          <source>Now, by default, screenshots are nested within a folder with the name of &lt;strong&gt;the spec file&lt;/strong&gt; that is currently running. Example - the spec named &lt;code&gt;cypress/integration/foo/bar_spec.js&lt;/code&gt; will save screenshots inside of this directory: &lt;code&gt;cypress/screenshots/foo/bar_spec.js/*&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1826&quot;&gt;#1826&lt;/a&gt;.</source>
          <target state="translated">이제 기본적으로 스크린 샷 은 현재 실행중인 &lt;strong&gt;사양 파일&lt;/strong&gt; 이름이있는 폴더 안에 중첩됩니다 . 예-이름이 &lt;code&gt;cypress/integration/foo/bar_spec.js&lt;/code&gt; 인 사양 은 &lt;code&gt;cypress/screenshots/foo/bar_spec.js/*&lt;/code&gt; 디렉토리 내에 스크린 샷을 저장 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1826&quot;&gt;# 1826&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21e7e0067872c260164232cb882c681393d0d766" translate="yes" xml:space="preserve">
          <source>Now, once you have your login completely tested - you may be tempted to think:</source>
          <target state="translated">이제 로그인이 완전히 테스트되면 다음과 같은 생각이들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f300c87bed90c9de7fc494ed2e4fa7d5c944d91" translate="yes" xml:space="preserve">
          <source>Nrwl Extensions for Angular</source>
          <target state="translated">각도에 대한 Nrwl 확장</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="f6b7c67f781e67d4b5afb7ed0380ce22801f45ad" translate="yes" xml:space="preserve">
          <source>Nx</source>
          <target state="translated">Nx</target>
        </trans-unit>
        <trans-unit id="b8a395c809fba1242259e67ea1bc89b4a0df8989" translate="yes" xml:space="preserve">
          <source>OSX: &lt;code&gt;~/Library/Caches/Cypress&lt;/code&gt;</source>
          <target state="translated">OSX : &lt;code&gt;~/Library/Caches/Cypress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="0663c41ca4dea7fa2729e92795c2f74803c9a968" translate="yes" xml:space="preserve">
          <source>Object of environment variables to set before the command executes (e.g. &lt;code&gt;{USERNAME: 'johndoe'}&lt;/code&gt;). Will be merged with existing system environment variables</source>
          <target state="translated">명령이 실행되기 전에 설정할 환경 변수 객체 (예 : &lt;code&gt;{USERNAME: 'johndoe'}&lt;/code&gt; ). 기존 시스템 환경 변수와 병합됩니다</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="830ad4a68bd68f89d259b1167a36d1ce2a7ece85" translate="yes" xml:space="preserve">
          <source>Obvious where environment variables come from.</source>
          <target state="translated">환경 변수의 출처는 분명합니다.</target>
        </trans-unit>
        <trans-unit id="cad6113d4f785fa6b5d4006b8600f370384f24de" translate="yes" xml:space="preserve">
          <source>Occurs after a screenshot is taken.</source>
          <target state="translated">스크린 샷을 찍은 후 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3fbe9e37babc7c3903da7a85c3ba1634c5aad146" translate="yes" xml:space="preserve">
          <source>Occurs after a spec is finished running.</source>
          <target state="translated">사양 실행이 완료된 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d709f854d71478852631c9b8dd42ad2119bc1367" translate="yes" xml:space="preserve">
          <source>Occurs after the run is finished.</source>
          <target state="translated">실행이 완료된 후에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c4dbd2d5bc5be193a229dabcde3aa47e0c232d2a" translate="yes" xml:space="preserve">
          <source>Occurs before the run starts.</source>
          <target state="translated">실행이 시작되기 전에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="460f72be573a9be21a00ed92514fd9e7585f488c" translate="yes" xml:space="preserve">
          <source>Occurs immediately before launching a browser.</source>
          <target state="translated">브라우저를 시작하기 직전에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="97770d10be3ad225c8bd3f73d871f94fd003ad08" translate="yes" xml:space="preserve">
          <source>Occurs in conjunction with the &lt;code&gt;cy.task&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;cy.task&lt;/code&gt; 명령 과 함께 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="23f11527c4dc5fedb99be478977504b333b2be2e" translate="yes" xml:space="preserve">
          <source>Occurs when a spec is about to be run.</source>
          <target state="translated">사양이 실행 되려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="161995ee88691351003567301a068f04cd9a2e56" translate="yes" xml:space="preserve">
          <source>Occurs when a spec or spec-related file needs to be transpiled for the browser.</source>
          <target state="translated">브라우저에서 스펙 또는 스펙 관련 파일을 변환해야 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cff6dc2c4b5039c6d00804a3c902a3bd511124e0" translate="yes" xml:space="preserve">
          <source>Of course if the form&amp;rsquo;s &lt;code&gt;submit&lt;/code&gt; event is &lt;code&gt;preventedDefault&lt;/code&gt; the form will not actually be submitted.</source>
          <target state="translated">물론 양식의 &lt;code&gt;submit&lt;/code&gt; 이벤트가 &lt;code&gt;preventedDefault&lt;/code&gt; 경우 양식이 실제로 제출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="351fc6e919ca093fd9846ffd4579c0946ebf85e4" translate="yes" xml:space="preserve">
          <source>Official Cypress Orb for CircleCI configuration.</source>
          <target state="translated">CircleCI 구성을위한 공식 Cypress Orb.</target>
        </trans-unit>
        <trans-unit id="2a8de9843a8452c8548953e50430e01db1ee690a" translate="yes" xml:space="preserve">
          <source>Official TypeScript definitions for the Cypress API.</source>
          <target state="translated">Cypress API에 대한 공식 TypeScript 정의.</target>
        </trans-unit>
        <trans-unit id="3f80ea00ca969abbe7141b32ca301328d0eef806" translate="yes" xml:space="preserve">
          <source>Official docs</source>
          <target state="translated">공식 문서</target>
        </trans-unit>
        <trans-unit id="ba74c0d98b3c935325911caff8c06dfd49274be9" translate="yes" xml:space="preserve">
          <source>Often a Cypress command has built-in assertions that will cause the command to be retried. For example, the &lt;a href=&quot;../../api/commands/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; command will be retried even without any attached assertions until it finds an element with the given index in the previously yielded list of elements.</source>
          <target state="translated">종종 Cypress 명령에는 명령이 재 시도되는 어설 션이 내장되어 있습니다. 예를 들어, &lt;a href=&quot;../../api/commands/eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; 명령은 이전에 생성 된 요소 목록에서 지정된 색인을 가진 요소를 찾을 때까지 첨부 된 어설 션이없는 경우에도 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="095fe852c11931fb45e6b0673836e9f0e2292216" translate="yes" xml:space="preserve">
          <source>Often times you may load a fixture in a &lt;code&gt;beforeEach&lt;/code&gt; hook but want to utilize the values in your tests.</source>
          <target state="translated">종종 &lt;code&gt;beforeEach&lt;/code&gt; 훅에 픽스쳐를로드 할 수 있지만 테스트의 값을 활용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="6bd7a2b8347b7e2e3f6affb1a0ae760cbc0793b1" translate="yes" xml:space="preserve">
          <source>Oftentimes either the &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element is covering the exact coordinate we&amp;rsquo;re attempting to interact with. In those cases, the event fires on the child. We even note this for you in the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;.</source>
          <target state="translated">종종 &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 요소가 상호 작용하려는 정확한 좌표를 덮고 있습니다. 그러한 경우 이벤트는 어린이에게 발생합니다. 우리는 심지어 &lt;a href=&quot;test-runner#Command-Log&quot;&gt;명령 로그&lt;/a&gt; 에서 이것을 참고합니다 .</target>
        </trans-unit>
        <trans-unit id="926d845073c8f0facacd7def3f70e1f5256c1d6c" translate="yes" xml:space="preserve">
          <source>Oftentimes it can be much easier to programmatically control and boot your servers with a Node script.</source>
          <target state="translated">종종 노드 스크립트를 사용하여 프로그래밍 방식으로 서버를 제어하고 부팅하는 것이 훨씬 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="fc379aaefa770f8d370e09688c1e21a79f108a6c" translate="yes" xml:space="preserve">
          <source>Oftentimes it&amp;rsquo;s much simpler and conveys what you&amp;rsquo;re trying to test by just using &lt;code&gt;.focus()&lt;/code&gt; directly.</source>
          <target state="translated">종종 &lt;code&gt;.focus()&lt;/code&gt; 직접 사용하여 테스트하는 것을 훨씬 간단하고 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="aa205ab96f8bc058412ba2d91b4a4e6078193115" translate="yes" xml:space="preserve">
          <source>Oftentimes it&amp;rsquo;s much simpler and conveys what you&amp;rsquo;re trying to test by just using &lt;code&gt;.submit()&lt;/code&gt; directly.</source>
          <target state="translated">종종 &lt;code&gt;.submit()&lt;/code&gt; 직접 사용하여 테스트하는 것을 훨씬 간단하고 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="43083e1e9b4c2d4686ddcf80d633b5db94b73a5f" translate="yes" xml:space="preserve">
          <source>Oftentimes using &lt;code&gt;.focus()&lt;/code&gt; directly is more concise and conveys what you&amp;rsquo;re trying to test.</source>
          <target state="translated">종종 &lt;code&gt;.focus()&lt;/code&gt; 직접 사용하는 것이 더 간결하고 테스트하려는 내용을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="807e890fe11073b5bb2acf23b69cea7f87cd8d58" translate="yes" xml:space="preserve">
          <source>Oftentimes using &lt;code&gt;.submit()&lt;/code&gt; directly is more concise and conveys what you&amp;rsquo;re trying to test.</source>
          <target state="translated">종종 &lt;code&gt;.submit()&lt;/code&gt; 직접 사용하는 것이 더 간결하고 테스트하려는 내용을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="b1322e59d7c8d278fafe91aefb9c8efbe888dbeb" translate="yes" xml:space="preserve">
          <source>Oftentimes we see users run into problems targeting their elements because:</source>
          <target state="translated">종종 다음과 같은 이유로 사용자가 요소를 타겟팅하는 데 문제가있는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="8ddbd9a737d531ab0fe4a0d9c2415dcae46bda41" translate="yes" xml:space="preserve">
          <source>Oftentimes we see users wanting the ability to use multiple reporters. When running in CI, you might want to generate a report for &lt;code&gt;junit&lt;/code&gt; and perhaps a &lt;code&gt;json&lt;/code&gt; report. This is great, but by setting this reporter you won&amp;rsquo;t receive any additional feedback while the tests are running!</source>
          <target state="translated">종종 우리는 사용자가 여러 기자를 사용할 수있는 기능을 원한다는 것을 알게됩니다. CI에서 실행할 때 &lt;code&gt;junit&lt;/code&gt; 및 &lt;code&gt;json&lt;/code&gt; 보고서에 대한 보고서를 생성 할 수 있습니다 . 이것은 훌륭하지만이 리포터를 설정하면 테스트가 실행되는 동안 추가 피드백을받지 않습니다!</target>
        </trans-unit>
        <trans-unit id="0847e15501719f2aed4a76c1e2f7f53a85939c43" translate="yes" xml:space="preserve">
          <source>Oftentimes you can use &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to show the element before you perform the action.</source>
          <target state="translated">종종 &lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; 을 사용하여 작업을 수행하기 전에 요소를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aa7ca4e8e533dee077aa2089b66e61dfe7632fa" translate="yes" xml:space="preserve">
          <source>Oftentimes your application may make initial requests immediately when it loads (such as authenticating a user). Cypress makes it possible to start your server and define routes before a &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. Upon the next visit, the server + routes will be instantly applied before your application loads.</source>
          <target state="translated">종종 응용 프로그램이로드 될 때 즉시 사용자를 인증하는 등의 초기 요청을 할 수 있습니다. Cypress를 사용하면 &lt;a href=&quot;visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 전에 서버를 시작하고 경로를 정의 할 수 있습니다. 다음 방문시 서버 + 경로는 응용 프로그램이로드되기 전에 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cbefb02e9289d6b26c3cdba50db23715a316dd42" translate="yes" xml:space="preserve">
          <source>Oftentimes, once you have a proper e2e test around logging in, there&amp;rsquo;s no reason to continue to &lt;code&gt;cy.visit()&lt;/code&gt; the login and wait for the entire page to load all associated resources before running any other commands. Doing so can slow down our entire test suite.</source>
          <target state="translated">로그인에 대해 적절한 e2e 테스트를 한 후에는 로그인을 계속 &lt;code&gt;cy.visit()&lt;/code&gt; 하고 다른 명령을 실행하기 전에 전체 페이지가 모든 관련 리소스를로드 할 때까지 기다릴 이유가 없습니다 . 그렇게하면 전체 테스트 스위트가 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b92a8e77c84c136fb698b3705e19c9c1271dd21c" translate="yes" xml:space="preserve">
          <source>Ok, now we want to click on the link we found. How do we do that? You could almost guess this one: just add a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command to the end of the previous command, like so:</source>
          <target state="translated">자, 우리는 우리가 찾은 링크를 클릭하고 싶습니다. 우리는 어떻게합니까? 거의 이것을 추측 할 수 있습니다. 다음과 같이 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 명령을 이전 명령의 끝에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="4818681e1c851cc4c1a4841177b7bfed26ca79be" translate="yes" xml:space="preserve">
          <source>Ok, we&amp;rsquo;re done talking. Now dive in and get started testing your app!</source>
          <target state="translated">알았어, 대화 끝났어 이제 다이빙을 시작하고 앱 테스트를 시작하십시오!</target>
        </trans-unit>
        <trans-unit id="ac801b81820eacd9039b1a5ed340d48f18649ea0" translate="yes" xml:space="preserve">
          <source>Okay but let&amp;rsquo;s say you&amp;rsquo;re worried about &lt;code&gt;google.com&lt;/code&gt; serving up the right HTML content. How would you test that? Easy! Just make a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; directly to it. &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;NOT bound to CORS or same-origin policy&lt;/em&gt;.</source>
          <target state="translated">그래도 &lt;code&gt;google.com&lt;/code&gt; 이 올바른 HTML 콘텐츠를 제공하는 것에 대해 걱정한다고 가정 해 봅시다 . 그걸 어떻게 테스트하겠습니까? 쉬운! 그냥 확인 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 직접합니다. &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 는 &lt;em&gt;CORS 또는 동일 출처 정책에 바인딩되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b0e29f88362e22e9b7b6132e499444626c8fe13d" translate="yes" xml:space="preserve">
          <source>Older CLI versions will continue to work on &lt;code&gt;0.19.0&lt;/code&gt; except for the &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; command - and will we print a warning to nudge you to upgrade.</source>
          <target state="translated">이전 CLI 버전은 &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; 명령을 제외하고 &lt;code&gt;0.19.0&lt;/code&gt; 에서 계속 작동 하며 업그레이드하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4960ddea9f2b277980f54fc15581a1068616a876" translate="yes" xml:space="preserve">
          <source>Omit the fixture file&amp;rsquo;s extension</source>
          <target state="translated">조명기 파일의 확장자를 생략하십시오</target>
        </trans-unit>
        <trans-unit id="ad01d2cca702011e7b3a083f1f8fd956523749d2" translate="yes" xml:space="preserve">
          <source>On Linux CI you should install the binary from the &amp;ldquo;Testing new linux x64 &amp;hellip;&amp;rdquo; commit.</source>
          <target state="translated">Linux CI에서는&amp;ldquo;Testing new linux x64&amp;hellip;&amp;rdquo;commit에서 바이너리를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4823186d4fda336b2a1c959f4230e5aa047019f5" translate="yes" xml:space="preserve">
          <source>On Linux, Cypress scans your &lt;code&gt;PATH&lt;/code&gt; for a number of different binary names. If the browser you are trying to use does not exist under one of the expected binary names, Cypress will not be able to find it.</source>
          <target state="translated">Linux에서 Cypress는 &lt;code&gt;PATH&lt;/code&gt; 에서 여러 가지 이진 이름을 검색합니다 . 사용하려는 브라우저가 예상 이진 이름 중 하나에 없으면 Cypress에서 해당 브라우저를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1f6f26baba59812cd46044aafda98a99712bee59" translate="yes" xml:space="preserve">
          <source>On Mac, Cypress attempts to find installed browsers by their bundle identifier. If this does not succeed, it will fall back to the Linux browser detection method.</source>
          <target state="translated">Mac에서 Cypress는 번들 식별자로 설치된 브라우저를 찾으려고합니다. 이것이 성공하지 못하면 Linux 브라우저 감지 방법으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="c9440f32e464df5490d7f051ac6f485c1eb689af" translate="yes" xml:space="preserve">
          <source>On Windows, Cypress scans the following locations to try to find each browser:</source>
          <target state="translated">Windows에서 Cypress는 다음 위치를 검색하여 각 브라우저를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="84c278636de46335194dd53c093e1de81d16fea3" translate="yes" xml:space="preserve">
          <source>Onboarding dialogs will never show up again once they are dismissed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/522&quot;&gt;#522&lt;/a&gt;.</source>
          <target state="translated">온 보딩 대화 상자가 닫히면 다시 표시되지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/522&quot;&gt;# 522&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="011291e4053e1d9577cd2af8a844ab4c3d02736c" translate="yes" xml:space="preserve">
          <source>Once Cypress detects that a matching XHR has begun its request, it then switches over to the 2nd waiting period. This duration is configured by the &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;20000&lt;/code&gt; ms.</source>
          <target state="translated">Cypress는 일치하는 XHR이 요청을 시작한 것을 감지하면 두 번째 대기 기간으로 전환합니다. 이 지속 시간은 &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt; 옵션으로 구성되며 기본값은 &lt;code&gt;20000&lt;/code&gt; ms 입니다.</target>
        </trans-unit>
        <trans-unit id="35ac051e9108c8b6a83952a41e578292999ef04b" translate="yes" xml:space="preserve">
          <source>Once Cypress detects that a matching request has begun its request, it then switches over to the 2nd waiting period. This duration is configured by the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;20000&lt;/code&gt; ms.</source>
          <target state="translated">Cypress는 일치 요청이 요청을 시작했음을 감지하면 두 번째 대기 기간으로 전환합니다. 이 기간은 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt; 옵션으로 구성되며 기본값은 &lt;code&gt;20000&lt;/code&gt; ms 입니다.</target>
        </trans-unit>
        <trans-unit id="a20f076e5f8777c9a90eb34904dfed267efc1b9b" translate="yes" xml:space="preserve">
          <source>Once a GitHub repository is associated with a Cypress project, the GitHub integration will be immediately enabled:</source>
          <target state="translated">GitHub 리포지토리가 Cypress 프로젝트와 연결되면 GitHub 통합이 즉시 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="bef603f59418eebc2acc2bfa125e9641b628d3d1" translate="yes" xml:space="preserve">
          <source>Once again - we will need another reliable way to achieve this without involving the DOM.</source>
          <target state="translated">다시 한번-우리는 DOM을 사용하지 않고 이것을 달성하기 위해 또 다른 신뢰할 수있는 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="645c5a6978abf81195f86cc762a7fe7f5f83f59a" translate="yes" xml:space="preserve">
          <source>Once multiple machines are available within your CI environment, you can pass the &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag to have your tests run in parallel.</source>
          <target state="translated">CI 환경에서 여러 시스템을 사용할 수있게되면 &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt; 플래그를 전달 하여 테스트를 병렬로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ebca00326fdb0328843c14d5ba3ccf576f2681d" translate="yes" xml:space="preserve">
          <source>Once multiple machines are available within your CI environment, you can pass the &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; key to &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; to have your recorded tests parallelized.</source>
          <target state="translated">CI 환경에서 여러 시스템을 사용할 수있게되면 &lt;a href=&quot;command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt; 키를 &lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 에 전달 하여 기록 된 테스트를 병렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0063b89d560c8734a0aae5368a8fb9babfd9be2" translate="yes" xml:space="preserve">
          <source>Once that file is created, you should see it in the list of spec files.</source>
          <target state="translated">해당 파일이 작성되면 스펙 파일 목록에 해당 파일이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4b4069f115b00eed842becb70feb85e3b0ca0a33" translate="yes" xml:space="preserve">
          <source>Once the element is in focus, Cypress will begin firing keyboard events.</source>
          <target state="translated">요소에 초점이 맞춰지면 Cypress에서 키보드 이벤트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d7e0df75c076e76cc2478a82baa7346d1159d690" translate="yes" xml:space="preserve">
          <source>Once the tests finish, the coverage object can be serialized and saved to disk so that a human-friendly report can be generated. The collected coverage information can also be sent to external services and help during pull request reviews.</source>
          <target state="translated">테스트가 완료되면 적용 범위 개체를 직렬화하여 디스크에 저장하여 사람에게 친숙한 보고서를 생성 할 수 있습니다. 수집 된 커버리지 정보는 외부 서비스로 전송되어 풀 요청 검토 중에 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddcb2e576d529613bdd06656d9cc403d561a1443" translate="yes" xml:space="preserve">
          <source>Once we&amp;rsquo;ve created that file, we should see the Cypress Test Runner immediately display it in the list of Integration Tests. Cypress monitors your spec files for any changes and automatically displays any changes.</source>
          <target state="translated">해당 파일을 만들면 Cypress Test Runner가 즉시 통합 테스트 목록에 해당 파일을 표시합니다. Cypress는 사양 파일에서 변경 사항을 모니터링하고 변경 내용을 자동으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6e953bed8817624325b42831edb261b7b98b8305" translate="yes" xml:space="preserve">
          <source>Once you get the hang of async code you&amp;rsquo;ll realize you can do everything you could do synchronously, without your code doing any backflips.</source>
          <target state="translated">비동기 코드가 중단되면 코드에서 백 플립을 수행하지 않고도 동 기적으로 수행 할 수있는 모든 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0399eb7b0a8466dcf593574f482f0bf09a763b19" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;code&gt;stub&lt;/code&gt; or a &lt;code&gt;spy&lt;/code&gt; in hand, you can then create assertions about them.</source>
          <target state="translated">당신은 일단 &lt;code&gt;stub&lt;/code&gt; 또는 &lt;code&gt;spy&lt;/code&gt; 손을, 당신은 그들에 대한 주장을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ad1296add3d2fee8297511b1e2c6c31f26c0009" translate="yes" xml:space="preserve">
          <source>Once you log in to the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt; you can view any &lt;a href=&quot;projects#Public-vs-Private&quot;&gt;public project&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;대시 보드 서비스에&lt;/a&gt; 로그인하면 모든 &lt;a href=&quot;projects#Public-vs-Private&quot;&gt;공개 프로젝트를&lt;/a&gt; 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66d0e71aeeae9c09bf48576ac479ea9f39b5aec9" translate="yes" xml:space="preserve">
          <source>Once you save again, you&amp;rsquo;ll see Cypress display the failing test in red since &lt;code&gt;true&lt;/code&gt; does not equal &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">다시 저장하면 &lt;code&gt;true&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 가 아니기 때문에 Cypress가 실패한 테스트를 빨간색으로 표시하는 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7be564fe5aafaa3b0e8ce7145d3c03a77422dcd2" translate="yes" xml:space="preserve">
          <source>Once you save this file you should see the browser reload.</source>
          <target state="translated">이 파일을 저장하면 브라우저가 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="61bd7090d8718a3dd009b4e986354c4a9a9de5ad" translate="yes" xml:space="preserve">
          <source>Once you set up your project to record, we generate a unique &lt;code&gt;projectId&lt;/code&gt; for your project and automatically insert it into your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">당신이 기록에 프로젝트를 설정하면, 우리는 고유의 생성 &lt;code&gt;projectId&lt;/code&gt; 을 프로젝트에 자동으로 당신에 삽입 &lt;code&gt;cypress.json&lt;/code&gt; 의 파일.</target>
        </trans-unit>
        <trans-unit id="43018e251fa63222ebc94f97be8c612cdbcfe078" translate="yes" xml:space="preserve">
          <source>Once you start a server with &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;, all requests will be controllable for the remainder of the test. When a new test runs, Cypress will restore the default behavior and remove all routing and stubbing. For a complete reference of the API and options, refer to the documentation for each command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 로 서버를 시작 하면 나머지 테스트에 대해 모든 요청을 제어 할 수 있습니다. 새로운 테스트가 실행되면 Cypress는 기본 동작을 복원하고 모든 라우팅 및 스터 빙을 제거합니다. API 및 옵션에 대한 자세한 내용은 각 명령의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9c2bd277f31482bc5354dbd9f9d14fe0ad057d8f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;re set up to record test runs, we automatically generate a &lt;em&gt;Record Key&lt;/em&gt; for the project.</source>
          <target state="translated">테스트 실행을 기록하도록 설정 하면 프로젝트에 대한 &lt;em&gt;기록 키&lt;/em&gt; 가 자동으로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="65115baa350039d4bef2d656ae17e1944d8acaa5" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve enabled &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; you can control time by &lt;strong&gt;ticking&lt;/strong&gt; it ahead by milliseconds.</source>
          <target state="translated">당신이 사용 설정하면 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 당신은 시간을 제어 할 수 있습니다 &lt;strong&gt;똑딱&lt;/strong&gt; 밀리 초 단위로 앞서 그것을.</target>
        </trans-unit>
        <trans-unit id="90c10f46aeeea8c2a71abb45e9f26f3d163137bb" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve established it&amp;rsquo;s working you can then use stubs to test all of the edge cases and additional scenarios. There are no benefits to using real data in the vast majority of cases. We recommend that the vast majority of tests use stub data. They will be orders of magnitude faster, and much less complex.</source>
          <target state="translated">일단 작동하면 스텁을 사용하여 모든 주요 사례와 추가 시나리오를 테스트 할 수 있습니다. 대부분의 경우 실제 데이터를 사용하면 이점이 없습니다. 대부분의 테스트는 스텁 데이터를 사용하는 것이 좋습니다. 그것들은 수십 배 더 빠르며 훨씬 덜 복잡합니다.</target>
        </trans-unit>
        <trans-unit id="56fafd8d718991ba5c8832f5c726ccc5587e41f7" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve read through the documentation below, we invite you to experience the power of Cypress reporters via &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress/blob/master/slides/09-reporters/PITCHME.md&quot;&gt;Section 9&lt;/a&gt; of our open source &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress&quot;&gt;testing workshop for Cypress&lt;/a&gt;.</source>
          <target state="translated">아래 문서를 읽고 나면 Cypress 오픈 소스 &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress&quot;&gt;테스트 워크샵&lt;/a&gt; 의 &lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress/blob/master/slides/09-reporters/PITCHME.md&quot;&gt;섹션 9&lt;/a&gt; 를 통해 Cypress 기자의 힘을 경험해보십시오 .</target>
        </trans-unit>
        <trans-unit id="df157874970327fef8f9a7b22d9180ff38fd346e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve started the GitHub App installation process &lt;a href=&quot;#Install-via-organization-integration-settings&quot;&gt;via a Cypress organization's settings&lt;/a&gt; or &lt;a href=&quot;#Install-via-project-settings&quot;&gt;a project's settings&lt;/a&gt;, you will be directed to GitHub.com to complete the installation:</source>
          <target state="translated">&lt;a href=&quot;#Install-via-organization-integration-settings&quot;&gt;Cypress 조직 설정&lt;/a&gt; 또는 &lt;a href=&quot;#Install-via-project-settings&quot;&gt;프로젝트 &lt;/a&gt;설정을 통해 GitHub 앱 설치 프로세스 를 시작하면 GitHub.com으로 이동하여 설치를 완료합니다.</target>
        </trans-unit>
        <trans-unit id="ef066aebc4725ac85c7003ac5b1e6845f4ee4226" translate="yes" xml:space="preserve">
          <source>Once your server is running, it&amp;rsquo;s time to visit it.</source>
          <target state="translated">서버가 실행되면 방문 할 차례입니다.</target>
        </trans-unit>
        <trans-unit id="3a18e89d10a438c45e22b562ec9ef6caa981ee4e" translate="yes" xml:space="preserve">
          <source>One Superdomain per Test</source>
          <target state="translated">테스트 당 하나의 슈퍼 도메인</target>
        </trans-unit>
        <trans-unit id="d8ca14dc5c9bc4a29e0e98ac529afdc92830cb5d" translate="yes" xml:space="preserve">
          <source>One advantage of declaratively waiting for responses is that it decreases test flake. You can think of &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; as a guard that indicates to Cypress when you expect a request to be made that matches a specific routing alias. This prevents the next commands from running until responses come back and it guards against situations where your requests are initially delayed.</source>
          <target state="translated">선언적으로 응답을 기다리는 한 가지 장점은 테스트 플레이크가 줄어든다는 것입니다. &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 를 특정 라우팅 별명과 일치하는 요청이있을 때 Cypress에 표시하는 가드로 생각할 수 있습니다 . 이렇게하면 응답이 다시 올 때까지 다음 명령이 실행되지 않으며 요청이 처음 지연되는 상황을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="99fbabcaf5016959edd6e7659e1949fbbee545fd" translate="yes" xml:space="preserve">
          <source>One check per &lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;run group&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/parallelization#Grouping-test-runs&quot;&gt;실행 그룹당&lt;/a&gt; 하나의 검사 .</target>
        </trans-unit>
        <trans-unit id="7bcb5f0dc971ff33d07dfedb7418ee56f85d5f9c" translate="yes" xml:space="preserve">
          <source>One common scenario Cypress supports is visiting a remote page and also preventing any Ajax requests from immediately going out.</source>
          <target state="translated">Cypress가 지원하는 일반적인 시나리오 중 하나는 원격 페이지를 방문하고 Ajax 요청이 즉시 나가지 못하게하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5ab08fdaa1121402661faf3f153de76b816f92fc" translate="yes" xml:space="preserve">
          <source>One final question you should ask yourself is - is resetting the state even necessary? Remember, Cypress already automatically clears &lt;a href=&quot;../../api/commands/clearlocalstorage&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;cookies&lt;/a&gt;, sessions, etc before each test. Make sure you are not trying to clean up state that is already cleaned up by Cypress automatically.</source>
          <target state="translated">당신이 스스로에게 물어봐야 할 마지막 질문 중 하나는 상태를 필요로하는 것입니까? Cypress는 각 테스트 전에 &lt;a href=&quot;../../api/commands/clearlocalstorage&quot;&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;쿠키&lt;/a&gt; , 세션 등을 이미 자동으로 지 웁니다 . Cypress에서 이미 자동으로 정리 된 상태를 정리하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="33cfe5e191ba0a56ee0afcff13839288db466f93" translate="yes" xml:space="preserve">
          <source>One group can be called &lt;code&gt;package/admin&lt;/code&gt;:</source>
          <target state="translated">한 그룹은 &lt;code&gt;package/admin&lt;/code&gt; 이라고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6a3eb70df3cbaaa6934879c33c8e92b96116084" translate="yes" xml:space="preserve">
          <source>One last thing to consider here is that every once in a while we discover bugs in Cypress that lead to &lt;code&gt;cross origin&lt;/code&gt; errors that can otherwise be fixed. If you think you&amp;rsquo;re experiencing a bug, &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;come into our chat&lt;/a&gt; or &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">여기서 마지막으로 고려해야 할 사항은 때때로 Cypress에서 버그를 발견하여 다른 방법으로 해결할 수있는 &lt;code&gt;cross origin&lt;/code&gt; 오류를 발견 한다는 것입니다. 버그가 있다고 생각되면 &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;채팅에 참여&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dea7df5aa0d1d03d862bdc311a977082dc295e02" translate="yes" xml:space="preserve">
          <source>One of the &lt;strong&gt;best&lt;/strong&gt; parts of Cypress is its emphasis on debuggability. Unlike other testing tools - when your tests end - you are left with your working application at the exact point where your test finished.</source>
          <target state="translated">Cypress 의 &lt;strong&gt;가장 중요한&lt;/strong&gt; 부분 중 하나는 디버깅 가능성을 강조하는 것입니다. 테스트가 끝나면 다른 테스트 도구와 달리 테스트가 완료된 정확한 시점에 작업 응용 프로그램이 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="0096c1d79bb67b777dba0d7d1ac6863a9ae96235" translate="yes" xml:space="preserve">
          <source>One of the first (and arguably one of the hardest) hurdles you&amp;rsquo;ll have to overcome is testing logging into your application.</source>
          <target state="translated">극복해야 할 첫 번째 장애물 중 하나는 응용 프로그램에 대한 로깅 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="c8229342ccbc579a23cd59bab8b73537a2a26607" translate="yes" xml:space="preserve">
          <source>One of the first things many of our users attempt to do is involve 3rd party servers in their tests.</source>
          <target state="translated">많은 사용자들이 가장 먼저 시도하는 것 중 하나는 테스트에 타사 서버를 포함시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9d8bcb0207134d49a9e3f55925befc6393c9fc00" translate="yes" xml:space="preserve">
          <source>One thing you may notice though is that Cypress still enforces visiting a single superdomain with &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, but there is an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/944&quot;&gt;issue open&lt;/a&gt; to change this restriction.</source>
          <target state="translated">Cypress가 여전히 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 사용하여 단일 수퍼 도메인을 방문하도록 강제하고 있지만 이 제한 사항을 변경 해야하는&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/944&quot;&gt; 문제&lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d997e0d4b1f5fc1055e5b9873767c7259880985" translate="yes" xml:space="preserve">
          <source>Only run command in Chrome</source>
          <target state="translated">Chrome에서만 명령 실행</target>
        </trans-unit>
        <trans-unit id="2d21bf69e1b9f242f1a1cba9e9186fac359649c8" translate="yes" xml:space="preserve">
          <source>Only run commands in Chromium-based browser</source>
          <target state="translated">Chromium 기반 브라우저에서만 명령 실행</target>
        </trans-unit>
        <trans-unit id="5d4ecf105d696aca98c9cb1dc58390d02e178e80" translate="yes" xml:space="preserve">
          <source>Only run on specific release channels of browsers</source>
          <target state="translated">브라우저의 특정 릴리스 채널에서만 실행</target>
        </trans-unit>
        <trans-unit id="5b5e733bc13b459bb90300743dfb28ef82208823" translate="yes" xml:space="preserve">
          <source>Only run on stable release in Chromium-based browser</source>
          <target state="translated">Chromium 기반 브라우저의 안정적인 릴리스에서만 실행</target>
        </trans-unit>
        <trans-unit id="457ab9a26866612d36a45121ce34a18db2475033" translate="yes" xml:space="preserve">
          <source>Only the &lt;em&gt;first&lt;/em&gt; matched element will be returned</source>
          <target state="translated">&lt;em&gt;첫 번째로&lt;/em&gt; 일치하는 요소 만 반환됩니다</target>
        </trans-unit>
        <trans-unit id="5aff459157afcaf73e456dcae0a96b977982d896" translate="yes" xml:space="preserve">
          <source>Only the last command is retried</source>
          <target state="translated">마지막 명령 만 재시도</target>
        </trans-unit>
        <trans-unit id="9496a560deca4edbd47eedf83e966a2ccc9af00b" translate="yes" xml:space="preserve">
          <source>Only valid when providing a &lt;code&gt;--group&lt;/code&gt; or &lt;code&gt;--parallel&lt;/code&gt; flag. Read our &lt;a href=&quot;parallelization&quot;&gt;parallelization&lt;/a&gt; documentation to learn more.</source>
          <target state="translated">&lt;code&gt;--group&lt;/code&gt; 또는 &lt;code&gt;--parallel&lt;/code&gt; 플래그를 제공 할 때만 유효합니다 . 자세한 내용은 &lt;a href=&quot;parallelization&quot;&gt;병렬화&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="adedc0e77ab345ac5fba97224bb370e27193c174" translate="yes" xml:space="preserve">
          <source>Only works for values that should be the same on across all machines.</source>
          <target state="translated">모든 컴퓨터에서 동일한 값에 대해서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d1df40d932308f58d1eb31e3ca3803824eb1a869" translate="yes" xml:space="preserve">
          <source>Open Cypress in detached mode</source>
          <target state="translated">분리 모드에서 Cypress 열기</target>
        </trans-unit>
        <trans-unit id="549a3606dec10c5fbc820ae7919714e2a25f6119" translate="yes" xml:space="preserve">
          <source>Open Cypress via &lt;code&gt;cypress open&lt;/code&gt;</source>
          <target state="translated">Cypress Open을 통한 Cypress &lt;code&gt;cypress open&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa0a1b82caad1cbc6f27f1e611b6a4651948b916" translate="yes" xml:space="preserve">
          <source>Open Source Plan</source>
          <target state="translated">오픈 소스 계획</target>
        </trans-unit>
        <trans-unit id="6cc3364a242cbf9be7ce547554de30d92585b0cd" translate="yes" xml:space="preserve">
          <source>Open source</source>
          <target state="translated">오픈 소스</target>
        </trans-unit>
        <trans-unit id="7feeb6405514b8dd84fd1151a4fdc736f529b33b" translate="yes" xml:space="preserve">
          <source>Open sourced another core repo: &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Cypress Core Test Runner&lt;/a&gt; which makes up the Cypress Desktop Application.</source>
          <target state="translated">Cypress Desktop Application을 구성하는 또 다른 핵심 저장소 인 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Cypress Core Test Runner&lt;/a&gt; 를 오픈 소스로 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="787657c640af126142117ee9a64a489a980b9f3e" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;cypress.json&lt;/code&gt;, which you will find in your project root (where you installed Cypress.) It starts out empty:</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 을 열어 프로젝트 루트 (Cypress를 설치 한 곳)에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="322aa3b169a8824e905342ea6f1bf4d2c8949463" translate="yes" xml:space="preserve">
          <source>Open up Registry Editor by pressing WinKey+R and typing &lt;code&gt;regedit.exe&lt;/code&gt;</source>
          <target state="translated">WinKey + R을 누르고 &lt;code&gt;regedit.exe&lt;/code&gt; 를 입력하여 레지스트리 편집기를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="358d384c0eba45a65af1c353ab0d4eb9b978ba85" translate="yes" xml:space="preserve">
          <source>Open up your Dev Tools and click on the &lt;code&gt;GET&lt;/code&gt; for the &lt;code&gt;.action-email&lt;/code&gt; class selector.</source>
          <target state="translated">개발자 도구를 열고 &lt;code&gt;.action-email&lt;/code&gt; 클래스 선택기 의 &lt;code&gt;GET&lt;/code&gt; 을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="e388bf6b6d29ece502d5c6eb8fde2f43021194fc" translate="yes" xml:space="preserve">
          <source>Open up your favorite IDE and add the code below to our &lt;code&gt;sample_spec.js&lt;/code&gt; test file.</source>
          <target state="translated">선호하는 IDE를 열고 아래 코드를 &lt;code&gt;sample_spec.js&lt;/code&gt; 테스트 파일에 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="38a84cf82b69c037086a0394837dbdbd077a4315" translate="yes" xml:space="preserve">
          <source>Open up your project in Cypress via &lt;code&gt;cypress open&lt;/code&gt;.</source>
          <target state="translated">Cypress &lt;code&gt;cypress open&lt;/code&gt; 통해 Cypress에서 프로젝트를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="9939506f8a17c9637f3d8b4761737922b0c38e2f" translate="yes" xml:space="preserve">
          <source>Opening Cypress</source>
          <target state="translated">사이프러스 열기</target>
        </trans-unit>
        <trans-unit id="00a7e00440d823f7dd5d2321c2f4cedcf2a9d5c9" translate="yes" xml:space="preserve">
          <source>Opening Cypress in global mode is useful if you have multiple nested projects but want to share a single global installation of Cypress. In this case you can add each nested project to the Cypress in global mode, thus giving you a nice UI to switch between them.</source>
          <target state="translated">전역 모드에서 Cypress를 여는 것은 여러 개의 중첩 프로젝트가 있지만 단일 Cypress 설치를 공유하려는 경우에 유용합니다. 이 경우 전역 모드에서 각 중첩 프로젝트를 Cypress에 추가 할 수 있으므로 UI를 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5de73a2b39ef7eb2ae43ad368b796a0ae5a25b42" translate="yes" xml:space="preserve">
          <source>Opens the Cypress Test Runner in interactive mode.</source>
          <target state="translated">Cypress Test Runner를 대화식 모드로 엽니 다.</target>
        </trans-unit>
        <trans-unit id="d8623dd1b7e9d853708b7d57679c46236fb6c059" translate="yes" xml:space="preserve">
          <source>Operating system version</source>
          <target state="translated">운영 체제 버전</target>
        </trans-unit>
        <trans-unit id="83517ba1df481bff4d5f44fa1fd8f3f8f0740ddb" translate="yes" xml:space="preserve">
          <source>Operating system version and browser version.</source>
          <target state="translated">운영 체제 버전 및 브라우저 버전</target>
        </trans-unit>
        <trans-unit id="c025e1e57b8199e6351b41f7949ac3b6927005cd" translate="yes" xml:space="preserve">
          <source>Operation system name</source>
          <target state="translated">운영 체제 이름</target>
        </trans-unit>
        <trans-unit id="8aac54081d0a934ec893c1a88295f5f6e352678f" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt; 반대</target>
        </trans-unit>
        <trans-unit id="2f48120db6999232566be38e94c8ea0907727771" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;a href=&quot;not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;not&quot;&gt; &lt;code&gt;.not()&lt;/code&gt; &lt;/a&gt; 반대</target>
        </trans-unit>
        <trans-unit id="7343562a97828c8398dd9d230b8e463de1025253" translate="yes" xml:space="preserve">
          <source>Opt out of sending exception data to Cypress</source>
          <target state="translated">Cypress에 예외 데이터를 보내지 않기</target>
        </trans-unit>
        <trans-unit id="039129dcc8892ac781a6d577f4bb1f3fe8e579d4" translate="yes" xml:space="preserve">
          <source>Opt out on Linux or macOS</source>
          <target state="translated">Linux 또는 macOS에서 거부</target>
        </trans-unit>
        <trans-unit id="a64df27ddf187fd87993b59cd1f6b0e38f8c0f07" translate="yes" xml:space="preserve">
          <source>Opt out on Windows</source>
          <target state="translated">Windows에서 거부</target>
        </trans-unit>
        <trans-unit id="09524cb8114203476e925e19331a84b8bb0785c7" translate="yes" xml:space="preserve">
          <source>Optimized first test run after hard refresh.</source>
          <target state="translated">하드 새로 고침 후 첫 번째 테스트 실행을 최적화했습니다.</target>
        </trans-unit>
        <trans-unit id="c3bcf47692f749ede7fe7aba18645d0061f390d4" translate="yes" xml:space="preserve">
          <source>Optimized performance for hovering / exiting commands. Heavily reduced the CPU on revert / restore the DOM.</source>
          <target state="translated">호버링 / 종료 명령에 대한 성능 최적화 DOM을 되돌리기 / 복원 할 때 CPU를 크게 줄였습니다.</target>
        </trans-unit>
        <trans-unit id="522858793295427c7800f3482d3abb70024373e9" translate="yes" xml:space="preserve">
          <source>Optimized performance of command lists.</source>
          <target state="translated">명령 목록의 성능이 최적화되었습니다.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="1f034c31204d862f3fafd97195c6f6818c48fd9b" translate="yes" xml:space="preserve">
          <source>Option #1: &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">옵션 # 1 : &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f028893a48daebc2deaaac90b65fd94fc68c910" translate="yes" xml:space="preserve">
          <source>Option #2: &lt;code&gt;cypress.env.json&lt;/code&gt;</source>
          <target state="translated">옵션 # 2 : &lt;code&gt;cypress.env.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acc7c2e11bcf1c107b7e26c1f684644f3a3cc738" translate="yes" xml:space="preserve">
          <source>Option #3: &lt;code&gt;CYPRESS_*&lt;/code&gt;</source>
          <target state="translated">옵션 # 3 : &lt;code&gt;CYPRESS_*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a64457d06c7bc99cbaefc6a9533a870ca642a111" translate="yes" xml:space="preserve">
          <source>Option #4: &lt;code&gt;--env&lt;/code&gt;</source>
          <target state="translated">옵션 # 4 : &lt;code&gt;--env&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f471d69777771b5ee06f9e62ff05b7cf24245fae" translate="yes" xml:space="preserve">
          <source>Option #5: Plugins</source>
          <target state="translated">옵션 # 5 : 플러그인</target>
        </trans-unit>
        <trans-unit id="1a14a0d7b093514d6c33982fdca31a9bf14d464c" translate="yes" xml:space="preserve">
          <source>Optional with Types</source>
          <target state="translated">유형 옵션</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="1244c0634596c218c84666eb43b95bbb27f0ae5f" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;cypress open&lt;/code&gt; will automatically be applied to the project you open. These persist on all projects until you quit the Cypress Test Runner. These options will also override values in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; 으로 전달 된 옵션은 열려 있는 프로젝트에 자동으로 적용됩니다. Cypress Test Runner를 종료 할 때까지 모든 프로젝트에서 지속됩니다. 이 옵션은 &lt;code&gt;cypress.json&lt;/code&gt; 의 값도 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="c2994688fbdbe152f586a5d6b59595c3883ad684" translate="yes" xml:space="preserve">
          <source>Options that can be modified to control how the browser is launched, with the following properties:</source>
          <target state="translated">다음 속성을 사용하여 브라우저 시작 방법을 제어하기 위해 수정할 수있는 옵션 :</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="8941428310c6eee57bc8705cffaf426d3a2e5406" translate="yes" xml:space="preserve">
          <source>Or Chrome Canary:</source>
          <target state="translated">또는 Chrome 카나리아 :</target>
        </trans-unit>
        <trans-unit id="69d8e4068a02f7b7ff38ecfe7805f2cb9370bcdd" translate="yes" xml:space="preserve">
          <source>Or in the Given, When, Then syntax:</source>
          <target state="translated">또는 Given, When, Then 구문에서 :</target>
        </trans-unit>
        <trans-unit id="075d46ef0da1626f74ef520838cdbd8dad2c09e5" translate="yes" xml:space="preserve">
          <source>Or one check per spec file.</source>
          <target state="translated">또는 스펙 파일 당 하나의 검사.</target>
        </trans-unit>
        <trans-unit id="d1de00c730d787028891cd81f075376b7d6ea81c" translate="yes" xml:space="preserve">
          <source>Or set record key as environment variable</source>
          <target state="translated">또는 레코드 키를 환경 변수로 설정</target>
        </trans-unit>
        <trans-unit id="31fdfb86e72c3486dc20ada33b8560b64105f920" translate="yes" xml:space="preserve">
          <source>Or via &lt;code&gt;this.clock&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;this.clock&lt;/code&gt; 을 통해 :</target>
        </trans-unit>
        <trans-unit id="07605242f7a070b43bdc103189dccf6a5cc43506" translate="yes" xml:space="preserve">
          <source>Organizations</source>
          <target state="translated">Organizations</target>
        </trans-unit>
        <trans-unit id="1de172d9322cfcfe717f545e2ecb33091c256184" translate="yes" xml:space="preserve">
          <source>Organizations are used to group projects and manage access to those projects.</source>
          <target state="translated">조직은 프로젝트를 그룹화하고 해당 프로젝트에 대한 액세스를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a9c85825e284e10a0f3e973d528398d4faeffeae" translate="yes" xml:space="preserve">
          <source>Organize desktop vs mobile tests separately</source>
          <target state="translated">데스크톱과 모바일 테스트를 별도로 구성</target>
        </trans-unit>
        <trans-unit id="e6edb79bd3299492851baf099d1440283a3e86f2" translate="yes" xml:space="preserve">
          <source>Organize projects</source>
          <target state="translated">프로젝트 정리</target>
        </trans-unit>
        <trans-unit id="f0336ca0b112897804e1308b65551001120f1017" translate="yes" xml:space="preserve">
          <source>Organized files around in preparation for OS release.</source>
          <target state="translated">OS 릴리스 준비를 위해 파일을 정리했습니다.</target>
        </trans-unit>
        <trans-unit id="3661d984d680ac44e98a3b8527c0fd1ef2eede8a" translate="yes" xml:space="preserve">
          <source>Organizing</source>
          <target state="translated">Organizing</target>
        </trans-unit>
        <trans-unit id="3f5c63b2b821d22bce8f1aeeadafe5bb2c7ba1bd" translate="yes" xml:space="preserve">
          <source>Organizing Tests, Logging In, Controlling State</source>
          <target state="translated">테스트 구성, 로그인, 제어 상태</target>
        </trans-unit>
        <trans-unit id="86e4e3875420cdee95d08d4472073493729a7aee" translate="yes" xml:space="preserve">
          <source>Orientation</source>
          <target state="translated">Orientation</target>
        </trans-unit>
        <trans-unit id="40d10e7b54cbee953ab20dc3bf1adde199b2125f" translate="yes" xml:space="preserve">
          <source>Originally used in &lt;a href=&quot;https://github.com/Xvier/cypress-downloadfile&quot;&gt;cypress-downloadfile&lt;/a&gt;, this command calls other Cypress commands.</source>
          <target state="translated">원래 &lt;a href=&quot;https://github.com/Xvier/cypress-downloadfile&quot;&gt;cypress-downloadfile&lt;/a&gt; 에서 사용 된 이 명령은 다른 Cypress 명령을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="718591843f9ba65a328acf7e21cfb68fa2042427" translate="yes" xml:space="preserve">
          <source>Other Events</source>
          <target state="translated">기타 행사</target>
        </trans-unit>
        <trans-unit id="a0f0ed667090e2b4da8a08677ee6af9717b63780" translate="yes" xml:space="preserve">
          <source>Other Library Utilities</source>
          <target state="translated">다른 도서관 유틸리티</target>
        </trans-unit>
        <trans-unit id="9633103b8382b75b3eaa31a6dbe6ab1d02153685" translate="yes" xml:space="preserve">
          <source>Other commands have other default assertions not related to the DOM.</source>
          <target state="translated">다른 명령에는 DOM과 관련이없는 다른 기본 어설 션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="134fb8d2ae04d2d3c9a9a4af6ad1692000839276" translate="yes" xml:space="preserve">
          <source>Other header edge cases fixed.</source>
          <target state="translated">다른 헤더 엣지 케이스가 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="9a74839fb329210cefc15f752a6622604d7bd388" translate="yes" xml:space="preserve">
          <source>Other scenarios are fixed where command options would show incorrect number of object keys due to a bug in underscore&amp;rsquo;s &lt;code&gt;reduce&lt;/code&gt; with an object that has a &lt;code&gt;length&lt;/code&gt; key. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/35&quot;&gt;#35&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 키 가있는 객체 의 밑줄 &lt;code&gt;reduce&lt;/code&gt; 버그로 인해 명령 옵션에 잘못된 개수의 객체 키가 표시되는 다른 시나리오가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/35&quot;&gt;# 35&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b1b918a54461b6ca203ece2f7ef887446cdd145c" translate="yes" xml:space="preserve">
          <source>Other than that, you&amp;rsquo;ll have to wait for us to implement APIs to support this (check our &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/136&quot;&gt;open issue&lt;/a&gt;), or you can &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disable web security&lt;/a&gt;.</source>
          <target state="translated">그 외에는이를 지원하기 위해 API를 구현할 때까지 기다려야합니다 ( &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/136&quot;&gt;공개 문제&lt;/a&gt; 확인 ). 또는 &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;웹 보안을 비활성화&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6a1d57adbc55a74cd8d7e46f6465f90cae14723" translate="yes" xml:space="preserve">
          <source>Others, such as DOM based commands will automatically &lt;a href=&quot;retry-ability&quot;&gt;retry&lt;/a&gt; and wait for their corresponding elements to exist before failing.</source>
          <target state="translated">DOM 기반 명령과 같은 다른 기능은 자동으로 &lt;a href=&quot;retry-ability&quot;&gt;재 시도&lt;/a&gt; 하고 해당 요소가 존재하기를 기다렸다가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e0917a579b85b660779c9fc378f8524170e9108b" translate="yes" xml:space="preserve">
          <source>Otherwise the request will go out to the server, and the test spies on the network call. The spying intercept can even modify the real response from the server before it is returned to the web application under test.</source>
          <target state="translated">그렇지 않으면 요청이 서버로 나가고 테스트는 네트워크 호출을 감시합니다. 스파이 차단은 테스트중인 웹 응용 프로그램에 반환되기 전에 서버의 실제 응답을 수정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b64eeb9f052228eb6127e939fd69a0fcd34b7810" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;&amp;ldquo;Node Modules&amp;rdquo; recipes&lt;/a&gt; show you how to modify the support file.</source>
          <target state="translated">우리의 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;&quot;노드 모듈&quot;조리법은&lt;/a&gt; 어떻게 지원 파일을 수정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d8cf6c038b7ecc3bd2037fbd2a871b0c1e37a427" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt; has now been directly integrated into Cypress&amp;rsquo;s nav. Clicking on the &lt;code&gt;chat&lt;/code&gt; icon will immediately display the current gitter chat log.</source>
          <target state="translated">우리 &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;채팅&lt;/a&gt; 은 이제 Cypress의 탐색 기능에 직접 통합되었습니다. &lt;code&gt;chat&lt;/code&gt; 아이콘을 클릭하면 현재 gitter 채팅 로그가 즉시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b84dd6ed27ebbb24161fb20cd13e9c9446790489" translate="yes" xml:space="preserve">
          <source>Our algorithm &lt;em&gt;should&lt;/em&gt; always be able to scroll until the element is not covered.</source>
          <target state="translated">요소가 적용되지 않을 때까지 알고리즘 &lt;em&gt;은&lt;/em&gt; 항상 스크롤 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a870abe4c860977f849cc1f630781f46ffcd7fba" translate="yes" xml:space="preserve">
          <source>Our application correctly processing the response.</source>
          <target state="translated">응용 프로그램에서 응답을 올바르게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="04b5c88478c6a72f90ab7e86e7bf14012bd5b57b" translate="yes" xml:space="preserve">
          <source>Our application inserting the results into the DOM.</source>
          <target state="translated">애플리케이션은 결과를 DOM에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="a3ddf5a85c47d7464247fdd4ad5f82292ed8284e" translate="yes" xml:space="preserve">
          <source>Our application making a request to the correct URL.</source>
          <target state="translated">애플리케이션이 올바른 URL을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="af3d530a585a8e1bc006a72ddbadc9663b1582e9" translate="yes" xml:space="preserve">
          <source>Our build and testing processes have been upgraded to accommodate Linux builds.</source>
          <target state="translated">우리의 빌드 및 테스트 프로세스는 Linux 빌드를 수용하도록 업그레이드되었습니다.</target>
        </trans-unit>
        <trans-unit id="e00a5668b64eb01e1930ca426cb6f2768842a9ee" translate="yes" xml:space="preserve">
          <source>Our input field</source>
          <target state="translated">입력 필드</target>
        </trans-unit>
        <trans-unit id="079b47f75703a22d5288bf3ca08f7f9e8baf8b77" translate="yes" xml:space="preserve">
          <source>Our internal proxy no longer strips &lt;code&gt;HttpOnly&lt;/code&gt; cookie flags.</source>
          <target state="translated">내부 프록시는 더 이상 &lt;code&gt;HttpOnly&lt;/code&gt; 쿠키 플래그를 제거하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0f2b1d5242f8bd9da93bf9465b342f83bf4228db" translate="yes" xml:space="preserve">
          <source>Our mission</source>
          <target state="translated">우리의 미션</target>
        </trans-unit>
        <trans-unit id="5faefe610314fb559126eea0cf9344887304000f" translate="yes" xml:space="preserve">
          <source>Our mission is to build a thriving, open source ecosystem that enhances productivity, makes testing an enjoyable experience, and generates developer happiness. We hold ourselves accountable to champion a testing process &lt;strong&gt;that actually works&lt;/strong&gt;.</source>
          <target state="translated">우리의 임무는 생산성을 향상시키고 즐거운 경험을 제공하며 개발자의 행복을 창출하는 번창하는 오픈 소스 생태계를 구축하는 것입니다. 우리는 &lt;strong&gt;실제로 작동&lt;/strong&gt; 하는 테스트 프로세스를 옹호 할 책임이 &lt;strong&gt;있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c36f22791b58a721576a2ea6c34e8bd392f10c81" translate="yes" xml:space="preserve">
          <source>Our mission, and what we believe in</source>
          <target state="translated">우리의 사명과 우리가 믿는 것</target>
        </trans-unit>
        <trans-unit id="764a968fc502f358b28aeda7baffb35af3131b9f" translate="yes" xml:space="preserve">
          <source>Our official list of Cypress plugins.</source>
          <target state="translated">Cypress 플러그인의 공식 목록.</target>
        </trans-unit>
        <trans-unit id="3f30a4728b3ddc300ec54d283646606d6079b0eb" translate="yes" xml:space="preserve">
          <source>Our run will generate files &lt;code&gt;cypress/results/mochawesome.json, cypress/results/mochawesome_001.json, ...&lt;/code&gt;. Then we can combine them using the &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; utility.</source>
          <target state="translated">우리의 실행은 &lt;code&gt;cypress/results/mochawesome.json, cypress/results/mochawesome_001.json, ...&lt;/code&gt; 파일을 생성 할 것 입니다. 그런 다음 &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; 유틸리티를 사용하여 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="828b52eb03deb7deb2c7275716d13c839d78b132" translate="yes" xml:space="preserve">
          <source>Our team is always planning and working on really &amp;ldquo;big&amp;rdquo; upcoming features. Priorities can change as we move forward, but here is an outline of where Cypress is headed now.</source>
          <target state="translated">우리 팀은 항상 &quot;큰&quot;다가오는 기능을 계획하고 작업하고 있습니다. 우리가 앞으로 나아갈 때 우선 순위가 바뀔 수 있지만, 여기 Cypress가 어디로 향하고 있는지에 대한 개요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="900f285ccd208a81b53230dc6914a439983fdea3" translate="yes" xml:space="preserve">
          <source>Our test can confirm the property was properly set.</source>
          <target state="translated">테스트 결과 속성이 올바르게 설정되었는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41d947e0f7db689e7999246dec22a51df898a054" translate="yes" xml:space="preserve">
          <source>Our test should now display &lt;code&gt;CONTAINS&lt;/code&gt; in the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; and still be green.</source>
          <target state="translated">테스트 결과 이제 &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;명령 로그에 &lt;/a&gt; &lt;code&gt;CONTAINS&lt;/code&gt; 가 표시 되고 여전히 녹색입니다.</target>
        </trans-unit>
        <trans-unit id="6dc11a421caea45bb7bf80b53ddf9ed997ebaa3d" translate="yes" xml:space="preserve">
          <source>Our unit test is hitting the line we could not reach from the end-to-end tests, and if we execute all spec files - we will get 100% code coverage.</source>
          <target state="translated">우리의 단위 테스트는 엔드-투-엔드 테스트에서 도달 할 수없는 수준에 도달했으며 모든 사양 파일을 실행하면 100 % 코드 적용 범위를 얻게됩니다.</target>
        </trans-unit>
        <trans-unit id="de107cd8214241da67abb1dce8f61cdc7e52cba4" translate="yes" xml:space="preserve">
          <source>Our users are typically developers or QA engineers building web applications using modern JavaScript frameworks.</source>
          <target state="translated">우리의 사용자는 일반적으로 최신 JavaScript 프레임 워크를 사용하여 웹 응용 프로그램을 작성하는 개발자 또는 QA 엔지니어입니다.</target>
        </trans-unit>
        <trans-unit id="cfd6eb0a6f58dc56f19f16cac6a2b6c5603d3e4e" translate="yes" xml:space="preserve">
          <source>Output both the versions of the installed Cypress binary application and the npm module.</source>
          <target state="translated">설치된 Cypress 이진 응용 프로그램 및 npm 모듈 버전을 모두 출력합니다.</target>
        </trans-unit>
        <trans-unit id="287dd0e59f15cdc3294daad256a1cd713cd10158" translate="yes" xml:space="preserve">
          <source>Output usage information</source>
          <target state="translated">사용 정보 출력</target>
        </trans-unit>
        <trans-unit id="7a7557c64edbf1ae6e0c7582c591925bad209743" translate="yes" xml:space="preserve">
          <source>Outputs Key Events Table to console on click</source>
          <target state="translated">클릭시 콘솔에 주요 이벤트 테이블 출력</target>
        </trans-unit>
        <trans-unit id="b1bca3106f7d79706aa3b51e4318a92e167ae698" translate="yes" xml:space="preserve">
          <source>Outstanding requests are automatically aborted between tests</source>
          <target state="translated">미결 요청은 테스트 사이에 자동으로 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="b87f621eb3bd3b9d4273639f1afa66324d564e12" translate="yes" xml:space="preserve">
          <source>Over in the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; you&amp;rsquo;ll see Cypress display the suite, the test and your first assertion (which should be passing in green).</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;명령 로그&lt;/a&gt; 에서 Cypress가 제품군, 테스트 및 첫 번째 주장 (녹색으로 전달)을 표시하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce131b5f054db4860bc0e21b9f9d5edf6321df5f" translate="yes" xml:space="preserve">
          <source>Overhauled the entire subsystem dealing with an element&amp;rsquo;s visibility state. Previously we were using jQuery&amp;rsquo;s &lt;code&gt;.is(&quot;:visible&quot;)&lt;/code&gt; selector which was ineffective at truly determining when an element is &amp;ldquo;visible&amp;rdquo;. Our changes now differ significantly from jQuery, but they match what a real user would consider visible, and the rules are fairly easy to explain. In other words these rules should just &amp;ldquo;make sense&amp;rdquo;.</source>
          <target state="translated">요소의 가시성 상태를 다루는 전체 서브 시스템을 점검했습니다. 이전에는 jQuery의 &lt;code&gt;.is(&quot;:visible&quot;)&lt;/code&gt; 선택기를 사용하여 요소가 &quot;보이는&quot;시기를 실제로 결정하는 데 효과적이지 않았습니다. 변경 사항은 이제 jQuery와 크게 다르지만 실제 사용자가 볼 수있는 것과 일치하며 규칙을 쉽게 설명 할 수 있습니다. 다시 말해서,이 규칙들은 단지 &quot;이해해야한다&quot;.</target>
        </trans-unit>
        <trans-unit id="ea5df8734b78a704d09b18622f7793039329d295" translate="yes" xml:space="preserve">
          <source>Overkill for 1 or 2 environment variables.</source>
          <target state="translated">1 개 또는 2 개의 환경 변수에 대한 오버 킬.</target>
        </trans-unit>
        <trans-unit id="2acc0cb53bf75fb575fd79d5044494ca1c739f83" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;url&lt;/code&gt; glob matching options</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 글로브 일치 옵션 무시</target>
        </trans-unit>
        <trans-unit id="ac7a1564c38cb88838b8d574a746b7686662e3d0" translate="yes" xml:space="preserve">
          <source>Override default Mocha timeout handling, replaced with custom logic. Removes many bizarre edge cases.</source>
          <target state="translated">기본 Mocha 시간 초과 처리를 재정의하고 사용자 지정 논리로 대체했습니다. 기괴한 많은 경우를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="bba26f010298017d7596195a44abf189ea2f7ba1" translate="yes" xml:space="preserve">
          <source>Override default port</source>
          <target state="translated">기본 포트 재정의</target>
        </trans-unit>
        <trans-unit id="972589e34f682f215737ae7dade9d1545d13b9ff" translate="yes" xml:space="preserve">
          <source>Override multiple options from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) by passing an object literal</source>
          <target state="translated">개체 리터럴을 전달하여 구성 파일 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; )의 여러 옵션을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="f4fa50fda07b6b386cbfe63da1a0a3de6d39c585" translate="yes" xml:space="preserve">
          <source>Override multiple values from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) by passing an object literal.</source>
          <target state="translated">개체 리터럴을 전달하여 구성 파일 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; )의 여러 값을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="dbfae8106e4520016392671e88563d001da61afc" translate="yes" xml:space="preserve">
          <source>Override the selectors that are returned per element</source>
          <target state="translated">요소 당 리턴되는 선택자를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="c056a4e8c8b5ded25fd5c1de1e24443e6cab17c0" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;name&lt;/code&gt; only for display purposes.</source>
          <target state="translated">표시 목적으로 만 &lt;code&gt;name&lt;/code&gt; 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="0de2f7df9a1182e3371193832e9ffbda0ba1cf73" translate="yes" xml:space="preserve">
          <source>Overrides the global &lt;code&gt;requestTimeout&lt;/code&gt; for this request. Defaults to &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">이 요청에 대한 전역 &lt;code&gt;requestTimeout&lt;/code&gt; 을 재정의합니다 . 기본값은 &lt;code&gt;timeout&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="34b11a7aa4a58c64096833a3770ff786f1acbda0" translate="yes" xml:space="preserve">
          <source>Overrides the global &lt;code&gt;responseTimeout&lt;/code&gt; for this request. Defaults to &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">이 요청에 대한 글로벌 &lt;code&gt;responseTimeout&lt;/code&gt; 을 대체합니다 . 기본값은 &lt;code&gt;timeout&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bc533440e33f7e93c5572bc348f0389559438897" translate="yes" xml:space="preserve">
          <source>Overriding Configuration</source>
          <target state="translated">구성 재정의</target>
        </trans-unit>
        <trans-unit id="d13fa98479a1b2e41a0dd81028d7125dee6b7be4" translate="yes" xml:space="preserve">
          <source>Overriding Options</source>
          <target state="translated">재정의 옵션</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="5d1061667d68f65ca9a24abf5bb68fe6608d538d" translate="yes" xml:space="preserve">
          <source>Overview -</source>
          <target state="translated">개요-</target>
        </trans-unit>
        <trans-unit id="66a410f3471068bac3a522089b7d1674fc867f4c" translate="yes" xml:space="preserve">
          <source>Overview:</source>
          <target state="translated">Overview:</target>
        </trans-unit>
        <trans-unit id="651b238328415d9482abe02a46509e24270cd762" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;contains&lt;/code&gt; command</source>
          <target state="translated">덮어 쓰기 &lt;code&gt;contains&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="380d7b9e8db236251941584dcac13331a990fa25" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;screenshot&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;screenshot&lt;/code&gt; 덮어 쓰기 명령</target>
        </trans-unit>
        <trans-unit id="dfcd4c1735270bc28b574b108a6da1453b4ca95e" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;type&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 덮어 쓰기 명령</target>
        </trans-unit>
        <trans-unit id="fe55ff3990602e8a382186152e84bf5417950bd2" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;code&gt;visit&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;visit&lt;/code&gt; 명령 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="c6b2f04ca28a0bbf26ecf770f4a432fd6fd1eccb" translate="yes" xml:space="preserve">
          <source>Overwrite Existing Commands</source>
          <target state="translated">기존 명령 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="14e092b6505d8076a0e4cf7586f230f4cdc06706" translate="yes" xml:space="preserve">
          <source>Overwrites all other forms of setting env variables.</source>
          <target state="translated">환경 변수 설정의 다른 모든 형식을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="55af20415ead0ddd417f37fa91a4c767b749ee34" translate="yes" xml:space="preserve">
          <source>PR</source>
          <target state="translated">PR</target>
        </trans-unit>
        <trans-unit id="d625e512af00f2c3d22d6c1e5f20c004a9fabed3" translate="yes" xml:space="preserve">
          <source>PR comments and failure screenshot thumbnails are optional, and can be disabled if not needed within a project&amp;rsquo;s GitHub Integration settings:</source>
          <target state="translated">PR 주석 및 실패 스크린 샷 썸네일은 선택 사항이며 프로젝트의 GitHub 통합 설정에서 필요하지 않은 경우 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92367bb4820f6d139b1601c7faa4553765dda55b" translate="yes" xml:space="preserve">
          <source>Padding used to alter the dimensions of a screenshot of an element. It can either be a number, or an array of up to four numbers &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties&quot;&gt;using CSS shorthand notation&lt;/a&gt;. This property is only applied for element screenshots and is ignored for all other types.</source>
          <target state="translated">요소의 스크린 샷 크기를 변경하는 데 사용되는 패딩입니다. 숫자 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties&quot;&gt;CSS 속기 표기법을 사용&lt;/a&gt; 하는 최대 4 개의 숫자 배열 일 수 있습니다 . 이 속성은 요소 스크린 샷에만 적용되며 다른 모든 유형에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7914cd03c604d20e425177927205bc571e20082a" translate="yes" xml:space="preserve">
          <source>Page Load Errors</source>
          <target state="translated">페이지로드 오류</target>
        </trans-unit>
        <trans-unit id="3765bfd5d7bd998258438c0b7893f18862adbecf" translate="yes" xml:space="preserve">
          <source>Page Loads</source>
          <target state="translated">페이지로드</target>
        </trans-unit>
        <trans-unit id="1fca89dd57d703cf1a653a18dfa94add93e1ce84" translate="yes" xml:space="preserve">
          <source>Page Navigation</source>
          <target state="translated">페이지 탐색</target>
        </trans-unit>
        <trans-unit id="8b5b1ded6410ecf095ecbabe4bbdfd1434a68849" translate="yes" xml:space="preserve">
          <source>Page events</source>
          <target state="translated">페이지 이벤트</target>
        </trans-unit>
        <trans-unit id="29b18fd430fb6dbbedb01b3cb9c534dbbee44ce3" translate="yes" xml:space="preserve">
          <source>Page load events no longer forcibly &lt;code&gt;null&lt;/code&gt; out the current subject. This was very unexpected and difficult to debug. Now stale elements or other objects from previous pages are yielded to you.</source>
          <target state="translated">페이지로드 이벤트는 더 이상 강제로 &lt;code&gt;null&lt;/code&gt; 현재 대상을. 예상치 못한 디버깅이 어려웠습니다. 이제 이전 페이지의 오래된 요소 또는 다른 개체가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d352b7dfb32b85185978769c09f84cfe59d257e0" translate="yes" xml:space="preserve">
          <source>Pain to write the &lt;code&gt;--env&lt;/code&gt; options everywhere you use Cypress.</source>
          <target state="translated">Cypress를 사용하는 모든 곳 에서 &lt;code&gt;--env&lt;/code&gt; 옵션 을 작성하는 데 통증 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb7f75a523427d81e3000ff59131b5a7d5e28db6" translate="yes" xml:space="preserve">
          <source>Parallelization</source>
          <target state="translated">Parallelization</target>
        </trans-unit>
        <trans-unit id="1ffd2f8d4759391168c0a25163e739ef59d84cf2" translate="yes" xml:space="preserve">
          <source>Parallelization process</source>
          <target state="translated">병렬화 프로세스</target>
        </trans-unit>
        <trans-unit id="0071f7c6e61d24f7681f55d5de9b246688d675d0" translate="yes" xml:space="preserve">
          <source>Parallelization settings</source>
          <target state="translated">병렬화 설정</target>
        </trans-unit>
        <trans-unit id="e78977b0d2b7295348fb2111c8c0aed1c15bf0bd" translate="yes" xml:space="preserve">
          <source>Parallelizing our tests across 2 machines saved us almost 50% of the total run time, and we can further decrease the build time by adding more machines.</source>
          <target state="translated">두 시스템에서 테스트를 병렬화하면 총 실행 시간의 거의 50 %가 절약되었으며 더 많은 시스템을 추가하여 빌드 시간을 추가로 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b61933b5151f96fe8f08b1892fb206db0c69f36" translate="yes" xml:space="preserve">
          <source>Parent Commands</source>
          <target state="translated">부모 명령</target>
        </trans-unit>
        <trans-unit id="6d813481d0e2765edac3b22ef65af035c97bd900" translate="yes" xml:space="preserve">
          <source>Parent commands always &lt;strong&gt;begin&lt;/strong&gt; a new chain of commands. Even if you&amp;rsquo;ve chained it off of a previous command, parent commands will always start a new chain, and ignore previously yielded subjects.</source>
          <target state="translated">부모 명령은 항상 새로운 명령 체인을 &lt;strong&gt;시작&lt;/strong&gt; 합니다. 이전 명령에서 체인을 연결하더라도 상위 명령은 항상 새 체인을 시작하고 이전에 생성 된 주제를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="726bec5e8a61a888b556fb08e09589f15c6497ae" translate="yes" xml:space="preserve">
          <source>Parse special characters for strings surrounded by &lt;code&gt;{}&lt;/code&gt;, such as &lt;code&gt;{esc}&lt;/code&gt;. Set to &lt;code&gt;false&lt;/code&gt; to type the literal characters instead</source>
          <target state="translated">&lt;code&gt;{esc}&lt;/code&gt; 와 같이 { &lt;code&gt;{}&lt;/code&gt; 둘러싸인 문자열의 특수 문자를 구문 분석하십시오 . 리터럴 문자를 대신 입력하려면 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7f65b13784e740a4319a207b36f6d3ebf1191822" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{animationDistanceThreshold: 20}&lt;/code&gt; to decrease the sensitivity of detecting if an element is animating. By increasing the threshold this enables your element to move farther on the page without causing Cypress to continuously retry.</source>
          <target state="translated">패스 &lt;code&gt;{animationDistanceThreshold: 20}&lt;/code&gt; 요소가 애니메이션되는 경우의 검출 감도를 저하한다. 임계 값을 늘리면 Cypress가 계속 재 시도하지 않고도 요소가 페이지에서 더 멀리 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e3c4f2fd7e8d3c49dd7759238695f4e1271b28d" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{force: true}&lt;/code&gt;. This disables &lt;em&gt;all&lt;/em&gt; error checking</source>
          <target state="translated">패스 &lt;code&gt;{force: true}&lt;/code&gt; . 이것은 &lt;em&gt;모든&lt;/em&gt; 오류 검사를 비활성화 &lt;em&gt;합니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7954dfd274f9fe4fbfb315ff96ad047a4c1c7738" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;{waitForAnimations: false}&lt;/code&gt; to disable animation error checking</source>
          <target state="translated">패스 &lt;code&gt;{waitForAnimations: false}&lt;/code&gt; 해제 애니메이션 오류 검사에</target>
        </trans-unit>
        <trans-unit id="42a14d42feb62693eb0d570ec87fed2c3979285a" translate="yes" xml:space="preserve">
          <source>Pass a function that can have any number of explicit assertions within it. Whatever was passed to the function is what is yielded.</source>
          <target state="translated">그 안에 명시 적 주장을 가질 수있는 함수를 전달하십시오. 함수에 전달 된 것은 산출 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="b7970c2432353e0ed7d38f33f8f53b87bbd51c68" translate="yes" xml:space="preserve">
          <source>Pass a function that expands the array into its arguments.</source>
          <target state="translated">배열을 인수로 확장하는 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="9695fea0c70832d4dbc5486f1028ee09d482e97b" translate="yes" xml:space="preserve">
          <source>Pass a function that is invoked with the following arguments:</source>
          <target state="translated">다음 인수로 호출 된 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="48a526df05a88ca4659c2b3bed048b44d80bfdaf" translate="yes" xml:space="preserve">
          <source>Pass a function that receives the arguments passed to the command.</source>
          <target state="translated">명령에 전달 된 인수를받는 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="1702bd7343a24ebfd3728dbd6ea3445e739f20f1" translate="yes" xml:space="preserve">
          <source>Pass a function that takes the current yielded subject as its first argument.</source>
          <target state="translated">현재 산출 된 주제를 첫 번째 인수로 취하는 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="89b5efc7fbcfc8e82e4f3f7b2a16815750d4be7b" translate="yes" xml:space="preserve">
          <source>Pass a function that takes the previously yielded subject as its first argument.</source>
          <target state="translated">이전에 산출 된 주제를 첫 번째 인수로 취하는 함수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="b53ee1e2da26c3ad158135a09e1e5043e9bff542" translate="yes" xml:space="preserve">
          <source>Pass a single string variable.</source>
          <target state="translated">단일 문자열 변수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="a9883256c0e1a4e71c3f1ed9505e84dea67bc010" translate="yes" xml:space="preserve">
          <source>Pass an object as a JSON in a string.</source>
          <target state="translated">문자열에서 객체를 JSON으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="899c3df738db5eb28c8614c44887a337fe4a13cc" translate="yes" xml:space="preserve">
          <source>Pass in an options object</source>
          <target state="translated">옵션 객체를 전달</target>
        </trans-unit>
        <trans-unit id="081085aaf38a112f2493ac4b0e4b0cb79e3f59d5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to &lt;code&gt;Cypress.log()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 &lt;code&gt;Cypress.log()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30ce724b997ece17d42c30137b18429e840ca749" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.blur&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.blur&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="62d2c52785d24cfbb304812547fc0ac32efd8985" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.check()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.check()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="a81fa5b3e26185decdb933b9b334502b022e14a8" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.children()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.children()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="66a0bd38e1ab2e0d45d1c23ff87015a8fb7713b5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.clear()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.clear()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d7c52f9e5d8fda425242e1b8979de9625daa8f5" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.click()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.click()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="824c84851489b0bdf01185f5dee4ac1d8ca53c86" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.closest()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 의 기본 동작을 변경하려면 옵션 객체를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="db4e6a9e5a7456e312ae8f301c8b7c92bab8decf" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.contains()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="531e37b609ab1ecde77405892c15f6063f827f15" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.dblclick()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e99909a352c5eec870d34926405770f1c665753" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.debug()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.debug()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7720b5be271d33cb3a5b6abc7392249fa21567b" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.eq()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.eq()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="decd6f2e7ed526173f58b3cdd3859563a440b1dd" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.filter()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.filter()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c544301b56ae5b6844d408877eed8aaf505bf59" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.find()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.find()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="23d30c9a3ab905680019ae050e190aebab2c6b4a" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.first()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.first()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fd5eef1cba712f7111e8eb177e251687159701f" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.focus()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.focus()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a4ed6efa0ef55be04edb42dbcf462b75b54b885" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.invoke()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.invoke()&lt;/code&gt; 의 기본 동작을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="e10921418a99e5dba1c39d870481fd2427394955" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.its()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.its()&lt;/code&gt; 의 기본 동작을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="30786191033ad23c2474fcb28d7bf4d25f54d932" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.last()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.last()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9981eec7cee39bacee115b368aa65ee6a0c8525" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.next()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.next()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="11ba2f7017804272febc9f9a6ac4e566cd5e4cf6" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.nextAll()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.nextAll()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="aac7bde659146227e3b76efef14122a7f1ea9aae" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.nextUntil()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.nextUntil()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c253e4feab239bd8fe7fecdd559faf749a2e40a" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.not()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.not()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d25ec9eb07dfaec871023a32a6deaaac6f7477d" translate="yes" xml:space="preserve">
          <source>Pass in an options object to change the default behavior of &lt;code&gt;.parent()&lt;/code&gt;.</source>
          <target state="translated">옵션 객체를 전달하여 &lt;code&gt;.parent()&lt;/code&gt; 의 기본 동작을 변경하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
