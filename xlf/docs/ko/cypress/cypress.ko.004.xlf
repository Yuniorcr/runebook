<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="60f36509279d4c17207d1dc348d8c1f5325d200b" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">여러 요소를 클릭하려고하면 기본적으로 Cypress에서 오류가 발생합니다. &lt;code&gt;{ multiple: true }&lt;/code&gt; 를 전달 하면 Cypress가 각 요소에 반복적으로 클릭을 적용하고 여러 번 &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;명령 로그에&lt;/a&gt; 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="ca8db2bd85e68f1147add871bae2bf1eaa392769" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">기본적으로 Cypress는 여러 요소를 클릭하려고하면 오류가 발생합니다. &lt;code&gt;{ multiple: true }&lt;/code&gt; 를 전달 하면 Cypress는 각 요소에 클릭을 반복적으로 적용하고 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;명령 로그에도&lt;/a&gt; 여러 번 기록합니다.</target>
        </trans-unit>
        <trans-unit id="4a5b0165d7fa914e6a05288cb84f384c5563603e" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to right click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the right click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">기본적으로 여러 요소를 마우스 오른쪽 버튼으로 클릭하면 Cypress에서 오류가 발생합니다. &lt;code&gt;{ multiple: true }&lt;/code&gt; 를 전달 하면 Cypress는 각 요소에 오른쪽 클릭을 반복적으로 적용하고 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;명령 로그에도&lt;/a&gt; 여러 번 기록합니다.</target>
        </trans-unit>
        <trans-unit id="72ad38b3930c438ea2669bb82bdc3ba449421a89" translate="yes" xml:space="preserve">
          <source>By default, Cypress will iteratively apply the double click to each element and will also log to the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">기본적으로 Cypress는 각 요소에 두 번 클릭을 반복적으로 적용하고 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;명령 로그에도&lt;/a&gt; 여러 번 기록합니다.</target>
        </trans-unit>
        <trans-unit id="2eaa1b50e36b4ca02fd70aa93843f9d4af125355" translate="yes" xml:space="preserve">
          <source>By default, Cypress will run tests in Electron headlessly.</source>
          <target state="translated">기본적으로 Cypress는 Electron에서 헤드리스 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="020c7aea8e7fcdb3f70f080fc34e32edac970fc2" translate="yes" xml:space="preserve">
          <source>By default, JavaScript timers and CSS animations are disabled to try to prevent changes to your application under test while the screenshot is taken, but you can turn off this behavior.</source>
          <target state="translated">스크린 샷을 찍는 동안 테스트중인 응용 프로그램이 변경되지 않도록 JavaScript 타이머 및 CSS 애니메이션은 기본적으로 비활성화되어 있지만이 동작을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31d239b236e06bd32e82356597cd3678076349da" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">기본적으로 스크린 샷은 &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;스크린 샷 폴더에&lt;/a&gt; 상대적인 경로와 함께 파일에 저장되며 스펙 파일이있는 위치와 관련된 경로가 추가되고 현재 테스트 스위트 및 테스트 이름을 포함한 이름이 &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0749d0f73e94151b375df64ccc7eee6451592897" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">기본적으로 스크린 샷은 상대 경로로 파일에 저장됩니다 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;스크린 샷 폴더&lt;/a&gt; : 현재 테스트의 스위트 룸과 테스트 이름을 포함하는 이름으로, 사양 파일이있는 곳으로 관련된 경로 추가, &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25b5c1248e79a26964e544280fa3ed4f30495142" translate="yes" xml:space="preserve">
          <source>By default, any environment variable that matches a corresponding configuration key will override the &lt;code&gt;cypress.json&lt;/code&gt; value.</source>
          <target state="translated">기본적으로 해당 구성 키와 일치하는 환경 변수는 &lt;code&gt;cypress.json&lt;/code&gt; 값 을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d0e8b3b87d13429a6c8955ad16b7c84cbf40a8" translate="yes" xml:space="preserve">
          <source>By default, every user of Cypress is given a personal organization - named after you. You cannot delete or edit the name of this default organization.</source>
          <target state="translated">기본적으로 Cypress의 모든 사용자에게는 귀하의 이름을 따서 명명 된 개인 조직이 제공됩니다. 이 기본 조직의 이름을 삭제하거나 편집 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5063fbb288f3f5b4a8dd3fb04c4aabced23161da" translate="yes" xml:space="preserve">
          <source>By default, if your screen is not large enough to display all of the current dimension&amp;rsquo;s pixels, Cypress will scale and center your application within the Cypress runner to accommodate.</source>
          <target state="translated">기본적으로 화면이 현재 치수의 모든 픽셀을 표시 할만큼 크지 않은 경우 Cypress는 Cypress 러너 내에서 응용 프로그램의 크기를 조정하고 가운데에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="56147af8f660e28c93278b32108de5247937fc54" translate="yes" xml:space="preserve">
          <source>By default, modifiers are released after each type command.</source>
          <target state="translated">기본적으로 수정자는 각 유형 명령 후에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="8f36f87fbe0c647d60dcf224cf359b9788daa6ff" translate="yes" xml:space="preserve">
          <source>By default, scaling the application under test is turned off during when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt; to prevent differences between screenshots on screens with different resolutions. You can turn scaling on and have your app scaled like it is during normal use of Cypress. This is always coerced to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;viewport&lt;/code&gt; 경우 테스트중인 응용 프로그램의 배율 조정이 해제 되어 해상도가 다른 화면의 스크린 샷 간 차이를 방지합니다. Cypress를 정상적으로 사용하는 동안 스케일링을 켜고 앱을 스케일링 할 수 있습니다. &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;runner&lt;/code&gt; 경우 항상 &lt;code&gt;true&lt;/code&gt; 로 강제됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f335479f6d588a3ec88fa2676dba6b4a72b2028" translate="yes" xml:space="preserve">
          <source>By default, the event will bubble up the DOM tree. This will prevent the event from bubbling.</source>
          <target state="translated">기본적으로 이벤트는 DOM 트리를 버블 링합니다. 이렇게하면 이벤트가 버블 링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ee8175e75416cebdf4f5f2b3834c5eeb169de38" translate="yes" xml:space="preserve">
          <source>By default, until you issue a &lt;code&gt;cy.viewport()&lt;/code&gt; command, Cypress sets the width to &lt;code&gt;1000px&lt;/code&gt; and the height to &lt;code&gt;660px&lt;/code&gt; by default.</source>
          <target state="translated">당신이 발행 될 때까지 기본적으로 &lt;code&gt;cy.viewport()&lt;/code&gt; 명령을, 싸이프레스의 폭을 설정 &lt;code&gt;1000px&lt;/code&gt; 과의 높이 &lt;code&gt;660px&lt;/code&gt; 기본적으로합니다.</target>
        </trans-unit>
        <trans-unit id="31da1ef1646d02bd7e3e61c167ce21d28b35ce7b" translate="yes" xml:space="preserve">
          <source>By default, when running &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; from the CLI, we will launch Electron headlessly.</source>
          <target state="translated">기본적으로 CLI에서 &lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 실행할 때 Electron을 헤드리스로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="67d236dff9d0db2de50f277cfe461372f2b4cda7" translate="yes" xml:space="preserve">
          <source>By installing Cypress through &lt;code&gt;npm&lt;/code&gt; you also get access to many other CLI commands.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 을 통해 Cypress를 설치 하면 다른 많은 CLI 명령에도 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80da3b5dbdcbfc5eb2338707d70f4635caeec1bb" translate="yes" xml:space="preserve">
          <source>By passing a string or array of strings you can block requests made to one or more hosts.</source>
          <target state="translated">문자열 또는 문자열 배열을 전달하면 하나 이상의 호스트에 대한 요청을 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="493d0ab8830dca4d10e1ecc76a7769c195e5b760" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;encoding: base64&lt;/code&gt; option, the &lt;code&gt;response.body&lt;/code&gt; will be base64-encoded content of the image. You can use this to construct a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs&quot;&gt;Data URI&lt;/a&gt; for use elsewhere.</source>
          <target state="translated">&lt;code&gt;encoding: base64&lt;/code&gt; 옵션 을 전달하면 &lt;code&gt;response.body&lt;/code&gt; 는 이미지의 base64 인코딩 콘텐츠가됩니다. 이를 사용하여 다른 곳에서 사용할 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs&quot;&gt;데이터 URI&lt;/a&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e86f3164eb298ada78ad107f6b73d554f9e9e38" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;encoding: binary&lt;/code&gt; option, the &lt;code&gt;response.body&lt;/code&gt; will be serialized binary content of the file. You can use this to access various file types via &lt;code&gt;.request()&lt;/code&gt; like &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.zip&lt;/code&gt;, or &lt;code&gt;.doc&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;encoding: binary&lt;/code&gt; 옵션 을 전달하면 &lt;code&gt;response.body&lt;/code&gt; 는 파일의 직렬화 된 이진 콘텐츠가됩니다. 이를 사용하여 &lt;code&gt;.pdf&lt;/code&gt; , &lt;code&gt;.zip&lt;/code&gt; 또는 &lt;code&gt;.doc&lt;/code&gt; 파일 과 같은 &lt;code&gt;.request()&lt;/code&gt; 를 통해 다양한 파일 유형에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c215ae2b7035d4fc04619254745488563429289e" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;baseUrl&lt;/code&gt;, you can avoid this reload altogether. Cypress will load the main window in the &lt;code&gt;baseUrl&lt;/code&gt; you specified as soon as your tests start.</source>
          <target state="translated">&lt;code&gt;baseUrl&lt;/code&gt; 을 설정하면 이 재로드를 완전히 피할 수 있습니다. Cypress는 테스트가 시작되는 즉시 지정한 &lt;code&gt;baseUrl&lt;/code&gt; 에 기본 창을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="52184d3398336fbb0d43496bd9f09ab0e9d17269" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;{ prevSubject: true }&lt;/code&gt;, our new &lt;code&gt;.console()&lt;/code&gt; command will require a subject.</source>
          <target state="translated">&lt;code&gt;{ prevSubject: true }&lt;/code&gt; 를 설정하면 새로운 &lt;code&gt;.console()&lt;/code&gt; 명령에 제목이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3120251e5bc484923b3fd9e2b19995bc7bd41c27" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically generate logs to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">디버깅을 켜면 Cypress가 쿠키 값을 &lt;em&gt;설정&lt;/em&gt; 하거나 &lt;em&gt;지울&lt;/em&gt; 때 콘솔에 자동으로 로그를 생성 합니다. 이는 Cypress가 각 테스트 전에 쿠키를 지우는 방법을 이해하는 데 유용하며 테스트 사이에 쿠키 보존을 처리하는 방법을 시각화하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="316130fed5f133da590e50589a6237514343d251" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically log out to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">Cypress는 디버깅을 &lt;em&gt;설정&lt;/em&gt; 하여 쿠키 값을 &lt;em&gt;설정&lt;/em&gt; 하거나 &lt;em&gt;지울&lt;/em&gt; 때 콘솔에 자동으로 로그 아웃 합니다. 이는 Cypress가 각 테스트 전에 쿠키를 지우는 방법을 이해하는 데 도움이되며 테스트간에 쿠키를 보존하는 방법을 시각화하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="298fa88d04166bb6674ad4e0d3ccdf772b46c496" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; we avoid the use of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">사용하여 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 우리는 사용하지 않도록 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18078552f603c5c6fab2d90bca20e9322ebefd72" translate="yes" xml:space="preserve">
          <source>By using callback functions we&amp;rsquo;ve created a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;closure&lt;/a&gt;. Closures enable us to keep references around to refer to work done in previous commands.</source>
          <target state="translated">콜백 함수를 사용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;클로저를&lt;/a&gt; 만들었습니다 . 클로저를 사용하면 이전 명령에서 수행 한 작업을 참조하기 위해 참조를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="489e37d7dbee8b74c057ee1d2d38019f4c513b59" translate="yes" xml:space="preserve">
          <source>Bypassing your UI</source>
          <target state="translated">UI 우회</target>
        </trans-unit>
        <trans-unit id="ff61c566a2ca6d712c906c28744ddcd1dba14009" translate="yes" xml:space="preserve">
          <source>CI Build ID environment variables by provider</source>
          <target state="translated">제공자 별 CI 빌드 ID 환경 변수</target>
        </trans-unit>
        <trans-unit id="fc69adcfecb8cb1dd5f155da62e87064402b4c2d" translate="yes" xml:space="preserve">
          <source>CI Configurations in Kitchen Sink Example</source>
          <target state="translated">주방 싱크의 CI 구성 예</target>
        </trans-unit>
        <trans-unit id="d01ac6617bafd8746500902dac96f7c5734ac2f0" translate="yes" xml:space="preserve">
          <source>CI Provider</source>
          <target state="translated">CI 제공자</target>
        </trans-unit>
        <trans-unit id="c662b79291f346f66148551da0ae0a7364ce29f5" translate="yes" xml:space="preserve">
          <source>CI machines contact the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to indicate which spec files to run in the project.</source>
          <target state="translated">CI 시스템은 Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; 에 연결하여 프로젝트에서 실행할 스펙 파일을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2027f0b62c225f1fba06f13e84c73e654c595e88" translate="yes" xml:space="preserve">
          <source>CI parallelization interactions</source>
          <target state="translated">CI 병렬화 상호 작용</target>
        </trans-unit>
        <trans-unit id="434a666a92024e35fbc505bba0c2675be6990ff3" translate="yes" xml:space="preserve">
          <source>CLI Errors</source>
          <target state="translated">CLI 오류</target>
        </trans-unit>
        <trans-unit id="2b73128876956758fae01f88c425032451c06b72" translate="yes" xml:space="preserve">
          <source>CLI now displays the correct overridden &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; on first open. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;#659&lt;/a&gt;.</source>
          <target state="translated">CLI는 이제 처음 열 때 올바른 재정의 된 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 을 표시합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;# 659&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5964dd4adab7594f2e1a2e9d973bbe2f7d161bc1" translate="yes" xml:space="preserve">
          <source>CLI shows help message when it is invoked with an unknown command like &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;#641&lt;/a&gt;.</source>
          <target state="translated">CLI는 &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt; 와 같은 알 수없는 명령으로 호출 될 때 도움말 메시지를 표시합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;# 641&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="03f5dac5f9ec51daa2d44c63bd74508ea187e09e" translate="yes" xml:space="preserve">
          <source>CLI tools</source>
          <target state="translated">CLI 도구</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="bc649576a4d3ad53cb4f5ae4e2787fadafe6b354" translate="yes" xml:space="preserve">
          <source>CORS Network Errors are now correctly caught.</source>
          <target state="translated">CORS 네트워크 오류가 올바르게 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="70f64583fc76685812e87c4faa1cb1b507ca4146" translate="yes" xml:space="preserve">
          <source>CORS is bypassed</source>
          <target state="translated">CORS가 무시 됨</target>
        </trans-unit>
        <trans-unit id="ac7e57b7980c52be07d41cc077fc6f543ecb0e7f" translate="yes" xml:space="preserve">
          <source>CPU Architecture</source>
          <target state="translated">CPU 아키텍처</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="7c73fb96fc873b0e54bb33b427402eb6dae05fa0" translate="yes" xml:space="preserve">
          <source>CSS Improvements</source>
          <target state="translated">CSS 개선</target>
        </trans-unit>
        <trans-unit id="d7d5905637755f2600a18d5aff7b8c939f054ab1" translate="yes" xml:space="preserve">
          <source>CSS changes.</source>
          <target state="translated">CSS 변경.</target>
        </trans-unit>
        <trans-unit id="1a0d5a83a082583528756c941afe7d7ac4c8fee8" translate="yes" xml:space="preserve">
          <source>Cache the &lt;code&gt;~/.cache&lt;/code&gt; folder after running &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; or equivalents as demonstrated in the configs below.</source>
          <target state="translated">아래 구성에서 설명한대로 &lt;code&gt;npm install&lt;/code&gt; , &lt;code&gt;yarn&lt;/code&gt; , &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt; 또는 이와 동등한 항목을 실행 한 후 &lt;code&gt;~/.cache&lt;/code&gt; 폴더를 캐시하십시오 .</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="552776a73910809012403d392d8679e0d673873d" translate="yes" xml:space="preserve">
          <source>Caching folders with npm modules saves a lot of time after the first build.</source>
          <target state="translated">npm 모듈로 폴더를 캐싱하면 첫 번째 빌드 후 많은 시간이 절약됩니다.</target>
        </trans-unit>
        <trans-unit id="1fa16ca9debb97f6986680d1936a0fc501a513a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;cy.request()&lt;/code&gt; over and over again</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; 반복해서 호출</target>
        </trans-unit>
        <trans-unit id="827f02b84175cae4a4e46e6380f1464410138f6a" translate="yes" xml:space="preserve">
          <source>Callback function that filters requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">기록되거나 스텁되는 요청을 필터링하는 콜백 함수입니다. 기본적으로 이것은 &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.jsx&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; 및 &lt;code&gt;.css&lt;/code&gt; 파일 과 같은 자산 유사 요청과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="f93685d70a619e9e5640c0d9c00fcede507aa163" translate="yes" xml:space="preserve">
          <source>Callback function that whitelists requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">요청이 기록되거나 스텁되지 않도록 허용하는 콜백 함수입니다. 기본적으로 이는 &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.jsx&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; 및 &lt;code&gt;.css&lt;/code&gt; 파일 과 같은 자산 유사 요청과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="087dbaf08e0864a6ad0ad0adb86ee5ed58f3f116" translate="yes" xml:space="preserve">
          <source>Callback function when a request is sent</source>
          <target state="translated">요청이 전송 될 때 콜백 함수</target>
        </trans-unit>
        <trans-unit id="cf8d5c2978df66f3f394db8f6aab052e046024aa" translate="yes" xml:space="preserve">
          <source>Callback function when a response is returned</source>
          <target state="translated">응답이 반환 될 때의 콜백 함수</target>
        </trans-unit>
        <trans-unit id="61dc26e9c1fe08638550698294266bd9f36dd5bb" translate="yes" xml:space="preserve">
          <source>Callback function which fires anytime an XHR is aborted</source>
          <target state="translated">XHR이 중단 될 때마다 발생하는 콜백 기능</target>
        </trans-unit>
        <trans-unit id="46ba14f15f9aae955fad56969dc285a9cd868127" translate="yes" xml:space="preserve">
          <source>Called before your page has loaded all of its resources.</source>
          <target state="translated">페이지가 모든 리소스를로드하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6caed0da8cebe162cd765d1f7ebb277bdbcdff72" translate="yes" xml:space="preserve">
          <source>Called once your page has fired its load event.</source>
          <target state="translated">페이지가로드 이벤트를 시작하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ef1a512a13b777a8aa598130fecc3d609c6fe0e3" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt; no longer fires blur events on the &lt;code&gt;activeElement&lt;/code&gt; or causes it to become &lt;code&gt;body&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;#2234&lt;/a&gt;.</source>
          <target state="translated">호출 &lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; &lt;/a&gt; 더 이상 화재는의 이벤트 흐리게하지 &lt;code&gt;activeElement&lt;/code&gt; 를 하거나하게됩니다 &lt;code&gt;body&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;# 2234&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="dfb1b743dea5451ffee7e0b29e93e9c9e02d727f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Cypress.$('button')&lt;/code&gt; will automatically query for elements in your remote &lt;code&gt;window&lt;/code&gt;. In other words, Cypress automatically sets the &lt;code&gt;document&lt;/code&gt; to be whatever you&amp;rsquo;ve currently navigated to via &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.$('button')&lt;/code&gt; 를 호출 하면 원격 &lt;code&gt;window&lt;/code&gt; 요소를 자동으로 쿼리합니다 . 즉, Cypress는 자동으로 &lt;code&gt;document&lt;/code&gt; 를 &lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 통해 현재 탐색 한 내용 으로 자동 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c85f18334b7491d85182e84efcffeac38212ea59" translate="yes" xml:space="preserve">
          <source>Can I pass in environment variables from the command line?</source>
          <target state="translated">명령 줄에서 환경 변수를 전달할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="d10e5029c1e28bc1a973ff19ea668605abce3fd8" translate="yes" xml:space="preserve">
          <source>Can I recover from failed Cypress commands like if a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t find an element?</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 이 요소를 찾지 못하는 경우와 같이 실패한 Cypress 명령을 복구 할 수 있습니까 ?</target>
        </trans-unit>
        <trans-unit id="52f60c07118b2ea2839c1265c591e221479eb96f" translate="yes" xml:space="preserve">
          <source>Can a user click on the element?</source>
          <target state="translated">사용자가 요소를 클릭 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="221fba3c424e5fc33582db258cdee25eeb4676e1" translate="yes" xml:space="preserve">
          <source>Can be stored in your &lt;code&gt;bash_profile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bash_profile&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a3ada5d5fc85a9fb0a3b73f11e43f21f3bd7b67" translate="yes" xml:space="preserve">
          <source>Can call &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;cy.window()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.window()&lt;/code&gt; 에서 &lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 를 호출 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8b6610dd542aebfaabe19f83676053a2d9964417" translate="yes" xml:space="preserve">
          <source>Can force responses to take longer to simulate network delay</source>
          <target state="translated">네트워크 지연을 시뮬레이션하기 위해 응답 시간이 더 오래 걸릴 수 있음</target>
        </trans-unit>
        <trans-unit id="ed8a1cb964cf3bae5d65002a7f9c02b0831945f9" translate="yes" xml:space="preserve">
          <source>Can only be called on a valid focusable element</source>
          <target state="translated">유효한 포커스 가능 요소에서만 호출 가능</target>
        </trans-unit>
        <trans-unit id="f99424e49fd08e81f2ce09d34ba877b9eeef249f" translate="yes" xml:space="preserve">
          <source>Can this be written as a function?</source>
          <target state="translated">이것은 함수로 작성할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="4fc2d9b2678b5da75f54eee51b90a74226366c17" translate="yes" xml:space="preserve">
          <source>Can this just be written as a simple function?</source>
          <target state="translated">이것을 간단한 함수로 작성할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a24787ac55453ccdeca09cc237538938881ad9fe" translate="yes" xml:space="preserve">
          <source>Can time out because your browser did not receive any focus events</source>
          <target state="translated">브라우저가 포커스 이벤트를받지 않아 시간이 초과 될 수 있음</target>
        </trans-unit>
        <trans-unit id="715dd339a0f190c96e4c5aefda2eec96e223e77b" translate="yes" xml:space="preserve">
          <source>Can you read this? If you did, it might sound something like this:</source>
          <target state="translated">이거 읽을 수있어? 그랬다면 다음과 같이 들릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="beb27c8e29d0525dbd2a4408dc6d33153c8dbd36" translate="yes" xml:space="preserve">
          <source>Can you see what Cypress is doing under the hood? It&amp;rsquo;s automatically waiting and retrying because it expects the content to &lt;strong&gt;eventually&lt;/strong&gt; be found in the DOM. It doesn&amp;rsquo;t immediately fail!</source>
          <target state="translated">Cypress가 무엇을하고 있는지 알 수 있습니까? 자동으로 대기하고 내용이 기대 때문에 다시 시도하는 것 &lt;strong&gt;, 결국&lt;/strong&gt; 은 DOM에서 찾을 수. 즉시 실패하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="711cd51206e2b20f7a7dcd2cc7ad8258724d1d0d" translate="yes" xml:space="preserve">
          <source>Can you think of any more?</source>
          <target state="translated">더 이상 생각할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="dad882c9c3e0a7a06ab377ce15833cf98595a06c" translate="yes" xml:space="preserve">
          <source>Canary</source>
          <target state="translated">Canary</target>
        </trans-unit>
        <trans-unit id="e760613087c145d4d43705311ebd5342caa91cd3" translate="yes" xml:space="preserve">
          <source>Cancel project transfer</source>
          <target state="translated">프로젝트 전송 취소</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="64b9d5a9e917dda829740003e994a492074b15af" translate="yes" xml:space="preserve">
          <source>Cannot &lt;code&gt;cy.visit()&lt;/code&gt; two different super domains in a single test</source>
          <target state="translated">단일 테스트에서 서로 다른 두 개의 슈퍼 도메인을 &lt;code&gt;cy.visit()&lt;/code&gt; 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="abb5bfdc353c366a7efbee1fb7da8e11330c0b1a" translate="yes" xml:space="preserve">
          <source>Cannot connect to API server</source>
          <target state="translated">API 서버에 연결할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="52f1a833377675f9699a778739ccffab115d51ce" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests across environments</source>
          <target state="translated">여러 환경에서 테스트를 병렬화 할 수 없음</target>
        </trans-unit>
        <trans-unit id="8bd1413beeb2490640f9bb664bd3ce493819d2f9" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests in this group</source>
          <target state="translated">이 그룹에서 테스트를 병렬화 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="f19b9a94a23e75f0746294f4067e3bcf318dbd3d" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests on a stale run</source>
          <target state="translated">오래된 실행에서 테스트를 병렬화 할 수 없음</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="bb0a25cc9790bc7fa5693c25569e769c8850a3b8" translate="yes" xml:space="preserve">
          <source>Captured remote page uncaught errors again which fail corresponding tests.</source>
          <target state="translated">캡처 된 원격 페이지 포착되지 않은 오류가 다시 발생하여 해당 테스트에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="48f2c0aca6c3bf7c2ed5abd3d76cf6978acf1777" translate="yes" xml:space="preserve">
          <source>Captured spec iframe errors again and preserve their stack trace.</source>
          <target state="translated">스펙 iframe 오류를 다시 캡처하고 스택 추적을 보존하십시오.</target>
        </trans-unit>
        <trans-unit id="26057558c8d1ceba1dfb290d88fd8159c1794732" translate="yes" xml:space="preserve">
          <source>Case Sensitivity</source>
          <target state="translated">대소 문자 구분</target>
        </trans-unit>
        <trans-unit id="cc3c3e5a2cc3f39c50c5ba6661d886a70e3ca1c8" translate="yes" xml:space="preserve">
          <source>Catalog of Events</source>
          <target state="translated">이벤트 카탈로그</target>
        </trans-unit>
        <trans-unit id="20c19aaf20441fa384633652a8389a543aec7485" translate="yes" xml:space="preserve">
          <source>Catch visual regressions and compare image diffs locally and in Cypress Dashboard.</source>
          <target state="translated">시각적 회귀를 포착하고 로컬 및 Cypress Dashboard에서 이미지 차이를 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="03dcea7f9dee894e28d9a8873cb17690d773516d" translate="yes" xml:space="preserve">
          <source>Catching Test Failures</source>
          <target state="translated">테스트 실패 잡기</target>
        </trans-unit>
        <trans-unit id="1533667b844aeabc61af79e6389d6109dd4c1603" translate="yes" xml:space="preserve">
          <source>Cause + Effect commands are now logged in the correct order. IE, clicking something which causes another command to insert will be inserted correctly in the order they arrived</source>
          <target state="translated">원인 + 효과 명령이 이제 올바른 순서로 기록됩니다. IE, 다른 명령을 삽입하는 것을 클릭하면 도착한 순서대로 올바르게 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="d0d31283aa0e9299d14e7cac83e850d482500bb5" translate="yes" xml:space="preserve">
          <source>Centered the animating icon in the Test Runner when &amp;lsquo;running&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;#1695&lt;/a&gt;.</source>
          <target state="translated">'실행'할 때 테스트 러너에서 애니메이션 아이콘을 중앙에 놓습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;# 1695&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fae277dee0479d19a4d4174ea2185ae54a626b9" translate="yes" xml:space="preserve">
          <source>Certain commands may have a specific requirement that causes them to immediately fail without retrying: such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 명령에는 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 같이 다시 시도하지 않고 즉시 실패하게하는 특정 요구 사항이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d10525a99b239e81e31412cc7b4c5dc1217f3627" translate="yes" xml:space="preserve">
          <source>Chai</source>
          <target state="translated">Chai</target>
        </trans-unit>
        <trans-unit id="20063bcb34e12094b0c2342fd9f9d64a0bd76ec4" translate="yes" xml:space="preserve">
          <source>Chai-jQuery</source>
          <target state="translated">Chai-jQuery</target>
        </trans-unit>
        <trans-unit id="b507de528ba917aa8f1aeb32108798635cce2a20" translate="yes" xml:space="preserve">
          <source>Chain assertions on the same subject</source>
          <target state="translated">같은 주제에 대한 체인 주장</target>
        </trans-unit>
        <trans-unit id="c5022ed468cf246ff38b41ca1c5260a12cfd999b" translate="yes" xml:space="preserve">
          <source>Chain assertions when yield changes</source>
          <target state="translated">수율 변경시 체인 어설 션</target>
        </trans-unit>
        <trans-unit id="a5d758b8fa875a66cbc9934c7ee9483ed6de99b9" translate="yes" xml:space="preserve">
          <source>Chain off the screenshot to click the element captured</source>
          <target state="translated">캡처 한 요소를 클릭하여 스크린 샷을 연결 해제</target>
        </trans-unit>
        <trans-unit id="657c40f2403784c009553c8544b91fc705a8214c" translate="yes" xml:space="preserve">
          <source>Chainable getters</source>
          <target state="translated">연결 가능한 게터</target>
        </trans-unit>
        <trans-unit id="273f575f4958f461d0f138115a61041b33e559e6" translate="yes" xml:space="preserve">
          <source>Chainer</source>
          <target state="translated">Chainer</target>
        </trans-unit>
        <trans-unit id="422de1722c9aa75f8bfed73fdcfb12bf76514cb5" translate="yes" xml:space="preserve">
          <source>Chainers</source>
          <target state="translated">Chainers</target>
        </trans-unit>
        <trans-unit id="04e698cea23e1b45cd3e12385b6d2ab527866116" translate="yes" xml:space="preserve">
          <source>Chaining more cy commands after using &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;#114&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; 을 사용한 후 더 많은 cy 명령을 연결하면 이제 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;# 114&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd28c1d5a7993ba1e76db394b3c497fda73bb41" translate="yes" xml:space="preserve">
          <source>Chaining multiple assertions</source>
          <target state="translated">여러 어설 션 연결</target>
        </trans-unit>
        <trans-unit id="2b6eea3213ea352f89364f5b731264b8ddbd83f1" translate="yes" xml:space="preserve">
          <source>Chains of Commands</source>
          <target state="translated">명령의 사슬</target>
        </trans-unit>
        <trans-unit id="ff38765fb13efaef738615a48a439f19a5cd83a9" translate="yes" xml:space="preserve">
          <source>Challenges</source>
          <target state="translated">Challenges</target>
        </trans-unit>
        <trans-unit id="e9d5957fd0828bce48abe3b5750dbacb90724b17" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 변경</target>
        </trans-unit>
        <trans-unit id="b9702c122dfeba4337afc89a1f47864c80a57678" translate="yes" xml:space="preserve">
          <source>Change Event</source>
          <target state="translated">이벤트 변경</target>
        </trans-unit>
        <trans-unit id="cb7dc796807b9ab5022a33275f9ee3c8e69c1814" translate="yes" xml:space="preserve">
          <source>Change defaults for &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 기본값 변경</target>
        </trans-unit>
        <trans-unit id="7faa5b6f1cfb58a5f5ce7885066d9e13a43e5c4a" translate="yes" xml:space="preserve">
          <source>Change download directory</source>
          <target state="translated">다운로드 디렉토리 변경</target>
        </trans-unit>
        <trans-unit id="4e2c7472c7f118d13b6615c813ef5f3bb88bbfde" translate="yes" xml:space="preserve">
          <source>Change encoding of Image fixture</source>
          <target state="translated">이미지 조명기의 인코딩 변경</target>
        </trans-unit>
        <trans-unit id="69f8af7a18ac0f9c63bdca983130f053e283c0bd" translate="yes" xml:space="preserve">
          <source>Change environment variables from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) from within your tests</source>
          <target state="translated">테스트 내 에서 구성 파일 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; )에서 환경 변수 변경</target>
        </trans-unit>
        <trans-unit id="fd1b85264fcbc4d17611b365be82d47f08fcd7f2" translate="yes" xml:space="preserve">
          <source>Change print media</source>
          <target state="translated">인쇄 매체 변경</target>
        </trans-unit>
        <trans-unit id="a19816936e7591f2ed567c405afffb827b72b2c2" translate="yes" xml:space="preserve">
          <source>Change project access</source>
          <target state="translated">프로젝트 액세스 변경</target>
        </trans-unit>
        <trans-unit id="4d8a452dd61108c4f9903188f2226e4895ac11ea" translate="yes" xml:space="preserve">
          <source>Change subject</source>
          <target state="translated">주제 변경</target>
        </trans-unit>
        <trans-unit id="a2264852d7b841eaadc2180f020ff98d66665845" translate="yes" xml:space="preserve">
          <source>Change the DOM using &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onBeforeScreenshot&lt;/code&gt; 및 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 을 사용하여 DOM 변경</target>
        </trans-unit>
        <trans-unit id="f2dbfe168f59b09cdd3726a94e135012a9e0f249" translate="yes" xml:space="preserve">
          <source>Change the default delay for all routes</source>
          <target state="translated">모든 노선의 기본 지연 변경</target>
        </trans-unit>
        <trans-unit id="8ad3ce939cbcd7ee45d9591bbd05a840351af836" translate="yes" xml:space="preserve">
          <source>Change the default filtering</source>
          <target state="translated">기본 필터링 변경</target>
        </trans-unit>
        <trans-unit id="f38779ae91156a63e5e148af488114e5555ae1b9" translate="yes" xml:space="preserve">
          <source>Change the default response headers for all routes</source>
          <target state="translated">모든 경로에 대한 기본 응답 헤더 변경</target>
        </trans-unit>
        <trans-unit id="166c9a2aabc185e0327b5e474ad649f10cfff354" translate="yes" xml:space="preserve">
          <source>Change the default selector strategy</source>
          <target state="translated">기본 선택기 전략 변경</target>
        </trans-unit>
        <trans-unit id="56c70055acbcb99d1f993ba5b54f607850d23ecf" translate="yes" xml:space="preserve">
          <source>Change the default timeout</source>
          <target state="translated">기본 시간 초과 변경</target>
        </trans-unit>
        <trans-unit id="d91b15d72bf7b781f4f7f4eb99724ab2ed3f45f0" translate="yes" xml:space="preserve">
          <source>Change the default whitelisting</source>
          <target state="translated">기본 허용 목록 변경</target>
        </trans-unit>
        <trans-unit id="422ec7b5cef5a6d463c68aa1e381ae3ef5d0bce5" translate="yes" xml:space="preserve">
          <source>Change the download directory of files downloaded during Cypress tests.</source>
          <target state="translated">Cypress 테스트 중에 다운로드 한 파일의 다운로드 디렉토리를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="62ef1f9374437dfd6cc2b229251b2231dfd04e7b" translate="yes" xml:space="preserve">
          <source>Change the orientation to landscape</source>
          <target state="translated">방향을 가로로 변경</target>
        </trans-unit>
        <trans-unit id="23f98c58cc44051fdbfdcba5fd6ae2a5007e02a3" translate="yes" xml:space="preserve">
          <source>Change the timeout</source>
          <target state="translated">타임 아웃 변경</target>
        </trans-unit>
        <trans-unit id="02325df05f0dab57c73c5f59302baaef6cfd7f63" translate="yes" xml:space="preserve">
          <source>Change the values of configuration options from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default) from within your tests</source>
          <target state="translated">테스트 내 에서 구성 파일 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; ) 의 구성 옵션 값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="a70a7add1eb506ed4604875dbced1b0852644b98" translate="yes" xml:space="preserve">
          <source>Change the values of your configuration options from within tests</source>
          <target state="translated">테스트 내에서 구성 옵션의 값을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="760ddcbbe7326d7e60cf68e623be61a82b0e2e29" translate="yes" xml:space="preserve">
          <source>Change who can access your Cypress project</source>
          <target state="translated">Cypress 프로젝트에 액세스 할 수있는 사람 변경</target>
        </trans-unit>
        <trans-unit id="71db0d5459437ab8a73c7cb7fb2e9838aab1352f" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;Linux&lt;/code&gt; build strategy which fixes not saving the internal &lt;code&gt;.cy cache&lt;/code&gt;. Also fixes not being able to update from the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;#66&lt;/a&gt;.</source>
          <target state="translated">내부 &lt;code&gt;.cy cache&lt;/code&gt; 저장하지 않는 문제를 해결하는 &lt;code&gt;Linux&lt;/code&gt; 빌드 전략이 변경되었습니다 . 또한 GUI에서 업데이트 할 수없는 수정 사항도 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;# 66&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="002b928ed5585ac0c9d0ff7adc244b789bb0beee" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;pageLoadTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;30000&lt;/code&gt; to &lt;code&gt;60000&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;pageLoadTimeout&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;30000&lt;/code&gt; 에서 &lt;code&gt;60000&lt;/code&gt; 으로 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="96e3651e54fb00eae4cdfca3b79c948c8407ab99" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;20000&lt;/code&gt; to &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;20000&lt;/code&gt; 에서 &lt;code&gt;30000&lt;/code&gt; 으로 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="5980ecc2994212ae97d9590a418df179431f268c" translate="yes" xml:space="preserve">
          <source>Changed default port from &lt;code&gt;3000&lt;/code&gt; to &lt;code&gt;2020&lt;/code&gt; to avoid standard port conflicts with commonly used back ends. Afterall, using Cypress is testing with 2020 vision. ;-)</source>
          <target state="translated">일반적으로 사용되는 백엔드와 표준 포트 충돌을 피하기 위해 기본 포트를 &lt;code&gt;3000&lt;/code&gt; 에서 &lt;code&gt;2020&lt;/code&gt; 으로 변경했습니다 . 결국 Cypress를 사용하는 것은 2020 비전으로 테스트합니다. ;-)</target>
        </trans-unit>
        <trans-unit id="ffe9065d2640d272843465bb16ea3a38ef177621" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; to return null (previously was returning Cookie that was cleared).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 반환 값이 null을 반환하도록 변경 되었습니다 (이전에 지워진 쿠키를 반환했습니다).</target>
        </trans-unit>
        <trans-unit id="ed16957486bec94f03a359b34fe4fa8d84c626df" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt; to return an array of cookies, each with properties include name, value, etc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt; 반환 값이 쿠키 배열을 반환하도록 변경되었습니다 . 각 쿠키에는 이름, 값 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b9d187a27f74ad153f456df89c8ffd6ae4842fc8" translate="yes" xml:space="preserve">
          <source>Changed scrolling elements into view to use top strategy instead of bottom which fixes times where the middle of an element was not yet in he viewport. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;#42&lt;/a&gt;.</source>
          <target state="translated">요소 중간이 아직 뷰포트에 있지 않은 시간을 수정하는 하단 대신 상단 전략을 사용하도록 스크롤 요소를보기로 변경했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;# 42&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="56a626b11951be7360d0da6dc57085d8f803fa53" translate="yes" xml:space="preserve">
          <source>Changed the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Test Runner&lt;/a&gt; to use &lt;code&gt;JWT&lt;/code&gt; for authorization. &lt;strong&gt;You will have to log in again&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;JWT&lt;/code&gt; 를 권한 부여 에 사용 하도록 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;테스트 러너&lt;/a&gt; 를 변경했습니다 . &lt;strong&gt;다시 로그인해야합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07c367bdf8a3831c57704eca86fd8443094c7a0" translate="yes" xml:space="preserve">
          <source>Changed url strategy for sending down &lt;code&gt;spec&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;spec&lt;/code&gt; 파일 을 전송하기위한 URL 전략이 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="47cf14fbbe4e51d10d131aad5d8ffaa121098222" translate="yes" xml:space="preserve">
          <source>Changes the Cypress binary cache location</source>
          <target state="translated">Cypress 바이너리 캐시 위치를 변경합니다</target>
        </trans-unit>
        <trans-unit id="c3627dab723119265222862e8a9135ba0363246c" translate="yes" xml:space="preserve">
          <source>Changes the hosted url to match that of the application under test.</source>
          <target state="translated">테스트중인 응용 프로그램의 URL과 일치하도록 호스팅 된 URL을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="8222ecd09879a288cf29b6e9cc85ba14324321ef" translate="yes" xml:space="preserve">
          <source>Changing browser preferences:</source>
          <target state="translated">브라우저 기본 설정 변경 :</target>
        </trans-unit>
        <trans-unit id="1f068e5ae02669bb727f7da73d357bc2e22aa692" translate="yes" xml:space="preserve">
          <source>Changing the Browserify options lets you:</source>
          <target state="translated">Browserify 옵션을 변경하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f448405e7e77b87d4af0899aad87267f2b9de4ea" translate="yes" xml:space="preserve">
          <source>Check a custom property</source>
          <target state="translated">맞춤 속성 확인</target>
        </trans-unit>
        <trans-unit id="dfa5e8a16c90c35d61537b6b69609b6aad883ea9" translate="yes" xml:space="preserve">
          <source>Check a token</source>
          <target state="translated">토큰 확인</target>
        </trans-unit>
        <trans-unit id="e50fa5ae6d6d5bcdbff5e8ef413067e159d7fccc" translate="yes" xml:space="preserve">
          <source>Check all checkboxes</source>
          <target state="translated">모든 확인란을 선택하십시오</target>
        </trans-unit>
        <trans-unit id="d32e13a4dc0d0ff2ccb96d057fcab5edef3cfdc4" translate="yes" xml:space="preserve">
          <source>Check an invisible checkbox</source>
          <target state="translated">보이지 않는 확인란을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="1f05d6c10010077750e1fb995ef82708b37c6245" translate="yes" xml:space="preserve">
          <source>Check case sensitivity</source>
          <target state="translated">대소 문자 구분 확인</target>
        </trans-unit>
        <trans-unit id="61f4e80ba9d1f4a5d58f0877fb993108dc025089" translate="yes" xml:space="preserve">
          <source>Check checkbox(es) or radio(s).</source>
          <target state="translated">확인란 또는 라디오를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="4f3560bedeca72f288dc3b5f1567d03a628ac068" translate="yes" xml:space="preserve">
          <source>Check location for query params and pathname</source>
          <target state="translated">쿼리 매개 변수 및 경로 이름의 위치 확인</target>
        </trans-unit>
        <trans-unit id="4768131d00ff541288147c29afe6d12a0f388e57" translate="yes" xml:space="preserve">
          <source>Check other sources of truth (like your server or database).</source>
          <target state="translated">서버 나 데이터베이스와 같은 다른 출처를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="92fe2487cb19e7830005cf2f0ab6baab6da121e9" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://glebbahmutov.com/blog/keep-passwords-secret-in-e2e-tests/&quot;&gt;this blog&lt;/a&gt; to explore another way to keep passwords secret within your tests.</source>
          <target state="translated">&lt;a href=&quot;https://glebbahmutov.com/blog/keep-passwords-secret-in-e2e-tests/&quot;&gt;이 블로그&lt;/a&gt; 를 확인 하여 테스트 내에서 비밀번호를 비밀로 유지하는 또 다른 방법을 알아보세요.</target>
        </trans-unit>
        <trans-unit id="82ec9274688488306135ddaf48212b3e595053fb" translate="yes" xml:space="preserve">
          <source>Check out our &amp;lsquo;XHR Web Forms&amp;rsquo; example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to simulate a &lt;code&gt;503&lt;/code&gt; on &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">우리의 사용 'XHR 웹 양식'예 조리법 확인 &lt;code&gt;cy.route()&lt;/code&gt; 시뮬레이션 &lt;code&gt;503&lt;/code&gt; 에 &lt;code&gt;POST&lt;/code&gt; 로그인에</target>
        </trans-unit>
        <trans-unit id="ae68238d2931f0991c3b6b6f22786eb45b69fa69" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="286570bd4a3d3cbc1beb60886c8c179abd17a319" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;Browser Launch API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;브라우저 실행 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c51d0d90ced866ef2875f4023c58a1fa429c5dcf" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;Configuration API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;구성 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf5361a399e5c488a33498468764383ba37c9adb" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0bc22ca4006e68be0287faab8c505b2a983cac7" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/parallelization&quot;&gt;guide on parallelizing runs&lt;/a&gt; and when to use the &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">&lt;a href=&quot;../guides/parallelization&quot;&gt;병렬화 실행에&lt;/a&gt; 대한 안내서 와 &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt; 옵션 사용시기를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4372d5c1ff331c99e413a0c0158593500e7f4d08" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">&lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;플러그인&lt;/a&gt; 작성에 대한 플러그인 가이드 또는 &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="61c198a6e38d282d9792429e6a97d9393471d5ca" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://docs.cypress.io/guides/tooling/plugins-guide.html&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/tooling/plugins-guide.html&quot;&gt;플러그인&lt;/a&gt; 을 작성하려면 플러그인 가이드 또는 &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API 문서&lt;/a&gt; 를 확인하세요 .</target>
        </trans-unit>
        <trans-unit id="c0777442410cab66b3f5e9f950dca694e91849fa" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint 플러그인을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="52ba348f92ec1a2bf83ba118a90e17c390a5fab7" translate="yes" xml:space="preserve">
          <source>Check out our example recipe extending chai with new assertions.</source>
          <target state="translated">새로운 어설 션으로 차이를 확장하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e9b767f3449382c93b6af483e67e9ea4f4103526" translate="yes" xml:space="preserve">
          <source>Check out our example recipe of logging in by typing username and password in HTML web forms</source>
          <target state="translated">HTML 웹 양식에 사용자 이름과 비밀번호를 입력하여 로그인 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b1d210aaba6af88f042bef8e02a138a36c9e3ba2" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing &lt;code&gt;window.fetch&lt;/code&gt; using &lt;code&gt;.its()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 사용하여 &lt;code&gt;window.fetch&lt;/code&gt; 테스트에서 예제 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0070f68ee4c88cb3cac34493132a51937e6c55ad" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing hover and working with hidden elements</source>
          <target state="translated">호버 테스트 및 숨겨진 요소 작업에 대한 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="102ab3840ae24102693d4ee70faba36caa9f93fd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe showing how to download and validate CSV and Excel files.</source>
          <target state="translated">CSV 및 Excel 파일을 다운로드하고 유효성을 검사하는 방법을 보여주는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="06702834e58a81747257fb0ff404f4646b17c53c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time</source>
          <target state="translated">스파이, 스터 빙 및 시간의 레시피 테스트 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7cb3ce610a9707b35468d1778ec5be6b8b67d2c3" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time.</source>
          <target state="translated">스파이, 스터 빙 및 시간의 레시피 테스트 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5c934a22639debdd62befc7a82f85a5b57fc1fa6" translate="yes" xml:space="preserve">
          <source>Check out our example recipe triggering mouse and drag events to test drag and drop</source>
          <target state="translated">드래그 앤 드롭을 테스트하기 위해 마우스 및 드래그 이벤트를 트리거하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="298273458e18e8e4608b67253b99d4e09c98258c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.fixture()&lt;/code&gt; to bootstrap data for our application.</source>
          <target state="translated">애플리케이션의 데이터를 부트 스트랩하기 위해 &lt;code&gt;cy.fixture()&lt;/code&gt; 를 사용하여 레시피 예제를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0b7d14f192ac95e2f293545c9c9da33dd7af366" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.request()&lt;/code&gt; for HTML web forms</source>
          <target state="translated">HTML 웹 양식에 &lt;code&gt;cy.request()&lt;/code&gt; 를 사용하여 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8765838968fb1c10fc04109747e1b70375eb877a" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to POST for login in HTML web forms</source>
          <target state="translated">HTML 웹 양식으로 로그인하기 위해 &lt;code&gt;cy.route()&lt;/code&gt; 를 사용하여 POST하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b5faae065c8bab1b4694249567a38a6935110d0c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; to test clicking on a link without opening in a new tab</source>
          <target state="translated">&lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; 을 사용하여 새 탭에서 열지 않고 링크 클릭을 테스트 하는 레시피 예제를 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="16bb5114dd6875c392e5649e6af9c792cea778cd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('show')&lt;/code&gt; and &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; to click an element that is only visible on hover</source>
          <target state="translated">&lt;code&gt;cy.invoke('show')&lt;/code&gt; 및 &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; 를 사용하여 호버에서만 볼 수있는 요소를 클릭하는 레시피 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c6f3335e78ca0eeab36fff282ecf4f376fe5a662" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('text')&lt;/code&gt; to test against HTML content in &amp;lsquo;Bootstrapping your App&amp;rsquo;</source>
          <target state="translated">&lt;code&gt;cy.invoke('text')&lt;/code&gt; 를 사용하여 '앱 부트 스트랩'에서 HTML 콘텐츠에 대해 테스트 하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cb040939bb0d48e5c9567dae081783d1f9b6b468" translate="yes" xml:space="preserve">
          <source>Check out our example recipes for &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;unit testing&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;unit testing React components&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;단위 테스트&lt;/a&gt; 및 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;단위 테스트 React 구성 요소에&lt;/a&gt; 대한 예제 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd3e75b3e26cef8f50ab48afe08c2033c68ea7db" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.getCookie()&lt;/code&gt; to test &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using HTML web forms&lt;/a&gt;, &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using XHR web forms&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in with single sign on&lt;/a&gt;</source>
          <target state="translated">사용 예제 조리법 확인 &lt;code&gt;cy.getCookie()&lt;/code&gt; 테스트에 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;HTML 웹 양식을 사용하여 로깅을&lt;/a&gt; , &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;XHR 웹 양식을 사용하여 로그인&lt;/a&gt; 및 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;하나의 기호로 로그인을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="144d8f82ec26f3470d0c20a09047cb7ce3b02584" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.visit()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;onBeforeLoad&lt;/code&gt; option to:</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; 의 &lt;code&gt;onBeforeLoad&lt;/code&gt; 옵션을 사용하여 레시피 예제를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c65343a47883a3d046d980e83838ae5025ee993f" translate="yes" xml:space="preserve">
          <source>Check out our guide for working with spies, stubs, and clocks.</source>
          <target state="translated">스파이, 스터브 및 시계 작업에 대한 가이드를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bbf99657b620f66bb8be3ff60e3326da8ce19528" translate="yes" xml:space="preserve">
          <source>Check out our guide to writing and organizing tests.</source>
          <target state="translated">테스트 작성 및 구성에 대한 안내서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="76902887dbb29462ab50a1f72e3e4927bfa56b7f" translate="yes" xml:space="preserve">
          <source>Check out our recipe using &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 and CommonJS modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 및 CommonJS 모듈을&lt;/a&gt; 사용하여 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cfe59349c9cb95a325115251fac516351c1ca53" translate="yes" xml:space="preserve">
          <source>Check that Chrome specific styles are applied</source>
          <target state="translated">Chrome 특정 스타일이 적용되었는지 확인</target>
        </trans-unit>
        <trans-unit id="121b5622e02d6e75f99cc9af32ea26833a7911ad" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;ga&amp;rsquo; and &amp;lsquo;ca&amp;rsquo;</source>
          <target state="translated">'ga'및 'ca'값으로 확인란을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="d21db9ce409aea20bb57fa47caf8469d0091c897" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;subscribe&amp;rsquo; and &amp;lsquo;accept&amp;rsquo;</source>
          <target state="translated">'구독'및 '수락'값이있는 확인란을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="55921b8d3e5c24dfbea1f13d63a77430aaa43ba6" translate="yes" xml:space="preserve">
          <source>Check the element with id of &amp;lsquo;saveUserName&amp;rsquo;</source>
          <target state="translated">ID가 'saveUserName'인 요소를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a547dcb1fef8a5633745d0e1bfe1ce7cc91ffb8" translate="yes" xml:space="preserve">
          <source>Check them out in &lt;a href=&quot;../references/configuration&quot;&gt;Configuration&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;../references/configuration&quot;&gt;구성&lt;/a&gt; 에서 확인하십시오 !</target>
        </trans-unit>
        <trans-unit id="def993bb4bf6ee1b395f22333500dd821db19f5e" translate="yes" xml:space="preserve">
          <source>Check your Developer Tools Console for the actual error - it should be printed there.</source>
          <target state="translated">개발자 도구 콘솔에서 실제 오류를 확인하십시오. 오류가 인쇄되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0e541a2a7a257b0faf46be512c0eb02d487b617a" translate="yes" xml:space="preserve">
          <source>Checking your email to see if your server sent a &amp;ldquo;forgot password&amp;rdquo; email.</source>
          <target state="translated">이메일에서 서버가&amp;ldquo;비밀번호를 잊어 버렸습니다&amp;rdquo;라는 이메일을 보냈는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d3e9cd47db0cd4d5d3988727ebbd002b5963bffe" translate="yes" xml:space="preserve">
          <source>Child Commands</source>
          <target state="translated">자식 명령</target>
        </trans-unit>
        <trans-unit id="a645ef9de2489c3237beef1a5012a7941d8fffec" translate="yes" xml:space="preserve">
          <source>Child commands are always chained off of a &lt;strong&gt;parent&lt;/strong&gt; command, or another &lt;strong&gt;child&lt;/strong&gt; command.</source>
          <target state="translated">자식 명령은 항상 &lt;strong&gt;부모&lt;/strong&gt; 명령 또는 다른 &lt;strong&gt;자식&lt;/strong&gt; 명령과 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="21def181d7294faef1558f010f6a68c1edc82a8c" translate="yes" xml:space="preserve">
          <source>Choose to associate &lt;strong&gt;All repositories&lt;/strong&gt; or only select GitHub repositories with your Cypress GitHub App installation.</source>
          <target state="translated">&lt;strong&gt;모든 리포지토리&lt;/strong&gt; 를 연결 하거나 Cyit GitHub 앱 설치와 함께 GitHub 리포지토리 만 선택하도록 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="6d7d90f6786892c846565de2483085c6bcc3d6cb" translate="yes" xml:space="preserve">
          <source>Choose to not fail on non-zero exit and assert on code and stderr</source>
          <target state="translated">0이 아닌 종료시 실패하지 않도록 선택하고 코드 및 stderr에 대해 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="cd582387a11c5e151923c7fd85abdb2884edf320" translate="yes" xml:space="preserve">
          <source>Choose whether this project is Public or Private.</source>
          <target state="translated">이 프로젝트가 공개인지 비공개인지 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="aa8351b817c778f9ed8a7afc280131e97fb365f6" translate="yes" xml:space="preserve">
          <source>Choose who owns the project. You can personally own it or select an organization you&amp;rsquo;ve created. If you do not have any organizations, click &lt;strong&gt;Create organization&lt;/strong&gt;. Organizations work just like they do in GitHub. They enable you to separate your personal and work projects. &lt;a href=&quot;organizations&quot;&gt;Read more about organizations&lt;/a&gt;.</source>
          <target state="translated">프로젝트를 소유 한 사람을 선택하십시오. 개인적으로 소유하거나 자신이 만든 조직을 선택할 수 있습니다. 조직이없는 경우 조직 &lt;strong&gt;만들기를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; . 조직은 GitHub에서와 마찬가지로 작동합니다. 개인 프로젝트와 업무 프로젝트를 분리 할 수 ​​있습니다. &lt;a href=&quot;organizations&quot;&gt;조직에 대해 자세히 알아보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="f4fa3ab76e5e90db09cca798babcdad498d4e5a5" translate="yes" xml:space="preserve">
          <source>Chrome Browsers</source>
          <target state="translated">크롬 브라우저</target>
        </trans-unit>
        <trans-unit id="ebacd7ba7696aa6ea2a56950abaffb0cdd6bb789" translate="yes" xml:space="preserve">
          <source>Chrome extension whitelisting</source>
          <target state="translated">Chrome 확장 프로그램 허용 목록</target>
        </trans-unit>
        <trans-unit id="259443eb4b18369de67344ac935d9792e6e16d38" translate="yes" xml:space="preserve">
          <source>Chrome, Chromium, or Canary</source>
          <target state="translated">크롬, 크롬 또는 카나리아</target>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="04430e870444d2dad6fbd9f658cce21d46c2c802" translate="yes" xml:space="preserve">
          <source>Chromium-based browsers</source>
          <target state="translated">Chromium 기반 브라우저</target>
        </trans-unit>
        <trans-unit id="1cc7820a08e28aa22dd2e6db74a83b75abc240f5" translate="yes" xml:space="preserve">
          <source>Circle</source>
          <target state="translated">Circle</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="6d5178edf78ebc81db787a70d73b948726802a59" translate="yes" xml:space="preserve">
          <source>CircleCI Cypress Orb</source>
          <target state="translated">CircleCI 사이프러스 오브</target>
        </trans-unit>
        <trans-unit id="0bda454dd959b1a0bf2d16693184fd413629861a" translate="yes" xml:space="preserve">
          <source>Clarified on errors related to not being able to run in CI. Previously there was a &amp;ldquo;catch all&amp;rdquo; error indicating your Cypress API Key was invalid. This was oftentimes incorrect. More specific errors have been added.</source>
          <target state="translated">CI에서 실행할 수없는 오류가 명확 해졌습니다. 이전에는 Cypress API 키가 유효하지 않음을 나타내는&amp;ldquo;캐치 모두&amp;rdquo;오류가있었습니다. 이것은 종종 틀렸다. 더 구체적인 오류가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0d4ea6c62e18a1e68830b556b756bc25664729b" translate="yes" xml:space="preserve">
          <source>Clarified the &amp;ldquo;Default Message&amp;rdquo; page when you have not &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; your application yet.</source>
          <target state="translated">아직 어플리케이션을 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 하지 않았을 때&amp;ldquo;기본 메시지&amp;rdquo;페이지가 명확 해졌습니다 .</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="83d4ab2218e544353bc7c879f0f5971c5c7e5f33" translate="yes" xml:space="preserve">
          <source>Cleaned up the URL by removing some unused content.</source>
          <target state="translated">사용하지 않는 콘텐츠를 제거하여 URL을 정리했습니다.</target>
        </trans-unit>
        <trans-unit id="a6a8e81a4fc837ec2fc226c8ea0d75c7628811be" translate="yes" xml:space="preserve">
          <source>Clear App Data</source>
          <target state="translated">명확한 앱 데이터</target>
        </trans-unit>
        <trans-unit id="8138a3e59340c16a058710e4394584afda1a8a3e" translate="yes" xml:space="preserve">
          <source>Clear Cypress cache</source>
          <target state="translated">Cypress 캐시 지우기</target>
        </trans-unit>
        <trans-unit id="a6db0cada346552ec5eae029c9e1051d55fcf5e6" translate="yes" xml:space="preserve">
          <source>Clear a cookie after logging in</source>
          <target state="translated">로그인 후 쿠키 삭제</target>
        </trans-unit>
        <trans-unit id="c12d3b38c18c36e38c58610a06ad7d4f4f8db7e5" translate="yes" xml:space="preserve">
          <source>Clear a specific browser cookie.</source>
          <target state="translated">특정 브라우저 쿠키를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="3ca258140fb71fc08b2e62d3d742fb818922dc81" translate="yes" xml:space="preserve">
          <source>Clear all browser cookies for current domain and subdomain.</source>
          <target state="translated">현재 도메인 및 하위 도메인에 대한 모든 브라우저 쿠키를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="9ef0896259882d1abdaf804bdc64b7450bc968d9" translate="yes" xml:space="preserve">
          <source>Clear all cookies after logging in</source>
          <target state="translated">로그인 후 모든 쿠키를 지우십시오</target>
        </trans-unit>
        <trans-unit id="6a071e15fb440304023d8103523c431894ca230f" translate="yes" xml:space="preserve">
          <source>Clear all localStorage</source>
          <target state="translated">모든 로컬 저장소 지우기</target>
        </trans-unit>
        <trans-unit id="487f99802f33ae77928cf631445338abdeb3542b" translate="yes" xml:space="preserve">
          <source>Clear all localStorage matching &lt;code&gt;/app-/&lt;/code&gt; RegExp</source>
          <target state="translated">&lt;code&gt;/app-/&lt;/code&gt; RegExp와 일치하는 모든 localStorage를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="87462777e65e17c8721efd27787a17e45f675eb3" translate="yes" xml:space="preserve">
          <source>Clear data in localStorage for current domain and subdomain.</source>
          <target state="translated">현재 도메인 및 하위 도메인에 대한 localStorage의 데이터를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="b3b763845e3000c5d17c6b2c69eca72c64c397e8" translate="yes" xml:space="preserve">
          <source>Clear localStorage with the key &amp;lsquo;appName&amp;rsquo;</source>
          <target state="translated">'appName'키로 localStorage를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="418791d7f5458588627ad5ef88fcbb506389e57a" translate="yes" xml:space="preserve">
          <source>Clear the contents of the Cypress cache. This is useful when you want Cypress to clear out all installed versions of Cypress that may be cached on your machine. After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">Cypress 캐시의 내용을 지우십시오. 이것은 Cypress가 시스템에 캐시 될 수있는 설치된 모든 버전의 Cypress를 지우도록하려는 경우에 유용합니다. 이 명령을 실행 한 후 Cypress를 다시 실행하기 전에 &lt;code&gt;cypress install&lt;/code&gt; 을 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="096b6f6e0e4881f86d8f079c46286c1b088fed27" translate="yes" xml:space="preserve">
          <source>Clear the input and type a new value</source>
          <target state="translated">입력을 지우고 새로운 값을 입력하십시오</target>
        </trans-unit>
        <trans-unit id="e705e46ce8ca0eeadd70b31d6169e90a8aa809ae" translate="yes" xml:space="preserve">
          <source>Clear the value of an &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 또는 &lt;code&gt;textarea&lt;/code&gt; 의 값을 지우십시오 .</target>
        </trans-unit>
        <trans-unit id="9abd58c373f91bc8e076913f544b5f307d4214fc" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo;</source>
          <target state="translated">&quot;다음&quot;을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="598d69e1e4c2af4e1dc4e74321c3ce6681b167df" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again</source>
          <target state="translated">&quot;다음&quot;을 다시 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="1b6215eab430a61828fd367ea9c12ef226542655" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again, then &amp;lsquo;Resume&amp;rsquo;</source>
          <target state="translated">&quot;다음&quot;을 다시 클릭 한 다음 '다시 시작'</target>
        </trans-unit>
        <trans-unit id="52ab6f1b8c88370737f264d45b627b49475818c1" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create New Key&lt;/strong&gt;. A new key will be automatically generated for your project.</source>
          <target state="translated">&lt;strong&gt;새 키 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; . 프로젝트에 대한 새 키가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6061dade670fc2fa48f86af4e96c8d10313b7c09" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt; beside the record key you want to delete.</source>
          <target state="translated">&lt;strong&gt;삭제&lt;/strong&gt; 하려는 레코드 키 옆에있는 &lt;strong&gt;삭제를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="e00e0bffead7622e972ea8ef3df7b0b3d975d274" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Set up Project to Record&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;녹화 할 프로젝트 설정을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c340e5a9ab9c7a60a37dd0f3e5716c3c3abcc2fc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Setup Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정 프로젝트를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="94298b3a9fbede230280ca097e6943ce959fa1bc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;, then &lt;strong&gt;Invite User&lt;/strong&gt;. &lt;em&gt;Note: you must have the &lt;a href=&quot;#User-roles&quot;&gt;role of 'owner' or 'admin'&lt;/a&gt; to invite users.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;사용자를&lt;/strong&gt; 클릭 한 다음 &lt;strong&gt;사용자 초대를&lt;/strong&gt; 클릭하십시오 . &lt;em&gt;참고 : 사용자를 초대하려면 &lt;a href=&quot;#User-roles&quot;&gt;'소유자'또는 '관리자'역할&lt;/a&gt; 이 있어야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ef54400efe775b2ca14012b53ad3792e80d7da" translate="yes" xml:space="preserve">
          <source>Click a DOM element.</source>
          <target state="translated">DOM 요소를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="9b3fcb2b86daccb3720c9ae62f6a8a56e3941d71" translate="yes" xml:space="preserve">
          <source>Click a link in a nav</source>
          <target state="translated">탐색에서 링크 클릭</target>
        </trans-unit>
        <trans-unit id="5467898d66466265eb5e6b64ab4791eb71104d92" translate="yes" xml:space="preserve">
          <source>Click all buttons found on the page</source>
          <target state="translated">페이지에있는 모든 버튼을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="c543376eaadfdb754045d7563ba32dd370cbc356" translate="yes" xml:space="preserve">
          <source>Click all elements with id starting with &amp;lsquo;btn&amp;rsquo;</source>
          <target state="translated">ID가 'btn'으로 시작하는 모든 요소를 ​​클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="419965f25c82bbbe5092bb182e2f07a13ea2fec4" translate="yes" xml:space="preserve">
          <source>Click events are now issued in the exact center of an element (taking into account 2d transforms) and provide the coordinates in the command console and in the actual event</source>
          <target state="translated">클릭 이벤트는 이제 요소의 정확한 중심 (2d 변환을 고려하여)으로 발행되고 명령 콘솔과 실제 이벤트에서 좌표를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3eefc209f30a5c33ca34d3dd8bc36144b5b8242b" translate="yes" xml:space="preserve">
          <source>Click events are now replicated &lt;em&gt;almost&lt;/em&gt; identically to the W3C click spec. They should behave for all intents and purposes, identically to real clicks in the browser.</source>
          <target state="translated">클릭 이벤트는 이제 W3C 클릭 사양과 &lt;em&gt;거의&lt;/em&gt; 동일하게 복제 됩니다. 브라우저의 실제 클릭과 동일하게 모든 의도와 목적으로 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e6b04f01e1f5a0bc6cfdffc3d40e6fcee740b2c" translate="yes" xml:space="preserve">
          <source>Click events now display event information about the &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; default action + propagation in the command console.</source>
          <target state="translated">클릭 이벤트는 이제 명령 콘솔에서 &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; 기본 동작 + 전파에 대한 이벤트 정보를 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="bd422ee18fc1fb0b047f765afb20776ce449d5d5" translate="yes" xml:space="preserve">
          <source>Click events now take into account whether the associated element is being covered up by another element, and will retry or fail with an exact error message if the click was unable to be issued due to this reason.</source>
          <target state="translated">클릭 이벤트는 이제 연관된 요소가 다른 요소에 의해 커버되는지 여부를 고려하고이 이유로 클릭을 발행 할 수없는 경우 정확한 오류 메시지와 함께 재시도 또는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3f3c88fcab7f5f3f182a08f90706ede6e6268f80" translate="yes" xml:space="preserve">
          <source>Click events will issue the click to the topmost element based on the click coordinates and not necessarily to the element you requested to e clicked (which simulates exactly how a real click works). If this happens it is noted in the command console and provides the &lt;code&gt;Actual Element Clicked&lt;/code&gt;.</source>
          <target state="translated">클릭 이벤트는 클릭 좌표를 기반으로 클릭을 요청한 요소 (실제 클릭의 실제 작동 방식을 정확하게 시뮬레이션하지 않음)에 따라 클릭을 최상위 요소로 발행합니다. 이 경우 명령 콘솔에 표시되고 &lt;code&gt;Actual Element Clicked&lt;/code&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="36e220a74b271d8eb88adb9bf598b1f366ea7fbe" translate="yes" xml:space="preserve">
          <source>Click events will now intelligently provide &lt;code&gt;focus&lt;/code&gt; to the first focusable element on the stack at the click coordinates, or will give &lt;code&gt;focus&lt;/code&gt; to the window.</source>
          <target state="translated">클릭 이벤트는 클릭 좌표에서 스택의 첫 번째 포커스 가능 요소에 지능적으로 &lt;code&gt;focus&lt;/code&gt; 를 제공 하거나 창에 &lt;code&gt;focus&lt;/code&gt; 를 둡니다 .</target>
        </trans-unit>
        <trans-unit id="4304df7b3622bb75a1caddfde8624611ee0cf5a4" translate="yes" xml:space="preserve">
          <source>Click it.</source>
          <target state="translated">클릭하세요.</target>
        </trans-unit>
        <trans-unit id="ea5282e32e71a8ee34394bdfc6dad20a963de697" translate="yes" xml:space="preserve">
          <source>Click link containing text</source>
          <target state="translated">텍스트가 포함 된 클릭 링크</target>
        </trans-unit>
        <trans-unit id="4d2ff8b106942392561b1a48333b5c5716140885" translate="yes" xml:space="preserve">
          <source>Click on it</source>
          <target state="translated">그것을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="b572ed50787e22e1a6e5dd0119b2848e714bc82a" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Runs&lt;/strong&gt; tab of your project within the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;테스트 러너&lt;/a&gt; 내에서 프로젝트 의 &lt;strong&gt;실행&lt;/strong&gt; 탭을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="84160a3d588c297d3068218c5e5f6dfd8c536c64" translate="yes" xml:space="preserve">
          <source>Click on the element and its selector will appear at the top. From there, you can copy it to your clipboard () or print it to the console ().</source>
          <target state="translated">요소를 클릭하면 해당 선택기가 맨 위에 나타납니다. 여기에서 클립 보드 ()로 복사하거나 콘솔 ()로 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9e8aca9ba1b3e7eee41815434377173d1d45726" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Proxy Settings&amp;rdquo; section to expand it and view the proxy settings that Cypress is currently using.</source>
          <target state="translated">&amp;ldquo;프록시 설정&amp;rdquo;섹션을 클릭하여 확장하고 Cypress가 현재 사용중인 프록시 설정을 봅니다.</target>
        </trans-unit>
        <trans-unit id="363442ac59194a543947af27cbec8013bc3db051" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Settings&amp;rdquo; tab.</source>
          <target state="translated">&quot;설정&quot;탭을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="3f3448b18fc56f113306514ebe1dd13d9d311959" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install the Cypress GitHub App&lt;/strong&gt; button.</source>
          <target state="translated">(가)를 클릭 &lt;strong&gt;싸이프레스 GitHub의 앱 설치&lt;/strong&gt; 버튼을 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="999575ef3960ae72d96b1dd0218e0e89fe9ccca9" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install&lt;/strong&gt; button to complete the installation.</source>
          <target state="translated">&lt;strong&gt;설치&lt;/strong&gt; 버튼을 클릭하여 &lt;strong&gt;설치&lt;/strong&gt; 를 완료하십시오.</target>
        </trans-unit>
        <trans-unit id="cb6ea07ceea62f07cc7a898341af41489d4993dd" translate="yes" xml:space="preserve">
          <source>Click the bottom center of the button.</source>
          <target state="translated">버튼의 하단 중앙을 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="41a0dcc2a8a2fb5131ec50b956f28a100a8d5891" translate="yes" xml:space="preserve">
          <source>Click the button</source>
          <target state="translated">버튼을 클릭</target>
        </trans-unit>
        <trans-unit id="e289e57aa6e4d147925d3aa745b5da18b71b1df9" translate="yes" xml:space="preserve">
          <source>Click the top right corner of the button.</source>
          <target state="translated">버튼의 오른쪽 상단을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="6b474668db39e948b35628fa8f54182cfccc937b" translate="yes" xml:space="preserve">
          <source>Click with key combinations</source>
          <target state="translated">키 조합으로 클릭</target>
        </trans-unit>
        <trans-unit id="722eae337c872677d616cb3599cb3d2e61ab5f27" translate="yes" xml:space="preserve">
          <source>Clicking giant yellow CypressError now displays associated XHR error in the console.</source>
          <target state="translated">거대한 노란색 CypressError를 클릭하면 이제 콘솔에 관련 XHR 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1f313222e0d8617915fd06f50a62cb3435598878" translate="yes" xml:space="preserve">
          <source>Clicking on Commands</source>
          <target state="translated">명령을 클릭</target>
        </trans-unit>
        <trans-unit id="b4a49650736fe53e5b286ec6a87d5e1b71843164" translate="yes" xml:space="preserve">
          <source>Clicking on svg elements is now working. 3.0.2 introduced a bug that would throw an &amp;lsquo;illegal invocation&amp;rsquo; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;#2245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;#2252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;#2258&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;#2277&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;#2288&lt;/a&gt;.</source>
          <target state="translated">svg 요소를 클릭하면 작동합니다. 3.0.2에는 '불법 호출'오류가 발생하는 버그가 도입되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;# 2245&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;# 2252&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;# 2258&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;# 2277&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;# 2288&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec5c2961cc9b10e26a2ce96cf3dd58994278ba71" translate="yes" xml:space="preserve">
          <source>Clicking on tray twice will toggle hide/show of app.</source>
          <target state="translated">트레이를 두 번 클릭하면 앱 숨기기 / 표시가 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="8a0f56afb4abdcba196fd871e341ac08ca369e94" translate="yes" xml:space="preserve">
          <source>Clicking the &amp;lsquo;reload&amp;rsquo; icon next to a test that does not have an ID will not work anymore. We&amp;rsquo;re reworking this feature to work without the presence of IDs.</source>
          <target state="translated">ID가없는 테스트 옆에있는 '재로드'아이콘을 클릭하면 더 이상 작동하지 않습니다. ID가 없어도 작동하도록이 기능을 수정하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="09c13b625e14ca6d25a024b6c1602df1f4121052" translate="yes" xml:space="preserve">
          <source>Clicking the URL in the header of the runner now opens that URL in a new tab.</source>
          <target state="translated">러너 헤더에서 URL을 클릭하면 해당 URL이 새 탭에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="7c5ffc1d9e226110bbc9b5c62b76f69aba310ad3" translate="yes" xml:space="preserve">
          <source>Client side rendering</source>
          <target state="translated">클라이언트 측 렌더링</target>
        </trans-unit>
        <trans-unit id="1bd3bd675d34fadf02958dffd39505acd40fd25c" translate="yes" xml:space="preserve">
          <source>Clip</source>
          <target state="translated">Clip</target>
        </trans-unit>
        <trans-unit id="04f6b3ea183eb9d70981161c4424a6cf525afd9f" translate="yes" xml:space="preserve">
          <source>Clock</source>
          <target state="translated">Clock</target>
        </trans-unit>
        <trans-unit id="de3521c3c0054dffb3a82eaf024be86e11df70b9" translate="yes" xml:space="preserve">
          <source>Close Cypress and open it up again</source>
          <target state="translated">Cypress를 닫고 다시여십시오</target>
        </trans-unit>
        <trans-unit id="f0851c9573d3ae28dc894b75ca322c550d8b5d7c" translate="yes" xml:space="preserve">
          <source>Closing the &lt;code&gt;Electron&lt;/code&gt; browser and then opening &lt;code&gt;Chrome&lt;/code&gt; no longer causes &lt;code&gt;cy.screenshot()&lt;/code&gt; to fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;#1820&lt;/a&gt;.</source>
          <target state="translated">폐문 &lt;code&gt;Electron&lt;/code&gt; 브라우저를 다음 열기 &lt;code&gt;Chrome&lt;/code&gt; 더 이상 발생하지 않습니다 &lt;code&gt;cy.screenshot()&lt;/code&gt; 실패합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;# 1820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="translated">코드 범위</target>
        </trans-unit>
        <trans-unit id="040eeb16b23b04c8d2d3fee2350384b271b2b4cd" translate="yes" xml:space="preserve">
          <source>Code Coverage by Parcel Bundler</source>
          <target state="translated">소포 묶음 코드 적용</target>
        </trans-unit>
        <trans-unit id="2cb78b9322acceba6db0cc469d6079f0eed92e27" translate="yes" xml:space="preserve">
          <source>Code Coverage for End-to-end Tests</source>
          <target state="translated">종단 간 테스트를위한 코드 범위</target>
        </trans-unit>
        <trans-unit id="7023311626b913aa5afafda321dc14a64019dcd3" translate="yes" xml:space="preserve">
          <source>Code Signed Mac App to prevent &amp;ldquo;Unidentified Developer&amp;rdquo; message on open.</source>
          <target state="translated">Code Signed Mac App은 &quot;Unidentified Developer&quot;메시지가 열리지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="4978477ab3935b5b6e023524251fc7bb2e84ca25" translate="yes" xml:space="preserve">
          <source>Code coverage as a guide</source>
          <target state="translated">가이드로서의 코드 커버리지</target>
        </trans-unit>
        <trans-unit id="80e6b7863e159a80e05622e61fae964550d29e14" translate="yes" xml:space="preserve">
          <source>Code put in a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hook will &lt;strong&gt;always&lt;/strong&gt; run prior to the test - even if you refreshed Cypress in the middle of an existing one!</source>
          <target state="translated">코드는에 넣어 &lt;code&gt;before&lt;/code&gt; 또는 &lt;code&gt;beforeEach&lt;/code&gt; 의 후크는 것입니다 &lt;strong&gt;항상&lt;/strong&gt; 시험 이전에 실행 - 당신이 기존의 중간에 싸이프레스을 갱신하는 경우에도!</target>
        </trans-unit>
        <trans-unit id="18e638137f5e1a28e4d63b7a6426544f9e6a2f33" translate="yes" xml:space="preserve">
          <source>CodeShip Pro</source>
          <target state="translated">CodeShip Pro</target>
        </trans-unit>
        <trans-unit id="d785696bebfac569ce1b1f94fd6d1bc7a3f3a180" translate="yes" xml:space="preserve">
          <source>Codeship</source>
          <target state="translated">Codeship</target>
        </trans-unit>
        <trans-unit id="97c94f954eb9f58c1655ab090be6e49d7268049f" translate="yes" xml:space="preserve">
          <source>Codeship Basic</source>
          <target state="translated">코드 쉽 기본</target>
        </trans-unit>
        <trans-unit id="58f58d40db364e7e6b3ae2eec1caba3d10e21c88" translate="yes" xml:space="preserve">
          <source>Codeship Pro</source>
          <target state="translated">코드 쉽 프로</target>
        </trans-unit>
        <trans-unit id="fe887c11920bb16f1c28e209c31bd85615adc335" translate="yes" xml:space="preserve">
          <source>CoffeeScript 2 is supported via modifying the default options for the Browserify preprocessor. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;#663&lt;/a&gt;.</source>
          <target state="translated">CoffeeScript 2는 Browserify 전 처리기의 기본 옵션을 수정하여 지원됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;# 663&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="99793b40d2d5fff667bcfcaa8b962c9192ef1e9b" translate="yes" xml:space="preserve">
          <source>CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</source>
          <target state="translated">CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6901a8efa68307d9e355cc6c7ca62e0d8af1e914" translate="yes" xml:space="preserve">
          <source>Combine multiple tests into one larger test.</source>
          <target state="translated">여러 테스트를 하나의 큰 테스트로 결합하십시오.</target>
        </trans-unit>
        <trans-unit id="e5b04e05c73af01968b4654d51eff2b8ba162905" translate="yes" xml:space="preserve">
          <source>Combined End-to-end and Unit Test Coverage</source>
          <target state="translated">종합적인 엔드 투 엔드 및 유닛 테스트 범위</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="8ff8896b49f3d1c0e7ce0f971b1ef8365b84bae3" translate="yes" xml:space="preserve">
          <source>Command (that was issued)</source>
          <target state="translated">명령 (발급 된)</target>
        </trans-unit>
        <trans-unit id="e1c8f7963bdb6829fd956422fc053e3dbec7c2e4" translate="yes" xml:space="preserve">
          <source>Command &lt;a href=&quot;readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; assumes the file exists. If you need to read a file that might not exist, use &lt;code&gt;cy.task&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 명령 은 파일이 존재한다고 가정합니다. 존재하지 않는 파일을 읽어야 할 경우 &lt;code&gt;cy.task&lt;/code&gt; 를 사용 하십시오. .</target>
        </trans-unit>
        <trans-unit id="51c8e955d851be7f51e3a8d58bdc9d8a8f6386a5" translate="yes" xml:space="preserve">
          <source>Command Errors</source>
          <target state="translated">명령 오류</target>
        </trans-unit>
        <trans-unit id="59b0754344014d9d6347724f39bcacbaf47c2e7d" translate="yes" xml:space="preserve">
          <source>Command Line</source>
          <target state="translated">커맨드 라인</target>
        </trans-unit>
        <trans-unit id="3220e89e03807a3230e626ebb638ab3aee0cccfb" translate="yes" xml:space="preserve">
          <source>Command Log</source>
          <target state="translated">명령 로그</target>
        </trans-unit>
        <trans-unit id="4fd8fb2de4aa579d5f4841bef35957e560af05e1" translate="yes" xml:space="preserve">
          <source>Command Logging</source>
          <target state="translated">명령 로깅</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">커맨드 라인</target>
        </trans-unit>
        <trans-unit id="fe07bd93ba143721c82060ee8fb91bb757ebc871" translate="yes" xml:space="preserve">
          <source>Command line:</source>
          <target state="translated">명령 줄 :</target>
        </trans-unit>
        <trans-unit id="03bddc3c9792f64cb2680dc74695a9d456f661d6" translate="yes" xml:space="preserve">
          <source>Command logging has been upgraded to support &amp;ldquo;page events&amp;rdquo;, which are different than commands. Now events which happen (XHR/page load/url change/spies/stubs/mocks) log out visually differently and do not use a command number. This should be easier to parse what was a real command and what was a page event.</source>
          <target state="translated">명령 로깅은 명령과 다른&amp;ldquo;페이지 이벤트&amp;rdquo;를 지원하도록 업그레이드되었습니다. 이제 발생하는 이벤트 (XHR / 페이지로드 / URL 변경 / 스파이 / 스텁 / 모의)는 시각적으로 다르게 로그 아웃되며 명령 번호를 사용하지 않습니다. 이것은 실제 명령과 페이지 이벤트를 구문 분석하기가 더 쉬워야합니다.</target>
        </trans-unit>
        <trans-unit id="6701ca218d2c0d22af562c6e7ae348de3902e333" translate="yes" xml:space="preserve">
          <source>Command logging now works even if no &lt;code&gt;cy&lt;/code&gt; commands have been issued. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;#37&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 명령이 발행 되지 않은 경우에도 명령 로깅이 작동합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;# 37&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e39d4db9ae516a060510157749e62f6a09582713" translate="yes" xml:space="preserve">
          <source>Command options &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; have been deprecated, these were confusing and limiting, and the same result can now be achieved using normal assertions. The end result is much more robust and much easier to understand.</source>
          <target state="translated">명령 옵션 &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; 가 더 이상 사용되지 않고 혼란스럽고 제한적이며 이제 일반 어설 션을 사용하여 동일한 결과를 얻을 수 있습니다. 최종 결과는 훨씬 강력하고 이해하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="ff41aeacf00ca22deef1d852243226b7d57ddcfa" translate="yes" xml:space="preserve">
          <source>Command right click</source>
          <target state="translated">명령 오른쪽 클릭</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="3aa4606c34c244cc001b55f89d15fdb8bb3d98b3" translate="yes" xml:space="preserve">
          <source>Commands Are Asynchronous</source>
          <target state="translated">명령이 비동기</target>
        </trans-unit>
        <trans-unit id="94f457c21cbe00fee4394ed6c39194ce49a8e54c" translate="yes" xml:space="preserve">
          <source>Commands Are Not Promises</source>
          <target state="translated">명령이 약속되지 않음</target>
        </trans-unit>
        <trans-unit id="2380e6fdbaf9a19875cebc9de5f197b951b60014" translate="yes" xml:space="preserve">
          <source>Commands Are Promises</source>
          <target state="translated">명령은 약속이다</target>
        </trans-unit>
        <trans-unit id="b55d85a43e8de9f15158eef6002a1e52e26191cd" translate="yes" xml:space="preserve">
          <source>Commands Must Exit</source>
          <target state="translated">명령을 종료해야합니다</target>
        </trans-unit>
        <trans-unit id="3642c607300c11d6c71ef8314ffec45c819ebb65" translate="yes" xml:space="preserve">
          <source>Commands Run Serially</source>
          <target state="translated">순차적으로 실행되는 명령</target>
        </trans-unit>
        <trans-unit id="f4dbd9d165d10424a15dcf3ef3c4eca57e21848a" translate="yes" xml:space="preserve">
          <source>Commands are also interactive. Go ahead and click on the &lt;code&gt;CLICK&lt;/code&gt; command.</source>
          <target state="translated">명령도 대화식입니다. 계속해서 &lt;code&gt;CLICK&lt;/code&gt; 명령을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="c72d0e0d77c7dec0a86b9dd2f9cc92d25237054c" translate="yes" xml:space="preserve">
          <source>Commands are not retried when they could potentially change the state of the application under test. For example, Cypress will not retry the &lt;a href=&quot;../../api/commands/click&quot;&gt;.click()&lt;/a&gt; command, because it could change something in the application.</source>
          <target state="translated">테스트중인 응용 프로그램의 상태를 잠재적으로 변경할 수있는 명령은 재 시도되지 않습니다. 예를 들어 Cypress는 &lt;a href=&quot;../../api/commands/click&quot;&gt;.click ()&lt;/a&gt; 명령을 다시 시도하지 않습니다 . 응용 프로그램에서 무언가를 변경할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="632789d4c61e2634269b10182e55c1ebebdf9ca7" translate="yes" xml:space="preserve">
          <source>Commands for managing the global Cypress cache. The Cypress cache applies to all installs of Cypress across your machine, global or not.</source>
          <target state="translated">글로벌 Cypress 캐시 관리를위한 명령 Cypress 캐시는 전체 시스템에 관계없이 모든 Cypress 설치에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="67255d55e8f0db78ddd835195c20c3cbc884d544" translate="yes" xml:space="preserve">
          <source>Commands text will no long cut off into ellipses when the Command Log is set to a wider width. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;#528&lt;/a&gt;.</source>
          <target state="translated">명령 로그가 더 넓은 너비로 설정되어 있으면 명령 텍스트가 더 이상 줄임표로 잘리지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;# 528&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a98a7bd58a3000c66673bad7d7849f2404e52967" translate="yes" xml:space="preserve">
          <source>Commands that do not exit are not supported</source>
          <target state="translated">종료되지 않은 명령은 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="e7908d6df5a164fe22c46ab0e206caa40d57bc4f" translate="yes" xml:space="preserve">
          <source>Commands to work with &lt;code&gt;sessionStorage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sessionStorage&lt;/code&gt; 와 함께 작동하는 명령</target>
        </trans-unit>
        <trans-unit id="21f1c0d12abd113cbd1f180c9c5aea4937b716c6" translate="yes" xml:space="preserve">
          <source>Commands vs assertions</source>
          <target state="translated">명령 대 어설 션</target>
        </trans-unit>
        <trans-unit id="7751acfe2fcfee66c6353229f87d58758935fdd9" translate="yes" xml:space="preserve">
          <source>Commands which precede assertions will now look downstream at those assertions and not resolve until their subject&amp;rsquo;s state passes all assertions. Previously this was &lt;strong&gt;sort of&lt;/strong&gt; implemented using &lt;em&gt;Command Options&lt;/em&gt; and the &lt;code&gt;eventually&lt;/code&gt; flag, but now this is the default behavior. &lt;em&gt;Command Options&lt;/em&gt; only worked on DOM-based subjects, and now the new assertion verification works on everything else (including RL-based commands, etc). What this means is that Cypress can predict what you are requesting and automatically modifies its behavior until this state is reached. This prevents test brittleness / random test flake. Additionally this removes ever having to use &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait(Number)&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cy.wait(Function)&lt;/code&gt; (though this is still a valid command). As a side effect, you will now see commands + their assertions in the spinning pending blue state. When assertions fail their associated command also fails at the same time. This visually represents the coupling between these two concepts. Another side effect is that &lt;code&gt;timeout&lt;/code&gt; options do not need to be provided on the succeeding assertions, and can instead just be provided on the proceeding command. All of the coupled assertions will automatically be retried to the maximum &lt;code&gt;timeout&lt;/code&gt; setting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;#43&lt;/a&gt;.</source>
          <target state="translated">어설 션 앞에 오는 명령은 이제 해당 어설 션을 다운 스트림으로보고 대상 상태가 모든 어설 션을 통과 할 때까지 해결되지 않습니다. 이전에이이었다 &lt;strong&gt;종류의&lt;/strong&gt; 사용하여 구현 &lt;em&gt;명령 옵션&lt;/em&gt; 과 &lt;code&gt;eventually&lt;/code&gt; 플래그를,하지만 지금은이 기본 동작입니다. &lt;em&gt;명령 옵션&lt;/em&gt; 은 DOM 기반 주제에서만 작동했으며 이제 새 어설 션 검증은 다른 모든 항목 (RL 기반 명령 등)에서 작동합니다. 이것이 의미하는 것은 Cypress가 요청한 내용을 예측하고이 상태에 도달 할 때까지 해당 동작을 자동으로 수정한다는 것입니다. 이것은 시험 취성 / 임의의 시험 플레이크를 방지합니다. 또한 이것은 &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait(Number)&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cy.wait(Function)&lt;/code&gt; (이것은 여전히 ​​유효한 명령입니다). 부작용으로 이제 회전 대기중인 파란색 상태에서 명령과 해당 어설 션이 표시됩니다. 어설 션이 실패하면 관련 명령도 동시에 실패합니다. 이것은이 두 개념 사이의 연결을 시각적으로 나타냅니다. 또 다른 부작용 은 후속 어설 션에 &lt;code&gt;timeout&lt;/code&gt; 옵션을 제공 할 필요가없고 대신 진행 명령에 제공 할 수 있다는 것입니다. 연결된 어설 션이 모두 최대 &lt;code&gt;timeout&lt;/code&gt; 설정 으로 자동 재 시도됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;# 43&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b67fe8756eb553f295fb28d7514aa1ba4e57eae" translate="yes" xml:space="preserve">
          <source>Commands which were silenced with &lt;code&gt;{log: false}&lt;/code&gt; will now always display in the Command Log if they were part of a replayed chain of commands due to an alias reference becoming stale. Previously they would not display which was very confusing.</source>
          <target state="translated">&lt;code&gt;{log: false}&lt;/code&gt; 로 침묵 된 명령은 별명 참조가 오래되어 재생 된 명령 체인의 일부인 경우 항상 명령 로그에 표시됩니다. 이전에는 매우 혼란스러운 내용이 표시되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e46f1c8aefb13180c91a4f4e324020c72d59a17c" translate="yes" xml:space="preserve">
          <source>Commit SHA linking to the GitHub commit</source>
          <target state="translated">GitHub 커밋에 링크하는 커밋 SHA</target>
        </trans-unit>
        <trans-unit id="25865a272d6c4602de8da066e2d33da0e5341e0b" translate="yes" xml:space="preserve">
          <source>Common Assertions</source>
          <target state="translated">공통 주장</target>
        </trans-unit>
        <trans-unit id="a4fc17db82c672dbaa571a55e4d313945d530f14" translate="yes" xml:space="preserve">
          <source>Common Scenarios</source>
          <target state="translated">일반적인 시나리오</target>
        </trans-unit>
        <trans-unit id="f190d7b11dc66a51be8efb7071740c9fcf96d6f8" translate="yes" xml:space="preserve">
          <source>Common Workarounds</source>
          <target state="translated">일반적인 해결 방법</target>
        </trans-unit>
        <trans-unit id="ebb9ca9c15ab5b7e2560c86bd227cfc4d5329c32" translate="yes" xml:space="preserve">
          <source>Compare text values of two elements</source>
          <target state="translated">두 요소의 텍스트 값 비교</target>
        </trans-unit>
        <trans-unit id="9e6886f8f41648e0189b7be81b0f1612315da498" translate="yes" xml:space="preserve">
          <source>Comparison to &lt;code&gt;cy.route()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.route()&lt;/code&gt; 비교</target>
        </trans-unit>
        <trans-unit id="976e8d41b2971241ac1e4d546b47b53758e78b1b" translate="yes" xml:space="preserve">
          <source>Compile the CoffeeScript into JavaScript &lt;code&gt;spec.js&lt;/code&gt;</source>
          <target state="translated">CoffeeScript를 JavaScript &lt;code&gt;spec.js&lt;/code&gt; 로 컴파일</target>
        </trans-unit>
        <trans-unit id="199262b85ab1cf1760553d29d5bb5a787f9cd66b" translate="yes" xml:space="preserve">
          <source>Complete WordPress Plugin Boilerplate including Cypress.io E2E tests.</source>
          <target state="translated">Cypress.io E2E 테스트를 포함한 완전한 WordPress 플러그인 보일러 플레이트.</target>
        </trans-unit>
        <trans-unit id="80bb2ea05fa48ef9fcf3abb3bc52f8beb680d0e3" translate="yes" xml:space="preserve">
          <source>Completely overhauled the URL and proxy system used to serve remote applications.</source>
          <target state="translated">원격 애플리케이션을 제공하는 데 사용되는 URL 및 프록시 시스템을 완전히 점검했습니다.</target>
        </trans-unit>
        <trans-unit id="a6280a8092ffd6b1ba45e5e944246c874afb1893" translate="yes" xml:space="preserve">
          <source>Complex Async Example</source>
          <target state="translated">복잡한 비동기 예</target>
        </trans-unit>
        <trans-unit id="998e6317b6fa148df91026296ec49dc9eade04a7" translate="yes" xml:space="preserve">
          <source>Complex Promise Example</source>
          <target state="translated">복잡한 약속의 예</target>
        </trans-unit>
        <trans-unit id="2dbce043918d35d9470549bbaa4939fb679a4bf3" translate="yes" xml:space="preserve">
          <source>Component Testing</source>
          <target state="translated">구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="b7159a32272ac35920d049fc30dc9f81832fe7b3" translate="yes" xml:space="preserve">
          <source>Component testing</source>
          <target state="translated">구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="3ab0fff92f04a237857d8954ccd4b2bbb77dd1a9" translate="yes" xml:space="preserve">
          <source>Computing the source code lines that were executed during the test is done through &lt;strong&gt;code coverage&lt;/strong&gt;. Code coverage requires inserting additional counters into your source code before running it. This step is called &lt;strong&gt;instrumentation&lt;/strong&gt;. Instrumentation takes code that looks likes this&amp;hellip;</source>
          <target state="translated">테스트 중에 실행 된 소스 코드 라인은 &lt;strong&gt;코드 적용 범위를&lt;/strong&gt; 통해 계산 됩니다. 코드 적용 범위를 실행하려면 소스 코드에 추가 카운터를 삽입해야합니다. 이 단계를 &lt;strong&gt;계측&lt;/strong&gt; 이라고 &lt;strong&gt;합니다&lt;/strong&gt; . 인스 트루먼 테이션은 이와 같은 코드를 사용합니다&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f412de2bc0a3e649ebd0aa9b0c7daf0fb09876b0" translate="yes" xml:space="preserve">
          <source>Concourse</source>
          <target state="translated">Concourse</target>
        </trans-unit>
        <trans-unit id="0c2f5941357ea3957dbb70ba9f3995d297cefd71" translate="yes" xml:space="preserve">
          <source>Conditional Testing</source>
          <target state="translated">조건부 테스트</target>
        </trans-unit>
        <trans-unit id="f6eb40cf389683812a0b9500584c22e43c7338b9" translate="yes" xml:space="preserve">
          <source>Conditional testing refers to the common programming pattern:</source>
          <target state="translated">조건부 테스트는 일반적인 프로그래밍 패턴을 말합니다.</target>
        </trans-unit>
        <trans-unit id="9ba9ed1bbe699365fc32d73023c9b43a78c723c9" translate="yes" xml:space="preserve">
          <source>Conditionally check whether an element has certain text:</source>
          <target state="translated">요소에 특정 텍스트가 있는지 조건부로 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4b7aee66483749043701d073392077b0d7e2cd0f" translate="yes" xml:space="preserve">
          <source>Conditionally wrap elements</source>
          <target state="translated">조건부 랩핑 요소</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="0ceae88b4177bac1201240778027412fc5be44bb" translate="yes" xml:space="preserve">
          <source>Config overrides coming from the CLI or environment variables are now validated the same way as if they&amp;rsquo;ve been set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">CLI 또는 환경 변수에서 오는 구성 대체는 이제 &lt;code&gt;cypress.json&lt;/code&gt; 에서 설정 한 것과 동일한 방식으로 유효성 검증 됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;# 1783&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="4afa86921bd437ba67c78363d6c2564ff21becdb" translate="yes" xml:space="preserve">
          <source>Configuration API</source>
          <target state="translated">구성 API</target>
        </trans-unit>
        <trans-unit id="4d02407d4cc8189b34948d45af1b280eeaabe123" translate="yes" xml:space="preserve">
          <source>Configuration Values</source>
          <target state="translated">구성 값</target>
        </trans-unit>
        <trans-unit id="c6f0e9dfe575fb25913b33c98a27840e0a99be95" translate="yes" xml:space="preserve">
          <source>Configuration set using &lt;code&gt;Cypress.config&lt;/code&gt;&lt;em&gt;is only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.config&lt;/code&gt; 를 사용하여 설정 한 구성 &lt;em&gt;은 현재 사양 파일에만 적용됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e23ad97b87cb183fd3eb0aaf079a00e736a0850a" translate="yes" xml:space="preserve">
          <source>Configuration to automatically force Cypress to wait for outstanding XHR&amp;rsquo;s (like it does for other Page Events). This would mean when testing more traditional apps without XHR stubbing, commands would automatically wait until all outstanding XHR&amp;rsquo;s complete. The internal retry loop needs to be rewritten to make this possible, but the XHR architecture is now there.</source>
          <target state="translated">Cypress가 자동으로 다른 XHR (다른 페이지 이벤트의 경우)을 기다리도록 구성합니다. 이는 XHR 스터 빙없이 더 전통적인 앱을 테스트 할 때 모든 미해결 XHR이 완료 될 때까지 명령이 자동으로 대기 함을 의미합니다. 이를 가능하게하려면 내부 재시도 루프를 다시 작성해야하지만 이제 XHR 아키텍처가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b97dd6bf2dd45e5ab65e5a1323a4643295ad398" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt; file to prevent repeating yourself in every single &lt;code&gt;cy.visit()&lt;/code&gt; command. Read more about &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">구성 &lt;code&gt;baseUrl&lt;/code&gt; 에서 &lt;code&gt;cypress.json&lt;/code&gt; 의 파일을 하나 하나에 자신을 반복 방지하기 위해 &lt;code&gt;cy.visit()&lt;/code&gt; 명령. &lt;a href=&quot;../../guides/references/configuration&quot;&gt;구성&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="2e33a4a40c60e8a877a01db332d2209d2b7123fa" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default) to prevent repeating yourself in every &lt;code&gt;cy.visit()&lt;/code&gt; command.</source>
          <target state="translated">구성 &lt;code&gt;baseUrl&lt;/code&gt; 귀하의 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성&lt;/a&gt; 파일 ( &lt;code&gt;cypress.json&lt;/code&gt; 기본적으로는) 모든 자신을 반복 방지하기 위해 &lt;code&gt;cy.visit()&lt;/code&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="834b811351966050574089ced73dfbdb7ca6848a" translate="yes" xml:space="preserve">
          <source>Configure tsconfig.json</source>
          <target state="translated">tsconfig.json 구성</target>
        </trans-unit>
        <trans-unit id="26c9282bf4ad7fa68a504fae8e6c23d1c4572381" translate="yes" xml:space="preserve">
          <source>Confirm that you want to delete the project by clicking &lt;strong&gt;Yes, Remove Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;예, 프로젝트 제거&lt;/strong&gt; 를 클릭하여 프로젝트를 삭제할지 확인 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06ba8be139efac680979823005c3a8e473971b01" translate="yes" xml:space="preserve">
          <source>Conflicting values will override values from &lt;code&gt;cypress.json&lt;/code&gt; and &lt;code&gt;cypress.env.json&lt;/code&gt; files.</source>
          <target state="translated">충돌하는 값은 &lt;code&gt;cypress.json&lt;/code&gt; 및 &lt;code&gt;cypress.env.json&lt;/code&gt; 파일의 값보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="01cd1b44c6d6673718a3a40a6be368681492da19" translate="yes" xml:space="preserve">
          <source>Connect with our community in &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt; 의 커뮤니티와 연결</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2dd9f4cc14ec1bf52b6278d055d1483dda369c44" translate="yes" xml:space="preserve">
          <source>Console output</source>
          <target state="translated">콘솔 출력</target>
        </trans-unit>
        <trans-unit id="7bf69cab90ca13888b120e7454484a178e4ef6c8" translate="yes" xml:space="preserve">
          <source>Console output from your apps is suppressed while running in the terminal.</source>
          <target state="translated">터미널에서 실행하는 동안 앱의 콘솔 출력이 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="3cfbf8dc8f844f4d8d531e58d73ec57ab19a5b69" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;.location()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.location()&lt;/code&gt; 의 콘솔 출력</target>
        </trans-unit>
        <trans-unit id="716bba1f6fa2b1817371939a28928af71947092c" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window.location&lt;/code&gt; 의 콘솔 출력</target>
        </trans-unit>
        <trans-unit id="33e15d008d511f3101566a2e25203ef2a3f605a0" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Contains</target>
        </trans-unit>
        <trans-unit id="4f9be057f0ea5d2ba72fd2c810e8d7b9aa98b469" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">Content</target>
        </trans-unit>
        <trans-unit id="2570a9f1f6766df091ea6a76ebb3b3d7bd48fed4" translate="yes" xml:space="preserve">
          <source>Continue to perform all default actions</source>
          <target state="translated">모든 기본 작업을 계속 수행</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="0a95911fef9feab1279d57ccc20e090218e5b782" translate="yes" xml:space="preserve">
          <source>Continuous integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">Contribute</target>
        </trans-unit>
        <trans-unit id="99085ed780334aa12947f103a83792aa2d5509b8" translate="yes" xml:space="preserve">
          <source>Control the size and orientation of the screen for your application.</source>
          <target state="translated">응용 프로그램의 화면 크기와 방향을 제어하십시오.</target>
        </trans-unit>
        <trans-unit id="baec3ef4d924a374d8f163c63b1280f6568b9bd2" translate="yes" xml:space="preserve">
          <source>Control whether you accept or reject confirmations</source>
          <target state="translated">확인 수락 또는 거부 여부 제어</target>
        </trans-unit>
        <trans-unit id="8cb89ca43e98cfc3f9884ebd828302a5a51d3e80" translate="yes" xml:space="preserve">
          <source>Control which Chrome components are loaded</source>
          <target state="translated">로드 할 Chrome 구성 요소 제어</target>
        </trans-unit>
        <trans-unit id="3b507368511566de769f5af5fbb3d0ae507418d9" translate="yes" xml:space="preserve">
          <source>Controls permissions for desktop notifications, geolocation, and other browser APIs</source>
          <target state="translated">데스크톱 알림, 위치 정보 및 기타 브라우저 API에 대한 권한을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="54cc9832575c26ca63291217376ff51a496592d4" translate="yes" xml:space="preserve">
          <source>Converts WDIO automation tests to Cypress.</source>
          <target state="translated">WDIO 자동화 테스트를 Cypress로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="541e284f89a7d619632c3af914a97107eb31f72b" translate="yes" xml:space="preserve">
          <source>Cookie&amp;rsquo;s SameSite value. If set, should be one of &lt;code&gt;lax&lt;/code&gt;, &lt;code&gt;strict&lt;/code&gt;, or &lt;code&gt;no_restriction&lt;/code&gt;. Pass &lt;code&gt;undefined&lt;/code&gt; to use the browser&amp;rsquo;s default. Note: &lt;code&gt;no_restriction&lt;/code&gt; can only be used if the &lt;code&gt;secure&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">쿠키의 SameSite 값. 설정된 경우 &lt;code&gt;lax&lt;/code&gt; , &lt;code&gt;strict&lt;/code&gt; 또는 &lt;code&gt;no_restriction&lt;/code&gt; 중 하나 여야합니다 . 패스는 &lt;code&gt;undefined&lt;/code&gt; 브라우저의 기본값을 사용 할 수 있습니다. 참고 : &lt;code&gt;no_restriction&lt;/code&gt; 은 &lt;code&gt;secure&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우에만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="acf3516687f68b9d3be80e8368cd13855a295dec" translate="yes" xml:space="preserve">
          <source>Cookies are automatically cleared between page refreshes, during app startup, and leaving the test page.</source>
          <target state="translated">앱을 시작하는 동안 페이지를 새로 고치거나 테스트 페이지를 떠나는 동안 쿠키가 자동으로 지워집니다.</target>
        </trans-unit>
        <trans-unit id="e05873e1707d6581e6eee7e2a15fb0c0ecd9e055" translate="yes" xml:space="preserve">
          <source>Cookies are automatically sent and received</source>
          <target state="translated">쿠키가 자동으로 송수신됩니다</target>
        </trans-unit>
        <trans-unit id="8ebebca0195929f0e6604560db2d6f829dc20c86" translate="yes" xml:space="preserve">
          <source>Coordinates</source>
          <target state="translated">Coordinates</target>
        </trans-unit>
        <trans-unit id="e7b9657118fef7a1f45306c17d6e677df270e297" translate="yes" xml:space="preserve">
          <source>Coordinates and hitboxes are now logged and displayed on &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">좌표 및 히트 박스가 이제 &lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 에 기록되고 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6356d7205b142f7c7c7d20113c08b32b386e304f" translate="yes" xml:space="preserve">
          <source>Copy / Paste now works when logging in on OSX. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;#145&lt;/a&gt;.</source>
          <target state="translated">OSX에 로그인 할 때 복사 / 붙여 넣기가 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;# 145&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="translated">핵심 개념</target>
        </trans-unit>
        <trans-unit id="9276d073588593df3449f1f21b0c39e9033d4bf1" translate="yes" xml:space="preserve">
          <source>Corrected a typo in the CLI for a warning message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;#2038&lt;/a&gt;.</source>
          <target state="translated">CLI에서 경고 메시지의 오타가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;# 2038&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8556152848968e44556c99c3fff98f2d6db69ebe" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;4xx&lt;/code&gt; and other bad http response codes when using Cypress as the file server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;#219&lt;/a&gt;.</source>
          <target state="translated">Cypress를 파일 서버로 사용할 때 &lt;code&gt;4xx&lt;/code&gt; 및 기타 잘못된 http 응답 코드를 올바르게 삽입 하십시오. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;# 219&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9adb71f1d237db0587278b4a1e23572d8e501b7" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;5xx&lt;/code&gt; http response codes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;#217&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;5xx&lt;/code&gt; http 응답 코드를 올바르게 삽입 하십시오. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;# 217&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="abba92ebc6c6850ef892f769dc170ea8ef65f589" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;gzip&lt;/code&gt; errors from 3rd party servers doing unintended things. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;#220&lt;/a&gt;.</source>
          <target state="translated">의도하지 않은 작업을 수행하는 타사 서버의 &lt;code&gt;gzip&lt;/code&gt; 오류를 올바르게 주입하십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;# 220&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbc139f59ec256066c40a13acfb940f040262cc9" translate="yes" xml:space="preserve">
          <source>Correctly processes defaultButton click event, form submit event.</source>
          <target state="translated">defaultButton 클릭 이벤트, 양식 제출 이벤트를 올바르게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="77ba49c73b30efdf7845be17dba3544bfac24889" translate="yes" xml:space="preserve">
          <source>Correctly take into account &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag on XHR&amp;rsquo;s. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;#89&lt;/a&gt;.</source>
          <target state="translated">XHR의 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 태그를 올바르게 고려하십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;# 89&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ae3f335e548522a72b31d6709bd85642b226144" translate="yes" xml:space="preserve">
          <source>Coupled to the &lt;code&gt;name&lt;/code&gt; attribute which has HTML semantics.</source>
          <target state="translated">HTML 의미가 있는 &lt;code&gt;name&lt;/code&gt; 속성에 연결되었습니다.</target>
        </trans-unit>
        <trans-unit id="8b25d68c0b07d3dbf4f390e283585ad91fdda1c1" translate="yes" xml:space="preserve">
          <source>Covering</source>
          <target state="translated">Covering</target>
        </trans-unit>
        <trans-unit id="31ff08bf16c35d590ae328896c11be9dbe0e6a29" translate="yes" xml:space="preserve">
          <source>Create Org</source>
          <target state="translated">조직 만들기</target>
        </trans-unit>
        <trans-unit id="0a76330fa7099993f77b270f5263237612c24f8e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;sample_spec.js&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;sample_spec.js&lt;/code&gt; 파일을 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="54aaec0d8958e9a15d7aa90864024a05abda7504" translate="yes" xml:space="preserve">
          <source>Create a `cypress.env.json`</source>
          <target state="translated">`cypress.env.json`을 만듭니다</target>
        </trans-unit>
        <trans-unit id="530333cdf6ed80d16fb57efe75c7a81e75f361ef" translate="yes" xml:space="preserve">
          <source>Create a clean, pristine testing environment.</source>
          <target state="translated">깨끗하고 깨끗한 테스트 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b356d5c8892603555f802e6084774cb296edb2fa" translate="yes" xml:space="preserve">
          <source>Create a clock and move time to trigger a &lt;code&gt;setTimeout&lt;/code&gt;</source>
          <target state="translated">시계를 만들고 시간을 이동하여 &lt;code&gt;setTimeout&lt;/code&gt; 을 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="0215eed7a89da9a6d3896c5402ec4060b10638f6" translate="yes" xml:space="preserve">
          <source>Create a clock and use it to trigger a &lt;code&gt;setInterval&lt;/code&gt;</source>
          <target state="translated">시계를 만들고 &lt;code&gt;setInterval&lt;/code&gt; 을 트리거하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c9f4d8a4cc6b4d876ee791006ddbfe6b56b72df3" translate="yes" xml:space="preserve">
          <source>Create a stub and manually replace a function</source>
          <target state="translated">스텁을 작성하고 함수를 수동으로 교체</target>
        </trans-unit>
        <trans-unit id="1a86d07315c59a10355c667fbd3cdd3d813aa476" translate="yes" xml:space="preserve">
          <source>Create a user</source>
          <target state="translated">사용자 생성</target>
        </trans-unit>
        <trans-unit id="ff38358f3785f260a795fb12bc96902be50a5c6a" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;img&lt;/code&gt; element and set its &lt;code&gt;src&lt;/code&gt; to the &lt;code&gt;dataUrl&lt;/code&gt;</source>
          <target state="translated">만들기 &lt;code&gt;img&lt;/code&gt; 요소와 그 설정 &lt;code&gt;src&lt;/code&gt; 받는 &lt;code&gt;dataUrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4e02bbaa4e1006fb86887e071cb4da5a9670c70" translate="yes" xml:space="preserve">
          <source>Create an assertion. Assertions are automatically retried until they pass or time out.</source>
          <target state="translated">어설 션을 만듭니다. 어설 션은 시간이 지날 때까지 자동으로 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="deb609dfe5aa29a17cf69b2b489923bcb4c0e2bd" translate="yes" xml:space="preserve">
          <source>Create custom commands using plain-old functions. Similar to `cy.then` but with retriability.</source>
          <target state="translated">일반 기능을 사용하여 사용자 정의 명령을 작성하십시오. `cy.then`과 유사하지만 재시도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="db895a3da3bf5b0a271a63f2aa947d66bb9a036f" translate="yes" xml:space="preserve">
          <source>Create new record key</source>
          <target state="translated">새 레코드 키 만들기</target>
        </trans-unit>
        <trans-unit id="59daec0fad23e8f1c6fdaeceb786f17de953945e" translate="yes" xml:space="preserve">
          <source>Create projects</source>
          <target state="translated">프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="c419fdebbc74b72da21303a5c289d54c9963d7f0" translate="yes" xml:space="preserve">
          <source>Create, edit and delete organizations</source>
          <target state="translated">조직 생성, 편집 및 삭제</target>
        </trans-unit>
        <trans-unit id="4df1dedacc4030daf8f7117293a949c884449280" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Conditional Testing&amp;rdquo; core concept</source>
          <target state="translated">&quot;조건부 테스트&quot;핵심 개념 생성</target>
        </trans-unit>
        <trans-unit id="30f699233a45a35700337adb14a42c21811feea2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Key Differences&amp;rdquo; core concept</source>
          <target state="translated">&amp;ldquo;핵심 차이&amp;rdquo;핵심 개념을 만들었습니다</target>
        </trans-unit>
        <trans-unit id="cb3ea91e52bf3a936bd6f5f890714b0db2b77614" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;List of Plugins&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;플러그인 목록&amp;rdquo;생성</target>
        </trans-unit>
        <trans-unit id="ea247c70fd48be47fbe66d1fb7557f6ff79378eb" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Plugins&amp;rdquo; guide</source>
          <target state="translated">&quot;플러그인&quot;안내서 작성</target>
        </trans-unit>
        <trans-unit id="26bd6570b4b29017a17447f2b75ad172f67bba2e" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Preprocessors API&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;전 처리기 API&amp;rdquo;생성</target>
        </trans-unit>
        <trans-unit id="1d535ded95947d37850ceb6e1929c6d9722ece6c" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Testing React TodoMVC&amp;rdquo; tutorials</source>
          <target state="translated">&quot;React TodoMVC 테스트&quot;학습서 작성</target>
        </trans-unit>
        <trans-unit id="0968a2236d7936e5ebc1a74cbb3d145abafac7a2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Variables and Aliases&amp;rdquo; core concept</source>
          <target state="translated">&quot;변수 및 별칭&quot;핵심 개념을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="7c7190e9e6b622065f70340f7b630b00e4474ea1" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Writing a Plugin&amp;rdquo; API</source>
          <target state="translated">&quot;플러그인 작성&quot;API 생성</target>
        </trans-unit>
        <trans-unit id="b14ba5e141fd4b8fbd4e1094e2425e3e9125f7e9" translate="yes" xml:space="preserve">
          <source>Created new &lt;code&gt;Cypress.Log&lt;/code&gt; interface for greater control over the display of commands.</source>
          <target state="translated">명령 표시를보다 &lt;code&gt;Cypress.Log&lt;/code&gt; 제어 할 수 있도록 새로운 Cypress.Log 인터페이스를 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="fffe2121a1559fa60200bf1454c0d748be25d246" translate="yes" xml:space="preserve">
          <source>Created new debugging command: &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; which will pause executing commands and allow you to resume or step into the next command one at a time.</source>
          <target state="translated">새로운 디버깅 명령 : &lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt; 되어 명령 실행을 일시 중지하고 한 번에 하나씩 다음 명령을 다시 시작하거나 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ce48feaef42bf2c8b9b194bc8d2c155ebd58032" translate="yes" xml:space="preserve">
          <source>Creating &amp;ldquo;tiny&amp;rdquo; tests with a single assertion</source>
          <target state="translated">단일 어설 션으로 &quot;작은&quot;테스트 작성</target>
        </trans-unit>
        <trans-unit id="49b1c035b7d0b6b1c7e35c111e5686682b53438c" translate="yes" xml:space="preserve">
          <source>Crop a screenshot to a specific position and size</source>
          <target state="translated">특정 위치와 크기로 스크린 샷 자르기</target>
        </trans-unit>
        <trans-unit id="ce6299777967655de4ac662cea46d60086c8b277" translate="yes" xml:space="preserve">
          <source>Cross Browser Testing</source>
          <target state="translated">크로스 브라우저 테스트</target>
        </trans-unit>
        <trans-unit id="58cd1d73cdcaffc9483c858219c6fcb608902e6a" translate="yes" xml:space="preserve">
          <source>Cross-Origin requests are now proxied by Cypress. In other words their URL&amp;rsquo;s are transparently rewritten which bypasses CORS problems. This is a quick fix which should satisfy most of the problems users were having with CORS requests. However there is a much bigger change coming in &lt;code&gt;0.14.0&lt;/code&gt; where the entire proxy layer will be rewritten to accommodate CORS, &lt;code&gt;window.fetch&lt;/code&gt; and &lt;code&gt;domain cookies&lt;/code&gt; flawlessly. As it stands Cypress is prone to errors in complex setups.</source>
          <target state="translated">Cross-Origin 요청은 이제 Cypress에 의해 프록시됩니다. 즉, URL이 투명하게 다시 작성되어 CORS 문제를 우회합니다. 이것은 사용자가 CORS 요청으로 겪고있는 대부분의 문제를 만족시키는 빠른 수정입니다. 그러나 &lt;code&gt;0.14.0&lt;/code&gt; 에서는 CORS, &lt;code&gt;window.fetch&lt;/code&gt; 및 &lt;code&gt;domain cookies&lt;/code&gt; 완벽하게 수용하기 위해 전체 프록시 계층을 다시 작성 하는 훨씬 더 큰 변화 가 있습니다 . Cypress는 복잡한 설정에서 오류가 발생하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="fd97fba3d4697df4c06c84371d03fa2bb079269f" translate="yes" xml:space="preserve">
          <source>Cross-origin iframes</source>
          <target state="translated">교차 출처 iframe</target>
        </trans-unit>
        <trans-unit id="beaf53f88b4a7ad6cb57122f7f6bd4b9487586b3" translate="yes" xml:space="preserve">
          <source>Cross-platform, cross-browser screenshot testing for modern user interfaces.</source>
          <target state="translated">최신 사용자 인터페이스를위한 크로스 플랫폼, 크로스 브라우저 스크린 샷 테스트.</target>
        </trans-unit>
        <trans-unit id="2270b4873eb9e505087d1cdb7abf8226ebfab5a4" translate="yes" xml:space="preserve">
          <source>Cucumber</source>
          <target state="translated">Cucumber</target>
        </trans-unit>
        <trans-unit id="45a6d5bcf4e2724053e60f8d27b3f1f435224fae" translate="yes" xml:space="preserve">
          <source>Currently running tests now displays a spinner to indicate they are currently running.</source>
          <target state="translated">현재 실행중인 테스트는 이제 현재 실행 중임을 나타내는 스피너를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="656c8a1b6a35438479cc20adce73c5c892061f49" translate="yes" xml:space="preserve">
          <source>Currently, only browsers in the Chrome family are supported.</source>
          <target state="translated">현재 Chrome 제품군의 브라우저 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d65215411d33fb1bb5d69ddda0d6b068f34bceeb" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;console&lt;/code&gt; command</source>
          <target state="translated">사용자 정의 &lt;code&gt;console&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="2416316065a37f271c32ddc7e7d94e55288b1523" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;login&lt;/code&gt; command</source>
          <target state="translated">사용자 정의 &lt;code&gt;login&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="translated">사용자 명령</target>
        </trans-unit>
        <trans-unit id="fb2ecfd0fee66ed3937499ef5f09ad6fcbe3f473" translate="yes" xml:space="preserve">
          <source>Custom Dual Command</source>
          <target state="translated">커스텀 듀얼 커맨드</target>
        </trans-unit>
        <trans-unit id="aa033ba591179178a4d4be85f52573a67add07ca" translate="yes" xml:space="preserve">
          <source>Custom Environment Variables</source>
          <target state="translated">커스텀 환경 변수</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="translated">맞춤형 기자</target>
        </trans-unit>
        <trans-unit id="91441fc1bd3bf4b1866bc35b9ceca54fe1864e57" translate="yes" xml:space="preserve">
          <source>Custom commands are a great way to abstract away setup (specific to your app). When doing those kinds of tasks, skip as much of the UI as possible. Use &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to login, set cookies or localStorage directly, stub and mock your applications functions, and / or trigger events programmatically.</source>
          <target state="translated">사용자 지정 명령은 설정을 추상화하는 좋은 방법입니다 (앱에 따라 다름). 이러한 종류의 작업을 수행 할 때는 가능한 한 많은 UI를 건너 뜁니다. &lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 로그인하고 쿠키 또는 localStorage를 직접 설정하고 응용 프로그램 기능을 스텁 및 조롱하거나 프로그래밍 방식으로 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="9ff9cc201d8a668d6026bc86cd694c4c3f7a170d" translate="yes" xml:space="preserve">
          <source>Custom commands for Firebase including Authentication and Database communication (both Real Time Database and Firestore).</source>
          <target state="translated">인증 및 데이터베이스 통신 (실시간 데이터베이스 및 Firestore)을 포함한 Firebase 용 맞춤 명령</target>
        </trans-unit>
        <trans-unit id="95cb8c0082b5c32081894d74e31262f8bc273dc6" translate="yes" xml:space="preserve">
          <source>Custom commands for interacting with iframes</source>
          <target state="translated">iframe과 상호 작용하기위한 사용자 지정 명령</target>
        </trans-unit>
        <trans-unit id="23062675fd78748645d6c857dcbadcb80fe965d0" translate="yes" xml:space="preserve">
          <source>Custom commands for localStorage. Allows preserving localStorage between tests</source>
          <target state="translated">localStorage에 대한 사용자 지정 명령. 테스트 사이에 localStorage를 보존 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16cb3173d8cac1013803372ff53995a522a0105b" translate="yes" xml:space="preserve">
          <source>Custom commands for shadow DOM support</source>
          <target state="translated">새도우 DOM 지원을위한 사용자 정의 명령</target>
        </trans-unit>
        <trans-unit id="2ad6f8e3320f0e1c4b72b21d7099db3bc9f97635" translate="yes" xml:space="preserve">
          <source>Custom commands no longer error out if they are the very first &lt;code&gt;cy&lt;/code&gt; command.</source>
          <target state="translated">사용자 정의 명령이 첫 번째 &lt;code&gt;cy&lt;/code&gt; 명령 인 경우 더 이상 오류가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fa0414e6108472581ac1bc9edfe6d3c8fdbe6ee2" translate="yes" xml:space="preserve">
          <source>Custom commands to mock your GraphQL API at the network level. Using service-workers for complete isolation of the mock server.</source>
          <target state="translated">네트워크 수준에서 GraphQL API를 모의하기위한 사용자 지정 명령. 모의 서버를 완전히 격리하기 위해 서비스 작업자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="67ae38e49b14cdb33c666c82189ec654f4a10342" translate="yes" xml:space="preserve">
          <source>Custom commands work well when you&amp;rsquo;re needing to describe behavior that&amp;rsquo;s desirable across &lt;strong&gt;all of your tests&lt;/strong&gt;. Examples would be a &lt;code&gt;cy.setup()&lt;/code&gt; or &lt;code&gt;cy.login()&lt;/code&gt; or extending your application&amp;rsquo;s behavior like &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt;. These are specific to your application and can be used everywhere.</source>
          <target state="translated">사용자 정의 명령은 &lt;strong&gt;모든 테스트&lt;/strong&gt; 에서 바람직한 동작을 설명해야 할 때 잘 작동 &lt;strong&gt;합니다&lt;/strong&gt; . 예를 들어 &lt;code&gt;cy.setup()&lt;/code&gt; 또는 &lt;code&gt;cy.login()&lt;/code&gt; 또는 &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt; 과 같은 응용 프로그램 동작 확장 입니다. 이들은 애플리케이션에 따라 다르며 어디에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8708877030366a729d8be6d8ee1eff4b401e3a1" translate="yes" xml:space="preserve">
          <source>Custom headers and other headers &amp;ldquo;of interest&amp;rdquo; are rewritten for transparent compatibility.</source>
          <target state="translated">투명한 호환성을 위해 사용자 정의 헤더 및 기타 관심있는 헤더가 다시 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="9fb843f0908fc1e0c10cc0fc91dddc3bd9b77b44" translate="yes" xml:space="preserve">
          <source>Custom reporter for Teamcity which makes it possible to display test results in real-time and add them on the Tests tab of the Build Results page</source>
          <target state="translated">테스트 결과를 실시간으로 표시하고 빌드 결과 페이지의 테스트 탭에 추가 할 수있는 Teamcity 용 사용자 정의 리포터</target>
        </trans-unit>
        <trans-unit id="37df32d62fc505273d2829f38d6b5d5d2b3adda3" translate="yes" xml:space="preserve">
          <source>Custom reporter for publishing Cypress results to a TestRail test run.</source>
          <target state="translated">Cypress 결과를 TestRail 테스트 실행에 게시하기위한 사용자 지정 기자.</target>
        </trans-unit>
        <trans-unit id="6ac6e340361eda697462e9bfce972b8be65e2a29" translate="yes" xml:space="preserve">
          <source>Customize available browsers</source>
          <target state="translated">사용 가능한 브라우저 사용자 지정</target>
        </trans-unit>
        <trans-unit id="60273f665dee8f8e4c45bdb2d21bb86f108c4685" translate="yes" xml:space="preserve">
          <source>Customize the &lt;code&gt;babel&lt;/code&gt; settings to add your own plugins.</source>
          <target state="translated">자체 플러그인을 추가 하도록 &lt;code&gt;babel&lt;/code&gt; 설정을 사용자 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f16d98fa8492ee7147a5316bfeb5c7d3644bb3b" translate="yes" xml:space="preserve">
          <source>Cypress</source>
          <target state="translated">Cypress</target>
        </trans-unit>
        <trans-unit id="9d6d4c9f7411879c74391a52006e7dedc051c39a" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;.js&lt;/code&gt; files are no longer minified to make them easier to debug.</source>
          <target state="translated">더 쉽게 디버깅 할 수 있도록 Cypress &lt;code&gt;.js&lt;/code&gt; 파일이 더 이상 축소되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="69bb979a44a573f92682a6ef967aa11acd1b71e0" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;should&lt;/code&gt; callback</source>
          <target state="translated">Cypress &lt;code&gt;should&lt;/code&gt; 콜백 해야합니다</target>
        </trans-unit>
        <trans-unit id="dd834f87d55654636b544d559abbcd82fd34dc6e" translate="yes" xml:space="preserve">
          <source>Cypress API</source>
          <target state="translated">Cypress API</target>
        </trans-unit>
        <trans-unit id="e79886eaef25ee1a767b7bbd89725a0c4a901c04" translate="yes" xml:space="preserve">
          <source>Cypress Angular Schematic</source>
          <target state="translated">사이프러스 각 도식</target>
        </trans-unit>
        <trans-unit id="41077ca081d9da32474c23b44a47df79374161dd" translate="yes" xml:space="preserve">
          <source>Cypress Api</source>
          <target state="translated">사이프러스 API</target>
        </trans-unit>
        <trans-unit id="52eefa9ba6e0ab14078c1c7a45dd3034112ecb45" translate="yes" xml:space="preserve">
          <source>Cypress CLI no longer requires &lt;code&gt;git&lt;/code&gt; to install. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;#124&lt;/a&gt;</source>
          <target state="translated">Cypress CLI는 더 이상 &lt;code&gt;git&lt;/code&gt; 을 설치 하지 않아도 됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;# 124&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efff2180b6dd15d33a080426767cd53dfdf9ddd6" translate="yes" xml:space="preserve">
          <source>Cypress CLI wrapper where you can specify the total number of expected tests</source>
          <target state="translated">예상되는 총 테스트 수를 지정할 수있는 Cypress CLI 래퍼</target>
        </trans-unit>
        <trans-unit id="0aa0bdf7061e27bd73473d6ad095f5b4f6662e3d" translate="yes" xml:space="preserve">
          <source>Cypress Cookies API</source>
          <target state="translated">싸이프레스 쿠키 API</target>
        </trans-unit>
        <trans-unit id="9959819eed1eec586e5deb5e88bbcbd379c21bb5" translate="yes" xml:space="preserve">
          <source>Cypress Daywalker</source>
          <target state="translated">사이프러스 Daywalker</target>
        </trans-unit>
        <trans-unit id="35f838de597a062c7402e87c59292b2faf40dc9d" translate="yes" xml:space="preserve">
          <source>Cypress Errors in &lt;code&gt;hooks&lt;/code&gt; (&lt;code&gt;beforeEach&lt;/code&gt;, etc) will no longer cause Mocha to fire its &lt;code&gt;end&lt;/code&gt; event thus ending the entire run. In CI, this would cause the test suite to end early. Uncaught Mocha errors will however continue this behavior. Cypress does not yet have a &amp;ldquo;skipped&amp;rdquo; visual state for tests which were skipped, so at the moment it may look a little strange and unpredictable.</source>
          <target state="translated">&lt;code&gt;hooks&lt;/code&gt; Cypress 오류 ( &lt;code&gt;beforeEach&lt;/code&gt; 등)로 인해 더 이상 Mocha가 &lt;code&gt;end&lt;/code&gt; 이벤트 를 시작하지 않으므로 전체 실행이 종료됩니다. CI에서는 테스트 스위트가 일찍 종료됩니다. 잡히지 않은 Mocha 오류는이 동작을 계속합니다. Cypress는 아직 건너 뛴 테스트에 대해 &quot;건너 뛴&quot;시각적 상태를 갖지 않으므로 현재 조금 이상하고 예측할 수 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88d186e76461bba8673c60f59e6c077762385c04" translate="yes" xml:space="preserve">
          <source>Cypress Events</source>
          <target state="translated">사이프러스 이벤트</target>
        </trans-unit>
        <trans-unit id="e2ab950a9aafc22fbd239b148d5700dae7d411c7" translate="yes" xml:space="preserve">
          <source>Cypress GitHub app installation process</source>
          <target state="translated">Cypress GitHub 앱 설치 프로세스</target>
        </trans-unit>
        <trans-unit id="14e84b1e662b7143cad804dcdbedeb8d64f0ace8" translate="yes" xml:space="preserve">
          <source>Cypress Image Diff</source>
          <target state="translated">Cypress 이미지 차이</target>
        </trans-unit>
        <trans-unit id="1421f38b06ab7db60339dbf7bc0a26d648b10c8a" translate="yes" xml:space="preserve">
          <source>Cypress Image Snapshot</source>
          <target state="translated">사이프러스 이미지 스냅 샷</target>
        </trans-unit>
        <trans-unit id="a5c29edaa1a6568d26f4aa47714a618f2e21e08b" translate="yes" xml:space="preserve">
          <source>Cypress Is Simple</source>
          <target state="translated">사이프러스는 간단하다</target>
        </trans-unit>
        <trans-unit id="54e181337e4191b37fff3e9b2ef307609878f430" translate="yes" xml:space="preserve">
          <source>Cypress Nuxt</source>
          <target state="translated">Cypress Nuxt</target>
        </trans-unit>
        <trans-unit id="0b83e38e79f67bce5c1ce1c7ec8a6f4ecfea5015" translate="yes" xml:space="preserve">
          <source>Cypress Profile</source>
          <target state="translated">사이프러스 프로필</target>
        </trans-unit>
        <trans-unit id="b684aa809dec527ae9a9e296103b42a9ee59b092" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner can wait for the property &lt;code&gt;window.appReady&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt; before every test</source>
          <target state="translated">Cypress Test Runner는 모든 테스트 전에 &lt;code&gt;window.appReady&lt;/code&gt; 속성 이 &lt;code&gt;true&lt;/code&gt; 가 될 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f32db866bdbcb93c4b687393727d04dc28e1fad4" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner is an Electron application, and its behavior (and the behavior of the bundled-in Electron browser) can be customized using command line switches. The supported switches depend on the Electron version, see &lt;a href=&quot;https://www.electronjs.org/docs/api/command-line-switches&quot;&gt;Electron documentation&lt;/a&gt;.</source>
          <target state="translated">Cypress Test Runner는 Electron 응용 프로그램이며, 명령 줄 스위치를 사용하여 동작 (및 번들로 제공되는 Electron 브라우저의 동작)을 사용자 지정할 수 있습니다. 지원되는 스위치는 Electron 버전에 따라 다릅니다 . &lt;a href=&quot;https://www.electronjs.org/docs/api/command-line-switches&quot;&gt;Electron 문서를&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="d5d22d719324ad24c3524d119c1d8ff6f95d8b8a" translate="yes" xml:space="preserve">
          <source>Cypress Visual Regression</source>
          <target state="translated">사이프러스 시각 회귀</target>
        </trans-unit>
        <trans-unit id="bb4c1f9ea980a868e458efe31556ede34737e003" translate="yes" xml:space="preserve">
          <source>Cypress Watch Preprocessor</source>
          <target state="translated">Cypress Watch 프리 프로세서</target>
        </trans-unit>
        <trans-unit id="9cb0f68616a1ce91b2be26749d697804c1ae303f" translate="yes" xml:space="preserve">
          <source>Cypress additionally handles situations where a page load was not caused (such as hash routing) and will resolve immediately.</source>
          <target state="translated">Cypress는 페이지로드가 발생하지 않은 상황 (예 : 해시 라우팅)을 추가로 처리하여 즉시 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="de149d69317b64471762f15fe066156d0ba4a998" translate="yes" xml:space="preserve">
          <source>Cypress aims not only to make it easier to write tests, but after you build a test harness, it will make it easier to dive into failed tests (hat run in CI). This release paves the way for providing after-run results and allowing you to dive into those failures.</source>
          <target state="translated">Cypress는 테스트를보다 쉽게 ​​작성하는 것을 목표로 할뿐만 아니라 테스트 하네스를 구축 한 후에는 실패한 테스트 (CI에서 실행)로 쉽게 뛰어들 수 있습니다. 이 릴리스에서는 실행 후 결과를 제공하고 이러한 실패에 대비할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27de11e0968111b28bb7427659b60e0f8f29cdce" translate="yes" xml:space="preserve">
          <source>Cypress allows you to control how a selector is determined.</source>
          <target state="translated">Cypress를 사용하면 선택기를 결정하는 방법을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec8c569f6f0f2b8d391c646f589ae52e51e38cd4" translate="yes" xml:space="preserve">
          <source>Cypress already sets some the Electron command line switches internally. See file &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/environment.js&quot;&gt;packages/server/lib/environment.js&lt;/a&gt;. There is no way to see all currently set switches after Electron&amp;rsquo;s launch.</source>
          <target state="translated">Cypress는 이미 일부 Electron 명령 줄 스위치를 내부적으로 설정합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/environment.js&quot;&gt;packages / server / lib / environment.js&lt;/a&gt; 파일을 참조하십시오 . Electron 출시 이후 현재 설정된 모든 스위치를 볼 수있는 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="3800d9b000a1a2560d80b3707760dcf877eaed30" translate="yes" xml:space="preserve">
          <source>Cypress also bundles the following tools on the &lt;code&gt;Cypress&lt;/code&gt; object. These can be used anywhere inside of your tests.</source>
          <target state="translated">Cypress는 또한 &lt;code&gt;Cypress&lt;/code&gt; 개체 에 다음 도구를 번들로 제공 합니다. 테스트 내부 어디에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5c6824f5710b13d347fc599280c94c480c26953" translate="yes" xml:space="preserve">
          <source>Cypress also exposes a shortcut for debugging commands, &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;. Let&amp;rsquo;s rewrite the test above using this helper method:</source>
          <target state="translated">Cypress는 디버깅 명령 &lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 대한 바로 가기도 제공합니다 . 이 도우미 메서드를 사용하여 위의 테스트를 다시 작성해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="7131ffb13e86e7e1beb68ebb5dca5c8e951fa339" translate="yes" xml:space="preserve">
          <source>Cypress also logs whether the XHR was stubbed or not to the console when you click on the command in the Command Log. It will indicate whether a request was stubbed, which url it matched or that it did not match any routes.</source>
          <target state="translated">Cypress는 명령 로그에서 명령을 클릭 할 때 XHR이 스텁되었는지 여부도 콘솔에 기록합니다. 요청이 스텁되었는지, 어떤 URL이 일치하는지 또는 어떤 경로와도 일치하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c3039ff3ebae68304c6756b1cb2fcf0b0aec30cd" translate="yes" xml:space="preserve">
          <source>Cypress also operates at the network layer by reading and altering web traffic on the fly. This enables Cypress to not only modify everything coming in and out of the browser, but also to change code that may interfere with its ability to automate the browser.</source>
          <target state="translated">Cypress는 웹 트래픽을 즉시 읽고 변경하여 네트워크 계층에서 작동합니다. 이를 통해 Cypress는 브라우저로 들어오고 나가는 모든 것을 수정할 수있을뿐만 아니라 브라우저 자동화 기능을 방해 할 수있는 코드를 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="205db03b575e9f29caf339ccf9dad818e09a328c" translate="yes" xml:space="preserve">
          <source>Cypress also provides hooks (borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;).</source>
          <target state="translated">Cypress는 후크를 제공합니다 ( &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; 에서 빌림 ).</target>
        </trans-unit>
        <trans-unit id="cfdf94fdf7f006cca4ddbcad3ef0f56f8dbf81c1" translate="yes" xml:space="preserve">
          <source>Cypress also records videos when running tests.</source>
          <target state="translated">Cypress는 테스트를 실행할 때 비디오를 녹화합니다.</target>
        </trans-unit>
        <trans-unit id="8683b31eafef2362a9bd609d16533413a684d140" translate="yes" xml:space="preserve">
          <source>Cypress also ships other &lt;a href=&quot;../../plugins/index&quot;&gt;file-watching preprocessors&lt;/a&gt;; you&amp;rsquo;ll have to configure these explicitly if you want to use them.</source>
          <target state="translated">Cypress는 다른 &lt;a href=&quot;../../plugins/index&quot;&gt;파일 감시 프리 프로세서&lt;/a&gt; 도 제공 합니다 . 사용하려면 명시 적으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="63a1f2f000f0dedbe564c6836a62c5ac80c45bc2" translate="yes" xml:space="preserve">
          <source>Cypress also supports &lt;code&gt;ES2015&lt;/code&gt; out of the box. You can use either &lt;code&gt;ES2015 modules&lt;/code&gt; or &lt;code&gt;CommonJS modules&lt;/code&gt;. This means you can &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; both &lt;strong&gt;npm packages&lt;/strong&gt; and &lt;strong&gt;local relative modules&lt;/strong&gt;.</source>
          <target state="translated">Cypress는 기본적으로 &lt;code&gt;ES2015&lt;/code&gt; 를 지원합니다 . &lt;code&gt;ES2015 modules&lt;/code&gt; 또는 &lt;code&gt;CommonJS modules&lt;/code&gt; 사용할 수 있습니다 . 즉, &lt;strong&gt;npm 패키지&lt;/strong&gt; 와 &lt;strong&gt;로컬 상대 모듈을&lt;/strong&gt; 모두 &lt;code&gt;import&lt;/code&gt; 오거나 &lt;code&gt;require&lt;/code&gt; 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8f3aa96584d41b8d64e9de6ad649d3d8ed5b72" translate="yes" xml:space="preserve">
          <source>Cypress attempts to &lt;a href=&quot;launching-browsers&quot;&gt;automatically find installed Chrome versions for you&lt;/a&gt;. However, probing for browsers across different environments can be error-prone. If Cypress cannot find a browser but you know you have it installed, there are ways to ensure that Cypress can &amp;ldquo;see&amp;rdquo; it.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;launching-browsers&quot;&gt;설치된 Chrome 버전&lt;/a&gt; 을 자동으로 찾으려고 시도 합니다 . 그러나 서로 다른 환경에서 브라우저를 탐색하면 오류가 발생할 수 있습니다. Cypress가 브라우저를 찾을 수 없지만 브라우저를 설치했다는 것을 알고 있다면 Cypress가 브라우저를&amp;ldquo;볼&amp;rdquo;수있는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f462b9b54db2f04608eaf5243099335895e36206" translate="yes" xml:space="preserve">
          <source>Cypress authentication flows using social network providers</source>
          <target state="translated">소셜 네트워크 제공 업체를 사용한 Cypress 인증 흐름</target>
        </trans-unit>
        <trans-unit id="c60704aea584b8ff4de70f2d2fa6f676195e4834" translate="yes" xml:space="preserve">
          <source>Cypress automates the browser with its own unique architecture - different from any other testing tool. While this unlocks the power to do things you will not find anywhere else, there are specific trade-offs that are made. There is no free lunch!</source>
          <target state="translated">Cypress는 다른 테스트 도구와는 다른 고유 한 아키텍처로 브라우저를 자동화합니다. 이것은 당신이 다른 곳에서는 찾을 수없는 일을 할 수있는 힘을 열어 주지만, 특정한 절충안이 있습니다. 무료 점심은 없습니다!</target>
        </trans-unit>
        <trans-unit id="7faa7030aaa8dc43242e8b494135ff9c20a49f86" translate="yes" xml:space="preserve">
          <source>Cypress automatically accepts alerts but you can still assert on the text content.</source>
          <target state="translated">Cypress는 자동으로 경고를 수락하지만 텍스트 내용에 대해서는 여전히 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34020ac87c66d74769afe6f62ac732712505ff9e" translate="yes" xml:space="preserve">
          <source>Cypress automatically bundles and wraps these libraries:</source>
          <target state="translated">Cypress는 다음 라이브러리를 자동으로 묶고 랩핑합니다.</target>
        </trans-unit>
        <trans-unit id="4b9c8f425768b235449d1b7611cdef9610ff6beb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear a specific cookie inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에&lt;/em&gt; 상태를 테스트간에 공유하지 못하도록 모든 쿠키 &lt;em&gt;를&lt;/em&gt; 자동으로 지 웁니다 . 단일 테스트 내에서 특정 쿠키를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="8596d3363e8b48e4dde1dd500aa65bc2b5111190" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear all cookies inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에&lt;/em&gt; 상태를 테스트간에 공유하지 못하도록 모든 쿠키 &lt;em&gt;를&lt;/em&gt; 자동으로 지 웁니다 . 단일 테스트 내의 모든 쿠키를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="952d12ab951895425a0272c9c486aab6d6f869cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;strong&gt;before&lt;/strong&gt; each test to prevent state from building up.</source>
          <target state="translated">Cypress는 각 테스트 &lt;strong&gt;전에&lt;/strong&gt; 모든 쿠키 &lt;strong&gt;를&lt;/strong&gt; 자동으로 삭제 하여 상태가 쌓이지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="288419f1b4e6447098e10f904e22da5ba405beb9" translate="yes" xml:space="preserve">
          <source>Cypress automatically collects the request &lt;code&gt;headers&lt;/code&gt; and the request &lt;code&gt;body&lt;/code&gt; and will make this available to you.</source>
          <target state="translated">Cypress는 요청 &lt;code&gt;headers&lt;/code&gt; 와 요청 &lt;code&gt;body&lt;/code&gt; 자동으로 수집하여 사용자에게 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a13213c6c4378cce77d1695a5a59a88c4f1b7c43" translate="yes" xml:space="preserve">
          <source>Cypress automatically continues to persist the server and routing configuration even after a test ends. This means you can continue to use your application and still benefit from stubbing or other server configuration.</source>
          <target state="translated">Cypress는 테스트가 끝난 후에도 서버와 라우팅 구성을 자동으로 계속 유지합니다. 즉, 응용 프로그램을 계속 사용할 수 있으며 스터 빙 또는 다른 서버 구성의 이점을 여전히 누릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="448e8a43ed6a0cdd95161a4d71ed4bf076e4e8eb" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects available browsers on your OS. You can switch the browser in the Test Runner by using the drop down in the top right corner:</source>
          <target state="translated">Cypress는 OS에서 사용 가능한 브라우저를 자동으로 감지합니다. 오른쪽 상단의 드롭 다운을 사용하여 테스트 러너에서 브라우저를 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="195050812f55b35b744ecf4452211c1aab1e9622" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects things like a &lt;code&gt;page transition event&lt;/code&gt; and will automatically &lt;strong&gt;halt&lt;/strong&gt; running commands until the next page has &lt;strong&gt;finished&lt;/strong&gt; loading.</source>
          <target state="translated">Cypress는 자동으로 &lt;code&gt;page transition event&lt;/code&gt; 감지 하고 다음 페이지 로드 가 &lt;strong&gt;완료&lt;/strong&gt; 될 때까지 실행중인 명령 을 자동으로 &lt;strong&gt;중지&lt;/strong&gt; 합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d048d73b85c147a10d9165e637e967d8ea11293" translate="yes" xml:space="preserve">
          <source>Cypress automatically determines the encoding for the following file types:</source>
          <target state="translated">Cypress는 다음 파일 형식의 인코딩을 자동으로 결정합니다.</target>
        </trans-unit>
        <trans-unit id="f91e3ded351522df10339585b090b057e887db9d" translate="yes" xml:space="preserve">
          <source>Cypress automatically disables certain functionality in the Cypress launched browser that tend to get in the way of automated testing.</source>
          <target state="translated">Cypress는 자동 테스트를 방해하는 Cypress 브라우저에서 특정 기능을 자동으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7c5ab06a36d25b1d990a6a9fcaa33ee49c405ccf" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.$&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.$&lt;/code&gt; 로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="3e4e794d0c17e362d2ad6d81b4671af0ca8eaece" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.moment&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 자동으로 포함 &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; 로하고 노출하는 그것을 &lt;code&gt;Cypress.moment&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="be2e28083826ddb01e8b7f9869ea6f9ddd83c22c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JS&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.sinon&lt;/code&gt;. Because commands &lt;a href=&quot;../commands/spy&quot;&gt;&lt;code&gt;cy.spy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../commands/stub&quot;&gt;&lt;code&gt;cy.stub&lt;/code&gt;&lt;/a&gt; are already wrapping Sinon methods, the most common use for &lt;code&gt;Cypress.sinon&lt;/code&gt; is to provide flexible &lt;a href=&quot;https://sinonjs.org/releases/latest/matchers/&quot;&gt;matchers&lt;/a&gt; when doing assertions.</source>
          <target state="translated">싸이프레스는 자동으로 포함 &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JS&lt;/a&gt; 로하고 노출하는 그것을 &lt;code&gt;Cypress.sinon&lt;/code&gt; 을 . 명령 때문에 &lt;a href=&quot;../commands/spy&quot;&gt; &lt;code&gt;cy.spy&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../commands/stub&quot;&gt; &lt;code&gt;cy.stub&lt;/code&gt; 가&lt;/a&gt; 이미 Sinon 방법을 포장하는, 가장 일반적인 사용 &lt;code&gt;Cypress.sinon&lt;/code&gt; 는 유연하게 제공하는 것입니다 &lt;a href=&quot;https://sinonjs.org/releases/latest/matchers/&quot;&gt;매처 (matcher)를&lt;/a&gt; 주장 할 때.</target>
        </trans-unit>
        <trans-unit id="727141a325b329e459fc856f157377c20990812c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.minimatch&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;미니 매치를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.minimatch&lt;/code&gt; 로 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="142e71e26e63b3f70f407e6ea5b30330f96b0e42" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.Promise&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.Promise&lt;/code&gt; 로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="7030562302ba8607ecbe737211e934ee0457002f" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; and exposes it as &lt;code&gt;Cypress._&lt;/code&gt;. Call any valid Lodash method on &lt;code&gt;Cypress._&lt;/code&gt;</source>
          <target state="translated">싸이프레스는 자동으로 포함 &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; 하고 노출하는 그것을 &lt;code&gt;Cypress._&lt;/code&gt; 을 . 에 유효한 Lodash 방법 전화 &lt;code&gt;Cypress._&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="751194527fc0f1f6027a3dbadb474533e44aa86c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes a &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; library and exposes it as &lt;code&gt;Cypress.Blob&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; 라이브러리를 포함하고 이를 &lt;code&gt;Cypress.Blob&lt;/code&gt; 으로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="d7592108cf1b7d6d67b11f34d0f50eb01eb24858" translate="yes" xml:space="preserve">
          <source>Cypress automatically indicates when an XHR request happens in your application. These are always logged in the Command Log (regardless of whether it&amp;rsquo;s stubbed). Cypress indicates when a request has started and when it is finished. Additionally, Cypress takes a snapshot of the DOM at the moment the request is made and another snapshot at the moment the response returns.</source>
          <target state="translated">Cypress는 애플리케이션에서 XHR 요청이 발생하면 자동으로 표시합니다. 스텁 여부에 관계없이 항상 명령 로그에 기록됩니다. Cypress는 요청이 시작된시기와 완료된시기를 나타냅니다. 또한 Cypress는 요청이있을 때 DOM의 스냅 샷을 만들고 응답이 반환되는 순간에 다른 스냅 샷을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="089eedb4a06d8d7e3ea56740bc0c3c21e8a70dfa" translate="yes" xml:space="preserve">
          <source>Cypress automatically matches the spec and browser behavior for pressing the &lt;code&gt;{enter}&lt;/code&gt; key when the input belongs to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cypress 는 입력이 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 속하는 경우 &lt;code&gt;{enter}&lt;/code&gt; 키 를 누르기위한 스펙 및 브라우저 동작과 자동으로 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="e441959f284c286707cdec9765ece95e7a137663" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="translated">Cypress는 &lt;code&gt;cy.location()&lt;/code&gt; 명령을 자동으로 정규화하고 &lt;code&gt;window.location&lt;/code&gt; 에있는 관련 없는 값과 속성을 제거합니다 . 또한 &lt;code&gt;cy.location()&lt;/code&gt; 의해 생성 된 객체 리터럴은 특수 &lt;code&gt;window.location&lt;/code&gt; 객체 가 아니라 기본 객체 리터럴 입니다.</target>
        </trans-unit>
        <trans-unit id="7f145d0c0fa0ba06400026843839a67b825d3107" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is just a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="translated">Cypress는 &lt;code&gt;cy.location()&lt;/code&gt; 명령을 자동으로 정규화하고 &lt;code&gt;window.location&lt;/code&gt; 에있는 외부 값과 속성을 제거합니다 . 또한 &lt;code&gt;cy.location()&lt;/code&gt; 의해 생성 된 객체 리터럴은 특수한 &lt;code&gt;window.location&lt;/code&gt; 객체가 아닌 기본 객체 리터럴 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="fe542103b183548d306ffcb355167f3b048a84f3" translate="yes" xml:space="preserve">
          <source>Cypress automatically prepends the &lt;code&gt;http://&lt;/code&gt; protocol to common hosts. If you&amp;rsquo;re not using one of these 3 hosts, then make sure to provide the protocol.</source>
          <target state="translated">Cypress는 &lt;code&gt;http://&lt;/code&gt; 프로토콜을 공통 호스트 앞에 자동으로 추가 합니다. 이 3 개의 호스트 중 하나를 사용하지 않는 경우 프로토콜을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="babeb9d70f2af57eb60b9647c2cec2b5f4b05efc" translate="yes" xml:space="preserve">
          <source>Cypress automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt; environment variable and uses that proxy for all HTTP and HTTPS traffic. If an &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variable is set, HTTPS traffic will use that proxy instead.</source>
          <target state="translated">Cypress는 시스템의 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 환경 변수 에서 자동으로 읽고 모든 HTTP 및 HTTPS 트래픽에 해당 프록시를 사용합니다. 는 IF &lt;code&gt;HTTPS_PROXY&lt;/code&gt; 환경 변수가 설정되어, HTTPS 트래픽이 대신 프록시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f83a4b79b348fb55a78e735598e4af406e143324" translate="yes" xml:space="preserve">
          <source>Cypress automatically retries &lt;code&gt;cypress verify&lt;/code&gt; and &lt;code&gt;cypress run&lt;/code&gt; commands by starting its own Xvfb server on Linux if the first attempt fails due to possible &lt;code&gt;DISPLAY&lt;/code&gt; misconfiguration. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;#4034&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DISPLAY&lt;/code&gt; 구성 이 잘못되어 첫 번째 시도가 실패하면 Cypress 는 Linux에서 자체 Xvfb 서버를 시작하여 &lt;code&gt;cypress verify&lt;/code&gt; 및 &lt;code&gt;cypress run&lt;/code&gt; 명령을 자동으로 재 시도합니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;# 4034&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bea1daf076563864117140a361307480f75692cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically runs this command &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear localStorage inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에이&lt;/em&gt; 명령을 자동으로 실행하여 여러 테스트에서 상태가 공유되지 않도록합니다. 단일 테스트 내에서 localStorage를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="59ba96363233abebd8a8d6249e317b340963d2f6" translate="yes" xml:space="preserve">
          <source>Cypress automatically scaffolds out a suggested folder structure for organizing your fixtures on every new project. By default it will create an &lt;code&gt;example.json&lt;/code&gt; file when you add your project to Cypress.</source>
          <target state="translated">Cypress는 모든 새 프로젝트에서 조명기를 구성하기 위해 제안 된 폴더 구조를 자동으로 스캐 폴딩합니다. Cypress에 프로젝트를 추가 하면 기본적으로 &lt;code&gt;example.json&lt;/code&gt; 파일 이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="17eeec7102c0df2fcb69a2d62603edbeb383c0dd" translate="yes" xml:space="preserve">
          <source>Cypress automatically sets &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; based on the response &lt;code&gt;body&lt;/code&gt; you stub.</source>
          <target state="translated">Cypress는 스텁 한 응답 &lt;code&gt;body&lt;/code&gt; 을 기반으로 &lt;code&gt;Content-Length&lt;/code&gt; 및 &lt;code&gt;Content-Type&lt;/code&gt; 을 자동으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8537b0319700a7c0b5584023688134eb9c4f8c3f" translate="yes" xml:space="preserve">
          <source>Cypress automatically traveled back in time to a snapshot of when that command resolved. Additionally, since &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; finds DOM elements on the page, Cypress also highlights the element and scrolls it into view (to the top of the page).</source>
          <target state="translated">Cypress는 시간이 지남에 따라 해당 명령이 해결 된 시점의 스냅 샷으로 자동 이동했습니다. 또한 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 페이지에서 DOM 요소를 찾아서 요소를 강조 표시하고 페이지 맨 위로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="78dc4e0c2575d42f4d4738679fbf1995e0d60fd2" translate="yes" xml:space="preserve">
          <source>Cypress automatically validates your fixtures. If your &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt; files contain syntax errors, they will be shown in the Command Log.</source>
          <target state="translated">Cypress는 조명기를 자동으로 검증합니다. 귀하의 경우 &lt;code&gt;.json&lt;/code&gt; , &lt;code&gt;.js&lt;/code&gt; , 또는 &lt;code&gt;.coffee&lt;/code&gt; 파일을 구문 오류를 포함, 그들은 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="72b4f83152eb81b3029883b9f05f1707ebae0c08" translate="yes" xml:space="preserve">
          <source>Cypress automatically waits for the network call to complete before proceeding to the next command.</source>
          <target state="translated">Cypress는 자동으로 네트워크 호출이 완료 될 때까지 기다렸다가 다음 명령을 진행합니다.</target>
        </trans-unit>
        <trans-unit id="1f239706295d2bc14c4317941e9e5548f210e527" translate="yes" xml:space="preserve">
          <source>Cypress binaries can now be pointed to a staging environment with &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;#813&lt;/a&gt;.</source>
          <target state="translated">Cypress 바이너리는 이제 &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt; 으로 스테이징 환경을 가리킬 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;# 813&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="898b813e518d7e021000e6b2dfe3532750575a81" translate="yes" xml:space="preserve">
          <source>Cypress blurs other focused elements first</source>
          <target state="translated">싸이프레스는 다른 집중된 요소를 먼저 흐리게합니다</target>
        </trans-unit>
        <trans-unit id="80b9d7b438082a441faad059e0d4791d0912a368" translate="yes" xml:space="preserve">
          <source>Cypress builds on these popular tools and frameworks that you &lt;em&gt;hopefully&lt;/em&gt; already have some familiarity and knowledge of. If not, that&amp;rsquo;s okay too.</source>
          <target state="translated">싸이프레스는 이러한 인기있는 도구와 그 프레임 워크에 기반 &lt;em&gt;희망&lt;/em&gt; 이미 일부 친숙과 지식을 가지고있다. 그렇지 않다면 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="9665b9dff61c3e494294b89d7bf8037283563ddb" translate="yes" xml:space="preserve">
          <source>Cypress bundles &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;&lt;code&gt;Chai&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt;&lt;code&gt;Chai-jQuery&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt;&lt;code&gt;Sinon-Chai&lt;/code&gt;&lt;/a&gt; to provide built-in assertions. You can see a comprehensive list of them in &lt;a href=&quot;../references/assertions&quot;&gt;the list of assertions reference&lt;/a&gt;. You can also &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;write your own assertions as Chai plugins&lt;/a&gt; and use them in Cypress.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt; &lt;code&gt;Chai&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt; &lt;code&gt;Chai-jQuery&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt; &lt;code&gt;Sinon-Chai&lt;/code&gt; &lt;/a&gt; 를 번들 로 제공하여 기본 제공 어설 션을 제공합니다. &lt;a href=&quot;../references/assertions&quot;&gt;어설 션 참조 목록&lt;/a&gt; 에서 해당 목록을 포괄적으로 볼 수 있습니다 . 당신은 또한 수 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;차이 플러그인으로 자신의 주장을 쓰기&lt;/a&gt; 및 싸이프레스에서 사용할.</target>
        </trans-unit>
        <trans-unit id="8bb48c90410e6d5e56a8225e337f6bcdbca2e881" translate="yes" xml:space="preserve">
          <source>Cypress bundles the popular &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; assertion library, as well as helpful extensions for &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; and &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery&lt;/a&gt;, bringing you dozens of powerful assertions for free.</source>
          <target state="translated">Cypress는 인기있는 &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; 어설 션 라이브러리 와 &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; 및 &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery를&lt;/a&gt; 위한 유용한 확장 기능을 번들로 제공하여 수십 가지의 강력한 어설 션을 무료로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="912b8a05d7641a5157a8ac62f883eb478cd4d4ac" translate="yes" xml:space="preserve">
          <source>Cypress can alternatively be downloaded / installed / managed through the CLI utility.</source>
          <target state="translated">Cypress는 CLI 유틸리티를 통해 다운로드 / 설치 / 관리 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="60d75cf98a5f411854c3f6e1877aa625ee49a1a2" translate="yes" xml:space="preserve">
          <source>Cypress can now be run through the terminal.</source>
          <target state="translated">이제 Cypress를 터미널을 통해 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e52e2dd568be1d72784cb2efddb9a6b58e7b0a3b" translate="yes" xml:space="preserve">
          <source>Cypress can now predict upcoming assertions and modifies its behavior until the intended state has been reached.</source>
          <target state="translated">Cypress는 이제 예정된 어설 션을 예측하고 의도 한 상태에 도달 할 때까지 동작을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2ad329d390b4141f10aee1a1a3819d515c27308" translate="yes" xml:space="preserve">
          <source>Cypress can now run tests in parallel across multiple virtual machines, or can be parallelized on a single machine. Cypress will automatically figure out, detect, and load balance all of your specs in the fastest and most efficient way possible. There is no configuration other than passing a &lt;code&gt;--parallel&lt;/code&gt; flag and spinning up multiple machines on your CI provider. From our experiments you can expect to see approximately 40% reduction in overall run time &lt;strong&gt;per machine&lt;/strong&gt; you add. However, attempting to run in parallel on a single machine requires server grade hardware with dozens (or even hundreds) of CPU&amp;rsquo;s and GB of RAM to run efficiently. A much better and simpler approach is to use a cluster of docker containers that are all isolated from each other. Any standard CI service (CircleCI, TravisCI, etc) comes with the ability to do this. We automatically tap into their environment variables to make parallelization possible without you having to configure anything.</source>
          <target state="translated">Cypress는 이제 여러 가상 머신에서 병렬로 테스트를 실행하거나 단일 머신에서 병렬화 할 수 있습니다. Cypress는 모든 사양을 가장 빠르고 효율적으로 자동으로 파악, 감지 및로드 밸런싱합니다. 추가 한 &lt;code&gt;--parallel&lt;/code&gt; CI 공급자 플래그를 여러 시스템을 가동시키는 . 실험 결과 &lt;strong&gt;머신 당&lt;/strong&gt; 전체 실행 시간이 약 40 % 단축 될 것으로 예상 할 수 있습니다.&lt;strong&gt;&lt;/strong&gt; 을 전달하는 것 외에 다른 구성은 없습니다 . 그러나 단일 시스템에서 병렬로 실행하려면 수십 개 (또는 수백 개)의 CPU와 GB의 RAM이있는 서버급 하드웨어가 효율적으로 실행되어야합니다. 훨씬 더 좋고 간단한 접근 방식은 서로 격리 된 도커 컨테이너 클러스터를 사용하는 것입니다. 모든 표준 CI 서비스 (CircleCI, TravisCI 등)에는이 기능이 제공됩니다. 우리는 환경 변수를 자동으로 활용하여 아무것도 구성하지 않고도 병렬화가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="23a5ef31242deab64e195adfbe1a38ad88d51a91" translate="yes" xml:space="preserve">
          <source>Cypress can optionally act as your web server</source>
          <target state="translated">Cypress는 선택적으로 웹 서버로 작동 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="52a1e735505baab89a80b2a04906c502f6810599" translate="yes" xml:space="preserve">
          <source>Cypress can record your tests and make the results available in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">Cypress는 테스트를 기록하고 &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress 대시 보드&lt;/a&gt; 에서 결과를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3103ba5c9e66eaf766875de6213e0aa881db8c23" translate="yes" xml:space="preserve">
          <source>Cypress can run recorded tests in parallel across multiple machines since version &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt;. While parallel tests can also technically run on a single machine, we do not recommend it since this machine would require significant resources to run your tests efficiently.</source>
          <target state="translated">Cypress는 버전 &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt; 부터 여러 시스템에서 병렬로 기록 된 테스트를 실행할 수 있습니다 . 병렬 테스트는 단일 시스템에서 기술적으로 실행될 수도 있지만이 시스템은 테스트를 효율적으로 실행하기 위해 많은 리소스가 필요하므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2173f81e07457a0732a40f22e5ee36f61611b691" translate="yes" xml:space="preserve">
          <source>Cypress can run tests in parallel across multiple machines.</source>
          <target state="translated">Cypress는 여러 컴퓨터에서 병렬로 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa678a497e7e8bf52054c3a0c74b4695275f8108" translate="yes" xml:space="preserve">
          <source>Cypress can test anything that runs in a browser.</source>
          <target state="translated">Cypress는 브라우저에서 실행되는 모든 것을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d211cdcd1a5f322d6f4a14cc03cba0a9600ed4e" translate="yes" xml:space="preserve">
          <source>Cypress cannot execute commands outside a running test</source>
          <target state="translated">Cypress는 실행중인 테스트 외부에서 명령을 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="16683bbf2f77a2ab0c323cab4d75ab4ebba826e1" translate="yes" xml:space="preserve">
          <source>Cypress cannot yield you primitive values isolated away from other commands. That is because Cypress commands act internally like an asynchronous stream of data that only resolve after being affected and modified &lt;strong&gt;by other commands&lt;/strong&gt;. This means we cannot yield you discrete values in chunks because we have to know everything about what you expect before handing off a value.</source>
          <target state="translated">Cypress는 다른 명령과 분리 된 기본 값을 생성 할 수 없습니다. Cypress 명령 &lt;strong&gt;은 다른 명령에 의해&lt;/strong&gt; 영향을 받고 수정 된 후에 만 ​​해결되는 비동기식 데이터 스트림처럼 내부적으로 작동하기 때문 입니다. 즉, 값을 전달하기 전에 예상되는 모든 것에 대해 알아야하기 때문에 개별 값을 청크로 표시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="929411f923ca9e9e94dd67b3031d641004ccbf97" translate="yes" xml:space="preserve">
          <source>Cypress checks a lot of things to determine an element&amp;rsquo;s visibility.</source>
          <target state="translated">Cypress는 많은 요소를 검사하여 요소의 가시성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6d5100aad92c1ad903368d629fc93a277a4bbeb6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;disabled&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Cypress는 요소의 &lt;code&gt;disabled&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt; 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="0383d22e8f7a1d254e65aabb4bc19e4542fe00c6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;readonly&lt;/code&gt; property is set during &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 동안 요소의 &lt;code&gt;readonly&lt;/code&gt; 속성이 설정되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="9afb80f4962c57b5762a23322188807dbac49560" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing screenshots before &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your screenshots folder before a run, you can set &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;cypress run&lt;/code&gt; 하기 전에 기존 스크린 샷을 모두 지 웁니다 . 실행하기 전에 스크린 샷 폴더를 지우지 않으려면 &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a71a5e72a4079ddb8202c2fec6ea8dad1d8104b0" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing videos before a &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your videos folder before a run, you can set &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;cypress run&lt;/code&gt; 하기 전에 기존 비디오를 모두 지 웁니다 . 실행하기 전에 비디오 폴더를 지우지 않으려면 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="931fce5e101a0a8e25b78524da1887402fccf4cf" translate="yes" xml:space="preserve">
          <source>Cypress comes built in with the ability to stub and spy with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; or modify your application&amp;rsquo;s time with &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; - which lets you manipulate &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, amongst others.</source>
          <target state="translated">싸이프레스는와 스텁 및 스파이의 능력에 내장되어 제공 &lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 또는 사용하여 응용 프로그램의 시간을 수정 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용자가 조작 할 수 있습니다 - &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;setTimeout&lt;/code&gt; , &lt;code&gt;setInterval&lt;/code&gt; 을 , 다른 사람의 사이에.</target>
        </trans-unit>
        <trans-unit id="7bf7fe5af15a1269e870d3c1c6ecf84ef8120899" translate="yes" xml:space="preserve">
          <source>Cypress comes fully baked, batteries included. Here is a list of things it can do that no other testing framework can:</source>
          <target state="translated">Cypress는 완전히 구운 상태이며 배터리가 포함되어 있습니다. 다른 테스트 프레임 워크로는 할 수없는 일의 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca3cc26261bd6489e55404d0b33fa67f81b9de37" translate="yes" xml:space="preserve">
          <source>Cypress comes with TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;type declarations&lt;/a&gt; included. Modern text editors can use these type declarations to show IntelliSense inside spec files.</source>
          <target state="translated">Cypress에는 TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;유형 선언이&lt;/a&gt; 포함되어 있습니다. 최신 텍스트 편집기는 이러한 형식 선언을 사용하여 사양 파일 내에 IntelliSense를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3263deada359340d90252172c2459ae06008e43a" translate="yes" xml:space="preserve">
          <source>Cypress comes with a host of debugging tools to help you understand a test.</source>
          <target state="translated">Cypress는 테스트를 이해하는 데 도움이되는 다양한 디버깅 도구와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6918efc1ebd09db151521ea9cdcdd52f82b3c772" translate="yes" xml:space="preserve">
          <source>Cypress comes with an npm CLI module that parses the arguments, starts the Xvfb server (if necessary), and then opens the Test Runner application built on top of &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. Some common situations on why you would want to do this are:</source>
          <target state="translated">Cypress에는 인수를 구문 분석하고 Xvfb 서버를 시작한 다음 (필요한 경우) &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt; 위에 구축 된 Test Runner 응용 프로그램을 여는 npm CLI 모듈이 제공됩니다 . 이 작업을 수행하려는 일반적인 상황은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="123d9e5825e33fa08bddda9f842051a34f825320" translate="yes" xml:space="preserve">
          <source>Cypress comes with its own API for creating custom commands and overwriting existing commands. The built in Cypress commands use the very same API that&amp;rsquo;s defined below.</source>
          <target state="translated">Cypress에는 사용자 지정 명령을 만들고 기존 명령을 덮어 쓸 수있는 자체 API가 있습니다. 내장 Cypress 명령은 아래 정의 된 것과 동일한 API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2bdfa9e9ef6ea9ad9dab228a342f18673f60c6f1" translate="yes" xml:space="preserve">
          <source>Cypress comes with the ability to take screenshots, whether you are running in interactive mode using &lt;code&gt;cypress open&lt;/code&gt; or run mode using &lt;code&gt;cypress run&lt;/code&gt;, even in CI.</source>
          <target state="translated">Cypress는 CI 에서조차 &lt;code&gt;cypress open&lt;/code&gt; 을 사용하여 대화식 모드로 실행하든 &lt;code&gt;cypress run&lt;/code&gt; 을 사용하여 실행 모드 로 실행하든 스크린 샷을 찍을 수있는 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="822e1455e6de84e64fde2cd2d3ce65cecb59965c" translate="yes" xml:space="preserve">
          <source>Cypress commands do not &lt;strong&gt;return&lt;/strong&gt; their subjects, they &lt;strong&gt;yield&lt;/strong&gt; them. Remember: Cypress commands are asynchronous and get queued for execution at a later time. During execution, subjects are yielded from one command to the next, and a lot of helpful Cypress code runs between each command to ensure everything is in order.</source>
          <target state="translated">Cypress 명령은 주제를 &lt;strong&gt;반환&lt;/strong&gt; 하지 않고 &lt;strong&gt;산출&lt;/strong&gt; 합니다. 기억하십시오 : Cypress 명령은 비동기식이며 나중에 실행을 위해 대기합니다. 실행하는 동안 한 명령에서 다음 명령으로 주제가 생성되고 각 명령간에 많은 유용한 Cypress 코드가 실행되어 모든 것이 올바르게 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="d6e2e8ec24425307d65a940bd99d134e76ce9bef" translate="yes" xml:space="preserve">
          <source>Cypress commands for authenticate users with Keycloak Identity Provider</source>
          <target state="translated">Keycloak ID 공급자로 사용자를 인증하기위한 Cypress 명령</target>
        </trans-unit>
        <trans-unit id="729afd450f7bf2e2cd6448908d04783640ee1a6a" translate="yes" xml:space="preserve">
          <source>Cypress commands now correctly execute in &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;afterEach&lt;/code&gt; hooks on a failed test. Previously they would only run on passing tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;#203&lt;/a&gt;.</source>
          <target state="translated">싸이프레스 명령이 올바르게에서 실행 &lt;code&gt;after&lt;/code&gt; 및 &lt;code&gt;afterEach&lt;/code&gt; 은 실패한 테스트에 후크. 이전에는 테스트 통과시에만 실행되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;# 203&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e14e3d04185457907a347598c85d9c0d5ab87aa2" translate="yes" xml:space="preserve">
          <source>Cypress commands run &lt;a href=&quot;#Inside-the-browser&quot;&gt;inside of a browser&lt;/a&gt;.</source>
          <target state="translated">Cypress 명령 &lt;a href=&quot;#Inside-the-browser&quot;&gt;은 브라우저 내에서&lt;/a&gt; 실행 됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ab666a9f5afc5d30724737c6653f8db7ea4b824" translate="yes" xml:space="preserve">
          <source>Cypress consists of a free, &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;, &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;locally installed&lt;/a&gt; Test Runner &lt;strong&gt;and&lt;/strong&gt; a Dashboard Service for &lt;a href=&quot;../dashboard/introduction&quot;&gt;recording your tests&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 무료로 구성되어 &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;오픈 소스&lt;/a&gt; , &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;로컬에 설치된&lt;/a&gt; 테스트 러너 &lt;strong&gt;와&lt;/strong&gt; 의 대시 보드 서비스 &lt;a href=&quot;../dashboard/introduction&quot;&gt;테스트를 기록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff4d303420678cfd6b7c0a4b073366dad8327c6" translate="yes" xml:space="preserve">
          <source>Cypress currently uses the following CI environment variables to determine a CI build ID for a test run:</source>
          <target state="translated">Cypress는 현재 다음 CI 환경 변수를 사용하여 테스트 실행을위한 CI 빌드 ID를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8e8308f8a4321616d66f25bcee0ea95ba295ac41" translate="yes" xml:space="preserve">
          <source>Cypress custom command &quot;cy.api&quot; for HTTP API testing with server logs</source>
          <target state="translated">서버 로그를 사용한 HTTP API 테스트를위한 Cypress 사용자 지정 명령 &quot;cy.api&quot;</target>
        </trans-unit>
        <trans-unit id="515af59aed8f8db0f27fc6db95f51d17827972fc" translate="yes" xml:space="preserve">
          <source>Cypress deprecations and warnings are now prefixed with: &lt;code&gt;Cypress Warning:&lt;/code&gt; to indicate this message is coming from Cypress</source>
          <target state="translated">Cypress 지원 중단 및 경고에 이제 접두사가 붙습니다. &lt;code&gt;Cypress Warning:&lt;/code&gt; 이 메시지가 Cypress에서 온 것으로 표시</target>
        </trans-unit>
        <trans-unit id="763e595fb34a1f3baf6fbdd1895303cd890c533d" translate="yes" xml:space="preserve">
          <source>Cypress detected a cross-origin error happened on page load</source>
          <target state="translated">Cypress에서 페이지로드시 교차 출처 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="e3f72a17b05bf4b133aa5c20a789480165bc6c04" translate="yes" xml:space="preserve">
          <source>Cypress detected policy settings on your computer that may cause issues</source>
          <target state="translated">Cypress에서 컴퓨터에서 정책 설정을 감지하여 문제가 발생할 수 있음</target>
        </trans-unit>
        <trans-unit id="325dd4b2bfdf772a77b7097ad721056b251aafb4" translate="yes" xml:space="preserve">
          <source>Cypress detected that an uncaught error was thrown from a cross-origin script.</source>
          <target state="translated">Cypress는 교차 출처 스크립트에서 포착되지 않은 오류가 발생했음을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="07a47945ef9b212ecfabd712f70225db3723ff6c" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands but returned a different value.</source>
          <target state="translated">Cypress가 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령 을 호출 했지만 다른 값을 리턴 했음을 감지했습니다 .</target>
        </trans-unit>
        <trans-unit id="a6e4d587eec2b6141ddce97b63ed14bf9f0d6415" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands in a custom command but returned a different value.</source>
          <target state="translated">Cypress 가 사용자 정의 명령에서 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령 을 호출 했지만 다른 값을 리턴 했음을 발견했습니다 .</target>
        </trans-unit>
        <trans-unit id="e1d84a5590d4062daf8fa058059f7def2b68fbe0" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands but returned a different value.</source>
          <target state="translated">Cypress가 하나 이상의 cy 명령을 호출했지만 다른 값을 리턴했음을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="7db96a42833e811427ab8d251534de0078a39f4f" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands in a custom command but returned a different value.</source>
          <target state="translated">Cypress가 사용자 정의 명령에서 하나 이상의 cy 명령을 호출했지만 다른 값을 리턴했음을 발견했습니다.</target>
        </trans-unit>
        <trans-unit id="2712424c6f7cb8f02f97a54bddb0ea5f22a2f689" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.</source>
          <target state="translated">Cypress는 명령에서 하나 이상의 cy 명령을 호출하면서 명령에서 약속을 리턴했음을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="f1a368b765b44c35b055793ab5286d6232416268" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more &lt;code&gt;cy&lt;/code&gt; commands inside of that promise.</source>
          <target state="translated">Cypress가 테스트에서 약속을 반환했음을 발견했지만 해당 약속 내에서 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령을 호출했습니다 .</target>
        </trans-unit>
        <trans-unit id="dcbe57fedcb0ec8156a1a6797eb83f82e9a698b9" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more cy commands inside of that promise.</source>
          <target state="translated">Cypress가 테스트에서 약속을 반환했음을 발견했지만 해당 약속 내에서 하나 이상의 cy 명령을 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="dc83e94e17aa9ccc64dc59ece4b256378a6e3907" translate="yes" xml:space="preserve">
          <source>Cypress does NOT see how the page actually looks though. For example, Cypress will not see if the CSS class &lt;code&gt;completed&lt;/code&gt; grays out the label element and adds a strike-through line.</source>
          <target state="translated">Cypress는 페이지가 실제로 어떻게 보이는지 알 수 없습니다. 예를 들어 Cypress는 CSS 클래스가 &lt;code&gt;completed&lt;/code&gt; 되었는지 레이블 요소를 흐리게 표시하고 취소 선을 추가 하는지 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="14c95b94d0b8fd7690eedfb33cea9df265051859" translate="yes" xml:space="preserve">
          <source>Cypress does not &lt;em&gt;actually&lt;/em&gt; make an XHR request from the browser. We are actually making the HTTP request from the Cypress Test Runner (in Node). So, you won&amp;rsquo;t see the request inside of your Developer Tools.</source>
          <target state="translated">Cypress는 &lt;em&gt;실제로&lt;/em&gt; 브라우저에서 XHR 요청을 하지 않습니다 . 실제로 Cypress Test Runner (노드)에서 HTTP 요청을하고 있습니다. 따라서 개발자 도구 내부에 요청이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d610cec1557cd166d9654c64cd8c224fc1afb70e" translate="yes" xml:space="preserve">
          <source>Cypress does not currently factor in &lt;code&gt;pointer-events: none&lt;/code&gt; in its clicking algorithm. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">Cypress는 현재 &lt;code&gt;pointer-events: none&lt;/code&gt; 고려하지 않습니다 . 클릭 알고리즘에는 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이 문제를 해결하려면 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3db74b0d98a1fbb4fd3339fa15414dfda2195948" translate="yes" xml:space="preserve">
          <source>Cypress does not have a &lt;strong&gt;cy.hover()&lt;/strong&gt; command. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue #10&lt;/a&gt;.</source>
          <target state="translated">Cypress에는 &lt;strong&gt;cy.hover ()&lt;/strong&gt; 명령 이 없습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue # 10을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45075f56235c9a799b99f25b40f76f77e49428cc" translate="yes" xml:space="preserve">
          <source>Cypress does not instrument your code - you need to do it yourself. The golden standard for JavaScript code instrumentation is the battle-hardened &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;Istanbul&lt;/a&gt; and, luckily, it plays very nicely with the Cypress Test Runner. You can instrument the code as a build step through one of two ways:</source>
          <target state="translated">Cypress는 코드를 계측하지 않으므로 직접해야합니다. JavaScript 코드 계측의 황금 표준은 전투가 강화 된 &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;이스탄불&lt;/a&gt; 이며 운 좋게도 Cypress Test Runner와 매우 잘 어울립니다. 다음 두 가지 방법 중 하나를 통해 빌드 단계로 코드를 계측 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27c33b9f4e03b79c3a7c63538042fedc9b0dafd8" translate="yes" xml:space="preserve">
          <source>Cypress does some pretty interesting things under the hood to make testing HTTPs sites work. Cypress enables you to control and stub at the network level. Therefore, Cypress must assign and manage browser certificates to be able to modify the traffic in real time. You&amp;rsquo;ll notice Chrome display a warning that the &amp;lsquo;SSL certificate does not match&amp;rsquo;. This is normal and correct. Under the hood we act as our own CA authority and issue certificates dynamically in order to intercept requests otherwise impossible to access. We only do this for the superdomain currently under test, and bypass other traffic. That&amp;rsquo;s why if you open a tab in Cypress to another host, the certificates match as expected.</source>
          <target state="translated">Cypress는 HTTP 사이트 테스트를 위해 매우 흥미로운 작업을 수행합니다. Cypress를 사용하면 네트워크 수준에서 제어하고 스텁 할 수 있습니다. 따라서 Cypress는 트래픽을 실시간으로 수정할 수 있도록 브라우저 인증서를 할당하고 관리해야합니다. Chrome에 'SSL 인증서가 일치하지 않습니다'라는 경고가 표시됩니다. 이것은 정상입니다. 우리는 자체적으로 CA 권한을 수행하고 액세스가 불가능한 요청을 가로 채기 위해 인증서를 동적으로 발행합니다. 현재 테스트중인 슈퍼 도메인에 대해서만이 작업을 수행하고 다른 트래픽은 우회합니다. 따라서 Cypress에서 다른 호스트로 탭을 열면 인증서가 예상대로 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c7c377ae138a280a8ad38fce02a4ffbef0682666" translate="yes" xml:space="preserve">
          <source>Cypress does this by spawning an independent &lt;code&gt;child_process&lt;/code&gt; which then &lt;code&gt;requires&lt;/code&gt; in your &lt;code&gt;pluginsFile&lt;/code&gt;. This is similar to the way Visual Studio Code or Atom works.</source>
          <target state="translated">Cypress는 &lt;code&gt;child_process&lt;/code&gt; 에 &lt;code&gt;requires&lt;/code&gt; 독립적 인 child_process 를 생성 하여 &lt;code&gt;pluginsFile&lt;/code&gt; 합니다. 이것은 Visual Studio Code 또는 Atom의 작동 방식과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="62cedf95982948885977cf1529c65d7d5f8dd2d2" translate="yes" xml:space="preserve">
          <source>Cypress doesn&amp;rsquo;t kick off the browser automation magic until the test function exits.</source>
          <target state="translated">Cypress는 테스트 기능이 종료 될 때까지 브라우저 자동화 마법을 시작하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c3b5602f5ef228d78219ad3c8d29551d39bd9977" translate="yes" xml:space="preserve">
          <source>Cypress ecosystem</source>
          <target state="translated">사이프러스 생태계</target>
        </trans-unit>
        <trans-unit id="52f1ef57db713a0be7dd35df852bfaaa169c649c" translate="yes" xml:space="preserve">
          <source>Cypress emits a series of events as it runs in your browser.</source>
          <target state="translated">Cypress는 브라우저에서 실행될 때 일련의 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7697b2c3b28fc1b582d60ba45931016a20083da5" translate="yes" xml:space="preserve">
          <source>Cypress enables you to dynamically modify configuration values and environment variables from your plugin file.</source>
          <target state="translated">Cypress를 사용하면 플러그인 파일에서 구성 값과 환경 변수를 동적으로 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9bc2ea98be122daf4c0d8f6c98e09eb5775e016" translate="yes" xml:space="preserve">
          <source>Cypress enables you to write all types of tests:</source>
          <target state="translated">Cypress를 사용하면 모든 유형의 테스트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73ea9b80d973a18938bef296490ce112a6efdba0" translate="yes" xml:space="preserve">
          <source>Cypress errors because it can&amp;rsquo;t interact with &amp;ldquo;dead&amp;rdquo; elements - just like a real user could not do this either. Understanding how this happens is very important - and it is often easy to prevent.</source>
          <target state="translated">Cypress 오류는 &quot;죽은&quot;요소와 상호 작용할 수 없기 때문에 실제 사용자가 수행 할 수없는 것처럼 오류가 발생합니다. 이것이 어떻게 발생하는지 이해하는 것이 매우 중요하며 종종 예방하기가 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="da4777d0266a47cfa11f194481866badc420bbef" translate="yes" xml:space="preserve">
          <source>Cypress executes the vast majority of its commands inside the browser, so there is no network lag. Commands execute and drive your application as fast as it is capable of rendering. To deal with modern JavaScript frameworks with complex UI&amp;rsquo;s, you use assertions to tell Cypress what the desired state of your application should be. Cypress will automatically wait for your application to reach this state before moving on. You are completely insulated from fussing with manual waits or retries. Cypress automatically waits for elements to exist and will never yield you stale elements that have been detached from the DOM.</source>
          <target state="translated">Cypress는 브라우저 내에서 대부분의 명령을 실행하므로 네트워크 지연이 없습니다. 명령은 렌더링 할 수있는 한 빨리 응용 프로그램을 실행하고 구동합니다. 복잡한 UI가있는 최신 JavaScript 프레임 워크를 처리하기 위해 어설 션을 사용하여 Cypress에 원하는 애플리케이션 상태를 알려줍니다. Cypress는 계속 진행하기 전에 애플리케이션이이 상태에 도달 할 때까지 자동으로 기다립니다. 수동 대기 또는 재 시도를 통해 소란을 완전히 차단할 수 있습니다. Cypress는 자동으로 요소가 존재하기를 기다리며 DOM에서 분리 된 오래된 요소를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe1b2870f950b3fde184e954b99191b6652e3367" translate="yes" xml:space="preserve">
          <source>Cypress generates its own isolated profile apart from your normal browser profile. This means things like &lt;code&gt;history&lt;/code&gt; entries, &lt;code&gt;cookies&lt;/code&gt;, and &lt;code&gt;3rd party extensions&lt;/code&gt; from your regular browsing session will not affect your tests in Cypress.</source>
          <target state="translated">Cypress는 일반 브라우저 프로필과 별도로 자체 격리 된 프로필을 생성합니다. 즉 , 일반 브라우징 세션의 &lt;code&gt;history&lt;/code&gt; 항목, &lt;code&gt;cookies&lt;/code&gt; 및 &lt;code&gt;3rd party extensions&lt;/code&gt; 과 같은 항목 은 Cypress의 테스트에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a684e1df6a0cce82886d4de8be159f4fa97d4ce" translate="yes" xml:space="preserve">
          <source>Cypress gives you a simple interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="translated">Cypress는 여러 테스트를 위해 쿠키를 자동으로 보존 할 수있는 간단한 인터페이스를 제공합니다. Cypress는 기본적으로 새 테스트가 시작되기 전에 모든 쿠키를 자동으로 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="1bc0558aaaab52186cf8343ff36f0cea33d3ab82" translate="yes" xml:space="preserve">
          <source>Cypress gives you an interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="translated">Cypress는 여러 테스트를 위해 쿠키를 자동으로 보존하는 인터페이스를 제공합니다. Cypress는 기본적으로 각각의 새 테스트가 시작되기 전에 모든 쿠키를 자동으로 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="a4e6f4e326ff6f2fa866e28e8f182966cbc8b898" translate="yes" xml:space="preserve">
          <source>Cypress gives you the option to dynamically alter configuration values. This is helpful when running Cypress in multiple environments and on multiple developer machines.</source>
          <target state="translated">Cypress는 구성 값을 동적으로 변경할 수있는 옵션을 제공합니다. 이것은 여러 환경과 여러 개발자 컴퓨터에서 Cypress를 실행할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b5f2480b96f177a8e0b12efa536ecae6c9c752ec" translate="yes" xml:space="preserve">
          <source>Cypress guarantees that it will execute all of its commands &lt;em&gt;deterministically&lt;/em&gt; and identically every time they are run.</source>
          <target state="translated">Cypress는 모든 명령 이 실행될 때마다 &lt;em&gt;결정&lt;/em&gt; 적이고 동일 하게 실행되도록 보장 합니다.</target>
        </trans-unit>
        <trans-unit id="1597eb500d51c17b6e174846d06a9b1da2669b52" translate="yes" xml:space="preserve">
          <source>Cypress has adopted Mocha&amp;rsquo;s &lt;code&gt;bdd&lt;/code&gt; syntax, which fits perfectly with both integration and unit testing. All of the tests you&amp;rsquo;ll be writing sit on the fundamental harness Mocha provides, namely:</source>
          <target state="translated">Cypress는 통합 및 단위 테스트에 모두 적합한 Mocha의 &lt;code&gt;bdd&lt;/code&gt; 구문 을 채택했습니다 . 여러분이 작성하게 될 모든 테스트는 Mocha가 제공하는 기본 하네스, 즉 :</target>
        </trans-unit>
        <trans-unit id="6660994651e3ce7098be26d760a8c7ebed6d298e" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="translated">싸이프레스는 또한 내장 된 &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-차이 티&lt;/a&gt; 지원, 어떤 있도록 &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;지원하는 주장 &lt;code&gt;sinon-chai&lt;/code&gt; &lt;/a&gt; 어떤 구성없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d63555c6a86c46a66d843fa55fb4a2ab8fbb574" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;https://docs.cypress.io/guides/references/assertions.html#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="translated">싸이프레스는 또한 내장 된 &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Sinon-Chai&quot;&gt;sinon-차이 티&lt;/a&gt; 지원, 어떤 있도록 &lt;a href=&quot;https://docs.cypress.io/guides/references/assertions.html#Sinon-Chai&quot;&gt;지원하는 주장 &lt;code&gt;sinon-chai&lt;/code&gt; &lt;/a&gt; 어떤 구성없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab90686c4f8a5c947ec43bf80d8e641fef08c3e5" translate="yes" xml:space="preserve">
          <source>Cypress has many more configuration options you can use to customize its behavior. Things like where your tests live, default timeout periods, environment variables, which reporter to use, etc.</source>
          <target state="translated">Cypress에는 동작을 사용자 정의하는 데 사용할 수있는 더 많은 구성 옵션이 있습니다. 테스트가 진행되는 위치, 기본 시간 초과 기간, 환경 변수, 사용할 기자 등</target>
        </trans-unit>
        <trans-unit id="990f07860a55dfadc515ee3da5925e89501a8259" translate="yes" xml:space="preserve">
          <source>Cypress has some added functionality for quickly referring back to past subjects called &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt;. It looks something like this:</source>
          <target state="translated">Cypress에는 &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt; 라는 과거 주제를 빠르게 참조 할 수있는 기능이 추가되었습니다 . 다음과 같이 보입니다 :</target>
        </trans-unit>
        <trans-unit id="bcdf9865a9d82424f395c52104c05b2069bcb5c1" translate="yes" xml:space="preserve">
          <source>Cypress helper that checks number of expected and actual assertions in the test</source>
          <target state="translated">테스트에서 예상 및 실제 어설 션 수를 확인하는 Cypress 도우미</target>
        </trans-unit>
        <trans-unit id="8fba472528c23f86cb4086b98f22460e9770d00f" translate="yes" xml:space="preserve">
          <source>Cypress indicates whether an XHR sent back a stubbed response or actually went out to a server in its Command Log</source>
          <target state="translated">Cypress는 XHR이 스텁 된 응답을 다시 보냈는지 또는 실제로 명령 로그에서 서버로 나 갔는지 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9e449e9157a22090dbf2b4888a6b29849a9a5469" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 스크롤 할 수 있는지 여부를 알아 내기 위해 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5c3c46985749ea03ef603b26782eb04f925aae3" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 스크롤 할 수 있는지 여부를 알아 내기 위해 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="edb85086ca242ec681a6590baf4669b8e7c421de" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 숨겨져 있는지, 알아 내기 위해 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6dbf3f7f8fbdd4c2a824a4145593ba60dbc45cdc" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 숨겨져 있는지, 알아 내기 위해 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa2c81dd7d916fd7f1168707d93a4fc48cb0a18a" translate="yes" xml:space="preserve">
          <source>Cypress is &lt;em&gt;Not&lt;/em&gt; Like jQuery</source>
          <target state="translated">싸이프레스는 &lt;em&gt;안&lt;/em&gt; 처럼 jQuery를</target>
        </trans-unit>
        <trans-unit id="c1be48039075d67d805c9f9754271324d4667091" translate="yes" xml:space="preserve">
          <source>Cypress is Like jQuery</source>
          <target state="translated">Cypress는 jQuery와 같습니다</target>
        </trans-unit>
        <trans-unit id="95e77f2456bfaf1b5e3e4af59168800202848f51" translate="yes" xml:space="preserve">
          <source>Cypress is a &lt;em&gt;functional&lt;/em&gt; Test Runner. It drives the web application the way a user would, and checks if the app &lt;em&gt;functions&lt;/em&gt; as expected: if the expected message appears, an element is removed, or a CSS class is added after the appropriate user action. A typical Cypress test, for example, can check if a toggled &amp;ldquo;Todo&amp;rdquo; item gets a class of &amp;ldquo;completed&amp;rdquo; after the &lt;code&gt;.toggle&lt;/code&gt; is checked:</source>
          <target state="translated">Cypress는 &lt;em&gt;기능적인&lt;/em&gt; 테스트 러너입니다. 웹 애플리케이션을 사용자가 원하는 방식으로 구동하고 앱 이 예상대로 &lt;em&gt;작동&lt;/em&gt; 하는지 확인합니다. 예상 메시지가 나타나거나 요소가 제거되거나 적절한 사용자 조치 후에 CSS 클래스가 추가됩니다. 예를 들어, 전형적인 Cypress 테스트는 토글 된 &quot;Todo&quot;항목이 &lt;code&gt;.toggle&lt;/code&gt; 이후에 &quot;완료된&quot;클래스를 얻는 지 확인할 수 있습니다. 을 확인한 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53c9f872511024718a8f82a94e79bff7a77d8892" translate="yes" xml:space="preserve">
          <source>Cypress is a desktop application that is installed on your computer. The desktop application supports these operating systems:</source>
          <target state="translated">Cypress는 컴퓨터에 설치된 데스크톱 응용 프로그램입니다. 데스크탑 응용 프로그램은 다음 운영 체제를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6ff8be0e34d6ada96a6ab8cfbee1ade53884ea40" translate="yes" xml:space="preserve">
          <source>Cypress is a global object that persists for the entirety of all of your tests. Any events you bind to Cypress will apply to all tests, and will not be unbound unless you manually unbind them.</source>
          <target state="translated">Cypress는 모든 테스트에 대해 지속되는 전역 객체입니다. Cypress에 바인딩하는 모든 이벤트는 모든 테스트에 적용되며 수동으로 바인딩을 해제하지 않으면 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="869d1c1fb28fbc8fb81e122dddb505e13fa8d5b1" translate="yes" xml:space="preserve">
          <source>Cypress is a next generation front end testing tool built for the modern web. We address the key pain points developers and QA engineers face when testing modern applications.</source>
          <target state="translated">Cypress는 최신 웹용으로 설계된 차세대 프런트 엔드 테스트 도구입니다. 우리는 현대적인 응용 프로그램을 테스트 할 때 개발자와 QA 엔지니어가 직면하는 주요 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="8e39beda401fbd4a89a2b2e926247dcba77a2870" translate="yes" xml:space="preserve">
          <source>Cypress is a rather large and complex project involving a dozen or more submodules, and the default output can be overwhelming.</source>
          <target state="translated">Cypress는 12 개 이상의 하위 모듈을 포함하는 다소 크고 복잡한 프로젝트이며 기본 출력이 압도적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dec926db8824334e668f9586c17b1871fdafe4a" translate="yes" xml:space="preserve">
          <source>Cypress is a specialized tool that does one thing really well: end-to-end testing web applications while they are under development. You should not use Cypress for things it is not designed for such as:</source>
          <target state="translated">Cypress는 개발중인 웹 응용 프로그램을 엔드 투 엔드 테스트하는 것 중 하나를 실제로 수행하는 특수 도구입니다. Cypress를 다음과 같이 설계되지 않은 용도로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b5c264814ec44d1280406e94d0c1671c5b4b60a7" translate="yes" xml:space="preserve">
          <source>Cypress is built around creating &lt;strong&gt;reliable tests&lt;/strong&gt;. The secret to writing good tests is to provide as much &amp;ldquo;state&amp;rdquo; and &amp;ldquo;facts&amp;rdquo; to Cypress and to &amp;ldquo;guard it&amp;rdquo; from issuing new commands until your application has reached the desired state it needs to proceed.</source>
          <target state="translated">Cypress는 &lt;strong&gt;신뢰할 수있는 테스트를&lt;/strong&gt; 만들기 위해 구축되었습니다 . 좋은 테스트를 작성하는 비결은 Cypress에 많은&amp;ldquo;상태&amp;rdquo;및&amp;ldquo;사실&amp;rdquo;을 제공하고 애플리케이션이 원하는 상태에 도달 할 때까지 새 명령을 실행하지 못하도록&amp;ldquo;보호&amp;rdquo;하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b92cdd5b24a245c1191fdc720a8b79e88ca80485" translate="yes" xml:space="preserve">
          <source>Cypress is built on top of &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;. We support both Chai&amp;rsquo;s &lt;code&gt;BDD&lt;/code&gt; and &lt;code&gt;TDD&lt;/code&gt; assertion styles. Tests you write in Cypress will mostly adhere to this style.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; 와 &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; 위에 지어졌습니다 . 우리는 Chai의 &lt;code&gt;BDD&lt;/code&gt; 와 &lt;code&gt;TDD&lt;/code&gt; 를 모두 지원합니다 어설 션 스타일을 합니다. Cypress로 작성한 테스트는 대부분이 스타일을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4c57f41938cd9b0ac090b8bf45e2d2c936962329" translate="yes" xml:space="preserve">
          <source>Cypress is built using Promises that come from &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt;. However, Cypress commands do not return these typical Promise instances. Instead we return what&amp;rsquo;s called a &lt;code&gt;Chainer&lt;/code&gt; that acts like a layer sitting on top of the internal Promise instances.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt; 에서 제공하는 Promises를 사용하여 구축되었습니다 . 그러나 Cypress 명령은 이러한 일반적인 Promise 인스턴스를 반환하지 않습니다. 대신 내부 Promise 인스턴스 위에있는 레이어처럼 작동 하는 &lt;code&gt;Chainer&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4faf31a6757e1c4ae29431d3f8d489f1d20486fa" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on prior to running &lt;code&gt;cypress open&lt;/code&gt; or &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;디버그&lt;/a&gt; 모듈을 사용하여 빌드됩니다 . 즉, &lt;code&gt;cypress open&lt;/code&gt; 또는 &lt;code&gt;cypress run&lt;/code&gt; 을 실행하기 전에이 기능을 켜고 Cypress를 실행하면 유용한 디버깅 출력을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e365f28a29f12706b59bc9f0e67855dcd44e09df" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on. &lt;strong&gt;Note:&lt;/strong&gt; you will see a LOT of messages when running with &lt;code&gt;DEBUG=...&lt;/code&gt; setting.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;디버그&lt;/a&gt; 모듈을 사용하여 빌드됩니다 . 즉,이 기능을 켜고 Cypress를 실행하면 유용한 디버깅 출력을받을 수 있습니다. &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;DEBUG=...&lt;/code&gt; 로 실행할 때 많은 메시지가 표시됩니다 . 설정으로 .</target>
        </trans-unit>
        <trans-unit id="3b20921d7e731dea1322bc38fe6f6705c9fffcdf" translate="yes" xml:space="preserve">
          <source>Cypress is built, and optimized around being a tool for your daily local development. In fact, after you start using Cypress for awhile, we believe that you may find it useful to even do &lt;strong&gt;all of your development&lt;/strong&gt; in it.</source>
          <target state="translated">Cypress는 일상적인 지역 개발을위한 도구로 만들어졌으며 최적화되었습니다. 실제로 Cypress를 잠시 사용하기 시작한 후에는 &lt;strong&gt;모든 개발&lt;/strong&gt; 작업을 수행 &lt;strong&gt;하는&lt;/strong&gt; 것이 유용하다고 생각 합니다.</target>
        </trans-unit>
        <trans-unit id="ff357c77f2177aef35545ec53e59b68e24420ac0" translate="yes" xml:space="preserve">
          <source>Cypress is currently seeking to raise a Series A. This will enable us to grow the team and speed up development but seeking it has come at a ost for current development speed. If you have any VC connections &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;please send them our way&lt;/a&gt;.</source>
          <target state="translated">Cypress는 현재 시리즈 A를 올리려고합니다.이를 통해 팀을 키우고 개발 속도를 높일 수 있지만 현재 개발 속도를 높이기 위해 노력하고 있습니다. VC 연결이있는 경우 &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;보내주십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6167ff978a76f79dcb98c7b0221f19ee3f15c2c1" translate="yes" xml:space="preserve">
          <source>Cypress is most often compared to Selenium; however Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.</source>
          <target state="translated">사이프러스는 대부분 셀레늄과 비교됩니다. 그러나 Cypress는 기본적으로나 구조적으로 다릅니다. Cypress는 Selenium과 동일한 제한 사항에 의해 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="530766382e09d2dc10a8897366980430533ed9ac" translate="yes" xml:space="preserve">
          <source>Cypress is not a &lt;strong&gt;general purpose&lt;/strong&gt; web automation tool. It is poorly suited for scripting live, production websites not under your control.</source>
          <target state="translated">Cypress는 &lt;strong&gt;범용&lt;/strong&gt; 웹 자동화 도구 가 아닙니다 . 제어 할 수없는 라이브 프로덕션 웹 사이트 스크립팅에는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e7f9f5cf0b1279f8cbe9aa37c8dc4bdb0444d3c" translate="yes" xml:space="preserve">
          <source>Cypress is not a general purpose &lt;a href=&quot;#Automation-restrictions&quot;&gt;automation tool&lt;/a&gt;.</source>
          <target state="translated">Cypress는 범용 &lt;a href=&quot;#Automation-restrictions&quot;&gt;자동화 도구&lt;/a&gt; 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="526615ae0ec1acf1d4f4fba790ad50d392856af2" translate="yes" xml:space="preserve">
          <source>Cypress is now &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;! This project is licensed under the terms of the &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT License&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;오픈 소스입니다&lt;/a&gt; ! 이 프로젝트는 &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT 라이센스&lt;/a&gt; 조건에 따라 라이센스가 부여됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6870288c0bf703d92da969f4e9cef789d7d207c" translate="yes" xml:space="preserve">
          <source>Cypress is now able to run all the tests, run in the terminal, and includes support for Linux and CI. Additionally, most of the functionality of he GUI Desktop App can now be accessed through command line arguments.</source>
          <target state="translated">Cypress는 이제 모든 테스트를 실행하고 터미널에서 실행할 수 있으며 Linux 및 CI에 대한 지원을 포함합니다. 또한 GUI Desktop App의 대부분의 기능은 이제 명령 줄 인수를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01f66f8ecf2056a79949b16440d796098a547bcd" translate="yes" xml:space="preserve">
          <source>Cypress is versioned like any other dependency.</source>
          <target state="translated">Cypress는 다른 종속성과 마찬가지로 버전이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="b2a743ccd2b0f3716c26a35f4d7f80691926a4c2" translate="yes" xml:space="preserve">
          <source>Cypress knows and understands everything that happens in your application synchronously. It is notified the moment the page loads and the moment the page unloads. It is impossible for Cypress to miss elements when it fires events. Cypress even knows how fast an element is animating and will &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;wait for it to stop animating&lt;/a&gt; on specific network requests to finish.</source>
          <target state="translated">Cypress는 애플리케이션에서 발생하는 모든 사항을 동 기적으로 알고 이해합니다. 페이지가로드되는 순간과 페이지가 언로드되는 순간을 알립니다. Cypress가 이벤트를 발생시킬 때 요소를 놓치는 것은 불가능합니다. Cypress는 요소의 애니메이션 속도를 알고 있으며 애니메이션 &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;이 중지&lt;/a&gt; 될 때까지 기다립니다. 있으며 특정 네트워크 요청에 대한 .</target>
        </trans-unit>
        <trans-unit id="528ba75aed4f434c47560bef9d6da9f2c39b28c1" translate="yes" xml:space="preserve">
          <source>Cypress launches the browser in a way that&amp;rsquo;s different from a regular browser environment. But it launches in a way that we believe makes testing &lt;em&gt;more reliable&lt;/em&gt; and &lt;em&gt;accessible&lt;/em&gt;.</source>
          <target state="translated">Cypress는 일반 브라우저 환경과 다른 방식으로 브라우저를 시작합니다. 그러나 테스트를 &lt;em&gt;보다 신뢰할 수&lt;/em&gt; 있고 &lt;em&gt;접근하기 쉽게&lt;/em&gt; 만드는 방식으로 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="692a6e6fe5fbbcc9662d662e506defd16e9b5956" translate="yes" xml:space="preserve">
          <source>Cypress leverages jQuery&amp;rsquo;s powerful selector engine to help make tests familiar and readable for modern web developers.</source>
          <target state="translated">Cypress는 jQuery의 강력한 선택기 엔진을 활용하여 최신 웹 개발자에게 친숙하고 읽을 수있는 테스트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c67c67171ad18ef7700ef9747c888b650f8ac819" translate="yes" xml:space="preserve">
          <source>Cypress logo now displays in &lt;code&gt;About Page&lt;/code&gt;.</source>
          <target state="translated">Cypress 로고가 &lt;code&gt;About Page&lt;/code&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="be170162f705ad538e216bd722a36b248db5af6d" translate="yes" xml:space="preserve">
          <source>Cypress maintains an official list of plugins created by us and the community. You can &lt;code&gt;npm install&lt;/code&gt; any of the plugins listed below:</source>
          <target state="translated">Cypress는 당사와 커뮤니티에서 만든 플러그인의 공식 목록을 유지 관리합니다. 당신은 할 수 &lt;code&gt;npm install&lt;/code&gt; 아래 나열된 플러그인 중 하나를 .</target>
        </trans-unit>
        <trans-unit id="7eec7714886f23b4a245c4c60f1361922c90494d" translate="yes" xml:space="preserve">
          <source>Cypress maintains some local application data in order to save user preferences and more quickly start up. Sometimes this data can become corrupted. You may fix an issue you have by clearing this app data.</source>
          <target state="translated">Cypress는 사용자 기본 설정을 저장하고 더 빨리 시작하기 위해 일부 로컬 응용 프로그램 데이터를 유지 관리합니다. 때때로이 데이터는 손상 될 수 있습니다. 이 앱 데이터를 지우면 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bf6b623e2ef01f75aa0ccc18ea5dd9742da0e38" translate="yes" xml:space="preserve">
          <source>Cypress makes it easier to chain assertions together.</source>
          <target state="translated">Cypress를 사용하면 어설 션을 쉽게 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce3a3c87011aaa111efec7a11f19ccd24c096ac8" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to chain assertions together.</source>
          <target state="translated">Cypress를 사용하면 어설 션을 쉽게 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f13d8b6e04fe58a58be07c9d684afc3015bccf7" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a network requests and have it respond instantly with fixture data.</source>
          <target state="translated">Cypress를 사용하면 네트워크 요청을 쉽게 스텁하고 픽스처 데이터로 즉시 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b57339a0ea56ef3c65e019fc3c19d02f176b6c" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a response and control the &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, or even delay.</source>
          <target state="translated">Cypress를 사용하면 응답을 쉽게 스텁하고 &lt;code&gt;body&lt;/code&gt; , &lt;code&gt;status&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; 또는 지연을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f38ca921828c241c4f255ac47fe69d10462a4f64" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to test the entire lifecycle of Ajax / XHR requests within your application. Cypress provides you direct access to the XHR objects, enabling you to make assertions about its properties. Additionally you can even stub and mock a request&amp;rsquo;s response.</source>
          <target state="translated">Cypress를 사용하면 애플리케이션 내에서 Ajax / XHR 요청의 전체 수명주기를 쉽게 테스트 할 수 있습니다. Cypress를 통해 XHR 개체에 직접 액세스 할 수 있으므로 해당 속성에 대한 어설 션을 만들 수 있습니다. 또한 요청의 응답을 스텁하고 조롱 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c93ad14bb0246449f98429e08b415399b34829b" translate="yes" xml:space="preserve">
          <source>Cypress modifies these scripts at the network level, and therefore there is a tiny performance cost to search the response streams for these patterns.</source>
          <target state="translated">Cypress는 네트워크 수준에서 이러한 스크립트를 수정하므로 이러한 패턴에 대한 응답 스트림을 검색하는 데 약간의 성능 비용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="811fe4df65580b03d4eff943c841ead3135de3e1" translate="yes" xml:space="preserve">
          <source>Cypress needs Internet access to work. Many companies require the use of a corporate proxy to access the Internet. If your company does this, many functions of Cypress will not work until you&amp;rsquo;ve configured Cypress to use your proxy:</source>
          <target state="translated">Cypress가 작동하려면 인터넷에 연결되어 있어야합니다. 많은 회사에서 인터넷에 액세스하려면 회사 프록시를 사용해야합니다. 회사에서이를 수행하는 경우 프록시를 사용하도록 Cypress를 구성 할 때까지 Cypress의 여러 기능이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74d4eb6be970ea73f708382a54e311cdd6ea0869" translate="yes" xml:space="preserve">
          <source>Cypress no longer accidentally prints internal Electron logs when running &lt;code&gt;cypress run&lt;/code&gt;. This bug would exhibit itself when verifying and running Cypress the first time after installation. You may have seen these logs when running in CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;#4255&lt;/a&gt;.</source>
          <target state="translated">Cypress &lt;code&gt;cypress run&lt;/code&gt; 때 Cypress가 더 이상 실수로 내부 전자 로그를 인쇄하지 않습니다 . 이 버그는 설치 후 Cypress를 처음 확인하고 실행할 때 나타납니다. CI에서 실행할 때 이러한 로그를 보았을 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;# 4255&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="55cc51c2b2224b4f4a9daad94683dd639628d74b" translate="yes" xml:space="preserve">
          <source>Cypress no longer automatically takes screenshots of skipped tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;#2368&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 건너 뛴 테스트의 스크린 샷을 자동으로 생성하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;# 2368&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3156d4bb4f630fc7fa73151537b9412a8d784f96" translate="yes" xml:space="preserve">
          <source>Cypress no longer copies screenshots and videos to artifacts for CircleCI. Copying artifacts should be left up to the user to &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;handle themselves in their &lt;code&gt;circle.yml&lt;/code&gt; file&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;#1592&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 스크린 샷과 비디오를 CircleCI의 아티팩트로 복사하지 않습니다. &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;자신의 &lt;code&gt;circle.yml&lt;/code&gt; 파일 에서 자신&lt;/a&gt; 을 처리 하려면 복사 아티팩트를 사용자에게 맡겨야 합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;# 1592&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a2ab12feaf129218f0f992204efb3d801ed5c29" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes on initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; when the 3rd party web server never ends the response. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;#272&lt;/a&gt;.</source>
          <target state="translated">타사 웹 서버가 응답을 종료 하지 않으면 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 에서 Cypress가 더 이상 충돌하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;# 272&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b7b7f9d5a04383de07b5d3c1bd3a023d2e0ea9d1" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when a 3rd party server sends invalid &lt;code&gt;gzip&lt;/code&gt; content. Also fixed issues with incorrectly gunzipping multibyte characters which would potentially lead to serving invalid HTML or JS. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;#1396&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;#1756&lt;/a&gt;.</source>
          <target state="translated">타사 서버가 잘못된 &lt;code&gt;gzip&lt;/code&gt; 컨텐츠를 보낼 때 더 이상 Cypress가 충돌하지 않습니다 . 멀티 바이트 문자를 잘못 압축하여 잘못된 HTML 또는 JS를 제공 할 수있는 문제도 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;# 1396&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;# 1756을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="33a12afb076ef1e52aaca1bc10c8261a0f33b86c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when attempting to proxy a WebSocket connection that fails. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;#556&lt;/a&gt;.</source>
          <target state="translated">실패한 WebSocket 연결 프록시 시도시 Cypress가 더 이상 충돌하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;# 556&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e33dea56f182ce0a958dfb8f69bd8cdad2615f6c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when you click links in the on-boarding screen called &amp;ldquo;To help you get started&amp;hellip;&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;#227&lt;/a&gt;.</source>
          <target state="translated">온보드 화면에서 &quot;시작하는 데 도움이됩니다&quot;라는 링크를 클릭해도 Cypress가 더 이상 충돌하지 않습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;# 227&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bf5e3314fe712144e121f79e85185a1edf085ad" translate="yes" xml:space="preserve">
          <source>Cypress no longer errors when you return a raw DOM element. It now correctly wraps this as the new subject.</source>
          <target state="translated">원시 DOM 요소를 반환 할 때 더 이상 Cypress 오류가 발생하지 않습니다. 이제 이것을 새로운 주제로 올바르게 포장합니다.</target>
        </trans-unit>
        <trans-unit id="662c993f158297753b787211ea7612cc9b9534aa" translate="yes" xml:space="preserve">
          <source>Cypress no longer incorrectly errors when calling &lt;code&gt;cy.window().screenshot()&lt;/code&gt;, &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; or &lt;code&gt;cy.window().trigger()&lt;/code&gt; in an application with multiple iframes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;#4396&lt;/a&gt;.</source>
          <target state="translated">여러 iframe이있는 응용 프로그램에서 &lt;code&gt;cy.window().screenshot()&lt;/code&gt; , &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; 또는 &lt;code&gt;cy.window().trigger()&lt;/code&gt; 를 호출 할 때 더 이상 Cypress에서 오류가 발생하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;# 4396&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c9613de0a4beaefeee6631fab20cde459553391" translate="yes" xml:space="preserve">
          <source>Cypress no longer looks at your &lt;code&gt;tests&lt;/code&gt; directory for test files. Now, by default, it looks in the &lt;code&gt;cypress/integration&lt;/code&gt; directory.</source>
          <target state="translated">Cypress는 더 이상 테스트 파일 의 &lt;code&gt;tests&lt;/code&gt; 디렉토리를 찾지 않습니다 . 이제 기본적으로 &lt;code&gt;cypress/integration&lt;/code&gt; 디렉토리를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="81e39cec9615eb3ba1fd855e11e20064f46c86a3" translate="yes" xml:space="preserve">
          <source>Cypress no longer reports &lt;code&gt;Electron&lt;/code&gt; as the browser that ran in the Dashboard Service when a different browser was run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;#854&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 다른 브라우저를 실행할 때 대시 보드 서비스에서 실행 된 브라우저로 &lt;code&gt;Electron&lt;/code&gt; 을 보고하지 않습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;# 854&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8db1224dd2fc491a7132708262abf66a09cf8278" translate="yes" xml:space="preserve">
          <source>Cypress no longer watches files when run using &lt;code&gt;cypress run&lt;/code&gt;. This will fix some runs that were crashing with an &lt;code&gt;ENOSPC&lt;/code&gt; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;#4283&lt;/a&gt;.</source>
          <target state="translated">Cypress run을 사용하여 &lt;code&gt;cypress run&lt;/code&gt; 때 Cypress는 더 이상 파일을 감시하지 않습니다 . 이것은 &lt;code&gt;ENOSPC&lt;/code&gt; 오류 로 충돌했던 일부 실행을 수정 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;# 4283&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fd6ee3f44c165770366cf8839fc21620035e902" translate="yes" xml:space="preserve">
          <source>Cypress now &amp;ldquo;remembers&amp;rdquo; the last browser you had open and will suggest opening that whenever a project is opened. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;#193&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 마지막으로 연 브라우저를 &quot;기억&quot;하며 프로젝트를 열 때마다 해당 브라우저를 여는 것이 좋습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;# 193&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c129370f1a849563b825fbfa153c09b7124dffc" translate="yes" xml:space="preserve">
          <source>Cypress now always updates the remote URL whenever your application changes its URL through the vast variety of ways it can do this.</source>
          <target state="translated">Cypress는 이제 애플리케이션이이를 수행 할 수있는 다양한 방법을 통해 URL을 변경할 때마다 항상 원격 URL을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3f120c7e6289fdd1715635ddb9c82ab8c8fdc496" translate="yes" xml:space="preserve">
          <source>Cypress now applies cookies to the browser which were cleared between redirects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;#224&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 리디렉션간에 지워진 쿠키를 브라우저에 적용합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;# 224&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3603bc44f5cb1b55bb6efb44d02393248eb75beb" translate="yes" xml:space="preserve">
          <source>Cypress now auto reloads when spec files are modified in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;#712&lt;/a&gt;.</source>
          <target state="translated">사양 파일이 Windows에서 수정되면 Cypress가 자동으로 다시로드됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;# 712&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ed403f7be7af1f52f83aba547f1245b4f1fae132" translate="yes" xml:space="preserve">
          <source>Cypress now automatically detects and waits for an element which is animating to stop animating. The threshold that Cypress considers &lt;em&gt;animating&lt;/em&gt; is set to a distance of &lt;code&gt;5px&lt;/code&gt; per &lt;code&gt;60fps&lt;/code&gt;. In other words, if your element is moving too fast for a user to interact with, then Cypress considers the element animating and will wait until it finishes before attempting to interact with it. When we say &amp;lsquo;interact&amp;rsquo; we mean apply command actions like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, etc. Waiting for animations prevents a series of edge cases and weird bugs where Cypress was interacting with elements &lt;strong&gt;too&lt;/strong&gt; quickly which might cause undesired side effects in your application which are hard to track down. The downside to this implementation is that for every action Cypress must wait at least 2 run loops before applying actions. This slows down every action command by about &lt;code&gt;32ms&lt;/code&gt;. If your app does not use animations you may wish to turn off this behavior in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">Cypress는 이제 애니메이션을 적용 할 애니메이션 요소를 자동으로 감지하고 기다립니다. Cypress가 &lt;em&gt;애니메이션을&lt;/em&gt; 고려하는 임계 값 은 &lt;code&gt;60fps&lt;/code&gt; 당 &lt;code&gt;5px&lt;/code&gt; 의 거리로 설정됩니다 . 다시 말해, 요소가 사용자와 상호 작용하기에 너무 빠르게 움직이면 Cypress는 요소를 애니메이션으로 간주하고 요소가 상호 작용을 시도하기 전에 완료 될 때까지 기다립니다. 우리가 '상호 작용'을 말할 때 우리는 명령과 같은 조치 적용을 의미 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; 싸이프레스가 상호 작용 된 곳 애니메이션 방지를 위해 등, 엣지 케이스와 이상한 버그의 일련의 대기를 요소 &lt;strong&gt;도&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;빠르게 추적하기 어려운 응용 프로그램에서 원하지 않는 부작용을 일으킬 수 있습니다. 이 구현의 단점은 모든 조치에 대해 Cypress가 조치를 적용하기 전에 최소 2 개의 실행 루프를 기다려야한다는 것입니다. 이것은 모든 동작 명령을 약 &lt;code&gt;32ms&lt;/code&gt; 느리게합니다 . 앱에서 애니메이션을 사용하지 않는 경우 &lt;code&gt;cypress.json&lt;/code&gt; 파일 에서이 동작을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ba3a64733b69b3e91faaceacb6498168dbdf3a1" translate="yes" xml:space="preserve">
          <source>Cypress now automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and &lt;code&gt;NO_PROXY&lt;/code&gt; environment variables and proxies traffic accordingly through Cypress based on these values. This includes network traffic within your application under test, when downloading Cypress, and when accessing &amp;lsquo;Runs&amp;rsquo; within the Test Runner. Please read our new &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc to understand more about proxy configuration in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;#672&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;#733&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;#939&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;#1039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;#1459&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;#1469&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;#1470&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;#1541&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;#1608&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;#2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;#3855&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;#3865&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;#1401&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;#3857&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 자동으로 시스템의 읽 &lt;code&gt;HTTP_PROXY&lt;/code&gt; , &lt;code&gt;HTTPS_PROXY&lt;/code&gt; , 그리고 &lt;code&gt;NO_PROXY&lt;/code&gt; 이 값을 기준으로 싸이프레스을 통해 그에 따라 환경 변수와 프록시 트래픽. 여기에는 테스트중인 애플리케이션, Cypress를 다운로드 할 때 및 Test Runner 내에서 'Runs'에 액세스 할 때의 네트워크 트래픽이 포함됩니다. Cypress의 프록시 구성에 대한 자세한 내용을 보려면 새 &lt;a href=&quot;proxy-configuration&quot;&gt;프록시 구성&lt;/a&gt; 문서를 읽으십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;# 672&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;# 733&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;# 939&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;# 1039&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;# 1459&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;# 1469&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;# 1470&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;# 1541&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;# 1608&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;# 2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;# 3855&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;# 3865&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;# 1401&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;# 3857&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b2e6c8b6dea030866308e7fcc6cb0e7cf582019" translate="yes" xml:space="preserve">
          <source>Cypress now caches globally per version which prevents it from being installed multiple times across projects.</source>
          <target state="translated">Cypress는 이제 버전마다 전역으로 캐시하므로 여러 프로젝트에 여러 번 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ac2d5f8ebc9158a6a452af1a788c5b60982a897" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when the browser fails to connect. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;#333&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 올바르게시 종료 &lt;code&gt;cypress run&lt;/code&gt; 에 &lt;code&gt;linux&lt;/code&gt; 브라우저가 연결에 실패 할 때. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;# 333&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="cc910ea870f10321b946d125ca2c44f5bbf17ed6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when there is a spec bundle error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;#337&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 올바르게시 종료 &lt;code&gt;cypress run&lt;/code&gt; 에 &lt;code&gt;linux&lt;/code&gt; 스펙 번들 오류가있는 경우. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;# 337&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17dd40825f41486cd8bcceeacbf6bccef7d8a9d6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly handles &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events in situations where the browser has lost focus. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;#4039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;#1176&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 브라우저에서 포커스를 잃은 상황에서 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 이벤트를 올바르게 처리합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;# 4039&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;# 1176&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;# 1486을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="de62baf1a6070a4d5f3a9edd4a54a31a88239cb7" translate="yes" xml:space="preserve">
          <source>Cypress now correctly injects and handles pages which are missing a &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, a &lt;code&gt;&amp;lt;body&lt;/code&gt;&amp;gt;, or even an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag. Previously it would bomb on pages missing these tags.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;body&lt;/code&gt; &amp;gt; 또는 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 태그 가없는 페이지를 올바르게 주입하고 처리합니다 . 이전에는이 ​​태그가없는 페이지에서 폭탄이 터졌습니다.</target>
        </trans-unit>
        <trans-unit id="a4710a8994af4c326324976203ed3aeaa6712062" translate="yes" xml:space="preserve">
          <source>Cypress now correctly proxies WebSockets that are pointed at the local Cypress server (typically &lt;code&gt;localhost:2020&lt;/code&gt;). Because most users use &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt;, when Socket.io could not correctly connect over WebSockets it would fall back to XHR polling. You may notice many less XHR requests in your command log (which is the intended behavior).</source>
          <target state="translated">Cypress는 이제 로컬 Cypress 서버 (일반적으로 &lt;code&gt;localhost:2020&lt;/code&gt; )를 가리키는 WebSocket을 올바르게 프록시합니다 . 대부분의 사용자는 &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io를&lt;/a&gt; 사용하기 때문에 Socket.io가 WebSocket을 통해 올바르게 연결할 수없는 경우 XHR 폴링으로 대체됩니다. 명령 로그에 XHR 요청이 적을 수 있습니다 (예상 동작).</target>
        </trans-unit>
        <trans-unit id="1df56a88e64d6ea14f917641e8e78d9f267bd0e9" translate="yes" xml:space="preserve">
          <source>Cypress now correctly re-bundles files even when &lt;code&gt;watchForFileChanges&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;#446&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;#347&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;watchForFileChanges&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정된 경우에도 Cypress 는 파일을 올바르게 다시 번들링합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;# 446&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;# 347을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="91ae9e80a3f89597188fabb0e704a1964713f5da" translate="yes" xml:space="preserve">
          <source>Cypress now correctly sets cookies with &lt;code&gt;expirationDate&lt;/code&gt; in the past. Chrome did not handle these cookies as documented and our code did not take this into account. We also added a lot more &lt;code&gt;e2e&lt;/code&gt; tests around this behavior. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;#266&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 과거에 &lt;code&gt;expirationDate&lt;/code&gt; 가있는 쿠키를 올바르게 설정합니다 . Chrome은 이러한 쿠키를 문서화 된대로 처리하지 않았으며 코드는이를 고려하지 않았습니다. 또한 이 동작에 대해 더 많은 &lt;code&gt;e2e&lt;/code&gt; 테스트를 추가했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;# 266&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="04ffe7bc1e7acc791633cbef90e171705686d984" translate="yes" xml:space="preserve">
          <source>Cypress now correctly works offline on Windows when visiting a localhost URL. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;#4763&lt;/a&gt;.</source>
          <target state="translated">로컬 호스트 URL을 방문 할 때 Cypress가 Windows에서 오프라인으로 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;# 4763&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b4143f2f941aff81c8c1ad7e2e56426ab6acfc5" translate="yes" xml:space="preserve">
          <source>Cypress now detects more instances of &lt;code&gt;browser&lt;/code&gt; installations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;#3183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;#3218&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 더 많은 &lt;code&gt;browser&lt;/code&gt; 설치 인스턴스를 감지 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;# 3183&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;# 3218을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="4727c0d09f1978f4104e9fcadc3eaba6f4d87811" translate="yes" xml:space="preserve">
          <source>Cypress now detects the difference between a forced async &lt;code&gt;done&lt;/code&gt; test timeout vs a regular command timeout, and will throw the appropriate message indicating whether the user forgot to invoke &lt;code&gt;done&lt;/code&gt; or whether the timeout happened due to a command.</source>
          <target state="translated">싸이프레스는 현재 비동기 강제 차이 감지 &lt;code&gt;done&lt;/code&gt; 일반 명령 제한 시간 대 시험 시간 제한, 사용자가 호출하는 것을 잊었다 여부를 나타내는 적절한 메시지를 던질 것이다 &lt;code&gt;done&lt;/code&gt; 또는 시간 제한 명령으로 인해 발생 여부를.</target>
        </trans-unit>
        <trans-unit id="a0cd94a433b93cba5bd34d281a5d67123524fdf7" translate="yes" xml:space="preserve">
          <source>Cypress now detects when an async test is passed and not all commands have finished running. It will throw an explicit error message in this situation.</source>
          <target state="translated">Cypress는 이제 비동기 테스트가 통과 된 시점을 감지하고 일부 명령의 실행이 완료되지 않았습니다. 이 상황에서는 명시적인 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="744be5620fcce63aa0ae57f5536d83e6ae43f7cc" translate="yes" xml:space="preserve">
          <source>Cypress now displays a message when the Desktop App update is actually being applied instead of doing nothing and looking like it&amp;rsquo;s crashed.</source>
          <target state="translated">Cypress는 이제 데스크톱 앱 업데이트가 실제로 수행되고 충돌하는 것처럼 보이지 않고 실제로 적용되는 경우 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b68bd8e8c63f9f2332a0feb1d4bf064ecdffde86" translate="yes" xml:space="preserve">
          <source>Cypress now errors when the &lt;code&gt;body&lt;/code&gt; paramater passed to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; contains a circular reference. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;#4407&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 전달 된 &lt;code&gt;body&lt;/code&gt; paramater 에 순환 참조가 포함 되면 Cypress에서 오류가 발생합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;# 4407&lt;/a&gt; 에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cf0cd2929ec215c5295db280668b3ec042888c7c" translate="yes" xml:space="preserve">
          <source>Cypress now forces the initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not to be cached by the browser. This was incorrectly being cached which meant when you changed the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; it would not actually go out and fetch the new contents. Previously you had to check &lt;code&gt;Disable Cache&lt;/code&gt; in the &lt;code&gt;Network Tab&lt;/code&gt; inside of Chrome to prevent this bug. Unfortunately this has a significant performance drawback. If you use a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; before each test you will notice a degrade in performance because this request is no longer cached. This is a temporary problem until Cypress implements a more sophisticated caching strategy which optimizes these concerns. There is a lot to improve in this arena but it will take more time before it&amp;rsquo;s implemented.</source>
          <target state="translated">Cypress는 이제 브라우저 에서 초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 캐시하지 않도록합니다. 이것은 캐싱이 잘못되어 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 변경했을 때 실제로 나가서 새 내용을 가져 오지 않습니다. 이전에는 이 버그를 방지하기 위해 Chrome 내부의 &lt;code&gt;Network Tab&lt;/code&gt; 에서 &lt;code&gt;Disable Cache&lt;/code&gt; 를 선택해야했습니다 . 불행히도 이것은 상당한 성능 단점이 있습니다. 각 테스트 전에 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 사용하면 이 요청이 더 이상 캐시되지 않기 때문에 성능이 저하됩니다. Cypress가 이러한 문제를 최적화하는보다 정교한 캐싱 전략을 구현할 때까지 일시적인 문제입니다. 이 분야에서는 개선해야 할 것이 많지만 구현되기까지 시간이 더 걸릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="93202e47e1b4931127ee097a03291dfe2008d575" translate="yes" xml:space="preserve">
          <source>Cypress now handles &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; assertion chainers in a very specific way, providing a detailed message on failure, and utomatically slices out any stale element references.</source>
          <target state="translated">싸이프레스는 현재 핸들 &lt;code&gt;length&lt;/code&gt; 와 &lt;code&gt;exist&lt;/code&gt; 실패에 대한 자세한 메시지를 제공하는 매우 구체적인 방법으로 주장 chainers을하고 utomatically 어떤 오래된 요소 참조를 조각.</target>
        </trans-unit>
        <trans-unit id="704f19938a8e4d948d29770a5393e4746cb56a92" translate="yes" xml:space="preserve">
          <source>Cypress now handles events property when a DOM element is removed during a &lt;code&gt;.click()&lt;/code&gt; event. As per the spec, if &lt;code&gt;mousedown&lt;/code&gt; causes element removal then &lt;code&gt;mouseup&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events will not be fired. Additionally if removal happens during &lt;code&gt;mouseup&lt;/code&gt; then &lt;code&gt;click&lt;/code&gt; event will not be fired. Also updated the &lt;code&gt;onConsole&lt;/code&gt; groups to only display and indicate the events which actually fired. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;#109&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;.click()&lt;/code&gt; 이벤트 중에 DOM 요소가 제거 될 때 이벤트 속성을 처리합니다 . 사양에 따라 &lt;code&gt;mousedown&lt;/code&gt; 으로 인해 요소가 제거 &lt;code&gt;mouseup&lt;/code&gt; 및 &lt;code&gt;click&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 이벤트가 시작되지 않습니다. 제거시 발생하는 추가하면 &lt;code&gt;mouseup&lt;/code&gt; 에 다음 &lt;code&gt;click&lt;/code&gt; 이벤트가 발생되지 않습니다. 또한 실제로 발생한 이벤트 만 표시하고 표시 하도록 &lt;code&gt;onConsole&lt;/code&gt; 그룹을 업데이트했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;# 109&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e766ccfbec7c10396d6d3727f724c0b970370c" translate="yes" xml:space="preserve">
          <source>Cypress now has first class support for &lt;code&gt;fixtures&lt;/code&gt; (official docs coming soon).</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;fixtures&lt;/code&gt; 대한 일급 지원을 제공합니다 (공식 문서는 곧 제공 될 예정).</target>
        </trans-unit>
        <trans-unit id="4df17d172497053f90d37d5123e9f797232c685d" translate="yes" xml:space="preserve">
          <source>Cypress now logs out your project&amp;rsquo;s API key on a failed CI run.</source>
          <target state="translated">Cypress는 이제 실패한 CI 실행에서 프로젝트의 API 키를 로그 아웃합니다.</target>
        </trans-unit>
        <trans-unit id="8c99456315cf184735162f3a9cb2521c0d798d29" translate="yes" xml:space="preserve">
          <source>Cypress now looks for any npm proxy configuration values as a fallback when no other system proxy configuration is found. This brings this feature into parity with how npm reads off proxy configuration values during an &lt;code&gt;npm install&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;#4719&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 다른 시스템 프록시 구성이 없으면 npm 프록시 구성 값을 대체로 찾습니다. 이것은이 기능을 &lt;code&gt;npm install&lt;/code&gt; 중 npm이 프록시 구성 값을 읽는 방식과 동일합니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;# 4719&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84f1b05b1d93c2600eed83e37778c98d2231e9a1" translate="yes" xml:space="preserve">
          <source>Cypress now only scans for spec changes when the watcher sees changes, rather than polling to scan. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;#3069&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 감시자가 스캔 폴링이 아닌 변경 사항을 볼 때 사양 변경 사항 만 검색합니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;# 3069&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42dd184af721037a9900e5add91157700bd646a5" translate="yes" xml:space="preserve">
          <source>Cypress now outputs its version when passed the &lt;code&gt;--version&lt;/code&gt; argument</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; 인수를 전달하면 Cypress에서 버전을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="d7d4bec72af6de67265e487ea3f486ae4a571717" translate="yes" xml:space="preserve">
          <source>Cypress now overrides chai&amp;rsquo;s &lt;code&gt;match&lt;/code&gt; chainer and provides a specific error message when a non &lt;code&gt;regex&lt;/code&gt; value is provided. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;#58&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 차이의 &lt;code&gt;match&lt;/code&gt; 체인을 재정의 하고 &lt;code&gt;regex&lt;/code&gt; 이 아닌 값을 제공하면 특정 오류 메시지 를 제공합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;# 58&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="24f4c6eaeb2cb8adabb7ab908bfbcd82e9477b99" translate="yes" xml:space="preserve">
          <source>Cypress now properly handles typing JavaScript object prototype methods (like &lt;code&gt;hasOwnProperty&lt;/code&gt;) into &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;#3423&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 JavaScript 객체 프로토 타입 메소드 (예 : &lt;code&gt;hasOwnProperty&lt;/code&gt; )를 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 입력하는 것을 올바르게 처리합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;# 3423&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3168f20b1f0b45a27954dab14b95622ac9f6188e" translate="yes" xml:space="preserve">
          <source>Cypress now properly parses environment variables with empty values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;#3742&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 환경 변수를 빈 값으로 올바르게 구문 분석합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;# 3742&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72f538943ef99235ac80dd5a7be8cdffbee23823" translate="yes" xml:space="preserve">
          <source>Cypress now properly supports partial matching of string values for assertions &lt;code&gt;contain.text&lt;/code&gt;, &lt;code&gt;contain.html&lt;/code&gt;, and &lt;code&gt;contain.value&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;#1969&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 assertion &lt;code&gt;contain.text&lt;/code&gt; , &lt;code&gt;contain.html&lt;/code&gt; 및 &lt;code&gt;contain.value&lt;/code&gt; 대한 문자열 값의 부분 일치를 올바르게 지원합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;# 1969&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="52b5d0535dd1a71e0c59cedac1a5feb173e910fe" translate="yes" xml:space="preserve">
          <source>Cypress now requires a viewport to be issued at all times. By default it is &lt;code&gt;1000x660&lt;/code&gt; but can be changed in your &lt;code&gt;cypress.json&lt;/code&gt; file with he keys: &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt;.</source>
          <target state="translated">Cypress는 이제 뷰포트를 항상 발행해야합니다. 기본적으로는 &lt;code&gt;1000x660&lt;/code&gt; 이지만 변경 될 수 &lt;code&gt;cypress.json&lt;/code&gt; 의 그는 키 파일 : &lt;code&gt;viewportWidth&lt;/code&gt; 및 &lt;code&gt;viewportHeight&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f673d187b620c670db4b9b3aea919fd9a780c308" translate="yes" xml:space="preserve">
          <source>Cypress now retries multiple times (with a backoff strategy) when communicating with our API fails while recording runs. This will provide better feedback in situations when the API is temporarily unavailable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;#1590&lt;/a&gt;.</source>
          <target state="translated">녹음이 실행되는 동안 API와의 통신이 실패하면 Cypress는 여러 번 (백 오프 전략으로) 재 시도합니다. 이는 API를 일시적으로 사용할 수없는 상황에서 더 나은 피드백을 제공합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;# 1590&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b1a9d74cfa3ac161a7aecfa151401c4c6e7cb8c" translate="yes" xml:space="preserve">
          <source>Cypress now retries up to 3 times for the browser to connect during &lt;code&gt;cypress run&lt;/code&gt;. The warning / error messages were also updated to be clearer. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;#334&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;cypress run&lt;/code&gt; 중에 브라우저가 연결될 때까지 최대 3 번 재 시도합니다 . 경고 / 오류 메시지도보다 명확하게 업데이트되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;# 334&lt;/a&gt; 부분적으로 주소 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="e6d8726800d3f40efd84a65a018aab5ecc80b8d0" translate="yes" xml:space="preserve">
          <source>Cypress now scrolls all parent containers (not just &lt;code&gt;window&lt;/code&gt;) when attempting to &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;check an element&amp;rsquo;s actionability&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;#569&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;요소의 실행 가능성&lt;/a&gt; 을 검사 하려고 할 때 &lt;code&gt;window&lt;/code&gt; 뿐만 아니라 모든 상위 컨테이너를 스크롤합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;# 569&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="75c3210e180ed5b888dbaac9f9f2b823ad8e541d" translate="yes" xml:space="preserve">
          <source>Cypress now silently restarts the server whenever it detects a change to &lt;code&gt;cypress.json&lt;/code&gt; - meaning you no longer have to manually reboot the server for changes to be picked up.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;cypress.json&lt;/code&gt; 에 대한 변경 사항을 감지 할 때마다 서버를 자동으로 다시 시작합니다. 즉, 변경 사항을 적용하기 위해 더 이상 서버를 수동으로 재부팅 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="aeebc8b2da7b9ccb9e2e7bd76b842654098f814d" translate="yes" xml:space="preserve">
          <source>Cypress now throws a specific error message (with a link to further explanation) if you attempt to run commands outside of a test. Usually this happens accidentally when you write &lt;code&gt;cy.commands&lt;/code&gt; inside of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; block instead of the &lt;code&gt;it&lt;/code&gt;. I&amp;rsquo;ve wasted too much time and almost bombed entire presentations / demos so I&amp;rsquo;ve finally stopped this from ever happening again. If you ever see this error message, trust me, you will forever thank me.</source>
          <target state="translated">Cypress는 이제 테스트 외부에서 명령을 실행하려고하면 특정 오류 메시지 (추가 설명 링크와 함께)를 표시합니다. 당신이 쓸 때 보통이 실수로 발생 &lt;code&gt;cy.commands&lt;/code&gt; 내부의 &lt;code&gt;describe&lt;/code&gt; 또는 &lt;code&gt;context&lt;/code&gt; 대신 블록 &lt;code&gt;it&lt;/code&gt; . 나는 너무 많은 시간을 낭비하고 거의 모든 프레젠테이션 / 데모를 폭파했기 때문에 마침내 다시는 이런 일이 발생하는 것을 막았습니다. 이 오류 메시지가 표시되면 나를 믿어 주시면 영원히 감사하겠습니다.</target>
        </trans-unit>
        <trans-unit id="21ea85f8d7f19717172c574573373976dc8f7273" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; if any DOM member isn&amp;rsquo;t in the DOM, except for &lt;code&gt;exist&lt;/code&gt; assertions.</source>
          <target state="translated">싸이프레스는 현재에 발생 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 어떤 DOM 구성원을 제외하고는 DOM에없는 경우 &lt;code&gt;exist&lt;/code&gt; 주장.</target>
        </trans-unit>
        <trans-unit id="f8d94ca29f1aa37e5db8fe5c3b257d9755394b81" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;code&gt;eventually.have.length&lt;/code&gt; assertions. Use implicit &lt;code&gt;{length: n}&lt;/code&gt; command options instead.</source>
          <target state="translated">싸이프레스는 현재에 발생 &lt;code&gt;eventually.have.length&lt;/code&gt; 주장. 대신 암시 적 &lt;code&gt;{length: n}&lt;/code&gt; 명령 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d3c42c31ebf42b105f44851eeae9239942c944df" translate="yes" xml:space="preserve">
          <source>Cypress now uses the body instead of headers to send external requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;#148&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 헤더 대신 본문을 사용하여 외부 요청을 보냅니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;# 148&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56ec351e8d632a320060c36e80e1664a3d2bd1b5" translate="yes" xml:space="preserve">
          <source>Cypress now verifies it can run on your system prior to actually running. It&amp;rsquo;ll do this for each new version the first time you try to use it. Errors it receives from attempting to run will bubble up nicely, so you&amp;rsquo;ll get output for things like &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;missing linux dependencies&lt;/a&gt; instead of absolutely &lt;em&gt;nothing&lt;/em&gt; like before.</source>
          <target state="translated">Cypress는 이제 실제로 실행하기 전에 시스템에서 실행할 수 있는지 확인합니다. 처음 사용할 때마다 새 버전마다이 작업을 수행합니다. 당신 같은 것들에 대한 출력을 얻을 것이다, 그래서 잘 의지 거품을 실행하려고 시도 수신 오류 &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;리눅스 종속성이없는&lt;/a&gt; 대신에 절대적으로 &lt;em&gt;아무것도&lt;/em&gt; 전에있다.</target>
        </trans-unit>
        <trans-unit id="984f4ffa7852c85c3302af6478a0498d6343532e" translate="yes" xml:space="preserve">
          <source>Cypress now waits &lt;code&gt;20s&lt;/code&gt; (which matches &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;) for the new page to load instead of &lt;code&gt;4s&lt;/code&gt; previously.</source>
          <target state="translated">Cypress는 이제 새 페이지가 &lt;code&gt;4s&lt;/code&gt; 대신로드 될 때까지 &lt;code&gt;20s&lt;/code&gt; ( &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 와 일치 )를 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="01b0426deef0061b526f8597fa02ab47947651a5" translate="yes" xml:space="preserve">
          <source>Cypress now watches all the &lt;code&gt;plugins file&lt;/code&gt;&amp;lsquo;s entire dependency tree to make iterating on plugins easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;#1407&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 플러그인을보다 쉽게 ​​반복 할 수 있도록 모든 &lt;code&gt;plugins file&lt;/code&gt; 의 전체 종속성 트리를 감시합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;# 1407&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0561a236371729207fe6da2edefa2ac1e0c7e672" translate="yes" xml:space="preserve">
          <source>Cypress now works with JS applications that use &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt; routing (commonly known as &lt;code&gt;HTML5 History&lt;/code&gt;) without having to change any application code.</source>
          <target state="translated">Cypress는 이제 애플리케이션 코드를 변경하지 않고도 &lt;code&gt;pushState&lt;/code&gt; 및 &lt;code&gt;replaceState&lt;/code&gt; 라우팅 (일반적으로 &lt;code&gt;HTML5 History&lt;/code&gt; ) 을 사용하는 JS 애플리케이션과 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="328f444bd6f0a4d4b9f5d672125e108992bf7bae" translate="yes" xml:space="preserve">
          <source>Cypress offers several different timeout values based on the type of command.</source>
          <target state="translated">Cypress는 명령 유형에 따라 여러 가지 시간 초과 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="75c41c9b5e30ed427d48d319c908836d109428aa" translate="yes" xml:space="preserve">
          <source>Cypress only retries commands that query the DOM: &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt;, etc. You can check if a particular command is retried by looking at the &amp;ldquo;Assertions&amp;rdquo; section in its API documentation. For example, &amp;ldquo;Assertions section&amp;rdquo; of &lt;a href=&quot;../../api/commands/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; tells us that the command is retried until all assertions that follow it are passing.</source>
          <target state="translated">싸이프레스에만 재시도 명령이 쿼리 DOM : &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;.contains()&lt;/code&gt; &lt;/a&gt; 등 특정 명령이 자사의 API 설명서의 &quot;어설&quot;섹션을보고 시도하는 경우 당신은 확인할 수 있습니다. 예를 들어, &lt;a href=&quot;../../api/commands/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 의 &quot;어설 션 섹션&quot;은 명령을 따르는 모든 어설 션이 전달 될 때까지 명령이 재 시도됨을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="59e756cb2f95cf56d3bca3843c640a7f469ea40d" translate="yes" xml:space="preserve">
          <source>Cypress opens the test in a browser installed on your system. You can read more about how we do this in &lt;a href=&quot;../guides/launching-browsers&quot;&gt;Launching Browsers&lt;/a&gt;.</source>
          <target state="translated">Cypress는 시스템에 설치된 브라우저에서 테스트를 엽니 다. &lt;a href=&quot;../guides/launching-browsers&quot;&gt;브라우저 실행&lt;/a&gt; 에서이 작업을 수행하는 방법에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0173abbad11121f52075c8a906e19a118be30de" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai &lt;code&gt;exist&lt;/code&gt; assertion to really mean: &amp;ldquo;does this subject exist in the document?&amp;rdquo;</source>
          <target state="translated">Cypress는 차이 &lt;code&gt;exist&lt;/code&gt; 한다는 단언을 실제로 재정의 합니다 . &quot;이 주제가 문서에 존재합니까?&quot;</target>
        </trans-unit>
        <trans-unit id="146ca552c9473ccc324088efa1279a8217bec4cc" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai&amp;rsquo;s default inspection function for DOM elements meaning instead of seeing &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; you will now ee the nicely formatted Cypress DOM element like: &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; 대신에 DOM 요소 의미에 대한 차이의 기본 검사 기능을 재정의합니다. 이제 &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt; 와 같이 멋지게 형식화 된 Cypress DOM 요소를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7afd5812efc2cb2bfbf2bce111de354aa70c6b4" translate="yes" xml:space="preserve">
          <source>Cypress plugin that adds &quot;extends&quot; support to the configuration file</source>
          <target state="translated">구성 파일에 &quot;확장&quot;지원을 추가하는 Cypress 플러그인</target>
        </trans-unit>
        <trans-unit id="211b9c09c3b0540e8cd94c7ce17d5bf126296d11" translate="yes" xml:space="preserve">
          <source>Cypress plugin that enables compatability with dotenv.</source>
          <target state="translated">dotenv와의 호환성을 가능하게하는 Cypress 플러그인.</target>
        </trans-unit>
        <trans-unit id="1ba12ffc00dffa77d9efcc522da0480f9945cd7b" translate="yes" xml:space="preserve">
          <source>Cypress preprocessor for bundling JavaScript via rollup</source>
          <target state="translated">롤업을 통해 JavaScript를 번들링하기위한 Cypress 전 처리기</target>
        </trans-unit>
        <trans-unit id="64d448eae4e8a6893333958b808048d2e7f256de" translate="yes" xml:space="preserve">
          <source>Cypress prevents you from being forced to always &amp;lsquo;act like a user&amp;rsquo; to generate the state of a given situation. With Cypress you can programmatically interact and control your application. You no longer have to use your UI to build up state.</source>
          <target state="translated">Cypress는 주어진 상황의 상태를 생성하기 위해 항상 '사용자처럼 행동'하도록 강요하지 않습니다. Cypress를 사용하면 프로그래밍 방식으로 애플리케이션과 상호 작용하고 애플리케이션을 제어 할 수 있습니다. 더 이상 상태를 구축하기 위해 UI를 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0901f17f6a6bfd86ef0e8bdc9965616ef93b875d" translate="yes" xml:space="preserve">
          <source>Cypress prints out a table of key events that detail the keys that were pressed when clicking on type within the &lt;a href=&quot;#Command-Log&quot;&gt;Command Log&lt;/a&gt;. Each character will contain the &lt;code&gt;which&lt;/code&gt; character code and the events that happened as a result of that key press.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;#Command-Log&quot;&gt;명령 로그&lt;/a&gt; 내에서 유형을 클릭 할 때 누른 키를 자세히 설명하는 주요 이벤트 테이블을 인쇄합니다 . 각 문자가 포함 &lt;code&gt;which&lt;/code&gt; 문자 코드와 그 키 프레스의 결과로 일어난 사건.</target>
        </trans-unit>
        <trans-unit id="30c4ca1628d1f2fc135ce180acaedd95781e4ac5" translate="yes" xml:space="preserve">
          <source>Cypress provides a nice &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt; that gives you a visual structure of suites, tests, and assertions. Soon you&amp;rsquo;ll also see commands, page events, network requests, and more.</source>
          <target state="translated">Cypress는 스위트, 테스트 및 어설 션의 시각적 구조를 제공하는 멋진 &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;테스트 러너&lt;/a&gt; 를 제공합니다. 곧 명령, 페이지 이벤트, 네트워크 요청 등도 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a5b7d9bd0b3cb9bb9f611633a4c8aae5b0ddab3" translate="yes" xml:space="preserve">
          <source>Cypress provides a simple but powerful algorithm when &lt;a href=&quot;interacting-with-elements&quot;&gt;interacting with elements.&lt;/a&gt;</source>
          <target state="translated">Cypress는 &lt;a href=&quot;interacting-with-elements&quot;&gt;요소와 상호 작용할&lt;/a&gt; 때 간단하지만 강력한 알고리즘을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7119a7722e27be27408050d772ff83cb2fc37abe" translate="yes" xml:space="preserve">
          <source>Cypress relies on many best-of-breed open source testing libraries to lend stability and familiarity to the platform from the get-go. If you&amp;rsquo;ve been testing in JavaScript, you&amp;rsquo;ll recognize many old friends in this list. Understand how we exploit them and hit the ground running with Cypress!</source>
          <target state="translated">Cypress는 동급 최강의 다양한 오픈 소스 테스트 라이브러리를 사용하여 안정성과 플랫폼 친숙성을 제공합니다. JavaScript로 테스트 한 경우이 목록에서 많은 옛 친구를 알아볼 수 있습니다. 우리가 어떻게 그것들을 악용하는지 이해하고 Cypress로 뛰어 들어보십시오!</target>
        </trans-unit>
        <trans-unit id="94d62bad629e117914d487019b841c0cd760fd4c" translate="yes" xml:space="preserve">
          <source>Cypress respects all default browser behavior when events are canceled.</source>
          <target state="translated">Cypress는 이벤트가 취소 될 때 모든 기본 브라우저 동작을 존중합니다.</target>
        </trans-unit>
        <trans-unit id="1aca486d8a9674fc068dbb213faf1eb126b6bf8d" translate="yes" xml:space="preserve">
          <source>Cypress respects not firing subsequent events if previous ones were canceled.</source>
          <target state="translated">Cypress는 이전 이벤트가 취소 된 경우 후속 이벤트를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b8f0d859d277d8becfc00ac96e5e1d797ba607d" translate="yes" xml:space="preserve">
          <source>Cypress runs a series of async lifecycle events that reset state between tests</source>
          <target state="translated">Cypress는 테스트 간 상태를 재설정하는 일련의 비동기 수명주기 이벤트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="84eee613666e00d11cbbab69e67875033066feba" translate="yes" xml:space="preserve">
          <source>Cypress runs as fast as your browser can render content. You can watch tests run in real time as you develop your applications. TDD FTW!</source>
          <target state="translated">Cypress는 브라우저가 컨텐츠를 렌더링 할 수있는 속도로 실행됩니다. 응용 프로그램을 개발할 때 테스트가 실시간으로 실행되는 것을 볼 수 있습니다. TDD FTW!</target>
        </trans-unit>
        <trans-unit id="652b35d8cbe457fb4f8dea21ac2f6bee59ef38af" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Configuration changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">Cypress는 각 사양 파일을 개별적으로 실행합니다. 사양간에 브라우저가 종료됩니다. 한 사양에서 변경된 구성은 다른 사양에서 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="993523b15d16a2320c718b9bd7eeab7048b6023f" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Environment variables added or changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">Cypress는 각 사양 파일을 개별적으로 실행합니다. 사양간에 브라우저가 종료됩니다. 한 스펙에서 추가되거나 변경된 환경 변수는 다른 스펙에서 보이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c2f59d18eff47414ce290463f65cbe49d47a359" translate="yes" xml:space="preserve">
          <source>Cypress runs several calculations to ensure an element can &lt;em&gt;actually&lt;/em&gt; be interacted with like a real user would. If you&amp;rsquo;re seeing this error, the solution is often obvious. You may need to &lt;em&gt;guard&lt;/em&gt; your commands (due to a timing or an animation issue).</source>
          <target state="translated">Cypress는 여러 가지 계산을 수행하여 요소 가 실제 사용자처럼 &lt;em&gt;실제로&lt;/em&gt; 상호 작용할 수 있도록합니다 . 이 오류가 표시되면 해결 방법이 분명합니다. 타이밍이나 애니메이션 문제로 인해 명령 을 &lt;em&gt;보호&lt;/em&gt; 해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4f200198c8ba764235a6c2c637121db6109d4e7" translate="yes" xml:space="preserve">
          <source>Cypress runs tests in a unique interactive runner that allows you to see commands as they execute while also viewing the application under test.</source>
          <target state="translated">Cypress는 고유 한 대화식 러너에서 테스트를 실행하여 테스트중인 애플리케이션을 보면서 명령이 실행될 때 명령을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e332a0c5a468947f22565f93f6dc999aed977f7" translate="yes" xml:space="preserve">
          <source>Cypress ships with &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. This allows you to write your tests in TypeScript. All that is required is a little bit of configuration.</source>
          <target state="translated">Cypress 는 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;공식 형식 선언&lt;/a&gt; 과 함께 제공됩니다 . 이를 통해 TypeScript에서 테스트를 작성할 수 있습니다. 필요한 것은 약간의 구성입니다.</target>
        </trans-unit>
        <trans-unit id="5c9a32a140f11895887c01b52c52843f2ff296c2" translate="yes" xml:space="preserve">
          <source>Cypress should run on &lt;strong&gt;all&lt;/strong&gt; CI providers. We have provided some example projects and configuration for some CI providers to help you get started.</source>
          <target state="translated">Cypress는 &lt;strong&gt;모든&lt;/strong&gt; CI 공급자 에서 실행해야합니다 . 시작하는 데 도움이되는 일부 CI 제공 업체를위한 일부 예제 프로젝트 및 구성을 제공했습니다.</target>
        </trans-unit>
        <trans-unit id="9f193d6f03ef2d0aa86e8bd9826847c232c8503a" translate="yes" xml:space="preserve">
          <source>Cypress should work with self signed SSL certificates now.</source>
          <target state="translated">Cypress는 이제 자체 서명 된 SSL 인증서와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="acc644f8041fb8424264f0835f0deccd81152ba2" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo; own execution in any way.</source>
          <target state="translated">Cypress 는 자체 하위 프로세스에서 &lt;code&gt;pluginsFile&lt;/code&gt; 을 생성 하므로 Cypress 자체가 실행되는 컨텍스트와 분리됩니다. 즉, 실수로 Cypress 자체 실행을 수정하거나 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6db4efc3fc67daf29a241dfe4721a71b035dbaa4" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo;s own execution in any way.</source>
          <target state="translated">Cypress 는 자체 자식 프로세스에서 &lt;code&gt;pluginsFile&lt;/code&gt; 을 생성 하므로 Cypress 자체가 실행되는 컨텍스트에서 격리됩니다. 즉, 어떤 방식 으로든 Cypress의 자체 실행을 실수로 수정하거나 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e5e547cc7614418821eb9d223a6953d496b64b40" translate="yes" xml:space="preserve">
          <source>Cypress supports both BDD (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;) and TDD (&lt;code&gt;assert&lt;/code&gt;) style assertions. &lt;a href=&quot;../references/assertions&quot;&gt;Read more about assertions.&lt;/a&gt;</source>
          <target state="translated">Cypress는 BDD ( &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ) 및 TDD ( &lt;code&gt;assert&lt;/code&gt; ) 스타일 어설 션을 모두 지원합니다 . &lt;a href=&quot;../references/assertions&quot;&gt;어설 션에 대해 자세히 알아보십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff507ca9cfd843fa195d0094c8b6d5053885bb9e" translate="yes" xml:space="preserve">
          <source>Cypress supports both ES2015 modules and CommonJS modules. You can import/require npm modules as well as local modules:</source>
          <target state="translated">Cypress는 ES2015 모듈과 CommonJS 모듈을 모두 지원합니다. npm 모듈과 로컬 모듈을 가져 오거나 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="038e3f502d60c8beca841390c095d4561733318b" translate="yes" xml:space="preserve">
          <source>Cypress supports custom reporters, whether local to your project or installed through &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.</source>
          <target state="translated">Cypress는 프로젝트에 로컬인지 또는 &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm을&lt;/a&gt; 통해 설치되었는지에 관계없이 사용자 지정 기자를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="6fc9f13371034d720435a8eb69b7cd6ab176fb37" translate="yes" xml:space="preserve">
          <source>Cypress takes snapshots of your application and enables you to time travel back to the state it was in when commands ran.</source>
          <target state="translated">Cypress는 응용 프로그램의 스냅 샷을 생성하여 명령 실행 당시의 상태로 시간 여행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe5be4836516e1e2770a2da478822eed0a699871" translate="yes" xml:space="preserve">
          <source>Cypress taskbar icon now displays correctly in OS X dark theme. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;#132&lt;/a&gt;.</source>
          <target state="translated">OS X 어두운 테마에서 Cypress 작업 표시 줄 아이콘이 올바르게 표시됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;# 132&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4972b25ec91ce75b0b59d3618328eb5e19b7cdd" translate="yes" xml:space="preserve">
          <source>Cypress tries to act like a human user would using the browser.</source>
          <target state="translated">Cypress는 사용자가 브라우저를 사용하는 것처럼 행동하려고합니다.</target>
        </trans-unit>
        <trans-unit id="479947688007d4c97106b916ae2f1db22b00a060" translate="yes" xml:space="preserve">
          <source>Cypress type definition now allow a &lt;code&gt;timeout&lt;/code&gt; option in &lt;a href=&quot;../../api/commands/hash&quot;&gt;&lt;code&gt;cy.hash()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;#3844&lt;/a&gt;.</source>
          <target state="translated">Cypress 유형 정의는 이제 &lt;a href=&quot;../../api/commands/hash&quot;&gt; &lt;code&gt;cy.hash()&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;timeout&lt;/code&gt; 옵션을 허용합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;# 3844&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f88b9ca448ccd87f8b6ec70c9370c6e14674014d" translate="yes" xml:space="preserve">
          <source>Cypress ultimately controls the entire automation process from top to bottom, which puts it in the unique position of being able to understand everything happening in and outside of the browser. This means Cypress is capable of delivering more consistent results than any other testing tool.</source>
          <target state="translated">Cypress는 궁극적으로 전체 자동화 프로세스를 위에서 아래로 제어하여 브라우저 내부 및 외부에서 발생하는 모든 것을 이해할 수있는 고유 한 위치에 배치합니다. 이는 Cypress가 다른 테스트 도구보다 더 일관된 결과를 제공 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4fc8460227cb9de3a009bcbf7aaffc8c72982fcb" translate="yes" xml:space="preserve">
          <source>Cypress used to automatically include any scripts in the &lt;code&gt;supportFolder&lt;/code&gt; before your test files. However, automatically including all the files in a certain directory is somewhat magical and unintuitive, and requires creating globals for the purpose of utility functions.</source>
          <target state="translated">Cypress는 테스트 파일 전에 &lt;code&gt;supportFolder&lt;/code&gt; 에 스크립트를 자동으로 포함시키는 데 사용됩니다 . 그러나 특정 디렉토리에 모든 파일을 자동으로 포함시키는 것은 다소 마술적이고 직관적이지 않으며 유틸리티 기능을 위해 전역을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6c3d8c071e04804ec8f333122fd456ddd01a77a" translate="yes" xml:space="preserve">
          <source>Cypress uses 2 different windows.</source>
          <target state="translated">Cypress는 2 개의 다른 창을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6853d537d62543dcc53050554902c96c0145fe4f" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@cypress/commit-info&lt;/a&gt; package to extract git information to associate with the run (e.g. branch, commit message, author).</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@ cypress / commit-info&lt;/a&gt; 패키지를 사용하여 실행과 연관시킬 git 정보를 추출합니다 (예 : 분기, 커밋 메시지, 작성자).</target>
        </trans-unit>
        <trans-unit id="bb017039428bd9695548918b11321d9646f00783" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; node module for both the back end server process, and for everything running in the browser (called the driver).</source>
          <target state="translated">Cypress는 백엔드 서버 프로세스와 브라우저에서 실행중인 모든 항목 (드라이버라고 함)에 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt; &lt;code&gt;debug&lt;/code&gt; &lt;/a&gt; 노드 모듈을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="97e22057dbd51fd0e4767f5d9d5b6fe56128a778" translate="yes" xml:space="preserve">
          <source>Cypress uses your &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; and &lt;a href=&quot;#Record-key&quot;&gt;Record Key&lt;/a&gt; together to uniquely identify projects.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; 와 &lt;a href=&quot;#Record-key&quot;&gt;Record Key를&lt;/a&gt; 함께 사용하여 프로젝트를 고유하게 식별합니다.</target>
        </trans-unit>
        <trans-unit id="d28e3238226e8e5bf814bfa4ea1724d3591929fa" translate="yes" xml:space="preserve">
          <source>Cypress utilizes a Chrome extension within the Test Runner in order to run properly. If you or your company whitelist specific Chrome extensions, this may cause problems with running Cypress. You will want to ask your administrator to whitelist the Cypress extension ID below:</source>
          <target state="translated">Cypress는 Test Runner 내에서 Chrome 확장 프로그램을 사용하여 제대로 실행됩니다. 귀하 또는 회사에서 특정 Chrome 확장 프로그램을 허용 목록에 추가하면 Cypress 실행에 문제가 발생할 수 있습니다. 관리자에게 아래의 Cypress 확장 ID를 허용하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="e675859d662a062a4c171a9f1d08c57a4ca629d7" translate="yes" xml:space="preserve">
          <source>Cypress waits for Promises to resolve before continuing</source>
          <target state="translated">Cypress는 약속이 해결되기를 기다렸다가 계속합니다.</target>
        </trans-unit>
        <trans-unit id="c8c00835f4dc24cefa4efa7561d09d2e10eaa482" translate="yes" xml:space="preserve">
          <source>Cypress webpack Preprocessor</source>
          <target state="translated">Cypress 웹팩 전 처리기</target>
        </trans-unit>
        <trans-unit id="54d4f75b63aca1715daf3b46c5b502c77d230338" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.exec()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test cycle.</source>
          <target state="translated">싸이프레스는 할 &lt;em&gt;수 없습니다&lt;/em&gt; 때까지 다른 명령을 계속 실행 &lt;code&gt;cy.exec()&lt;/code&gt; 장기 실행 명령을 대폭 테스트주기를 느리게 있도록, 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="0609de7c3cdae19760f6f992063e6008dfcf272f" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.task()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test runs.</source>
          <target state="translated">싸이프레스는 할 &lt;em&gt;수 없습니다&lt;/em&gt; 때까지 다른 명령을 계속 실행 &lt;code&gt;cy.task()&lt;/code&gt; 장기 실행 명령을 대폭 테스트 실행 속도를 느리게 있도록, 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="406c613e6876b8de52afdd2fa25e20b62f46f937" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;strip off&lt;/em&gt; the &lt;code&gt;CYPRESS_&lt;/code&gt; when adding your environment variables.</source>
          <target state="translated">싸이프레스는 것이다 &lt;em&gt;벗겨 &lt;/em&gt; &lt;code&gt;CYPRESS_&lt;/code&gt; 를 환경 변수를 추가 할 때.</target>
        </trans-unit>
        <trans-unit id="3b1e056fcee4b7be242d9b9374156e4ae810a750" translate="yes" xml:space="preserve">
          <source>Cypress will assign each spec file to an available machine based on our &lt;a href=&quot;#Balance-strategy&quot;&gt;balance strategy&lt;/a&gt;. Due to this balance strategy, the run order of the spec files is not guaranteed when parallelized.</source>
          <target state="translated">Cypress는 당사의 &lt;a href=&quot;#Balance-strategy&quot;&gt;균형 전략&lt;/a&gt; 에 따라 각 사양 파일을 사용 가능한 머신에 할당합니다 . 이 밸런스 전략으로 인해 스펙 파일의 실행 순서는 병렬화 될 때 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e71366c925d9bca56f0b4179d4e45622fb21fad9" translate="yes" xml:space="preserve">
          <source>Cypress will automatically &lt;em&gt;wait&lt;/em&gt; for elements to pass their default assertions. Just like with explicit assertions you&amp;rsquo;ve added, all of these assertions share the &lt;em&gt;same&lt;/em&gt; timeout values.</source>
          <target state="translated">Cypress는 요소가 기본 어설 션을 전달할 &lt;em&gt;때까지&lt;/em&gt; 자동으로 &lt;em&gt;기다립니다&lt;/em&gt; . 추가 한 명시 적 어설 션과 마찬가지로 이러한 모든 어설 션은 &lt;em&gt;동일한&lt;/em&gt; 시간 초과 값을 공유 합니다.</target>
        </trans-unit>
        <trans-unit id="8fc70e89236c64d2239c242879042a3d4d1d96bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the right authorization headers if you&amp;rsquo;re attempting to visit an application that requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;Basic Authentication&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;기본 인증&lt;/a&gt; 이 필요한 응용 프로그램을 방문하려는 경우 Cypress가 올바른 인증 헤더를 자동으로 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="75afb223b9c8a43692cdba1ca3807b619bea5621" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="translated">Cypress는 자동으로 다음 &lt;code&gt;cy.visit()&lt;/code&gt; 경로를 적용하고 애플리케이션 코드가 실행되기 직전에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="3f9bcdd8a00e9ea3873797d9d170893ab1ae4b55" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the server and routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="translated">Cypress는 자동으로 서버를 적용하고 바로 다음 &lt;code&gt;cy.visit()&lt;/code&gt; 라우팅하며 응용 프로그램 코드가 실행되기 직전에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="53fd4f3428ed96a217bfd6ea8fc4d1515e5cf2b8" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attach this header at the network proxy level, outside of the browser. Therefore you &lt;strong&gt;will not&lt;/strong&gt; see this header in the Dev Tools.</source>
          <target state="translated">Cypress는이 헤더를 브라우저 외부의 네트워크 프록시 수준에서 자동으로 연결합니다. 따라서 개발자 도구에는이 헤더 &lt;strong&gt;가 표시되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7bc5d5de171bd5c733d073e432447ea2ecbf16d3" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host and &lt;code&gt;baseUrl&lt;/code&gt;&lt;strong&gt;is not defined&lt;/strong&gt;. The path should be relative to your project&amp;rsquo;s root folder (where the &lt;code&gt;cypress.json&lt;/code&gt; file is generated by default).</source>
          <target state="translated">호스트를 제공하지 않고 &lt;code&gt;baseUrl&lt;/code&gt; &lt;strong&gt;이 정의&lt;/strong&gt; 되지 않은 경우 Cypress는 자동으로 파일 제공을 시도합니다 . 경로는 프로젝트의 루트 폴더 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; 파일이 생성됨)에 상대적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="94c9314c2b4f0cc413e6e36af85e441eb6d5d3a6" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host. The path should be relative to your project&amp;rsquo;s root folder (where &lt;code&gt;cypress.json&lt;/code&gt; is located).</source>
          <target state="translated">Cypress는 호스트를 제공하지 않으면 자동으로 파일 서비스를 시도합니다. 경로는 프로젝트의 루트 폴더 ( &lt;code&gt;cypress.json&lt;/code&gt; 이있는 위치)에 상대적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d2f3c92bd2819310aa05480cbe7b24c2b403524" translate="yes" xml:space="preserve">
          <source>Cypress will automatically balance your spec files across the available machines in your CI provider. Cypress calculates which spec file to run based on the data collected from previous runs. This ensures that your spec files run as fast as possible, with no need for manual configuration.</source>
          <target state="translated">Cypress는 CI 공급자의 사용 가능한 시스템에서 사양 파일의 균형을 자동으로 조정합니다. Cypress는 이전 실행에서 수집 한 데이터를 기반으로 실행할 사양 파일을 계산합니다. 이를 통해 수동 구성없이 스펙 파일을 최대한 빠르게 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5bc0f3740be999ed993daff018d09755f5d0c0d" translate="yes" xml:space="preserve">
          <source>Cypress will automatically calculate a &lt;strong&gt;unique selector&lt;/strong&gt; to use targeted element by running through a series of selector strategies.</source>
          <target state="translated">Cypress는 일련의 선택기 전략을 실행하여 대상 요소를 사용할 &lt;strong&gt;고유 선택기&lt;/strong&gt; 를 자동으로 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="1c09141d31ee454fa40ad3e12fb02c509ba19807" translate="yes" xml:space="preserve">
          <source>Cypress will automatically clear all cookies &lt;strong&gt;before&lt;/strong&gt; each test run.</source>
          <target state="translated">Cypress는 각 테스트 실행 &lt;strong&gt;전에&lt;/strong&gt; 모든 쿠키 &lt;strong&gt;를&lt;/strong&gt; 자동으로 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="e5585ef906a49c34abd99817fa602271f93287bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically detect the type of browser supplied and launch it for you.</source>
          <target state="translated">Cypress가 자동으로 제공된 브라우저 유형을 감지하고이를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8b4fad3016d78365d8b99afdd0809a57b1a103ae" translate="yes" xml:space="preserve">
          <source>Cypress will automatically determine if an element is animating and wait until it stops.</source>
          <target state="translated">Cypress는 요소가 애니메이션 중인지 자동으로 확인하고 중지 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="23da5b17758d9e7d4f841343cbb8a6b0d4ff29bf" translate="yes" xml:space="preserve">
          <source>Cypress will continuously attempt to interact with the element until it eventually times out. If you&amp;rsquo;d like to force Cypress to interact with the element there are a few options:</source>
          <target state="translated">Cypress는 요소가 결국 시간 초과 될 때까지 지속적으로 요소와 상호 작용을 시도합니다. Cypress가 요소와 상호 작용하도록하려면 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="37b891f51aad5b809dd4cf0e5e34f297407b2fdf" translate="yes" xml:space="preserve">
          <source>Cypress will create a &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; to store the screenshots and videos taken during the testing of your application. Many users will opt to add these folders to their &lt;code&gt;.gitignore&lt;/code&gt; file. Additionally, if you are storing sensitive environment variables in your &lt;code&gt;cypress.json&lt;/code&gt; or &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt;&lt;code&gt;cypress.env.json&lt;/code&gt;&lt;/a&gt;, these should also be ignored when you check into source control.</source>
          <target state="translated">싸이프레스는 만듭니다 &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videosFolder&lt;/code&gt; &lt;/a&gt; 응용 프로그램의 테스트 기간 동안 촬영 한 스크린 샷과 동영상을 저장할 수 있습니다. 많은 사용자가이 폴더를 &lt;code&gt;.gitignore&lt;/code&gt; 파일 에 추가하도록 선택 합니다. 또한 &lt;code&gt;cypress.json&lt;/code&gt; 또는 &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt; &lt;code&gt;cypress.env.json&lt;/code&gt; &lt;/a&gt; 에 민감한 환경 변수를 저장하는 경우 소스 제어를 체크인 할 때 이러한 환경 변수 도 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1cb8fd34ae7f83f958af119167b50e6cf003b49" translate="yes" xml:space="preserve">
          <source>Cypress will error and exit with status 1 if no specs were found during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;#1585&lt;/a&gt;.</source>
          <target state="translated">Cypress를 &lt;code&gt;cypress run&lt;/code&gt; 하는 동안 사양을 찾지 못하면 Cypress가 오류가 발생하고 상태 1로 종료됩니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;# 1585&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="373c9016054078fb9acea27857f55ea29665668f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;input&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key modifies or changes the value of the element.</source>
          <target state="translated">싸이프레스는 발광합니다 &lt;code&gt;input&lt;/code&gt; &lt;em&gt;만&lt;/em&gt; 입력 키를 수정 또는 요소의 값을 변경하는 것이 경우입니다.</target>
        </trans-unit>
        <trans-unit id="627967f432d1ceb4757cb73a73a87d9091bc0d6f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;keypress&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if that key is supposed to actually fire &lt;code&gt;keypress&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 발광합니다 &lt;code&gt;keypress&lt;/code&gt; &lt;em&gt;경우에만&lt;/em&gt; 해당 키가 실제로 화재로 가정하면 &lt;code&gt;keypress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c53d051fa8bc8d03d8f5d5133be0a37808127e2" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;textInput&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key would have inserted an actual character.</source>
          <target state="translated">Cypress는 해당 키를 입력하면 실제 문자가 삽입 된 경우 &lt;em&gt;에만 &lt;/em&gt; &lt;code&gt;textInput&lt;/code&gt; 을 실행&lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7779f36036ddf9ea77e21c8f2ba5265d9196cc5e" translate="yes" xml:space="preserve">
          <source>Cypress will ignore this element preference order if you pass a selector argument to &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">Cypress는 selector 인수를 &lt;code&gt;.contains()&lt;/code&gt; 전달하면이 요소 기본 설정 순서를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="49e77e0383d1aa1a1f3c782bd0489a86f9de8325" translate="yes" xml:space="preserve">
          <source>Cypress will immediately fail with the following test code:</source>
          <target state="translated">Cypress는 다음 테스트 코드와 함께 즉시 실패합니다.</target>
        </trans-unit>
        <trans-unit id="48623dd3ef33bf76508adf868a3a2bad8137d3d3" translate="yes" xml:space="preserve">
          <source>Cypress will no longer incorrectly revert to a previous test run&amp;rsquo;s snapshot when tests are re-run.</source>
          <target state="translated">테스트를 다시 실행할 때 Cypress가 더 이상 이전 테스트 실행의 스냅 샷으로 잘못 되돌아 가지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fddad0e92489f19cbb4337c046170574053b9d4" translate="yes" xml:space="preserve">
          <source>Cypress will now &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;display the &lt;strong&gt;resolved&lt;/strong&gt; configuration values when you open a project&lt;/a&gt;. This tells you the source of all config values.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;프로젝트를 열 때 &lt;/a&gt;&lt;strong&gt;해결 된&lt;/strong&gt; 구성 값을 표시합니다&lt;strong&gt;&lt;/strong&gt; . 모든 구성 값의 소스를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="89dc61f3be6f61640026475b2ed988ca8ce68844" translate="yes" xml:space="preserve">
          <source>Cypress will now automatically prompt you to add a project when using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project that has not yet been added.</source>
          <target state="translated">Cypress는 이제 아직 추가되지 않은 프로젝트에서 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 사용할 때 프로젝트를 추가하라는 메시지를 자동으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="2bcf240396967ced122d7e48b9c1d58eb2ccc9b8" translate="yes" xml:space="preserve">
          <source>Cypress will now display &lt;code&gt;cypress.json&lt;/code&gt; parse errors when attempting to boot a project when there is a syntax error in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 이제 표시됩니다 &lt;code&gt;cypress.json&lt;/code&gt; 의 구문 오류가있는 경우 프로젝트를 부팅 할 때 구문 분석 오류를 &lt;code&gt;cypress.json&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="6f179a61c65d86072e367f13cd1cb9d33746394f" translate="yes" xml:space="preserve">
          <source>Cypress will now output its internal logger directly to the console when &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var is set.</source>
          <target state="translated">&lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var가 설정 되면 Cypress는 이제 내부 로거를 콘솔에 직접 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="2d1ef6bc49f222fca87099bb1aa6579caa469a68" translate="yes" xml:space="preserve">
          <source>Cypress will now scroll past multiple elements that cover up an element to be interacted with. It also now factors in elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;#571&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;#565&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 상호 작용할 요소를 덮는 여러 요소를 스크롤합니다. 또한 이제 &lt;code&gt;position: sticky&lt;/code&gt; 요소를 고려 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;# 571&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;# 565를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="89757a0bd83b5d48651207fb2e50c0887e271566" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="translated">Cypress는 URL을 설정 한 경우 &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;네트워크 옵션&lt;/a&gt; 에서 구성된 &lt;code&gt;baseUrl&lt;/code&gt; 을 URL 앞에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fcbd547a9a0cf787be48e7eb4c0cc9f187cd6025" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="translated">설정 한 경우 Cypress는 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Global&quot;&gt;네트워크 옵션에&lt;/a&gt; 구성된 &lt;code&gt;baseUrl&lt;/code&gt; 을 URL 앞에 붙 입니다.</target>
        </trans-unit>
        <trans-unit id="2923d48f818119211f8df485af9cb43493e40b06" translate="yes" xml:space="preserve">
          <source>Cypress will resolve your command with whatever the final Cypress command yields.</source>
          <target state="translated">Cypress는 최종 Cypress 명령으로 산출 된 명령으로 명령을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="0b94a3e9f4bbac7f6edd3b8cd91bd0bd7542db67" translate="yes" xml:space="preserve">
          <source>Cypress will restore the viewport in the snapshot</source>
          <target state="translated">Cypress는 스냅 샷에서 뷰포트를 복원합니다</target>
        </trans-unit>
        <trans-unit id="5bc72c81e5b0dbdb649a52327f5ae530b6783eac" translate="yes" xml:space="preserve">
          <source>Cypress will retry for up to 10 seconds to find a visible element of class &lt;code&gt;mobile-nav&lt;/code&gt; with text containing &amp;ldquo;Home&amp;rdquo;. For more examples, read the &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;Timeouts&lt;/a&gt; section in the &amp;ldquo;Introduction to Cypress&amp;rdquo; guide.</source>
          <target state="translated">Cypress는 최대 10 초 동안 재 시도하여 &quot;홈&quot;이 포함 된 텍스트가 포함 된 &lt;code&gt;mobile-nav&lt;/code&gt; 클래스 요소를 찾습니다 . 더 많은 예를 보려면 &quot;Cypress 소개&quot;안내서 의 &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;시간 초과&lt;/a&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="14e1cf97edb633b6cef84f1bec344f3e26c2f25b" translate="yes" xml:space="preserve">
          <source>Cypress will then attempt to download a binary with this format: &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt;</source>
          <target state="translated">Cypress는 &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt; 형식으로 바이너리 다운로드를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ef5b8355a287fe73ff99a7efb88b3722d96d5950" translate="yes" xml:space="preserve">
          <source>Cypress will wait for the element to pass all of these checks for the duration of the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; (described in depth in the &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; core concept guide).</source>
          <target state="translated">Cypress는 요소가 &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt; 기간 동안 이러한 모든 검사를 통과 할 때까지 기다립니다 ( &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;기본 어설 션&lt;/a&gt; 핵심 개념 안내서 에 자세히 설명되어 있음 ).</target>
        </trans-unit>
        <trans-unit id="febb6785a1443da09d12c14f6b4fc04880e72315" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to connect to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to log in or record test runs.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../dashboard/introduction&quot;&gt;대시 보드 서비스&lt;/a&gt; 에 연결하여 테스트 실행에 로그인하거나 기록 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="031f5b422de01b60e0479e8e321945c6bf4e10ea" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to load web pages besides &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;localhost&lt;/code&gt; 이외의 웹 페이지를로드 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5ecc1917b985f6084f8df6dd1f46528c5b586781" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to warn you if your &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t available.</source>
          <target state="translated">&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; 을&lt;/a&gt; 사용할 수없는 경우 Cypress에서 경고를 표시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="75c2d8e90c94c986618f0cc3be1cee17c5de3951" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t resolve your commands until all of its assertions pass.</source>
          <target state="translated">Cypress는 모든 어설 션이 통과 될 때까지 명령을 해결하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fe3fb25bc32272d746a39562d1491cf3cb3c322" translate="yes" xml:space="preserve">
          <source>Cypress wraps all DOM queries with robust retry-and-timeout logic that better suits how real web apps work. We trade a minor change in how we find DOM elements for a major stability upgrade to all of our tests. Banishing flake for good!</source>
          <target state="translated">Cypress는 실제 웹 앱의 작동 방식에 더 적합한 강력한 재시도 및 타임 아웃 로직으로 모든 DOM 쿼리를 래핑합니다. 우리는 모든 테스트에 대한 주요 안정성 업그레이드를 위해 DOM 요소를 찾는 방법에 약간의 변화가 있습니다. 좋은 플레이크 플레이크!</target>
        </trans-unit>
        <trans-unit id="4100350f85b3c001978fb5bd18e2b8283720ba94" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; internal &lt;code&gt;babel&lt;/code&gt; will no longer attempt to load your project&amp;rsquo;s &lt;code&gt;.babelrc&lt;/code&gt;. This helps avoid potential version conflicts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;#312&lt;/a&gt;.</source>
          <target state="translated">Cypress의 내부 &lt;code&gt;babel&lt;/code&gt; 은 더 이상 프로젝트의 &lt;code&gt;.babelrc&lt;/code&gt; 로드를 시도하지 않습니다 . 이것은 잠재적 인 버전 충돌을 피하는 데 도움이됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;# 312&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8f2db94bca79e7029cf2807d70ac5b3241fdde73" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; parallelization strategy is file-based, so in order to utilize parallelization, your tests will need to be split across separate files.</source>
          <target state="translated">Cypress의 병렬화 전략은 파일 기반이므로 병렬화를 활용하려면 테스트를 별도의 파일로 분할해야합니다.</target>
        </trans-unit>
        <trans-unit id="abc99c30c06bda705ceec845c46d4a4e18c68fe2" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s APIs are built very differently from what you&amp;rsquo;re likely used to: but these design patterns are incredibly intentional. We&amp;rsquo;ll go into more detail later in this guide.</source>
          <target state="translated">Cypress의 API는 익숙한 것과는 매우 다르게 구축되지만 이러한 디자인 패턴은 엄청나게 의도적입니다. 이 가이드의 뒷부분에서 자세히 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="9a2cdd4f3bf1d8436b31a761930ca523a7747615" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s recognition of websites attempting framebusting has been updated to include framebusting code wrapped within &lt;code&gt;()&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;#3267&lt;/a&gt;</source>
          <target state="translated">프레임 버스트를 시도하는 웹 사이트에 대한 Cypress의 인식이 &lt;code&gt;()&lt;/code&gt; 안에 래핑 된 프레임 버스트 코드를 포함하도록 업데이트되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;# 3267&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66b17926d61640ed32ee971542023387239ac913" translate="yes" xml:space="preserve">
          <source>Cypress.$</source>
          <target state="translated">Cypress.$</target>
        </trans-unit>
        <trans-unit id="edf054799fd9a27e698e06bfb5c686d331620c52" translate="yes" xml:space="preserve">
          <source>Cypress.$ vs. cy.$$</source>
          <target state="translated">Cypress. $ 대 cy. $$</target>
        </trans-unit>
        <trans-unit id="189b5b340dd09a196c6d1da1bb40bed28e40e664" translate="yes" xml:space="preserve">
          <source>Cypress.Blob</source>
          <target state="translated">Cypress.Blob</target>
        </trans-unit>
        <trans-unit id="c1f7c100ebfa53ec89fd0852dc1ef6a6e5194998" translate="yes" xml:space="preserve">
          <source>Cypress.Cookies</source>
          <target state="translated">Cypress.Cookies</target>
        </trans-unit>
        <trans-unit id="bc363da76edadf66791aa9b232b5d879f34a7417" translate="yes" xml:space="preserve">
          <source>Cypress.Promise</source>
          <target state="translated">Cypress.Promise</target>
        </trans-unit>
        <trans-unit id="5ce7498b0244c0b2e293007e8df6457394962f77" translate="yes" xml:space="preserve">
          <source>Cypress.Screenshot</source>
          <target state="translated">Cypress.Screenshot</target>
        </trans-unit>
        <trans-unit id="e3f31cf625c64e519992fd9a557160bf7aacd536" translate="yes" xml:space="preserve">
          <source>Cypress.SelectorPlayground</source>
          <target state="translated">Cypress.SelectorPlayground</target>
        </trans-unit>
        <trans-unit id="34ae4903acad6585ae7e38b834b9236b5a51c37a" translate="yes" xml:space="preserve">
          <source>Cypress.Server</source>
          <target state="translated">Cypress.Server</target>
        </trans-unit>
        <trans-unit id="54d6f336939dfac4936db7a675545d1c454be51c" translate="yes" xml:space="preserve">
          <source>Cypress._</source>
          <target state="translated">Cypress._</target>
        </trans-unit>
        <trans-unit id="38aee7ce60c3cf0bfdbe493333480f2fc07f7dec" translate="yes" xml:space="preserve">
          <source>Cypress.addParentCommand() / Cypress.addDualCommand() / Cypress.addChildCommand() has been removed and replaced by Cypress.Commands.add()</source>
          <target state="translated">Cypress.addParentCommand () / Cypress.addDualCommand () / Cypress.addChildCommand ()가 제거되고 Cypress.Commands.add ()로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="8962d721dd9c7ac73251a37f00707f0c4fb16fb3" translate="yes" xml:space="preserve">
          <source>Cypress.arch</source>
          <target state="translated">Cypress.arch</target>
        </trans-unit>
        <trans-unit id="3be6d8c117d53974fe7883c45665db273d8130af" translate="yes" xml:space="preserve">
          <source>Cypress.browser</source>
          <target state="translated">Cypress.browser</target>
        </trans-unit>
        <trans-unit id="ae2b6d33ccd03711ee320fd83db92c1e20b462e4" translate="yes" xml:space="preserve">
          <source>Cypress.config</source>
          <target state="translated">Cypress.config</target>
        </trans-unit>
        <trans-unit id="718c9831c14fdf0f554ae6c92dfd790738648c97" translate="yes" xml:space="preserve">
          <source>Cypress.dom</source>
          <target state="translated">Cypress.dom</target>
        </trans-unit>
        <trans-unit id="e78d83f61d20ce8db3d99c52f7373d855d7162e6" translate="yes" xml:space="preserve">
          <source>Cypress.env</source>
          <target state="translated">Cypress.env</target>
        </trans-unit>
        <trans-unit id="389cf8bdebb3061a2da7f5b64c6500609c23c4f2" translate="yes" xml:space="preserve">
          <source>Cypress.isBrowser</source>
          <target state="translated">Cypress.isBrowser</target>
        </trans-unit>
        <trans-unit id="3f3a3836fb4094ee807d24662de168188d477d60" translate="yes" xml:space="preserve">
          <source>Cypress.isCy</source>
          <target state="translated">Cypress.isCy</target>
        </trans-unit>
        <trans-unit id="872e4ebcf7f8506b760930988f46ac8a5cfc904e" translate="yes" xml:space="preserve">
          <source>Cypress.log</source>
          <target state="translated">Cypress.log</target>
        </trans-unit>
        <trans-unit id="f9ed79a62532751aaf5257c1c6e3e389aa049fc8" translate="yes" xml:space="preserve">
          <source>Cypress.log()</source>
          <target state="translated">Cypress.log()</target>
        </trans-unit>
        <trans-unit id="13cbbc294769af7e07d4f4e358bab65f54aece6d" translate="yes" xml:space="preserve">
          <source>Cypress.minimatch</source>
          <target state="translated">Cypress.minimatch</target>
        </trans-unit>
        <trans-unit id="1378324e731b82bcc517e23f5825080965e600a0" translate="yes" xml:space="preserve">
          <source>Cypress.moment</source>
          <target state="translated">Cypress.moment</target>
        </trans-unit>
        <trans-unit id="efd21062160ac9c7215a8d85d8e0bf925f907e97" translate="yes" xml:space="preserve">
          <source>Cypress.platform</source>
          <target state="translated">Cypress.platform</target>
        </trans-unit>
        <trans-unit id="65bb8ad05023ed340ea18db3a543b83d5a06774d" translate="yes" xml:space="preserve">
          <source>Cypress.sinon</source>
          <target state="translated">Cypress.sinon</target>
        </trans-unit>
        <trans-unit id="ea4b110b0b641df79aff5ef4583b701477ded5a5" translate="yes" xml:space="preserve">
          <source>Cypress.spec</source>
          <target state="translated">Cypress.spec</target>
        </trans-unit>
        <trans-unit id="8b78be8c41500c1cc7b574e782c821c439f2705b" translate="yes" xml:space="preserve">
          <source>Cypress.version</source>
          <target state="translated">Cypress.version</target>
        </trans-unit>
        <trans-unit id="9dbaf1b497f642fc5077a00743bd4c592254a2cf" translate="yes" xml:space="preserve">
          <source>CypressError: Timed out retrying: Expected to find element: &amp;lsquo;&amp;hellip;&amp;rsquo;, but never found it. Queried from element: &amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="translated">CypressError : 재시도 시간 초과 : 요소 : '&amp;hellip;'을 (를) 찾을 것으로 예상했지만 찾지 못했습니다. 요소에서 쿼리 : &amp;lt;&amp;hellip;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="806b2ff53cd2bfa7527e0fceb87c041ecaccb1f3" translate="yes" xml:space="preserve">
          <source>DOM Elements</source>
          <target state="translated">DOM 요소</target>
        </trans-unit>
        <trans-unit id="46a30029edb9f134295b2bdef3e55f483f2e18a8" translate="yes" xml:space="preserve">
          <source>DOM commands which can retry now correctly support &lt;code&gt;{timeout: num}&lt;/code&gt; options which will raise the timeout beyond the standard &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">재 시도 할 수있는 DOM 명령은 이제 &lt;code&gt;{timeout: num}&lt;/code&gt; 옵션을 지원 하여 표준 &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt; 보다 시간 초과를 증가시킵니다 .</target>
        </trans-unit>
        <trans-unit id="0550ac43b754afc13499c39a83489992e4a0f17d" translate="yes" xml:space="preserve">
          <source>DOM element</source>
          <target state="translated">DOM 요소</target>
        </trans-unit>
        <trans-unit id="f873a1aac119c9afd1611e5c7de8d7ea8b257520" translate="yes" xml:space="preserve">
          <source>DOM state</source>
          <target state="translated">DOM 상태</target>
        </trans-unit>
        <trans-unit id="e897a6e6446020dfb7ef098df202bcc255e30e9c" translate="yes" xml:space="preserve">
          <source>Dangling state is your friend:</source>
          <target state="translated">매달려있는 상태는 당신의 친구입니다 :</target>
        </trans-unit>
        <trans-unit id="d87f47b47e4d5794d53fe0734c49417bd046cde0" translate="yes" xml:space="preserve">
          <source>Dashboard</source>
          <target state="translated">Dashboard</target>
        </trans-unit>
        <trans-unit id="d76039c62c0c0760db5d9e7f5e49044f82b0485b" translate="yes" xml:space="preserve">
          <source>Dashboard Service</source>
          <target state="translated">대시 보드 서비스</target>
        </trans-unit>
        <trans-unit id="170b64341d044d8b026478c6319fd302d29b2fdc" translate="yes" xml:space="preserve">
          <source>Dashboard redesign</source>
          <target state="translated">대시 보드 재 설계</target>
        </trans-unit>
        <trans-unit id="160d689ae355cbd067de0a3700069f34acfbb9f2" translate="yes" xml:space="preserve">
          <source>Date Inputs</source>
          <target state="translated">날짜 입력</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="9a0e7dc97fa6276fd01e10ae6394c1eb8228de5e" translate="yes" xml:space="preserve">
          <source>Debug Tests</source>
          <target state="translated">디버그 테스트</target>
        </trans-unit>
        <trans-unit id="caff9ed2c3b1a608de7ce91dc511ac835a257f72" translate="yes" xml:space="preserve">
          <source>Debug just like you always do</source>
          <target state="translated">항상 그렇듯이 디버그</target>
        </trans-unit>
        <trans-unit id="8df5e0f04e3242a95995ef4f5f6b88cd9f8c115a" translate="yes" xml:space="preserve">
          <source>Debug logs in the browser</source>
          <target state="translated">브라우저의 디버그 로그</target>
        </trans-unit>
        <trans-unit id="d36ec7235f19d642416fab523affd33299a76f5b" translate="yes" xml:space="preserve">
          <source>Debug the moment a test fails</source>
          <target state="translated">테스트가 실패한 순간을 디버그</target>
        </trans-unit>
        <trans-unit id="2582a032b66fb5fa3c7ff1b5cdce14c54e2e45d1" translate="yes" xml:space="preserve">
          <source>Debuggability</source>
          <target state="translated">Debuggability</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="18d225a83f7cd5b7c354d6876e5542ec3fee2ac2" translate="yes" xml:space="preserve">
          <source>Debugging commands</source>
          <target state="translated">디버깅 명령</target>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="translated">디버깅 테스트</target>
        </trans-unit>
        <trans-unit id="fdb2fb41843843a2f3f6412acbde67da5de89b98" translate="yes" xml:space="preserve">
          <source>Debugging will be turned on until you explicitly turn it off.</source>
          <target state="translated">디버깅은 명시 적으로 끌 때까지 켜집니다.</target>
        </trans-unit>
        <trans-unit id="ccba18044ef6b943060a02194e24763943b748cc" translate="yes" xml:space="preserve">
          <source>Dedicated file just for environment variables.</source>
          <target state="translated">환경 변수 전용 파일.</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="002755c76d6ad9dbc7b8957cb1d21b29856bd9b1" translate="yes" xml:space="preserve">
          <source>Default Assertions</source>
          <target state="translated">기본 어설 션</target>
        </trans-unit>
        <trans-unit id="d2b8594d4d7d046a39912315ba4f5c50bb8654e6" translate="yes" xml:space="preserve">
          <source>Default Encoding</source>
          <target state="translated">기본 인코딩</target>
        </trans-unit>
        <trans-unit id="54e853e380fbb256af90f1b6701ddb337a923884" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="816c6ed867c46778e2c5120dd4115f09bf0fcfa6" translate="yes" xml:space="preserve">
          <source>Default file existence assertion</source>
          <target state="translated">기본 파일 존재 선언</target>
        </trans-unit>
        <trans-unit id="f62121ead15cd30f91da94221ba3e0061cb6d766" translate="yes" xml:space="preserve">
          <source>Default height in pixels for the application under tests&amp;rsquo; viewport (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">테스트 뷰포트에서 응용 프로그램의 기본 높이 (픽셀 &lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 명령으로 재정의 )</target>
        </trans-unit>
        <trans-unit id="20d3505c9e34e3cf3574ca112bb4b9d4cabccb33" translate="yes" xml:space="preserve">
          <source>Default sizing</source>
          <target state="translated">기본 크기</target>
        </trans-unit>
        <trans-unit id="6c152d7b3d697c79123206cbb3b89719b8bc6948" translate="yes" xml:space="preserve">
          <source>Default width in pixels for the application under tests&amp;rsquo; viewport. (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">테스트 뷰포트에서 응용 프로그램의 기본 너비 (픽셀)입니다. ( &lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 명령으로 재정의 )</target>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="0f6d2dd789e22cb155c7072913772227f42e5717" translate="yes" xml:space="preserve">
          <source>Delay after each keypress</source>
          <target state="translated">각 키를 누른 후 지연</target>
        </trans-unit>
        <trans-unit id="1494a9bc47eade4e713274d7308e8e61ac3da965" translate="yes" xml:space="preserve">
          <source>Delay for stubbed responses (in ms)</source>
          <target state="translated">스텁 된 응답 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="6efc7502f2a86ff722fdd0112fb1115d4b074b07" translate="yes" xml:space="preserve">
          <source>Delaying a response</source>
          <target state="translated">응답 지연</target>
        </trans-unit>
        <trans-unit id="33be56c36fa5e38e5e688193ca7f6f702b826f70" translate="yes" xml:space="preserve">
          <source>Delete Org</source>
          <target state="translated">조직 삭제</target>
        </trans-unit>
        <trans-unit id="420e6c8542560092e7fc39bbeb23e047d89d5246" translate="yes" xml:space="preserve">
          <source>Delete Project</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="3b1305de44f5d95c0a738507026058e37778d4e9" translate="yes" xml:space="preserve">
          <source>Delete everything in the &lt;code&gt;cy&lt;/code&gt; folder</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 폴더의 모든 것을 삭제하십시오</target>
        </trans-unit>
        <trans-unit id="2700d851334adc622290d4f549953756d2c513dc" translate="yes" xml:space="preserve">
          <source>Delete or rename any policy keys found. &lt;em&gt;Make sure to back up your registry before making any changes.&lt;/em&gt;</source>
          <target state="translated">찾은 정책 키를 삭제하거나 이름을 바꿉니다. &lt;em&gt;변경하기 전에 레지스트리를 백업하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9746bd7b8996d19acab4816d5dec7e68b572f1a" translate="yes" xml:space="preserve">
          <source>Delete organization</source>
          <target state="translated">조직 삭제</target>
        </trans-unit>
        <trans-unit id="af1456f256eb207ff5bde5300956b6698a8691f3" translate="yes" xml:space="preserve">
          <source>Delete project</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="0af4affe8515cf0856411712afe2f0527747a5de" translate="yes" xml:space="preserve">
          <source>Delete projects</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="feb33acc4731ff34926d72c31d06392b91d753e7" translate="yes" xml:space="preserve">
          <source>Delete record key</source>
          <target state="translated">레코드 키 삭제</target>
        </trans-unit>
        <trans-unit id="92c32160a9388fa88af4b8a22260735c7b9003f6" translate="yes" xml:space="preserve">
          <source>Delete the recorded video if the spec passed</source>
          <target state="translated">사양을 통과 한 경우 녹화 된 비디오 삭제</target>
        </trans-unit>
        <trans-unit id="fcbc0dabff7727d2a87aae3bdba3f6bf52d70cc0" translate="yes" xml:space="preserve">
          <source>Deletes character to the left of the cursor</source>
          <target state="translated">커서 왼쪽의 문자를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="c34fdc5b502ecda0c1ed651ed848ae26646b39d6" translate="yes" xml:space="preserve">
          <source>Deletes character to the right of the cursor</source>
          <target state="translated">커서 오른쪽의 문자를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bb7f45f4c64879fbbc128a63557b3980aa0c08b7" translate="yes" xml:space="preserve">
          <source>Depending on how your application is built - it&amp;rsquo;s likely that your web application is going to be affected and controlled by the server.</source>
          <target state="translated">응용 프로그램 작성 방법에 따라 웹 응용 프로그램이 서버에 의해 영향을 받고 제어 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b3e653f740f4c749bb60f9032135226fe2bca4" translate="yes" xml:space="preserve">
          <source>Depending on which CI provider you use, you may need a config file. You&amp;rsquo;ll want to refer to your CI provider&amp;rsquo;s documentation to know where to add the commands to install and run Cypress. For more configuration examples check out our &lt;a href=&quot;#Examples&quot;&gt;examples&lt;/a&gt;.</source>
          <target state="translated">사용하는 CI 공급자에 따라 구성 파일이 필요할 수 있습니다. Cypress를 설치하고 실행하기위한 명령을 추가 할 위치를 알려면 CI 제공 업체의 설명서를 참조하십시오. 더 구성 예를 들어 우리의 체크 아웃 &lt;a href=&quot;#Examples&quot;&gt;예&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c2d93153fa250fddf0385d9f74ce9c2c826d8d1" translate="yes" xml:space="preserve">
          <source>Depends</source>
          <target state="translated">Depends</target>
        </trans-unit>
        <trans-unit id="50abff28ab37908b3cf44d9dd0633b6d4b22b266" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;Cypress.command&lt;/code&gt;, instead use &lt;code&gt;Cypress.Log.command&lt;/code&gt; to output a Command Log. Updated scaffolding on new projects to reflect this change.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;code&gt;Cypress.command&lt;/code&gt; 대신 &lt;code&gt;Cypress.Log.command&lt;/code&gt; 를 사용 하여 명령 로그를 출력하십시오. 이 변경 사항을 반영하여 새 프로젝트에서 스캐 폴딩을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="ba54f6b3c94f4e85ea94aed4682b686d83030e3f" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;failOnStatus&lt;/code&gt; property for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and renamed to &lt;code&gt;failOnStatusCode&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;#323&lt;/a&gt;.</source>
          <target state="translated">추천되고 있지 않습니다 &lt;code&gt;failOnStatus&lt;/code&gt; 에 대한 특성 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 과로 변경 &lt;code&gt;failOnStatusCode&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;# 323&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="66770177d31590d18f83f5f18a84734f24f8f4e6" translate="yes" xml:space="preserve">
          <source>Deprecated all &lt;em&gt;Command Options&lt;/em&gt;. You will see a very nice and simple error message explaining how to convert these to assertions.</source>
          <target state="translated">모든 &lt;em&gt;명령 옵션은 더 이상&lt;/em&gt; 사용되지 않습니다 . 이를 어설 션으로 변환하는 방법을 설명하는 매우 훌륭하고 간단한 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cf0084835e26a00ac74a24b9e2202ccebf7aef5f" translate="yes" xml:space="preserve">
          <source>Deprecated the undocumented &lt;code&gt;cy.agents&lt;/code&gt; function, but it will continue to work and will be officially removed later.</source>
          <target state="translated">문서화되지 않은 &lt;code&gt;cy.agents&lt;/code&gt; 함수 는 더 이상 사용되지 않지만 계속 작동하며 나중에 공식적으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4455c33618f7e8493a6b401536a49ec647474555" translate="yes" xml:space="preserve">
          <source>Desktop App debug logs no longer sort in the wrong direction.</source>
          <target state="translated">데스크톱 앱 디버그 로그가 더 이상 잘못된 방향으로 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="988933533a2710eb7a91fcde76623e318e7fbdb7" translate="yes" xml:space="preserve">
          <source>Desktop windows that are transparent no longer lose their box shadow.</source>
          <target state="translated">투명한 데스크탑 창은 더 이상 상자 그림자를 잃지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c524231967ba63ed27a4047efd69edcab3903bde" translate="yes" xml:space="preserve">
          <source>Despite the dozens of assertions Cypress makes available to you, sometimes the best test may make no assertions at all! How can this be? Aren&amp;rsquo;t assertions a basic part of testing?</source>
          <target state="translated">Cypress에서 제공하는 수십 개의 주장에도 불구하고 때로는 최고의 테스트로 주장 할 수없는 경우도 있습니다! 어떻게 이럴 수있어? 테스트의 기본 부분이 아닌가?</target>
        </trans-unit>
        <trans-unit id="43fd0711ccfe2275d37466226b0233e39e3bbc7f" translate="yes" xml:space="preserve">
          <source>Destination of Cypress binary that's downloaded and installed</source>
          <target state="translated">다운로드하여 설치 한 Cypress 바이너리 대상</target>
        </trans-unit>
        <trans-unit id="e07694df1980cebba49bc3ba950d5e71cf4c51ee" translate="yes" xml:space="preserve">
          <source>Detailed Logs</source>
          <target state="translated">자세한 로그</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="fb83fe74a2f1842353ec1873c1964e310a83b202" translate="yes" xml:space="preserve">
          <source>Details of each run are displayed including:</source>
          <target state="translated">다음을 포함하여 각 실행의 세부 사항이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bb7d191dd189fdfd0f18f9c2d05ca9e3ea5b13e0" translate="yes" xml:space="preserve">
          <source>Details of the run, including the project config, details about the browser and system, and the specs that will be run.</source>
          <target state="translated">프로젝트 구성, 브라우저 및 시스템에 대한 세부 정보, 실행할 사양을 포함한 실행 세부 정보입니다.</target>
        </trans-unit>
        <trans-unit id="9ea2bc7838653962322403e558ce6613ae145664" translate="yes" xml:space="preserve">
          <source>Details of the spec file&amp;rsquo;s results, including numbers of passes/failures/etc and details on the tests themselves.</source>
          <target state="translated">통과 / 실패 / 등의 수와 테스트 자체에 대한 세부 정보를 포함한 사양 파일의 결과에 대한 세부 정보입니다.</target>
        </trans-unit>
        <trans-unit id="555cf46ca85f56bbbbe3bc74c3062bf6293a590f" translate="yes" xml:space="preserve">
          <source>Details of the spec file, including the following properties:</source>
          <target state="translated">다음 속성을 포함한 사양 파일의 세부 정보 :</target>
        </trans-unit>
        <trans-unit id="88d5d989139784b14dd3b3fa8b5147b2b7b5f797" translate="yes" xml:space="preserve">
          <source>Detection of installed browsers has been improved. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;#511&lt;/a&gt;.</source>
          <target state="translated">설치된 브라우저 감지 기능이 향상되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;# 511&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="db851310f56d8f0ff1714344c6eb7c7fd6fb1d1b" translate="yes" xml:space="preserve">
          <source>Determine a unique selector for an element.</source>
          <target state="translated">요소의 고유 한 선택자를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="7bb199653d3610c7decb0d490dd2981c63993abc" translate="yes" xml:space="preserve">
          <source>Determines the order of preference for which selector is chosen for the element.</source>
          <target state="translated">요소에 대해 선택기가 선택된 우선 순위를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="translated">개발 도구</target>
        </trans-unit>
        <trans-unit id="880a74266b48446f72c4dd1688a1a3b42f91fdb9" translate="yes" xml:space="preserve">
          <source>Did you know that you can control how your custom commands appear in the Command Log? Read more about &lt;a href=&quot;#Command-Logging&quot;&gt;Command Logging&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 명령이 명령 로그에 표시되는 방식을 제어 할 수 있다는 것을 알고 있습니까? &lt;a href=&quot;#Command-Logging&quot;&gt;명령 로깅&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="29856a31b3d2a72b0f83ec3a5568909de02804cb" translate="yes" xml:space="preserve">
          <source>Did you know that you can use &lt;a href=&quot;#Multiple-Reporters&quot;&gt;multiple reporters&lt;/a&gt; with Mocha?</source>
          <target state="translated">모카와 함께 &lt;a href=&quot;#Multiple-Reporters&quot;&gt;여러 기자&lt;/a&gt; 를 사용할 수 있다는 것을 알고 있습니까?</target>
        </trans-unit>
        <trans-unit id="5103b3848b34841b08aca075bb9ffb66a229c5d2" translate="yes" xml:space="preserve">
          <source>Difference between cy.spy() and cy.stub()</source>
          <target state="translated">cy.spy ()와 cy.stub ()의 차이점</target>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="9f5371feae5752de4cf49862d8b24d4abe4ebb1c" translate="yes" xml:space="preserve">
          <source>Direct download</source>
          <target state="translated">직접 다운로드</target>
        </trans-unit>
        <trans-unit id="fd8e45bac7d354790ec0a82d8a61341bf8acd055" translate="yes" xml:space="preserve">
          <source>Direction</source>
          <target state="translated">Direction</target>
        </trans-unit>
        <trans-unit id="f36e1d9fb25e334cc42e35e16df46e7fa41007dc" translate="yes" xml:space="preserve">
          <source>Directories within specs whose names contain &lt;code&gt;.&lt;/code&gt; are now correctly read as directories instead of spec files within the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;#2423&lt;/a&gt;.</source>
          <target state="translated">이름이 포함 된 사양 내의 디렉토리 &lt;code&gt;.&lt;/code&gt; 이제 테스트 러너 내에서 스펙 파일 대신 디렉토리로 올바르게 읽 힙니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;# 2423&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="398dcecfd4c36348d8d1fb304911cd0747f9e0d4" translate="yes" xml:space="preserve">
          <source>Disability</source>
          <target state="translated">Disability</target>
        </trans-unit>
        <trans-unit id="ed8e3cd3ce02e4410e6e12ca08ee83ae07f21784" translate="yes" xml:space="preserve">
          <source>Disable PR comments</source>
          <target state="translated">PR 댓글 사용 안함</target>
        </trans-unit>
        <trans-unit id="1146eac3b93e81381a07b19dcc792dd0463a1126" translate="yes" xml:space="preserve">
          <source>Disable logging to Command Log</source>
          <target state="translated">명령 로그에 로깅 비활성화</target>
        </trans-unit>
        <trans-unit id="90f205a7a44758815d3eeeb446e126d244dd81bc" translate="yes" xml:space="preserve">
          <source>Disable screenshots on run failures</source>
          <target state="translated">실행 실패시 스크린 샷 비활성화</target>
        </trans-unit>
        <trans-unit id="5c8870696e9603555f5da0a578f2efe8889465bb" translate="yes" xml:space="preserve">
          <source>Disable status checks</source>
          <target state="translated">상태 확인 비활성화</target>
        </trans-unit>
        <trans-unit id="fd1c40c8e15a5906c64a3c1c5ea682eef54e14c7" translate="yes" xml:space="preserve">
          <source>Disabled Barriers</source>
          <target state="translated">장애인 장벽</target>
        </trans-unit>
        <trans-unit id="8101160ef461e1039c24259bf2164be36683138c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Autofill forms and passwords&amp;rsquo;.</source>
          <target state="translated">'양식 및 비밀번호 자동 완성'을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9b6a36172f19272186e514e359c9b8818b4e2b3c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Saving passwords&amp;rsquo;.</source>
          <target state="translated">'비밀번호 저장'을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="742385a8d2de3fd9fd56746a5254ec1868941389" translate="yes" xml:space="preserve">
          <source>Disables asking to become your primary browser.</source>
          <target state="translated">기본 브라우저가되도록 요청하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8820d327186eb9d36380d618891e1b140c1206c6" translate="yes" xml:space="preserve">
          <source>Disables background and renderer throttling.</source>
          <target state="translated">백그라운드 및 렌더러 조절을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="fdd97241499586fd718d26330dec9f95b9a31c0e" translate="yes" xml:space="preserve">
          <source>Disables background network traffic.</source>
          <target state="translated">백그라운드 네트워크 트래픽을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e78e3acd1f45b16a6377ece7fb25d3353f6d2137" translate="yes" xml:space="preserve">
          <source>Disables device discovery notifications.</source>
          <target state="translated">장치 검색 알림을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="bc575ad94c2c5e877021630cd9e2523adb5baee0" translate="yes" xml:space="preserve">
          <source>Disables language translations.</source>
          <target state="translated">언어 번역을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b4a57f31533828350e954cee620711fac5c8534c" translate="yes" xml:space="preserve">
          <source>Disables prompts requesting permission to use devices like cameras or mics</source>
          <target state="translated">카메라 또는 마이크와 같은 장치를 사용할 권한을 요청하는 메시지를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42c5847cb77a853d027e61065fb060f5e06690de" translate="yes" xml:space="preserve">
          <source>Disables restoring sessions.</source>
          <target state="translated">세션 복원을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="89814cefec4768db1bc31f96b05c4c237b94cc5d" translate="yes" xml:space="preserve">
          <source>Disables user gesture requirements for autoplaying videos.</source>
          <target state="translated">비디오 자동 재생에 대한 사용자 제스처 요구 사항을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d5e790b8e1c07601668944e5511a4907e8441ef9" translate="yes" xml:space="preserve">
          <source>Disabling Highlights</source>
          <target state="translated">하이라이트 비활성화</target>
        </trans-unit>
        <trans-unit id="cc630477b97f37b5346d341b023abd94ebc8ee13" translate="yes" xml:space="preserve">
          <source>Disabling Web Security</source>
          <target state="translated">웹 보안 비활성화</target>
        </trans-unit>
        <trans-unit id="331f9316062110e44524709e54652398a146845a" translate="yes" xml:space="preserve">
          <source>Display an empty message when there is no commit information on recorded runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;#1809&lt;/a&gt;.</source>
          <target state="translated">기록 된 실행에 대한 커밋 정보가 없으면 빈 메시지를 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;# 1809&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="02b9e351e3ff0d8e4c1c347bf7595c58700ffbfb" translate="yes" xml:space="preserve">
          <source>Display insecure content</source>
          <target state="translated">안전하지 않은 콘텐츠 표시</target>
        </trans-unit>
        <trans-unit id="840ffbdb7da30d2d58783c09ae67907da14db616" translate="yes" xml:space="preserve">
          <source>Display the Electron browser instead of running headlessly</source>
          <target state="translated">헤드리스없이 실행되는 Electron 브라우저 표시</target>
        </trans-unit>
        <trans-unit id="cbd09492de4e095dd361539936a9df005a6751c3" translate="yes" xml:space="preserve">
          <source>Displaying a credit card form from Stripe or Braintree.</source>
          <target state="translated">Stripe 또는 Braintree에서 신용 카드 양식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="48a624a965703205f1185b4de304082897da096c" translate="yes" xml:space="preserve">
          <source>Displaying an embedded login form from Auth0.</source>
          <target state="translated">Auth0에서 임베드 된 로그인 양식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a111098f149be53fc23d11071083e7908b8b4f8c" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;명령 로그에&lt;/a&gt; 명령을 표시합니다</target>
        </trans-unit>
        <trans-unit id="038bf304321f982eba52b2ec76a631d488e51344" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Command-Log&quot;&gt;명령 로그에&lt;/a&gt; 명령을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="15734e80c1b9ba09cae5e65347e5fe8e74b0dd80" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; include protocol: &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;</source>
          <target state="translated">프로토콜을 포함 하지 &lt;strong&gt;마십시오&lt;/strong&gt; : &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;https://&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f15f0f7d9eda009d36ae894bba131f289eb8ee8" translate="yes" xml:space="preserve">
          <source>Do It Yourself</source>
          <target state="translated">스스로 해</target>
        </trans-unit>
        <trans-unit id="1311dea644b9dfc4fba9ad13c38b9e662d415f4a" translate="yes" xml:space="preserve">
          <source>Do a shift + click</source>
          <target state="translated">교대 + 클릭</target>
        </trans-unit>
        <trans-unit id="27463dbe2fac87e1ae66eeb86a8f018f866cde9d" translate="yes" xml:space="preserve">
          <source>Do not error if element is not scrollable</source>
          <target state="translated">요소를 스크롤 할 수없는 경우 오류 없음</target>
        </trans-unit>
        <trans-unit id="d2da93e42ef992541100a9e65c6ecf631b9d82d9" translate="yes" xml:space="preserve">
          <source>Do not forget that &lt;strong&gt;Cypress commands are async&lt;/strong&gt;!</source>
          <target state="translated">&lt;strong&gt;Cypress 명령이 비동기&lt;/strong&gt; 임을 잊지 마십시오 !</target>
        </trans-unit>
        <trans-unit id="8b10ee7030fa005a21358e27e3bfe05066e85aa6" translate="yes" xml:space="preserve">
          <source>Do not use &lt;strong&gt;your UI&lt;/strong&gt; to login before each test.</source>
          <target state="translated">각 테스트 전에 &lt;strong&gt;UI&lt;/strong&gt; 를 사용 &lt;strong&gt;하여&lt;/strong&gt; 로그인 하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="bf2b432b6b037e09ea6c21f51f82ecc54cd52fc6" translate="yes" xml:space="preserve">
          <source>Do you see the difference? We were able to login without needing to actually use our UI. This saves an enormous amount of time visiting the login page, filling out the username, password, and waiting for the server to redirect us &lt;em&gt;before every test&lt;/em&gt;.</source>
          <target state="translated">차이점이 보입니까? 실제로 UI를 사용할 필요없이 로그인 할 수있었습니다. 이렇게하면 로그인 페이지를 방문하여 사용자 이름, 비밀번호를 채우고 &lt;em&gt;매 테스트 전에&lt;/em&gt; 서버가 우리를 리디렉션 할 때까지 기다리는 시간이 크게 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="f10bd5b89bb2c4162f229df774ba62b09745264e" translate="yes" xml:space="preserve">
          <source>Do you see the problem here? This test is non-deterministic. The &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will sometimes have the class &lt;code&gt;active&lt;/code&gt; and sometimes not. In &lt;strong&gt;most&lt;/strong&gt; cases, you cannot rely on the state of the DOM to determine what you should conditionally do.</source>
          <target state="translated">여기서 문제가 보입니까? 이 테스트는 비 결정적입니다. &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 때때로 클래스가됩니다 &lt;code&gt;active&lt;/code&gt; 때로는 없습니다. 에서는 &lt;strong&gt;대부분의&lt;/strong&gt; 경우, 당신은 당신이 조건부 무엇을해야하는지 결정하기 위해 DOM의 상태에 의존 할 수 없다.</target>
        </trans-unit>
        <trans-unit id="9d2998beff4e0d0f955bfa075992fe40291e784c" translate="yes" xml:space="preserve">
          <source>Do you see what happened?</source>
          <target state="translated">무슨 일이 있었는지 보입니까?</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="53048861edcc441aef057cfdcf1945349c9c8194" translate="yes" xml:space="preserve">
          <source>Docker images &amp;amp; CI examples</source>
          <target state="translated">도커 이미지 및 CI 예제</target>
        </trans-unit>
        <trans-unit id="3ab45e6d7829b9766d6ff47e9b891e5f334be013" translate="yes" xml:space="preserve">
          <source>Docker images providing all the dependencies to run Cypress in CI including browsers.</source>
          <target state="translated">브라우저를 포함하여 CI에서 Cypress를 실행하기위한 모든 종속성을 제공하는 Docker 이미지</target>
        </trans-unit>
        <trans-unit id="010995167a9dd41a6de0709b079946d48321e082" translate="yes" xml:space="preserve">
          <source>Docs have been updated for &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 에 대한 문서가 이러한 변경 사항을 반영 하도록 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="005a47d2fb03a50731ae30b6c4044b3033fcb234" translate="yes" xml:space="preserve">
          <source>Document how to accept or reject project transfers &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;#1474&lt;/a&gt;</source>
          <target state="translated">프로젝트 이전 승인 또는 거부 방법 문서 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;# 1474&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="fc0c182915c26250a85f0f9ed6247e647f87d451" translate="yes" xml:space="preserve">
          <source>Documentation Changes:</source>
          <target state="translated">설명서 변경 사항 :</target>
        </trans-unit>
        <trans-unit id="759ad5947a51fcfec123db9f79d9f3a1619fb67a" translate="yes" xml:space="preserve">
          <source>Documented new &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; flag and rewrote advanced install instructions to be clearer in &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Installing Cypress doc&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; 플래그를 문서화 하고 &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Cypress doc 설치&lt;/a&gt; 에서 더 명확하게하기 위해 고급 설치 지시 사항을 다시 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="804124d142a9215ba3fe1c6d4f221b741dd75b1e" translate="yes" xml:space="preserve">
          <source>Does NOT match &lt;code&gt;*.google.com&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*.google.com&lt;/code&gt; 과 일치하지 않습니다</target>
        </trans-unit>
        <trans-unit id="4933311284cb076566e3c8a210bb8b0e9c4cf5f7" translate="yes" xml:space="preserve">
          <source>Does not require any changes to files or configuration.</source>
          <target state="translated">파일이나 구성을 변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="41360c43377352d15fbf538e7feff1d8c8cb6950" translate="yes" xml:space="preserve">
          <source>Does not submit a form if the &lt;code&gt;submit&lt;/code&gt; button is disabled.</source>
          <target state="translated">&lt;code&gt;submit&lt;/code&gt; 버튼이 비활성화 된 경우 양식을 제출 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f001f441c49973f9c075e2f6c0d84e1d9a67af81" translate="yes" xml:space="preserve">
          <source>Does not submit a form if there are multiple inputs and no &lt;code&gt;submit&lt;/code&gt; button.</source>
          <target state="translated">여러 개의 입력이 있고 &lt;code&gt;submit&lt;/code&gt; 단추가 없으면 양식을 제출하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e76d1639df01aabfd04987b2f19edd4123d24766" translate="yes" xml:space="preserve">
          <source>Does the element have the &lt;code&gt;disabled&lt;/code&gt; attribute?</source>
          <target state="translated">요소에 &lt;code&gt;disabled&lt;/code&gt; 속성이 있습니까?</target>
        </trans-unit>
        <trans-unit id="4be96ac94609c064d42c764ea5a2fbc70050b26f" translate="yes" xml:space="preserve">
          <source>Doing conditional testing adds a huge problem - that the test writer themselves are unsure what the given state will be. In those situations, the only reliable way to have accurate tests is to embed this dynamic state in a reliable and consistent way.</source>
          <target state="translated">조건부 테스트를 수행하면 테스트 작성기 자체가 주어진 상태가 무엇인지 확실하지 않다는 큰 문제가 발생합니다. 이러한 상황에서 정확한 테스트를 수행 할 수있는 신뢰할 수있는 유일한 방법은이 동적 상태를 안정적이고 일관된 방식으로 포함시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ff36de09bae56472140cf3d594198b57d33cd6f6" translate="yes" xml:space="preserve">
          <source>Doing it this way can be faster, more accurate, and more scalable.</source>
          <target state="translated">이 방법을 사용하면 더 빠르고 정확하며 확장 가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b05a117580caa2d7c9bdbddcffb9e0b8adaa3c84" translate="yes" xml:space="preserve">
          <source>Doing so enables you to &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;guard&lt;/strong&gt; Cypress by ensuring the state of descendants matches what you expect without needing to query them individually with regular Cypress DOM commands.</source>
          <target state="translated">그렇게하면 일반 Cypress DOM 명령을 사용하여 하위 항목의 상태를 개별적으로 쿼리 할 필요없이 하위 항목의 상태가 예상과 일치하도록하여 Cypress 를 &lt;strong&gt;차단&lt;/strong&gt; 하고 &lt;strong&gt;보호&lt;/strong&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9252a916f17f66e91f0c1ddeb683a3b645b64409" translate="yes" xml:space="preserve">
          <source>Domain cookies are now proxied better. There&amp;rsquo;s still more work to do before they are 100% fixed but now most typical domain cookie scenarios should &amp;lsquo;just work&amp;rsquo;.</source>
          <target state="translated">도메인 쿠키가 이제 더 잘 프록시되었습니다. 100 % 고정되기 전에해야 할 일이 더 있지만 지금은 가장 일반적인 도메인 쿠키 시나리오가 '작동'해야합니다.</target>
        </trans-unit>
        <trans-unit id="29326ddd74116cd0ed38dea8b81437470812e7e7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t Stub Responses</source>
          <target state="translated">응답을 스텁하지 마십시오</target>
        </trans-unit>
        <trans-unit id="2440793f4d8df673a75dda05cd016806ceec833b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t click &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; links in your tests that navigate outside of your application. Likely this isn&amp;rsquo;t worth testing anyway. You should ask yourself: &lt;em&gt;What&amp;rsquo;s the point of clicking and going to another app?&lt;/em&gt; Likely all you care about is that the &lt;code&gt;href&lt;/code&gt; attribute matches what you expect. So make an assertion about that. You can see more strategies on testing anchor links &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;in our &amp;ldquo;Tab Handling and Links&amp;rdquo; example recipe&lt;/a&gt;.</source>
          <target state="translated">테스트에서 애플리케이션 외부를 탐색하는 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 링크를 클릭하지 마십시오 . 어쨌든 이것은 테스트 할 가치가 없습니다. 스스로에게 물어보아야합니다. &lt;em&gt;클릭하여 다른 앱으로 이동하는 시점은 무엇입니까? &lt;/em&gt;아마 당신이 관심있는 것은 &lt;code&gt;href&lt;/code&gt; 속성이 당신이 기대하는 것과 일치 한다는 것입니다. 따라서 그것에 대해 주장하십시오. &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;&quot;탭 처리 및 링크&quot;예제 레시피에서&lt;/a&gt; 앵커 링크 테스트에 대한 추가 전략을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f69247364224e2809c5dcd08d586bba0a61fc8ee" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t do things like:</source>
          <target state="translated">다음과 같은 일을하지 마십시오 :</target>
        </trans-unit>
        <trans-unit id="c7d6ca3f177805335da2804d73621c40575900f1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t feel obligated to pick just one method. It is common to use one strategy for local development but another when running in &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt;.</source>
          <target state="translated">한 가지 방법 만 선택해야 할 필요는 없습니다. &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt; 에서 실행할 때는 한 가지 전략을 로컬 개발에 사용하고 다른 전략을 사용하는 것이 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="fd86068b6f186471e5286c2d8319748d9d3c7620" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements based on CSS attributes such as: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; , &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;tag&lt;/code&gt; 와 같은 CSS 속성을 기반으로 요소를 타겟팅하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4f73a89bbc9d1ed1248febd0f7e5feb866c8c4f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements that may change their &lt;code&gt;textContent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;textContent&lt;/code&gt; 변경할 수있는 요소를 타겟팅하지 마십시오</target>
        </trans-unit>
        <trans-unit id="9d84a04c4d5f60e53855b9d15ea8d64e9b6d294e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from &lt;code&gt;cy.exec()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 에서 웹 서버를 시작하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="c9f4dd2e19ba725998261c574c1138fbc781fc82" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from within Cypress scripts. Read about &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">Cypress 스크립트 내에서 웹 서버를 시작하지 마십시오. 읽기에 대한 &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;모범 사례를&lt;/a&gt; 여기에.</target>
        </trans-unit>
        <trans-unit id="7b86dfe1262cedb7f475d85819953d5d837183ad" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use your UI to build up state! It&amp;rsquo;s enormously slow, cumbersome, and unnecessary.</source>
          <target state="translated">상태를 구축하기 위해 UI를 사용하지 마십시오! 엄청 느리고 번거롭고 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="2ed8bdfb9c67a2aaa6a686292bc2d7f0c1e38b98" translate="yes" xml:space="preserve">
          <source>Double click all buttons found on the page</source>
          <target state="translated">페이지에있는 모든 버튼을 두 번 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="c88cbfe5f88b710f974a3548e61fa24cf8310085" translate="yes" xml:space="preserve">
          <source>Double click an anchor link</source>
          <target state="translated">앵커 링크를 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="e6e36e36ac2ae01d2cda0107c467d31648a64c69" translate="yes" xml:space="preserve">
          <source>Double click with key combinations</source>
          <target state="translated">키 조합으로 더블 클릭</target>
        </trans-unit>
        <trans-unit id="2a748246d4c2e3297ee23c0ec852f041e00c6479" translate="yes" xml:space="preserve">
          <source>Double-click a DOM element.</source>
          <target state="translated">DOM 요소를 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="5c0285fa241de4bebad9da16f25ff89480e20ef5" translate="yes" xml:space="preserve">
          <source>Downgraded &lt;code&gt;parse-domain&lt;/code&gt; from 2.1.7 to 2.0.0 to avoid a regression released in &lt;code&gt;parse-domain&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">다운 그레이드 &lt;code&gt;parse-domain&lt;/code&gt; 2.1.7에서 2.0.0로는 출시 회귀 방지하기 위해 &lt;code&gt;parse-domain&lt;/code&gt; . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;# 3717&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fdc046382f0bac99e80bf6003b655106ec0c9b7" translate="yes" xml:space="preserve">
          <source>Download Cypress at latest version (platform auto-detected)</source>
          <target state="translated">Cypress 최신 버전 다운로드 (플랫폼 자동 감지)</target>
        </trans-unit>
        <trans-unit id="b98524a2f0e7d53a662d72dce710b24cc0dcdf47" translate="yes" xml:space="preserve">
          <source>Download Cypress for a specific platform and/or architecture</source>
          <target state="translated">특정 플랫폼 및 / 또는 아키텍처를위한 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="f2c8d0d2447b20ae7d8d9d08b342e860a278ad5a" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version</source>
          <target state="translated">지정된 버전으로 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="993c99b190aced0f3d6b471f5798820a143aa044" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version and platform and/or architecture</source>
          <target state="translated">지정된 버전 및 플랫폼 및 / 또는 아키텍처로 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="9c0282356e7a69a174a3186273098d4472cbbea9" translate="yes" xml:space="preserve">
          <source>Download URLs</source>
          <target state="translated">URL 다운로드</target>
        </trans-unit>
        <trans-unit id="42c7ab0b8b55bc8433ac41acb3a54a3b232832db" translate="yes" xml:space="preserve">
          <source>Download a PDF file</source>
          <target state="translated">PDF 파일 다운로드</target>
        </trans-unit>
        <trans-unit id="57771ee1491d17f3a369db0bd6694ea5fd2d0c1f" translate="yes" xml:space="preserve">
          <source>Download a file</source>
          <target state="translated">파일 다운로드</target>
        </trans-unit>
        <trans-unit id="2cce924335c43260c9cfe380ded635166e962e15" translate="yes" xml:space="preserve">
          <source>Download specific Chrome version</source>
          <target state="translated">특정 Chrome 버전 다운로드</target>
        </trans-unit>
        <trans-unit id="592191bc433379314714980c1eed899a4bb7877f" translate="yes" xml:space="preserve">
          <source>Downloads the Cypress binary though a mirror server</source>
          <target state="translated">미러 서버를 통해 Cypress 바이너리를 다운로드합니다</target>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="translated">끌어서 놓기</target>
        </trans-unit>
        <trans-unit id="b4d31820c40549826ef6dcceb8523192b3223ade" translate="yes" xml:space="preserve">
          <source>Drastically improved file watching on large projects with many tests. Instead of choking the CPU at nearly 100% indefinitely we now optimally watch the current working files for changes.</source>
          <target state="translated">많은 테스트로 대규모 프로젝트에서 파일 감시 기능이 대폭 향상되었습니다. CPU를 거의 100 % 무한정 질식시키는 대신 현재 작업 파일의 변경 사항을 최적으로 감시합니다.</target>
        </trans-unit>
        <trans-unit id="94be820e65bd3d316f5354bf4a4bcbc3169d6b52" translate="yes" xml:space="preserve">
          <source>Drastically simplified the architecture required for proxying.</source>
          <target state="translated">프록 싱에 필요한 아키텍처를 대폭 단순화했습니다.</target>
        </trans-unit>
        <trans-unit id="7816c4fc585f04f97450ce41299c72605c8c18bc" translate="yes" xml:space="preserve">
          <source>Drone</source>
          <target state="translated">Drone</target>
        </trans-unit>
        <trans-unit id="49569d6757d9473c3967128a5f81feb530b037cd" translate="yes" xml:space="preserve">
          <source>Dual Commands</source>
          <target state="translated">이중 명령</target>
        </trans-unit>
        <trans-unit id="99fbfd5e6265cea1e87f277219810a1bfefac857" translate="yes" xml:space="preserve">
          <source>Due to security upgrades, adding projects in previous versions will no longer work. Upgrade and everything should be okay.</source>
          <target state="translated">보안 업그레이드로 인해 이전 버전에서 프로젝트를 추가해도 더 이상 작동하지 않습니다. 업그레이드하면 모든 것이 정상입니다.</target>
        </trans-unit>
        <trans-unit id="480288621e2aefc91c805fcebc413ddf7c259e72" translate="yes" xml:space="preserve">
          <source>Duplicate, subsequent logs in the Command Log are now collapsed and can be expanded to view all logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;#1580&lt;/a&gt;.</source>
          <target state="translated">명령 로그의 중복 된 후속 로그가 이제 축소되고 모든 로그를보기 위해 확장 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;# 1580&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5dbba9e67374d2a30a91b1d549d55513b36c3412" translate="yes" xml:space="preserve">
          <source>Duration estimation is done separately for every browser the spec file was tested against. This is helpful since performance characteristics vary by browser, and therefore it is perfectly acceptable to see different duration estimates for each browser a spec file was tested against.</source>
          <target state="translated">스펙 파일이 테스트 된 모든 브라우저에 대해 기간 추정이 별도로 수행됩니다. 이는 성능 특성이 브라우저마다 다르기 때문에 유용하므로 스펙 파일을 테스트 한 각 브라우저에 대해 다른 지속 시간 추정값을 보는 것이 완벽하게 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="ef20b0a1babe355cc139c7fecf6f35f98f282dae" translate="yes" xml:space="preserve">
          <source>Duration taking and saving the screenshot (in milliseconds).</source>
          <target state="translated">스크린 샷을 찍고 저장하는 시간 (밀리 초).</target>
        </trans-unit>
        <trans-unit id="f657f89a392636e85ad17713e4c4933e5aff3a0b" translate="yes" xml:space="preserve">
          <source>During &lt;code&gt;cypress run&lt;/code&gt;, windows created with &lt;code&gt;window.open&lt;/code&gt; will no longer physically display. They are now correctly headless. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;#123&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 동안 &lt;code&gt;window.open&lt;/code&gt; 으로 생성 된 창이 더 이상 물리적으로 표시되지 않습니다. 그들은 이제 제대로 머리가 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;# 123&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9dca6ae612201a13c0f26e35f4d8b02dc0f672d7" translate="yes" xml:space="preserve">
          <source>During an update Cypress will now display the updating message in the same coordinates as when the app was open by clicking the tray icon.</source>
          <target state="translated">업데이트 중에 Cypress는 트레이 아이콘을 클릭하여 앱을 열었을 때와 동일한 좌표로 업데이트 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="03c3424a49203624a3e5f0a2af756f5600c7fd3b" translate="yes" xml:space="preserve">
          <source>During install of cypress, the Cypress binary is now downloaded to a global cache. This prevents multiple projects from downloading the same Cypress version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;#1300&lt;/a&gt;.</source>
          <target state="translated">cypress를 설치하는 동안 Cypress 바이너리가 전역 캐시로 다운로드됩니다. 여러 프로젝트가 동일한 Cypress 버전을 다운로드하지 못하게합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;# 1300&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4635ca402b107dc777e57a14a22ddf4d81058452" translate="yes" xml:space="preserve">
          <source>During parallelization mode or when grouping runs, Cypress will wait for a specified amount of time before completing the test run in case any more relevant work remains. This is to compensate for various scenarios where CI machines could be backed-up in a queue.</source>
          <target state="translated">병렬화 모드 또는 그룹화 실행 중에 Cypress는 더 많은 관련 작업이 남아있는 경우 테스트 실행을 완료하기 전에 지정된 시간 동안 기다립니다. 이는 CI 머신이 대기열에 백업 될 수있는 다양한 시나리오를 보완하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="7bf0facb87eaef3dc2db4a6f8672cede399a3f6a" translate="yes" xml:space="preserve">
          <source>During parallelization mode, the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; interacts with your CI machines to orchestrate the parallelization of a test run via &lt;a href=&quot;#Balance-strategy&quot;&gt;load-balancing&lt;/a&gt; of specs across available CI machines by the following process:</source>
          <target state="translated">병렬화 모드 동안 Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard 서비스는&lt;/a&gt; CI 시스템과 상호 작용 하여 다음 프로세스를 통해 사용 가능한 CI 시스템에서 사양의 &lt;a href=&quot;#Balance-strategy&quot;&gt;로드 밸런싱&lt;/a&gt; 을 통해 테스트 실행의 병렬화를 조정 합니다.</target>
        </trans-unit>
        <trans-unit id="38ea8471b6348617d0fe3b9854870b2c1045b2aa" translate="yes" xml:space="preserve">
          <source>During the test, the &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; command quickly found the rendered &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; item - and that item was the first and only &amp;ldquo;todo A&amp;rdquo; item. Our application was waiting 100ms before appending the second item &amp;ldquo;todo B&amp;rdquo; to the list. By the time the second item was added, Cypress had already &amp;ldquo;moved on&amp;rdquo;, working only with the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element. It only searched for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; inside the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, completely ignoring the newly created 2nd item.</source>
          <target state="translated">테스트 중에 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; 명령은 렌더링 된 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 항목을 빠르게 찾았 으며 해당 항목은 최초이자 유일한 &quot;todo A&quot;항목이었습니다. 우리의 응용 프로그램은 목록에 두 번째 항목 &quot;todo B&quot;를 추가하기 전에 100ms를 기다리고있었습니다. 두 번째 항목이 추가 될 때 Cypress는 이미 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 에서만 작동하는 &quot;이동&quot;했습니다 . 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 내에서 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 만 검색 했으며 새로 작성된 두 번째 항목을 완전히 무시했습니다.</target>
        </trans-unit>
        <trans-unit id="136a0fb8d8e75eaec9777cdc1797bac23955292a" translate="yes" xml:space="preserve">
          <source>Dynamic tests split across parallel CI nodes with Knapsack Pro Queue Mode to get faster CI builds. Note - this is 3rd party implementation, different from the Cypress Dashboard parallelization.</source>
          <target state="translated">더 빠른 CI 빌드를 위해 동적 테스트가 Knapsack Pro Queue Mode를 사용하여 병렬 CI 노드로 분할됩니다. 참고-이는 Cypress Dashboard 병렬화와 다른 타사 구현입니다.</target>
        </trans-unit>
        <trans-unit id="5c898c36e7e7f0ca622b7e6a1f3fedf436b9bd87" translate="yes" xml:space="preserve">
          <source>Dynamic text</source>
          <target state="translated">동적 텍스트</target>
        </trans-unit>
        <trans-unit id="ae28e511e8bc706bd1f00b92fc4ad20be0013475" translate="yes" xml:space="preserve">
          <source>Dynamically Generate Tests</source>
          <target state="translated">동적으로 테스트 생성</target>
        </trans-unit>
        <trans-unit id="8526ce101be1f36855e24aaecd2b2c6cf5f8d9d1" translate="yes" xml:space="preserve">
          <source>Dynamically stubbing a response</source>
          <target state="translated">응답을 동적으로 스터 빙</target>
        </trans-unit>
        <trans-unit id="32632163c90f645f5e238e58d67159c13482ef76" translate="yes" xml:space="preserve">
          <source>Dynamically test multiple viewports</source>
          <target state="translated">여러 뷰포트를 동적으로 테스트</target>
        </trans-unit>
        <trans-unit id="763e51fd3356790e7032b1ff2b69409ac670bcde" translate="yes" xml:space="preserve">
          <source>E2E and unit code coverage</source>
          <target state="translated">E2E 및 단위 코드 범위</target>
        </trans-unit>
        <trans-unit id="48f9ca4e6a46e0c8336a615783b4683686e1e040" translate="yes" xml:space="preserve">
          <source>E2E code coverage</source>
          <target state="translated">E2E 코드 범위</target>
        </trans-unit>
        <trans-unit id="abce15448f71f2ff8fb44635244fd4a50b592045" translate="yes" xml:space="preserve">
          <source>ES2015 and JSX via Babel</source>
          <target state="translated">Babel을 통한 ES2015 및 JSX</target>
        </trans-unit>
        <trans-unit id="4d1b2ce02ae9d644a9a1ccd831bbd61bcd878146" translate="yes" xml:space="preserve">
          <source>ES2015 via Babel</source>
          <target state="translated">바벨을 통한 ES2015</target>
        </trans-unit>
        <trans-unit id="387485c3637a014fbaa964164d0526497139ac1e" translate="yes" xml:space="preserve">
          <source>ESLint</source>
          <target state="translated">ESLint</target>
        </trans-unit>
        <trans-unit id="1370400c46faebf95aef65bacd78290720372c1e" translate="yes" xml:space="preserve">
          <source>ESLint plugin that sets globals for writing tests in Cypress.</source>
          <target state="translated">Cypress에서 테스트를 작성하기위한 글로벌을 설정하는 ESLint 플러그인.</target>
        </trans-unit>
        <trans-unit id="1a667eaf2cb96d97a1d0e9a8d21804d12d391390" translate="yes" xml:space="preserve">
          <source>Each API Command documents its behavior with assertions - such as how it retries or waits for assertions to pass.</source>
          <target state="translated">각 API Command는 어설 션을 재 시도하거나 대기하는 방법과 같이 어설 션으로 동작을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="c377f25ad057c7000470b58b06a4cf4c4f9d9d55" translate="yes" xml:space="preserve">
          <source>Each Cypress command (and chain of commands) returns immediately, having only been appended to a queue of commands to be executed at a later time.</source>
          <target state="translated">각 Cypress 명령 (및 명령 체인)은 즉시 실행될 수 있도록 명령 대기열에 추가 된 후에 즉시 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2d30182dccb6b31f8acf775660b9de4a71aa0512" translate="yes" xml:space="preserve">
          <source>Each command and assertion, when hovered over, restores the Application Under Test (righthand side) to the state it was in when that command executed. This allows you to &amp;lsquo;time-travel&amp;rsquo; back to previous states of your application when testing.</source>
          <target state="translated">각 명령과 어설 션은 마우스를 가리키면 테스트중인 응용 프로그램 (오른쪽)을 해당 명령이 실행될 때의 상태로 복원합니다. 이를 통해 테스트 할 때 애플리케이션의 이전 상태로 '시간 여행'할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1830c5ceb356707df5226b15717796e913493a" translate="yes" xml:space="preserve">
          <source>Each command will automatically restore the viewport to the dimensions at the time the command was issued. In other words, scrolling over each command will restore exactly what Cypress &amp;ldquo;saw&amp;rdquo; when it issued the command.</source>
          <target state="translated">각 명령은 명령이 실행될 때 뷰포트를 치수로 자동 복원합니다. 다시 말해, 각 명령을 스크롤하면 명령을 발행했을 때 Cypress가 &quot;본&quot;것을 정확하게 복원합니다.</target>
        </trans-unit>
        <trans-unit id="684c1fdc408df49cd48e5f43f063a2b481a255fe" translate="yes" xml:space="preserve">
          <source>Each command, assertion, or error, when clicked on, displays extra information in the dev tools console. Clicking also &amp;lsquo;pins&amp;rsquo; the Application Under Test (righthand side) to its previous state when the command executed.</source>
          <target state="translated">클릭하면 각 명령, 어설 션 또는 오류가 dev 도구 콘솔에 추가 정보를 표시합니다. 또한 클릭하면 명령이 실행될 때 테스트중인 응용 프로그램 (오른쪽)을 이전 상태로 '고정'됩니다.</target>
        </trans-unit>
        <trans-unit id="275993dbbd08f877b5a8ee165491e54db8467214" translate="yes" xml:space="preserve">
          <source>Each event documents its own argument signature. To understand how to use them, please &lt;a href=&quot;#List-of-events&quot;&gt;refer to the docs for each one&lt;/a&gt;.</source>
          <target state="translated">각 이벤트는 자체 인수 서명을 문서화합니다. 사용 방법을 이해하려면 &lt;a href=&quot;#List-of-events&quot;&gt;각 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e88c2ebb6cbb35ba1087b3274ea4feb73d229795" translate="yes" xml:space="preserve">
          <source>Each failed test links back to the associated failure within the Cypress Dashboard.</source>
          <target state="translated">실패한 각 테스트는 Cypress 대시 보드 내의 관련 실패와 다시 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6f95f98b50c84456913db5f3adc7e79522a170" translate="yes" xml:space="preserve">
          <source>Each keypress is delayed 10ms by default in order to simulate how a very fast user types!</source>
          <target state="translated">매우 빠른 사용자 유형을 시뮬레이션하기 위해 각 키 누름은 기본적으로 10ms 지연됩니다!</target>
        </trans-unit>
        <trans-unit id="9e400bc814cb7a75a615fbd7190343f642f74521" translate="yes" xml:space="preserve">
          <source>Each nested command has access to the work done in previous commands. This ends up reading very nicely.</source>
          <target state="translated">중첩 된 각 명령은 이전 명령에서 수행 한 작업에 액세스 할 수 있습니다. 이것은 매우 잘 읽습니다.</target>
        </trans-unit>
        <trans-unit id="99024aa822581486d6de74268616aa65f2fe2aed" translate="yes" xml:space="preserve">
          <source>Each of these environments would read in the configuration at these files:</source>
          <target state="translated">이러한 각 환경은 다음 파일의 구성에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="520ea0c2aac8299f6c0b93e36d195747c0ff7dfa" translate="yes" xml:space="preserve">
          <source>Each of these likely requires a full blown e2e test.</source>
          <target state="translated">이들 각각은 완전한 블로운 e2e 테스트를 필요로합니다.</target>
        </trans-unit>
        <trans-unit id="9d63f8c829aa417fbfafcd489edaa4d0a4e615e3" translate="yes" xml:space="preserve">
          <source>Each status check will report the number of test failures or passes, and the associated &lt;strong&gt;Details&lt;/strong&gt; link will direct you to the test run&amp;rsquo;s page within the Cypress Dashboard to help you dig deeper into the problem via error messages, stack traces, screenshots, and video recordings:</source>
          <target state="translated">각 상태 확인에는 테스트 실패 또는 통과 횟수가보고되며 관련 &lt;strong&gt;세부 정보&lt;/strong&gt; 링크가 Cypress 대시 보드의 테스트 실행 페이지로 연결되어 오류 메시지, 스택 추적, 스크린 샷 및 비디오 녹화를 통해 문제를보다 심층적으로 분석 할 수 있습니다. :</target>
        </trans-unit>
        <trans-unit id="6f9e6d76d99d863b08efd5c2699c22f48570a76d" translate="yes" xml:space="preserve">
          <source>Each test is bound to a &lt;a href=&quot;#Same-origin&quot;&gt;single origin&lt;/a&gt;.</source>
          <target state="translated">각 테스트는 &lt;a href=&quot;#Same-origin&quot;&gt;단일 원점에&lt;/a&gt; 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="80c603e712f509c60c424c0b15022265d200d65d" translate="yes" xml:space="preserve">
          <source>Each test is limited to only visiting a single superdomain.</source>
          <target state="translated">각 테스트는 단일 수퍼 도메인 방문만으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="7be3eadfca500682a804c06ad342ec8f4d4f3e00" translate="yes" xml:space="preserve">
          <source>Each time an alias in used with a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, Cypress will not resolve until the Nth request matching the outing alias responds. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;#4&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 와 함께 별칭을 사용할 때마다 Cypress는 나가는 별칭과 일치하는 N 번째 요청이 응답 할 때까지 확인되지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;# 4&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="258b36b6173f6d83441d85265954566f57a760e8" translate="yes" xml:space="preserve">
          <source>Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="translated">별명으로 &lt;code&gt;cy.wait()&lt;/code&gt; 를 사용할 때마다 Cypress는 다음 n 번째 일치 요청을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="6cbabaf3b7003a054a8aa0c182c7fc219164659c" translate="yes" xml:space="preserve">
          <source>Easily mock your REST API in Cypress by putting responses in the fixtures directory tree.</source>
          <target state="translated">Fixtures 디렉토리 트리에 응답을 넣어 Cypress에서 REST API를 쉽게 모의 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a1b70f0ead660ad520a0fe4e108059f6483211c1" translate="yes" xml:space="preserve">
          <source>Easily: control which campaign gets sent, or provide a reliable means to know which one it is.</source>
          <target state="translated">쉽게 : 보낼 캠페인을 제어하거나 어떤 캠페인이 어떤 캠페인인지 알 수있는 신뢰할 수있는 수단을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="4faac50fbaf395b598751258e10615250e7ad966" translate="yes" xml:space="preserve">
          <source>Easy control of response bodies, status, and headers</source>
          <target state="translated">응답 본문, 상태 및 헤더를 쉽게 제어</target>
        </trans-unit>
        <trans-unit id="143f10dc9c5ed39d716e4f2bd0ee7d24486a1820" translate="yes" xml:space="preserve">
          <source>Edge cases like locked / deleted accounts</source>
          <target state="translated">잠금 / 삭제 된 계정과 같은 엣지 사례</target>
        </trans-unit>
        <trans-unit id="21ad68daa12d13b4ec9639b5c9446a62b81abc7b" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;admin&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '관리자'수정</target>
        </trans-unit>
        <trans-unit id="11d3c209993b025b25ba41f1164a7c6f9cae7bdc" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;member&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '회원'수정</target>
        </trans-unit>
        <trans-unit id="ac33bdcdccb67cdac31155d9d7f435ee323dc7a4" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;owner&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '소유자'수정</target>
        </trans-unit>
        <trans-unit id="c91ffb5f3ded95ed881a649db2def6919951d1e2" translate="yes" xml:space="preserve">
          <source>Edit billing information</source>
          <target state="translated">청구 정보 편집</target>
        </trans-unit>
        <trans-unit id="e2befb843434b3c0a45eb78377cb1c3a9fd932b7" translate="yes" xml:space="preserve">
          <source>Edit organization name</source>
          <target state="translated">조직 이름 편집</target>
        </trans-unit>
        <trans-unit id="7f9c8e468af664d71704e88d65af4cc78aa8b101" translate="yes" xml:space="preserve">
          <source>Edit project name</source>
          <target state="translated">프로젝트 이름 편집</target>
        </trans-unit>
        <trans-unit id="083a0a263e8bc798e23428cb98a349cb82c291a3" translate="yes" xml:space="preserve">
          <source>Edit project status (private/public}</source>
          <target state="translated">프로젝트 상태 수정 (비공개 / 공개}</target>
        </trans-unit>
        <trans-unit id="3b11ca85d872d994ddd774f033e3e4883c5374a4" translate="yes" xml:space="preserve">
          <source>Edit the installed Cypress code</source>
          <target state="translated">설치된 Cypress 코드 편집</target>
        </trans-unit>
        <trans-unit id="7ed50c7c9032a74ec0f4cb0dafc803eaa53c9af5" translate="yes" xml:space="preserve">
          <source>Editing a Selector</source>
          <target state="translated">선택기 편집</target>
        </trans-unit>
        <trans-unit id="3f25a6c9ba41e83696296e7c77e66e2444e64051" translate="yes" xml:space="preserve">
          <source>Effect on default DOM assertions</source>
          <target state="translated">기본 DOM 어설 션에 미치는 영향</target>
        </trans-unit>
        <trans-unit id="3e63a9b7b308aed39d946483a401f46e77a9d1e3" translate="yes" xml:space="preserve">
          <source>Effectively leveraging test data</source>
          <target state="translated">테스트 데이터를 효과적으로 활용</target>
        </trans-unit>
        <trans-unit id="32a90561af82abfa6e3aa54ef2f8e4b55202bd25" translate="yes" xml:space="preserve">
          <source>Electron</source>
          <target state="translated">Electron</target>
        </trans-unit>
        <trans-unit id="ab40dddcb86fc9f7d8f51cdd865f63924d21ba19" translate="yes" xml:space="preserve">
          <source>Electron Browser</source>
          <target state="translated">전자 브라우저</target>
        </trans-unit>
        <trans-unit id="3a76e577299fc3c204205f6ee683d8a672a99478" translate="yes" xml:space="preserve">
          <source>Electron no longer reports the browser as out of focus when running via &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;#1939&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때 Electron은 더 이상 브라우저의 초점이 맞지 않다고보고하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;# 1939&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="628192e8fa718cca67ad9d3672c514fbb407a198" translate="yes" xml:space="preserve">
          <source>Electron rendering warnings are no longer printed to console output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;#4288&lt;/a&gt;.</source>
          <target state="translated">전자 렌더링 경고가 더 이상 콘솔 출력에 인쇄되지 않습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;# 4288&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1b516a5e7d2ec9129ab1809aa645c83ab99f4d" translate="yes" xml:space="preserve">
          <source>Element existence</source>
          <target state="translated">요소 존재</target>
        </trans-unit>
        <trans-unit id="67ac45c91d2984a846db24f392fd52e012b9fba1" translate="yes" xml:space="preserve">
          <source>Element preference order</source>
          <target state="translated">요소 기본 설정 순서</target>
        </trans-unit>
        <trans-unit id="8c1e32bf90c3fd5f9e28299e564c4b55b82a0acc" translate="yes" xml:space="preserve">
          <source>Element removal during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; 또는 &lt;code&gt;mouseup&lt;/code&gt; 중 요소 제거</target>
        </trans-unit>
        <trans-unit id="3d6147561440cd1b5919d02113d41dc053bfe9a4" translate="yes" xml:space="preserve">
          <source>Element to search for children in. If null, search begins from root-level DOM element</source>
          <target state="translated">하위를 검색 할 요소입니다. null 인 경우 루트 수준 DOM 요소에서 검색이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="ab8036ec3220e8f26cf947a385c7f8e8b88aa005" translate="yes" xml:space="preserve">
          <source>Elements (the number of elements found)</source>
          <target state="translated">요소 (발견 된 요소 수)</target>
        </trans-unit>
        <trans-unit id="c921f06f52212a4281e5cb1397527903ac026c45" translate="yes" xml:space="preserve">
          <source>Elements that are covering up an element you targeted for &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; are now logged out in the command console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 을 대상으로하는 요소를 덮고있는 요소 가 이제 명령 콘솔에서 로그 아웃됩니다.</target>
        </trans-unit>
        <trans-unit id="2f5b8ce8549efb6806df82766f80e1a2920d20de" translate="yes" xml:space="preserve">
          <source>Elements that are inside a parent with CSS &lt;code&gt;position: absolute&lt;/code&gt; which is itself inside of a parent element with &lt;code&gt;overflow: hidden&lt;/code&gt; are now properly considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;#4395&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;#755&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overflow: hidden&lt;/code&gt; 이 있는 부모 요소 내부에 CSS &lt;code&gt;position: absolute&lt;/code&gt; 가있는 부모 내부에있는 요소 는 이제 올바르게 표시되는 것으로 간주됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;# 4395&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;# 755를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="4da0ae126bc2a53908cf07a828a772793ec432d8" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored if &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">지정된 선택기와 일치하는 요소는 스크린 샷에서 검은 색으로 표시되지만 &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;viewport&lt;/code&gt; 인 경우에만 표시됩니다 . &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;runner&lt;/code&gt; 인 경우 &lt;code&gt;blackout&lt;/code&gt; 은 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6998029fced720e07b4684bb075b294b44e30ee1" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored is &lt;code&gt;capture&lt;/code&gt; is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">지정된 선택기와 일치하는 요소는 &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;viewport&lt;/code&gt; 인 경우에만 스크린 샷에서 검은 색으로 표시됩니다 . &lt;code&gt;blackout&lt;/code&gt; 무시는 &lt;code&gt;capture&lt;/code&gt; 입니다 &lt;code&gt;runner&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9ebbcc8c2d718bd1587c39876f43fd85937f84" translate="yes" xml:space="preserve">
          <source>Elements which are children of a container with &lt;code&gt;overflow&lt;/code&gt; are automatically scrolled prior to a click (which is an abstraction around real user behavior).</source>
          <target state="translated">&lt;code&gt;overflow&lt;/code&gt; 가 있는 컨테이너의 하위 요소 인 요소 는 클릭하기 전에 자동으로 스크롤됩니다 (실제 사용자 동작에 대한 추상화).</target>
        </trans-unit>
        <trans-unit id="4b356077ea501d4ebd48c4371f1a83dbcc1eb12f" translate="yes" xml:space="preserve">
          <source>Elements which are stringified during errors now indicate their text content (truncated to 10 characters) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; or whether they contain children elements by indicating an ellipsis &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">오류 중에 문자열로 표시된 요소는 이제 텍스트 내용 (10 자로 잘림) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; 을 나타내거나 줄임표 &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; 를 표시하여 자식 요소를 포함하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="26bf1b4484d000d8d5ae5549911ae978182472d5" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;contenteditable&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;contenteditable&lt;/code&gt; 속성 이 정의 된 요소</target>
        </trans-unit>
        <trans-unit id="44667429769bd42ab172b16d15a51c492c3b74cb" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;tabindex&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; 속성 이 정의 된 요소</target>
        </trans-unit>
        <trans-unit id="c5016f42510d5ee58a2fc21e1db91bd76faabaef" translate="yes" xml:space="preserve">
          <source>Elm Batteries Included</source>
          <target state="translated">느릅 나무 배터리 포함</target>
        </trans-unit>
        <trans-unit id="af9767897d93c4978863eb928201ebd647a87432" translate="yes" xml:space="preserve">
          <source>Embed data in DOM:</source>
          <target state="translated">DOM에 데이터 내장 :</target>
        </trans-unit>
        <trans-unit id="e39e9c84c2c2c0bee498ed6bf855df6becaa3631" translate="yes" xml:space="preserve">
          <source>Embed data in the DOM:</source>
          <target state="translated">DOM에 데이터를 임베드하십시오.</target>
        </trans-unit>
        <trans-unit id="e9b4c8862fdeedf485374f3150ae4c5a0e62da5b" translate="yes" xml:space="preserve">
          <source>Embed data into other places (cookies / local storage) you could read off.</source>
          <target state="translated">읽을 수있는 다른 장소 (쿠키 / 로컬 스토리지)에 데이터를 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="d919c765dfb166f5f96fd2b0f23f806e1d095b38" translate="yes" xml:space="preserve">
          <source>Embedding a Vimeo or YouTube video.</source>
          <target state="translated">Vimeo 또는 YouTube 비디오 포함</target>
        </trans-unit>
        <trans-unit id="c4d67b7147f77128c418841b4c976644e812ca6f" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to send an encoding for images other than forcing the default encoding of &lt;code&gt;base64&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;#373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 를 활성화 하여 &lt;code&gt;base64&lt;/code&gt; 기본 인코딩을 강제하는 것 이외의 이미지에 대한 인코딩을 보내십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;# 373&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c8ec935e875b88d51e3d58428ad460f4eb430a7" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to pass an &lt;code&gt;encoding&lt;/code&gt; parameter when using &lt;code&gt;fx:fixture&lt;/code&gt; syntax. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;#374&lt;/a&gt;.</source>
          <target state="translated">활성화 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 통과 &lt;code&gt;encoding&lt;/code&gt; 사용시 파라미터 &lt;code&gt;fx:fixture&lt;/code&gt; 구. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;# 374&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f0426f197113f21bed6a16a638614e6219dd849a" translate="yes" xml:space="preserve">
          <source>Enable or disable experimental chrome features</source>
          <target state="translated">실험용 크롬 기능 사용 또는 사용 중지</target>
        </trans-unit>
        <trans-unit id="8e2313b580fa33d278483393ce7eea83abf0c5a6" translate="yes" xml:space="preserve">
          <source>Enable passing &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; without using the CLI by invoking the binary directly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;#820&lt;/a&gt;.</source>
          <target state="translated">바이너리를 직접 호출하여 CLI를 사용하지 않고 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; 를 전달할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;# 820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5d3fbeb8872057dafd3be83b08840d1f47487360" translate="yes" xml:space="preserve">
          <source>Enables fail fast in Cypress, skipping the rest of tests on first failure.</source>
          <target state="translated">Cypress에서 빠른 실패를 활성화하고 첫 번째 실패시 나머지 테스트를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="aa2e83b0da6d422f1bdb880cdbb1d737c2ba9d85" translate="yes" xml:space="preserve">
          <source>Enables you to generate this file from other build processes.</source>
          <target state="translated">다른 빌드 프로세스에서이 파일을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6c051defe74066ab292a333fa676fa369cdd20" translate="yes" xml:space="preserve">
          <source>Enables you to override the default user agent the browser sends in all request headers. User agent values are typically used by servers to help identify the operating system, browser, and browser version. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;User-Agent MDN Documentation&lt;/a&gt; for example user agent values.</source>
          <target state="translated">브라우저가 모든 요청 헤더에서 보내는 기본 사용자 에이전트를 대체 할 수 있습니다. 사용자 에이전트 값은 일반적으로 서버에서 운영 체제, 브라우저 및 브라우저 버전을 식별하는 데 사용됩니다. 사용자 에이전트 값의 예는 사용자 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;에이전트 MDN 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5754b46c040515f05e7e2cf7cd1cd37419a34f9" translate="yes" xml:space="preserve">
          <source>Enables you to work with the subject yielded from the previous command.</source>
          <target state="translated">이전 명령에서 생성 된 주제로 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="558ddd63962b514580bf35502e16351fdbe839ab" translate="yes" xml:space="preserve">
          <source>Enabling GitHub integration for a project</source>
          <target state="translated">프로젝트에 GitHub 통합 활성화</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
