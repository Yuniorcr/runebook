<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="919551597df30356944cafd212832256a8c0df11" translate="yes" xml:space="preserve">
          <source>Enabling this would mean that for every single command, it would recover from errors, but only after each applicable command timeout was reached. Since timeouts start at 4 seconds (and exceed from there), this means that it would only fail after a long, long time.</source>
          <target state="translated">이를 활성화하면 모든 단일 명령에 대해 오류가 복구되지만 적용 가능한 각 명령 시간 초과에 도달 한 후에 만 ​​복구됩니다. 시간 초과는 4 초에서 시작하여 그 시간을 초과하므로 오랜 시간이 지난 후에 만 ​​실패 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7ea8c255859397cb43119394cba347868785c8a5" translate="yes" xml:space="preserve">
          <source>Encode a fixture with Protocol Buffers.</source>
          <target state="translated">프로토콜 버퍼로 조명기를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="b1adbe164ee63dd9c7f2a4593f50e7b7a78d2933" translate="yes" xml:space="preserve">
          <source>End a chain of commands.</source>
          <target state="translated">일련의 명령을 끝내십시오.</target>
        </trans-unit>
        <trans-unit id="e6f6463c153c032ec57c13a6815c6707e987c657" translate="yes" xml:space="preserve">
          <source>End-to-end tests</source>
          <target state="translated">엔드 투 엔드 테스트</target>
        </trans-unit>
        <trans-unit id="dc9c95c5e8bc53a4dcd048eabe4c357d20b5606d" translate="yes" xml:space="preserve">
          <source>Enhanced &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to accept &lt;code&gt;eventually&lt;/code&gt; flag to automatically retry assertions until timeout is reached.</source>
          <target state="translated">시간 초과에 도달 할 때까지 어설 션을 자동으로 다시 시도 하도록 &lt;code&gt;eventually&lt;/code&gt; 플래그 를 수락하도록 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 가 향상되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0431e82b16187349449045f6f9626771e165eb50" translate="yes" xml:space="preserve">
          <source>Ensure element is scrollable. Error if element cannot scroll.</source>
          <target state="translated">요소가 스크롤 가능한지 확인하십시오. 요소를 스크롤 할 수없는 경우 오류입니다.</target>
        </trans-unit>
        <trans-unit id="ca79022eedafdc9baaf95b2b49cce41fcc1e6eea" translate="yes" xml:space="preserve">
          <source>Ensure it is not animating</source>
          <target state="translated">애니메이션이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="6bd28c56432380e3f912525f6af0f9c44b907e9b" translate="yes" xml:space="preserve">
          <source>Ensure it is not covered</source>
          <target state="translated">커버되지 않았는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="b515507685300afd9564c5ff4e8053ea10beb757" translate="yes" xml:space="preserve">
          <source>Ensure it is not disabled</source>
          <target state="translated">비활성화되어 있지 않은지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="22ec6995360904e0d3d9d4c55e765bcd0da7e133" translate="yes" xml:space="preserve">
          <source>Ensure it is not readonly</source>
          <target state="translated">읽기 전용이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="cfa8913f432e799e200d2a95b10e32335be7fa56" translate="yes" xml:space="preserve">
          <source>Ensure it is visible</source>
          <target state="translated">보이는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="4310731e72eabf26a3eb446e02ef8579a5237f5d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not animating.</source>
          <target state="translated">요소가 애니메이션되지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b1007053ced6553c9fd1f6424bca2c3f220eca1e" translate="yes" xml:space="preserve">
          <source>Ensure the element is not covered.</source>
          <target state="translated">요소가 덮여 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ccc1610572b26e8b08c6a4c34c737395f4333d8d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not disabled.</source>
          <target state="translated">요소가 비활성화되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0d19677ee6acc9d5c50e9b91a94c4ed5155f590d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not hidden.</source>
          <target state="translated">요소가 숨겨져 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="368fc70a50a93ced761903d47a41db1f3a8d3a17" translate="yes" xml:space="preserve">
          <source>Ensure the element is not readonly.</source>
          <target state="translated">요소가 읽기 전용이 아닌지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f6926f03c557954977ef6356cd9d7fe3652d0014" translate="yes" xml:space="preserve">
          <source>Ensure the element you are trying to call &lt;code&gt;.focus()&lt;/code&gt; on is a &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;focusable element&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 를 호출하려는 &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;요소&lt;/a&gt; 가 포커스 가능한 요소 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="aa508e9bef3af1389a3020abd9c7793caae33c76" translate="yes" xml:space="preserve">
          <source>Environment Variables recipe</source>
          <target state="translated">환경 변수 레시피</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="fc92a9c3a64a7543ce72d138611445527c755578" translate="yes" xml:space="preserve">
          <source>Environment variables are great at pointing to external services and servers, or storing password or other credentials.</source>
          <target state="translated">환경 변수는 외부 서비스 및 서버를 가리 키거나 비밀번호 또는 기타 자격 증명을 저장하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="94f1956fc009fdce8d624d9e2835373ffa72501f" translate="yes" xml:space="preserve">
          <source>Environment variables are useful when:</source>
          <target state="translated">환경 변수는 다음과 같은 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f4ce0155cb72d83c03781b384f78b9b2272a0a9e" translate="yes" xml:space="preserve">
          <source>Environment variables can be changed easily - especially when running in CI.</source>
          <target state="translated">환경 변수는 특히 CI에서 실행될 때 쉽게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30333666567894e35870601003c548b606d3b2c8" translate="yes" xml:space="preserve">
          <source>Environment variables for Semaphore 2.0 are now captured when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;#4671&lt;/a&gt;.</source>
          <target state="translated">테스트를 대시 보드에 기록 할 때 Semaphore 2.0의 환경 변수가 캡처됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;# 4671&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3634cf23ae7c404597c456674b568879629b5ba7" translate="yes" xml:space="preserve">
          <source>Environment variables set using &lt;code&gt;Cypress.env&lt;/code&gt;&lt;em&gt;are only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.env&lt;/code&gt; 를 사용하여 설정 한 환경 변수 &lt;em&gt;는 현재 사양 파일의 범위에만 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6cbbb19e47188e0f4a16c137fc8b4d198da3be" translate="yes" xml:space="preserve">
          <source>Environment variables that do not match configuration keys will instead be set as regular environment variables for use in your tests with &lt;code&gt;Cypress.env()&lt;/code&gt;.</source>
          <target state="translated">구성 키와 일치하지 않는 환경 변수는 &lt;code&gt;Cypress.env()&lt;/code&gt; 테스트에서 사용할 일반 환경 변수로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="6a18f05e0a5a1ef739509b16e48dcb60c926009f" translate="yes" xml:space="preserve">
          <source>Error Recovery</source>
          <target state="translated">오류 복구</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="a7dadcb4736c27170931fdcf7841a1fb8de3a859" translate="yes" xml:space="preserve">
          <source>Error handling for invalid arguments passed to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; have been improved and will now suggest valid arguments that are acceptable.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 전달 된 유효하지 않은 인수에 대한 오류 처리 가 개선되었으며 이제 허용 가능한 유효한 인수를 제안합니다.</target>
        </trans-unit>
        <trans-unit id="982e82df0e80e302edc2f8a09a70d717466a86e7" translate="yes" xml:space="preserve">
          <source>Error messages and command messages for &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; have been improved.</source>
          <target state="translated">오류 메시지 및 명령에 대한 메시지 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="6109861390104b5df44cf97b43d8f8aa5eebfedf" translate="yes" xml:space="preserve">
          <source>Error messages no longer break within words.</source>
          <target state="translated">더 이상 오류 메시지가 단어 내에서 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76882bf98cee4086a1074b159fda3d1a5d2cd96c" translate="yes" xml:space="preserve">
          <source>Errors / crashes encountered when updating to newer versions through the app should be fixed now.</source>
          <target state="translated">앱을 통해 최신 버전으로 업데이트 할 때 발생하는 오류 / 충돌이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="854f93a83e75f7d2544802812315f4ac785a5e0a" translate="yes" xml:space="preserve">
          <source>Errors coming from plugins now display correctly in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;#945&lt;/a&gt;.</source>
          <target state="translated">플러그인에서 발생하는 오류가 이제 테스트 러너에 올바르게 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;# 945&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4c711fa24b5948b08ce83b5f001b7e2dc18357dd" translate="yes" xml:space="preserve">
          <source>Errors from your plugins &lt;em&gt;will not crash&lt;/em&gt; Cypress.</source>
          <target state="translated">플러그인의 오류는 Cypress와 &lt;em&gt;충돌하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5add43a5bd5039885f5128e025a33fe0f420e4c4" translate="yes" xml:space="preserve">
          <source>Errors reading / writing &lt;code&gt;cypress.json&lt;/code&gt; on project add are now displayed inline.</source>
          <target state="translated">프로젝트 추가시 &lt;code&gt;cypress.json&lt;/code&gt; 읽기 / 쓰기 오류 가 인라인으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4d11088b337bf194afbbba34e3461bb6fd238912" translate="yes" xml:space="preserve">
          <source>Especially useful for CI environments.</source>
          <target state="translated">CI 환경에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c2c87aeb3c9446cb9afda9709099fc6367e9171f" translate="yes" xml:space="preserve">
          <source>Even a single end-to-end test can cover a lot of the application code. For example, let&amp;rsquo;s run the following test that adds a few items, then marks one of them as completed.</source>
          <target state="translated">단일 종단 간 테스트조차도 많은 응용 프로그램 코드를 포괄 할 수 있습니다. 예를 들어 다음 테스트를 실행하여 몇 가지 항목을 추가 한 다음 그 중 하나를 완료된 것으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="070e5c4e1df907c99cad4f5f60301bb41273abf7" translate="yes" xml:space="preserve">
          <source>Even better, we can drill down into the individual source files to see what code we missed. In our example application, the main state logic is in the &lt;code&gt;src/reducers/todos.js&lt;/code&gt; file. Let&amp;rsquo;s see the code coverage in this file:</source>
          <target state="translated">또한 개별 소스 파일을 드릴 다운하여 누락 된 코드를 확인할 수 있습니다. 예제 애플리케이션에서 기본 상태 로직은 &lt;code&gt;src/reducers/todos.js&lt;/code&gt; 파일에 있습니다. 이 파일에서 코드 적용 범위를 보자.</target>
        </trans-unit>
        <trans-unit id="316c07239617168f09bbce549bb637e294cdddb8" translate="yes" xml:space="preserve">
          <source>Even if you decide to skip using a 3rd party image storage and comparison service, you can still perform visual testing. Follow the example &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Visual Regression testing with Cypress and cypress-image-snapshot&lt;/a&gt; tutorial and do it all yourself.</source>
          <target state="translated">타사 이미지 저장 및 비교 서비스를 사용하지 않더라도 시각적 테스트를 수행 할 수 있습니다. &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Cypress 및 cypress-image-snapshot&lt;/a&gt; tutorial을 사용한 Visual Regression 테스트 예제를 따르고 직접 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e7ca4e8e12e18c02a22ac44bcb7517ef6ada4084" translate="yes" xml:space="preserve">
          <source>Even if your project is JavaScript only, the JavaScript specs can know about the new command by referencing the file using the special tripple slash &lt;code&gt;reference path&lt;/code&gt; comment.</source>
          <target state="translated">프로젝트가 JavaScript 전용 인 경우에도 JavaScript 스펙은 특수 삼중 슬래시 &lt;code&gt;reference path&lt;/code&gt; 주석을 사용하여 파일을 참조하여 새 명령에 대해 알 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34febeff692095a91412c9c2164509300bda3cb0" translate="yes" xml:space="preserve">
          <source>Even more - action commands will automatically wait for their element to reach an &lt;a href=&quot;interacting-with-elements&quot;&gt;actionable state&lt;/a&gt; before failing.</source>
          <target state="translated">더욱이-액션 명령은 실패하기 전에 요소가 &lt;a href=&quot;interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달 할 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="5e33674133df3ccb1942dae043fe37b25ee9bc2c" translate="yes" xml:space="preserve">
          <source>Even the &lt;code&gt;Initiator&lt;/code&gt; is included, which is a stack trace to what caused the XHR to be sent.</source>
          <target state="translated">심지어 &lt;code&gt;Initiator&lt;/code&gt; 전송 될 XHR 원인에 스택 추적 인에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b65e02a9c75ae05082f82517ba5d146b4be79ef3" translate="yes" xml:space="preserve">
          <source>Even then, it&amp;rsquo;s still possible a WebSocket message could come in&amp;hellip; so 5 minutes!</source>
          <target state="translated">그럼에도 불구하고 여전히 WebSocket 메시지가 나타날 수 있습니다&amp;hellip; 5 분!</target>
        </trans-unit>
        <trans-unit id="eb047f8f50813fbd685a9d55a025552dce04a4fe" translate="yes" xml:space="preserve">
          <source>Even then, not enough, it&amp;rsquo;s possible a &lt;code&gt;setTimeout&lt;/code&gt; could trigger&amp;hellip; 60 minutes.</source>
          <target state="translated">그럼에도 불구하고 충분하지 않은 &lt;code&gt;setTimeout&lt;/code&gt; 은 60 분을 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aaba616433654358f7d68d07e61e99aed209f2d" translate="yes" xml:space="preserve">
          <source>Even though Cypress runs in the browser, it automatically makes this property available for use in your tests.</source>
          <target state="translated">Cypress가 브라우저에서 실행 되더라도이 속성을 자동으로 테스트에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25bd6c11f0c963778ec1e7e1fc7222fe8ad6ee0e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Age&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements over &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">심지어 불구하고 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 가장 깊은 &quot;나이&quot;를 포함 요소, 싸이프레스 수익률이다 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 를 통해 요소 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16a3ff57e8669d6ebb647842dac8efa08438293e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Search&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &quot;검색&quot;을 포함하는 깊은 요소 사이프러스 수율 인 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 스팬 위에 소자.</target>
        </trans-unit>
        <trans-unit id="74d1d5127742b8f47d6030fa661dcfd34932aea1" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Sign Out&amp;rdquo;, Cypress yields anchor elements over spans.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &quot;에 기호&quot;를 포함하는 깊은 요소, 스팬 프러스 위에 앵커 요소를 산출한다.</target>
        </trans-unit>
        <trans-unit id="ec3f99a18cc580ff52b143719737d0bc996537af" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains a &amp;ldquo;4&amp;rdquo;, Cypress automatically yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans because of its &lt;a href=&quot;#Preferences&quot;&gt;preferred element order&lt;/a&gt;.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 는 &quot;4&quot;를 포함하는 깊은 요소, 사이프러스 자동 산출 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 때문에 소자의 스팬에 걸쳐 &lt;a href=&quot;#Preferences&quot;&gt;양호한 소자 순서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5310bf2439662720de316fb2282fea56d8b3b7" translate="yes" xml:space="preserve">
          <source>Even though we haven&amp;rsquo;t written any tests yet - that&amp;rsquo;s okay - let&amp;rsquo;s click on &lt;code&gt;sample_spec.js&lt;/code&gt; and watch Cypress launch your browser.</source>
          <target state="translated">아직 테스트를 작성하지는 않았지만 괜찮습니다. &lt;code&gt;sample_spec.js&lt;/code&gt; 를 클릭 하고 Cypress가 브라우저를 시작하는 것을보십시오.</target>
        </trans-unit>
        <trans-unit id="d2e7b642f1543fd59199a0e516117870146d988d" translate="yes" xml:space="preserve">
          <source>Even though we return a string in our test, Cypress automatically figures out that you&amp;rsquo;ve queued commands above and does not end the test until all cy commands have finished.</source>
          <target state="translated">테스트에서 문자열을 반환하더라도 Cypress는 자동으로 사용자가 명령을 대기하고 모든 cy 명령이 완료 될 때까지 테스트를 종료하지 않았 음을 자동으로 알아냅니다.</target>
        </trans-unit>
        <trans-unit id="538a7cffc1912098499e098166d1acdfe6a5783e" translate="yes" xml:space="preserve">
          <source>Even when tests fail, the &lt;code&gt;Promise&lt;/code&gt; still resolves with the test results. The &lt;code&gt;Promise&lt;/code&gt; is only rejected if Cypress cannot run for some reason; for example if a binary has not been installed or it cannot find a module dependency. In that case, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with a detailed error.</source>
          <target state="translated">테스트가 실패하더라도 &lt;code&gt;Promise&lt;/code&gt; 결과는 여전히 테스트 결과로 해결됩니다. &lt;code&gt;Promise&lt;/code&gt; 싸이프레스 어떤 이유로 실행할 수없는 경우에만 거부; 예를 들어 바이너리가 설치되지 않았거나 모듈 의존성을 찾을 수없는 경우. 이 경우 &lt;code&gt;Promise&lt;/code&gt; 은 자세한 오류와 함께 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="83e58ad59937dd85431ce7edc11b58f8d769de48" translate="yes" xml:space="preserve">
          <source>Even without adding an assertion, we know that everything is okay! This is because many of Cypress&amp;rsquo; commands are built to fail if they don&amp;rsquo;t find what they&amp;rsquo;re expecting to find. This is known as a &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt;.</source>
          <target state="translated">단언을 추가하지 않아도 모든 것이 괜찮다는 것을 알고 있습니다! 많은 Cypress 명령이 원하는 것을 찾지 못하면 실패하도록 만들어 졌기 때문입니다. 이것을 &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;기본 어설 션이라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cba520496df229530fa8c523fecb833a3c475bcb" translate="yes" xml:space="preserve">
          <source>Even your non-technical collaborators can appreciate the way this reads!</source>
          <target state="translated">기술이 아닌 공동 작업자조차도 이것이 읽는 방식에 감사 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d9a0263e8f89e8508419dc7101a0fe1b909f31d6" translate="yes" xml:space="preserve">
          <source>Event Cancellation</source>
          <target state="translated">이벤트 취소</target>
        </trans-unit>
        <trans-unit id="17ee02f7ce9b63351840d187299d0f76b5f9ece3" translate="yes" xml:space="preserve">
          <source>Event Firing</source>
          <target state="translated">이벤트 발생</target>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="translated">이벤트 유형</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="82c1c6b3f4b539d9a216b58656cd339328dddc4b" translate="yes" xml:space="preserve">
          <source>Events that are fired:</source>
          <target state="translated">해고 된 이벤트 :</target>
        </trans-unit>
        <trans-unit id="da52eba1bd92bb873eb55802ea0324199e38da3c" translate="yes" xml:space="preserve">
          <source>Events that fire</source>
          <target state="translated">발생하는 이벤트</target>
        </trans-unit>
        <trans-unit id="e9d48c3fa29cd1b85026a0bddc44e28912df51d7" translate="yes" xml:space="preserve">
          <source>Events that should not fire on non input types such as elements with &lt;code&gt;tabindex&lt;/code&gt; do not fire their &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; events. Only typing into elements which cause the actual value or text to change will fire those events.</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; 가있는 요소와 같이 비 입력 유형에서 발생해서는 안되는 이벤트는 &lt;code&gt;textInput&lt;/code&gt; 또는 &lt;code&gt;input&lt;/code&gt; 이벤트를 발생시키지 않습니다 . 실제 값이나 텍스트가 변경되도록하는 요소 만 입력하면 해당 이벤트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d3c9763723437cb0418c9553bac2a22f39077299" translate="yes" xml:space="preserve">
          <source>Events that were &lt;code&gt;defaultPrevented&lt;/code&gt; may prevent other events from firing and those will show up as empty. For instance, canceling &lt;code&gt;keydown&lt;/code&gt; will not fire &lt;code&gt;keypress&lt;/code&gt; or &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;, but will fire &lt;code&gt;keyup&lt;/code&gt; (which matches the spec).</source>
          <target state="translated">이었다 이벤트 &lt;code&gt;defaultPrevented&lt;/code&gt; 이 발사에서 다른 이벤트를 방지 할 수 있으며, 그 빈으로 표시됩니다. 예를 들어 &lt;code&gt;keydown&lt;/code&gt; 을 취소 하면 &lt;code&gt;keypress&lt;/code&gt; 또는 &lt;code&gt;textInput&lt;/code&gt; 또는 &lt;code&gt;input&lt;/code&gt; 이 실행되지 않지만 &lt;code&gt;keyup&lt;/code&gt; (사양과 일치)이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2bb4bcadb624b3f1c5ccf23432f4522d0f284974" translate="yes" xml:space="preserve">
          <source>Every custom command you write is generally an abstraction over a series of internal commands. That means you and your team members exert much more mental effort to understand what your custom command does.</source>
          <target state="translated">작성하는 모든 사용자 정의 명령은 일반적으로 일련의 내부 명령에 대한 추상화입니다. 즉, 귀하와 귀하의 팀원은 귀하의 맞춤형 명령이 무엇인지 이해하기 위해 훨씬 더 정신적 인 노력을 기울입니다.</target>
        </trans-unit>
        <trans-unit id="6eee2af9481b18382f2ed15e769db1e4b28932dd" translate="yes" xml:space="preserve">
          <source>Every source file but 1 is covered at 100%. We can have great confidence in our application, and safely refactor the code knowing that we have a robust set of end-to-end tests.</source>
          <target state="translated">1을 제외한 모든 소스 파일은 100 %로 적용됩니다. 우리는 애플리케이션에 대해 큰 확신을 가질 수 있으며 강력한 엔드-투-엔드 테스트 세트를 가지고 있다는 사실을 알고 코드를 안전하게 리팩토링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d130c3bba2c7cd2cc3eb07249e9d555f452fd6e3" translate="yes" xml:space="preserve">
          <source>Every test you write will include selectors for elements. To save yourself a lot of headaches, you should write selectors that are resilient to changes.</source>
          <target state="translated">작성하는 모든 테스트에는 요소 선택기가 포함됩니다. 많은 두통을 피하려면 변경 사항에 탄력적 인 선택기를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="40fa7455656b959a33b81cf03ae0e5b3c00d8df5" translate="yes" xml:space="preserve">
          <source>Every time your tests run, you&amp;rsquo;d have to work out the complexity around starting an already running web server.</source>
          <target state="translated">테스트가 실행될 때마다 이미 실행중인 웹 서버를 시작하는 것과 관련된 복잡성을 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5e54e38fa222d3ef6e281ccb610ecd33efb6668" translate="yes" xml:space="preserve">
          <source>Everything else; this includes, but isn&amp;rsquo;t limited to, the following:</source>
          <target state="translated">다른 모든 것; 여기에는 다음이 포함되지만 이에 국한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1f2d5208c5c81ab49f2946d8ace5a2b336fa79c" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;cypress driver&lt;/code&gt; is now minified.</source>
          <target state="translated">&lt;code&gt;cypress driver&lt;/code&gt; 제외한 모든 것이 이제 축소되었습니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cda106d93dbff058312ac5299adcb6cbbf071eb0" translate="yes" xml:space="preserve">
          <source>Example #1: Default Assertion</source>
          <target state="translated">예 # 1 : 기본 어설 션</target>
        </trans-unit>
        <trans-unit id="d3646043c0bbbc4ecbb7db5f6f77948b176d699b" translate="yes" xml:space="preserve">
          <source>Example #1: Existence and Actionability</source>
          <target state="translated">사례 # 1 : 존재와 실행 가능성</target>
        </trans-unit>
        <trans-unit id="7f2c071addd085d3b7fb47c324ea0c508644162d" translate="yes" xml:space="preserve">
          <source>Example #2: Additional Assertions</source>
          <target state="translated">예 # 2 : 추가 어설 션</target>
        </trans-unit>
        <trans-unit id="4cf4b889f372521e894a51bca1730c51da276fcc" translate="yes" xml:space="preserve">
          <source>Example #2: Reversing the Default Assertion</source>
          <target state="translated">예 # 2 : 기본 어설 션 취소</target>
        </trans-unit>
        <trans-unit id="75ce43a785a0bad5e977237a8ef35938986ac4a3" translate="yes" xml:space="preserve">
          <source>Example #3: Modifying Timeouts</source>
          <target state="translated">예 # 3 : 타임 아웃 수정</target>
        </trans-unit>
        <trans-unit id="cb0f113118ec1dd5f83253b2ddd81ed3dd43ce78" translate="yes" xml:space="preserve">
          <source>Example #3: Other Default Assertions</source>
          <target state="translated">사례 # 3 : 다른 기본 주장</target>
        </trans-unit>
        <trans-unit id="e20fe15406406c1193750bd9bd3a0aee71cb54ed" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;.travis.yml&lt;/code&gt; config file</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="1871dd0e29111f57e365587213d50fd672171e1d" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file</source>
          <target state="translated">&lt;code&gt;circle.yml&lt;/code&gt; v2 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="95e4f7e6b45a07a97f456a3f2cf9f253a8e8ab02" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file with &lt;code&gt;yarn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; &lt;code&gt;circle.yml&lt;/code&gt; v2 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="translated">구성 예</target>
        </trans-unit>
        <trans-unit id="4e8bfdee37016dc05dc3033eca4f4fa6aeac9298" translate="yes" xml:space="preserve">
          <source>Example Project</source>
          <target state="translated">프로젝트 예</target>
        </trans-unit>
        <trans-unit id="fa59e385a18703b72fb26ff502d8fc0c36eb16bf" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text content of each one.</source>
          <target state="translated">아래 예제는 먼저 3 개의 요소가 있다고 주장한 다음 각 요소의 텍스트 내용을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="67013470cce4eefed122db16583e1484bfc70985" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text contents of each one.</source>
          <target state="translated">아래 예제는 먼저 3 개의 요소가 있다고 가정하고 각 요소의 텍스트 내용을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6c1bc8d0049021fee3c658cec1a5f287f38659ad" translate="yes" xml:space="preserve">
          <source>Example fixture is automatically created with every project.</source>
          <target state="translated">모든 프로젝트에서 조명기 예제가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c1c84102101b31e7895a904c1ecf62219bfb13a9" translate="yes" xml:space="preserve">
          <source>Example of accessing insecure content</source>
          <target state="translated">안전하지 않은 콘텐츠에 액세스하는 예</target>
        </trans-unit>
        <trans-unit id="687ea2dc8b338b1a173b77171b0ee6d2daa03308" translate="yes" xml:space="preserve">
          <source>Example of checking a hidden element</source>
          <target state="translated">숨겨진 요소를 확인하는 예</target>
        </trans-unit>
        <trans-unit id="879f79211906adc49a6382606e537e73631e018c" translate="yes" xml:space="preserve">
          <source>Example of clicking on a hidden element</source>
          <target state="translated">숨겨진 요소를 클릭하는 예</target>
        </trans-unit>
        <trans-unit id="a72d714d0391ae914eb6abd8df5e7d50eaa9c8a5" translate="yes" xml:space="preserve">
          <source>Example of showing an element in order to perform action</source>
          <target state="translated">조치를 수행하기 위해 요소를 표시하는 예</target>
        </trans-unit>
        <trans-unit id="3e4c9ab1c6a1a122f79375261c0c3e58b80fa3a4" translate="yes" xml:space="preserve">
          <source>Example project &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc custom commands&lt;/a&gt; uses custom commands to avoid boilerplate code.</source>
          <target state="translated">예제 프로젝트 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc 사용자 정의 명령&lt;/a&gt; 은 사용자 정의 명령을 사용하여 상용구 코드를 피합니다.</target>
        </trans-unit>
        <trans-unit id="cc604bfa71e82620908be6522acdac0ccf013433" translate="yes" xml:space="preserve">
          <source>Example projects</source>
          <target state="translated">프로젝트 예</target>
        </trans-unit>
        <trans-unit id="c73d9ecb9b954f124575aed910e40cb5c40c69cb" translate="yes" xml:space="preserve">
          <source>Example support files are now automatically created with every project.</source>
          <target state="translated">모든 프로젝트에서 지원 파일 예제가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fbed259729114e24d3a96eb32f2bfe670fb1223b" translate="yes" xml:space="preserve">
          <source>Example using Q</source>
          <target state="translated">Q를 사용하는 예</target>
        </trans-unit>
        <trans-unit id="7634761bc3fbdbca12db3a4aa128da7bf12da86d" translate="yes" xml:space="preserve">
          <source>Example using bluebird</source>
          <target state="translated">블루 버드 사용 예</target>
        </trans-unit>
        <trans-unit id="c1aa442bf16eade0108fa19c3b02b6ed1bb1e93e" translate="yes" xml:space="preserve">
          <source>Example using jQuery deferred&amp;rsquo;s</source>
          <target state="translated">jQuery 지연을 사용하는 예</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="74ee3363c3af54336f30ee9bf21c6e43f2077a43" translate="yes" xml:space="preserve">
          <source>Examples of child commands:</source>
          <target state="translated">자식 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="880599b2a0d02b71b09ce07a47b86cc30497c14f" translate="yes" xml:space="preserve">
          <source>Examples of dual commands:</source>
          <target state="translated">이중 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="d204b0df57a68de79aef7f1fd315a2e7b2a9a438" translate="yes" xml:space="preserve">
          <source>Examples of parent commands:</source>
          <target state="translated">부모 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="8c0d3ed4241015f9415aadcca1eb538de8674009" translate="yes" xml:space="preserve">
          <source>Examples of test cases that will error due to superdomain limitations</source>
          <target state="translated">수퍼 도메인 제한으로 인해 오류가 발생하는 테스트 사례의 예</target>
        </trans-unit>
        <trans-unit id="aff42aefbbc0310909afd6be7b156eb54bb540f2" translate="yes" xml:space="preserve">
          <source>Examples of uses for cross-origin iframes</source>
          <target state="translated">교차 출처 iframe 사용 예</target>
        </trans-unit>
        <trans-unit id="33e9034158a2364c3c5b98c0752190049b235fcf" translate="yes" xml:space="preserve">
          <source>Examples of what Cypress does under the hood:</source>
          <target state="translated">Cypress가 후드에서 수행하는 작업의 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="22245bf552f5d1e2a656f31f439a800f6c9f57de" translate="yes" xml:space="preserve">
          <source>Excluding and Including Tests</source>
          <target state="translated">테스트 제외 및 포함</target>
        </trans-unit>
        <trans-unit id="2205d33617d3487ee53d2f99d5ea8fab62b927bf" translate="yes" xml:space="preserve">
          <source>Execute a system command.</source>
          <target state="translated">시스템 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="293192e5f7a60a5cbe28b76ed29b72afd3ab0c94" translate="yes" xml:space="preserve">
          <source>Execute code in &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; via the &lt;code&gt;task&lt;/code&gt; plugin event.</source>
          <target state="translated">&lt;code&gt;task&lt;/code&gt; 플러그인 이벤트 를 통해 &lt;a href=&quot;https://nodejs.org/&quot;&gt;노드&lt;/a&gt; 에서 코드를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="90e52bd11234a2f4997a4cb3136a71f017d930d1" translate="yes" xml:space="preserve">
          <source>Execution context</source>
          <target state="translated">실행 컨텍스트</target>
        </trans-unit>
        <trans-unit id="284fa58481d3e55b48c5f0000e3ff2086a2419ac" translate="yes" xml:space="preserve">
          <source>Existence</source>
          <target state="translated">Existence</target>
        </trans-unit>
        <trans-unit id="588d3efad476bd665ea1113c22f9fa826dddbdf5" translate="yes" xml:space="preserve">
          <source>Expand an array into multiple arguments.</source>
          <target state="translated">배열을 여러 인수로 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="517e48c755df8c558e3a0004f395ad1b4a6a779a" translate="yes" xml:space="preserve">
          <source>Expand the array of aliased routes</source>
          <target state="translated">별칭 경로의 배열을 확장</target>
        </trans-unit>
        <trans-unit id="c2b75ea762de66715d0880a384408dc20c0b3c27" translate="yes" xml:space="preserve">
          <source>Expand the array of cookies</source>
          <target state="translated">쿠키 배열을 확장하십시오</target>
        </trans-unit>
        <trans-unit id="9b7f7300fb810319c6b2aaae1a6dd6698c73be11" translate="yes" xml:space="preserve">
          <source>Expanded &lt;code&gt;matcher&lt;/code&gt; and &lt;code&gt;matchers&lt;/code&gt; arguments to assist in filtering browsers.</source>
          <target state="translated">브라우저 필터링을 지원하기 위해 확장 된 &lt;code&gt;matcher&lt;/code&gt; 및 &lt;code&gt;matchers&lt;/code&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="bafef844945eb3c16eb95dc63d90a555f95ac65d" translate="yes" xml:space="preserve">
          <source>Expected Binary Name(s)</source>
          <target state="translated">예상 이진 이름</target>
        </trans-unit>
        <trans-unit id="5ee30f777a419d0761dc9182ee6ecf7d6de239b9" translate="yes" xml:space="preserve">
          <source>Expected Bundle Identifier</source>
          <target state="translated">예상 번들 식별자</target>
        </trans-unit>
        <trans-unit id="a66c03cd448547b57e1fca30f9bcec2391bbb658" translate="yes" xml:space="preserve">
          <source>Expected Executable</source>
          <target state="translated">예상되는 실행 가능</target>
        </trans-unit>
        <trans-unit id="e26c182298228cb8abbe3f2ddd9eb69638d5d6ae" translate="yes" xml:space="preserve">
          <source>Expected Path</source>
          <target state="translated">예상 경로</target>
        </trans-unit>
        <trans-unit id="a23b41f77d0fb81d072c86413aa54d927a01952b" translate="yes" xml:space="preserve">
          <source>Explicit Subjects</source>
          <target state="translated">노골적인 주제</target>
        </trans-unit>
        <trans-unit id="3d69f6e534c93f0e5d5c0e0762b1a67f56a0e324" translate="yes" xml:space="preserve">
          <source>Explicit assertions are great when you want to:</source>
          <target state="translated">다음과 같은 경우 명시 적 어설 션이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a6bc7ed5c90afc6a09277e9af44f3ba18a6f6940" translate="yes" xml:space="preserve">
          <source>Export as `CYPRESS_*`</source>
          <target state="translated">`CYPRESS_ *`로 내보내기</target>
        </trans-unit>
        <trans-unit id="0ee305a454b9b7fc3f84b4d3faf7ab6165973e05" translate="yes" xml:space="preserve">
          <source>Export cypress env variables from the command line</source>
          <target state="translated">명령 행에서 cypress env 변수 내보내기</target>
        </trans-unit>
        <trans-unit id="5aa226bf009dca3cc6b371340f08ea1acef8bbf8" translate="yes" xml:space="preserve">
          <source>Expose data stores (like in Redux) so you can programmatically alter the state of your application directly from your test code.</source>
          <target state="translated">테스트 코드에서 직접 응용 프로그램의 상태를 프로그래밍 방식으로 변경할 수 있도록 데이터 저장소 (Reux와 같은)를 노출하십시오.</target>
        </trans-unit>
        <trans-unit id="7f5899935f519c40597972d8a3546b6c97a34e4b" translate="yes" xml:space="preserve">
          <source>Exposed &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method to check if a value is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">노출 &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt; 값의 유효 인스턴스의 경우에있어서 조사하는 &lt;code&gt;cy&lt;/code&gt; 또는 &lt;code&gt;cy&lt;/code&gt; 체인 방식이. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;# 3822&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97816fcca80f877e1dd8c8d4a9b6746975f3cd76" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; which holds the logic for determining an element&amp;rsquo;s visibility. Modify this to change the rules.</source>
          <target state="translated">노출 된 &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; 은 요소의 가시성을 결정하는 논리를 보유합니다. 규칙을 변경하려면 이것을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="34f1aaf7cb56bdc17b80540dea6988478e8416f6" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;visitTimeout&lt;/code&gt; and &lt;code&gt;requestTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;visitTimeout&lt;/code&gt; 및 &lt;code&gt;requestTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;구성이&lt;/a&gt; 노출 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8a6541ac0205de7e153f9bdde35833e5943314f3" translate="yes" xml:space="preserve">
          <source>Exposing Cypress Binary should no longer be necessary when cypress is locally installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;#379&lt;/a&gt;.</source>
          <target state="translated">Cypress가 로컬에 설치된 경우 Cypress 바이너리를 더 이상 노출 할 필요가 없습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;# 379&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e718c76626048f58de044a2f8c12f3bab9df0749" translate="yes" xml:space="preserve">
          <source>Extending other testing frameworks</source>
          <target state="translated">다른 테스트 프레임 워크 확장</target>
        </trans-unit>
        <trans-unit id="aff31dec6da157357b783dcfac904369b48b36fc" translate="yes" xml:space="preserve">
          <source>Extension policies: &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</source>
          <target state="translated">확장 정책 : &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494df28871f4062b348ebe4435b410b3dce90c80" translate="yes" xml:space="preserve">
          <source>Extensive memory profiling has been done and Cypress has implemented several strategies for aggressively causing garbage collection. The ebugging tools (which allow you to walk back in time through DOM snapshots, or access objects from previous tests) could exhaust all available emory in previous versions. This likely never affected most users, but if a user ran 1000&amp;rsquo;s of tests (which have been written in Cypress) it ould bomb. Now Cypress only stores data for up to 50 tests, and will begin purging data past that. When run in the terminal, Cypress doesn&amp;rsquo;t apply any of its debugging tools, so CI will be unaffected.</source>
          <target state="translated">광범위한 메모리 프로파일 링이 완료되었으며 Cypress는 가비지 수집을 적극적으로 유발하는 몇 가지 전략을 구현했습니다. 디버깅 도구 (DOM 스냅 샷을 통해 시간을 거슬러 올라가거나 이전 테스트의 오브젝트에 액세스 할 수 있도록 함)는 이전 버전에서 사용 가능한 모든에 모리를 소진 할 수 있습니다. 이것은 대부분의 사용자에게 영향을 미치지 않았지만, 사용자가 1000 번의 테스트 (Cypress로 작성된)를 실행하면 폭발 할 수 있습니다. 이제 Cypress는 최대 50 개의 테스트에 대한 데이터 만 저장하고 그 이후의 데이터 제거를 시작합니다. 터미널에서 실행될 때 Cypress는 디버깅 도구를 적용하지 않으므로 CI는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7470bcae7dc95c1672e3376b1d6f69778f458ce" translate="yes" xml:space="preserve">
          <source>External Navigation</source>
          <target state="translated">외부 탐색</target>
        </trans-unit>
        <trans-unit id="2af280979e642a405f24bf2e6b6503a218b35f10" translate="yes" xml:space="preserve">
          <source>Extra whitespace and quotations are now stripped from the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to help prevent some unexpected results when set in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;#4506&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 환경 변수 에서 추가 공백과 따옴표가 제거 되어 Windows에서 설정 될 때 예기치 않은 결과가 발생하지 않도록합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;# 4506&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="89067fa664cb37a8a9e475b99e5cf190db554dca" translate="yes" xml:space="preserve">
          <source>Failing a hook will no longer continue to count the duration forever.</source>
          <target state="translated">갈고리 실패는 더 이상 지속 시간을 영원히 계산하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c940af38cb35879503e53721ac8014d87ca75a1d" translate="yes" xml:space="preserve">
          <source>Failing tests which become passing will automatically collapse again.</source>
          <target state="translated">실패한 테스트는 자동으로 다시 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="e9c4bd1d829292dc8565f6007a335c96eb1f722c" translate="yes" xml:space="preserve">
          <source>Failure messages are much more precise.</source>
          <target state="translated">실패 메시지는 훨씬 더 정확합니다.</target>
        </trans-unit>
        <trans-unit id="3eec15825d37016fd28fda8986cbc917e7a33c68" translate="yes" xml:space="preserve">
          <source>Failures</source>
          <target state="translated">Failures</target>
        </trans-unit>
        <trans-unit id="79b1b853fcf18ff708b48a26d6bca547168086f2" translate="yes" xml:space="preserve">
          <source>Fast, &amp;lt; 20ms response times</source>
          <target state="translated">20ms 미만의 빠른 응답 시간</target>
        </trans-unit>
        <trans-unit id="8d8701b6c18329b6a2215e2ed7ea8428d157b3ee" translate="yes" xml:space="preserve">
          <source>Fast, easy and reliable visual UI testing with Cypress</source>
          <target state="translated">Cypress를 통한 빠르고 쉽고 안정적인 시각적 UI 테스트</target>
        </trans-unit>
        <trans-unit id="b8dd84b887712a47a223e7acb621659657045025" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른보다 깊은 요소보다 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 의 선호</target>
        </trans-unit>
        <trans-unit id="bf73c4da1a11de431287bb2178a27739b085cd2a" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른 요소보다 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 선호</target>
        </trans-unit>
        <trans-unit id="00bd3404c5abcb1cca7ae893772036a47f83d02b" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른 심층 요소보다 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 선호</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="b2da05997204759c0568480dcc216c1f835ad8c5" translate="yes" xml:space="preserve">
          <source>Feel free to &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;explore these additional logging in&lt;/a&gt; recipes.</source>
          <target state="translated">레시피 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;에서 이러한 추가 로깅을&lt;/a&gt; 자유롭게 탐색하십시오 .</target>
        </trans-unit>
        <trans-unit id="66de98b66dd6c45b26036329406669348c695928" translate="yes" xml:space="preserve">
          <source>Feel free to submit your published plugins to our &lt;a href=&quot;../../plugins/index&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">게시 된 플러그인을 플러그인 &lt;a href=&quot;../../plugins/index&quot;&gt;목록에&lt;/a&gt; 제출하십시오 .</target>
        </trans-unit>
        <trans-unit id="663da9347806aa189f920ceb8b6f5cd33e8f3793" translate="yes" xml:space="preserve">
          <source>File changes</source>
          <target state="translated">파일 변경</target>
        </trans-unit>
        <trans-unit id="7687744db8976c35166c825d15906dc94662741b" translate="yes" xml:space="preserve">
          <source>File events</source>
          <target state="translated">파일 이벤트</target>
        </trans-unit>
        <trans-unit id="35c5bd3a1f18fe1dd0f0628bb953a4183220028e" translate="yes" xml:space="preserve">
          <source>File object</source>
          <target state="translated">파일 객체</target>
        </trans-unit>
        <trans-unit id="feffac916d35a0e2a6b23d0031377f4f282551f9" translate="yes" xml:space="preserve">
          <source>File system flag as used with &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt; &lt;code&gt;fs.writeFile&lt;/code&gt; &lt;/a&gt; 과 함께 사용되는 파일 시스템 플래그</target>
        </trans-unit>
        <trans-unit id="e91f50eead81f93d83448a8f1b714b149e54d231" translate="yes" xml:space="preserve">
          <source>File watching is fixed (again) when changing between specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;#1018&lt;/a&gt;.</source>
          <target state="translated">사양 변경시 파일 다시보기가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;# 1018&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="e75c9effd39648002ee3fa4279bf21407b3ca86e" translate="yes" xml:space="preserve">
          <source>Fill in and submit the OSS plan request form.</source>
          <target state="translated">OSS 계획 요청 양식을 작성하여 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="feb080a9f7cb2c3f7fe88c9ed4be9c41ef934c26" translate="yes" xml:space="preserve">
          <source>Fill in the name of your project (this is only for display purposes and can be changed later).</source>
          <target state="translated">프로젝트 이름을 입력하십시오 (표시 용으로 만 사용되며 나중에 변경할 수 있음).</target>
        </trans-unit>
        <trans-unit id="a865659c5e8630a023fa6bf42dbaabaf6c0c4f40" translate="yes" xml:space="preserve">
          <source>Fill in their email and select their &lt;a href=&quot;#User-roles&quot;&gt;role&lt;/a&gt; then click &lt;strong&gt;Invite User&lt;/strong&gt;&lt;em&gt;Note: only &amp;lsquo;owners can give other user&amp;rsquo;s &amp;lsquo;owner&amp;rsquo; access.&lt;/em&gt;</source>
          <target state="translated">이메일을 작성하고 &lt;a href=&quot;#User-roles&quot;&gt;역할을&lt;/a&gt; 선택한 다음 &lt;strong&gt;사용자 초대&lt;/strong&gt; 를 클릭 &lt;em&gt;하십시오. 참고 : '소유자 만 다른 사용자의'소유자 '액세스 권한을 부여 할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="098832ec24832f68e39ac3c1aa619064c4962e5c" translate="yes" xml:space="preserve">
          <source>Filter DOM element(s) from a set of DOM elements.</source>
          <target state="translated">DOM 요소 세트에서 DOM 요소를 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="c470d8b4dfda0fe97907fa10ff672d681a05ed1c" translate="yes" xml:space="preserve">
          <source>Filter by text</source>
          <target state="translated">텍스트로 필터링</target>
        </trans-unit>
        <trans-unit id="923928d715d63bece2975ad3f1107b4d534186ca" translate="yes" xml:space="preserve">
          <source>Filter one or multiple browsers by the browser properties. You can inspect the current browser&amp;rsquo;s properties by using the &lt;a href=&quot;browser&quot;&gt;&lt;code&gt;Cypress.browser&lt;/code&gt;&lt;/a&gt;. Supported properties are:</source>
          <target state="translated">브라우저 속성으로 하나 또는 여러 브라우저를 필터링합니다. &lt;a href=&quot;browser&quot;&gt; &lt;code&gt;Cypress.browser&lt;/code&gt; &lt;/a&gt; 를 사용하여 현재 브라우저의 속성을 검사 할 수 있습니다 . 지원되는 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b50b864ca2457f8d6f9fc854473b9edbbd945cd2" translate="yes" xml:space="preserve">
          <source>Filter the current subject to the elements with the class &amp;lsquo;active&amp;rsquo;</source>
          <target state="translated">'active'클래스를 사용하여 현재 주제를 요소로 필터링하십시오.</target>
        </trans-unit>
        <trans-unit id="a27ab78e842f8d231922bc0a6c4ebfcbe7e1e1e2" translate="yes" xml:space="preserve">
          <source>Filtered out Ajax requests for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; files by default.</source>
          <target state="translated">기본적으로 &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.css&lt;/code&gt; 파일에 대한 Ajax 요청을 필터링했습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2cf4e08bb232e200ef4bc511c6b34132810357" translate="yes" xml:space="preserve">
          <source>Final run status (passed, failed, etc)</source>
          <target state="translated">최종 실행 상태 (통과, 실패 등)</target>
        </trans-unit>
        <trans-unit id="688b6ff3fc931c6dd9c36d8b51fdc1ea3590d8a2" translate="yes" xml:space="preserve">
          <source>Finally tracked down and fixed edge case causing empty view to display when tests were not empty. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;#13&lt;/a&gt;</source>
          <target state="translated">테스트가 비어 있지 않은 경우 빈 뷰가 표시되도록 추적하고 고정 된 대소 문자를 표시합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;# 13&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a5f5552afd89b23d9c52a20feccb3d490f76b6" translate="yes" xml:space="preserve">
          <source>Finally, we support creating your own custom reporters or using any kind of 3rd party reporter.</source>
          <target state="translated">마지막으로, 우리는 당신의 자신의 사용자 정의 기자를 만들거나 모든 종류의 타사 기자를 사용하는 것을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f7e11838bb265e408c3b20a233e6d4ca384ba884" translate="yes" xml:space="preserve">
          <source>Find 5 elements with the given data attribute</source>
          <target state="translated">주어진 데이터 속성을 가진 5 개의 요소 찾기</target>
        </trans-unit>
        <trans-unit id="92368cf8c0b0b17d5bfdb96f8c843e1b7832f6ce" translate="yes" xml:space="preserve">
          <source>Find all of the &lt;code&gt;.active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.nav&lt;/code&gt; 까지 &lt;code&gt;.active&lt;/code&gt; 요소의 모든 조상 찾기</target>
        </trans-unit>
        <trans-unit id="8c541c51d6a1a5c57200fc70b87a281be5d1da8d" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;</source>
          <target state="translated">전에 요소의 형제 자매를 모두 찾을 수 &lt;code&gt;#nuts&lt;/code&gt; 까지 &lt;code&gt;#veggies&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f61919f1581dec2bf2d5cf12c24826c0f271991" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;.third&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.third&lt;/code&gt; 전에 요소의 형제를 모두 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="cf397003d132ad643c0e26fc7fbcf78ecc493ec5" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt; 까지 요소의 형제를 모두 찾습니다</target>
        </trans-unit>
        <trans-unit id="a4d29db1950969e3784a8c02e121a375d800fa05" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; 다음에 나오는 요소의 형제를 모두 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="81b19f789476d7ab74f3c3a8ad986e98fa7c56fb" translate="yes" xml:space="preserve">
          <source>Find all of the following siblings of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 li의 다음 형제를 모두 찾으십시오. 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="c992ea11a8cf058b4435966e028bb9f7a37ed95f" translate="yes" xml:space="preserve">
          <source>Find all of the previous siblings of each &lt;code&gt;li&lt;/code&gt;. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 &lt;code&gt;li&lt;/code&gt; 의 이전 형제를 모두 찾으십시오 . 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="80ac7d74405f965af6b5783c7d44735681a64289" translate="yes" xml:space="preserve">
          <source>Find an element by its selector</source>
          <target state="translated">선택기로 요소 찾기</target>
        </trans-unit>
        <trans-unit id="6104679c51c71ca5e3c4c8420302b383f5606442" translate="yes" xml:space="preserve">
          <source>Find an element by its selector.</source>
          <target state="translated">선택기로 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="a0e5a3de1058594e24b5fa9435bc8f8c79a8e5ea" translate="yes" xml:space="preserve">
          <source>Find and click on a button inside the shadow DOM</source>
          <target state="translated">Shadow DOM 내부의 버튼을 찾아 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="7a120e47345559e817051b88761a5acfe8be6f7d" translate="yes" xml:space="preserve">
          <source>Find row with specific cell and confirm other cells in the row</source>
          <target state="translated">특정 셀이있는 행을 찾고 행의 다른 셀을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="adfac6dd422443d147406aa7dc4c9bde585b6026" translate="yes" xml:space="preserve">
          <source>Find the 2nd element within the elements</source>
          <target state="translated">요소 내에서 두 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="4bd1d71d3c4462c2c514b8869c373720f113aefe" translate="yes" xml:space="preserve">
          <source>Find the 2nd from the last element within the elements</source>
          <target state="translated">요소 내의 마지막 요소에서 두 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="66febaf0d0deb961859132d85eec19f706c7fd31" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-body&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;post-body&lt;/code&gt; 클래스가 있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="d10cbcf8128ccc542cc5f4d349272af73f1982d7" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-title&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;post-title&lt;/code&gt; 클래스가 있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="5aa7a7a24fec1dd97f14855f0347bdb63199299d" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;h1&lt;/code&gt; tag, ensure it contains the text &amp;ldquo;My First Post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; 태그를 찾아서 &amp;ldquo;My First Post&amp;rdquo;라는 텍스트가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0a629d480b77f87962de841533ac568613cca727" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;input[type='submit']&lt;/code&gt; by value</source>
          <target state="translated">값으로 &lt;code&gt;input[type='submit']&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b7c01ef4267a8207f2efc0f895e23cbf8c0c9dab" translate="yes" xml:space="preserve">
          <source>Find the TypeScript definition for the results object in the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;&lt;code&gt;cypress/cli/types&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt; &lt;code&gt;cypress/cli/types&lt;/code&gt; 폴더&lt;/a&gt; 에서 결과 객체에 대한 TypeScript 정의를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="10df2b3516f7e33c34a15898a97d21e45db73ca2" translate="yes" xml:space="preserve">
          <source>Find the closest element of &lt;code&gt;li.active&lt;/code&gt; with the class &amp;lsquo;nav&amp;rsquo;</source>
          <target state="translated">클래스 'nav'를 사용하여 &lt;code&gt;li.active&lt;/code&gt; 의 가장 가까운 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="9903e70c221c495e32ab6ceb17ffcbc3dd4c75b2" translate="yes" xml:space="preserve">
          <source>Find the closest element of the &lt;code&gt;.error&lt;/code&gt; with the class &amp;lsquo;banner&amp;rsquo;</source>
          <target state="translated">'banner'클래스 에서 &lt;code&gt;.error&lt;/code&gt; 의 가장 가까운 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="075f836a43dce9616ea5659aa81eaa8ad295ba3f" translate="yes" xml:space="preserve">
          <source>Find the complete CircleCI v2 example with caching and artifact upload in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo 에서 캐싱 및 아티팩트 업로드가 포함 된 완전한 CircleCI v2 예제를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="d1cc283dc3702c8d3e6d222ab076e9bf3b77445a" translate="yes" xml:space="preserve">
          <source>Find the dropdown-menu and click it</source>
          <target state="translated">드롭 다운 메뉴를 찾아 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="ebe6d0a917538cd5b8200bdc5503b9bfd7c54a8a" translate="yes" xml:space="preserve">
          <source>Find the element containing the text &lt;code&gt;Submit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Submit&lt;/code&gt; 텍스트가 포함 된 요소를 찾으 십시오 .</target>
        </trans-unit>
        <trans-unit id="f45aaee6ddbabbbed5ee653102c34f6e299a862f" translate="yes" xml:space="preserve">
          <source>Find the element next to &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; 옆의 요소 찾기</target>
        </trans-unit>
        <trans-unit id="b4bab536a6c5451fa8c798585ff1ed23fc2d2733" translate="yes" xml:space="preserve">
          <source>Find the element with content: &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">내용이있는 요소 찾기 : &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fbb7af5c1b67383d92e9b8b2376530e800a405" translate="yes" xml:space="preserve">
          <source>Find the first &lt;code&gt;li&lt;/code&gt; descendent within a &lt;code&gt;ul&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ul&lt;/code&gt; 에서 첫 번째 &lt;code&gt;li&lt;/code&gt; 자손을 찾으십시오</target>
        </trans-unit>
        <trans-unit id="9a5dc13574576534052754b465d51599a18744fe" translate="yes" xml:space="preserve">
          <source>Find the first element containing a number</source>
          <target state="translated">숫자가 포함 된 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="4ffee2601a6f1877a2e04498faf28aaf834aa5e2" translate="yes" xml:space="preserve">
          <source>Find the first element containing some text</source>
          <target state="translated">텍스트가 포함 된 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="303d529ce52ae406adef3293db17ef34a6013e64" translate="yes" xml:space="preserve">
          <source>Find the first element with text matching the regular expression</source>
          <target state="translated">정규식과 일치하는 텍스트가있는 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="6ecc00bc5ee2c880ee993d32184cdabaffb6010c" translate="yes" xml:space="preserve">
          <source>Find the link with an href attribute containing the word &amp;ldquo;questions&amp;rdquo; and click it</source>
          <target state="translated">&quot;질문&quot;이라는 단어가 포함 된 href 속성이있는 링크를 찾아 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="7b9ad828e76201eaec43c5bd8b7495a6b5e9aa1b" translate="yes" xml:space="preserve">
          <source>Find the previous element of the element with class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 클래스가있는 요소의 이전 요소 찾기</target>
        </trans-unit>
        <trans-unit id="b050e5303f0aeff67972b597916c20cb954e472e" translate="yes" xml:space="preserve">
          <source>Find the previous element with a class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 클래스가있는 이전 요소 찾기</target>
        </trans-unit>
        <trans-unit id="f48ae5b1727499efa01b744170218b06cbf5a048" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 li의 다음 형제를 찾으십시오. 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="2d913fabe6d31a552f869448ec77af59ce7ab7ef" translate="yes" xml:space="preserve">
          <source>Finding Selectors</source>
          <target state="translated">선택기 찾기</target>
        </trans-unit>
        <trans-unit id="418d4574c491cab5e7bfcd22805c34f1a960026b" translate="yes" xml:space="preserve">
          <source>Fire other Event types.</source>
          <target state="translated">다른 이벤트 유형을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="3716d23e9ad7315ba3e5e070513375357d405fce" translate="yes" xml:space="preserve">
          <source>Fire the event at a descendent</source>
          <target state="translated">자손에게 이벤트를 시작</target>
        </trans-unit>
        <trans-unit id="d0c8fbf533787f205ef74cb4ef685fa5336a95bd" translate="yes" xml:space="preserve">
          <source>Fire the event at the desired coordinates.</source>
          <target state="translated">원하는 좌표로 이벤트를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="015fc6ecc28be811b21b9209a8b9e660856657fe" translate="yes" xml:space="preserve">
          <source>Firefox: visit &lt;code&gt;about:config&lt;/code&gt; URL within your Firefox browser to see all available preferences.</source>
          <target state="translated">Firefox : 사용 가능한 모든 기본 설정을 보려면 Firefox 브라우저에서 &lt;code&gt;about:config&lt;/code&gt; URL을 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="3297c2c690e3329a34b567de00181d54c48fdc24" translate="yes" xml:space="preserve">
          <source>Fires after all your resources have finished loading after a page transition. This fires at the exact same time as a &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onLoad&lt;/code&gt; callback.</source>
          <target state="translated">페이지 전환 후 모든 리소스로드가 완료되면 시작됩니다. 이것은 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onLoad&lt;/code&gt; 콜백 과 정확히 동시에 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="65bcba53d3ddc0803f41e82a2e2197390e4654af" translate="yes" xml:space="preserve">
          <source>Fires after the test and all &lt;strong&gt;afterEach&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt; hooks run.</source>
          <target state="translated">테스트 및 결국 화재 &lt;strong&gt;afterEach&lt;/strong&gt; 및 &lt;strong&gt;후&lt;/strong&gt; 실행 후크.</target>
        </trans-unit>
        <trans-unit id="b3b542efbb04e9cc7735acf1c6261c28a91865b0" translate="yes" xml:space="preserve">
          <source>Fires as the page begins to load, but before any of your applications JavaScript has executed. This fires at the exact same time as &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onBeforeLoad&lt;/code&gt; callback. Useful to modify the window on a page transition.</source>
          <target state="translated">페이지가로드되기 시작하지만 애플리케이션이 실행되기 전에 시작됩니다. 이것은 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onBeforeLoad&lt;/code&gt; 콜백 과 정확히 동시에 발생합니다 . 페이지 전환시 창을 수정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d9f9dd1b33251212c25a404143902e006ee99261" translate="yes" xml:space="preserve">
          <source>Fires before the test and all &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;beforeEach&lt;/strong&gt; hooks run.</source>
          <target state="translated">테스트 &lt;strong&gt;전&lt;/strong&gt; 및 &lt;strong&gt;각&lt;/strong&gt; 후크 &lt;strong&gt;전&lt;/strong&gt; / &lt;strong&gt;후에 발생&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e3a3efcfbcbc43c00380e65ca6e41d27711c6f1b" translate="yes" xml:space="preserve">
          <source>Fires when a cy command is first invoked and enqueued to be run later. Useful for debugging purposes if you&amp;rsquo;re confused about the order in which commands will execute.</source>
          <target state="translated">cy 명령이 처음 호출되고 나중에 실행되도록 대기열에 추가 될 때 발생합니다. 명령 실행 순서가 혼란 스러울 경우 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2dec5789ec4fa855297114ba75e3f8339135c7a5" translate="yes" xml:space="preserve">
          <source>Fires when an uncaught exception occurs in your application. Cypress will fail the test when this fires. Return &lt;code&gt;false&lt;/code&gt; from this event and Cypress will not fail the test. Also useful for debugging purposes because the actual &lt;code&gt;error&lt;/code&gt; instance is provided to you.</source>
          <target state="translated">응용 프로그램에서 포착되지 않은 예외가 발생하면 발생합니다. 이것이 발생하면 Cypress가 테스트에 실패합니다. 이 이벤트에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 Cypress가 테스트에 실패하지 않습니다. 실제 &lt;code&gt;error&lt;/code&gt; 인스턴스가 제공 되므로 디버깅 목적으로도 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="8ca3ed7f57c3d04ed29b48a431210d5cfefd574d" translate="yes" xml:space="preserve">
          <source>Fires when cy begins actually running and executing your command. Useful for debugging and understanding how the command queue is async.</source>
          <target state="translated">cy가 실제로 명령을 실행하고 실행하기 시작할 때 발생합니다. 명령 대기열의 비동기 방식을 디버깅하고 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8cf570e78794600150280ae9f2447cadfed546db" translate="yes" xml:space="preserve">
          <source>Fires when cy finishes running and executing your command. Useful for debugging and understanding how commands are handled.</source>
          <target state="translated">cy가 명령 실행 및 실행을 마치면 발생합니다. 명령 처리 방법을 디버깅하고 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="afd7817fa57e4ccf201566aefa2db46574c9786d" translate="yes" xml:space="preserve">
          <source>Fires when the test has failed. It is technically possible to prevent the test from actually failing by binding to this event and invoking an async &lt;code&gt;done&lt;/code&gt; callback. However this is &lt;strong&gt;strongly discouraged&lt;/strong&gt;. Tests should never legitimately fail. This event exists because it&amp;rsquo;s extremely useful for debugging purposes.</source>
          <target state="translated">테스트가 실패하면 발동됩니다. 이 이벤트에 바인딩하고 비동기 &lt;code&gt;done&lt;/code&gt; 콜백을 호출하여 테스트가 실제로 실패하지 않도록하는 것은 기술적으로 가능합니다 . 그러나 이것은 &lt;strong&gt;권장하지 않습니다&lt;/strong&gt; . 테스트는 합법적으로 실패해서는 안됩니다. 이 이벤트는 디버깅 목적으로 매우 유용하기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="20fcf72a456dcba1707986a3154aceaea166e797" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.alert()&lt;/code&gt; method. Cypress will auto accept alerts. You cannot change this behavior.</source>
          <target state="translated">앱이 전역 &lt;code&gt;window.alert()&lt;/code&gt; 메서드를 호출하면 시작 됩니다. Cypress는 경고를 자동 수락합니다. 이 동작은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="befd5f340a17860fcb8ef526396363696792b89c" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.confirm()&lt;/code&gt; method. Cypress will auto accept confirmations. Return &lt;code&gt;false&lt;/code&gt; from this event and the confirmation will be canceled.</source>
          <target state="translated">앱이 전역 &lt;code&gt;window.confirm()&lt;/code&gt; 메서드를 호출하면 시작 됩니다. Cypress는 확인을 자동 수락합니다. 이 이벤트에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 확인이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="a215985211e48f8c81b8565a107db5825276df1f" translate="yes" xml:space="preserve">
          <source>Fires when your application has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">애플리케이션이 언로드되고 탐색 중일 때 실행됩니다. 실제 이벤트 개체가 제공됩니다. 이 이벤트는 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="20583e05027ccd1f90b17c009fed01d0cb0ba65a" translate="yes" xml:space="preserve">
          <source>Fires when your application is about to navigate away. The real event object is provided to you. Your app may have set a &lt;code&gt;returnValue&lt;/code&gt; on the event, which is useful to assert on.</source>
          <target state="translated">응용 프로그램이 멀리 이동하려고 할 때 발생합니다. 실제 이벤트 객체가 제공됩니다. 앱 에서 이벤트에 대해 &lt;code&gt;returnValue&lt;/code&gt; 를 설정했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63603917c7fb0ef19543583000876125715fc732" translate="yes" xml:space="preserve">
          <source>Fires when your application is has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">애플리케이션이 언로드되어 탐색 중일 때 발생합니다. 실제 이벤트 객체가 제공됩니다. 이 이벤트는 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="395a5ae275d0ea21c36c59f721485c25305c611e" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">&lt;strong&gt;Cypress&lt;/strong&gt; 가 애플리케이션을 스크롤 할 때마다 실행됩니다. 이 이벤트는 Cypress가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능성을 기다리고 계산할&lt;/a&gt; 때 시작됩니다 . 현재 커버되고있는 'uncover'요소로 스크롤됩니다. 이 이벤트는 Cypress가 요소가 대화 형이 아닌 것으로 생각하는 이유를 디버그하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="072a4279602433c5ea288781fece0864ee071c43" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">&lt;strong&gt;Cypress&lt;/strong&gt; 가 애플리케이션을 스크롤 할 때마다 실행됩니다. 이 이벤트는 Cypress가 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;실행 가능성을 기다리고 계산할&lt;/a&gt; 때 시작됩니다 . 현재 다루고있는 요소를 '발굴'하기 위해 스크롤됩니다. 이 이벤트는 Cypress가 요소가 대화 형이 아니라고 생각하는 이유를 디버깅하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dc6f542e38ecdc0178d0083539cb84e9e36f9f9e" translate="yes" xml:space="preserve">
          <source>Fires whenever Cypress detects that your application&amp;rsquo;s URL has changed.</source>
          <target state="translated">Cypress가 애플리케이션의 URL이 변경되었음을 감지 할 때마다 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="18fdf04e181c4d29f74c1cff8247a77392a18edf" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">명령이 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재시도 루틴을&lt;/a&gt; 시작할 때마다 발생 합니다 . Cypress가 내부적으로 재시도 간격을 기다린 후 후연에서 호출됩니다. 명령이 재 시도되는 &lt;strong&gt;이유&lt;/strong&gt; 를 이해하는 데 유용 하며 일반적으로 재 시도를 발생시키는 실제 오류가 포함됩니다. 명령이 실패하면 최종 오류는 실제로 테스트에 실패하기 위해 발생합니다. 이 이벤트는 본질적으로 Cypress가 실패한 이유를 디버그하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="af8929223808a62242044b03a07bc71137d8fd9e" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/retry-ability.html&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">명령이 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/retry-ability.html&quot;&gt;재시도 루틴을&lt;/a&gt; 시작할 때마다 발생 합니다 . Cypress가 내부적으로 재시도 간격을 기다린 후 후행 에지에서 호출됩니다. 명령이 재 시도 하는 &lt;strong&gt;이유&lt;/strong&gt; 를 이해하는 데 유용 하며 일반적으로 재 시도를 유발하는 실제 오류를 포함합니다. 명령이 실패하면 최종 오류는 실제로 테스트를 실패하게 만드는 오류입니다. 이 이벤트는 본질적으로 Cypress가 실패한 이유를 디버깅하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6e1b9e40db73c50b362b03b85fe6cb8f78a91a6a" translate="yes" xml:space="preserve">
          <source>Fires whenever a command emits this event so it can be displayed in the Command Log. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">명령이이 이벤트를 발생시킬 때마다 발생하여 명령 로그에 표시 될 수 있습니다. 내부 cypress 명령이 &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log ()&lt;/a&gt; API를 활용하는 방법을 보는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="2a70e102286861560c039597e66d12a2e7a950a7" translate="yes" xml:space="preserve">
          <source>Fires whenever a command&amp;rsquo;s attributes changes. This event is debounced to prevent it from firing too quickly and too often. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">명령의 속성이 변경 될 때마다 발생합니다. 이 이벤트는 너무 빨리 그리고 자주 발생하지 않도록 공개되었습니다. 내부 cypress 명령이 &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log ()&lt;/a&gt; API를 활용하는 방법을 보는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="3fe5a40f60250d1365d6022a092e685ce47f4e8b" translate="yes" xml:space="preserve">
          <source>Fires whenever the viewport changes via a &lt;code&gt;cy.viewport()&lt;/code&gt; or naturally when Cypress resets the viewport to the default between tests. Useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;cy.viewport()&lt;/code&gt; 를 통해 뷰포트가 변경 될 때마다 또는 Cypress가 테스트간에 뷰포트를 기본값으로 재설정 할 때 자연스럽게 발생합니다. 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="216f7ec41381a4aea27403eb443a599bc0b9e418" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s visit a web page. We will visit our &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; application in this example so that you can try Cypress out without needing to worry about finding a page to test.</source>
          <target state="translated">먼저 웹 페이지를 방문하십시오. 이 예제에서는 &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; 응용 프로그램을 방문 하여 테스트 할 페이지를 찾을 필요없이 Cypress를 시험해볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c51747a9109d9350312217267bedd3d22a3f73a4" translate="yes" xml:space="preserve">
          <source>First, print where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">먼저 &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 바이너리가 설치된 위치를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="2328b7180d662b87895b228f6df298db17f851a3" translate="yes" xml:space="preserve">
          <source>Fix capitalization of &lt;code&gt;Xvfb&lt;/code&gt; in error messages. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;#4262&lt;/a&gt;.</source>
          <target state="translated">오류 메시지에서 &lt;code&gt;Xvfb&lt;/code&gt; 의 대문자를 수정하십시오 . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;# 4262&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86af0c91e4d554a431841c4b48230d1e03a384e5" translate="yes" xml:space="preserve">
          <source>Fix edge case with forced focusing / blurring an element when document is not in focus and the element is no longer in the DOM.</source>
          <target state="translated">문서의 초점이 맞지 않고 요소가 더 이상 DOM에없는 경우 요소를 강제로 초점을 맞추거나 흐리게 처리하여 가장자리를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="12bb69b63d17fe3ceb1c091b056c08de1d1091b6" translate="yes" xml:space="preserve">
          <source>Fix for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; SSL issues when host certificates were self signed.</source>
          <target state="translated">에 대한 수정 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 호스트 인증서는 자체 SSL 문제에 서명했을 때.</target>
        </trans-unit>
        <trans-unit id="578717dae25898e735a633254852c0af1a4b25fb" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;__initial=true&lt;/code&gt; query param on initial redirects.</source>
          <target state="translated">초기 리디렉션에서 누락 된 &lt;code&gt;__initial=true&lt;/code&gt; 쿼리 매개 변수가 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3f4967afa344c3a7afc269d86cfd6e6d2855feee" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;moment.js&lt;/code&gt; from &lt;code&gt;bower.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;moment.js&lt;/code&gt; 에서 누락 된 moment.js 를 수정 &lt;code&gt;bower.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5473e1c9b6b37c4c0e900c359ce20540eae846ba" translate="yes" xml:space="preserve">
          <source>Fix missing trailing slash from initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 요청 에서 누락 된 슬래시를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="a01dce2ea309fbcd0cf6dc57ea3ce76e1385ec0f" translate="yes" xml:space="preserve">
          <source>Fix sourceMappingURL browser bug &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt;.</source>
          <target state="translated">sourceMappingURL 브라우저 버그 &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt; 을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="11b0d124e84238ede72803d0137923b1e12efc87" translate="yes" xml:space="preserve">
          <source>Fix test titles not being escaped due to refactoring.</source>
          <target state="translated">리팩토링으로 인해 테스트 타이틀이 이스케이프되지 않도록 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="aafd288aaf76025069d7a6bb6e7b941f1fb9698a" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; breaking on chains when passing the same &lt;code&gt;options&lt;/code&gt; references. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;#365&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 같은 통과 할 때 체인에 침입 &lt;code&gt;options&lt;/code&gt; 참조. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;# 365&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a74b09d876152e4f811aefa8d06cec8d4ab086cb" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; inserting a rogue &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag after the first letter in &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;#1926&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 요소 의 첫 글자 뒤에 불량 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 태그를 삽입하는 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 수정 되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;# 1926&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="52d62b10a280f839c5da56508e01deb48c1beb4e" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing &lt;code&gt;input&lt;/code&gt; event for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; on versions 15.6.x. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;#536&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 발사하지 &lt;code&gt;input&lt;/code&gt; 에 대한 이벤트를 &lt;a href=&quot;https://reactjs.org/&quot;&gt;반작용&lt;/a&gt; 버전 15.6.x.에 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;# 536&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f662f8fac4741daea21d050277cd93e22c3d41e4" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;opener of undefined&lt;/code&gt; errors due to &lt;code&gt;page load&lt;/code&gt; events causing snapshots prior to the &lt;code&gt;load&lt;/code&gt; event of the remote application. Thanks to everyone who helped pitched in on this one! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;#258&lt;/a&gt;.</source>
          <target state="translated">원격 애플리케이션 의 &lt;code&gt;load&lt;/code&gt; 이벤트 이전에 스냅 샷을 발생시키는 &lt;code&gt;page load&lt;/code&gt; 이벤트 로 인해 &lt;code&gt;opener of undefined&lt;/code&gt; 오류가 발생하지 않던 문제를 수정했습니다 . 이 일에 도움을 주신 모든 분들께 감사드립니다! 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;# 258&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="235303e914ef7bbd134d04d6915d4bbb3dca43f8" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;selectionStart&lt;/code&gt; and &lt;code&gt;selectionEnd&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;{leftarrow}&lt;/code&gt; or &lt;code&gt;{rightarrow}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;#1234&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;code&gt;selectionStart&lt;/code&gt; 및 &lt;code&gt;selectionEnd&lt;/code&gt; 가진 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 사용시 &lt;code&gt;{leftarrow}&lt;/code&gt; 또는 &lt;code&gt;{rightarrow}&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;# 1234&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="35d906e96dd65bcb3ff8c488e394665a96ee5e42" translate="yes" xml:space="preserve">
          <source>Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We finally tracked down this issue which made it appear as if Cypress was &amp;ldquo;hanging&amp;rdquo; after closing a spec file and then attempting to open the next one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;#2183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt;.</source>
          <target state="translated">과도하고 불필요한 글 로빙으로 인해 CI에서 Cypress가 멈추는 문제를 해결했습니다. 우리는 마침내이 문제를 추적하여 스펙 파일을 닫은 후 다음 파일을 열려고 시도한 후 Cypress가 &quot;매달려&quot;있는 것처럼 보입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;# 2183&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;# 1905&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;# 1912를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="ef17c202682eca1a169dad619332a8557814c664" translate="yes" xml:space="preserve">
          <source>Fixed Cypress not correctly aborting long running connections (such as server sent events) on proxied requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;#2612&lt;/a&gt;.</source>
          <target state="translated">프록시 된 요청에서 Cypress가 장기 실행 연결 (예 : 서버 전송 이벤트)을 올바르게 중단하지 않던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;# 2612&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f9669770f306f25a505189c057478c54515db829" translate="yes" xml:space="preserve">
          <source>Fixed Test Code</source>
          <target state="translated">고정 테스트 코드</target>
        </trans-unit>
        <trans-unit id="13a9fead295c05643d7ba8ee723e8713a1aa5903" translate="yes" xml:space="preserve">
          <source>Fixed Type error being thrown for users using TypeScript 3. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;.</source>
          <target state="translated">고정 유형의 오류가 타이프 라이터 3. 수정하여 사용자를위한 슬로우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;2363 #을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2dc28540a862ccbf3f051f0f0ef94a933350e1c0" translate="yes" xml:space="preserve">
          <source>Fixed TypeScript error caused by &lt;code&gt;dtslint&lt;/code&gt; dependency introduced in 3.1.4. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;#3024&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;#3136&lt;/a&gt;.</source>
          <target state="translated">3.1.4에서 소개 된 &lt;code&gt;dtslint&lt;/code&gt; 종속성으로 인한 TypeScript 오류를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;# 3024&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;# 3136&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="dea00df4206deeacedda8d66d0f1517b23f5420c" translate="yes" xml:space="preserve">
          <source>Fixed URL proxy issue with subdomains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;#183&lt;/a&gt;.</source>
          <target state="translated">하위 도메인의 URL 프록시 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;# 183&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b9c7b352ca8a81eb3f730094b9d5febac64dfda" translate="yes" xml:space="preserve">
          <source>Fixed a bug causing screenshots saved via &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to be in different folders when you ran using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; . Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;#2091&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 을&lt;/a&gt; 사용하여 실행했을 때 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 을 통해 저장된 스크린 샷 이 다른 폴더에 있는 버그를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;# 2091&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ea194ebc7a0241467b7bb6eeb910f0701101a6c" translate="yes" xml:space="preserve">
          <source>Fixed a bug for users running external network proxies that prevented requests from completing. Requests should now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;#4257&lt;/a&gt;.</source>
          <target state="translated">요청을 완료하지 못하게하는 외부 네트워크 프록시를 실행하는 사용자의 버그가 수정되었습니다. 요청이 모두 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;# 4257&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="84701a971c52fe0ef5b810aad2a8c5a06fdc37b7" translate="yes" xml:space="preserve">
          <source>Fixed a bug in node core where Cypress would not show up in &lt;code&gt;Windows&lt;/code&gt; for users on &lt;code&gt;node &amp;gt;= 11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;Windows&lt;/code&gt; 에 &lt;code&gt;node &amp;gt;= 11&lt;/code&gt; 사용자에게 표시되지 않는 노드 코어의 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;# 2667&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e35385a2c12d0f71f7a53c301b5b3d47658ae821" translate="yes" xml:space="preserve">
          <source>Fixed a bug swallowing plugin errors due to undefined &lt;code&gt;reject&lt;/code&gt; function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;#934&lt;/a&gt;.</source>
          <target state="translated">정의되지 않은 &lt;code&gt;reject&lt;/code&gt; 기능 으로 인해 플러그인을 삼키는 버그를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;# 934&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90b94e0824d2385a70f66519b1a2622224be5d05" translate="yes" xml:space="preserve">
          <source>Fixed a bug that caused commands to time out on subsequent tests whenever there was an uncaught error + an assertion conflict. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;#238&lt;/a&gt;.</source>
          <target state="translated">잡히지 않은 오류 + 어설 션 충돌이있을 때마다 후속 테스트에서 명령이 시간 초과되는 버그가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;# 238&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="71d07b2b277c7a574b44ce7b49b691fb502615ec" translate="yes" xml:space="preserve">
          <source>Fixed a bug when dismissing pinned snapshots that would cause the page to be wiped with nothing rendered. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;#4864&lt;/a&gt;.</source>
          <target state="translated">고정 된 스냅 샷을 닫을 때 아무 것도 렌더링되지 않고 페이지가 지워지는 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;# 4864&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="16717acc2ae6358676798e3692b5d47326a62da8" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress could get into a weird state and continuously error due to the &lt;code&gt;before:log&lt;/code&gt; event not being properly disposed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;#173&lt;/a&gt;.</source>
          <target state="translated">Cypress가 이상한 상태가되어 &lt;code&gt;before:log&lt;/code&gt; 이벤트가 올바르게 처리되지 않아 계속 오류가 발생하는 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;# 173&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="caa86e87c6a9a9f15bdd343f3f770a5b166471b9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress would error when a secure cookie flag was set and then expired from an HTTPS url without the subsequent secure flag. Due to the way Cypress was constructing the url, this would fail to actually remove the cookie. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;#1264&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;#1321&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;#1799&lt;/a&gt;.</source>
          <target state="translated">보안 쿠키 플래그를 설정 한 후 후속 보안 플래그없이 HTTPS URL에서 만료 될 때 Cypress에서 오류가 발생하는 버그를 수정했습니다. Cypress가 URL을 구성하는 방식으로 인해 쿠키를 실제로 제거하지 못합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;# 1264&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;# 1321&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;# 1799를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1d50b3ebf539cc9de8a209eaf4f48b723bc843f9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where changing the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; in Windows would lead to errors with plugins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;#1704&lt;/a&gt;.</source>
          <target state="translated">Windows 에서 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;integrationFolder&lt;/code&gt; &lt;/a&gt; 를 변경하면 플러그인 오류가 발생 하는 버그가 수정 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;# 1704&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="46b9d234159f57e0c9b70792318f4c4aa09e9b06" translate="yes" xml:space="preserve">
          <source>Fixed a bug where invalid UTF-8 characters were being set in XHR headers which caused XHR&amp;rsquo;s to fail. We now properly encode and decode all values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;#168&lt;/a&gt;.</source>
          <target state="translated">XHR 헤더에 잘못된 UTF-8 문자가 설정되어 XHR이 실패하는 버그가 수정되었습니다. 이제 모든 값을 올바르게 인코딩하고 디코딩합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;# 168&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1745cac84918b4aa3fcecaa76b4fcbe6bf490e60" translate="yes" xml:space="preserve">
          <source>Fixed a bug where the content of pages using non-UTF-8 character encoding would become corrupted when opened in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;#3479&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;#1543&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;#3650&lt;/a&gt;.</source>
          <target state="translated">UTF-8이 아닌 문자 인코딩을 사용하는 페이지의 내용이 Cypress에서 열 때 손상되는 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;# 3479&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;# 1543&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;# 3650을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="ded6e51b9b2958b84683311abf2544d7c477a842" translate="yes" xml:space="preserve">
          <source>Fixed a bug with Windows users seeing crashes with &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;#1815&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;#1817&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt; 충돌 이 기능이 아닌 Windows 사용자의 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;# 1815&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;# 1817을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="eda5c8938aaac4d872e48df690c7dd43f41fdb20" translate="yes" xml:space="preserve">
          <source>Fixed a bug with issuing an additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; event when chaining &lt;code&gt;.clear().type(...)&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;#593&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear().type(...)&lt;/code&gt; 연쇄 할 때 추가 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;click&lt;/code&gt; 이벤트 를 발생시키는 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;# 593&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="469c74a2070f33b117fa7dca5c32e8f5f00b8745" translate="yes" xml:space="preserve">
          <source>Fixed a bug with trashing assets in linux that caused recursive &lt;code&gt;.Trash&lt;/code&gt; files to show up. We now have opted to actually &lt;code&gt;rm -rf&lt;/code&gt; the files in linux because trashing is too inconsistent between linux distros. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;#2742&lt;/a&gt;.</source>
          <target state="translated">재귀 &lt;code&gt;.Trash&lt;/code&gt; 파일이 표시 되는 Linux에서 자산을 휴지통에 넣는 버그가 수정 되었습니다. 우리는 이제 리눅스 배포판 사이에 휴지통이 너무 일치하지 않기 때문에 실제로 리눅스에서 파일을 &lt;code&gt;rm -rf&lt;/code&gt; 로 선택했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;# 2742&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4c520262c89b3ac07c8baf1a654a558e6ed3db1b" translate="yes" xml:space="preserve">
          <source>Fixed a couple regressions in the Dashboard where timed out runs stayed &amp;ldquo;Pending&amp;rdquo; forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;#1891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;#1952&lt;/a&gt;.</source>
          <target state="translated">시간 초과 실행이 &quot;대기 중&quot;으로 유지되는 대시 보드에서 몇 번의 회귀가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;# 1891&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;# 1952를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="00fcb4eea65108e89c9c6443dade9cb50ba551ca" translate="yes" xml:space="preserve">
          <source>Fixed a deployment bug in the &lt;code&gt;core-desktop-gui&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;core-desktop-gui&lt;/code&gt; 의 배포 버그를 수정했습니다 .</target>
        </trans-unit>
        <trans-unit id="f061b7f560d64349dba98a8aedb318738f61fbb4" translate="yes" xml:space="preserve">
          <source>Fixed a handful of scenarios and edge cases where cookies were not properly synchronized between external requests and the browser. This led to situations where cookies were either duplicated on requests, or were not sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;#357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;#361&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;#362&lt;/a&gt;.</source>
          <target state="translated">외부 요청과 브라우저간에 쿠키가 제대로 동기화되지 않는 몇 가지 시나리오 및 엣지 사례가 수정되었습니다. 이로 인해 쿠키가 요청에 따라 복제되거나 전송되지 않은 상황이 발생했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;# 357&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;# 361&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;# 362를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="188f048d711e6696c9c8df5820c6c238970fcef3" translate="yes" xml:space="preserve">
          <source>Fixed a longstanding issue in Cypress where logging in from another computer would kill the session on all other computers, and prevent you from accessing &lt;code&gt;cypress get:key&lt;/code&gt; (amongst other things). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;#400&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 다른 컴퓨터에서 로그인하면 다른 모든 컴퓨터에서 세션이 종료되고 &lt;code&gt;cypress get:key&lt;/code&gt; 에 액세스 할 수없는 오랜 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;# 400&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="125f3c706233139b5634955a5661ec6e1d443e79" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused by &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; adhering to &lt;code&gt;maxlength&lt;/code&gt; incorrectly. Special character sequences were not respected. Now &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; works with special characters and implements a complete fix for &lt;code&gt;maxlength&lt;/code&gt;. In addition to it working, it now fires all applicable browser events without modifying the actual input value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;#955&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;maxlength&lt;/code&gt; 를 잘못 준수하여 발생하는 회귀 문제를 해결했습니다 . 특수 문자 순서는 고려되지 않았습니다. 이제 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 특수 문자와 함께 작동하며 &lt;code&gt;maxlength&lt;/code&gt; 에 대한 완전한 수정을 구현합니다 . 작동하는 것 외에도 실제 입력 값을 수정하지 않고 적용 가능한 모든 브라우저 이벤트를 발생시킵니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;# 955&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="58f207b226d195fcbac964a5875c845dac2c2b05" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused in &lt;code&gt;3.1.1&lt;/code&gt; where we attempted to set a property on an invalid cookie sent from a server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;#2724&lt;/a&gt;.</source>
          <target state="translated">서버에서 보낸 잘못된 쿠키에 속성을 설정하려고 시도한 &lt;code&gt;3.1.1&lt;/code&gt; 에서 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;# 2724&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="79bc8296f43c8bf5bc550d085c1248af39a32c04" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing large requests such as &lt;code&gt;multipart/form-data&lt;/code&gt; uploads to hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;#4240&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;#4252&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;#4253&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;multipart/form-data&lt;/code&gt; 업로드 와 같은 대규모 요청 이 중단 되는 &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; 의 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;# 4240&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;# 4252&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;# 4253을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="718a1ff91ed67f4a43b3e64705ec6af59b8cc17c" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing some users using proxy to see the &amp;ldquo;Browser was not launched through Cypress&amp;rdquo; error during &lt;code&gt;cypress open&lt;/code&gt;. This was caused by incorrectly routing requests for Cypress&amp;rsquo;s internal server on &lt;code&gt;localhost&lt;/code&gt; through the user&amp;rsquo;s proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;#4410&lt;/a&gt;.</source>
          <target state="translated">프록시를 사용하는 일부 사용자가 &lt;code&gt;cypress open&lt;/code&gt; 동안 &quot;브라우저가 Cypress를 통해 시작되지 않았습니다&quot;오류를 표시하는 &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; 의 회귀 문제를 수정했습니다 . 이는 사용자 프록시를 통해 &lt;code&gt;localhost&lt;/code&gt; 에서 Cypress의 내부 서버에 대한 요청을 잘못 라우팅했기 때문입니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;# 4410&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="92bf3f7a02bd774b4f45bba54e1708bbbec88a77" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.1&lt;/code&gt; that was incorrectly setting &lt;code&gt;Cache&lt;/code&gt; headers. This &lt;em&gt;could&lt;/em&gt; cause a situation where you received an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin error. Additionally we now set &lt;code&gt;No-Cache&lt;/code&gt; headers whenever we inject content, but otherwise respect the headers coming from web servers. When using Cypress as the file server, we set &lt;code&gt;etags&lt;/code&gt; but prevent caching.</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; 헤더를 잘못 설정 한 &lt;code&gt;0.17.1&lt;/code&gt; 의 회귀 문제를 해결했습니다 . 이로 인해 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 오리진 오류가 발생 했을 &lt;em&gt;수&lt;/em&gt; 있습니다 . 또한 콘텐츠를 삽입 할 때마다 &lt;code&gt;No-Cache&lt;/code&gt; 헤더를 설정 하지만 웹 서버에서 오는 헤더를 존중합니다. Cypress를 파일 서버로 사용하는 경우 &lt;code&gt;etags&lt;/code&gt; 를 설정 하지만 캐싱은 방지합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="797d082c75d18ab24086fb4a5aabff0a9d5357c0" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.2&lt;/code&gt; which caused &lt;strong&gt;separate&lt;/strong&gt; tests that were visiting the same URL not to actually visit the new URL and eventually time out. We&amp;rsquo;ve updated some of our internal QA processes around this because we rarely have regressions and they are a pretty big deal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;#225&lt;/a&gt;.</source>
          <target state="translated">회귀 고정 &lt;code&gt;0.17.2&lt;/code&gt; 의한 &lt;strong&gt;별도&lt;/strong&gt; 실제로 새로운 URL 결국 시간 제한을 방문하지 동일한 URL을 방문했다 테스트를. 회귀 현상이 거의없고 상당히 큰 영향을 미치기 때문에이 문제에 대한 내부 QA 프로세스 중 일부를 업데이트했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;# 225&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40060b269c8fc30e6502dd8d290d1f068f602ced" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;3.0.2&lt;/code&gt; that caused typing &lt;code&gt;{enter}&lt;/code&gt; not to submit a form when there were &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements other than &lt;code&gt;type='submit'&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;#2261&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;#2326&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;type='submit'&lt;/code&gt; 이외의 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 요소 가있을 때 &lt;code&gt;{enter}&lt;/code&gt; 를 입력 하면 양식이 제출되지 않는 &lt;code&gt;3.0.2&lt;/code&gt; 의 회귀 문제 가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;# 2261&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;# 2326을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="cda6d14158f1ca7ec8929275ab499aa9d41aac90" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to throw a &lt;code&gt;EISDIR&lt;/code&gt; error if a directory had the same name as a file within that same directory. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;#3739&lt;/a&gt;.</source>
          <target state="translated">디렉토리가 동일한 디렉토리에있는 파일과 이름이 같은 경우 &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;EISDIR&lt;/code&gt; 오류 를 발생 시키는&lt;a href=&quot;changelog#3-2-0&quot;&gt; 3.2.0&lt;/a&gt; 의 회귀 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;# 3739&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="02f5df8f3f31bad1f7203993fb1b2f8f4b232bde" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; to no longer retry when it yields &lt;code&gt;undefined&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;#3837&lt;/a&gt;</source>
          <target state="translated">에 도입 된 회귀 고정 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 발생 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 가 산출되면 더 이상 재시도에 &lt;code&gt;undefined&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;# 3837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0de1cc648e5d061dd3d9554106a7e7e22e8624" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused an error to throw when visiting domains with certain public suffixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">특정 공개 접미사가있는 도메인을 방문 할 때 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 에서 소개 된 회귀 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;# 3717&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2e56f00230509efa8dac3e3c46581c3dcdda0b82" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; that caused an error to be thrown when chaining together multiple assertions using the &lt;code&gt;and&lt;/code&gt; chainable getter. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; 에서 도입 된 회귀 가 &lt;code&gt;and&lt;/code&gt; 체인 가능 게터를 사용하여 여러 어설 션을 체인으로 연결할 때 오류가 발생하는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;# 4833&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="fd475981c3a413149ca03f811cd7aeb4ada6f22a" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;code&gt;3.x.x&lt;/code&gt; where application code that used &lt;code&gt;setTimeout&lt;/code&gt; with a string argument would see the error &lt;code&gt;fn.apply is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;#1854&lt;/a&gt;.</source>
          <target state="translated">문자열 인수와 함께 &lt;code&gt;setTimeout&lt;/code&gt; 을 사용한 응용 프로그램 코드 에서 오류 &lt;code&gt;fn.apply is not a function&lt;/code&gt; &lt;code&gt;3.x.x&lt;/code&gt; 에서 소개 된 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;# 1854&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="af27ef3a8c5b1eb360f49945fa5020fda8149632" translate="yes" xml:space="preserve">
          <source>Fixed a regression where tests that failed outside of a hook would incorrectly indicate themselves as a &lt;code&gt;before each&lt;/code&gt; hook. In addition, in the default &lt;code&gt;spec&lt;/code&gt;, reporter will now display the test name when a hook was the source of failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;#253&lt;/a&gt;.</source>
          <target state="translated">후크 외부에서 실패한 테스트에서 &lt;code&gt;before each&lt;/code&gt; 후크 이전 으로 잘못 표시되는 회귀 문제를 해결했습니다 . 또한 기본 &lt;code&gt;spec&lt;/code&gt; 에서 리포터는 이제 후크가 실패의 원인 일 때 테스트 이름을 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;# 253&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ad6a48c43848b909388100743330443ecff9d966" translate="yes" xml:space="preserve">
          <source>Fixed a runaway RegExp causing large &lt;code&gt;.js&lt;/code&gt; files to take dozens of seconds to process. This was a regression caused by &lt;code&gt;2.0.0&lt;/code&gt; with the new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; option. We&amp;rsquo;ve optimized the RegExp and the performance is back to being almost identical to transparently passing responses through. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;#1330&lt;/a&gt;.</source>
          <target state="translated">런 어웨이 RegExp가 큰 &lt;code&gt;.js&lt;/code&gt; 파일을 처리하는 데 수십 초가 걸리던 문제를 해결했습니다. 이것은 새로운 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt; 옵션 과 함께 &lt;code&gt;2.0.0&lt;/code&gt; 으로 인한 회귀 입니다. 우리는 RegExp를 최적화했으며 성능은 투명하게 응답을 전달하는 것과 거의 동일합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;# 1330&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ad28b2e2f139b4f56dd509edc39f63bc289fc0b8" translate="yes" xml:space="preserve">
          <source>Fixed a small visual bug where failed commands were not aligned to other commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;#2314&lt;/a&gt;.</source>
          <target state="translated">실패한 명령이 다른 명령과 맞지 않는 작은 시각적 버그가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;# 2314&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="20b3da33f022c8918a8fee4cd409fa5b0fa5bc32" translate="yes" xml:space="preserve">
          <source>Fixed a very longstanding (!) issue where &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; would fail to click the center coordinates of elements with style &lt;code&gt;display: inline&lt;/code&gt;. Cypress would instead report that the element was being covered causing the error: &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;#210&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 이 스타일 &lt;code&gt;display: inline&lt;/code&gt; 하여 요소의 중심 좌표를 클릭하지 못하는 매우 오랜 (!) 문제를 해결했습니다 . Cypress는 대신 요소를 덮고 있다고보고하여 오류를 일으켰습니다. &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;# 210&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8488e4ff3fa99d45f5aac3d43763fd3bd4dc1c31" translate="yes" xml:space="preserve">
          <source>Fixed a visual bug when aliasing a non-route subject multiple times that would cause the Test Runner to show &amp;lsquo;undefined&amp;rsquo; alias with empty counts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;#4429&lt;/a&gt;.</source>
          <target state="translated">루트가 아닌 대상을 여러 번 앨리어싱 할 때 테스트 러너가 빈 카운트로 '정의되지 않은'앨리어스를 표시하는 시각적 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;# 4429&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb032515c85605b59f3782be31262996bff85914" translate="yes" xml:space="preserve">
          <source>Fixed alt tray icon so it shows up correctly on click.</source>
          <target state="translated">클릭시 올바르게 표시되도록 대체 트레이 아이콘을 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="313a913671a903142640a3d934767834ab3ee524" translate="yes" xml:space="preserve">
          <source>Fixed an edge case in the &lt;code&gt;driver&lt;/code&gt; that could lead to memory leaks. This happened when Command Logs updated from previously run tests. Normally, in headless mode, we automatically remove references to purge memory after each test, but when logs were updated after this, their references were merged back in again and held onto forever. If you were seeing long Cypress runs die or eventually halt, this was likely the cause. We did extensive memory regression analysis on Cypress and could not find any more memory leaks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;#301&lt;/a&gt;.</source>
          <target state="translated">메모리 누수로 이어질 수 있는 &lt;code&gt;driver&lt;/code&gt; 의 엣지 케이스를 수정했습니다 . 이것은 이전에 테스트를 실행 한 명령 로그가 업데이트되었을 때 발생했습니다. 일반적으로 헤드리스 모드에서는 각 테스트 후 메모리 제거에 대한 참조를 자동으로 제거하지만이 이후 로그가 업데이트되면 해당 참조가 다시 병합되어 영원히 유지됩니다. Cypress 실행이 오래 걸리거나 중단되는 것을보고 있다면 이것이 원인 일 수 있습니다. Cypress에서 광범위한 메모리 회귀 분석을 수행하여 더 이상 메모리 누수를 찾을 수 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;# 301&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb080bbba9a5a85990fa91f1b178e3eb7cb2d0b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when hooks such as &lt;code&gt;beforeEach&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; threw an &lt;strong&gt;identical&lt;/strong&gt; error message, Cypress would hang indefinitely and never finish running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;#674&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;beforeEach&lt;/code&gt; 또는 &lt;code&gt;afterEach&lt;/code&gt; 와 같은 후크 에서 &lt;strong&gt;동일한&lt;/strong&gt; 오류 메시지가 표시되면 Cypress가 무한정 중단되어 테스트 실행이 완료되지 않는 경우를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;# 674&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2661a63af2ce07d2cc706e56312cdae37b3f6ed6" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when writing a test with a &lt;code&gt;done&lt;/code&gt; callback alongside &lt;code&gt;cy&lt;/code&gt; commands. This situation would always cause a timeout after 30 seconds even though the test would pass.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 명령 과 함께 콜백을 &lt;code&gt;done&lt;/code&gt; 하여 테스트를 작성할 때 발생하는 문제를 해결했습니다 . 이 상황은 테스트가 통과 되더라도 항상 30 초 후에 시간 초과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c257669938ad8d8588a5d98ce4bc6d698f7e89b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case where assertions would incorrectly associate to a previously run assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;#252&lt;/a&gt;.</source>
          <target state="translated">어설 션이 이전에 실행 된 어설 션과 잘못 연결되는 경우를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;# 252&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="99f6b62fc97458e6561cf3b928ec860cd9b1dc47" translate="yes" xml:space="preserve">
          <source>Fixed an issue causing &lt;code&gt;Chrome&lt;/code&gt; to timeout when attempted to be run through our docker containers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;#1031&lt;/a&gt;.</source>
          <target state="translated">Docker 컨테이너를 통해 &lt;code&gt;Chrome&lt;/code&gt; 을 실행하려고 할 때 Chrome 이 시간 초과 되는 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;# 1031&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0acea776ba5899e734dd14a6a1309901365ecaf8" translate="yes" xml:space="preserve">
          <source>Fixed an issue when testing applications using older versions of jQuery. They now no longer throw &lt;code&gt;item.first is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;#2927&lt;/a&gt;.</source>
          <target state="translated">이전 버전의 jQuery를 사용하는 응용 프로그램을 테스트 할 때 발생하는 문제를 해결했습니다. 이제 더 이상 &lt;code&gt;item.first is not a function&lt;/code&gt; 던지지 않습니다 . first는 함수가 아닙니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;# 2927&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2df9794ea315081304a449996ce2c238d0a619fc" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress would inject content into the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;#2026&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 태그 대신 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 태그에 컨텐츠를 삽입하는 문제를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;# 2026&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="503a7789189e2cc3fea11c127b7ef29ccf854e25" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress&amp;rsquo;s &lt;code&gt;devDependencies&lt;/code&gt; were being included in the Windows binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;#2896&lt;/a&gt;.</source>
          <target state="translated">Cypress의 &lt;code&gt;devDependencies&lt;/code&gt; 가 Windows 바이너리에 포함 되는 문제가 해결 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;# 2896&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9a67d1e1a1a3d9f46755d7554324c5b006cbfa" translate="yes" xml:space="preserve">
          <source>Fixed an issue where highlighting a command&amp;rsquo;s snapshot would throw an error when no application was rendered in the AUT frame. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;#4177&lt;/a&gt;.</source>
          <target state="translated">AUT 프레임에 응용 프로그램이 렌더링되지 않은 경우 명령의 스냅 샷을 강조 표시하면 오류가 발생하는 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;# 4177&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8634090de3bb23f05d8348be273ac80a2f06895b" translate="yes" xml:space="preserve">
          <source>Fixed an issue where returning/resolving &lt;code&gt;undefined&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; handler resulted in an incorrect runtime error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;#2553&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 핸들러 에서 &lt;code&gt;undefined&lt;/code&gt; 를 반환 / 해결 하면 런타임 오류가 잘못 되던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;# 2553&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c620b3b816b83868106dcda7ca6573a168f7e4f2" translate="yes" xml:space="preserve">
          <source>Fixed an issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; not behaving the same as &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;#420&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt; 과 동일하게 작동하지 않는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;# 420&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ba35f7f430bc3eb760682eeba295aa9b02318261" translate="yes" xml:space="preserve">
          <source>Fixed an oversight where a specific framebusting check was not being properly stripped and removed by the default config option &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;#2030&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;#2059&lt;/a&gt;.</source>
          <target state="translated">기본 구성 옵션 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; 로 특정 프레임 버스 팅&lt;/a&gt; 검사가 제대로 제거되지 않는 감독이 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;# 2030&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;# 2059를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="a3feeb11c878c0b1b6c2b42b4926ba57769c0a27" translate="yes" xml:space="preserve">
          <source>Fixed another Dashboard regression where an error would throw when recording tests and sending a large list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;#1901&lt;/a&gt;.</source>
          <target state="translated">테스트를 기록하고 많은 사양 목록을 보낼 때 오류가 발생하는 또 다른 대시 보드 회귀 문제를 해결했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;# 1901&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f95ba80c09d2573eaefec9828019f86ac7fc513f" translate="yes" xml:space="preserve">
          <source>Fixed another bug with Chrome that caused the &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; option to not be respected. This was due to Chrome progressively rolling out trials of a new option that attempts to isolate sites (and iframes) in their own child process if their origins are different. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;#1951&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;#2001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;#715&lt;/a&gt;.</source>
          <target state="translated">Chrome의 다른 버그로 인해 &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; 옵션이 적용되지 않던 문제를 수정했습니다 . 이는 출처가 다른 경우 자체 하위 프로세스에서 사이트 (및 iframe)를 격리하려는 새로운 옵션의 시험판이 Chrome에서 점진적으로 출시 되었기 때문입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;# 1951&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;# 2001&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;# 715&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="94853bb9ca7c86396cbd9c57c0364c019a3f65d1" translate="yes" xml:space="preserve">
          <source>Fixed another issue in Chrome* versions &amp;gt;= 72 where a scrollable command log would cause the entire application to be scrollable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;#3253&lt;/a&gt;.</source>
          <target state="translated">스크롤 가능한 명령 로그로 인해 전체 애플리케이션을 스크롤 할 수있는 Chrome * 버전&amp;gt; = 72의 다른 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;# 3253&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="696f0ff4fbb232ea2e711589bbb9e959ff73ea3e" translate="yes" xml:space="preserve">
          <source>Fixed another regression in &lt;code&gt;3.1.1&lt;/code&gt; where passing &lt;code&gt;undefined&lt;/code&gt; to a &lt;code&gt;setTimeout&lt;/code&gt; caused Cypress to error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;#2719&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; 에 &lt;code&gt;undefined&lt;/code&gt; 를 전달 하면 Cypress에 오류가 발생 하는 &lt;code&gt;3.1.1&lt;/code&gt; 의 또 다른 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;# 2719&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="aebadebc5158757be71142267de0bf16766d036c" translate="yes" xml:space="preserve">
          <source>Fixed bug in Mocha where it incorrectly associates &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; to the wrong &lt;code&gt;test&lt;/code&gt;. &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;Mocha Issue&lt;/a&gt;.</source>
          <target state="translated">Mocha에서 &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; 를 잘못된 &lt;code&gt;test&lt;/code&gt; 잘못 연결 시키는 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;모카 문제&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="612dfb9e3b3cdc617ab91ece26ddc8558ce3af03" translate="yes" xml:space="preserve">
          <source>Fixed bug when &lt;code&gt;Errors&lt;/code&gt; that threw with no arguments: &lt;code&gt;throw new Error()&lt;/code&gt; and had their messages appended would duplicate the message over and over again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;#1338&lt;/a&gt;.</source>
          <target state="translated">인수없이 던진 &lt;code&gt;Errors&lt;/code&gt; : &lt;code&gt;throw new Error()&lt;/code&gt; 해당 메시지가 추가되어 메시지가 계속 반복되는 버그를 수정 했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;# 1338&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="918a3cf4f69c121b36ee0b2424185525b6d9ad4b" translate="yes" xml:space="preserve">
          <source>Fixed bug where mocked Dates using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; would not be an instance of &lt;code&gt;Date&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용하여 조롱 한 날짜 가 &lt;code&gt;Date&lt;/code&gt; 인스턴스가 아닌 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;# 2570&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4ee9efa7d8a12b518bf4119349b5f2d9f0cde469" translate="yes" xml:space="preserve">
          <source>Fixed bug where only the first DOM element of an array of DOM elements would be blacked out after being passed as argument to &lt;code&gt;blackout&lt;/code&gt; within &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;#2508&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 내 에서 &lt;code&gt;blackout&lt;/code&gt; 에 인수로 전달 된 후 DOM 요소 배열의 첫 번째 DOM 요소 만 꺼지는 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;# 2508&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f661fc4b9db21728381b6001a9e54604f162657d" translate="yes" xml:space="preserve">
          <source>Fixed bug where tests were failing due to assertions causing Cypress to accidentally iterate through cross-origin iframes. If you were seeing &amp;ldquo;random&amp;rdquo; cross-origin errors, this likely fixes those issues. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;#2784&lt;/a&gt;.</source>
          <target state="translated">Cypress가 실수로 교차 출처 iframe을 반복하도록하는 주장으로 인해 테스트가 실패하는 버그를 수정했습니다. &quot;랜덤&quot;교차 출처 오류가 표시되면 이러한 문제가 해결 될 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;# 2784&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d9c19c5dbeb10fc37ea3887a8e9309cd3159aebf" translate="yes" xml:space="preserve">
          <source>Fixed bug with custom 3rd party Mocha reporters relying on &lt;code&gt;test.titlePath&lt;/code&gt; being a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;#1142&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.titlePath&lt;/code&gt; 를 함수로 사용하는 커스텀 써드 파티 Mocha 기자의 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;# 1142&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6e77d2327f9187fbef2c0ab464f495a2f7e023ca" translate="yes" xml:space="preserve">
          <source>Fixed bugs with Electron losing focus when running headlessly via &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; after navigation. Now the browser will always act as if it is focused no matter what and in all situations when running headlessly. If you were seeing focus related problems when running headlessly, this should fix them. Fixes issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;#2190&lt;/a&gt;.</source>
          <target state="translated">탐색 후 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 통해 헤드리스로 실행할 때 Electron에서 포커스를 잃는 버그를 수정했습니다 . 이제 브라우저는 헤드리스없이 실행될 때 모든 상황에 상관없이 항상 초점을 맞춘 것처럼 작동합니다. 헤드리스로 실행할 때 포커스 관련 문제가 발생하면 문제를 해결해야합니다. 이슈 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;# 2190&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7025ef6c77bddd2485fa875c1d5be6a4b45e734a" translate="yes" xml:space="preserve">
          <source>Fixed busted internal timers that caused random timeouts, proxy errors, incorrect delays, and long pauses when loading the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;#572&lt;/a&gt;.</source>
          <target state="translated">GUI를로드 할 때 임의의 시간 초과, 프록시 오류, 잘못된 지연 및 장시간 일시 중지를 유발하는 버스트 내부 타이머를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;# 572&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="56be5cf5478837f13541225d0c7cd0fe3342d7ea" translate="yes" xml:space="preserve">
          <source>Fixed code example for google analytics stubbing &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;#1454&lt;/a&gt;</source>
          <target state="translated">Google 웹 로그 분석 스터 빙 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;# 1454에&lt;/a&gt; 대한 고정 코드 예</target>
        </trans-unit>
        <trans-unit id="2742a044ddb90cd808739a321eebf8d6fcbc15bc" translate="yes" xml:space="preserve">
          <source>Fixed display of tooltips when selecting elements from the Selector Playground so that they display at the correct coordinates when scrolling. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;#1351&lt;/a&gt;.</source>
          <target state="translated">스크롤 할 때 올바른 좌표로 표시되도록 셀렉터 놀이터에서 요소를 선택할 때 툴팁 표시가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;# 1351&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="251641485084c6e1d7bc15a495074840c8bbd600" translate="yes" xml:space="preserve">
          <source>Fixed displaying &lt;code&gt;(null)&lt;/code&gt; contentType when a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; returned a &lt;code&gt;404&lt;/code&gt; status code. We now only display &lt;code&gt;contentType&lt;/code&gt; when one exists.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;404&lt;/code&gt; 상태 코드를 반환 할 때 &lt;code&gt;(null)&lt;/code&gt; contentType 표시가 수정되었습니다 . &lt;code&gt;contentType&lt;/code&gt; 이 존재하는 경우 에만 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="6e0af6a0db32674c472a21c20d182a7188e2555d" translate="yes" xml:space="preserve">
          <source>Fixed domain parsing failures when &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt; was not used as a &lt;code&gt;tld&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;#1292&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;#1278&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 또는 &lt;code&gt;localhost&lt;/code&gt; 가 &lt;code&gt;tld&lt;/code&gt; 로 사용되지 않을 때 도메인 구문 분석 실패를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;# 1292&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;# 1278을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="d8a8afb7ba2a95345f8cb179792976f988c1c4a1" translate="yes" xml:space="preserve">
          <source>Fixed edge case where Cypress would not correctly handle &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; requests with a JSON body. These requests would just hang and eventually time out.</source>
          <target state="translated">Cypress가 JSON 본문으로 &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; 요청을 올바르게 처리하지 못하는 고정 된 경우 입니다. 이러한 요청은 중단되고 결국 시간 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d7a413de44f197a54d70c4b3e138fc45ad09e8" translate="yes" xml:space="preserve">
          <source>Fixed edge case where XHR&amp;rsquo;s which were already aborted were aborted a 2nd time when tests end. Cypress now only aborts currently running XHR&amp;rsquo;s which have not already been aborted.</source>
          <target state="translated">테스트가 종료 될 때 이미 중단 된 XHR이 두 번째 중단 된 고정 에지 사례. Cypress는 현재 중단되지 않은 XHR을 현재 실행중인 경우에만 중단합니다.</target>
        </trans-unit>
        <trans-unit id="15db83a7134834b98a8112f0a9f994c44579c61c" translate="yes" xml:space="preserve">
          <source>Fixed edge case with &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; and command options &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; where it would always fail ven though the matched element was in the correct state.</source>
          <target state="translated">고정 가장자리와 케이스 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 및 명령 옵션 &lt;code&gt;visible&lt;/code&gt; 와 &lt;code&gt;exist&lt;/code&gt; 일치하는 요소가 올바른 상태에 비록 항상 VEN 실패합니다.</target>
        </trans-unit>
        <trans-unit id="736d2fd6d67eea3c666645e76df7818015a827a3" translate="yes" xml:space="preserve">
          <source>Fixed error message on &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; when typing into non-typeable elements or clearing non-clearable elements to accurately list the elements allowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;#1650&lt;/a&gt;.</source>
          <target state="translated">입력 할 수없는 요소를 입력하거나 지울 수없는 요소를 지울 때 허용되는 요소를 정확하게 나열 할 때 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 오류 메시지가 수정 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;# 1650&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02b2238de0c84627cddc80afe17c2ea623cb3c16" translate="yes" xml:space="preserve">
          <source>Fixed error when recording and failing to parse the git commit message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;#847&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;#841&lt;/a&gt;.</source>
          <target state="translated">git commit 메시지를 기록하고 구문 분석하지 못하는 오류가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;# 847&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;# 841을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="3040a4458cc421fb2d22a8003bbe0b372f72da17" translate="yes" xml:space="preserve">
          <source>Fixed even more issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not inserting characters on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;#1381&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 에 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 문자를 삽입하지 않는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;# 1381&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ff4a60d5e898f49af55b20216c54316464791778" translate="yes" xml:space="preserve">
          <source>Fixed file watching when changing the &lt;code&gt;integrationFolder&lt;/code&gt; to something other than the default value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;#438&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;integrationFolder&lt;/code&gt; 를 기본값 이외의 것으로 변경할 때 파일 감시가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;# 438&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f71d3bd8125a553f32eb8e552ca0938dfda05a60" translate="yes" xml:space="preserve">
          <source>Fixed hook failure associated to wrong failed current test when &lt;code&gt;grep&lt;/code&gt; was set.</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; 을 설정할 때 잘못된 실패한 전류 테스트와 관련된 고정 후크 실패</target>
        </trans-unit>
        <trans-unit id="773347c43b2905ce0adc0b80483b6cedf1665d7a" translate="yes" xml:space="preserve">
          <source>Fixed icons visually shifting when tests were running in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;#1983&lt;/a&gt;.</source>
          <target state="translated">테스트 러너에서 테스트를 실행할 때 아이콘이 시각적으로 바뀌는 문제를 해결했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;# 1983&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a639d3246f9660269f602500bc09f7512383b7c2" translate="yes" xml:space="preserve">
          <source>Fixed incomplete type definitions for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;#2305&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request&lt;/code&gt; 에&lt;/a&gt; 대한 불완전한 유형 정의가 수정 되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;# 2305&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55fe1fe1beaaad0ae95c08429f866661564ed878" translate="yes" xml:space="preserve">
          <source>Fixed incorrect JSDoc comments in type definition for &lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus()&lt;/a&gt; and better formatted comments in type definitions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;#2975&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;#2954&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus ()에&lt;/a&gt; 대한 유형 정의에서 잘못된 JSDoc 주석 및 유형 정의에서 형식이 지정된 주석이 수정되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;# 2975&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;# 2954&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="812109db35de49de7db730b131b54593ddd17605" translate="yes" xml:space="preserve">
          <source>Fixed incorrect error message on reverse visibility assertions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;#275&lt;/a&gt;.</source>
          <target state="translated">역 가시성 어설 션에서 잘못된 오류 메시지가 수정되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;# 275&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c069db9105c52c4f356c338dd1d13ea2ca1306f" translate="yes" xml:space="preserve">
          <source>Fixed incorrect type definition for options usage for &lt;a href=&quot;../../api/commands/then&quot;&gt;.then()&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;#3075&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt;.then ()의&lt;/a&gt; 옵션 사용법에 대한 잘못된 유형 정의를 수정했습니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;# 3075&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86b030fdcb00b2f9bf3970fa4fbc426e90f71819" translate="yes" xml:space="preserve">
          <source>Fixed incorrectly setting &lt;code&gt;charCode&lt;/code&gt; and &lt;code&gt;keyCode&lt;/code&gt; when using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on a few different special characters such as &lt;code&gt;{&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;#2105&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt; 와 같은 몇 가지 다른 특수 문자에서 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 을 사용할 때 &lt;code&gt;charCode&lt;/code&gt; 및 &lt;code&gt;keyCode&lt;/code&gt; 를 잘못 설정 하는 문제를 해결했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;# 2105&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14d73fb5c06694aa48acf2fc44c2e17262c62426" translate="yes" xml:space="preserve">
          <source>Fixed inserting the string &lt;code&gt;null&lt;/code&gt; into &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; urls when providing a &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; while origin could not be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;#274&lt;/a&gt;.</source>
          <target state="translated">문자열 삽입 고정 &lt;code&gt;null&lt;/code&gt; 에 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 제공 할 때 URL을 &lt;code&gt;baseUrl&lt;/code&gt; 에 &lt;code&gt;cypress.json&lt;/code&gt; 원점이 결정되지 않을 수있다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;# 274&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="afeb42766edda55645ad3cb0a7d8d0216d4eb01b" translate="yes" xml:space="preserve">
          <source>Fixed internal Cypress tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;#2606&lt;/a&gt;.</source>
          <target state="translated">내부 Cypress 테스트를 수정했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;# 2606&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1382c51c4ccba4ae45334849e71d4f3885625dc2" translate="yes" xml:space="preserve">
          <source>Fixed internal test error &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;#2401&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;beforeSpecRun is not a function&lt;/code&gt; 내부 테스트 오류가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;# 2401&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2017dd059d0898c9d6a5369d875f74f7a20a1f79" translate="yes" xml:space="preserve">
          <source>Fixed issue of Cypress being unable to play videos with &lt;code&gt;autoplay&lt;/code&gt;. We now pass the &lt;code&gt;--no-user-gesture-required&lt;/code&gt; command line switch to Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;#2376&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;autoplay&lt;/code&gt; 재생 기능으로 비디오를 재생할 수없는 문제가 해결되었습니다 . 이제 &lt;code&gt;--no-user-gesture-required&lt;/code&gt; 명령 줄 스위치를 Chrome에 전달합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;# 2376&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d1454c9f7e105098250079b6197e4fc0d616f586" translate="yes" xml:space="preserve">
          <source>Fixed issue when using &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; and passing an object to a &lt;code&gt;.json&lt;/code&gt; file. The object is now correctly written to the JSON file instead of a string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;#2373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 을 사용하고 &lt;code&gt;.json&lt;/code&gt; 파일로 객체를 전달할 때 발생하는 문제를 해결했습니다 . 이제 객체가 문자열 대신 JSON 파일에 올바르게 기록됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;# 2373&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c353974950c8f90d95bbad7cc4de3cde862a338" translate="yes" xml:space="preserve">
          <source>Fixed issue when using TypeScript that caused namespace errors to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;#1627&lt;/a&gt;.</source>
          <target state="translated">네임 스페이스 오류가 발생하는 TypeScript 사용시 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;# 1627&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1229a64e09bfdf46d6b860f6c4fd4b0b0c37d277" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; was failing when running Cypress in docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;#517&lt;/a&gt;.</source>
          <target state="translated">docker에서 Cypress를 실행할 때 &lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 가 실패하는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;# 517&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f3853b829c65b8667819b5bb5a82df44fa46e42b" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; inputs were throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;#504&lt;/a&gt;.</source>
          <target state="translated">문제가 해결 어디 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; 입력 오류를 던지고 있었다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;# 504&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="615a0b78351a76d8edfafb3a29f2bd3dbac0de0f" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;event&lt;/code&gt; was undefined when using an &lt;code&gt;onload&lt;/code&gt; event handler. Fixed &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;#2859&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;onload&lt;/code&gt; 이벤트 핸들러를 사용할 때 &lt;code&gt;event&lt;/code&gt; 가 정의되지 않는 문제가 해결 되었습니다 . 고정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;# 2859&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19256491757bc321389a1dfb9fde2c16863ab68" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;stdout&lt;/code&gt; would not be displayed on a completed &lt;code&gt;cypress ci&lt;/code&gt; run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;#398&lt;/a&gt;.</source>
          <target state="translated">완료된 &lt;code&gt;cypress ci&lt;/code&gt; 실행 에서 &lt;code&gt;stdout&lt;/code&gt; 이 표시되지 않는 문제가 해결 되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;# 398&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d5537ac05b50b1d9d5162eb0be6a42dadc20efb9" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; would return &lt;code&gt;undefined&lt;/code&gt; instead of an array within application code when using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;#3625&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용할 때 &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; 이 애플리케이션 코드 내의 배열 대신 &lt;code&gt;undefined&lt;/code&gt; 것을 반환하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;# 3625&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="55113d9d2801f6fddc9e5b2e5b21e5962d7abbdd" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive output is given during install failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;#330&lt;/a&gt;.</source>
          <target state="translated">Xvfb 권한으로 인해 Cypress가 중단되는 문제가 해결되었습니다. 설치 실패시보다 직관적 인 출력이 제공됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;# 330&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="af8382ebdd6683a30092c82e522e5fa69083d349" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would hang indefinitely when starting a new spec when in &lt;code&gt;cypress run&lt;/code&gt; mode. Additionally we have optimized the code path to not read in the local &lt;code&gt;state.json&lt;/code&gt; unnecessarily. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;#2013&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;#1890&lt;/a&gt;.</source>
          <target state="translated">Cypress &lt;code&gt;cypress run&lt;/code&gt; 모드 에서 새 사양을 시작할 때 Cypress가 무기한 중단되는 문제가 해결되었습니다 . 또한 로컬 &lt;code&gt;state.json&lt;/code&gt; 에서 불필요하게 읽지 않도록 코드 경로를 최적화했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;# 2013&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;# 1912&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;# 1905&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;# 1890&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c693ab41296c3860cbfeee8a1756daba46604250" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would inject a script tag before the &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; declaration when the document only contained the doctype declaration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;#2617&lt;/a&gt;.</source>
          <target state="translated">문서에 doctype 선언 만 포함 된 경우 Cypress가 &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 선언 전에 스크립트 태그를 삽입하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;# 2617&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3b27680405327ff681dcf5185a3a98aa323ece7e" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would unnecessarily scroll when attempting to locate elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;#1475&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position: sticky&lt;/code&gt; 요소를 찾을 때 Cypress가 불필요하게 스크롤되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;# 1475&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b7eb108e49697e592b89d9e9807fdf2cb5d8f9" translate="yes" xml:space="preserve">
          <source>Fixed issue where XHR&amp;rsquo;s &lt;code&gt;onreadystatechange&lt;/code&gt; was not receiving the proper event arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;#2925&lt;/a&gt;.</source>
          <target state="translated">XHR의 &lt;code&gt;onreadystatechange&lt;/code&gt; 가 적절한 이벤트 인수를받지 못하는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;# 2925&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c75325a7a749e1fc18b62df4e805e6f8f88e6325" translate="yes" xml:space="preserve">
          <source>Fixed issue where a fix included in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; did not pass the &lt;code&gt;windowsHide&lt;/code&gt; argument to the proper options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;#2809&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2에&lt;/a&gt; 포함 된 수정 프로그램 이 &lt;code&gt;windowsHide&lt;/code&gt; 인수를 올바른 옵션으로 전달하지 않는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;# 2667&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;# 2809&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b14a57a15e2e6d2187b8c1897a452a081b129491" translate="yes" xml:space="preserve">
          <source>Fixed issue where all arguments passed to &lt;code&gt;setTimeout&lt;/code&gt; or &lt;code&gt;setInterval&lt;/code&gt; were not properly passed on to the target function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;#3592&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; 또는 &lt;code&gt;setInterval&lt;/code&gt; 에 전달 된 모든 인수 가 대상 함수에 제대로 전달되지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;# 3592&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ea4ef4f116dcb42f5a217dc3ebfbfc859b67eb15" translate="yes" xml:space="preserve">
          <source>Fixed issue where an internal &lt;code&gt;layout.html&lt;/code&gt; file would inadvertently get loaded instead of the spec file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;#2891&lt;/a&gt;.</source>
          <target state="translated">사양 파일 대신 내부 &lt;code&gt;layout.html&lt;/code&gt; 파일이 실수로로드 되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;# 2891&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61e2e78d63092fd0aaa0b59a93c82f55d29ec065" translate="yes" xml:space="preserve">
          <source>Fixed issue where applications programmatically stealing focus would lead to slow runs in Electron when running via &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;#1909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;#1892&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 통해 실행할 때 프로그램 방식으로 포커스를 훔치는 응용 프로그램이 Electron에서 느리게 실행되는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;# 1909&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;# 1892&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78e6597c87a7313be05729a497c7bfd4b42fb202" translate="yes" xml:space="preserve">
          <source>Fixed issue where change events with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; would not fire correctly for many more situations and edge cases. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;#651&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 사용하여 변경 이벤트가 더 많은 상황 및 엣지 사례에서 올바르게 실행되지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;# 651&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6082a19eab3879c28c8957cc98d4a27f61e03996" translate="yes" xml:space="preserve">
          <source>Fixed issue where changing any spec file (renaming, adding, deleting) would remove the highlighted styling of the currently active spec file in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;#547&lt;/a&gt;.</source>
          <target state="translated">사양 파일을 변경 (이름 바꾸기, 추가, 삭제)하면 현재 실행중인 사양 파일의 강조 표시된 스타일이 Test Runner에서 제거되는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;# 547&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23469c7b5f76bbf207e4c3d7030fc6fc6c2a0936" translate="yes" xml:space="preserve">
          <source>Fixed issue where clipped elements with &lt;code&gt;overflow-y: hidden&lt;/code&gt; were falsely passing as &amp;ldquo;visible&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;#563&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overflow-y: hidden&lt;/code&gt; 이 있는 잘린 요소가 &quot;표시&quot;로 잘못 전달되는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;# 563&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6343d4371cb8f9c21357792d33c5d7f89a53124d" translate="yes" xml:space="preserve">
          <source>Fixed issue where commands would retry and potentially exceed their timeout values during page transitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;#594&lt;/a&gt;</source>
          <target state="translated">페이지 전환 중에 명령이 재 시도되고 시간 초과 값을 초과 할 수있는 문제가 해결되었습니다. 픽스 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;# 594&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769e7ca2ba949f14f3ce789237c3e7e10b742074" translate="yes" xml:space="preserve">
          <source>Fixed issue where preprocessor errors were being swallowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;#1877&lt;/a&gt;.</source>
          <target state="translated">전 처리기 오류가 삼키는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;# 1877&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3119210afd00c5c5dc51ca602238f3d34a0039e0" translate="yes" xml:space="preserve">
          <source>Fixed issue where server error&amp;rsquo;s stack traces were being truncated in the Desktop app rendering them impossible to debug. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;#133&lt;/a&gt;.</source>
          <target state="translated">데스크탑 앱에서 서버 오류의 스택 추적이 잘려서 디버깅 할 수없는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;# 133&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e189fc50c663b6981fb1654c5697d44b263104" translate="yes" xml:space="preserve">
          <source>Fixed issue where server routes were lost after page load if not initiated by a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;#177&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 명령으로 시작하지 않으면 페이지로드 후 서버 경로가 손실되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;# 177&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e69dc3681b067698e46ab13ea4db8ed44cdf0460" translate="yes" xml:space="preserve">
          <source>Fixed issue where setting &lt;code&gt;fixturesFolder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; would throw an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;#450&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fixturesFolder&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 오류가 발생하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;# 450&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="50f490aa3955787ecd6045dae96e18a4ca0fd962" translate="yes" xml:space="preserve">
          <source>Fixed issue where some TTY characters were not properly formatted in the terminal for Windows during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;#1143&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;#1550&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 하는 동안 Windows 용 터미널에서 일부 TTY 문자가 올바르게 포맷되지 않는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;# 1143&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;# 1550을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="8fe62793640f8f0e386492283f323b52ec484dc1" translate="yes" xml:space="preserve">
          <source>Fixed issue where support for &lt;code&gt;have.focus&lt;/code&gt;, &lt;code&gt;not.have.focus&lt;/code&gt;, &lt;code&gt;be.focused&lt;/code&gt; and &lt;code&gt;not.be.focused&lt;/code&gt;&lt;a href=&quot;assertions&quot;&gt;assertions&lt;/a&gt; were not working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;#4265&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;have.focus&lt;/code&gt; , &lt;code&gt;not.have.focus&lt;/code&gt; , &lt;code&gt;be.focused&lt;/code&gt; 및 &lt;code&gt;not.be.focused&lt;/code&gt; &lt;a href=&quot;assertions&quot;&gt;어설 션에&lt;/a&gt; 대한 지원 이 작동하지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;# 4265&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a7106ffbbd512163862ccb5d6274bfec4bb8c5d1" translate="yes" xml:space="preserve">
          <source>Fixed issue where the &lt;code&gt;onLoad&lt;/code&gt; event was never being called when calling &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; on the url Cypress is currently navigated to. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;#1311&lt;/a&gt;.</source>
          <target state="translated">URL Cypress에서 현재 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 호출 할 때 &lt;code&gt;onLoad&lt;/code&gt; 이벤트가 호출되지 않는 문제가 해결 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;# 1311&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ab8e2b0380bae519febf7ace85d368f6eb6e2b7" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Chromium browser was not detected in Linux due to Cypress not distinguishing between Chrome and Chromium browsers with the same version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;#1400&lt;/a&gt;.</source>
          <target state="translated">Cypress가 동일한 버전의 Chrome과 Chromium 브라우저를 구분하지 않아 Linux에서 Chromium 브라우저가 감지되지 않는 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;# 1400&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b230f3bd283ba447a34dcf6083f2a7c9400b8949" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Cypress &lt;code&gt;window&lt;/code&gt; was being returned instead of AUT&amp;rsquo;s &lt;code&gt;window&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;#1436&lt;/a&gt;.</source>
          <target state="translated">AUT의 &lt;code&gt;window&lt;/code&gt; 대신 Cypress &lt;code&gt;window&lt;/code&gt; 반환되는 문제가 해결 되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;# 1436&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="686a2f479eec0633cf642042cb9fe61613147511" translate="yes" xml:space="preserve">
          <source>Fixed issue where the contents of &lt;code&gt;state.json&lt;/code&gt; were emptied, which would cause a crash and loss of state information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;#473&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;#474&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;state.json&lt;/code&gt; 의 내용이 비워져 충돌이 발생하고 상태 정보가 손실되는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;# 473&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;# 474를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="c8025d1cc05af8c1db3cebb543fa817cdbc88f08" translate="yes" xml:space="preserve">
          <source>Fixed issue where using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;type&lt;/code&gt; defined in uppercase (&lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt;) would throw an error and not type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="translated">여기서 사용하는 문제를 해결 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; A의 입력에 &lt;code&gt;type&lt;/code&gt; 자로 정의 ( &lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt; 오류가 발생하고 입력 할 것). &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;# 550&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0e4d146daf8133a0b16ea12603fb29188c6f270c" translate="yes" xml:space="preserve">
          <source>Fixed issue where videos would not be recorded when an object was returned from &lt;code&gt;before:browser:launch&lt;/code&gt; when in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;#1992&lt;/a&gt;.</source>
          <target state="translated">Electron 브라우저에있을 때 &lt;code&gt;before:browser:launch&lt;/code&gt; 에서 객체가 반환 될 때 비디오가 기록되지 않는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;# 1992&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7cd280bca9001a56c43a9624644de7feee27b4" translate="yes" xml:space="preserve">
          <source>Fixed issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; inputs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;#490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; 입력 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;# 490&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1f47175651ab56ab638ece075424b7507180fbf1" translate="yes" xml:space="preserve">
          <source>Fixed issue with loading fixture files containing more than one &lt;code&gt;.&lt;/code&gt; in their filename while not specifying the file extension. We are also displaying a clearer warning when a fixture file cannot be found. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;#1402&lt;/a&gt;.</source>
          <target state="translated">둘 이상의를 포함하는 조명기 파일을로드 할 때 발생하는 문제를 수정했습니다 &lt;code&gt;.&lt;/code&gt; 파일 확장자를 지정하지 않으면 서 파일 이름으로 또한 조명기 파일을 찾을 수 없을 때 더 명확한 경고를 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;# 1402&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f1eafcab2c39c7bc18501c64d2171c4b3eb48ac0" translate="yes" xml:space="preserve">
          <source>Fixed issue with multiple &lt;code&gt;readyStateChanges&lt;/code&gt; with the same &lt;code&gt;readyState&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;#1150&lt;/a&gt;.</source>
          <target state="translated">동일한 &lt;code&gt;readyState&lt;/code&gt; 로 여러 &lt;code&gt;readyStateChanges&lt;/code&gt; 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;# 1150&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="41c25c79688ff0690197673cdc2c4e9efaa4e51b" translate="yes" xml:space="preserve">
          <source>Fixed issues involving XHRs displaying as &amp;lsquo;aborted&amp;rsquo; in the Cypress Command Log when they were not actually aborted. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;#1652&lt;/a&gt;.</source>
          <target state="translated">Cypress 명령 로그에서 XHR이 실제로 중단되지 않았을 때 '중지됨'으로 표시되는 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;# 1652&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f6119c94c4f2fd34d62c927a8b7e0d1b0b73dcec" translate="yes" xml:space="preserve">
          <source>Fixed issues where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; was not appending text properly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;#503&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;#568&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 텍스트를 제대로 추가하지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;# 503&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;# 568을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="b0e69a0ad1bef2e68406fab5ff999c0a0b85e190" translate="yes" xml:space="preserve">
          <source>Fixed issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing the &lt;code&gt;change&lt;/code&gt; event on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;#1171&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 에서 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;change&lt;/code&gt; 이벤트를 발생시키지 않는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;# 1171&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ec5062ddce1588be8e74acc91c85aa3ca70c8eb5" translate="yes" xml:space="preserve">
          <source>Fixed issues with typing into JS based text-mask plugins. Basically anything that would alter the &lt;code&gt;.value&lt;/code&gt; in response to certain events now works correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;#940&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;#1684&lt;/a&gt;.</source>
          <target state="translated">JS 기반 텍스트 마스크 플러그인에 입력 할 때 발생하는 문제를 수정했습니다. 기본적으로 특정 이벤트에 대한 응답으로 &lt;code&gt;.value&lt;/code&gt; 를 변경하는 모든 것이 이제 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;# 940&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;# 1684&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5328ad377c6cc0c950ce0f104153a1169a508e90" translate="yes" xml:space="preserve">
          <source>Fixed many issues with typing into &lt;code&gt;[contenteditable]&lt;/code&gt; elements. WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; based, and other HTML editors now work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;#596&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;#1686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;#2096&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 요소에 입력 할 때 발생하는 많은 문제를 해결했습니다 . WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; 기반 및 기타 HTML 편집기가 이제 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;# 596&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;# 1686&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;# 2096을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="9c9cc16289962ed52b63c65cfc10f5d7a7112ffa" translate="yes" xml:space="preserve">
          <source>Fixed missing &lt;code&gt;aliasType&lt;/code&gt; from primitives and some DOM aliases, which prevent the background color from displaying in the UI.</source>
          <target state="translated">프리미티브 및 일부 DOM 별칭에서 누락 된 &lt;code&gt;aliasType&lt;/code&gt; 이 수정 되어 UI에 배경색이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2d6f09dd07845b621667382b48aa0fbfa00c07a" translate="yes" xml:space="preserve">
          <source>Fixed missing dependency for CI.</source>
          <target state="translated">CI에 대한 누락 된 종속성이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2338274d63db423cc9c9f3c87f5c93d5d86ba839" translate="yes" xml:space="preserve">
          <source>Fixed missing files from deployment. Added tests around this.</source>
          <target state="translated">배치에서 누락 된 파일을 수정했습니다. 이것에 대한 테스트를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="a7f782dd62aa8c332550fad64089662ab46e1e9d" translate="yes" xml:space="preserve">
          <source>Fixed more edge cases where legitimate JavaScript code was being modified unexpectedly by the &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; configuration. We&amp;rsquo;ve tightened up the RegExp even more and added 40 popular JS libraries to test against to ensure they are not modified. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;#1334&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt; 구성 으로 인해 합법적 인 JavaScript 코드가 예기치 않게 수정되는 더 많은 경우를 수정했습니다 . 우리는 RegExp를 더욱 강화하고 40 개의 인기있는 JS 라이브러리를 추가하여 수정되지 않았는지 테스트했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;# 1334&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f0eb4a78d03cd66d4c95162944c3e65fc1ebb77c" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type into a &lt;code&gt;datetime-local&lt;/code&gt; input. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;#1366&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;datetime-local&lt;/code&gt; 입력을 입력 할 수 없었던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;# 1366&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0343e78d24123f511becf5cb6a50acd615d5f5b7" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type negative numbers into &lt;code&gt;input[type=number]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;#2173&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 요소에 음수를 입력 할 수 없던 문제를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;# 2173&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce2ea5061ccbe451eaebd1b3886b9bdcfe937e20" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit URLs that used &lt;code&gt;*localhost&lt;/code&gt; such as &lt;code&gt;http://app.localhost:8080&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;#451&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http://app.localhost:8080&lt;/code&gt; 과 같이 &lt;code&gt;*localhost&lt;/code&gt; 를 사용한 URL을 방문 할 수 없었던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;# 451&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="bb85a7a8a915f26baefc92cd213832444d9dfb78" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit private TLD&amp;rsquo;s from the public suffix such as &lt;code&gt;github.io&lt;/code&gt;, &lt;code&gt;gitlab.io&lt;/code&gt; or &lt;code&gt;herokuapp.com&lt;/code&gt;. These now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;#380&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;#402&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;#802&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;#493&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;#1161&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;github.io&lt;/code&gt; , &lt;code&gt;gitlab.io&lt;/code&gt; 또는 &lt;code&gt;herokuapp.com&lt;/code&gt; 과 같은 공개 접미사에서 개인 TLD를 방문 할 수 없었던 문제를 수정 했습니다 . 이것들은 이제 모두 올바르게 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;# 380&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;# 402&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;# 802&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;# 493&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;# 1161&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91faace71bc27b25103af821c4ed14338a407e27" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit subdomains when using 2nd level sub domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;#1175&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;#600&lt;/a&gt;.</source>
          <target state="translated">2 단계 하위 도메인을 사용할 때 하위 도메인을 방문 할 수 없었던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;# 1175&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;# 600을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="2fd5dc2da998e702c253abf33612dbfdee626943" translate="yes" xml:space="preserve">
          <source>Fixed not correctly passing the &lt;code&gt;timeout&lt;/code&gt; option for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. This should fix some instances where large &lt;code&gt;timeout&lt;/code&gt; values would cause &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;#2669&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 대한 &lt;code&gt;timeout&lt;/code&gt; 옵션이 올바르게 전달되지 않던 것을 고쳤습니다 . &lt;code&gt;timeout&lt;/code&gt; 값이 &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; 오류 가 발생하는 일부 인스턴스를 수정해야 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;# 2669&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c31591cd4d8d4ed564e72f3cb6296e78bb377c61" translate="yes" xml:space="preserve">
          <source>Fixed other event related issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; that were not firing correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;#1209&lt;/a&gt;.</source>
          <target state="translated">올바르게 실행되지 않은 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 관련 이벤트 관련 문제를 해결했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;# 1209&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="edefe93bf8f9c5871698c12af8e0696b38b68cad" translate="yes" xml:space="preserve">
          <source>Fixed problem with rewriting content on elements which contained &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 요소 가 포함 된 요소에서 컨텐츠를 다시 쓰는 문제가 해결되었습니다 .</target>
        </trans-unit>
        <trans-unit id="43ad4f25a3eed077befe9519dd732c427d562b46" translate="yes" xml:space="preserve">
          <source>Fixed putting an &lt;code&gt;.only&lt;/code&gt; on a large list of tests that would sometimes not clear the previous runnables in the UI.</source>
          <target state="translated">때때로 UI에서 이전 실행 파일을 지우지 않는 많은 테스트 목록에 &lt;code&gt;.only&lt;/code&gt; 만 배치하도록 수정했습니다 .</target>
        </trans-unit>
        <trans-unit id="a2caf8784be60677041b659dadea9400412e0693" translate="yes" xml:space="preserve">
          <source>Fixed regression caused by &lt;code&gt;0.16.2&lt;/code&gt; where a failed &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would not be canceled and would continue to run and display failed assertions in between test runs (without a full page refresh). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;#174&lt;/a&gt;.</source>
          <target state="translated">실패한 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 가 취소되지 않고 테스트 실행 사이에 전체 페이지 새로 고침없이 실패한 어설 션이 계속 표시되고 표시 되는 &lt;code&gt;0.16.2&lt;/code&gt; 로 인한 고정 회귀 분석 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;# 174&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c9fbfe8fdbc7075beebaee40771e5a6e1c149db" translate="yes" xml:space="preserve">
          <source>Fixed regression causing invocations of &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to error on subsequent tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;#2850&lt;/a&gt;.</source>
          <target state="translated">후속 테스트에서 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 호출로 인해 오류가 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;# 2850&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="60f49a5a118e5920f657fbfe9b3154bb1fd56657" translate="yes" xml:space="preserve">
          <source>Fixed regression in &lt;code&gt;0.18.6&lt;/code&gt; that caused Cypress to fail when switching spec files when &lt;code&gt;baseUrl&lt;/code&gt; was set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;#403&lt;/a&gt;.</source>
          <target state="translated">고정 회귀 &lt;code&gt;0.18.6&lt;/code&gt; 때 명세 파일을 전환 할 때 프러스 실패 원인 &lt;code&gt;baseUrl&lt;/code&gt; 설정 하였다 &lt;code&gt;cypress.json&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;# 403&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9add25a461f073babcc6b30c1b6633afbac49710" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where Cypress would error because it could not find a type definition file for &amp;lsquo;../sinon&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;#4272&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 '../sinon'에 대한 유형 정의 파일을 찾을 수 없으므로 오류가 발생하는 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 에서 회귀가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;# 4272&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ed748da281606e6ecf264dbc3e50b17da63ec753" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; with &lt;code&gt;requestAnimationFrame&lt;/code&gt; that caused some animations not to run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;#2725&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;requestAnimationFrame&lt;/code&gt; 과 함께 &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; 에서 도입 된 회귀 가 일부 애니메이션이 실행되지 않던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;# 2725&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3a8bf2ec79bf5b856e9d14b2d045c37061e87b42" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; that caused DOM elements passed to &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to no longer yield the proper jQuery array instance. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;#2820&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; 에 전달 된 DOM 요소 가 더 이상 적절한 jQuery 배열 인스턴스를 생성하지 못하게 하는 &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2에&lt;/a&gt; 도입 된 고정 회귀 분석 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;# 2820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ef081df82fe02c1d21fbf3be3167db4dedd0a141" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;code&gt;3.1.4&lt;/code&gt; that caused an &lt;code&gt;InvalidStateError&lt;/code&gt; when visiting a page with an XHR request with a &lt;code&gt;responseType&lt;/code&gt; other than &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;#3008&lt;/a&gt;.</source>
          <target state="translated">고정 회귀 분석에 도입 &lt;code&gt;3.1.4&lt;/code&gt; 원인이 &lt;code&gt;InvalidStateError&lt;/code&gt; 을 과 XHR 요청이있는 페이지를 방문 할 때 &lt;code&gt;responseType&lt;/code&gt; 이외의 &lt;code&gt;text&lt;/code&gt; 나 &lt;code&gt;''&lt;/code&gt; . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;# 3008&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fbf7ab71d1ad8d196ebbf6d38453f6febbccb19" translate="yes" xml:space="preserve">
          <source>Fixed regression related to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not re-visiting when current match matches remote url.</source>
          <target state="translated">현재 일치 항목이 원격 URL과 일치 할 때 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 와 관련된 회귀가 다시 방문되지 않는 문제를 해결했습니다 .</target>
        </trans-unit>
        <trans-unit id="20bad64bdf088500e5c0af6e99c92b091e7e853d" translate="yes" xml:space="preserve">
          <source>Fixed regression where multiple uses of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;before&lt;/code&gt; hook was throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;#510&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;#595&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 후크 에서 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 를 여러 번 사용할 때 오류가 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;# 80&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;# 510&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;# 595를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1ddb4c351234ffa2349168a921fdc72bc078ef5e" translate="yes" xml:space="preserve">
          <source>Fixed server crash on improperly handled proxy error.</source>
          <target state="translated">잘못 처리 된 프록시 오류에서 서버 충돌이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="ecac16a391c930105a5e711ddaf722b02291363a" translate="yes" xml:space="preserve">
          <source>Fixed several issues in Chrome* versions &amp;gt;= 72 in the Cypress proxy that caused using &lt;code&gt;cy.visit()&lt;/code&gt; with &lt;code&gt;localhost&lt;/code&gt; to fail, or using &lt;code&gt;localhost&lt;/code&gt; inside of the &lt;code&gt;baseUrl&lt;/code&gt; configuration option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;#1872&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;#3252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;#1777&lt;/a&gt;.</source>
          <target state="translated">크롬에 고정하여 여러 문제 * 야기&amp;gt; = 72 사이프러스 프록시의 버전 &lt;code&gt;cy.visit()&lt;/code&gt; 와 &lt;code&gt;localhost&lt;/code&gt; 실패하거나하여 &lt;code&gt;localhost&lt;/code&gt; 내부의 &lt;code&gt;baseUrl&lt;/code&gt; 구성 옵션. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;# 1872&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;# 3252&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;# 1777을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="5f42bd80d6e2ce3f8d06f2af19a9e6ae58e4c500" translate="yes" xml:space="preserve">
          <source>Fixed situation where &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; would not restore correctly between tests. Previously this would cause subsequent tests to be issued at the modified &lt;code&gt;cy.viewport()&lt;/code&gt;. Now viewport is automatically restored to the settings in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 가 테스트간에 올바르게 복원되지 않는 상황을 수정했습니다 . 이전에는 수정 된 &lt;code&gt;cy.viewport()&lt;/code&gt; 에서 후속 테스트가 실행되었습니다 . 이제 뷰포트가 &lt;code&gt;cypress.json&lt;/code&gt; 파일 의 설정으로 자동 복원 됩니다.</target>
        </trans-unit>
        <trans-unit id="b02f4bc11e465b4861e78fa180aac2c8fae16746" translate="yes" xml:space="preserve">
          <source>Fixed situation where Cypress was not injected correctly when &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag had attributes</source>
          <target state="translated">&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 태그에 속성이 있을 때 Cypress가 올바르게 주입되지 않는 상황이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="82fcae25d4eeaf0c24c4f8bd7ea1fdb7b64e82c8" translate="yes" xml:space="preserve">
          <source>Fixed situation where an &lt;code&gt;Uncaught Error&lt;/code&gt; was not being properly handled. Cypress would incorrectly continue to retry commands instead of canceling them, which lead to incorrect errors downstream in other tests.</source>
          <target state="translated">&lt;code&gt;Uncaught Error&lt;/code&gt; 가 제대로 처리되지 않는 상황이 수정 되었습니다. Cypress는 명령을 취소하는 대신 명령을 계속 다시 시도하여 다른 테스트에서 다운 스트림 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a805b2b9cd9f12618c568d08f8bfa058423cebd" translate="yes" xml:space="preserve">
          <source>Fixed situation where an error being thrown from an XHR was being improperly handled (in a slightly different way than the problem above).</source>
          <target state="translated">XHR에서 발생한 오류가 부적절하게 처리되는 상황을 수정했습니다 (위의 문제와 약간 다른 방식으로).</target>
        </trans-unit>
        <trans-unit id="25f011fff74cccfe58470de3408473111e220183" translate="yes" xml:space="preserve">
          <source>Fixed situations where 3rd party libraries (such as &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; were instrumenting XHR&amp;rsquo;s identical to Cypress&amp;rsquo; implementation. This caused an infinite loop which would crash the browser. We&amp;rsquo;ve updated how we instrument XHR&amp;rsquo;s to take this into account and deployed multiple fallbacks and strategies to prevent this kind of thing from happening in the future. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;#166&lt;/a&gt;.</source>
          <target state="translated">타사 라이브러리 (예 : &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; 과 같이 Cypress의 구현과 동일한 XHR을 계측 함)로 인해 무한 루프가 발생하여 브라우저가 중단 될 수 있음 XHR의 계측 방법을 업데이트하여 여러 폴백 및 전략을 배포했습니다. . 수정 미래에 일어나는 이런 일을 방지하기 위해 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;# 166&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a90330d9d199513c3c1f697121f82d67ac9dcfbb" translate="yes" xml:space="preserve">
          <source>Fixed some areas of the Desktop GUI that did not display path names correctly in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;#1830&lt;/a&gt;.</source>
          <target state="translated">Windows에서 경로 이름이 올바르게 표시되지 않는 데스크탑 GUI의 일부 영역을 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;# 1830&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7635003eb479c61bfa93d0fc555e7854d8689974" translate="yes" xml:space="preserve">
          <source>Fixed some edge cases in &lt;code&gt;cypress-core-extension&lt;/code&gt; where it threw errors when attempting to &lt;code&gt;executeScript&lt;/code&gt; on a tab with &lt;code&gt;about:blank&lt;/code&gt; or &lt;code&gt;chrome://&lt;/code&gt; urls.</source>
          <target state="translated">&lt;code&gt;cypress-core-extension&lt;/code&gt; 에서 &lt;code&gt;about:blank&lt;/code&gt; 또는 &lt;code&gt;chrome://&lt;/code&gt; urls 로 탭 에서 &lt;code&gt;executeScript&lt;/code&gt; 를 실행 하려고 할 때 오류가 발생하는 일부 엣지 사례를 수정 했습니다 .</target>
        </trans-unit>
        <trans-unit id="9bd64d1ad2c64718c1c35c5a6bc71306ca4b20b9" translate="yes" xml:space="preserve">
          <source>Fixed some incorrect typings with TypeScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;#1219&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;#1186&lt;/a&gt;.</source>
          <target state="translated">TypeScript로 잘못 입력하는 문제를 해결했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;# 1219&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;# 1186을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="55c6d5e91f27e4bc6b9cbc8398af21c15ac18f36" translate="yes" xml:space="preserve">
          <source>Fixed some problems serializing objects during domain change caused by circular references. In this case &lt;code&gt;zone.js&lt;/code&gt; was the culprit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;#741&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;.</source>
          <target state="translated">순환 참조로 인한 도메인 변경 중 개체를 직렬화하는 문제를 해결했습니다. 이 경우 &lt;code&gt;zone.js&lt;/code&gt; 가 범인이었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;# 741&lt;/a&gt; 수정 . 로 기여 &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf78fe9549f499bc7176b4a4219579e669fe7ba" translate="yes" xml:space="preserve">
          <source>Fixed some scenarios where assertions would not be logged as a child command.</source>
          <target state="translated">어설 션이 자식 명령으로 기록되지 않는 일부 시나리오를 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="b9298b1875f43960fb08c18b6e1ce951e11833fc" translate="yes" xml:space="preserve">
          <source>Fixed switching between two different spec files from the desktop app causing &lt;code&gt;document.domain&lt;/code&gt; to be wrong. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;#276&lt;/a&gt;.</source>
          <target state="translated">데스크톱 앱에서 두 개의 서로 다른 사양 파일 간 전환으로 인해 &lt;code&gt;document.domain&lt;/code&gt; 이 잘못되던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;# 276&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f3bbfab42be47f224b21071ed8d933508ef837ed" translate="yes" xml:space="preserve">
          <source>Fixed the incorrectly spelled chainer &lt;code&gt;descendents&lt;/code&gt;. It is now correctly spelled as &lt;code&gt;descendants&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;#642&lt;/a&gt;.</source>
          <target state="translated">잘못 철자 chainer의 고정 &lt;code&gt;descendents&lt;/code&gt; . 이제 &lt;code&gt;descendants&lt;/code&gt; 철자가 정확합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;# 642&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4396b312ac9ada54640275a453c976e5b4b65689" translate="yes" xml:space="preserve">
          <source>Fixed the vast majority of known issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;#1241&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 관련 알려진 대부분의 문제를 해결했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;# 1241&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd89959daffe5325a72d86a78445ddd2f3665adf" translate="yes" xml:space="preserve">
          <source>Fixed type definition for &lt;code&gt;match&lt;/code&gt; assertion so that it now only accepts &lt;code&gt;RegExp&lt;/code&gt; type arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;#2578&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 어설 션에 대한 형식 정의가 이제 &lt;code&gt;RegExp&lt;/code&gt; 형식 인수 만 허용하도록 수정 했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;# 2578&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31a2d12cdee595f72dbb70479095a595262b2ef8" translate="yes" xml:space="preserve">
          <source>Fixed typo in &lt;code&gt;cypress.schema.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;#1167&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.schema.json&lt;/code&gt; 의 오타가 수정되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;# 1167&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f13e96255f478cbf579d384640d76990bf989276" translate="yes" xml:space="preserve">
          <source>Fixed typo in CLI deps error about Docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;#1136&lt;/a&gt;.</source>
          <target state="translated">Docker에 대한 CLI deps 오류의 오타가 수정되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;# 1136&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="123a406e131050d5c46783cac9db4faa4b1adf80" translate="yes" xml:space="preserve">
          <source>Fixed typo in typing for &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger&lt;/code&gt;&lt;/a&gt; options. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;#3588&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger&lt;/code&gt; &lt;/a&gt; 옵션 입력시 오타가 수정되었습니다 . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;# 3588&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c6862d12df0492a8d47eb9f800cc435dca34ba5" translate="yes" xml:space="preserve">
          <source>Fixed using when using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;cy.click()&lt;/code&gt;&lt;/a&gt; on an element that bound to the &lt;code&gt;focus&lt;/code&gt; event while the browser was currently &lt;em&gt;out of focus&lt;/em&gt;. We have now normalized &lt;strong&gt;all focus and blur events&lt;/strong&gt; to behave the same as if the browser is always in focus. This should fix the other batch of &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; issues that users have been experiencing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;#549&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;#2198&lt;/a&gt;.</source>
          <target state="translated">브라우저가 현재 &lt;em&gt;초점을 벗어난&lt;/em&gt; 상태에서 &lt;code&gt;focus&lt;/code&gt; 이벤트에 바인딩 된 요소에서 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;cy.click()&lt;/code&gt; &lt;/a&gt; 을 사용할 때 사용되는 문제가 해결 되었습니다 . 이제 &lt;strong&gt;모든 초점 및 흐림 이벤트&lt;/strong&gt; 를 정규화 하여 브라우저가 항상 초점이있는 것처럼 동일하게 작동합니다. 이렇게하면 사용자가 겪었던 다른 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 문제가 해결됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;# 549&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;# 2198을&lt;/a&gt; 수정합니다 .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e266b628f293db1e722b0b04069227dc5bc1d508" translate="yes" xml:space="preserve">
          <source>Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;#14&lt;/a&gt;.</source>
          <target state="translated">수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;# 14&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3e73107f01c45ba65469b717cdbdfd3673801c8" translate="yes" xml:space="preserve">
          <source>Fixes a race condition where async electron browser commands came in after the renderer had been destroyed, causing failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;#2321&lt;/a&gt;.</source>
          <target state="translated">렌더러가 파괴 된 후 비동기 전자 브라우저 명령이 발생하여 레이스가 발생하는 경쟁 조건을 수정합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;# 2321&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b79957adcf9f3730b2dfc85a7ef0e7996d01b27b" translate="yes" xml:space="preserve">
          <source>Fixture</source>
          <target state="translated">Fixture</target>
        </trans-unit>
        <trans-unit id="31d84bd77e5cf1531a4306001f3e8c670196d59e" translate="yes" xml:space="preserve">
          <source>Fixture Files</source>
          <target state="translated">고정물 파일</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="8b2b39b6f6f2024db961fda1285280a85334d5cf" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically formatted / indented for easy debugging.</source>
          <target state="translated">고정물은 쉽게 디버깅을 위해 자동으로 포맷 / 들여 쓰기됩니다.</target>
        </trans-unit>
        <trans-unit id="966639036f094c23a89188baf7bf20ba4d6fd0e2" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically validated, with error messages propagating up to the client.</source>
          <target state="translated">오류 메시지가 클라이언트에 전파되면서 픽스쳐가 자동으로 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="1e0b0d59a94207af47ec8f5dccde6051018f845d" translate="yes" xml:space="preserve">
          <source>Fixtures are used as external pieces of static data that can be used by your tests. Fixture files are located in &lt;code&gt;cypress/fixtures&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory.</source>
          <target state="translated">고정구는 테스트에서 사용할 수있는 외부 정적 데이터 조각으로 사용됩니다. 픽스쳐 파일은 기본적으로 &lt;code&gt;cypress/fixtures&lt;/code&gt; 에 있지만 다른 디렉토리 로 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;구성&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57daed953824ba45abfcd5c87989fcded301dd2a" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special keywords: &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">픽스처는 또한 특수 키워드 를 사용하여 &lt;code&gt;.fixture()&lt;/code&gt; 명령을 사용 하지 않고 직접 참조 할 수도 있습니다 : &lt;code&gt;fixture:&lt;/code&gt; 또는 &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43bf9da5a2cde3892e6fd38e31b665731bc53300" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special property &lt;code&gt;fixture&lt;/code&gt; on the &lt;a href=&quot;intercept&quot;&gt;&lt;code&gt;cy.intercept()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object.</source>
          <target state="translated">또한 &lt;a href=&quot;intercept&quot;&gt; &lt;code&gt;cy.intercept()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;StaticResponse&lt;/code&gt; 객체 의 특수 속성 &lt;code&gt;fixture&lt;/code&gt; 를 사용하여 &lt;code&gt;.fixture()&lt;/code&gt; 명령을 사용 하지 않고 조명기를 직접 참조 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="076842db32152f6390a1de20bb1fbc6e90ec7ca2" translate="yes" xml:space="preserve">
          <source>Fixtures support &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, and &lt;code&gt;coffee&lt;/code&gt; files with image support coming soon.</source>
          <target state="translated">픽스처는 곧 이미지 지원으로 &lt;code&gt;json&lt;/code&gt; , &lt;code&gt;js&lt;/code&gt; 및 &lt;code&gt;coffee&lt;/code&gt; 파일을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="6ee2ec8b01f6a2d6ac9d639232c343a8f90182ba" translate="yes" xml:space="preserve">
          <source>Flake</source>
          <target state="translated">Flake</target>
        </trans-unit>
        <trans-unit id="d91efa73e5b91a88b6662bb37f8407309f3b7059" translate="yes" xml:space="preserve">
          <source>Flake resistant</source>
          <target state="translated">플레이크 방지</target>
        </trans-unit>
        <trans-unit id="fe7f55b8bf68fd47d248a271d541e7e183621010" translate="yes" xml:space="preserve">
          <source>Focus</source>
          <target state="translated">Focus</target>
        </trans-unit>
        <trans-unit id="504969e1329eefbbfdeeb59a6ddae1deec1b4aca" translate="yes" xml:space="preserve">
          <source>Focus is given to the first focusable element</source>
          <target state="translated">첫 번째 초점 요소에 초점</target>
        </trans-unit>
        <trans-unit id="2e297c61dbffb1cb797e7780c079b71f4d5b829d" translate="yes" xml:space="preserve">
          <source>Focus is not an action command</source>
          <target state="translated">초점은 행동 명령이 아닙니다</target>
        </trans-unit>
        <trans-unit id="05fe5fdddd29a27eba93a4eff2e3520554c5881d" translate="yes" xml:space="preserve">
          <source>Focus on a DOM element.</source>
          <target state="translated">DOM 요소에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="210b73a2419ab094c9f12e186fddae826317c4cb" translate="yes" xml:space="preserve">
          <source>Focus on an input</source>
          <target state="translated">입력에 집중</target>
        </trans-unit>
        <trans-unit id="81d320705a2ddd9e662402bee5f10442bd02b78b" translate="yes" xml:space="preserve">
          <source>Focus, type, and blur a textarea</source>
          <target state="translated">텍스트 영역의 초점을 맞추고 입력하고 흐리게</target>
        </trans-unit>
        <trans-unit id="b590cd6b1e83fa70fd0a3de3bc09fc6af804a5cb" translate="yes" xml:space="preserve">
          <source>Focusable</source>
          <target state="translated">Focusable</target>
        </trans-unit>
        <trans-unit id="19137a2bc8511e2902e61e074e829a5d7f79b9b2" translate="yes" xml:space="preserve">
          <source>Folder Structure</source>
          <target state="translated">폴더 구조</target>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="3778aa33bb0864f2f8fcc7c110b3e0e3cc013dfc" translate="yes" xml:space="preserve">
          <source>Folders / Files</source>
          <target state="translated">폴더 / 파일</target>
        </trans-unit>
        <trans-unit id="61370060bdb7d5e684f62aaa98a8a18eee47ce57" translate="yes" xml:space="preserve">
          <source>Follow the following process to request an OSS plan for your project:</source>
          <target state="translated">다음 프로세스에 따라 프로젝트의 OSS 계획을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="98df868c5fb316adc798790cfa5815b00c32e758" translate="yes" xml:space="preserve">
          <source>For &amp;lsquo;selecting&amp;rsquo; an option, just type it into the input.</source>
          <target state="translated">옵션을 '선택'하려면 입력에 입력하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e977c306cc77cda1ecdfaf0ddef7d8d79c99ed98" translate="yes" xml:space="preserve">
          <source>For JSON, the contents yielded are parsed into JavaScript and returned.</source>
          <target state="translated">JSON의 경우 생성 된 컨텐츠가 JavaScript로 구문 분석되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d3681f0b1f80d660f99494942d5d9f15e68f3c5c" translate="yes" xml:space="preserve">
          <source>For a comprehensive list of all configuration values look here.</source>
          <target state="translated">모든 구성 값의 전체 목록은 여기를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6fde55b197d8bc9171398408dd11058266e6428a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 앨리어싱에 대한 자세한 내용은 &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b747e493d60035aa88d9e5488eaf0d99b0cf5fc" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;여기에서 경로 대기에 대한 자세한 내용을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46aa6a9db14417356ce7d56cdff550006b66a46f" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;여기에서 앨리어싱에 대해 자세히 읽어보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec6efa9208593a34a7a58d14a56e9617bb92fea" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Waiting&quot;&gt;여기에서 경로 대기에 대한 자세한 내용을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c112b29f653fa6da29b77c4076e2ef3e3a084105" translate="yes" xml:space="preserve">
          <source>For a failure screenshot, the default naming scheme is used and the name is appended with &lt;code&gt;(failed)&lt;/code&gt;: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</source>
          <target state="translated">실패 스크린 샷의 경우 기본 이름 지정 체계가 사용되고 이름에 &lt;code&gt;(failed)&lt;/code&gt; 가 추가됩니다 : &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3622304f60b3021288d1c3d8d20c5a919b618c3" translate="yes" xml:space="preserve">
          <source>For a full example where invoke is used to await async Vuex store actions, visit the recipe: &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;Vue + Vuex + REST&lt;/a&gt;</source>
          <target state="translated">invoke가 비동기 Vuex 스토어 작업을 기다리는 데 사용되는 전체 예제를 보려면 레시피를 방문하세요. &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;Vue + Vuex + REST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a665f1775461ab3d07e8409cfd0c265140d91e7f" translate="yes" xml:space="preserve">
          <source>For a more thorough explanation of Cypress&amp;rsquo;s Web Security model, &lt;a href=&quot;../guides/web-security&quot;&gt;please read our dedicated guide to it&lt;/a&gt;.</source>
          <target state="translated">Cypress의 웹 보안 모델에 대한 자세한 설명은 &lt;a href=&quot;../guides/web-security&quot;&gt;전용 가이드를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81b646082a814f0faa4350f1e9fe72ba04d2d004" translate="yes" xml:space="preserve">
          <source>For a named screenshot, the name is used instead of the suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</source>
          <target state="translated">명명 된 스크린 샷의 경우 스위트 및 테스트 이름 대신 이름이 사용됩니다 : &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1875e2e03dcd0d2fa376d7793b62e8918bbb3dbf" translate="yes" xml:space="preserve">
          <source>For a variety of implementation reasons, Cypress commands &lt;strong&gt;only&lt;/strong&gt; retry the &lt;strong&gt;last command&lt;/strong&gt; before the assertion. In our test:</source>
          <target state="translated">다양한 구현 이유 때문에 Cypress 명령 은 어설 션 이전의 &lt;strong&gt;마지막 명령 &lt;/strong&gt;&lt;strong&gt;만&lt;/strong&gt; 다시 시도합니다 . 우리의 테스트에서 :&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d43c859b9e7c1c86f68c1d7527404d0b8d12f85a" translate="yes" xml:space="preserve">
          <source>For any duplicate screenshots (named or not), they will be appended with a number: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</source>
          <target state="translated">이름이 지정되거나 지정되지 않은 중복 스크린 샷의 경우 &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt; 번호가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="580371d64b28a421d6f70048a5b3551ae4f827cc" translate="yes" xml:space="preserve">
          <source>For any file other than JSON, the contents of the file are returned.</source>
          <target state="translated">JSON 이외의 파일의 경우 파일 내용이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="91b613f768c593855e85ce87451fd66e1155cdb4" translate="yes" xml:space="preserve">
          <source>For any other server type, define a &lt;code&gt;GET /__coverage__&lt;/code&gt; endpoint and return the &lt;code&gt;global.__coverage__&lt;/code&gt; object.</source>
          <target state="translated">다른 서버 유형의 경우 &lt;code&gt;GET /__coverage__&lt;/code&gt; 엔드 포인트를 정의 하고 &lt;code&gt;global.__coverage__&lt;/code&gt; 오브젝트를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff6639c39228ded6347d1f488c7234eea10e2fb6" translate="yes" xml:space="preserve">
          <source>For brevity we&amp;rsquo;ve omitted the full path to the cypress executable in each command&amp;rsquo;s documentation.</source>
          <target state="translated">간결하게하기 위해 각 명령 설명서에서 cypress 실행 파일의 전체 경로를 생략했습니다.</target>
        </trans-unit>
        <trans-unit id="201ee05c918022669060bbba7c946dd7db53a43e" translate="yes" xml:space="preserve">
          <source>For certain commands like &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, an extra instrument panel is displayed above the test to give more information about the state of your tests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 와 같은 특정 명령의 경우 테스트 상태에 대한 자세한 정보를 제공하기 위해 테스트 위에 추가 계기판이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cae9b803221129b647d814f9c377a224266b68b3" translate="yes" xml:space="preserve">
          <source>For clarity you can pass a string message as a second argument to any &lt;code&gt;expect&lt;/code&gt; assertion, see &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai#expect&lt;/a&gt;.</source>
          <target state="translated">명확성을 위해 문자열 메시지를 &lt;code&gt;expect&lt;/code&gt; 어설 션에 대한 두 번째 인수로 전달할 수 있습니다 ( &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai # expect&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="7df63eb79e11a90822227f06bac5c3df82d15fa8" translate="yes" xml:space="preserve">
          <source>For convenience, you can also omit any return value or return &lt;code&gt;undefined&lt;/code&gt; and Cypress will not error.</source>
          <target state="translated">편의상 반환 값을 생략하거나 &lt;code&gt;undefined&lt;/code&gt; 값을 반환 해도 Cypress는 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9c0ce52609e0b7f8cfe8d5f39cd21cde114fb46" translate="yes" xml:space="preserve">
          <source>For example - say a command we wrote timed out: &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get('#element')&lt;/code&gt;&lt;/a&gt;. This causes your test to fail. Cypress then automatically takes a screenshot when the test fails, but it is possible something in your application changed within this &lt;code&gt;100ms&lt;/code&gt; timeframe. Hypothetically, your app could render the element you were originally expecting to be present. When this happens, the screenshot may provide confusing results. It is unlikely, but theoretically possible.</source>
          <target state="translated">예를 들어, 우리가 쓴 명령이 시간 초과되었습니다 : &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get('#element')&lt;/code&gt; &lt;/a&gt; . 이로 인해 테스트가 실패합니다. 그런 다음 Cypress는 테스트가 실패하면 자동으로 스크린 샷을 &lt;code&gt;100ms&lt;/code&gt; 기간 내에 응용 프로그램의 내용이 변경되었을 수 있습니다 . 가설 적으로, 앱은 원래 예상했던 요소를 렌더링 할 수 있습니다. 이 경우 스크린 샷이 혼란 스러울 수 있습니다. 가능하지는 않지만 이론적으로는 가능합니다.</target>
        </trans-unit>
        <trans-unit id="263146ee5d217d189aa21d8fbdb6bfe0fbec8237" translate="yes" xml:space="preserve">
          <source>For example if you add the command &lt;code&gt;cy.dataCy&lt;/code&gt; into your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">예를 들어 &lt;code&gt;cy.dataCy&lt;/code&gt; 명령 을 다음 과 같이 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; 에&lt;/a&gt; 추가하는 경우 :</target>
        </trans-unit>
        <trans-unit id="2758c38b95307263ee836b320324f26239fd0efb" translate="yes" xml:space="preserve">
          <source>For example, clicking a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; inside of a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; gives the focus to the button, since that&amp;rsquo;s what would happen in a real user scenario.</source>
          <target state="translated">예를 들어 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 내부의 &amp;lt;span&amp;gt;을 클릭하면 실제 사용자 시나리오에서 발생하는 것이므로 버튼에 포커스를 둡니다.</target>
        </trans-unit>
        <trans-unit id="6f4fdb15c7328482d20e6ea99d6570ca3c31f0aa" translate="yes" xml:space="preserve">
          <source>For example, consider this HTML fragment.</source>
          <target state="translated">예를 들어,이 HTML 조각을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="764b75327a33cf0119b6f91796ffb927e6300398" translate="yes" xml:space="preserve">
          <source>For example, given a spec file located at &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt; 에있는 스펙 파일이 제공된 경우 :</target>
        </trans-unit>
        <trans-unit id="aaa1105999961ee6003bd962c1a65b040bd5496f" translate="yes" xml:space="preserve">
          <source>For example, if the snapshot command is &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 스냅 샷 명령이 &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt; 인 경우 :</target>
        </trans-unit>
        <trans-unit id="ab571a4f91aef38ebfa5eecac23a46306dfafc38" translate="yes" xml:space="preserve">
          <source>For example, if your distribution packages Google Chrome as &lt;code&gt;chrome&lt;/code&gt;, you could add a symlink to &lt;code&gt;google-chrome&lt;/code&gt; like this:</source>
          <target state="translated">예를 들어 배포판에서 Chrome을 &lt;code&gt;chrome&lt;/code&gt; 으로 패키지하면 다음 과 같이 &lt;code&gt;google-chrome&lt;/code&gt; 에 심볼릭 링크를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="644fe93693b828db3515767856da1bd3a29e87ab" translate="yes" xml:space="preserve">
          <source>For example, on a Linux machine:</source>
          <target state="translated">예를 들어, Linux 시스템에서 :</target>
        </trans-unit>
        <trans-unit id="e2158d33b661e52ec20e4eadf6ce104d3345fbd7" translate="yes" xml:space="preserve">
          <source>For example, on a Mac:</source>
          <target state="translated">예를 들어, Mac에서 :</target>
        </trans-unit>
        <trans-unit id="374258cadc421fc853522a47d379c7f40972c75a" translate="yes" xml:space="preserve">
          <source>For example, one can use the &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; plugin and catch the following visual regression:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; 플러그인을 사용하여 다음과 같은 시각적 회귀를 포착 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52bff469061738de305a5c214d6bb7f6c8ad7f03" translate="yes" xml:space="preserve">
          <source>For example, the following test has &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; assertions. &lt;code&gt;.and()&lt;/code&gt; is an alias of the &lt;code&gt;.should()&lt;/code&gt; command, so the second assertion is really a custom callback assertion in the form of the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should(cb)&lt;/code&gt;&lt;/a&gt; function with 2 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; assertions inside of it.</source>
          <target state="translated">예를 들어 다음 테스트에는 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt; 어설 션이 있습니다. &lt;code&gt;.and()&lt;/code&gt; 의 별칭 &lt;code&gt;.should()&lt;/code&gt; 두 번째 주장 맞춤 콜백의 형태 어서 정말 있도록 명령은 &lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should(cb)&lt;/code&gt; &lt;/a&gt; 2 기능 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt; 그 안에 단언.</target>
        </trans-unit>
        <trans-unit id="7f0d7592cbf7bfa92426baaef777c8467fdf810d" translate="yes" xml:space="preserve">
          <source>For example, to set the default command timeout to 10 seconds via command line:</source>
          <target state="translated">예를 들어, 명령 행을 통해 기본 명령 제한 시간을 10 초로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="24e8f3f5bf287ec2abda1e46dac7e765408a08a9" translate="yes" xml:space="preserve">
          <source>For example, when writing a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command, Cypress ensures that the element is able to be interacted with (like a real user would). It will automatically wait until the element reaches an &amp;ldquo;actionable&amp;rdquo; state by:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 명령을 작성할 때 Cypress는 요소가 실제 사용자처럼 상호 작용할 수 있는지 확인합니다. 다음과 같이 요소가 &quot;작동 가능&quot;상태에 도달 할 때까지 자동으로 대기합니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2de5b291ad79324bcf505dc77ce99f3c250b6a66" translate="yes" xml:space="preserve">
          <source>For instance given a URL: &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt;</source>
          <target state="translated">예를 들어 &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt; URL이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="af939d9ec5be005fdcff9cc5bafa9bc567dcc0c0" translate="yes" xml:space="preserve">
          <source>For instance the following will submit the form.</source>
          <target state="translated">예를 들어 다음은 양식을 제출합니다.</target>
        </trans-unit>
        <trans-unit id="b5517d0b0ff724878ebb60576914cb82e4c4d83b" translate="yes" xml:space="preserve">
          <source>For instance there is:</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="69f7252ea2666904183520e01c4a6a37f7de72b6" translate="yes" xml:space="preserve">
          <source>For instance you may want to do this:</source>
          <target state="translated">예를 들어 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252964127344b906890088ac3b58c00fbc7996d8" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; requires that the property you&amp;rsquo;re asking about exists on the object.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 하려면 요청하는 속성이 객체에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9f2d3f0dc7271d3653fea606fcd0bdc4bb155b6d" translate="yes" xml:space="preserve">
          <source>For instance, an element could pass all of the previous checks, but a giant dialog could be covering the entire screen making interacting with the element impossible for any real user.</source>
          <target state="translated">예를 들어, 요소가 이전의 모든 검사를 통과 할 수 있지만 거대한 대화 상자가 전체 화면을 덮으면 실제 사용자가 요소와 상호 작용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="f82e17eccd0cd5b897a68561a0dfcf4a5a0d4cc8" translate="yes" xml:space="preserve">
          <source>For more complex use cases feel free to overwrite existing commands.</source>
          <target state="translated">보다 복잡한 사용 사례의 경우 기존 명령을 자유롭게 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e02635601388e7c946b921e1e450b5a9dc0dde5" translate="yes" xml:space="preserve">
          <source>For more details on these options and to set some as defaults across all uses of &lt;code&gt;.screenshot()&lt;/code&gt;, see the &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc&lt;/a&gt;.</source>
          <target state="translated">이러한 옵션에 대한 자세한 내용과 &lt;code&gt;.screenshot()&lt;/code&gt; 의 모든 사용에서 일부를 기본값으로 설정 하려면 &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54d3a0513cfccad9eb5d6e0e78581670489941f0" translate="yes" xml:space="preserve">
          <source>For more information on writing plugins, please &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out our API docs here&lt;/a&gt;.</source>
          <target state="translated">플러그인 작성에 대한 자세한 내용은 &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;여기에서 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d3310b65fdf0f0ced0b2000f01f790efbf2e93c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Integrating Mochawesome reporter with Cypresss&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Mochawesome 기자와 Cypresss 통합을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a938ddb8b260b7907e6de8105877506b068906fa" translate="yes" xml:space="preserve">
          <source>For more options regarding screenshots, view the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;.</source>
          <target state="translated">스크린 샷과 관련된 추가 옵션을 보려면 &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09f377bc687a64f445d344af854cd956a6165063" translate="yes" xml:space="preserve">
          <source>For multiple runs to be grouped into a single run, it is required for CI machines to share a common CI build ID environment variable. Typically these CI machines will run in parallel or within the same build workflow or pipeline, but &lt;strong&gt;it is not required to use Cypress parallelization to group runs&lt;/strong&gt;. Grouping of runs can be utilized independently of Cypress parallelization.</source>
          <target state="translated">여러 실행을 단일 실행으로 그룹화하려면 CI 시스템이 공통 CI 빌드 ID 환경 변수를 공유해야합니다. 일반적으로 이러한 CI 시스템은 병렬로 또는 동일한 빌드 워크 플로우 또는 파이프 라인 내에서 실행되지만 &lt;strong&gt;Cypress 병렬화를 사용하여 실행을 그룹화 할 필요는 없습니다&lt;/strong&gt; . 실행 그룹화는 Cypress 병렬화와 독립적으로 활용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33169c378a8f3e8f01e7fbd26b9ee56ff477e933" translate="yes" xml:space="preserve">
          <source>For now, please visit the &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;Catalog of Events&lt;/a&gt; page for examples how to turn off catching uncaught exceptions.</source>
          <target state="translated">지금의 경우, 방문 &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;이벤트의 카탈로그&lt;/a&gt; 캐치되지 않는 예외를 잡기 해제하는 방법을 예제 페이지를.</target>
        </trans-unit>
        <trans-unit id="88158d5e9dc8f8941bd54f6e40953f96ad40d693" translate="yes" xml:space="preserve">
          <source>For other types of files, they will be read as &lt;code&gt;utf8&lt;/code&gt; by default, unless specified in the second argument of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="translated">다른 유형의 파일 의 경우 &lt;code&gt;cy.fixture()&lt;/code&gt; 의 두 번째 인수에 지정되어 있지 않으면 기본적 으로 &lt;code&gt;utf8&lt;/code&gt; 로 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="d91ebd354dbfba00dacd289ac1a90f3e80f3b246" translate="yes" xml:space="preserve">
          <source>For reference, the &lt;code&gt;.babelrc&lt;/code&gt; file is shared between the example application and the spec files, thus Cypress tests are transpiled the same way the application code is transpiled.</source>
          <target state="translated">참고로 &lt;code&gt;.babelrc&lt;/code&gt; 파일은 예제 응용 프로그램과 사양 파일간에 공유되므로 Cypress 테스트는 응용 프로그램 코드를 변환하는 것과 같은 방식으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a0f76861650d658435d862cebc0bc974dfdbebf1" translate="yes" xml:space="preserve">
          <source>For the moment, let&amp;rsquo;s assume that for some reason your application desperately &lt;strong&gt;needs&lt;/strong&gt; that last bit of &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; code to run. Let&amp;rsquo;s assume that if that code is not run - all is lost.</source>
          <target state="translated">현재 어떤 이유로 애플리케이션 이 마지막 또는 &lt;code&gt;after&lt;/code&gt; &lt;code&gt;afterEach&lt;/code&gt; 코드 실행을 절실히 &lt;strong&gt;필요로&lt;/strong&gt; 한다고 가정 해 봅시다 . 해당 코드가 실행되지 않으면 모든 것이 손실된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c35e33effb9613124be59712e199c2b878568a36" translate="yes" xml:space="preserve">
          <source>For the most powerful matching, provide a regular expression</source>
          <target state="translated">가장 강력한 일치를 위해 정규식을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="01260984a70b15e582d02ecbb77eb53567003e8b" translate="yes" xml:space="preserve">
          <source>For the remainder of this guide, we&amp;rsquo;ll explore the basics of Cypress that make this example work. We&amp;rsquo;ll demystify the rules Cypress follows so you can productively test your application to act as much like a user as possible, as well as discuss how to take shortcuts when it&amp;rsquo;s useful.</source>
          <target state="translated">이 가이드의 나머지 부분에서는이 예제가 작동하도록하는 Cypress의 기본 사항을 살펴 보겠습니다. Cypress가 따르는 규칙을 이해하지 못하도록하여 가능한 한 사용자처럼 행동하도록 응용 프로그램을 생산적으로 테스트하고 유용 할 때 바로 가기를 취하는 방법에 대해 논의 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="728229716acc9fc14a9907d5acafe87f6cdd5c23" translate="yes" xml:space="preserve">
          <source>For this reason we recommend &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;downloading Chromium&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;downloading Canary&lt;/a&gt;. These browsers both have different icons from the standard Chrome browser and it&amp;rsquo;ll be much easier to tell the difference. You can also use the bundled &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt;, which does not have a Dock icon.</source>
          <target state="translated">이러한 이유로 &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium을 &lt;/a&gt;&lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;다운로드&lt;/a&gt; 하거나 Canary를 다운로드하는 것이 좋습니다 . 이 브라우저는 표준 Chrome 브라우저와 다른 아이콘을 가지고 있으며 그 차이를 훨씬 쉽게 알 수 있습니다. Dock 아이콘이없는 번들로 제공되는 &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron 브라우저를&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="205e71a20ed6c001f2d67335fcd4f33135185375" translate="yes" xml:space="preserve">
          <source>For this reason you cannot &lt;strong&gt;ever&lt;/strong&gt; return or assign anything useful from Cypress commands.</source>
          <target state="translated">이러한 이유로 당신은 할 수없는 &lt;strong&gt;적&lt;/strong&gt; 반환하거나 싸이프레스 명령에서 할당 것도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d0b8219d8ed6c1e8024344c044ecea764b1dc5cf" translate="yes" xml:space="preserve">
          <source>For working with either of these patterns, please read our &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Variables and Aliases guide&lt;/a&gt;.</source>
          <target state="translated">이러한 패턴 중 하나를 사용하려면 &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;변수 및 별칭 안내서&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="58df072b14e502083ab5c85ba4c8f1d20ae6ccd5" translate="yes" xml:space="preserve">
          <source>Force Reload</source>
          <target state="translated">재 장전</target>
        </trans-unit>
        <trans-unit id="6009b160ba75d2e52bc0d8169e251b1536e4aa89" translate="yes" xml:space="preserve">
          <source>Force a click regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제로 클릭</target>
        </trans-unit>
        <trans-unit id="501ae9dd8f1715a7ea40942df61d140bc1a7fd7e" translate="yes" xml:space="preserve">
          <source>Force a click with position argument</source>
          <target state="translated">위치 인수를 사용하여 강제 클릭</target>
        </trans-unit>
        <trans-unit id="f0f17bcdc15ad6b57ab2c842701861471bd496bc" translate="yes" xml:space="preserve">
          <source>Force a click with relative coordinates</source>
          <target state="translated">상대 좌표로 강제 클릭</target>
        </trans-unit>
        <trans-unit id="3f21fe7e580912b2cb72d35ec748a7a7363b3004" translate="yes" xml:space="preserve">
          <source>Force a double click regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제로 두 번 클릭</target>
        </trans-unit>
        <trans-unit id="e3fd021baf3d5a26bdc7db2d16f76b2550794e8b" translate="yes" xml:space="preserve">
          <source>Force a double click with position argument</source>
          <target state="translated">위치 인수로 더블 클릭 강제</target>
        </trans-unit>
        <trans-unit id="f781217729dad48d4061dfce919713b00cf6513c" translate="yes" xml:space="preserve">
          <source>Force a double click with relative coordinates</source>
          <target state="translated">상대 좌표를 사용하여 강제로 두 번 클릭</target>
        </trans-unit>
        <trans-unit id="2c3f51a6cb84667b76ee081ad795c0f7d6be6980" translate="yes" xml:space="preserve">
          <source>Force a right click regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제로 오른쪽 클릭</target>
        </trans-unit>
        <trans-unit id="3b1485264533345f8f2abaada7228dda3441bca8" translate="yes" xml:space="preserve">
          <source>Force a right click with position argument</source>
          <target state="translated">위치 인수를 사용하여 강제로 오른쪽 클릭</target>
        </trans-unit>
        <trans-unit id="e3f1611aec9cf61c4b343f3ba827008cdec4fdf7" translate="yes" xml:space="preserve">
          <source>Force a right click with relative coordinates</source>
          <target state="translated">상대 좌표를 사용하여 오른쪽 클릭 강제</target>
        </trans-unit>
        <trans-unit id="778a8734a9c3b42f5a7d9afcc008f81e492a3a8b" translate="yes" xml:space="preserve">
          <source>Force click</source>
          <target state="translated">강제 클릭</target>
        </trans-unit>
        <trans-unit id="41e37a1f78aef985b21cad73b3082506a86c715b" translate="yes" xml:space="preserve">
          <source>Force exit codes that are &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;#184&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 종료 코드 를 &lt;code&gt;0&lt;/code&gt; 으로 설정하십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;# 184&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9345bedf1cea87fd7b943085b7226f014d46c650" translate="yes" xml:space="preserve">
          <source>Force select</source>
          <target state="translated">강제 선택</target>
        </trans-unit>
        <trans-unit id="1a45b61c2dbe231a97475e5b31a52f41b5bf37f4" translate="yes" xml:space="preserve">
          <source>Force select a disabled &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">비활성화 된 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 강제 선택</target>
        </trans-unit>
        <trans-unit id="dacb0e4f8e0de0d6df18a2d70b6f266a299781bf" translate="yes" xml:space="preserve">
          <source>Force select a hidden &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="translated">숨겨진 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 강제 선택</target>
        </trans-unit>
        <trans-unit id="3675b055af415697257a68145761329b09a120af" translate="yes" xml:space="preserve">
          <source>Force trailing slash on all &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to fix relative links &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 에 후행 슬래시를 강제 하여 상대 링크 &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="212605644c0b6c1945c9a3e7254761cd558173c5" translate="yes" xml:space="preserve">
          <source>Force typing regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제 입력</target>
        </trans-unit>
        <trans-unit id="9133a83c2831ad21e3aa26f7912ae9117d231e31" translate="yes" xml:space="preserve">
          <source>Force your application to behave deterministically.</source>
          <target state="translated">응용 프로그램이 결정적으로 동작하도록합니다.</target>
        </trans-unit>
        <trans-unit id="c22784e9b0a4a78c005e9a85b243521624424e2e" translate="yes" xml:space="preserve">
          <source>Forces the action, disables &lt;a href=&quot;#Assertions&quot;&gt;waiting for actionability&lt;/a&gt;</source>
          <target state="translated">작업을 강제 &lt;a href=&quot;#Assertions&quot;&gt;실행하고 실행 가능성 대기를&lt;/a&gt; 비활성화</target>
        </trans-unit>
        <trans-unit id="d8e12d23ec3290a534ebbcf584e8eb235083c99c" translate="yes" xml:space="preserve">
          <source>Forces the action, disables checking if &lt;a href=&quot;#Requirements&quot;&gt;element is focused&lt;/a&gt;</source>
          <target state="translated">동작을 강제하고 &lt;a href=&quot;#Requirements&quot;&gt;요소가 초점을 맞추고&lt;/a&gt; 있는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6aeb53d6057d030d1940ca8e7fb9f7eac6f7fb4" translate="yes" xml:space="preserve">
          <source>Forcibly fire the event at the element</source>
          <target state="translated">요소에서 이벤트를 강제로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="22c717b7cf52642cd4402c97663c40e584fd7918" translate="yes" xml:space="preserve">
          <source>Forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XHR이 기존 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 와 일치하지 않으면 XHR을 404 상태로 강제 전송 합니다.</target>
        </trans-unit>
        <trans-unit id="20885cc954853a82ab6c89688d9a6d691df54148" translate="yes" xml:space="preserve">
          <source>Forcibly send a 404 status when the XHR does not match any existing &lt;code&gt;cy.route()&lt;/code&gt;.</source>
          <target state="translated">XHR이 기존 &lt;code&gt;cy.route()&lt;/code&gt; 와 일치하지 않으면 강제로 404 상태를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="8e9b90f09f342388fa794ee597459cdfabb7b581" translate="yes" xml:space="preserve">
          <source>Forcing</source>
          <target state="translated">Forcing</target>
        </trans-unit>
        <trans-unit id="f8c2349f25011f3fb852e55a8b44e642923f7d87" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">클릭하면 Cypress가 적용 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;가능한 실행 가능한 검사가&lt;/a&gt; 재정의 되고 이벤트가 자동으로 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="1203f45c3499183df76b622dc696323751b8498d" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">클릭을 강요하면 Cypress가 적용 하는 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;실행 가능한 검사가&lt;/a&gt; 무시되고 자동으로 이벤트가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c401155af17add2e4a1ac7619bf056122cb7782e" translate="yes" xml:space="preserve">
          <source>Forcing a double click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">더블 클릭을 강요하면 Cypress가 적용 하는 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;실행 가능한 검사가&lt;/a&gt; 무시되고 자동으로 이벤트가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e27c6c6217538cdeb2a624444b935f5001caa3e4" translate="yes" xml:space="preserve">
          <source>Forcing a right click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">오른쪽 클릭을 강요하면 Cypress가 적용 하는 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;실행 가능한 검사가&lt;/a&gt; 무시되고 자동으로 이벤트가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ce50bed2898545dff3bd82a789b80bd08baf4e2f" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">입력을 강제하면 Cypress가 적용하고 이벤트를 자동으로 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;실행&lt;/a&gt; 하는 실행 가능한 검사 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="dbbc7ab2b811ea1244db5ceb4308e5849195c7f1" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">강제 입력은 Cypress가 적용 하는 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;실행 가능한 검사를&lt;/a&gt; 무시하고 자동으로 이벤트를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="42440f0025c87af99f06a479298706346f7339fa" translate="yes" xml:space="preserve">
          <source>Form Submission</source>
          <target state="translated">양식 제출</target>
        </trans-unit>
        <trans-unit id="53a11923bf4b30c2695146358bf573a9a81ef986" translate="yes" xml:space="preserve">
          <source>Form Submission Redirects</source>
          <target state="translated">양식 제출 리디렉션</target>
        </trans-unit>
        <trans-unit id="c29b61ca75f1c226b23fdb85ea8267be1b5f57ad" translate="yes" xml:space="preserve">
          <source>Form Submissions</source>
          <target state="translated">양식 제출</target>
        </trans-unit>
        <trans-unit id="9dfc42ed63ca85b554caa7e220fd03b0c592b3d8" translate="yes" xml:space="preserve">
          <source>Form submission could result in a non-success status code.</source>
          <target state="translated">양식을 제출하면 성공하지 못한 상태 코드가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d016fe426ee3087e96153f2d1d6e6ebf0fc6765" translate="yes" xml:space="preserve">
          <source>Form with 1 input, no defaultButton.</source>
          <target state="translated">1 개의 입력을 가진 폼, defaultButton은 없습니다.</target>
        </trans-unit>
        <trans-unit id="8e9fba7056e53e85ae44895a33b9e115c05d0bb1" translate="yes" xml:space="preserve">
          <source>Form with 2 inputs, no defaultButton.</source>
          <target state="translated">입력이 2 개인 양식, defaultButton은 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf3f48103538a5822498e4ce69d4cd1cd1cbd15b" translate="yes" xml:space="preserve">
          <source>Form with disabled defaultButton.</source>
          <target state="translated">defaultButton이 비활성화 된 양식</target>
        </trans-unit>
        <trans-unit id="fa6120162c6ff741a97b6f9f45021516e88399ea" translate="yes" xml:space="preserve">
          <source>Form with multiple defaultButtons.</source>
          <target state="translated">여러 개의 기본 버튼이있는 양식.</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="f123768a0be7e3519d5400f6ace516a3d22ef601" translate="yes" xml:space="preserve">
          <source>Fortunately, you don&amp;rsquo;t have to make your code do backflips. Cypress makes it easy to handle these situations.</source>
          <target state="translated">운 좋게도 코드를 백 플립으로 만들 필요는 없습니다. Cypress를 사용하면 이러한 상황을 쉽게 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="4d98ce7637720e6e6410d48877f19b3b01766845" translate="yes" xml:space="preserve">
          <source>Framework tooling</source>
          <target state="translated">프레임 워크 툴링</target>
        </trans-unit>
        <trans-unit id="09c17a26370171d23ce84d3552d846a3048206f8" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;cy&lt;/code&gt; only, meaning they do not operate on a subject: &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에서 &lt;code&gt;cy&lt;/code&gt; 만, 그들은이 주제에 작동하지 않는 의미 : &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31f403c5a128ec2fd7eecd5f9c8314fb8737fe1f" translate="yes" xml:space="preserve">
          <source>From a plugin</source>
          <target state="translated">플러그인에서</target>
        </trans-unit>
        <trans-unit id="ed641d7d4bd97215540ad6898e355fb5baec7c82" translate="yes" xml:space="preserve">
          <source>From both &lt;code&gt;cy&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; from a subject-yielding command: &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모두에서 &lt;code&gt;cy&lt;/code&gt; &lt;em&gt;또는&lt;/em&gt; 주제 항복 명령 : &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e722ad8ebb2888327ea48c45ad4d9f9f25a3a6c" translate="yes" xml:space="preserve">
          <source>From commands yielding particular kinds of subjects (like DOM elements): &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 요소와 같은 특정 종류의 주제를 생성하는 명령에서 : &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9cebd6aa307387fd6af261554581a6553c4c0a6" translate="yes" xml:space="preserve">
          <source>From here you may want to explore some more of our guides:</source>
          <target state="translated">여기에서 다음과 같은 가이드를 더 살펴볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dba6095ab28643bdecd3fa748791bc981bf5a33" translate="yes" xml:space="preserve">
          <source>From now on, the front end code coverage collected during end-to-end tests will be merged with the code coverage from the instrumented back end code and saved in a single report. Here is an example report from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; example:</source>
          <target state="translated">이제부터 엔드-투-엔드 테스트 중에 수집 된 프런트 엔드 코드 적용 범위가 계측 된 백엔드 코드의 코드 적용 범위와 병합되어 단일 보고서에 저장됩니다. 다음은 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt; 예제 의 예제 보고서입니다 .</target>
        </trans-unit>
        <trans-unit id="0c3798d7d8f036440f97015d932834077be71636" translate="yes" xml:space="preserve">
          <source>From test file</source>
          <target state="translated">테스트 파일에서</target>
        </trans-unit>
        <trans-unit id="ab237c8d353bffac0346140b90b7b7a8b25ebce3" translate="yes" xml:space="preserve">
          <source>From the Dashboard you can:</source>
          <target state="translated">대시 보드에서 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11bd5b7d8d61f5366111bedb4345ae5776477e67" translate="yes" xml:space="preserve">
          <source>From the command line or CI</source>
          <target state="translated">명령 행 또는 CI에서</target>
        </trans-unit>
        <trans-unit id="deed2829df64b9417a7632480c32da477e7c2ff9" translate="yes" xml:space="preserve">
          <source>From your support file you should also &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; other files to keep things organized.</source>
          <target state="translated">지원 파일에서 구성을 유지 &lt;code&gt;require&lt;/code&gt; 다른 파일을 &lt;code&gt;import&lt;/code&gt; 오거나 다른 파일이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="b83b790c6fc4ff8ca374201d19ae1e8204d8eb05" translate="yes" xml:space="preserve">
          <source>Full documentation can be found at the &lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt;&lt;code&gt;cypress-io/circleci-orb&lt;/code&gt;&lt;/a&gt; repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt; &lt;code&gt;cypress-io/circleci-orb&lt;/code&gt; &lt;/a&gt; repo 에서 전체 문서를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27be451352c8b9f273dc84e2012187216c61789d" translate="yes" xml:space="preserve">
          <source>Full page captures and fixed/sticky elements</source>
          <target state="translated">전체 페이지 캡처 및 고정 / 고정 요소</target>
        </trans-unit>
        <trans-unit id="034943d6789b4d9a66d1f7cf2a5a8320eb650fa6" translate="yes" xml:space="preserve">
          <source>Full stack code coverage</source>
          <target state="translated">전체 스택 코드 범위</target>
        </trans-unit>
        <trans-unit id="ad91f657b5019ed1b548b39cdeb2914b715a3155" translate="yes" xml:space="preserve">
          <source>Full version.</source>
          <target state="translated">풀 버전.</target>
        </trans-unit>
        <trans-unit id="ad82fc5446798eab3d3d1fdaaff1f48decfa74b2" translate="yes" xml:space="preserve">
          <source>Fully Qualified XHR&amp;rsquo;s which should be proxied are now correctly transparently rewritten to prevent CORS problems.</source>
          <target state="translated">프록시되어야하는 정규화 된 XHR은 이제 CORS 문제를 방지하기 위해 올바르게 투명하게 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="4093edaeaabad68fa8b27b27cf89bc2a6385145f" translate="yes" xml:space="preserve">
          <source>Fully test the login flow &amp;ndash; but only once!</source>
          <target state="translated">로그인 흐름을 완전히 테스트하십시오 &amp;ndash; 단 한 번만!</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">기능 이름</target>
        </trans-unit>
        <trans-unit id="36cd78d0eb64baf4c627d1e6a9a955d2ec5678d8" translate="yes" xml:space="preserve">
          <source>Function with Arguments</source>
          <target state="translated">인수를 가진 함수</target>
        </trans-unit>
        <trans-unit id="ce82a00dda725a9597e8bcd97e8cf08fdb3c76d6" translate="yes" xml:space="preserve">
          <source>Functional vs visual testing</source>
          <target state="translated">기능적 테스트와 시각적 테스트</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="468663fe629e5152ad5be2f4f4d1558cfeb168ab" translate="yes" xml:space="preserve">
          <source>Functions that return a &lt;code&gt;Promise&lt;/code&gt; will automatically be awaited.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 를 반환하는 기능 은 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="33851c1930f54c3f51d08dc5b642a96f9ca8647b" translate="yes" xml:space="preserve">
          <source>Functions that return promises are awaited</source>
          <target state="translated">약속을 돌려주는 기능이 기다리고 있습니다</target>
        </trans-unit>
        <trans-unit id="8018e4b6436fbf898a5cd266c4d81b923fca90e4" translate="yes" xml:space="preserve">
          <source>Generally the server is responsible for sending responses that reflect some kind of &lt;strong&gt;state&lt;/strong&gt; it holds - generally in a database.</source>
          <target state="translated">일반적으로 서버는 일반적으로 데이터베이스에서 어떤 종류의 &lt;strong&gt;상태&lt;/strong&gt; 를 반영하는 응답을 보내는 역할을 합니다.</target>
        </trans-unit>
        <trans-unit id="13c8927808b0572155f1b77ea1cae972ef9ce0c0" translate="yes" xml:space="preserve">
          <source>Generate HTTP Archive (HAR) while running tests.</source>
          <target state="translated">테스트를 실행하는 동안 HTTP 아카이브 (HAR)를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="715d08a843e5acb7dcfcc8e24b0c0cb0a4d75935" translate="yes" xml:space="preserve">
          <source>Generate the fixture stubs ahead of time</source>
          <target state="translated">미리 조명기 스터브 생성</target>
        </trans-unit>
        <trans-unit id="11a354d7971106c41270317a1366eb5df9e036d7" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;length&lt;/code&gt; of title</source>
          <target state="translated">타이틀 &lt;code&gt;length&lt;/code&gt; 얻기</target>
        </trans-unit>
        <trans-unit id="5e34727010ea8370b58971d714279bf8c32f0c85" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;session_id&lt;/code&gt; cookie after logging in</source>
          <target state="translated">가져 오기 &lt;code&gt;session_id&lt;/code&gt; 로그인 후 쿠키를</target>
        </trans-unit>
        <trans-unit id="ec2c63980222cc97289df6bba1d272938c5fedbe" translate="yes" xml:space="preserve">
          <source>Get A DOM element at a specific index in an array of elements.</source>
          <target state="translated">요소 배열의 특정 색인에서 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="78c744c3cf42801348368155de7d7cd17259ef6b" translate="yes" xml:space="preserve">
          <source>Get Cookies</source>
          <target state="translated">쿠키 받기</target>
        </trans-unit>
        <trans-unit id="69db1095ca8c07057a09db214ec350fd2355c3c7" translate="yes" xml:space="preserve">
          <source>Get Data URL of an image</source>
          <target state="translated">이미지의 데이터 URL 가져 오기</target>
        </trans-unit>
        <trans-unit id="0c86560c49c46a484a21b0223713a7665b708f1c" translate="yes" xml:space="preserve">
          <source>Get Selector</source>
          <target state="translated">선택기 가져 오기</target>
        </trans-unit>
        <trans-unit id="b538f16cde1fda1eece5d2bedbebb8c4337c9821" translate="yes" xml:space="preserve">
          <source>Get a browser cookie by its name.</source>
          <target state="translated">이름으로 브라우저 쿠키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="614bbfebbe46a05ffc8be0b2c0eebb60088ff60b" translate="yes" xml:space="preserve">
          <source>Get a property&amp;rsquo;s value on the previously yielded subject.</source>
          <target state="translated">이전에 생성 된 주제에 대한 속성 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="8ba066fae08fe663607191f346ff763688eef943" translate="yes" xml:space="preserve">
          <source>Get all ancestors of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">일치하는 DOM 요소 세트에서 각 DOM 요소의 모든 조상을 제공합니다 (제공된 요소는 포함하지 않음).</target>
        </trans-unit>
        <trans-unit id="d878e7fb89bc9f6dd7e6ac1552c565e8284a506c" translate="yes" xml:space="preserve">
          <source>Get all configuration options</source>
          <target state="translated">모든 구성 옵션 가져 오기</target>
        </trans-unit>
        <trans-unit id="1a7e3fd03d2ba22ab645e0ec3b6b252dc9c88e9b" translate="yes" xml:space="preserve">
          <source>Get all configuration options from &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성&lt;/a&gt; 파일 에서 모든 구성 옵션 가져 오기 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1e226b0bbb6ba1eb6dfa3e1b24fa3ff146eafff2" translate="yes" xml:space="preserve">
          <source>Get all environment variables from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="translated">구성 파일 ( 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; ) 에서 모든 환경 변수 가져 오기</target>
        </trans-unit>
        <trans-unit id="726e1658d3160337c34366924865ffe6f9bdd1ee" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">일치하는 DOM 요소 집합에서 각 요소의 다음 형제를 모두 제공합니다 (제공된 요소는 포함하지 않음).</target>
        </trans-unit>
        <trans-unit id="d7f7fa2095055d8090ee656b4df2a277638eabf8" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">일치하는 DOM 요소 세트에서 각 DOM 요소의 다음 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7bc2f9f01d4a3efa98a3539f5277214a45b34918" translate="yes" xml:space="preserve">
          <source>Get all of the browser cookies.</source>
          <target state="translated">모든 브라우저 쿠키를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1f3bf71544170547306f07fd6d9e4be1b80dbce9" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">일치하는 DOM 요소 집합에서 각 DOM 요소의 이전 형제를 모두 제공하지만 제공된 요소는 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7cbe9d7ff598a4b6dddb3f861a89466b797b5779" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">일치하는 DOM 요소 세트에서 각 DOM 요소의 이전 형제를 모두 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6a1a9dba40d9c4360f21cbb955e0c97b34028a0c" translate="yes" xml:space="preserve">
          <source>Get console logs for commands</source>
          <target state="translated">명령에 대한 콘솔 로그 가져 오기</target>
        </trans-unit>
        <trans-unit id="8ac45b30b6141f1393ac1fd70bc7d33985a73084" translate="yes" xml:space="preserve">
          <source>Get cookies after logging in</source>
          <target state="translated">로그인 후 쿠키 받기</target>
        </trans-unit>
        <trans-unit id="c50f854379ad2f26c21e8143fa041867e87029df" translate="yes" xml:space="preserve">
          <source>Get document and do some work</source>
          <target state="translated">문서를 입수하고 일부 작업을 수행</target>
        </trans-unit>
        <trans-unit id="ee42a9f61ba8ac813c6e1d42283792046defabaa" translate="yes" xml:space="preserve">
          <source>Get function as property</source>
          <target state="translated">속성으로 기능 얻기</target>
        </trans-unit>
        <trans-unit id="8c624bfeaed069155b4110f7ae0ad280daa90b1e" translate="yes" xml:space="preserve">
          <source>Get in &lt;code&gt;.within()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 에 넣기</target>
        </trans-unit>
        <trans-unit id="118e802b850a89ccdfde85858dec32f3dcb9ac44" translate="yes" xml:space="preserve">
          <source>Get index</source>
          <target state="translated">색인 가져 오기</target>
        </trans-unit>
        <trans-unit id="38be7ea66340f5486705b3a39a0da2c3926d86e1" translate="yes" xml:space="preserve">
          <source>Get inputs within a form and submit the form</source>
          <target state="translated">양식 내에서 입력을 받고 양식을 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="bd9422f2aa9f16ac3a1a32184cd458092472011e" translate="yes" xml:space="preserve">
          <source>Get li&amp;rsquo;s within parent</source>
          <target state="translated">부모님 내에서 li를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="cbcc8c52c4c250f457df77714f71518914bc7253" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">selector 또는 &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;alias로&lt;/a&gt; 하나 이상의 DOM 요소를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="71050fa99e5dc614f5458e2c868a13aff223e89e" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">선택기 또는 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html&quot;&gt;별칭으로&lt;/a&gt; 하나 이상의 DOM 요소를 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="3e1004041e1a059c6fb1665ffe39fbecfd81bb63" translate="yes" xml:space="preserve">
          <source>Get properties from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">&lt;code&gt;onAfterScreenshot&lt;/code&gt; 콜백 에서 속성 가져 오기</target>
        </trans-unit>
        <trans-unit id="5de4a2efd44753d384344f594f0e02076ab06b29" translate="yes" xml:space="preserve">
          <source>Get property</source>
          <target state="translated">재산을 얻으십시오</target>
        </trans-unit>
        <trans-unit id="5a778da1ceb2bf7380d32bfb39c3fa08f6b7ebac" translate="yes" xml:space="preserve">
          <source>Get root element</source>
          <target state="translated">루트 요소 가져 오기</target>
        </trans-unit>
        <trans-unit id="4424013cfe8722d25920e58f61b21884fab59ce0" translate="yes" xml:space="preserve">
          <source>Get screenshot info from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">&lt;code&gt;onAfterScreenshot&lt;/code&gt; 콜백 에서 스크린 샷 정보 얻기</target>
        </trans-unit>
        <trans-unit id="3f259d00f4bc27a0f4a3394ffade7e812bbfbf47" translate="yes" xml:space="preserve">
          <source>Get sibling DOM elements.</source>
          <target state="translated">형제 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a5c8bf1a13b7c98b0440c65e229418e8af1765c7" translate="yes" xml:space="preserve">
          <source>Get siblings of element with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">클래스가 &lt;code&gt;active&lt;/code&gt; 요소의 형제를 가져옵니다</target>
        </trans-unit>
        <trans-unit id="90e40d504340834d9e79a4d800e45283591c5927" translate="yes" xml:space="preserve">
          <source>Get started</source>
          <target state="translated">시작하다</target>
        </trans-unit>
        <trans-unit id="abadd86dc407b8b817bae6800708bbc15c13c777" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;document.title&lt;/code&gt; property of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지 의 &lt;code&gt;document.title&lt;/code&gt; 속성을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5f19f247800adb8bb9059ef2de19873ef2a100c7" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;length&lt;/code&gt; property of a DOM element</source>
          <target state="translated">DOM 요소 의 &lt;code&gt;length&lt;/code&gt; 속성을 가져 옵니다</target>
        </trans-unit>
        <trans-unit id="cb63d757633ac03e332d40152b359ce165349574" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;user&lt;/code&gt; object of the response&amp;rsquo;s &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">응답 &lt;code&gt;body&lt;/code&gt; 의 &lt;code&gt;user&lt;/code&gt; 개체 가져 오기</target>
        </trans-unit>
        <trans-unit id="da81c8910d0ff34f3f2b6bdfafe18d4b531eb4a6" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window.document&lt;/code&gt; of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지 의 &lt;code&gt;window.document&lt;/code&gt; 를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="60d973f4293d5ba6c6d9669aadf27ab51323a3ff" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지 의 &lt;code&gt;window&lt;/code&gt; 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="72157e5566acdc33186045e8ef45538711fdef56" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the content.</source>
          <target state="translated">컨텐츠가 포함 된 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="00ff576aeb22bef88d930d53413e5e1b6376ee0f" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the text. DOM elements can contain &lt;em&gt;more&lt;/em&gt; than the desired text and still match. Additionally, Cypress &lt;a href=&quot;#Notes&quot;&gt;prefers some DOM elements&lt;/a&gt; over the deepest element found.</source>
          <target state="translated">텍스트가 포함 된 DOM 요소를 가져옵니다. DOM 요소를 포함 할 수 있습니다 &lt;em&gt;더&lt;/em&gt; 원하는 텍스트보다 여전히 일치합니다. 또한 Cypress &lt;a href=&quot;#Notes&quot;&gt;는&lt;/a&gt; 가장 깊은 요소 보다 일부 DOM 요소 를 선호합니다 .</target>
        </trans-unit>
        <trans-unit id="54436390ff23b5e34750cfbad8326fd2d5bd7fbe" translate="yes" xml:space="preserve">
          <source>Get the DOM element that is currently focused.</source>
          <target state="translated">현재 초점이 맞춰진 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9c2e34ba559a12ba698f82daaa9b18469e9b89ce" translate="yes" xml:space="preserve">
          <source>Get the DOM elements that match a specific selector.</source>
          <target state="translated">특정 선택기와 일치하는 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5bbecf5096769375f60c7309fa55c045c2ee7d96" translate="yes" xml:space="preserve">
          <source>Get the URL</source>
          <target state="translated">URL 받기</target>
        </trans-unit>
        <trans-unit id="9f04b463709b531f2d2db4718e9e438c0459b50b" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;submitBtn&amp;rsquo; element</source>
          <target state="translated">별명으로 지정된 'submitBtn'요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7fc72a751216ef55861780a2f6f13fad91179f9f" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;todos&amp;rsquo; elements</source>
          <target state="translated">별명 'todos'요소 가져 오기</target>
        </trans-unit>
        <trans-unit id="3cee94b3642e8bd68b14a141a897a02d85ae366d" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;users&amp;rsquo; fixture</source>
          <target state="translated">앨리어싱 된 '사용자'픽스쳐 가져 오기</target>
        </trans-unit>
        <trans-unit id="4f02da3142df47a50ddc16d28a6d9a538e83b4c9" translate="yes" xml:space="preserve">
          <source>Get the children of each DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 요소 집합 내에서 각 DOM 요소의 자식을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="da562ea984a5a6ff2ed1f866d781219feedbfc48" translate="yes" xml:space="preserve">
          <source>Get the children of the &lt;code&gt;.secondary-nav&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.secondary-nav&lt;/code&gt; 의 자녀를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="6c7884f05dabc7ceaed23a05226a9da2830cd335" translate="yes" xml:space="preserve">
          <source>Get the children with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">수업이 &lt;code&gt;active&lt;/code&gt; 어린이들을 키우십시오</target>
        </trans-unit>
        <trans-unit id="1ad9349edc6a2083cef2ef42849f9d125e7f9206" translate="yes" xml:space="preserve">
          <source>Get the current URL hash of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지의 현재 URL 해시를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="905fa0469d43bcf9e018d417724b3101b0d60f46" translate="yes" xml:space="preserve">
          <source>Get the current URL of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지의 현재 URL을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="9d2e7923b125ca989315b8b6abd855b8c8cda526" translate="yes" xml:space="preserve">
          <source>Get the descendent DOM elements of a specific selector.</source>
          <target state="translated">특정 선택기의 하위 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e138d85fdf46192ed868043f0071b2f7413a8b6e" translate="yes" xml:space="preserve">
          <source>Get the element that is focused</source>
          <target state="translated">집중된 요소를 얻는다</target>
        </trans-unit>
        <trans-unit id="eab5fe184d28c7c2ecf68762c00edbbc093d0afe" translate="yes" xml:space="preserve">
          <source>Get the entire stack trace of failed tests.</source>
          <target state="translated">실패한 테스트의 전체 스택 추적을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6bc616aea4241cff030e7c37715a8854632d06fe" translate="yes" xml:space="preserve">
          <source>Get the first DOM element that matches the selector (whether it be itself or one of its ancestors).</source>
          <target state="translated">선택자와 일치하는 첫 번째 DOM 요소를 가져옵니다 (자체 또는 조상 중 하나임).</target>
        </trans-unit>
        <trans-unit id="7e385d52b355d218cf98e4732ef5b18c57dfb75d" translate="yes" xml:space="preserve">
          <source>Get the first DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 요소 세트 내에서 첫 번째 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d5bd99c0258c4b20b204b1c45f46519ce91dd446" translate="yes" xml:space="preserve">
          <source>Get the first list item in a list</source>
          <target state="translated">목록에서 첫 번째 목록 항목 가져 오기</target>
        </trans-unit>
        <trans-unit id="f34949909727615718ccda785bec545aabb8fc5b" translate="yes" xml:space="preserve">
          <source>Get the form element and search in its descendants for the content &amp;ldquo;submit the form!&amp;rdquo;</source>
          <target state="translated">양식 요소를 가져 와서 하위 항목에서 &quot;양식 제출&quot;컨텐츠를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="7392349d6f790052fca9b4d3b42d0f2f1fb25e29" translate="yes" xml:space="preserve">
          <source>Get the global &lt;code&gt;window.location&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">현재 활성화 된 페이지 의 전역 &lt;code&gt;window.location&lt;/code&gt; 객체를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="efe40729566f375b25917940219aff3660d5d5be" translate="yes" xml:space="preserve">
          <source>Get the immediately following sibling of each DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 요소 집합 내에서 각 DOM 요소의 바로 다음 형제를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2b1126846a91c4bd5ac0522f41161a995c4ea1ed" translate="yes" xml:space="preserve">
          <source>Get the immediately preceding sibling of each element in a set of the elements.</source>
          <target state="translated">요소 세트에서 각 요소의 직전 형제를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="29c3bb9f9b6534cc0e7895265cb8352947478fb2" translate="yes" xml:space="preserve">
          <source>Get the input element</source>
          <target state="translated">입력 요소 가져 오기</target>
        </trans-unit>
        <trans-unit id="0c145f6e975793aa3782c7f617231769287b7032" translate="yes" xml:space="preserve">
          <source>Get the input with the &lt;code&gt;.actions-email&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;.actions-email&lt;/code&gt; 클래스로 입력 받기</target>
        </trans-unit>
        <trans-unit id="7701d53ab8276424e3f88d88710d714aa135808f" translate="yes" xml:space="preserve">
          <source>Get the last DOM element within a set of DOM elements.</source>
          <target state="translated">DOM 요소 세트 내에서 마지막 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0a13d53ee9c92eb6cc5de912f365adc402854faf" translate="yes" xml:space="preserve">
          <source>Get the last list item in a list</source>
          <target state="translated">목록에서 마지막 목록 항목 가져 오기</target>
        </trans-unit>
        <trans-unit id="08a472ad16e7891f22a0739cedc8254734df3848" translate="yes" xml:space="preserve">
          <source>Get the parent DOM element of a set of DOM elements.</source>
          <target state="translated">DOM 요소 집합의 부모 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ee6f72f7615ce64ad8685303ddcaa1d2df52fa1b" translate="yes" xml:space="preserve">
          <source>Get the parent DOM elements of a set of DOM elements.</source>
          <target state="translated">DOM 요소 집합의 부모 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c5949833faa9184e9a9fc0d7e6b997563a690cea" translate="yes" xml:space="preserve">
          <source>Get the parent of the active &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">활동적인 &lt;code&gt;li&lt;/code&gt; 부모를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="06e6a8cf49fd5e73acb5c7047924312de6542f1e" translate="yes" xml:space="preserve">
          <source>Get the parent with class &lt;code&gt;sub-nav&lt;/code&gt; of all &lt;code&gt;li&lt;/code&gt; elements</source>
          <target state="translated">모든 &lt;code&gt;li&lt;/code&gt; 요소 의 클래스 &lt;code&gt;sub-nav&lt;/code&gt; 으로 부모를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2eaea41a35788b4aefba0a72473f89ab1734ecc3" translate="yes" xml:space="preserve">
          <source>Get the parents of the active li</source>
          <target state="translated">활동적인 리의 부모를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="4e0d45fd2feaf7dd645a68f04d27cf8f69111d10" translate="yes" xml:space="preserve">
          <source>Get the parents with class &lt;code&gt;main-nav&lt;/code&gt; of the active li</source>
          <target state="translated">액티브 리의 수업 &lt;code&gt;main-nav&lt;/code&gt; 을 가진 부모를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="7d3b39240396ab9d1dee1bcb8084eb07e95f7413" translate="yes" xml:space="preserve">
          <source>Get the root DOM element.</source>
          <target state="translated">루트 DOM 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b9008603caf292e2e0363feaaea7415ec8278e95" translate="yes" xml:space="preserve">
          <source>Get the root element</source>
          <target state="translated">루트 요소 가져 오기</target>
        </trans-unit>
        <trans-unit id="5d7ca8a40ecaeec2c9e9caed5dad6b68fd0bd9a3" translate="yes" xml:space="preserve">
          <source>Get the root element in a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; callback function</source>
          <target state="translated">&lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt; 콜백 함수 에서 루트 요소 가져 오기</target>
        </trans-unit>
        <trans-unit id="e69e38dd0064ed46a8c0e015e5e3d1bbb250dd54" translate="yes" xml:space="preserve">
          <source>Get the siblings of each &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">각 &lt;code&gt;li&lt;/code&gt; 형제를 얻으십시오</target>
        </trans-unit>
        <trans-unit id="7e035e3b37ff46d424f4ec844dfac619669f8201" translate="yes" xml:space="preserve">
          <source>Get translation data from a YAML file</source>
          <target state="translated">YAML 파일에서 번역 데이터 가져 오기</target>
        </trans-unit>
        <trans-unit id="5e90edca4ba776ac79604979eab00c32de2c3843" translate="yes" xml:space="preserve">
          <source>Gets the element &lt;code&gt;.mobile-nav&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.mobile-nav&lt;/code&gt; 요소를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="5c9beb9cf6f4471dd715843a254eca97861e4948" translate="yes" xml:space="preserve">
          <source>Getting dataUrl string</source>
          <target state="translated">dataUrl 문자열 얻기</target>
        </trans-unit>
        <trans-unit id="50cf7528f5dddc0bad9e28fd703617a5f39fd683" translate="yes" xml:space="preserve">
          <source>Getting this errors means you&amp;rsquo;ve tried to interact with a &amp;ldquo;dead&amp;rdquo; DOM element - meaning it&amp;rsquo;s been detached or completely removed from the DOM.</source>
          <target state="translated">이 오류가 발생하면 &quot;죽은&quot;DOM 요소와 상호 작용하려고 시도한 것입니다. 즉, DOM에서 분리되었거나 완전히 제거 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="6cac413cc1ca2ecd3e244ccdb1d759c2bacc9ff1" translate="yes" xml:space="preserve">
          <source>Git information</source>
          <target state="translated">힘내 정보</target>
        </trans-unit>
        <trans-unit id="61d9589bd9eca9f4c1edaef9fdf77cb98d356341" translate="yes" xml:space="preserve">
          <source>GitHub Enterprise is currently not supported. Please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;contact us&lt;/a&gt; if you are interested in Enterprise integration.</source>
          <target state="translated">GitHub Enterprise는 현재 지원되지 않습니다. 엔터프라이즈 통합에 관심이 있으시면 &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;연락 주시기&lt;/a&gt; 바랍니다 .</target>
        </trans-unit>
        <trans-unit id="aff159ec522fafdfb4fb97dbfb61a5f564258281" translate="yes" xml:space="preserve">
          <source>GitHub Integration</source>
          <target state="translated">GitHub 통합</target>
        </trans-unit>
        <trans-unit id="2dcf2739aea3970bd24b0f5ba2dddd7b33a5a8d2" translate="yes" xml:space="preserve">
          <source>GitHub Integration is dependent on your CI environment reliably providing commit SHA data (typically via an environment variable). This is not a problem for most users, but if you are facing GitHub integration issues with your CI setup, please make sure the git information is being sent properly by following &lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;these guidelines&lt;/a&gt;. If you are still facing issues after this, please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">GitHub 통합은 CI 환경에 의존하여 커밋 SHA 데이터를 안정적으로 제공합니다 (일반적으로 환경 변수를 통해). 이것은 대부분의 사용자에게는 문제가되지 않지만 CI 설정과 관련된 GitHub 통합 문제에 직면 한 경우 다음 &lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;지침&lt;/a&gt; 에 따라 자식 정보가 제대로 전송되고 있는지 확인하십시오 . 이 후에도 여전히 문제가 발생 &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;하면 Google에 문의&lt;/a&gt; 하시기 바랍니다 .</target>
        </trans-unit>
        <trans-unit id="f18456fa25c55a5768acea0dbfb95c47ebafef57" translate="yes" xml:space="preserve">
          <source>GitHub integration</source>
          <target state="translated">GitHub 통합</target>
        </trans-unit>
        <trans-unit id="dc63b0e0240e56a49f15e4f20c7da68a0e50ae57" translate="yes" xml:space="preserve">
          <source>GitHub status checks are optional, and can be disabled within a project&amp;rsquo;s GitHub integration settings:</source>
          <target state="translated">GitHub 상태 확인은 선택 사항이며 프로젝트의 GitHub 통합 설정에서 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="f079a831cab27bcda7d81cd9b48296d0c3dd92ee" translate="yes" xml:space="preserve">
          <source>Gitlab</source>
          <target state="translated">Gitlab</target>
        </trans-unit>
        <trans-unit id="de9840e2e0ad5f0b4ed3f4f8f935d99a273fdaf3" translate="yes" xml:space="preserve">
          <source>Given a button that we want to interact with:</source>
          <target state="translated">우리가 상호 작용하고 싶은 버튼이 있다면 :</target>
        </trans-unit>
        <trans-unit id="7d1b270b98ec03fdb9ae6f4853f43a1e81195b8e" translate="yes" xml:space="preserve">
          <source>Given a user visits &lt;code&gt;https://example.cypress.io&lt;/code&gt;</source>
          <target state="translated">사용자가 &lt;code&gt;https://example.cypress.io&lt;/code&gt; 를 방문하면</target>
        </trans-unit>
        <trans-unit id="8b7dbb30a0d9171e0b82a9e0850f90ae943376f5" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;operationName&lt;/code&gt; property is optional in GraphQL requests, we can &lt;code&gt;alias&lt;/code&gt; with or without this property.</source>
          <target state="translated">점을 감안 &lt;code&gt;operationName&lt;/code&gt; 의 속성이 GraphQL 요청에 선택 사항입니다, 우리가 할 수있는 &lt;code&gt;alias&lt;/code&gt; 또는이 속성없이.</target>
        </trans-unit>
        <trans-unit id="d29667835da90fa638612f425739d1585f3fd63c" translate="yes" xml:space="preserve">
          <source>Given the following URLs:</source>
          <target state="translated">다음과 같은 URL이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="29303fff62321f55c7d6f1c2952ab69b3c10d5ec" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, all 3 of these assertions are the same.</source>
          <target state="translated">원격 URL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; 이 주어지면이 세 가지 주장이 모두 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c9ce81ebe79a34ad916e0f10c82336b6c0417c7a" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, these assertions are the same.</source>
          <target state="translated">원격 URL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; 이 주어지면 이러한 어설 션은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">글로벌 바로 가기</target>
        </trans-unit>
        <trans-unit id="29153039833ad93fe8da4463c8dfd9ea642a76b6" translate="yes" xml:space="preserve">
          <source>Go back in browser&amp;rsquo;s history</source>
          <target state="translated">브라우저 기록으로 돌아 가기</target>
        </trans-unit>
        <trans-unit id="d4d04da928ea7d145395f5a605ed4ac82f31ff8c" translate="yes" xml:space="preserve">
          <source>Go forward in browser&amp;rsquo;s history</source>
          <target state="translated">브라우저 역사에서 앞으로 나아가십시오</target>
        </trans-unit>
        <trans-unit id="5e0cd50da0482af647bdab8539432be67bc288d9" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to associate with an OSS plan. If you have no organizations, you can create one by clicking the &lt;strong&gt;+ Add Organization&lt;/strong&gt; button.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;조직 페이지&lt;/a&gt; 로 이동하여 OSS 계획과 연관시킬 조직을 선택하십시오. 조직이없는 경우 &lt;strong&gt;+ 조직 추가&lt;/strong&gt; 버튼 을 클릭하여 &lt;strong&gt;조직을&lt;/strong&gt; 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0422a88129b73584266fdba6436ecad310c2c2b5" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to invite a user to.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;조직 페이지&lt;/a&gt; 로 이동하여 사용자를 초대 할 조직을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="50fe2f9896b5cfa3174a0747e961599f55e9a6d1" translate="yes" xml:space="preserve">
          <source>Go to &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 이동 -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef97070b66184694477c4c1d1f7e3775a6a88973" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;Billing &amp;amp; Usage&lt;/strong&gt; page, and then click on the &lt;strong&gt;Apply for an open source plan&lt;/strong&gt; link at the bottom of the page.</source>
          <target state="translated">&lt;strong&gt;청구 및 사용&lt;/strong&gt; 페이지로 이동 한 다음 페이지 하단의 &lt;strong&gt;오픈 소스 계획 신청&lt;/strong&gt; 링크를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="d90837c2ffa1e3a74c04ba28a54937ca132e194b" translate="yes" xml:space="preserve">
          <source>Go to the Dashboard &lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;Organizations page&lt;/a&gt;.</source>
          <target state="translated">대시 보드 &lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;조직 페이지로&lt;/a&gt; 이동 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0c5f3a254f4ca672d762eb0b946cf4ec41e8939" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; page.</source>
          <target state="translated">프로젝트의 &lt;strong&gt;설정&lt;/strong&gt; 페이지로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="e6c228a4c86735512780e50842464125783195e4" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s settings page.</source>
          <target state="translated">프로젝트 설정 페이지로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="0c7d714e91cb5dec0b697e745aac61ae49ffc7fc" translate="yes" xml:space="preserve">
          <source>Go to your organization&amp;rsquo;s projects page.</source>
          <target state="translated">조직의 프로젝트 페이지로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="db905633801ba81831ca6ef490064a11a12cbc63" translate="yes" xml:space="preserve">
          <source>Google or SSO (if configured) login is now supported in the Test Runner. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;#3519&lt;/a&gt;.</source>
          <target state="translated">이제 테스트 러너에서 Google 또는 SSO (구성된 경우) 로그인이 지원됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;# 3519&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9016bddfd305a0134827b3dfd7076f8f1d0ee667" translate="yes" xml:space="preserve">
          <source>Grab only the &lt;code&gt;pathname&lt;/code&gt; and add an assertion.</source>
          <target state="translated">&lt;code&gt;pathname&lt;/code&gt; 만 잡고 어설 션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="606c2c5478a69e14a2c28edf015d90cb8b64f0bd" translate="yes" xml:space="preserve">
          <source>Grab the URL and&amp;hellip;</source>
          <target state="translated">URL을 잡고&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cb2a7509d3d8ad91fde462b610d43ce1604d70ca" translate="yes" xml:space="preserve">
          <source>Grab the URL.</source>
          <target state="translated">URL을 잡아라.</target>
        </trans-unit>
        <trans-unit id="b8141f065645b4d27c77c60bcbb662968d8aab1f" translate="yes" xml:space="preserve">
          <source>Grab the browser URL, ensure it includes &lt;code&gt;/posts/my-first-post&lt;/code&gt;.</source>
          <target state="translated">브라우저 URL을 잡고 &lt;code&gt;/posts/my-first-post&lt;/code&gt; 가 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="754846ed949aeb4a40716255893a342d2ab41d08" translate="yes" xml:space="preserve">
          <source>Grammar: &amp;lsquo;Login -&amp;gt; Log in&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;#146&lt;/a&gt;.</source>
          <target state="translated">문법 : '로그인-&amp;gt; 로그인'. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;# 146&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="22596aa55c61ecc9fa4d622e8d270ad994166133" translate="yes" xml:space="preserve">
          <source>Great for the &lt;em&gt;critical paths&lt;/em&gt; of your application</source>
          <target state="translated">응용 프로그램 의 &lt;em&gt;중요한 경로&lt;/em&gt; 에 적합</target>
        </trans-unit>
        <trans-unit id="1dea506717711a3a808d4dd849a7387ef002c478" translate="yes" xml:space="preserve">
          <source>Great for traditional server-side HTML rendering</source>
          <target state="translated">전통적인 서버 측 HTML 렌더링에 적합</target>
        </trans-unit>
        <trans-unit id="f200b907fe9cbc43dee52eef2e65b52b35ab61ee" translate="yes" xml:space="preserve">
          <source>Great for values that need to be checked into source control and remain the same on all machines.</source>
          <target state="translated">소스 제어로 체크인해야하고 모든 머신에서 동일하게 유지되어야하는 값에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="b7f5c9d43c59a0710631cc2af91b18239e45dd00" translate="yes" xml:space="preserve">
          <source>Great! Everything should still be green.</source>
          <target state="translated">큰! 모든 것이 여전히 녹색이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8f99cc4f5dade89618cb8cd599b9d39c2074f03a" translate="yes" xml:space="preserve">
          <source>Group name has already been used for this run</source>
          <target state="translated">이 실행에 이미 그룹 이름이 사용되었습니다</target>
        </trans-unit>
        <trans-unit id="37af3ea62a389951a11e57ad9b9fd4d8a8f3d47b" translate="yes" xml:space="preserve">
          <source>Group recorded tests together under a single run</source>
          <target state="translated">한 번의 실행으로 기록 된 테스트 그룹화</target>
        </trans-unit>
        <trans-unit id="ea0e785ee6d24de70f0616d8f0b45dc98bd8b654" translate="yes" xml:space="preserve">
          <source>Grouping by browser</source>
          <target state="translated">브라우저별로 그룹화</target>
        </trans-unit>
        <trans-unit id="917da4b40c1fe1d2de4a4badba93ba4952ec5161" translate="yes" xml:space="preserve">
          <source>Grouping by spec context</source>
          <target state="translated">사양 컨텍스트별로 그룹화</target>
        </trans-unit>
        <trans-unit id="e969a6e3de6de600fa464cfb10c71fcede42a6db" translate="yes" xml:space="preserve">
          <source>Grouping test runs</source>
          <target state="translated">그룹화 테스트 실행</target>
        </trans-unit>
        <trans-unit id="7e7d209f0faef0e503b1528f689b098d74c74aba" translate="yes" xml:space="preserve">
          <source>Grouping to label parallelization</source>
          <target state="translated">라벨 병렬화를위한 그룹화</target>
        </trans-unit>
        <trans-unit id="49f029bc01a7a39f9897aca0208942c0213feec8" translate="yes" xml:space="preserve">
          <source>Guaranteed to work in production</source>
          <target state="translated">생산 작업 보장</target>
        </trans-unit>
        <trans-unit id="7c7b20ed012ae265689f678882bfc339be15feed" translate="yes" xml:space="preserve">
          <source>Guide: Chains of Commands</source>
          <target state="translated">안내서 : 명령의 사슬</target>
        </trans-unit>
        <trans-unit id="90755a57130e1338eaaa1d890a9f746fc8101bf6" translate="yes" xml:space="preserve">
          <source>Guide: Introduction to Cypress</source>
          <target state="translated">가이드 : Cypress 소개</target>
        </trans-unit>
        <trans-unit id="ac2601113d60be5641759535a0cbe1066da08e7a" translate="yes" xml:space="preserve">
          <source>Guide: Network Requests</source>
          <target state="translated">가이드 : 네트워크 요청</target>
        </trans-unit>
        <trans-unit id="0a3e35f4c515206f708c2e4ee7169a8fef85c24b" translate="yes" xml:space="preserve">
          <source>Guide: Stubs, Spies and Clocks</source>
          <target state="translated">가이드 : 스터브, 스파이 및 시계</target>
        </trans-unit>
        <trans-unit id="b03b1f909af009439dbbe4f95b24b552b8a24508" translate="yes" xml:space="preserve">
          <source>Guide: Using Closures to compare values</source>
          <target state="translated">가이드 : 클로저를 사용하여 값 비교</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="eb5225848c1dc213f7e015ed498301ce638e7534" translate="yes" xml:space="preserve">
          <source>Guides: Aliases</source>
          <target state="translated">안내서 : 별칭</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="8e47c716e7195739d3b802b578903db7a84e2281" translate="yes" xml:space="preserve">
          <source>HTML fixtures will be prettified and saved back over the original.</source>
          <target state="translated">HTML 조명기는 미리 확인되고 원본 위에 다시 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="5d7f586a796b0739316cb35088d091ccdea24ffc" translate="yes" xml:space="preserve">
          <source>HTML form submissions using form option</source>
          <target state="translated">양식 옵션을 사용한 HTML 양식 제출</target>
        </trans-unit>
        <trans-unit id="19d29c8d4abf2f9577d1b135f72cb313e463241e" translate="yes" xml:space="preserve">
          <source>Hacking on Cypress</source>
          <target state="translated">사이프러스 해킹</target>
        </trans-unit>
        <trans-unit id="b409ffb8a9b2f5025b32b98593bb74bdec8e970f" translate="yes" xml:space="preserve">
          <source>Had the &lt;strong&gt;next page&lt;/strong&gt; not finished its loading phase, Cypress would have ended the test and presented an error.</source>
          <target state="translated">&lt;strong&gt;다음 페이지&lt;/strong&gt; 의 로딩 단계가 완료되지 않았다면 Cypress가 테스트를 종료하고 오류를 표시했을 것입니다.</target>
        </trans-unit>
        <trans-unit id="9e72d2f8e033b2bc19d2152ced751c57011c59d8" translate="yes" xml:space="preserve">
          <source>Had this request come back with a non &lt;code&gt;2xx&lt;/code&gt; status code such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;500&lt;/code&gt;, or if there was a JavaScript error in the application&amp;rsquo;s code, the test would have failed.</source>
          <target state="translated">이 요청에 &lt;code&gt;2xx&lt;/code&gt; 가 아닌 상태 코드 (예 : &lt;code&gt;404&lt;/code&gt; 또는 &lt;code&gt;500&lt;/code&gt; )가 있거나 응용 프로그램 코드에 JavaScript 오류가 있으면 테스트가 실패했을 것입니다.</target>
        </trans-unit>
        <trans-unit id="bdac163073067a04614b1dcd8e54852f9518d989" translate="yes" xml:space="preserve">
          <source>Handle &lt;code&gt;javascripts&lt;/code&gt; and preprocess them as we do regular specs. Fixes: &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;#15&lt;/a&gt;.</source>
          <target state="translated">핸들 &lt;code&gt;javascripts&lt;/code&gt; 및 전처리 그들을 우리는 일반 사양을한다. 수정 사항 : &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;# 15&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="188b7a520a7805d0985a255f70328bf200fa9b99" translate="yes" xml:space="preserve">
          <source>Handle clearing cookies better when they are created on a path other than &lt;code&gt;/&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;#104&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 이외의 경로에서 쿠키를 만들 때 쿠키 지우기를 더 잘 처리하십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;# 104&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1f7d00f3a4411061aa502256c35717937897eb59" translate="yes" xml:space="preserve">
          <source>Handle errors gracefully when Electron window has been closed before paint events happen. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;#705&lt;/a&gt;.</source>
          <target state="translated">페인트 이벤트가 발생하기 전에 Electron 창이 닫히면 오류를 정상적으로 처리하십시오. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;# 705&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="faae97f3e6bab5b1ec96249ffd6499b2f4a81a69" translate="yes" xml:space="preserve">
          <source>Handle relative path segments which walk up past the remote host &lt;code&gt;../../assets/app.css&lt;/code&gt;.</source>
          <target state="translated">원격 호스트 &lt;code&gt;../../assets/app.css&lt;/code&gt; 를 지나 걷는 상대 경로 세그먼트를 처리 하십시오 .</target>
        </trans-unit>
        <trans-unit id="87e156fe22633028b26828952fc5a73972531ea3" translate="yes" xml:space="preserve">
          <source>Happo</source>
          <target state="translated">Happo</target>
        </trans-unit>
        <trans-unit id="707f84ef4af310b25865654b98f5ddaeba05cb8e" translate="yes" xml:space="preserve">
          <source>Hardcoded versus using the configuration object</source>
          <target state="translated">하드 코딩 및 구성 개체 사용</target>
        </trans-unit>
        <trans-unit id="e8496604be16d3a97f0c5f4ededacbcf975112e5" translate="yes" xml:space="preserve">
          <source>Harder to test edge cases</source>
          <target state="translated">엣지 케이스 테스트가 더 어렵다</target>
        </trans-unit>
        <trans-unit id="314e78d2089598a32c2bc337ea0d65caa5b42212" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in simple projects and example apps, but isn&amp;rsquo;t recommended for real apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="translated">Cypress가 파일을 제공하도록하는 것은 간단한 프로젝트 및 예제 앱에는 유용하지만 실제 앱에는 권장되지 않습니다. 항상 자체 서버를 실행하고 Cypress에 URL을 제공하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8732b7ce8d13baf2c7160be90b669808fcc6d15e" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in smaller projects and example apps, but isn&amp;rsquo;t recommended for production apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="translated">Cypress가 파일을 제공하도록하는 것은 소규모 프로젝트 및 예제 앱에서 유용하지만 프로덕션 앱에는 권장되지 않습니다. 항상 자체 서버를 실행하고 Cypress에 URL을 제공하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f8fda48fd9a8d610b8e343195c17c7d81420c92b" translate="yes" xml:space="preserve">
          <source>Having a &lt;code&gt;baseUrl&lt;/code&gt; set gives you the added bonus of seeing an error if your server is not running during &lt;code&gt;cypress open&lt;/code&gt; at the specified &lt;code&gt;baseUrl&lt;/code&gt;.</source>
          <target state="translated">갖는 &lt;code&gt;baseUrl&lt;/code&gt; 설정은 당신에게 당신의 서버 동안 실행되지 않을 경우 오류를보고의 추가 보너스 제공 &lt;code&gt;cypress open&lt;/code&gt; 지정된에서 &lt;code&gt;baseUrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25521616f15e3679103b7d481184a8e78b0a89d4" translate="yes" xml:space="preserve">
          <source>Having custom commands repeat the same UI actions over and over again is slow, and unnecessary. Try to take as many shortcuts as possible.</source>
          <target state="translated">사용자 지정 명령을 사용하면 동일한 UI 동작을 반복해서 반복하는 것이 느리고 불필요합니다. 가능한 한 많은 단축키를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dc0ba226241679963d5991ee3e62354ceaed28a9" translate="yes" xml:space="preserve">
          <source>Having issues launching installed browsers? Read more about debugging browser launching</source>
          <target state="translated">설치된 브라우저를 시작하는 데 문제가 있습니까? 브라우저 실행 디버깅에 대해 자세히 알아보십시오</target>
        </trans-unit>
        <trans-unit id="055729b7e427eb94b8ee19ddc7e72e35d840070b" translate="yes" xml:space="preserve">
          <source>Having tests rely on the state of previous tests</source>
          <target state="translated">테스트가 이전 테스트 상태에 의존하게 함</target>
        </trans-unit>
        <trans-unit id="e8ffc4a6bcc9a7209b2d269839aeaa55eeffa533" translate="yes" xml:space="preserve">
          <source>Having trouble launching a browser? Check out the debugging guide</source>
          <target state="translated">브라우저를 시작하는 데 문제가 있습니까? 디버깅 가이드를 확인하십시오</target>
        </trans-unit>
        <trans-unit id="fa3c3dfec6a870589222a61959c35c8dcce4351b" translate="yes" xml:space="preserve">
          <source>Having trouble with browser detection? Check out the debugging guide</source>
          <target state="translated">브라우저 감지에 문제가 있습니까? 디버깅 가이드를 확인하십시오</target>
        </trans-unit>
        <trans-unit id="7f06f01af2e5d4df70fedd087311f9448c40f42f" translate="yes" xml:space="preserve">
          <source>Having ultimate control over your application, the network traffic, and native access to every host object unlocks a new way of testing that has never been possible before. Instead of being &amp;lsquo;locked out&amp;rsquo; of your application and not being able to easily control it - Cypress instead lets you alter any aspect of how your application works. Instead of slow and expensive tests, such as creating the state required for a given situation, you can create these states artificially like you would in an unit test. For instance you can:</source>
          <target state="translated">응용 프로그램, 네트워크 트래픽 및 모든 호스트 개체에 대한 기본 액세스를 궁극적으로 제어하면 이전에는 불가능했던 새로운 테스트 방법을 이용할 수 있습니다. Cypress를 사용하면 애플리케이션을 '잠그지'않고 쉽게 제어 할 수없는 대신 애플리케이션 작동 방식을 변경할 수 있습니다. 주어진 상황에 필요한 상태를 만드는 것과 같이 느리고 비용이 많이 드는 테스트 대신 단위 테스트에서와 같이 인위적으로 이러한 상태를 만들 수 있습니다. 예를 들어 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="44dbaf5f60ddfa801984c4aeeb5f01f8bc965fe1" translate="yes" xml:space="preserve">
          <source>Headless frame rate is now correctly set to &lt;code&gt;20&lt;/code&gt; instead of resetting back to &lt;code&gt;60&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;#303&lt;/a&gt;.</source>
          <target state="translated">헤드리스 프레임 속도가 이제 &lt;code&gt;60&lt;/code&gt; 으로 다시 설정하는 대신 &lt;code&gt;20&lt;/code&gt; 으로 올바르게 설정되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;# 303&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d1cfa2466365e73e8806958139027232b06905c" translate="yes" xml:space="preserve">
          <source>Headless running is now fixed in OSX. This was due to a bug with app signing + unzipping via the CLI.</source>
          <target state="translated">헤드리스 달리기가 이제 OSX에서 수정되었습니다. 이것은 CLI를 통한 앱 서명 + 압축 해제 버그로 인한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9ddaf1ef3557c9098d6fc1c783153f51a6a7072a" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be a non-negative, finite number).</source>
          <target state="translated">픽셀 단위의 뷰포트 높이 (음수가 아닌 유한 한 숫자 여야 함).</target>
        </trans-unit>
        <trans-unit id="a4d173f2281e941cb96e17520a3bb3be42fbc2cb" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be between 20 and 3000).</source>
          <target state="translated">뷰포트의 높이 (픽셀) (20에서 3000 사이 여야 함)</target>
        </trans-unit>
        <trans-unit id="c0a190d8148898dfb82aea5eff410e02e64fc0fc" translate="yes" xml:space="preserve">
          <source>Helpful to have one test around the &lt;em&gt;happy path&lt;/em&gt; of a feature</source>
          <target state="translated">기능 의 &lt;em&gt;행복한 길&lt;/em&gt; 을 한 번 테스트하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="030e3fd531a3dd2a43798fa2da6a512028001bfc" translate="yes" xml:space="preserve">
          <source>Helps test your applications for accessibility issues using axe-core.</source>
          <target state="translated">액슬 코어를 사용하여 응용 프로그램의 접근성 문제를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63cb5f5226e20f0479eb88cadff241c34eefe06d" translate="yes" xml:space="preserve">
          <source>Here are args available for the currently supported browsers:</source>
          <target state="translated">현재 지원되는 브라우저에서 사용할 수있는 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="14c03d0f56dc3738e282de0c2fa6eb02044ccaf5" translate="yes" xml:space="preserve">
          <source>Here are even more action commands Cypress provides to interact with your app:</source>
          <target state="translated">Cypress가 앱과 상호 작용하기 위해 제공하는 동작 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="814aac263322eca84300fd7b981e83d37036b8a4" translate="yes" xml:space="preserve">
          <source>Here are options for the currently supported browsers:</source>
          <target state="translated">현재 지원되는 브라우저에 대한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8551a7bfd1ffde611a59e8b1641133ada87c9dc0" translate="yes" xml:space="preserve">
          <source>Here are preferences available for the currently supported browsers:</source>
          <target state="translated">현재 지원되는 브라우저에서 사용할 수있는 환경 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d2e29737b3b8e7a7adcbef663631a1191844188" translate="yes" xml:space="preserve">
          <source>Here are some example use cases:</source>
          <target state="translated">다음은 몇 가지 사용 사례입니다.</target>
        </trans-unit>
        <trans-unit id="d8ffd06a20dfcdd79365aaa53ee7b6a2c44534e0" translate="yes" xml:space="preserve">
          <source>Here are some examples you can do with these events:</source>
          <target state="translated">다음은 이러한 이벤트로 수행 할 수있는 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="b8b78a4f081fb766a8f336f837efb42783a2c1a0" translate="yes" xml:space="preserve">
          <source>Here are some further examples of using &lt;code&gt;.as()&lt;/code&gt; that illustrate the asynchronous behavior.</source>
          <target state="translated">다음은 비동기 동작을 나타내는 &lt;code&gt;.as()&lt;/code&gt; 사용에 대한 몇 가지 추가 예입니다 .</target>
        </trans-unit>
        <trans-unit id="c013c06c3d685978853ca3d8f7364a4a590ab667" translate="yes" xml:space="preserve">
          <source>Here are some potential workarounds:</source>
          <target state="translated">몇 가지 가능한 해결 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ea77d70b27f359afe69803d5da3d579905e6a1a" translate="yes" xml:space="preserve">
          <source>Here are the available download URLs:</source>
          <target state="translated">사용 가능한 다운로드 URL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d31b9a6d1d14349df38c3fea339e2256a8c9a238" translate="yes" xml:space="preserve">
          <source>Here are the available properties on &lt;code&gt;StaticResponse&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;StaticResponse&lt;/code&gt; 에서 사용 가능한 속성은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2cd666f2b9f17d73be1093e69a3dfeeef58b44cb" translate="yes" xml:space="preserve">
          <source>Here are two recipes using both webpack and Browserify to write your tests in TypeScript.</source>
          <target state="translated">다음은 Webpack과 Browserify를 사용하여 TypeScript로 테스트를 작성하는 두 가지 레시피입니다.</target>
        </trans-unit>
        <trans-unit id="2d7d5d86b4de31868e90f14a2b33271d3d299c09" translate="yes" xml:space="preserve">
          <source>Here is a list of common element assertions. Notice how we use these assertions (listed above) with &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. You may also want to read about how Cypress &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retries&lt;/a&gt; assertions.</source>
          <target state="translated">다음은 일반적인 요소 어설 션 목록입니다. &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 와 함께 이러한 어설 션을 사용하는 방법에 주목하십시오 . Cypress가 어설 션을 &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 하는 방법에 대해 읽을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ad1190353ae9da1d76a71d8104c8d1fe7f2dfdf" translate="yes" xml:space="preserve">
          <source>Here is a short test that demonstrates some flake.</source>
          <target state="translated">다음은 약간의 플레이크를 보여주는 간단한 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="afa416d61c529492dbc90976ea7a74d0b1fc9ab5" translate="yes" xml:space="preserve">
          <source>Here is an example of aliasing routes and then subsequently waiting on them:</source>
          <target state="translated">다음은 라우트 앨리어싱의 예입니다.</target>
        </trans-unit>
        <trans-unit id="51dad279a09b747c179aba04441ea32fb4addc73" translate="yes" xml:space="preserve">
          <source>Here is an example of programmatically running a spec file:</source>
          <target state="translated">다음은 프로그래밍 방식으로 사양 파일을 실행하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="e2e8a7cd2dfdde9b6c69b6c5f115176d1baac676" translate="yes" xml:space="preserve">
          <source>Here is how you can launch Cypress application directly without the npm CLI module. First, find where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">다음은 npm CLI 모듈없이 Cypress 응용 프로그램을 직접 시작하는 방법입니다. 먼저 &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 바이너리가 설치된 위치를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="d14258feb2429db988a8d7509b13beb919384d30" translate="yes" xml:space="preserve">
          <source>Here is our test to confirm that the error is thrown.</source>
          <target state="translated">다음은 오류가 발생했는지 확인하기위한 테스트입니다.</target>
        </trans-unit>
        <trans-unit id="80c20760fb3e28f4c6281bac6300036a33118a9e" translate="yes" xml:space="preserve">
          <source>Here is the problem: &lt;strong&gt;there is no guarantee that this code will run.&lt;/strong&gt;</source>
          <target state="translated">문제는 다음과 같습니다 &lt;strong&gt;.이 코드가 실행될 것이라는 보장은 없습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f44db513b84502f50769c879707f9e5d550385d" translate="yes" xml:space="preserve">
          <source>Here you will see a &lt;strong&gt;Record Keys&lt;/strong&gt; section</source>
          <target state="translated">여기에 &lt;strong&gt;레코드 키&lt;/strong&gt; 섹션이 있습니다</target>
        </trans-unit>
        <trans-unit id="c16fff170ddf0ae5c454992c749b68f2bd467165" translate="yes" xml:space="preserve">
          <source>Here you will see a section displaying &lt;strong&gt;Access to Runs&lt;/strong&gt;. Choose the appropriate access you&amp;rsquo;d like to assign for the project here.</source>
          <target state="translated">여기에 &lt;strong&gt;액세스에 대한 액세스를&lt;/strong&gt; 표시하는 섹션이 있습니다 . 여기에서 프로젝트에 할당 할 적절한 액세스 권한을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="32e1d7a8806aeac84259628e771eb1a469fc257f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s 2 ways we can fix this:</source>
          <target state="translated">이 문제를 해결할 수있는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="55ee5b29e3d5024bc2e87add2856935ae88d33b9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a great use case for a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 에 대한 훌륭한 사용 사례는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9c7425158c4e0010b706a7f38abe9fb6a8b9bedf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more robust example:</source>
          <target state="translated">보다 강력한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3651308ec64fa280dbb96d37699802233519856c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example alongside seeding your database:</source>
          <target state="translated">다음은 데이터베이스 시드와 함께 제공되는 예입니다.</target>
        </trans-unit>
        <trans-unit id="fbc40dbabb34c752bd31e2992062533604057d06" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a request and accessing its properties later.</source>
          <target state="translated">다음은 요청의 별칭을 지정하고 나중에 해당 속성에 액세스하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="898fe3f9aa85a77c3841827bf8d46925f884ed3f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a route and waiting on it to complete.</source>
          <target state="translated">다음은 경로 별명을 지정하고 완료되기를 기다리는 예입니다.</target>
        </trans-unit>
        <trans-unit id="02f1cc5d7e8c943c34681b0b497bc1b7998007ac" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="translated">다음은 &lt;code&gt;Cypress.env&lt;/code&gt; 를 사용 &lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;하여 플러그인에 동적으로 설정된&lt;/a&gt; 환경 변수에 액세스 하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="3e5126e5981530cde0c62bf77e07d8e123bca185" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="translated">다음 &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-5-Plugins&quot;&gt;은 플러그인에 동적으로 설정된&lt;/a&gt; 환경 변수에 액세스하기 위해 &lt;code&gt;Cypress.env&lt;/code&gt; 를 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f4a9a5a371b2806648657252f2716891d11fed99" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="translated">다음은 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 이 향후 체인 의 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;주제가&lt;/a&gt; 되도록 셀렉터를 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="3e4ee7188f92ca666a64300d94f9c2907fb465be" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="translated">다음은 선택기를 사용하여 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 이 향후 연결을위한 &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;주제&lt;/a&gt; 로 유지 되도록하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f8457e8d4353144ee6edc87554d4672919261fc2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using the &lt;code&gt;matchCase&lt;/code&gt; option to ignore case sensitivity.</source>
          <target state="translated">다음은 대소 문자 구분을 무시하기 위해 &lt;code&gt;matchCase&lt;/code&gt; 옵션을 사용하는 예 입니다.</target>
        </trans-unit>
        <trans-unit id="b055900551745b9e56dfba628f57c81d43ad590b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s another example.</source>
          <target state="translated">또 다른 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6260cef565ea487eb7d18e2f71bb7879a44efa2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what that looks like:</source>
          <target state="translated">그 모습은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8d61e0439e635ed2b26dc3edd9a23512001bc32" translate="yes" xml:space="preserve">
          <source>Highlighting $el&amp;rsquo;s on DOM restore now works again.</source>
          <target state="translated">DOM 복원에서 $ el을 강조 표시하면 이제 다시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="c3d2a77fef876d6fdceb5df31f51861be6fa380d" translate="yes" xml:space="preserve">
          <source>Hitbox is no longer covered up by element layers on DOM revert.</source>
          <target state="translated">Hitbox는 더 이상 DOM 되돌리기의 요소 레이어로 덮여 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a9edd6bc7d4fd9e35b4514d2f2f4982f3fc9d13f" translate="yes" xml:space="preserve">
          <source>Hitboxes are now displayed on the screen based on the actual coordinates where an &lt;code&gt;action command&lt;/code&gt; event took place.</source>
          <target state="translated">&lt;code&gt;action command&lt;/code&gt; 이벤트가 발생한 실제 좌표를 기준으로 Hitboxes가 화면에 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="98a9d3545c337cb4da39acf4ed80e7e6fcad2dec" translate="yes" xml:space="preserve">
          <source>Hmm, weird, why is Cypress only looking at the &lt;em&gt;first&lt;/em&gt; item? Let&amp;rsquo;s hover over the &amp;ldquo;GET .todo-list li&amp;rdquo; command to inspect what &lt;em&gt;that command found&lt;/em&gt;. Ohh, interesting - there was only one item at that moment.</source>
          <target state="translated">흠, 이상하다. 왜 Cypress가 &lt;em&gt;첫 번째&lt;/em&gt; 항목 만보고 있는가? &amp;ldquo;GET .todo-list li&amp;rdquo;명령 위로 마우스를 이동하여 &lt;em&gt;해당 명령이 찾은 것을&lt;/em&gt; 검사하십시오 . 흥미 롭습니다. 그 순간에 단 하나의 항목 만있었습니다.</target>
        </trans-unit>
        <trans-unit id="52b847f30470700f7ad74d57aea71bd170f96298" translate="yes" xml:space="preserve">
          <source>Hold down modifier key and type a word</source>
          <target state="translated">수정 자 키를 누른 상태에서 단어를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="9b553bb93a72e5a40a2a4d68c61783f9a8cc09c9" translate="yes" xml:space="preserve">
          <source>Holding modifier keys and clicking an arbitrary element.</source>
          <target state="translated">수정 자 키를 누른 상태에서 임의의 요소를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="f6c038aebd335df3d7a2cad9bfbde0df6072568d" translate="yes" xml:space="preserve">
          <source>Host header HTTPS protocol handling fixed.</source>
          <target state="translated">호스트 헤더 HTTPS 프로토콜 처리가 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2159f595c2cbfb912f099f3985daad85d59e037d" translate="yes" xml:space="preserve">
          <source>Hover over the second &amp;ldquo;FIND label&amp;rdquo; command - something is wrong here. It found the &lt;em&gt;first label&lt;/em&gt;, then kept requerying to find the text &amp;ldquo;todo B&amp;rdquo;, but the first item always remains &amp;ldquo;todo A&amp;rdquo;.</source>
          <target state="translated">두 번째 &quot;FIND label&quot;명령 위로 마우스를 가져갑니다. 여기에 문제가 있습니다. 그것은 발견 된 &lt;em&gt;첫 번째 레이블을&lt;/em&gt; 다음 텍스트 &quot;할 일 B&quot;를 찾기 위해 다시 쿼리를 유지하지만, 첫 번째 항목은 항상 &quot;할 일 A&quot;남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb0744435dfa3aa876ff9a4a933675ccbfca33e1" translate="yes" xml:space="preserve">
          <source>Hovering on Commands</source>
          <target state="translated">명령 가리 키기</target>
        </trans-unit>
        <trans-unit id="1eabf47d874bf62e5c6fcc8434c4d32a1d4d6b61" translate="yes" xml:space="preserve">
          <source>Hovering on commands which delay resolving their $el will now properly highlight again.</source>
          <target state="translated">$ el 해결을 지연시키는 명령을 가리키면 이제 다시 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="140059e62cf126a5e8eb67ead563a9f78d1c4949" translate="yes" xml:space="preserve">
          <source>How Cypress calculates visibility</source>
          <target state="translated">Cypress가 가시성을 계산하는 방법</target>
        </trans-unit>
        <trans-unit id="cff8f2b6ae80cde85106bd6af47fc8045914af87" translate="yes" xml:space="preserve">
          <source>How Cypress can record a video of the entire run</source>
          <target state="translated">Cypress가 전체 달리기의 비디오를 녹화하는 방법</target>
        </trans-unit>
        <trans-unit id="98f7e0f748deb1443c93f7bd3659f5a1a3d30245" translate="yes" xml:space="preserve">
          <source>How Cypress captures screenshots of test failures automatically</source>
          <target state="translated">Cypress가 테스트 실패의 스크린 샷을 자동으로 캡처하는 방법</target>
        </trans-unit>
        <trans-unit id="7b51268a03dd2542c0fb37b80bfa207ba156079d" translate="yes" xml:space="preserve">
          <source>How Cypress deals with animating elements</source>
          <target state="translated">Cypress가 애니메이션 요소를 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="73c01ab5564943d441ac44b574f4de674e11277e" translate="yes" xml:space="preserve">
          <source>How Cypress embraces the standard Developer Tools</source>
          <target state="translated">Cypress가 표준 개발자 도구를 수용하는 방법</target>
        </trans-unit>
        <trans-unit id="8fe045ca917a598758abb24d99aa57d13ddbf2ab" translate="yes" xml:space="preserve">
          <source>How Cypress enables you to stub out the back end with &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Cypress를 통해 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 로 백엔드를 스텁 할 수있는 방법</target>
        </trans-unit>
        <trans-unit id="28f4d1cbd51c15bde207780d3c358fc7db90eb47" translate="yes" xml:space="preserve">
          <source>How Cypress ensures elements are actionable</source>
          <target state="translated">Cypress가 요소를 실행 가능하게하는 방법</target>
        </trans-unit>
        <trans-unit id="1b7167d8679a0646d51f127bd5e031240090b368" translate="yes" xml:space="preserve">
          <source>How Cypress handles unit tests vs integration tests.</source>
          <target state="translated">Cypress가 단위 테스트와 통합 테스트를 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="c57acce719c2789c985542d885b453696c112f3e" translate="yes" xml:space="preserve">
          <source>How Cypress improves and extends the included libraries</source>
          <target state="translated">Cypress가 포함 된 라이브러리를 개선하고 확장하는 방법</target>
        </trans-unit>
        <trans-unit id="6b10396109b42dddf93ce216777e847e5695f44f" translate="yes" xml:space="preserve">
          <source>How Cypress manages subjects and chains of commands</source>
          <target state="translated">Cypress가 주제 및 일련의 명령을 관리하는 방법</target>
        </trans-unit>
        <trans-unit id="f180a802511f5b581b51f2e46acd1bd24af79a21" translate="yes" xml:space="preserve">
          <source>How Cypress queries the DOM</source>
          <target state="translated">Cypress가 DOM을 쿼리하는 방법</target>
        </trans-unit>
        <trans-unit id="981c35f2168978f94f48cf143fdfb9ff4a245dc9" translate="yes" xml:space="preserve">
          <source>How Cypress really looks, Promises wrapped up and hidden from us.</source>
          <target state="translated">Cypress가 실제로 어떻게 보이는지, 약속은 우리를 감싸서 숨겼습니다.</target>
        </trans-unit>
        <trans-unit id="e10734e8c9a0fc14fe97d7dbd378b93088722829" translate="yes" xml:space="preserve">
          <source>How Cypress retries commands and assertions</source>
          <target state="translated">Cypress가 명령 및 어설 션을 다시 시도하는 방법</target>
        </trans-unit>
        <trans-unit id="b142ad7f6b12640c3734dd748fc11f92fe06a187" translate="yes" xml:space="preserve">
          <source>How Cypress runs in the same event loop with your code, keeping debugging simple and understandable</source>
          <target state="translated">Cypress가 코드와 동일한 이벤트 루프에서 실행되는 방식으로 디버깅을 간단하고 이해하기 쉽게 유지</target>
        </trans-unit>
        <trans-unit id="d5369cf5312cd1c730e69e1fc331935705756e74" translate="yes" xml:space="preserve">
          <source>How Cypress visualizes network management in the Command Log</source>
          <target state="translated">Cypress가 명령 로그에서 네트워크 관리를 시각화하는 방법</target>
        </trans-unit>
        <trans-unit id="d0079e400a6f4000574481fcd130b5cd82f63366" translate="yes" xml:space="preserve">
          <source>How It Works:</source>
          <target state="translated">작동 방식 :</target>
        </trans-unit>
        <trans-unit id="b46ab0d4570fbb1a5ca62c3033583841a8f96810" translate="yes" xml:space="preserve">
          <source>How and when to use &lt;code&gt;debugger&lt;/code&gt; and the shorthand &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; 와 속기 &lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 명령 을 사용하는 방법과시기</target>
        </trans-unit>
        <trans-unit id="49881af9699516c6a6558ae5dd5eec081ab2d8bb" translate="yes" xml:space="preserve">
          <source>How do I create conditional control flow, using if/else? So that if an element does (or doesn&amp;rsquo;t) exist, I choose what to do?</source>
          <target state="translated">if / else를 사용하여 조건부 제어 흐름을 작성하는 방법 따라서 요소가 존재하지 않거나 존재하지 않으면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="372621e6b633f9d84b19ba805f9e2fbec1ae747c" translate="yes" xml:space="preserve">
          <source>How do I do something different whether an element does or doesn&amp;rsquo;t exist?</source>
          <target state="translated">요소가 존재하는지 여부에 관계없이 다른 작업을 어떻게 수행합니까?</target>
        </trans-unit>
        <trans-unit id="0a49f83912b71e85fae4e76c66882324a13f1211" translate="yes" xml:space="preserve">
          <source>How do I know which assertions change the subject and which keep it the same?</source>
          <target state="translated">어떤 주장이 주제를 바꾸고 어떤 주장을 동일하게 유지하는지 어떻게 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="00f9c3604f08898f1e08ed93bce13a0d1411a6c2" translate="yes" xml:space="preserve">
          <source>How its architecture differs from Selenium</source>
          <target state="translated">아키텍처와 셀레늄의 차이점</target>
        </trans-unit>
        <trans-unit id="132403fdba9d78b8045faf2e2c5cc508eb092a07" translate="yes" xml:space="preserve">
          <source>How load-balancing of tests works</source>
          <target state="translated">테스트로드 밸런싱 작동 방식</target>
        </trans-unit>
        <trans-unit id="bbf98f9c894056a391916093f06903fc49846d50" translate="yes" xml:space="preserve">
          <source>How timeouts are applied to commands</source>
          <target state="translated">시간 초과가 명령에 적용되는 방법</target>
        </trans-unit>
        <trans-unit id="da8fae9447fe19ebdeb8ae975828566266254e85" translate="yes" xml:space="preserve">
          <source>How to address some situations of flaky tests</source>
          <target state="translated">비정상적인 테스트의 상황을 해결하는 방법</target>
        </trans-unit>
        <trans-unit id="260a7f6e2a1ad10ec946c518fa4beb0f2d672e80" translate="yes" xml:space="preserve">
          <source>How to avoid using Cypress commands inside the interceptor</source>
          <target state="translated">인터셉터 내에서 Cypress 명령을 사용하지 않는 방법</target>
        </trans-unit>
        <trans-unit id="6e71c52eead19906a2492efc4bd5b92583210cdd" translate="yes" xml:space="preserve">
          <source>How to configure Cypress in various CI Providers</source>
          <target state="translated">다양한 CI 공급자에서 Cypress를 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="9a56bc7c5d7b1ecf09734a8224808953e3b05f11" translate="yes" xml:space="preserve">
          <source>How to configure Cypress to fit your app</source>
          <target state="translated">앱에 맞게 Cypress를 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="a0b378f73f0f4518bb983f109061a3ff22f297b2" translate="yes" xml:space="preserve">
          <source>How to control time for deterministically testing code that is time-dependent</source>
          <target state="translated">시간 종속적 인 코드를 결정적으로 테스트하기 위해 시간을 제어하는 ​​방법</target>
        </trans-unit>
        <trans-unit id="02b3fb7ffd5593e72dfb603e73bb9a57a96752e2" translate="yes" xml:space="preserve">
          <source>How to deal with async commands</source>
          <target state="translated">비동기 명령을 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="f66605d25a8bfd0d115bd6d1b42ccc4f86c7805d" translate="yes" xml:space="preserve">
          <source>How to ensure the application is in consistent state before capturing an image</source>
          <target state="translated">이미지를 캡처하기 전에 응용 프로그램이 일관된 상태를 유지하는 방법</target>
        </trans-unit>
        <trans-unit id="77bd6674b1750fe89d903d4f784bcdb5cf958b52" translate="yes" xml:space="preserve">
          <source>How to group test runs</source>
          <target state="translated">테스트 실행을 그룹화하는 방법</target>
        </trans-unit>
        <trans-unit id="dc6052655c56f0bae7ec0d677c90f4b9ce3e2160" translate="yes" xml:space="preserve">
          <source>How to group your tests.</source>
          <target state="translated">테스트를 그룹화하는 방법</target>
        </trans-unit>
        <trans-unit id="70c94122258de8649c8010375de8724b7add48ec" translate="yes" xml:space="preserve">
          <source>How to implement visual diffing yourself or using 3rd party service</source>
          <target state="translated">시각적 차이를 직접 구현하거나 타사 서비스를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="7d7acff91f253ba335e9f67889ba5612c75bc9a0" translate="yes" xml:space="preserve">
          <source>How to install Cypress via &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 을 통해 Cypress를 설치하는 방법</target>
        </trans-unit>
        <trans-unit id="ad67610bccbd4f212f29cc9823f64e01be5c5db9" translate="yes" xml:space="preserve">
          <source>How to install Cypress via direct download</source>
          <target state="translated">직접 다운로드를 통해 Cypress를 설치하는 방법</target>
        </trans-unit>
        <trans-unit id="533e17da057d6e632957f697a3cc32fdb0e3d64c" translate="yes" xml:space="preserve">
          <source>How to instrument your application code</source>
          <target state="translated">응용 프로그램 코드를 계측하는 방법</target>
        </trans-unit>
        <trans-unit id="d56068d31cf6be5e49f64d6297eef0d2c9a5c0fc" translate="yes" xml:space="preserve">
          <source>How to launch other browsers</source>
          <target state="translated">다른 브라우저를 시작하는 방법</target>
        </trans-unit>
        <trans-unit id="319e419a30937e110cd5ba93f243dacd330155de" translate="yes" xml:space="preserve">
          <source>How to manually capture your own screenshot</source>
          <target state="translated">자신의 스크린 샷을 수동으로 캡처하는 방법</target>
        </trans-unit>
        <trans-unit id="a12165bfb64939baa28efd2ae15c75035db16e20" translate="yes" xml:space="preserve">
          <source>How to organize your test and support files.</source>
          <target state="translated">테스트 및 지원 파일을 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="2180548f9b8e093d6ab6325745bf5a2b4b9e389a" translate="yes" xml:space="preserve">
          <source>How to overwrite interceptors</source>
          <target state="translated">인터셉터를 덮어 쓰는 방법</target>
        </trans-unit>
        <trans-unit id="214aead2e6bb7098443cbbceee1088718ba01f86" translate="yes" xml:space="preserve">
          <source>How to parallelize test runs</source>
          <target state="translated">테스트 실행을 병렬화하는 방법</target>
        </trans-unit>
        <trans-unit id="41c573870ffb28ced2e266b4948b9efd24a1969b" translate="yes" xml:space="preserve">
          <source>How to record tests to the Cypress Dashboard</source>
          <target state="translated">Cypress 대시 보드에 테스트를 기록하는 방법</target>
        </trans-unit>
        <trans-unit id="2e449514a73dc442141c813cdcd8a5da9ed1a7ed" translate="yes" xml:space="preserve">
          <source>How to record your tests to the Dashboard</source>
          <target state="translated">테스트를 대시 보드에 기록하는 방법</target>
        </trans-unit>
        <trans-unit id="1ab12406f23cc0752954752e43e98eaa8e51f38a" translate="yes" xml:space="preserve">
          <source>How to run Cypress from the command line</source>
          <target state="translated">명령 행에서 Cypress를 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="ba28329c678d85633b092a0e1760fc11414f7f6b" translate="yes" xml:space="preserve">
          <source>How to run Cypress tests in Continuous Integration</source>
          <target state="translated">연속 통합에서 Cypress 테스트를 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="52686d06a85bb4796e486179d006eb003335ea55" translate="yes" xml:space="preserve">
          <source>How to run commands</source>
          <target state="translated">명령을 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="15f76dee5fe4b6fb3ccb13b71d9ffb59de2c7579" translate="yes" xml:space="preserve">
          <source>How to run tests in parallel on CI</source>
          <target state="translated">CI에서 병렬로 테스트를 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="3702157431f18e379d0ee0eedb4513a9e9488381" translate="yes" xml:space="preserve">
          <source>How to save the coverage information collected during end-to-end and unit tests</source>
          <target state="translated">종단 간 및 단위 테스트 중에 수집 된 적용 범위 정보를 저장하는 방법</target>
        </trans-unit>
        <trans-unit id="a1e454e6bb2abae199bd697d732b7d4e29a52ac6" translate="yes" xml:space="preserve">
          <source>How to solve this:</source>
          <target state="translated">이 문제를 해결하는 방법 :</target>
        </trans-unit>
        <trans-unit id="a36e8c559ce303daa9e93c0b472f314af94760dd" translate="yes" xml:space="preserve">
          <source>How to specify which spec files to run</source>
          <target state="translated">실행할 스펙 파일을 지정하는 방법</target>
        </trans-unit>
        <trans-unit id="ac500decf432728061d52221cabcb835b49d2f52" translate="yes" xml:space="preserve">
          <source>How to start testing a new project in Cypress.</source>
          <target state="translated">Cypress에서 새 프로젝트 테스트를 시작하는 방법</target>
        </trans-unit>
        <trans-unit id="766c761536f469ed6b1c06015fa4eda589687e14" translate="yes" xml:space="preserve">
          <source>How to troubleshoot issues with Cypress itself</source>
          <target state="translated">Cypress 자체의 문제를 해결하는 방법</target>
        </trans-unit>
        <trans-unit id="99400be5514ca12cc3021d96a8b553856f2a4257" translate="yes" xml:space="preserve">
          <source>How to use Aliases for objects, elements and routes</source>
          <target state="translated">객체, 요소 및 경로에 별칭을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="54423de5a4a7aee9ab14f3d88c1c523c6c7a31c5" translate="yes" xml:space="preserve">
          <source>How to use Aliases to refer back to XHR requests and wait on them</source>
          <target state="translated">별명을 사용하여 XHR 요청을 다시 참조하고 기다리는 방법</target>
        </trans-unit>
        <trans-unit id="42e7d8607c5b0624835a1e06031c28f5d6b15ff4" translate="yes" xml:space="preserve">
          <source>How to use Fixtures to reuse XHR responses</source>
          <target state="translated">고정물을 사용하여 XHR 응답을 재사용하는 방법</target>
        </trans-unit>
        <trans-unit id="2897439c203386b13d5a87c7bec5f3007b9be90b" translate="yes" xml:space="preserve">
          <source>How to use spies for asserting that code was called without interfering with its execution</source>
          <target state="translated">스파이가 코드 실행을 방해하지 않고 호출되었다고 주장하는 방법</target>
        </trans-unit>
        <trans-unit id="a7049b5ec4b6c139dd416508c50b29993e7f16c1" translate="yes" xml:space="preserve">
          <source>How to use stubs for asserting that code was called but preventing it from executing</source>
          <target state="translated">스텁을 사용하여 코드가 호출되었다고 주장하지만 코드가 실행되지 않도록하는 방법</target>
        </trans-unit>
        <trans-unit id="3aa5b629cbffa563a339dd2d2dc71c6721c9ec3f" translate="yes" xml:space="preserve">
          <source>How to use the Selector Playground for targeting your page elements</source>
          <target state="translated">페이지 요소를 타겟팅하기 위해 선택기 놀이터를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="94d1dd7f0cc3137fbd7a7ae32f865d7c0cc198b3" translate="yes" xml:space="preserve">
          <source>How to use the code coverage reports to guide writing tests</source>
          <target state="translated">코드 커버리지 보고서를 사용하여 쓰기 테스트를 안내하는 방법</target>
        </trans-unit>
        <trans-unit id="60ce170130b69c84ea581cd6de78335987bef241" translate="yes" xml:space="preserve">
          <source>How to version and run Cypress via &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; 을 통해 Cypress의 버전을 지정하고 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="0888c50c0d8d24b5720ec4abaee88531f08b3281" translate="yes" xml:space="preserve">
          <source>How to write declarative tests that resist flake</source>
          <target state="translated">플레이크에 저항하는 선언적 테스트를 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="033b5a2e9eaf93b31bc883d97b83f6fd10b16e3d" translate="yes" xml:space="preserve">
          <source>How visual testing complements functional testing</source>
          <target state="translated">시각적 테스트가 기능 테스트를 보완하는 방법</target>
        </trans-unit>
        <trans-unit id="02f0a3edfc8f45214f63d9154a007e7cf395f82b" translate="yes" xml:space="preserve">
          <source>How will we get access to &lt;code&gt;text&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; 어떻게 접근 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="4605d5b8f0d728b0e3cee5dbb5634635d807da5a" translate="yes" xml:space="preserve">
          <source>How you can bypass these checks and force events</source>
          <target state="translated">이러한 검사를 무시하고 이벤트를 강제 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="151c3817bac809b932840aefb9d1e0a7f9b85b8e" translate="yes" xml:space="preserve">
          <source>How you choose to edit the configuration is up to you. You don&amp;rsquo;t have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted.</source>
          <target state="translated">구성 편집 방법은 귀하에게 달려 있습니다. 파일 시스템을 읽을 필요가 없습니다 . 원한다면 모든 파일을 &lt;code&gt;pluginsFile&lt;/code&gt; 내부의 메모리에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02502caf66d61fb2be12437276c4b60307546155" translate="yes" xml:space="preserve">
          <source>How you choose to organize multiple configurations and sets of environment variables is up to you. You don&amp;rsquo;t even have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted to.</source>
          <target state="translated">여러 구성 및 환경 변수 세트를 구성하는 방법은 전적으로 사용자에게 달려 있습니다. 파일 시스템을 읽을 필요조차 없습니다 . 원한다면 &lt;code&gt;pluginsFile&lt;/code&gt; 내부의 메모리에 모두 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd493ca6987aa63de9b538e19f69d051270f9fb9" translate="yes" xml:space="preserve">
          <source>How you choose to organize your configuration and environment variables is up to you.</source>
          <target state="translated">구성 및 환경 변수를 구성하는 방법은 사용자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="461e2656ef40aa6157b9664a2d21d9e574e08ed1" translate="yes" xml:space="preserve">
          <source>How you should rewrite those tests:</source>
          <target state="translated">테스트를 다시 작성하는 방법 :</target>
        </trans-unit>
        <trans-unit id="d20898a161ddbf96b9db433f2d38a63402c62cb1" translate="yes" xml:space="preserve">
          <source>However - there is likely still a balance here where &lt;strong&gt;both&lt;/strong&gt; strategies are valid (and you should likely do them).</source>
          <target state="translated">그러나 &lt;strong&gt;두&lt;/strong&gt; 전략이 &lt;strong&gt;모두&lt;/strong&gt; 유효 하고 균형을 이루어야 할 균형이 여전히 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="cececcb38a71e217c8c57055fb4e98ffd9e27176" translate="yes" xml:space="preserve">
          <source>However between tests, when a new test runs, the previous configuration is restored to a clean state. No configuration leaks between tests.</source>
          <target state="translated">그러나 테스트간에 새 테스트가 실행되면 이전 구성이 깨끗한 상태로 복원됩니다. 테스트간에 구성 누출이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c087602b2a65d508bc58fee8aea5154febb22693" translate="yes" xml:space="preserve">
          <source>However it &lt;strong&gt;is possible&lt;/strong&gt; to synchronize Cypress with another back end process - whether it is Selenium or Puppeteer to drive a 2nd open browser. We have actually seen this work together quite nicely!</source>
          <target state="translated">그러나 두 번째 열린 브라우저를 구동하는 것이 Selenium이든 Puppeteer이든 Cypress를 다른 백엔드 프로세스와 동기화 &lt;strong&gt;할 수 있습니다&lt;/strong&gt; . 우리는 실제로이 작업을 아주 잘 보았습니다!</target>
        </trans-unit>
        <trans-unit id="7a7354c68d1ef513a1d7a089414b2acca1f54421" translate="yes" xml:space="preserve">
          <source>However, Cypress additionally handles situations where a child descendent is clicked inside of a focusable parent, but actually isn&amp;rsquo;t visually inside the parent (per the CSS Object Model). In those cases if no focusable parent is found the window is given focus instead (which matches real browser behavior).</source>
          <target state="translated">그러나 Cypress는 포커스가있는 부모 내부에서 자식 하위 항목을 클릭하지만 실제로는 CSS 개체 모델에 따라 부모 내부에 시각적으로 표시되지 않는 상황을 처리합니다. 이 경우 포커스 가능한 부모를 찾을 수없는 경우 대신 실제 브라우저 동작과 일치하는 포커스가 창에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="f0ed85983e964dde15e6f765dec196a041a3843f" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re running this script locally you&amp;rsquo;ll have to do a bit more work to collect the backgrounded PID and then kill it after &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">그러나이 스크립트를 로컬로 실행하는 경우 백그라운드 PID를 수집 한 다음 &lt;code&gt;cypress run&lt;/code&gt; 후에 종료하려면 약간 더 많은 작업을 수행해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="3914ed8564f7fd77a505db78605705cf5c194a64" translate="yes" xml:space="preserve">
          <source>However, in most modern applications these days - when the &lt;code&gt;load&lt;/code&gt; event occurs, usually nothing has rendered on the screen. It is usually at this moment that your scripts begin to load dynamic content and begin to render asynchronously.</source>
          <target state="translated">그러나 오늘날 대부분의 최신 응용 프로그램에서 &lt;code&gt;load&lt;/code&gt; 이벤트가 발생하면 일반적으로 화면에 아무것도 렌더링되지 않습니다. 일반적으로이 시점에서 스크립트가 동적 내용을로드하고 비동기 적으로 렌더링하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="282b28b735370a1c4b9379de32a065f5c2895985" translate="yes" xml:space="preserve">
          <source>However, passing &lt;code&gt;{ force: true }&lt;/code&gt; to &lt;code&gt;.select()&lt;/code&gt; will not override the actionability checks for selecting a disabled &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; or an option within a disabled &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/107&quot;&gt;this issue&lt;/a&gt; for more detail.</source>
          <target state="translated">그러나 &lt;code&gt;{ force: true }&lt;/code&gt; 를 &lt;code&gt;.select()&lt;/code&gt; 에 전달해도 비활성화 된 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 또는 비활성화 된 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 내의 옵션 을 선택하기위한 실행 가능성 검사가 재정의되지 않습니다 . 자세한 내용은 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/107&quot;&gt;이 문제&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e068c156b2cb3f2a2e53be32d569f5fda08694fe" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, &lt;code&gt;.and()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">그러나 일부 체이서는 주제를 변경합니다. 아래 예제에서 &lt;code&gt;.and()&lt;/code&gt; 는 문자열 &lt;code&gt;sans-serif&lt;/code&gt; 를 산출하는데 , chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; 가 주제를 변경하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="2b1f8dc2a11c7c62c74c4284423b8a751303d2c0" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, the second &lt;code&gt;.should()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">그러나 일부 체이서는 주제를 변경합니다. 아래 예제에서 두 번째 &lt;code&gt;.should()&lt;/code&gt; 는 문자열 &lt;code&gt;sans-serif&lt;/code&gt; 를 생성합니다. 왜냐하면 chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; 가 주제를 변경하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="c552e3bdb8492fc795ec03270d9e2edd9a83a4ae" translate="yes" xml:space="preserve">
          <source>However, the truth is, Cypress is exposing a &lt;em&gt;security vulnerability&lt;/em&gt; in your application, and you &lt;em&gt;want&lt;/em&gt; it to fail in Cypress.</source>
          <target state="translated">그러나 실제로 Cypress가 애플리케이션에 &lt;em&gt;보안 취약점&lt;/em&gt; 을 노출하고 있으며 Cypress에서 실패하기 를 &lt;em&gt;원합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ece4690dc1b2e81429250810375309fb4c1c11b3" translate="yes" xml:space="preserve">
          <source>However, this is really the same question as asking to do conditional testing just wrapped up in a slightly different implementation detail.</source>
          <target state="translated">그러나 이것은 조건부 테스트를 약간 다른 구현 세부 사항으로 마무리하도록 요구하는 것과 실제로 같은 질문입니다.</target>
        </trans-unit>
        <trans-unit id="98a86db69b9f4f568d2e36b4b993880fd23e8567" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often more efficient to write a function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="translated">그러나이 패턴은 사용 및 남용 될 수 있습니다. 잊지 말자. Cypress 테스트 작성은 &lt;strong&gt;JavaScript&lt;/strong&gt; 이며 &lt;strong&gt;단일 사양 파일&lt;/strong&gt; 에만 해당 &lt;strong&gt;하는&lt;/strong&gt; 반복 가능한 동작을위한 함수를 작성하는 것이 더 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="8d9ad91ce02b94a8159554d3425d61b0345d6e1f" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is just &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often much easier just to write a simple function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="translated">그러나이 패턴을 사용하고 남용 할 수 있습니다. Cypress 테스트 작성은 &lt;strong&gt;JavaScript&lt;/strong&gt; 일 뿐이며 &lt;strong&gt;, 단일 사양 파일&lt;/strong&gt; 에만 적용 &lt;strong&gt;되는&lt;/strong&gt; 반복 가능한 동작에 대한 간단한 함수를 작성하는 것이 훨씬 쉬운 경우가 많습니다 .</target>
        </trans-unit>
        <trans-unit id="cfea422d4e353dbc7cc51c67487cf026e7b09f3c" translate="yes" xml:space="preserve">
          <source>However, you &lt;strong&gt;do not&lt;/strong&gt; need to use environment variables to point to the origin and domain under test. Use &lt;code&gt;baseUrl&lt;/code&gt; instead of environment variables.</source>
          <target state="translated">그러나 테스트 할 원본 및 도메인을 가리 키기 위해 환경 변수를 사용할 필요 &lt;strong&gt;는 없습니다&lt;/strong&gt; . 환경 변수 대신 &lt;code&gt;baseUrl&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5377a652000c5e4f2f6018179613a7ceec5d4e9e" translate="yes" xml:space="preserve">
          <source>However, you should &lt;strong&gt;never&lt;/strong&gt; use your UI or visit a 3rd party site when testing because:</source>
          <target state="translated">그러나 테스트 할 때 UI를 사용하거나 타사 사이트를 방문 해서는 &lt;strong&gt;안됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5d64a118b93be94aed704de801aa20887064339c" translate="yes" xml:space="preserve">
          <source>Href Shorthand</source>
          <target state="translated">Href 속기</target>
        </trans-unit>
        <trans-unit id="040c22753068d31072a21010509a9ec7b7bca81b" translate="yes" xml:space="preserve">
          <source>Human-readable display name for the browser.</source>
          <target state="translated">사람이 읽을 수있는 브라우저의 표시 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b3c199e83de5b1cdbb7e9d488cfe670ba8306ffa" translate="yes" xml:space="preserve">
          <source>I am trying to write dynamic tests that do something different based on the text on the page.</source>
          <target state="translated">페이지의 텍스트에 따라 다른 작업을 수행하는 동적 테스트를 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="a4ff058f4f8d43027ba07b7a2b8347f5eac0ac6b" translate="yes" xml:space="preserve">
          <source>I want to automatically find all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements and based on which ones I find, I want to check that each link works.</source>
          <target state="translated">모든 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 요소 를 자동으로 찾고 내가 찾은 요소를 기반으로 각 링크가 작동하는지 확인하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="1f632660ea9c7f61c79bdcc98d1bbcd62192d3b6" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m trying to test a chat application. Can I run more than one browser at a time with Cypress?</source>
          <target state="translated">채팅 응용 프로그램을 테스트하려고합니다. Cypress를 사용하여 한 번에 둘 이상의 브라우저를 실행할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="e373cdbb97766e004ffd13cfeb8d5ad0a3558402" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, but always expects an array-like structure as its subject.</source>
          <target state="translated">&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 과 동일 하지만 항상 배열과 같은 구조를 주제로 기대합니다.</target>
        </trans-unit>
        <trans-unit id="9d2c7063088793c055fe015d3841d0cc2df8e788" translate="yes" xml:space="preserve">
          <source>Identification</source>
          <target state="translated">Identification</target>
        </trans-unit>
        <trans-unit id="4073341c254aad93eaa68ffa307f829ae4cdba47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.hover()&lt;/code&gt; is used, an error will display and redirect you to this page.</source>
          <target state="translated">경우 &lt;code&gt;cy.hover()&lt;/code&gt; 사용되며, 오류가 표시하고 해당 페이지로 리디렉션됩니다.</target>
        </trans-unit>
        <trans-unit id="e7c07ae5597941ec98ed24852c7197dc22dc1c60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.intercept()&lt;/code&gt; provides a response object, or a fixture, or calls &lt;code&gt;req.reply()&lt;/code&gt; then the request will NOT go to the server, and instead will be mocked from the test.</source>
          <target state="translated">경우 &lt;code&gt;cy.intercept()&lt;/code&gt; 응답 객체, 또는 고정 또는 통화를 제공 &lt;code&gt;req.reply()&lt;/code&gt; 다음 요청이 서버로 이동되지 않습니다, 대신 시험에서 조롱한다.</target>
        </trans-unit>
        <trans-unit id="80ab8047683c551b55320e61086e9cc54a10edca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.reply()&lt;/code&gt; is not explicitly called inside of a route callback, requests will pass to the next route callback until none are left.</source>
          <target state="translated">경우 &lt;code&gt;req.reply()&lt;/code&gt; 명시 적으로 경로 콜백의 내부 호출되지 않습니다 아무 것도 남아 있지 때까지 요청은 다음 경로 콜백에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="e7f1d4be4f9f7630bd0da38ea3bd8628e0fb96a4" translate="yes" xml:space="preserve">
          <source>If Cypress cannot determine the host it will throw an error.</source>
          <target state="translated">Cypress에서 호스트를 확인할 수 없으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="108195455e83f85b78ae28041a8ca9ef29acc92e" translate="yes" xml:space="preserve">
          <source>If I had error handling, I could just try to find X and if X fails go find Y</source>
          <target state="translated">오류 처리가 발생하면 X를 찾으려고 시도하고 X가 실패하면 Y를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="b9dc667d39beee3b0041eaa0efa4df413c650f0c" translate="yes" xml:space="preserve">
          <source>If I should always use data attributes, then when should I use &lt;code&gt;cy.contains()&lt;/code&gt;?</source>
          <target state="translated">항상 데이터 속성을 사용해야하는 경우 언제 &lt;code&gt;cy.contains()&lt;/code&gt; 사용해야 합니까?</target>
        </trans-unit>
        <trans-unit id="b970ebbac48b6821d2a09c1467c1cf6efb6dece7" translate="yes" xml:space="preserve">
          <source>If X, then Y, else Z</source>
          <target state="translated">X이면 Y, 그렇지 않으면 Z</target>
        </trans-unit>
        <trans-unit id="7b119c466fcbd63e66770502c44eb530db83e46c" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;child&lt;/em&gt; of the element is covering it - that&amp;rsquo;s okay. In fact we&amp;rsquo;ll automatically issue the events we fire to that child.</source>
          <target state="translated">요소 의 &lt;em&gt;자식&lt;/em&gt; 이 그것을 덮고 있다면 괜찮습니다. 실제로 우리는 그 어린이에게 발생하는 이벤트를 자동으로 발행합니다.</target>
        </trans-unit>
        <trans-unit id="2bec4ecf6de25aec67c10ab97d2a2a2f9be96f78" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object&lt;/strong&gt; is passed, requests to the route will be fulfilled with a response using the values supplied in the &lt;code&gt;StaticResponse&lt;/code&gt;. A &lt;code&gt;StaticResponse&lt;/code&gt; can define the body of the response, as well as the headers, HTTP status code, and more. See &lt;a href=&quot;#With-a-StaticResponse-object&quot;&gt;Stubbing a response with a `StaticResponse` object&lt;/a&gt; for an example of how this is used.</source>
          <target state="translated">경우 &lt;strong&gt; &lt;code&gt;StaticResponse&lt;/code&gt; 의 객체가&lt;/strong&gt; 전달됩니다 경로에 대한 요청은에 제공된 값을 사용하여 응답으로 성취 될 것이다 &lt;code&gt;StaticResponse&lt;/code&gt; 을 . &lt;code&gt;StaticResponse&lt;/code&gt; 는 응답의 몸뿐만 아니라 헤더, HTTP 상태 코드 등을 정의 할 수 있습니다. 이것이 사용되는 방법의 예 &lt;a href=&quot;#With-a-StaticResponse-object&quot;&gt;는`StaticResponse` 객체로 응답 스터 빙을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="0616b70dba24f254be973c7ed75e89bd4c3a86dd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;function callback&lt;/strong&gt; is passed, it will be called whenever a request matching this route is received, with the first parameter being the request object. From inside the callback, you can modify the outgoing request, send a response, access the real response, and much more. See &lt;a href=&quot;#Intercepting-a-request&quot;&gt;Intercepting a request&lt;/a&gt; and &lt;a href=&quot;#Intercepting-a-response&quot;&gt;Intercepting a response&lt;/a&gt; for examples of dynamic interception.</source>
          <target state="translated">경우 &lt;strong&gt;함수 콜백&lt;/strong&gt; 전달이 경로와 일치하는 요청은 첫 번째 파라미터가 요구되는 물체와 함께 수신 될 때마다 호출된다. 콜백 내부에서 나가는 요청을 수정하고, 응답을 보내고, 실제 응답에 액세스하는 등의 작업을 수행 할 수 있습니다. 동적 차단의 예 &lt;a href=&quot;#Intercepting-a-request&quot;&gt;는 요청 &lt;/a&gt;&lt;a href=&quot;#Intercepting-a-response&quot;&gt;차단&lt;/a&gt; 및 응답 차단을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="3738a635c5ba991abf5ef63240778cc5a70259cd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed, requests to the route will be fulfilled with that string as the body. Passing &lt;code&gt;&quot;foo&quot;&lt;/code&gt; is equivalent to using a &lt;code&gt;StaticResponse&lt;/code&gt; object with &lt;code&gt;{ body: &quot;foo&quot; }&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;strong&gt;문자열이&lt;/strong&gt; 전달됩니다 경로에 대한 요청은 몸으로 해당 문자열로 성취 될 것이다. &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 를 전달 하는 것은 &lt;code&gt;{ body: &quot;foo&quot; }&lt;/code&gt; 와 함께 &lt;code&gt;StaticResponse&lt;/code&gt; 객체 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c3778295f0cff9ca75237cdd8fe3964feb4eece1" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before continuing with the request.</source>
          <target state="translated">라우트 콜백에서 Promise가 반환되면 요청을 계속하기 전에 대기합니다.</target>
        </trans-unit>
        <trans-unit id="afb2daad94f94302177f187ada89621da51cb213" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before sending the response to the browser.</source>
          <target state="translated">Promise가 라우트 콜백에서 반환되면 브라우저에 응답을 보내기 전에 대기합니다.</target>
        </trans-unit>
        <trans-unit id="154c454bda4162e086691c63fa24404ceb70d1f2" translate="yes" xml:space="preserve">
          <source>If a URL is passed to &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; containing percent-encoded characters, we now display a warning explaining that &lt;code&gt;cy.route()&lt;/code&gt; expects a decoded URL. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;#2372&lt;/a&gt;.</source>
          <target state="translated">퍼센트 인코딩 된 문자를 포함하는 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; URL이 전달되면 , 이제 &lt;code&gt;cy.route()&lt;/code&gt; 가 디코딩 된 URL을 기대 한다는 경고를 표시합니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;# 2372&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1753f8abfe2054727c73c297a51073fe562e58a0" translate="yes" xml:space="preserve">
          <source>If a page loads after a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; times out it will no longer cause an exception in the &lt;code&gt;onBeforeLoad&lt;/code&gt; handler.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 시간 초과 된 후 페이지가로드 되면 &lt;code&gt;onBeforeLoad&lt;/code&gt; 핸들러 에서 더 이상 예외가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d109a402f7aa1766081593fb085e44ea657a4ced" translate="yes" xml:space="preserve">
          <source>If a request doesn&amp;rsquo;t match any route then the behavior depends on the value of the &lt;code&gt;force404&lt;/code&gt; option on the &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">요청이 경로와 일치하지 않으면 동작은 &lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;force404&lt;/code&gt; 옵션 값에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="b0100c8e4ddc90a7aff71eada8600b58f1b7f3f4" translate="yes" xml:space="preserve">
          <source>If a site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or cannot be determined during &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, we now look at the content of the site and evaluate whether it looks like HTML. If it does look like HTML we no longer error and continue as if it the site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;text/html&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;#1727&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;#773&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">사이트의 경우 &lt;code&gt;content-type&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; 나 중에 결정할 수없는 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; , 우리는 지금 사이트의 내용을보고는 HTML처럼 보인다 여부를 평가합니다. HTML처럼 보이면 더 이상 오류가 발생하지 않고 사이트의 &lt;code&gt;content-type&lt;/code&gt; 이 &lt;code&gt;text/html&lt;/code&gt; 인 것처럼 계속 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;# 1727 &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;# 773 &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;# 3101&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="534d9f03898c74831b7e79a73bb8c268fe8940d1" translate="yes" xml:space="preserve">
          <source>If an &lt;strong&gt;object with no &lt;code&gt;StaticResponse&lt;/code&gt; keys&lt;/strong&gt; is passed, it will be sent as a JSON response body. For example, passing &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; is equivalent to passing &lt;code&gt;{ body: { foo: 'bar' } }&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;strong&gt;아니오 오브젝트 &lt;code&gt;StaticResponse&lt;/code&gt; 의 키를&lt;/strong&gt; 전달, 그것은 JSON 응답 본문으로 전송됩니다. 예를 들어, &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; 전달은 &lt;code&gt;{ body: { foo: 'bar' } }&lt;/code&gt; 전달하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1162ad9192a81bb19247dc40e2267035c1cb5b3f" translate="yes" xml:space="preserve">
          <source>If an application takes a while to start, it might &amp;ldquo;signal&amp;rdquo; its readiness by setting a property that Cypress can wait for.</source>
          <target state="translated">응용 프로그램을 시작하는 데 시간이 걸리면 Cypress가 기다릴 수있는 속성을 설정하여 준비 상태를 &quot;신호&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="003378de06f395a1df16b48dcbbd88dc955ebc3d" translate="yes" xml:space="preserve">
          <source>If an error occurs during &lt;code&gt;cypress verify&lt;/code&gt;, we now kill the verification process after 10 seconds and print the error message. This should prevent some situations where Cypress would hang during installation or verification and never exit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;#819&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress verify&lt;/code&gt; 동안 오류가 발생하면 10 초 후에 확인 프로세스가 종료되고 오류 메시지가 인쇄됩니다. 이렇게하면 설치 또는 확인 중에 Cypress가 중단되고 종료되지 않는 상황이 방지됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;# 819&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="87492befc664d37679d463959dddbe8a5122f9f1" translate="yes" xml:space="preserve">
          <source>If an uppercase and a lowercase version of the proxy settings are supplied (for example, &lt;code&gt;HTTP_PROXY&lt;/code&gt; and &lt;code&gt;http_proxy&lt;/code&gt; are both set), the lowercase variable will be preferred.</source>
          <target state="translated">프록시 설정의 대문자 및 소문자 버전이 제공되는 경우 (예 : &lt;code&gt;HTTP_PROXY&lt;/code&gt; 및 &lt;code&gt;http_proxy&lt;/code&gt; 가 모두 설정 됨) 소문자 변수가 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="b59523ab5ea3b305436d65b83bac76bf92dbb554" translate="yes" xml:space="preserve">
          <source>If any of an element&amp;rsquo;s parent&amp;rsquo;s overflow is &amp;lsquo;hidden&amp;rsquo;, we now calculate if the element is outside of the boundaries of that parent element and validate visibility assertions accordingly. This may cause some tests that were previously passing to now accurately fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;#410&lt;/a&gt;.</source>
          <target state="translated">요소의 부모 오버플로가 '숨겨 짐'인 경우 요소가 해당 부모 요소의 경계를 벗어난 지 여부를 계산하고 그에 따라 가시성 어설 션의 유효성을 검사합니다. 이로 인해 이전에 통과 한 일부 테스트가 이제 정확하게 실패 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;# 410&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3509bab7a88736566e6c11e7f82d6711b1b4bb77" translate="yes" xml:space="preserve">
          <source>If built-in assertions are not enough, you can easily write your own assertion function and pass it as a callback to the &lt;code&gt;.should()&lt;/code&gt; command. Cypress will automatically &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; the callback function until it passes or the command times out. See the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">내장 된 어설 션이 충분하지 않은 경우 자체 어설 션 함수를 쉽게 작성하여 &lt;code&gt;.should()&lt;/code&gt; 명령에 대한 콜백으로 전달할 수 있습니다. Cypress는 콜백 함수가 통과하거나 명령 시간이 초과 될 때까지 콜백 기능 을 자동으로 &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다. &lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4db028f339ba6881ac24e86ae72bf1514a2f9f7" translate="yes" xml:space="preserve">
          <source>If for some reason this new page errors Cypress will display the initial 500 error messages just like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어떤 이유로이 새 페이지 오류가 발생하면 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 cy.visit () 와 같이 초기 500 오류 메시지를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="8edd03621e98d5ed7e5b578879fc3050eab14a47" translate="yes" xml:space="preserve">
          <source>If going forward or back causes a full page refresh, Cypress will wait for the new page to load before moving on to new commands.</source>
          <target state="translated">앞으로 또는 뒤로 이동하면 전체 페이지가 새로 고쳐지면 Cypress는 새 명령이 실행되기 전에 새 페이지가로드 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="c61904f70fabc710476e07aa51b2f8c182efb85c" translate="yes" xml:space="preserve">
          <source>If isolated to the Electron browser. Run the same tests in both Electron and Chrome, then compare the screenshots/videos. Look for and isolate any differences in the Command Log.</source>
          <target state="translated">Electron 브라우저에 격리되어있는 경우. Electron과 Chrome에서 동일한 테스트를 실행 한 다음 스크린 샷 / 비디오를 비교하십시오. 명령 로그에서 차이점을 찾아 격리하십시오.</target>
        </trans-unit>
        <trans-unit id="019fa6ae9d87fdc48efc05c7f5b6b34bf50e30d9" translate="yes" xml:space="preserve">
          <source>If multiple screenshots are taken during a test that will result in the same filename, their file paths are now appended with a number, i.e. &lt;code&gt;test name (1).png&lt;/code&gt;. This prevents screenshot files with the same name from being overwritten. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;#1766&lt;/a&gt;.</source>
          <target state="translated">테스트 중에 여러 개의 스크린 샷을 찍어 파일 이름이 같으면 이제 파일 경로에 숫자 (예 : &lt;code&gt;test name (1).png&lt;/code&gt; )가 추가 됩니다. 이렇게하면 같은 이름의 스크린 샷 파일을 덮어 쓰지 못하게됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;# 1766&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="48f21d21b635b05f7218a084eb7b7474b0d00544" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, just like merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="translated">여러 작업 개체가 동일한 키를 사용하는 경우 중복 키가있는 여러 개체를 병합하면 첫 번째 항목을 덮어 쓰는 것처럼 나중에 등록하면 해당 특정 키를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="1a7feafa943f17ac46557e57457f1578d825c644" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, similar to how merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="translated">여러 작업 개체가 동일한 키를 사용하는 경우 중복 키가있는 여러 개체를 병합하면 첫 번째 키를 덮어 쓰는 것과 유사하게 나중에 등록 할 때 특정 키를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="9f386e0d8fe5e0a3f3e67dae8088114a0ce832f4" translate="yes" xml:space="preserve">
          <source>If my machine is Windows 64bit, I will click on the &amp;ldquo;Testing new win32 x64 &amp;hellip;&amp;rdquo; commit and run the command below.</source>
          <target state="translated">내 컴퓨터가 Windows 64 비트 인 경우&amp;ldquo;Testing new win32 x64&amp;hellip;&amp;rdquo;commit을 클릭하고 아래 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8911843b2af6a7d71759e08877aa807eaf58b2a8" translate="yes" xml:space="preserve">
          <source>If no method is defined Cypress will match &lt;code&gt;GET&lt;/code&gt; requests by default.</source>
          <target state="translated">메소드가 정의되어 있지 않으면 Cypress는 기본적으로 &lt;code&gt;GET&lt;/code&gt; 요청 과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="fb1514fb2bf2748c7d457fbc378637318c9ca3c1" translate="yes" xml:space="preserve">
          <source>If possible, we advise implementing &lt;a href=&quot;visual-testing&quot;&gt;visual testing&lt;/a&gt; in addition to Cypress functional tests to avoid CSS and visual regressions.</source>
          <target state="translated">가능하면 CSS 및 시각적 회귀를 피하기 위해 Cypress 기능 테스트 외에 &lt;a href=&quot;visual-testing&quot;&gt;시각적 테스트&lt;/a&gt; 를 구현하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5693a5394cd0c32d5fca2f5d0ca482c3825e92b4" translate="yes" xml:space="preserve">
          <source>If status checks are enabled within a project&amp;rsquo;s GitHub integration settings, the Cypress Dashboard will report Cypress test statuses to GitHub for related commits. &lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;Status checks&lt;/a&gt; help prevent merging a commit or pull-request into the rest of your codebase until all your Cypress tests have passed.</source>
          <target state="translated">프로젝트의 GitHub 통합 설정 내에서 상태 확인이 활성화 된 경우 Cypress 대시 보드는 Cypress 테스트 상태를 관련 커밋에 대해 GitHub에보고합니다. &lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;상태 점검&lt;/a&gt; 은 모든 Cypress 테스트가 통과 될 때까지 나머지 코드베이스에 커밋 또는 풀 요청을 병합하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="0470903e8ea33127f36709cbe3a4e684b3fa3a2d" translate="yes" xml:space="preserve">
          <source>If that&amp;rsquo;s the case, don&amp;rsquo;t worry - you can work around it with &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is special because it is &lt;strong&gt;NOT bound to CORS or same-origin policy&lt;/strong&gt;.</source>
          <target state="translated">이 경우 걱정하지 마십시오 . &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 로 해결할 수 있습니다 . &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 는 &lt;strong&gt;CORS 또는 동일 출처 정책에 바인딩되어&lt;/strong&gt; 있지 않으므로 특별합니다 .</target>
        </trans-unit>
        <trans-unit id="f00015b725815345d742ff4cfd425cdaaec401c8" translate="yes" xml:space="preserve">
          <source>If the DOM element provided to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; is already in focus, Cypress no longer attempts to click on the DOM element. This allows you to call &lt;code&gt;.focus()&lt;/code&gt; on elements that are focusable, but not necessarily clickable and type into them using &lt;code&gt;.type()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;#3001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;#4420&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 제공된 DOM 요소에 이미 초점이있는 경우 Cypress는 더 이상 DOM 요소를 클릭하려고 시도하지 않습니다. 이를 통해 초점 을 맞출 수 있지만 반드시 클릭 할 필요는없는 요소에 대해 &lt;code&gt;.focus()&lt;/code&gt; 를 호출 하고 &lt;code&gt;.type()&lt;/code&gt; 사용하여 입력 할 수 있습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;# 3001&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;# 4420을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="05a60dc94de55f0f21f7b65bb0c1793834f5c2c8" translate="yes" xml:space="preserve">
          <source>If the HTML contains a &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-breaking_space&quot;&gt;non-breaking space&lt;/a&gt; entity &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; and the test uses the &lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery :contains&lt;/a&gt; selector, then the test needs to use the Unicode value &lt;code&gt;\u00a0&lt;/code&gt; instead of &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;.</source>
          <target state="translated">HTML에 구분 &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-breaking_space&quot;&gt;되지 않는 공백&lt;/a&gt; 엔티티 가 포함 된 경우 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; 테스트에서 &lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery : contains&lt;/a&gt; 선택기를 사용하면 테스트 에서 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; 대신 유니 코드 값 &lt;code&gt;\u00a0&lt;/code&gt; 을 사용해야합니다 . .</target>
        </trans-unit>
        <trans-unit id="a9442152579bbaca4a152c5f96f083415fe21dd3" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;no&lt;/strong&gt; because the text could be changed - then use &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; with data attributes. Changing the text to &lt;code&gt;Save&lt;/code&gt; would then not cause a test failure.</source>
          <target state="translated">텍스트를 변경할 수 있기 때문에 대답이 ' &lt;strong&gt;아니오'인&lt;/strong&gt; 경우 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 을 데이터 속성과 함께 사용 하십시오 . 텍스트를 &lt;code&gt;Save&lt;/code&gt; 변경하면 테스트가 실패하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb9073e63299a65bb50a13c26e05b60303111f2c" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;yes&lt;/strong&gt; because the word &lt;code&gt;Submit&lt;/code&gt; is critical and should not be changed - then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; to target the element. This way, if it is changed, the test will fail.</source>
          <target state="translated">&lt;code&gt;Submit&lt;/code&gt; 이라는 단어 가 중요하고 변경해서는 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 대답이 &lt;strong&gt;예인&lt;/strong&gt; 경우 cy.contains () 를 사용 하여 요소를 대상으로 지정하십시오. 이 방법으로 변경하면 테스트가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="7c6208086921680f3ab3b5e099a8391aa7505f99" translate="yes" xml:space="preserve">
          <source>If the answer is no: then use a data attribute.</source>
          <target state="translated">대답이 아니오 인 경우 : 데이터 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="176a981f849e1e80afda3010fdd17ca4de01f357" translate="yes" xml:space="preserve">
          <source>If the answer is yes: then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">대답이 예인 경우 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c3d99d8c672ed0f9a58631c763050ee1404649b" translate="yes" xml:space="preserve">
          <source>If the application sets a custom property, like:</source>
          <target state="translated">애플리케이션이 다음과 같이 사용자 정의 특성을 설정하는 경우 :</target>
        </trans-unit>
        <trans-unit id="a316af8049ce3ef58aa334d9b420904143029a18" translate="yes" xml:space="preserve">
          <source>If the commit information is missing in the Dashboard run then &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub Integration&lt;/a&gt; or other tasks might not work correctly. To see the relevant Cypress debug logs, set the environment variable &lt;code&gt;DEBUG&lt;/code&gt; on your CI machine and inspect the terminal output to see why the commit information is unavailable.</source>
          <target state="translated">커밋 정보가 대시 보드 실행에서 누락되면 &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub 통합&lt;/a&gt; 또는 다른 작업이 올바르게 작동하지 않을 수 있습니다. 관련 Cypress 디버그 로그 를 보려면 CI 시스템 에서 환경 변수 &lt;code&gt;DEBUG&lt;/code&gt; 를 설정 하고 터미널 출력을 검사하여 커밋 정보를 사용할 수없는 이유를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="87a064679b505fb4f43803ff8692c40151512b84" translate="yes" xml:space="preserve">
          <source>If the content of the element &lt;strong&gt;changed&lt;/strong&gt; would you want the test to fail?</source>
          <target state="translated">요소의 내용이 &lt;strong&gt;변경된&lt;/strong&gt; 경우 테스트에 실패 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="33f9944f451d168727113ae38f9ff940547f9483" translate="yes" xml:space="preserve">
          <source>If the element is currently not in focus, before issuing any keystrokes Cypress will first issue a &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to the element to bring it into focus.</source>
          <target state="translated">요소가 현재 초점이 맞지 않으면 키를 누르기 전에 Cypress는 먼저 요소에 &lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 을 발행하여 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="bb08d23caa0ce128551b1591fbe53b1485f5d721" translate="yes" xml:space="preserve">
          <source>If the form&amp;rsquo;s &lt;code&gt;submit&lt;/code&gt; event is &lt;code&gt;preventedDefault&lt;/code&gt; the form will not actually be submitted.</source>
          <target state="translated">양식의 &lt;code&gt;submit&lt;/code&gt; 이벤트가 &lt;code&gt;preventedDefault&lt;/code&gt; 되는 경우 기본값은 양식이 실제로 제출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cba85eb42a78a04cd0f5fcd7cb354510b97c3c09" translate="yes" xml:space="preserve">
          <source>If the hover behavior depends on a JavaScript event like &lt;code&gt;mouseover&lt;/code&gt;, you can trigger the event to achieve that behavior.</source>
          <target state="translated">&lt;code&gt;mouseover&lt;/code&gt; 동작이 mouseover 와 같은 JavaScript 이벤트에 의존 하는 경우 해당 동작을 달성하기 위해 이벤트를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c69d8aa449aad6940de5679c36384ec0910135c1" translate="yes" xml:space="preserve">
          <source>If the machine is encoding the video slowly (which is often the case for virtual machines that use a single core), the encoding might take a long time. In this case, you can modify the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoCompression&lt;/code&gt;&lt;/a&gt; configuration to make the encoding a little bit faster. Here are some common scenarios:</source>
          <target state="translated">머신이 비디오를 느리게 인코딩하는 경우 (단일 코어를 사용하는 가상 머신의 경우) 인코딩 시간이 오래 걸릴 수 있습니다. 이 경우 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoCompression&lt;/code&gt; &lt;/a&gt; 구성을 수정 하여 인코딩 속도를 약간 높일 수 있습니다. 일반적인 시나리오는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="281cd2310510ca7dc670ea99f125208e5de2f4ff" translate="yes" xml:space="preserve">
          <source>If the mousedown event has its default action prevented (&lt;code&gt;e.preventDefault()&lt;/code&gt;) then the element will not receive focus as per the spec.</source>
          <target state="translated">mousedown 이벤트에 기본 동작이 방지 된 경우 ( &lt;code&gt;e.preventDefault()&lt;/code&gt; ) 요소는 사양에 따라 포커스를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d95bd4923a76dfc8a1341411e5f28006de450fc" translate="yes" xml:space="preserve">
          <source>If the path to the file does not exist, the file and its path will be created. If the file already exists, it will be over-written.</source>
          <target state="translated">파일 경로가 존재하지 않으면 파일과 해당 경로가 작성됩니다. 파일이 이미 존재하면 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="e59562e13c4c4576a50916d6f64e01ee0edc6d71" translate="yes" xml:space="preserve">
          <source>If the problem is seen during &lt;code&gt;cypress open&lt;/code&gt; you can print debug logs in the browser too. Open the browser&amp;rsquo;s Developer Tools and set a &lt;code&gt;localStorage&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; 때 문제가 발생 하면 브라우저에서도 디버그 로그를 인쇄 할 수 있습니다. 브라우저의 개발자 도구를 열고 &lt;code&gt;localStorage&lt;/code&gt; 속성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b1450f978b16536cdfe1e9955befeb5389a0e9f" translate="yes" xml:space="preserve">
          <source>If the server takes a very long time to start, we recommend trying the &lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;start-server-and-test&lt;/a&gt; module.</source>
          <target state="translated">서버를 시작하는 데 시간이 오래 걸리면 &lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;start-server-and-test&lt;/a&gt; 모듈을 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0df65981151eafdb0359a584156434e4a653f8ad" translate="yes" xml:space="preserve">
          <source>If the smoke test fails to execute, check if a shared library is missing (a common problem on Linux machines without all of the Cypress dependencies present).</source>
          <target state="translated">스모크 테스트가 실행되지 않으면 공유 라이브러리가 없는지 확인하십시오 (모든 Cypress 종속성이없는 Linux 시스템의 일반적인 문제).</target>
        </trans-unit>
        <trans-unit id="3638d0b781a21c150d0b8e80ad4c8466d13bf479" translate="yes" xml:space="preserve">
          <source>If the state you are trying to clean lives on the server - by all means, clean that state. You will need to run these types of routines! But if the state is related to your application currently under test - you likely do not even need to clear it.</source>
          <target state="translated">정리하려는 상태가 서버에서 계속 작동하는 경우 해당 상태를 정리하십시오. 이러한 유형의 루틴을 실행해야합니다! 그러나 상태가 현재 테스트중인 애플리케이션과 관련이있는 경우이를 지울 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e28022270e53482c54285d7e566763481f38c725" translate="yes" xml:space="preserve">
          <source>If the triple slash directive does not work, please refer to your code editor in &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript&amp;rsquo;s Editor Support doc&lt;/a&gt; and follow the instructions for your IDE to get &lt;a href=&quot;typescript-support&quot;&gt;TypeScript support&lt;/a&gt; and intelligent code completion configured in your developer environment first. TypeScript support is built in for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;, and &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; - all other editors require extra setup.</source>
          <target state="translated">트리플 슬래시 지시문이 작동하지 않으면 &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript의 Editor Support doc&lt;/a&gt; 에서 코드 편집기를 참조하고 IDE의 지시 사항 에 따라 개발자 환경에서 &lt;a href=&quot;typescript-support&quot;&gt;TypeScript 지원&lt;/a&gt; 및 지능형 코드 완성을 먼저 구성하십시오. TypeScript 지원은 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; , &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt; 및 &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm에&lt;/a&gt; 내장되어 있습니다. 다른 모든 편집기에는 추가 설정이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1cefc5abdc03d7c1487d91621dedca3abe32114d" translate="yes" xml:space="preserve">
          <source>If there is a missing dependency, the application should print an error message. You can see the Electron verbose log messages by setting an &lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;environment variable ELECTRON_ENABLE_LOGGING&lt;/a&gt;:</source>
          <target state="translated">누락 된 종속성이 있으면 응용 프로그램에서 오류 메시지를 인쇄해야합니다. &lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;환경 변수 ELECTRON_ENABLE_LOGGING&lt;/a&gt; 을 설정하여 Electron 상세 로그 메시지를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1f6c10abf1c776360040b402a51392a4fa2eabb" translate="yes" xml:space="preserve">
          <source>If there is currently a different DOM element with focus, Cypress issues a &lt;code&gt;blur&lt;/code&gt; event to that element before running the &lt;code&gt;.focus()&lt;/code&gt; command.</source>
          <target state="translated">현재 포커스가있는 다른 DOM 요소가있는 경우 Cypress 는 &lt;code&gt;.focus()&lt;/code&gt; 명령을 실행하기 전에 해당 요소에 &lt;code&gt;blur&lt;/code&gt; 이벤트를 발행합니다 .</target>
        </trans-unit>
        <trans-unit id="6e1234aa938e58dfe72a380e41ba6249ce542bb3" translate="yes" xml:space="preserve">
          <source>If this is not the case, then you should refactor and change your approach.</source>
          <target state="translated">그렇지 않은 경우 접근 방식을 리팩토링하고 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="c5f3df466a815c48328c9910e040b787e9212736" translate="yes" xml:space="preserve">
          <source>If this state cleanup is &lt;strong&gt;truly&lt;/strong&gt; required, then the next test will instantly fail. Why? Because resetting the state never happened when you refreshed Cypress.</source>
          <target state="translated">이 상태 정리가 &lt;strong&gt;실제로&lt;/strong&gt; 필요한 경우 다음 테스트는 즉시 실패합니다. 왜? Cypress를 새로 고칠 때 상태 재설정이 발생하지 않았기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="793da91db9fe4182e7562537ceb3f25907e00040" translate="yes" xml:space="preserve">
          <source>If this test can run &lt;strong&gt;by itself&lt;/strong&gt; and pass - congratulations you have written a good test.</source>
          <target state="translated">이 테스트가 단독 &lt;strong&gt;으로&lt;/strong&gt; 실행 &lt;strong&gt;되어&lt;/strong&gt; 통과 할 수 있다면 좋은 테스트를 작성한 것입니다.</target>
        </trans-unit>
        <trans-unit id="984bee3474a21ee2beb536e03cd95024d37ccb6e" translate="yes" xml:space="preserve">
          <source>If watching for file changes, emit &lt;code&gt;rerun&lt;/code&gt; after a file has finished being processed to let Cypress know to rerun the tests.</source>
          <target state="translated">파일 변경을보고하는 경우, 발광은 &lt;code&gt;rerun&lt;/code&gt; 파일이 완성 된 존재 싸이프레스가 테스트를 다시 실행 알려 처리 한 후.</target>
        </trans-unit>
        <trans-unit id="dbe5bfb32e8c85e274c247d854478d90f5cb3136" translate="yes" xml:space="preserve">
          <source>If we drill into the coverage object to see the statements executed in each file. For example the file &lt;code&gt;src/index.js&lt;/code&gt; has the following information:</source>
          <target state="translated">커버리지 객체를 드릴하여 각 파일에서 실행 된 명령문을 확인하십시오. 예를 들어 &lt;code&gt;src/index.js&lt;/code&gt; 파일 에는 다음 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e5458c212b25120f1a7febad7cf38e01764524" translate="yes" xml:space="preserve">
          <source>If we looked at the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; of our button again&amp;hellip;</source>
          <target state="translated">버튼 의 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 을 다시 보면 &amp;hellip;</target>
        </trans-unit>
        <trans-unit id="9858bc3f84e402a92629ee149c76b95aca1c1c5c" translate="yes" xml:space="preserve">
          <source>If we want to collect the code coverage from the unit tests, we need to instrument the source code of &lt;em&gt;our spec files&lt;/em&gt;. The simplest way to do this is to use the same &lt;code&gt;.babelrc&lt;/code&gt; with &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; and tell the Cypress built-in bundler to use &lt;code&gt;.babelrc&lt;/code&gt; when bundling specs. One can use the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin again to do this by adding the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">단위 테스트에서 코드 적용 범위를 수집하려면 &lt;em&gt;spec 파일&lt;/em&gt; 의 소스 코드를 계측해야 &lt;em&gt;합니다&lt;/em&gt; . 이 작업을 수행하는 가장 간단한 방법은 동일한 사용하는 것입니다 &lt;code&gt;.babelrc&lt;/code&gt; 와 &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; &lt;/a&gt; 하고 싸이프레스가 내장 들러 사용하는 말 &lt;code&gt;.babelrc&lt;/code&gt; 사양을 번들 때. 하나는 사용할 수 &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; 당신에 아래 코드를 추가하여이 작업을 수행 할 다시 플러그인을 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e0bb96bcece0a11d9fd6ab15f70e21a2aa7f346" translate="yes" xml:space="preserve">
          <source>If we wrote this assertion in the explicit form &amp;ldquo;the long way&amp;rdquo;, it would look like this:</source>
          <target state="translated">이 주장을&amp;ldquo;먼저&amp;rdquo;명시적인 형식으로 쓴다면 다음과 같이 보일 것입니다.</target>
        </trans-unit>
        <trans-unit id="c60587c2f51cec786bb94efa29378e1b47736dd3" translate="yes" xml:space="preserve">
          <source>If you &lt;strong&gt;must&lt;/strong&gt; get a real token you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and use the &lt;strong&gt;programmatic&lt;/strong&gt; API that your OAuth provider provides. These APIs likely change &lt;strong&gt;more&lt;/strong&gt; infrequently and you avoid problems like throttling and A/B campaigns.</source>
          <target state="translated">당신이 경우에 &lt;strong&gt;있어야&lt;/strong&gt; 진짜를 얻을 당신이 사용할 수있는 토큰 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 하고, 사용 &lt;strong&gt;프로그램&lt;/strong&gt; 사용자의 OAuth 제공자가 제공하는 API를. 이러한 API 가능성이 변화를 &lt;strong&gt;더&lt;/strong&gt; 자주는 당신은 조절 및 A / B 캠페인 등의 문제를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86e6371b7dcbb3f2107155cd65f37f6449ea72c1" translate="yes" xml:space="preserve">
          <source>If you already use webpack in your project, you can pass in your webpack config as &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#options&quot;&gt;shown here&lt;/a&gt;.</source>
          <target state="translated">프로젝트에서 이미 웹팩을 사용하고 있다면 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#options&quot;&gt;여기에 표시된&lt;/a&gt; 대로 웹팩 구성을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef8a273650cfea97530f8a6c086790f21bed9916" translate="yes" xml:space="preserve">
          <source>If you are &lt;a href=&quot;#Record-tests&quot;&gt;recording your runs&lt;/a&gt; on a public project, you&amp;rsquo;ll want to protect your Record Key. &lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;Learn why.&lt;/a&gt;</source>
          <target state="translated">공개 프로젝트에서 &lt;a href=&quot;#Record-tests&quot;&gt;러닝&lt;/a&gt; 을 기록하는 경우 레코드 키를 보호해야합니다. &lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;이유를 알아보십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5e14c0559d99023707eb7ea6dd9ee886d83873b" translate="yes" xml:space="preserve">
          <source>If you are an FFmpeg pro and want to see all the settings and debug messages during the encoding, run Cypress with the following environment variable: &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</source>
          <target state="translated">FFmpeg 전문가이고 인코딩 중에 모든 설정 및 디버그 메시지를 보려면 다음 환경 변수를 사용하여 Cypress를 실행하십시오. &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3d6619baa79a5c438b8e380d0b0b06ec739290" translate="yes" xml:space="preserve">
          <source>If you are experiencing any or all of these issues, you may need to configure Cypress with your proxy. Instructions are available for &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt;, &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt;, and &lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">이러한 문제가 발생하면 프록시를 사용하여 Cypress를 구성해야합니다. &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt; , &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt; 및 &lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windows에&lt;/a&gt; 대한 지침이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc282e2bf3d131481f4925653232d0ba7bce1fc2" translate="yes" xml:space="preserve">
          <source>If you are new to Cypress and wanting to better understand how Commands work - &lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;please read our Introduction to Cypress guide&lt;/a&gt;.</source>
          <target state="translated">Cypress를 처음 사용하고 Commands의 작동 방식을 더 잘 이해 &lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;하려면 Cypress 소개 안내서를 읽으십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59dd4ef47d09ebbfccf959062f71fe92d4528548" translate="yes" xml:space="preserve">
          <source>If you are not logged in on OSX, Cypress now issues a native system notification indicating to you that Cypress is running in your tray (many users often complained they could not tell Cypress was actually running)</source>
          <target state="translated">OSX에 로그인하지 않은 경우 Cypress는 이제 Cypress가 트레이에서 실행되고 있음을 나타내는 기본 시스템 알림을 발행합니다 (많은 사용자가 Cypress가 실제로 실행되고 있음을 알 수 없음)</target>
        </trans-unit>
        <trans-unit id="2a31a7f93c6105a63c0857b8887ac837c4f3d60f" translate="yes" xml:space="preserve">
          <source>If you are not sure if you have written a potentially flaky test, there is an easy way to figure it out. Repeat the test an excessive number of times, and then repeat by modifying the Developer Tools to throttle the Network and the CPU. This will create different loads that simulate different environments (like CI). If you&amp;rsquo;ve written a good test, it will pass or fail 100% of the time.</source>
          <target state="translated">잠재적으로 벗겨지기 쉬운 테스트를 작성했는지 확실하지 않은 경우 쉽게 알아낼 수 있습니다. 테스트를 여러 번 반복 한 다음 개발자 도구를 수정하여 네트워크와 CPU를 조절하여 반복하십시오. 이렇게하면 CI와 같은 다른 환경을 시뮬레이션하는 다른로드가 생성됩니다. 좋은 시험을 작성했다면 100 % 합격 또는 불합격입니다.</target>
        </trans-unit>
        <trans-unit id="80f8b0dc65b612b8d77f5f23e7305b050dd3ba02" translate="yes" xml:space="preserve">
          <source>If you are not using one of the above CI providers then make sure your system has these dependencies installed.</source>
          <target state="translated">위의 CI 공급자 중 하나를 사용하지 않는 경우 시스템에 이러한 종속성이 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f30e8c13cff139efff8686cb98411fcf5a2ebfc1" translate="yes" xml:space="preserve">
          <source>If you are purposefully writing commands outside of a test, there is probably a better way to accomplish what you&amp;rsquo;re trying to do. Read through the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;Examples&lt;/a&gt;, &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat with someone in our chat&lt;/a&gt;, or &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">테스트 외부에서 의도적으로 명령을 작성하는 경우 수행하려는 작업을 수행하는 더 좋은 방법이있을 수 있습니다. &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;예를&lt;/a&gt; 읽 거나 &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;채팅에서 다른 사람과 채팅&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이슈를 엽니 다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6acf38d6e064f86018b16cceea98d60fb261be5e" translate="yes" xml:space="preserve">
          <source>If you are running &lt;code&gt;Docker&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;there is a simple one line fix for this problem documented here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Docker&lt;/code&gt; 를 실행하는 경우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;여기에 설명 된이 문제에 대한 간단한 한 줄 수정이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13d834a64d552181a1b3e28e131afb7882baa42e" translate="yes" xml:space="preserve">
          <source>If you are running Cypress tests using a Chromium-based browser, you can see ALL currently set command line switches and the browser version information by opening a new tab and typing &lt;code&gt;chrome://version&lt;/code&gt; url.</source>
          <target state="translated">Chromium 기반 브라우저를 사용하여 Cypress 테스트를 실행하는 경우 새 탭을 열고 &lt;code&gt;chrome://version&lt;/code&gt; url을 입력하여 현재 설정된 모든 명령 줄 스위치와 브라우저 버전 정보를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6eefafe82e977a212269471392c2d31efb3b313d" translate="yes" xml:space="preserve">
          <source>If you are running long runs on Docker, you need to set the &lt;code&gt;ipc&lt;/code&gt; to &lt;code&gt;host&lt;/code&gt; mode. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;This issue&lt;/a&gt; describes exactly what to do.</source>
          <target state="translated">Docker에서 장기 실행을 실행하는 경우 &lt;code&gt;ipc&lt;/code&gt; 를 &lt;code&gt;host&lt;/code&gt; 모드 로 설정해야 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;이 문제&lt;/a&gt; 는 정확히 무엇을해야하는지 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7ea7149f5bda4f21e499135546b4b1f599c26ffb" translate="yes" xml:space="preserve">
          <source>If you are trying to parallelize this run, then also pass the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag, else pass a different group name.</source>
          <target state="translated">이 실행을 병렬화하려는 경우 &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt; 플래그 도 전달하고 다른 그룹 이름을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="658c2a9b48b7709fa6b97391757f69addcab4fd4" translate="yes" xml:space="preserve">
          <source>If you are typing into a password field, the password input is masked automatically within your application. But &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; automatically logs any typed content into the Test Runner&amp;rsquo;s Command Log.</source>
          <target state="translated">비밀번호 필드에 입력하는 경우 비밀번호 입력은 애플리케이션 내에서 자동으로 마스킹됩니다. 그러나 &lt;a href=&quot;../commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 입력 된 모든 콘텐츠를 테스트 실행기의 명령 로그에 자동으로 기록합니다.</target>
        </trans-unit>
        <trans-unit id="be7a02908a97e6d893298ef87e83dcb692e7a2d1" translate="yes" xml:space="preserve">
          <source>If you are unable to guarantee that the DOM is stable - don&amp;rsquo;t worry, there are other ways you can do conditional testing or work around the problems inherent with it.</source>
          <target state="translated">DOM이 안정적임을 보장 할 수없는 경우 걱정하지 마십시오. 조건부 테스트를 수행하거나 고유 한 문제를 해결할 수있는 다른 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="de6ee60d1ffc8d554d42900fed3e4ab199507dfb" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with code coverage or want to learn more, take a look at the &amp;ldquo;Understanding JavaScript Code Coverage&amp;rdquo; blog post &lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;Part 1&lt;/a&gt; and &lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;Part 2&lt;/a&gt;.</source>
          <target state="translated">코드 범위에 익숙하지 않거나 자세한 내용을 알고 싶다면&amp;ldquo;JavaScript 코드 범위 이해&amp;rdquo;블로그 게시물 &lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;Part 1&lt;/a&gt; 및 &lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;Part 2를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75eeccb6ebe4296c2870b6f50b692b7240315b31" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;jQuery&lt;/code&gt; then the &lt;code&gt;jQuery&lt;/code&gt; wrapped elements will automatically have your 3rd party plugins available to be called.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;jQuery&lt;/code&gt; 를 다음 &lt;code&gt;jQuery&lt;/code&gt; 를가 자동으로 제 3 자있을 것이다 요소라고 할 수 플러그인을 감쌌다.</target>
        </trans-unit>
        <trans-unit id="03bc3dfda3cbb44d47bdeeddac74222abfe0cd16" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;npm install&lt;/code&gt; in your build process, consider &lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt;switching to &lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; and caching the &lt;code&gt;~/.npm&lt;/code&gt; directory for a faster and more reliable build.</source>
          <target state="translated">빌드 프로세스에서 &lt;code&gt;npm install&lt;/code&gt; 을 사용 하는 경우보다 빠르고 안정적인 빌드 &lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt;를 위해 &lt;code&gt;npm ci&lt;/code&gt; 로&lt;/a&gt; 전환 하고 &lt;code&gt;~/.npm&lt;/code&gt; 디렉토리를 캐싱하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d0c4037ea4da2b6c2d166832c8fc4c38195b3c4e" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;yarn&lt;/code&gt;, caching &lt;code&gt;~/.cache&lt;/code&gt; will include both the &lt;code&gt;yarn&lt;/code&gt; and Cypress caches. Consider using &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; as an &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; equivalent.</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; 을 사용하는 경우 &lt;code&gt;~/.cache&lt;/code&gt; 캐싱 에는 &lt;code&gt;yarn&lt;/code&gt; 와 Cypress 캐시가 모두 포함됩니다 . 사용을 고려 &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; 가 AS &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt; 해당합니다.</target>
        </trans-unit>
        <trans-unit id="2089f8651693845877f5144ee31856c6ae49d0fa" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt; tool, you can invoke the locally installed Cypress tool directly:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt; 도구를 사용하는 경우 로컬로 설치된 Cypress 도구를 직접 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bdad0708407a849c5ab258a1cfa09a8ce0a2427" translate="yes" xml:space="preserve">
          <source>If you are writing a traditional server-side application where most of the responses are HTML you will likely have few stubbed responses. However, most modern applications that serve JSON can take advantage of stubbing.</source>
          <target state="translated">대부분의 응답이 HTML 인 전통적인 서버 측 애플리케이션을 작성하는 경우 스텁 된 응답이 거의 없을 것입니다. 그러나 JSON을 제공하는 대부분의 최신 응용 프로그램은 스터 빙을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e941a81cf8f9fc738a085fc37c0f10bfe84f2c" translate="yes" xml:space="preserve">
          <source>If you attempt to visit two different superdomains, Cypress will error. Visiting subdomains works fine. You can visit different superdomains in &lt;em&gt;different&lt;/em&gt; tests, just not the &lt;em&gt;same&lt;/em&gt; test.</source>
          <target state="translated">두 개의 다른 수퍼 도메인을 방문하려고하면 Cypress에서 오류가 발생합니다. 하위 도메인을 방문하면 정상적으로 작동합니다. &lt;em&gt;동일한&lt;/em&gt; 테스트가 아닌 &lt;em&gt;다른&lt;/em&gt; 테스트 에서 다른 수퍼 도메인을 방문 할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77a24f329974d4b45808483367181374b38e05cf" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;cy.clock()&lt;/code&gt; before visiting a page with &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, the page&amp;rsquo;s native global functions will be overridden on window load, before any of your app code runs, so even if &lt;code&gt;setTimeout&lt;/code&gt;, for example, is called on page load, it can still be controlled via &lt;a href=&quot;tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt;. This also applies if, during the course of a test, the page under test is reloaded or changed.</source>
          <target state="translated">당신이 호출하는 경우 &lt;code&gt;cy.clock()&lt;/code&gt; 로 페이지를 방문하시기 이전 &lt;a href=&quot;visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 페이지의 기본 전역 함수 앱 코드 실행의 전에, 그래서 경우에도 윈도우 부하에 무시됩니다 &lt;code&gt;setTimeout&lt;/code&gt; , 예를 들어, 호출됩니다 페이지로드에서도 &lt;a href=&quot;tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt; 를 통해 제어 할 수 있습니다 . 이는 테스트 과정에서 테스트중인 페이지를 다시로드하거나 변경 한 경우에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="86e73b2b1686e43558da6ec69e3a7ff0469f0839" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t figure out why your JavaScript code is redirecting you to a different superdomain, then you might want to just read about &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">JavaScript 코드가 다른 슈퍼 도메인으로 리디렉션되는 이유를 알 수없는 경우 &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;웹 보안 비활성화&lt;/a&gt; 에 대한 내용 만 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="7cfd4650a26bf4be0f68e73d66b61e5fcd4ea2dd" translate="yes" xml:space="preserve">
          <source>If you cannot accurately know the state of your application then no matter what programming idioms you have available - &lt;strong&gt;you cannot write 100% deterministic tests&lt;/strong&gt;.</source>
          <target state="translated">응용 프로그램의 상태를 정확하게 알 수없는 경우 사용 가능한 프로그래밍 관용구에 관계없이 &lt;strong&gt;100 % 결정 론적 테스트를 작성할 수 없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="fc24b08a14546c51dad9f4f79e13d2577080ffc7" translate="yes" xml:space="preserve">
          <source>If you chain any &lt;code&gt;.should()&lt;/code&gt; command, the default &lt;code&gt;.should('exist')&lt;/code&gt; is not asserted. This does not matter for most &lt;em&gt;positive&lt;/em&gt; assertions, such as &lt;code&gt;.should('have.class')&lt;/code&gt;, because those imply existence in the first place, but if you chain &lt;em&gt;negative&lt;/em&gt; assertions ,such as &lt;code&gt;.should('not.have.class')&lt;/code&gt;, they will pass even if the DOM element doesn&amp;rsquo;t exist:</source>
          <target state="translated">당신이 어떤 체인 경우 &lt;code&gt;.should()&lt;/code&gt; 명령을 기본 &lt;code&gt;.should('exist')&lt;/code&gt; 주장하지 않습니다. 이것은 &lt;code&gt;.should('have.class')&lt;/code&gt; 와 같은 가장 &lt;em&gt;긍정적 인&lt;/em&gt; 주장 에는 중요하지 않습니다 . 왜냐하면 그것들이 처음에는 존재하기 때문이지만 , &lt;code&gt;.should('not.have.class')&lt;/code&gt; 같은 &lt;em&gt;부정&lt;/em&gt; 주장 을 연쇄한다면 DOM 요소가없는 경우에도 전달됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6e0dcb9f671e7a8fb00e89750fb01e410ef7928" translate="yes" xml:space="preserve">
          <source>If you change any of those properties of the image, you should include the new values in the returned object, so that the details are correctly reported in the test results. For example, if you crop the image, return the new size and dimensions of the image.</source>
          <target state="translated">이미지의 해당 속성을 변경하는 경우 세부 정보가 테스트 결과에 올바르게보고되도록 반환 된 객체에 새 값을 포함시켜야합니다. 예를 들어 이미지를 자르면 이미지의 새 크기와 치수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b0fcff056e08339935fe5d6b0a70e3075836fffc" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; or &lt;code&gt;dimensions&lt;/code&gt; of the image, you&amp;rsquo;ll want to update the new values so that the details are correctly reported in the test results. &lt;em&gt;Any other properties besides &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;dimensions&lt;/code&gt; will be ignored.&lt;/em&gt;</source>
          <target state="translated">당신이 변경하면 &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 또는 &lt;code&gt;dimensions&lt;/code&gt; 이미지를, 당신은 세부 사항이 제대로 시험 결과에보고되도록 새 값을 업데이트 할 수 있습니다. &lt;em&gt; &lt;code&gt;path&lt;/code&gt; &lt;/em&gt;&lt;em&gt; , &lt;/em&gt;&lt;em&gt; &lt;code&gt;size&lt;/code&gt; &lt;/em&gt;&lt;em&gt; 및 &lt;/em&gt;&lt;em&gt; &lt;code&gt;dimensions&lt;/code&gt; &lt;/em&gt;&lt;em&gt; 이외의 다른 속성 은 무시됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="752ee2bc76f52ed83626d5ff5af16d85c3d5a108" translate="yes" xml:space="preserve">
          <source>If you choose to install Cypress from the &lt;a href=&quot;../guides/command-line&quot;&gt;CLI Tool&lt;/a&gt; you must update to the latest version &lt;code&gt;0.9.1&lt;/code&gt;. Just run &lt;code&gt;npm install -g cypress&lt;/code&gt; and then you can run &lt;a href=&quot;../guides/command-line&quot;&gt;&lt;code&gt;cypress install&lt;/code&gt;&lt;/a&gt;. You don&amp;rsquo;t need to do anything if you update from within the Test Runner itself.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;CLI 도구&lt;/a&gt; 에서 Cypress를 설치하려면 최신 버전 &lt;code&gt;0.9.1&lt;/code&gt; 로 업데이트해야합니다 . 그냥 실행 &lt;code&gt;npm install -g cypress&lt;/code&gt; 한 다음 실행할 수 있습니다 &lt;a href=&quot;../guides/command-line&quot;&gt; &lt;code&gt;cypress install&lt;/code&gt; &lt;/a&gt; . Test Runner 자체에서 업데이트하는 경우 별도의 조치를 취할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c595939e58a62fa4e827148c888e6c83189e3727" translate="yes" xml:space="preserve">
          <source>If you choose to mirror the entire Cypress download site, you can specify &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; to set the download server URL from &lt;code&gt;https://download.cypress.io&lt;/code&gt; to your own mirror.</source>
          <target state="translated">전체 Cypress 다운로드 사이트를 미러링하도록 선택한 경우 &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; 를 지정하여 다운로드 서버 URL을 &lt;code&gt;https://download.cypress.io&lt;/code&gt; 에서 고유 한 미러 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bbf88490d53e76c288d488dc11f5e88ed5e9488e" translate="yes" xml:space="preserve">
          <source>If you do &lt;em&gt;not&lt;/em&gt; want these assets to be tracked by Cypress, you need to switch to using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;. We will happily remove any build assets that are accidentally uploaded to us during the update transition.</source>
          <target state="translated">Cypress에서 이러한 자산을 추적 하지 &lt;em&gt;않으&lt;/em&gt; 려면 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 사용으로 전환해야 합니다 . 업데이트 전환 중에 실수로 업로드 된 빌드 자산을 모두 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1b5689eafe488967a0af932b7d765f7d91ea4637" translate="yes" xml:space="preserve">
          <source>If you do not need to return a value, explicitly return &lt;code&gt;null&lt;/code&gt; to signal that the given event has been handled.</source>
          <target state="translated">값을 반환 할 필요가 없으면 지정된 이벤트가 처리되었음을 알리기 위해 명시 적으로 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2acdb06a9fd83a2d7bbf16b6e94e8d1bcb23c390" translate="yes" xml:space="preserve">
          <source>If you do not pass a &lt;code&gt;response&lt;/code&gt; to a route, Cypress will pass the request through without stubbing it. We can still wait for the request to resolve later.</source>
          <target state="translated">경로에 &lt;code&gt;response&lt;/code&gt; 을 전달하지 않으면 Cypress는 요청을 스텁하지 않고 통과시킵니다. 요청이 나중에 해결 될 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e925f27fe2f6b45420ea0c9bb472b5b6a85b6aa2" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t return an object, then configuration will not be modified.</source>
          <target state="translated">객체를 반환하지 않으면 구성이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed38bca3a1bfd9a7f3e39271ca081de14c34dad6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t use webpack in your project or would like to keep the majority of the default options, you can &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#modifying-default-options&quot;&gt;modify the default options&lt;/a&gt;. Editing the options allows you to do things like:</source>
          <target state="translated">프로젝트에서 웹팩을 사용하지 않거나 대부분의 기본 옵션을 유지하려는 경우 기본 옵션을 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#modifying-default-options&quot;&gt;수정할&lt;/a&gt; 수 있습니다 . 옵션을 편집하면 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9312db5af2460191898cec54077b357142c7c10f" translate="yes" xml:space="preserve">
          <source>If you extend Cypress assertions, you can extend the assertion types to make the TypeScript compiler understand the new methods. See the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;Recipe: Adding Chai Assertions&lt;/a&gt; for instructions.</source>
          <target state="translated">Cypress 어설 션을 확장하면 어설 션 유형을 확장하여 TypeScript 컴파일러가 새 메서드를 이해하도록 할 수 있습니다. 지침 은 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;레시피 : 차이 어설 션 추가를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5cfd6e8ecef7e170010676556edc9e236a0e225" translate="yes" xml:space="preserve">
          <source>If you find yourself stuck and can&amp;rsquo;t work around these issues you can just set this in your &lt;code&gt;cypress.json&lt;/code&gt; file. But before doing so you should really understand and &lt;a href=&quot;../guides/web-security&quot;&gt;read about the reasoning here&lt;/a&gt;.</source>
          <target state="translated">문제가 발생하여 이러한 문제를 해결할 수없는 경우 &lt;code&gt;cypress.json&lt;/code&gt; 파일 에서이를 설정할 수 있습니다 . 그러나 그렇게하기 전에 &lt;a href=&quot;../guides/web-security&quot;&gt;여기에서 추론을&lt;/a&gt; 이해하고 읽어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6a19f869c25d2794013e7c1387d40ede0389a6eb" translate="yes" xml:space="preserve">
          <source>If you forgot to start your server you&amp;rsquo;ll see the error below:</source>
          <target state="translated">서버 시작을 잊어 버린 경우 아래 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3a04f4111181616dc0c9ed4028c92b80fb0ed3e0" translate="yes" xml:space="preserve">
          <source>If you get this error in a case where the element is definitely visible in the DOM, your document might contain malformed HTML. In such cases, &lt;code&gt;document.querySelector()&lt;/code&gt; will not find any elements that appear after the point where the HTML is malformed. Even if you feel certain your HTML is not malformed anywhere, check it anyway (line by line in the dev tools). Especially if you&amp;rsquo;ve exhausted all other possibilities.</source>
          <target state="translated">DOM에서 요소가 확실히 보이는 경우이 오류가 발생하면 문서에 잘못된 HTML이 포함되어있을 수 있습니다. 이러한 경우 &lt;code&gt;document.querySelector()&lt;/code&gt; 는 HTML이 변형 된 지점 이후에 나타나는 요소를 찾지 않습니다. HTML의 위치가 잘못되었다고 생각 되더라도 어쨌든 확인하십시오 (개발 도구에서 한 줄씩). 특히 다른 모든 가능성을 다 써 버린 경우.</target>
        </trans-unit>
        <trans-unit id="50a9344dcb7c8f27a278716db4dd157f804f2039" translate="yes" xml:space="preserve">
          <source>If you had any failed tests, you can hover over the spec chart and click on the link to the failed test to go directly to its error message and stack trace.</source>
          <target state="translated">테스트에 실패한 경우 사양 차트 위로 마우스를 가져 가서 실패한 테스트 링크를 클릭하여 오류 메시지 및 스택 추적으로 바로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9ee096d19e69e37fbffad4e7eb174e62c5e73f" translate="yes" xml:space="preserve">
          <source>If you have Local Administrator access to your computer, you may be able to delete the registry keys that are affecting Chrome. Here are some instructions:</source>
          <target state="translated">컴퓨터에 대한 로컬 관리자 액세스 권한이 있으면 Chrome에 영향을 미치는 레지스트리 키를 삭제할 수 있습니다. 다음은 몇 가지 지침입니다.</target>
        </trans-unit>
        <trans-unit id="63e4a448952599482dc8840bf1d4025b5dc425e4" translate="yes" xml:space="preserve">
          <source>If you have a public project you should &lt;em&gt;still&lt;/em&gt; keep your record key secret. If someone knows both your record key and your &lt;code&gt;projectId&lt;/code&gt;, they could record test runs for your project - which could mix up all of your results and be counted towards your usage during billing.</source>
          <target state="translated">공개 프로젝트가있는 경우 &lt;em&gt;에도 여전히&lt;/em&gt; 레코드 키를 비밀로 유지해야합니다. 누군가 레코드 키와 &lt;code&gt;projectId&lt;/code&gt; 를 모두 알고 있으면 프로젝트에 대한 테스트 실행을 기록 할 수 있습니다. 결과는 모든 결과를 혼합하여 청구 중에 사용량에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="54a6bde689f1c4e79db2db1cd787836fb4a9aedb" translate="yes" xml:space="preserve">
          <source>If you have any questions regarding the OSS plan, please feel free &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">OSS 계획과 관련하여 궁금한 점이 있으면 언제든지 &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;문의하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae6e013e7f7ef50fc0cef2b97a94cdc089024d3c" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t set up your project to record &lt;a href=&quot;projects#Setup&quot;&gt;read here&lt;/a&gt;.</source>
          <target state="translated">기록하도록 프로젝트를 설정하지 않은 경우 &lt;a href=&quot;projects#Setup&quot;&gt;여기를 읽으십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b6cc633bbfffea4fcc2a5b3a2ee15791267850e" translate="yes" xml:space="preserve">
          <source>If you install cypress globally using &lt;code&gt;npm install -g cypress&lt;/code&gt; we will warn you that you should check this in as a &lt;code&gt;devDependency&lt;/code&gt; but Cypress will continue to work in &amp;ldquo;global mode&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;npm install -g cypress&lt;/code&gt; 를 사용하여 cypress를 전체적으로 설치하는 경우 이를 &lt;code&gt;devDependency&lt;/code&gt; 로 체크인해야 하지만 Cypress는 &quot;전역 모드&quot;에서 계속 작동 한다는 경고를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="a842235de66934aeaa622f41344721b9e2931803" translate="yes" xml:space="preserve">
          <source>If you installed a custom reporter through npm, specify the package name:</source>
          <target state="translated">npm을 통해 사용자 정의 리포터를 설치 한 경우 패키지 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="fe2c757489ce4a0f7274ae1730d45810e99ceb0b" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; after visiting a page, Cypress assumes the url used for the &lt;code&gt;cy.visit()&lt;/code&gt; is the host.</source>
          <target state="translated">당신이 한 경우 &lt;code&gt;cy.request()&lt;/code&gt; 페이지를 방문한 후, 싸이프레스는 사용되는 URL 가정 &lt;code&gt;cy.visit()&lt;/code&gt; 호스트입니다.</target>
        </trans-unit>
        <trans-unit id="8fc68779f7a10cce750509e7525ffbfe62a98a74" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">당신이 한 경우 &lt;code&gt;cy.request()&lt;/code&gt; 페이지를 방문하기 전에, 싸이프레스는로 구성된 호스트 사용 &lt;code&gt;baseUrl&lt;/code&gt; 의 속성 내부 &lt;code&gt;cypress.json&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b0963f152c033833fde35ce59916df0cd22425ac" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of of your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="translated">당신이 한 경우 &lt;code&gt;cy.request()&lt;/code&gt; 페이지를 방문하기 전에, 싸이프레스는로 구성된 호스트 사용 &lt;code&gt;baseUrl&lt;/code&gt; 당신의 재산의 내부 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;구성 파일을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f69d55a3f14f83cfc54a1836ade78cc35d09ad0" translate="yes" xml:space="preserve">
          <source>If you modify the list of browsers, you can see the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Resolved-Configuration&quot;&gt;resolved configuration&lt;/a&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab of the Test Runner.</source>
          <target state="translated">브라우저 목록을 수정 하면 테스트 실행기 의 &lt;strong&gt;설정&lt;/strong&gt; 탭 에서 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Resolved-Configuration&quot;&gt;해결 된 구성&lt;/a&gt; 을 볼 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dcc5c531dc309815c89260b0f3c521b4dfc71087" translate="yes" xml:space="preserve">
          <source>If you move the location of the screenshot image, you&amp;rsquo;ll want to specify the new &lt;code&gt;path&lt;/code&gt; of the image.</source>
          <target state="translated">스크린 샷 이미지의 위치를 ​​이동하는 경우 이미지의 새 &lt;code&gt;path&lt;/code&gt; 를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="891fc475ee8ba30f9e2373ce12ed3af9b6cc59fe" translate="yes" xml:space="preserve">
          <source>If you need further control of the file-watching behavior you can configure this preprocessor explicitly: it exposes options that allow you to configure behavior such as &lt;em&gt;what&lt;/em&gt; is watched and the delay before emitting an &amp;ldquo;update&amp;rdquo; event after a change.</source>
          <target state="translated">당신이 파일보고 행동을 더 컨트롤이 필요하면 명시 적으로이 처리기를 구성 할 수 있습니다 : 그것은 같은 구성의 행동을 허용 옵션을 노출하는 &lt;em&gt;것을&lt;/em&gt; 지켜 변경 후 &quot;업데이트&quot;이벤트를 방출하기 전에 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="4e262a641a0559189be4fdfa01a8e8c66c400cfe" translate="yes" xml:space="preserve">
          <source>If you need the cookie value, for example to use in a subsequent call</source>
          <target state="translated">쿠키 값이 필요한 경우 (예 : 후속 호출에 사용)</target>
        </trans-unit>
        <trans-unit id="58b1d6270a220e8a62522a448d084da074e9e73c" translate="yes" xml:space="preserve">
          <source>If you need to override the binary location for some reason, use &lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt;&lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">어떤 이유로 2 진 위치를 대체해야하는 경우 &lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt; &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; &lt;/a&gt; 환경 변수를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="7f55b2d14636345f6286b0a128493be0ddff303f" translate="yes" xml:space="preserve">
          <source>If you need to pass multiple arguments, use an object</source>
          <target state="translated">여러 개의 인수를 전달해야하는 경우 객체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2a6a23e285012aad77cd987572729f6560e998af" translate="yes" xml:space="preserve">
          <source>If you need to run a Cypress command straight from the Developer Tools console, you can use the internal command &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt;. For example, to run the equivalent of &lt;code&gt;cy.task('database', 123)&lt;/code&gt; outside the normal execution command chain:</source>
          <target state="translated">개발자 도구 콘솔에서 Cypress 명령을 바로 실행해야하는 경우 내부 명령 &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt; 있습니다. 예를 들어, 일반 실행 명령 체인 외부에서 &lt;code&gt;cy.task('database', 123)&lt;/code&gt; 해당하는 항목 을 실행하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="06c6374e4d45b32383b9c79e232e9b2d251383c2" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;response&lt;/code&gt; to &lt;code&gt;cy.route()&lt;/code&gt;, Cypress will stub the response in the request.</source>
          <target state="translated">&lt;code&gt;cy.route()&lt;/code&gt; &lt;code&gt;response&lt;/code&gt; 을 전달하면 Cypress가 요청의 응답을 스텁합니다.</target>
        </trans-unit>
        <trans-unit id="eadb340822b7453de4c2fa968ae10ef8145cfb90" translate="yes" xml:space="preserve">
          <source>If you provide a non fully qualified domain name (FQDN), Cypress will make its best guess as to which host you want &lt;code&gt;cy.request()&lt;/code&gt; to use in the url.</source>
          <target state="translated">FQDN (정규화 된 도메인 이름)을 제공하지 않으면 Cypress는 URL에서 &lt;code&gt;cy.request()&lt;/code&gt; 를 사용할 호스트를 가장 잘 추측 합니다.</target>
        </trans-unit>
        <trans-unit id="4939d05c3dea69f3c0696b39f689b3fbbc3453af" translate="yes" xml:space="preserve">
          <source>If you remove your application&amp;rsquo;s state after each test, then you instantly lose the ability to use your application in this mode. Logging out at the end would always leave you with the same login page at the end of the test. In order to debug your application or write a partial test, you would always be left commenting out your custom &lt;code&gt;cy.logout()&lt;/code&gt; command.</source>
          <target state="translated">각 테스트 후 응용 프로그램 상태를 제거하면이 모드에서 응용 프로그램을 즉시 사용할 수 없게됩니다. 마지막에 로그 아웃하면 테스트 종료시 항상 동일한 로그인 페이지가 표시됩니다. 응용 프로그램을 디버깅하거나 부분 테스트를 작성하려면 항상 사용자 정의 &lt;code&gt;cy.logout()&lt;/code&gt; 명령을 주석 처리해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f6df17775c6544a7070882eab73096c48835dce3" translate="yes" xml:space="preserve">
          <source>If you return an empty list of browsers or &lt;code&gt;browsers: null&lt;/code&gt;, the default list will be restored automatically.</source>
          <target state="translated">빈 브라우저 또는 &lt;code&gt;browsers: null&lt;/code&gt; 목록을 반환하는 경우 : null , 기본 목록이 자동으로 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="9e19b775e5880b86ccc83dbd2e818ccef9558b3b" translate="yes" xml:space="preserve">
          <source>If you return or resolve with an object, Cypress will then merge this object into the &lt;code&gt;config&lt;/code&gt; which enables you to overwrite configuration or environment variables.</source>
          <target state="translated">객체를 반환하거나 해결하면 Cypress는이 객체를 &lt;code&gt;config&lt;/code&gt; 으로 병합 하여 구성 또는 환경 변수를 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62f38afc23705af50d78b28d79ab4c0478795b7d" translate="yes" xml:space="preserve">
          <source>If you see this error, you may want to ensure that the main browser window is currently focused. This means not being focused in debugger or any other window when the command is run.</source>
          <target state="translated">이 오류가 표시되면 기본 브라우저 창에 현재 초점이 맞춰져 있는지 확인하십시오. 이것은 명령이 실행될 때 디버거 또는 다른 창에 집중되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f4042cdde7b138d3f35ab964f31c8300e3842bf4" translate="yes" xml:space="preserve">
          <source>If you set the &lt;strong&gt;Record Key&lt;/strong&gt; as the environment variable &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;, you can omit the &lt;code&gt;--key&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;레코드 키&lt;/strong&gt; 를 환경 변수 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; 로 설정 하면 &lt;code&gt;--key&lt;/code&gt; 플래그를 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c00a2717fcd0be70d5846987e198e4a299aacb6" translate="yes" xml:space="preserve">
          <source>If you still haven&amp;rsquo;t found a solution, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;open an issue&lt;/a&gt;&lt;em&gt;with a reproducible example&lt;/em&gt;.</source>
          <target state="translated">여전히 해결책을 찾지 못하면 &lt;em&gt;재현 가능한 예제로 &lt;/em&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;문제 &lt;/a&gt;&lt;em&gt;를여십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="815ae2e8ac732d0e55e15cc5b8c6ea3b40638a48" translate="yes" xml:space="preserve">
          <source>If you store and access the fixture data using &lt;code&gt;this&lt;/code&gt; test context object, make sure to use &lt;code&gt;function () { ... }&lt;/code&gt; callbacks. Otherwise the test engine will NOT have &lt;code&gt;this&lt;/code&gt; pointing at the test context.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 테스트 컨텍스트 객체를 사용하여 조명기 데이터를 저장하고 액세스하는 경우 &lt;code&gt;function () { ... }&lt;/code&gt; 콜백 을 사용해야 합니다 . 그렇지 않으면 시험 엔진이되지 않습니다 &lt;code&gt;this&lt;/code&gt; 테스트 컨텍스트에서 가리키는.</target>
        </trans-unit>
        <trans-unit id="2e41771328e6b27b794c8f710d1553a8a40a2a6a" translate="yes" xml:space="preserve">
          <source>If you store and/or persist whether to show the wizard on the server, then just ask it.</source>
          <target state="translated">서버에 마법사를 표시할지 여부를 저장 및 / 또는 유지하는 경우 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="f8b502a9f59a207ff1bf6a7107a93811965fa6bd" translate="yes" xml:space="preserve">
          <source>If you think ahead, you&amp;rsquo;ll quickly realize that you&amp;rsquo;re going to be typing this URL a lot, since every test is going to need to visit some page of your application. Luckily, Cypress provides a &lt;a href=&quot;../references/configuration&quot;&gt;configuration option&lt;/a&gt; for this. Let&amp;rsquo;s leverage that now.</source>
          <target state="translated">모든 테스트는 응용 프로그램의 일부 페이지를 방문해야하므로 미리 생각하면이 URL을 많이 입력 할 것임을 빨리 알 수 있습니다. 다행히 Cypress는 &lt;a href=&quot;../references/configuration&quot;&gt;구성 옵션을&lt;/a&gt; 제공합니다. 을 . 지금 활용하겠습니다.</target>
        </trans-unit>
        <trans-unit id="ed371ecd9849733f0995b7cf088a4173800b3090" translate="yes" xml:space="preserve">
          <source>If you used &lt;code&gt;npm&lt;/code&gt; to install, Cypress has now been installed to your &lt;code&gt;./node_modules&lt;/code&gt; directory, with its binary executable accessible from &lt;code&gt;./node_modules/.bin&lt;/code&gt;.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;npm&lt;/code&gt; 설치, 싸이프레스는 지금에 설치되어 &lt;code&gt;./node_modules&lt;/code&gt; 의 에서 바이너리 실행 파일 접근과 함께, 디렉토리 &lt;code&gt;./node_modules/.bin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6739be634fbc0af49a35d96e92d4b398330a478c" translate="yes" xml:space="preserve">
          <source>If you want &lt;code&gt;bar()&lt;/code&gt; to execute after &lt;code&gt;foo()&lt;/code&gt; and the &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; commands, one solution is to chain off the final command using &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">당신이 원하는 경우 &lt;code&gt;bar()&lt;/code&gt; 후 실행 &lt;code&gt;foo()&lt;/code&gt; 와 &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 명령, 하나 개의 솔루션을 사용하여 최종 명령이 떨어져 체인입니다 &lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c88984849702621314b8577ee1b3520c40840ab3" translate="yes" xml:space="preserve">
          <source>If you want more details about how to write a plugin, we&amp;rsquo;ve written API docs that show you how to work with each plugin event.</source>
          <target state="translated">플러그인 작성 방법에 대한 자세한 내용을 보려면 각 플러그인 이벤트에 대한 작업 방법을 보여주는 API 문서를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="40e27bf5b702621afa36f37ab4dd2c0e41604e7d" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요소가 실행 가능하게되기를 기다리는 다른 보장을 &lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 과 같은 다른 명령을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d022579bf50db75611ad951fa6175bbb71248639" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">요소가 실행 가능하게되기를 기다리는 다른 보장을 &lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 과 같은 다른 명령을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eb10934dcd9f9f094ac02c58ac6ef7a739bde4a6" translate="yes" xml:space="preserve">
          <source>If you want to call a &lt;code&gt;function&lt;/code&gt; on the previously yielded subject, use &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이전에 생성 된 주제에 대해 &lt;code&gt;function&lt;/code&gt; 를 호출 하려면 &lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bd0e57f9bf5b98f8a5a67973d6143c187801894" translate="yes" xml:space="preserve">
          <source>If you want to dive into Cypress and edit the code yourself, you can do that. The Cypress code is open source and licensed under an &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;. There are a few tips on getting started that we&amp;rsquo;ve outlined below.</source>
          <target state="translated">Cypress로 뛰어 들어가 직접 코드를 편집하려면 그렇게 할 수 있습니다. Cypress 코드는 오픈 소스이며 &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MIT 라이센스에&lt;/a&gt; 따라 라이센스가 부여됩니다 . 시작에 대한 몇 가지 팁이 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d976725e9451f0702dad5e61f02b270491fd5a17" translate="yes" xml:space="preserve">
          <source>If you want to download a specific Cypress version for a given platform (Operating System), you can get it from our CDN.</source>
          <target state="translated">특정 플랫폼 (운영 체제)에 맞는 특정 Cypress 버전을 다운로드하려면 CDN에서 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e58beb5f6e1d56538516e0b82a79dd41bf84ddc5" translate="yes" xml:space="preserve">
          <source>If you want to get a property that is not a function on the previously yielded subject, use &lt;a href=&quot;its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이전에 생성 된 주제에 대해 함수가 아닌 특성을 얻으려면 &lt;a href=&quot;its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41c8e5baabf7ce6dec0fd975fca62b2ab17b92f7" translate="yes" xml:space="preserve">
          <source>If you want to permanently override these options you could do so by setting &lt;a href=&quot;../cypress-api/cypress-server&quot;&gt;&lt;code&gt;Cypress.Server.defaults()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 옵션을 영구적으로 무시하려면 &lt;a href=&quot;../cypress-api/cypress-server&quot;&gt; &lt;code&gt;Cypress.Server.defaults()&lt;/code&gt; &lt;/a&gt; 를 설정 하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="115c8112ad21e39aa933cb191a3be97e55bec792" translate="yes" xml:space="preserve">
          <source>If you want to target a test or suite to run or be excluded when run in a specific browser, we suggest passing the &lt;code&gt;browser&lt;/code&gt; within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;. The &lt;code&gt;browser&lt;/code&gt; option accepts the same &lt;a href=&quot;#Arguments&quot;&gt;arguments&lt;/a&gt; as &lt;code&gt;Cypress.isBrowser()&lt;/code&gt;.</source>
          <target state="translated">특정 브라우저에서 실행할 때 실행하거나 제외 할 테스트 또는 제품군을 타겟팅 하려면 &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;테스트 구성&lt;/a&gt; 내에서 &lt;code&gt;browser&lt;/code&gt; 전달하는 것이 좋습니다 . &lt;code&gt;browser&lt;/code&gt; 옵션은 동일 받아 &lt;a href=&quot;#Arguments&quot;&gt;인수&lt;/a&gt; 로 &lt;code&gt;Cypress.isBrowser()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d44aa2f657e1e58fa32926dbb685b28edca850fd" translate="yes" xml:space="preserve">
          <source>If you wanted to select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; instead, you could narrow the elements yielded before the &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 을 대신 선택 하려면 &lt;code&gt;.contains()&lt;/code&gt; 전에 생성 된 요소를 좁힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4752e108ef1f5f601a6569de4952c0938340e9cc" translate="yes" xml:space="preserve">
          <source>If you were to put an &lt;code&gt;.only&lt;/code&gt; on any of the last three tests, they would fail. Each test requires the previous to run in a specific order in order to pass.</source>
          <target state="translated">당신이 넣어한다면 &lt;code&gt;.only&lt;/code&gt; 마지막 세 가지 테스트 중 하나에서, 그들은 실패합니다. 각 테스트는 통과하기 위해 이전 순서를 특정 순서로 실행해야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
