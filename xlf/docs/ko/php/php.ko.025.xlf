<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="f45b547f37e7d6080032ab3a07e7f213d6f3bf82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt;extends&lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveCallbackFilterIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.callbackfilteriterator&quot;&gt;CallbackFilterIterator&lt;/a&gt; 는 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="585cc63e5d1a1e8fb30638acc1c15340d2557d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveDirectoryIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveDirectoryIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.filesystemiterator&quot;&gt;FilesystemIterator의&lt;/a&gt; 구현의 &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator을&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cd92e7fa92649552951cc21aa6ea79e207427172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIterator는 &lt;/strong&gt;&lt;a href=&quot;class.iterator&quot;&gt;반복자를&lt;/a&gt; 확장합니다 {</target>
        </trans-unit>
        <trans-unit id="cbcae2569614b7e0964a4e4ed3c459e3e2937998" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveIteratorIterator&lt;/strong&gt; 는 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="48375fbe2bb49fb900057026e8a6ad1821ca62c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveRegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveRegexIterator는 &lt;/strong&gt;&lt;a href=&quot;class.regexiterator&quot;&gt;RegexIterator를&lt;/a&gt; 확장 하여 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator를&lt;/a&gt; 구현합니다. {</target>
        </trans-unit>
        <trans-unit id="66569a8c05af935fee645cf61216575b0ab9efb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt;extends&lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt;implements &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RecursiveTreeIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.recursiveiteratoriterator&quot;&gt;RecursiveIteratorIterator&lt;/a&gt; 가 &lt;a href=&quot;class.outeriterator&quot;&gt;OuterIterator&lt;/a&gt; {를 구현 함</target>
        </trans-unit>
        <trans-unit id="c0e4f77639cf18bce83671f44438468c72ef3dfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reflection::__toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d82721090361585f82caca47b02bef69905e8b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflection&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;반사&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="43d2bf67a93fe091ab6840aebd7270832b6a6be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::clone()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c55837d2d8bc97577b0ebbf3c736630021f9e17a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionClass::getVersion()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be8981a01eaeb385770dbdda957ce9ce11dc686d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass::implementsInterface()&lt;/strong&gt; throws an &lt;a href=&quot;class.reflectionexception&quot;&gt;ReflectionException&lt;/a&gt; if &lt;code&gt;interface&lt;/code&gt; is not an interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3d4a238ad571b21db3af5795ab1aa4504892de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClass&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClass&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d3873ec6d73578eff74e7b932e5121ca59859fda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionClassConstant&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a8eb2ebaa0e12f349db17de22c3ebccc09085fae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="25ef2b43c1fe1d571b4a166104d6de72acf06896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionExtension&lt;/strong&gt; 은 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c1878269df163882391c8ceb287c52c0fa030e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunction&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunction는&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt; 구현 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a64174c2d041816d0a8fbf4437c35706e0ee94b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionFunctionAbstract&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f24cba651bffa9bdbd92555d2a46952fd2bed7cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionGenerator&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="2a975494919dcabaf1e3e3bb695e1792b961b65d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionMethod&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionMethod는&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionfunctionabstract&quot;&gt;ReflectionFunctionAbstract&lt;/a&gt; 구현 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d7b39b9c208168d09fd25dbe7457274a63e7b4ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionNamedType&lt;/strong&gt;extends&lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionNamedType&lt;/strong&gt; 은 &lt;a href=&quot;class.reflectiontype&quot;&gt;ReflectionType&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="e3d9989e6c0319f428385cc1bfa9b681eea4da13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionObject&lt;/strong&gt;extends&lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionObject&lt;/strong&gt; 확장 &lt;a href=&quot;class.reflectionclass&quot;&gt;ReflectionClass&lt;/a&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="40f5e30daff5929b34ef662f9562e29438d2b1e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::getValue()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc9f7badea44c89671c0c31e2bd9fd614920aa32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="809ff8b001c144692a2e34cea1b1a3b9fa30637b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionParameter&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionParameter&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="0d4d04ba5c24e0e9300f9a5faa6bf5a1c917b0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty::toString()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052fe39dd65e144a596aa99d5b77177e05b35781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionProperty&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionProperty&lt;/strong&gt; 는 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="3ee679d2a2bd8a74e337af5f7f66542f7dfe1bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionType::__toString()&lt;/strong&gt; has been deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176714a272640b72a398d3f5da20b0cd9df1162b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionType&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionType&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5c851f6ceac7a68e4019b01c57a76123ecb1bce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt;implements &lt;a href=&quot;class.reflector&quot;&gt;Reflector&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ReflectionZendExtension&lt;/strong&gt; 은 &lt;a href=&quot;class.reflector&quot;&gt;리플렉터&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="57ba0ca5438183a8962deba65b977e269ca31a9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; is an interface implemented by all exportable Reflection classes.</source>
          <target state="translated">&lt;strong&gt;리플렉터&lt;/strong&gt; 는 모든 익스포트 가능한 리플렉션 클래스에 의해 구현 된 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8a933acf554f2d72faa1e15c7b82dac22e62880b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflector&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;반사판&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="bac8dfb2598462fdb690f023c5332e247c8861e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정규식 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="075a39cae56c82081ef8b31e5642a17ef58e3bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regex syntax modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정규식 구문 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="965553d24d8e1308fd55c7435dbc41b78d523465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegexIterator&lt;/strong&gt;extends&lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RegexIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.filteriterator&quot;&gt;FilterIterator을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="90bb6954891b7145b2eede9fd6a504fbc961bffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; supports direct access to the data through array access pattern and iteration via &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;, as well as access via class methods. The result will be PHP value for simple resources and &lt;strong&gt;ResourceBundle&lt;/strong&gt; object for complex ones. All resources are read-only.</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt; 은 &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach를&lt;/a&gt; 통한 배열 액세스 패턴 및 반복과 클래스 메소드를 통한 액세스를 통해 데이터에 대한 직접 액세스를 지원 합니다. 결과는 간단한 리소스에 대한 PHP 값이고 복잡한 &lt;strong&gt;리소스에&lt;/strong&gt; 대한 &lt;strong&gt;ResourceBundle&lt;/strong&gt; 객체입니다. 모든 리소스는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="47c25251b662b0c1d02994948de87cfae8e4ba40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;ResourceBundle&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="61ae4e47ab3811d582574a67ea41c5b772fb1b5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result set structure&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;결과 집합 구조&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f219364ef4ce4fa3cfa6f9d995a4133926e2531a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 값&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01fbd28371d58757cf75323dd759acc585145bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return value and parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 값과 파라미터&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0333b1c94f23528700a9b20399bb0db7aec8a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffc10fa7e10d99e01b850bc1bfdeabeff798f441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returned values Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;반환 된 값 상수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ddcdb48dc36224e822df34c134652d467b7d28e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RuntimeException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;RuntimeException&lt;/strong&gt; 은 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장합니다</target>
        </trans-unit>
        <trans-unit id="60d4e82f27e150e600d76a6041f62b106a78aa84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SDO_DAS_Relational::__construct()&lt;/strong&gt; throws a &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; if any problems are found in the metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7df6c8c130bb0ca91419f906952f848d2aa702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SDO_DAS_Relational::applyChanges()&lt;/strong&gt; can throw an &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; if it is unable to apply all the changes correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f79fe12562d387b75c95a9ed4c81f81e43bff1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SDO_DAS_Relational::executePreparedQuery()&lt;/strong&gt; can throw an &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; if it is unable to construct the data graph correctly. This can occur for a number of reasons: for example if it finds that it does not have primary keys in the result set for all the objects. It also catches any PDO exceptions and obtains PDO diagnostic information which it includes in an &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; which it then throws.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438fe6e47382349362a53e4326153b6b4e551877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SDO_DAS_Relational::executeQuery()&lt;/strong&gt; can throw an &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; if it is unable to construct the data graph correctly. This can occur for a number of reasons: for example if it finds that it does not have primary keys in the result set for all the objects. It also catches any PDO exceptions and obtains PDO diagnostic information which it includes in an &lt;strong&gt;SDO_DAS_Relational_Exception&lt;/strong&gt; which it then throws.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa890c43e8a04312c8d49998b8f99c409c50bd2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SNMP::__construct()&lt;/strong&gt; throws an exception when parameters count or types are wrong or unknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d3c71db210d3c88eaa8c2b948530036c6cce66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SNMP::walk()&lt;/strong&gt; is used to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcbcd1e868e72266d380230287ff3a26c2cfd07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SNMP&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1e06ecae4679a5b179b03f2817f85cdfe3d080" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SNMPException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3a4cb1cc803e1162b7a4c981264ea162d10774" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3::backup()&lt;/strong&gt; copies the contents of one database into another, overwriting the contents of the destination database. It is useful either for creating backups of databases or for copying in-memory databases to or from persistent files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1a36076aed9011536887d0013820d83d484baf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="10c2b18c25e6d24ea1049708f52afdab8e849d10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Result&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="abafb085e8eed65605dcef8de8eb4b5a358e5230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SQLite3Stmt&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a6d2c93494ef7bd78fdba2c3c4b95e45f7512b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SVM::predict()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SVM::predict()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a535277dd5f284dc737e3bcb5e820730e3eb5cb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SVM&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939552632a12ba772fc2989d9d0b2b6e608b22a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SVMModel&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29381b86f70a8de7fae2b9384dd7d469323c21f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sandbox Settings / Status Indicators&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;샌드 박스 설정 / 상태 표시기&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31763a47a704bfaffbb3c94f1be7bd32754c8f08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SeekableIterator&lt;/strong&gt;extends&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SeekableIterator는&lt;/strong&gt; 확장 &lt;a href=&quot;class.iterator&quot;&gt;Iterator를&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2ec44d6a3f1457d7eeec3326e505f741af05be87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Serializable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;직렬화 가능&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0708f8b69af5ef076bb45e73bd71d5448e649199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt; is a special class that can be used to expose the current internal PHP session save handler by inheritance. There are seven methods which wrap the seven internal session save handler callbacks (&lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;gc&lt;/code&gt; and &lt;code&gt;create_sid&lt;/code&gt;). By default, this class will wrap whatever internal save handler is set as defined by the &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; configuration directive which is usually &lt;code&gt;files&lt;/code&gt; by default. Other internal session save handlers are provided by PHP extensions such as SQLite (as &lt;code&gt;sqlite&lt;/code&gt;), Memcache (as &lt;code&gt;memcache&lt;/code&gt;), and Memcached (as &lt;code&gt;memcached&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt; 는 상속으로 현재 내부 PHP 세션 저장 핸들러를 노출하는 데 사용할 수있는 특수 클래스입니다. 7 개의 내부 세션 저장 핸들러 콜백 ( &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;close&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;destroy&lt;/code&gt; , &lt;code&gt;gc&lt;/code&gt; 및 &lt;code&gt;create_sid&lt;/code&gt; ) 을 래핑하는 7 가지 방법이 있습니다 . 기본적으로이 클래스는 기본적 으로 &lt;code&gt;files&lt;/code&gt; &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; 구성 지시문 에서 정의한대로 내부 저장 핸들러를 랩핑 합니다 . 다른 내부 세션 저장 핸들러는 SQLite ( &lt;code&gt;sqlite&lt;/code&gt; ), Memcache ( &lt;code&gt;memcache&lt;/code&gt; ) 와 같은 PHP 확장에 의해 제공됩니다.) 및 Memcached ( &lt;code&gt;memcached&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5eefe5907d9c315deca5c64a0d1c3713b081e606" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt; is a special class that can be used to expose the current internal PHP session save handler by inheritance. There are seven methods which wrap the seven internal session save handler callbacks (&lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;gc&lt;/code&gt; and &lt;code&gt;create_sid&lt;/code&gt;). By default, this class will wrap whatever internal save handler is set as defined by the &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.save-handler&quot;&gt;session.save_handler&lt;/a&gt; configuration directive which is usually &lt;code&gt;files&lt;/code&gt; by default. Other internal session save handlers are provided by PHP extensions such as SQLite (as &lt;code&gt;sqlite&lt;/code&gt;), Memcache (as &lt;code&gt;memcache&lt;/code&gt;), and Memcached (as &lt;code&gt;memcached&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5019c3eed4b7c1b46ad0020eb3c4f86209ef2d49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandler&lt;/strong&gt;implements &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;, &lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandler&lt;/strong&gt; 는 &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; , &lt;a href=&quot;class.sessionidinterface&quot;&gt;SessionIdInterface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="665fc826d3351884d354ba855ad5aeb8411dd133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; is an &lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface&lt;/a&gt; which defines a prototype for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its &lt;em&gt;OOP&lt;/em&gt; invocation, the class must implement this interface.</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; 는 사용자 정의 세션 핸들러를 만들기위한 프로토 타입을 정의 하는 &lt;a href=&quot;language.oop5.interfaces&quot;&gt;인터페이스&lt;/a&gt; 입니다. &lt;em&gt;OOP&lt;/em&gt; 호출을 사용하여 사용자 정의 세션 핸들러를 &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler ()&lt;/a&gt; 에 전달 하려면 클래스가이 인터페이스를 구현해야합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eccda6aad786d53b4a29930f7373310eb35da6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; is an interface which defines the minimal prototype for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7056a532b308b807c92bff3c89b4a0e3544ce643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="92334d4bd53c2e1c7a6d2d50b8e3c1271c68ea44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionIdInterface&lt;/strong&gt; is an interface which defines optional methods for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fc2868b6a3a4e18f0c1188da4247ee8a90ea51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionIdInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="327e5ec5e5c95d6f23a6b846c5ca4d80bff7775b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; is an interface which defines optional methods for creating a custom session handler. In order to pass a custom session handler to &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt; using its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c282cbbafccadb6736feb4218d55f1b197a58578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SessionUpdateTimestampHandlerInterface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0741e1a575908f0fa3aeb48eff6794de5ca6c03a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple &lt;strong&gt;ob_get_status()&lt;/strong&gt; results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;간단한 &lt;strong&gt;ob_get_status ()&lt;/strong&gt; 결과&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cad0d922221265f92760a86ae9568f7dafd8a82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement::children()&lt;/strong&gt; returns a node object no matter if the current node has children or not. Use &lt;a href=&quot;function.count&quot;&gt;count()&lt;/a&gt; on the return value to see if there are any children. As of PHP 5.3.0, &lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement::count()&lt;/a&gt; may be used instead.</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement :: children ()&lt;/strong&gt; 은 현재 노드에 자식이 있는지 여부에 관계없이 노드 객체를 반환합니다. 사용 &lt;a href=&quot;function.count&quot;&gt;수 ()&lt;/a&gt; 자식이 있는지 반환 값에 있습니다. PHP 5.3.0부터 &lt;a href=&quot;simplexmlelement.count&quot;&gt;SimpleXMLElement :: count ()를&lt;/a&gt; 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fc8ad43ea6d353deb31cb5bb229298fb7cc8fc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLElement&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLElement&lt;/strong&gt; 는 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="bcc29a6af76becf02e95513d573ec9aea059a79e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt;extends&lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SimpleXMLIterator&lt;/strong&gt; 확장 &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; 구현 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="58b3f29ecf6b9205d5e4e556842dada2ff85cacb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single-character quantifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단일 문자 수량 자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5807384238698787c5614d9d6567b3f56d60b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient::SoapClient()&lt;/strong&gt; will generate an &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt; error if the &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; options aren't provided in non-WSDL mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af544415f7eb4fd4a496b6b23a4141a129c1024" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient::SoapClient()&lt;/strong&gt; will generate an &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt; error if the &lt;em&gt;location&lt;/em&gt; and &lt;em&gt;uri&lt;/em&gt; options aren't provided in non-WSDL mode.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;비 WSDL 모드에서 &lt;em&gt;location&lt;/em&gt; 및 &lt;em&gt;uri&lt;/em&gt; 옵션이 제공되지 않으면 &lt;strong&gt;SoapClient :: SoapClient ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;E_ERROR&lt;/code&gt; &lt;/strong&gt; 오류 를 생성 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131e6c8ce484605a42eb67ea53b5e2f3da7abf55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;비누 클라이언트&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="832648a98fa7a554a2812033f50f954b0ec3bcc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapFault&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SOAPFault에이&lt;/strong&gt; 확장 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="76938bbbc520d048a0a9a1fee5b688296f990ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapHeader&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapHeader&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fcbefa39489bf10815767fda00561abd207e39d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapParam&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;비누 파람&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="d0e629e7e65f84e58d346349fb1b36031af7581a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapServer&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapServer&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="98b400390e128fb4db37474c59a5cd7bdfb9ca74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SoapVar&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SoapVar&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="639f7f510d07b4e5ce708b711f2f26e296be62b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrClientException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrClientException&lt;/strong&gt; 은 &lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d103bbae6aa34d83f75a69e4a5d66c5f6c296014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrCollapseFunction&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="1a6f4ae01c0f54103983c8d48543160651ec0e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery::addBigramPhraseFields()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2725df9b423bf2ed483e23a14f3c97859271e4cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery::addPhraseFields()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery::addPhraseFields()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25e09d26bf3474fffe1c7e7bb1766042afa10f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery::useDisMaxQueryParser()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery::useDisMaxQueryParser()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5850e7d675dfaa27ae9d4154658fa7bcd8d54e28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrDisMaxQuery&lt;/strong&gt;extends&lt;a href=&quot;class.solrquery&quot;&gt;SolrQuery&lt;/a&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrDisMaxQuery&lt;/strong&gt; 확장 &lt;a href=&quot;class.solrquery&quot;&gt;SolrQuery&lt;/a&gt; 는 &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f88ec70785283d39f34c4704567d60ba032e592e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrException이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="983375513c9beeb7342cfe2a9704e963e0fa1fd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrIllegalArgumentException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrIllegalArgumentException이 &lt;/strong&gt;&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {을 확장 함</target>
        </trans-unit>
        <trans-unit id="d32869da05a0f4055b2d1c01ada857dbbe3a53c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrIllegalOperationException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrIllegalOperationException이 &lt;/strong&gt;&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {을 확장 함</target>
        </trans-unit>
        <trans-unit id="b0b3f84a79a4e2db63b9785b73b277358fcaa06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrMissingMandatoryParameterException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrMissingMandatoryParameterException이 SolrException을&lt;/strong&gt; 확장 &lt;a href=&quot;class.solrexception&quot;&gt;합니다&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="152b34c3d7723e34ed4f2b0308a361764c3da77a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrModifiableParams&lt;/strong&gt;extends&lt;a href=&quot;class.solrparams&quot;&gt;SolrParams&lt;/a&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrModifiableParams는&lt;/strong&gt; 확장 &lt;a href=&quot;class.solrparams&quot;&gt;SolrParams의&lt;/a&gt; 구현을 &lt;a href=&quot;class.serializable&quot;&gt;직렬화를&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ad7abad50ca5578999e9f02468d142423b31cf3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrQuery::setGroupMain()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SolrQuery::setGroupMain()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8851dd4b7befba7aeff19bb38ff77727ea313fd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrQuery&lt;/strong&gt;extends&lt;a href=&quot;class.solrmodifiableparams&quot;&gt;SolrModifiableParams&lt;/a&gt;implements &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrQuery&lt;/strong&gt; 확장 &lt;a href=&quot;class.solrmodifiableparams&quot;&gt;SolrModifiableParams&lt;/a&gt; 는 &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="f69303437319ef5eccc9b2c745dfbc85b111093d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SolrServerException&lt;/strong&gt;extends&lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SolrServerException&lt;/strong&gt; 은 &lt;a href=&quot;class.solrexception&quot;&gt;SolrException&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="58461fd6feee845d9945d9e4a2b95efbece28d7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sorting modes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정렬 모드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6dfce0824c9529922e44deb91b3cfa65b300ced" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifiers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Specifiers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4d84aa9fd513e4cc520dac9ce9b2178c71cc4be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SphinxClient&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;스핑크스 클라이언트&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="65fcd3b04ec2502d798c75eb711ac4b84068f444" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplBool&lt;/strong&gt;extends&lt;a href=&quot;class.splenum&quot;&gt;SplEnum&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplBool&lt;/strong&gt; 확장 &lt;a href=&quot;class.splenum&quot;&gt;SplEnum&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5b6aa5e237e29baa89ae120ed2328b724b5541ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplDoublyLinkedList&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplDoublyLinkedList&lt;/strong&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a5293be23e657ab6b052fc7353f382f8470f0d03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplDoublyLinkedList&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d32444d6728c4d71841d8b9f00d028dd75900d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplEnum&lt;/strong&gt;extends&lt;a href=&quot;class.spltype&quot;&gt;SplType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplEnum&lt;/strong&gt; 은 &lt;strong&gt;SplType을&lt;/strong&gt; 확장 &lt;a href=&quot;class.spltype&quot;&gt;합니다&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d188a65a793d7d2587fee6e2f0e3c70d96cce612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplFileInfo::getBasename()&lt;/strong&gt; is locale aware, so for it to see the correct basename with multibyte character paths, the matching locale must be set using the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;SplFileInfo :: getBasename ()&lt;/strong&gt; 은 로케일을 인식하므로 멀티 바이트 문자 경로가있는 올바른 기본 이름을 보려면 &lt;a href=&quot;function.setlocale&quot;&gt;setlocale ()&lt;/a&gt; 함수를 사용하여 일치하는 로케일을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="049cd46ff49d74aee570e5cc2141bf7da4a9b94f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplFileInfo&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SplFileInfo&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4cf0b11c8e431d83dfd07c4b8d06261c1a472994" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplFileObject&lt;/strong&gt;extends&lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt;implements &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt;, &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplFileObject&lt;/strong&gt; 확장 &lt;a href=&quot;class.splfileinfo&quot;&gt;SplFileInfo&lt;/a&gt; 는 &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; , &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="462537b5d748a80dadb225fbd262c9b776292ea9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplFixedArray&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplFixedArray&lt;/strong&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="14683ed175b35ae0c2b1eb3c152099c239bf5f15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplFloat&lt;/strong&gt;extends&lt;a href=&quot;class.spltype&quot;&gt;SplType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplFloat&lt;/strong&gt; 확장 &lt;a href=&quot;class.spltype&quot;&gt;SplType&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="64cf4b86ca2b88d6ad6d8f5b4f3b1c0a3662fce5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplInt&lt;/strong&gt;extends&lt;a href=&quot;class.spltype&quot;&gt;SplType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplInt는 SplType을&lt;/strong&gt; 확장 &lt;a href=&quot;class.spltype&quot;&gt;합니다&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="ada6cf68a91f8c59abf7cf180d0bca28a86ff9d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplMaxHeap&lt;/strong&gt;extends&lt;a href=&quot;class.splheap&quot;&gt;SplHeap&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplMaxHeap&lt;/strong&gt; 확장 &lt;a href=&quot;class.splheap&quot;&gt;SplHeap&lt;/a&gt; 은 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e80969bb603c143e7a547ee32492b4c0bc25b5f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplMinHeap&lt;/strong&gt;extends&lt;a href=&quot;class.splheap&quot;&gt;SplHeap&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplMinHeap&lt;/strong&gt; 확장 &lt;a href=&quot;class.splheap&quot;&gt;SplHeap&lt;/a&gt; 은 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2ebff34e7038fc3737fa99a707b577edb610cda9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplObjectStorage::offsetExists()&lt;/strong&gt; is an alias of &lt;a href=&quot;splobjectstorage.contains&quot;&gt;SplObjectStorage::contains()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;SplObjectStorage :: offsetExists는 ()&lt;/strong&gt; 의 별칭입니다 &lt;a href=&quot;splobjectstorage.contains&quot;&gt;SplObjectStorage :: 포함 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79a5a688a67bf8d634a5cad14c05fab3cc47b674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplObjectStorage::offsetSet()&lt;/strong&gt; is an alias of &lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage::attach()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;SplObjectStorage :: offsetSet ()&lt;/strong&gt; 은 &lt;a href=&quot;splobjectstorage.attach&quot;&gt;SplObjectStorage :: attach ()&lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="6d04d230f4a4b8bf7b63c89e29c7a9e9e41e1e7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplObjectStorage::offsetUnset()&lt;/strong&gt; is an alias of &lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage::detach()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;SplObjectStorage :: offsetUnset ()&lt;/strong&gt; 은 &lt;a href=&quot;splobjectstorage.detach&quot;&gt;SplObjectStorage :: detach ()&lt;/a&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="599f70a2b9314590fd92fc654b07696da747034f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplObjectStorage&lt;/strong&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplObjectStorage&lt;/strong&gt; 는 &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="19ec415f7db7a223949a84498a58b3530deeaf95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplObserver&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SplObserver&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5c7488c5aaab757b7cdee40b1b89b95fd3e62336" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplPriorityQueue&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplPriorityQueue&lt;/strong&gt; 구현 &lt;a href=&quot;class.iterator&quot;&gt;반복자&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;가산 근로&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d82c3f027db7fa375835bb6b99f62003f4c2a38f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplQueue::__construct&lt;/strong&gt; ( )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003d065e753e77e9ba8ca2a1574cdfcdac99797b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplQueue::__construct&lt;/strong&gt; ( void )</source>
          <target state="translated">&lt;strong&gt;SplQueue :: __ construct&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="3206e2a1cc791a2912703287e536449886855be4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplQueue::dequeue()&lt;/strong&gt; is an alias of &lt;a href=&quot;spldoublylinkedlist.shift&quot;&gt;SplDoublyLinkedList::shift()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;SplQueue :: dequeue ()&lt;/strong&gt; 는 &lt;a href=&quot;spldoublylinkedlist.shift&quot;&gt;SplDoublyLinkedList :: shift ()&lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="5be0b165ebf9f340189209fcb485e6496ee59eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplQueue::enqueue()&lt;/strong&gt; is an alias of &lt;a href=&quot;spldoublylinkedlist.push&quot;&gt;SplDoublyLinkedList::push()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;SplQueue :: enqueue ()&lt;/strong&gt; 는 &lt;a href=&quot;spldoublylinkedlist.push&quot;&gt;SplDoublyLinkedList :: push ()&lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="ffcd500824532165ebff705124cf10289ad7b6fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplQueue&lt;/strong&gt;extends&lt;a href=&quot;class.spldoublylinkedlist&quot;&gt;SplDoublyLinkedList&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplQueue&lt;/strong&gt; 확장 &lt;a href=&quot;class.spldoublylinkedlist&quot;&gt;SplDoublyLinkedList&lt;/a&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4a8be366b7d5defc220b9d91914de9395f9ffd92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplStack::__construct&lt;/strong&gt; ( )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd50c0a8adf930d155d046bf3aaf031a86eefd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplStack::__construct&lt;/strong&gt; ( void )</source>
          <target state="translated">&lt;strong&gt;SplStack :: __ construct&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="49660a5c13103d9c10ad7907f3d1a3dffdd8c4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplStack&lt;/strong&gt;extends&lt;a href=&quot;class.spldoublylinkedlist&quot;&gt;SplDoublyLinkedList&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplStack&lt;/strong&gt; 확장 &lt;a href=&quot;class.spldoublylinkedlist&quot;&gt;SplDoublyLinkedList&lt;/a&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="d466474118d545d211e9879703cfa3ad26a26bec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplString&lt;/strong&gt;extends&lt;a href=&quot;class.spltype&quot;&gt;SplType&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplString&lt;/strong&gt; 은 &lt;strong&gt;SplType을&lt;/strong&gt; 확장 &lt;a href=&quot;class.spltype&quot;&gt;합니다.&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="77f7b81deb0381e1b29c969561e92fa60b20e052" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplSubject&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SplSubject&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fc38da69ca88d538dbd5bb5924287e1488a9ad52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SplTempFileObject&lt;/strong&gt;extends&lt;a href=&quot;class.splfileobject&quot;&gt;SplFileObject&lt;/a&gt;implements &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt;, &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;SplTempFileObject&lt;/strong&gt; 확장 &lt;a href=&quot;class.splfileobject&quot;&gt;SplFileObject&lt;/a&gt; 는 &lt;a href=&quot;class.seekableiterator&quot;&gt;SeekableIterator&lt;/a&gt; , &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="026c05768063c448b07ada645240e589d5b10b08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spoofchecker&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;스푸핑 검사기&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="329b1ad417b53f50a23e59b58152548c3468cc56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stomp&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be3d75820c308a35981353ada61e5f7429e29f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StompException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99f5c890d0de74174ce33e6e44dd22bc090380c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StompFrame&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc1813133e97539282880cbae4dc26ff71eba9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported charsets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 문자셋&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b4613c476eaaa6588420626b2048f803d0a66e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 플래그&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="979c050582ad806a8f1514b47b7a0d4d98c534c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported property codes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 속성 코드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8330af26291f14af897daf93094817a93a140de6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported runtime FTP options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 런타임 FTP 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c0fb5224333f129b83c4f385b85f9904ec13611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported scripts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;지원되는 스크립트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="182495a5fbae78f9a92205679f0a9ffa68a6c32b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported xattr flags&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855bf89d6d8840c7a584d9e50969781c7e377916" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncEvent::reset()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SyncEvent::reset()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d859fc9b49ec3b6954be80f0150bbd4bbf14eca5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncEvent&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SyncEvent&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fd5ab87d36da046aef4f35b208723edd0e56dc62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncMutex&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SyncMutex&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="44f00247a937fefe6c7bedea65bafd6ebda45094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncReaderWriter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SyncReaderWriter&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="62d4af373bdb63f08dbecbcbb86797b8b36cce95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncSemaphore&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SyncSemaphore&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="9e5fa90794c7f4386635e4b640c4858dde7ade05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncSharedMemory::read()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SyncSharedMemory::read()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a02243f967653648eb9da29d4ebb8269c055a70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncSharedMemory::write()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SyncSharedMemory::write()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b5b022979252873f7f2c22835d74da28e5be543" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyncSharedMemory&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;SyncSharedMemory&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="9e4cc005e2ffbced63d104fcdf0a1270a8e71431" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syslog variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Syslog 변수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c9c5189100a843ab3cd1e0b72fa957247aa5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following characters are recognized in the &lt;code&gt;format&lt;/code&gt; parameter string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다음 문자는 &lt;code&gt;format&lt;/code&gt; 매개 변수 문자열 에서 인식됩니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea4cdb25c6b5b71248523a7e63a1f3fae17f3fcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following parameters are returned in the array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다음 매개 변수가 배열에 리턴됩니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60f63ef675eaad84d94a18801588c33d4e70cc8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The group information array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;그룹 정보 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d8b96e2500a457acf4588272e736cd8420526ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The user information array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용자 정보 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="033adfafb9edfafc793a30cfe7b72a94f6672923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thread&lt;/strong&gt;extends&lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;스레드&lt;/strong&gt; 확장 &lt;a href=&quot;class.threaded&quot;&gt;스레드&lt;/a&gt; 구현 &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5597828fccac0ad783aa5eb76baa57a03338ad7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Threaded&lt;/strong&gt;implements &lt;a href=&quot;class.collectable&quot;&gt;Collectable&lt;/a&gt;, &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;스레드&lt;/strong&gt; 구현은 &lt;a href=&quot;class.collectable&quot;&gt;Collectable&lt;/a&gt; , &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="992006425875373706025535a9cdcdcae387b407" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Throwable&lt;/strong&gt; is the base interface for any object that can be thrown via a &lt;a href=&quot;language.exceptions&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; statement, including &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; and &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a838c2021a271fc0160d7bfb9609f9cffac04d75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Throwable&lt;/strong&gt; is the base interface for any object that can be thrown via a &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;throw&lt;/em&gt;&lt;/a&gt; statement in PHP 7, including &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; and &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Throwable&lt;/strong&gt; 은 &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; 및 &lt;a href=&quot;class.exception&quot;&gt;Exception을&lt;/a&gt; 포함하여 PHP 7 의 &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;throw&lt;/em&gt;&lt;/a&gt; 문을 통해 throw 될 수있는 모든 객체의 기본 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="da40c34e5421b6716b1170c1e5230b6e70b10fe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Throwable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;던질 수있는&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="05a1716d01f74f303c41f6d2d41bf5755234db73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tip&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f865aa7b77786e5a978098c19998e76332a9e3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfer encodings (value may vary with used library, use of constants is recommended)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;전송 인코딩 (사용 된 라이브러리에 따라 값이 다를 수 있으며 상수 사용을 권장 함)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ee45e66e3125262d92d92485b82cf36e5809aad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transition Array Structure&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c07533ee329833cb68753d20f4f189b6993b2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transliterator::__construct&lt;/strong&gt; ( void )</source>
          <target state="translated">&lt;strong&gt;음 역자 :: __ construct&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="e0ae23d71a9b123db9f0556ca865b2e5185eb18c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transliterator&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;음 역자&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="77c4865441e409a555003fb064289ed03de2767d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Traversable&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;통과 가능&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5dc10ba86fa828383f9382b1cd906ba567f5a2c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type Handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;타입 취급&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08eb8a196e194318c587c5b86bb772866ce0e946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type specification chars&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;타입 지정 문자&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="244b746f6c5fa1688c8f5b6e9e527891a047278b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TypeError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;TypeError는 &lt;/strong&gt;&lt;a href=&quot;class.error&quot;&gt;오류&lt;/a&gt; {를 확장합니다</target>
        </trans-unit>
        <trans-unit id="c675dc3a4ef30691169de5311ac62d2ab051be51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UConverter&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;U 컨버터&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b2fe5bcbf6c617cef8d6f019e90d7971a1285b77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnderflowException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;UnderflowException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="ff790705d027a737fa210c1a5e49c89b45316d21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnexpectedValueException&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;UnexpectedValueException이 &lt;/strong&gt;&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장 함 {</target>
        </trans-unit>
        <trans-unit id="339bd9eefa6bbe47d5e966ad9960f6a032550042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnhandledMatchError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761bf70334966ab0000e0fd61f4cec92dd16f8de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;V8Js&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;V8Js&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="fc1e70e465f03248d49edf57312809f5fb1fc4ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;V8JsException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;V8JsException는&lt;/strong&gt; 확장 &lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5d89d16de31ace7f18e3c670156dcbf69a278c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Valid options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;유효한 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd1ee23706b05a12ec9c8d44adcfaca429223650" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ValueError&lt;/strong&gt;extends&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b560499d039c8b78ffc85ecd8d589acabf1dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VarnishAdmin&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;VarnishAdmin&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f3fc0789554a346ae32aa50a03a8206117e9892b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VarnishLog&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;바니시 로그&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="c1b7aec93dc2c135cc6af4f88106b59bca34983c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VarnishStat&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;VarnishStat&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="09387b16dc0d6e4fff508af7f778dd3f72b644a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Volatile&lt;/strong&gt;extends&lt;a href=&quot;class.threaded&quot;&gt;Threaded&lt;/a&gt;implements &lt;a href=&quot;class.collectable&quot;&gt;Collectable&lt;/a&gt;, &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;휘발성이&lt;/strong&gt; 확장 &lt;a href=&quot;class.threaded&quot;&gt;스레드&lt;/a&gt; 구현에게 &lt;a href=&quot;class.collectable&quot;&gt;수집 가능한&lt;/a&gt; , &lt;a href=&quot;class.traversable&quot;&gt;에 이동을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="2756abf1eaa19230be9bb95e04f5d2e16307d6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Warning&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2f6cf7177643fdf04f343503f630b2534ddf642" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WeakMap&lt;/strong&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;WeakMap&lt;/strong&gt; 은 &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7f531dc1204bafe948b318294636ed1569759cff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WeakRef&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;WeakRef&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="8355326fbff73e9e857ca494a1eb7d5c0367509a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WeakReference&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8410b194f849b7a5550d9f51bf88846d7fb3d45a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WeakReference&lt;/strong&gt;s cannot be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b8535bfc95ffb9895a94b2d75de933d97d5f0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Worker&lt;/strong&gt;extends&lt;a href=&quot;class.thread&quot;&gt;Thread&lt;/a&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;작업자&lt;/strong&gt; 확장 &lt;a href=&quot;class.thread&quot;&gt;스레드&lt;/a&gt; 구현 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a20e108bee743ef4afffee073adc27b834432c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XML parser options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;XML 파서 옵션&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c49d80dc4632d099450d51de6bd560c7ec06a58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::XML()&lt;/strong&gt; is now declared as static method, but can still be called on an &lt;a href=&quot;class.xmlreader&quot;&gt;XMLReader&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0739b81b49a84b4d6c940e053d619099461d95cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::getAttributeNS()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if the attribute doesn't exist.</source>
          <target state="translated">&lt;strong&gt;XMLReader :: getAttributeNS ()는&lt;/strong&gt; 이제 속성이 존재하지 않으면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e086821364fa2b94372d87a370102005561ab11d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::getAttributeNS()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if the attribute doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d743dfb3e582db13160db1c502257d319540df43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::getAttributeNo()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if the attribute doesn't exist.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;속성이 존재하지 않으면 &lt;strong&gt;XMLReader :: getAttributeNo ()는&lt;/strong&gt; 이제 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="df36042cc1888386287cf58e528321d378da5978" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::getAttributeNo()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if the attribute doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403623c9c2de9719bb5256990da5e360df0c3085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader::open()&lt;/strong&gt; is now declared as static method, but can still be called on an &lt;a href=&quot;class.xmlreader&quot;&gt;XMLReader&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f6bc76b6b89e36ad251c0a7a6f0634ba20409c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XMLReader&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;XMLReader&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="081376cce0603d2917a40a8aa176dedea5c4354a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSLTProcessor::__construct&lt;/strong&gt; ( )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd4f9d1d3ba4dc8894e59ba04630141aff70798" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSLTProcessor::__construct&lt;/strong&gt; ( void )</source>
          <target state="translated">&lt;strong&gt;XSLTProcessor :: __ construct&lt;/strong&gt; (void)</target>
        </trans-unit>
        <trans-unit id="56aff22bdc679be1da0b9246f9fba0e86d175088" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSLTProcessor&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;XSLTProcessor&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="561f733bbc74039e7990bfebadf472c5877ae0be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yac::add()&lt;/strong&gt; may fail if cas lock could not obtain, so, if you need the value to be stored properly, you may write codes like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472884ba40dc676e8376f7c26437a0408d8ec4c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yac&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbb7872d25bb5ab797f23ea8da73bcfc3b81e19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Action_Abstract&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-controller-abstract&quot;&gt;Yaf_Controller_Abstract&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Action_Abstract는&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-controller-abstract&quot;&gt;Yaf_Controller_Abstract을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cc2ea3041b0a6d2e881a76dbf1708f45ecddff27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Config_Ini&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-config-abstract&quot;&gt;Yaf_Config_Abstract&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Config_Ini는&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-config-abstract&quot;&gt;Yaf_Config_Abstract의&lt;/a&gt; 구현 &lt;a href=&quot;class.iterator&quot;&gt;반복자&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;가산 근로를&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="c0d9eac77573f9c603c12f34ff3fc731a787e4f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Config_Simple&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-config-abstract&quot;&gt;Yaf_Config_Abstract&lt;/a&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Config_Simple&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-config-abstract&quot;&gt;Yaf_Config_Abstract&lt;/a&gt; 는 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b90451feb249993dc908635ce6732f6442260d23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Controller_Abstract::__construct()&lt;/strong&gt; is final, which means it can not be overridden. You may want to see &lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract::init()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Yaf_Controller_Abstract :: __ construct ()&lt;/strong&gt; 는 final이므로 재정의 할 수 없습니다. 대신 &lt;a href=&quot;yaf-controller-abstract.init&quot;&gt;Yaf_Controller_Abstract :: init ()&lt;/a&gt; 를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="44d1b42f33be36350faa66994ecfe88607fa7b0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Controller_Abstract&lt;/strong&gt; is the heart of Yaf's system. MVC stands for Model-View-Controller and is a design pattern targeted at separating application logic from display logic.</source>
          <target state="translated">&lt;strong&gt;Yaf_Controller_Abstract&lt;/strong&gt; 는 Yaf 시스템의 핵심입니다. MVC는 Model-View-Controller의 약자이며 애플리케이션 로직과 디스플레이 로직을 분리하는 것을 목표로하는 디자인 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="c05be36371c9bca688edaea3db3e17683e13be87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Dispatcher&lt;/strong&gt; also implements the Singleton pattern, meaning only a single instance of it may be available at any given time. This allows it to also act as a registry on which the other objects in the dispatch process may draw.</source>
          <target state="translated">&lt;strong&gt;Yaf_Dispatcher&lt;/strong&gt; 는 또한 Singleton 패턴을 구현하므로 주어진 시간에 단일 인스턴스 만 사용할 수 있습니다. 이를 통해 디스패치 프로세스의 다른 오브젝트가 그릴 수있는 레지스트리 역할도 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2804d28834b8651dbbb6f7f35782286544cd4583" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Dispatcher&lt;/strong&gt; purpose is to initialize the request environment, route the incoming request, and then dispatch any discovered actions; it aggregates any responses and returns them when the process is complete.</source>
          <target state="translated">&lt;strong&gt;Yaf_Dispatcher의&lt;/strong&gt; 목적은 요청 환경을 초기화하고 들어오는 요청을 라우팅 한 다음 발견 된 조치를 전달하는 것입니다. 응답을 집계하고 프로세스가 완료되면 응답을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3483dc1f2710680ba711ebbf6208cdb3cac3c933" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="a1e277908844bdc94fbbb2db6465547176435120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_DispatchFailed&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_DispatchFailed가 &lt;/strong&gt;&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="f17675c4beb3b6f31ffed519b5e4c9e9bf88b24d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_LoadFailed&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_LoadFailed는 &lt;/strong&gt;&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="6e44e8163ed0d7943fc7c3459fc2d0605cbd1b83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_LoadFailed_Action&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_LoadFailed_Action&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed&lt;/a&gt; {를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d8176158ce94534fd374ec94e71f82f1dd0d5972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_LoadFailed_Controller&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_LoadFailed_Controller가 Yaf_Exception_LoadFailed를&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;함&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="a836cd60b8caac50e6ed1c01b32de89dbe0404a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_LoadFailed_Module&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_LoadFailed_Module는&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="6f2af6ff7f271e47f909fc0d29c60b35273c6dae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_LoadFailed_View&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;Yaf_Exception_LoadFailed&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_LoadFailed_View가 Yaf_Exception_LoadFailed를&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-exception-loadfailed&quot;&gt;함&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="5e2d4cefbe611d0d38243b67df2badbba21cc156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_RouterFailed&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_RouterFailed는 &lt;/strong&gt;&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="1a8e08f90cfdf259a7d2bf985ed9a771b5062a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_StartupError&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_StartupError는 &lt;/strong&gt;&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="c6f9eef7901de595f3811c72db27e7b99f82ec07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Exception_TypeError&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Exception_TypeError는 &lt;/strong&gt;&lt;a href=&quot;class.yaf-exception&quot;&gt;Yaf_Exception&lt;/a&gt; {을 확장합니다.</target>
        </trans-unit>
        <trans-unit id="b580af922895c06649f37ca8755206b720ae6a54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Loader&lt;/strong&gt; attempt to load a class only one shot, if failed, depend on &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.use-spl-autoload&quot;&gt;yaf.use_spl_auload&lt;/a&gt;, if this config is On &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader::autoload()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, thus give the chance to other autoload function. if it is Off (by default), &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader::autoload()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, and more important is that a very usefull warning will be triggerd (very usefull to find out why a class could not be loaded).</source>
          <target state="translated">&lt;strong&gt;Yaf_Loader&lt;/strong&gt; 는 클래스를 한 번만로드하려고 시도하지만 실패한 경우 &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.use-spl-autoload&quot;&gt;yaf.use_spl_auload에&lt;/a&gt; 의존 합니다.이 구성이 On 인 경우 &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader :: autoload ()&lt;/a&gt; 는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴 하므로 다른 자동로드 기능에 기회를 제공합니다. Off (기본적으로) 인 경우 &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader :: autoload ()&lt;/a&gt; 는 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 반환 하며, 더 중요한 것은 매우 유용한 경고가 트리거되는 것입니다 (클래스를로드 할 수없는 이유를 찾는 데 매우 유용함).</target>
        </trans-unit>
        <trans-unit id="7e68c1da8e133e1ec9c15a27bd884b550792c0dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Loader&lt;/strong&gt; attempt to load a class only one shot, if failed, depend on &lt;a href=&quot;https://www.php.net/manual/en/yaf.configuration.php#ini.yaf.use-spl-autoload&quot;&gt;yaf.use_spl_auload&lt;/a&gt;, if this config is On &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader::autoload()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, thus give the chance to other autoload function. if it is Off (by default), &lt;a href=&quot;yaf-loader.autoload&quot;&gt;Yaf_Loader::autoload()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;, and more important is that a very useful warning will be triggered (very useful to find out why a class could not be loaded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaf8872cdc1f7ee1a795cdb52c1970ff9197c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Loader&lt;/strong&gt; introduces a comprehensive autoloading solution for Yaf.</source>
          <target state="translated">&lt;strong&gt;Yaf_Loader&lt;/strong&gt; 는 &lt;strong&gt;Yaf를&lt;/strong&gt; 위한 포괄적 인 자동 로딩 솔루션을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="8675d0375f56b43b0647b1a005f6b19926768ff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Loader&lt;/strong&gt; is also designed to load the MVC classes, and the rule is:</source>
          <target state="translated">&lt;strong&gt;Yaf_Loader&lt;/strong&gt; 는 MVC 클래스를로드하도록 설계되었으며 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ea33ecee780b255343433447264ad1be02c58d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Loader&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Loader&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="a926ce162f7b128fd714abc951120b341dd272ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Plugin_Abstract&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Plugin_Abstract&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="8692428ecde28be61259ae19e34f84a9a602644c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Registry&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Registry&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="66e46f45e8954188485101c5dbb9b33b5b84e1d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Abstrace::getParam()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Abstrace::getParam()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93e2955739e93381aeea90b7b23a98c8b56e6b68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Abstract::isCli()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Abstract::isCli()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40ffee94336e89a5c80b6041ab80b0e27d7e5491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Abstract&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Abstract&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="9b7525c1cc43564dc6b50fba4a37b26825e92e1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Http&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Http는&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract을&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="be64e92e7b69496ff52780b603d11cf52382f507" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Simple&lt;/strong&gt; is particularlly used for test puporse. ie. simulate some espacial request under CLI mode.</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Simple&lt;/strong&gt; 은 특히 ​​테스트 puporse에 사용됩니다. 즉. CLI 모드에서 일부 espacial 요청을 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="7ebdbbd173af945442ee54769e581c34a57029aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Request_Simple&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Request_Simple&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="da5df2dbc7440a674af45afe508380bf2bac5279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Response_Abstract::cleanHeaders()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yaf_Response_Abstract::cleanHeaders()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df05dfd0598e2ac4af1d5ee940318959eb620926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Response_Abstract&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Response_Abstract&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="68b46b65b987d5a653907637fcd191482dba6228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Interface::route()&lt;/strong&gt; is the only method that a custom route should implement.</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Interface :: route ()&lt;/strong&gt; 는 사용자 지정 경로가 구현해야하는 유일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d7cf4e989ea7f7dab2ac54fd9cd0ec37ef282d77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Interface&lt;/strong&gt; used for developer defined their custom route.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;개발자에 사용되는 &lt;strong&gt;Yaf_Route_Interface&lt;/strong&gt; 는 사용자 지정 경로를 정의했습니다.</target>
        </trans-unit>
        <trans-unit id="c5a0ab3e367b163d72eefa7d35223c44d277918b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Interface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Interface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f390ff596f58e219cdcf26c68433b81926e5f54e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Map&lt;/strong&gt; is a built-in route, it simply convert a URI endpoint (that part of the URI which comes after the base URI: see &lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract::setBaseUri()&lt;/a&gt;) to a controller name or action name(depends on the parameter passed to &lt;a href=&quot;yaf-route-map.construct&quot;&gt;Yaf_Route_Map::__construct()&lt;/a&gt;) in following rule: A =&amp;gt; controller A. A/B/C =&amp;gt; controller A_B_C. A/B/C/D/E =&amp;gt; controller A_B_C_D_E.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccc73a47e1491649f54aa5c19f5e487ec1ddbe8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Map&lt;/strong&gt; is a built-in route, it simply convert a URI endpoint (that part of the URI which comes after the base URI: see &lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract::setBaseUri()&lt;/a&gt;) to a controller name or action name(depends on the paramter passed to &lt;a href=&quot;yaf-route-map.construct&quot;&gt;Yaf_Route_Map::__construct()&lt;/a&gt;) in following rule: A =&amp;gt; controller A. A/B/C =&amp;gt; controller A_B_C. A/B/C/D/E =&amp;gt; controller A_B_C_D_E.</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Map&lt;/strong&gt; 은 기본 제공 경로이며, 단순히 URI 엔드 포인트 (기본 URI 다음에 오는 URI 부분 : &lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract :: setBaseUri () 참조&lt;/a&gt; )를 컨트롤러 이름 또는 조치 이름으로 변환합니다 ( &lt;a href=&quot;yaf-route-map.construct&quot;&gt;Yaf_Route_Map에&lt;/a&gt; 전달 된 매개 변수에 따라 다름) 다음 규칙의 :: __ construct () ) : A =&amp;gt; 컨트롤러 A. A / B / C =&amp;gt; 컨트롤러 A_B_C. A / B / C / D / E =&amp;gt; 컨트롤러 A_B_C_D_E.</target>
        </trans-unit>
        <trans-unit id="f82d1b2bad149c86797366ce85639c45d22612f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Map&lt;/strong&gt;implements &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Map&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="250cf32f058924ff7ae40e16ba598cabdfb5cdeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Regex&lt;/strong&gt; is the most flexible route among the Yaf built-in routes.</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Regex&lt;/strong&gt; 는 Yaf 내장 경로 중에서 가장 유연한 경로입니다.</target>
        </trans-unit>
        <trans-unit id="db83a6d213037d9df6966e68e5c9e298a9421fbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Regex&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt;implements &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Regex&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; 는 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="3be93af1759a4f1c2df4d4dcab3dd476ca9d8ca5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Rewrite&lt;/strong&gt;extends&lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt;implements &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Rewrite&lt;/strong&gt; 확장 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; 는 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="00219be9aa9a3dccca3d88e330aa76ee0fbe73d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt; will match the query string, and find the route info.</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt; 은 쿼리 문자열과 일치하고 경로 정보를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b6daf64424e0232d76cc54fc0e18870170e9dbbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt;implements &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Simple&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="b853dfd2fa03af02241352c793986c1c890b39de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Static&lt;/strong&gt;implements &lt;a href=&quot;class.yaf-router&quot;&gt;Yaf_Router&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Static&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-router&quot;&gt;Yaf_Router&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e64819d731771c80160c081ba2929c11cb2c9545" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Route_Supervar&lt;/strong&gt;implements &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Route_Supervar&lt;/strong&gt; 는 &lt;a href=&quot;class.yaf-route-interface&quot;&gt;Yaf_Route_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="4f8c652685515656ba338235642f9a07146f9f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Router&lt;/strong&gt; comes preconfigured with a default route &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;, which will match URIs in the shape of controller/action. Additionally, a module name may be specified as the first path element, allowing URIs of the form module/controller/action. Finally, it will also match any additional parameters appended to the URI by default - controller/action/var1/value1/var2/value2.</source>
          <target state="translated">&lt;strong&gt;Yaf_Router는&lt;/strong&gt; 기본 경로로 미리 구성되어 있습니다 &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt; 컨트롤러 / 액션의 형태로 URI를 일치합니다. 또한 모듈 이름을 첫 번째 경로 요소로 지정하여 모듈 / 컨트롤러 / 액션 형식의 URI를 허용 할 수 있습니다. 마지막으로, 기본적으로 URI에 추가 된 추가 매개 변수 인 controller / action / var1 / value1 / var2 / value2 와도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="a9f469b1b88ab260399cea9db1db76982f323867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Router&lt;/strong&gt; is the standard framework router. Routing is the process of taking a URI endpoint (that part of the URI which comes after the base URI: see &lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract::setBaseUri()&lt;/a&gt;) and decomposing it into parameters to determine which module, controller, and action of that controller should receive the request. This values of the module, controller, action and other parameters are packaged into a &lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; object which is then processed by &lt;a href=&quot;class.yaf-dispatcher&quot;&gt;Yaf_Dispatcher&lt;/a&gt;. Routing occurs only once: when the request is initially received and before the first controller is dispatched. &lt;strong&gt;Yaf_Router&lt;/strong&gt; is designed to allow for mod_rewrite-like functionality using pure PHP structures. It is very loosely based on Ruby on Rails routing and does not require any prior knowledge of webserver URL rewriting. It is designed to work with a single Apache mod_rewrite rule (one of):</source>
          <target state="translated">&lt;strong&gt;Yaf_Router&lt;/strong&gt; 는 표준 프레임 워크 라우터입니다. 라우팅은 URI 엔드 포인트 (기본 URI 뒤에 오는 URI의 일부 : &lt;a href=&quot;yaf-request-abstract.setbaseuri&quot;&gt;Yaf_Request_Abstract :: setBaseUri () 참조&lt;/a&gt; )를 매개 변수로 분해하여 해당 컨트롤러의 어떤 모듈, 컨트롤러 및 조치를 수신해야 하는지를 판별하는 프로세스입니다 . 의뢰. 모듈, 제어기, 조치 및 기타 매개 변수의이 값은 &lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; 오브젝트 로 패키지 된 다음 &lt;a href=&quot;class.yaf-dispatcher&quot;&gt;Yaf_Dispatcher에&lt;/a&gt; 의해 처리됩니다 . 라우팅은 한 번만 발생합니다 : 요청이 처음 수신 될 때와 첫 번째 컨트롤러가 전달되기 전에. &lt;strong&gt;Yaf_Router&lt;/strong&gt;순수 PHP 구조를 사용하여 mod_rewrite와 유사한 기능을 허용하도록 설계되었습니다. Ruby on Rails 라우팅을 기반으로하며 웹 서버 URL 재 작성에 대한 사전 지식이 필요하지 않습니다. 단일 Apache mod_rewrite 규칙 중 하나를 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="e969071837dd730ee5f89389e023b599eae77f20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Router&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Router&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="0d1efb6ef790f15997cd727a0e8673d4a5141677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Server_Exception::getType()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yaf_Server_Exception::getType()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e47d706ef34ce77d3b4d7165efd9ec4e06fe82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_Session&lt;/strong&gt;implements &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;, &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_Session&lt;/strong&gt; 은 &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; , &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; , &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="cc90c1060cbf8da97fe4a87038e841bdbb374527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_View_Interface::clear()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yaf_View_Interface::clear()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3d0aa327911e3a3edbf168b3a92d51724937be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_View_Interface&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_View_Interface&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="678cfb19ba02cc6c423b846f91cdaa1c0b2c486c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_View_Simple&lt;/strong&gt; is the built-in template engine in Yaf, it is a simple but fast template engine, and only support PHP script template.</source>
          <target state="translated">&lt;strong&gt;Yaf_View_Simple&lt;/strong&gt; 은 &lt;strong&gt;Yaf&lt;/strong&gt; 에 내장 된 템플릿 엔진으로, 단순하지만 빠른 템플릿 엔진이며 PHP 스크립트 템플릿 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d4fba98c4cec7cb1895fe9784442a1c92ccbcf4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yaf_View_Simple&lt;/strong&gt;implements &lt;a href=&quot;class.yaf-view-interface&quot;&gt;Yaf_View_Interface&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yaf_View_Simple&lt;/strong&gt; 은 &lt;a href=&quot;class.yaf-view-interface&quot;&gt;Yaf_View_Interface&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="7709032a7bf4b14a5354fa4e671ce3cb85bb4c7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yar_Client&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yar_Client&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4da0bdcf6a419cbb6fb2ea610f8a58b9b5bc6296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yar_Client_Exception&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yar_Client_Exception이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="02432cae3d3aab973b3ea6f1f02abb5dea0e1238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yar_Concurrent_Client&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yar_Concurrent_Client&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="54a9e837cc6e0dfbd608277a5b5db3b9275bed10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yar_Server&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;Yar_Server&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="965ba0001667127f111cbbbd0cf2ac3af6c9f251" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yar_Server_Exception&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;Yar_Server_Exception이 &lt;/strong&gt;&lt;a href=&quot;class.exception&quot;&gt;예외&lt;/a&gt; {를 확장 함</target>
        </trans-unit>
        <trans-unit id="a479dbf28d5fb269d8e1b6ddc36cd8c9c3de9cc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZipArchive&lt;/strong&gt;implements &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;ZipArchive&lt;/strong&gt; 는 &lt;a href=&quot;class.countable&quot;&gt;Countable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="e464d008b9ec8f2fb07f28bf909d965ee03e0de2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Zookeeper&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f67164af7e1b8e16ef82dc70e61c17555cfdc9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperAuthenticationException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e20283fee64fd21735f99c89964f1ccca086bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperConfig&lt;/strong&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb0fc7c0a408d19ce860228cf3b613ee1866cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperConnectionException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb057ad65b646d94846242b360c18e1eca6997b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperException&lt;/strong&gt;extends&lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f15a153f5d8e0cb81f3cd7b3cdf57683e3309f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperMarshallingException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d27ce0734e3f6a96614fab7c7d7ddd10a24c21b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperNoNodeException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0232d1f94a8318f830c0c9ff66a0b1d57278a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperOperationTimeoutException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413185f5bfd58d89284f7851f4361a51a085bbf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZookeeperSessionException&lt;/strong&gt;extends&lt;a href=&quot;class.zookeeperexception&quot;&gt;ZookeeperException&lt;/a&gt; {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac13d94ec2848ec2298c0f916926ec67ca58fab5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;__halt_compiler()&lt;/strong&gt; can only be used from the outermost scope.</source>
          <target state="translated">&lt;strong&gt;__halt_compiler ()&lt;/strong&gt; 는 가장 바깥 쪽 범위에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1341d84ee0130b00ee39518484e59702105e3dc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;add()&lt;/strong&gt;, &lt;strong&gt;remove()&lt;/strong&gt; and &lt;strong&gt;contains()&lt;/strong&gt; are all O(1).</source>
          <target state="translated">&lt;strong&gt;add ()&lt;/strong&gt; , &lt;strong&gt;remove ()&lt;/strong&gt; 및 &lt;strong&gt;contains ()&lt;/strong&gt; 는 모두 O (1)입니다.</target>
        </trans-unit>
        <trans-unit id="cdffedae0a53be9a07f8cd97117971a90b537ef4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apache_child_terminate()&lt;/strong&gt; will register the Apache process executing the current PHP request for termination once execution of PHP code is completed. It may be used to terminate a process after a script with high memory consumption has been run as memory will usually only be freed internally but not given back to the operating system.</source>
          <target state="translated">&lt;strong&gt;apache_child_terminate ()&lt;/strong&gt; 는 PHP 코드 실행이 완료되면 종료를 위해 현재 PHP 요청을 실행하는 Apache 프로세스를 등록합니다. 메모리가 일반적으로 내부적으로 해제되지만 운영 체제에 다시 제공되지 않으므로 메모리 소비가 높은 스크립트가 실행 된 후 프로세스를 종료하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6b2b210a9236e64717f175dd7b0eaec4e0f09a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apache_reset_timeout()&lt;/strong&gt; resets the Apache write timer, which defaults to 300 seconds. With &lt;code&gt;set_time_limit(0);
   ignore_user_abort(true)&lt;/code&gt; and periodic &lt;strong&gt;apache_reset_timeout()&lt;/strong&gt; calls, Apache can theoretically run forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130b637c34ccb7e292b728a43f255bfbd64a03fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apache_reset_timeout()&lt;/strong&gt; resets the Apache write timer, which defaults to 300 seconds. With &lt;em&gt;set_time_limit(0); ignore_user_abort(true)&lt;/em&gt; and periodic &lt;strong&gt;apache_reset_timeout()&lt;/strong&gt; calls, Apache can theoretically run forever.</source>
          <target state="translated">&lt;strong&gt;apache_reset_timeout ()&lt;/strong&gt; 은 Apache 쓰기 타이머를 재설정하며 기본값은 300 초입니다. 부착 &lt;em&gt;하고 set_time_limit (0); ignore_user_abort (true)&lt;/em&gt; 및 주기적 &lt;strong&gt;apache_reset_timeout ()&lt;/strong&gt; 호출에서 Apache는 이론적으로 영원히 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d1eb7cb3be64692db6551d41d1ee0438b22ee84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apache_setenv()&lt;/strong&gt; can be paired up with &lt;a href=&quot;function.apache-getenv&quot;&gt;apache_getenv()&lt;/a&gt; across separate pages or for setting variables to pass to Server Side Includes (.shtml) that have been included in PHP scripts.</source>
          <target state="translated">&lt;strong&gt;apache_setenv ()&lt;/strong&gt; 는 별도의 페이지에서 또는 PHP 스크립트에 포함 된 서버 측 포함 (.shtml)에 전달할 변수를 설정하기 위해 &lt;a href=&quot;function.apache-getenv&quot;&gt;apache_getenv ()&lt;/a&gt; 와 쌍을 이룰 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="595ac26395724ba40b57d463219cc8cd44f8d475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apache_setenv()&lt;/strong&gt; sets the value of the Apache environment variable specified by &lt;code&gt;variable&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;apache_setenv는 ()&lt;/strong&gt; 에 의해 지정된 아파치 환경 변수의 값을 설정하는 &lt;code&gt;variable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="461482ae67b888d127ebf5af12de60e6282a2228" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apc_cache_info()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;apc_cache_info()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69b8af5411130b83a27557a8f6d1358ed09bb96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apc_cas()&lt;/strong&gt; updates an already existing integer value if the &lt;code&gt;old&lt;/code&gt; parameter matches the currently stored value with the value of the &lt;code&gt;new&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;apc_cas는 ()&lt;/strong&gt; 경우 기존의 정수 값을 업데이트 &lt;code&gt;old&lt;/code&gt; 매개 변수의 값을 현재 저장된 값과 일치하는 &lt;code&gt;new&lt;/code&gt; 매개 변수를.</target>
        </trans-unit>
        <trans-unit id="e7b354836db60e26a801366f7dcdcd673da65368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;apcu_cas()&lt;/strong&gt; updates an already existing integer value if the &lt;code&gt;old&lt;/code&gt; parameter matches the currently stored value with the value of the &lt;code&gt;new&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;apcu_cas는 ()&lt;/strong&gt; 경우 기존의 정수 값을 업데이트 &lt;code&gt;old&lt;/code&gt; 매개 변수의 값을 현재 저장된 값과 일치하는 &lt;code&gt;new&lt;/code&gt; 매개 변수를.</target>
        </trans-unit>
        <trans-unit id="c4fcd49700f9ede240dde914b0f7e56b62112bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array()&lt;/strong&gt; is a language construct used to represent literal arrays, and not a regular function.</source>
          <target state="translated">&lt;strong&gt;array ()&lt;/strong&gt; 는 일반 함수가 아닌 리터럴 배열을 나타내는 데 사용되는 언어 구조입니다.</target>
        </trans-unit>
        <trans-unit id="1c8cb61d4b58df3ee54d5199cac4d519c7a93129" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_column()&lt;/strong&gt; returns the values from a single column of the &lt;code&gt;array&lt;/code&gt;, identified by the &lt;code&gt;column_key&lt;/code&gt;. Optionally, an &lt;code&gt;index_key&lt;/code&gt; may be provided to index the values in the returned array by the values from the &lt;code&gt;index_key&lt;/code&gt; column of the input array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf1f084c894f9444356339fbeba750fbcc40b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_column()&lt;/strong&gt; returns the values from a single column of the &lt;code&gt;input&lt;/code&gt;, identified by the &lt;code&gt;column_key&lt;/code&gt;. Optionally, an &lt;code&gt;index_key&lt;/code&gt; may be provided to index the values in the returned array by the values from the &lt;code&gt;index_key&lt;/code&gt; column of the input array.</source>
          <target state="translated">&lt;strong&gt;() array_column&lt;/strong&gt; 의 단일 열에서 값을 반환 &lt;code&gt;input&lt;/code&gt; 에 의해 식별 &lt;code&gt;column_key&lt;/code&gt; . 선택적으로, 입력 배열 의 &lt;code&gt;index_key&lt;/code&gt; 열의 값으로 반환 된 배열의 값을 인덱싱하기 위해 &lt;code&gt;index_key&lt;/code&gt; 가 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8154c430c365bcd653d7af15d3db38379e01dea4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_count_values()&lt;/strong&gt; returns an array using the values of &lt;code&gt;array&lt;/code&gt; as keys and their frequency in &lt;code&gt;array&lt;/code&gt; as values.</source>
          <target state="translated">&lt;strong&gt;array_count_values ()&lt;/strong&gt; 의 값을 사용하여 배열을 반환 &lt;code&gt;array&lt;/code&gt; 키의 빈도로 &lt;code&gt;array&lt;/code&gt; 값있다.</target>
        </trans-unit>
        <trans-unit id="d88bb561b8fa5e03199a133016d803a9815f544b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_flip()&lt;/strong&gt; returns an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; in flip order, i.e. keys from &lt;code&gt;array&lt;/code&gt; become values and values from &lt;code&gt;array&lt;/code&gt; become keys.</source>
          <target state="translated">&lt;strong&gt;array_flip ()&lt;/strong&gt; 은 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 을 플립 순서로 반환합니다 . 즉, &lt;code&gt;array&lt;/code&gt; 키는 값이되고 &lt;code&gt;array&lt;/code&gt; 값은 키가됩니다.</target>
        </trans-unit>
        <trans-unit id="21d9d70caaacf8c9d1a85525370474618ee1513b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_flip()&lt;/strong&gt; returns an array in flip order, i.e. keys from &lt;code&gt;array&lt;/code&gt; become values and values from &lt;code&gt;array&lt;/code&gt; become keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5c59ed844b9a367aadba216974bade6d68cf0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array1&lt;/code&gt; that are present in all the arguments. Note that keys are preserved.</source>
          <target state="translated">&lt;strong&gt;array_intersect ()&lt;/strong&gt; 는 모든 인수에 존재하는 모든 &lt;code&gt;array1&lt;/code&gt; 값을 포함하는 배열을 리턴합니다 . 키는 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b6d18dfdee1048634d03c1d8ac1518c19175d55d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array&lt;/code&gt; that are present in all the arguments. Note that keys are preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b1fcb18f999be4417157e3e3ba2d998bc3801e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_assoc()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array1&lt;/code&gt; that are present in all the arguments. Note that the keys are also used in the comparison unlike in &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;array_intersect_assoc ()&lt;/strong&gt; 는 모든 인수에있는 &lt;code&gt;array1&lt;/code&gt; 의 모든 값을 포함하는 배열을 반환합니다 . &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect ()&lt;/a&gt; 와 달리 키는 비교에도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c38bc32153e054500c01882c0ee0c257d82b4dd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_assoc()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array&lt;/code&gt; that are present in all the arguments. Note that the keys are also used in the comparison unlike in &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746d01f45043b70ea8cfb3a83fa824b4e911e3cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_key()&lt;/strong&gt; returns an array containing all the entries of &lt;code&gt;array1&lt;/code&gt; which have keys that are present in all the arguments.</source>
          <target state="translated">&lt;strong&gt;array_intersect_key ()&lt;/strong&gt; 는 모든 인수에 존재하는 키를 가진 &lt;code&gt;array1&lt;/code&gt; 의 모든 항목을 포함하는 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b3eed52a37a2af2023b030e95ce8964668966297" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_key()&lt;/strong&gt; returns an array containing all the entries of &lt;code&gt;array&lt;/code&gt; which have keys that are present in all the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0556a9a4a91aad8b59342976f88009ea43d6fa8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_uassoc()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array1&lt;/code&gt; that are present in all the arguments. Note that the keys are used in the comparison unlike in &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;array_intersect_uassoc ()&lt;/strong&gt; 는 모든 인수에있는 &lt;code&gt;array1&lt;/code&gt; 의 모든 값을 포함하는 배열을 반환합니다 . &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect ()&lt;/a&gt; 와 달리 키는 비교에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c064ac83dde53bfb4aa56f37330fa41523dc1134" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_uassoc()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array&lt;/code&gt; that are present in all the arguments. Note that the keys are used in the comparison unlike in &lt;a href=&quot;function.array-intersect&quot;&gt;array_intersect()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb34ac2a672e549f3050bbf2a5e7630e94367d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_ukey()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array1&lt;/code&gt; which have matching keys that are present in all the arguments.</source>
          <target state="translated">&lt;strong&gt;array_intersect_ukey ()&lt;/strong&gt; 는 모든 인수에 일치하는 키가있는 &lt;code&gt;array1&lt;/code&gt; 의 모든 값을 포함하는 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c5903c007044f6794d813e5b175c5336ff76fbaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_intersect_ukey()&lt;/strong&gt; returns an array containing all the values of &lt;code&gt;array&lt;/code&gt; which have matching keys that are present in all the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf60505d0a532119439dbf87579a4ca800ba1c46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_key_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the given &lt;code&gt;key&lt;/code&gt; is set in the array. &lt;code&gt;key&lt;/code&gt; can be any value possible for an array index.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;지정된 &lt;code&gt;key&lt;/code&gt; 가 배열에 설정된 경우 &lt;strong&gt;array_key_exists ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;code&gt;key&lt;/code&gt; 는 배열 인덱스에 가능한 모든 값이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a183f2fc509f61f8ebef3121045ac0471d102d1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_key_exists()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the given &lt;code&gt;key&lt;/code&gt; is set in the array. &lt;code&gt;key&lt;/code&gt; can be any value possible for an array index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16a0b1913f813991176d21733ea46172ded2bd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_key_exists()&lt;/strong&gt; will search for the keys in the first dimension only. Nested keys in multidimensional arrays will not be found.</source>
          <target state="translated">&lt;strong&gt;array_key_exists ()&lt;/strong&gt; 는 첫 번째 차원에서만 키를 검색합니다. 다차원 배열의 중첩 키를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6212d48ec3ec0c47f2fa4a835fe3ffe9e5d5dc5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_keys()&lt;/strong&gt; returns the keys, numeric and string, from the &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;array_keys ()&lt;/strong&gt; 는 &lt;code&gt;array&lt;/code&gt; 에서 키와 숫자 및 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cbbcbb78e589d3316a1b99fd2c89d02b4c8a1e38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_map()&lt;/strong&gt; returns an array containing all the elements of &lt;code&gt;array1&lt;/code&gt; after applying the &lt;code&gt;callback&lt;/code&gt; function to each one. The number of parameters that the &lt;code&gt;callback&lt;/code&gt; function accepts should match the number of arrays passed to the &lt;strong&gt;array_map()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array_map ()&lt;/strong&gt; 은 각각에 &lt;code&gt;callback&lt;/code&gt; 함수를 적용한 후 &lt;code&gt;array1&lt;/code&gt; 의 모든 요소를 ​​포함하는 배열을 반환합니다 . &lt;code&gt;callback&lt;/code&gt; 함수가 허용 하는 매개 변수 수는 &lt;strong&gt;array_map ()에&lt;/strong&gt; 전달 된 배열 수와 일치해야합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2d86b3f43f19609c29647151bbe0285c6fbdc0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_map()&lt;/strong&gt; returns an array containing the results of applying the &lt;code&gt;callback&lt;/code&gt; to the corresponding index of &lt;code&gt;array&lt;/code&gt; (and &lt;code&gt;arrays&lt;/code&gt; if more arrays are provided) used as arguments for the callback. The number of parameters that the &lt;code&gt;callback&lt;/code&gt; function accepts should match the number of arrays passed to &lt;strong&gt;array_map()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccc11b397ba15062f31d75775b861f43d404247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_merge_recursive()&lt;/strong&gt; merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array.</source>
          <target state="translated">&lt;strong&gt;array_merge_recursive ()&lt;/strong&gt; 는 하나 이상의 배열 요소를 병합하여 하나의 값이 이전 배열의 끝에 추가되도록합니다. 결과 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="732272923c21343efa3fa0472a94378ba9b37b7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_multisort()&lt;/strong&gt; can be used to sort several arrays at once, or a multi-dimensional array by one or more dimensions.</source>
          <target state="translated">&lt;strong&gt;array_multisort ()&lt;/strong&gt; 를 사용하여 여러 배열을 한 번에 정렬하거나 다차원 배열을 하나 이상의 차원으로 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="658a4962cef4b00a59a156c78bbed563a646bade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_pad()&lt;/strong&gt; returns a copy of the &lt;code&gt;array&lt;/code&gt; padded to size specified by &lt;code&gt;length&lt;/code&gt; with value &lt;code&gt;value&lt;/code&gt;. If &lt;code&gt;length&lt;/code&gt; is positive then the array is padded on the right, if it's negative then on the left. If the absolute value of &lt;code&gt;length&lt;/code&gt; is less than or equal to the length of the &lt;code&gt;array&lt;/code&gt; then no padding takes place. It is possible to add at most 1048576 elements at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec7ce38f7e6940d76719aa2def58c854f06cffe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_pad()&lt;/strong&gt; returns a copy of the &lt;code&gt;array&lt;/code&gt; padded to size specified by &lt;code&gt;size&lt;/code&gt; with value &lt;code&gt;value&lt;/code&gt;. If &lt;code&gt;size&lt;/code&gt; is positive then the array is padded on the right, if it's negative then on the left. If the absolute value of &lt;code&gt;size&lt;/code&gt; is less than or equal to the length of the &lt;code&gt;array&lt;/code&gt; then no padding takes place. It is possible to add at most 1048576 elements at a time.</source>
          <target state="translated">&lt;strong&gt;array_pad ()&lt;/strong&gt; 는 value &lt;code&gt;value&lt;/code&gt; 으로 &lt;code&gt;size&lt;/code&gt; 로 지정된 크기 로 채워진 &lt;code&gt;array&lt;/code&gt; 의 복사본을 반환 합니다 . 경우 &lt;code&gt;size&lt;/code&gt; 긍정적 그것의 부정은 다음 왼쪽에있는 경우 다음 배열, 오른쪽에 채워집니다. &lt;code&gt;size&lt;/code&gt; 의 절대 값이 &lt;code&gt;array&lt;/code&gt; 의 길이보다 작거나 같으면 패딩이 발생하지 않습니다. 한 번에 최대 1048576 개의 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da1873bbca93b92da8dae074febf650dad16a672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_pop()&lt;/strong&gt; pops and returns the value of the last element of &lt;code&gt;array&lt;/code&gt;, shortening the &lt;code&gt;array&lt;/code&gt; by one element.</source>
          <target state="translated">&lt;strong&gt;() array_pop&lt;/strong&gt; 나타나고 되돌의 마지막 요소의 값 &lt;code&gt;array&lt;/code&gt; 단축, &lt;code&gt;array&lt;/code&gt; 하나 개의 소자로.</target>
        </trans-unit>
        <trans-unit id="78ffb18303e3d787efd0fca729dc90cb431182fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_product()&lt;/strong&gt; returns the product of values in an array.</source>
          <target state="translated">&lt;strong&gt;array_product ()&lt;/strong&gt; 는 배열에서 값의 곱을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4a422d29c2f0aca6a0ef494ce29f75c28d573316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_push()&lt;/strong&gt; treats &lt;code&gt;array&lt;/code&gt; as a stack, and pushes the passed variables onto the end of &lt;code&gt;array&lt;/code&gt;. The length of &lt;code&gt;array&lt;/code&gt; increases by the number of variables pushed. Has the same effect as:</source>
          <target state="translated">&lt;strong&gt;array_push ()&lt;/strong&gt; 는 &lt;code&gt;array&lt;/code&gt; 을 스택으로 취급 하고 전달 된 변수를 &lt;code&gt;array&lt;/code&gt; 의 끝으로 푸시합니다 . &lt;code&gt;array&lt;/code&gt; 의 길이는 푸시 된 변수의 수만큼 증가합니다. 다음과 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4fe207e2a0672af2628ca185faa080bd925f73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_reduce()&lt;/strong&gt; applies iteratively the &lt;code&gt;callback&lt;/code&gt; function to the elements of the &lt;code&gt;array&lt;/code&gt;, so as to reduce the array to a single value.</source>
          <target state="translated">&lt;strong&gt;array_reduce ()&lt;/strong&gt; 는 배열을 단일 값으로 줄이기 위해 &lt;code&gt;array&lt;/code&gt; 의 요소에 &lt;code&gt;callback&lt;/code&gt; 함수를 반복적으로 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="6987b77cf9d2477c5c5a6cde78a33e2f6d88f4f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace()&lt;/strong&gt; is not recursive : it will replace values in the first array by whatever type is in the second array.</source>
          <target state="translated">&lt;strong&gt;array_replace ()&lt;/strong&gt; 는 재귀 적이 지 않습니다. 첫 번째 배열의 값을 두 번째 배열의 유형으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="9cbf7439bdebf46e87549954b9791f6d8dd6a77d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace()&lt;/strong&gt; replaces the values of &lt;code&gt;array1&lt;/code&gt; with values having the same keys in each of the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later arrays overwriting the previous values.</source>
          <target state="translated">&lt;strong&gt;array_replace ()&lt;/strong&gt; 는 &lt;code&gt;array1&lt;/code&gt; 의 값을 다음 각 배열에서 동일한 키를 가진 값으로 바꿉니다 . 첫 번째 배열의 키가 두 번째 배열에 있으면 해당 값이 두 번째 배열의 값으로 대체됩니다. 키가 첫 번째 배열이 아닌 두 번째 배열에 있으면 첫 번째 배열에 키가 생성됩니다. 키가 첫 번째 배열에만 존재하면 그대로 유지됩니다. 여러 배열이 교체를 위해 전달되면 순서대로 처리되고 나중 배열은 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="05e251ecbd728e5f27f54d789b28ca6392a69319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace()&lt;/strong&gt; replaces the values of &lt;code&gt;array&lt;/code&gt; with values having the same keys in each of the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later arrays overwriting the previous values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1f4399b7a8eabe4452bd94b262df36296ed41c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace_recursive()&lt;/strong&gt; is recursive : it will recurse into arrays and apply the same process to the inner value.</source>
          <target state="translated">&lt;strong&gt;array_replace_recursive ()&lt;/strong&gt; 는 재귀 적입니다. 배열로 재귀하고 내부 프로세스에 동일한 프로세스를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="2dc667f59c47dee4891340ac63fdfb1a2d0cae1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace_recursive()&lt;/strong&gt; replaces the values of &lt;code&gt;array1&lt;/code&gt; with the same values from all the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later array overwriting the previous values.</source>
          <target state="translated">&lt;strong&gt;array_replace_recursive ()&lt;/strong&gt; 는 &lt;code&gt;array1&lt;/code&gt; 의 값을 다음의 모든 배열에서 같은 값으로 바꿉니다 . 첫 번째 배열의 키가 두 번째 배열에 있으면 해당 값이 두 번째 배열의 값으로 대체됩니다. 키가 첫 번째 배열이 아닌 두 번째 배열에 있으면 첫 번째 배열에 키가 생성됩니다. 키가 첫 번째 배열에만 존재하면 그대로 유지됩니다. 여러 배열이 교체를 위해 전달되면 순서대로 처리되고 나중 배열은 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="1dfe9a3b272241d64f195b15f301a85d4c04ec7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_replace_recursive()&lt;/strong&gt; replaces the values of &lt;code&gt;array&lt;/code&gt; with the same values from all the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later array overwriting the previous values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d124b7a0cd850151aa3ca1516720c3f7b808d695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_shift()&lt;/strong&gt; shifts the first value of the &lt;code&gt;array&lt;/code&gt; off and returns it, shortening the &lt;code&gt;array&lt;/code&gt; by one element and moving everything down. All numerical array keys will be modified to start counting from zero while literal keys won't be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f9f90536416ef198fcd67b2a6cc53778a3ff13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_shift()&lt;/strong&gt; shifts the first value of the &lt;code&gt;array&lt;/code&gt; off and returns it, shortening the &lt;code&gt;array&lt;/code&gt; by one element and moving everything down. All numerical array keys will be modified to start counting from zero while literal keys won't be touched.</source>
          <target state="translated">&lt;strong&gt;array_shift ()&lt;/strong&gt; 는 &lt;code&gt;array&lt;/code&gt; 의 첫 번째 값을 끄고 반환 하여 하나의 요소만큼 &lt;code&gt;array&lt;/code&gt; 을 줄이고 모든 것을 아래로 이동합니다. 모든 숫자 형 배열 키는 0부터 카운트를 시작하도록 수정되며 리터럴 키는 터치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2b3bc5654e94940047818f2c1e9412bc13aff2d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_slice()&lt;/strong&gt; returns the sequence of elements from the array &lt;code&gt;array&lt;/code&gt; as specified by the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;strong&gt;array_slice ()&lt;/strong&gt; 는 &lt;code&gt;offset&lt;/code&gt; 및 &lt;code&gt;length&lt;/code&gt; 매개 변수 로 지정된 배열 &lt;code&gt;array&lt;/code&gt; 에서 요소 시퀀스를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ece916994ea12f270c2c52166ac64e03108a50c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_slice()&lt;/strong&gt; will reorder and reset the integer array indices by default. This behaviour can be changed by setting &lt;code&gt;preserve_keys&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;. String keys are always preserved, regardless of this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e80a25dbec9dfbe083e6d589f76872b91a7927" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_sum()&lt;/strong&gt; returns the sum of values in an array.</source>
          <target state="translated">&lt;strong&gt;array_sum ()&lt;/strong&gt; 은 배열의 값 합계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2c53b12266ef89b442353991d8b500709960d8da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_udiff_assoc()&lt;/strong&gt; returns an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; containing all the values from &lt;code&gt;array1&lt;/code&gt; that are not present in any of the other arguments. Note that the keys are used in the comparison unlike &lt;a href=&quot;function.array-diff&quot;&gt;array_diff()&lt;/a&gt; and &lt;a href=&quot;function.array-udiff&quot;&gt;array_udiff()&lt;/a&gt;. The comparison of arrays' data is performed by using an user-supplied callback. In this aspect the behaviour is opposite to the behaviour of &lt;a href=&quot;function.array-diff-assoc&quot;&gt;array_diff_assoc()&lt;/a&gt; which uses internal function for comparison.</source>
          <target state="translated">&lt;strong&gt;array_udiff_assoc ()&lt;/strong&gt; 는 다른 인수에없는 &lt;code&gt;array1&lt;/code&gt; 의 모든 값을 포함 하는 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 을 반환합니다 . &lt;a href=&quot;function.array-diff&quot;&gt;array_diff ()&lt;/a&gt; 및 &lt;a href=&quot;function.array-udiff&quot;&gt;array_udiff ()&lt;/a&gt; 와 달리 키는 비교에 사용됩니다 . 배열 데이터의 비교는 사용자 제공 콜백을 사용하여 수행됩니다. 이 측면에서 동작은 비교를 위해 내부 함수를 사용하는 &lt;a href=&quot;function.array-diff-assoc&quot;&gt;array_diff_assoc ()&lt;/a&gt; 의 동작과 반대 입니다.</target>
        </trans-unit>
        <trans-unit id="66aa1056cdf2d03d58a3942e3b78b18c799c099e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_udiff_assoc()&lt;/strong&gt; returns an array containing all the values from &lt;code&gt;array&lt;/code&gt; that are not present in any of the other arguments. Note that the keys are used in the comparison unlike &lt;a href=&quot;function.array-diff&quot;&gt;array_diff()&lt;/a&gt; and &lt;a href=&quot;function.array-udiff&quot;&gt;array_udiff()&lt;/a&gt;. The comparison of arrays' data is performed by using an user-supplied callback. In this aspect the behaviour is opposite to the behaviour of &lt;a href=&quot;function.array-diff-assoc&quot;&gt;array_diff_assoc()&lt;/a&gt; which uses internal function for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4246553de34a1c65ad8dcdc77d1003714499cb11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_unshift()&lt;/strong&gt; prepends passed elements to the front of the &lt;code&gt;array&lt;/code&gt;. Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order. All numerical array keys will be modified to start counting from zero while literal keys won't be changed.</source>
          <target state="translated">&lt;strong&gt;array_unshift ()&lt;/strong&gt; 는 전달 된 요소를 &lt;code&gt;array&lt;/code&gt; 의 앞에 추가합니다 . 요소 목록은 전체적으로 추가되므로 앞에 추가 된 요소는 동일한 순서로 유지됩니다. 리터럴 키는 변경되지 않지만 모든 숫자 형 배열 키는 0부터 계산을 시작하도록 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="aba820f83200150c1146190231c475ec97a0891f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_values()&lt;/strong&gt; returns all the values from the &lt;code&gt;array&lt;/code&gt; and indexes the array numerically.</source>
          <target state="translated">&lt;strong&gt;array_values ​​()&lt;/strong&gt; 는 &lt;code&gt;array&lt;/code&gt; 에서 모든 값을 반환 하고 배열을 숫자로 색인화합니다.</target>
        </trans-unit>
        <trans-unit id="c1813e42a245e28b1387377ddd9fc5c1ec4cff40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array_walk()&lt;/strong&gt; is not affected by the internal array pointer of &lt;code&gt;array&lt;/code&gt;. &lt;strong&gt;array_walk()&lt;/strong&gt; will walk through the entire array regardless of pointer position.</source>
          <target state="translated">&lt;strong&gt;array_walk는 ()&lt;/strong&gt; 의 내부 배열 포인터에 의해 영향을받지 않는다 &lt;code&gt;array&lt;/code&gt; . &lt;strong&gt;array_walk ()&lt;/strong&gt; 는 포인터 위치에 관계없이 전체 배열을 &lt;strong&gt;탐색&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="eca1195fd75bc8c94a9a41dc6f9616e5684bab0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;assert()&lt;/strong&gt; callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made. While this information can be captured via other methods, using assertions makes it much faster and easier!</source>
          <target state="translated">&lt;strong&gt;assert ()&lt;/strong&gt; 콜백은 어설 션이 작성된 위치에 대한 정보와 함께 어설 션에 전달 된 코드를 쉽게 캡처 할 수 있으므로 자동화 된 테스트 스위트를 빌드하는 데 특히 유용합니다. 이 정보는 다른 방법을 통해 캡처 할 수 있지만 어설 션을 사용하면 훨씬 빠르고 쉽습니다!</target>
        </trans-unit>
        <trans-unit id="fc36db36a29ea2b3f5d41c9adbb05c8c98eb6211" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;assert()&lt;/strong&gt; is a language construct in PHP 7, allowing for the definition of expectations: assertions that take effect in development and testing environments, but are optimised away to have zero cost in production.</source>
          <target state="translated">&lt;strong&gt;assert ()&lt;/strong&gt; 는 PHP 7의 언어 구성으로, 기대 및 정의는 개발 및 테스트 환경에 적용되지만 생산 비용이 전혀 들지 않도록 최적화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a21d42aa53e898d579853e762f3875082e8d8d46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;assert()&lt;/strong&gt; is now a language construct and not a function. &lt;code&gt;assertion&lt;/code&gt; can now be an expression. The second parameter is now interpreted either as an &lt;code&gt;exception&lt;/code&gt; (if a &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; object is given), or as the &lt;code&gt;description&lt;/code&gt; supported from PHP 5.4.8 onwards.</source>
          <target state="translated">&lt;strong&gt;assert ()&lt;/strong&gt; 는 이제 언어 구조이며 함수가 아닙니다. &lt;code&gt;assertion&lt;/code&gt; 은 이제식이 될 수 있습니다. 두 번째 매개 변수는 이제 &lt;code&gt;exception&lt;/code&gt; ( &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; 객체가 제공되는 경우) 또는 PHP 5.4.8부터 지원되는 &lt;code&gt;description&lt;/code&gt; 으로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="dbdadfce6742d461243e991fc4cbd2f98394c9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;assert()&lt;/strong&gt; will check the given &lt;code&gt;assertion&lt;/code&gt; and take appropriate action if its result is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;assert ()&lt;/strong&gt; 는 주어진 &lt;code&gt;assertion&lt;/code&gt; 을 확인 하고 결과가 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 이면 적절한 조치를 취 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a642b515fc72651ae5a522e5ec4db990debff6d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;assert()&lt;/strong&gt; will check the given &lt;code&gt;assertion&lt;/code&gt; and take appropriate action if its result is &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af061cd00dc41102a062617013a47f14c625154e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;base_convert()&lt;/strong&gt; may lose precision on large numbers due to properties related to the internal &quot;double&quot; or &quot;float&quot; type used. Please see the &lt;a href=&quot;language.types.float&quot;&gt;Floating point numbers&lt;/a&gt; section in the manual for more specific information and limitations.</source>
          <target state="translated">&lt;strong&gt;base_convert ()&lt;/strong&gt; 는 사용 된 내부 &quot;double&quot;또는 &quot;float&quot;유형과 관련된 속성으로 인해 많은 수의 정밀도를 잃을 수 있습니다. 자세한 내용과 제한 사항은 설명서 의 &lt;a href=&quot;language.types.float&quot;&gt;부동 소수점 숫자&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a4b77f3cf9eded4126c8a7aeba7ae6d5201b36a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;basename()&lt;/strong&gt; is locale aware, so for it to see the correct basename with multibyte character paths, the matching locale must be set using the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;basename ()&lt;/strong&gt; 은 로케일을 인식하므로 멀티 바이트 문자 경로가있는 올바른 기본 이름을 보려면 &lt;a href=&quot;function.setlocale&quot;&gt;setlocale ()&lt;/a&gt; 함수를 사용하여 일치하는 로케일을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ec4f37a3b529bd5cf42627f4da0e96293c09eaef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;basename()&lt;/strong&gt; operates naively on the input string, and is not aware of the actual filesystem, or path components such as &quot;&lt;code&gt;..&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332886255d90b553b5b2d4532f82498fe3056770" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;basename()&lt;/strong&gt; operates naively on the input string, and is not aware of the actual filesystem, or path components such as &quot;&lt;em&gt;..&lt;/em&gt;&quot;.</source>
          <target state="translated">&lt;strong&gt;basename ()&lt;/strong&gt; 은 입력 문자열에서 순진하게 작동하며 실제 파일 시스템이나 &quot; &lt;em&gt;..&lt;/em&gt; &quot; 와 같은 경로 구성 요소를 인식하지 못합니다 .</target>
        </trans-unit>
        <trans-unit id="e624ce8214dd91958e9aa27e0b5be5049b6edbf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bcmul()&lt;/strong&gt; now returns numbers with the requested scale. Formerly, the returned numbers may have omitted trailing decimal zeroes.</source>
          <target state="translated">&lt;strong&gt;bcmul ()은&lt;/strong&gt; 이제 요청 된 스케일을 가진 숫자를 반환합니다. 이전에 반환 된 숫자는 후행 10 진수 0을 생략했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36ceb9c8be7227f6c166e5685e6ff749b5d3b84b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bcpow()&lt;/strong&gt; now returns numbers with the requested scale. Formerly, the returned numbers may have omitted trailing decimal zeroes.</source>
          <target state="translated">&lt;strong&gt;bcpow ()는&lt;/strong&gt; 이제 요청 된 스케일을 가진 숫자를 반환합니다. 이전에 반환 된 숫자는 후행 10 진수 0을 생략했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5c3a17afc7e60582bfd1c99f4e1fd87dcd3da79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bcscale()&lt;/strong&gt; can now be used to get the current scale factor; when used as setter, it now returns the old scale value. Formerly, &lt;code&gt;scale&lt;/code&gt; was mandatory, and &lt;strong&gt;bcscale()&lt;/strong&gt; always returned &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;bcscale ()&lt;/strong&gt; 을 사용하여 현재 배율을 얻을 수 있습니다. setter로 사용되면 이제 이전 스케일 값을 반환합니다. 이전에는 &lt;code&gt;scale&lt;/code&gt; 이 필수였으며 &lt;strong&gt;bcscale ()은&lt;/strong&gt; 항상 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환했습니다 .</target>
        </trans-unit>
        <trans-unit id="ae00ec94e0db3d4a5dc1ee552c9bf1b69d736391" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bcscale()&lt;/strong&gt; can now be used to get the current scale factor; when used as setter, it now returns the old scale value. Formerly, &lt;code&gt;scale&lt;/code&gt; was mandatory, and &lt;strong&gt;bcscale()&lt;/strong&gt; always returned &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce98becac7bf2e9b96816ffa2a3fa97479e96b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bindec()&lt;/strong&gt; converts a binary number to an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; or, if needed for size reasons, &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;bindec ()&lt;/strong&gt; 은 이진수를 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 또는 크기 때문에 필요한 경우 &lt;a href=&quot;language.types.float&quot;&gt;float로 변환&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="65fb1721f792fb13ed10baa2b08fff42f8d0671d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bindec()&lt;/strong&gt; converts a binary number to an int or, if needed for size reasons, float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cc8c7332d7bf07837cfc33437da3356a76455d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bindec()&lt;/strong&gt; interprets all &lt;code&gt;binary_string&lt;/code&gt; values as unsigned integers. This is because &lt;strong&gt;bindec()&lt;/strong&gt; sees the most significant bit as another order of magnitude rather than as the sign bit.</source>
          <target state="translated">&lt;strong&gt;bindec ()&lt;/strong&gt; 는 모든 &lt;code&gt;binary_string&lt;/code&gt; 값을 부호없는 정수로 해석합니다 . 때문이다 &lt;strong&gt;bindec ()이&lt;/strong&gt; 크기의 다른 순서로보다는 부호 비트로 최상위 비트를 본다.</target>
        </trans-unit>
        <trans-unit id="09442aa65f996e271efc7cdc3f4de8df24213e58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzcompress()&lt;/strong&gt; compresses the given string and returns it as bzip2 encoded data.</source>
          <target state="translated">&lt;strong&gt;bzcompress ()&lt;/strong&gt; 는 주어진 문자열을 압축하여 bzip2 인코딩 데이터로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a5630046334f2e2ababbeea300b1f211d581557" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzdecompress()&lt;/strong&gt; decompresses the given string containing bzip2 encoded data.</source>
          <target state="translated">&lt;strong&gt;bzdecompress ()&lt;/strong&gt; 는 bzip2로 인코딩 된 데이터를 포함하는 주어진 문자열을 압축 해제합니다.</target>
        </trans-unit>
        <trans-unit id="fa99278f0263acfe2d77bc706e5cc27ffad2f402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzopen()&lt;/strong&gt; opens a bzip2 (.bz2) file for reading or writing.</source>
          <target state="translated">&lt;strong&gt;bzopen ()&lt;/strong&gt; 은 읽기 또는 쓰기를위한 bzip2 (.bz2) 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="4fee1d555699dc23d12d603d3f992d5d3ce971e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzopen()&lt;/strong&gt; opens a bzip2 (&lt;var&gt;.bz2&lt;/var&gt;) file for reading or writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c56e2ec4fedee50556748ce0c39d22e6be3d50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzread()&lt;/strong&gt; reads from the given bzip2 file pointer.</source>
          <target state="translated">&lt;strong&gt;bzread ()&lt;/strong&gt; 는 주어진 bzip2 파일 포인터에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="850b5be8b3b1ad3078a9b021625c5b745e5c1cac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bzwrite()&lt;/strong&gt; writes a string into the given bzip2 file stream.</source>
          <target state="translated">&lt;strong&gt;bzwrite ()&lt;/strong&gt; 는 주어진 bzip2 파일 스트림에 문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="e1e1ef58e470a6ee0e082637ae685bf28f6cf40d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cal_from_jd()&lt;/strong&gt; converts the Julian day given in &lt;code&gt;jd&lt;/code&gt; into a date of the specified &lt;code&gt;calendar&lt;/code&gt;. Supported &lt;code&gt;calendar&lt;/code&gt; values are &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;cal_from_jd ()&lt;/strong&gt; 는 &lt;code&gt;jd&lt;/code&gt; 에 지정된 Julian 일을 지정된 &lt;code&gt;calendar&lt;/code&gt; 의 날짜로 변환합니다 . 지원되는 &lt;code&gt;calendar&lt;/code&gt; 값은 &lt;strong&gt; &lt;code&gt;CAL_GREGORIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JULIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JEWISH&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;CAL_FRENCH&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="69cac0c4fedf02639e1321d9858a746041621c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cal_from_jd()&lt;/strong&gt; converts the Julian day given in &lt;code&gt;julian_day&lt;/code&gt; into a date of the specified &lt;code&gt;calendar&lt;/code&gt;. Supported &lt;code&gt;calendar&lt;/code&gt; values are &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d145d01de2ccc9e7f2439b21afa2af8afc715f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cal_info()&lt;/strong&gt; returns information on the specified &lt;code&gt;calendar&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;cal_info ()&lt;/strong&gt; 는 지정된 &lt;code&gt;calendar&lt;/code&gt; 에 대한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e1284b1c97e6ce230af167634171d24e0d69c97e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cal_to_jd()&lt;/strong&gt; calculates the Julian day count for a date in the specified &lt;code&gt;calendar&lt;/code&gt;. Supported &lt;code&gt;calendar&lt;/code&gt;s are &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;cal_to_jd ()&lt;/strong&gt; 는 지정된 &lt;code&gt;calendar&lt;/code&gt; 의 날짜에 대한 율리우스 일 수를 계산합니다 . 지원되는 &lt;code&gt;calendar&lt;/code&gt; 은 &lt;strong&gt; &lt;code&gt;CAL_GREGORIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JULIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JEWISH&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;CAL_FRENCH&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d52a86f9a034a06ec30d11f7b88b19836bd8b672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;chop()&lt;/strong&gt; is different than the Perl &lt;code&gt;chop()&lt;/code&gt; function, which removes the last character in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8772857922f8f210a22c335b2123c9ba3923c72f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;chop()&lt;/strong&gt; is different than the Perl &lt;em&gt;chop()&lt;/em&gt; function, which removes the last character in the string.</source>
          <target state="translated">&lt;strong&gt;chop ()&lt;/strong&gt; 은 문자열의 마지막 문자를 제거하는 Perl &lt;em&gt;chop ()&lt;/em&gt; 함수와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="fb1921d4945d564f3f7d17489c7521be88387bd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;closelog()&lt;/strong&gt; closes the descriptor being used to write to the system logger. The use of &lt;strong&gt;closelog()&lt;/strong&gt; is optional.</source>
          <target state="translated">&lt;strong&gt;closelog ()&lt;/strong&gt; 는 시스템 로거에 쓰는 데 사용되는 설명자를 닫습니다. 의 사용 &lt;strong&gt;closelog ()는&lt;/strong&gt; 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="a6b84f7820f8b4a97b55bfb354a23c2e5e9bb651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;compact()&lt;/strong&gt; issues an E_NOTICE level error if a given string refers to an unset variable.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;주어진 문자열이 설정되지 않은 변수를 참조하는 경우 &lt;strong&gt;compact ()&lt;/strong&gt; 는 E_NOTICE 레벨 오류를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="4430244f92ac1002cab725793b826c5dbf973fa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;compact()&lt;/strong&gt; now issues an E_NOTICE level error if a given string refers to an unset variable. Formerly, such strings have been silently skipped.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;주어진 문자열이 설정되지 않은 변수를 참조하면 &lt;strong&gt;compact ()는&lt;/strong&gt; 이제 E_NOTICE 레벨 오류를 발행합니다. 이전에는 이러한 문자열을 자동으로 건너 뛰었습니다.</target>
        </trans-unit>
        <trans-unit id="28b69a7a843c92353c6fcf54d218f5407c449990" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;compact()&lt;/strong&gt; takes a variable number of parameters. Each parameter can be either a string containing the name of the variable, or an array of variable names. The array can contain other arrays of variable names inside it; &lt;strong&gt;compact()&lt;/strong&gt; handles it recursively.</source>
          <target state="translated">&lt;strong&gt;compact ()&lt;/strong&gt; 는 다양한 수의 매개 변수를 사용합니다. 각 매개 변수는 변수 이름이 포함 된 문자열이거나 변수 이름 배열 일 수 있습니다. 배열은 변수 이름의 다른 배열을 포함 할 수 있습니다. &lt;strong&gt;compact ()&lt;/strong&gt; 는 재귀 적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="e64f52201ea369329f1fc0d16a8b85429ae457a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;constant()&lt;/strong&gt; is useful if you need to retrieve the value of a constant, but do not know its name. I.e. it is stored in a variable or returned by a function.</source>
          <target state="translated">&lt;strong&gt;constant ()&lt;/strong&gt; 는 &lt;strong&gt;상수&lt;/strong&gt; 값을 검색해야하지만 이름을 모르는 경우에 유용합니다. 즉, 변수에 저장되거나 함수에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="eecd8b41eb2ac384ec85fbc2a50a46b18ad15bab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;convert_uudecode()&lt;/strong&gt; decodes a uuencoded string.</source>
          <target state="translated">&lt;strong&gt;convert_uudecode ()는&lt;/strong&gt; 인코딩 된 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d3113acb3ab0d08babf48c1de799012daf047cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;convert_uuencode()&lt;/strong&gt; encodes a string using the uuencode algorithm.</source>
          <target state="translated">&lt;strong&gt;convert_uuencode ()&lt;/strong&gt; 는 uuencode 알고리즘을 사용하여 문자열을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="9923b077f59ca304ec2c6563d230abdb1ce3df84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cos()&lt;/strong&gt; returns the cosine of the &lt;code&gt;arg&lt;/code&gt; parameter. The &lt;code&gt;arg&lt;/code&gt; parameter is in radians.</source>
          <target state="translated">&lt;strong&gt;cos ()&lt;/strong&gt; 는 &lt;code&gt;arg&lt;/code&gt; 매개 변수 의 코사인을 반환합니다 . &lt;code&gt;arg&lt;/code&gt; 매개 변수는 라디안이다.</target>
        </trans-unit>
        <trans-unit id="98625ffd3fbe759f554e3c4467dcb0476999561a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cosh()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;cosh()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fe8144ca327e856ff04fed136b9c62e26e554b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;count()&lt;/strong&gt; can detect recursion to avoid an infinite loop, but will emit an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; every time it does (in case the array contains itself more than once) and return a count higher than may be expected.</source>
          <target state="translated">&lt;strong&gt;count ()&lt;/strong&gt; 는 무한 루프를 피하기 위해 재귀를 감지 할 수 있지만 , 배열이 자신을 두 번 이상 포함하는 경우마다 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 을 발생시키고 예상보다 높은 카운트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cb1f6ea49174acbd82b6c7f70b9addfc560c5d33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;count()&lt;/strong&gt; will now yield a warning on invalid countable types passed to the &lt;code&gt;array_or_countable&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;count ()&lt;/strong&gt; 는 이제 &lt;code&gt;array_or_countable&lt;/code&gt; 매개 변수에 전달 된 유효하지 않은 계산 가능 유형에 대한 경고를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="d01853a0d921a34b061fdbb2aa521a762af49c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;count()&lt;/strong&gt; will now yield a warning on invalid countable types passed to the &lt;code&gt;value&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef426bf5456d97582362245061ad7e0dc35c24d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;createDocument()&lt;/strong&gt; may need to be told what the document element is. This will not be necessary in simple cases. When there is no ambiguity then no parameter need be passed to the method. However it is possible to load more than one schema file into the same XML DAS and in this case there may be more than one possible document element defined: furthermore it is even possible that there are two possible document elements that differ only in the namespace. To cope with these cases it is possible to specify either the document element name, or both the document element name and namespace to the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a6a38138399e69e02657d8cfce26b111db9325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;crypt()&lt;/strong&gt; will return a hashed string using the standard Unix</source>
          <target state="translated">&lt;strong&gt;crypt ()&lt;/strong&gt; 는 표준 유닉스를 사용하여 해시 문자열을 반환합니다</target>
        </trans-unit>
        <trans-unit id="6ecb0fcc4baaf3cbcaebe1d45acd6f599790c40b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;curl_reset()&lt;/strong&gt; also resets the URL given as the &lt;a href=&quot;function.curl-init&quot;&gt;curl_init()&lt;/a&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;curl_reset ()&lt;/strong&gt; 은 &lt;a href=&quot;function.curl-init&quot;&gt;curl_init ()&lt;/a&gt; 매개 변수 로 제공된 URL을 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="4621cecad83154dd17b05ec7242a02bedc8a1b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;curl_unescape()&lt;/strong&gt; does not decode plus symbols (+) into spaces. &lt;a href=&quot;function.urldecode&quot;&gt;urldecode()&lt;/a&gt; does.</source>
          <target state="translated">&lt;strong&gt;curl_unescape ()&lt;/strong&gt; 는 더하기 기호 (+)를 공백으로 디코딩하지 않습니다. &lt;a href=&quot;function.urldecode&quot;&gt;urldecode ()&lt;/a&gt; 는 않습니다.</target>
        </trans-unit>
        <trans-unit id="94e82f5299fff8cf0eb098af2f31f812d021c928" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date_default_timezone_set()&lt;/strong&gt; sets the default timezone used by all date/time functions.</source>
          <target state="translated">&lt;strong&gt;date_default_timezone_set ()&lt;/strong&gt; 은 모든 날짜 / 시간 함수가 사용하는 기본 시간대를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4b96e8206945d55607e2e3326e7e1f06d6ca93d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date_sunrise()&lt;/strong&gt; returns the sunrise time for a given day (specified as a &lt;code&gt;timestamp&lt;/code&gt;) and location.</source>
          <target state="translated">&lt;strong&gt;date_sunrise ()&lt;/strong&gt; 는 주어진 날짜 (시간 &lt;code&gt;timestamp&lt;/code&gt; 지정 ) 및 위치 의 일출 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8d4e4abd29194776ed02dfd01621e9b5698abbb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;date_sunset()&lt;/strong&gt; returns the sunset time for a given day (specified as a &lt;code&gt;timestamp&lt;/code&gt;) and location.</source>
          <target state="translated">&lt;strong&gt;date_sunset ()&lt;/strong&gt; 은 주어진 날짜 (시간 &lt;code&gt;timestamp&lt;/code&gt; 지정됨 ) 및 위치 의 일몰 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="11576d7c29e0776c2cfd9989f7a3f89835ec265b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_close()&lt;/strong&gt; closes the established database and frees all resources of the specified database handle.</source>
          <target state="translated">&lt;strong&gt;dba_close ()&lt;/strong&gt; 는 설정된 데이터베이스를 닫고 지정된 데이터베이스 핸들의 모든 자원을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="a9f5d47a45cc0705257803c821e1b00ffc01ceac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_delete()&lt;/strong&gt; deletes the specified entry from the database.</source>
          <target state="translated">&lt;strong&gt;dba_delete ()&lt;/strong&gt; 는 데이터베이스에서 지정된 항목을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="33cff80913815575c79607af9ef72827ae1cccd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_exists()&lt;/strong&gt; checks whether the specified &lt;code&gt;key&lt;/code&gt; exists in the database.</source>
          <target state="translated">&lt;strong&gt;dba_exists ()&lt;/strong&gt; 는 지정된 &lt;code&gt;key&lt;/code&gt; 가 데이터베이스에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="c0b7f03f595324665eb9ba79802b5a10453d74a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_fetch()&lt;/strong&gt; fetches the data specified by &lt;code&gt;key&lt;/code&gt; from the database specified with &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;dba_fetch ()&lt;/strong&gt; 는 &lt;code&gt;handle&lt;/code&gt; 로 지정된 데이터베이스에서 &lt;code&gt;key&lt;/code&gt; 지정된 데이터를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b1b0bccf4462ca7263d36593e4910161b0e384a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_firstkey()&lt;/strong&gt; returns the first key of the database and resets the internal key pointer. This permits a linear search through the whole database.</source>
          <target state="translated">&lt;strong&gt;dba_firstkey ()&lt;/strong&gt; 는 데이터베이스의 첫 번째 키를 리턴하고 내부 키 포인터를 재설정합니다. 이것은 전체 데이터베이스를 통한 선형 검색을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="73788b7a26c429ec000286eef0ccd1ff945a1284" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_handlers()&lt;/strong&gt; list all the handlers supported by this extension.</source>
          <target state="translated">&lt;strong&gt;dba_handlers ()&lt;/strong&gt; 는이 확장에서 지원하는 모든 핸들러를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="cff10a3ee81a84cd690fa8d7abc1571dfcaa833b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_insert()&lt;/strong&gt; inserts the entry described with &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; into the database.</source>
          <target state="translated">&lt;strong&gt;dba_insert ()&lt;/strong&gt; 는 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 으로 설명 된 항목을 데이터베이스에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="64853bbdb7717e45f9c6c210dd7287257bf22528" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_key_split()&lt;/strong&gt; splits a key (string representation) into an array representation.</source>
          <target state="translated">&lt;strong&gt;dba_key_split ()&lt;/strong&gt; 은 키 (문자열 표현)를 배열 표현으로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="b011fbf7426c82bcff4570404ed0e17b25c9093d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_list()&lt;/strong&gt; list all open database files.</source>
          <target state="translated">&lt;strong&gt;dba_list ()는&lt;/strong&gt; 열려있는 모든 데이터베이스 파일을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="e23118a169b363eac7aff099f45995ce7626f2a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_nextkey()&lt;/strong&gt; returns the next key of the database and advances the internal key pointer.</source>
          <target state="translated">&lt;strong&gt;dba_nextkey ()&lt;/strong&gt; 는 데이터베이스의 다음 키를 리턴하고 내부 키 포인터를 진행시킵니다.</target>
        </trans-unit>
        <trans-unit id="c0e4cda5071daf77bd8fdcface8ff2ee9c55990d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_open()&lt;/strong&gt; establishes a database instance for &lt;code&gt;path&lt;/code&gt; with &lt;code&gt;mode&lt;/code&gt; using &lt;code&gt;handler&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;dba_open은 ()&lt;/strong&gt; 에 대한 데이터베이스 인스턴스 설정 &lt;code&gt;path&lt;/code&gt; 와 &lt;code&gt;mode&lt;/code&gt; 사용하여 &lt;code&gt;handler&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="397c26e8690c9cb35fac082e1d3c696638875c57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_optimize()&lt;/strong&gt; optimizes the underlying database.</source>
          <target state="translated">&lt;strong&gt;dba_optimize ()&lt;/strong&gt; 는 기본 데이터베이스를 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="7991ac5ff473cb38851a626e12ed5c261afe3603" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_popen()&lt;/strong&gt; establishes a persistent database instance for &lt;code&gt;path&lt;/code&gt; with &lt;code&gt;mode&lt;/code&gt; using &lt;code&gt;handler&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;dba_popen ()&lt;/strong&gt; 은 &lt;code&gt;handler&lt;/code&gt; 를 사용하여 &lt;code&gt;mode&lt;/code&gt; 가있는 &lt;code&gt;path&lt;/code&gt; 에 대한 영구 데이터베이스 인스턴스를 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="0e3e4e5c2dccba676d01255e21d17cb012bc3904" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_replace()&lt;/strong&gt; replaces or inserts the entry described with &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; into the database specified by &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;dba_replace ()&lt;/strong&gt; 는 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 으로 설명 된 항목 을 &lt;code&gt;handle&lt;/code&gt; 로 지정된 데이터베이스로 바꾸 거나 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="4a90bdb631f9f141bde7e688541c9c07580f24bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dba_sync()&lt;/strong&gt; synchronizes the database. This will probably trigger a physical write to the disk, if supported.</source>
          <target state="translated">&lt;strong&gt;dba_sync ()&lt;/strong&gt; 는 데이터베이스를 동기화합니다. 지원되는 경우 디스크에 실제 쓰기를 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="662c0483e74be3a6614d80503ad121cb3ab7308c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dbx_compare()&lt;/strong&gt; is a helper function for &lt;a href=&quot;function.dbx-sort&quot;&gt;dbx_sort()&lt;/a&gt; to ease the make and use of the custom sorting function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1eb462634dcffe949224626504ab5a2559ac5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dbx_error()&lt;/strong&gt; returns the last error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0337351d669b6efc4ddad6f16f3dce58f152c093" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dbx_fetch_row()&lt;/strong&gt; fetches rows from a result identifier that had the &lt;strong&gt;&lt;code&gt;DBX_RESULT_UNBUFFERED&lt;/code&gt;&lt;/strong&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3ee6013aaf786f97c6cbd5b67176308b416c5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dbx_query()&lt;/strong&gt; returns an object or &lt;code&gt;1&lt;/code&gt; on success, and &lt;code&gt;0&lt;/code&gt; on failure. The result object is returned only if the query given in &lt;code&gt;sql_statement&lt;/code&gt; produces a result set (i.e. a SELECT query, even if the result set is empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576ffabe510ecb34db5f10cb8d0930c8494d7cae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;debug_backtrace()&lt;/strong&gt; generates a PHP backtrace.</source>
          <target state="translated">&lt;strong&gt;debug_backtrace ()&lt;/strong&gt; 는 PHP 역 추적을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ed4fd20b012a3cec05eb03969b58b2bdae4cee90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;debug_print_backtrace()&lt;/strong&gt; prints a PHP backtrace. It prints the function calls, included/required files and &lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt;ed stuff.</source>
          <target state="translated">&lt;strong&gt;debug_print_backtrace ()&lt;/strong&gt; 는 PHP 역 추적을 인쇄합니다. 함수 호출, 포함 / 필수 파일 및 &lt;a href=&quot;function.eval&quot;&gt;eval ()&lt;/a&gt; 필수 항목을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="5f8d7fb9643a1fa19bdc43b5cb2f8c96681f0e03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dio_open()&lt;/strong&gt; opens a file and returns a new file descriptor for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa428e5831fd4fed013494df232eb3dac15b65b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dio_stat()&lt;/strong&gt; returns information about the given file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a020b88dfe8eb69570cf7b43c72e82101b6b44f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dio_tcsetattr()&lt;/strong&gt; sets the terminal attributes and baud rate of the open &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4bca9339451763340b89777cdb2d27abd3ab48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dio_truncate()&lt;/strong&gt; truncates a file to at most &lt;code&gt;offset&lt;/code&gt; bytes in size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d750ed71bffec5d0092a160077222127043aa37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dio_write()&lt;/strong&gt; writes up to &lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;data&lt;/code&gt; to file &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eafdf3faeb65b42f4f059f8b8a4b4f964d6a1bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dirname()&lt;/strong&gt; is locale aware, so for it to see the correct directory name with multibyte character paths, the matching locale must be set using the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;dirname ()&lt;/strong&gt; 은 로케일을 인식하므로 멀티 바이트 문자 경로가있는 올바른 디렉토리 이름을 보려면 &lt;a href=&quot;function.setlocale&quot;&gt;setlocale ()&lt;/a&gt; 함수를 사용하여 일치하는 로케일을 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="32303f55a829d4e6fe083111710df16ecd2e9319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dirname()&lt;/strong&gt; is now binary safe</source>
          <target state="translated">&lt;strong&gt;dirname ()&lt;/strong&gt; 은 이제 바이너리 안전</target>
        </trans-unit>
        <trans-unit id="9aad1670fcd419208779c8f4f09911bc67f5f34d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dirname()&lt;/strong&gt; operates naively on the input string, and is not aware of the actual filesystem, or path components such as &quot;&lt;code&gt;..&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09f6e1de8dc9112b29d91ac2a3c128c902544e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dirname()&lt;/strong&gt; operates naively on the input string, and is not aware of the actual filesystem, or path components such as &quot;&lt;em&gt;..&lt;/em&gt;&quot;.</source>
          <target state="translated">&lt;strong&gt;dirname ()&lt;/strong&gt; 은 입력 문자열에서 순진하게 작동하며 실제 파일 시스템이나 &quot; &lt;em&gt;..&lt;/em&gt; &quot; 와 같은 경로 구성 요소를 인식하지 못합니다 .</target>
        </trans-unit>
        <trans-unit id="ae5a45a0d15a1c8a1e2f6550a454fe4ffbee803e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is &lt;em&gt;not&lt;/em&gt; supported when PHP is built with ZTS support. Use the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.extension&quot;&gt;Extension Loading Directives&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;PHP가 ZTS 지원으로 빌드 된 경우 &lt;strong&gt;dl ()&lt;/strong&gt; 은 지원 &lt;em&gt;되지 않습니다&lt;/em&gt; . 사용 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.extension&quot;&gt;확장로드 지침을&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="7332c373efa2d66e2fa74829ae0fd043c01d9322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is &lt;em&gt;not&lt;/em&gt; supported when PHP is built with ZTS support. Use the &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.extension&quot;&gt;Extension Loading Directives&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb10f47c5d6cc110cb651110377d960e0445aa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is case sensitive on Unix platforms.</source>
          <target state="translated">&lt;strong&gt;dl ()&lt;/strong&gt; 은 Unix 플랫폼에서 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="6f63b532e5dba3ba13806c766274f70d7c3de2d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is disabled in PHP-FPM.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;PHP-FPM에서 &lt;strong&gt;dl ()&lt;/strong&gt; 이 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="9592b20d5badb9c08bedcc32d611b39da5394bc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is enabled in PHP-FPM, albeit discouraged.</source>
          <target state="translated">&lt;strong&gt;dl ()&lt;/strong&gt; 은 권장되지는 않지만 PHP-FPM에서 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="a236c6046fb72bef399085b956fe4561c33141c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dl()&lt;/strong&gt; is now disabled in some SAPIs due to stability issues. The only SAPIs that allow &lt;strong&gt;dl()&lt;/strong&gt; are CLI and Embed. Use the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.extension&quot;&gt;Extension Loading Directives&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;안정성 문제로 인해 일부 SAPI에서 &lt;strong&gt;dl ()&lt;/strong&gt; 이 비활성화되었습니다. &lt;strong&gt;dl ()&lt;/strong&gt; 을 허용하는 유일한 SAPI 는 CLI 및 Embed입니다. 사용 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.extension&quot;&gt;확장로드 지침을&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="1176c6ec88c101b2a0c192b9f22cc479e6dbce07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dns_get_record()&lt;/strong&gt; only returns Internet class records and as such this parameter will always return &lt;code&gt;IN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e1d5c990536596e6c9dbe9e879ff181f505a20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dns_get_record()&lt;/strong&gt; only returns Internet class records and as such this parameter will always return &lt;em&gt;IN&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;dns_get_record ()&lt;/strong&gt; 는 인터넷 클래스 레코드 만 리턴 &lt;strong&gt;하므로이&lt;/strong&gt; 매개 변수는 항상 &lt;em&gt;IN을&lt;/em&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="e843a54c21ec48d4cac26abf016e58f3e4226424" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;each()&lt;/strong&gt; is typically used in conjunction with &lt;a href=&quot;function.list&quot;&gt;list()&lt;/a&gt; to traverse an array, here's an example:</source>
          <target state="translated">&lt;strong&gt;each ()&lt;/strong&gt; 는 일반적으로 &lt;a href=&quot;function.list&quot;&gt;list ()&lt;/a&gt; 와 함께 배열을 탐색하는 데 사용됩니다 . 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f99417d0a6481a0d02fd33542f3c7f525f5df59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;each()&lt;/strong&gt; will also accept objects, but may return unexpected results. It's therefore not recommended to iterate though object properties with &lt;strong&gt;each()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;each ()&lt;/strong&gt; 도 객체를 받아들이지 만 예기치 않은 결과를 반환 할 수 있습니다. 따라서 &lt;strong&gt;each ()로&lt;/strong&gt; 객체 속성을 반복하는 것은 권장되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7a17e282a92298d53f03a7f2f9d22dd7c5f60a22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easter_date()&lt;/strong&gt; relies on your system's C library time functions, rather than using PHP's internal date and time functions. As a consequence, &lt;strong&gt;easter_date()&lt;/strong&gt; uses the &lt;code&gt;TZ&lt;/code&gt; environment variable to determine the time zone it should operate in, rather than using PHP's &lt;a href=&quot;https://www.php.net/manual/en/datetime.configuration.php#ini.date.timezone&quot;&gt;default time zone&lt;/a&gt;, which may result in unexpected behaviour when using this function in conjunction with other date functions in PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5741059b89e665577644eb2251a2f0e77985d1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easter_date()&lt;/strong&gt; relies on your system's C library time functions, rather than using PHP's internal date and time functions. As a consequence, &lt;strong&gt;easter_date()&lt;/strong&gt; uses the &lt;em&gt;TZ&lt;/em&gt; environment variable to determine the time zone it should operate in, rather than using PHP's &lt;a href=&quot;https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone&quot;&gt;default time zone&lt;/a&gt;, which may result in unexpected behaviour when using this function in conjunction with other date functions in PHP.</source>
          <target state="translated">&lt;strong&gt;easter_date ()는&lt;/strong&gt; PHP의 내부 날짜 및 시간 함수를 사용하지 않고 시스템의 C 라이브러리 시간 함수에 의존합니다. 결과적으로 &lt;strong&gt;easter_date ()&lt;/strong&gt; 는 PHP의 &lt;a href=&quot;https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone&quot;&gt;기본 시간대를&lt;/a&gt; 사용하는 대신 &lt;em&gt;TZ&lt;/em&gt; 환경 변수를 사용하여 작동해야하는 시간대를 결정하므로 PHP에서 다른 날짜 함수와 함께이 함수를 사용할 때 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0afc353eb647dfe2aed2aaeee8b871569714630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_busy()&lt;/strong&gt; artificially increases load taking &lt;code&gt;delay&lt;/code&gt; seconds to execute. May be used for debugging, or benchmarking.</source>
          <target state="translated">&lt;strong&gt;eio_busy ()은&lt;/strong&gt; 인위적으로 하중 증가 복용 &lt;code&gt;delay&lt;/code&gt; 실행할 초. 디버깅 또는 벤치마킹에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d13ddfb5884e1f069e2b2010811ba5245006715c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_busy()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_busy ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d7f4380e3a2dbe4911982ea844f6a08016114716" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_busy()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f2df3b4824e1228c27346bad4b9d918abeaed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_cancel()&lt;/strong&gt; cancels a request specified by &lt;code&gt;req&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;eio_cancel ()&lt;/strong&gt; 은 &lt;code&gt;req&lt;/code&gt; 에 의해 지정된 요청을 취소합니다</target>
        </trans-unit>
        <trans-unit id="781c8bc4d55a37db48a978feba2fc3fdbfa86e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chmod()&lt;/strong&gt; changes file, or direcrory permissions. The new permissions are specified by &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_chmod ()&lt;/strong&gt; 는 파일 또는 잘못된 권한을 변경합니다. 새 권한은 &lt;code&gt;mode&lt;/code&gt; 로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e7706a6d5737c52a8c84b310b9164c937bf3b16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chmod()&lt;/strong&gt; changes file, or directory permissions. The new permissions are specified by &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef81fb0b454f2222865444663adbb90e82f20a81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chmod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_chmod ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="212eb67bad72bbde16b6a47127fd15a921c7af12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chmod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a278b7a24aa14149dcf3f1c72086b4f984822d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chown()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_chown ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3c756ac26522cbc3ce3483fa46a7178f7af5850c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_chown()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29375b4fc735d2f9a3c0c60545e956a693254d01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_close()&lt;/strong&gt; closes file specified by &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_close ()&lt;/strong&gt; 는 &lt;code&gt;fd&lt;/code&gt; 로 지정된 파일을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="20cd94451408e10a8306e60d5a8059daea23c05a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_close()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_close ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a9e1ed3b8028aa05d0a1775df41cd29c4ad3f255" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_close()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ea5ae4f9b294649aa8608b57e8481691f6779a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_custom()&lt;/strong&gt; executes custom function specified by &lt;code&gt;execute&lt;/code&gt; processing it just like any other &lt;em&gt;eio_*&lt;/em&gt; call.</source>
          <target state="translated">&lt;strong&gt;eio_custom ()&lt;/strong&gt; 은 다른 &lt;em&gt;eio_ *&lt;/em&gt; 호출 과 마찬가지로 처리 를 &lt;code&gt;execute&lt;/code&gt; 지정된 사용자 정의 함수를 실행 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be302ad3119566f73f214ae9b2cbe6d68f62c451" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_custom()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_custom ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7a688ab64729ec0c456aff741c8435221902bf9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_custom()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd18fb464a1684027c8e11efca2c1df1bced47d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_dup2()&lt;/strong&gt; duplicates file descriptor.</source>
          <target state="translated">&lt;strong&gt;eio_dup2 ()는&lt;/strong&gt; 파일 디스크립터를 복제합니다.</target>
        </trans-unit>
        <trans-unit id="827b4c6cfb4af71e10fb5db79caf2639efd87de1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_dup2()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_dup2 ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="30bc5096a86a51929606eb7b7be89290f25a33b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_dup2()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba02e60506e3893df77d6d3bf61655d39ceb360a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_event_loop()&lt;/strong&gt; polls libeio until all requests proceeded.</source>
          <target state="translated">&lt;strong&gt;eio_event_loop ()&lt;/strong&gt; 는 모든 요청이 진행될 때까지 libeio를 폴링합니다.</target>
        </trans-unit>
        <trans-unit id="dd265106138ffb4ae65ef235423f3d647c30c3c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_event_loop()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_event_loop ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7136cf7b34da2f40c54e613767d6ae1c9f251f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_event_loop()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffacc8fa64a16cee184b18c119b3d59c6140a366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fallocate()&lt;/strong&gt; allows the caller to directly manipulate the allocated disk space for the file specified by &lt;code&gt;fd&lt;/code&gt; file descriptor for the byte range starting at &lt;code&gt;offset&lt;/code&gt; and continuing for &lt;code&gt;length&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;strong&gt;eio_fallocate ()를&lt;/strong&gt; 사용하면 호출자가 &lt;code&gt;offset&lt;/code&gt; 에서 시작하여 &lt;code&gt;length&lt;/code&gt; 바이트 동안 계속되는 바이트 범위에 대해 &lt;code&gt;fd&lt;/code&gt; 파일 설명자가 지정한 파일에 할당 된 디스크 공간을 직접 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fdc6c4d0c21f6ef1b51d6ad2f157097531f6a479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fallocate()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_fallocate ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cbe69382ba96df959c96608f8a11b9cd7e6f5b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fallocate()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4963d1cdd099b345b9b1764f67ad6c5983f0c1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fchmod()&lt;/strong&gt; changes permissions for the file specified by &lt;code&gt;fd&lt;/code&gt; file descriptor.</source>
          <target state="translated">&lt;strong&gt;eio_fchmod ()&lt;/strong&gt; 는 &lt;code&gt;fd&lt;/code&gt; 파일 설명자가 지정한 파일에 대한 권한을 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="5eb3cbf25807cff161ab446def5cad6d3c699de7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fchmod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_fchmod ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8c315c63a471f78487de55dbfb537d846e5482b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fchmod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e42e0076de72cc5f87c60f1b6b42047b2a14a86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fchown()&lt;/strong&gt; changes ownership of the file specified by &lt;code&gt;fd&lt;/code&gt; file descriptor.</source>
          <target state="translated">&lt;strong&gt;eio_fchown ()&lt;/strong&gt; 은 &lt;code&gt;fd&lt;/code&gt; 파일 디스크립터가 지정한 파일의 소유권을 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="aeeb441ced8aa1158f14f1646ed6d1b96de73a03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fdatasync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_fdatasync ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="abb1de38f89d453c05ecce3080c65db93007f5ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fdatasync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31ef8570b7926d4147febb3be46a024755bd0eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fdatasync()&lt;/strong&gt; synchronizes a file's in-core state with storage device.</source>
          <target state="translated">&lt;strong&gt;eio_fdatasync ()&lt;/strong&gt; 는 파일의 코어 상태를 저장 장치와 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="86b60b03b8da057a635a8fc239f8016f09ae84f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fstat()&lt;/strong&gt; returns file status information in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;eio_fstat ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;result&lt;/code&gt; 인수 에서 파일 상태 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bf4a1e8c29476b03a65551eda6ae89f13e9c682a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fstatvfs()&lt;/strong&gt; returns file system statistics in &lt;code&gt;result&lt;/code&gt; of &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_fstatvfs ()&lt;/strong&gt; 에서 반환 파일 시스템 통계 &lt;code&gt;result&lt;/code&gt; 의 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abc91cafbb93c295a37c318ed520deca018e476d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fstatvfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_fstatvfs ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c3dcaf51a21b8a44984f50939b96ca9aba91aa6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fstatvfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d942e83600601763e13f0507b10604c2667016" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fsync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_fsync ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bf9d9dfe868708795b3500f1e1282e5e1aca5f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_fsync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b5f5f6a23cf41a052249c1d785caf83cd89243" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_ftruncate()&lt;/strong&gt; causes a regular file referenced by &lt;code&gt;fd&lt;/code&gt; file descriptor to be truncated to precisely &lt;code&gt;length&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;strong&gt;eio_ftruncate ()&lt;/strong&gt; 는 &lt;code&gt;fd&lt;/code&gt; 파일 디스크립터가 참조하는 일반 파일 이 정확한 &lt;code&gt;length&lt;/code&gt; 바이트 로 잘 &lt;strong&gt;리도록&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="68e1110d1e84dc9b1075f87df92f9ac027873ec1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_ftruncate()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_ftruncate ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1060e3b78ff4e6fd77314b5542d90c7fdfc4307f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_ftruncate()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0962416a6caae1de9e6f4e5a0e57259f41349630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_futime()&lt;/strong&gt; changes file last access and modification times.</source>
          <target state="translated">&lt;strong&gt;eio_futime ()&lt;/strong&gt; 은 파일의 마지막 액세스 및 수정 시간을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="bee70d93547751ad398b8af4789ff2a95b947290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_futime()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_futime ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5f9a176b7066222aa0fe7fefe57af3274daf5fea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_futime()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c7941ca68b40a3c3b4fd20c36f9d52ea3a77f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_get_event_stream()&lt;/strong&gt; acquires stream representing a variable used in internal communications with libeio. Could be used to bind with some event loop provided by other PECL extension, for example libevent.</source>
          <target state="translated">&lt;strong&gt;eio_get_event_stream ()&lt;/strong&gt; 은 libeio와의 내부 통신에 사용되는 변수를 나타내는 스트림을 얻습니다. libevent와 같은 다른 PECL 확장에서 제공하는 일부 이벤트 루프와 바인딩하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b3d270b9bf42c17664f9c36d7cb53489d1c391a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_get_event_stream()&lt;/strong&gt; returns stream on success; otherwise, &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eio_get_event_stream ()&lt;/strong&gt; 은 성공시 스트림을 반환합니다. 그렇지 않으면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5dbecd76da2cd3e284e70cadd8d209546e473846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_get_event_stream()&lt;/strong&gt; returns stream on success; otherwise, &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2eea775abe47b3d4a07f6ba4566ca37ccf2d00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_get_last_error()&lt;/strong&gt; returns string describing the last error associated with &lt;code&gt;req&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_get_last_error ()&lt;/strong&gt; 는 &lt;code&gt;req&lt;/code&gt; 와 관련된 마지막 오류를 설명하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="823a67ee8f8f96cc711a482e0d15aeb5645ed529" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_get_last_error()&lt;/strong&gt; returns string describing the last error associated with the request resource specified by &lt;code&gt;req&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_get_last_error ()&lt;/strong&gt; 는 &lt;code&gt;req&lt;/code&gt; 로 지정된 요청 리소스와 관련된 마지막 오류를 설명하는 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3dfd426626bf7bcf547d12e80d5b2c0dc1a8c964" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp()&lt;/strong&gt; creates a request group.</source>
          <target state="translated">&lt;strong&gt;eio_grp ()&lt;/strong&gt; 는 요청 그룹을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a2c2d53529a93de49b668ad6c99ab7ce633cf7e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp()&lt;/strong&gt; returns request group resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_grp ()&lt;/strong&gt; 는 성공하면 요청 그룹 리소스를 반환 하고 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d071e7c0d3700612e92e5013d5471222bd4c74d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp()&lt;/strong&gt; returns request group resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7562d38b8cea3689af44b758ec9f9eefb199dd22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp_add()&lt;/strong&gt; adds a request to the request group.</source>
          <target state="translated">&lt;strong&gt;eio_grp_add ()&lt;/strong&gt; 는 요청을 요청 그룹에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="62e43e2d289ca3d6f95384f47b379b45ad8cce58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp_add()&lt;/strong&gt; doesn't return a value.</source>
          <target state="translated">&lt;strong&gt;eio_grp_add ()&lt;/strong&gt; 는 값을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72765b93278faee3c581d3f9a745762b817a8d94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_grp_cancel()&lt;/strong&gt; cancels a group request specified by &lt;code&gt;grp&lt;/code&gt; request group resource.</source>
          <target state="translated">&lt;strong&gt;eio_grp_cancel ()&lt;/strong&gt; 은 &lt;code&gt;grp&lt;/code&gt; 요청 그룹 자원으로 지정된 그룹 요청을 취소 합니다.</target>
        </trans-unit>
        <trans-unit id="1ca23aaa9629de08a10a28c7d1c2e77fd4d83031" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_init()&lt;/strong&gt; (re-)initializes Eio. It allocates memory for internal structures of libeio and Eio itself. You may call &lt;strong&gt;eio_init()&lt;/strong&gt; before using Eio functions. Otherwise it will be called internally first time you invoke an Eio function in a process.</source>
          <target state="translated">&lt;strong&gt;eio_init ()는 Eio를&lt;/strong&gt; 초기화합니다. libeio 및 Eio 자체의 내부 구조에 메모리를 할당합니다. Eio 함수를 사용하기 전에 &lt;strong&gt;eio_init ()&lt;/strong&gt; 를 호출 할 수 있습니다 . 그렇지 않으면 프로세스에서 Eio 함수를 처음 호출 할 때 내부적으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="53a852bbe2cda27d7ec0cc7c7c87baa859296ba8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_link()&lt;/strong&gt; creates a hardlink &lt;code&gt;new_path&lt;/code&gt; for a file specified by &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_link ()&lt;/strong&gt; 는 &lt;code&gt;path&lt;/code&gt; 로 지정된 파일에 대한 하드 링크 &lt;code&gt;new_path&lt;/code&gt; 를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="a4f706cb58d39cf42c209dd8681ec407e4925b4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_lstat()&lt;/strong&gt; returns file status information in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;eio_lstat ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;result&lt;/code&gt; 인수 에서 파일 상태 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e473728a710a69f21dca19af241302e162ab0489" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_lstat()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_lstat ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2c4660e3bd2089b70e1211f3443bbd11ff18e4c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_lstat()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0a760924aa7e6e171f071ddbc167605b92eb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mkdir()&lt;/strong&gt; creates directory with specified access &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_mkdir ()&lt;/strong&gt; 은 지정된 액세스 &lt;code&gt;mode&lt;/code&gt; 디렉토리를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e56fec4af59d1fee7edffe52bc3bf5b212b47e3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mkdir()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_mkdir ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c35041ec73a9df91fbfe6f3cd8277223d187ec29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mkdir()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5d8211e2b737cd3c9f4fa964a2079fa9f919f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mknod()&lt;/strong&gt; creates ordinary or special(often) file.</source>
          <target state="translated">&lt;strong&gt;eio_mknod ()는&lt;/strong&gt; 일반 또는 특수 (종종) 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f44ef2973495827cac01089d0c229519cbd895af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mknod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_mknod ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d34057f4fe669bc8985f795c057082615b442ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_mknod()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3642b5790517ed8e1c1771556a48d73d37f2d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nop()&lt;/strong&gt; does nothing, except go through the whole request cycle. Could be useful in debugging.</source>
          <target state="translated">&lt;strong&gt;eio_nop ()&lt;/strong&gt; 는 전체 요청주기를 거치는 것 외에는 아무 것도 수행하지 않습니다. 디버깅에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9ddfbef239a1c081bac1c84f80b3aa8fc796827" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nop()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_nop ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c1f4a92b3d2a58ecda7009e8ee040c999dc91da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nop()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bd1c03156e58af35d10663c0b236c4c65ee00a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_npending()&lt;/strong&gt; returns number of finished, but unhandled requests</source>
          <target state="translated">&lt;strong&gt;eio_npending ()&lt;/strong&gt; 은 완료되었지만 처리되지 않은 요청 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fac76a6ca202983b465d4b87d1fe7b2ee5e09efa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_npending()&lt;/strong&gt; returns number of finished, but unhandled requests.</source>
          <target state="translated">&lt;strong&gt;eio_npending ()&lt;/strong&gt; 은 완료되었지만 처리되지 않은 요청 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="afee20b184604f1a477558e6c4fa379e63513099" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nready()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eio_nready()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4eb9f23434447a67255e3f8927887885806585b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nready()&lt;/strong&gt; returns number of not-yet handled requests</source>
          <target state="translated">&lt;strong&gt;eio_nready ()&lt;/strong&gt; 는 아직 처리되지 않은 요청 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="29a04a4ee2845c5a1063eea93e75dcda7d6b544d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nreqs()&lt;/strong&gt; could be called in a custom loop calling &lt;a href=&quot;function.eio-poll&quot;&gt;eio_poll()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_nreqs ()가&lt;/strong&gt; 호출하는 사용자 정의 루프에서 호출 할 수 &lt;a href=&quot;function.eio-poll&quot;&gt;eio_poll ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f69414d19d006dcec674121687cf7ae37475bef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nreqs()&lt;/strong&gt; returns number of requests to be processed.</source>
          <target state="translated">&lt;strong&gt;eio_nreqs ()&lt;/strong&gt; 는 처리 할 요청 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="20af5d265b64f5c5a7504081a406a24ddea40ed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_nthreads()&lt;/strong&gt; returns number of threads currently in use.</source>
          <target state="translated">&lt;strong&gt;eio_nthreads ()&lt;/strong&gt; 는 현재 사용중인 스레드 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5683e48f7fbc7357334cef2ebe97cb68ccb5a7ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_open()&lt;/strong&gt; opens file specified by &lt;code&gt;path&lt;/code&gt; in access mode &lt;code&gt;mode&lt;/code&gt; with</source>
          <target state="translated">&lt;strong&gt;eio_open ()&lt;/strong&gt; 은 액세스 모드 &lt;code&gt;mode&lt;/code&gt; 에서 &lt;code&gt;path&lt;/code&gt; 로 지정된 파일 을</target>
        </trans-unit>
        <trans-unit id="222a77825df6cb863b06a1bd1d5cf41e8667a608" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_open()&lt;/strong&gt; returns file descriptor in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; on success; otherwise, &lt;code&gt;result&lt;/code&gt; is equal to &lt;strong&gt;&lt;code&gt;-1&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_open ()&lt;/strong&gt; 은 성공시 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;result&lt;/code&gt; 인수 로 파일 디스크립터를 리턴합니다 . 그렇지 않으면 &lt;code&gt;result&lt;/code&gt; 는 &lt;strong&gt; &lt;code&gt;-1&lt;/code&gt; &lt;/strong&gt; 과 같습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="102b36e72f9c75e9f7d01db9a3324c1a2eab39c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_poll()&lt;/strong&gt; can be used to implement special event loop. For this &lt;a href=&quot;function.eio-nreqs&quot;&gt;eio_nreqs()&lt;/a&gt; could be used to test if there are unprocessed requests.</source>
          <target state="translated">&lt;strong&gt;eio_poll ()&lt;/strong&gt; 을 사용하여 특수 이벤트 루프를 구현할 수 있습니다. 이 경우 &lt;a href=&quot;function.eio-nreqs&quot;&gt;eio_nreqs ()를&lt;/a&gt; 사용하여 처리되지 않은 요청이 있는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11cb03d6e73d819ec5751b082818571fbe1d5281" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_read()&lt;/strong&gt; reads up to &lt;code&gt;length&lt;/code&gt; bytes from &lt;code&gt;fd&lt;/code&gt; file descriptor at &lt;code&gt;offset&lt;/code&gt;. The read bytes are stored in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_read ()&lt;/strong&gt; 는 &lt;code&gt;offset&lt;/code&gt; 의 &lt;code&gt;fd&lt;/code&gt; 파일 디스크립터에서 최대 &lt;code&gt;length&lt;/code&gt; 바이트를 읽습니다 . 읽은 바이트는 &lt;code&gt;callback&lt;/code&gt; 의 &lt;code&gt;result&lt;/code&gt; 인수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb38534c7a250d7507733c0bd05242c6fa1b8966" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_read()&lt;/strong&gt; stores read bytes in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; function.</source>
          <target state="translated">&lt;strong&gt;eio_read ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; 함수의 &lt;code&gt;result&lt;/code&gt; 인수에 읽은 바이트를 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="b74a045f91f0203214ac689b1ba7243413cab220" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readahead()&lt;/strong&gt; populates the page cache with data from a file so that subsequent reads from that file will not block on disk I/O. See &lt;code&gt;READAHEAD(2)&lt;/code&gt; man page for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c92a0968313f82dacea16e377bb7603698a26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readahead()&lt;/strong&gt; populates the page cache with data from a file so that subsequent reads from that file will not block on disk I/O. See &lt;em&gt;READAHEAD(2)&lt;/em&gt; man page for details.</source>
          <target state="translated">&lt;strong&gt;eio_readahead ()&lt;/strong&gt; 는 파일의 데이터로 페이지 캐시를 채우므로 해당 파일의 후속 읽기가 디스크 I / O에서 차단되지 않습니다. 자세한 내용은 &lt;em&gt;READAHEAD (2)&lt;/em&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="941467522babf9ecf99f0af465239ecf89e7ea1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readahead()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_readahead ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e3a0b796445539dc7e65cf206872bf82db440ea1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readahead()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e308ba226c636e690c891eac92db9f799c24b1e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readdir()&lt;/strong&gt; flag. If specified, the result argument of the callback becomes an array with the following keys: &lt;code&gt;'names'&lt;/code&gt; - array of directory names &lt;code&gt;'dents'&lt;/code&gt; - array of &lt;code&gt;struct
       eio_dirent&lt;/code&gt;-like arrays having the following keys each: &lt;code&gt;'name'&lt;/code&gt; - the directory name; &lt;code&gt;'type'&lt;/code&gt; - one of &lt;em&gt;EIO_DT_*&lt;/em&gt; constants; &lt;code&gt;'inode'&lt;/code&gt; - the inode number, if available, otherwise unspecified;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a36c035ce2d1c8c1a9ca0a5d5631de9e4ec958f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readdir()&lt;/strong&gt; flag. If specified, the result argument of the callback becomes an array with the following keys: &lt;em&gt;'names'&lt;/em&gt; - array of directory names &lt;em&gt;'dents'&lt;/em&gt; - array of &lt;em&gt;struct eio_dirent&lt;/em&gt;-like arrays having the following keys each: &lt;em&gt;'name'&lt;/em&gt; - the directory name; &lt;em&gt;'type'&lt;/em&gt; - one of &lt;em&gt;EIO_DT_*&lt;/em&gt; constants; &lt;em&gt;'inode'&lt;/em&gt; - the inode number, if available, otherwise unspecified;</source>
          <target state="translated">&lt;strong&gt;eio_readdir ()&lt;/strong&gt; 플래그. 지정된 경우 콜백의 결과 인수는 다음 키가있는 배열이됩니다. &lt;em&gt;' &lt;/em&gt;&lt;em&gt;names'-&lt;/em&gt; 디렉토리 이름 배열 &lt;em&gt;' &lt;/em&gt;&lt;em&gt;dents'&lt;/em&gt; - &lt;em&gt;struct eio_dirent의&lt;/em&gt; 배열- 각각 다음 키를 갖는 배열 : &lt;em&gt;' &lt;/em&gt;&lt;em&gt;name'-&lt;/em&gt; 디렉토리 이름; &lt;em&gt;' &lt;/em&gt;&lt;em&gt;type'&lt;/em&gt; - &lt;em&gt;EIO_DT_ *&lt;/em&gt; 상수 중 하나입니다 . &lt;em&gt;'inode'-&lt;/em&gt; 사용 가능한 경우 inode 번호, 지정되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="15dd32c8c6fa43515b49aa57baff9880c71b9f99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readdir()&lt;/strong&gt; returns request resource on success, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error. Sets &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; function according to &lt;code&gt;flags&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;eio_readdir ()&lt;/strong&gt; 은 성공하면 요청 리소스를, 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 . &lt;code&gt;flags&lt;/code&gt; 에 따라 &lt;code&gt;callback&lt;/code&gt; 함수 의 &lt;code&gt;result&lt;/code&gt; 인수를 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="eed2dd35cbe00bbda257162289919ac598c65dbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readdir()&lt;/strong&gt; returns request resource on success, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error. Sets &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; function according to &lt;code&gt;flags&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c73f7166ed9f4ebb2613b6cd3f84ee7fbf56c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_readlink ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b060be0f162617267e5870fa236890b8c8958dbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_readlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05766bac41a9671ecd1b71f929fc1f8231b6872" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_realpath()&lt;/strong&gt; returns the canonicalized absolute pathname in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; function.</source>
          <target state="translated">&lt;strong&gt;eio_realpath ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; 함수의 &lt;code&gt;result&lt;/code&gt; 인수 에서 정규화 된 절대 경로 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="087793059a49ad3533876d9ee773436a1dbaf705" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rename()&lt;/strong&gt; renames or moves a file to new location.</source>
          <target state="translated">&lt;strong&gt;eio_rename ()&lt;/strong&gt; 은 파일의 이름을 바꾸거나 새 위치로 옮깁니다.</target>
        </trans-unit>
        <trans-unit id="7e83511438e0874052cd85aa985ed88ea309964d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rename()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_rename ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="64610e731ec19c1868006b9314ddd9f3d393f551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rename()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393197395692e25521bed8872cac45c723cc4f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rmdir()&lt;/strong&gt; removes a directory.</source>
          <target state="translated">&lt;strong&gt;eio_rmdir ()&lt;/strong&gt; 은 디렉토리를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="8c06fc4bce062ae4387ecf63ff709905cc58f48a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rmdir()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_rmdir ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d927497c99b9606150796a982d7f84e0e9fdb2dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_rmdir()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296001efa17ffd7a10c91bef037832759d6ad735" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_seek()&lt;/strong&gt; repositions the offset of the open file associated with stream, Socket resource, or file descriptor specified by &lt;code&gt;fd&lt;/code&gt; to the argument &lt;code&gt;offset&lt;/code&gt; according to the directive &lt;code&gt;whence&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;strong&gt;eio_seek ()&lt;/strong&gt; 에 의해 지정된 스트림 소켓 리소스, 파일 디스크립터와 관련된 개방 파일의 오프셋으로 재배치 &lt;code&gt;fd&lt;/code&gt; 인수에 &lt;code&gt;offset&lt;/code&gt; 지시자에 따른 &lt;code&gt;whence&lt;/code&gt; 로서 다음과 같다 :</target>
        </trans-unit>
        <trans-unit id="54d3616456cbe83e2f4b30b90358fe23e9435ec6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_seek()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_seek ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d8252e4f716c3d81b3ca7e73f4930c5f79bc3c37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_seek()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180b9a662183a1cd6ecf7058bc55d3058d502745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sendfile()&lt;/strong&gt; copies data between one file descriptor and another. See &lt;code&gt;SENDFILE(2)&lt;/code&gt; man page for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74b0d61e9f1f42eb405b1eea484f5bc363a6f07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sendfile()&lt;/strong&gt; copies data between one file descriptor and another. See &lt;em&gt;SENDFILE(2)&lt;/em&gt; man page for details.</source>
          <target state="translated">&lt;strong&gt;eio_sendfile ()&lt;/strong&gt; 은 한 파일 설명자와 다른 파일 설명 사이에 데이터를 복사합니다. 자세한 내용은 &lt;em&gt;SENDFILE (2)&lt;/em&gt; 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="780474acaf79cfd288b75d04b298a29615830195" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sendfile()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_sendfile ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1ee7fab97527c81aaffa4b38120189849b817f02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sendfile()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5ee2375ff677033596c9156af3159541f70e02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_stat()&lt;/strong&gt; returns file status information in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;eio_stat ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;result&lt;/code&gt; 인수 에서 파일 상태 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6ac1a6de571745a6b8f06d16f093803b01d5bc23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_stat()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error. On success assigns &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; to an array.</source>
          <target state="translated">&lt;strong&gt;eio_stat ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 . 성공 &lt;code&gt;result&lt;/code&gt; &lt;code&gt;callback&lt;/code&gt; 결과 인수를 배열에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="1a3deb8e24d4736eea213154fa8ee0c6da916600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_stat()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error. On success assigns &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; to an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a884485ecfedd16b08773c7ff82bb6973c599cc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_statvfs()&lt;/strong&gt; returns file system statistics information in &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;eio_statvfs ()&lt;/strong&gt; 는 &lt;code&gt;callback&lt;/code&gt; &lt;code&gt;result&lt;/code&gt; 인수 에서 파일 시스템 통계 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="be193881677aebbd01bcc8de5c9958c0288fd99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_statvfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error. On success assigns &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; to an array.</source>
          <target state="translated">&lt;strong&gt;eio_statvfs ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 . 성공 &lt;code&gt;result&lt;/code&gt; &lt;code&gt;callback&lt;/code&gt; 결과 인수를 배열에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="28904ac74c771e8f92c3adee756994279cd37b28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_statvfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error. On success assigns &lt;code&gt;result&lt;/code&gt; argument of &lt;code&gt;callback&lt;/code&gt; to an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c2e9a52bb52a3ad665f86ef224c1fd6eb8a538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_symlink()&lt;/strong&gt; creates a symbolic link &lt;code&gt;new_path&lt;/code&gt; to &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;eio_symlink ()&lt;/strong&gt; 는 &lt;code&gt;path&lt;/code&gt; 대한 심볼릭 링크 &lt;code&gt;new_path&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ec9e5d0c2e2270c3f0af7c0a7b6ef6d3c1f189d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_symlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_symlink ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="15dc4f57b26c7cc1d582e350e23819eb053b4e81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_symlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956d9ed54943bd2c815d94221c87dea5bbbfb0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_sync ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e76bd09511841f3ba13c4175784c0e54dfd7107c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sync()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90551e3e6c9d65cdff2365f8b1f4b15ed855d38c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sync_file_range()&lt;/strong&gt; permits fine control when synchronizing the open file referred to by the file descriptor &lt;code&gt;fd&lt;/code&gt; with disk.</source>
          <target state="translated">&lt;strong&gt;eio_sync_file_range ()&lt;/strong&gt; 는 파일 디스크립터 &lt;code&gt;fd&lt;/code&gt; 가 참조하는 열린 파일 을 디스크와 동기화 할 때 세밀한 제어를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="c856c3ae70355d66e0af9a9db471c5d1a738763e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sync_file_range()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_sync_file_range ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f516fa7e56e04bae500aab688b335d425f95e678" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_sync_file_range()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1622d001bb9841055cd6306a528cd4c646f0f229" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_syncfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_syncfs ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="07f40bbbe3a43d3c5f3529a9f31c2213cb26d7a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_syncfs()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34332f71b5e840c4dd330a51e34c858601bfbfc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_truncate()&lt;/strong&gt; causes the regular file named by &lt;code&gt;path&lt;/code&gt; to be truncated to a size of precisely &lt;code&gt;length&lt;/code&gt; bytes</source>
          <target state="translated">&lt;strong&gt;eio_truncate ()&lt;/strong&gt; 는 &lt;code&gt;path&lt;/code&gt; 로 명명 된 일반 파일 이 정확히 &lt;code&gt;length&lt;/code&gt; 바이트 의 크기로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="de3866b45982b7fe3c3951fb4cc504204a9e8eb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_unlink()&lt;/strong&gt; deletes a name from the file system.</source>
          <target state="translated">&lt;strong&gt;eio_unlink ()&lt;/strong&gt; 는 파일 시스템에서 이름을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="85c0b2098c930f2b0db2f997d416b8dfec62c420" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_unlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_unlink ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f95a57d78ee55fad2a3b7cef8a2cba2478d8627c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_unlink()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dbb7421e9dff13fd6319e0520bca1bfe50705a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_utime()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_utime ()&lt;/strong&gt; 은 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e549679eb658c6f22e1903f264fb70249a633fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_utime()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ec7f6ed8597070e7753333e815d38c86e23314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_write()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;eio_write ()&lt;/strong&gt; 는 성공하면 요청 리소스를 , 오류는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="313d284b3d150837634c2e28fd895124f3c3a645" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_write()&lt;/strong&gt; returns request resource on success or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d46acf27c3951344e60401c3f7d0d37e1015c22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eio_write()&lt;/strong&gt; writes up to &lt;code&gt;length&lt;/code&gt; bytes from &lt;code&gt;str&lt;/code&gt; at &lt;code&gt;offset&lt;/code&gt; offset from the beginning of the file.</source>
          <target state="translated">&lt;strong&gt;eio_write ()&lt;/strong&gt; 까지 기록 &lt;code&gt;length&lt;/code&gt; 바이트 &lt;code&gt;str&lt;/code&gt; 에서 &lt;code&gt;offset&lt;/code&gt; 파일의 선두로부터의 오프셋 (offset).</target>
        </trans-unit>
        <trans-unit id="96df1c4911d2cb36cbb9c33150cda93e6b44fb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;empty()&lt;/strong&gt; now supports expressions, rather than only variables.</source>
          <target state="translated">&lt;strong&gt;empty ()는&lt;/strong&gt; 이제 변수 만이 아니라 표현식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="cd5c958bd6ae64a72c9afa36558b45f67f6faa69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end()&lt;/strong&gt; advances &lt;code&gt;array&lt;/code&gt;'s internal pointer to the last element, and returns its value.</source>
          <target state="translated">&lt;strong&gt;단부 ()&lt;/strong&gt; 로 진행 &lt;code&gt;array&lt;/code&gt; 의 마지막 요소의 내부 포인터, 그 값을 반환한다.</target>
        </trans-unit>
        <trans-unit id="f2d16316ecfb73636eced6e80fb6ccfa5ed6196d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;equals()&lt;/strong&gt; is used to determine if two objects are equal. It's guaranteed that the comparing object will be an instance of the same class as the subject.</source>
          <target state="translated">&lt;strong&gt;equals ()&lt;/strong&gt; 는 두 객체가 같은지 확인하는 데 사용됩니다. 비교 객체는 주제와 동일한 클래스의 인스턴스가 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="1ca5de8abb74a039254675486ca20400862b7ff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;error_log()&lt;/strong&gt; is not binary safe. &lt;code&gt;message&lt;/code&gt; will be truncated by null character.</source>
          <target state="translated">&lt;strong&gt;error_log ()&lt;/strong&gt; 는 이진 안전하지 않습니다. &lt;code&gt;message&lt;/code&gt; 는 널 문자로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="ea031a8dc71a5fa8a38633ff27da76052afe8cc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;escapeshellarg()&lt;/strong&gt; adds single quotes around a string and quotes/escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument. This function should be used to escape individual arguments to shell functions coming from user input. The shell functions include &lt;a href=&quot;function.exec&quot;&gt;exec()&lt;/a&gt;, &lt;a href=&quot;function.system&quot;&gt;system()&lt;/a&gt; and the &lt;a href=&quot;language.operators.execution&quot;&gt;backtick operator&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;escapeshellarg ()&lt;/strong&gt; 는 문자열 주위에 작은 따옴표를 추가하고 기존의 작은 따옴표를 따옴표 / 이스케이프하여 문자열을 쉘 함수에 직접 전달하고 단일 안전 인수로 취급하도록합니다. 이 함수는 개별 인수를 사용자 입력에서 오는 쉘 함수로 이스케이프하는 데 사용해야합니다. 쉘 함수에는 &lt;a href=&quot;function.exec&quot;&gt;exec ()&lt;/a&gt; , &lt;a href=&quot;function.system&quot;&gt;system ()&lt;/a&gt; 및 &lt;a href=&quot;language.operators.execution&quot;&gt;backtick operator가 포함&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="bb57c20f7bd15a623406468745a11c08b05ebe4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;escapeshellcmd()&lt;/strong&gt; escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands. This function should be used to make sure that any data coming from user input is escaped before this data is passed to the &lt;a href=&quot;function.exec&quot;&gt;exec()&lt;/a&gt; or &lt;a href=&quot;function.system&quot;&gt;system()&lt;/a&gt; functions, or to the &lt;a href=&quot;language.operators.execution&quot;&gt;backtick operator&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;escapeshellcmd ()&lt;/strong&gt; 는 임의의 명령을 실행하도록 쉘 명령을 속이는 데 사용될 수있는 문자열의 모든 문자를 이스케이프합니다. 이 함수는이 데이터가 &lt;a href=&quot;function.exec&quot;&gt;exec ()&lt;/a&gt; 또는 &lt;a href=&quot;function.system&quot;&gt;system ()&lt;/a&gt; 함수 또는 &lt;a href=&quot;language.operators.execution&quot;&gt;backtick 연산자&lt;/a&gt; 로 전달되기 전에 사용자 입력에서 오는 데이터가 이스케이프되도록하는 데 사용되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="793d08dfab85d0c49aedd290bf8b2e9ea19b5992" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;escapeshellcmd()&lt;/strong&gt; should be used on the whole command string, and it still allows the attacker to pass arbitrary number of arguments. For escaping a single argument &lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg()&lt;/a&gt; should be used instead.</source>
          <target state="translated">&lt;strong&gt;escapeshellcmd ()&lt;/strong&gt; 는 전체 명령 문자열에서 사용해야하며 공격자가 여전히 임의의 수의 인수를 전달할 수 있습니다. 이스케이프하려면 단일 인수 &lt;a href=&quot;function.escapeshellarg&quot;&gt;escapeshellarg ()&lt;/a&gt; 를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="566e430b98624f36cdc14fbe8fd56b4ebdb1a898" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ev_depth()&lt;/strong&gt; returns recursion depth of the default loop.</source>
          <target state="translated">&lt;strong&gt;ev_depth ()&lt;/strong&gt; 는 기본 루프의 재귀 수준을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="54bc9afcc6f82144d2e416967f89be1daaaa0aaa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eval()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; unless &lt;em&gt;return&lt;/em&gt; is called in the evaluated code, in which case the value passed to &lt;em&gt;return&lt;/em&gt; is returned. As of PHP 7, if there is a parse error in the evaluated code, &lt;strong&gt;eval()&lt;/strong&gt; throws a ParseError exception. Before PHP 7, in this case &lt;strong&gt;eval()&lt;/strong&gt; returned &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; and execution of the following code continued normally. It is not possible to catch a parse error in &lt;strong&gt;eval()&lt;/strong&gt; using &lt;a href=&quot;function.set-error-handler&quot;&gt;set_error_handler()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;평가 된 코드에서 &lt;em&gt;return&lt;/em&gt; 이 호출 되지 않으면 &lt;strong&gt;eval ()&lt;/strong&gt; 은 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt;&lt;em&gt; 반환&lt;/em&gt; 하며,이 경우 &lt;em&gt;return에&lt;/em&gt; 전달 된 값 이 반환됩니다. PHP 7부터 평가 된 코드에 구문 분석 오류가있는 경우 &lt;strong&gt;eval ()&lt;/strong&gt; 은 ParseError 예외를 발생시킵니다. PHP 7 이전에는이 ​​경우 &lt;strong&gt;eval ()이 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환 하고 다음 코드의 실행이 정상적으로 계속되었습니다. &lt;a href=&quot;function.set-error-handler&quot;&gt;set_error_handler ()를&lt;/a&gt; 사용하여 &lt;strong&gt;eval ()&lt;/strong&gt; 에서 구문 분석 오류를 포착 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ed105fa850563437d0948eecdaadf71f5e1584cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eval()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; unless &lt;code&gt;return&lt;/code&gt; is called in the evaluated code, in which case the value passed to &lt;code&gt;return&lt;/code&gt; is returned. As of PHP 7, if there is a parse error in the evaluated code, &lt;strong&gt;eval()&lt;/strong&gt; throws a ParseError exception. Before PHP 7, in this case &lt;strong&gt;eval()&lt;/strong&gt; returned &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; and execution of the following code continued normally. It is not possible to catch a parse error in &lt;strong&gt;eval()&lt;/strong&gt; using &lt;a href=&quot;function.set-error-handler&quot;&gt;set_error_handler()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784fb24bca2e67b2c567b78b711b7530ddd66c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_loop()&lt;/strong&gt; returns 0 on success, -1 on error and 1 if no events were registered.</source>
          <target state="translated">&lt;strong&gt;event_base_loop ()&lt;/strong&gt; 는 성공하면 0을, 오류는 -1을, 이벤트가 등록되지 않은 경우 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0aef4b8b10fbfae1afe829df00cd88dc1975dfe2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_loopbreak()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_base_loopbreak ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7e45f93b39ee12e64031e12a0be4dde5c6242587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_loopexit()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_base_loopexit ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d82979fdcd9de92113a38afc44995e40de9f5a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_new()&lt;/strong&gt; returns valid event base resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_base_new ()&lt;/strong&gt; 는 성공시 유효한 이벤트 기본 자원을 리턴 하고 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="77332c2c2371dd0790c41c31ec5bc376afc7c117" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_priority_init()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_base_priority_init ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b66dd03af731c03fb240269a948b432277334475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_base_set()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_base_set ()&lt;/strong&gt; 은 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 오류 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e7acf0f9d97ec525fbf8fca763ec68bfd2ee937e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_base_set()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_base_set ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b868326161a2acbe61939001c13d7fc70bf2c271" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_disable()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_disable ()&lt;/strong&gt; 은 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ba4056fb5ac9d80abc6337f9fe4ca99695c8ad70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_enable()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_enable ()&lt;/strong&gt; 은 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6e7bd196d559a5da0009d9ed45a9b0264af279dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_new()&lt;/strong&gt; returns new buffered event resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_new ()&lt;/strong&gt; 는 성공시 새로운 버퍼링 된 이벤트 리소스를 반환 하고 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f326349acc1c80e24dd3ca12b19ea441f49c0e90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_priority_set()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_priority_set ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="725c0530f72d4bf2628b823d462c82afa3bdfb34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_buffer_write()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_buffer_write ()&lt;/strong&gt; 는 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 에러 &lt;strong&gt;이면 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="776cb44c7b7c4ae7e524470fd0fc4f4eaf600128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event_new()&lt;/strong&gt; returns a new event resource on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;event_new ()&lt;/strong&gt; 는 성공시 새 이벤트 자원을 , 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4952de795652cb3d97b93a606743470604b63838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exec()&lt;/strong&gt; executes the given &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;exec ()&lt;/strong&gt; 는 주어진 &lt;code&gt;command&lt;/code&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="30516e65d7bfb903501a5b778108ba3e707bd5fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_imagetype()&lt;/strong&gt; can be used to avoid calls to other &lt;a href=&quot;https://secure.php.net/manual/en/ref.exif.php&quot;&gt;exif&lt;/a&gt; functions with unsupported file types or in conjunction with &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['HTTP_ACCEPT']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; to check whether or not the viewer is able to see a specific image in the browser.</source>
          <target state="translated">&lt;strong&gt;exif_imagetype ()&lt;/strong&gt; 은 지원되지 않는 파일 형식을 가진 다른 &lt;a href=&quot;https://secure.php.net/manual/en/ref.exif.php&quot;&gt;exif&lt;/a&gt; 함수 에 대한 호출을 피 하거나 &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['HTTP_ACCEPT']&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; 와 함께 뷰어가 브라우저에서 특정 이미지를 볼 수 있는지 여부를 확인하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d794db71f8e9d499890c6892ec140b45a8c8c726" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_imagetype()&lt;/strong&gt; can be used to avoid calls to other &lt;a href=&quot;https://www.php.net/manual/en/ref.exif.php&quot;&gt;exif&lt;/a&gt; functions with unsupported file types or in conjunction with &lt;var&gt;&lt;a href=&quot;reserved.variables.server&quot;&gt;$_SERVER['HTTP_ACCEPT']&lt;/a&gt;&lt;/var&gt; to check whether or not the viewer is able to see a specific image in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6834de99439fbf1274738e6cf82ae15a121a1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_imagetype()&lt;/strong&gt; reads the first bytes of an image and checks its signature.</source>
          <target state="translated">&lt;strong&gt;exif_imagetype ()&lt;/strong&gt; 은 이미지의 첫 바이트를 읽고 서명을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bfcbba82d99c54fd9f518be6d3f44b2c39a7a1ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_imagetype()&lt;/strong&gt; will emit an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if it is unable to read enough bytes from the file to determine the image type.</source>
          <target state="translated">&lt;strong&gt;exif_imagetype ()&lt;/strong&gt; 은 이미지 유형을 결정하기 위해 파일에서 충분한 바이트를 읽을 수없는 경우 &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 를 방출하고 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a4690659bfd43ec5a9466ae06229732dbbf7d100" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_imagetype()&lt;/strong&gt; will emit an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; and return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if it is unable to read enough bytes from the file to determine the image type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb5d851bc59b9e7737393cf4efd8756c711fc6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_read_data()&lt;/strong&gt; also validates EXIF data tags according to the EXIF specification (&lt;a href=&quot;http://exif.org/Exif2-2.PDF&quot;&gt;&amp;raquo; http://exif.org/Exif2-2.PDF&lt;/a&gt;, page 20).</source>
          <target state="translated">&lt;strong&gt;exif_read_data ()&lt;/strong&gt; 는 또한 EXIF ​​사양에 따라 EXIF ​​데이터 태그의 유효성을 검사합니다 ( &lt;a href=&quot;http://exif.org/Exif2-2.PDF&quot;&gt;&amp;raquo;http://exif.org/Exif2-2.PDF&lt;/a&gt; , 페이지 20).</target>
        </trans-unit>
        <trans-unit id="34cedfc60a21da0b8d2e9204b6d3eabd9561b11f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_read_data()&lt;/strong&gt; reads the</source>
          <target state="translated">&lt;strong&gt;exif_read_data ()&lt;/strong&gt; 는</target>
        </trans-unit>
        <trans-unit id="84091d3e764e04fb8bb1b35ff78d5d87b2a6d415" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exif_thumbnail()&lt;/strong&gt; reads the embedded thumbnail of an image.</source>
          <target state="translated">&lt;strong&gt;exif_thumbnail ()&lt;/strong&gt; 은 이미지의 포함 된 썸네일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="9cf3782d16602bbd48835772db3a2899d8cdfe25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;expm1()&lt;/strong&gt; returns the equivalent to 'exp(&lt;code&gt;arg&lt;/code&gt;) - 1' computed in a way that is accurate even if the value of &lt;code&gt;arg&lt;/code&gt; is near zero, a case where 'exp (&lt;code&gt;arg&lt;/code&gt;) - 1' would be inaccurate due to subtraction of two numbers that are nearly equal.</source>
          <target state="translated">&lt;strong&gt;expm1 ()&lt;/strong&gt; 'EXP (에 상응 반환 &lt;code&gt;arg&lt;/code&gt; 값하더라도 정확한 방식으로 계산 - 1)' &lt;code&gt;arg&lt;/code&gt; 제로 근처 'EXP (예이다 &lt;code&gt;arg&lt;/code&gt; 의 감산에 의한 부정확 한 것 - 1)' 거의 같은 두 숫자.</target>
        </trans-unit>
        <trans-unit id="53acf26da2fae24f3b207c31d03d1b4e0a0b68c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ezmlm_hash()&lt;/strong&gt; calculates the hash value needed when keeping EZMLM mailing lists in a MySQL database.</source>
          <target state="translated">&lt;strong&gt;ezmlm_hash ()&lt;/strong&gt; 는 EZMLM 메일 링리스트를 MySQL 데이터베이스에 보관할 때 필요한 해시 값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="3a6b1b4eab2d65d54eed1e19fd075899dc2e8728" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fdf_save_file()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fdf_save_file()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="606c667b081effa67724b00015ec645c04c04216" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fgetcsv()&lt;/strong&gt; is now binary safe</source>
          <target state="translated">&lt;strong&gt;fgetcsv ()&lt;/strong&gt; 는 이제 바이너리 안전</target>
        </trans-unit>
        <trans-unit id="4da5af1e15a454146ec07e44fa59e5c50d650424" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fgetcsv()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if an invalid &lt;code&gt;handle&lt;/code&gt; is supplied or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on other errors, including end of file.</source>
          <target state="translated">&lt;strong&gt;fgetcsv ()&lt;/strong&gt; 는 유효하지 않은 &lt;code&gt;handle&lt;/code&gt; 이 제공 되면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 리턴 하거나 파일 끝을 포함한 다른 오류에 대해 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 리턴 합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94011d42f3896f3e19027648d5d445d1c2025bcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fgetcsv()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if an invalid &lt;code&gt;handle&lt;/code&gt; is supplied or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on other errors, including end of file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3face333ff320aa94f67accd94786dc0a34dd2e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fgets()&lt;/strong&gt; is now binary safe</source>
          <target state="translated">&lt;strong&gt;fgets ()&lt;/strong&gt; 는 이제 바이너리 안전</target>
        </trans-unit>
        <trans-unit id="2e0ce9b57ad8a1706b4af5986f7cab56b77fe230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;file()&lt;/strong&gt; became binary safe</source>
          <target state="translated">&lt;strong&gt;file ()&lt;/strong&gt; 이진 안전이되었습니다</target>
        </trans-unit>
        <trans-unit id="763249c6973eafaa6c70e8567a881bc900c295ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;file_get_contents()&lt;/strong&gt; is the preferred way to read the contents of a file into a string. It will use memory mapping techniques if supported by your OS to enhance performance.</source>
          <target state="translated">&lt;strong&gt;file_get_contents ()&lt;/strong&gt; 는 파일의 내용을 문자열로 읽는 선호되는 방법입니다. OS에서 지원하는 경우 메모리 매핑 기술을 사용하여 성능을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="9e1db5f2736099f41a4a2c559f1d62e0313cdba6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;finfo&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;finfo&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="61740e18e2f7c84fd2734d687761697bdfe5e0cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flock()&lt;/strong&gt; allows you to perform a simple reader/writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).</source>
          <target state="translated">&lt;strong&gt;flock ()을&lt;/strong&gt; 사용하면 거의 모든 플랫폼 (대부분의 Unix 파생 상품 및 Windows 포함)에서 사용할 수있는 간단한 리더 / 라이터 모델을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28757de2c9bdc49faa9e6401dbacb9b4fd128271" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flock()&lt;/strong&gt; is not supported on antiquated filesystems like &lt;code&gt;FAT&lt;/code&gt; and its derivates and will therefore always return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; under these environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0064089b73237516e83160523685ac0cebee108d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flock()&lt;/strong&gt; is not supported on antiquated filesystems like &lt;em&gt;FAT&lt;/em&gt; and its derivates and will therefore always return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; under these environments.</source>
          <target state="translated">&lt;strong&gt;flock ()&lt;/strong&gt; 은 &lt;em&gt;FAT&lt;/em&gt; 및 그 파생물과 같은 구식 파일 시스템에서는 지원되지 않으므로 이러한 환경에서는 항상 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="38f8dbe0b8afa4ed86dabb3f802e6b87c6baa510" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flock()&lt;/strong&gt; uses mandatory locking instead of advisory locking on Windows. Mandatory locking is also supported on Linux and System V based operating systems via the usual mechanism supported by the fcntl() system call: that is, if the file in question has the setgid permission bit set and the group execution bit cleared. On Linux, the file system will also need to be mounted with the mand option for this to work.</source>
          <target state="translated">&lt;strong&gt;flock ()&lt;/strong&gt; 은 Windows에서 권고 잠금 대신 필수 잠금을 사용합니다. fcntl () 시스템 호출에서 지원하는 일반적인 메커니즘을 통해 Linux 및 System V 기반 운영 체제에서도 필수 잠금이 지원됩니다. 즉, 해당 파일에 setgid 권한 비트가 설정되어 있고 그룹 실행 비트가 지워진 경우입니다. Linux에서는 파일 시스템을 mand 옵션과 함께 마운트해야이 기능이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6c6ab5eebe5188c26b2ddba0e26f86e33b13104e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flush()&lt;/strong&gt; may not be able to override the buffering scheme of your web server and it has no effect on any client-side buffering in the browser. It also doesn't affect PHP's userspace output buffering mechanism. This means you will have to call both &lt;a href=&quot;function.ob-flush&quot;&gt;ob_flush()&lt;/a&gt; and &lt;strong&gt;flush()&lt;/strong&gt; to flush the ob output buffers if you are using those.</source>
          <target state="translated">&lt;strong&gt;flush ()&lt;/strong&gt; 는 웹 서버의 버퍼링 체계를 대체하지 못할 수 있으며 브라우저의 클라이언트 측 버퍼링에는 영향을 미치지 않습니다. 또한 PHP의 사용자 공간 출력 버퍼링 메커니즘에는 영향을 미치지 않습니다. 즉 , ob 출력 버퍼를 사용하려면 &lt;a href=&quot;function.ob-flush&quot;&gt;ob_flush ()&lt;/a&gt; 와 &lt;strong&gt;flush ()&lt;/strong&gt; 를 모두 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0c5de97460021c107615ad1dc5ae4d4d117ccb2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fnmatch()&lt;/strong&gt; checks if the passed &lt;code&gt;string&lt;/code&gt; would match the given shell wildcard &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fnmatch ()&lt;/strong&gt; 는 전달 된 &lt;code&gt;string&lt;/code&gt; 이 지정된 쉘 와일드 카드 &lt;code&gt;pattern&lt;/code&gt; 과 일치 하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="16aac123f05c8511d66fd9304ddf3482b77c1435" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fopen()&lt;/strong&gt; binds a named resource, specified by &lt;code&gt;filename&lt;/code&gt;, to a stream.</source>
          <target state="translated">&lt;strong&gt;fopen ()&lt;/strong&gt; 은 &lt;code&gt;filename&lt;/code&gt; 으로 지정된 명명 된 리소스 를 스트림에 바인딩 합니다.</target>
        </trans-unit>
        <trans-unit id="36364b15cc6ffaf136b0c58a527bb2f1d0a3538f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fputcsv()&lt;/strong&gt; formats a line (passed as a &lt;code&gt;fields&lt;/code&gt; array) as CSV and write it (terminated by a newline) to the specified file &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fputcsv ()&lt;/strong&gt; 는 &lt;code&gt;fields&lt;/code&gt; 배열 로 전달 된 행 을 CSV 형식으로 지정하고 줄 바꿈으로 끝나는 지정된 파일 &lt;code&gt;handle&lt;/code&gt; 씁니다 .</target>
        </trans-unit>
        <trans-unit id="82d3a0aa56d22d9604d3a199a815a15b2ac9af9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fputcsv()&lt;/strong&gt; formats a line (passed as a &lt;code&gt;fields&lt;/code&gt; array) as CSV and writes it (terminated by a newline) to the specified file &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb6077ce99b35c95b233266a0e33484bc22bff5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fread()&lt;/strong&gt; reads up to &lt;code&gt;length&lt;/code&gt; bytes from the file pointer referenced by &lt;code&gt;handle&lt;/code&gt;. Reading stops as soon as one of the following conditions is met:</source>
          <target state="translated">&lt;strong&gt;fread ()&lt;/strong&gt; 는 &lt;code&gt;handle&lt;/code&gt; 이 참조하는 파일 포인터에서 최대 &lt;code&gt;length&lt;/code&gt; 바이트를 읽습니다 . 다음 조건 중 하나가 충족되면 읽기가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="6c2be08437ed3b54f836df36af6ec4af907f46dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fsockopen()&lt;/strong&gt; returns a file pointer which may be used together with the other file functions (such as &lt;a href=&quot;function.fgets&quot;&gt;fgets()&lt;/a&gt;, &lt;a href=&quot;function.fgetss&quot;&gt;fgetss()&lt;/a&gt;, &lt;a href=&quot;function.fwrite&quot;&gt;fwrite()&lt;/a&gt;, &lt;a href=&quot;function.fclose&quot;&gt;fclose()&lt;/a&gt;, and &lt;a href=&quot;function.feof&quot;&gt;feof()&lt;/a&gt;). If the call fails, it will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fsockopen ()&lt;/strong&gt; 은 다른 파일 함수 (예 : &lt;a href=&quot;function.fgets&quot;&gt;fgets ()&lt;/a&gt; , &lt;a href=&quot;function.fgetss&quot;&gt;fgetss ()&lt;/a&gt; , &lt;a href=&quot;function.fwrite&quot;&gt;fwrite ()&lt;/a&gt; , &lt;a href=&quot;function.fclose&quot;&gt;fclose ()&lt;/a&gt; 및 &lt;a href=&quot;function.feof&quot;&gt;feof ()&lt;/a&gt; ) 와 함께 사용할 수있는 파일 포인터를 반환합니다 . 호출이 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c060a555c2272377379145c0d69d18047ad946c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fsockopen()&lt;/strong&gt; returns a file pointer which may be used together with the other file functions (such as &lt;a href=&quot;function.fgets&quot;&gt;fgets()&lt;/a&gt;, &lt;a href=&quot;function.fgetss&quot;&gt;fgetss()&lt;/a&gt;, &lt;a href=&quot;function.fwrite&quot;&gt;fwrite()&lt;/a&gt;, &lt;a href=&quot;function.fclose&quot;&gt;fclose()&lt;/a&gt;, and &lt;a href=&quot;function.feof&quot;&gt;feof()&lt;/a&gt;). If the call fails, it will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00390b377f4e87d7ef9ab5b3bfca22b6f76f07c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_close()&lt;/strong&gt; closes the given link identifier and releases the &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ftp_close ()&lt;/strong&gt; 는 주어진 링크 식별자를 닫고 &lt;a href=&quot;language.types.resource&quot;&gt;리소스를&lt;/a&gt; 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="04e8be33ee631c67a9282d3bcec5d8a7756fa3f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_close()&lt;/strong&gt; closes the given link identifier and releases the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c2d19890aa7315c3fa23aedb3c9ffb3388ddf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_connect()&lt;/strong&gt; opens an FTP connection to the specified &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;ftp_connect ()&lt;/strong&gt; 는 지정된 &lt;code&gt;host&lt;/code&gt; 대한 FTP 연결을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="626c7ccd3ed06fbbc46fc8049c2cb4bd92a47744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_delete()&lt;/strong&gt; deletes the file specified by &lt;code&gt;path&lt;/code&gt; from the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_delete ()&lt;/strong&gt; 는 FTP 서버에서 &lt;code&gt;path&lt;/code&gt; 로 지정된 파일을 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="ac47c7a9b437b114ea019d6c6e1162cdeaa70b3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_fget()&lt;/strong&gt; retrieves &lt;code&gt;remote_file&lt;/code&gt; from the FTP server, and writes it to the given file pointer.</source>
          <target state="translated">&lt;strong&gt;ftp_fget ()&lt;/strong&gt; 은 FTP 서버에서 &lt;code&gt;remote_file&lt;/code&gt; 을 검색 하여 지정된 파일 포인터에 씁니다.</target>
        </trans-unit>
        <trans-unit id="8033e400593f485cdef2cec16affc9c49e239bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_fput()&lt;/strong&gt; uploads the data from a file pointer to a remote file on the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_fput ()&lt;/strong&gt; 은 파일 포인터에서 FTP 서버의 원격 파일로 데이터를 업로드합니다.</target>
        </trans-unit>
        <trans-unit id="17c7cb40fee5f50a80caf6888afa522e691642f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_get()&lt;/strong&gt; retrieves a remote file from the FTP server, and saves it into a local file.</source>
          <target state="translated">&lt;strong&gt;ftp_get ()&lt;/strong&gt; 은 FTP 서버에서 원격 파일을 검색하여 로컬 파일에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ab44b8cbaa9939e35f02565945b6d2a12d2e68fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_mdtm()&lt;/strong&gt; does not work with directories.</source>
          <target state="translated">&lt;strong&gt;ftp_mdtm ()&lt;/strong&gt; 은 디렉토리에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf9d7145952014733ab481d067abeb65b8ce708e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_mdtm()&lt;/strong&gt; gets the last modified time for a remote file.</source>
          <target state="translated">&lt;strong&gt;ftp_mdtm ()&lt;/strong&gt; 은 원격 파일의 마지막 수정 시간을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="63d8604921e3fc7254bf510fcddaf6608aea540b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_nb_fget()&lt;/strong&gt; retrieves a remote file from the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_nb_fget ()&lt;/strong&gt; 은 FTP 서버에서 원격 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f4bc6d5c193f4cfb9bfe8e8b3b67e3f56be68094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_nb_fput()&lt;/strong&gt; uploads the data from a file pointer to a remote file on the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_nb_fput ()&lt;/strong&gt; 은 파일 포인터에서 FTP 서버의 원격 파일로 데이터를 업로드합니다.</target>
        </trans-unit>
        <trans-unit id="10a123de986676efb8c61b4f1c1efc3ff5043899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_nb_get()&lt;/strong&gt; retrieves a remote file from the FTP server, and saves it into a local file.</source>
          <target state="translated">&lt;strong&gt;ftp_nb_get ()&lt;/strong&gt; 은 FTP 서버에서 원격 파일을 검색하여 로컬 파일로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="655457c2dc80f93387b20544352ace3fa410804f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_nb_put()&lt;/strong&gt; stores a local file on the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_nb_put ()&lt;/strong&gt; 은 로컬 파일을 FTP 서버에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="116ba908fdc9dadc53a74e82f7f09ca58f8e0d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_pasv()&lt;/strong&gt; turns on or off passive mode. In passive mode, data connections are initiated by the client, rather than by the server. It may be needed if the client is behind firewall.</source>
          <target state="translated">&lt;strong&gt;ftp_pasv ()&lt;/strong&gt; 는 수동 모드를 켜거나 끕니다. 수동 모드에서 데이터 연결은 서버가 아닌 클라이언트에 의해 시작됩니다. 클라이언트가 방화벽 뒤에있는 경우 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15066cd3a940b7752a7d5c3623d10e275b6016c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_put()&lt;/strong&gt; stores a local file on the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_put ()&lt;/strong&gt; 은 FTP 서버에 로컬 파일을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="d79fe096fac9591c9250994c420522369ea864e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_rawlist()&lt;/strong&gt; executes the FTP &lt;strong&gt;LIST&lt;/strong&gt; command, and returns the result as an array.</source>
          <target state="translated">&lt;strong&gt;ftp_rawlist ()&lt;/strong&gt; 는 FTP &lt;strong&gt;LIST&lt;/strong&gt; 명령을 실행 하고 결과를 배열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a2084015847f34bf6a479331076e36d62bc97b04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_rename()&lt;/strong&gt; renames a file or a directory on the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_rename ()&lt;/strong&gt; 은 FTP 서버의 파일 또는 디렉토리 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="cd769cd758e9d35228661100f52269b173a5d211" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_site()&lt;/strong&gt; sends the given &lt;code&gt;SITE&lt;/code&gt; command to the FTP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7b4afab189b043682e3bdb3f124b456238a73b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_site()&lt;/strong&gt; sends the given &lt;em&gt;SITE&lt;/em&gt; command to the FTP server.</source>
          <target state="translated">&lt;strong&gt;ftp_site ()&lt;/strong&gt; 는 제공된 &lt;em&gt;SITE&lt;/em&gt; 명령을 FTP 서버로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="26dda36e4bdb689dcb2e3a4aa1e2c581e36eb7ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_size()&lt;/strong&gt; returns the size of the given file in bytes.</source>
          <target state="translated">&lt;strong&gt;ftp_size ()&lt;/strong&gt; 는 주어진 파일의 크기를 바이트 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82d20757593ac77a2255d78a411069fa5a9512be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; is not intended for use with sFTP. To use sFTP with PHP, please see &lt;a href=&quot;function.ssh2-sftp&quot;&gt;ssh2_sftp()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ftp_ssl_connect ()&lt;/strong&gt; 는 sFTP와 함께 사용하기위한 것이 아닙니다. PHP에서 sFTP를 사용하려면 &lt;a href=&quot;function.ssh2-sftp&quot;&gt;ssh2_sftp ()&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b023579d44a48adcfac6777a6823c0058590d00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; is only available if both the ftp module and the &lt;a href=&quot;https://secure.php.net/manual/en/ref.openssl.php&quot;&gt;OpenSSL&lt;/a&gt; support is built statically into php, this means that on Windows this function will be undefined in the official PHP builds. To make this function available on Windows you must compile your own PHP binaries.</source>
          <target state="translated">&lt;strong&gt;ftp_ssl_connect ()&lt;/strong&gt; 는 ftp 모듈과 &lt;a href=&quot;https://secure.php.net/manual/en/ref.openssl.php&quot;&gt;OpenSSL&lt;/a&gt; 지원이 모두 PHP에 정적으로 구축 된 경우에만 사용할 수 있습니다 . 이는 Windows에서이 기능이 공식 PHP 빌드에서 정의되지 않음을 의미합니다. Windows에서이 기능을 사용하려면 고유 한 PHP 바이너리를 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7a1e5f322b9359d3b05d90169b2825c1dd548da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; opens an &lt;em&gt;explicit&lt;/em&gt; SSL-FTP connection to the specified &lt;code&gt;host&lt;/code&gt;. That implies that &lt;strong&gt;ftp_ssl_connect()&lt;/strong&gt; will succeed even if the server is not configured for SSL-FTP, or its certificate is invalid. Only when &lt;a href=&quot;function.ftp-login&quot;&gt;ftp_login()&lt;/a&gt; is called, the client will send the appropriate AUTH FTP command, so &lt;a href=&quot;function.ftp-login&quot;&gt;ftp_login()&lt;/a&gt; will fail in the mentioned cases.</source>
          <target state="translated">&lt;strong&gt;ftp_ssl_connect ()&lt;/strong&gt; 는 지정된 &lt;code&gt;host&lt;/code&gt; 대한 &lt;em&gt;명시적인&lt;/em&gt; SSL-FTP 연결을 엽니 다 . 이는 서버가 SSL-FTP에 대해 구성되지 않았거나 해당 인증서가 유효하지 않은 경우에도 &lt;strong&gt;ftp_ssl_connect ()&lt;/strong&gt; 가 성공 함을 의미합니다 . &lt;a href=&quot;function.ftp-login&quot;&gt;ftp_login ()&lt;/a&gt; 이 호출 될 때만 클라이언트가 적절한 AUTH FTP 명령을 보내므로 언급 된 경우 &lt;a href=&quot;function.ftp-login&quot;&gt;ftp_login ()&lt;/a&gt; 이 실패합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ae4f08fa117a5ffa2679df7103842b2e50c3732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fwrite()&lt;/strong&gt; returns the number of bytes written, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;fwrite ()&lt;/strong&gt; 는 쓴 바이트 수 또는 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d59f63dfe90fc1c9a3759ce6ffd0a037d794c70b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fwrite()&lt;/strong&gt; returns the number of bytes written, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb40082c5406dfecbc8079bb3f31dacbe9540055" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fwrite()&lt;/strong&gt; writes the contents of &lt;code&gt;string&lt;/code&gt; to the file stream pointed to by &lt;code&gt;handle&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fwrite ()&lt;/strong&gt; 는 &lt;code&gt;handle&lt;/code&gt; 이 가리키는 파일 스트림 에 &lt;code&gt;string&lt;/code&gt; 의 내용을 씁니다 .</target>
        </trans-unit>
        <trans-unit id="0c4dfd6edf15601d8d9cb8d83f21b5fddf561134" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get()&lt;/strong&gt; is O(n) if there are deleted values in the buffer before the accessed index, O(1) otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;액세스 된 인덱스 이전에 버퍼에 삭제 된 값이 있으면 &lt;strong&gt;get ()&lt;/strong&gt; 은 O (n)이고, 그렇지 않으면 O (1)입니다.</target>
        </trans-unit>
        <trans-unit id="d3bdd837755799e84fdb7f3773c2b2c285b5fa0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get()&lt;/strong&gt;, &lt;strong&gt;set()&lt;/strong&gt;, &lt;strong&gt;push()&lt;/strong&gt;, &lt;strong&gt;pop()&lt;/strong&gt; are all O(1).</source>
          <target state="translated">&lt;strong&gt;get ()&lt;/strong&gt; , &lt;strong&gt;set ()&lt;/strong&gt; , &lt;strong&gt;push ()&lt;/strong&gt; , &lt;strong&gt;pop ()&lt;/strong&gt; 은 모두 O (1)입니다.</target>
        </trans-unit>
        <trans-unit id="95381d5aad2dde723d25859dd56b42eeabbf24ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get()&lt;/strong&gt;, &lt;strong&gt;set()&lt;/strong&gt;, &lt;strong&gt;push()&lt;/strong&gt;, &lt;strong&gt;pop()&lt;/strong&gt;, &lt;strong&gt;shift()&lt;/strong&gt;, and &lt;strong&gt;unshift()&lt;/strong&gt; are all O(1).</source>
          <target state="translated">&lt;strong&gt;get ()&lt;/strong&gt; , &lt;strong&gt;set ()&lt;/strong&gt; , &lt;strong&gt;push ()&lt;/strong&gt; , &lt;strong&gt;pop ()&lt;/strong&gt; , &lt;strong&gt;shift ()&lt;/strong&gt; 및 &lt;strong&gt;unshift ()&lt;/strong&gt; 는 모두 O (1)입니다.</target>
        </trans-unit>
        <trans-unit id="96388ff1814ec36ac58074d797b615d198b20f16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_cfg_var()&lt;/strong&gt; was fixed to be able to return &quot;array&quot; ini options.</source>
          <target state="translated">&lt;strong&gt;get_cfg_var ()&lt;/strong&gt; 는 &quot;배열&quot;ini 옵션을 반환 할 수 있도록 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="dfebda71d3fb463b72e7d467eeaf46f7c4db0215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_class_vars()&lt;/strong&gt; will only return the properties that can be accessed from the current scope.</source>
          <target state="translated">&lt;strong&gt;get_class_vars ()&lt;/strong&gt; 는 현재 범위에서 액세스 할 수있는 속성 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9bfb752c8480802e223e1e54ca52d240937c95e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_headers()&lt;/strong&gt; returns an array with the headers sent by the server in response to a HTTP request.</source>
          <target state="translated">&lt;strong&gt;get_headers ()&lt;/strong&gt; 는 HTTP 요청에 대한 응답으로 서버에서 보낸 헤더가있는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c642cb15579a0b73db0ee4512157ee0765eff405" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;get_html_translation_table()&lt;/strong&gt; will return the translation table that is used internally for &lt;a href=&quot;function.htmlspecialchars&quot;&gt;htmlspecialchars()&lt;/a&gt; and &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;get_html_translation_table ()&lt;/strong&gt; 은 &lt;a href=&quot;function.htmlspecialchars&quot;&gt;htmlspecialchars ()&lt;/a&gt; 및 &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities ()에&lt;/a&gt; 내부적으로 사용되는 변환 표를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="857050a08a89b1cefcfaebc1fc3067b9630f0fac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gethostname()&lt;/strong&gt; gets the standard host name for the local machine.</source>
          <target state="translated">&lt;strong&gt;gethostname ()&lt;/strong&gt; 은 로컬 시스템의 표준 호스트 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2d23e580c5b6e22963242304b2eb2d81628a537a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getimagesize()&lt;/strong&gt; can also return some more information in &lt;code&gt;imageinfo&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;getimagesize ()&lt;/strong&gt; 는 &lt;code&gt;imageinfo&lt;/code&gt; 매개 변수에 더 많은 정보를 리턴 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="423d5642e943614754d6e21a94c26def7b183e69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getprotobyname()&lt;/strong&gt; returns the protocol number associated with the protocol &lt;code&gt;name&lt;/code&gt; as per &lt;var&gt;/etc/protocols&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;getprotobyname ()&lt;/strong&gt; 은 &lt;var&gt;/etc/protocols&lt;/var&gt; 에 따라 프로토콜 &lt;code&gt;name&lt;/code&gt; 과 관련된 프로토콜 번호를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="95c152994aefee8b3ef606a1ef537694bb3a225c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getprotobynumber()&lt;/strong&gt; returns the protocol name associated with protocol &lt;code&gt;number&lt;/code&gt; as per &lt;var&gt;/etc/protocols&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;getprotobynumber ()&lt;/strong&gt; 는 &lt;var&gt;/etc/protocols&lt;/var&gt; 에 따라 프로토콜 &lt;code&gt;number&lt;/code&gt; 와 관련된 프로토콜 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ba98e8c1b5e7846ffe7a8c7608b39b1b7696ad95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getservbyname()&lt;/strong&gt; returns the Internet port which corresponds to &lt;code&gt;service&lt;/code&gt; for the specified &lt;code&gt;protocol&lt;/code&gt; as per &lt;var&gt;/etc/services&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;하고 getservbyname ()는&lt;/strong&gt; 인터넷 포트를 반환에 해당하는 &lt;code&gt;service&lt;/code&gt; 지정된위한 &lt;code&gt;protocol&lt;/code&gt; 에 따라 &lt;var&gt;/etc/services&lt;/var&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="8d058f914e6b03bee97aba9db45d314777700e62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getservbyport()&lt;/strong&gt; returns the Internet service associated with &lt;code&gt;port&lt;/code&gt; for the specified &lt;code&gt;protocol&lt;/code&gt; as per &lt;var&gt;/etc/services&lt;/var&gt;.</source>
          <target state="translated">&lt;strong&gt;getservbyport를은 ()&lt;/strong&gt; 와 관련된 인터넷 서비스 리턴 &lt;code&gt;port&lt;/code&gt; 지정된위한 &lt;code&gt;protocol&lt;/code&gt; 에 따라 &lt;var&gt;/etc/services&lt;/var&gt; 에를 .</target>
        </trans-unit>
        <trans-unit id="6cf4061d8187090ba4073bdfcf48ce3b9f81cd6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gzopen()&lt;/strong&gt; can be used to read a file which is not in gzip format; in this case &lt;a href=&quot;function.gzread&quot;&gt;gzread()&lt;/a&gt; will directly read from the file without decompression.</source>
          <target state="translated">&lt;strong&gt;gzopen ()&lt;/strong&gt; 을 사용하여 gzip 형식이 아닌 파일을 읽을 수 있습니다. 이 경우 &lt;a href=&quot;function.gzread&quot;&gt;gzread ()&lt;/a&gt; 는 압축 해제없이 파일에서 직접 읽습니다.</target>
        </trans-unit>
        <trans-unit id="03e42c6047b087b798ae17f151ed3b1bfa40560c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gzread()&lt;/strong&gt; reads up to &lt;code&gt;length&lt;/code&gt; bytes from the given gz-file pointer. Reading stops when &lt;code&gt;length&lt;/code&gt; (uncompressed) bytes have been read or</source>
          <target state="translated">&lt;strong&gt;gzread ()&lt;/strong&gt; 는 주어진 gz 파일 포인터에서 최대 &lt;code&gt;length&lt;/code&gt; 바이트를 읽습니다 . &lt;code&gt;length&lt;/code&gt; (압축되지 않은) 바이트를 읽었을 때 읽기가 중지 되거나</target>
        </trans-unit>
        <trans-unit id="f926c0fd4fe42a92e58265766bf4a2b5acfdfaf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gzwrite()&lt;/strong&gt; writes the contents of &lt;code&gt;data&lt;/code&gt; to the given gz-file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8fb754da2d5793591a38968204d7863ade805a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;gzwrite()&lt;/strong&gt; writes the contents of &lt;code&gt;string&lt;/code&gt; to the given gz-file.</source>
          <target state="translated">&lt;strong&gt;gzwrite ()&lt;/strong&gt; 는 &lt;code&gt;string&lt;/code&gt; 의 내용을 주어진 gz 파일에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="661a6719f4e5b777b1c7638404970340144fe723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;header()&lt;/strong&gt; is used to send a raw</source>
          <target state="translated">&lt;strong&gt;header ()&lt;/strong&gt; 는 raw를 보내는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="b21c950afb5ec9b041779a600ec78d17dcefc917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;header_register_callback()&lt;/strong&gt; is executed just as the headers are about to be sent out, so any output from this function can break output.</source>
          <target state="translated">&lt;strong&gt;header_register_callback ()&lt;/strong&gt; 은 헤더가 전송 되 자마자 실행 &lt;strong&gt;되므로이&lt;/strong&gt; 함수의 출력은 출력을 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d21d062b4720e632107c9a248a35ad3d8209f96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers_list()&lt;/strong&gt; will return a list of headers to be sent to the browser / client. To determine whether or not these headers have been sent yet, use &lt;a href=&quot;function.headers-sent&quot;&gt;headers_sent()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;headers_list ()&lt;/strong&gt; 는 브라우저 / 클라이언트에 전송 될 헤더 목록을 반환합니다. 이러한 헤더가 아직 전송되었는지 여부를 판별하려면 &lt;a href=&quot;function.headers-sent&quot;&gt;headers_sent ()를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e09460a8c21ebb7d23fce53bb1c9585c2ae2f316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers_sent()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if no HTTP headers have already been sent or &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;HTTP 헤더가 전송되지 않은 경우 &lt;strong&gt;headers_sent ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환하고 그렇지 않으면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="222498501176cadaea421f092d5f941fa5be6da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers_sent()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if no HTTP headers have already been sent or &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5680e57823983df12a4a8bdeb65510552bf1bad8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hexdec()&lt;/strong&gt; will ignore any non-hexadecimal characters it encounters.</source>
          <target state="translated">&lt;strong&gt;hexdec ()&lt;/strong&gt; 은 16 진수가 아닌 문자를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="6b6bfca52a07f7ca2ec0e29fa78791bf3cb996ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hexdec()&lt;/strong&gt; will ignore any non-hexadecimal characters it encounters. As of PHP 7.4.0 supplying any invalid characters is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d711eb0daeec999d6c6bde3bb6da6bfb340673e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;html_entity_decode()&lt;/strong&gt; is the opposite of &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt; in that it converts HTML entities in the &lt;code&gt;string&lt;/code&gt; to their corresponding characters.</source>
          <target state="translated">&lt;strong&gt;html_entity_decode ()&lt;/strong&gt; 는 &lt;code&gt;string&lt;/code&gt; HTML 엔터티를 해당 문자 로 변환한다는 점에서 &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities ()&lt;/a&gt; 와 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="2a0f31e0655afa4a19a1381a525e4c457950b5a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hypot()&lt;/strong&gt; returns the length of the hypotenuse of a right-angle triangle with sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, or the distance of the point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) from the origin. This is equivalent to &lt;code&gt;sqrt(x*x + y*y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f4c93cba4d1827fc1316f971b20a3b95c437af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hypot()&lt;/strong&gt; returns the length of the hypotenuse of a right-angle triangle with sides of length &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, or the distance of the point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) from the origin. This is equivalent to &lt;em&gt;sqrt(x*x + y*y)&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;hypot ()&lt;/strong&gt; 는 길이 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 의 변이있는 직각 삼각형의 빗변의 길이 또는 원점 과 점의 거리 ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; )를 반환합니다 . 이것은 &lt;em&gt;sqrt (x * x + y * y)와 같습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4619d07730528a9ff3bc13ee91ce6c8abc4af97d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ibase_blob_add()&lt;/strong&gt; adds data into a blob created with &lt;a href=&quot;function.ibase-blob-create&quot;&gt;ibase_blob_create()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ibase_blob_add는 ()&lt;/strong&gt; 로 생성 된 블롭에 데이터를 추가 &lt;a href=&quot;function.ibase-blob-create&quot;&gt;ibase_blob_create ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98af3500a3e76416b3fa9d4491c6da0d8c1f78c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ibase_blob_create()&lt;/strong&gt; creates a new BLOB for filling with data.</source>
          <target state="translated">&lt;strong&gt;ibase_blob_create ()&lt;/strong&gt; 는 데이터를 채울 새로운 BLOB을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ee053d26b38721cb15ce7970b428e48714893b62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ibase_fetch_assoc()&lt;/strong&gt; fetches one row of data from the &lt;code&gt;result&lt;/code&gt;. If two or more columns of the result have the same field names, the last column will take precedence. To access the other column(s) of the same name, you either need to access the result with numeric indices by using &lt;a href=&quot;function.ibase-fetch-row&quot;&gt;ibase_fetch_row()&lt;/a&gt; or use alias names in your query.</source>
          <target state="translated">&lt;strong&gt;ibase_fetch_assoc ()&lt;/strong&gt; 는 &lt;code&gt;result&lt;/code&gt; 에서 한 행의 데이터를 가져옵니다 . 결과의 두 개 이상의 열에 동일한 필드 이름이 있으면 마지막 열이 우선합니다. 같은 이름의 다른 열에 액세스하려면 &lt;a href=&quot;function.ibase-fetch-row&quot;&gt;ibase_fetch_row ()&lt;/a&gt; 를 사용하여 숫자 인덱스로 결과에 액세스 하거나 쿼리에서 별명을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="13ec885a5249abae638f75993e0136a0b8280a33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ibase_fetch_row()&lt;/strong&gt; fetches one row of data from the given result set.</source>
          <target state="translated">&lt;strong&gt;ibase_fetch_row ()&lt;/strong&gt; 는 주어진 결과 집합에서 한 행의 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="40a21f7db05c6d8b20c61a33a9d88baa97892557" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ibase_pconnect()&lt;/strong&gt; acts very much like &lt;a href=&quot;function.ibase-connect&quot;&gt;ibase_connect()&lt;/a&gt; with two major differences.</source>
          <target state="translated">&lt;strong&gt;ibase_pconnect ()&lt;/strong&gt; 는 크게 두 가지 차이점이 &lt;a href=&quot;function.ibase-connect&quot;&gt;있지만 ibase_connect ()&lt;/a&gt; 와 매우 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="f01be4f9f514652b77da38ae40b74b78d75107e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;image2wbmp()&lt;/strong&gt; is deprecated as of PHP 7.3.0, and will be removed in the next major version. Use &lt;a href=&quot;function.imagewbmp&quot;&gt;imagewbmp()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;image2wbmp ()&lt;/strong&gt; 는 PHP 7.3.0부터 더 이상 사용되지 않으며 다음 주요 버전에서 제거됩니다. 대신 &lt;a href=&quot;function.imagewbmp&quot;&gt;imagewbmp ()&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="91e08a6c5bd729caabb55f84d4c1e5eadddeea87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;image2wbmp()&lt;/strong&gt; outputs or save a</source>
          <target state="translated">&lt;strong&gt;image2wbmp ()&lt;/strong&gt; 출력 또는 저장</target>
        </trans-unit>
        <trans-unit id="68e5b2877d15b786bd97f63a48b969bdb3738d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagealphablending()&lt;/strong&gt; allows for two different modes of drawing on truecolor images. In blending mode, the alpha channel component of the color supplied to all drawing function, such as &lt;a href=&quot;function.imagesetpixel&quot;&gt;imagesetpixel()&lt;/a&gt; determines how much of the underlying color should be allowed to shine through. As a result, gd automatically blends the existing color at that point with the drawing color, and stores the result in the image. The resulting pixel is opaque. In non-blending mode, the drawing color is copied literally with its alpha channel information, replacing the destination pixel. Blending mode is not available when drawing on palette images.</source>
          <target state="translated">&lt;strong&gt;imagealphablending ()을&lt;/strong&gt; 사용하면 트루 컬러 이미지에 서로 다른 두 가지 그리기 모드를 사용할 수 있습니다. 블렌딩 모드에서 &lt;a href=&quot;function.imagesetpixel&quot;&gt;imagesetpixel ()&lt;/a&gt; 과 같은 모든 그리기 함수에 제공되는 색상의 알파 채널 구성 요소 는 기본 색상을 얼마나 비춰 야하는지 결정합니다. 결과적으로 gd는 해당 시점의 기존 색상을 도면 색상과 자동으로 혼합하여 결과를 이미지에 저장합니다. 결과 픽셀이 불투명합니다. 비 블렌딩 모드에서 그리기 색상은 문자 그대로 알파 채널 정보와 함께 복사되어 대상 픽셀을 대체합니다. 팔레트 이미지에 그릴 때는 혼합 모드를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b5f9fd03e829ee60e7636cde981aa6e66c16eee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageantialias()&lt;/strong&gt; is now generally available. Formerly it was only available if PHP was compiled with the bundled version of the GD library.</source>
          <target state="translated">&lt;strong&gt;imageantialias ()&lt;/strong&gt; 가 이제 일반적으로 사용 가능합니다. 이전에는 PHP가 번들 버전의 GD 라이브러리로 컴파일 된 경우에만 사용할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="83e1e053fddea89f719ff18fc83095b8fc373850" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagearc()&lt;/strong&gt; draws an arc of circle centered at the given coordinates.</source>
          <target state="translated">&lt;strong&gt;imagearc ()&lt;/strong&gt; 는 주어진 좌표를 중심으로 원호를 그립니다.</target>
        </trans-unit>
        <trans-unit id="0a7b7e4fe7a6150d12fc9c7de9cb18975b26d76c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagechar()&lt;/strong&gt; draws the first character of &lt;code&gt;c&lt;/code&gt; in the image identified by &lt;code&gt;image&lt;/code&gt; with its upper-left at &lt;code&gt;x&lt;/code&gt;,&lt;code&gt;y&lt;/code&gt; (top left is 0, 0) with the color &lt;code&gt;color&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagechar ()&lt;/strong&gt; 는 &lt;code&gt;image&lt;/code&gt; 에서 왼쪽 상단이 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; (왼쪽 상단이 0, 0) 인 색상으로 &lt;code&gt;color&lt;/code&gt; 지정된 이미지에서 &lt;code&gt;c&lt;/code&gt; 의 첫 문자를 그립니다 .</target>
        </trans-unit>
        <trans-unit id="fe5a9e5ce936c3f0e05ba370437b5861b66c3dd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecolorallocate()&lt;/strong&gt; must be called to create each color that is to be used in the image represented by &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;image로 표시되는 &lt;code&gt;image&lt;/code&gt; 에서 사용할 각 색상을 만들려면 &lt;strong&gt;imagecolorallocate ()&lt;/strong&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="537350bac1a7a433bbcd8eb69c6a782e18a3dbaa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecolorallocatealpha()&lt;/strong&gt; behaves identically to &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt; with the addition of the transparency parameter &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagecolorallocatealpha ()&lt;/strong&gt; 는 투명도 매개 변수 &lt;code&gt;alpha&lt;/code&gt; 를 추가 하여 &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate ()&lt;/a&gt; 와 동일하게 동작합니다 .</target>
        </trans-unit>
        <trans-unit id="ff3d1b8f6e484289b7cca206fd1ac5f1f5ed24f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecopymergegray()&lt;/strong&gt; copy a part of &lt;code&gt;src_im&lt;/code&gt; onto &lt;code&gt;dst_im&lt;/code&gt; starting at the x,y coordinates &lt;code&gt;src_x&lt;/code&gt;, &lt;code&gt;src_y &lt;/code&gt; with a width of &lt;code&gt;src_w&lt;/code&gt; and a height of &lt;code&gt;src_h&lt;/code&gt;. The portion defined will be copied onto the x,y coordinates, &lt;code&gt;dst_x&lt;/code&gt; and &lt;code&gt;dst_y&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagecopymergegray는 ()&lt;/strong&gt; 의 일부로 복사 &lt;code&gt;src_im&lt;/code&gt; 을 상 &lt;code&gt;dst_im&lt;/code&gt; Y 좌표는 X 시작 &lt;code&gt;src_x&lt;/code&gt; , &lt;code&gt;src_y &lt;/code&gt; 를 너비가 &lt;code&gt;src_w&lt;/code&gt; 및 높이 &lt;code&gt;src_h&lt;/code&gt; . 정의 된 부분은 x, y 좌표 &lt;code&gt;dst_x&lt;/code&gt; 및 &lt;code&gt;dst_y&lt;/code&gt; 에 복사 됩니다.</target>
        </trans-unit>
        <trans-unit id="8a022a602cababf7d4ffc1a7cebbc67cef136eca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecopyresampled()&lt;/strong&gt; copies a rectangular portion of one image to another image, smoothly interpolating pixel values so that, in particular, reducing the size of an image still retains a great deal of clarity.</source>
          <target state="translated">&lt;strong&gt;imagecopyresampled ()&lt;/strong&gt; 는 한 이미지의 직사각형 부분을 다른 이미지로 복사하여 픽셀 값을 부드럽게 보간하여 특히 이미지 크기를 줄이면 여전히 많은 선명도를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="9bd4a308c74c6b804e2aaf8e264f70f97908d970" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecopyresized()&lt;/strong&gt; copies a rectangular portion of one image to another image. &lt;code&gt;dst_image&lt;/code&gt; is the destination image, &lt;code&gt;src_image&lt;/code&gt; is the source image identifier.</source>
          <target state="translated">&lt;strong&gt;imagecopyresized ()&lt;/strong&gt; 는 한 이미지의 직사각형 부분을 다른 이미지로 복사합니다. &lt;code&gt;dst_image&lt;/code&gt; 는 대상 이미지이고 &lt;code&gt;src_image&lt;/code&gt; 는 소스 이미지 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="48463c947d9a1638fa45270a9316f5818a18517e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreate()&lt;/strong&gt; returns an image identifier representing a blank image of specified size.</source>
          <target state="translated">&lt;strong&gt;imagecreate ()&lt;/strong&gt; 는 지정된 크기의 빈 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8a2be7a8d71a8774d9434b3222e9655ef4e514bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefrombmp()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefrombmp ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f3f08c38a110e9cf26849637130e497f348f1b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromgif()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromgif ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49429c95866ce11152c7cacca43137b58a9de98c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromjpeg()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromjpeg ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="242db181de309c361be7f51dbfed21b51f2dc3bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefrompng()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefrompng ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bcbb5b76bfbf839e9f53c7184ca019be5600e538" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromstring()&lt;/strong&gt; raises an E_WARNING level error, if the data is not in a recognized format.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;데이터가 인식되는 형식이 아닌 경우 &lt;strong&gt;imagecreatefromstring ()&lt;/strong&gt; 은 E_WARNING 레벨 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7f559fcedfd7ded8fefc8bf1c6b75dd736791922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromstring()&lt;/strong&gt; returns an image identifier representing the image obtained from the given &lt;code&gt;image&lt;/code&gt;. These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, BMP, WBMP, GD2, and WEBP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14ec91d1c377b39c003e499f4f5a88e17c8aa7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromstring()&lt;/strong&gt; returns an image identifier representing the image obtained from the given &lt;code&gt;image&lt;/code&gt;. These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, BMP, WBMP, and GD2.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromstring ()&lt;/strong&gt; 은 주어진 &lt;code&gt;image&lt;/code&gt; 에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다 . PHP 빌드에서 JPEG, PNG, GIF, BMP, WBMP 및 GD2와 같은 유형을 지원하는 경우 이러한 유형이 자동으로 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="d2057d4d3efb22d70a89d0172d8c18e801bcd6d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromwbmp()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromwbmp ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad0c78cbd42d2e594a702bf216717c88cc270a24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromwebp()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromwebp ()&lt;/strong&gt; 는 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="761648d0b60d7b393d0054f30ac0e5c52b39eced" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromxbm()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromxbm ()&lt;/strong&gt; 은 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a9d2a002c8cb6f15e65da483d7e389177c63da6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromxpm()&lt;/strong&gt; is available on Windows.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromxpm ()&lt;/strong&gt; 은 Windows에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d5a7b50d081dfd40dd9c349ec70f27a17f7c28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatefromxpm()&lt;/strong&gt; returns an image identifier representing the image obtained from the given filename.</source>
          <target state="translated">&lt;strong&gt;imagecreatefromxpm ()&lt;/strong&gt; 은 주어진 파일 이름에서 얻은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5578394d9edbdc49faae2ace53116d46e9f4a432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagecreatetruecolor()&lt;/strong&gt; returns an image identifier representing a black image of the specified size.</source>
          <target state="translated">&lt;strong&gt;imagecreatetruecolor ()&lt;/strong&gt; 는 지정된 크기의 검은 이미지를 나타내는 이미지 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="539160f8c99f78b8e3f6e0b2f34cceaf21a2449f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagedestroy()&lt;/strong&gt; frees any memory associated with image &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagedestroy ()&lt;/strong&gt; 는 image &lt;code&gt;image&lt;/code&gt; 와 관련된 메모리를 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="71cb37b2495f21fc5e5c81f4ddb4daee1b7a2af7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageellipse()&lt;/strong&gt; ignores &lt;a href=&quot;function.imagesetthickness&quot;&gt;imagesetthickness()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;imageellipse ()&lt;/strong&gt; 는 &lt;a href=&quot;function.imagesetthickness&quot;&gt;imagesetthickness &lt;/a&gt;&lt;strong&gt;()를&lt;/strong&gt; 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="c4c91331cb482497a1405fd935e0d05bbe68fc8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagefilledellipse()&lt;/strong&gt; ignores &lt;a href=&quot;function.imagesetthickness&quot;&gt;imagesetthickness()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;imagefilledellipse ()&lt;/strong&gt; 는 &lt;a href=&quot;function.imagesetthickness&quot;&gt;imagesetthickness &lt;/a&gt;&lt;strong&gt;()를&lt;/strong&gt; 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="4e77112933bd7a8d630911a53046addd8bdcdb20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagefilledpolygon()&lt;/strong&gt; creates a filled polygon in the given &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagefilledpolygon ()&lt;/strong&gt; 은 주어진 &lt;code&gt;image&lt;/code&gt; 에 채워진 다각형을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="60bd079b572292171714d0d3cbdacedf1362766f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagefilltoborder()&lt;/strong&gt; performs a flood fill whose border color is defined by &lt;code&gt;border&lt;/code&gt;. The starting point for the fill is &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; (top left is 0, 0) and the region is filled with color &lt;code&gt;color&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagefilltoborder ()는&lt;/strong&gt; 그 테두리 색으로 정의되는 칠해 수행 &lt;code&gt;border&lt;/code&gt; . 채우기 시작점은 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; (왼쪽 상단은 0, 0)이며 영역은 color &lt;code&gt;color&lt;/code&gt; 로 채워 집니다 .</target>
        </trans-unit>
        <trans-unit id="0b45a6add2fd2eab4d6c41e70eacbdf7cb808282" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagefilter()&lt;/strong&gt; applies the given filter &lt;code&gt;filtertype&lt;/code&gt; on the &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagefilter ()&lt;/strong&gt; 는 주어진 필터 필터 &lt;code&gt;filtertype&lt;/code&gt; 을 &lt;code&gt;image&lt;/code&gt; 에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="877f90c76ba4fb4d3a4c9d4b6b0881ff42528090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageftbbox()&lt;/strong&gt; is an extended variant of &lt;a href=&quot;function.imagettfbbox&quot;&gt;imagettfbbox()&lt;/a&gt; which additionally supports the &lt;code&gt;extrainfo&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imageftbbox ()&lt;/strong&gt; 는 &lt;code&gt;extrainfo&lt;/code&gt; 를 추가로 지원하는 &lt;a href=&quot;function.imagettfbbox&quot;&gt;imagettfbbox ()&lt;/a&gt; 의 확장 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="282d1e49b50a0df01281d06a5d2f4c30aa5d3dd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageftbbox()&lt;/strong&gt; returns an array with 8 elements representing four points making the bounding box of the text:</source>
          <target state="translated">&lt;strong&gt;imageftbbox ()&lt;/strong&gt; 는 텍스트의 경계 상자를 만드는 4 개의 점을 나타내는 8 개의 요소가있는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="112c57a71e95b3ed52b4ad04a2d1e0d7870f87c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagefttext()&lt;/strong&gt; is an extended variant of &lt;a href=&quot;function.imagettftext&quot;&gt;imagettftext()&lt;/a&gt; which additionally supports the &lt;code&gt;extrainfo&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagefttext ()&lt;/strong&gt; 는 &lt;code&gt;extrainfo&lt;/code&gt; 를 추가로 지원하는 &lt;a href=&quot;function.imagettftext&quot;&gt;imagettftext ()&lt;/a&gt; 의 확장 변형입니다 .</target>
        </trans-unit>
        <trans-unit id="cf943dd151664ed9fccf47d5ea3bec64bc240b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagegd()&lt;/strong&gt; now allows to output truecolor images. Formerly, these have been implicitly converted to palette.</source>
          <target state="translated">&lt;strong&gt;imagegd ()는&lt;/strong&gt; 이제 트루 컬러 이미지를 출력 할 수 있습니다. 이전에는 팔레트로 암시 적으로 변환되었습니다.</target>
        </trans-unit>
        <trans-unit id="e330087a0ce78bbd4d4baabcfe6a55270c5fc2b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagegetclip()&lt;/strong&gt; retrieves the current clipping rectangle, i.e. the area beyond which no pixels will be drawn.</source>
          <target state="translated">&lt;strong&gt;imagegetclip ()&lt;/strong&gt; 은 현재 클리핑 사각형, 즉 픽셀이 그려지지 않는 영역을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="48ae5424f98b0169cd4670547a843bf722ffafef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagegif()&lt;/strong&gt; creates the</source>
          <target state="translated">&lt;strong&gt;imagegif ()&lt;/strong&gt; 는</target>
        </trans-unit>
        <trans-unit id="c5aff403dd5370edfcc9f7966cc649e8e3c41afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageinterlace()&lt;/strong&gt; turns the interlace bit on or off.</source>
          <target state="translated">&lt;strong&gt;imageinterlace ()&lt;/strong&gt; 는 인터레이스 비트를 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="0806ba956f442ec16fb0da63461c0492beed8ca5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageistruecolor()&lt;/strong&gt; finds whether the image &lt;code&gt;image&lt;/code&gt; is a truecolor image.</source>
          <target state="translated">&lt;strong&gt;imageistruecolor ()&lt;/strong&gt; 는 이미지 &lt;code&gt;image&lt;/code&gt; 가 트루 컬러 이미지 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="825fd63f98e3d42b4565f08acb68757b1cbf5d3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagejpeg()&lt;/strong&gt; creates a</source>
          <target state="translated">&lt;strong&gt;imagejpeg ()&lt;/strong&gt; 는</target>
        </trans-unit>
        <trans-unit id="b7d86735145f9f10d70e2ed5ab59866c7f368c87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageloadfont()&lt;/strong&gt; loads a user-defined bitmap and returns its identifier.</source>
          <target state="translated">&lt;strong&gt;imageloadfont ()&lt;/strong&gt; 는 사용자 정의 비트 맵을로드하고 해당 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70e72356dc1d0e192908a6ba9aed70a90609ae4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageopenpolygon()&lt;/strong&gt; draws an open polygon on the given &lt;code&gt;image&lt;/code&gt;. Contrary to &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon()&lt;/a&gt;, no line is drawn between the last and the first point.</source>
          <target state="translated">&lt;strong&gt;imageopenpolygon ()&lt;/strong&gt; 은 주어진 &lt;code&gt;image&lt;/code&gt; 에 열린 다각형을 그립니다 . &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon ()&lt;/a&gt; 과 달리 마지막 점과 첫 번째 점 사이에 선이 그려지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c1fa3a1070fc9b6a4e090743c9956a2da7a7c72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagepalettecopy()&lt;/strong&gt; copies the palette from the &lt;code&gt;source&lt;/code&gt; image to the &lt;code&gt;destination&lt;/code&gt; image.</source>
          <target state="translated">&lt;strong&gt;imagepalettecopy ()&lt;/strong&gt; 는 &lt;code&gt;source&lt;/code&gt; 이미지에서 &lt;code&gt;destination&lt;/code&gt; 이미지 로 팔레트를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="ac058ff5bee6f94840fc8f581714fc65a6de3d90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagepolygon()&lt;/strong&gt; creates a polygon in the given &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;imagepolygon ()&lt;/strong&gt; 은 주어진 &lt;code&gt;image&lt;/code&gt; 다각형을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6e535d382d5fb87f40eb36dd7ed074e4fd8d56d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagepsfreefont()&lt;/strong&gt; frees memory used by a PostScript Type 1 font.</source>
          <target state="translated">&lt;strong&gt;imagepsfreefont ()&lt;/strong&gt; 는 PostScript Type 1 글꼴이 사용하는 메모리를 비 &lt;strong&gt;웁니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="270c7469606803d79e0a27c3b5ce839eda9b98df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagerectangle()&lt;/strong&gt; creates a rectangle starting at the specified coordinates.</source>
          <target state="translated">&lt;strong&gt;imagerectangle ()&lt;/strong&gt; 은 지정된 좌표에서 시작하여 사각형을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9ee68a7ad76c08fb104f5c02a7f39adcdda90dec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imageresolution()&lt;/strong&gt; allows to set and get the resolution of an image in DPI (dots per inch). If none of the optional parameters is given, the current resolution is returned as indexed array. If only &lt;code&gt;res_x&lt;/code&gt; is given, the horizontal and vertical resolution are set to this value. If both optional parameters are given, the horizontal and vertical resolution are set to these values, respectively.</source>
          <target state="translated">&lt;strong&gt;imageresolution ()을&lt;/strong&gt; 사용하면 DPI (인치당 도트 수)로 이미지의 해상도를 설정하고 가져올 수 있습니다. 선택적 매개 변수가 제공되지 않으면 현재 해상도가 인덱스 배열로 반환됩니다. &lt;code&gt;res_x&lt;/code&gt; 만 제공하면 가로 및 세로 해상도가이 값으로 설정됩니다. 두 개의 선택적 매개 변수가 제공되면 수평 및 수직 해상도가 각각이 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="461627ce10841e2d247a1b576f82860ea5e87cb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesavealpha()&lt;/strong&gt; sets the flag to attempt to save full alpha channel information (as opposed to single-color transparency) when saving PNG images.</source>
          <target state="translated">&lt;strong&gt;imagesavealpha ()&lt;/strong&gt; 는 PNG 이미지를 저장할 때 전체 알파 채널 정보 (단색 투명도와 반대)를 저장하도록 플래그를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="debb7a615ed83675bfb21d6b534cd8195790da26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesavealpha()&lt;/strong&gt; sets the flag which determines whether to retain full alpha channel information (as opposed to single-color transparency) when saving PNG images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e2d3b2569831ac3d4ca6308948b873d77ff094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagescale()&lt;/strong&gt; scales an image using the given interpolation algorithm.</source>
          <target state="translated">&lt;strong&gt;imagescale ()&lt;/strong&gt; 은 주어진 보간 알고리즘을 사용하여 이미지의 크기를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="12d15aa5ec0fd7b14d372bf7c4c96fd41ed846aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesetbrush()&lt;/strong&gt; sets the brush image to be used by all line drawing functions (such as &lt;a href=&quot;function.imageline&quot;&gt;imageline()&lt;/a&gt; and &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon()&lt;/a&gt;) when drawing with the special colors &lt;strong&gt;&lt;code&gt;IMG_COLOR_BRUSHED&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;IMG_COLOR_STYLEDBRUSHED&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;imagesetbrush ()&lt;/strong&gt; 는 특수 색상 &lt;strong&gt; &lt;code&gt;IMG_COLOR_BRUSHED&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;IMG_COLOR_STYLEDBRUSHED&lt;/code&gt; 로&lt;/strong&gt; 그릴 때 모든 선 그리기 함수 (예 : &lt;a href=&quot;function.imageline&quot;&gt;imageline ()&lt;/a&gt; 및 &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon ()&lt;/a&gt; )에서 사용할 브러시 이미지를 설정합니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b18cdc3d1421829eff3caa301cae122ffe32c2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesetclip()&lt;/strong&gt; sets the current clipping rectangle, i.e. the area beyond which no pixels will be drawn.</source>
          <target state="translated">&lt;strong&gt;imagesetclip ()&lt;/strong&gt; 은 현재 클리핑 사각형, 즉 픽셀이 그려지지 않는 영역을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="86a280e3fb74abf55c5bd5bd0a18e38770c1d2f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesetpixel()&lt;/strong&gt; draws a pixel at the specified coordinate.</source>
          <target state="translated">&lt;strong&gt;imagesetpixel ()&lt;/strong&gt; 은 지정된 좌표에서 픽셀을 그립니다.</target>
        </trans-unit>
        <trans-unit id="bd2502eb2af3e460547f4ac86c1ce6ee3b002511" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesetstyle()&lt;/strong&gt; sets the style to be used by all line drawing functions (such as &lt;a href=&quot;function.imageline&quot;&gt;imageline()&lt;/a&gt; and &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon()&lt;/a&gt;) when drawing with the special color &lt;strong&gt;&lt;code&gt;IMG_COLOR_STYLED&lt;/code&gt;&lt;/strong&gt; or lines of images with color &lt;strong&gt;&lt;code&gt;IMG_COLOR_STYLEDBRUSHED&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;imagesetstyle ()는&lt;/strong&gt; 모든 선 그리기 기능에서 사용되는 스타일을 설정 (예 : &lt;a href=&quot;function.imageline&quot;&gt;이미지 라인 소프트웨어 ()&lt;/a&gt; 및 &lt;a href=&quot;function.imagepolygon&quot;&gt;imagepolygon ()&lt;/a&gt; )에 특별한 색상을 그릴 때 &lt;strong&gt; &lt;code&gt;IMG_COLOR_STYLED&lt;/code&gt; &lt;/strong&gt; 또는 컬러 이미지의 라인 &lt;strong&gt; &lt;code&gt;IMG_COLOR_STYLEDBRUSHED&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f569f3f0a97da4d780fc59205ccc35ba9c1541c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesetthickness()&lt;/strong&gt; sets the thickness of the lines drawn when drawing rectangles, polygons, arcs etc. to &lt;code&gt;thickness&lt;/code&gt; pixels.</source>
          <target state="translated">&lt;strong&gt;imagesetthickness ()&lt;/strong&gt; 는 사각형, 다각형, 호 등을 그릴 때 그린 선의 &lt;code&gt;thickness&lt;/code&gt; 를 두께 픽셀로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7e8ae850dc63c2686f01eb4db2fa1a2b4af70fca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagesettile()&lt;/strong&gt; sets the tile image to be used by all region filling functions (such as &lt;a href=&quot;function.imagefill&quot;&gt;imagefill()&lt;/a&gt; and &lt;a href=&quot;function.imagefilledpolygon&quot;&gt;imagefilledpolygon()&lt;/a&gt;) when filling with the special color &lt;strong&gt;&lt;code&gt;IMG_COLOR_TILED&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;imagesettile ()&lt;/strong&gt; 은 특수 색상 &lt;strong&gt; &lt;code&gt;IMG_COLOR_TILED&lt;/code&gt; 로&lt;/strong&gt; 채울 때 모든 영역 채움 함수 (예 : &lt;a href=&quot;function.imagefill&quot;&gt;imagefill ()&lt;/a&gt; 및 &lt;a href=&quot;function.imagefilledpolygon&quot;&gt;imagefilledpolygon ()&lt;/a&gt; )에서 사용할 타일 이미지를 설정합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5d83269328db65973ea8c1666765c740e9b4fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagetruecolortopalette()&lt;/strong&gt; converts a truecolor image to a palette image. The code for this function was originally drawn from the Independent JPEG Group library code, which is excellent. The code has been modified to preserve as much alpha channel information as possible in the resulting palette, in addition to preserving colors as well as possible. This does not work as well as might be hoped. It is usually best to simply produce a truecolor output image instead, which guarantees the highest output quality.</source>
          <target state="translated">&lt;strong&gt;imagetruecolortopalette ()&lt;/strong&gt; 는 트루 컬러 이미지를 팔레트 이미지로 변환합니다. 이 함수의 코드는 원래 Independent JPEG Group 라이브러리 코드에서 가져 왔습니다. 색상을 유지하는 것 외에도 결과 팔레트에서 가능한 많은 알파 채널 정보를 유지하도록 코드가 수정되었습니다. 이것은 기대 한대로 작동하지 않습니다. 일반적으로 단순히 트루 컬러 출력 이미지를 만들어 최상의 출력 품질을 보장하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="85e60becf1ceb99beeb21056f8cf32442705ec1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagettfbbox()&lt;/strong&gt; returns an array with 8 elements representing four points making the bounding box of the text on success and &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;imagettfbbox ()&lt;/strong&gt; 는 성공시 텍스트의 경계 상자를 만들고 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 만드는 4 개의 점을 나타내는 8 개의 요소가있는 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b3596161e7923a7361c42d7a0e5af21bd44d1085" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagettfbbox()&lt;/strong&gt; returns an array with 8 elements representing four points making the bounding box of the text on success and &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde548ee723101b049793ad76f1a8e88bc47224" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imagewbmp()&lt;/strong&gt; outputs or save a</source>
          <target state="translated">&lt;strong&gt;imagewbmp ()&lt;/strong&gt; 출력 또는 저장</target>
        </trans-unit>
        <trans-unit id="e80927bcef06d6d11e4e15c44621961b35256ac1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_body()&lt;/strong&gt; returns the body of the message, numbered &lt;code&gt;msg_number&lt;/code&gt; in the current mailbox.</source>
          <target state="translated">&lt;strong&gt;imap_body ()&lt;/strong&gt; 는 현재 메일 함에서 메시지 본문 &lt;strong&gt;( &lt;/strong&gt; &lt;code&gt;msg_number&lt;/code&gt; &lt;strong&gt;)을&lt;/strong&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="0262b36347c879b76e51cc5362c1cf2d9faec01a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_body()&lt;/strong&gt; will only return a verbatim copy of the message body. To extract single parts of a multipart MIME-encoded message you have to use &lt;a href=&quot;function.imap-fetchstructure&quot;&gt;imap_fetchstructure()&lt;/a&gt; to analyze its structure and &lt;a href=&quot;function.imap-fetchbody&quot;&gt;imap_fetchbody()&lt;/a&gt; to extract a copy of a single body component.</source>
          <target state="translated">&lt;strong&gt;imap_body ()&lt;/strong&gt; 는 메시지 본문의 완전한 사본 만 반환합니다. 여러 부분으로 구성된 MIME 인코딩 메시지의 단일 부분을 추출하려면 &lt;a href=&quot;function.imap-fetchstructure&quot;&gt;imap_fetchstructure ()&lt;/a&gt; 를 사용하여 구조를 분석하고 &lt;a href=&quot;function.imap-fetchbody&quot;&gt;imap_fetchbody ()&lt;/a&gt; 를 사용하여 단일 본문 구성 요소의 복사본을 추출해야합니다.</target>
        </trans-unit>
        <trans-unit id="8a00c27521963670d637282cf6e452622b62040a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_mail_move()&lt;/strong&gt; will flag the original mail with a delete flag, to successfully delete it a call to the &lt;a href=&quot;function.imap-expunge&quot;&gt;imap_expunge()&lt;/a&gt; function must be made.</source>
          <target state="translated">&lt;strong&gt;imap_mail_move ()&lt;/strong&gt; 는 원본 메일에 삭제 플래그를 지정하여 성공적으로 삭제하려면 &lt;a href=&quot;function.imap-expunge&quot;&gt;imap_expunge ()&lt;/a&gt; 함수를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6dae46be916071205fd38e113959be8cad70e90a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_ping()&lt;/strong&gt; pings the stream to see if it's still active. It may discover new mail; this is the preferred method for a periodic &quot;new mail check&quot; as well as a &quot;keep alive&quot; for servers which have inactivity timeout.</source>
          <target state="translated">&lt;strong&gt;imap_ping ()&lt;/strong&gt; 은 스트림이 핑되어 여전히 활성 상태인지 확인합니다. 새 메일을 발견 할 수 있습니다. 이 방법은 주기적 &quot;새 메일 확인&quot;및 비활성 시간 초과가있는 서버의 &quot;활성 유지&quot;에 선호되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="79c775530ef06b9fcad9a99d41c0a46865fbcdb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_thread()&lt;/strong&gt; returns an associative array containing a tree of messages threaded by &lt;code&gt;REFERENCES&lt;/code&gt;, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d8757e52d5adb71f5f9a5e6504c46bcaa5bee1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap_thread()&lt;/strong&gt; returns an associative array containing a tree of messages threaded by &lt;em&gt;REFERENCES&lt;/em&gt;, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;imap_thread ()&lt;/strong&gt; 는 &lt;em&gt;REFERENCES&lt;/em&gt; 에 의해 스레드 된 메시지 트리 또는 오류시 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 포함하는 연관 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0add70efd39f81d36456d3694398fe7b4dfe773f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;implode()&lt;/strong&gt; can, for historical reasons, accept its parameters in either order. For consistency with &lt;a href=&quot;function.explode&quot;&gt;explode()&lt;/a&gt;, however, it is &lt;em&gt;deprecated&lt;/em&gt; not to use the documented order of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9106bc5cf5ba61693aec239270995a9f5185bbd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;implode()&lt;/strong&gt; can, for historical reasons, accept its parameters in either order. For consistency with &lt;a href=&quot;function.explode&quot;&gt;explode()&lt;/a&gt;, however, it may be less confusing to use the documented order of arguments.</source>
          <target state="translated">&lt;strong&gt;implode ()&lt;/strong&gt; 는 역사적 이유로 매개 변수를 어느 순서 &lt;strong&gt;로든&lt;/strong&gt; 수용 할 수 있습니다. 그러나 &lt;a href=&quot;function.explode&quot;&gt;explode ()&lt;/a&gt; 와 일관성을 유지 하려면 문서화 된 인수 순서를 사용하는 것이 덜 혼란 스러울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6a21556cfda6cce269ea69a37ff1396b88181ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ini_get()&lt;/strong&gt; can't read &quot;array&quot; ini options such as pdo.dsn.*, and returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; in this case.</source>
          <target state="translated">&lt;strong&gt;ini_get ()&lt;/strong&gt; 은 pdo.dsn. *와 같은 &quot;배열&quot;ini 옵션을 읽을 수 없으며이 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="be251888e1953297c3f5f516df66053ecc5a2ee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ini_get()&lt;/strong&gt; can't read &quot;array&quot; ini options such as pdo.dsn.*, and returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a7d2bccdc0d8c2c54e13318a2eb6f89186b11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ini_get_all()&lt;/strong&gt; ignores &quot;array&quot; ini options such as pdo.dsn.*.</source>
          <target state="translated">&lt;strong&gt;ini_get_all ()&lt;/strong&gt; 은 pdo.dsn. *와 같은 &quot;array&quot;ini 옵션을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="d69a5b76ae5a215417a7d151881249bffec4c4ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inotify_add_watch()&lt;/strong&gt; adds a new watch or modify an existing watch for the file or directory specified in &lt;code&gt;pathname&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;inotify_add_watch ()&lt;/strong&gt; 는 새 시계를 추가하거나 &lt;code&gt;pathname&lt;/code&gt; 에 지정된 파일 또는 디렉토리의 기존 시계를 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1b313816f66f609211385bbe08c77160265f6d7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inotify_rm_watch()&lt;/strong&gt; removes the watch &lt;code&gt;watch_descriptor&lt;/code&gt; from the inotify instance &lt;code&gt;inotify_instance&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;inotify_rm_watch ()&lt;/strong&gt; 는 inotify 인스턴스 &lt;code&gt;inotify_instance&lt;/code&gt; 에서 watch &lt;code&gt;watch_descriptor&lt;/code&gt; 를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="592e5fd3eaf7a1625fdd54b8782be1cf7dbd9a3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;insert()&lt;/strong&gt; and &lt;strong&gt;remove()&lt;/strong&gt; are O(n).</source>
          <target state="translated">&lt;strong&gt;insert ()&lt;/strong&gt; 및 &lt;strong&gt;remove ()&lt;/strong&gt; 는 O (n)입니다.</target>
        </trans-unit>
        <trans-unit id="ad01b298eac2d5f105f53d0a3f949748c5307837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ip2long()&lt;/strong&gt; will also work with non-complete IP addresses. Read &lt;a href=&quot;http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm&quot;&gt;&amp;raquo; http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;strong&gt;ip2long ()&lt;/strong&gt; 은 완전하지 않은 IP 주소에서도 작동합니다. 자세한 정보는 &lt;a href=&quot;http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm&quot;&gt;&amp;raquo;http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3e211372d597f5b1c157fe664d344c496aad691d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ip2long()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for the IP &lt;em&gt;255.255.255.255&lt;/em&gt; in PHP 5 &amp;lt;= 5.0.2, and &lt;em&gt;-1&lt;/em&gt; on 64-bits systems in PHP 5 &amp;lt;=5.2.4. It was fixed in PHP 5.2.5 where it returns &lt;em&gt;4294967295&lt;/em&gt;. 32-bit systems will return &lt;em&gt;-1&lt;/em&gt; due to the integer value overflowing.</source>
          <target state="translated">&lt;strong&gt;ip2long ()&lt;/strong&gt; 은 PHP 5 &amp;lt;= 5.0.2 의 IP &lt;em&gt;255.255.255.255&lt;/em&gt; 에 대해 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를, PHP 5 &amp;lt;= 5.2.4의 64 비트 시스템에서 &lt;em&gt;-1&lt;/em&gt; 을 반환 &lt;strong&gt;합니다&lt;/strong&gt; . PHP 5.2.5에서 수정되어 &lt;em&gt;4294967295를&lt;/em&gt; 반환합니다 . 정수 값 오버플로로 인해 32 비트 시스템은 &lt;em&gt;-1&lt;/em&gt; 을 반환 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="316acd4627e3d583d52cda89abd69a9d22b08e56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ip2long()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; for the IP &lt;code&gt;255.255.255.255&lt;/code&gt; in PHP 5 &amp;lt;= 5.0.2, and &lt;code&gt;-1&lt;/code&gt; on 64-bits systems in PHP 5 &amp;lt;=5.2.4. It was fixed in PHP 5.2.5 where it returns &lt;code&gt;4294967295&lt;/code&gt;. 32-bit systems will return &lt;code&gt;-1&lt;/code&gt; due to the integer value overflowing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02ed65d10f41cacacbb52b6ae318c635f8e219d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_countable()&lt;/strong&gt; has been added.</source>
          <target state="translated">&lt;strong&gt;is_countable ()&lt;/strong&gt; 이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4d108c5e0f154ee84c649817c7bb7feb46a5eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_object()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for unserialized objects without a class definition (class of &lt;strong&gt;__PHP_Incomplete_Class&lt;/strong&gt;). Previously &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; was returned.</source>
          <target state="translated">&lt;strong&gt;is_object ()&lt;/strong&gt; 는 클래스 정의 ( &lt;strong&gt;__PHP_Incomplete_Class&lt;/strong&gt; 클래스)가없는 직렬화되지 않은 객체에 대해 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; . 이전에는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가 반환되었습니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f03d2d552d43d2e47c4827951d601dab6e2cb6d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_object()&lt;/strong&gt; now returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; for unserialized objects without a class definition (class of &lt;strong&gt;__PHP_Incomplete_Class&lt;/strong&gt;). Previously &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; was returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca84e2665cf1adda512588949023f9fc7bd2bc5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_resource()&lt;/strong&gt; is not a strict type-checking method: it will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;var&lt;/code&gt; is a resource variable that has been closed.</source>
          <target state="translated">&lt;strong&gt;is_resource ()&lt;/strong&gt; 는 엄격한 유형 검사 방법이 아닙니다. &lt;code&gt;var&lt;/code&gt; 가 닫힌 리소스 변수 인 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f4b3680b70a13d63e9655381768653265f74f640" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_resource()&lt;/strong&gt; is not a strict type-checking method: it will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;var&lt;/code&gt; is a resource variable that has been closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cfe65189b86cae72b72a8d6947c7d5a74f89bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_scalar()&lt;/strong&gt; does not consider &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; type values to be scalar as resources are abstract datatypes which are currently based on integers. This implementation detail should not be relied upon, as it may change.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;&lt;a href=&quot;language.types.resource&quot;&gt;자원&lt;/a&gt; 은 현재 정수를 기반으로하는 추상 데이터 유형이므로 &lt;strong&gt;is_scalar ()&lt;/strong&gt; 는 자원 유형 값을 스칼라로 간주하지 않습니다 . 이 구현 세부 사항은 변경 될 수 있으므로 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3b0edb6b020612aa7e0ffd8945701d547f494ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_scalar()&lt;/strong&gt; does not consider NULL to be scalar.</source>
          <target state="translated">&lt;strong&gt;is_scalar ()&lt;/strong&gt; 는 NULL을 스칼라로 간주하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f8fd10067f7a36c2a3d323ac858e25e158ee94a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;is_scalar()&lt;/strong&gt; does not consider resource type values to be scalar as resources are abstract datatypes which are currently based on integers. This implementation detail should not be relied upon, as it may change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f8b6eb06f2a33ca644be5777f15063506e3ebe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isset()&lt;/strong&gt; only works with variables as passing anything else will result in a parse error. For checking if &lt;a href=&quot;language.constants&quot;&gt;constants&lt;/a&gt; are set use the &lt;a href=&quot;function.defined&quot;&gt;defined()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;isset ()&lt;/strong&gt; 은 변수를 사용할 때만 작동합니다. 다른 것을 전달하면 구문 분석 오류가 발생합니다. &lt;a href=&quot;language.constants&quot;&gt;상수&lt;/a&gt; 가 설정되어 있는지 확인 하려면 &lt;a href=&quot;function.defined&quot;&gt;defined ()&lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="743d9c11543a034df2d130783c603565b5f1b17f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isset()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; when checking a variable that has been assigned to &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt;. Also note that a null character (&lt;code&gt;&quot;\0&quot;&lt;/code&gt;) is not equivalent to the PHP &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72c2374d889e0d62c19132a226e2009ca1d9d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;iterator_to_array()&lt;/strong&gt; gained support for key types other than &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; when the &lt;code&gt;use_keys&lt;/code&gt; parameter is enabled.</source>
          <target state="translated">&lt;strong&gt;iterator_to_array ()&lt;/strong&gt; 는 &lt;code&gt;use_keys&lt;/code&gt; 매개 변수가 사용 가능한 경우 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 및 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 이외의 키 유형을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="6d6945632abcd7a5565bedb40c7e3f82c3479275" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jpeg2wbmp()&lt;/strong&gt; has been deprecated as of PHP 7.2.0, and will be removed as of PHP 8.0.0. Use &lt;a href=&quot;function.imagecreatefromjpeg&quot;&gt;imagecreatefromjpeg()&lt;/a&gt; and &lt;a href=&quot;function.imagewbmp&quot;&gt;imagewbmp()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;jpeg2wbmp ()&lt;/strong&gt; 는 PHP 7.2.0부터 더 이상 사용되지 않으며 PHP 8.0.0부터 제거됩니다. 대신 &lt;a href=&quot;function.imagecreatefromjpeg&quot;&gt;imagecreatefromjpeg ()&lt;/a&gt; 및 &lt;a href=&quot;function.imagewbmp&quot;&gt;imagewbmp ()를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="432037113f74b7c62a9654dafba6bb16e0da068e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;judy_type()&lt;/strong&gt; return an integer corresponding to the Judy &lt;a href=&quot;class.judy#judy.types&quot;&gt;type&lt;/a&gt; of the specified Judy &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;judy_type ()&lt;/strong&gt; 은 지정된 Judy &lt;code&gt;array&lt;/code&gt; 의 Judy &lt;a href=&quot;class.judy#judy.types&quot;&gt;유형&lt;/a&gt; 에 해당하는 정수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e0037e6e21251b2409b167d95effcf8a19bf47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;key()&lt;/strong&gt; returns the index element of the current array position.</source>
          <target state="translated">&lt;strong&gt;key ()&lt;/strong&gt; 는 현재 배열 위치의 인덱스 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="072b57dc4c178789ab5d4f89551453d3549fa5ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lcg_value()&lt;/strong&gt; returns a pseudo random number in the range of (0, 1). The function combines two CGs with periods of 2^31 - 85 and 2^31 - 249. The period of this function is equal to the product of both primes.</source>
          <target state="translated">&lt;strong&gt;lcg_value ()&lt;/strong&gt; 는 (0, 1) 범위의 의사 난수를 반환합니다. 이 함수는 두 개의 CG를 2 ^ 31-85 및 2 ^ 31-249주기와 결합합니다.이 함수의주기는 두 소수의 곱과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23db4ab469357401dc6829bfdbb177dba7a4dad5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ldap_compare()&lt;/strong&gt; can NOT be used to compare BINARY values!</source>
          <target state="translated">&lt;strong&gt;ldap_compare ()&lt;/strong&gt; 는 BINARY 값을 비교하는 데 사용할 수 없습니다!</target>
        </trans-unit>
        <trans-unit id="ba06ff6c537acc2513c88cbbc95cb504ff9faccd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ldap_sasl_bind()&lt;/strong&gt; requires</source>
          <target state="translated">&lt;strong&gt;ldap_sasl_bind ()&lt;/strong&gt; 에는</target>
        </trans-unit>
        <trans-unit id="38efcb17f86dbcca3db499941c953a6faec90f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;libXMLError&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;libXMLError&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="4d6d7d145cc19dec642a44ebef23ff978bc5b171" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;libxml_clear_errors()&lt;/strong&gt; clears the libxml error buffer.</source>
          <target state="translated">&lt;strong&gt;libxml_clear_errors ()&lt;/strong&gt; 는 libxml 오류 버퍼를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="36c04e1e0e6339e4f124b2e3dacf3e55605e714d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;libxml_use_internal_errors()&lt;/strong&gt; allows you to disable standard libxml errors and enable user error handling.</source>
          <target state="translated">&lt;strong&gt;libxml_use_internal_errors ()를&lt;/strong&gt; 사용하면 표준 libxml 오류를 비활성화하고 사용자 오류 처리를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="924d7f073d135bcb48694093c05f9aa1e8b26d18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;link()&lt;/strong&gt; creates a hard link.</source>
          <target state="translated">&lt;strong&gt;link ()&lt;/strong&gt; 는 하드 링크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1f9de563fd5e7b5dfa114483b834f00d0d256ec5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;linkinfo()&lt;/strong&gt; returns the &lt;code&gt;st_dev&lt;/code&gt; field of the Unix C stat structure returned by the &lt;code&gt;lstat&lt;/code&gt; system call. Returns a non-negative integer on success, -1 in case the link was not found, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if an open.base_dir violation occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9649c45cb9138f2f747bbe5b5fdf88b2b16847b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;linkinfo()&lt;/strong&gt; returns the &lt;em&gt;st_dev&lt;/em&gt; field of the Unix C stat structure returned by the &lt;em&gt;lstat&lt;/em&gt; system call. Returns 0 or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; in case of error.</source>
          <target state="translated">&lt;strong&gt;linkinfo ()&lt;/strong&gt; 는 &lt;em&gt;lstat&lt;/em&gt; 시스템 호출에 의해 리턴 된 Unix C 통계 구조 의 &lt;em&gt;st_dev&lt;/em&gt; 필드를 리턴합니다 . 오류가 발생하면 0 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0cae78f343a604526f6b041b554c418dfac0e7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;list()&lt;/strong&gt; expressions can no longer be completely empty.</source>
          <target state="translated">&lt;strong&gt;list ()&lt;/strong&gt; 표현식은 더 이상 완전히 비워 둘 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6ad30e22c7451282e1ce31614b9b1efb59aebcf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;localeconv()&lt;/strong&gt; returns data based upon the current locale as set by &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt;. The associative array that is returned contains the following fields:</source>
          <target state="translated">&lt;strong&gt;localeconv ()&lt;/strong&gt; 는 &lt;a href=&quot;function.setlocale&quot;&gt;setlocale ()에&lt;/a&gt; 의해 설정된 현재 로캘을 기반으로 데이터를 반환합니다 . 리턴되는 연관 배열은 다음 필드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b3964233a10ca60a465465fe95ec8b97e21cdf92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;log1p()&lt;/strong&gt; returns log(1 + &lt;code&gt;number&lt;/code&gt;) computed in a way that is accurate even when the value of &lt;code&gt;number&lt;/code&gt; is close to zero. &lt;a href=&quot;function.log&quot;&gt;log()&lt;/a&gt; might only return log(1) in this case due to lack of precision.</source>
          <target state="translated">&lt;strong&gt;log1p ()&lt;/strong&gt; 반환 로그 (1 + &lt;code&gt;number&lt;/code&gt; )의 값 때에도 정확한 방식으로 계산 된 &lt;code&gt;number&lt;/code&gt; 제로에 근접한다. &lt;a href=&quot;function.log&quot;&gt;로그는 ()&lt;/a&gt; 만 정밀도 결핍 때문에이 경우 로그 (1)을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3497992500d406396d716229de58ffa097b930e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lzf_compress()&lt;/strong&gt; compresses the given &lt;code&gt;data&lt;/code&gt; string using LZF encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd12b0e50184e90bd46f5d9665ee789c2a5c32f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max()&lt;/strong&gt; returns the parameter value considered &quot;highest&quot; according to standard comparisons. If multiple values of different types evaluate as equal (e.g. &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;'abc'&lt;/code&gt;) the first provided to the function will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82f146d7667139791e86268517aea4649c618fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;max()&lt;/strong&gt; returns the parameter value considered &quot;highest&quot; according to standard comparisons. If multiple values of different types evaluate as equal (e.g. &lt;em&gt;0&lt;/em&gt; and &lt;em&gt;'abc'&lt;/em&gt;) the first provided to the function will be returned.</source>
          <target state="translated">&lt;strong&gt;max ()&lt;/strong&gt; 는 표준 비교에 따라 &quot;최고&quot;로 간주되는 매개 변수 값을 리턴합니다. 다른 유형의 여러 값이 같은 것으로 평가되면 (예 : &lt;em&gt;0&lt;/em&gt; 및 &lt;em&gt;'abc'&lt;/em&gt; ) 함수에 처음 제공된 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="583dc2b78d3f53d1f469950ab5646809bde29a17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_convert_variables()&lt;/strong&gt; join strings in Array or Object to detect encoding, since encoding detection tends to fail for short strings. Therefore, it is impossible to mix encoding in single array or object.</source>
          <target state="translated">&lt;strong&gt;mb_convert_variables ()&lt;/strong&gt; 는 배열 또는 객체에서 문자열을 조인하여 인코딩을 감지합니다. 인코딩 감지는 짧은 문자열에 대해 실패하기 때문입니다. 따라서 단일 배열이나 객체로 인코딩을 혼합하는 것은 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="2dab402dc195cdd22cb9f3d00450c94c578e51ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg()&lt;/strong&gt; will now set &lt;code&gt;matches&lt;/code&gt; to an empty array, if nothing matched. Formerly, &lt;code&gt;matches&lt;/code&gt; was not modified in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fee877aa58f5ebd310f0e67d80d10010879bf5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg()&lt;/strong&gt; will now set &lt;code&gt;regs&lt;/code&gt; to an empty &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, if nothing matched. Formerly, &lt;code&gt;regs&lt;/code&gt; was not modified in that case.</source>
          <target state="translated">&lt;strong&gt;mb_ereg ()&lt;/strong&gt; 는 이제 일치하는 것이 없으면 &lt;code&gt;regs&lt;/code&gt; 를 빈 &lt;a href=&quot;language.types.array&quot;&gt;배열로&lt;/a&gt; 설정 합니다. 이전에는이 ​​경우 &lt;code&gt;regs&lt;/code&gt; 가 수정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="108fbcfeb79a2d176ba42089620570c180ba26c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the multibyte string matches with the regular expression, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise. The &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; for matching is set by &lt;a href=&quot;function.mb-ereg-search-init&quot;&gt;mb_ereg_search_init()&lt;/a&gt;. If &lt;code&gt;pattern&lt;/code&gt; is not specified, the previous one is used.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;멀티 바이트 문자열이 정규식과 일치하면 &lt;strong&gt;mb_ereg_search ()&lt;/strong&gt; 는 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; , 그렇지 않으면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환합니다. &lt;a href=&quot;language.types.string&quot;&gt;스트링&lt;/a&gt; 매칭에 의해 설정된다 &lt;a href=&quot;function.mb-ereg-search-init&quot;&gt;mb_ereg_search_init ()&lt;/a&gt; . 경우 &lt;code&gt;pattern&lt;/code&gt; 지정되지 않은, 이전이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9f24366474dd22b246e943346054c709899d77fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt; if the multibyte string matches with the regular expression, or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise. The string for matching is set by &lt;a href=&quot;function.mb-ereg-search-init&quot;&gt;mb_ereg_search_init()&lt;/a&gt;. If &lt;code&gt;pattern&lt;/code&gt; is not specified, the previous one is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad98a1aa6260ad0d64a7e48afe788948bcc02161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search_getpos()&lt;/strong&gt; returns the point to start regular expression match for &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search()&lt;/a&gt;, &lt;a href=&quot;function.mb-ereg-search-pos&quot;&gt;mb_ereg_search_pos()&lt;/a&gt;, &lt;a href=&quot;function.mb-ereg-search-regs&quot;&gt;mb_ereg_search_regs()&lt;/a&gt;. The position is represented by bytes from the head of string.</source>
          <target state="translated">&lt;strong&gt;mb_ereg_search_getpos ()&lt;/strong&gt; 는 &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search ()&lt;/a&gt; , &lt;a href=&quot;function.mb-ereg-search-pos&quot;&gt;mb_ereg_search_pos ()&lt;/a&gt; , &lt;a href=&quot;function.mb-ereg-search-regs&quot;&gt;mb_ereg_search_regs ()에&lt;/a&gt; 대한 정규식 일치를 시작할 지점을 반환합니다 . 위치는 문자열 헤드에서 바이트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4f2cf5826cbb264e6174ec2f8d5cb25951628ebc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search_init()&lt;/strong&gt; sets &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt; for a multibyte regular expression. These values are used for &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search()&lt;/a&gt;, &lt;a href=&quot;function.mb-ereg-search-pos&quot;&gt;mb_ereg_search_pos()&lt;/a&gt;, and &lt;a href=&quot;function.mb-ereg-search-regs&quot;&gt;mb_ereg_search_regs()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_ereg_search_init ()&lt;/strong&gt; 는 멀티 바이트 정규식에 대한 &lt;code&gt;string&lt;/code&gt; 및 &lt;code&gt;pattern&lt;/code&gt; 을 설정 합니다 . 이 값은 &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search ()&lt;/a&gt; , &lt;a href=&quot;function.mb-ereg-search-pos&quot;&gt;mb_ereg_search_pos ()&lt;/a&gt; 및 &lt;a href=&quot;function.mb-ereg-search-regs&quot;&gt;mb_ereg_search_regs ()에 사용&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="677498861cdad62cddc91c770bd3e27dc7d22f68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search_regs()&lt;/strong&gt; executes the multibyte regular expression match, and if there are some matched part, it returns an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; including substring of matched part as first element, the first grouped part with brackets as second element, the second grouped part as third element, and so on. It returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">&lt;strong&gt;mb_ereg_search_regs ()&lt;/strong&gt; 는 멀티 바이트 정규식 일치를 실행하고 일치하는 부분이 있으면 일치하는 부분의 하위 문자열을 첫 번째 요소로, 첫 번째 그룹화 된 부분을 대괄호로, 두 번째 그룹화 된 부분을 세 번째 요소로 포함 하는 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 을 반환합니다. 곧. 오류가 발생하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="31c2fe4e61c7a3fb532023217d99721c59d74c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search_regs()&lt;/strong&gt; executes the multibyte regular expression match, and if there are some matched part, it returns an array including substring of matched part as first element, the first grouped part with brackets as second element, the second grouped part as third element, and so on. It returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e707e79ab4b2f1b9589770cd416651d60a01c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_ereg_search_setpos()&lt;/strong&gt; sets the starting point of a match for &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_ereg_search_setpos은 ()&lt;/strong&gt; 에 대한 일치의 시작 지점 설정 &lt;a href=&quot;function.mb-ereg-search&quot;&gt;mb_ereg_search을 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf7aa6f921a62d6e17c2d3e5438121af8e5ab556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_eregi()&lt;/strong&gt; will now set &lt;code&gt;matches&lt;/code&gt; to an empty array, if nothing matched. Formerly, &lt;code&gt;matches&lt;/code&gt; was not modified in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5578b89f6bacfa2a24b6979d022b3ccac786763e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_eregi()&lt;/strong&gt; will now set &lt;code&gt;regs&lt;/code&gt; to an empty &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, if nothing matched. Formerly, &lt;code&gt;regs&lt;/code&gt; was not modified in that case.</source>
          <target state="translated">&lt;strong&gt;mb_eregi ()&lt;/strong&gt; 는 이제 일치하는 것이 없으면 &lt;code&gt;regs&lt;/code&gt; 를 빈 &lt;a href=&quot;language.types.array&quot;&gt;배열로&lt;/a&gt; 설정 합니다. 이전에는이 ​​경우 &lt;code&gt;regs&lt;/code&gt; 가 수정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="70173738dd605ead7d8a59ba162f2ee437e890e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_get_info()&lt;/strong&gt; returns the internal setting parameters of mbstring.</source>
          <target state="translated">&lt;strong&gt;mb_get_info ()&lt;/strong&gt; 는 mbstring의 내부 설정 매개 변수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="33aae789e2728bb09c157b85beb8e321d0d717ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_output_handler()&lt;/strong&gt; is &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; callback function. &lt;strong&gt;mb_output_handler()&lt;/strong&gt; converts characters in the output buffer from internal character encoding to HTTP output character encoding.</source>
          <target state="translated">&lt;strong&gt;mb_output_handler ()&lt;/strong&gt; 는 &lt;a href=&quot;function.ob-start&quot;&gt;ob_start ()&lt;/a&gt; 콜백 함수입니다. &lt;strong&gt;mb_output_handler ()&lt;/strong&gt; 는 출력 버퍼의 문자를 내부 문자 인코딩에서 HTTP 출력 문자 인코딩으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="53ef86dede981c5450e9436d0e77a66ed92da769" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_str_split()&lt;/strong&gt; returns an array of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfb79b8c50d33239dfb4f5361ec022cedd30f50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strcut()&lt;/strong&gt; extracts a substring from a string similarly to &lt;a href=&quot;function.mb-substr&quot;&gt;mb_substr()&lt;/a&gt;, but operates on bytes instead of characters. If the cut position happens to be between two bytes of a multi-byte character, the cut is performed starting from the first byte of that character. This is also the difference to the &lt;a href=&quot;function.substr&quot;&gt;substr()&lt;/a&gt; function, which would simply cut the string between the bytes and thus result in a malformed byte sequence.</source>
          <target state="translated">&lt;strong&gt;mb_strcut ()&lt;/strong&gt; 은 &lt;a href=&quot;function.mb-substr&quot;&gt;mb_substr ()&lt;/a&gt; 과 유사하게 문자열에서 하위 문자열을 추출 하지만 문자 대신 바이트에서 작동합니다. 잘라 내기 위치가 멀티 바이트 문자의 2 바이트 사이 인 경우 해당 문자의 첫 번째 바이트부터 잘라내 기가 수행됩니다. 이것은 또한 &lt;a href=&quot;function.substr&quot;&gt;substr ()&lt;/a&gt; 함수와 의 차이점입니다.이 함수는 바이트 사이에서 문자열을 간단히 잘라서 잘못된 바이트 시퀀스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="491f40972f6f3988e8f48f5238b83e617fcba7cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strcut()&lt;/strong&gt; returns the portion of &lt;code&gt;str&lt;/code&gt; specified by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;strong&gt;mb_strcut ()&lt;/strong&gt; 은 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;length&lt;/code&gt; 매개 변수로 지정된 &lt;code&gt;str&lt;/code&gt; 부분을 ​​리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="02c3cf619490866ecfd4f8613be3fa7f2e2d9858" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strcut()&lt;/strong&gt; returns the portion of &lt;code&gt;string&lt;/code&gt; specified by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6428342bfb5cbf02b679264d17646a4782f5afae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_stripos()&lt;/strong&gt; returns the numeric position of the first occurrence of &lt;code&gt;needle&lt;/code&gt; in the &lt;code&gt;haystack&lt;/code&gt; string. Unlike &lt;a href=&quot;function.mb-strpos&quot;&gt;mb_strpos()&lt;/a&gt;, &lt;strong&gt;mb_stripos()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_stripos ()&lt;/strong&gt; 는 &lt;code&gt;haystack&lt;/code&gt; 문자열 에서 &lt;code&gt;needle&lt;/code&gt; 이 처음 나타나는 숫자 위치를 반환 합니다. 달리 &lt;a href=&quot;function.mb-strpos&quot;&gt;mb_strpos ()&lt;/a&gt; , &lt;strong&gt;mb_stripos ()&lt;/strong&gt; 대소 문자를 구분한다. 경우 &lt;code&gt;needle&lt;/code&gt; 발견되지 않는, 그것은 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="677fc37d1ba07935c49ee6c47a86ee09108615dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_stripos()&lt;/strong&gt; returns the numeric position of the first occurrence of &lt;code&gt;needle&lt;/code&gt; in the &lt;code&gt;haystack&lt;/code&gt; string. Unlike &lt;a href=&quot;function.mb-strpos&quot;&gt;mb_strpos()&lt;/a&gt;, &lt;strong&gt;mb_stripos()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b08a95610b6dac1456dd40f8ba9a6cd51fb5c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_stristr()&lt;/strong&gt; finds the first occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. Unlike &lt;a href=&quot;function.mb-strstr&quot;&gt;mb_strstr()&lt;/a&gt;, &lt;strong&gt;mb_stristr()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_stristr ()는&lt;/strong&gt; 최초로 출현 찾은 &lt;code&gt;needle&lt;/code&gt; 의 &lt;code&gt;haystack&lt;/code&gt; 및 부분 반환 &lt;code&gt;haystack&lt;/code&gt; . 달리 &lt;a href=&quot;function.mb-strstr&quot;&gt;mb_strstr ()&lt;/a&gt; , &lt;strong&gt;mb_stristr ()&lt;/strong&gt; 대소 문자를 구분한다. 경우 &lt;code&gt;needle&lt;/code&gt; 발견되지 않는, 그것은 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="31d620a67edeac1f5c87bc79c7464af6915c62d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_stristr()&lt;/strong&gt; finds the first occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. Unlike &lt;a href=&quot;function.mb-strstr&quot;&gt;mb_strstr()&lt;/a&gt;, &lt;strong&gt;mb_stristr()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbdbb2a11241110ccd3c75d8e964c2bca4ed7bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strrchr()&lt;/strong&gt; finds the last occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_strrchr ()는&lt;/strong&gt; 마지막에 출현 찾은 &lt;code&gt;needle&lt;/code&gt; 의 &lt;code&gt;haystack&lt;/code&gt; 및 부분 반환 &lt;code&gt;haystack&lt;/code&gt; . 경우 &lt;code&gt;needle&lt;/code&gt; 발견되지 않는, 그것은 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e4815ccb5c8f73225283b5c868cceeb4ca338aec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strrchr()&lt;/strong&gt; finds the last occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8761fdf439eb516fa5c12619ce31c527b6cf96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strrichr()&lt;/strong&gt; finds the last occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. Unlike &lt;a href=&quot;function.mb-strrchr&quot;&gt;mb_strrchr()&lt;/a&gt;, &lt;strong&gt;mb_strrichr()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_strrichr ()는&lt;/strong&gt; 마지막에 출현 찾은 &lt;code&gt;needle&lt;/code&gt; 의 &lt;code&gt;haystack&lt;/code&gt; 및 부분 반환 &lt;code&gt;haystack&lt;/code&gt; . 달리 &lt;a href=&quot;function.mb-strrchr&quot;&gt;mb_strrchr ()&lt;/a&gt; , &lt;strong&gt;mb_strrichr ()&lt;/strong&gt; 대소 문자를 구분한다. 경우 &lt;code&gt;needle&lt;/code&gt; 발견되지 않는, 그것은 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f6748f38014801d960915273fcbeda00dee0e909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strrichr()&lt;/strong&gt; finds the last occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. Unlike &lt;a href=&quot;function.mb-strrchr&quot;&gt;mb_strrchr()&lt;/a&gt;, &lt;strong&gt;mb_strrichr()&lt;/strong&gt; is case-insensitive. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4dc627c58ad52bf801c58d035d158d77a2d4da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strripos()&lt;/strong&gt; performs multi-byte safe &lt;a href=&quot;function.strripos&quot;&gt;strripos()&lt;/a&gt; operation based on number of characters. &lt;code&gt;needle&lt;/code&gt; position is counted from the beginning of &lt;code&gt;haystack&lt;/code&gt;. First character's position is 0. Second character position is 1. Unlike &lt;a href=&quot;function.mb-strrpos&quot;&gt;mb_strrpos()&lt;/a&gt;, &lt;strong&gt;mb_strripos()&lt;/strong&gt; is case-insensitive.</source>
          <target state="translated">&lt;strong&gt;mb_strripos ()&lt;/strong&gt; 는 문자 수에 따라 멀티 바이트 안전 &lt;a href=&quot;function.strripos&quot;&gt;strripos ()&lt;/a&gt; 작업을 수행합니다. &lt;code&gt;needle&lt;/code&gt; 위치는 &lt;code&gt;haystack&lt;/code&gt; 의 시작부터 계산됩니다 . 선두 문자의 위치를 0 번째 문자의 위치가 1과 달리이다 &lt;a href=&quot;function.mb-strrpos&quot;&gt;mb_strrpos ()&lt;/a&gt; , &lt;strong&gt;mb_strripos ()&lt;/strong&gt; 대소 문자를 구분한다.</target>
        </trans-unit>
        <trans-unit id="d32ded041d1724b8c0449821a443a48c47f0eee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strstr()&lt;/strong&gt; finds the first occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;mb_strstr ()는&lt;/strong&gt; 최초로 출현 찾은 &lt;code&gt;needle&lt;/code&gt; 의 &lt;code&gt;haystack&lt;/code&gt; 및 부분 반환 &lt;code&gt;haystack&lt;/code&gt; . 경우 &lt;code&gt;needle&lt;/code&gt; 발견되지 않는, 그것은 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="70a3ed178cbab23680c8562eff730461ea70cf30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_strstr()&lt;/strong&gt; finds the first occurrence of &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and returns the portion of &lt;code&gt;haystack&lt;/code&gt;. If &lt;code&gt;needle&lt;/code&gt; is not found, it returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33f6b734915cd00e19d20e918b3bee07805c931" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_substr()&lt;/strong&gt; returns the portion of &lt;code&gt;str&lt;/code&gt; specified by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;strong&gt;mb_substr ()&lt;/strong&gt; 은 &lt;code&gt;start&lt;/code&gt; 및 &lt;code&gt;length&lt;/code&gt; 매개 변수로 지정된 &lt;code&gt;str&lt;/code&gt; 부분을 ​​리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="23bd0263a2189fb31a96902aa44d537272636c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mb_substr()&lt;/strong&gt; returns the portion of &lt;code&gt;string&lt;/code&gt; specified by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba971f7e4b707d44b5e561c497dadafb660135ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mcrypt_get_block_size()&lt;/strong&gt; is used to get the size of a block of the specified &lt;code&gt;cipher&lt;/code&gt; (in combination with an encryption mode).</source>
          <target state="translated">&lt;strong&gt;mcrypt_get_block_size ()&lt;/strong&gt; 는 지정된 &lt;code&gt;cipher&lt;/code&gt; 의 블록 크기를 암호화 하는 데 사용됩니다 (암호화 모드와 함께 사용).</target>
        </trans-unit>
        <trans-unit id="1219b0c689f0493db87f96c91b93030eeea7da39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mcrypt_get_cipher_name()&lt;/strong&gt; is used to get the name of the specified cipher.</source>
          <target state="translated">&lt;strong&gt;mcrypt_get_cipher_name ()&lt;/strong&gt; 은 지정된 암호의 이름을 얻는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="42cb10a446dca965d215c88714dcc24a04983014" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mcrypt_get_cipher_name()&lt;/strong&gt; takes the cipher number as an argument (libmcrypt 2.2.x) or takes the cipher name as an argument (libmcrypt 2.4.x or higher) and returns the name of the cipher or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, if the cipher does not exist.</source>
          <target state="translated">&lt;strong&gt;mcrypt_get_cipher_name ()&lt;/strong&gt; 은 암호 번호를 인수 (libmcrypt 2.2.x)로 사용하거나 암호 이름을 인수 (libmcrypt 2.4.x 이상)로 사용하고 암호가없는 경우 암호 이름 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="f8fd135d72ea261ac6b99086e03a5942a3c0b93f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mcrypt_get_cipher_name()&lt;/strong&gt; takes the cipher number as an argument (libmcrypt 2.2.x) or takes the cipher name as an argument (libmcrypt 2.4.x or higher) and returns the name of the cipher or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;, if the cipher does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b145cd84490fd95f5b265c5de35b787224924b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mcrypt_get_key_size()&lt;/strong&gt; is used to get the size of a key of the specified &lt;code&gt;cipher&lt;/code&gt; (in combination with an encryption mode).</source>
          <target state="translated">&lt;strong&gt;mcrypt_get_key_size ()&lt;/strong&gt; 는 지정된 &lt;code&gt;cipher&lt;/code&gt; 의 키 크기를 암호화 하는 데 사용합니다 (암호화 모드와 함께 사용).</target>
        </trans-unit>
        <trans-unit id="3d75f65544439a2e79320135f8ff0b6d118ffe87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mhash()&lt;/strong&gt; applies a hash function specified by &lt;code&gt;algo&lt;/code&gt; to the &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac3f85d513b8e2ffce6938486dea110e16d5018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;microtime()&lt;/strong&gt; returns the current Unix timestamp with microseconds. This function is only available on operating systems that support the gettimeofday() system call.</source>
          <target state="translated">&lt;strong&gt;microtime ()&lt;/strong&gt; 은 현재 Unix 타임 스탬프를 마이크로 초로 반환합니다. 이 함수는 gettimeofday () 시스템 호출을 지원하는 운영 체제에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="9bd2abc0178fc92196c8824997e108f8a9195ecb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min()&lt;/strong&gt; returns the parameter value considered &quot;lowest&quot; according to standard comparisons. If multiple values of different types evaluate as equal (e.g. &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;'abc'&lt;/code&gt;) the first provided to the function will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfd41a0488ea2c024f53ec6a0b4735553fb1c99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;min()&lt;/strong&gt; returns the parameter value considered &quot;lowest&quot; according to standard comparisons. If multiple values of different types evaluate as equal (e.g. &lt;em&gt;0&lt;/em&gt; and &lt;em&gt;'abc'&lt;/em&gt;) the first provided to the function will be returned.</source>
          <target state="translated">&lt;strong&gt;min ()&lt;/strong&gt; 은 표준 비교에 따라 &quot;최저&quot;로 간주되는 매개 변수 값을 반환합니다. 다른 유형의 여러 값이 같은 것으로 평가되면 (예 : &lt;em&gt;0&lt;/em&gt; 및 &lt;em&gt;'abc'&lt;/em&gt; ) 함수에 처음 제공된 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="61d777b378b2a86003dbebf188a9b0633184cf6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mktime()&lt;/strong&gt; is useful for doing date arithmetic and validation, as it will automatically calculate the correct value for out-of-range input. For example, each of the following lines produces the string &quot;Jan-01-1998&quot;.</source>
          <target state="translated">&lt;strong&gt;mktime ()&lt;/strong&gt; 은 범위를 벗어난 입력에 대한 올바른 값을 자동으로 계산하므로 날짜 산술 및 유효성 검사에 유용합니다. 예를 들어 다음 각 줄은 &quot;Jan-01-1998&quot;문자열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="892f71632791029a93ea6ac365aafdd175c96661" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mktime()&lt;/strong&gt; now throws &lt;strong&gt;&lt;code&gt;E_DEPRECATED&lt;/code&gt;&lt;/strong&gt; notice if the &lt;code&gt;is_dst&lt;/code&gt; parameter is used.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;is_dst&lt;/code&gt; 매개 변수가 사용 되면 &lt;strong&gt;mktime ()은&lt;/strong&gt; 이제 &lt;strong&gt; &lt;code&gt;E_DEPRECATED&lt;/code&gt; &lt;/strong&gt; 통지를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="7b6baf7d327e8282ef97358bc044ded4f2a44134" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mktime()&lt;/strong&gt; returns the Unix timestamp of the arguments given. If the arguments are invalid, the function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (before PHP 5.1 it returned &lt;em&gt;-1&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;mktime ()&lt;/strong&gt; 은 주어진 인수의 유닉스 타임 스탬프를 반환합니다. 인수가 유효하지 않은 경우, 함수는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴 &lt;strong&gt;합니다&lt;/strong&gt; (PHP 5.1 이전에는 &lt;em&gt;-1&lt;/em&gt; 을 리턴 함 ).</target>
        </trans-unit>
        <trans-unit id="1c3e2f3554d6fe75e33d0f1ed76dfdc403ce4136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mktime()&lt;/strong&gt; returns the Unix timestamp of the arguments given. If the arguments are invalid, the function returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546e64077fd8423c40bdb5b46be8dd35e9229520" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;money_format()&lt;/strong&gt; returns a formatted version of &lt;code&gt;number&lt;/code&gt;. This function wraps the C library function &lt;strong&gt;strfmon()&lt;/strong&gt;, with the difference that this implementation converts only one number at a time.</source>
          <target state="translated">&lt;strong&gt;money_format ()&lt;/strong&gt; 은 &lt;code&gt;number&lt;/code&gt; 형식의 버전을 반환합니다 . 이 함수는 C 라이브러리 함수 &lt;strong&gt;strfmon ()을&lt;/strong&gt; 래핑합니다. 이 구현에서는 한 번에 하나의 숫자 만 변환한다는 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="247daba0f163285c34cbcd2411008563078ca049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;move_uploaded_file()&lt;/strong&gt; is &lt;a href=&quot;https://www.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open_basedir&lt;/a&gt; aware. However, restrictions are placed only on the &lt;code&gt;destination&lt;/code&gt; path as to allow the moving of uploaded files in which &lt;code&gt;filename&lt;/code&gt; may conflict with such restrictions. &lt;strong&gt;move_uploaded_file()&lt;/strong&gt; ensures the safety of this operation by allowing only those files uploaded through PHP to be moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74663620a893d2b090ae24ac60335f09dd896bcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;move_uploaded_file()&lt;/strong&gt; is both &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open_basedir&lt;/a&gt; aware. However, restrictions are placed only on the &lt;code&gt;destination&lt;/code&gt; path as to allow the moving of uploaded files in which &lt;code&gt;filename&lt;/code&gt; may conflict with such restrictions. &lt;strong&gt;move_uploaded_file()&lt;/strong&gt; ensures the safety of this operation by allowing only those files uploaded through PHP to be moved.</source>
          <target state="translated">&lt;strong&gt;move_uploaded_file ()&lt;/strong&gt; 은 &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;안전 모드&lt;/a&gt; 이며 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open_basedir을&lt;/a&gt; 인식합니다. 그러나 파일 &lt;code&gt;filename&lt;/code&gt; 이 이러한 제한 사항과 충돌 할 수 있는 업로드 된 파일을 이동할 수 있도록 &lt;code&gt;destination&lt;/code&gt; 경로 에만 제한 사항이 적용됩니다. &lt;strong&gt;move_uploaded_file ()&lt;/strong&gt; 은 PHP를 통해 업로드 된 파일 만 이동할 수 있도록하여이 작업의 안전성을 보장합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9983f26bcd1d5ceff274a2a90b874fe7b746ee21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_get_queue()&lt;/strong&gt; returns an id that can be used to access the System V message queue with the given &lt;code&gt;key&lt;/code&gt;. The first call creates the message queue with the optional &lt;code&gt;permissions&lt;/code&gt;. A second call to &lt;strong&gt;msg_get_queue()&lt;/strong&gt; for the same &lt;code&gt;key&lt;/code&gt; will return a different message queue identifier, but both identifiers access the same underlying message queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7264b35dafeb0699c6a33d554be741b5f9c7bf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_get_queue()&lt;/strong&gt; returns an id that can be used to access the System V message queue with the given &lt;code&gt;key&lt;/code&gt;. The first call creates the message queue with the optional &lt;code&gt;perms&lt;/code&gt;. A second call to &lt;strong&gt;msg_get_queue()&lt;/strong&gt; for the same &lt;code&gt;key&lt;/code&gt; will return a different message queue identifier, but both identifiers access the same underlying message queue.</source>
          <target state="translated">&lt;strong&gt;msg_get_queue ()&lt;/strong&gt; 는 주어진 &lt;code&gt;key&lt;/code&gt; 를 사용하여 System V 메시지 큐에 액세스하는 데 사용할 수있는 id를 반환합니다 . 첫 번째 호출은 선택적 &lt;code&gt;perms&lt;/code&gt; 로 메시지 큐를 작성합니다 . 동일한 &lt;code&gt;key&lt;/code&gt; 대한 &lt;strong&gt;msg_get_queue ()&lt;/strong&gt; 를 두 번 호출 하면 다른 메시지 큐 식별자가 반환되지만 두 식별자 모두 동일한 기본 메시지 큐에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="4910a52445d936197f5551b3a4b7c2f5ff2c22f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_receive()&lt;/strong&gt; will receive the first message from the specified &lt;code&gt;queue&lt;/code&gt; of the type specified by &lt;code&gt;desired_message_type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1fabf728148688df2a77ce5f2c02c6093d44d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_receive()&lt;/strong&gt; will receive the first message from the specified &lt;code&gt;queue&lt;/code&gt; of the type specified by &lt;code&gt;desiredmsgtype&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;msg_receive ()는&lt;/strong&gt; 지정된로부터 제 1 메시지를 수신처 &lt;code&gt;queue&lt;/code&gt; 에 의해 지정된 형태의 &lt;code&gt;desiredmsgtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39cc09ab47465491a93a910776582f166b0b0af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_remove_queue()&lt;/strong&gt; destroys the message queue specified by the &lt;code&gt;queue&lt;/code&gt;. Only use this function when all processes have finished working with the message queue and you need to release the system resources held by it.</source>
          <target state="translated">&lt;strong&gt;msg_remove_queue은 ()&lt;/strong&gt; 에 의해 지정된 메시지 큐 파괴 &lt;code&gt;queue&lt;/code&gt; . 모든 프로세스가 메시지 큐에 대한 작업을 완료하고 보유한 시스템 자원을 해제해야하는 경우에만이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="021ac270fdec4502b214e13852379ce38525ba4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_send()&lt;/strong&gt; sends a &lt;code&gt;message&lt;/code&gt; of type &lt;code&gt;message_type&lt;/code&gt; (which MUST be greater than 0) to the message queue specified by &lt;code&gt;queue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065210ed14ec3021bdcdeeeb631d4e77df148c67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_send()&lt;/strong&gt; sends a &lt;code&gt;message&lt;/code&gt; of type &lt;code&gt;msgtype&lt;/code&gt; (which MUST be greater than 0) to the message queue specified by &lt;code&gt;queue&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;msg_send (는)&lt;/strong&gt; 전송 &lt;code&gt;message&lt;/code&gt; 유형의 &lt;code&gt;msgtype&lt;/code&gt; 의해 지정된 메시지 큐 (0보다 커야 함) &lt;code&gt;queue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cf44a6c7c21da6f2c5ce0617e7c309a018ae4ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_set_queue()&lt;/strong&gt; allows you to change the values of the msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the underlying message queue data structure.</source>
          <target state="translated">&lt;strong&gt;msg_set_queue ()를&lt;/strong&gt; 사용하면 기본 메시지 큐 데이터 구조의 msg_perm.uid, msg_perm.gid, msg_perm.mode 및 msg_qbytes 필드의 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="693413e5cf8ecfc6b9881d2d7e28dbe4eb6c082b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg_stat_queue()&lt;/strong&gt; returns the message queue meta data for the message queue specified by the &lt;code&gt;queue&lt;/code&gt;. This is useful, for example, to determine which process sent the message that was just received.</source>
          <target state="translated">&lt;strong&gt;msg_stat_queue는 ()&lt;/strong&gt; 에 의해 지정된 상기 메시지 큐는 메시지 큐, 메타 데이터를 리턴 &lt;code&gt;queue&lt;/code&gt; . 예를 들어, 방금받은 메시지를 어떤 프로세스로 보냈는지 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="16809d7bae9312af214b315f3747fc4356c2727a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mt_rand()&lt;/strong&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.fixes-to-mt_rand-algorithm&quot;&gt;has been updated&lt;/a&gt; to use the fixed, correct, version of the Mersenne Twister algorithm. To fall back to the old behaviour, use &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;MT_RAND_PHP&lt;/code&gt;&lt;/strong&gt; as the second paramter.</source>
          <target state="translated">&lt;strong&gt;mt_rand () &lt;/strong&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.fixes-to-mt_rand-algorithm&quot;&gt;는&lt;/a&gt; Mersenne Twister 알고리즘의 수정 된 올바른 버전을 사용 하도록 업데이트되었습니다 . 이전 동작으로 돌아가려면 &lt;strong&gt; &lt;code&gt;MT_RAND_PHP&lt;/code&gt; &lt;/strong&gt; 와 함께 &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand ()&lt;/a&gt; 를 두 번째 매개 변수로 사용하십시오.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baae049341bb9690a94d079540e1d696b7d60722" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mt_rand()&lt;/strong&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration72.incompatible.php#migration72.incompatible.rand-mt_rand-output&quot;&gt;has received a bug fix&lt;/a&gt; for a modulo bias bug. This means that sequences generated with a specific seed may differ from PHP 7.1 on 64-bit machines.</source>
          <target state="translated">&lt;strong&gt;mt_rand () &lt;/strong&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration72.incompatible.php#migration72.incompatible.rand-mt_rand-output&quot;&gt;는&lt;/a&gt; 모듈로 바이어스 버그에 대한 버그 수정 을 받았습니다 . 이는 특정 시드로 생성 된 시퀀스가 ​​64 비트 시스템의 PHP 7.1과 다를 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="21dc3cae44e106585341f5c3c005bf86ffe30dc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mt_rand()&lt;/strong&gt;&lt;a href=&quot;https://www.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.fixes-to-mt_rand-algorithm&quot;&gt;has been updated&lt;/a&gt; to use the fixed, correct, version of the Mersenne Twister algorithm. To fall back to the old behaviour, use &lt;a href=&quot;function.mt-srand&quot;&gt;mt_srand()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;MT_RAND_PHP&lt;/code&gt;&lt;/strong&gt; as the second parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6e9bc42b7941cb550727bff9dd4be897c98775" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mt_rand()&lt;/strong&gt;&lt;a href=&quot;https://www.php.net/manual/en/migration72.incompatible.php#migration72.incompatible.rand-mt_rand-output&quot;&gt;has received a bug fix&lt;/a&gt; for a modulo bias bug. This means that sequences generated with a specific seed may differ from PHP 7.1 on 64-bit machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caaed3e350f8d3c71ca4aee6822400d6ccb16a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli::__construct&lt;/strong&gt; ([ string&lt;code&gt;$host&lt;/code&gt; = ini_get(&quot;mysqli.default_host&quot;) [, string&lt;code&gt;$username&lt;/code&gt; = ini_get(&quot;mysqli.default_user&quot;) [, string&lt;code&gt;$passwd&lt;/code&gt; = ini_get(&quot;mysqli.default_pw&quot;) [, string&lt;code&gt;$dbname&lt;/code&gt; = &quot;&quot; [, int&lt;code&gt;$port&lt;/code&gt; = ini_get(&quot;mysqli.default_port&quot;) [, string&lt;code&gt;$socket&lt;/code&gt; = ini_get(&quot;mysqli.default_socket&quot;) ]]]]]] )</source>
          <target state="translated">&lt;strong&gt;mysqli :: __ construct&lt;/strong&gt; ([문자열 &lt;code&gt;$host&lt;/code&gt; = ini_get ( &quot;mysqli.default_host&quot;) [, 문자열 &lt;code&gt;$username&lt;/code&gt; = ini_get ( &quot;mysqli.default_user&quot;) [, 문자열 &lt;code&gt;$passwd&lt;/code&gt; = ini_get ( &quot;mysqli.default_pw&quot;) [, 문자열 &lt;code&gt;$dbname&lt;/code&gt; = &quot;&quot;[, int &lt;code&gt;$port&lt;/code&gt; = ini_get ( &quot;mysqli.default_port&quot;) [, 문자열 &lt;code&gt;$socket&lt;/code&gt; = ini_get ( &quot;mysqli.default_socket&quot;)]]]]]]])</target>
        </trans-unit>
        <trans-unit id="6aef380ee75b886b2a08ca2d3675b27a9c694d8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="f253e39c15b0d4147c38525e25f0a1fdf0837eda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_client_encoding()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mysqli_client_encoding()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="204f06031193ae2fe799e37088746a31ce9db946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_close()&lt;/strong&gt; will not close persistent connections. For additional details, see the manual page on &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mysqli_close ()&lt;/strong&gt; 는 지속적인 연결을 닫지 않습니다. 자세한 내용은 &lt;a href=&quot;https://secure.php.net/manual/en/features.persistent-connections.php&quot;&gt;영구 연결&lt;/a&gt; 매뉴얼 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="51ff759559a20caecf13591b5c6c999cd2a787e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_close()&lt;/strong&gt; will not close persistent connections. For additional details, see the manual page on &lt;a href=&quot;https://www.php.net/manual/en/features.persistent-connections.php&quot;&gt;persistent connections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f8eca88d6009ac72378747a2745cbad676f479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_driver&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli_driver&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="b366fa875fe46984345f2600b9842c379c054939" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_execute()&lt;/strong&gt; is deprecated and will be removed.</source>
          <target state="translated">&lt;strong&gt;mysqli_execute ()&lt;/strong&gt; 는 더 이상 사용되지 않으며 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0fcd93afc69340c6eb6c36d50c4f329618e0a30f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_all()&lt;/strong&gt; fetches all result rows and returns the result set as an associative array, a numeric array, or both.</source>
          <target state="translated">&lt;strong&gt;mysqli_fetch_all ()은&lt;/strong&gt; 모든 결과 행을 페치하고 결과 세트를 연관 배열, 숫자 배열 또는 둘 다로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1aebff6e28ff31fbd1b3c43a6c8a832b1a7cdae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_array()&lt;/strong&gt; is an extended version of the &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row()&lt;/a&gt; function. In addition to storing the data in the numeric indices of the result array, the &lt;strong&gt;mysqli_fetch_array()&lt;/strong&gt; function can also store the data in associative indices, using the field names of the result set as keys.</source>
          <target state="translated">&lt;strong&gt;mysqli_fetch_array ()&lt;/strong&gt; 는 &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row ()&lt;/a&gt; 함수 의 확장 버전입니다 . 결과 배열의 숫자 인덱스에 데이터를 저장하는 것 외에도 &lt;strong&gt;mysqli_fetch_array ()&lt;/strong&gt; 함수는 결과 세트의 필드 이름을 키로 사용하여 데이터를 연관 인덱스에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5da1f5af14ea2d490d12497b64deaf6131a2b244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_lengths()&lt;/strong&gt; is valid only for the current row of the result set. It returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if you call it before calling mysqli_fetch_row/array/object or after retrieving all rows in the result.</source>
          <target state="translated">&lt;strong&gt;mysqli_fetch_lengths ()&lt;/strong&gt; 는 결과 집합의 현재 행에 대해서만 유효합니다. mysqli_fetch_row / array / object를 호출하기 전에 또는 결과에서 모든 행을 검색 한 후 호출하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5df94102628cbd98a14e6fd1ccc064a94b2ce7a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_lengths()&lt;/strong&gt; is valid only for the current row of the result set. It returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if you call it before calling mysqli_fetch_row/array/object or after retrieving all rows in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f136f202b256e1f8dd5eebc6a8fddcc774dfdde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_row()&lt;/strong&gt; returns an array of strings that corresponds to the fetched row or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if there are no more rows in result set.</source>
          <target state="translated">&lt;strong&gt;mysqli_fetch_row ()&lt;/strong&gt; 는 페치 된 행에 해당하는 문자열 배열을 리턴하거나 결과 세트에 행이 더 이상 없으면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을 리턴&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e94dd60bffe5be47e3773a3c05b4e325a2dbb18e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_fetch_row()&lt;/strong&gt; returns an array of strings that corresponds to the fetched row or &lt;strong&gt;&lt;code&gt;null&lt;/code&gt;&lt;/strong&gt; if there are no more rows in result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716d93c78562652e9749db242d9e70d7ab1426c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_get_links_stats()&lt;/strong&gt; returns an associative array with three elements, keyed as follows:</source>
          <target state="translated">&lt;strong&gt;mysqli_get_links_stats ()&lt;/strong&gt; 는 다음과 같이 세 개의 요소가 포함 된 연관 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="07be281cc1a36f757cf9f4c6330e798c077a56c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_get_links_stats()&lt;/strong&gt; returns information about open and cached MySQL links.</source>
          <target state="translated">&lt;strong&gt;mysqli_get_links_stats ()&lt;/strong&gt; 는 열려 있고 캐시 된 MySQL 링크에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b74fdb0bbd75b28f7d9c44565a48523e905aa561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_options()&lt;/strong&gt; should be called after &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt; and before &lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mysqli_options ()&lt;/strong&gt; 는 &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init () 다음&lt;/a&gt; 과 &lt;a href=&quot;mysqli.real-connect&quot;&gt;mysqli_real_connect ()&lt;/a&gt; 전에 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b655ad9c31003c9b7fee815a321ec70c5e0d672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_prepare()&lt;/strong&gt; returns a statement object or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="translated">&lt;strong&gt;mysqli_prepare ()&lt;/strong&gt; 는 문 객체를 반환하거나 오류가 발생하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4a7f5ea3556aee7835ded5f1886d926f7b1a2428" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_prepare()&lt;/strong&gt; returns a statement object or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ac0b78eadfab1dfd1b1849e986b26dbb915108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_real_connect()&lt;/strong&gt; needs a valid object which has to be created by function &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mysqli_real_connect ()&lt;/strong&gt; 는 &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init ()&lt;/a&gt; 함수에 의해 생성되어야하는 유효한 객체가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="bf0fc28b99e12fccef247621429f60fcd16d0b2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_result&lt;/strong&gt;implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli_result&lt;/strong&gt; 는 &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; {</target>
        </trans-unit>
        <trans-unit id="62b8f0054227c03adda15e815bc21656d3aae1c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_sql_exception&lt;/strong&gt;extends&lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException&lt;/a&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli_sql_exception&lt;/strong&gt; 은 &lt;a href=&quot;class.runtimeexception&quot;&gt;RuntimeException을&lt;/a&gt; 확장합니다. {</target>
        </trans-unit>
        <trans-unit id="f1e62f23265f92038e7bb2af39959f9c6365b780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_stat()&lt;/strong&gt; returns a string containing information similar to that provided by the 'mysqladmin status' command. This includes uptime in seconds and the number of running threads, questions, reloads, and open tables.</source>
          <target state="translated">&lt;strong&gt;mysqli_stat ()&lt;/strong&gt; 는 'mysqladmin status'명령에서 제공하는 것과 유사한 정보가 포함 된 문자열을 반환합니다. 여기에는 가동 시간 (초) 및 실행중인 스레드 수, 질문, 다시로드 및 열린 테이블 수가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="696f6268566a8234ea4d62b82207497da2e917cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_stmt::__construct&lt;/strong&gt; ( &lt;a href=&quot;class.mysqli&quot;&gt;mysqli&lt;/a&gt;&lt;code&gt;$link&lt;/code&gt; [, string&lt;code&gt;$query&lt;/code&gt; ] )</source>
          <target state="translated">&lt;strong&gt;mysqli_stmt :: __ construct&lt;/strong&gt; ( &lt;a href=&quot;class.mysqli&quot;&gt;mysqli &lt;/a&gt; &lt;code&gt;$link&lt;/code&gt; [, 문자열 &lt;code&gt;$query&lt;/code&gt; ])</target>
        </trans-unit>
        <trans-unit id="528c3a2628286f8b62aae2540d5aff2d46fd51e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_stmt&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli_stmt&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="5961a7aa9968421cea6c4366e9741f8e3e4014ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_store_result()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; in case the query didn't return a result set (if the query was, for example an INSERT statement). This function also returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the reading of the result set failed. You can check if you have got an error by checking if &lt;a href=&quot;mysqli.error&quot;&gt;mysqli_error()&lt;/a&gt; doesn't return an empty string, if &lt;a href=&quot;mysqli.errno&quot;&gt;mysqli_errno()&lt;/a&gt; returns a non zero value, or if &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count()&lt;/a&gt; returns a non zero value. Also possible reason for this function returning &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; after successful call to &lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query()&lt;/a&gt; can be too large result set (memory for it cannot be allocated). If &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count()&lt;/a&gt; returns a non-zero value, the statement should have produced a non-empty result set.</source>
          <target state="translated">&lt;strong&gt;mysqli_store_result ()&lt;/strong&gt; 는 쿼리가 결과 집합을 반환하지 않은 경우 (예를 들어 쿼리가 INSERT &lt;strong&gt;문인&lt;/strong&gt; 경우 &lt;strong&gt;) &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; . 이 함수는 결과 집합을 읽지 못한 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 도 반환 &lt;strong&gt;합니다&lt;/strong&gt; . &lt;a href=&quot;mysqli.error&quot;&gt;mysqli_error ()&lt;/a&gt; 가 빈 문자열을 반환하지 않는지, &lt;a href=&quot;mysqli.errno&quot;&gt;mysqli_errno ()&lt;/a&gt; 가 0이 아닌 값을 반환하거나, &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count ()&lt;/a&gt; 가 0이 아닌 값을 반환 하는지 확인하여 오류가 있는지 확인할 수 있습니다 . &lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query ()&lt;/a&gt; 를 성공적으로 호출 한 후이 함수가 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환하는 이유 도 너무 큰 결과 집합 일 수 있습니다 (메모리를 할당 할 수 없음). &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count () 인&lt;/a&gt; 경우 0이 아닌 값을 리턴하면 명령문이 비어 있지 않은 결과 세트를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="646622a73c93003049ef73fa1a510f48e76d92fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_store_result()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; in case the query didn't return a result set (if the query was, for example an INSERT statement). This function also returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; if the reading of the result set failed. You can check if you have got an error by checking if &lt;a href=&quot;mysqli.error&quot;&gt;mysqli_error()&lt;/a&gt; doesn't return an empty string, if &lt;a href=&quot;mysqli.errno&quot;&gt;mysqli_errno()&lt;/a&gt; returns a non zero value, or if &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count()&lt;/a&gt; returns a non zero value. Also possible reason for this function returning &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; after successful call to &lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query()&lt;/a&gt; can be too large result set (memory for it cannot be allocated). If &lt;a href=&quot;mysqli.field-count&quot;&gt;mysqli_field_count()&lt;/a&gt; returns a non-zero value, the statement should have produced a non-empty result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2589d39258b9b8235b83f79a89fc366ca5b46b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysqli_warning&lt;/strong&gt; {</source>
          <target state="translated">&lt;strong&gt;mysqli_warning&lt;/strong&gt; {</target>
        </trans-unit>
        <trans-unit id="46e67b7e813e8b0f87a5f36eacf0d6794d78955d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;natcasesort()&lt;/strong&gt; is a case insensitive version of &lt;a href=&quot;function.natsort&quot;&gt;natsort()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;natcasesort ()&lt;/strong&gt; 는 대소 문자를 구분하지 않는 &lt;a href=&quot;function.natsort&quot;&gt;natsort ()&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="565dc4eb11d4cb4c5abdf0ac5aea1a1cb24a96a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ncurses_beep()&lt;/strong&gt; sends an audible alert (bell) and if its not possible flashes the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8090fae8ae6d9d428ba4edef57c3fb687db29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ncurses_getmouse()&lt;/strong&gt; reads mouse event out of queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5543116cf1887dfc52a83cf16a6b3ccb8619d520" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;next()&lt;/strong&gt; behaves like &lt;a href=&quot;function.current&quot;&gt;current()&lt;/a&gt;, with one difference. It advances the internal array pointer one place forward before returning the element value. That means it returns the next array value and advances the internal array pointer by one.</source>
          <target state="translated">&lt;strong&gt;next ()&lt;/strong&gt; 는 &lt;a href=&quot;function.current&quot;&gt;current ()&lt;/a&gt; 와 비슷하지만 한 가지 차이점이 있습니다. 요소 값을 반환하기 전에 내부 배열 포인터를 한 자리 앞으로 이동시킵니다. 즉, 다음 배열 값을 반환하고 내부 배열 포인터를 1 씩 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="2a8000456548dd15c28744a59422dd5c94af1649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nl_langinfo Constants&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;nl_langinfo 상수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3c6b74d147ec8b6740291772212d5e729c37457" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nl_langinfo()&lt;/strong&gt; is used to access individual elements of the locale categories. Unlike &lt;a href=&quot;function.localeconv&quot;&gt;localeconv()&lt;/a&gt;, which returns all of the elements, &lt;strong&gt;nl_langinfo()&lt;/strong&gt; allows you to select any specific element.</source>
          <target state="translated">&lt;strong&gt;nl_langinfo ()&lt;/strong&gt; 는 로케일 범주의 개별 요소에 액세스하는 데 사용됩니다. 모든 요소를 ​​반환하는 &lt;a href=&quot;function.localeconv&quot;&gt;localeconv ()&lt;/a&gt; 와 달리 &lt;strong&gt;nl_langinfo ()를&lt;/strong&gt; 사용하면 특정 요소를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1c28117dc9370810491069bf48c82e7c572aabb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nsapi_request_headers()&lt;/strong&gt; gets all the HTTP headers in the current request. This is only supported when PHP runs as a NSAPI module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cc45d2fc6bda8005e0752cda71a7bd35e1563e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nsapi_virtual()&lt;/strong&gt; is an NSAPI-specific function which is equivalent to &lt;code&gt;&amp;lt;!--#include virtual...--&amp;gt;&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086d61647cadbb5b62806c9186480f3e7cc0638d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number_format()&lt;/strong&gt; was changed to not being able to return &lt;code&gt;-0&lt;/code&gt;, previously &lt;code&gt;-0&lt;/code&gt; could be returned for cases like where &lt;code&gt;number&lt;/code&gt; would be &lt;code&gt;-0.01&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd7ff5a20d92c6e02241b90ee7ea2cdbcc1ed48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number_format()&lt;/strong&gt; was changed to not being able to return &lt;em&gt;-0&lt;/em&gt;, previously &lt;em&gt;-0&lt;/em&gt; could be returned for cases like where &lt;code&gt;number&lt;/code&gt; would be &lt;em&gt;-0.01&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;number_format ()&lt;/strong&gt; 은 &lt;em&gt;-0&lt;/em&gt; 을 리턴 할 수 없도록 변경되었으며 , 이전 에는 &lt;code&gt;number&lt;/code&gt; 가 &lt;em&gt;-0.01 인&lt;/em&gt; 경우 &lt;em&gt;-0&lt;/em&gt; 이 리턴 될 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e059e044614f11113373accfc3ddc730621022b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_get_clean()&lt;/strong&gt; essentially executes both &lt;a href=&quot;function.ob-get-contents&quot;&gt;ob_get_contents()&lt;/a&gt; and &lt;a href=&quot;function.ob-end-clean&quot;&gt;ob_end_clean()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ob_get_clean ()은&lt;/strong&gt; 본질적으로 &lt;a href=&quot;function.ob-get-contents&quot;&gt;ob_get_contents ()&lt;/a&gt; 및 &lt;a href=&quot;function.ob-end-clean&quot;&gt;ob_end_clean ()을&lt;/a&gt; 모두 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="4ba952a6c6696315ee236c5106116dba5fd4943b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_get_flush()&lt;/strong&gt; flushes the output buffer, return it as a string and turns off output buffering.</source>
          <target state="translated">&lt;strong&gt;ob_get_flush ()&lt;/strong&gt; 는 출력 버퍼를 플러시하고이를 문자열로 반환하고 출력 버퍼링을 끕니다.</target>
        </trans-unit>
        <trans-unit id="4f2998ae015757d7f7b3e69a423aff1e94e066a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_get_status()&lt;/strong&gt; returns status information on either the top level output buffer or all active output buffer levels if &lt;code&gt;full_status&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;full_status&lt;/code&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 로 설정된 경우 &lt;strong&gt;ob_get_status ()&lt;/strong&gt; 는 최상위 레벨 출력 버퍼 또는 모든 활성 출력 버퍼 레벨에 대한 상태 정보를 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6d4f80c0e14c551b3ba473a97cd537195c98e651" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_get_status()&lt;/strong&gt; returns status information on either the top level output buffer or all active output buffer levels if &lt;code&gt;full_status&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42339ccf9c8282277e90786ef8571bbbb8ae5447" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_gzhandler()&lt;/strong&gt; is intended to be used as a callback function for &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; to help facilitate sending gz-encoded data to web browsers that support compressed web pages. Before &lt;strong&gt;ob_gzhandler()&lt;/strong&gt; actually sends compressed data, it determines what type of content encoding the browser will accept (&quot;gzip&quot;, &quot;deflate&quot; or none at all) and will return its output accordingly. All browsers are supported since it's up to the browser to send the correct header saying that it accepts compressed web pages. If a browser doesn't support compressed pages this function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;ob_gzhandler ()&lt;/strong&gt; 는 압축 된 웹 페이지를 지원하는 웹 브라우저로 gz 인코딩 된 데이터를 쉽게 보낼 수 있도록 &lt;a href=&quot;function.ob-start&quot;&gt;ob_start ()&lt;/a&gt; 의 콜백 함수로 사용됩니다 . &lt;strong&gt;ob_gzhandler ()는&lt;/strong&gt; 실제로 압축 된 데이터를 보내기 전에 브라우저가 어떤 유형의 콘텐츠 인코딩을 허용하는지 ( &quot;gzip&quot;, &quot;deflate&quot;또는 전혀 없음) 결정하고 그에 따라 출력을 반환합니다. 압축 된 웹 페이지를 허용한다는 올바른 헤더를 보내는 것은 브라우저에 달려 있으므로 모든 브라우저가 지원됩니다. 브라우저가 압축 페이지를 지원하지 않으면이 함수는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="70bd506f8088776504f910b4f64bdede684f57c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_gzhandler()&lt;/strong&gt; is intended to be used as a callback function for &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; to help facilitate sending gz-encoded data to web browsers that support compressed web pages. Before &lt;strong&gt;ob_gzhandler()&lt;/strong&gt; actually sends compressed data, it determines what type of content encoding the browser will accept (&quot;gzip&quot;, &quot;deflate&quot; or none at all) and will return its output accordingly. All browsers are supported since it's up to the browser to send the correct header saying that it accepts compressed web pages. If a browser doesn't support compressed pages this function returns &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46a36e9118528057625f8123c570ff1c3779cee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_gzhandler()&lt;/strong&gt; requires the &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension.</source>
          <target state="translated">&lt;strong&gt;ob_gzhandler ()&lt;/strong&gt; 에는 &lt;a href=&quot;https://secure.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; 확장자 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="866ee75b4e810bba55e5b3788204040183b56771" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_gzhandler()&lt;/strong&gt; requires the &lt;a href=&quot;https://www.php.net/manual/en/ref.zlib.php&quot;&gt;zlib&lt;/a&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e34e1e744a7fc41f1c3389ae3a0c177e1f8d9d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ob_implicit_flush()&lt;/strong&gt; will turn implicit flushing on or off. Implicit flushing will result in a flush operation after every output call, so that explicit calls to &lt;a href=&quot;function.flush&quot;&gt;flush()&lt;/a&gt; will no longer be needed.</source>
          <target state="translated">&lt;strong&gt;ob_implicit_flush ()&lt;/strong&gt; 는 암시 적 플러시를 켜거나 끕니다. 암시 적 플러싱은 모든 출력 호출 후 플러시 작업을 수행하므로 &lt;a href=&quot;function.flush&quot;&gt;flush ()에 대한&lt;/a&gt; 명시 적 호출 이 더 이상 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30e7eddb2441bedc3dcd9d475e4171092e06c298" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;odbc_close_all()&lt;/strong&gt; will close down all connections to database server(s).</source>
          <target state="translated">&lt;strong&gt;odbc_close_all ()&lt;/strong&gt; 은 데이터베이스 서버에 대한 모든 연결을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="ae5a3e3e336b6c34017d0092ffa8765a830e6e5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;odbc_free_result()&lt;/strong&gt; only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script is finished.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;스크립트가 실행되는 동안 너무 많은 메모리를 사용하는 것이 걱정되는 경우에만 &lt;strong&gt;odbc_free_result ()&lt;/strong&gt; 를 호출하면됩니다. 스크립트가 완료되면 모든 결과 메모리가 자동으로 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="0f2da2f057fd120518aa1f704af22c32f19608f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openlog()&lt;/strong&gt; opens a connection to the system logger for a program.</source>
          <target state="translated">&lt;strong&gt;openlog ()&lt;/strong&gt; 는 프로그램의 시스템 로거에 대한 연결을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="18837f53961581c0ec224e29427b5984663f06fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_export()&lt;/strong&gt; takes the Certificate Signing Request represented by &lt;code&gt;csr&lt;/code&gt; and stores it in PEM format in &lt;code&gt;out&lt;/code&gt;, which is passed by reference.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_export ()&lt;/strong&gt; 는 &lt;code&gt;csr&lt;/code&gt; 로 표시되는 인증서 서명 요청을 가져 와서 PEM 형식으로 &lt;code&gt;out&lt;/code&gt; 하며 참조로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="de8d0b994524510f331c859ad318668aec387049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_export_to_file()&lt;/strong&gt; takes the Certificate Signing Request represented by &lt;code&gt;csr&lt;/code&gt; and saves it in PEM format into the file named by &lt;code&gt;outfilename&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_export_to_file ()&lt;/strong&gt; 은 &lt;code&gt;csr&lt;/code&gt; 로 표시되는 인증서 서명 요청을 가져 와서 이를 PEM 형식으로 &lt;code&gt;outfilename&lt;/code&gt; 이라는 파일에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="db424c4d3dfb49633883965fbf22b04763294b90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_get_public_key()&lt;/strong&gt; extracts the public key from &lt;code&gt;csr&lt;/code&gt; and prepares it for use by other functions.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_get_public_key ()&lt;/strong&gt; 는 &lt;code&gt;csr&lt;/code&gt; 에서 공개 키를 추출하여 다른 함수에서 사용할 수 있도록 준비합니다.</target>
        </trans-unit>
        <trans-unit id="13b31ca26a3341b6143e9ce09e417bc3e296861c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_get_subject()&lt;/strong&gt; returns subject distinguished name information encoded in the &lt;code&gt;csr&lt;/code&gt; including fields commonName (CN), organizationName (O), countryName (C) etc.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_get_subject ()&lt;/strong&gt; 는 commonName (CN), organizationName (O), countryName (C) 필드를 포함 하여 &lt;code&gt;csr&lt;/code&gt; 로 인코딩 된 주제 식별 이름 정보를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7eef2e983091807c9b900ae736d0ddb38609ba90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_new()&lt;/strong&gt; generates a new CSR (Certificate Signing Request) based on the information provided by &lt;code&gt;dn&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_new ()&lt;/strong&gt; 는 &lt;code&gt;dn&lt;/code&gt; 이 제공 한 정보를 기반으로 새 CSR (인증서 서명 요청 &lt;strong&gt;)을&lt;/strong&gt; 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="699b35d1de108c9c845c53e3f59fe2526a8bbf78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_csr_sign()&lt;/strong&gt; generates an x509 certificate resource from the given CSR.</source>
          <target state="translated">&lt;strong&gt;openssl_csr_sign ()&lt;/strong&gt; 은 주어진 CSR에서 x509 인증서 리소스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b2df907886b6c06e5e7fc432fe1929b4fffddc17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_error_string()&lt;/strong&gt; returns the last error from the openSSL library. Error messages are queued, so this function should be called multiple times to collect all of the information. The last error will be the most recent one.</source>
          <target state="translated">&lt;strong&gt;openssl_error_string ()&lt;/strong&gt; 은 openSSL 라이브러리에서 마지막 오류를 반환합니다. 오류 메시지가 대기 중이므로이 정보를 여러 번 호출하여 모든 정보를 수집해야합니다. 마지막 오류가 가장 최근 오류입니다.</target>
        </trans-unit>
        <trans-unit id="fd88e9ee049ff489b4ab6b2f21e6228bbcef88ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_free_key()&lt;/strong&gt; frees the key associated with the specified &lt;code&gt;key_identifier&lt;/code&gt; from memory.</source>
          <target state="translated">&lt;strong&gt;openssl_free_key ()&lt;/strong&gt; 는 지정된 &lt;code&gt;key_identifier&lt;/code&gt; 와 관련된 키 를 메모리에서 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="8f90f90bfb213a8c9be092518d669b9e112a797f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_get_cert_locations()&lt;/strong&gt; returns an array with information about the available certificate locations that will be searched for SSL certificates.</source>
          <target state="translated">&lt;strong&gt;openssl_get_cert_locations ()&lt;/strong&gt; 는 SSL 인증서를 검색 할 수있는 사용 가능한 인증서 위치에 대한 정보가있는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c210d3c17547bb7f2f3df9369c56d88610591256" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_md_method()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;openssl_md_method()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9a68cf139946ed9653e2a005f97aabf931bc997" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_open()&lt;/strong&gt; opens (decrypts) &lt;code&gt;sealed_data&lt;/code&gt; using the private key associated with the key identifier &lt;code&gt;priv_key_id&lt;/code&gt; and the envelope key &lt;code&gt;env_key&lt;/code&gt;, and fills &lt;code&gt;open_data&lt;/code&gt; with the decrypted data. The envelope key is generated when the data are sealed and can only be used by one specific private key. See &lt;a href=&quot;function.openssl-seal&quot;&gt;openssl_seal()&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;openssl_open ()&lt;/strong&gt; 은 키 식별자 &lt;code&gt;priv_key_id&lt;/code&gt; 및 엔벨로프 키 &lt;code&gt;env_key&lt;/code&gt; 와 연관된 개인 키를 사용하여 &lt;code&gt;sealed_data&lt;/code&gt; 를 열고 (암호 해독) , 해독 된 데이터로 &lt;code&gt;open_data&lt;/code&gt; 를 채 웁니다 . 봉투 키는 데이터가 봉인 될 때 ​​생성되며 하나의 특정 개인 키만 사용할 수 있습니다. 자세한 내용은 &lt;a href=&quot;function.openssl-seal&quot;&gt;openssl_seal ()&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1f353b7ddc919eabcfa3c065be19fad489b5bafc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pbkdf2()&lt;/strong&gt; computes PBKDF2 (Password-Based Key Derivation Function 2), a key derivation function defined in PKCS5 v2.</source>
          <target state="translated">&lt;strong&gt;openssl_pbkdf2 ()&lt;/strong&gt; 는 PKCS5 v2에 정의 된 키 파생 함수 인 PBKDF2 (암호 기반 키 파생 함수 2 &lt;strong&gt;)를&lt;/strong&gt; 계산합니다.</target>
        </trans-unit>
        <trans-unit id="bd76a896370c5bf5a182d2f9d0810375bec32a32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs12_export()&lt;/strong&gt; stores &lt;code&gt;x509&lt;/code&gt; into a string named by &lt;code&gt;out&lt;/code&gt; in a PKCS#12 file format.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs12_export ()&lt;/strong&gt; 는 &lt;code&gt;x509&lt;/code&gt; 를 PKCS # 12 파일 형식 으로 &lt;code&gt;out&lt;/code&gt; 으로 명명 된 문자열에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="af9a29fdfceb0d10b4e0f7c9ca1d55827e8b70e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs12_export_to_file()&lt;/strong&gt; stores &lt;code&gt;x509&lt;/code&gt; into a file named by &lt;code&gt;filename&lt;/code&gt; in a PKCS#12 file format.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs12_export_to_file ()&lt;/strong&gt; 은 &lt;code&gt;x509&lt;/code&gt; 를 PKCS # 12 파일 형식의 &lt;code&gt;filename&lt;/code&gt; 으로 이름 이 지정된 파일 에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="c5ca72583860c75b323ce7904ccc401e9aa98b7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs12_read()&lt;/strong&gt; parses the PKCS#12 certificate store supplied by &lt;code&gt;pkcs12&lt;/code&gt; into a array named &lt;code&gt;certs&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs12_read ()&lt;/strong&gt; 는 &lt;code&gt;pkcs12&lt;/code&gt; 가 제공 한 PKCS # 12 인증서 저장소를 &lt;code&gt;certs&lt;/code&gt; 라는 배열로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="d3b5e3bb52d824f230892c5245ce0c3b51283745" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs7_encrypt()&lt;/strong&gt; takes the contents of the file named &lt;code&gt;infile&lt;/code&gt; and encrypts them using an RC2 40-bit cipher so that they can only be read by the intended recipients specified by &lt;code&gt;recipcerts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs7_encrypt ()&lt;/strong&gt; 는 &lt;code&gt;infile&lt;/code&gt; 이라는 파일의 내용을 가져 와서 &lt;code&gt;recipcerts&lt;/code&gt; 에 의해 지정된 의도 된 수신자 만 읽을 수 있도록 RC2 40 비트 암호를 사용하여이를 암호화합니다 .</target>
        </trans-unit>
        <trans-unit id="8cd4543efaf5e11664ea14dd3198c178f0d3c4ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs7_sign()&lt;/strong&gt; takes the contents of the file named &lt;code&gt;infilename&lt;/code&gt; and signs them using the certificate and its matching private key specified by &lt;code&gt;signcert&lt;/code&gt; and &lt;code&gt;privkey&lt;/code&gt; parameters.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs7_sign ()&lt;/strong&gt; 은 &lt;code&gt;infilename&lt;/code&gt; 이라는 파일의 내용을 가져와 인증서 및 &lt;code&gt;signcert&lt;/code&gt; 및 &lt;code&gt;privkey&lt;/code&gt; 매개 변수로 지정된 일치하는 개인 키를 사용하여 서명합니다 .</target>
        </trans-unit>
        <trans-unit id="d0c8a66df4fb8c4546b331c8441ec4a7d98e80e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkcs7_verify()&lt;/strong&gt; reads the S/MIME message contained in the given file and examines the digital signature.</source>
          <target state="translated">&lt;strong&gt;openssl_pkcs7_verify ()&lt;/strong&gt; 는 주어진 파일에 포함 된 S / MIME 메시지를 읽고 디지털 서명을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="a004857d566b6a52bb202e0c8323095fe511bda5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkey_export()&lt;/strong&gt; exports &lt;code&gt;key&lt;/code&gt; as a PEM encoded string and stores it into &lt;code&gt;out&lt;/code&gt; (which is passed by reference).</source>
          <target state="translated">&lt;strong&gt;openssl_pkey_export ()&lt;/strong&gt; 수출 &lt;code&gt;key&lt;/code&gt; 로 PEM 인코딩 된 문자열을 저장로서 &lt;code&gt;out&lt;/code&gt; (참조로 전달).</target>
        </trans-unit>
        <trans-unit id="9485701b118394352200662556dc1bfe9cbf8e92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkey_export_to_file()&lt;/strong&gt; saves an ascii-armoured (PEM encoded) rendition of &lt;code&gt;key&lt;/code&gt; into the file named by &lt;code&gt;outfilename&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_pkey_export_to_file ()&lt;/strong&gt; 은 &lt;code&gt;outfilename&lt;/code&gt; 으로 이름이 지정된 파일에 ASCII로 (PEM으로 인코딩 된) &lt;code&gt;key&lt;/code&gt; 표현을 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="626da23bcc584e827e078ce28d44efa6d8b620fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkey_get_private()&lt;/strong&gt; parses &lt;code&gt;key&lt;/code&gt; and prepares it for use by other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef00e7d2157c429e5de7fe544fd23c03293d9cdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkey_get_public()&lt;/strong&gt; extracts the public key from &lt;code&gt;certificate&lt;/code&gt; and prepares it for use by other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a16189d4b58b9f778518949aa9bd78c612f8c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_pkey_new()&lt;/strong&gt; generates a new private and public key pair. The public component of the key can be obtained using &lt;a href=&quot;function.openssl-pkey-get-public&quot;&gt;openssl_pkey_get_public()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_pkey_new ()&lt;/strong&gt; 는 새로운 개인 및 공개 키 쌍을 생성합니다. 키의 공개 컴포넌트는 &lt;a href=&quot;function.openssl-pkey-get-public&quot;&gt;openssl_pkey_get_public ()을&lt;/a&gt; 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2daab1e41f983ce9375444c0283d9b977a7a9a44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_private_decrypt()&lt;/strong&gt; decrypts &lt;code&gt;data&lt;/code&gt; that was previously encrypted via &lt;a href=&quot;function.openssl-public-encrypt&quot;&gt;openssl_public_encrypt()&lt;/a&gt; and stores the result into &lt;code&gt;decrypted&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_private_decrypt ()&lt;/strong&gt; 는 &lt;a href=&quot;function.openssl-public-encrypt&quot;&gt;openssl_public_encrypt ()&lt;/a&gt; 를 통해 이전에 암호화 된 &lt;code&gt;data&lt;/code&gt; 를 해독 하고 결과를 &lt;code&gt;decrypted&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="e268920c10620c11843d59f94901527c2d6858b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_private_encrypt()&lt;/strong&gt; encrypts &lt;code&gt;data&lt;/code&gt; with private &lt;code&gt;key&lt;/code&gt; and stores the result into &lt;code&gt;crypted&lt;/code&gt;. Encrypted data can be decrypted via &lt;a href=&quot;function.openssl-public-decrypt&quot;&gt;openssl_public_decrypt()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_private_encrypt ()&lt;/strong&gt; 는 개인 &lt;code&gt;key&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 를 암호화 하고 결과를 &lt;code&gt;crypted&lt;/code&gt; 에 저장합니다 . &lt;a href=&quot;function.openssl-public-decrypt&quot;&gt;openssl_public_decrypt ()&lt;/a&gt; 를 통해 암호화 된 데이터를 해독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60a790654f4c72f4600fb21b9ad17d75545bdbfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_public_decrypt()&lt;/strong&gt; decrypts &lt;code&gt;data&lt;/code&gt; that was previous encrypted via &lt;a href=&quot;function.openssl-private-encrypt&quot;&gt;openssl_private_encrypt()&lt;/a&gt; and stores the result into &lt;code&gt;decrypted&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_public_decrypt ()&lt;/strong&gt; 는 &lt;a href=&quot;function.openssl-private-encrypt&quot;&gt;openssl_private_encrypt ()&lt;/a&gt; 를 통해 이전에 암호화 된 &lt;code&gt;data&lt;/code&gt; 를 해독 하고 결과를 &lt;code&gt;decrypted&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="7f7b076238d6d69ae88fa33cb959df60956e2b6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_public_encrypt()&lt;/strong&gt; encrypts &lt;code&gt;data&lt;/code&gt; with public &lt;code&gt;key&lt;/code&gt; and stores the result into &lt;code&gt;crypted&lt;/code&gt;. Encrypted data can be decrypted via &lt;a href=&quot;function.openssl-private-decrypt&quot;&gt;openssl_private_decrypt()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_public_encrypt ()&lt;/strong&gt; 는 공개 &lt;code&gt;key&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; 를 암호화 하고 결과를 &lt;code&gt;crypted&lt;/code&gt; 에 저장합니다 . &lt;a href=&quot;function.openssl-private-decrypt&quot;&gt;openssl_private_decrypt ()&lt;/a&gt; 를 통해 암호화 된 데이터를 해독 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ed741c3e2576ab95a99ba0d2a3a9a2f09c53d1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_seal()&lt;/strong&gt; seals (encrypts) &lt;code&gt;data&lt;/code&gt; by using the given &lt;code&gt;method&lt;/code&gt; with a randomly generated secret key. The key is encrypted with each of the public keys associated with the identifiers in &lt;code&gt;pub_key_ids&lt;/code&gt; and each encrypted key is returned in &lt;code&gt;env_keys&lt;/code&gt;. This means that one can send sealed data to multiple recipients (provided one has obtained their public keys). Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient's public key.</source>
          <target state="translated">&lt;strong&gt;openssl_seal ()&lt;/strong&gt; 은 무작위로 생성 된 비밀 키로 주어진 &lt;code&gt;method&lt;/code&gt; 를 사용하여 &lt;code&gt;data&lt;/code&gt; 를 봉인 (암호화) 합니다 . 키는 &lt;code&gt;pub_key_ids&lt;/code&gt; 의 식별자와 연관된 각 공개 키로 암호화되며 암호화 된 각 키는 &lt;code&gt;env_keys&lt;/code&gt; 로 리턴됩니다 . 즉, 봉인 된 데이터를 여러 수신자에게 보낼 수 있습니다 (공개 키를 얻은 경우). 각받는 사람은 봉인 된 데이터와받는 사람의 공개 키로 암호화 된 봉투 키를 모두 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="ed7589ca983a9add4eeb6cc2a2c1443d0341a571" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_sign()&lt;/strong&gt; computes a signature for the specified &lt;code&gt;data&lt;/code&gt; by generating a cryptographic digital signature using the private key associated with &lt;code&gt;priv_key_id&lt;/code&gt;. Note that the data itself is not encrypted.</source>
          <target state="translated">&lt;strong&gt;openssl_sign ()&lt;/strong&gt; 은 &lt;code&gt;priv_key_id&lt;/code&gt; 와 연결된 개인 키를 사용하여 암호화 디지털 서명을 생성 하여 지정된 &lt;code&gt;data&lt;/code&gt; 에 대한 서명을 계산합니다 . 데이터 자체는 암호화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8af29840e7b2ece553463362cf8cc68a94b32ef8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_spki_new()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;openssl_spki_new()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da115eddfb76ff74da1a21cd627a4cd54c3e2cbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_verify()&lt;/strong&gt; verifies that the &lt;code&gt;signature&lt;/code&gt; is correct for the specified &lt;code&gt;data&lt;/code&gt; using the public key associated with &lt;code&gt;pub_key_id&lt;/code&gt;. This must be the public key corresponding to the private key used for signing.</source>
          <target state="translated">&lt;strong&gt;openssl_verify ()&lt;/strong&gt; 는 &lt;code&gt;signature&lt;/code&gt; &lt;code&gt;pub_key_id&lt;/code&gt; 와 관련된 공개 키를 사용하여 지정된 &lt;code&gt;data&lt;/code&gt; 대한 서명 이 올바른지 . 서명에 사용 된 개인 키에 해당하는 공개 키 여야합니다.</target>
        </trans-unit>
        <trans-unit id="1152223bcc6654072ad253625db9bfc0af595cc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_checkpurpose()&lt;/strong&gt; examines a certificate to see if it can be used for the specified &lt;code&gt;purpose&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_checkpurpose ()&lt;/strong&gt; 는 인증서를 지정된 &lt;code&gt;purpose&lt;/code&gt; 으로 사용할 수 있는지 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="69d6b193ca35e438aae99b8b1868b03358bd227f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_export()&lt;/strong&gt; stores &lt;code&gt;x509&lt;/code&gt; into a string named by &lt;code&gt;output&lt;/code&gt; in a PEM encoded format.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_export ()&lt;/strong&gt; 상점 &lt;code&gt;x509&lt;/code&gt; 를 PEM 인코딩 형식의 &lt;code&gt;output&lt;/code&gt; 으로 명명 된 문자열에 합니다.</target>
        </trans-unit>
        <trans-unit id="003d39e8f9ea4c7e5fabd28481754584111ff918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_export_to_file()&lt;/strong&gt; stores &lt;code&gt;x509&lt;/code&gt; into a file named by &lt;code&gt;outfilename&lt;/code&gt; in a PEM encoded format.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_export_to_file ()&lt;/strong&gt; 상점 &lt;code&gt;x509&lt;/code&gt; 를 &lt;code&gt;outfilename&lt;/code&gt; 으로 이름이 지정된 파일 에 PEM ​​인코딩 형식으로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ae8c2d53e7b2a2876e69eae56d95aa7d898229a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_fingerprint()&lt;/strong&gt; returns the digest of &lt;code&gt;x509&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_fingerprint ()&lt;/strong&gt; 는 &lt;code&gt;x509&lt;/code&gt; 의 다이제스트를 문자열로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f6cbb2b62db84e5e8feadc96590045b9cbe7b5d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_free()&lt;/strong&gt; frees the certificate associated with the specified &lt;code&gt;x509cert&lt;/code&gt; resource from memory.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_free ()&lt;/strong&gt; 는 지정된 &lt;code&gt;x509cert&lt;/code&gt; 리소스 와 관련된 인증서 를 메모리에서 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="71bd2d290bca43b0e67234dd77540bf11cf2f0c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_parse()&lt;/strong&gt; returns information about the supplied &lt;code&gt;x509cert&lt;/code&gt;, including fields such as subject name, issuer name, purposes, valid from and valid to dates etc.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_parse ()&lt;/strong&gt; 는 제목 이름, 발급자 이름, 목적, 유효 날짜 및 유효 날짜 등의 필드를 포함 하여 제공된 &lt;code&gt;x509cert&lt;/code&gt; 에 대한 정보를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a614a1a533c9149c208cb56bf992ef366a8351b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_read()&lt;/strong&gt; parses the certificate supplied by &lt;code&gt;x509certdata&lt;/code&gt; and returns a resource identifier for it.</source>
          <target state="translated">&lt;strong&gt;openssl_x509_read ()&lt;/strong&gt; 는 &lt;code&gt;x509certdata&lt;/code&gt; 에서 제공 한 인증서를 구문 분석하고 이에 대한 리소스 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5e09ec1c22f25f2e4b663f681980d62b783b8558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;openssl_x509_verify()&lt;/strong&gt; verifies that the &lt;code&gt;x509&lt;/code&gt; certificate was signed by the private key corresponding to public key &lt;code&gt;pub_key_id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6e24c0e21b3142fbe539432b874182ec9cb0d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parse_ini_file()&lt;/strong&gt; loads in the ini file specified in &lt;code&gt;filename&lt;/code&gt;, and returns the settings in it in an associative array.</source>
          <target state="translated">&lt;strong&gt;parse_ini_file ()&lt;/strong&gt; 은 &lt;code&gt;filename&lt;/code&gt; 에 지정된 ini 파일을로드 하고 관련 배열로 해당 설정을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab8be49841581641bdd95ed7d41d0116f4430f9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parse_ini_string()&lt;/strong&gt; returns the settings in string &lt;code&gt;ini&lt;/code&gt; in an associative array.</source>
          <target state="translated">&lt;strong&gt;parse_ini_string ()&lt;/strong&gt; 은 문자열 &lt;code&gt;ini&lt;/code&gt; 의 설정을 연관 배열로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c935ae133cfbcf1486999e9d61df222c636524f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;password_hash()&lt;/strong&gt; creates a new password hash using a strong one-way hashing algorithm. &lt;strong&gt;password_hash()&lt;/strong&gt; is compatible with &lt;a href=&quot;function.crypt&quot;&gt;crypt()&lt;/a&gt;. Therefore, password hashes created by &lt;a href=&quot;function.crypt&quot;&gt;crypt()&lt;/a&gt; can be used with &lt;strong&gt;password_hash()&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;password_hash ()&lt;/strong&gt; 는 강력한 단방향 해싱 알고리즘을 사용하여 새 비밀번호 해시를 만듭니다. &lt;strong&gt;password_hash ()&lt;/strong&gt; 는 &lt;a href=&quot;function.crypt&quot;&gt;crypt ()&lt;/a&gt; 와 호환됩니다 . 따라서 &lt;a href=&quot;function.crypt&quot;&gt;crypt ()로&lt;/a&gt; 만든 비밀번호 해시 는&lt;strong&gt; password_hash ()&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3f4308d420249f68e0a32a2d269342c41f6669f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pathinfo()&lt;/strong&gt; is locale aware, so for it to parse a path containing multibyte characters correctly, the matching locale must be set using the &lt;a href=&quot;function.setlocale&quot;&gt;setlocale()&lt;/a&gt; function.</source>
          <target state="translated">&lt;strong&gt;pathinfo ()&lt;/strong&gt; 는 로케일을 인식하므로 멀티 바이트 문자를 포함하는 경로를 올바르게 구문 분석하려면 일치하는 로케일을&lt;a href=&quot;function.setlocale&quot;&gt; setlocale ()&lt;/a&gt; 함수를 .</target>
        </trans-unit>
        <trans-unit id="9c8718299192671291a0b4a04eeeaf5a3073319f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pathinfo()&lt;/strong&gt; returns information about &lt;code&gt;path&lt;/code&gt;: either an associative array or a string, depending on &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pathinfo ()&lt;/strong&gt; 는 &lt;code&gt;path&lt;/code&gt; 에 대한 정보를 반환 합니다. 연관 배열 또는 문자열 &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="966262bc3ab774e2ccb827812590f291bb394c74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pclose()&lt;/strong&gt; is internally implemented using the &lt;code&gt;waitpid(3)&lt;/code&gt; system call. To obtain the real exit status code the &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus()&lt;/a&gt; function should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79be38fc80a21bc1b19e13f0837af4d2a7bf447" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pclose()&lt;/strong&gt; is internally implemented using the &lt;em&gt;waitpid(3)&lt;/em&gt; system call. To obtain the real exit status code the &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus()&lt;/a&gt; function should be used.</source>
          <target state="translated">&lt;strong&gt;pclose ()&lt;/strong&gt; 는 &lt;em&gt;waitpid (3)를&lt;/em&gt; 사용하여 내부적으로 구현됩니다.&lt;em&gt;&lt;/em&gt; 시스템 호출을 . 실제 종료 상태 코드를 얻으려면 &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus ()&lt;/a&gt; 함수를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6396c52f81edb86166492f863c4f762f9a36a10a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_getpriority()&lt;/strong&gt; gets the priority of &lt;code&gt;pid&lt;/code&gt;. Because priority levels can differ between system types and kernel versions, please see your system's getpriority(2) man page for specific details.</source>
          <target state="translated">&lt;strong&gt;pcntl_getpriority ()&lt;/strong&gt; 는 우선 순위를 얻습니다. &lt;code&gt;pid&lt;/code&gt; . 우선 순위 수준은 시스템 유형과 커널 버전에 따라 다를 수 있으므로 자세한 내용은 시스템의 getpriority (2) 매뉴얼 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55dd12fd3d5f157af10091487a9b9036041a2922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_getpriority()&lt;/strong&gt; returns the priority of the process or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error. A lower numerical value causes more favorable scheduling.</source>
          <target state="translated">&lt;strong&gt;pcntl_getpriority ()&lt;/strong&gt; 는 프로세스의 우선 순위를 리턴하거나&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;오류시&lt;strong&gt; FALSE&lt;/strong&gt; 를. 수치가 낮을수록 더 유리한 스케줄링이됩니다.</target>
        </trans-unit>
        <trans-unit id="c1b8c34f20d570b111c3a6ab161aa1cfc62f99b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_getpriority()&lt;/strong&gt; returns the priority of the process or &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on error. A lower numerical value causes more favorable scheduling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b07842a10aad1b6c361dc7e3ed864599e03c89e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_setpriority()&lt;/strong&gt; sets the priority of &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pcntl_setpriority ()&lt;/strong&gt; 는 우선 순위를 설정합니다 &lt;code&gt;pid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5db0841fdab09c3daba258752adfb004b744661f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_signal()&lt;/strong&gt; doesn't stack the signal handlers, but replaces them.</source>
          <target state="translated">&lt;strong&gt;pcntl_signal ()&lt;/strong&gt; 은 신호 처리기를 스택하지 않고 대체합니다.</target>
        </trans-unit>
        <trans-unit id="2a5f96fad58dffb36a7db42f83b2f242d4b0219e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_signal_get_handler()&lt;/strong&gt; has been added.</source>
          <target state="translated">&lt;strong&gt;pcntl_signal_get_handler ()&lt;/strong&gt; 가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="aaf9d2ca82fa60383035439c380d31756bc63d11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_wait()&lt;/strong&gt; returns the process ID of the child which exited, -1 on error or zero if WNOHANG was provided as an option (on wait3-available systems) and no child was available.</source>
          <target state="translated">&lt;strong&gt;pcntl_wait ()&lt;/strong&gt; 는 종료 된 하위의 프로세스 ID를 리턴합니다 오류시 -1 또는 WNOHANG이 옵션 (wait3-available 시스템)으로 제공되고 사용 가능한 하위가없는 경우 0).</target>
        </trans-unit>
        <trans-unit id="afdd622e82aae27f17819955a7972970fd79e349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_wait()&lt;/strong&gt; will store status information in the &lt;code&gt;status&lt;/code&gt; parameter which can be evaluated using the following functions: &lt;a href=&quot;function.pcntl-wifexited&quot;&gt;pcntl_wifexited()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wifstopped&quot;&gt;pcntl_wifstopped()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wifsignaled&quot;&gt;pcntl_wifsignaled()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wtermsig&quot;&gt;pcntl_wtermsig()&lt;/a&gt; and &lt;a href=&quot;function.pcntl-wstopsig&quot;&gt;pcntl_wstopsig()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pcntl_wait ()&lt;/strong&gt; 는 다음 함수를 사용하여 평가할 수있는 &lt;code&gt;status&lt;/code&gt; 매개 변수 에 상태 정보를 저장 합니다. &lt;a href=&quot;function.pcntl-wifexited&quot;&gt;pcntl_wifexited ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wifstopped&quot;&gt;pcntl_wifstopped ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wifsignaled&quot;&gt;pcntl_wifsignaled ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wtermsig&quot;&gt;pcntl_wtermsig ()&lt;/a&gt; 및 &lt;a href=&quot;function.pcntl-wstopsig&quot;&gt;pcntl_wstopsig ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec6c288c5e2582c0c944edfd6a7c80f93715ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_waitpid()&lt;/strong&gt; returns the process ID of the child which exited, -1 on error or zero if &lt;strong&gt;&lt;code&gt;WNOHANG&lt;/code&gt;&lt;/strong&gt; was used and no child was available</source>
          <target state="translated">&lt;strong&gt;pcntl_waitpid ()&lt;/strong&gt; 는 종료 된 자식의 프로세스 ID를 반환합니다. 오류가 발생하면 -1을 반환하고 0이면&lt;strong&gt; &lt;code&gt;WNOHANG&lt;/code&gt; &lt;/strong&gt; 을 사용하고 하위를 사용할 수없는</target>
        </trans-unit>
        <trans-unit id="9e72b36733359f41c2d2a2a9058dad3c36e4b18d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pcntl_waitpid()&lt;/strong&gt; will store status information in the &lt;code&gt;status&lt;/code&gt; parameter which can be evaluated using the following functions: &lt;a href=&quot;function.pcntl-wifexited&quot;&gt;pcntl_wifexited()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wifstopped&quot;&gt;pcntl_wifstopped()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wifsignaled&quot;&gt;pcntl_wifsignaled()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus()&lt;/a&gt;, &lt;a href=&quot;function.pcntl-wtermsig&quot;&gt;pcntl_wtermsig()&lt;/a&gt; and &lt;a href=&quot;function.pcntl-wstopsig&quot;&gt;pcntl_wstopsig()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pcntl_waitpid ()&lt;/strong&gt; 는 다음 함수를 사용하여 평가할 수있는 &lt;code&gt;status&lt;/code&gt; 매개 변수 에 상태 정보를 저장 합니다. &lt;a href=&quot;function.pcntl-wifexited&quot;&gt;pcntl_wifexited ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wifstopped&quot;&gt;pcntl_wifstopped ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wifsignaled&quot;&gt;pcntl_wifsignaled ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wexitstatus&quot;&gt;pcntl_wexitstatus ()&lt;/a&gt; , &lt;a href=&quot;function.pcntl-wtermsig&quot;&gt;pcntl_wtermsig ()&lt;/a&gt; 및&lt;a href=&quot;function.pcntl-wstopsig&quot;&gt; pcntl_wstopsig ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcc6cc2d72f30688ae1e052defd27f3c16cba81c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_affected_rows()&lt;/strong&gt; returns the number of tuples (instances/records/rows) affected by &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8435f56898a267879149013ef22526911144f1f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_affected_rows()&lt;/strong&gt; returns the number of tuples (instances/records/rows) affected by &lt;em&gt;INSERT&lt;/em&gt;, &lt;em&gt;UPDATE&lt;/em&gt;, and &lt;em&gt;DELETE&lt;/em&gt; queries.</source>
          <target state="translated">&lt;strong&gt;pg_affected_rows ()&lt;/strong&gt; 는 &lt;em&gt;INSERT&lt;/em&gt; , &lt;em&gt;UPDATE&lt;/em&gt; 및 영향을받는 튜플 (인스턴스 / 레코드 / 행) 수를 반환합니다.&lt;em&gt; DELETE의&lt;/em&gt; 쿼리의 합니다.</target>
        </trans-unit>
        <trans-unit id="7d0c051b6c17db15677fce9239e7a97d1b1fefcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_cancel_query()&lt;/strong&gt; cancels an asynchronous query sent with &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt;, &lt;a href=&quot;function.pg-send-query-params&quot;&gt;pg_send_query_params()&lt;/a&gt; or &lt;a href=&quot;function.pg-send-execute&quot;&gt;pg_send_execute()&lt;/a&gt;. You cannot cancel a query executed using &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_cancel_query ()&lt;/strong&gt; 는 &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query ()&lt;/a&gt; , &lt;a href=&quot;function.pg-send-query-params&quot;&gt;pg_send_query_params ()&lt;/a&gt; 또는 &lt;a href=&quot;function.pg-send-execute&quot;&gt;pg_send_execute ()&lt;/a&gt; 와 함께 전송 된 비동기 쿼리를 취소합니다 . &lt;a href=&quot;function.pg-query&quot;&gt;pg_query ()를&lt;/a&gt; 사용하여 실행 된 쿼리는 취소 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="acdb80b919cd7036641bfda21772ec45eb8433e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_close()&lt;/strong&gt; closes the non-persistent connection to a PostgreSQL database associated with the given &lt;code&gt;connection&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_close ()&lt;/strong&gt; 는 주어진 &lt;code&gt;connection&lt;/code&gt; 리소스 와 관련된 PostgreSQL 데이터베이스에 대한 비 지속적 연결을 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="7cb02cb9443951240defd22f265aaf3c9f47f2a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_connect()&lt;/strong&gt; opens a connection to a PostgreSQL database specified by the &lt;code&gt;connection_string&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_connect은 ()&lt;/strong&gt; 에 의해 지정된 PostgreSQL 데이터베이스에 연결 열립니다 &lt;code&gt;connection_string&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="f5837312e2cbc61a5be2ad10c47d345e0b6e622c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_connect_poll()&lt;/strong&gt; polls the status of a PostgreSQL connection created by calling &lt;a href=&quot;function.pg-connect&quot;&gt;pg_connect()&lt;/a&gt; with the &lt;strong&gt;&lt;code&gt;PGSQL_CONNECT_ASYNC&lt;/code&gt;&lt;/strong&gt; option.</source>
          <target state="translated">&lt;strong&gt;pg_connect_poll ()&lt;/strong&gt; 은 &lt;strong&gt; &lt;code&gt;PGSQL_CONNECT_ASYNC&lt;/code&gt; &lt;/strong&gt; 옵션으로 &lt;a href=&quot;function.pg-connect&quot;&gt;pg_connect ()&lt;/a&gt; 를 호출하여 생성 된 PostgreSQL 연결 상태를 폴링합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bef54745303a1e195fd1d5c1ca7072401281f34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_connection_busy()&lt;/strong&gt; determines whether or not a connection is busy. If it is busy, a previous query is still executing. If &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; is used on the connection, it will be blocked.</source>
          <target state="translated">&lt;strong&gt;pg_connection_busy ()&lt;/strong&gt; 는 연결이 사용 중인지 여부를 결정합니다. 사용 중이면 이전 쿼리가 여전히 실행 중입니다. 만약&lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result () 인&lt;/a&gt; 연결에 사용되는, 그것은 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="244f4e511a478e48e7b344c49ffc6a13cdbb0936" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_connection_reset()&lt;/strong&gt; resets the connection. It is useful for error recovery.</source>
          <target state="translated">&lt;strong&gt;pg_connection_reset ()&lt;/strong&gt; 은 연결을 재설정합니다. 오류 복구에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="530fbbd34cadea5c396b2a4539915282c4dc6ab7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_connection_status()&lt;/strong&gt; returns the status of the specified &lt;code&gt;connection&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_connection_status ()&lt;/strong&gt; 는 지정된 &lt;code&gt;connection&lt;/code&gt; 상태를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b9d729819f2a0a9c1568ba0224e73fe189f653fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_consume_input()&lt;/strong&gt; consumes any input waiting to be read from the database server.</source>
          <target state="translated">&lt;strong&gt;pg_consume_input ()&lt;/strong&gt; 은 데이터베이스 서버에서 읽기를 기다리는 모든 입력을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ec0625c4cc38f7041353eb6f4d9629c4d14ce910" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_convert()&lt;/strong&gt; checks and converts the values in &lt;code&gt;assoc_array&lt;/code&gt; into suitable values for use in an SQL statement. Precondition for &lt;strong&gt;pg_convert()&lt;/strong&gt; is the existence of a table &lt;code&gt;table_name&lt;/code&gt; which has at least as many columns as &lt;code&gt;assoc_array&lt;/code&gt; has elements. The fieldnames in &lt;code&gt;table_name&lt;/code&gt; must match the indices in &lt;code&gt;assoc_array&lt;/code&gt; and the corresponding datatypes must be compatible. Returns an array with the converted values on success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="translated">&lt;strong&gt;pg_convert ()&lt;/strong&gt; 검사 및 변환의 값 &lt;code&gt;assoc_array&lt;/code&gt; 를 SQL 문에 사용하기에 적합한 값으로. 위한 전제 &lt;strong&gt;pg_convert ()는&lt;/strong&gt; , 테이블의 존재이다 &lt;code&gt;table_name&lt;/code&gt; 으로 적어도 등 많은 열이 &lt;code&gt;assoc_array&lt;/code&gt; 이 요소를 갖는다. &lt;code&gt;table_name&lt;/code&gt; 의 필드 이름은 &lt;code&gt;assoc_array&lt;/code&gt; 의 색인과 일치 해야하며 해당 데이터 유형이 호환 가능해야합니다. 성공하면 변환 된 값을 가진 배열을 반환하고, 그렇지 않으면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f52ba3e5f86ef01974c939d55b2f70836fd423a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_convert()&lt;/strong&gt; checks and converts the values in &lt;code&gt;assoc_array&lt;/code&gt; into suitable values for use in an SQL statement. Precondition for &lt;strong&gt;pg_convert()&lt;/strong&gt; is the existence of a table &lt;code&gt;table_name&lt;/code&gt; which has at least as many columns as &lt;code&gt;assoc_array&lt;/code&gt; has elements. The fieldnames in &lt;code&gt;table_name&lt;/code&gt; must match the indices in &lt;code&gt;assoc_array&lt;/code&gt; and the corresponding datatypes must be compatible. Returns an array with the converted values on success, &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cd0d8754a5fe4a80743796171fc8bf64472680" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_copy_from()&lt;/strong&gt; inserts records into a table from &lt;code&gt;rows&lt;/code&gt;. It issues a &lt;code&gt;COPY FROM&lt;/code&gt; SQL command internally to insert records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625870bb470c43b21e1b06fe6d8e3a3d67f12909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_copy_from()&lt;/strong&gt; inserts records into a table from &lt;code&gt;rows&lt;/code&gt;. It issues a &lt;em&gt;COPY FROM&lt;/em&gt; SQL command internally to insert records.</source>
          <target state="translated">&lt;strong&gt;pg_copy_from ()&lt;/strong&gt; 은 &lt;code&gt;rows&lt;/code&gt; 의 테이블에 레코드를 삽입합니다 . 내부적으로 &lt;em&gt;COPY FROM&lt;/em&gt; SQL 명령을 발행하여 레코드를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="6f1fe6de39fbfd0a1c2d5820d5fd1092eaf5a383" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_copy_to()&lt;/strong&gt; copies a table to an array. It issues &lt;code&gt;COPY TO&lt;/code&gt; SQL command internally to retrieve records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308fbc71d5ba4e55703189f86b19673336fe2ef9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_copy_to()&lt;/strong&gt; copies a table to an array. It issues &lt;em&gt;COPY TO&lt;/em&gt; SQL command internally to retrieve records.</source>
          <target state="translated">&lt;strong&gt;pg_copy_to ()&lt;/strong&gt; 는 테이블을 배열로 복사합니다. 이 문제 &lt;em&gt;COPY TO를&lt;/em&gt;내부적으로 SQL 명령을 하여 레코드를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="4d2a521cc5eb003ae83e79186d33ae4e46fd64f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_dbname()&lt;/strong&gt; returns the name of the database that the given PostgreSQL &lt;code&gt;connection&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_dbname ()&lt;/strong&gt; 은 주어진 PostgreSQL &lt;code&gt;connection&lt;/code&gt; 리소스 가 데이터베이스 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e45ee0baa13dd281a2c17fb82be256812e3b111e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_delete()&lt;/strong&gt; deletes records from a table specified by the keys and values in &lt;code&gt;assoc_array&lt;/code&gt;. If &lt;code&gt;options&lt;/code&gt; is specified, &lt;a href=&quot;function.pg-convert&quot;&gt;pg_convert()&lt;/a&gt; is applied to &lt;code&gt;assoc_array&lt;/code&gt; with the specified options.</source>
          <target state="translated">&lt;strong&gt;pg_delete ()&lt;/strong&gt; 는 &lt;code&gt;assoc_array&lt;/code&gt; 의 키와 값으로 지정된 테이블에서 레코드를 삭제합니다 . 경우 &lt;code&gt;options&lt;/code&gt; 지정, &lt;a href=&quot;function.pg-convert&quot;&gt;pg_convert은 ()&lt;/a&gt; 에 적용되는 &lt;code&gt;assoc_array&lt;/code&gt; 지정된 옵션.</target>
        </trans-unit>
        <trans-unit id="1248203b49b4d77215be77fe3ee51f73ccd0d04f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_end_copy()&lt;/strong&gt; syncs the PostgreSQL frontend (usually a web server process) with the PostgreSQL server after doing a copy operation performed by &lt;a href=&quot;function.pg-put-line&quot;&gt;pg_put_line()&lt;/a&gt;. &lt;strong&gt;pg_end_copy()&lt;/strong&gt; must be issued, otherwise the PostgreSQL server may get out of sync with the frontend and will report an error.</source>
          <target state="translated">&lt;strong&gt;pg_end_copy ()&lt;/strong&gt; 는 &lt;a href=&quot;function.pg-put-line&quot;&gt;pg_put_line ()에&lt;/a&gt; 의해 수행 된 복사 작업을 수행 한 후 PostgreSQL 프론트 엔드 (일반적으로 웹 서버 프로세스)를 PostgreSQL 서버와 동기화합니다 . &lt;strong&gt;pg_end_copy ()&lt;/strong&gt; 를 발행해야합니다. 그렇지 않으면 PostgreSQL 서버가 프론트 엔드와 동기화되지 &lt;strong&gt;않아 오류가보고&lt;/strong&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0f70155d53ad925a5ceb651a58423b242af0cd00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_escape_bytea()&lt;/strong&gt; escapes string for bytea datatype. It returns escaped string.</source>
          <target state="translated">&lt;strong&gt;pg_escape_bytea ()&lt;/strong&gt; 는 bytea 데이터 유형의 문자열을 이스케이프합니다. 이스케이프 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="281c11bc65c565d58ae7960f1e90283697ce28b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_escape_identifier()&lt;/strong&gt; escapes a identifier (e.g. table, field names) for quering the database. It returns an escaped identifier string for PostgreSQL server. &lt;strong&gt;pg_escape_identifier()&lt;/strong&gt; adds double quotes before and after data. Users should not add double quotes. Use of this function is recommended for identifier parameters in query. For SQL literals (i.e. parameters except bytea), &lt;a href=&quot;function.pg-escape-literal&quot;&gt;pg_escape_literal()&lt;/a&gt; or &lt;a href=&quot;function.pg-escape-string&quot;&gt;pg_escape_string()&lt;/a&gt; must be used. For bytea type fields, &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; must be used instead.</source>
          <target state="translated">&lt;strong&gt;pg_escape_identifier ()&lt;/strong&gt; 는 데이터베이스를 쿼리하기위한 식별자 (예 : 테이블, 필드 이름)를 이스케이프합니다. PostgreSQL 서버의 이스케이프 된 식별자 문자열을 반환합니다. &lt;strong&gt;pg_escape_identifier ()&lt;/strong&gt; 는 데이터 전후에 큰 따옴표를 추가합니다. 사용자는 큰 따옴표를 추가하지 않아야합니다. 쿼리에서 식별자 매개 변수에이 기능을 사용하는 것이 좋습니다. SQL 리터럴 (예 : bytea를 제외한 매개 변수)의 경우 &lt;a href=&quot;function.pg-escape-literal&quot;&gt;pg_escape_literal ()&lt;/a&gt; 또는 &lt;a href=&quot;function.pg-escape-string&quot;&gt;pg_escape_string ()을&lt;/a&gt; 사용해야합니다. bytea 유형 필드의 경우 &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea ()&lt;/a&gt; 를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d579591a1a9de8e60dc5b44b17c9cfacfe49f23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_escape_identifier()&lt;/strong&gt; escapes a identifier (e.g. table, field names) for querying the database. It returns an escaped identifier string for PostgreSQL server. &lt;strong&gt;pg_escape_identifier()&lt;/strong&gt; adds double quotes before and after data. Users should not add double quotes. Use of this function is recommended for identifier parameters in query. For SQL literals (i.e. parameters except bytea), &lt;a href=&quot;function.pg-escape-literal&quot;&gt;pg_escape_literal()&lt;/a&gt; or &lt;a href=&quot;function.pg-escape-string&quot;&gt;pg_escape_string()&lt;/a&gt; must be used. For bytea type fields, &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; must be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652aa2138cae6bf10ca6f237db4880f683ab8a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_escape_literal()&lt;/strong&gt; escapes a literal for querying the PostgreSQL database. It returns an escaped literal in the PostgreSQL format. &lt;strong&gt;pg_escape_literal()&lt;/strong&gt; adds quotes before and after data. Users should not add quotes. Use of this function is recommended instead of &lt;a href=&quot;function.pg-escape-string&quot;&gt;pg_escape_string()&lt;/a&gt;. If the type of the column is bytea, &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; must be used instead. For escaping identifiers (e.g. table, field names), &lt;a href=&quot;function.pg-escape-identifier&quot;&gt;pg_escape_identifier()&lt;/a&gt; must be used.</source>
          <target state="translated">&lt;strong&gt;pg_escape_literal ()&lt;/strong&gt; 은 PostgreSQL 데이터베이스를 쿼리하기위한 리터럴을 이스케이프합니다. PostgreSQL 형식으로 이스케이프 된 리터럴을 반환합니다. &lt;strong&gt;pg_escape_literal ()&lt;/strong&gt; 은 데이터 전후에 따옴표를 추가합니다. 사용자는 따옴표를 추가하지 않아야합니다. &lt;a href=&quot;function.pg-escape-string&quot;&gt;pg_escape_string ()&lt;/a&gt; 대신이 함수를 사용하는 것이 좋습니다 . 열 유형이 bytea 인 경우 대신 &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea ()를&lt;/a&gt; 사용해야합니다. 이스케이프 식별자 (예 : 테이블, 필드 이름)의 경우 &lt;a href=&quot;function.pg-escape-identifier&quot;&gt;pg_escape_identifier ()를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9eed472d6680f5e954ba0a192ab3f8be4b7695cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_escape_string()&lt;/strong&gt; escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes. &lt;a href=&quot;function.pg-escape-literal&quot;&gt;pg_escape_literal()&lt;/a&gt; is more preferred way to escape SQL parameters for PostgreSQL. &lt;a href=&quot;function.addslashes&quot;&gt;addslashes()&lt;/a&gt; must not be used with PostgreSQL. If the type of the column is bytea, &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt; must be used instead. &lt;a href=&quot;function.pg-escape-identifier&quot;&gt;pg_escape_identifier()&lt;/a&gt; must be used to escape identifiers (e.g. table names, field names)</source>
          <target state="translated">&lt;strong&gt;pg_escape_string ()&lt;/strong&gt; 은 데이터베이스를 쿼리하기위한 문자열을 이스케이프합니다. PostgreSQL 형식으로 이스케이프 된 문자열을 따옴표없이 반환합니다. &lt;a href=&quot;function.pg-escape-literal&quot;&gt;pg_escape_literal ()&lt;/a&gt; 은 PostgreSQL의 SQL 매개 변수를 이스케이프 처리하는 더 좋은 방법입니다. &lt;a href=&quot;function.addslashes&quot;&gt;addslashes ()&lt;/a&gt; 는 PostgreSQL과 함께 사용하면 안됩니다. 열 유형이 bytea 인 경우 대신 &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea ()를&lt;/a&gt; 사용해야합니다. 식별자 (예 : 테이블 이름, 필드 이름)를 이스케이프 처리하려면 &lt;a href=&quot;function.pg-escape-identifier&quot;&gt;pg_escape_identifier ()를&lt;/a&gt; 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="232e3c60bf117747c0d2f4ec079bf175515711f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_execute()&lt;/strong&gt; is like &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt;, but the command to be executed is specified by naming a previously-prepared statement, instead of giving a query string. This feature allows commands that will be used repeatedly to be parsed and planned just once, rather than each time they are executed. The statement must have been prepared previously in the current session. &lt;strong&gt;pg_execute()&lt;/strong&gt; is supported only against PostgreSQL 7.4 or higher connections; it will fail when using earlier versions.</source>
          <target state="translated">&lt;strong&gt;pg_execute ()&lt;/strong&gt; 는 &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params ()&lt;/a&gt; 와 비슷하지만 실행할 명령은 쿼리 문자열을 제공하는 대신 이전에 준비된 명령문의 이름을 지정하여 지정됩니다. 이 기능을 사용하면 명령을 실행할 때마다 반복적으로 사용되는 명령을 한 번만 구문 분석하고 계획 할 수 있습니다. 성명서는 현재 세션에서 미리 준비되어 있어야합니다. &lt;strong&gt;pg_execute ()&lt;/strong&gt; 는 PostgreSQL 7.4 이상의 연결에 대해서만 지원됩니다. 이전 버전을 사용하면 실패합니다.</target>
        </trans-unit>
        <trans-unit id="7ac29f1a65b2fb3fc94432b3de9972561f354813" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_all()&lt;/strong&gt; returns an array that contains all rows (records) in the result resource.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_all ()&lt;/strong&gt; 은 결과 리소스의 모든 행 (레코드)을 포함하는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cb1f3415a5321f05a540449a1cec5ea31e33147c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_all_columns()&lt;/strong&gt; returns an array that contains all rows (records) in a particular column of the result resource.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_all_columns ()&lt;/strong&gt; 는 결과 리소스의 특정 열에 모든 행 (레코드)이 포함 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69adc1bd35a354c6272a5eab3dda3b475be3f3df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_array()&lt;/strong&gt; is NOT significantly slower than using &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row()&lt;/a&gt;, and is significantly easier to use.</source>
          <target state="translated">&lt;strong&gt;) (pg_fetch_array&lt;/strong&gt; 상당히 느린 사용하는 것보다 아닙니다 &lt;a href=&quot;function.pg-fetch-row&quot;&gt;) pg_fetch_row을 (&lt;/a&gt; 및 사용에 상당히 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="cd23d32f996c61674b70edcc25a90a5b71d32be2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_array()&lt;/strong&gt; is an extended version of &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row()&lt;/a&gt;. In addition to storing the data in the numeric indices (field number) to the result array, it can also store the data using associative indices (field name). It stores both indices by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f004ec6d9047745736e7004365c15f8fb4a5b0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_array()&lt;/strong&gt; is an extended version of &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row()&lt;/a&gt;. In addition to storing the data in the numeric indices (field number) to the result array, it can also store the data using associative indices (field name). It stores both indicies by default.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_array ()&lt;/strong&gt; 의 확장 버전 &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row는 ()&lt;/a&gt; . 숫자 인덱스 (필드 번호)의 데이터를 결과 배열에 저장하는 것 외에도 연관 인덱스 (필드 이름)를 사용하여 데이터를 저장할 수도 있습니다. 기본적으로 두 지수를 모두 저장합니다.</target>
        </trans-unit>
        <trans-unit id="4b800c749c214ed4ab3ef6e48d8686d35a4f0af9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_array()&lt;/strong&gt; returns an array that corresponds to the fetched row (record).</source>
          <target state="translated">&lt;strong&gt;pg_fetch_array ()&lt;/strong&gt; 는 가져온 행 (레코드)에 해당하는 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="198d8afc0c9381dea83ee1ce9f74df4774bfb3ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_assoc()&lt;/strong&gt; is NOT significantly slower than using &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row()&lt;/a&gt;, and is significantly easier to use.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_assoc ()는&lt;/strong&gt; 상당히 느린 사용하는 것보다 아닙니다 &lt;a href=&quot;function.pg-fetch-row&quot;&gt;) pg_fetch_row을 (&lt;/a&gt; 및 사용에 상당히 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="147a47f5c0e894017f8823fd62467be87155174d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_assoc()&lt;/strong&gt; is equivalent to calling &lt;a href=&quot;function.pg-fetch-array&quot;&gt;pg_fetch_array()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;PGSQL_ASSOC&lt;/code&gt;&lt;/strong&gt; as the optional third parameter. It only returns an associative array. If you need the numeric indices, use &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_assoc ()&lt;/strong&gt; 는 선택적 세 번째 매개 변수 로 &lt;strong&gt; &lt;code&gt;PGSQL_ASSOC&lt;/code&gt; &lt;/strong&gt; 을 사용하여 &lt;a href=&quot;function.pg-fetch-array&quot;&gt;pg_fetch_array ()&lt;/a&gt; 를 호출하는 것과 같습니다 . 연관 배열 만 리턴합니다. 숫자 인덱스가 필요한 경우 &lt;a href=&quot;function.pg-fetch-row&quot;&gt;pg_fetch_row ()를 사용하십시오&lt;/a&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="655c206c6529ed3014b43058ccac7f1962d4c12b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_assoc()&lt;/strong&gt; returns an associative array that corresponds to the fetched row (records).</source>
          <target state="translated">&lt;strong&gt;pg_fetch_assoc ()&lt;/strong&gt; 는 페치 된 행 (레코드)에 해당하는 연관 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df26516d7cd3383ce5a33d2b09464e8aa3c12e77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_object()&lt;/strong&gt; returns an object with properties that correspond to the fetched row's field names. It can optionally instantiate an object of a specific class, and pass parameters to that class's constructor.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_object ()&lt;/strong&gt; 는 가져온 행의 필드 이름에 해당하는 속성을 가진 객체를 반환합니다. 선택적으로 특정 클래스의 객체를 인스턴스화하고 해당 클래스의 생성자에 매개 변수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fee79949cbaffaae332d01e1067af46057d6f62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_result()&lt;/strong&gt; returns the value of a particular row and field (column) in a PostgreSQL result resource.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_result ()&lt;/strong&gt; 는 PostgreSQL 결과 리소스에서 특정 행과 필드 (열)의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ac9f393f196506bae2f043fbcc030829f00631aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_fetch_row()&lt;/strong&gt; fetches one row of data from the result associated with the specified &lt;code&gt;result&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_fetch_row ()&lt;/strong&gt; 는 지정된 &lt;code&gt;result&lt;/code&gt; 리소스 와 관련된 결과에서 한 행의 데이터를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9579495a0c22d112517539d2b875cf20ddfb5bc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_is_null()&lt;/strong&gt; tests if a field in a PostgreSQL result resource is SQL &lt;code&gt;NULL&lt;/code&gt; or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c7012f8981f83f06742ba2ec1f82c62e8186fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_is_null()&lt;/strong&gt; tests if a field in a PostgreSQL result resource is SQL &lt;em&gt;NULL&lt;/em&gt; or not.</source>
          <target state="translated">&lt;strong&gt;pg_field_is_null ()&lt;/strong&gt; 은 PostgreSQL 결과 리소스의 필드가 SQL &lt;em&gt;NULL&lt;/em&gt; 인지 여부를 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="ab7e2e7468f2728c24c34605015fb80d3ab80a83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_name()&lt;/strong&gt; returns the name of the field occupying the given &lt;code&gt;field_number&lt;/code&gt; in the given PostgreSQL &lt;code&gt;result&lt;/code&gt; resource. Field numbering starts from 0.</source>
          <target state="translated">&lt;strong&gt;pg_field_name ()&lt;/strong&gt; 은 주어진 PostgreSQL &lt;code&gt;result&lt;/code&gt; 리소스 에서 주어진 &lt;code&gt;field_number&lt;/code&gt; 를 차지하는 필드의 이름을 반환합니다 . 필드 번호는 0부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ccbf6b0b8838320df712c13df18247462406b2cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_num()&lt;/strong&gt; will return the number of the field number that corresponds to the &lt;code&gt;field_name&lt;/code&gt; in the given PostgreSQL &lt;code&gt;result&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_field_num ()&lt;/strong&gt; 은 주어진 PostgreSQL &lt;code&gt;result&lt;/code&gt; 리소스 에서 &lt;code&gt;field_name&lt;/code&gt; 에 해당하는 필드 번호의 번호를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="73505e28b6d840de3e4a930994bb7d92cfe0cbae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_prtlen()&lt;/strong&gt; returns the actual printed length (number of characters) of a specific value in a PostgreSQL &lt;code&gt;result&lt;/code&gt;. Row numbering starts at 0. This function will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on an error.</source>
          <target state="translated">&lt;strong&gt;pg_field_prtlen ()&lt;/strong&gt; 은 PostgreSQL &lt;code&gt;result&lt;/code&gt; 에서 특정 값의 실제 인쇄 길이 (문자 수 &lt;strong&gt;)를&lt;/strong&gt; 반환합니다 . 행 번호 매기기는 0에서 시작합니다.이 함수는 오류에 대해 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9a08bcfdb4b791247fd8a989107ae9090fff8b9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_prtlen()&lt;/strong&gt; returns the actual printed length (number of characters) of a specific value in a PostgreSQL &lt;code&gt;result&lt;/code&gt;. Row numbering starts at 0. This function will return &lt;strong&gt;&lt;code&gt;false&lt;/code&gt;&lt;/strong&gt; on an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778c3fe30a5a1097c47670f10ec5c511007230c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_size()&lt;/strong&gt; returns the internal storage size (in bytes) of the field number in the given PostgreSQL &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_field_size ()&lt;/strong&gt; 는 주어진 PostgreSQL &lt;code&gt;result&lt;/code&gt; 에서 필드 번호의 내부 스토리지 크기 (바이트)를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b642bafd92437c91866e7fe36dd028f4f12d982f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_table()&lt;/strong&gt; returns the name of the table that field belongs to, or the table's oid if &lt;code&gt;oid_only&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_field_table ()&lt;/strong&gt; 은 필드가 속한 테이블의 이름 또는 &lt;code&gt;oid_only&lt;/code&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 인&lt;/strong&gt; 경우 테이블의 oid를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a5698ae3040d16c300be823eafc780c8cc466006" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_table()&lt;/strong&gt; returns the name of the table that field belongs to, or the table's oid if &lt;code&gt;oid_only&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddccc984dc245ade5436b04f70d775a246fc48a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_type()&lt;/strong&gt; returns a string containing the base type name of the given &lt;code&gt;field_number&lt;/code&gt; in the given PostgreSQL &lt;code&gt;result&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_field_type ()&lt;/strong&gt; 은 주어진 PostgreSQL &lt;code&gt;result&lt;/code&gt; 리소스 에서 주어진 &lt;code&gt;field_number&lt;/code&gt; 의 기본 유형 이름을 포함하는 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b8f7442b9f2c0cfcb292b12b0bf9f9c7c83b4aaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_field_type_oid()&lt;/strong&gt; returns an integer containing the OID of the base type of the given &lt;code&gt;field_number&lt;/code&gt; in the given PostgreSQL &lt;code&gt;result&lt;/code&gt; resource.</source>
          <target state="translated">&lt;strong&gt;pg_field_type_oid ()&lt;/strong&gt; 는 주어진 PostgreSQL &lt;code&gt;result&lt;/code&gt; 리소스 에서 주어진 &lt;code&gt;field_number&lt;/code&gt; 의 기본 유형의 OID를 포함하는 정수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="97ab748f47f2cf0a8ba43d496df56bbe1dd40e5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_flush()&lt;/strong&gt; flushes any outbound query data waiting to be sent on the connection.</source>
          <target state="translated">&lt;strong&gt;pg_flush ()&lt;/strong&gt; 는 연결에서 전송 대기중인 모든 아웃 바운드 쿼리 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="97d1501dd9a2a50cec3c68aa1dd51ae6aaca858e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_free_result()&lt;/strong&gt; frees the memory and data associated with the specified PostgreSQL query result &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_free_result ()&lt;/strong&gt; 는 지정된 PostgreSQL 질의 결과 &lt;a href=&quot;language.types.resource&quot;&gt;리소스&lt;/a&gt; 와 관련된 메모리와 데이터를 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="c26ed61015ecba3cd979a85de2caa3e6b27198bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_free_result()&lt;/strong&gt; frees the memory and data associated with the specified PostgreSQL query result resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0ebb7c286df5f47f4d9e2aa35acd3a939f4eac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_get_notify()&lt;/strong&gt; gets notifications generated by a &lt;code&gt;NOTIFY&lt;/code&gt; SQL command. To receive notifications, the &lt;code&gt;LISTEN&lt;/code&gt; SQL command must be issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43aee0d27ca4aadd34b428ab5193d5239588d2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_get_notify()&lt;/strong&gt; gets notifications generated by a &lt;em&gt;NOTIFY&lt;/em&gt; SQL command. To receive notifications, the &lt;em&gt;LISTEN&lt;/em&gt; SQL command must be issued.</source>
          <target state="translated">&lt;strong&gt;pg_get_notify ()&lt;/strong&gt; 는 &lt;em&gt;NOTIFY&lt;/em&gt; SQL 명령으로 생성 된 알림을받습니다 . 알림을 받으려면 &lt;em&gt;LISTEN&lt;/em&gt; SQL 명령을 발행해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f04f6d3deed52bccf452053baf10627cd77ba03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_get_pid()&lt;/strong&gt; gets the backend's (database server process) PID. The PID is useful to determine whether or not a &lt;code&gt;NOTIFY&lt;/code&gt; message received via &lt;a href=&quot;function.pg-get-notify&quot;&gt;pg_get_notify()&lt;/a&gt; is sent from another process or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12433dbeeb26d228f1eefb55f8b184c40984cbde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_get_pid()&lt;/strong&gt; gets the backend's (database server process) PID. The PID is useful to determine whether or not a &lt;em&gt;NOTIFY&lt;/em&gt; message received via &lt;a href=&quot;function.pg-get-notify&quot;&gt;pg_get_notify()&lt;/a&gt; is sent from another process or not.</source>
          <target state="translated">&lt;strong&gt;pg_get_pid ()&lt;/strong&gt; 는 백엔드 (데이터베이스 서버 프로세스) PID를 가져옵니다. PID는 &lt;a href=&quot;function.pg-get-notify&quot;&gt;pg_get_notify ()&lt;/a&gt; 를 통해 수신 된 &lt;em&gt;NOTIFY&lt;/em&gt; 메시지 가 다른 프로세스에서 전송 되는지 여부를 판별하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="6d536701a5be3d9cd786eb193010ff76a3362562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_get_result()&lt;/strong&gt; gets the result resource from an asynchronous query executed by &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt;, &lt;a href=&quot;function.pg-send-query-params&quot;&gt;pg_send_query_params()&lt;/a&gt; or &lt;a href=&quot;function.pg-send-execute&quot;&gt;pg_send_execute()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_get_result ()&lt;/strong&gt; 는 &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query ()&lt;/a&gt; , &lt;a href=&quot;function.pg-send-query-params&quot;&gt;pg_send_query_params ()&lt;/a&gt; 또는 &lt;a href=&quot;function.pg-send-execute&quot;&gt;pg_send_execute ()에&lt;/a&gt; 의해 실행 된 비동기 쿼리에서 결과 리소스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ced4ec48bb01d9165100325fc5f0b3c79de75b2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_host()&lt;/strong&gt; returns the host name of the given PostgreSQL &lt;code&gt;connection&lt;/code&gt; resource is connected to.</source>
          <target state="translated">&lt;strong&gt;pg_host ()&lt;/strong&gt; 는 지정된 PostgreSQL &lt;code&gt;connection&lt;/code&gt; 리소스 의 호스트 이름을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3649984e34eddd4ab89e9579f83bf6478879e080" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_insert()&lt;/strong&gt; inserts the values of &lt;code&gt;assoc_array&lt;/code&gt; into the table specified by &lt;code&gt;table_name&lt;/code&gt;. If &lt;code&gt;options&lt;/code&gt; is specified, &lt;a href=&quot;function.pg-convert&quot;&gt;pg_convert()&lt;/a&gt; is applied to &lt;code&gt;assoc_array&lt;/code&gt; with the specified options.</source>
          <target state="translated">&lt;strong&gt;pg_insert ()&lt;/strong&gt; 는 &lt;code&gt;assoc_array&lt;/code&gt; 값을 &lt;code&gt;table_name&lt;/code&gt; 에 지정된 테이블에 삽입합니다 . 경우 &lt;code&gt;options&lt;/code&gt; 지정, &lt;a href=&quot;function.pg-convert&quot;&gt;pg_convert은 ()&lt;/a&gt; 에 적용되는 &lt;code&gt;assoc_array&lt;/code&gt; 지정된 옵션.</target>
        </trans-unit>
        <trans-unit id="88acb1923dcc91a03accbbcc774d8e3432a3b255" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_last_error()&lt;/strong&gt; returns the last error message for a given &lt;code&gt;connection&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_last_error ()&lt;/strong&gt; 는 주어진 &lt;code&gt;connection&lt;/code&gt; 대한 마지막 오류 메시지를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cc50651abbca605a1cfa0814d8c5e659e1ea35b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_last_notice()&lt;/strong&gt; returns the last notice message from the PostgreSQL server on the specified &lt;code&gt;connection&lt;/code&gt;. The PostgreSQL server sends notice messages in several cases, for instance when creating a &lt;code&gt;SERIAL&lt;/code&gt; column in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc10dac57cbbf052b38060079a6bc66295b8e8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_last_notice()&lt;/strong&gt; returns the last notice message from the PostgreSQL server on the specified &lt;code&gt;connection&lt;/code&gt;. The PostgreSQL server sends notice messages in several cases, for instance when creating a &lt;em&gt;SERIAL&lt;/em&gt; column in a table.</source>
          <target state="translated">&lt;strong&gt;pg_last_notice ()&lt;/strong&gt; 는 지정된 &lt;code&gt;connection&lt;/code&gt; 의 PostgreSQL 서버에서 마지막 통지 메시지를 반환합니다 . PostgreSQL 서버는 예를 들어 테이블에 &lt;em&gt;SERIAL&lt;/em&gt; 열을 생성 할 때와 같은 몇 가지 경우에 알림 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="832c694c9e83c223ab277d9dd815dd795cb2a0fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_last_oid()&lt;/strong&gt; is used to retrieve the &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; assigned to an inserted row.</source>
          <target state="translated">&lt;strong&gt;pg_last_oid ()&lt;/strong&gt; 는 삽입 된 행에 할당 된 &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; 를 검색하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0e23b27a0dc6f64c6816b2dc9a36e3ffc358335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_last_oid()&lt;/strong&gt; is used to retrieve the &lt;var&gt;OID&lt;/var&gt; assigned to an inserted row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2768a05721a3257d2919d0e17baf0a0a74bae5d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_close()&lt;/strong&gt; closes a large object. &lt;code&gt;large_object&lt;/code&gt; is a resource for the large object from &lt;a href=&quot;function.pg-lo-open&quot;&gt;pg_lo_open()&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_lo_close ()&lt;/strong&gt; 는 큰 객체를 닫습니다. &lt;code&gt;large_object&lt;/code&gt; 는 &lt;a href=&quot;function.pg-lo-open&quot;&gt;pg_lo_open ()&lt;/a&gt; 의 큰 객체에 대한 리소스입니다 .</target>
        </trans-unit>
        <trans-unit id="74c6b3079ef986cb58e1fbd17c28906d89ce6e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_create()&lt;/strong&gt; creates a large object and returns the &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; of the large object. PostgreSQL access modes &lt;strong&gt;&lt;code&gt;INV_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;INV_WRITE&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;INV_ARCHIVE&lt;/code&gt;&lt;/strong&gt; are not supported, the object is created always with both read and write access. &lt;strong&gt;&lt;code&gt;INV_ARCHIVE&lt;/code&gt;&lt;/strong&gt; has been removed from PostgreSQL itself (version 6.3 and above).</source>
          <target state="translated">&lt;strong&gt;pg_lo_create ()&lt;/strong&gt; 는 큰 객체를 만들고 큰 객체의 &lt;var&gt;&lt;var&gt;OID&lt;/var&gt;&lt;/var&gt; 를 반환 합니다. PostgreSQL 액세스 모드 &lt;strong&gt; &lt;code&gt;INV_READ&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;INV_WRITE&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;INV_ARCHIVE&lt;/code&gt; &lt;/strong&gt; 는 지원되지 않으며, 객체는 항상 읽기 및 쓰기 액세스로 작성됩니다. &lt;strong&gt; &lt;code&gt;INV_ARCHIVE&lt;/code&gt; &lt;/strong&gt; 는 PostgreSQL 자체 (버전 6.3 이상)에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb85e82c594c9ada65374a6570bc01f9ac3f3fdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_create()&lt;/strong&gt; creates a large object and returns the &lt;var&gt;OID&lt;/var&gt; of the large object. PostgreSQL access modes &lt;strong&gt;&lt;code&gt;INV_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;INV_WRITE&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;INV_ARCHIVE&lt;/code&gt;&lt;/strong&gt; are not supported, the object is created always with both read and write access. &lt;strong&gt;&lt;code&gt;INV_ARCHIVE&lt;/code&gt;&lt;/strong&gt; has been removed from PostgreSQL itself (version 6.3 and above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4894ec3c00f92822136c4216bbff701497ce61c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_export()&lt;/strong&gt; takes a large object in a PostgreSQL database and saves its contents to a file on the local filesystem.</source>
          <target state="translated">&lt;strong&gt;pg_lo_export ()&lt;/strong&gt; 는 PostgreSQL 데이터베이스에서 큰 객체를 가져와 그 내용을 로컬 파일 시스템의 파일에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="88fb7d24f4f6acde0c128a2276b4d6d464eaef43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_import()&lt;/strong&gt; creates a new large object in the database using a file on the filesystem as its data source.</source>
          <target state="translated">&lt;strong&gt;pg_lo_import ()&lt;/strong&gt; 는 파일 시스템의 파일을 데이터 소스로 사용하여 데이터베이스에 새로운 대형 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e53b0ccb3b43a7d4dd8a6fcea2e5454ae507fa70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_open()&lt;/strong&gt; opens a large object in the database and returns large object resource so that it can be manipulated.</source>
          <target state="translated">&lt;strong&gt;pg_lo_open ()&lt;/strong&gt; 은 데이터베이스에서 큰 객체를 열고 조작 할 수 있도록 큰 객체 자원을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="79e5d945ac1c7b030e5d93750660460ebe417ccc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_read()&lt;/strong&gt; reads at most &lt;code&gt;len&lt;/code&gt; bytes from a large object and returns it as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;pg_lo_read ()&lt;/strong&gt; 는 큰 객체 에서 최대 &lt;code&gt;len&lt;/code&gt; 바이트를 읽고 이를 &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; 으로 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="38c9c7805be156d6dc506554c1dc1943bcfba9f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_read()&lt;/strong&gt; reads at most &lt;code&gt;len&lt;/code&gt; bytes from a large object and returns it as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39725d0c5a3db3f2a35b09aa5e15bdb98a849933" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_read_all()&lt;/strong&gt; reads a large object and passes it straight through to the browser after sending all pending headers. Mainly intended for sending binary data like images or sound.</source>
          <target state="translated">&lt;strong&gt;pg_lo_read_all ()&lt;/strong&gt; 은 큰 객체를 읽고 보류중인 모든 헤더를 보낸 후 브라우저로 바로 전달합니다. 주로 이미지 나 사운드와 같은 이진 데이터를 전송하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c1c40aa850f06c62a1a1fd23b3b5037ee3293cfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_seek()&lt;/strong&gt; seeks a position within a large object resource.</source>
          <target state="translated">&lt;strong&gt;pg_lo_seek ()&lt;/strong&gt; 는 큰 객체 리소스 내에서 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="98448ec7e3c601b0ee7446b458c443cd6d07cced" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_tell()&lt;/strong&gt; returns the current position (offset from the beginning) of a large object.</source>
          <target state="translated">&lt;strong&gt;pg_lo_tell ()&lt;/strong&gt; 은 큰 객체의 현재 위치 (처음부터 오프셋 &lt;strong&gt;)를&lt;/strong&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a9b04e1685ebc72a6348148140f0c0c6bc293544" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_truncate()&lt;/strong&gt; truncates a large object resource.</source>
          <target state="translated">&lt;strong&gt;pg_lo_truncate ()&lt;/strong&gt; 는 큰 객체 자원을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="a5131569d41a01b1aeb2f068cbfd08d462c6f877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pg_lo_unlink()&lt;/strong&gt; deletes a large object with the &lt;code&gt;oid&lt;/code&gt;. Returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="translated">&lt;strong&gt;pg_lo_unlink ()&lt;/strong&gt; 는 &lt;code&gt;oid&lt;/code&gt; 로 큰 객체를 삭제합니다 . 성공하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 , 실패하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 를 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
